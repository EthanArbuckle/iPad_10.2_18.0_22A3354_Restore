void sub_100171B20(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = v1;
  v4 = type metadata accessor for BlendMode(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1000BA294(&qword_100BC3AD8);
  __chkstk_darwin(v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000BA294(&qword_100BC3AC8);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v10 = static VerticalAlignment.center.getter(v12);
  *((_QWORD *)v10 + 1) = 0x4024000000000000;
  v10[16] = 0;
  v15 = sub_1000BA294(&qword_100BC3AF8);
  sub_10007D2EC(v2, (uint64_t *)&v10[*(int *)(v15 + 44)]);
  LODWORD(v2) = static HierarchicalShapeStyle.secondary.getter();
  sub_100037768((uint64_t)v10, (uint64_t)v14, &qword_100BC3AD8);
  *(_DWORD *)&v14[*(int *)(v11 + 36)] = v2;
  sub_100021A14((uint64_t)v10, &qword_100BC3AD8);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for BlendMode.plusLighter(_:), v4);
  v16 = sub_1000BA294(&qword_100BC3A58);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 16))(a1 + *(int *)(v16 + 36), v7, v4);
  sub_100037768((uint64_t)v14, a1, &qword_100BC3AC8);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_100021A14((uint64_t)v14, &qword_100BC3AC8);
}

uint64_t sub_100171CDC()
{
  char v0;
  int v1;

  v0 = sub_1001093D4();
  v1 = sub_1001155A4();
  if ((v0 & 1) != 0)
    return ~v1 & 1;
  if ((v1 & 1) != 0)
    return 0;
  return sub_100171E74();
}

uint64_t sub_100171D28()
{
  sub_100177AFC();
  return EnvironmentValues.subscript.getter(&_s44LocationHeaderViewMeasurementsEnvironmentKeyVN, &_s44LocationHeaderViewMeasurementsEnvironmentKeyVN);
}

void sub_100171D5C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;

  v2 = type metadata accessor for LocationHeaderViewMeasurements(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100080C0C(a1, (uint64_t)v4, v5);
  sub_100171DD8((uint64_t)v4);
}

void sub_100171DD8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v2 = type metadata accessor for LocationHeaderViewMeasurements(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100080C0C(a1, (uint64_t)v4, type metadata accessor for LocationHeaderViewMeasurements);
  sub_100177AFC();
  EnvironmentValues.subscript.setter(v4, &_s44LocationHeaderViewMeasurementsEnvironmentKeyVN, &_s44LocationHeaderViewMeasurementsEnvironmentKeyVN);
  sub_10006BCFC(a1, type metadata accessor for LocationHeaderViewMeasurements);
}

uint64_t sub_100171E74()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  id v4;
  id v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v0 = type metadata accessor for DisplayMetrics(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for LocationHeaderView(0);
  sub_100117228(v3);
  v4 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v5 = objc_msgSend(v4, "userInterfaceIdiom");

  v6 = *((_QWORD *)v2 + 1);
  if (v5)
  {
    if (v6 == 2)
      v7 = 0x4034000000000000;
    else
      v7 = 0x402C000000000000;
  }
  else if (v6 >= 3)
  {
    v7 = 0;
  }
  else
  {
    v7 = qword_10097EA70[v6];
  }
  sub_10006BCFC((uint64_t)v2, type metadata accessor for DisplayMetrics);
  return v7;
}

uint64_t sub_100171F6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v15;
  uint64_t v16;

  v0 = type metadata accessor for Font.Leading(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1000BA294(&qword_100BC3B98);
  __chkstk_darwin(v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for LocationHeaderView(0);
  v7 = sub_1000BA294(&qword_100BC37F8);
  v8 = ScaledMetric.wrappedValue.getter(&v16, v7);
  v9 = static Font.Weight.light.getter(v8);
  v10 = type metadata accessor for Font.Design(0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v6, 1, 1, v10);
  v11 = static Font.system(size:weight:design:)(*(_QWORD *)&v9, 0, v6);
  sub_100021A14((uint64_t)v6, &qword_100BC3B98);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for Font.Leading.tight(_:), v0);
  v12 = Font.leading(_:)(v3, v11);
  v13 = swift_release(v11);
  (*(void (**)(char *, uint64_t, __n128))(v1 + 8))(v3, v0, v13);
  return v12;
}

void sub_1001720D0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, unsigned __int8 a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  int *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  double v56;
  uint64_t v57;
  uint64_t v58;
  double v59;
  double v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  char *v64;
  char *v65;
  uint64_t v66;
  double v67;
  double v68;
  double v69;
  uint64_t v70;
  double v71;
  double v72;
  uint64_t v73;
  double v74;
  double v75;
  double v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  int *v82;
  _QWORD *v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  int *v105;
  _QWORD *v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  double v111;
  double v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  int v128;
  unsigned int v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unsigned int v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;

  v156 = a7;
  v157 = a8;
  v142 = a6;
  v132 = a5;
  v131 = a3;
  v130 = a2;
  v136 = a1;
  v154 = a9;
  v155 = a12;
  v137 = a11;
  v153 = sub_1000BA294(&qword_100BC3B10);
  __chkstk_darwin(v153);
  v127 = (uint64_t)&v126 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149 = sub_1000BA294(&qword_100BC3B18);
  __chkstk_darwin(v149);
  v152 = (uint64_t)&v126 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = sub_1000BA294(&qword_100BC3B20);
  __chkstk_darwin(v151);
  v126 = (uint64_t)&v126 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = type metadata accessor for ConditionModifier(0);
  __chkstk_darwin(v138);
  v141 = (uint64_t *)((char *)&v126 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v25 = sub_1000BA294(&qword_100BC3B28);
  __chkstk_darwin(v25);
  v140 = (uint64_t)&v126 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = sub_1000BA294(&qword_100BC3B30);
  v27 = __chkstk_darwin(v139);
  v144 = (uint64_t)&v126 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v148 = (uint64_t)&v126 - v29;
  v30 = sub_1000BA294(&qword_100BC3B38);
  v31 = __chkstk_darwin(v30);
  v143 = (uint64_t)&v126 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v158 = (uint64_t)&v126 - v33;
  v34 = sub_1000BA294(&qword_100BC3B40);
  v35 = __chkstk_darwin(v34);
  v150 = (uint64_t)&v126 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  v147 = (char *)&v126 - v37;
  v38 = sub_1000BA294(&qword_100BC39D0);
  __chkstk_darwin(v38);
  v40 = (char *)&v126 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = (int *)type metadata accessor for TemperatureModifier(0);
  __chkstk_darwin(v41);
  v43 = (char *)&v126 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_1000BA294(&qword_100BC3B48);
  __chkstk_darwin(v44);
  v46 = (char *)&v126 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = (char *)sub_1000BA294(&qword_100BC3B50);
  v47 = __chkstk_darwin(v145);
  v146 = (uint64_t)&v126 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __chkstk_darwin(v47);
  v51 = (char *)&v126 - v50;
  __chkstk_darwin(v49);
  v53 = (char *)&v126 - v52;
  v129 = a4 & 1;
  v54 = v136;
  sub_100115780(a2, a3, v129, a5, (uint64_t)v46);
  v128 = sub_10016FB08();
  v55 = v54;
  v56 = sub_10016F680();
  v57 = type metadata accessor for LocationHeaderView(0);
  v58 = v54 + *(int *)(v57 + 76);
  if (*(_QWORD *)(v58 + 24))
    v59 = -14.0;
  else
    v59 = -12.0;
  v60 = v56 + a10 + v59;
  v61 = type metadata accessor for LocationHeaderViewFrameCoordinator(0);
  sub_10007A100((uint64_t)&unk_100BC3988);
  v134 = v61;
  v133 = v62;
  *(_QWORD *)v43 = Environment.init<A>(_:)(v61, v61, v62);
  v43[8] = v63 & 1;
  v64 = &v43[v41[5]];
  *(_QWORD *)v64 = swift_getKeyPath(&unk_10097E238);
  v135 = sub_1000BA294(&qword_100BC39B0);
  swift_storeEnumTagMultiPayload(v64, v135, 0);
  v43[v41[6]] = v128 & 1;
  *(double *)&v43[v41[7]] = v60;
  *(_QWORD *)&v43[v41[8]] = 0x3FE3333333333333;
  *(_QWORD *)&v43[v41[9]] = 0x3FE999999999999ALL;
  v65 = &v43[v41[10]];
  v159 = 0;
  State.init(wrappedValue:)(&v159, &type metadata for CGFloat);
  v66 = v161;
  *(_QWORD *)v65 = v160;
  *((_QWORD *)v65 + 1) = v66;
  sub_100037768((uint64_t)v46, (uint64_t)v51, &qword_100BC3B48);
  sub_10007802C((uint64_t)v43, (uint64_t)&v51[*((int *)v145 + 9)], type metadata accessor for TemperatureModifier);
  sub_100021A14((uint64_t)v46, &qword_100BC3B48);
  v145 = v53;
  sub_1000787D4((uint64_t)v51, (uint64_t)v53, &qword_100BC3B50);
  v67 = sub_10016F680() + a10;
  if (*(_QWORD *)(v58 + 24))
    v68 = -14.0;
  else
    v68 = -12.0;
  v69 = v67 + v68;
  v70 = type metadata accessor for Text.WritingMode(0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v40, 1, 1, v70);
  Text.Measurements.size(of:in:writingMode:)(v130, v131, v129, v132, v40, INFINITY, INFINITY);
  v72 = v71;
  v73 = (uint64_t)v40;
  sub_100021A14((uint64_t)v40, &qword_100BC39D0);
  v74 = v69 + v72;
  if (*(_BYTE *)(v55 + *(int *)(v57 + 64) + 136) == 1)
  {
    sub_100172E84(v142, 1, v158, v74);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v40, 1, 1, v70);
    Text.Measurements.size(of:in:writingMode:)(a13, a14, a15 & 1, a16, v40, INFINITY, INFINITY);
    v76 = v75;
    sub_100021A14((uint64_t)v40, &qword_100BC39D0);
    v77 = v140;
    sub_10017320C(v156, v157, v137 & 1, v155, v140);
    v78 = sub_10016FB08();
    v79 = Environment.init<A>(_:)(v134, v134, v133);
    v80 = (uint64_t)v141;
    *v141 = v79;
    *(_BYTE *)(v80 + 8) = v81 & 1;
    v82 = (int *)v138;
    v83 = (_QWORD *)(v80 + *(int *)(v138 + 20));
    *v83 = swift_getKeyPath(&unk_10097E238);
    swift_storeEnumTagMultiPayload(v83, v135, 0);
    *(_BYTE *)(v80 + v82[6]) = v78 & 1;
    *(double *)(v80 + v82[7]) = v74 + v76;
    *(_QWORD *)(v80 + v82[8]) = 0x3FC999999999999ALL;
    *(_QWORD *)(v80 + v82[9]) = 0x3FD999999999999ALL;
    v84 = (_QWORD *)(v80 + v82[10]);
    v159 = 0;
    State.init(wrappedValue:)(&v159, &type metadata for CGFloat);
    v85 = v161;
    *v84 = v160;
    v84[1] = v85;
    v86 = v144;
    sub_100037768(v77, v144, &qword_100BC3B28);
    sub_10007802C(v80, v86 + *(int *)(v139 + 36), type metadata accessor for ConditionModifier);
    sub_100021A14(v77, &qword_100BC3B28);
    v87 = v148;
    sub_1000787D4(v86, v148, &qword_100BC3B30);
    v88 = v158;
    v89 = v143;
    sub_100037768(v158, v143, &qword_100BC3B38);
    sub_100037768(v87, v86, &qword_100BC3B30);
    v90 = v126;
    sub_100037768(v89, v126, &qword_100BC3B38);
    v91 = sub_1000BA294(&qword_100BC3B78);
    v92 = v90 + *(int *)(v91 + 48);
    *(_QWORD *)v92 = 0x4024000000000000;
    *(_BYTE *)(v92 + 8) = 0;
    sub_100037768(v86, v90 + *(int *)(v91 + 64), &qword_100BC3B30);
    sub_100021A14(v86, &qword_100BC3B30);
    sub_100021A14(v89, &qword_100BC3B38);
    v93 = v152;
    sub_100037768(v90, v152, &qword_100BC3B20);
    swift_storeEnumTagMultiPayload(v93, v149, 0);
    sub_10007AB60((uint64_t)&unk_100BC3B60);
    v95 = v94;
    sub_10007AB60((uint64_t)&unk_100BC3B68);
    v96 = (uint64_t)v147;
    _ConditionalContent<>.init(storage:)(v93, v151, v153, v95, v97);
    sub_100021A14(v90, &qword_100BC3B20);
    sub_100021A14(v87, &qword_100BC3B30);
    v98 = v88;
    v99 = &qword_100BC3B38;
  }
  else
  {
    v137 &= 1u;
    v100 = v140;
    sub_10017320C(v156, v157, v137, v155, v140);
    v101 = sub_10016FB08();
    v102 = Environment.init<A>(_:)(v134, v134, v133);
    v103 = (uint64_t)v141;
    *v141 = v102;
    *(_BYTE *)(v103 + 8) = v104 & 1;
    v105 = (int *)v138;
    v106 = (_QWORD *)(v103 + *(int *)(v138 + 20));
    *v106 = swift_getKeyPath(&unk_10097E238);
    swift_storeEnumTagMultiPayload(v106, v135, 0);
    *(_BYTE *)(v103 + v105[6]) = v101 & 1;
    *(double *)(v103 + v105[7]) = v74;
    *(_QWORD *)(v103 + v105[8]) = 0x3FD999999999999ALL;
    *(_QWORD *)(v103 + v105[9]) = 0x3FE3333333333333;
    v107 = (_QWORD *)(v103 + v105[10]);
    v159 = 0;
    State.init(wrappedValue:)(&v159, &type metadata for CGFloat);
    v108 = v161;
    *v107 = v160;
    v107[1] = v108;
    v109 = v144;
    sub_100037768(v100, v144, &qword_100BC3B28);
    sub_10007802C(v103, v109 + *(int *)(v139 + 36), type metadata accessor for ConditionModifier);
    sub_100021A14(v100, &qword_100BC3B28);
    v110 = v148;
    sub_1000787D4(v109, v148, &qword_100BC3B30);
    _s7Weather24LocationCompositionStateOwst_0(v73, 1, 1, v70);
    Text.Measurements.size(of:in:writingMode:)(v156, v157, v137, v155, v73, INFINITY, INFINITY);
    v112 = v111;
    sub_100021A14(v73, &qword_100BC39D0);
    v113 = v158;
    sub_100172E84(v142, 0, v158, v74 + v112);
    sub_100037768(v110, v109, &qword_100BC3B30);
    v114 = v143;
    sub_100037768(v113, v143, &qword_100BC3B38);
    v115 = v127;
    sub_100037768(v109, v127, &qword_100BC3B30);
    v116 = sub_1000BA294(&qword_100BC3B58);
    sub_100037768(v114, v115 + *(int *)(v116 + 48), &qword_100BC3B38);
    sub_100021A14(v114, &qword_100BC3B38);
    sub_100021A14(v109, &qword_100BC3B30);
    v117 = v152;
    sub_100037768(v115, v152, &qword_100BC3B10);
    swift_storeEnumTagMultiPayload(v117, v149, 1);
    sub_10007AB60((uint64_t)&unk_100BC3B60);
    v119 = v118;
    sub_10007AB60((uint64_t)&unk_100BC3B68);
    v96 = (uint64_t)v147;
    _ConditionalContent<>.init(storage:)(v117, v151, v153, v119, v120);
    sub_100021A14(v115, &qword_100BC3B10);
    sub_100021A14(v113, &qword_100BC3B38);
    v98 = v110;
    v99 = &qword_100BC3B30;
  }
  sub_100021A14(v98, v99);
  v121 = (uint64_t)v145;
  v122 = v146;
  sub_100037768((uint64_t)v145, v146, &qword_100BC3B50);
  v123 = v150;
  sub_100037768(v96, v150, &qword_100BC3B40);
  v124 = v154;
  sub_100037768(v122, v154, &qword_100BC3B50);
  v125 = sub_1000BA294(&qword_100BC3B70);
  sub_100037768(v123, v124 + *(int *)(v125 + 48), &qword_100BC3B40);
  sub_100021A14(v96, &qword_100BC3B40);
  sub_100021A14(v121, &qword_100BC3B50);
  sub_100021A14(v123, &qword_100BC3B40);
  sub_100021A14(v122, &qword_100BC3B50);
}

uint64_t sub_100172E84@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v4;
  int *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(_QWORD);
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  double v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v52[3];

  v49 = a2;
  v48 = a1;
  v51 = a3;
  v6 = (int *)type metadata accessor for HighLowModifier(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000BA294(&qword_100BC3B80);
  __chkstk_darwin(v9);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1000BA294(&qword_100BC3B88);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v50 = (uint64_t)&v47 - v16;
  v17 = type metadata accessor for LocationHeaderView(0);
  v18 = __chkstk_darwin(v17);
  v21 = (char *)&v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = v4 + *(int *)(v18 + 64);
  v24 = *(_QWORD *)(v22 + 104);
  v23 = *(_QWORD *)(v22 + 112);
  v25 = v24 & 0xFFFFFFFFFFFFLL;
  if ((v23 & 0x2000000000000000) != 0)
    v26 = HIBYTE(v23) & 0xF;
  else
    v26 = v25;
  sub_100080C0C(v4, (uint64_t)v21, v19);
  if (!v26)
  {
    sub_10006BCFC((uint64_t)v21, type metadata accessor for LocationHeaderView);
LABEL_17:
    v45 = 1;
    v44 = v51;
    return _s7Weather24LocationCompositionStateOwst_0(v44, v45, 1, v12);
  }
  v27 = &v21[*(int *)(v17 + 64)];
  v29 = *((_QWORD *)v27 + 15);
  v28 = *((_QWORD *)v27 + 16);
  v30 = v29 & 0xFFFFFFFFFFFFLL;
  if ((v28 & 0x2000000000000000) != 0)
    v31 = HIBYTE(v28) & 0xF;
  else
    v31 = v30;
  sub_10006BCFC((uint64_t)v21, type metadata accessor for LocationHeaderView);
  if (!v31)
    goto LABEL_17;
  sub_100037768(v48, (uint64_t)v11, &qword_100BC3A80);
  *(_OWORD *)&v11[*(int *)(v9 + 36)] = xmmword_10097DED0;
  v32 = sub_10016FB08();
  if ((v49 & 1) != 0)
    v33 = 0.6;
  else
    v33 = 0.4;
  if ((v49 & 1) != 0)
    v34 = 0.4;
  else
    v34 = 0.2;
  v35 = type metadata accessor for LocationHeaderViewFrameCoordinator(0);
  sub_10007A100((uint64_t)&unk_100BC3988);
  *(_QWORD *)v8 = Environment.init<A>(_:)(v35, v35, v36);
  v8[8] = v37 & 1;
  v38 = &v8[v6[5]];
  *(_QWORD *)v38 = swift_getKeyPath(&unk_10097E238);
  v39 = sub_1000BA294(&qword_100BC39B0);
  swift_storeEnumTagMultiPayload(v38, v39, 0);
  v8[v6[6]] = v32 & 1;
  *(double *)&v8[v6[7]] = a4;
  *(double *)&v8[v6[8]] = v34;
  *(double *)&v8[v6[9]] = v33;
  v40 = &v8[v6[10]];
  v52[0] = 0;
  State.init(wrappedValue:)(v52, &type metadata for CGFloat);
  v41 = v52[2];
  *(_QWORD *)v40 = v52[1];
  *((_QWORD *)v40 + 1) = v41;
  sub_100037768((uint64_t)v11, (uint64_t)v15, &qword_100BC3B80);
  sub_10007802C((uint64_t)v8, (uint64_t)&v15[*(int *)(v12 + 36)], type metadata accessor for HighLowModifier);
  sub_100021A14((uint64_t)v11, &qword_100BC3B80);
  v42 = v50;
  sub_1000787D4((uint64_t)v15, v50, &qword_100BC3B88);
  v43 = v42;
  v44 = v51;
  sub_1000787D4(v43, v51, &qword_100BC3B88);
  v45 = 0;
  return _s7Weather24LocationCompositionStateOwst_0(v44, v45, 1, v12);
}

void sub_10017320C(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  double v39;
  uint64_t v40;
  double *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  int v47[3];

  v46 = a5;
  v9 = type metadata accessor for _BlendModeEffect(0);
  __chkstk_darwin(v9);
  v45 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for BlendMode(0);
  v43 = *(_QWORD *)(v11 - 8);
  v44 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_1000BA294(&qword_100BC3B90);
  v14 = __chkstk_darwin(v42);
  v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = static Color.black.getter(v14);
  v18 = Color.opacity(_:)(0.3);
  swift_release(v17);
  v19 = Text.shadow(color:radius:x:y:)(v18, a1, a2, a3 & 1, a4, 5.0, 0.0, 2.0);
  v21 = v20;
  v23 = v22;
  v25 = v24;
  v26 = swift_release(v18);
  LOBYTE(v18) = v23 & 1;
  v47[0] = static HierarchicalShapeStyle.secondary.getter(v26);
  v27 = Text.foregroundStyle<A>(_:)(v47, v19, v21, v23 & 1, v25, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v29 = v28;
  v31 = v30;
  LOBYTE(v17) = v32 & 1;
  sub_1000D31B4(v19, v21, v18);
  v33 = swift_bridgeObjectRelease(v25);
  v34 = v43;
  v35 = v44;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v43 + 104))(v13, enum case for BlendMode.plusLighter(_:), v44, v33);
  v36 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
  v37 = v34;
  v38 = (uint64_t)v45;
  v36(v45, v13, v35);
  sub_100080C0C(v38, (uint64_t)&v16[*(int *)(v42 + 36)], (uint64_t (*)(_QWORD))&type metadata accessor for _BlendModeEffect);
  *(_QWORD *)v16 = v27;
  *((_QWORD *)v16 + 1) = v29;
  v16[16] = v17;
  *((_QWORD *)v16 + 3) = v31;
  sub_1000D55D4(v27, v29, v17);
  swift_bridgeObjectRetain(v31);
  sub_10006BCFC(v38, (uint64_t (*)(_QWORD))&type metadata accessor for _BlendModeEffect);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v13, v35);
  sub_1000D31B4(v27, v29, v17);
  swift_bridgeObjectRelease(v31);
  v39 = sub_10013E8DC();
  v40 = v46;
  sub_100037768((uint64_t)v16, v46, &qword_100BC3B90);
  v41 = (double *)(v40 + *(int *)(sub_1000BA294(&qword_100BC3B28) + 36));
  *v41 = 0.0;
  v41[1] = v39;
  sub_100021A14((uint64_t)v16, &qword_100BC3B90);
}

void sub_1001734D4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = sub_1000BA294(&qword_100BC3BE8);
  __chkstk_darwin(v2);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1000BA294(&qword_100BC3BF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1000BA294(&qword_100BC3BF8);
  __chkstk_darwin(v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(a1 + *(int *)(type metadata accessor for LocationHeaderView(0) + 64) + 161) & 1) != 0)
  {
    sub_100173954((uint64_t)v4);
    v11 = &qword_100BC3BE8;
    sub_100037768((uint64_t)v4, (uint64_t)v7, &qword_100BC3BE8);
    swift_storeEnumTagMultiPayload(v7, v5, 1);
    sub_10007AB60((uint64_t)&unk_100BC3C00);
    v13 = v12;
    sub_10007AB60((uint64_t)&unk_100BC3C08);
    _ConditionalContent<>.init(storage:)(v7, v8, v2, v13, v14);
    v15 = (uint64_t)v4;
  }
  else
  {
    sub_1001736F8((uint64_t)v10);
    v11 = &qword_100BC3BF8;
    sub_100037768((uint64_t)v10, (uint64_t)v7, &qword_100BC3BF8);
    swift_storeEnumTagMultiPayload(v7, v5, 0);
    sub_10007AB60((uint64_t)&unk_100BC3C00);
    v17 = v16;
    sub_10007AB60((uint64_t)&unk_100BC3C08);
    _ConditionalContent<>.init(storage:)(v7, v8, v2, v17, v18);
    v15 = (uint64_t)v10;
  }
  sub_100021A14(v15, v11);
}

void sub_1001736F8(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  double v24;
  double v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v3 = sub_1000BA294(&qword_100BC3C10);
  v4 = __chkstk_darwin(v3);
  v42 = (uint64_t)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v41 = (uint64_t)&v39 - v6;
  v40 = type metadata accessor for LocationHeaderView(0);
  v7 = (uint64_t *)(v1 + *(int *)(v40 + 72));
  v8 = *v7;
  v9 = v7[1];
  v10 = *((unsigned __int8 *)v7 + 16);
  v11 = v7[3];
  v12 = static Font.largeTitle.getter();
  v13 = Text.font(_:)(v12, v8, v9, v10, v11);
  v15 = v14;
  LOBYTE(v8) = v16;
  v18 = v17;
  swift_release(v12);
  v19 = v8 & 1;
  v21 = static Color.black.getter(v20);
  v22 = sub_1004EB1C0();
  v23 = Color.opacity(_:)(v22);
  swift_release(v21);
  v24 = sub_1004EB1EC();
  v25 = sub_1004EB210();
  v26 = sub_1004EB230();
  v27 = v18;
  v28 = Text.shadow(color:radius:x:y:)(v23, v13, v15, v19, v18, v24, v25, v26);
  v30 = v29;
  LOBYTE(v21) = v31;
  v33 = v32;
  swift_release(v23);
  v34 = v21 & 1;
  sub_1000D31B4(v13, v15, v19);
  swift_bridgeObjectRelease(v27);
  if (*(_QWORD *)(v39 + *(int *)(v40 + 76) + 24))
    v35 = -2.0;
  else
    v35 = 4.0;
  v36 = v41;
  sub_100173BAC(v41);
  v37 = v42;
  sub_100037768(v36, v42, &qword_100BC3C10);
  *(_QWORD *)a1 = v28;
  *(_QWORD *)(a1 + 8) = v30;
  *(_BYTE *)(a1 + 16) = v34;
  *(_QWORD *)(a1 + 24) = v33;
  *(_QWORD *)(a1 + 32) = 0;
  *(double *)(a1 + 40) = v35;
  v38 = sub_1000BA294(&qword_100BC3C18);
  sub_100037768(v37, a1 + *(int *)(v38 + 48), &qword_100BC3C10);
  sub_1000D55D4(v28, v30, v34);
  swift_bridgeObjectRetain(v33);
  sub_100021A14(v36, &qword_100BC3C10);
  sub_100021A14(v37, &qword_100BC3C10);
  sub_1000D31B4(v28, v30, v34);
  swift_bridgeObjectRelease(v33);
}

void sub_100173954(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  double v24;
  double v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[2];
  uint64_t v39;
  uint64_t v40;

  v40 = a1;
  v2 = sub_1000BA294(&qword_100BC3C10);
  v3 = __chkstk_darwin(v2);
  v39 = (uint64_t)v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v6 = (char *)v38 - v5;
  sub_100173BAC((uint64_t)v38 - v5);
  v38[0] = type metadata accessor for LocationHeaderView(0);
  v7 = (uint64_t *)(v1 + *(int *)(v38[0] + 72));
  v8 = *v7;
  v9 = v7[1];
  v10 = *((unsigned __int8 *)v7 + 16);
  v11 = v7[3];
  v12 = static Font.largeTitle.getter();
  v13 = Text.font(_:)(v12, v8, v9, v10, v11);
  v15 = v14;
  LOBYTE(v9) = v16;
  v18 = v17;
  swift_release(v12);
  v19 = v9 & 1;
  v21 = static Color.black.getter(v20);
  v22 = sub_1004EB1C0();
  v23 = Color.opacity(_:)(v22);
  swift_release(v21);
  v24 = sub_1004EB1EC();
  v25 = sub_1004EB210();
  v26 = sub_1004EB230();
  v27 = Text.shadow(color:radius:x:y:)(v23, v13, v15, v19, v18, v24, v25, v26);
  v29 = v28;
  LOBYTE(v21) = v30;
  v32 = v31;
  swift_release(v23);
  v33 = v21 & 1;
  sub_1000D31B4(v13, v15, v19);
  swift_bridgeObjectRelease(v18);
  if (*(_QWORD *)(v38[1] + *(int *)(v38[0] + 76) + 24))
    v34 = -2.0;
  else
    v34 = 4.0;
  v35 = v39;
  sub_100037768((uint64_t)v6, v39, &qword_100BC3C10);
  v36 = v40;
  sub_100037768(v35, v40, &qword_100BC3C10);
  v37 = v36 + *(int *)(sub_1000BA294(&qword_100BC3C30) + 48);
  *(_QWORD *)v37 = v27;
  *(_QWORD *)(v37 + 8) = v29;
  *(_BYTE *)(v37 + 16) = v33;
  *(_QWORD *)(v37 + 24) = v32;
  *(_QWORD *)(v37 + 32) = 0;
  *(double *)(v37 + 40) = v34;
  sub_1000D55D4(v27, v29, v33);
  swift_bridgeObjectRetain(v32);
  sub_100021A14((uint64_t)v6, &qword_100BC3C10);
  sub_1000D31B4(v27, v29, v33);
  swift_bridgeObjectRelease(v32);
  sub_100021A14(v35, &qword_100BC3C10);
}

uint64_t sub_100173BAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  double v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t *v49;
  uint64_t *v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t OpaqueTypeConformance2;
  unint64_t v59;
  uint64_t v60;
  __n128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD v79[2];
  uint64_t v80;
  uint64_t v81;
  char v82;
  uint64_t v83;

  v2 = v1;
  v4 = type metadata accessor for AccessibilityChildBehavior(0);
  v77 = *(_QWORD *)(v4 - 8);
  v78 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000BA294(&qword_100BC3C20);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000BA294(&qword_100BC3C28);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v63 - v15;
  v17 = type metadata accessor for LocationHeaderView(0);
  v18 = (uint64_t *)(v2 + *(int *)(v17 + 76));
  v19 = v18[3];
  if (!v19)
    return _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, v11);
  v75 = v16;
  v76 = v14;
  v70 = v8;
  v71 = v7;
  v72 = v11;
  v73 = a1;
  v20 = *v18;
  v21 = v18[1];
  v66 = v18[2];
  v22 = v66 & 1;
  v65 = v17;
  swift_bridgeObjectRetain(v19);
  sub_1000D55D4(v20, v21, v22);
  v23 = sub_10016F8E0();
  LOBYTE(v80) = v22;
  v67 = v21;
  v68 = v20;
  v74 = v19;
  v24 = Text.font(_:)(v23, v20, v21, v22, v19);
  v26 = v25;
  LOBYTE(v20) = v27;
  v29 = v28;
  swift_release(v23);
  v30 = v20 & 1;
  v32 = static Color.black.getter(v31);
  v69 = v10;
  v33 = v32;
  v34 = sub_1004EB1C0();
  v35 = Color.opacity(_:)(v34);
  v64 = v2;
  v36 = v35;
  swift_release(v33);
  v37 = sub_1004EB1EC();
  v38 = sub_1004EB210();
  v39 = sub_1004EB230();
  v40 = Text.shadow(color:radius:x:y:)(v36, v24, v26, v30, v29, v37, v38, v39);
  v42 = v41;
  LOBYTE(v21) = v43;
  v45 = v44;
  swift_release(v36);
  sub_1000D31B4(v24, v26, v30);
  swift_bridgeObjectRelease(v29);
  v80 = v40;
  v81 = v42;
  v46 = v69;
  v82 = v21 & 1;
  v83 = v45;
  static AccessibilityChildBehavior.ignore.getter(v47);
  View.accessibilityElement(children:)(v6, &type metadata for Text, &protocol witness table for Text);
  (*(void (**)(char *, uint64_t))(v77 + 8))(v6, v78);
  sub_1000D31B4(v80, v81, v82);
  swift_bridgeObjectRelease(v83);
  v48 = v64 + *(int *)(v65 + 64);
  if (*(_BYTE *)(v48 + 48))
  {
    if (*(_BYTE *)(v48 + 48) != 1)
    {
      v56 = 0;
      v55 = 0xE000000000000000;
      v53 = (uint64_t)v75;
      v52 = (uint64_t)v76;
      v54 = v74;
      goto LABEL_9;
    }
    v49 = (unint64_t *)(v48 + 40);
    v50 = (uint64_t *)(v48 + 32);
  }
  else
  {
    v50 = (uint64_t *)(v48 + 16);
    v49 = (unint64_t *)(v48 + 24);
  }
  v53 = (uint64_t)v75;
  v52 = (uint64_t)v76;
  v54 = v74;
  v55 = *v49;
  v56 = *v50;
  swift_bridgeObjectRetain(*v49);
LABEL_9:
  v57 = v66 & 1;
  v80 = v56;
  v81 = v55;
  v79[0] = &type metadata for Text;
  v79[1] = &protocol witness table for Text;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v79, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v59 = sub_100114EF8();
  v60 = v71;
  View.accessibilityLabel<A>(_:)(&v80, v71, &type metadata for String, OpaqueTypeConformance2, v59);
  sub_1000D31B4(v68, v67, v57);
  swift_bridgeObjectRelease(v55);
  v61 = swift_bridgeObjectRelease(v54);
  (*(void (**)(char *, uint64_t, __n128))(v70 + 8))(v46, v60, v61);
  sub_1000787D4(v52, v53, &qword_100BC3C28);
  v62 = v73;
  sub_1000787D4(v53, v73, &qword_100BC3C28);
  return _s7Weather24LocationCompositionStateOwst_0(v62, 0, 1, v72);
}

uint64_t sub_100173FD0(double (*a1)(void))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  type metadata accessor for Font.Leading(0);
  sub_1000AE848();
  __chkstk_darwin(v6);
  sub_100098694();
  sub_1000BA294(&qword_100BC3B98);
  sub_1000B42B0();
  __chkstk_darwin(v7);
  sub_100099864();
  v8 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v9 = objc_msgSend(v8, "userInterfaceIdiom");

  if (v9 == (id)5)
  {
    v10 = a1();
    v11 = type metadata accessor for Font.Design(0);
    sub_100099284(v11);
    v12 = sub_1000BED98(v10);
    sub_100021A14(v2, &qword_100BC3B98);
  }
  else
  {
    sub_1000DA428();
    v13 = sub_1000C089C();
    v14 = ((double (*)(uint64_t))a1)(v13);
    v15 = type metadata accessor for Font.Design(0);
    sub_100099284(v15);
    v16 = sub_1000BED98(v14);
    sub_100021A14(v2, &qword_100BC3B98);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v3, enum case for Font.Leading.tight(_:), v1);
    v12 = Font.leading(_:)(v3, v16);
    sub_1000B439C();
    sub_100098820(v3, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  }
  return v12;
}

double sub_100174158@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  __n128 v38;
  void (*v39)(char *, uint64_t, __n128);
  uint64_t v40;
  uint64_t v41;
  double v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  double result;
  __int128 v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  _OWORD v97[2];
  char v98;

  v12 = type metadata accessor for Font.Context(0);
  v91 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for LocationHeaderView(0);
  v16 = a1 + *(int *)(v15 + 64);
  v17 = *(_QWORD *)(v16 + 96);
  if (v17)
  {
    *(_QWORD *)&v97[0] = *(_QWORD *)(v16 + 88);
    *((_QWORD *)&v97[0] + 1) = v17;
    v18 = sub_100114EF8();
    v90 = a5;
    v19 = v18;
    swift_bridgeObjectRetain(v17);
    v20 = Text.init<A>(_:)(v97, &type metadata for String, v19);
    v83 = v12;
    v21 = v20;
    v89 = a4;
    v22 = a6;
    v24 = v23;
    v26 = v25;
    v88 = a3;
    v28 = v27 & 1;
    v29 = sub_100173FD0((double (*)(void))&static Font.Weight.light.getter);
    v85 = Text.font(_:)(v29, v21, v24, v28, v26);
    v84 = v30;
    v87 = a2;
    v32 = v31;
    v86 = v33;
    swift_release(v29);
    v34 = v32 & 1;
    v35 = v24;
    a6 = v22;
    sub_1000D31B4(v21, v35, v28);
    swift_bridgeObjectRelease(v26);
    v36 = sub_100173FD0((double (*)(void))&static Font.Weight.thin.getter);
    sub_10015905C();
    v37 = Font.capHeight(in:)(v14, v36);
    v38 = swift_release(v36);
    v39 = *(void (**)(char *, uint64_t, __n128))(v91 + 8);
    v40 = v83;
    v39(v14, v83, v38);
    v41 = sub_100173FD0((double (*)(void))&static Font.Weight.light.getter);
    sub_10015905C();
    v42 = Font.capHeight(in:)(v14, v41);
    v43 = swift_release(v41);
    v39(v14, v40, v43);
    v44 = v85;
    v45 = v84;
    v46 = v86;
    v47 = Text.baselineOffset(_:)(v85, v84, v34, v86, v37 - v42 + -1.0);
    v49 = v48;
    v51 = v50;
    v53 = v52 & 1;
    sub_1000D31B4(v44, v45, v34);
    swift_bridgeObjectRelease(v46);
    v55 = static Color.black.getter(v54);
    v56 = Color.opacity(_:)(0.3);
    swift_release(v55);
    v57 = Text.shadow(color:radius:x:y:)(v56, v47, v49, v53, v51, 5.0, 0.0, 2.0);
    v59 = v58;
    LOBYTE(v45) = v60;
    v62 = v61;
    swift_release(v56);
    sub_1000D31B4(v47, v49, v53);
    swift_bridgeObjectRelease(v51);
    v63 = static Text.+ infix(_:_:)(v87, v88, v89 & 1, v90, v57, v59, v45 & 1, v62);
    v65 = v64;
    v67 = v66;
    v69 = v68 & 1;
    sub_1000D31B4(v57, v59, v45 & 1);
    swift_bridgeObjectRelease(v62);
    v92 = v63;
    v93 = v65;
    v94 = v69;
    v95 = v67;
    v96 = 0;
  }
  else
  {
    v70 = static Color.black.getter(v15);
    v71 = Color.opacity(_:)(0.3);
    swift_release(v70);
    v72 = Text.shadow(color:radius:x:y:)(v71, a2, a3, a4 & 1, a5, 5.0, 0.0, 2.0);
    v74 = v73;
    v76 = v75;
    v78 = v77;
    swift_release(v71);
    v92 = v72;
    v93 = v74;
    v94 = v76 & 1;
    v95 = v78;
    v96 = 1;
  }
  _ConditionalContent<>.init(storage:)(&v92, &type metadata for Text, &type metadata for Text, &protocol witness table for Text, &protocol witness table for Text);
  result = *(double *)v97;
  v80 = v97[1];
  v81 = v98;
  *(_OWORD *)a6 = v97[0];
  *(_OWORD *)(a6 + 16) = v80;
  *(_BYTE *)(a6 + 32) = v81;
  return result;
}

void sub_100174590(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double MinY;
  _QWORD v13[5];
  CGRect v14;
  char v15;

  v6 = type metadata accessor for NamedCoordinateSpace(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a4 & 1) != 0)
  {
    if (*(double *)&a3 != 0.0)
    {
      static CoordinateSpaceProtocol<>.scrollView.getter(v8);
      GeometryProxy.bounds(of:)(v13, v10);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      sub_1000787D4((uint64_t)v13, (uint64_t)&v14, &qword_100BC40B0);
      if ((v15 & 1) == 0)
        CGRectGetMinY(v14);
    }
  }
  else
  {
    static CoordinateSpaceProtocol<>.scrollView.getter(v8);
    GeometryProxy.bounds(of:)(v13, v10);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    sub_1000787D4((uint64_t)v13, (uint64_t)&v14, &qword_100BC40B0);
    MinY = 0.0;
    if ((v15 & 1) == 0)
      MinY = CGRectGetMinY(v14);
    CGFloat.clamp(min:max:)(v11, 0.0, 1.0, MinY / *(double *)&a3);
  }
}

BOOL sub_100174714(double a1, double a2, double a3, double a4, double a5, double a6)
{
  _BOOL4 v6;

  v6 = a1 == a4;
  if (a2 != a5)
    v6 = 0;
  return a3 == a6 && v6;
}

BOOL sub_100174730(double *a1, double *a2)
{
  return sub_100174714(*a1, a1[1], a1[2], *a2, a2[1], a2[2]);
}

void sub_100174744(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_100174590(a1, a2, *(_QWORD *)a2, *(_BYTE *)(a2 + 8));
  *a3 = v4;
  a3[1] = v5;
  a3[2] = v6;
}

uint64_t sub_100174774(__int128 *a1, uint64_t a2)
{
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;

  v2 = *((_QWORD *)a1 + 2);
  v3 = *(_OWORD *)(a2 + 48);
  v8 = *(_OWORD *)(a2 + 32);
  v9 = v3;
  v6 = *a1;
  v7 = v2;
  v4 = sub_1000BA294(&qword_100BC40D8);
  return State.wrappedValue.setter(&v6, v4);
}

void (*sub_1001747D4(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = Animatable<>.animatableData.modify();
  return sub_100174830;
}

void sub_100174830(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

void sub_10017485C(char a1@<W1>, double *a2@<X8>, double a3@<D0>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  double v11;
  double MinY;
  _QWORD v13[5];
  CGRect v14;
  char v15;

  v6 = type metadata accessor for NamedCoordinateSpace(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = 0.0;
  if ((a1 & 1) != 0)
  {
    static CoordinateSpaceProtocol<>.scrollView.getter(v8);
    GeometryProxy.bounds(of:)(v13, v10);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    sub_1000787D4((uint64_t)v13, (uint64_t)&v14, &qword_100BC40B0);
    MinY = 0.0;
    if ((v15 & 1) == 0)
      MinY = CGRectGetMinY(v14);
    if (-MinY <= a3)
      v11 = MinY + a3;
  }
  *a2 = v11;
}

uint64_t sub_100174948(_QWORD *a1, double a2, double a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD v7[3];

  v7[0] = *a1;
  *(double *)&v7[1] = a3;
  v7[2] = a5;
  v5 = sub_1000BA294(&qword_100BC40A8);
  return State.wrappedValue.setter(v7, v5);
}

double sub_100174990()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10097E888);
  v4 = v0;
  sub_10007A100((uint64_t)&unk_100BC3988);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v4, KeyPath, v2);
  swift_release(KeyPath);
  return *(double *)(v0 + 24);
}

double sub_100174A14()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10097E860);
  v4 = v0;
  sub_10007A100((uint64_t)&unk_100BC3988);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v4, KeyPath, v2);
  swift_release(KeyPath);
  return *(double *)(v0 + 16);
}

uint64_t sub_100174A98@<X0>(uint64_t a1@<X1>, double *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  double v9;
  uint64_t result;
  double v11;
  double v12;
  _QWORD v13[5];
  _BYTE v14[8];
  double v15;
  char v16;

  v4 = type metadata accessor for NamedCoordinateSpace(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static CoordinateSpaceProtocol<>.scrollView.getter(v6);
  GeometryProxy.bounds(of:)(v13, v8);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  sub_1000787D4((uint64_t)v13, (uint64_t)v14, &qword_100BC40B0);
  if (v16)
    v9 = 0.0;
  else
    v9 = v15;
  result = type metadata accessor for ConditionSummaryModifier(0);
  v11 = *(double *)(a1 + *(int *)(result + 28));
  if (v11 >= -v9)
    v12 = v9 + v11;
  else
    v12 = 0.0;
  *a2 = v12;
  return result;
}

void sub_100174B8C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  char v24;
  double v25;
  double v26;
  double v27;
  int v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (**v45)(uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v3 = (uint64_t)v2;
  v49 = a1;
  v54 = a2;
  v4 = (int *)type metadata accessor for TemperatureModifier(0);
  v51 = *((_QWORD *)v4 - 1);
  __chkstk_darwin(v4);
  v52 = v5;
  v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_1000BA294(&qword_100BC4148);
  __chkstk_darwin(v47);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_1000BA294(&qword_100BC4150);
  __chkstk_darwin(v48);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_1000BA294(&qword_100BC4158);
  __chkstk_darwin(v50);
  v53 = (uint64_t)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocationHeaderViewMeasurements(0);
  __chkstk_darwin(v12);
  v14 = (double *)((char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = *v2;
  swift_retain();
  sub_1007A5940();
  v17 = v16;
  swift_release(v15);
  v18 = sub_100174990();
  *(_QWORD *)&v19 = swift_release(v17).n128_u64[0];
  sub_1007A5958(v19);
  swift_retain();
  sub_1007A5940();
  v21 = v20;
  swift_release(v15);
  v22 = sub_100174A14();
  swift_release(v21);
  sub_10041934C((uint64_t *)((char *)v14 + *(int *)(v12 + 32)));
  if ((v24 & 1) != 0)
    v25 = (v22 - (v14[1] + v14[3] + v14[5] + v14[7])) * 0.5;
  else
    v25 = v23;
  sub_10006BCFC((uint64_t)v14, type metadata accessor for LocationHeaderViewMeasurements);
  v26 = *(double *)(v3 + v4[8]);
  v27 = *(double *)(v3 + v4[9]);
  v28 = *(unsigned __int8 *)(v3 + v4[6]);
  v29 = 0;
  if (v28 == 1)
  {
    v30 = (uint64_t *)(v3 + v4[10]);
    v31 = *v30;
    v32 = v30[1];
    v55 = v31;
    v56 = v32;
    v33 = sub_1000BA294(&qword_100BC40A8);
    State.wrappedValue.getter(&v57, v33);
    v29 = v57;
  }
  v34 = 1.0;
  v35 = sub_1000BA294(&qword_100BC4160);
  v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v8, v49, v35);
  v37 = &v8[*(int *)(v47 + 36)];
  *(_QWORD *)v37 = 0;
  *((_QWORD *)v37 + 1) = v29;
  if (v28)
    v34 = CGFloat.clamp(min:max:)(v36, 0.0, 1.0, 1.0 - (-v18 / v25 - v26) / (v27 - v26));
  sub_100037768((uint64_t)v8, (uint64_t)v10, &qword_100BC4148);
  *(double *)&v10[*(int *)(v48 + 36)] = v34;
  sub_100021A14((uint64_t)v8, &qword_100BC4148);
  sub_100080C0C(v3, (uint64_t)v6, type metadata accessor for TemperatureModifier);
  v38 = *(unsigned __int8 *)(v51 + 80);
  v39 = (v38 + 16) & ~v38;
  v40 = v39 + v52;
  v41 = v38 | 7;
  v42 = swift_allocObject(&unk_100B5CF98, v39 + v52, v38 | 7);
  sub_10007802C((uint64_t)v6, v42 + v39, type metadata accessor for TemperatureModifier);
  sub_100080C0C(v3, (uint64_t)v6, type metadata accessor for TemperatureModifier);
  v43 = swift_allocObject(&unk_100B5CFC0, v40, v41);
  sub_10007802C((uint64_t)v6, v43 + v39, type metadata accessor for TemperatureModifier);
  v44 = v53;
  sub_100037768((uint64_t)v10, v53, &qword_100BC4150);
  v45 = (uint64_t (**)(uint64_t))(v44 + *(int *)(v50 + 36));
  *v45 = sub_100179BC4;
  v45[1] = (uint64_t (*)(uint64_t))v42;
  v45[2] = (uint64_t (*)(uint64_t))sub_100179BE4;
  v45[3] = (uint64_t (*)(uint64_t))v43;
  sub_100021A14((uint64_t)v10, &qword_100BC4150);
  sub_1000787D4(v44, v54, &qword_100BC4158);
}

void sub_100174FC0(uint64_t a1@<X1>, double *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  double MinY;
  double v12;
  _QWORD v13[5];
  CGRect v14;
  char v15;

  v4 = type metadata accessor for NamedCoordinateSpace(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TemperatureModifier(0);
  v9 = 0.0;
  if (*(_BYTE *)(a1 + *(int *)(v8 + 24)) == 1)
  {
    v10 = v8;
    static CoordinateSpaceProtocol<>.scrollView.getter(v8);
    GeometryProxy.bounds(of:)(v13, v7);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_1000787D4((uint64_t)v13, (uint64_t)&v14, &qword_100BC40B0);
    MinY = 0.0;
    if ((v15 & 1) == 0)
      MinY = CGRectGetMinY(v14);
    v12 = *(double *)(a1 + *(int *)(v10 + 28));
    if (v12 >= -MinY)
      v9 = MinY + v12;
  }
  *a2 = v9;
}

uint64_t sub_1001750D0(uint64_t *a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[3];

  v3 = *a1;
  v4 = (uint64_t *)(a2 + *(int *)(a3(0) + 40));
  v5 = *v4;
  v6 = v4[1];
  v9[0] = v3;
  v9[1] = v5;
  v9[2] = v6;
  v7 = sub_1000BA294(&qword_100BC40A8);
  return State.wrappedValue.setter(v9, v7);
}

void sub_10017513C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  double *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  double v14;
  char v15;
  double v16;
  uint64_t v17;
  uint64_t v18;

  v1 = v0;
  v2 = type metadata accessor for LocationHeaderViewMeasurements(0);
  __chkstk_darwin(v2);
  v4 = (double *)((char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *v0;
  swift_retain();
  sub_1007A5940();
  v7 = v6;
  swift_release(v5);
  v8 = sub_100174990();
  swift_release(v7);
  v9 = type metadata accessor for ConditionModifier(0);
  sub_1007A5958(v10);
  swift_retain();
  sub_1007A5940();
  v12 = v11;
  swift_release(v5);
  v13 = sub_100174A14();
  swift_release(v12);
  sub_10041934C((uint64_t *)((char *)v4 + *(int *)(v2 + 32)));
  if ((v15 & 1) != 0)
    v16 = (v13 - (v4[1] + v4[3] + v4[5] + v4[7])) * 0.5;
  else
    v16 = v14;
  sub_10006BCFC((uint64_t)v4, type metadata accessor for LocationHeaderViewMeasurements);
  CGFloat.clamp(min:max:)(v17, 0.0, 1.0, 1.0- (-v8 / v16 - *(double *)((char *)v1 + *(int *)(v9 + 32)))/ (*(double *)((char *)v1 + *(int *)(v9 + 36)) - *(double *)((char *)v1 + *(int *)(v9 + 32))));
}

void sub_1001752B0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  int v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  double v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (**v31)(uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v3 = v2;
  v33 = a1;
  v36 = a2;
  v4 = type metadata accessor for ConditionModifier(0);
  v35 = *(_QWORD *)(v4 - 8);
  v5 = *(_QWORD *)(v35 + 64);
  __chkstk_darwin(v4);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000BA294(&qword_100BC4108);
  __chkstk_darwin(v7);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1000BA294(&qword_100BC4110);
  __chkstk_darwin(v10);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_1000BA294(&qword_100BC4118);
  __chkstk_darwin(v34);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(unsigned __int8 *)(v3 + *(int *)(v4 + 24));
  v16 = 0;
  if (v15 == 1)
  {
    v17 = (uint64_t *)(v3 + *(int *)(v4 + 40));
    v18 = *v17;
    v19 = v17[1];
    v37 = v18;
    v38 = v19;
    v20 = sub_1000BA294(&qword_100BC40A8);
    State.wrappedValue.getter(&v39, v20);
    v16 = v39;
  }
  v21 = sub_1000BA294(&qword_100BC4120);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v9, v33, v21);
  v22 = &v9[*(int *)(v7 + 36)];
  *(_QWORD *)v22 = 0;
  *((_QWORD *)v22 + 1) = v16;
  v23 = 1.0;
  if (v15)
  {
    sub_10017513C();
    v23 = v24;
  }
  sub_100037768((uint64_t)v9, (uint64_t)v12, &qword_100BC4108);
  *(double *)&v12[*(int *)(v10 + 36)] = v23;
  sub_100021A14((uint64_t)v9, &qword_100BC4108);
  sub_100080C0C(v3, (uint64_t)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ConditionModifier);
  v25 = *(unsigned __int8 *)(v35 + 80);
  v26 = (v25 + 16) & ~v25;
  v27 = v26 + v5;
  v28 = v25 | 7;
  v29 = swift_allocObject(&unk_100B5CEF8, v27, v25 | 7);
  sub_10007802C((uint64_t)v6, v29 + v26, type metadata accessor for ConditionModifier);
  sub_100080C0C(v3, (uint64_t)v6, type metadata accessor for ConditionModifier);
  v30 = swift_allocObject(&unk_100B5CF20, v27, v28);
  sub_10007802C((uint64_t)v6, v30 + v26, type metadata accessor for ConditionModifier);
  sub_100037768((uint64_t)v12, (uint64_t)v14, &qword_100BC4110);
  v31 = (uint64_t (**)(uint64_t))&v14[*(int *)(v34 + 36)];
  *v31 = sub_100179B54;
  v31[1] = (uint64_t (*)(uint64_t))v29;
  v31[2] = (uint64_t (*)(uint64_t))sub_100179B74;
  v31[3] = (uint64_t (*)(uint64_t))v30;
  sub_100021A14((uint64_t)v12, &qword_100BC4110);
  sub_1000787D4((uint64_t)v14, v36, &qword_100BC4118);
}

void sub_10017559C(uint64_t a1@<X1>, double *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  double v11;
  double v12;
  _QWORD v13[5];
  _BYTE v14[8];
  double v15;
  char v16;

  v4 = type metadata accessor for NamedCoordinateSpace(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ConditionModifier(0);
  v9 = 0.0;
  if (*(_BYTE *)(a1 + *(int *)(v8 + 24)) == 1)
  {
    v10 = v8;
    static CoordinateSpaceProtocol<>.scrollView(axis:)(1, 0.0);
    GeometryProxy.bounds(of:)(v13, v7);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_1000787D4((uint64_t)v13, (uint64_t)v14, &qword_100BC40B0);
    v11 = v15;
    v9 = 0.0;
    if (v16)
      v11 = 0.0;
    v12 = *(double *)(a1 + *(int *)(v10 + 28));
    if (v12 >= -v11)
      v9 = v11 + v12;
  }
  *a2 = v9;
}

void sub_1001756A4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  char v24;
  double v25;
  double v26;
  double v27;
  double v28;
  int v29;
  double v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  double *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (**v45)(uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  double v57;

  v3 = (uint64_t)v2;
  v49 = a1;
  v54 = a2;
  v4 = (int *)type metadata accessor for HighLowModifier(0);
  v51 = *((_QWORD *)v4 - 1);
  __chkstk_darwin(v4);
  v52 = v5;
  v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_1000BA294(&qword_100BC4128);
  __chkstk_darwin(v47);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_1000BA294(&qword_100BC4130);
  __chkstk_darwin(v48);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_1000BA294(&qword_100BC4138);
  __chkstk_darwin(v50);
  v53 = (uint64_t)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocationHeaderViewMeasurements(0);
  __chkstk_darwin(v12);
  v14 = (double *)((char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = *v2;
  swift_retain();
  sub_1007A5940();
  v17 = v16;
  swift_release(v15);
  v18 = sub_100174990();
  *(_QWORD *)&v19 = swift_release(v17).n128_u64[0];
  sub_1007A5958(v19);
  swift_retain();
  sub_1007A5940();
  v21 = v20;
  swift_release(v15);
  v22 = sub_100174A14();
  swift_release(v21);
  sub_10041934C((uint64_t *)((char *)v14 + *(int *)(v12 + 32)));
  if ((v24 & 1) != 0)
    v25 = (v22 - (v14[1] + v14[3] + v14[5] + v14[7])) * 0.5;
  else
    v25 = v23;
  sub_10006BCFC((uint64_t)v14, type metadata accessor for LocationHeaderViewMeasurements);
  v26 = *(double *)(v3 + v4[8]);
  v27 = *(double *)(v3 + v4[9]);
  v28 = 1.0;
  v29 = *(unsigned __int8 *)(v3 + v4[6]);
  v30 = 1.0;
  if (v29 == 1)
  {
    v31 = (uint64_t *)(v3 + v4[10]);
    v32 = *v31;
    v33 = v31[1];
    v55 = v32;
    v56 = v33;
    v34 = sub_1000BA294(&qword_100BC40A8);
    State.wrappedValue.getter(&v57, v34);
    v30 = v57;
  }
  v35 = sub_1000BA294(&qword_100BC4140);
  v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v8, v49, v35);
  v37 = (double *)&v8[*(int *)(v47 + 36)];
  *v37 = 0.0;
  v37[1] = v30;
  if (v29)
    v28 = CGFloat.clamp(min:max:)(v36, 0.0, 1.0, 1.0 - (-v18 / v25 - v26) / (v27 - v26));
  sub_100037768((uint64_t)v8, (uint64_t)v10, &qword_100BC4128);
  *(double *)&v10[*(int *)(v48 + 36)] = v28;
  sub_100021A14((uint64_t)v8, &qword_100BC4128);
  sub_100080C0C(v3, (uint64_t)v6, type metadata accessor for HighLowModifier);
  v38 = *(unsigned __int8 *)(v51 + 80);
  v39 = (v38 + 16) & ~v38;
  v40 = v39 + v52;
  v41 = v38 | 7;
  v42 = swift_allocObject(&unk_100B5CF48, v39 + v52, v38 | 7);
  sub_10007802C((uint64_t)v6, v42 + v39, type metadata accessor for HighLowModifier);
  sub_100080C0C(v3, (uint64_t)v6, type metadata accessor for HighLowModifier);
  v43 = swift_allocObject(&unk_100B5CF70, v40, v41);
  sub_10007802C((uint64_t)v6, v43 + v39, type metadata accessor for HighLowModifier);
  v44 = v53;
  sub_100037768((uint64_t)v10, v53, &qword_100BC4130);
  v45 = (uint64_t (**)(uint64_t))(v44 + *(int *)(v50 + 36));
  *v45 = sub_100179B8C;
  v45[1] = (uint64_t (*)(uint64_t))v42;
  v45[2] = (uint64_t (*)(uint64_t))sub_100179BAC;
  v45[3] = (uint64_t (*)(uint64_t))v43;
  sub_100021A14((uint64_t)v10, &qword_100BC4130);
  sub_1000787D4(v44, v54, &qword_100BC4138);
}

void sub_100175AD8(uint64_t a1@<X1>, double *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  double v11;
  double v12;
  _QWORD v13[5];
  _BYTE v14[8];
  double v15;
  char v16;

  v4 = type metadata accessor for NamedCoordinateSpace(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for HighLowModifier(0);
  v9 = 0.0;
  if (*(_BYTE *)(a1 + *(int *)(v8 + 24)) == 1)
  {
    v10 = v8;
    static CoordinateSpaceProtocol<>.scrollView.getter(v8);
    GeometryProxy.bounds(of:)(v13, v7);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_1000787D4((uint64_t)v13, (uint64_t)v14, &qword_100BC40B0);
    v11 = v15;
    v9 = 0.0;
    if (v16)
      v11 = 0.0;
    v12 = *(double *)(a1 + *(int *)(v10 + 28));
    if (v12 >= -v11)
      v9 = v11 + v12;
  }
  *a2 = v9;
}

_QWORD *sub_100175BDC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  _QWORD *result;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[3];
  uint64_t v18;

  v1 = v0;
  v2 = type metadata accessor for LocationHeaderViewMeasurements(0);
  __chkstk_darwin(v2);
  v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  swift_retain();
  sub_1007A5940();
  v7 = v6;
  swift_release(v5);
  v8 = sub_100174A14();
  swift_release(v7);
  result = (_QWORD *)type metadata accessor for TranslationModifier(0);
  if (v8 - *(double *)((char *)v1 + *((int *)result + 7)) > 0.0)
  {
    v10 = result;
    sub_1007A5958(0.0);
    swift_retain();
    sub_1007A5940();
    v12 = v11;
    swift_release(v5);
    sub_100174A14();
    swift_release(v12);
    sub_10041934C((uint64_t *)&v4[*(int *)(v2 + 32)]);
    sub_10006BCFC((uint64_t)v4, type metadata accessor for LocationHeaderViewMeasurements);
    v13 = (_QWORD *)((char *)v1 + *((int *)v10 + 8));
    v14 = *v13;
    v15 = v13[1];
    v17[1] = v14;
    v17[2] = v15;
    v16 = sub_1000BA294(&qword_100BC40A8);
    return State.wrappedValue.getter(&v18, v16);
  }
  return result;
}

void sub_100175D80(uint64_t a1@<X1>, CGFloat *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  CGFloat MinY;
  _QWORD v9[5];
  CGRect v10;
  char v11;

  v4 = type metadata accessor for NamedCoordinateSpace(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MinY = 0.0;
  if (*(_BYTE *)(a1 + *(int *)(type metadata accessor for TranslationModifier(0) + 24)) == 1)
  {
    static CoordinateSpaceProtocol<>.scrollView.getter();
    GeometryProxy.bounds(of:)(v9, v7);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_1000787D4((uint64_t)v9, (uint64_t)&v10, &qword_100BC40B0);
    if ((v11 & 1) == 0)
      MinY = CGRectGetMinY(v10);
  }
  *a2 = MinY;
}

uint64_t sub_100175E6C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[3];

  v2 = *a1;
  v3 = (uint64_t *)(a2 + *(int *)(type metadata accessor for TranslationModifier(0) + 32));
  v4 = *v3;
  v5 = v3[1];
  v8[0] = v2;
  v8[1] = v4;
  v8[2] = v5;
  v6 = sub_1000BA294(&qword_100BC40A8);
  return State.wrappedValue.setter(v8, v6);
}

uint64_t sub_100175ED8(double *a1, double *a2)
{
  uint64_t v9;

  if (*a1 != *a2 || a1[1] != a2[1])
    return 0;
  if (a1[2] != a2[2] || a1[3] != a2[3])
    return 0;
  if (a1[4] != a2[4] || a1[5] != a2[5])
    return 0;
  if (a1[6] != a2[6] || a1[7] != a2[7])
    return 0;
  v9 = *(int *)(type metadata accessor for LocationHeaderViewMeasurements(0) + 32);
  return sub_1000FF540((double *)((char *)a1 + v9), (double *)((char *)a2 + v9));
}

double sub_100175F70@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v2;
  double result;

  v2 = type metadata accessor for LocationHeaderViewMeasurements(0);
  sub_10004A000((uint64_t)a1 + *(int *)(v2 + 32));
  result = 0.0;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_100175FB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  sub_10007A100((uint64_t)&unk_100BC4080);
  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

uint64_t sub_100176018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v8;

  sub_10007A100((uint64_t)&unk_100BC3988);
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v8, a1, a2, a3, &type metadata for () + 1, v6);
}

uint64_t sub_1001760B8(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  double v10;

  KeyPath = swift_getKeyPath(a1);
  v9 = v3;
  v10 = a3;
  sub_100176018(KeyPath, a2, (uint64_t)&v8);
  return sub_1000B439C();
}

uint64_t sub_100176114()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0
     + OBJC_IVAR____TtC7WeatherP33_0D7875416F0B8E2934ED75461799471034LocationHeaderViewFrameCoordinator___observationRegistrar;
  v2 = type metadata accessor for ObservationRegistrar(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100176164()
{
  return type metadata accessor for LocationHeaderViewFrameCoordinator(0);
}

uint64_t type metadata accessor for LocationHeaderViewFrameCoordinator(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC3740, (uint64_t)&nominal type descriptor for LocationHeaderViewFrameCoordinator);
}

uint64_t sub_100176180(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
  result = type metadata accessor for ObservationRegistrar(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1001761FC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0;
  ObservationRegistrar.init()();
  return v0;
}

double sub_100176224()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;
  uint64_t v8;

  v0 = sub_1000BA294(&qword_100BC40B8);
  State.wrappedValue.getter(&v8, v0);
  v1 = v8;
  v2 = sub_1000BA294(&qword_100BC40C0);
  v3 = type metadata accessor for LocationHeaderViewFrameCoordinator(0);
  sub_10007AB60((uint64_t)&unk_100BC40C8);
  v5 = v4;
  sub_10007A100((uint64_t)&unk_100BC3988);
  View.environment<A>(_:)(v1, v2, v3, v5, v6);
  *(_QWORD *)&result = swift_release(v1).n128_u64[0];
  return result;
}

double sub_100176308()
{
  return sub_100176224();
}

uint64_t sub_100176310@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double (*v8)@<D0>(double *@<X8>);
  _OWORD *v9;
  double (*v10)(double *);
  _OWORD *v11;
  uint64_t (*v12)@<X0>(_QWORD *@<X8>);
  double (*v13)(double *);
  _OWORD *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t result;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD v24[2];
  char v25;
  uint64_t v26;
  char v27;

  v5 = static Alignment.center.getter(a1);
  v22 = v6;
  v23 = v5;
  if ((*(_BYTE *)v2 & 1) != 0)
  {
    v7 = static Color.clear.getter(v5);
    v26 = *(_QWORD *)(v2 + 8);
    v27 = *(_BYTE *)(v2 + 16);
    v15 = *(_OWORD *)(v2 + 40);
    v24[0] = *(_OWORD *)(v2 + 24);
    v24[1] = v15;
    v25 = *(_BYTE *)(v2 + 56);
    v9 = (_OWORD *)swift_allocObject(&unk_100B5CD90, 73, 7);
    v16 = *(_OWORD *)(v2 + 16);
    v9[1] = *(_OWORD *)v2;
    v9[2] = v16;
    v9[3] = *(_OWORD *)(v2 + 32);
    *(_OWORD *)((char *)v9 + 57) = *(_OWORD *)(v2 + 41);
    v11 = (_OWORD *)swift_allocObject(&unk_100B5CDB8, 73, 7);
    v17 = *(_OWORD *)(v2 + 16);
    v11[1] = *(_OWORD *)v2;
    v11[2] = v17;
    v11[3] = *(_OWORD *)(v2 + 32);
    *(_OWORD *)((char *)v11 + 57) = *(_OWORD *)(v2 + 41);
    v14 = (_OWORD *)swift_allocObject(&unk_100B5CDE0, 73, 7);
    v18 = *(_OWORD *)(v2 + 16);
    v14[1] = *(_OWORD *)v2;
    v14[2] = v18;
    v14[3] = *(_OWORD *)(v2 + 32);
    *(_OWORD *)((char *)v14 + 57) = *(_OWORD *)(v2 + 41);
    sub_10017989C(&v26);
    sub_1001171CC((uint64_t)v24);
    sub_10017989C(&v26);
    sub_1001171CC((uint64_t)v24);
    sub_10017989C(&v26);
    sub_1001171CC((uint64_t)v24);
    v13 = sub_100179874;
    v12 = sub_100176668;
    v10 = sub_100179848;
    v8 = sub_10017983C;
  }
  else
  {
    v7 = 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    v11 = 0;
    v12 = 0;
    v13 = 0;
    v14 = 0;
  }
  v19 = sub_1000BA294(&qword_100BC4070);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(a2, a1, v19);
  result = sub_1000BA294(&qword_100BC4078);
  v21 = (uint64_t *)(a2 + *(int *)(result + 36));
  *v21 = v7;
  v21[1] = (uint64_t)v8;
  v21[2] = (uint64_t)v9;
  v21[3] = (uint64_t)v10;
  v21[4] = (uint64_t)v11;
  v21[5] = (uint64_t)v12;
  v21[6] = 0;
  v21[7] = (uint64_t)v13;
  v21[8] = (uint64_t)v14;
  v21[9] = v23;
  v21[10] = v22;
  return result;
}

double sub_100176504@<D0>(uint64_t a1@<X1>, double *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  double y;
  double v17;
  double v18;
  double result;
  _OWORD v20[2];
  char v21;
  _QWORD v22[5];
  CGRect v23;
  CGRect v24;

  v4 = type metadata accessor for NamedCoordinateSpace(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22[0] = 0xD000000000000012;
  v22[1] = 0x80000001009F11F0;
  static CoordinateSpaceProtocol<>.named<A>(_:)(v22, &type metadata for String, &protocol witness table for String, v6);
  v9 = GeometryProxy.frame<A>(in:)(v8, v4, &protocol witness table for NamedCoordinateSpace);
  v11 = v10;
  v13 = v12;
  v15 = v14;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  v23.origin.x = v9;
  v23.origin.y = v11;
  v23.size.width = v13;
  v23.size.height = v15;
  v24 = CGRectIntegral(v23);
  y = v24.origin.y;
  *(_OWORD *)&v24.origin.y = *(_OWORD *)(a1 + 40);
  v20[0] = *(_OWORD *)(a1 + 24);
  v20[1] = *(_OWORD *)&v24.origin.y;
  v21 = *(_BYTE *)(a1 + 56);
  sub_1000787D4((uint64_t)v20, (uint64_t)v22, &qword_100BC3BB0);
  sub_1001171CC((uint64_t)v22);
  sub_10011740C();
  v18 = v17;
  sub_1001171CC((uint64_t)v20);
  result = y - v18;
  *a2 = y - v18;
  return result;
}

uint64_t sub_100176668@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = GeometryProxy.size.getter();
  *a1 = v3;
  return result;
}

double sub_100176690(double *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  double v6;
  uint64_t v7;
  uint64_t v8;
  double result;

  v6 = *a1;
  swift_retain();
  sub_1007A5940();
  v8 = v7;
  sub_10009880C();
  sub_1001760B8(a3, a4, v6);
  *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  return result;
}

uint64_t sub_1001766FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100176310(a1, a2);
}

unint64_t sub_10017678C(unint64_t a1, uint64_t a2, int *a3)
{
  int v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  uint64_t v112;
  __int128 v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  int *v123;
  uint64_t v124;
  unint64_t v125;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v18 = v17 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_BYTE *)(a2 + 8);
    sub_10008D47C(*(_QWORD *)a2, v8);
    *(_QWORD *)a1 = v7;
    *(_BYTE *)(a1 + 8) = v8;
    v9 = *(_QWORD *)(a2 + 16);
    v10 = *(_BYTE *)(a2 + 24);
    sub_10008D47C(v9, v10);
    *(_QWORD *)(a1 + 16) = v9;
    *(_BYTE *)(a1 + 24) = v10;
    v11 = a3[6];
    v12 = (_QWORD *)(a1 + v11);
    v13 = (_QWORD *)(a2 + v11);
    v14 = sub_1000BA294(&qword_100BC2908);
    if (swift_getEnumCaseMultiPayload(v13) == 1)
    {
      v15 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v12, v13, v15);
      v16 = 1;
    }
    else
    {
      *v12 = *v13;
      swift_retain();
      v16 = 0;
    }
    swift_storeEnumTagMultiPayload(v12, v14, v16);
    v19 = a3[7];
    v20 = (_QWORD *)(a1 + v19);
    v21 = (_QWORD *)(a2 + v19);
    v22 = sub_1000BA294(&qword_100BC37D8);
    if (swift_getEnumCaseMultiPayload(v21) == 1)
    {
      v23 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v20, v21, v23);
      v24 = 1;
    }
    else
    {
      *v20 = *v21;
      swift_retain();
      v24 = 0;
    }
    swift_storeEnumTagMultiPayload(v20, v22, v24);
    v25 = a3[8];
    v26 = a1 + v25;
    v27 = a2 + v25;
    v28 = *(_QWORD *)v27;
    v29 = *(_BYTE *)(v27 + 8);
    sub_10008D47C(*(_QWORD *)v27, v29);
    *(_QWORD *)v26 = v28;
    *(_BYTE *)(v26 + 8) = v29;
    v30 = a3[9];
    v31 = a1 + v30;
    v32 = a2 + v30;
    v33 = *(_QWORD *)v32;
    v34 = *(_BYTE *)(v32 + 8);
    sub_10008D47C(*(_QWORD *)v32, v34);
    *(_QWORD *)v31 = v33;
    *(_BYTE *)(v31 + 8) = v34;
    v35 = a3[10];
    v36 = a1 + v35;
    v37 = a2 + v35;
    v38 = sub_1000BA294(&qword_100BC37E0);
    if (swift_getEnumCaseMultiPayload(v37) == 1)
    {
      *(_OWORD *)v36 = *(_OWORD *)v37;
      *(_BYTE *)(v36 + 16) = *(_BYTE *)(v37 + 16);
      *(_BYTE *)(v36 + 17) = *(_BYTE *)(v37 + 17);
      *(_BYTE *)(v36 + 18) = *(_BYTE *)(v37 + 18);
      v39 = *(int *)(type metadata accessor for DisplayMetrics(0) + 36);
      v40 = v36 + v39;
      v41 = v37 + v39;
      v42 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
      v43 = 1;
    }
    else
    {
      *(_QWORD *)v36 = *(_QWORD *)v37;
      swift_retain();
      v43 = 0;
    }
    swift_storeEnumTagMultiPayload(v36, v38, v43);
    v44 = a3[11];
    v45 = a1 + v44;
    v46 = a2 + v44;
    v47 = *(_QWORD *)v46;
    v48 = *(_BYTE *)(v46 + 8);
    sub_10008D47C(*(_QWORD *)v46, v48);
    *(_QWORD *)v45 = v47;
    *(_BYTE *)(v45 + 8) = v48;
    v49 = a3[12];
    v50 = (_QWORD *)(a1 + v49);
    v51 = (_QWORD *)(a2 + v49);
    v52 = sub_1000BA294(&qword_100BC37E8);
    if (swift_getEnumCaseMultiPayload(v51) == 1)
    {
      v53 = type metadata accessor for Font.Context(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(v50, v51, v53);
      v54 = 1;
    }
    else
    {
      *v50 = *v51;
      swift_retain();
      v54 = 0;
    }
    swift_storeEnumTagMultiPayload(v50, v52, v54);
    v55 = a3[13];
    v56 = a1 + v55;
    v57 = a2 + v55;
    v58 = *(_QWORD *)v57;
    v59 = *(_BYTE *)(v57 + 8);
    sub_10008D47C(*(_QWORD *)v57, v59);
    *(_QWORD *)v56 = v58;
    *(_BYTE *)(v56 + 8) = v59;
    v60 = a3[14];
    v61 = a1 + v60;
    v62 = a2 + v60;
    v63 = *(_QWORD *)v62;
    v64 = *(_QWORD *)(v62 + 8);
    v65 = *(_QWORD *)(v62 + 16);
    v66 = *(_QWORD *)(v62 + 24);
    v125 = a1;
    v67 = *(_BYTE *)(v62 + 32);
    sub_1000D55E4(*(_QWORD *)v62, v64, v65, v66, v67);
    *(_QWORD *)v61 = v63;
    *(_QWORD *)(v61 + 8) = v64;
    *(_QWORD *)(v61 + 16) = v65;
    *(_QWORD *)(v61 + 24) = v66;
    *(_BYTE *)(v61 + 32) = v67;
    v68 = a3[15];
    v69 = a1 + v68;
    v70 = a2 + v68;
    v71 = *(_QWORD *)v70;
    v72 = *(_QWORD *)(v70 + 8);
    v73 = *(_QWORD *)(v70 + 16);
    v74 = *(_QWORD *)(v70 + 24);
    v123 = a3;
    v75 = *(_QWORD *)(v70 + 32);
    v76 = *(_QWORD *)(v70 + 40);
    v77 = *(_BYTE *)(v70 + 48);
    sub_1000D55F0(*(_QWORD *)v70, v72, v73, v74, v75, v76, v77);
    *(_QWORD *)v69 = v71;
    *(_QWORD *)(v69 + 8) = v72;
    *(_QWORD *)(v69 + 16) = v73;
    *(_QWORD *)(v69 + 24) = v74;
    *(_QWORD *)(v69 + 32) = v75;
    *(_QWORD *)(v69 + 40) = v76;
    *(_BYTE *)(v69 + 48) = v77;
    v78 = v123[16];
    v79 = a1 + v78;
    v80 = a2 + v78;
    v81 = *(_QWORD *)(a2 + v78 + 8);
    *(_QWORD *)v79 = *(_QWORD *)(a2 + v78);
    *(_QWORD *)(v79 + 8) = v81;
    v82 = *(_QWORD *)(a2 + v78 + 16);
    v83 = *(_QWORD *)(a2 + v78 + 24);
    v84 = *(_QWORD *)(a2 + v78 + 32);
    v85 = *(_QWORD *)(a2 + v78 + 40);
    LOBYTE(v75) = *(_BYTE *)(a2 + v78 + 48);
    swift_bridgeObjectRetain(v81);
    sub_100176D88(v82, v83, v84, v85, v75);
    *(_QWORD *)(v79 + 16) = v82;
    *(_QWORD *)(v79 + 24) = v83;
    *(_QWORD *)(v79 + 32) = v84;
    *(_QWORD *)(v79 + 40) = v85;
    *(_BYTE *)(v79 + 48) = v75;
    v86 = *(_QWORD *)(v80 + 64);
    *(_QWORD *)(v79 + 56) = *(_QWORD *)(v80 + 56);
    *(_QWORD *)(v79 + 64) = v86;
    v87 = *(_QWORD *)(v80 + 80);
    *(_QWORD *)(v79 + 72) = *(_QWORD *)(v80 + 72);
    *(_QWORD *)(v79 + 80) = v87;
    v88 = *(_QWORD *)(v80 + 96);
    *(_QWORD *)(v79 + 88) = *(_QWORD *)(v80 + 88);
    *(_QWORD *)(v79 + 96) = v88;
    v89 = *(_QWORD *)(v80 + 112);
    *(_QWORD *)(v79 + 104) = *(_QWORD *)(v80 + 104);
    *(_QWORD *)(v79 + 112) = v89;
    v90 = *(_QWORD *)(v80 + 128);
    *(_QWORD *)(v79 + 120) = *(_QWORD *)(v80 + 120);
    *(_QWORD *)(v79 + 128) = v90;
    *(_BYTE *)(v79 + 136) = *(_BYTE *)(v80 + 136);
    *(_WORD *)(v79 + 137) = *(_WORD *)(v80 + 137);
    v91 = *(_QWORD *)(v80 + 152);
    *(_QWORD *)(v79 + 144) = *(_QWORD *)(v80 + 144);
    *(_QWORD *)(v79 + 152) = v91;
    *(_BYTE *)(v79 + 160) = *(_BYTE *)(v80 + 160);
    *(_BYTE *)(v79 + 161) = *(_BYTE *)(v80 + 161);
    v92 = v123[17];
    v124 = a2;
    v93 = a1 + v92;
    v94 = v124 + v92;
    v95 = *(_QWORD *)(v124 + v92);
    v96 = *(_QWORD *)(v124 + v92 + 8);
    LOBYTE(v79) = *(_BYTE *)(v124 + v92 + 16);
    swift_bridgeObjectRetain(v86);
    swift_bridgeObjectRetain(v87);
    swift_bridgeObjectRetain(v88);
    swift_bridgeObjectRetain(v89);
    swift_bridgeObjectRetain(v90);
    v97 = v91;
    v18 = v125;
    swift_bridgeObjectRetain(v97);
    sub_1000D55D4(v95, v96, v79);
    *(_QWORD *)v93 = v95;
    *(_QWORD *)(v93 + 8) = v96;
    *(_BYTE *)(v93 + 16) = v79;
    v98 = *(_QWORD *)(v94 + 24);
    *(_QWORD *)(v93 + 24) = v98;
    v99 = v123[18];
    v100 = v125 + v99;
    v101 = v124 + v99;
    v102 = *(_QWORD *)(v124 + v99);
    v103 = *(_QWORD *)(v124 + v99 + 8);
    LOBYTE(v88) = *(_BYTE *)(v124 + v99 + 16);
    swift_bridgeObjectRetain(v98);
    sub_1000D55D4(v102, v103, v88);
    *(_QWORD *)v100 = v102;
    *(_QWORD *)(v100 + 8) = v103;
    *(_BYTE *)(v100 + 16) = v88;
    v104 = *(_QWORD *)(v101 + 24);
    *(_QWORD *)(v100 + 24) = v104;
    v105 = v123[19];
    v106 = v125 + v105;
    v107 = v124 + v105;
    v108 = *(_QWORD *)(v124 + v105 + 24);
    swift_bridgeObjectRetain(v104);
    if (v108)
    {
      v109 = *(_QWORD *)v107;
      v110 = *(_QWORD *)(v107 + 8);
      v111 = *(_BYTE *)(v107 + 16);
      sub_1000D55D4(*(_QWORD *)v107, v110, v111);
      *(_QWORD *)v106 = v109;
      *(_QWORD *)(v106 + 8) = v110;
      *(_BYTE *)(v106 + 16) = v111;
      v112 = *(_QWORD *)(v107 + 24);
      *(_QWORD *)(v106 + 24) = v112;
      swift_bridgeObjectRetain(v112);
    }
    else
    {
      v113 = *(_OWORD *)(v107 + 16);
      *(_OWORD *)v106 = *(_OWORD *)v107;
      *(_OWORD *)(v106 + 16) = v113;
    }
    v114 = v123[21];
    *(_QWORD *)(v125 + v123[20]) = *(_QWORD *)(v124 + v123[20]);
    v115 = v125 + v114;
    v116 = v124 + v114;
    v117 = type metadata accessor for Text.Measurements(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v117 - 8) + 16))(v115, v116, v117);
    v118 = v123[23];
    *(_QWORD *)(v125 + v123[22]) = *(_QWORD *)(v124 + v123[22]);
    v119 = v125 + v118;
    v120 = v124 + v118;
    v121 = sub_1000BA294(&qword_100BC37F8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v121 - 8) + 16))(v119, v120, v121);
  }
  return v18;
}

uint64_t sub_100176D88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if (!a5)
    return swift_bridgeObjectRetain(a2);
  if (a5 == 1)
  {
    swift_bridgeObjectRetain(a2);
    return swift_bridgeObjectRetain(a4);
  }
  return result;
}

double sub_100176DD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  double result;

  if (a5)
  {
    if (a5 == 1)
    {
      swift_bridgeObjectRelease(a2);
      *(_QWORD *)&result = swift_bridgeObjectRelease(a4).n128_u64[0];
    }
  }
  else
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease(a2).n128_u64[0];
  }
  return result;
}

uint64_t sub_100176E20(uint64_t a1)
{
  (*(void (**)(void))(*(&type metadata for Text - 1) + 8))();
  return a1;
}

uint64_t sub_100176E54(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  const void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  _OWORD *v53;
  _OWORD *v54;
  __int128 v55;
  _OWORD *v56;
  _OWORD *v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  _OWORD *v61;
  __int128 *v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = a3[6];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_1000BA294(&qword_100BC2908);
  if (swift_getEnumCaseMultiPayload(v8) == 1)
  {
    v10 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v11 = a3[7];
  v12 = (void *)(a1 + v11);
  v13 = (const void *)(a2 + v11);
  v14 = sub_1000BA294(&qword_100BC37D8);
  if (swift_getEnumCaseMultiPayload(v13) == 1)
  {
    v15 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v12, v13, v15);
    swift_storeEnumTagMultiPayload(v12, v14, 1);
  }
  else
  {
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  v16 = a3[8];
  v17 = a3[9];
  v18 = a1 + v16;
  v19 = a2 + v16;
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *(_BYTE *)(v18 + 8) = *(_BYTE *)(v19 + 8);
  v20 = a1 + v17;
  v21 = a2 + v17;
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *(_BYTE *)(v20 + 8) = *(_BYTE *)(v21 + 8);
  v22 = a3[10];
  v23 = (char *)(a1 + v22);
  v24 = (char *)(a2 + v22);
  v25 = sub_1000BA294(&qword_100BC37E0);
  if (swift_getEnumCaseMultiPayload(v24) == 1)
  {
    *(_OWORD *)v23 = *(_OWORD *)v24;
    v23[16] = v24[16];
    v23[17] = v24[17];
    v23[18] = v24[18];
    v26 = *(int *)(type metadata accessor for DisplayMetrics(0) + 36);
    v27 = &v23[v26];
    v28 = &v24[v26];
    v29 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
    swift_storeEnumTagMultiPayload(v23, v25, 1);
  }
  else
  {
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  v30 = a3[11];
  v31 = a3[12];
  v32 = a1 + v30;
  v33 = a2 + v30;
  *(_QWORD *)v32 = *(_QWORD *)v33;
  *(_BYTE *)(v32 + 8) = *(_BYTE *)(v33 + 8);
  v34 = (void *)(a1 + v31);
  v35 = (const void *)(a2 + v31);
  v36 = sub_1000BA294(&qword_100BC37E8);
  if (swift_getEnumCaseMultiPayload(v35) == 1)
  {
    v37 = type metadata accessor for Font.Context(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v34, v35, v37);
    swift_storeEnumTagMultiPayload(v34, v36, 1);
  }
  else
  {
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  v38 = a3[13];
  v39 = a3[14];
  v40 = a1 + v38;
  v41 = a2 + v38;
  *(_QWORD *)v40 = *(_QWORD *)v41;
  *(_BYTE *)(v40 + 8) = *(_BYTE *)(v41 + 8);
  v42 = a1 + v39;
  v43 = a2 + v39;
  v44 = *(_OWORD *)(v43 + 16);
  *(_OWORD *)v42 = *(_OWORD *)v43;
  *(_OWORD *)(v42 + 16) = v44;
  *(_BYTE *)(v42 + 32) = *(_BYTE *)(v43 + 32);
  v45 = a3[15];
  v46 = a3[16];
  v47 = a1 + v45;
  v48 = a2 + v45;
  v49 = *(_OWORD *)(v48 + 16);
  *(_OWORD *)v47 = *(_OWORD *)v48;
  *(_OWORD *)(v47 + 16) = v49;
  v50 = *(_OWORD *)(v48 + 32);
  *(_BYTE *)(v47 + 48) = *(_BYTE *)(v48 + 48);
  *(_OWORD *)(v47 + 32) = v50;
  memcpy((void *)(a1 + v46), (const void *)(a2 + v46), 0xA2uLL);
  v51 = a3[17];
  v52 = a3[18];
  v53 = (_OWORD *)(a1 + v51);
  v54 = (_OWORD *)(a2 + v51);
  v55 = v54[1];
  *v53 = *v54;
  v53[1] = v55;
  v56 = (_OWORD *)(a1 + v52);
  v57 = (_OWORD *)(a2 + v52);
  v58 = v57[1];
  *v56 = *v57;
  v56[1] = v58;
  v59 = a3[19];
  v60 = a3[20];
  v61 = (_OWORD *)(a1 + v59);
  v62 = (__int128 *)(a2 + v59);
  v63 = *v62;
  v64 = v62[1];
  v65 = *(_QWORD *)(a2 + v60);
  *v61 = v63;
  v61[1] = v64;
  *(_QWORD *)(a1 + v60) = v65;
  v66 = a3[21];
  v67 = a1 + v66;
  v68 = a2 + v66;
  v69 = type metadata accessor for Text.Measurements(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(v67, v68, v69);
  v70 = a3[23];
  *(_QWORD *)(a1 + a3[22]) = *(_QWORD *)(a2 + a3[22]);
  v71 = a1 + v70;
  v72 = a2 + v70;
  v73 = sub_1000BA294(&qword_100BC37F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 32))(v71, v72, v73);
  return a1;
}

uint64_t sub_100177220(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  void *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  void *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __int128 v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  __int128 v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;

  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_1000B15F8(v8, v9);
  v10 = *((_BYTE *)a2 + 24);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_BYTE *)(a1 + 24) = v10;
  sub_1000B15F8(v11, v12);
  if ((uint64_t *)a1 != a2)
  {
    v13 = a3[6];
    v14 = (void *)(a1 + v13);
    v15 = (char *)a2 + v13;
    sub_100021A14(a1 + v13, &qword_100BC2908);
    v16 = sub_1000BA294(&qword_100BC2908);
    if (swift_getEnumCaseMultiPayload(v15) == 1)
    {
      v17 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v14, v15, v17);
      swift_storeEnumTagMultiPayload(v14, v16, 1);
    }
    else
    {
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    v18 = a3[7];
    v19 = (void *)(a1 + v18);
    v20 = (char *)a2 + v18;
    sub_100021A14(a1 + v18, &qword_100BC37D8);
    v21 = sub_1000BA294(&qword_100BC37D8);
    if (swift_getEnumCaseMultiPayload(v20) == 1)
    {
      v22 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v19, v20, v22);
      swift_storeEnumTagMultiPayload(v19, v21, 1);
    }
    else
    {
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
  }
  v23 = a3[8];
  v24 = a1 + v23;
  v25 = (uint64_t *)((char *)a2 + v23);
  v26 = *v25;
  LOBYTE(v25) = *((_BYTE *)v25 + 8);
  v27 = *(_QWORD *)v24;
  v28 = *(_BYTE *)(v24 + 8);
  *(_QWORD *)v24 = v26;
  *(_BYTE *)(v24 + 8) = (_BYTE)v25;
  sub_1000B15F8(v27, v28);
  v29 = a3[9];
  v30 = a1 + v29;
  v31 = (uint64_t *)((char *)a2 + v29);
  v32 = *v31;
  LOBYTE(v31) = *((_BYTE *)v31 + 8);
  v33 = *(_QWORD *)v30;
  v34 = *(_BYTE *)(v30 + 8);
  *(_QWORD *)v30 = v32;
  *(_BYTE *)(v30 + 8) = (_BYTE)v31;
  sub_1000B15F8(v33, v34);
  if ((uint64_t *)a1 != a2)
  {
    v35 = a3[10];
    v36 = (char *)(a1 + v35);
    v37 = (char *)a2 + v35;
    sub_100021A14(a1 + v35, &qword_100BC37E0);
    v38 = sub_1000BA294(&qword_100BC37E0);
    if (swift_getEnumCaseMultiPayload(v37) == 1)
    {
      *(_OWORD *)v36 = *(_OWORD *)v37;
      v36[16] = v37[16];
      v36[17] = v37[17];
      v36[18] = v37[18];
      v39 = *(int *)(type metadata accessor for DisplayMetrics(0) + 36);
      v40 = &v36[v39];
      v41 = &v37[v39];
      v42 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
      swift_storeEnumTagMultiPayload(v36, v38, 1);
    }
    else
    {
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
  }
  v43 = a3[11];
  v44 = a1 + v43;
  v45 = (uint64_t *)((char *)a2 + v43);
  v46 = *v45;
  LOBYTE(v45) = *((_BYTE *)v45 + 8);
  v47 = *(_QWORD *)v44;
  v48 = *(_BYTE *)(v44 + 8);
  *(_QWORD *)v44 = v46;
  *(_BYTE *)(v44 + 8) = (_BYTE)v45;
  sub_1000B15F8(v47, v48);
  if ((uint64_t *)a1 != a2)
  {
    v49 = a3[12];
    v50 = (void *)(a1 + v49);
    v51 = (char *)a2 + v49;
    sub_100021A14(a1 + v49, &qword_100BC37E8);
    v52 = sub_1000BA294(&qword_100BC37E8);
    if (swift_getEnumCaseMultiPayload(v51) == 1)
    {
      v53 = type metadata accessor for Font.Context(0);
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v50, v51, v53);
      swift_storeEnumTagMultiPayload(v50, v52, 1);
    }
    else
    {
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
  }
  v54 = a3[13];
  v55 = a1 + v54;
  v56 = (uint64_t *)((char *)a2 + v54);
  v57 = *v56;
  LOBYTE(v56) = *((_BYTE *)v56 + 8);
  v58 = *(_QWORD *)v55;
  v59 = *(_BYTE *)(v55 + 8);
  *(_QWORD *)v55 = v57;
  *(_BYTE *)(v55 + 8) = (_BYTE)v56;
  sub_1000B15F8(v58, v59);
  v60 = a3[14];
  v61 = a1 + v60;
  v62 = (uint64_t)a2 + v60;
  v63 = *(_BYTE *)(v62 + 32);
  v64 = *(_QWORD *)v61;
  v65 = *(_QWORD *)(v61 + 8);
  v66 = *(_QWORD *)(v61 + 16);
  v67 = *(_QWORD *)(v61 + 24);
  v68 = *(_BYTE *)(v61 + 32);
  v69 = *(_OWORD *)(v62 + 16);
  *(_OWORD *)v61 = *(_OWORD *)v62;
  *(_OWORD *)(v61 + 16) = v69;
  *(_BYTE *)(v61 + 32) = v63;
  sub_1000D31C4(v64, v65, v66, v67, v68);
  v70 = a3[15];
  v71 = a1 + v70;
  v72 = (uint64_t)a2 + v70;
  v73 = *(_BYTE *)(v72 + 48);
  v74 = *(_QWORD *)v71;
  v75 = *(_QWORD *)(v71 + 8);
  v76 = *(_QWORD *)(v71 + 16);
  v77 = *(_QWORD *)(v71 + 24);
  v78 = *(_QWORD *)(v71 + 32);
  v79 = *(_QWORD *)(v71 + 40);
  v80 = *(_BYTE *)(v71 + 48);
  v81 = *(_OWORD *)(v72 + 16);
  *(_OWORD *)v71 = *(_OWORD *)v72;
  *(_OWORD *)(v71 + 16) = v81;
  *(_OWORD *)(v71 + 32) = *(_OWORD *)(v72 + 32);
  *(_BYTE *)(v71 + 48) = v73;
  sub_1000D31D0(v74, v75, v76, v77, v78, v79, v80);
  v82 = a3[16];
  v83 = a1 + v82;
  v84 = (uint64_t)a2 + v82;
  v85 = *(uint64_t *)((char *)a2 + v82 + 8);
  *(_QWORD *)v83 = *(uint64_t *)((char *)a2 + v82);
  *(_QWORD *)(v83 + 8) = v85;
  swift_bridgeObjectRelease();
  v86 = *(_BYTE *)(v84 + 48);
  v87 = *(_QWORD *)(v83 + 16);
  v88 = *(_QWORD *)(v83 + 24);
  v89 = *(_QWORD *)(v83 + 32);
  v90 = *(_QWORD *)(v83 + 40);
  v91 = *(_OWORD *)(v84 + 32);
  *(_OWORD *)(v83 + 16) = *(_OWORD *)(v84 + 16);
  *(_OWORD *)(v83 + 32) = v91;
  v92 = *(_BYTE *)(v83 + 48);
  *(_BYTE *)(v83 + 48) = v86;
  sub_100176DD4(v87, v88, v89, v90, v92);
  v93 = *(_QWORD *)(v84 + 64);
  *(_QWORD *)(v83 + 56) = *(_QWORD *)(v84 + 56);
  *(_QWORD *)(v83 + 64) = v93;
  swift_bridgeObjectRelease();
  v94 = *(_QWORD *)(v84 + 80);
  *(_QWORD *)(v83 + 72) = *(_QWORD *)(v84 + 72);
  *(_QWORD *)(v83 + 80) = v94;
  swift_bridgeObjectRelease();
  v95 = *(_QWORD *)(v84 + 96);
  *(_QWORD *)(v83 + 88) = *(_QWORD *)(v84 + 88);
  *(_QWORD *)(v83 + 96) = v95;
  swift_bridgeObjectRelease();
  v96 = *(_QWORD *)(v84 + 112);
  *(_QWORD *)(v83 + 104) = *(_QWORD *)(v84 + 104);
  *(_QWORD *)(v83 + 112) = v96;
  swift_bridgeObjectRelease();
  v97 = *(_QWORD *)(v84 + 128);
  *(_QWORD *)(v83 + 120) = *(_QWORD *)(v84 + 120);
  *(_QWORD *)(v83 + 128) = v97;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v83 + 136) = *(_BYTE *)(v84 + 136);
  *(_BYTE *)(v83 + 137) = *(_BYTE *)(v84 + 137);
  *(_BYTE *)(v83 + 138) = *(_BYTE *)(v84 + 138);
  v98 = *(_QWORD *)(v84 + 152);
  *(_QWORD *)(v83 + 144) = *(_QWORD *)(v84 + 144);
  *(_QWORD *)(v83 + 152) = v98;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v83 + 160) = *(_BYTE *)(v84 + 160);
  *(_BYTE *)(v83 + 161) = *(_BYTE *)(v84 + 161);
  v99 = a3[17];
  v100 = a1 + v99;
  v101 = (uint64_t)a2 + v99;
  LOBYTE(v99) = *((_BYTE *)a2 + v99 + 16);
  v102 = *(_QWORD *)v100;
  v103 = *(_QWORD *)(v100 + 8);
  v104 = *(_BYTE *)(v100 + 16);
  *(_OWORD *)v100 = *(_OWORD *)v101;
  *(_BYTE *)(v100 + 16) = v99;
  sub_1000D31B4(v102, v103, v104);
  *(_QWORD *)(v100 + 24) = *(_QWORD *)(v101 + 24);
  swift_bridgeObjectRelease();
  v105 = a3[18];
  v106 = a1 + v105;
  v107 = (uint64_t)a2 + v105;
  LOBYTE(v105) = *((_BYTE *)a2 + v105 + 16);
  v108 = *(_QWORD *)v106;
  v109 = *(_QWORD *)(v106 + 8);
  v110 = *(_BYTE *)(v106 + 16);
  *(_OWORD *)v106 = *(_OWORD *)v107;
  *(_BYTE *)(v106 + 16) = v105;
  sub_1000D31B4(v108, v109, v110);
  *(_QWORD *)(v106 + 24) = *(_QWORD *)(v107 + 24);
  swift_bridgeObjectRelease();
  v111 = a3[19];
  v112 = a1 + v111;
  v113 = (uint64_t)a2 + v111;
  if (!*(_QWORD *)(a1 + v111 + 24))
    goto LABEL_20;
  if (!*(_QWORD *)(v113 + 24))
  {
    sub_100176E20(v112);
LABEL_20:
    v118 = *(_OWORD *)(v113 + 16);
    *(_OWORD *)v112 = *(_OWORD *)v113;
    *(_OWORD *)(v112 + 16) = v118;
    goto LABEL_21;
  }
  v114 = *(_BYTE *)(v113 + 16);
  v115 = *(_QWORD *)v112;
  v116 = *(_QWORD *)(v112 + 8);
  v117 = *(_BYTE *)(v112 + 16);
  *(_OWORD *)v112 = *(_OWORD *)v113;
  *(_BYTE *)(v112 + 16) = v114;
  sub_1000D31B4(v115, v116, v117);
  *(_QWORD *)(v112 + 24) = *(_QWORD *)(v113 + 24);
  swift_bridgeObjectRelease();
LABEL_21:
  v119 = a3[21];
  *(_QWORD *)(a1 + a3[20]) = *(uint64_t *)((char *)a2 + a3[20]);
  v120 = a1 + v119;
  v121 = (uint64_t)a2 + v119;
  v122 = type metadata accessor for Text.Measurements(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v122 - 8) + 40))(v120, v121, v122);
  v123 = a3[23];
  *(_QWORD *)(a1 + a3[22]) = *(uint64_t *)((char *)a2 + a3[22]);
  v124 = a1 + v123;
  v125 = (uint64_t)a2 + v123;
  v126 = sub_1000BA294(&qword_100BC37F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v126 - 8) + 40))(v124, v125, v126);
  return a1;
}

void sub_100177804()
{
  int v0;
  int *v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1000D08E8();
  sub_1000BA294(&qword_100BC3800);
  sub_100088FF0();
  if (v3)
  {
    v2 = v1[6];
  }
  else
  {
    sub_1000BA294((uint64_t *)&unk_100C09CA0);
    sub_100088FF0();
    if (v3)
    {
      v2 = v1[7];
    }
    else
    {
      sub_1000BA294(&qword_100BC3808);
      sub_100088FF0();
      if (v4)
      {
        v2 = v1[10];
      }
      else
      {
        sub_1000BA294(&qword_100BC3810);
        sub_100088FF0();
        if (v5)
        {
          v2 = v1[12];
        }
        else
        {
          if (v0 == 0x7FFFFFFF)
          {
            sub_100079F70();
            return;
          }
          type metadata accessor for Text.Measurements(0);
          sub_100088FF0();
          if (v3)
          {
            v2 = v1[21];
          }
          else
          {
            sub_1000BA294(&qword_100BC37F8);
            v2 = v1[23];
          }
        }
      }
    }
  }
  v6 = sub_10009E5E4(v2);
  sub_1000B250C(v6, v7, v8);
}

void sub_100177904(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1000BA294(&qword_100BC3800);
  sub_10009D2E8();
  if (v9)
  {
    v8 = a4[6];
  }
  else
  {
    sub_1000BA294((uint64_t *)&unk_100C09CA0);
    sub_10009D2E8();
    if (v9)
    {
      v8 = a4[7];
    }
    else
    {
      sub_1000BA294(&qword_100BC3808);
      sub_10009D2E8();
      if (v10)
      {
        v8 = a4[10];
      }
      else
      {
        sub_1000BA294(&qword_100BC3810);
        sub_10009D2E8();
        if (v11)
        {
          v8 = a4[12];
        }
        else
        {
          if (a3 == 0x7FFFFFFF)
          {
            *(_QWORD *)(a1 + a4[16] + 8) = (a2 - 1);
            sub_100079F70();
            return;
          }
          type metadata accessor for Text.Measurements(0);
          sub_10009D2E8();
          if (v9)
          {
            v8 = a4[21];
          }
          else
          {
            sub_1000BA294(&qword_100BC37F8);
            v8 = a4[23];
          }
        }
      }
    }
  }
  v12 = sub_10009E5E4(v8);
  sub_1000987C4(v12, v13, a2, v14);
}

uint64_t type metadata accessor for LocationHeaderViewMeasurements(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC3C98, (uint64_t)&nominal type descriptor for LocationHeaderViewMeasurements);
}

unint64_t sub_100177A1C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC3990;
  if (!qword_100BC3990)
  {
    v1 = sub_100075EB0(&qword_100BC3920);
    sub_10007AB60((uint64_t)&unk_100BC3998);
    sub_100177AA0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BC3990);
  }
  return result;
}

unint64_t sub_100177AA0()
{
  unint64_t result;

  result = qword_100BC39A0;
  if (!qword_100BC39A0)
  {
    result = swift_getWitnessTable(&unk_10097E810, &type metadata for RecordLocationHeaderFrameViewModifier);
    atomic_store(result, (unint64_t *)&qword_100BC39A0);
  }
  return result;
}

void sub_100177ADC()
{
  sub_100171D28();
  sub_10004A298();
}

unint64_t sub_100177AFC()
{
  unint64_t result;

  result = qword_100BC39E0;
  if (!qword_100BC39E0)
  {
    result = swift_getWitnessTable(&unk_10097E7D8, &_s44LocationHeaderViewMeasurementsEnvironmentKeyVN);
    atomic_store(result, (unint64_t *)&qword_100BC39E0);
  }
  return result;
}

unint64_t sub_100177B38()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC3AB0;
  if (!qword_100BC3AB0)
  {
    v1 = sub_100075EB0(&qword_100BC3A60);
    sub_100177BBC();
    sub_10007A100((uint64_t)&unk_100BC3AF0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BC3AB0);
  }
  return result;
}

unint64_t sub_100177BBC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC3AB8;
  if (!qword_100BC3AB8)
  {
    v1 = sub_100075EB0(&qword_100BC3A58);
    sub_100177C28();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BC3AB8);
  }
  return result;
}

unint64_t sub_100177C28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC3AC0;
  if (!qword_100BC3AC0)
  {
    v1 = sub_100075EB0(&qword_100BC3AC8);
    sub_10007AB60((uint64_t)&unk_100BC3AD0);
    sub_10007AB60((uint64_t)&unk_100BC3AE0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BC3AC0);
  }
  return result;
}

double sub_100177CCC(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  double result;

  sub_1000D55D4(a1, a2, a3 & 1);
  *(_QWORD *)&result = swift_bridgeObjectRetain(a4).n128_u64[0];
  return result;
}

double sub_100177CF4(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  double result;

  sub_1000D31B4(a1, a2, a3 & 1);
  *(_QWORD *)&result = swift_bridgeObjectRelease(a4).n128_u64[0];
  return result;
}

ValueMetadata *_s44LocationHeaderViewMeasurementsEnvironmentKeyVMa()
{
  return &_s44LocationHeaderViewMeasurementsEnvironmentKeyVN;
}

uint64_t getEnumTagSinglePayload for LocationHeaderViewGradientBackgroundViewModifier.LocationHeaderViewGradientBackgroundGeometry(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for LocationHeaderViewGradientBackgroundViewModifier.LocationHeaderViewGradientBackgroundGeometry(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for LocationHeaderViewGradientBackgroundViewModifier.LocationHeaderViewGradientBackgroundGeometry()
{
  return &type metadata for LocationHeaderViewGradientBackgroundViewModifier.LocationHeaderViewGradientBackgroundGeometry;
}

uint64_t destroy for HostsLocationHeaderFrameCoordinatorViewModifier(_QWORD *a1)
{
  swift_release(*a1);
  return swift_release(a1[1]);
}

void _s7Weather47HostsLocationHeaderFrameCoordinatorViewModifierVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = a2[1];
  *a1 = *a2;
  a1[1] = v2;
  swift_retain();
  swift_retain();
  sub_10004A298();
}

uint64_t *assignWithCopy for HostsLocationHeaderFrameCoordinatorViewModifier(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a1[1];
  v7 = a2[1];
  a1[1] = v7;
  swift_retain(v7);
  swift_release(v6);
  return a1;
}

_QWORD *assignWithTake for HostsLocationHeaderFrameCoordinatorViewModifier(_QWORD *a1, _OWORD *a2)
{
  uint64_t v4;

  swift_release(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  swift_release(v4);
  return a1;
}

ValueMetadata *type metadata accessor for HostsLocationHeaderFrameCoordinatorViewModifier()
{
  return &type metadata for HostsLocationHeaderFrameCoordinatorViewModifier;
}

_QWORD *sub_100177E9C(_OWORD *a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v14 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = *((_OWORD *)a2 + 1);
    *a1 = *(_OWORD *)a2;
    a1[1] = v5;
    v6 = *((_OWORD *)a2 + 3);
    a1[2] = *((_OWORD *)a2 + 2);
    a1[3] = v6;
    v7 = *(int *)(a3 + 32);
    v8 = (char *)a1 + v7;
    v9 = (uint64_t)a2 + v7;
    *(_OWORD *)v8 = *(_OWORD *)((char *)a2 + v7);
    v8[16] = *((_BYTE *)a2 + v7 + 16);
    v8[17] = *((_BYTE *)a2 + v7 + 17);
    v8[18] = *((_BYTE *)a2 + v7 + 18);
    v10 = *(int *)(type metadata accessor for DisplayMetrics(0) + 36);
    v11 = &v8[v10];
    v12 = v9 + v10;
    v13 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  }
  return v3;
}

uint64_t sub_100177F60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1 + *(int *)(a2 + 32);
  v3 = v2 + *(int *)(type metadata accessor for DisplayMetrics(0) + 36);
  v4 = type metadata accessor for DynamicTypeSize(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
}

_OWORD *sub_100177FA8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = *(int *)(a3 + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_OWORD *)v7 = *(_OWORD *)((char *)a2 + v6);
  v7[16] = *((_BYTE *)a2 + v6 + 16);
  v7[17] = *((_BYTE *)a2 + v6 + 17);
  v7[18] = *((_BYTE *)a2 + v6 + 18);
  v9 = *(int *)(type metadata accessor for DisplayMetrics(0) + 36);
  v10 = &v7[v9];
  v11 = &v8[v9];
  v12 = type metadata accessor for DynamicTypeSize(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  return a1;
}

_QWORD *sub_100178040(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  v4 = *(int *)(a3 + 32);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  *(_QWORD *)v5 = *(_QWORD *)((char *)a2 + v4);
  *((_QWORD *)v5 + 1) = *(_QWORD *)((char *)a2 + v4 + 8);
  v5[16] = *((_BYTE *)a2 + v4 + 16);
  v5[17] = *((_BYTE *)a2 + v4 + 17);
  v5[18] = *((_BYTE *)a2 + v4 + 18);
  v7 = *(int *)(type metadata accessor for DisplayMetrics(0) + 36);
  v8 = &v5[v7];
  v9 = &v6[v7];
  v10 = type metadata accessor for DynamicTypeSize(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

_OWORD *sub_100178110(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = *(int *)(a3 + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_OWORD *)v7 = *(_OWORD *)((char *)a2 + v6);
  v7[16] = *((_BYTE *)a2 + v6 + 16);
  v7[17] = *((_BYTE *)a2 + v6 + 17);
  v7[18] = *((_BYTE *)a2 + v6 + 18);
  v9 = *(int *)(type metadata accessor for DisplayMetrics(0) + 36);
  v10 = &v7[v9];
  v11 = &v8[v9];
  v12 = type metadata accessor for DynamicTypeSize(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  return a1;
}

_OWORD *sub_1001781A8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = *(int *)(a3 + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_OWORD *)v7 = *(_OWORD *)((char *)a2 + v6);
  v7[16] = *((_BYTE *)a2 + v6 + 16);
  v7[17] = *((_BYTE *)a2 + v6 + 17);
  v7[18] = *((_BYTE *)a2 + v6 + 18);
  v9 = *(int *)(type metadata accessor for DisplayMetrics(0) + 36);
  v10 = &v7[v9];
  v11 = &v8[v9];
  v12 = type metadata accessor for DynamicTypeSize(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t sub_100178240(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10017824C);
}

uint64_t sub_10017824C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 32);
  v5 = sub_10009E908();
  return _s7Weather24LocationCompositionStateOwet_0(v4, a2, v5);
}

uint64_t sub_100178280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10017828C);
}

uint64_t sub_10017828C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 32);
  v6 = sub_10009E908();
  return _s7Weather24LocationCompositionStateOwst_0(v5, a2, a2, v6);
}

uint64_t sub_1001782C4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = &unk_10097E3A0;
  v4[1] = &unk_10097E3A0;
  v4[2] = &unk_10097E3A0;
  v4[3] = &unk_10097E3A0;
  result = type metadata accessor for DisplayMetrics(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t destroy for LocationHeaderViewGradientBackgroundViewModifier(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 56));
}

uint64_t initializeWithCopy for LocationHeaderViewGradientBackgroundViewModifier(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  v4 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v4;
  swift_retain(v4);
  return a1;
}

uint64_t assignWithCopy for LocationHeaderViewGradientBackgroundViewModifier(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_QWORD *)(a1 + 40) = a2[5];
  *(_QWORD *)(a1 + 48) = a2[6];
  v4 = *(_QWORD *)(a1 + 56);
  v5 = a2[7];
  *(_QWORD *)(a1 + 56) = v5;
  swift_retain(v5);
  swift_release(v4);
  return a1;
}

uint64_t assignWithTake for LocationHeaderViewGradientBackgroundViewModifier(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v4 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_release(v4);
  return a1;
}

_QWORD *sub_100178448(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  char v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = *((_BYTE *)a2 + 8);
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = v7;
    v8 = a3[5];
    v9 = (_OWORD *)(a1 + v8);
    v10 = (_OWORD *)((char *)a2 + v8);
    swift_retain();
    v11 = sub_1000BA294(&qword_100BC39B0);
    if (swift_getEnumCaseMultiPayload(v10) == 1)
    {
      v12 = v10[1];
      *v9 = *v10;
      v9[1] = v12;
      v13 = v10[3];
      v9[2] = v10[2];
      v9[3] = v13;
      v14 = *(int *)(type metadata accessor for LocationHeaderViewMeasurements(0) + 32);
      v15 = (char *)v9 + v14;
      v16 = (char *)v10 + v14;
      *(_OWORD *)v15 = *(_OWORD *)((char *)v10 + v14);
      v15[16] = *((_BYTE *)v10 + v14 + 16);
      v15[17] = *((_BYTE *)v10 + v14 + 17);
      v15[18] = *((_BYTE *)v10 + v14 + 18);
      v17 = *(int *)(type metadata accessor for DisplayMetrics(0) + 36);
      v18 = &v15[v17];
      v19 = &v16[v17];
      v20 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
      v21 = 1;
    }
    else
    {
      *(_QWORD *)v9 = *(_QWORD *)v10;
      swift_retain();
      v21 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v21);
    v23 = a3[7];
    *((_BYTE *)v4 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    *(_QWORD *)((char *)v4 + v23) = *(uint64_t *)((char *)a2 + v23);
    v24 = a3[8];
    v25 = (_QWORD *)((char *)v4 + v24);
    v26 = (uint64_t *)((char *)a2 + v24);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
  }
  swift_retain();
  return v4;
}

double sub_1001785BC(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  double result;

  swift_release(*a1);
  v4 = (_QWORD *)((char *)a1 + *(int *)(a2 + 20));
  sub_1000BA294(&qword_100BC39B0);
  if (swift_getEnumCaseMultiPayload(v4) == 1)
  {
    v5 = (char *)v4 + *(int *)(type metadata accessor for LocationHeaderViewMeasurements(0) + 32);
    v6 = &v5[*(int *)(type metadata accessor for DisplayMetrics(0) + 36)];
    v7 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release(*v4);
  }
  *(_QWORD *)&result = swift_release(*(_QWORD *)((char *)a1 + *(int *)(a2 + 32) + 8)).n128_u64[0];
  return result;
}

uint64_t sub_100178668(uint64_t a1, uint64_t a2, int *a3)
{
  char v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;

  v6 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v6;
  v7 = a3[5];
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  swift_retain();
  v10 = sub_1000BA294(&qword_100BC39B0);
  if (swift_getEnumCaseMultiPayload(v9) == 1)
  {
    v11 = v9[1];
    *v8 = *v9;
    v8[1] = v11;
    v12 = v9[3];
    v8[2] = v9[2];
    v8[3] = v12;
    v13 = *(int *)(type metadata accessor for LocationHeaderViewMeasurements(0) + 32);
    v14 = (char *)v8 + v13;
    v15 = (char *)v9 + v13;
    *(_OWORD *)v14 = *(_OWORD *)((char *)v9 + v13);
    v14[16] = *((_BYTE *)v9 + v13 + 16);
    v14[17] = *((_BYTE *)v9 + v13 + 17);
    v14[18] = *((_BYTE *)v9 + v13 + 18);
    v16 = *(int *)(type metadata accessor for DisplayMetrics(0) + 36);
    v17 = &v14[v16];
    v18 = &v15[v16];
    v19 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = 1;
  }
  else
  {
    *(_QWORD *)v8 = *(_QWORD *)v9;
    swift_retain();
    v20 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v10, v20);
  v21 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v21) = *(_QWORD *)(a2 + v21);
  v22 = a3[8];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (_QWORD *)(a2 + v22);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  swift_retain();
  return a1;
}

uint64_t *sub_1001787B4(uint64_t *a1, uint64_t *a2, int *a3)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;

  v6 = *((_BYTE *)a2 + 8);
  v7 = *a1;
  *a1 = *a2;
  *((_BYTE *)a1 + 8) = v6;
  swift_retain();
  swift_release(v7);
  if (a1 != a2)
  {
    v8 = a3[5];
    v9 = (_OWORD *)((char *)a1 + v8);
    v10 = (_OWORD *)((char *)a2 + v8);
    sub_100021A14((uint64_t)a1 + v8, &qword_100BC39B0);
    v11 = sub_1000BA294(&qword_100BC39B0);
    if (swift_getEnumCaseMultiPayload(v10) == 1)
    {
      *v9 = *v10;
      v9[1] = v10[1];
      v9[2] = v10[2];
      v9[3] = v10[3];
      v12 = *(int *)(type metadata accessor for LocationHeaderViewMeasurements(0) + 32);
      v13 = (char *)v9 + v12;
      v14 = (char *)v10 + v12;
      *(_QWORD *)v13 = *(_QWORD *)((char *)v10 + v12);
      *((_QWORD *)v13 + 1) = *(_QWORD *)((char *)v10 + v12 + 8);
      v13[16] = *((_BYTE *)v10 + v12 + 16);
      v13[17] = *((_BYTE *)v10 + v12 + 17);
      v13[18] = *((_BYTE *)v10 + v12 + 18);
      v15 = *(int *)(type metadata accessor for DisplayMetrics(0) + 36);
      v16 = &v13[v15];
      v17 = &v14[v15];
      v18 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
      v19 = 1;
    }
    else
    {
      *(_QWORD *)v9 = *(_QWORD *)v10;
      swift_retain();
      v19 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v19);
  }
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
  v20 = a3[8];
  v21 = (uint64_t *)((char *)a1 + v20);
  v22 = (uint64_t *)((char *)a2 + v20);
  *v21 = *v22;
  v23 = v21[1];
  v21[1] = v22[1];
  swift_retain();
  swift_release(v23);
  return a1;
}

uint64_t sub_100178954(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[5];
  v7 = (_OWORD *)(a1 + v6);
  v8 = (_OWORD *)(a2 + v6);
  v9 = sub_1000BA294(&qword_100BC39B0);
  if (swift_getEnumCaseMultiPayload(v8) == 1)
  {
    v10 = v8[1];
    *v7 = *v8;
    v7[1] = v10;
    v11 = v8[3];
    v7[2] = v8[2];
    v7[3] = v11;
    v12 = *(int *)(type metadata accessor for LocationHeaderViewMeasurements(0) + 32);
    v13 = (char *)v7 + v12;
    v14 = (char *)v8 + v12;
    *(_OWORD *)v13 = *(_OWORD *)((char *)v8 + v12);
    v13[16] = *((_BYTE *)v8 + v12 + 16);
    v13[17] = *((_BYTE *)v8 + v12 + 17);
    v13[18] = *((_BYTE *)v8 + v12 + 18);
    v15 = *(int *)(type metadata accessor for DisplayMetrics(0) + 36);
    v16 = &v13[v15];
    v17 = &v14[v15];
    v18 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v19 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v19) = *(_QWORD *)(a2 + v19);
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t *sub_100178A94(uint64_t *a1, uint64_t *a2, int *a3)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;

  v6 = *((_BYTE *)a2 + 8);
  v7 = *a1;
  *a1 = *a2;
  *((_BYTE *)a1 + 8) = v6;
  swift_release(v7);
  if (a1 != a2)
  {
    v8 = a3[5];
    v9 = (_OWORD *)((char *)a1 + v8);
    v10 = (_OWORD *)((char *)a2 + v8);
    sub_100021A14((uint64_t)a1 + v8, &qword_100BC39B0);
    v11 = sub_1000BA294(&qword_100BC39B0);
    if (swift_getEnumCaseMultiPayload(v10) == 1)
    {
      v12 = v10[1];
      *v9 = *v10;
      v9[1] = v12;
      v13 = v10[3];
      v9[2] = v10[2];
      v9[3] = v13;
      v14 = *(int *)(type metadata accessor for LocationHeaderViewMeasurements(0) + 32);
      v15 = (char *)v9 + v14;
      v16 = (char *)v10 + v14;
      *(_OWORD *)v15 = *(_OWORD *)((char *)v10 + v14);
      v15[16] = *((_BYTE *)v10 + v14 + 16);
      v15[17] = *((_BYTE *)v10 + v14 + 17);
      v15[18] = *((_BYTE *)v10 + v14 + 18);
      v17 = *(int *)(type metadata accessor for DisplayMetrics(0) + 36);
      v18 = &v15[v17];
      v19 = &v16[v17];
      v20 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
      swift_storeEnumTagMultiPayload(v9, v11, 1);
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
  }
  v21 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *(uint64_t *)((char *)a1 + v21) = *(uint64_t *)((char *)a2 + v21);
  v22 = a3[8];
  v23 = (uint64_t *)((char *)a1 + v22);
  v24 = (uint64_t *)((char *)a2 + v22);
  *v23 = *v24;
  v25 = v23[1];
  v23[1] = v24[1];
  swift_release(v25);
  return a1;
}

void sub_100178C0C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1000D08E8();
  sub_1000BA294(&qword_100BC3CE0);
  sub_100088FF0();
  if (v1)
  {
    v2 = sub_10009E5E4(*(int *)(v0 + 20));
    sub_1000B250C(v2, v3, v4);
  }
  else
  {
    sub_1000D10D4(*(int *)(v0 + 32));
    sub_100079F70();
  }
}

void sub_100178C58()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1000ECEE8();
  sub_1000BA294(&qword_100BC3CE0);
  sub_10009D2E8();
  if (v3)
  {
    v4 = sub_1000C6960();
    sub_1000987C4(v4, v5, v6, v7);
  }
  else
  {
    *(_QWORD *)(v2 + *(int *)(v1 + 32) + 8) = v0;
    sub_100079F70();
  }
}

void sub_100178CA4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = "\t";
  sub_100158B48(319, (unint64_t *)&unk_100BC3D50, type metadata accessor for LocationHeaderViewMeasurements);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_10097E418;
    v4[3] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[4] = &unk_10097E430;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
  }
}

uint64_t destroy for RecordLocationHeaderFrameViewModifier(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + 8));
  return sub_1000D31C4(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_BYTE *)(a1 + 56));
}

uint64_t initializeWithCopy for RecordLocationHeaderFrameViewModifier(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 48);
  v8 = *(_BYTE *)(a2 + 56);
  swift_retain();
  sub_1000D55E4(v4, v5, v6, v7, v8);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v7;
  *(_BYTE *)(a1 + 56) = v8;
  return a1;
}

uint64_t assignWithCopy for RecordLocationHeaderFrameViewModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v2 = a2;
  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = v4;
  swift_retain();
  swift_release(v5);
  v6 = *(_QWORD *)(v2 + 24);
  v7 = *(_QWORD *)(v2 + 32);
  v8 = *(_QWORD *)(v2 + 40);
  v9 = *(_QWORD *)(v2 + 48);
  LOBYTE(v2) = *(_BYTE *)(v2 + 56);
  sub_1000D55E4(v6, v7, v8, v9, v2);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(_QWORD *)(a1 + 32);
  v12 = *(_QWORD *)(a1 + 40);
  v13 = *(_QWORD *)(a1 + 48);
  v14 = *(_BYTE *)(a1 + 56);
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_BYTE *)(a1 + 56) = v2;
  sub_1000D31C4(v10, v11, v12, v13, v14);
  return a1;
}

__n128 initializeWithTake for RecordLocationHeaderFrameViewModifier(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for RecordLocationHeaderFrameViewModifier(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = v4;
  swift_release(v5);
  v6 = *(_BYTE *)(a2 + 56);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_BYTE *)(a1 + 56);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = v6;
  sub_1000D31C4(v7, v8, v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for RecordLocationHeaderFrameViewModifier(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && a1[57])
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *a1;
      v4 = v3 >= 2;
      v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RecordLocationHeaderFrameViewModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 57) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for RecordLocationHeaderFrameViewModifier()
{
  return &type metadata for RecordLocationHeaderFrameViewModifier;
}

void sub_100178FEC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_10008900C();
  if ((*(_DWORD *)(*(_QWORD *)(v2 - 8) + 80) & 0x20000) != 0)
  {
    *v0 = *(_QWORD *)v1;
  }
  else
  {
    sub_1000DC0F0(*(_QWORD *)v1, *(_BYTE *)(v1 + 8));
    swift_retain();
    v3 = sub_1000BA294(&qword_100BC39B0);
    if (sub_1000CC7BC(v3) == 1)
    {
      sub_1000BA34C();
      v4 = sub_1000C4398();
      v5 = sub_1000DF448(v4);
      v7 = 1;
    }
    else
    {
      sub_1000DA898();
      v7 = 0;
    }
    sub_100110164(v5, v6, v7);
    sub_1000DD6A0();
  }
  swift_retain();
  sub_10009D300();
}

double sub_100179094(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  v4 = sub_10009987C(a1);
  swift_release(v4);
  v5 = sub_1000BA294(&qword_100BC39B0);
  if (sub_100098814(v5) == 1)
  {
    type metadata accessor for LocationHeaderViewMeasurements(0);
    sub_10009E908();
    v6 = sub_10003BC60();
    sub_1000987E0(v6);
  }
  else
  {
    sub_1000B4394();
  }
  *(_QWORD *)&result = swift_release(*(_QWORD *)(v2 + *(int *)(a2 + 40) + 8)).n128_u64[0];
  return result;
}

void sub_100179118()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_10008900C();
  v2 = sub_1000C1968(v0, v1);
  sub_1000DC0F0(v2, v3);
  swift_retain();
  v4 = sub_1000BA294(&qword_100BC39B0);
  if (sub_1000CC7BC(v4) == 1)
  {
    sub_1000BA34C();
    v5 = sub_1000C4398();
    v6 = sub_1000DF448(v5);
    v8 = 1;
  }
  else
  {
    sub_1000DA898();
    v8 = 0;
  }
  sub_100110164(v6, v7, v8);
  sub_1000DD6A0();
  swift_retain();
  sub_10009D300();
}

void sub_100179188()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_10008900C();
  *(_QWORD *)v0 = sub_1000C1968(v3, v4);
  *(_BYTE *)(v0 + 8) = v5;
  swift_retain();
  sub_1000B439C();
  if (v0 != v1)
  {
    v6 = v2[5];
    v7 = (_OWORD *)(v0 + v6);
    v8 = (_OWORD *)(v1 + v6);
    sub_1000DC864();
    v9 = sub_1000BA294(&qword_100BC39B0);
    if (sub_1000CC7BC(v9) == 1)
    {
      *v7 = *v8;
      v7[1] = v8[1];
      v7[2] = v8[2];
      v7[3] = v8[3];
      v10 = *(int *)(type metadata accessor for LocationHeaderViewMeasurements(0) + 32);
      v11 = (char *)v7 + v10;
      *(_QWORD *)v11 = *(_QWORD *)((char *)v8 + v10);
      *((_QWORD *)v11 + 1) = *(_QWORD *)((char *)v8 + v10 + 8);
      v11[16] = *((_BYTE *)v8 + v10 + 16);
      v11[17] = *((_BYTE *)v8 + v10 + 17);
      v11[18] = *((_BYTE *)v8 + v10 + 18);
      sub_10009E908();
      v12 = sub_1000C4398();
      v13 = sub_1000DF448(v12);
      v15 = 1;
    }
    else
    {
      sub_1000DA898();
      v15 = 0;
    }
    sub_100110164(v13, v14, v15);
  }
  *(_BYTE *)(v0 + v2[6]) = *(_BYTE *)(v1 + v2[6]);
  sub_1000B3094(v2[7]);
  sub_1000B3094(v2[8]);
  sub_1000B3094(v2[9]);
  sub_1000CF72C();
  *(_QWORD *)(v17 + 8) = *(_QWORD *)(v16 + 8);
  swift_retain();
  sub_10009880C();
  sub_10009D300();
}

void sub_1001792AC()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_10008900C();
  sub_1000F436C();
  *(_QWORD *)v3 = v4;
  *(_BYTE *)(v3 + 8) = *(_BYTE *)(v5 + 8);
  v6 = sub_1000BA294(&qword_100BC39B0);
  if (sub_1000CC7BC(v6) == 1)
  {
    sub_1000BA34C();
    v7 = sub_1000C4398();
    sub_1000D8D88(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32));
    sub_1000D0524();
  }
  else
  {
    sub_1000E7688();
  }
  v8 = v2[7];
  *(_BYTE *)(v0 + v2[6]) = *(_BYTE *)(v1 + v2[6]);
  *(_QWORD *)(v0 + v8) = *(_QWORD *)(v1 + v8);
  v9 = v2[9];
  *(_QWORD *)(v0 + v2[8]) = *(_QWORD *)(v1 + v2[8]);
  *(_QWORD *)(v0 + v9) = *(_QWORD *)(v1 + v9);
  *(_OWORD *)(v0 + v2[10]) = *(_OWORD *)(v1 + v2[10]);
  sub_10009D300();
}

void sub_100179358()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  char v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_10008900C();
  sub_1000F436C();
  v4 = *(_BYTE *)(v3 + 8);
  v6 = *v5;
  *(_QWORD *)v0 = v7;
  *(_BYTE *)(v0 + 8) = v4;
  swift_release(v6);
  if (v0 != v1)
  {
    sub_1000DC864();
    v8 = sub_1000BA294(&qword_100BC39B0);
    if (sub_1000CC7BC(v8) == 1)
    {
      sub_1000BA34C();
      v9 = sub_1000C4398();
      sub_1000D8D88(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32));
      sub_1000D0524();
    }
    else
    {
      sub_1000E7688();
    }
  }
  v10 = v2[7];
  *(_BYTE *)(v0 + v2[6]) = *(_BYTE *)(v1 + v2[6]);
  *(_QWORD *)(v0 + v10) = *(_QWORD *)(v1 + v10);
  sub_1000B3094(v2[8]);
  *(_QWORD *)(v0 + v11) = *(_QWORD *)(v1 + v11);
  sub_1000CF72C();
  v13 = *(_QWORD *)(v12 + 8);
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(v14 + 8);
  swift_release(v13);
  sub_10009D300();
}

void sub_100179434()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1000D08E8();
  sub_1000BA294(&qword_100BC3CE0);
  sub_100088FF0();
  if (v1)
  {
    v2 = sub_10009E5E4(*(int *)(v0 + 20));
    sub_1000B250C(v2, v3, v4);
  }
  else
  {
    sub_1000D10D4(*(int *)(v0 + 40));
    sub_100079F70();
  }
}

void sub_100179484()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1000ECEE8();
  sub_1000BA294(&qword_100BC3CE0);
  sub_10009D2E8();
  if (v3)
  {
    v4 = sub_1000C6960();
    sub_1000987C4(v4, v5, v6, v7);
  }
  else
  {
    *(_QWORD *)(v2 + *(int *)(v1 + 40) + 8) = v0;
    sub_100079F70();
  }
}

void sub_1001794D0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[7];

  v4[0] = "\t";
  sub_100158B48(319, (unint64_t *)&unk_100BC3D50, type metadata accessor for LocationHeaderViewMeasurements);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_10097E418;
    v4[3] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[4] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[5] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[6] = &unk_10097E430;
    swift_initStructMetadata(a1, 256, 7, v4, a1 + 16);
  }
}

uint64_t destroy for LocationNameModifier(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 24));
}

uint64_t initializeWithCopy for LocationNameModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v3;
  swift_retain(v3);
  return a1;
}

uint64_t assignWithCopy for LocationNameModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v4;
  swift_retain(v4);
  swift_release(v3);
  return a1;
}

uint64_t assignWithTake for LocationNameModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release(v3);
  return a1;
}

unint64_t sub_100179650()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC4030;
  if (!qword_100BC4030)
  {
    v1 = sub_100075EB0(&qword_100BC3970);
    sub_1001796BC();
    sub_1001797DC();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BC4030);
  }
  return result;
}

unint64_t sub_1001796BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC4038;
  if (!qword_100BC4038)
  {
    v1 = sub_100075EB0(&qword_100BC3968);
    sub_100179740();
    sub_10007AB60((uint64_t)&unk_100BC4060);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BC4038);
  }
  return result;
}

unint64_t sub_100179740()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC4040;
  if (!qword_100BC4040)
  {
    v1 = sub_100075EB0(&qword_100BC3960);
    sub_10007AB60((uint64_t)&unk_100BC4048);
    sub_10007AB60((uint64_t)&qword_100BC4050);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BC4040);
  }
  return result;
}

unint64_t sub_1001797DC()
{
  unint64_t result;

  result = qword_100BC4068;
  if (!qword_100BC4068)
  {
    result = swift_getWitnessTable(&unk_10097E710, &type metadata for HostsLocationHeaderFrameCoordinatorViewModifier);
    atomic_store(result, (unint64_t *)&qword_100BC4068);
  }
  return result;
}

uint64_t sub_100179818(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AA940C, 1);
}

uint64_t sub_100179828(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AA93BC, 1);
}

double sub_10017983C@<D0>(double *a1@<X8>)
{
  uint64_t v1;

  return sub_100176504(v1 + 16, a1);
}

double sub_100179848(double *a1)
{
  uint64_t v1;

  return sub_100176690(a1, v1 + 16, (uint64_t)&unk_10097E888, (uint64_t)sub_10017997C);
}

double sub_100179874(double *a1)
{
  uint64_t v1;

  return sub_100176690(a1, v1 + 16, (uint64_t)&unk_10097E860, (uint64_t)sub_100179918);
}

_QWORD *sub_10017989C(_QWORD *a1)
{
  swift_retain(*a1);
  return a1;
}

void sub_1001798C4(double *a1@<X8>)
{
  *a1 = sub_100174A14();
  sub_10004A298();
}

void sub_1001798E8(double *a1)
{
  sub_1001760B8((uint64_t)&unk_10097E860, (uint64_t)sub_100179918, *a1);
  sub_10004A298();
}

double sub_100179918()
{
  uint64_t v0;
  double result;

  result = *(double *)(v0 + 24);
  *(double *)(*(_QWORD *)(v0 + 16) + 16) = result;
  return result;
}

void sub_100179928(double *a1@<X8>)
{
  *a1 = sub_100174990();
  sub_10004A298();
}

void sub_10017994C(double *a1)
{
  sub_1001760B8((uint64_t)&unk_10097E888, (uint64_t)sub_10017997C, *a1);
  sub_10004A298();
}

double sub_10017997C()
{
  uint64_t v0;
  double result;

  result = *(double *)(v0 + 24);
  *(double *)(*(_QWORD *)(v0 + 16) + 24) = result;
  return result;
}

uint64_t sub_10017998C()
{
  return sub_10005C8B0();
}

uint64_t sub_100179998(uint64_t a1)
{
  return sub_100179A40(a1, type metadata accessor for ConditionSummaryModifier, (uint64_t (*)(uint64_t))sub_100174A98);
}

uint64_t sub_1001799AC()
{
  return sub_10005C8B0();
}

void sub_1001799B8(uint64_t *a1)
{
  sub_100179BF0(a1, type metadata accessor for ConditionSummaryModifier);
}

uint64_t sub_1001799CC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 72));
  return swift_deallocObject(v0, 80, 7);
}

void sub_1001799F0(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_100174744(a1, v2 + 16, a2);
}

uint64_t sub_1001799F8(__int128 *a1)
{
  uint64_t v1;

  return sub_100174774(a1, v1 + 16);
}

uint64_t sub_100179A00(uint64_t a1)
{
  swift_retain(*(_QWORD *)(a1 + 56));
  return a1;
}

uint64_t sub_100179A2C(uint64_t a1)
{
  return sub_100179A40(a1, type metadata accessor for TranslationModifier, (uint64_t (*)(uint64_t))sub_100175D80);
}

uint64_t sub_100179A40(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(uint64_t))
{
  sub_1000BE9A8(a1, a2);
  sub_1000987F4();
  return a3(a1);
}

uint64_t sub_100179A8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_10008900C();
  v5 = type metadata accessor for TranslationModifier(0);
  sub_1000C128C(v5);
  v6 = sub_1000BA294(&qword_100BC39B0);
  if (sub_100098814(v6) == 1)
  {
    type metadata accessor for LocationHeaderViewMeasurements(0);
    sub_10009E908();
    v7 = sub_10003BC60();
    sub_1000987E0(v7);
  }
  else
  {
    sub_1000B4394();
  }
  sub_1000DB6F4(*(int *)(v0 + 32));
  return sub_1000B4380(v1, v3 + v4, v2 | 7);
}

uint64_t sub_100179B1C(uint64_t *a1)
{
  uint64_t v2;

  type metadata accessor for TranslationModifier(0);
  sub_1000987F4();
  return sub_100175E6C(a1, v2);
}

uint64_t sub_100179B48()
{
  return sub_10005C8B0();
}

uint64_t sub_100179B54(uint64_t a1)
{
  return sub_100179A40(a1, type metadata accessor for ConditionModifier, (uint64_t (*)(uint64_t))sub_10017559C);
}

uint64_t sub_100179B68()
{
  return sub_10005C8B0();
}

void sub_100179B74(uint64_t *a1)
{
  sub_100179BF0(a1, type metadata accessor for ConditionModifier);
}

uint64_t sub_100179B80()
{
  return sub_10005C8B0();
}

uint64_t sub_100179B8C(uint64_t a1)
{
  return sub_100179A40(a1, type metadata accessor for HighLowModifier, (uint64_t (*)(uint64_t))sub_100175AD8);
}

uint64_t sub_100179BA0()
{
  return sub_10005C8B0();
}

void sub_100179BAC(uint64_t *a1)
{
  sub_100179BF0(a1, type metadata accessor for HighLowModifier);
}

uint64_t sub_100179BB8()
{
  return sub_10005C8B0();
}

uint64_t sub_100179BC4(uint64_t a1)
{
  return sub_100179A40(a1, type metadata accessor for TemperatureModifier, (uint64_t (*)(uint64_t))sub_100174FC0);
}

uint64_t sub_100179BD8()
{
  return sub_10005C8B0();
}

void sub_100179BE4(uint64_t *a1)
{
  sub_100179BF0(a1, type metadata accessor for TemperatureModifier);
}

void sub_100179BF0(uint64_t *a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v4;

  sub_1000BE9A8((uint64_t)a1, a2);
  sub_1000987F4();
  sub_1001750D0(a1, v4, a2);
  sub_100079F70();
}

uint64_t sub_100179C24()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_100179C48(double *a1@<X8>)
{
  uint64_t v1;

  sub_10017485C(*(_BYTE *)(v1 + 16), a1, *(double *)(v1 + 24));
}

uint64_t sub_100179C58(_QWORD *a1)
{
  uint64_t v1;

  return sub_100174948(a1, *(double *)(v1 + 24), *(double *)(v1 + 32), *(unsigned __int8 *)(v1 + 16), *(_QWORD *)(v1 + 40));
}

uint64_t assignWithTake for LocationHeaderViewGradientBackground(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  v5 = *(_QWORD *)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_1000B15F8(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for LocationHeaderViewGradientBackground(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LocationHeaderViewGradientBackground(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for LocationHeaderViewGradientBackgroundViewModifier.ScrollAdjustments(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

uint64_t sub_100179D58(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_100179D74(uint64_t result, int a2)
{
  char v2;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    v2 = 1;
  }
  else
  {
    v2 = 0;
  }
  *(_BYTE *)(result + 8) = v2;
  return result;
}

ValueMetadata *type metadata accessor for LocationHeaderViewGradientBackgroundViewModifier.ScrollAdjustments()
{
  return &type metadata for LocationHeaderViewGradientBackgroundViewModifier.ScrollAdjustments;
}

unint64_t sub_100179DA8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC4188;
  if (!qword_100BC4188)
  {
    v1 = sub_100075EB0(&qword_100BC4078);
    sub_10007AB60((uint64_t)&unk_100BC4190);
    sub_10007AB60((uint64_t)&unk_100BC4198);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BC4188);
  }
  return result;
}

unint64_t sub_100179E48()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC41A8;
  if (!qword_100BC41A8)
  {
    v1 = sub_100075EB0(&qword_100BC4098);
    sub_100156614();
    sub_10007AB60((uint64_t)&unk_100BC41C8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BC41A8);
  }
  return result;
}

uint64_t sub_100179ECC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[4];

  v0 = sub_100075EB0(&qword_100BC40C0);
  v1 = type metadata accessor for LocationHeaderViewFrameCoordinator(255);
  sub_10007AB60((uint64_t)&unk_100BC40C8);
  v3 = v2;
  sub_10007A100((uint64_t)&unk_100BC3988);
  v6[0] = v0;
  v6[1] = v1;
  v6[2] = v3;
  v6[3] = v4;
  return swift_getOpaqueTypeConformance2(v6, &opaque type descriptor for <<opaque return type of View.environment<A>(_:)>>, 1);
}

unint64_t sub_100179F70()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC41D8;
  if (!qword_100BC41D8)
  {
    v1 = sub_100075EB0(&qword_100BC40E8);
    sub_100179FF4();
    sub_10007AB60((uint64_t)&unk_100BC4200);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BC41D8);
  }
  return result;
}

unint64_t sub_100179FF4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC41E0;
  if (!qword_100BC41E0)
  {
    v1 = sub_100075EB0(&qword_100BC40D0);
    sub_10007AB60((uint64_t)&unk_100BC41E8);
    sub_10007AB60((uint64_t)&unk_100BC41F0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BC41E0);
  }
  return result;
}

unint64_t sub_10017A094()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC4210;
  if (!qword_100BC4210)
  {
    v1 = sub_100075EB0(&qword_100BC40F8);
    sub_100157DE0((uint64_t)&unk_100BC4218);
    sub_10007AB60((uint64_t)&unk_100BC41C8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BC4210);
  }
  return result;
}

unint64_t sub_10017A13C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC4228;
  if (!qword_100BC4228)
  {
    v1 = sub_100075EB0(&qword_100BC4118);
    sub_100156388();
    sub_10007AB60((uint64_t)&unk_100BC41C8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BC4228);
  }
  return result;
}

unint64_t sub_10017A1C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC4248;
  if (!qword_100BC4248)
  {
    v1 = sub_100075EB0(&qword_100BC4138);
    sub_100156414();
    sub_10007AB60((uint64_t)&unk_100BC41C8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BC4248);
  }
  return result;
}

unint64_t sub_10017A24C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC4268;
  if (!qword_100BC4268)
  {
    v1 = sub_100075EB0(&qword_100BC4158);
    sub_10015670C();
    sub_10007AB60((uint64_t)&unk_100BC41C8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BC4268);
  }
  return result;
}

unint64_t sub_10017A2D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC4288;
  if (!qword_100BC4288)
  {
    v1 = sub_100075EB0(&qword_100BC4178);
    sub_10017A358();
    sub_10007AB60((uint64_t)&unk_100BC42A8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BC4288);
  }
  return result;
}

unint64_t sub_10017A358()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC4290;
  if (!qword_100BC4290)
  {
    v1 = sub_100075EB0(&qword_100BC4170);
    sub_100157DE0((uint64_t)&unk_100BC4298);
    sub_10007AB60((uint64_t)&unk_100BC41C8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BC4290);
  }
  return result;
}

unint64_t sub_10017A400()
{
  unint64_t result;

  result = qword_100BC42B8;
  if (!qword_100BC42B8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for EmptyAnimatableData, &type metadata for EmptyAnimatableData);
    atomic_store(result, (unint64_t *)&qword_100BC42B8);
  }
  return result;
}

void sub_10017A43C()
{
  sub_10007AB60((uint64_t)&unk_100BC42D8);
}

uint64_t sub_10017A470@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[5];
  _QWORD v26[3];
  uint64_t v27;

  v4 = a1[3];
  v5 = a1[4];
  sub_1000DB418(a1, v4);
  v6 = sub_1000BA294(&qword_100BC4398);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v6, v6, v4, v5);
  if (v27)
  {
    v8 = a1[3];
    v9 = a1[4];
    sub_1000DB418(a1, v8);
    v10 = sub_1000BA294(&qword_100BC43A8);
    result = dispatch thunk of ResolverType.resolve<A>(_:)(v10, v10, v8, v9);
    if (result)
    {
      v11 = result;
      v12 = sub_100068EB4((uint64_t)v26, v27);
      __chkstk_darwin(v12);
      v14 = (_QWORD *)((char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v15 + 16))(v14);
      v16 = *v14;
      v17 = type metadata accessor for AirQualityDetailInteractor();
      v25[3] = v17;
      v25[4] = &off_100B6F940;
      v25[0] = v16;
      v18 = type metadata accessor for AirQualityDetailModule();
      v19 = (_QWORD *)swift_allocObject(v18, 64, 7);
      v20 = sub_100068EB4((uint64_t)v25, v17);
      __chkstk_darwin(v20);
      v22 = (_QWORD *)((char *)v25 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v23 + 16))(v22);
      v24 = *v22;
      v19[5] = v17;
      v19[6] = &off_100B6F940;
      v19[2] = v24;
      v19[7] = v11;
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v25);
      result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v26);
      a2[3] = v18;
      a2[4] = &off_100B7D170;
      *a2 = v19;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10017A648@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for AirQualityDetailViewStateReducer();
  result = swift_allocObject(v2, 16, 7);
  a1[3] = v2;
  a1[4] = (uint64_t)&off_100B6F048;
  *a1 = result;
  return result;
}

double sub_10017A68C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;

  v0 = sub_1000BA294(&qword_100BC4390);
  v1 = RegistrationContainer.register<A>(_:name:factory:)(v0, 0, 0, sub_10017A754, 0, v0);
  swift_release(v1);
  v2 = sub_1000BA294(&qword_100BC4398);
  v3 = RegistrationContainer.register<A>(_:name:factory:)(v2, 0, 0, sub_10017A88C, 0, v2);
  swift_release(v3);
  v4 = sub_1000BA294(&qword_100BC43A0);
  v5 = RegistrationContainer.register<A>(_:name:factory:)(v4, 0, 0, sub_10017AAAC, 0, v4);
  swift_release(v5);
  v6 = sub_1000BA294(&qword_100BC43A8);
  v7 = RegistrationContainer.register<A>(_:name:factory:)(v6, 0, 0, sub_10017AC84, 0, v6);
  *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  return result;
}

uint64_t sub_10017A754@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;

  v4 = a1[3];
  v5 = a1[4];
  sub_1000DB418(a1, v4);
  v6 = type metadata accessor for Tracker(0);
  result = dispatch thunk of ResolverType.resolve<A>(_:name:)(v6, 0x6E6F697461636F4CLL, 0xEE00656C75646F4DLL, v6, v4, v5);
  if (result)
  {
    v8 = result;
    v9 = Tracker.chain(name:identifier:)(0xD000000000000010, 0x80000001009F0170, 0, 0);
    swift_release(v8);
    v10 = a1[3];
    v11 = a1[4];
    sub_1000DB418(a1, v10);
    v12 = sub_1000BA294(&qword_100BC43F8);
    result = dispatch thunk of ResolverType.resolve<A>(_:)(v12, v12, v10, v11);
    if (v15)
    {
      a2[3] = (uint64_t)&type metadata for AirQualityDetailTracker;
      a2[4] = (uint64_t)&off_100B6D788;
      v13 = swift_allocObject(&unk_100B5D4C0, 64, 7);
      *a2 = v13;
      *(_QWORD *)(v13 + 16) = v9;
      return sub_10003C800(&v14, v13 + 24);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10017A88C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  uint64_t v15;
  _OWORD *v16;
  __int128 v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  ValueWitnessTable *v23;
  uint64_t *v24;
  _OWORD *v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[5];
  _QWORD v30[3];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v4 = a1[3];
  v5 = a1[4];
  sub_1000DB418(a1, v4);
  v6 = sub_1000BA294(&qword_100BC43F0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v6, v6, v4, v5);
  v8 = v32;
  if (v32)
  {
    v28 = v33;
    v9 = a1[3];
    v10 = a1[4];
    sub_1000DB418(a1, v9);
    v11 = sub_1000BA294(&qword_100BC4390);
    result = dispatch thunk of ResolverType.resolve<A>(_:)(v11, v11, v9, v10);
    if (v31)
    {
      v12 = sub_100068EB4((uint64_t)v30, v31);
      __chkstk_darwin(v12);
      v14 = (_OWORD *)((char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(_OWORD *))(v15 + 16))(v14);
      v29[3] = &type metadata for AirQualityDetailTracker;
      v29[4] = &off_100B6D788;
      v16 = (_OWORD *)swift_allocObject(&unk_100B5D4C0, 64, 7);
      v29[0] = v16;
      v17 = v14[1];
      v16[1] = *v14;
      v16[2] = v17;
      v16[3] = v14[2];
      v18 = type metadata accessor for AirQualityDetailInteractor();
      v19 = (_QWORD *)swift_allocObject(v18, 72, 7);
      v20 = sub_100068EB4((uint64_t)v29, (uint64_t)&type metadata for AirQualityDetailTracker);
      __chkstk_darwin(v20);
      v22 = (_OWORD *)((char *)&v27 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
      ((void (*)(uint64_t, uint64_t *))v23->initializeWithCopy)((uint64_t)v22, v24);
      v19[7] = &type metadata for AirQualityDetailTracker;
      v19[8] = &off_100B6D788;
      v25 = (_OWORD *)swift_allocObject(&unk_100B5D4C0, 64, 7);
      v26 = v22[1];
      v25[1] = *v22;
      v25[2] = v26;
      v25[3] = v22[2];
      v19[2] = v8;
      v19[3] = v28;
      v19[4] = v25;
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v29);
      result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v30);
      a2[3] = v18;
      a2[4] = &off_100B6F940;
      *a2 = v19;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10017AAAC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[5];
  _QWORD v26[3];
  uint64_t v27;
  __int128 v28;
  uint64_t v29;

  v4 = a1[3];
  v5 = a1[4];
  sub_1000DB418(a1, v4);
  v6 = sub_1000BA294(&qword_100BC43E0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v6, v6, v4, v5);
  if (v29)
  {
    v8 = a1[3];
    v9 = a1[4];
    sub_1000DB418(a1, v8);
    v10 = sub_1000BA294(&qword_100BC43E8);
    result = dispatch thunk of ResolverType.resolve<A>(_:)(v10, v10, v8, v9);
    if (v27)
    {
      v11 = sub_100068EB4((uint64_t)v26, v27);
      __chkstk_darwin(v11);
      v13 = (_QWORD *)((char *)&v25[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v14 + 16))(v13);
      v15 = *v13;
      v16 = type metadata accessor for NewsArticleComponentViewModelFactory();
      v25[3] = v16;
      v25[4] = &off_100B7D058;
      v25[0] = v15;
      v17 = type metadata accessor for AirQualityDetailViewModelFactory();
      v18 = (_QWORD *)swift_allocObject(v17, 96, 7);
      v19 = sub_100068EB4((uint64_t)v25, v16);
      __chkstk_darwin(v19);
      v21 = (_QWORD *)((char *)&v25[-1] - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v22 + 16))(v21);
      v23 = *v21;
      v18[5] = v16;
      v18[6] = &off_100B7D058;
      v18[2] = v23;
      sub_10003C800(&v28, (uint64_t)(v18 + 7));
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v25);
      result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v26);
      a2[3] = v17;
      a2[4] = &off_100B88CE0;
      *a2 = v18;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10017AC84(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(_QWORD *__return_ptr, void *, uint64_t (*)(uint64_t), _QWORD *, __n128);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17[2];
  _QWORD v18[5];
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(_QWORD *__return_ptr, void *, uint64_t (*)(uint64_t), _QWORD *, __n128);
  uint64_t v24;

  v2 = a1[3];
  v3 = a1[4];
  sub_1000DB418(a1, v2);
  v4 = sub_1000BA294(&qword_100BC43B0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v4, v4, v2, v3);
  v6 = v21;
  if (v21)
  {
    v8 = v23;
    v7 = v24;
    v9 = v22;
    v10 = a1[3];
    v11 = a1[4];
    sub_1000DB418(a1, v10);
    v12 = sub_1000BA294(&qword_100BC43A0);
    result = dispatch thunk of ResolverType.resolve<A>(_:)(v12, v12, v10, v11);
    if (v20)
    {
      v13 = *sub_1000DB418(v19, v20);
      v18[3] = type metadata accessor for AirQualityDetailViewModelFactory();
      v18[4] = &off_100B88CE0;
      v18[0] = v13;
      sub_100043CA8((uint64_t)v18, (uint64_t)v17);
      v14 = swift_allocObject(&unk_100B5D2E0, 56, 7);
      sub_10003C800(v17, v14 + 16);
      swift_retain();
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v18);
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v19);
      v15 = swift_allocObject(&unk_100B5D308, 32, 7);
      *(_QWORD *)(v15 + 16) = sub_10017AEA0;
      *(_QWORD *)(v15 + 24) = v14;
      v16 = sub_1000BA294(&qword_100BC43A8);
      swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
      return sub_100182F4C(v6, v9, v8, v7, (uint64_t)sub_100098828, 0, (uint64_t)sub_10019CEF0, 0, (uint64_t)sub_1000A2A68, v15);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10017AE34@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  sub_1000DB418(a2, a2[3]);
  return sub_1006BFAF4(a1, a3);
}

uint64_t sub_10017AE7C()
{
  uint64_t v0;

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10017AEA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10017AE34(a1, (_QWORD *)(v2 + 16), a2);
}

void sub_10017AEA8(void (**a1)(uint64_t *__return_ptr, double)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  void (*v8)(uint64_t *__return_ptr, double);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __n128 v69;
  uint64_t v70;
  uint64_t v71[3];
  uint64_t v72;
  uint64_t v73;
  _BYTE v74[24];

  v5 = v1;
  sub_10009922C(v1 + 16, (uint64_t)v74, 1);
  v8 = *(void (**)(uint64_t *__return_ptr, double))(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v10 = *(_QWORD *)(v1 + 32);
  v9 = *(_QWORD *)(v1 + 40);
  if (*(_BYTE *)(v1 + 120))
  {
    sub_100079F88();
    if (v19 == 1)
    {
      v20 = *(_QWORD *)(v1 + 112);
      sub_1000B2520(v11, v12, v13, v14, v15, v16, v17, v18);
      a1[10] = (void (*)(uint64_t *__return_ptr, double))v4;
      a1[11] = (void (*)(uint64_t *__return_ptr, double))v20;
      v72 = v21;
      v70 = v22;
      v68 = v23;
      v25 = v24;
      swift_retain();
      v26 = sub_1000C00AC();
      sub_10019D33C(v26, v27, v28, v25, v68, v70, v72, v1, v66, v67, v4, v20);
      swift_release(v8);
    }
    else
    {
      *a1 = v8;
      a1[1] = (void (*)(uint64_t *__return_ptr, double))v7;
      sub_1000F406C(v11, v12, v13, v14, v15, v16, v17, v18);
      sub_10019D33C((uint64_t)v8, v7, v10, v9, v62, v63, v64, v65, v1, v2, v3, v4);
    }
  }
  else
  {
    sub_1000C3528();
    v29 = sub_1000C12B0();
    v8(&v73, v29);
    sub_1000ED3D8();
    sub_1000C5AE8();
    sub_1000B439C();
    sub_1000DC668();
    v69 = sub_1000DC104();
    *(_OWORD *)v71 = v30;
    v31 = *(_QWORD *)(v1 + 112);
    v32 = *(_BYTE *)(v1 + 120);
    v42 = sub_1000DC870(v33, v34, v35, v36, v37, v38, v39, v40, v41);
    *(_BYTE *)(v5 + 120) = 1;
    sub_10019D33C(v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53);
    sub_10009D9B0();
    sub_10019D198(v54, v55, v56, v57, v58, v59, v60, v61, v71[0], v71[1], v69.n128_i64[0], v69.n128_i64[1], v31, v32);
  }
}

void sub_10017B010()
{
  sub_1000A2930();
}

void sub_10017B02C()
{
  sub_1000A2930();
}

void sub_10017B048()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);
  uint64_t (*v2)(_QWORD);
  uint64_t *v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t (*v6)(_QWORD);
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  int EnumCaseMultiPayload;
  uint64_t v23;
  void (*v24)(char *);
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(_QWORD);
  uint64_t (*v28)(_QWORD);
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;

  sub_1000986AC();
  v2 = v1;
  v29 = v3;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  sub_1000C0894();
  sub_1000C6D48();
  __chkstk_darwin(v10);
  v12 = (char *)&v26 - v11;
  v13 = sub_1000BA294(v5);
  sub_1000B42B0();
  __chkstk_darwin(v14);
  sub_10009883C();
  v17 = v15 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v26 - v19;
  v21 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 120);
  sub_10009922C(v21, (uint64_t)&v31, 0);
  sub_100037768(v21, (uint64_t)v20, v5);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v20, v13);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v23 = sub_1000BA294(v29);
      sub_1000BE70C((uint64_t)&v20[*(int *)(v23 + 48)]);
      sub_1000215BC((uint64_t)v20, v7);
    }
    else
    {
      sub_1000BE70C((uint64_t)v20);
    }
  }
  else
  {
    v27 = v7;
    v28 = v2;
    v24 = (void (*)(char *))*((_QWORD *)v20 + 2);
    (*(void (**)(void))v20)();
    v24(v12);
    sub_100089020();
    sub_1000B439C();
    v25 = v17 + *(int *)(sub_1000BA294(v29) + 48);
    sub_10007802C((uint64_t)v12, v17, v27);
    sub_100080C0C(v9, v25, v28);
    sub_10009525C(v17, v13);
    sub_10009922C(v21, (uint64_t)&v30, 33);
    sub_1000A3908(v17, v21, v5);
    sub_1000B30A0();
  }
  sub_100098640();
}

void sub_10017B1E8()
{
  sub_10017B048();
}

void sub_10017B20C()
{
  sub_10017B048();
}

void sub_10017B230()
{
  sub_10017B048();
}

id sub_10017B254()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void (*v3)(_QWORD *__return_ptr, _QWORD *);
  double v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  char v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  id v18;
  _QWORD v20[2];
  unsigned __int8 v21;
  _BYTE v22[24];
  _QWORD v23[2];
  char v24;

  v1 = v0;
  sub_10009922C(v0 + 16, (uint64_t)v22, 1);
  v2 = *(void **)(v0 + 16);
  v3 = *(void (**)(_QWORD *__return_ptr, _QWORD *))(v0 + 32);
  if (*(_BYTE *)(v0 + 57))
  {
    if (*(_BYTE *)(v0 + 57) == 1)
      return *(id *)(v0 + 40);
    else
      return v2;
  }
  else
  {
    swift_retain();
    v5 = sub_1000C3528();
    ((void (*)(_QWORD *__return_ptr, double))v2)(v20, v5);
    v3(v23, v20);
    sub_1000B439C();
    sub_10009925C();
    v6 = v20[1];
    v7 = v21;
    v8 = (void *)v23[0];
    v9 = v23[1];
    v10 = v24;
    v11 = *(void **)(v1 + 16);
    v12 = *(_QWORD *)(v1 + 24);
    v13 = *(_QWORD *)(v1 + 32);
    v14 = *(void **)(v1 + 40);
    v15 = *(_QWORD *)(v1 + 48);
    *(_QWORD *)(v1 + 16) = v20[0];
    *(_QWORD *)(v1 + 24) = v6;
    *(_QWORD *)(v1 + 32) = v7;
    *(_QWORD *)(v1 + 40) = v8;
    *(_QWORD *)(v1 + 48) = v9;
    v16 = *(unsigned __int8 *)(v1 + 56);
    *(_BYTE *)(v1 + 56) = v10;
    v17 = *(_BYTE *)(v1 + 57);
    *(_BYTE *)(v1 + 57) = 1;
    v18 = v8;
    sub_10019E598(v11, v12, v13, v14, v15, v16, v17);
  }
  return v18;
}

void sub_10017B384()
{
  sub_10017B048();
}

void sub_10017B3A8()
{
  sub_10017B048();
}

void sub_10017B3CC(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  char v20;
  void (*v21)(_OWORD *);
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  __int128 v26;
  _BYTE v27[24];
  _OWORD v28[3];
  uint64_t v29;
  char v30;
  char v31;
  _BYTE v32[24];

  v5 = sub_10009BE2C();
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_1000BBB38();
  __chkstk_darwin(v7);
  sub_1000CDE94();
  v9 = v1 + v8;
  sub_10009922C(v1 + v8, (uint64_t)v32, 0);
  sub_10011DC5C(v9);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v3, v5);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v12 = sub_1000BA294(&qword_100BC44A0);
      sub_1000FC5D8(v3 + *(int *)(v12 + 48), v13, type metadata accessor for UnitsConfigurationViewModel);
      v14 = *(void **)(v3 + 8);
      v15 = *(void **)(v3 + 16);
      v16 = *(void **)(v3 + 24);
      v17 = *(void **)(v3 + 32);
      v18 = *(void **)(v3 + 40);
      v19 = *(_QWORD *)(v3 + 48);
      v20 = *(_BYTE *)(v3 + 56);

      sub_10019D680(v19, v20);
    }
    else
    {
      sub_1000FC5D8(v3, v11, type metadata accessor for UnitsConfigurationViewModel);
    }
  }
  else
  {
    v21 = *(void (**)(_OWORD *))(v3 + 16);
    (*(void (**)(_OWORD *__return_ptr))v3)(v28);
    v21(v28);
    sub_1000C5AE8();
    sub_1000D1C1C();
    v22 = v2 + *(int *)(sub_1000BA294(&qword_100BC44A0) + 48);
    v23 = v29;
    v24 = v30;
    v25 = v31;
    v26 = v28[1];
    *(_OWORD *)v2 = v28[0];
    *(_OWORD *)(v2 + 16) = v26;
    *(_OWORD *)(v2 + 32) = v28[2];
    *(_QWORD *)(v2 + 48) = v23;
    *(_BYTE *)(v2 + 56) = v24;
    *(_BYTE *)(v2 + 57) = v25;
    sub_100080C0C(a1, v22, type metadata accessor for UnitsConfigurationViewModel);
    sub_10009525C(v2, v5);
    sub_10009922C(v9, (uint64_t)v27, 33);
    sub_1000A3908(v2, v9, &qword_100BC4490);
    swift_endAccess(v27);
  }
}

void sub_10017B590()
{
  sub_10017B048();
}

uint64_t sub_10017B5B4()
{
  uint64_t v0;
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  unsigned __int8 *v14;
  unsigned int v15;
  int v16;
  int v17;
  int v18;
  void (*v19)(uint64_t *__return_ptr, _BYTE *);
  _BYTE *v20;
  uint64_t v21;
  int v22;
  _BYTE v25[24];
  _BYTE v26[28];
  uint64_t v27;

  type metadata accessor for NotificationsOptInInput(0);
  sub_1000B42B0();
  __chkstk_darwin(v2);
  v4 = &v25[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = sub_10009BE2C();
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_10009883C();
  v9 = v7 - v8;
  __chkstk_darwin(v10);
  sub_1000CDE94();
  v12 = v0 + v11;
  sub_10009922C(v0 + v11, (uint64_t)v26, 0);
  sub_10011DC5C(v12);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v1, v5);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v14 = &v1[*(int *)(sub_1000BA294(&qword_100BC4740) + 48)];
      v15 = *v14;
      v16 = v14[1];
      v17 = v14[2];
      v18 = v14[3];
      sub_1000215BC((uint64_t)v1, type metadata accessor for NotificationsOptInInput);
    }
    else
    {
      v15 = *v1;
      v16 = v1[1];
      v17 = v1[2];
      v18 = v1[3];
    }
  }
  else
  {
    v19 = (void (*)(uint64_t *__return_ptr, _BYTE *))*((_QWORD *)v1 + 2);
    (*(void (**)(void))v1)();
    v19(&v27, v4);
    sub_1000C5AE8();
    sub_1000D1C1C();
    v20 = (_BYTE *)(v9 + *(int *)(sub_1000BA294(&qword_100BC4740) + 48));
    sub_1000FC5D8((uint64_t)v4, v21, type metadata accessor for NotificationsOptInInput);
    v15 = v27;
    v16 = BYTE1(v27);
    v17 = BYTE2(v27);
    v18 = BYTE3(v27);
    *v20 = v27;
    v20[1] = v16;
    v20[2] = v17;
    v20[3] = v18;
    sub_10009525C(v9, v5);
    sub_10009922C(v12, (uint64_t)v25, 33);
    sub_1000A3908(v9, v12, &qword_100BC4728);
    swift_endAccess(v25);
  }
  if (v17)
    v22 = 0x10000;
  else
    v22 = 0;
  return v22 | (v18 << 24) | (v16 << 8) | v15;
}

uint64_t sub_10017B798()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t *__return_ptr, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(__n128);
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v17;
  uint64_t v18;

  v1 = v0;
  v2 = (_BYTE *)(v0 + 16);
  swift_beginAccess(v2, &v17, 1, 0);
  v3 = *(unsigned __int8 *)(v1 + 16);
  if (*(_BYTE *)(v1 + 48))
  {
    if (*(_BYTE *)(v1 + 48) == 1)
      return v3 & 1;
    else
      return *v2 & 1;
  }
  else
  {
    v6 = *(void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 32);
    v5 = *(_QWORD *)(v1 + 40);
    v7 = *(_QWORD *)(v1 + 24);
    v8 = (uint64_t (*)(__n128))(((unint64_t)*(unsigned int *)(v1 + 17) << 8) | ((unint64_t)(*(unsigned __int16 *)(v1 + 21) | (*(unsigned __int8 *)(v1 + 23) << 16)) << 40) | v3);
    swift_retain();
    v9 = swift_retain();
    v10 = v8(v9);
    v6(&v18, v10);
    swift_release(v5);
    swift_release(v7);
    v4 = v18;
    v11 = *(_QWORD *)(v1 + 16);
    v12 = *(_QWORD *)(v1 + 24);
    v13 = *(_QWORD *)(v1 + 32);
    v14 = *(_QWORD *)(v1 + 40);
    *(_QWORD *)(v1 + 16) = v18;
    *(_QWORD *)(v1 + 24) = 0;
    *(_QWORD *)(v1 + 32) = 0;
    *(_QWORD *)(v1 + 40) = 0;
    v15 = *(_BYTE *)(v1 + 48);
    *(_BYTE *)(v1 + 48) = 1;
    sub_10019D9DC(v11, v12, v13, v14, v15);
  }
  return v4;
}

void sub_10017B894(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t *__return_ptr, double);
  double v29;
  __int128 v30;
  uint64_t v31;
  __int16 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __n128 v72;
  uint64_t v73;
  uint64_t v74[3];
  uint64_t v75;
  uint64_t v76;
  _BYTE v77[24];

  v5 = v1;
  sub_10009922C(v1 + 16, (uint64_t)v77, 1);
  v7 = *(_QWORD *)(v1 + 24);
  v9 = *(_QWORD *)(v1 + 32);
  v8 = *(_QWORD *)(v1 + 40);
  if (*(_BYTE *)(v1 + 121))
  {
    sub_100079F88();
    v18 = *(_QWORD *)(v1 + 112);
    if (v19 == 1)
    {
      v20 = *(_BYTE *)(v1 + 120);
      sub_1000B2520(v10, v11, v12, v13, v14, v15, v16, v17);
      *(_QWORD *)(a1 + 80) = v4;
      *(_QWORD *)(a1 + 88) = v18;
      *(_BYTE *)(a1 + 96) = v20;
      v75 = v21;
      v73 = v22;
      v70 = v23;
      v71 = v24;
      swift_retain();
      v25 = sub_1000C00AC();
      sub_10019E0F8(v25, v26, v27, v70, v71, v73, v75, v1, v68, v69, v4, v18, v20);
      sub_100089020();
    }
    else
    {
      *(_QWORD *)a1 = v10;
      *(_QWORD *)(a1 + 8) = v7;
      sub_1000F406C(v10, v11, v12, v13, v14, v15, v16, v17);
      *(_BYTE *)(a1 + 96) = v18;
      sub_10019E0F8(v63, v7, v9, v8, v64, v65, v66, v67, v1, v2, v3, v4, v18);
    }
  }
  else
  {
    v28 = *(void (**)(uint64_t *__return_ptr, double))(v1 + 16);
    sub_1000C3528();
    v29 = sub_1000C12B0();
    v28(&v76, v29);
    sub_1000ED3D8();
    sub_1000C5AE8();
    sub_1000B439C();
    sub_1000DC668();
    v72 = sub_1000DC104();
    *(_OWORD *)v74 = v30;
    v31 = *(_QWORD *)(v1 + 112);
    v32 = *(_WORD *)(v1 + 120);
    v42 = sub_1000DC870(v33, v34, v35, v36, v37, v38, v39, v40, v41);
    *(_BYTE *)(v5 + 120) = v43;
    *(_BYTE *)(v5 + 121) = 1;
    sub_10019E0F8(v42, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54, v43);
    sub_10009D9B0();
    sub_10019DECC(v55, v56, v57, v58, v59, v60, v61, v62, v74[0], v74[1], v72.n128_i64[0], v72.n128_i64[1], v31, v32, SHIBYTE(v32));
  }
}

void sub_10017BA10()
{
  sub_10017B048();
}

void sub_10017BA34()
{
  sub_10017B048();
}

void sub_10017BA58()
{
  sub_10017B048();
}

void sub_10017BA7C()
{
  sub_10017B048();
}

void sub_10017BAA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  char *v14;
  char v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  void (*v19)(char *);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  sub_1000986AC();
  v3 = v2;
  type metadata accessor for NotificationSettingsInput(0);
  sub_1000B42B0();
  __chkstk_darwin(v4);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000BA294(&qword_100BC48A0);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_1000BBB38();
  __chkstk_darwin(v9);
  v11 = (char *)&v38 - v10;
  v12 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 120);
  sub_10009922C(v12, (uint64_t)&v47, 0);
  sub_100037768(v12, (uint64_t)v11, &qword_100BC48A0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v11, v7);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v14 = &v11[*(int *)(sub_1000BA294(&qword_100BC48B8) + 48)];
      v15 = v14[96];
      v16 = *((_OWORD *)v14 + 1);
      *(_OWORD *)v3 = *(_OWORD *)v14;
      *(_OWORD *)(v3 + 16) = v16;
      v17 = *((_OWORD *)v14 + 3);
      *(_OWORD *)(v3 + 32) = *((_OWORD *)v14 + 2);
      *(_OWORD *)(v3 + 48) = v17;
      v18 = *((_OWORD *)v14 + 5);
      *(_OWORD *)(v3 + 64) = *((_OWORD *)v14 + 4);
      *(_OWORD *)(v3 + 80) = v18;
      *(_BYTE *)(v3 + 96) = v15;
      sub_1000215BC((uint64_t)v11, type metadata accessor for NotificationSettingsInput);
    }
    else
    {
      v34 = v11[96];
      v35 = *((_OWORD *)v11 + 1);
      *(_OWORD *)v3 = *(_OWORD *)v11;
      *(_OWORD *)(v3 + 16) = v35;
      v36 = *((_OWORD *)v11 + 3);
      *(_OWORD *)(v3 + 32) = *((_OWORD *)v11 + 2);
      *(_OWORD *)(v3 + 48) = v36;
      v37 = *((_OWORD *)v11 + 5);
      *(_OWORD *)(v3 + 64) = *((_OWORD *)v11 + 4);
      *(_OWORD *)(v3 + 80) = v37;
      *(_BYTE *)(v3 + 96) = v34;
    }
  }
  else
  {
    v19 = (void (*)(char *))*((_QWORD *)v11 + 2);
    (*(void (**)(void))v11)();
    v19(v6);
    sub_1000D1C1C();
    sub_10009D338();
    v20 = v1 + *(int *)(sub_1000BA294(&qword_100BC48B8) + 48);
    sub_10007802C((uint64_t)v6, v1, type metadata accessor for NotificationSettingsInput);
    v21 = *(_QWORD *)v3;
    v44 = *(_QWORD *)(v3 + 8);
    v22 = v44;
    v45 = v21;
    v23 = *(_QWORD *)(v3 + 16);
    v42 = *(_QWORD *)(v3 + 24);
    v24 = v42;
    v43 = v23;
    v25 = *(_QWORD *)(v3 + 32);
    v26 = *(_QWORD *)(v3 + 40);
    v28 = *(_QWORD *)(v3 + 56);
    v40 = *(_QWORD *)(v3 + 48);
    v27 = v40;
    v41 = v25;
    v39 = v28;
    v29 = *(_QWORD *)(v3 + 64);
    v30 = *(_QWORD *)(v3 + 72);
    v31 = *(_QWORD *)(v3 + 80);
    v32 = *(_QWORD *)(v3 + 88);
    v33 = *(_BYTE *)(v3 + 96);
    *(_QWORD *)v20 = v21;
    *(_QWORD *)(v20 + 8) = v22;
    *(_QWORD *)(v20 + 16) = v23;
    *(_QWORD *)(v20 + 24) = v24;
    *(_QWORD *)(v20 + 32) = v25;
    *(_QWORD *)(v20 + 40) = v26;
    *(_QWORD *)(v20 + 48) = v27;
    *(_QWORD *)(v20 + 56) = v28;
    *(_QWORD *)(v20 + 64) = v29;
    *(_QWORD *)(v20 + 72) = v30;
    *(_QWORD *)(v20 + 80) = v31;
    *(_QWORD *)(v20 + 88) = v32;
    *(_BYTE *)(v20 + 96) = v33;
    sub_10009525C(v1, v7);
    sub_10009922C(v12, (uint64_t)&v46, 33);
    sub_10019E9F4(v45, v44, v43, v42, v41, v26, v40, v39, v29, v30, v31, v32, v33);
    sub_1000A3908(v1, v12, &qword_100BC48A0);
    sub_1000B30A0();
  }
  sub_100098640();
}

void sub_10017BCE0()
{
  sub_10017B048();
}

void sub_10017BD04()
{
  sub_10017B048();
}

void sub_10017BD28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t aBlock[5];
  _QWORD *v27;

  v4 = v3;
  v7 = UnsafeMutableRawPointer.hashValue.getter();
  v8 = v3 + 16;
  swift_beginAccess(v3 + 16, aBlock, 32, 0);
  v9 = *(_QWORD *)(v3 + 16);
  if (*(_QWORD *)(v9 + 16) && (v10 = sub_1000BFD34(v7), (v11 & 1) != 0))
    v12 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v10);
  else
    v12 = 0;
  swift_endAccess(aBlock);
  v13 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess(v8, aBlock, 33, 0);
    sub_10016D6E4();
    swift_endAccess(aBlock);
    if (qword_100BC2490 == -1)
      goto LABEL_7;
  }
  swift_once(&qword_100BC2490, sub_100159750);
LABEL_7:
  v14 = type metadata accessor for Logger(0);
  v15 = sub_1000AECD4(v14, (uint64_t)qword_100CAF198);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc(42, -1);
    v24 = swift_slowAlloc(96, -1);
    aBlock[0] = v24;
    *(_DWORD *)v18 = 136315906;
    v25 = sub_1000CE1C8(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 12) = 2080;
    v25 = sub_1000CE1C8(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 22) = 2080;
    v25 = sub_1000CE1C8(0xD000000000000019, 0x80000001009F1240, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 32) = 2048;
    v25 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Processing state update. Selector=<%s, %s, %s>, Count=%ld", (uint8_t *)v18, 0x2Au);
    swift_arrayDestroy(v24, 3);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v18, -1, -1);
  }

  v19 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v20 = swift_allocObject(&unk_100B5D448, 24, 7);
  swift_weakInit(v20 + 16, v4);
  v21 = (_QWORD *)swift_allocObject(&unk_100B5D470, 56, 7);
  v21[2] = v20;
  v21[3] = v7;
  v21[4] = v13;
  v21[5] = a2;
  v21[6] = a3;
  aBlock[4] = (uint64_t)sub_10019CFE4;
  v27 = v21;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100121D84;
  aBlock[3] = (uint64_t)&unk_100B5D488;
  v22 = _Block_copy(aBlock);
  v23 = v27;
  swift_retain();
  objc_msgSend(v19, "installCACommitCompletionBlock:", v22, swift_release(v23).n128_f64[0]);
  _Block_release(v22);

}

void sub_10017C0BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t aBlock[5];
  _QWORD *v27;

  v4 = v3;
  v7 = UnsafeMutableRawPointer.hashValue.getter();
  v8 = v3 + 16;
  swift_beginAccess(v3 + 16, aBlock, 32, 0);
  v9 = *(_QWORD *)(v3 + 16);
  if (*(_QWORD *)(v9 + 16) && (v10 = sub_1000BFD34(v7), (v11 & 1) != 0))
    v12 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v10);
  else
    v12 = 0;
  swift_endAccess(aBlock);
  v13 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess(v8, aBlock, 33, 0);
    sub_10016D6E4();
    swift_endAccess(aBlock);
    if (qword_100BC2490 == -1)
      goto LABEL_7;
  }
  swift_once(&qword_100BC2490, sub_100159750);
LABEL_7:
  v14 = type metadata accessor for Logger(0);
  v15 = sub_1000AECD4(v14, (uint64_t)qword_100CAF198);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc(42, -1);
    v24 = swift_slowAlloc(96, -1);
    aBlock[0] = v24;
    *(_DWORD *)v18 = 136315906;
    v25 = sub_1000CE1C8(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 12) = 2080;
    v25 = sub_1000CE1C8(0x617465446E6F6F4DLL, 0xEF7475706E496C69, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 22) = 2080;
    v25 = sub_1000CE1C8(0xD000000000000013, 0x80000001009F1330, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 32) = 2048;
    v25 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Processing state update. Selector=<%s, %s, %s>, Count=%ld", (uint8_t *)v18, 0x2Au);
    swift_arrayDestroy(v24, 3);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v18, -1, -1);
  }

  v19 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v20 = swift_allocObject(&unk_100B5D448, 24, 7);
  swift_weakInit(v20 + 16, v4);
  v21 = (_QWORD *)swift_allocObject(&unk_100B5D600, 56, 7);
  v21[2] = v20;
  v21[3] = v7;
  v21[4] = v13;
  v21[5] = a2;
  v21[6] = a3;
  aBlock[4] = (uint64_t)sub_10019D08C;
  v27 = v21;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100121D84;
  aBlock[3] = (uint64_t)&unk_100B5D618;
  v22 = _Block_copy(aBlock);
  v23 = v27;
  swift_retain();
  objc_msgSend(v19, "installCACommitCompletionBlock:", v22, swift_release(v23).n128_f64[0]);
  _Block_release(v22);

}

void sub_10017C458(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  void *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t aBlock[5];
  _QWORD *v26;

  v6 = UnsafeMutableRawPointer.hashValue.getter();
  v7 = v3 + 16;
  swift_beginAccess(v3 + 16, aBlock, 32, 0);
  v8 = *(_QWORD *)(v3 + 16);
  if (*(_QWORD *)(v8 + 16) && (v9 = sub_1000BFD34(v6), (v10 & 1) != 0))
    v11 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v9);
  else
    v11 = 0;
  swift_endAccess(aBlock);
  v12 = v11 + 1;
  if (__OFADD__(v11, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess(v7, aBlock, 33, 0);
    sub_10016D6E4();
    swift_endAccess(aBlock);
    if (qword_100BC2490 == -1)
      goto LABEL_7;
  }
  swift_once(&qword_100BC2490, sub_100159750);
LABEL_7:
  v13 = type metadata accessor for Logger(0);
  v14 = sub_1000AECD4(v13, (uint64_t)qword_100CAF198);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc(42, -1);
    v23 = swift_slowAlloc(96, -1);
    aBlock[0] = v23;
    *(_DWORD *)v17 = 136315906;
    v24 = sub_1000CE1C8(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, aBlock);
    *(_WORD *)(v17 + 12) = 2080;
    v24 = sub_1000CE1C8(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, aBlock);
    *(_WORD *)(v17 + 22) = 2080;
    v24 = sub_1000CE1C8(0xD000000000000016, 0x80000001009F1350, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, aBlock);
    *(_WORD *)(v17 + 32) = 2048;
    v24 = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, aBlock);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Processing state update. Selector=<%s, %s, %s>, Count=%ld", (uint8_t *)v17, 0x2Au);
    swift_arrayDestroy(v23, 3);
    swift_slowDealloc(v23, -1, -1);
    swift_slowDealloc(v17, -1, -1);
  }

  v18 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v19 = swift_allocObject(&unk_100B5D448, 24, 7);
  swift_weakInit(v19 + 16);
  v20 = (_QWORD *)swift_allocObject(&unk_100B5D768, 56, 7);
  v20[2] = v19;
  v20[3] = v6;
  v20[4] = v12;
  v20[5] = a2;
  v20[6] = a3;
  aBlock[4] = (uint64_t)sub_10019D164;
  v26 = v20;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100121D84;
  aBlock[3] = (uint64_t)&unk_100B5D780;
  v21 = _Block_copy(aBlock);
  v22 = v26;
  swift_retain();
  objc_msgSend(v18, "installCACommitCompletionBlock:", v21, swift_release(v22).n128_f64[0]);
  _Block_release(v21);

}

void sub_10017C7EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t aBlock[5];
  _QWORD *v27;

  v4 = v3;
  v7 = UnsafeMutableRawPointer.hashValue.getter();
  v8 = v3 + 16;
  swift_beginAccess(v3 + 16, aBlock, 32, 0);
  v9 = *(_QWORD *)(v3 + 16);
  if (*(_QWORD *)(v9 + 16) && (v10 = sub_1000BFD34(v7), (v11 & 1) != 0))
    v12 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v10);
  else
    v12 = 0;
  swift_endAccess(aBlock);
  v13 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess(v8, aBlock, 33, 0);
    sub_10016D6E4();
    swift_endAccess(aBlock);
    if (qword_100BC2490 == -1)
      goto LABEL_7;
  }
  swift_once(&qword_100BC2490, sub_100159750);
LABEL_7:
  v14 = type metadata accessor for Logger(0);
  v15 = sub_1000AECD4(v14, (uint64_t)qword_100CAF198);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc(42, -1);
    v24 = swift_slowAlloc(96, -1);
    aBlock[0] = v24;
    *(_DWORD *)v18 = 136315906;
    v25 = sub_1000CE1C8(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 12) = 2080;
    v25 = sub_1000CE1C8(0xD000000000000014, 0x80000001009F1370, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 22) = 2080;
    v25 = sub_1000CE1C8(0xD000000000000018, 0x80000001009F1390, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 32) = 2048;
    v25 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Processing state update. Selector=<%s, %s, %s>, Count=%ld", (uint8_t *)v18, 0x2Au);
    swift_arrayDestroy(v24, 3);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v18, -1, -1);
  }

  v19 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v20 = swift_allocObject(&unk_100B5D448, 24, 7);
  swift_weakInit(v20 + 16, v4);
  v21 = (_QWORD *)swift_allocObject(&unk_100B5D8D0, 56, 7);
  v21[2] = v20;
  v21[3] = v7;
  v21[4] = v13;
  v21[5] = a2;
  v21[6] = a3;
  aBlock[4] = (uint64_t)sub_10019D450;
  v27 = v21;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100121D84;
  aBlock[3] = (uint64_t)&unk_100B5D8E8;
  v22 = _Block_copy(aBlock);
  v23 = v27;
  swift_retain();
  objc_msgSend(v19, "installCACommitCompletionBlock:", v22, swift_release(v23).n128_f64[0]);
  _Block_release(v22);

}

void sub_10017CB84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t aBlock[5];
  _QWORD *v27;

  v4 = v3;
  v7 = UnsafeMutableRawPointer.hashValue.getter();
  v8 = v3 + 16;
  swift_beginAccess(v3 + 16, aBlock, 32, 0);
  v9 = *(_QWORD *)(v3 + 16);
  if (*(_QWORD *)(v9 + 16) && (v10 = sub_1000BFD34(v7), (v11 & 1) != 0))
    v12 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v10);
  else
    v12 = 0;
  swift_endAccess(aBlock);
  v13 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess(v8, aBlock, 33, 0);
    sub_10016D6E4();
    swift_endAccess(aBlock);
    if (qword_100BC2490 == -1)
      goto LABEL_7;
  }
  swift_once(&qword_100BC2490, sub_100159750);
LABEL_7:
  v14 = type metadata accessor for Logger(0);
  v15 = sub_1000AECD4(v14, (uint64_t)qword_100CAF198);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc(42, -1);
    v24 = swift_slowAlloc(96, -1);
    aBlock[0] = v24;
    *(_DWORD *)v18 = 136315906;
    v25 = sub_1000CE1C8(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 12) = 2080;
    v25 = sub_1000CE1C8(0xD000000000000017, 0x80000001009F13B0, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 22) = 2080;
    v25 = sub_1000CE1C8(0xD00000000000001BLL, 0x80000001009F13D0, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 32) = 2048;
    v25 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Processing state update. Selector=<%s, %s, %s>, Count=%ld", (uint8_t *)v18, 0x2Au);
    swift_arrayDestroy(v24, 3);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v18, -1, -1);
  }

  v19 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v20 = swift_allocObject(&unk_100B5D448, 24, 7);
  swift_weakInit(v20 + 16, v4);
  v21 = (_QWORD *)swift_allocObject(&unk_100B5DA38, 56, 7);
  v21[2] = v20;
  v21[3] = v7;
  v21[4] = v13;
  v21[5] = a2;
  v21[6] = a3;
  aBlock[4] = (uint64_t)sub_10019D51C;
  v27 = v21;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100121D84;
  aBlock[3] = (uint64_t)&unk_100B5DA50;
  v22 = _Block_copy(aBlock);
  v23 = v27;
  swift_retain();
  objc_msgSend(v19, "installCACommitCompletionBlock:", v22, swift_release(v23).n128_f64[0]);
  _Block_release(v22);

}

void sub_10017CF1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t aBlock[5];
  _QWORD *v27;

  v4 = v3;
  v7 = UnsafeMutableRawPointer.hashValue.getter();
  v8 = v3 + 16;
  swift_beginAccess(v3 + 16, aBlock, 32, 0);
  v9 = *(_QWORD *)(v3 + 16);
  if (*(_QWORD *)(v9 + 16) && (v10 = sub_1000BFD34(v7), (v11 & 1) != 0))
    v12 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v10);
  else
    v12 = 0;
  swift_endAccess(aBlock);
  v13 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess(v8, aBlock, 33, 0);
    sub_10016D6E4();
    swift_endAccess(aBlock);
    if (qword_100BC2490 == -1)
      goto LABEL_7;
  }
  swift_once(&qword_100BC2490, sub_100159750);
LABEL_7:
  v14 = type metadata accessor for Logger(0);
  v15 = sub_1000AECD4(v14, (uint64_t)qword_100CAF198);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc(42, -1);
    v24 = swift_slowAlloc(96, -1);
    aBlock[0] = v24;
    *(_DWORD *)v18 = 136315906;
    v25 = sub_1000CE1C8(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 12) = 2080;
    v25 = sub_1000CE1C8(0x656B636950796144, 0xEE007475706E4972, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 22) = 2080;
    v25 = sub_1000CE1C8(0xD000000000000012, 0x80000001009F13F0, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 32) = 2048;
    v25 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Processing state update. Selector=<%s, %s, %s>, Count=%ld", (uint8_t *)v18, 0x2Au);
    swift_arrayDestroy(v24, 3);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v18, -1, -1);
  }

  v19 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v20 = swift_allocObject(&unk_100B5D448, 24, 7);
  swift_weakInit(v20 + 16, v4);
  v21 = (_QWORD *)swift_allocObject(&unk_100B5DBA0, 56, 7);
  v21[2] = v20;
  v21[3] = v7;
  v21[4] = v13;
  v21[5] = a2;
  v21[6] = a3;
  aBlock[4] = (uint64_t)sub_10019D758;
  v27 = v21;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100121D84;
  aBlock[3] = (uint64_t)&unk_100B5DBB8;
  v22 = _Block_copy(aBlock);
  v23 = v27;
  swift_retain();
  objc_msgSend(v19, "installCACommitCompletionBlock:", v22, swift_release(v23).n128_f64[0]);
  _Block_release(v22);

}

void sub_10017D2B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t aBlock[5];
  _QWORD *v27;

  v4 = v3;
  v7 = UnsafeMutableRawPointer.hashValue.getter();
  v8 = v3 + 16;
  swift_beginAccess(v3 + 16, aBlock, 32, 0);
  v9 = *(_QWORD *)(v3 + 16);
  if (*(_QWORD *)(v9 + 16) && (v10 = sub_1000BFD34(v7), (v11 & 1) != 0))
    v12 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v10);
  else
    v12 = 0;
  swift_endAccess(aBlock);
  v13 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess(v8, aBlock, 33, 0);
    sub_10016D6E4();
    swift_endAccess(aBlock);
    if (qword_100BC2490 == -1)
      goto LABEL_7;
  }
  swift_once(&qword_100BC2490, sub_100159750);
LABEL_7:
  v14 = type metadata accessor for Logger(0);
  v15 = sub_1000AECD4(v14, (uint64_t)qword_100CAF198);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc(42, -1);
    v24 = swift_slowAlloc(96, -1);
    aBlock[0] = v24;
    *(_DWORD *)v18 = 136315906;
    v25 = sub_1000CE1C8(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 12) = 2080;
    v25 = sub_1000CE1C8(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 22) = 2080;
    v25 = sub_1000CE1C8(0xD000000000000010, 0x80000001009F1410, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 32) = 2048;
    v25 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Processing state update. Selector=<%s, %s, %s>, Count=%ld", (uint8_t *)v18, 0x2Au);
    swift_arrayDestroy(v24, 3);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v18, -1, -1);
  }

  v19 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v20 = swift_allocObject(&unk_100B5D448, 24, 7);
  swift_weakInit(v20 + 16, v4);
  v21 = (_QWORD *)swift_allocObject(&unk_100B5DD08, 56, 7);
  v21[2] = v20;
  v21[3] = v7;
  v21[4] = v13;
  v21[5] = a2;
  v21[6] = a3;
  aBlock[4] = (uint64_t)sub_10019D868;
  v27 = v21;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100121D84;
  aBlock[3] = (uint64_t)&unk_100B5DD20;
  v22 = _Block_copy(aBlock);
  v23 = v27;
  swift_retain();
  objc_msgSend(v19, "installCACommitCompletionBlock:", v22, swift_release(v23).n128_f64[0]);
  _Block_release(v22);

}

void sub_10017D64C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  void *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t aBlock[5];
  _QWORD *v26;

  v6 = UnsafeMutableRawPointer.hashValue.getter();
  v7 = v3 + 16;
  swift_beginAccess(v3 + 16, aBlock, 32, 0);
  v8 = *(_QWORD *)(v3 + 16);
  if (*(_QWORD *)(v8 + 16) && (v9 = sub_1000BFD34(v6), (v10 & 1) != 0))
    v11 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v9);
  else
    v11 = 0;
  swift_endAccess(aBlock);
  v12 = v11 + 1;
  if (__OFADD__(v11, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess(v7, aBlock, 33, 0);
    sub_10016D6E4();
    swift_endAccess(aBlock);
    if (qword_100BC2490 == -1)
      goto LABEL_7;
  }
  swift_once(&qword_100BC2490, sub_100159750);
LABEL_7:
  v13 = type metadata accessor for Logger(0);
  v14 = sub_1000AECD4(v13, (uint64_t)qword_100CAF198);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc(42, -1);
    v23 = swift_slowAlloc(96, -1);
    aBlock[0] = v23;
    *(_DWORD *)v17 = 136315906;
    v24 = sub_1000CE1C8(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, aBlock);
    *(_WORD *)(v17 + 12) = 2080;
    v24 = sub_1000CE1C8(0xD000000000000010, 0x80000001009F1430, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, aBlock);
    *(_WORD *)(v17 + 22) = 2080;
    v24 = sub_1000CE1C8(0xD000000000000014, 0x80000001009F1450, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, aBlock);
    *(_WORD *)(v17 + 32) = 2048;
    v24 = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, aBlock);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Processing state update. Selector=<%s, %s, %s>, Count=%ld", (uint8_t *)v17, 0x2Au);
    swift_arrayDestroy(v23, 3);
    swift_slowDealloc(v23, -1, -1);
    swift_slowDealloc(v17, -1, -1);
  }

  v18 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v19 = swift_allocObject(&unk_100B5D448, 24, 7);
  swift_weakInit(v19 + 16);
  v20 = (_QWORD *)swift_allocObject(&unk_100B5DE70, 56, 7);
  v20[2] = v19;
  v20[3] = v6;
  v20[4] = v12;
  v20[5] = a2;
  v20[6] = a3;
  aBlock[4] = (uint64_t)sub_10019D8E8;
  v26 = v20;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100121D84;
  aBlock[3] = (uint64_t)&unk_100B5DE88;
  v21 = _Block_copy(aBlock);
  v22 = v26;
  swift_retain();
  objc_msgSend(v18, "installCACommitCompletionBlock:", v21, swift_release(v22).n128_f64[0]);
  _Block_release(v21);

}

void sub_10017D9E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  void *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t aBlock[5];
  _QWORD *v26;

  v6 = UnsafeMutableRawPointer.hashValue.getter();
  v7 = v3 + 16;
  swift_beginAccess(v3 + 16, aBlock, 32, 0);
  v8 = *(_QWORD *)(v3 + 16);
  if (*(_QWORD *)(v8 + 16) && (v9 = sub_1000BFD34(v6), (v10 & 1) != 0))
    v11 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v9);
  else
    v11 = 0;
  swift_endAccess(aBlock);
  v12 = v11 + 1;
  if (__OFADD__(v11, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess(v7, aBlock, 33, 0);
    sub_10016D6E4();
    swift_endAccess(aBlock);
    if (qword_100BC2490 == -1)
      goto LABEL_7;
  }
  swift_once(&qword_100BC2490, sub_100159750);
LABEL_7:
  v13 = type metadata accessor for Logger(0);
  v14 = sub_1000AECD4(v13, (uint64_t)qword_100CAF198);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc(42, -1);
    v23 = swift_slowAlloc(96, -1);
    aBlock[0] = v23;
    *(_DWORD *)v17 = 136315906;
    v24 = sub_1000CE1C8(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, aBlock);
    *(_WORD *)(v17 + 12) = 2080;
    v24 = sub_1000CE1C8(0xD000000000000019, 0x80000001009F1470, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, aBlock);
    *(_WORD *)(v17 + 22) = 2080;
    v24 = sub_1000CE1C8(0xD00000000000001DLL, 0x80000001009F1490, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, aBlock);
    *(_WORD *)(v17 + 32) = 2048;
    v24 = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, aBlock);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Processing state update. Selector=<%s, %s, %s>, Count=%ld", (uint8_t *)v17, 0x2Au);
    swift_arrayDestroy(v23, 3);
    swift_slowDealloc(v23, -1, -1);
    swift_slowDealloc(v17, -1, -1);
  }

  v18 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v19 = swift_allocObject(&unk_100B5D448, 24, 7);
  swift_weakInit(v19 + 16);
  v20 = (_QWORD *)swift_allocObject(&unk_100B5DFD8, 56, 7);
  v20[2] = v19;
  v20[3] = v6;
  v20[4] = v12;
  v20[5] = a2;
  v20[6] = a3;
  aBlock[4] = (uint64_t)sub_10019D994;
  v26 = v20;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100121D84;
  aBlock[3] = (uint64_t)&unk_100B5DFF0;
  v21 = _Block_copy(aBlock);
  v22 = v26;
  swift_retain();
  objc_msgSend(v18, "installCACommitCompletionBlock:", v21, swift_release(v22).n128_f64[0]);
  _Block_release(v21);

}

void sub_10017DD7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t aBlock[5];
  _QWORD *v27;

  v4 = v3;
  v7 = UnsafeMutableRawPointer.hashValue.getter();
  v8 = v3 + 16;
  swift_beginAccess(v3 + 16, aBlock, 32, 0);
  v9 = *(_QWORD *)(v3 + 16);
  if (*(_QWORD *)(v9 + 16) && (v10 = sub_1000BFD34(v7), (v11 & 1) != 0))
    v12 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v10);
  else
    v12 = 0;
  swift_endAccess(aBlock);
  v13 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess(v8, aBlock, 33, 0);
    sub_10016D6E4();
    swift_endAccess(aBlock);
    if (qword_100BC2490 == -1)
      goto LABEL_7;
  }
  swift_once(&qword_100BC2490, sub_100159750);
LABEL_7:
  v14 = type metadata accessor for Logger(0);
  v15 = sub_1000AECD4(v14, (uint64_t)qword_100CAF198);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc(42, -1);
    v24 = swift_slowAlloc(96, -1);
    aBlock[0] = v24;
    *(_DWORD *)v18 = 136315906;
    v25 = sub_1000CE1C8(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 12) = 2080;
    v25 = sub_1000CE1C8(0xD000000000000014, 0x80000001009F14B0, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 22) = 2080;
    v25 = sub_1000CE1C8(0xD000000000000018, 0x80000001009F14D0, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 32) = 2048;
    v25 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Processing state update. Selector=<%s, %s, %s>, Count=%ld", (uint8_t *)v18, 0x2Au);
    swift_arrayDestroy(v24, 3);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v18, -1, -1);
  }

  v19 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v20 = swift_allocObject(&unk_100B5D448, 24, 7);
  swift_weakInit(v20 + 16, v4);
  v21 = (_QWORD *)swift_allocObject(&unk_100B5E140, 56, 7);
  v21[2] = v20;
  v21[3] = v7;
  v21[4] = v13;
  v21[5] = a2;
  v21[6] = a3;
  aBlock[4] = (uint64_t)sub_10019DA5C;
  v27 = v21;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100121D84;
  aBlock[3] = (uint64_t)&unk_100B5E158;
  v22 = _Block_copy(aBlock);
  v23 = v27;
  swift_retain();
  objc_msgSend(v19, "installCACommitCompletionBlock:", v22, swift_release(v23).n128_f64[0]);
  _Block_release(v22);

}

void sub_10017E114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t aBlock[5];
  _QWORD *v27;

  v4 = v3;
  v7 = UnsafeMutableRawPointer.hashValue.getter();
  v8 = v3 + 16;
  swift_beginAccess(v3 + 16, aBlock, 32, 0);
  v9 = *(_QWORD *)(v3 + 16);
  if (*(_QWORD *)(v9 + 16) && (v10 = sub_1000BFD34(v7), (v11 & 1) != 0))
    v12 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v10);
  else
    v12 = 0;
  swift_endAccess(aBlock);
  v13 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess(v8, aBlock, 33, 0);
    sub_10016D6E4();
    swift_endAccess(aBlock);
    if (qword_100BC2490 == -1)
      goto LABEL_7;
  }
  swift_once(&qword_100BC2490, sub_100159750);
LABEL_7:
  v14 = type metadata accessor for Logger(0);
  v15 = sub_1000AECD4(v14, (uint64_t)qword_100CAF198);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc(42, -1);
    v24 = swift_slowAlloc(96, -1);
    aBlock[0] = v24;
    *(_DWORD *)v18 = 136315906;
    v25 = sub_1000CE1C8(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 12) = 2080;
    v25 = sub_1000CE1C8(0xD000000000000013, 0x80000001009F14F0, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 22) = 2080;
    v25 = sub_1000CE1C8(0xD000000000000017, 0x80000001009F1510, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 32) = 2048;
    v25 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Processing state update. Selector=<%s, %s, %s>, Count=%ld", (uint8_t *)v18, 0x2Au);
    swift_arrayDestroy(v24, 3);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v18, -1, -1);
  }

  v19 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v20 = swift_allocObject(&unk_100B5D448, 24, 7);
  swift_weakInit(v20 + 16, v4);
  v21 = (_QWORD *)swift_allocObject(&unk_100B5E2A8, 56, 7);
  v21[2] = v20;
  v21[3] = v7;
  v21[4] = v13;
  v21[5] = a2;
  v21[6] = a3;
  aBlock[4] = (uint64_t)sub_10019DAF0;
  v27 = v21;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100121D84;
  aBlock[3] = (uint64_t)&unk_100B5E2C0;
  v22 = _Block_copy(aBlock);
  v23 = v27;
  swift_retain();
  objc_msgSend(v19, "installCACommitCompletionBlock:", v22, swift_release(v23).n128_f64[0]);
  _Block_release(v22);

}

void sub_10017E4AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t aBlock[5];
  _QWORD *v27;

  v4 = v3;
  v7 = UnsafeMutableRawPointer.hashValue.getter();
  v8 = v3 + 16;
  swift_beginAccess(v3 + 16, aBlock, 32, 0);
  v9 = *(_QWORD *)(v3 + 16);
  if (*(_QWORD *)(v9 + 16) && (v10 = sub_1000BFD34(v7), (v11 & 1) != 0))
    v12 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v10);
  else
    v12 = 0;
  swift_endAccess(aBlock);
  v13 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess(v8, aBlock, 33, 0);
    sub_10016D6E4();
    swift_endAccess(aBlock);
    if (qword_100BC2490 == -1)
      goto LABEL_7;
  }
  swift_once(&qword_100BC2490, sub_100159750);
LABEL_7:
  v14 = type metadata accessor for Logger(0);
  v15 = sub_1000AECD4(v14, (uint64_t)qword_100CAF198);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc(42, -1);
    v24 = swift_slowAlloc(96, -1);
    aBlock[0] = v24;
    *(_DWORD *)v18 = 136315906;
    v25 = sub_1000CE1C8(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 12) = 2080;
    v25 = sub_1000CE1C8(0xD000000000000020, 0x80000001009F1530, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 22) = 2080;
    v25 = sub_1000CE1C8(0xD000000000000024, 0x80000001009F1560, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 32) = 2048;
    v25 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Processing state update. Selector=<%s, %s, %s>, Count=%ld", (uint8_t *)v18, 0x2Au);
    swift_arrayDestroy(v24, 3);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v18, -1, -1);
  }

  v19 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v20 = swift_allocObject(&unk_100B5D448, 24, 7);
  swift_weakInit(v20 + 16, v4);
  v21 = (_QWORD *)swift_allocObject(&unk_100B5E410, 56, 7);
  v21[2] = v20;
  v21[3] = v7;
  v21[4] = v13;
  v21[5] = a2;
  v21[6] = a3;
  aBlock[4] = (uint64_t)sub_10019DB84;
  v27 = v21;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100121D84;
  aBlock[3] = (uint64_t)&unk_100B5E428;
  v22 = _Block_copy(aBlock);
  v23 = v27;
  swift_retain();
  objc_msgSend(v19, "installCACommitCompletionBlock:", v22, swift_release(v23).n128_f64[0]);
  _Block_release(v22);

}

void sub_10017E844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t aBlock[5];
  _QWORD *v27;

  v4 = v3;
  v7 = UnsafeMutableRawPointer.hashValue.getter();
  v8 = v3 + 16;
  swift_beginAccess(v3 + 16, aBlock, 32, 0);
  v9 = *(_QWORD *)(v3 + 16);
  if (*(_QWORD *)(v9 + 16) && (v10 = sub_1000BFD34(v7), (v11 & 1) != 0))
    v12 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v10);
  else
    v12 = 0;
  swift_endAccess(aBlock);
  v13 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess(v8, aBlock, 33, 0);
    sub_10016D6E4();
    swift_endAccess(aBlock);
    if (qword_100BC2490 == -1)
      goto LABEL_7;
  }
  swift_once(&qword_100BC2490, sub_100159750);
LABEL_7:
  v14 = type metadata accessor for Logger(0);
  v15 = sub_1000AECD4(v14, (uint64_t)qword_100CAF198);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc(42, -1);
    v24 = swift_slowAlloc(96, -1);
    aBlock[0] = v24;
    *(_DWORD *)v18 = 136315906;
    v25 = sub_1000CE1C8(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 12) = 2080;
    v25 = sub_1000CE1C8(0x6E6F697461636F4CLL, 0xED00007475706E49, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 22) = 2080;
    v25 = sub_1000CE1C8(0xD000000000000011, 0x80000001009F15D0, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 32) = 2048;
    v25 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Processing state update. Selector=<%s, %s, %s>, Count=%ld", (uint8_t *)v18, 0x2Au);
    swift_arrayDestroy(v24, 3);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v18, -1, -1);
  }

  v19 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v20 = swift_allocObject(&unk_100B5D448, 24, 7);
  swift_weakInit(v20 + 16, v4);
  v21 = (_QWORD *)swift_allocObject(&unk_100B5E6E0, 56, 7);
  v21[2] = v20;
  v21[3] = v7;
  v21[4] = v13;
  v21[5] = a2;
  v21[6] = a3;
  aBlock[4] = (uint64_t)sub_10019DC40;
  v27 = v21;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100121D84;
  aBlock[3] = (uint64_t)&unk_100B5E6F8;
  v22 = _Block_copy(aBlock);
  v23 = v27;
  swift_retain();
  objc_msgSend(v19, "installCACommitCompletionBlock:", v22, swift_release(v23).n128_f64[0]);
  _Block_release(v22);

}

void sub_10017EBE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t aBlock[5];
  _QWORD *v27;

  v4 = v3;
  v7 = UnsafeMutableRawPointer.hashValue.getter();
  v8 = v3 + 16;
  swift_beginAccess(v3 + 16, aBlock, 32, 0);
  v9 = *(_QWORD *)(v3 + 16);
  if (*(_QWORD *)(v9 + 16) && (v10 = sub_1000BFD34(v7), (v11 & 1) != 0))
    v12 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v10);
  else
    v12 = 0;
  swift_endAccess(aBlock);
  v13 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess(v8, aBlock, 33, 0);
    sub_10016D6E4();
    swift_endAccess(aBlock);
    if (qword_100BC2490 == -1)
      goto LABEL_7;
  }
  swift_once(&qword_100BC2490, sub_100159750);
LABEL_7:
  v14 = type metadata accessor for Logger(0);
  v15 = sub_1000AECD4(v14, (uint64_t)qword_100CAF198);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc(42, -1);
    v24 = swift_slowAlloc(96, -1);
    aBlock[0] = v24;
    *(_DWORD *)v18 = 136315906;
    v25 = sub_1000CE1C8(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 12) = 2080;
    v25 = sub_1000CE1C8(0xD000000000000013, 0x80000001009F1590, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 22) = 2080;
    v25 = sub_1000CE1C8(0xD000000000000013, 0x80000001009F15B0, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 32) = 2048;
    v25 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Processing state update. Selector=<%s, %s, %s>, Count=%ld", (uint8_t *)v18, 0x2Au);
    swift_arrayDestroy(v24, 3);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v18, -1, -1);
  }

  v19 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v20 = swift_allocObject(&unk_100B5D448, 24, 7);
  swift_weakInit(v20 + 16, v4);
  v21 = (_QWORD *)swift_allocObject(&unk_100B5E578, 56, 7);
  v21[2] = v20;
  v21[3] = v7;
  v21[4] = v13;
  v21[5] = a2;
  v21[6] = a3;
  aBlock[4] = (uint64_t)sub_10019DBE0;
  v27 = v21;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100121D84;
  aBlock[3] = (uint64_t)&unk_100B5E590;
  v22 = _Block_copy(aBlock);
  v23 = v27;
  swift_retain();
  objc_msgSend(v19, "installCACommitCompletionBlock:", v22, swift_release(v23).n128_f64[0]);
  _Block_release(v22);

}

void sub_10017EF74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t aBlock[5];
  _QWORD *v27;

  v4 = v3;
  v7 = UnsafeMutableRawPointer.hashValue.getter();
  v8 = v3 + 16;
  swift_beginAccess(v3 + 16, aBlock, 32, 0);
  v9 = *(_QWORD *)(v3 + 16);
  if (*(_QWORD *)(v9 + 16) && (v10 = sub_1000BFD34(v7), (v11 & 1) != 0))
    v12 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v10);
  else
    v12 = 0;
  swift_endAccess(aBlock);
  v13 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess(v8, aBlock, 33, 0);
    sub_10016D6E4();
    swift_endAccess(aBlock);
    if (qword_100BC2490 == -1)
      goto LABEL_7;
  }
  swift_once(&qword_100BC2490, sub_100159750);
LABEL_7:
  v14 = type metadata accessor for Logger(0);
  v15 = sub_1000AECD4(v14, (uint64_t)qword_100CAF198);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc(42, -1);
    v24 = swift_slowAlloc(96, -1);
    aBlock[0] = v24;
    *(_DWORD *)v18 = 136315906;
    v25 = sub_1000CE1C8(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 12) = 2080;
    v25 = sub_1000CE1C8(0xD000000000000013, 0x80000001009F1640, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 22) = 2080;
    v25 = sub_1000CE1C8(0xD000000000000017, 0x80000001009F1660, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 32) = 2048;
    v25 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Processing state update. Selector=<%s, %s, %s>, Count=%ld", (uint8_t *)v18, 0x2Au);
    swift_arrayDestroy(v24, 3);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v18, -1, -1);
  }

  v19 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v20 = swift_allocObject(&unk_100B5D448, 24, 7);
  swift_weakInit(v20 + 16, v4);
  v21 = (_QWORD *)swift_allocObject(&unk_100B5E9B0, 56, 7);
  v21[2] = v20;
  v21[3] = v7;
  v21[4] = v13;
  v21[5] = a2;
  v21[6] = a3;
  aBlock[4] = (uint64_t)sub_10019DD0C;
  v27 = v21;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100121D84;
  aBlock[3] = (uint64_t)&unk_100B5E9C8;
  v22 = _Block_copy(aBlock);
  v23 = v27;
  swift_retain();
  objc_msgSend(v19, "installCACommitCompletionBlock:", v22, swift_release(v23).n128_f64[0]);
  _Block_release(v22);

}

void sub_10017F30C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t aBlock[5];
  _QWORD *v27;

  v4 = v3;
  v7 = UnsafeMutableRawPointer.hashValue.getter();
  v8 = v3 + 16;
  swift_beginAccess(v3 + 16, aBlock, 32, 0);
  v9 = *(_QWORD *)(v3 + 16);
  if (*(_QWORD *)(v9 + 16) && (v10 = sub_1000BFD34(v7), (v11 & 1) != 0))
    v12 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v10);
  else
    v12 = 0;
  swift_endAccess(aBlock);
  v13 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess(v8, aBlock, 33, 0);
    sub_10016D6E4();
    swift_endAccess(aBlock);
    if (qword_100BC2490 == -1)
      goto LABEL_7;
  }
  swift_once(&qword_100BC2490, sub_100159750);
LABEL_7:
  v14 = type metadata accessor for Logger(0);
  v15 = sub_1000AECD4(v14, (uint64_t)qword_100CAF198);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc(42, -1);
    v24 = swift_slowAlloc(96, -1);
    aBlock[0] = v24;
    *(_DWORD *)v18 = 136315906;
    v25 = sub_1000CE1C8(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 12) = 2080;
    v25 = sub_1000CE1C8(0xD00000000000002BLL, 0x80000001009F15F0, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 22) = 2080;
    v25 = sub_1000CE1C8(0xD00000000000001FLL, 0x80000001009F1620, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 32) = 2048;
    v25 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Processing state update. Selector=<%s, %s, %s>, Count=%ld", (uint8_t *)v18, 0x2Au);
    swift_arrayDestroy(v24, 3);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v18, -1, -1);
  }

  v19 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v20 = swift_allocObject(&unk_100B5D448, 24, 7);
  swift_weakInit(v20 + 16, v4);
  v21 = (_QWORD *)swift_allocObject(&unk_100B5E848, 56, 7);
  v21[2] = v20;
  v21[3] = v7;
  v21[4] = v13;
  v21[5] = a2;
  v21[6] = a3;
  aBlock[4] = (uint64_t)sub_10019DCA8;
  v27 = v21;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100121D84;
  aBlock[3] = (uint64_t)&unk_100B5E860;
  v22 = _Block_copy(aBlock);
  v23 = v27;
  swift_retain();
  objc_msgSend(v19, "installCACommitCompletionBlock:", v22, swift_release(v23).n128_f64[0]);
  _Block_release(v22);

}

void sub_10017F6A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  void *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t aBlock[5];
  _QWORD *v26;

  v6 = UnsafeMutableRawPointer.hashValue.getter();
  v7 = v3 + 16;
  swift_beginAccess(v3 + 16, aBlock, 32, 0);
  v8 = *(_QWORD *)(v3 + 16);
  if (*(_QWORD *)(v8 + 16) && (v9 = sub_1000BFD34(v6), (v10 & 1) != 0))
    v11 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v9);
  else
    v11 = 0;
  swift_endAccess(aBlock);
  v12 = v11 + 1;
  if (__OFADD__(v11, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess(v7, aBlock, 33, 0);
    sub_10016D6E4();
    swift_endAccess(aBlock);
    if (qword_100BC2490 == -1)
      goto LABEL_7;
  }
  swift_once(&qword_100BC2490, sub_100159750);
LABEL_7:
  v13 = type metadata accessor for Logger(0);
  v14 = sub_1000AECD4(v13, (uint64_t)qword_100CAF198);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc(42, -1);
    v23 = swift_slowAlloc(96, -1);
    aBlock[0] = v23;
    *(_DWORD *)v17 = 136315906;
    v24 = sub_1000CE1C8(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, aBlock);
    *(_WORD *)(v17 + 12) = 2080;
    v24 = sub_1000CE1C8(0x75706E497473694CLL, 0xE900000000000074, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, aBlock);
    *(_WORD *)(v17 + 22) = 2080;
    v24 = sub_1000CE1C8(0x776569567473694CLL, 0xED00006C65646F4DLL, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, aBlock);
    *(_WORD *)(v17 + 32) = 2048;
    v24 = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, aBlock);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Processing state update. Selector=<%s, %s, %s>, Count=%ld", (uint8_t *)v17, 0x2Au);
    swift_arrayDestroy(v23, 3);
    swift_slowDealloc(v23, -1, -1);
    swift_slowDealloc(v17, -1, -1);
  }

  v18 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v19 = swift_allocObject(&unk_100B5D448, 24, 7);
  swift_weakInit(v19 + 16);
  v20 = (_QWORD *)swift_allocObject(&unk_100B5EB18, 56, 7);
  v20[2] = v19;
  v20[3] = v6;
  v20[4] = v12;
  v20[5] = a2;
  v20[6] = a3;
  aBlock[4] = (uint64_t)sub_10019DDA0;
  v26 = v20;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100121D84;
  aBlock[3] = (uint64_t)&unk_100B5EB30;
  v21 = _Block_copy(aBlock);
  v22 = v26;
  swift_retain();
  objc_msgSend(v18, "installCACommitCompletionBlock:", v21, swift_release(v22).n128_f64[0]);
  _Block_release(v21);

}

void sub_10017FA44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t aBlock[5];
  _QWORD *v27;

  v4 = v3;
  v7 = UnsafeMutableRawPointer.hashValue.getter();
  v8 = v3 + 16;
  swift_beginAccess(v3 + 16, aBlock, 32, 0);
  v9 = *(_QWORD *)(v3 + 16);
  if (*(_QWORD *)(v9 + 16) && (v10 = sub_1000BFD34(v7), (v11 & 1) != 0))
    v12 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v10);
  else
    v12 = 0;
  swift_endAccess(aBlock);
  v13 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess(v8, aBlock, 33, 0);
    sub_10016D6E4();
    swift_endAccess(aBlock);
    if (qword_100BC2490 == -1)
      goto LABEL_7;
  }
  swift_once(&qword_100BC2490, sub_100159750);
LABEL_7:
  v14 = type metadata accessor for Logger(0);
  v15 = sub_1000AECD4(v14, (uint64_t)qword_100CAF198);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc(42, -1);
    v24 = swift_slowAlloc(96, -1);
    aBlock[0] = v24;
    *(_DWORD *)v18 = 136315906;
    v25 = sub_1000CE1C8(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 12) = 2080;
    v25 = sub_1000CE1C8(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 22) = 2080;
    v25 = sub_1000CE1C8(0x6956686372616553, 0xEF6C65646F4D7765, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 32) = 2048;
    v25 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Processing state update. Selector=<%s, %s, %s>, Count=%ld", (uint8_t *)v18, 0x2Au);
    swift_arrayDestroy(v24, 3);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v18, -1, -1);
  }

  v19 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v20 = swift_allocObject(&unk_100B5D448, 24, 7);
  swift_weakInit(v20 + 16, v4);
  v21 = (_QWORD *)swift_allocObject(&unk_100B5EC80, 56, 7);
  v21[2] = v20;
  v21[3] = v7;
  v21[4] = v13;
  v21[5] = a2;
  v21[6] = a3;
  aBlock[4] = (uint64_t)sub_10019DE8C;
  v27 = v21;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100121D84;
  aBlock[3] = (uint64_t)&unk_100B5EC98;
  v22 = _Block_copy(aBlock);
  v23 = v27;
  swift_retain();
  objc_msgSend(v19, "installCACommitCompletionBlock:", v22, swift_release(v23).n128_f64[0]);
  _Block_release(v22);

}

void sub_10017FDE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t aBlock[5];
  _QWORD *v27;

  v4 = v3;
  v7 = UnsafeMutableRawPointer.hashValue.getter();
  v8 = v3 + 16;
  swift_beginAccess(v3 + 16, aBlock, 32, 0);
  v9 = *(_QWORD *)(v3 + 16);
  if (*(_QWORD *)(v9 + 16) && (v10 = sub_1000BFD34(v7), (v11 & 1) != 0))
    v12 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v10);
  else
    v12 = 0;
  swift_endAccess(aBlock);
  v13 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess(v8, aBlock, 33, 0);
    sub_10016D6E4();
    swift_endAccess(aBlock);
    if (qword_100BC2490 == -1)
      goto LABEL_7;
  }
  swift_once(&qword_100BC2490, sub_100159750);
LABEL_7:
  v14 = type metadata accessor for Logger(0);
  v15 = sub_1000AECD4(v14, (uint64_t)qword_100CAF198);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc(42, -1);
    v24 = swift_slowAlloc(96, -1);
    aBlock[0] = v24;
    *(_DWORD *)v18 = 136315906;
    v25 = sub_1000CE1C8(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 12) = 2080;
    v25 = sub_1000CE1C8(0xD000000000000017, 0x80000001009F1680, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 22) = 2080;
    v25 = sub_1000CE1C8(0xD00000000000001BLL, 0x80000001009F16A0, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 32) = 2048;
    v25 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Processing state update. Selector=<%s, %s, %s>, Count=%ld", (uint8_t *)v18, 0x2Au);
    swift_arrayDestroy(v24, 3);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v18, -1, -1);
  }

  v19 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v20 = swift_allocObject(&unk_100B5D448, 24, 7);
  swift_weakInit(v20 + 16, v4);
  v21 = (_QWORD *)swift_allocObject(&unk_100B5EDE8, 56, 7);
  v21[2] = v20;
  v21[3] = v7;
  v21[4] = v13;
  v21[5] = a2;
  v21[6] = a3;
  aBlock[4] = (uint64_t)sub_10019E240;
  v27 = v21;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100121D84;
  aBlock[3] = (uint64_t)&unk_100B5EE00;
  v22 = _Block_copy(aBlock);
  v23 = v27;
  swift_retain();
  objc_msgSend(v19, "installCACommitCompletionBlock:", v22, swift_release(v23).n128_f64[0]);
  _Block_release(v22);

}

void sub_100180178(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  void *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t aBlock[5];
  _QWORD *v26;

  v6 = UnsafeMutableRawPointer.hashValue.getter();
  v7 = v3 + 16;
  swift_beginAccess(v3 + 16, aBlock, 32, 0);
  v8 = *(_QWORD *)(v3 + 16);
  if (*(_QWORD *)(v8 + 16) && (v9 = sub_1000BFD34(v6), (v10 & 1) != 0))
    v11 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v9);
  else
    v11 = 0;
  swift_endAccess(aBlock);
  v12 = v11 + 1;
  if (__OFADD__(v11, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess(v7, aBlock, 33, 0);
    sub_10016D6E4();
    swift_endAccess(aBlock);
    if (qword_100BC2490 == -1)
      goto LABEL_7;
  }
  swift_once(&qword_100BC2490, sub_100159750);
LABEL_7:
  v13 = type metadata accessor for Logger(0);
  v14 = sub_1000AECD4(v13, (uint64_t)qword_100CAF198);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc(42, -1);
    v23 = swift_slowAlloc(96, -1);
    aBlock[0] = v23;
    *(_DWORD *)v17 = 136315906;
    v24 = sub_1000CE1C8(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, aBlock);
    *(_WORD *)(v17 + 12) = 2080;
    v24 = sub_1000CE1C8(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, aBlock);
    *(_WORD *)(v17 + 22) = 2080;
    v24 = sub_1000CE1C8(0x776569566E69614DLL, 0xED00006C65646F4DLL, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, aBlock);
    *(_WORD *)(v17 + 32) = 2048;
    v24 = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, aBlock);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Processing state update. Selector=<%s, %s, %s>, Count=%ld", (uint8_t *)v17, 0x2Au);
    swift_arrayDestroy(v23, 3);
    swift_slowDealloc(v23, -1, -1);
    swift_slowDealloc(v17, -1, -1);
  }

  v18 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v19 = swift_allocObject(&unk_100B5D448, 24, 7);
  swift_weakInit(v19 + 16);
  v20 = (_QWORD *)swift_allocObject(&unk_100B5EF50, 56, 7);
  v20[2] = v19;
  v20[3] = v6;
  v20[4] = v12;
  v20[5] = a2;
  v20[6] = a3;
  aBlock[4] = (uint64_t)sub_10019E2A4;
  v26 = v20;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100121D84;
  aBlock[3] = (uint64_t)&unk_100B5EF68;
  v21 = _Block_copy(aBlock);
  v22 = v26;
  swift_retain();
  objc_msgSend(v18, "installCACommitCompletionBlock:", v21, swift_release(v22).n128_f64[0]);
  _Block_release(v21);

}

void sub_100180514(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t aBlock[5];
  _QWORD *v27;

  v4 = v3;
  v7 = UnsafeMutableRawPointer.hashValue.getter();
  v8 = v3 + 16;
  swift_beginAccess(v3 + 16, aBlock, 32, 0);
  v9 = *(_QWORD *)(v3 + 16);
  if (*(_QWORD *)(v9 + 16) && (v10 = sub_1000BFD34(v7), (v11 & 1) != 0))
    v12 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v10);
  else
    v12 = 0;
  swift_endAccess(aBlock);
  v13 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess(v8, aBlock, 33, 0);
    sub_10016D6E4();
    swift_endAccess(aBlock);
    if (qword_100BC2490 == -1)
      goto LABEL_7;
  }
  swift_once(&qword_100BC2490, sub_100159750);
LABEL_7:
  v14 = type metadata accessor for Logger(0);
  v15 = sub_1000AECD4(v14, (uint64_t)qword_100CAF198);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc(42, -1);
    v24 = swift_slowAlloc(96, -1);
    aBlock[0] = v24;
    *(_DWORD *)v18 = 136315906;
    v25 = sub_1000CE1C8(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 12) = 2080;
    v25 = sub_1000CE1C8(0xD000000000000013, 0x80000001009F16C0, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 22) = 2080;
    v25 = sub_1000CE1C8(0xD000000000000017, 0x80000001009F16E0, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 32) = 2048;
    v25 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Processing state update. Selector=<%s, %s, %s>, Count=%ld", (uint8_t *)v18, 0x2Au);
    swift_arrayDestroy(v24, 3);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v18, -1, -1);
  }

  v19 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v20 = swift_allocObject(&unk_100B5D448, 24, 7);
  swift_weakInit(v20 + 16, v4);
  v21 = (_QWORD *)swift_allocObject(&unk_100B5F0B8, 56, 7);
  v21[2] = v20;
  v21[3] = v7;
  v21[4] = v13;
  v21[5] = a2;
  v21[6] = a3;
  aBlock[4] = (uint64_t)sub_10019E330;
  v27 = v21;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100121D84;
  aBlock[3] = (uint64_t)&unk_100B5F0D0;
  v22 = _Block_copy(aBlock);
  v23 = v27;
  swift_retain();
  objc_msgSend(v19, "installCACommitCompletionBlock:", v22, swift_release(v23).n128_f64[0]);
  _Block_release(v22);

}

void sub_1001808AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t aBlock[5];
  _QWORD *v27;

  v4 = v3;
  v7 = UnsafeMutableRawPointer.hashValue.getter();
  v8 = v3 + 16;
  swift_beginAccess(v3 + 16, aBlock, 32, 0);
  v9 = *(_QWORD *)(v3 + 16);
  if (*(_QWORD *)(v9 + 16) && (v10 = sub_1000BFD34(v7), (v11 & 1) != 0))
    v12 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v10);
  else
    v12 = 0;
  swift_endAccess(aBlock);
  v13 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess(v8, aBlock, 33, 0);
    sub_10016D6E4();
    swift_endAccess(aBlock);
    if (qword_100BC2490 == -1)
      goto LABEL_7;
  }
  swift_once(&qword_100BC2490, sub_100159750);
LABEL_7:
  v14 = type metadata accessor for Logger(0);
  v15 = sub_1000AECD4(v14, (uint64_t)qword_100CAF198);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc(42, -1);
    v24 = swift_slowAlloc(96, -1);
    aBlock[0] = v24;
    *(_DWORD *)v18 = 136315906;
    v25 = sub_1000CE1C8(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 12) = 2080;
    v25 = sub_1000CE1C8(0xD000000000000011, 0x80000001009F1700, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 22) = 2080;
    v25 = sub_1000CE1C8(0xD000000000000015, 0x80000001009F1720, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 32) = 2048;
    v25 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Processing state update. Selector=<%s, %s, %s>, Count=%ld", (uint8_t *)v18, 0x2Au);
    swift_arrayDestroy(v24, 3);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v18, -1, -1);
  }

  v19 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v20 = swift_allocObject(&unk_100B5D448, 24, 7);
  swift_weakInit(v20 + 16, v4);
  v21 = (_QWORD *)swift_allocObject(&unk_100B5F220, 56, 7);
  v21[2] = v20;
  v21[3] = v7;
  v21[4] = v13;
  v21[5] = a2;
  v21[6] = a3;
  aBlock[4] = (uint64_t)sub_10019E3C4;
  v27 = v21;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100121D84;
  aBlock[3] = (uint64_t)&unk_100B5F238;
  v22 = _Block_copy(aBlock);
  v23 = v27;
  swift_retain();
  objc_msgSend(v19, "installCACommitCompletionBlock:", v22, swift_release(v23).n128_f64[0]);
  _Block_release(v22);

}

void sub_100180C44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t aBlock[5];
  _QWORD *v27;

  v4 = v3;
  v7 = UnsafeMutableRawPointer.hashValue.getter();
  v8 = v3 + 16;
  swift_beginAccess(v3 + 16, aBlock, 32, 0);
  v9 = *(_QWORD *)(v3 + 16);
  if (*(_QWORD *)(v9 + 16) && (v10 = sub_1000BFD34(v7), (v11 & 1) != 0))
    v12 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v10);
  else
    v12 = 0;
  swift_endAccess(aBlock);
  v13 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess(v8, aBlock, 33, 0);
    sub_10016D6E4();
    swift_endAccess(aBlock);
    if (qword_100BC2490 == -1)
      goto LABEL_7;
  }
  swift_once(&qword_100BC2490, sub_100159750);
LABEL_7:
  v14 = type metadata accessor for Logger(0);
  v15 = sub_1000AECD4(v14, (uint64_t)qword_100CAF198);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc(42, -1);
    v24 = swift_slowAlloc(96, -1);
    aBlock[0] = v24;
    *(_DWORD *)v18 = 136315906;
    v25 = sub_1000CE1C8(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 12) = 2080;
    v25 = sub_1000CE1C8(0xD000000000000018, 0x80000001009F1740, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 22) = 2080;
    v25 = sub_1000CE1C8(0xD00000000000001CLL, 0x80000001009F1760, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 32) = 2048;
    v25 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Processing state update. Selector=<%s, %s, %s>, Count=%ld", (uint8_t *)v18, 0x2Au);
    swift_arrayDestroy(v24, 3);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v18, -1, -1);
  }

  v19 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v20 = swift_allocObject(&unk_100B5D448, 24, 7);
  swift_weakInit(v20 + 16, v4);
  v21 = (_QWORD *)swift_allocObject(&unk_100B5F388, 56, 7);
  v21[2] = v20;
  v21[3] = v7;
  v21[4] = v13;
  v21[5] = a2;
  v21[6] = a3;
  aBlock[4] = (uint64_t)sub_10019E458;
  v27 = v21;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100121D84;
  aBlock[3] = (uint64_t)&unk_100B5F3A0;
  v22 = _Block_copy(aBlock);
  v23 = v27;
  swift_retain();
  objc_msgSend(v19, "installCACommitCompletionBlock:", v22, swift_release(v23).n128_f64[0]);
  _Block_release(v22);

}

void sub_100180FDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t aBlock[5];
  _QWORD *v27;

  v4 = v3;
  v7 = UnsafeMutableRawPointer.hashValue.getter();
  v8 = v3 + 16;
  swift_beginAccess(v3 + 16, aBlock, 32, 0);
  v9 = *(_QWORD *)(v3 + 16);
  if (*(_QWORD *)(v9 + 16) && (v10 = sub_1000BFD34(v7), (v11 & 1) != 0))
    v12 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v10);
  else
    v12 = 0;
  swift_endAccess(aBlock);
  v13 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess(v8, aBlock, 33, 0);
    sub_10016D6E4();
    swift_endAccess(aBlock);
    if (qword_100BC2490 == -1)
      goto LABEL_7;
  }
  swift_once(&qword_100BC2490, sub_100159750);
LABEL_7:
  v14 = type metadata accessor for Logger(0);
  v15 = sub_1000AECD4(v14, (uint64_t)qword_100CAF198);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc(42, -1);
    v24 = swift_slowAlloc(96, -1);
    aBlock[0] = v24;
    *(_DWORD *)v18 = 136315906;
    v25 = sub_1000CE1C8(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 12) = 2080;
    v25 = sub_1000CE1C8(0x756E654D7473694CLL, 0xED00007475706E49, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 22) = 2080;
    v25 = sub_1000CE1C8(0xD000000000000011, 0x80000001009F1780, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 32) = 2048;
    v25 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Processing state update. Selector=<%s, %s, %s>, Count=%ld", (uint8_t *)v18, 0x2Au);
    swift_arrayDestroy(v24, 3);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v18, -1, -1);
  }

  v19 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v20 = swift_allocObject(&unk_100B5D448, 24, 7);
  swift_weakInit(v20 + 16, v4);
  v21 = (_QWORD *)swift_allocObject(&unk_100B5F4F0, 56, 7);
  v21[2] = v20;
  v21[3] = v7;
  v21[4] = v13;
  v21[5] = a2;
  v21[6] = a3;
  aBlock[4] = (uint64_t)sub_10019E54C;
  v27 = v21;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100121D84;
  aBlock[3] = (uint64_t)&unk_100B5F508;
  v22 = _Block_copy(aBlock);
  v23 = v27;
  swift_retain();
  objc_msgSend(v19, "installCACommitCompletionBlock:", v22, swift_release(v23).n128_f64[0]);
  _Block_release(v22);

}

void sub_100181378(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t aBlock[5];
  _QWORD *v27;

  v4 = v3;
  v7 = UnsafeMutableRawPointer.hashValue.getter();
  v8 = v3 + 16;
  swift_beginAccess(v3 + 16, aBlock, 32, 0);
  v9 = *(_QWORD *)(v3 + 16);
  if (*(_QWORD *)(v9 + 16) && (v10 = sub_1000BFD34(v7), (v11 & 1) != 0))
    v12 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v10);
  else
    v12 = 0;
  swift_endAccess(aBlock);
  v13 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess(v8, aBlock, 33, 0);
    sub_10016D6E4();
    swift_endAccess(aBlock);
    if (qword_100BC2490 == -1)
      goto LABEL_7;
  }
  swift_once(&qword_100BC2490, sub_100159750);
LABEL_7:
  v14 = type metadata accessor for Logger(0);
  v15 = sub_1000AECD4(v14, (uint64_t)qword_100CAF198);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc(42, -1);
    v24 = swift_slowAlloc(96, -1);
    aBlock[0] = v24;
    *(_DWORD *)v18 = 136315906;
    v25 = sub_1000CE1C8(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 12) = 2080;
    v25 = sub_1000CE1C8(0xD000000000000011, 0x80000001009F17A0, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 22) = 2080;
    v25 = sub_1000CE1C8(0xD000000000000015, 0x80000001009F17C0, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 32) = 2048;
    v25 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Processing state update. Selector=<%s, %s, %s>, Count=%ld", (uint8_t *)v18, 0x2Au);
    swift_arrayDestroy(v24, 3);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v18, -1, -1);
  }

  v19 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v20 = swift_allocObject(&unk_100B5D448, 24, 7);
  swift_weakInit(v20 + 16, v4);
  v21 = (_QWORD *)swift_allocObject(&unk_100B5F658, 56, 7);
  v21[2] = v20;
  v21[3] = v7;
  v21[4] = v13;
  v21[5] = a2;
  v21[6] = a3;
  aBlock[4] = (uint64_t)sub_10019E648;
  v27 = v21;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100121D84;
  aBlock[3] = (uint64_t)&unk_100B5F670;
  v22 = _Block_copy(aBlock);
  v23 = v27;
  swift_retain();
  objc_msgSend(v19, "installCACommitCompletionBlock:", v22, swift_release(v23).n128_f64[0]);
  _Block_release(v22);

}

void sub_100181710(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t aBlock[6];

  v6 = UnsafeMutableRawPointer.hashValue.getter();
  v7 = v3 + 16;
  swift_beginAccess(v3 + 16, aBlock, 32, 0);
  v8 = *(_QWORD *)(v3 + 16);
  if (*(_QWORD *)(v8 + 16) && (v9 = sub_1000BFD34(v6), (v10 & 1) != 0))
    v11 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v9);
  else
    v11 = 0;
  swift_endAccess(aBlock);
  v12 = v11 + 1;
  if (__OFADD__(v11, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess(v7, aBlock, 33, 0);
    sub_10016D6E4();
    swift_endAccess(aBlock);
    if (qword_100BC2490 == -1)
      goto LABEL_7;
  }
  swift_once(&qword_100BC2490, sub_100159750);
LABEL_7:
  v13 = type metadata accessor for Logger(0);
  v14 = sub_1000AECD4(v13, (uint64_t)qword_100CAF198);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc(42, -1);
    v22 = swift_slowAlloc(96, -1);
    aBlock[0] = v22;
    *(_DWORD *)v17 = 136315906;
    v23 = sub_1000CE1C8(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, aBlock);
    *(_WORD *)(v17 + 12) = 2080;
    v23 = sub_1000CE1C8(0xD00000000000001ALL, 0x80000001009F17E0, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, aBlock);
    *(_WORD *)(v17 + 22) = 2080;
    v23 = sub_1000CE1C8(0xD00000000000001ELL, 0x80000001009F1800, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, aBlock);
    *(_WORD *)(v17 + 32) = 2048;
    v23 = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, aBlock);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Processing state update. Selector=<%s, %s, %s>, Count=%ld", (uint8_t *)v17, 0x2Au);
    swift_arrayDestroy(v22, 3);
    swift_slowDealloc(v22, -1, -1);
    swift_slowDealloc(v17, -1, -1);
  }

  v18 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v19 = swift_allocObject(&unk_100B5D448, 24, 7);
  swift_weakInit(v19 + 16);
  v20 = (_QWORD *)swift_allocObject(&unk_100B5F7C0, 56, 7);
  v20[2] = v19;
  v20[3] = v6;
  v20[4] = v12;
  v20[5] = a2;
  v20[6] = a3;
  aBlock[4] = (uint64_t)sub_10019E6DC;
  aBlock[5] = (uint64_t)v20;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100121D84;
  aBlock[3] = (uint64_t)&unk_100B5F7D8;
  v21 = _Block_copy(aBlock);
  swift_retain();
  objc_msgSend(v18, "installCACommitCompletionBlock:", v21, swift_release().n128_f64[0]);
  _Block_release(v21);

}

void sub_100181AA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t aBlock[5];
  _QWORD *v27;

  v4 = v3;
  v7 = UnsafeMutableRawPointer.hashValue.getter();
  v8 = v3 + 16;
  swift_beginAccess(v3 + 16, aBlock, 32, 0);
  v9 = *(_QWORD *)(v3 + 16);
  if (*(_QWORD *)(v9 + 16) && (v10 = sub_1000BFD34(v7), (v11 & 1) != 0))
    v12 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v10);
  else
    v12 = 0;
  swift_endAccess(aBlock);
  v13 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess(v8, aBlock, 33, 0);
    sub_10016D6E4();
    swift_endAccess(aBlock);
    if (qword_100BC2490 == -1)
      goto LABEL_7;
  }
  swift_once(&qword_100BC2490, sub_100159750);
LABEL_7:
  v14 = type metadata accessor for Logger(0);
  v15 = sub_1000AECD4(v14, (uint64_t)qword_100CAF198);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc(42, -1);
    v24 = swift_slowAlloc(96, -1);
    aBlock[0] = v24;
    *(_DWORD *)v18 = 136315906;
    v25 = sub_1000CE1C8(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 12) = 2080;
    v25 = sub_1000CE1C8(0xD000000000000019, 0x80000001009F1820, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 22) = 2080;
    v25 = sub_1000CE1C8(0xD00000000000001DLL, 0x80000001009F1840, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    *(_WORD *)(v18 + 32) = 2048;
    v25 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, aBlock);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Processing state update. Selector=<%s, %s, %s>, Count=%ld", (uint8_t *)v18, 0x2Au);
    swift_arrayDestroy(v24, 3);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v18, -1, -1);
  }

  v19 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v20 = swift_allocObject(&unk_100B5D448, 24, 7);
  swift_weakInit(v20 + 16, v4);
  v21 = (_QWORD *)swift_allocObject(&unk_100B5F928, 56, 7);
  v21[2] = v20;
  v21[3] = v7;
  v21[4] = v13;
  v21[5] = a2;
  v21[6] = a3;
  aBlock[4] = (uint64_t)sub_10019E868;
  v27 = v21;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100121D84;
  aBlock[3] = (uint64_t)&unk_100B5F940;
  v22 = _Block_copy(aBlock);
  v23 = v27;
  swift_retain();
  objc_msgSend(v19, "installCACommitCompletionBlock:", v22, swift_release(v23).n128_f64[0]);
  _Block_release(v22);

}

void (*sub_100181E40())(_QWORD *__return_ptr, __n128)
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(_QWORD *__return_ptr, __n128);
  uint64_t v4;
  void (*v5)(_OWORD *__return_ptr, uint64_t *);
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  char v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(_QWORD *__return_ptr, __n128);
  uint64_t v36;
  _OWORD v37[6];
  uint64_t v38;
  char v39[32];

  v1 = v0;
  swift_beginAccess(v0 + 16, v39, 1, 0);
  v3 = *(void (**)(_QWORD *__return_ptr, __n128))(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v5 = *(void (**)(_OWORD *__return_ptr, uint64_t *))(v0 + 32);
  v4 = *(_QWORD *)(v0 + 40);
  v6 = *(unsigned __int8 *)(v0 + 120);
  if (*(_BYTE *)(v0 + 120))
  {
    v7 = 0;
    if (v6 == 1)
    {
      v35 = v3;
      v9 = *(_QWORD *)(v1 + 104);
      v8 = *(_QWORD *)(v1 + 112);
      v10 = (uint64_t)v5;
      v30 = (uint64_t)v5;
      v11 = *(_QWORD *)(v1 + 96);
      v12 = *(_QWORD *)(v1 + 72);
      v33 = *(_QWORD *)(v1 + 80);
      v14 = *(_QWORD *)(v1 + 56);
      v13 = *(_QWORD *)(v1 + 64);
      v28 = *(_QWORD *)(v1 + 48);
      v29 = *(_QWORD *)(v1 + 88);
      swift_retain();
      sub_10019D33C(v2, v10, v4, v28, v14, v13, v12, v33, v29, v11, v9, v8);
      sub_10019D2B8(v2, v30, v4, v28, v14, v13, v12, v33, v29, v11, v9, v8);
      return v35;
    }
  }
  else
  {
    swift_retain();
    v15 = swift_retain();
    v3(&v38, v15);
    v5(v37, &v38);
    swift_release(v4);
    swift_release(v2);
    v16 = *(_QWORD *)(v0 + 32);
    v34 = *(_QWORD *)(v0 + 24);
    v36 = *(_QWORD *)(v0 + 16);
    v17 = *(_QWORD *)(v0 + 40);
    v18 = *(_QWORD *)(v0 + 48);
    v19 = *(_QWORD *)(v0 + 56);
    v20 = *(_QWORD *)(v0 + 64);
    v21 = *(_QWORD *)(v0 + 72);
    v31 = *(_OWORD *)(v0 + 96);
    v32 = *(_OWORD *)(v0 + 80);
    v22 = v37[1];
    *(_OWORD *)(v0 + 24) = v37[0];
    *(_OWORD *)(v0 + 40) = v22;
    v23 = v37[3];
    *(_OWORD *)(v0 + 56) = v37[2];
    *(_OWORD *)(v0 + 72) = v23;
    v24 = v37[5];
    *(_OWORD *)(v0 + 88) = v37[4];
    v7 = v38;
    v25 = *(_QWORD *)(v1 + 112);
    v26 = *(_BYTE *)(v1 + 120);
    *(_QWORD *)(v1 + 16) = v38;
    *(_OWORD *)(v1 + 104) = v24;
    *(_BYTE *)(v1 + 120) = 1;
    swift_retain();
    sub_10019D198(v36, v34, v16, v17, v18, v19, v20, v21, v32, *((uint64_t *)&v32 + 1), v31, *((uint64_t *)&v31 + 1), v25, v26);
  }
  return (void (*)(_QWORD *__return_ptr, __n128))v7;
}

void sub_100182030()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t (*v4)(_QWORD);
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD);
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int EnumCaseMultiPayload;
  uint64_t v25;
  void (*v26)(char *);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(_QWORD);
  uint64_t v31;
  uint64_t *v32;
  uint64_t (*v33)(_QWORD);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  sub_1000986AC();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v32 = v9;
  v33 = v8;
  v8(0);
  sub_1000C6D48();
  __chkstk_darwin(v10);
  v12 = (char *)&v29 - v11;
  v34 = sub_1000C0894();
  sub_1000C6D48();
  __chkstk_darwin(v13);
  v15 = (char *)&v29 - v14;
  v16 = sub_1000BA294(v3);
  sub_1000B42B0();
  __chkstk_darwin(v17);
  sub_10009883C();
  v20 = v18 - v19;
  __chkstk_darwin(v21);
  sub_1000CDE94();
  v23 = v0 + v22;
  sub_10009922C(v0 + v22, (uint64_t)&v36, 0);
  sub_100037768(v23, v1, v3);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v1, v16);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v25 = v1 + *(int *)(sub_1000BA294(v32) + 48);
      sub_10007802C(v1, v7, v5);
      sub_1000DB1E0(v7, 0);
      sub_1000215BC(v25, v33);
    }
    else
    {
      sub_1000DB1E0(v7, 1);
      sub_100021A14(v1, v3);
    }
  }
  else
  {
    v30 = v5;
    v31 = v7;
    v26 = *(void (**)(char *))(v1 + 16);
    (*(void (**)(void))v1)();
    v26(v15);
    sub_1000C5AE8();
    sub_100089020();
    v27 = v20 + *(int *)(sub_1000BA294(v32) + 48);
    sub_100080C0C((uint64_t)v15, v20, v30);
    sub_10007802C((uint64_t)v12, v27, v33);
    sub_10009525C(v20, v16);
    sub_10009922C(v23, (uint64_t)&v35, 33);
    sub_1000A3908(v20, v23, v3);
    sub_1000B30A0();
    v28 = v31;
    sub_10009C0AC((uint64_t)v15, v31);
    sub_1000DB1E0(v28, 0);
  }
  sub_100098640();
}

void sub_100182230(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  __int16 v17;
  __int128 v18;
  void (*v19)(_QWORD *__return_ptr);
  uint64_t v20;
  uint64_t v21;
  void (*v22)(_QWORD *);
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  __int16 v31;
  char v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  __int16 v43;
  void *v44;
  id v45;
  void *v46;
  id v47;
  id v48;
  int v49;
  _BYTE v50[24];
  _QWORD v51[3];
  void *v52;
  void *v53;
  void *v54;
  uint64_t v55;
  unsigned __int8 v56;
  unsigned __int8 v57;
  char v58[32];

  v3 = type metadata accessor for UnitsConfigurationViewModel(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1000BA294(&qword_100BC4490);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v45 - v10;
  v12 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 120);
  swift_beginAccess(v12, v58, 0, 0);
  sub_100037768(v12, (uint64_t)v11, &qword_100BC4490);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v11, v6);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v14 = (uint64_t)&v11[*(int *)(sub_1000BA294(&qword_100BC44A0) + 48)];
      v15 = *((_QWORD *)v11 + 6);
      v16 = v11[56];
      if (v11[57])
        v17 = 256;
      else
        v17 = 0;
      v18 = *((_OWORD *)v11 + 1);
      *(_OWORD *)a1 = *(_OWORD *)v11;
      *(_OWORD *)(a1 + 16) = v18;
      *(_OWORD *)(a1 + 32) = *((_OWORD *)v11 + 2);
      *(_QWORD *)(a1 + 48) = v15;
      *(_WORD *)(a1 + 56) = v17 | v16;
      sub_1000215BC(v14, type metadata accessor for UnitsConfigurationViewModel);
    }
    else
    {
      *(_QWORD *)a1 = 1;
      *(_OWORD *)(a1 + 8) = 0u;
      *(_OWORD *)(a1 + 24) = 0u;
      *(_OWORD *)(a1 + 40) = 0u;
      *(_WORD *)(a1 + 56) = 0;
      sub_100021A14((uint64_t)v11, &qword_100BC4490);
    }
  }
  else
  {
    v19 = *(void (**)(_QWORD *__return_ptr))v11;
    v20 = *((_QWORD *)v11 + 1);
    v22 = (void (*)(_QWORD *))*((_QWORD *)v11 + 2);
    v21 = *((_QWORD *)v11 + 3);
    v19(v51);
    v22(v51);
    swift_release(v21);
    swift_release(v20);
    v23 = (uint64_t)&v9[*(int *)(sub_1000BA294(&qword_100BC44A0) + 48)];
    v24 = (void *)v51[0];
    v25 = (void *)v51[1];
    v26 = (void *)v51[2];
    v27 = v52;
    v28 = v53;
    v29 = v54;
    v47 = v52;
    v48 = v53;
    v30 = v55;
    v31 = v56;
    v32 = v57;
    v49 = v57;
    *(_QWORD *)v9 = v51[0];
    *((_QWORD *)v9 + 1) = v25;
    *((_QWORD *)v9 + 2) = v26;
    *((_QWORD *)v9 + 3) = v27;
    *((_QWORD *)v9 + 4) = v28;
    *((_QWORD *)v9 + 5) = v29;
    v33 = v29;
    v45 = v26;
    v46 = v29;
    *((_QWORD *)v9 + 6) = v30;
    v9[56] = v31;
    v9[57] = v32;
    sub_10007802C((uint64_t)v5, v23, type metadata accessor for UnitsConfigurationViewModel);
    swift_storeEnumTagMultiPayload(v9, v6, 1);
    swift_beginAccess(v12, v50, 33, 0);
    v34 = v33;
    v35 = v24;
    v36 = v25;
    v37 = v45;
    v38 = v45;
    v39 = v47;
    v40 = v47;
    v41 = v48;
    v42 = v48;
    sub_10019D564(v30, v31);
    sub_1000A3908((uint64_t)v9, v12, &qword_100BC4490);
    swift_endAccess(v50);
    if (v49)
      v43 = 256;
    else
      v43 = 0;
    *(_QWORD *)a1 = v24;
    *(_QWORD *)(a1 + 8) = v25;
    *(_QWORD *)(a1 + 16) = v37;
    *(_QWORD *)(a1 + 24) = v39;
    v44 = v46;
    *(_QWORD *)(a1 + 32) = v41;
    *(_QWORD *)(a1 + 40) = v44;
    *(_QWORD *)(a1 + 48) = v30;
    *(_WORD *)(a1 + 56) = v43 | v31;
  }
}

uint64_t sub_100182508()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t *v7;
  void (*v8)(_QWORD);
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t *);
  uint64_t v23;
  uint64_t *v25;
  _BYTE v26[24];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1000986AC();
  v29 = v2;
  v30 = v3;
  v5 = v4;
  v7 = v6;
  v9 = (uint64_t (*)(_QWORD))v8;
  v8(0);
  sub_1000C6D48();
  __chkstk_darwin(v10);
  v12 = &v26[-v11 - 8];
  v13 = sub_1000BA294(v7);
  sub_1000B42B0();
  __chkstk_darwin(v14);
  sub_10003BC68();
  __chkstk_darwin(v15);
  v17 = (uint64_t *)&v26[-v16 - 8];
  v18 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 120);
  sub_10009922C(v18, (uint64_t)&v28, 0);
  sub_1000EF944();
  v19 = sub_1000F3DDC();
  if (v19)
  {
    if (v19 == 1)
    {
      v20 = sub_1000BA294(v5);
      v21 = *v17;
      sub_1000215BC((uint64_t)v17 + *(int *)(v20 + 48), v9);
    }
    else
    {
      sub_100021A14((uint64_t)v17, v7);
      return 0;
    }
  }
  else
  {
    v25 = v5;
    v22 = (void (*)(uint64_t *))v17[2];
    sub_1000F3F30();
    v22(&v27);
    sub_10009D330();
    sub_100098834();
    v23 = (uint64_t)v1 + *(int *)(sub_1000BA294(v25) + 48);
    v21 = v27;
    *v1 = v27;
    sub_10009C0AC((uint64_t)v12, v23);
    sub_10009525C((uint64_t)v1, v13);
    sub_10009922C(v18, (uint64_t)v26, 33);
    sub_100094EE4();
    sub_1000AE85C();
    swift_endAccess(v26);
  }
  return v21;
}

BOOL sub_100182684()
{
  uint64_t v0;
  uint64_t v2;
  void (*v3)(_QWORD *__return_ptr, uint64_t);
  uint64_t v4;
  uint64_t (*v5)(__n128);
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v13[3];

  swift_beginAccess(v0 + 16, (char *)v13 + 1, 1, 0);
  if (*(_BYTE *)(v0 + 48))
    return *(_BYTE *)(v0 + 48) != 1;
  v3 = *(void (**)(_QWORD *__return_ptr, uint64_t))(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v5 = *(uint64_t (**)(__n128))(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  swift_retain();
  v6 = swift_retain();
  v7 = v5(v6);
  v3(v13, v7);
  swift_release(v2);
  swift_release(v4);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = *(_QWORD *)(v0 + 32);
  v11 = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v0 + 16) = LOBYTE(v13[0]);
  *(_QWORD *)(v0 + 24) = 0;
  *(_QWORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 40) = 0;
  v12 = *(_BYTE *)(v0 + 48);
  *(_BYTE *)(v0 + 48) = 1;
  sub_10019D9DC(v8, v9, v10, v11, v12);
  return 0;
}

void (*sub_100182750())(_QWORD *__return_ptr, __n128)
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(_QWORD *__return_ptr, __n128);
  uint64_t v4;
  void (*v5)(_OWORD *__return_ptr, uint64_t *);
  int v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  char v24;
  uint64_t v25;
  __int16 v26;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  void (*v33)(_QWORD *__return_ptr, __n128);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD v37[6];
  char v38;
  uint64_t v39;
  char v40[32];

  v1 = v0;
  swift_beginAccess(v0 + 16, v40, 1, 0);
  v3 = *(void (**)(_QWORD *__return_ptr, __n128))(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v5 = *(void (**)(_OWORD *__return_ptr, uint64_t *))(v0 + 32);
  v4 = *(_QWORD *)(v0 + 40);
  v6 = *(unsigned __int8 *)(v0 + 121);
  if (*(_BYTE *)(v0 + 121))
  {
    v7 = 0;
    if (v6 == 1)
    {
      v33 = v3;
      v8 = *(_BYTE *)(v1 + 120);
      v9 = *(_QWORD *)(v1 + 104);
      v10 = *(_QWORD *)(v1 + 112);
      v11 = *(_QWORD *)(v1 + 88);
      v29 = *(_QWORD *)(v1 + 96);
      v31 = *(_QWORD *)(v1 + 80);
      v12 = *(_QWORD *)(v1 + 64);
      v35 = *(_QWORD *)(v1 + 72);
      v13 = *(_QWORD *)(v1 + 56);
      v28 = *(_QWORD *)(v1 + 48);
      swift_retain();
      sub_10019E0F8(v2, (uint64_t)v5, v4, v28, v13, v12, v35, v31, v11, v29, v9, v10, v8);
      sub_10019DFF0(v2, (uint64_t)v5, v4, v28, v13, v12, v35, v31, v11, v29, v9, v10, v8);
      return v33;
    }
  }
  else
  {
    swift_retain();
    v14 = swift_retain();
    v3(&v39, v14);
    v5(v37, &v39);
    swift_release(v4);
    swift_release(v2);
    v15 = *(_QWORD *)(v0 + 32);
    v34 = *(_QWORD *)(v0 + 24);
    v36 = *(_QWORD *)(v0 + 16);
    v16 = *(_QWORD *)(v0 + 40);
    v17 = *(_QWORD *)(v0 + 48);
    v18 = *(_QWORD *)(v0 + 56);
    v19 = *(_QWORD *)(v0 + 64);
    v20 = *(_QWORD *)(v0 + 72);
    v30 = *(_OWORD *)(v0 + 96);
    v32 = *(_OWORD *)(v0 + 80);
    v21 = v37[1];
    *(_OWORD *)(v0 + 24) = v37[0];
    *(_OWORD *)(v0 + 40) = v21;
    v22 = v37[3];
    *(_OWORD *)(v0 + 56) = v37[2];
    *(_OWORD *)(v0 + 72) = v22;
    v23 = v37[5];
    *(_OWORD *)(v0 + 88) = v37[4];
    v7 = v39;
    v24 = v38;
    v25 = *(_QWORD *)(v1 + 112);
    v26 = *(_WORD *)(v1 + 120);
    *(_QWORD *)(v1 + 16) = v39;
    *(_OWORD *)(v1 + 104) = v23;
    *(_BYTE *)(v1 + 120) = v24;
    *(_BYTE *)(v1 + 121) = 1;
    swift_retain();
    sub_10019DECC(v36, v34, v15, v16, v17, v18, v19, v20, v32, *((uint64_t *)&v32 + 1), v30, *((uint64_t *)&v30 + 1), v25, v26, SHIBYTE(v26));
  }
  return (void (*)(_QWORD *__return_ptr, __n128))v7;
}

uint64_t sub_100182950@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  void (**v11)(void);
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(void);
  void (*v17)(void);
  void (*v18)(void);
  void (*v19)(void);
  _BYTE *v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v27[28];
  _QWORD v28[3];

  v3 = type metadata accessor for NotificationsOptInInput(0);
  __chkstk_darwin(v3);
  v5 = &v27[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = sub_1000BA294(&qword_100BC4728);
  v7 = __chkstk_darwin(v6);
  v9 = &v27[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v7);
  v11 = (void (**)(void))&v27[-v10 - 8];
  v12 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 120);
  swift_beginAccess(v12, (char *)v28 + 4, 0, 0);
  sub_100037768(v12, (uint64_t)v11, &qword_100BC4728);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v11, v6);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
    {
      v23 = a1;
      v24 = 1;
      return _s7Weather24LocationCompositionStateOwst_0(v23, v24, 1, v3);
    }
    v14 = (uint64_t)v11;
    v15 = a1;
  }
  else
  {
    v16 = *v11;
    v17 = v11[1];
    v19 = v11[2];
    v18 = v11[3];
    v16();
    ((void (*)(_QWORD *__return_ptr, _BYTE *))v19)(v28, v5);
    swift_release(v18);
    swift_release(v17);
    v20 = &v9[*(int *)(sub_1000BA294(&qword_100BC4740) + 48)];
    sub_100080C0C((uint64_t)v5, (uint64_t)v9, type metadata accessor for NotificationsOptInInput);
    v21 = BYTE2(v28[0]);
    v22 = BYTE3(v28[0]);
    *(_WORD *)v20 = v28[0];
    v20[2] = v21;
    v20[3] = v22;
    swift_storeEnumTagMultiPayload(v9, v6, 1);
    swift_beginAccess(v12, v27, 33, 0);
    sub_1000A3908((uint64_t)v9, v12, &qword_100BC4728);
    swift_endAccess(v27);
    v14 = (uint64_t)v5;
    v15 = a1;
  }
  sub_10007802C(v14, v15, type metadata accessor for NotificationsOptInInput);
  v23 = a1;
  v24 = 0;
  return _s7Weather24LocationCompositionStateOwst_0(v23, v24, 1, v3);
}

void *sub_100182B6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  void (*v6)(_QWORD *__return_ptr, _QWORD *);
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v20;
  _QWORD v21[2];
  char v22;
  _QWORD v23[2];
  unsigned __int8 v24;
  _BYTE v25[24];

  v1 = v0;
  swift_beginAccess(v0 + 16, v25, 1, 0);
  v3 = *(void **)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  if (*(_BYTE *)(v0 + 57))
  {
    if (*(_BYTE *)(v0 + 57) == 1)
      v4 = v3;
    else
      return 0;
  }
  else
  {
    v6 = *(void (**)(_QWORD *__return_ptr, _QWORD *))(v0 + 32);
    v5 = *(_QWORD *)(v0 + 40);
    swift_retain();
    v7 = swift_retain();
    ((void (*)(_QWORD *__return_ptr, __n128))v3)(v23, v7);
    v6(v21, v23);
    swift_release(v5);
    swift_release(v2);
    v3 = (void *)v23[0];
    v8 = v23[1];
    v9 = v24;
    v10 = v21[0];
    v11 = v21[1];
    v12 = v22;
    v13 = *(_QWORD *)(v1 + 24);
    v20 = *(void **)(v1 + 16);
    v14 = *(_QWORD *)(v1 + 32);
    v15 = *(void **)(v1 + 40);
    v16 = *(_QWORD *)(v1 + 48);
    *(_QWORD *)(v1 + 16) = v23[0];
    *(_QWORD *)(v1 + 24) = v8;
    *(_QWORD *)(v1 + 32) = v9;
    *(_QWORD *)(v1 + 40) = v10;
    *(_QWORD *)(v1 + 48) = v11;
    v17 = *(unsigned __int8 *)(v1 + 56);
    *(_BYTE *)(v1 + 56) = v12;
    LOBYTE(v5) = *(_BYTE *)(v1 + 57);
    *(_BYTE *)(v1 + 57) = 1;
    v18 = v3;
    sub_10019E598(v20, v13, v14, v15, v16, v17, v5);
  }
  return v3;
}

void sub_100182CA8(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  void (**v11)(void);
  uint64_t v12;
  int EnumCaseMultiPayload;
  char *v14;
  void (*v15)(void);
  void (*v16)(void);
  void (*v17)(void);
  void (*v18)(void);
  _BYTE *v19;
  char v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _BYTE v25[24];
  _OWORD v26[6];
  char v27;
  char v28[32];

  v3 = type metadata accessor for NotificationSettingsInput(0);
  __chkstk_darwin(v3);
  v5 = &v25[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = sub_1000BA294(&qword_100BC48A0);
  v7 = __chkstk_darwin(v6);
  v9 = &v25[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v7);
  v11 = (void (**)(void))&v25[-v10 - 8];
  v12 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 120);
  swift_beginAccess(v12, v28, 0, 0);
  sub_100037768(v12, (uint64_t)v11, &qword_100BC48A0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v11, v6);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v14 = (char *)v11 + *(int *)(sub_1000BA294(&qword_100BC48B8) + 48);
      sub_10007802C((uint64_t)v11, a1, type metadata accessor for NotificationSettingsInput);
      _s7Weather24LocationCompositionStateOwst_0(a1, 0, 1, v3);
      sub_10019E948(*(_QWORD *)v14, *((_QWORD *)v14 + 1), *((_QWORD *)v14 + 2), *((_QWORD *)v14 + 3), *((_QWORD *)v14 + 4), *((_QWORD *)v14 + 5), *((_QWORD *)v14 + 6), *((_QWORD *)v14 + 7), *((_QWORD *)v14 + 8), *((_QWORD *)v14 + 9), *((_QWORD *)v14 + 10), *((_QWORD *)v14 + 11), v14[96]);
    }
    else
    {
      _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, v3);
      sub_100021A14((uint64_t)v11, &qword_100BC48A0);
    }
  }
  else
  {
    v15 = *v11;
    v16 = v11[1];
    v18 = v11[2];
    v17 = v11[3];
    v15();
    ((void (*)(_OWORD *__return_ptr, _BYTE *))v18)(v26, v5);
    swift_release(v17);
    swift_release(v16);
    v19 = &v9[*(int *)(sub_1000BA294(&qword_100BC48B8) + 48)];
    sub_100080C0C((uint64_t)v5, (uint64_t)v9, type metadata accessor for NotificationSettingsInput);
    v20 = v27;
    v21 = v26[1];
    *(_OWORD *)v19 = v26[0];
    *((_OWORD *)v19 + 1) = v21;
    v22 = v26[3];
    *((_OWORD *)v19 + 2) = v26[2];
    *((_OWORD *)v19 + 3) = v22;
    v23 = v26[5];
    *((_OWORD *)v19 + 4) = v26[4];
    *((_OWORD *)v19 + 5) = v23;
    v19[96] = v20;
    swift_storeEnumTagMultiPayload(v9, v6, 1);
    swift_beginAccess(v12, v25, 33, 0);
    sub_1000A3908((uint64_t)v9, v12, &qword_100BC48A0);
    swift_endAccess(v25);
    sub_10007802C((uint64_t)v5, a1, type metadata accessor for NotificationSettingsInput);
    _s7Weather24LocationCompositionStateOwst_0(a1, 0, 1, v3);
  }
}

uint64_t sub_100182F4C(uint64_t a1, uint64_t a2, void (*a3)(_QWORD *__return_ptr, void *, uint64_t (*)(uint64_t a1), _QWORD *, __n128), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v18)@<X0>(uint64_t *@<X8>);
  uint64_t v19;
  uint64_t (**v20)@<X0>(uint64_t *@<X8>);
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  _QWORD *v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v33;
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;

  v11 = v10;
  v18 = (uint64_t (*)@<X0>(uint64_t *@<X8>))swift_allocObject(&unk_100B5D330, 64, 7);
  *((_QWORD *)v18 + 2) = a7;
  *((_QWORD *)v18 + 3) = a8;
  *((_QWORD *)v18 + 4) = a1;
  *((_QWORD *)v18 + 5) = a2;
  v33 = a2;
  *((_QWORD *)v18 + 6) = a3;
  *((_QWORD *)v18 + 7) = a4;
  v19 = swift_allocObject(&unk_100B5D358, 32, 7);
  *(_QWORD *)(v19 + 16) = a9;
  *(_QWORD *)(v19 + 24) = a10;
  v20 = (uint64_t (**)@<X0>(uint64_t *@<X8>))(v11 + *(_QWORD *)(*(_QWORD *)v11 + 120));
  *v20 = sub_10019CF64;
  v20[1] = v18;
  v20[2] = (uint64_t (*)@<X0>(uint64_t *@<X8>))sub_10019CFB0;
  v20[3] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v19;
  v21 = sub_1000BA294(&qword_100BC43B8);
  swift_storeEnumTagMultiPayload(v20, v21, 0);
  sub_10009FFE0();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v23 = (void *)static OS_dispatch_queue.main.getter(v22);
  v24 = swift_allocObject(&unk_100B5D380, 24, 7);
  swift_weakInit(v24 + 16, v11);
  v25 = (_QWORD *)swift_allocObject(&unk_100B5D3A8, 72, 7);
  v25[2] = v24;
  v25[3] = a5;
  v25[4] = a6;
  v25[5] = a7;
  v25[6] = a8;
  v25[7] = a9;
  v25[8] = a10;
  swift_retain();
  swift_retain();
  swift_retain();
  v26 = swift_retain();
  a3(v36, v23, sub_10019CFBC, v25, v26);

  swift_release(v24);
  swift_release(v25);
  v27 = v37;
  v28 = v38;
  sub_1000DB418(v36, v37);
  swift_retain();
  dispatch thunk of Disposable.dispose(on:)(v29, v27, v28);
  swift_release(a4);
  swift_release(v33);
  swift_release(v18);
  swift_release(v19);
  swift_release(a6);
  swift_release(a8);
  swift_release(a10);
  swift_release(v11);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v36);
  return v11;
}

#error "100183254: call analysis failed (funcsize=62)"

#error "100183380: call analysis failed (funcsize=68)"

#error "100183498: call analysis failed (funcsize=62)"

#error "1001835B0: call analysis failed (funcsize=62)"

#error "1001836C8: call analysis failed (funcsize=62)"

#error "1001837E0: call analysis failed (funcsize=62)"

#error "1001838F8: call analysis failed (funcsize=62)"

#error "100183A24: call analysis failed (funcsize=68)"

#error "100183B3C: call analysis failed (funcsize=62)"

#error "100183C54: call analysis failed (funcsize=62)"

#error "100183D6C: call analysis failed (funcsize=62)"

#error "100183E84: call analysis failed (funcsize=62)"

#error "100183FB0: call analysis failed (funcsize=68)"

#error "1001840C8: call analysis failed (funcsize=62)"

#error "1001841E0: call analysis failed (funcsize=62)"

#error "1001842F8: call analysis failed (funcsize=62)"

#error "100184410: call analysis failed (funcsize=62)"

#error "100184540: call analysis failed (funcsize=69)"

#error "100184658: call analysis failed (funcsize=62)"

#error "100184770: call analysis failed (funcsize=62)"

#error "100184888: call analysis failed (funcsize=62)"

void sub_1001848F0(void (*a1)(uint64_t *)@<X0>, void (*a2)(uint64_t *__return_ptr, uint64_t)@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;
  uint64_t v17;
  unint64_t v18;

  v6 = sub_1000BA294(&qword_100BC4418);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(&v17, v7);
  v10 = v17;
  a1(&v17);
  swift_release(v10);
  v11 = type metadata accessor for MoonDetailInput(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v11) == 1)
  {
    sub_100021A14((uint64_t)v9, &qword_100BC4418);
    v17 = 0;
    v18 = 0xE000000000000000;
    _StringGuts.grow(_:)(82);
    v12._countAndFlagsBits = 0xD00000000000004BLL;
    v12._object = (void *)0x80000001009F12E0;
    String.append(_:)(v12);
    v13._countAndFlagsBits = 0x617465446E6F6F4DLL;
    v13._object = (void *)0xEF7475706E496C69;
    String.append(_:)(v13);
    v14._countAndFlagsBits = 8236;
    v14._object = (void *)0xE200000000000000;
    String.append(_:)(v14);
    v15._object = (void *)0x80000001009F1330;
    v15._countAndFlagsBits = 0xD000000000000013;
    String.append(_:)(v15);
    v16._countAndFlagsBits = 46;
    v16._object = (void *)0xE100000000000000;
    String.append(_:)(v16);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v17, v18, "Weather/Selector.swift", 22, 2);
    __break(1u);
  }
  else
  {
    sub_10007802C((uint64_t)v9, a3, type metadata accessor for MoonDetailInput);
  }
}

void sub_100184AAC(void (*a1)(uint64_t *)@<X0>, void (*a2)(uint64_t *__return_ptr, uint64_t)@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;
  uint64_t v17;
  unint64_t v18;

  v6 = sub_1000BA294(&qword_100BC4470);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(&v17, v7);
  v10 = v17;
  a1(&v17);
  swift_release(v10);
  v11 = type metadata accessor for ConditionDetailInput(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v11) == 1)
  {
    sub_100021A14((uint64_t)v9, &qword_100BC4470);
    v17 = 0;
    v18 = 0xE000000000000000;
    _StringGuts.grow(_:)(82);
    v12._countAndFlagsBits = 0xD00000000000004BLL;
    v12._object = (void *)0x80000001009F12E0;
    String.append(_:)(v12);
    v13._object = (void *)0x80000001009F1370;
    v13._countAndFlagsBits = 0xD000000000000014;
    String.append(_:)(v13);
    v14._countAndFlagsBits = 8236;
    v14._object = (void *)0xE200000000000000;
    String.append(_:)(v14);
    v15._countAndFlagsBits = 0xD000000000000018;
    v15._object = (void *)0x80000001009F1390;
    String.append(_:)(v15);
    v16._countAndFlagsBits = 46;
    v16._object = (void *)0xE100000000000000;
    String.append(_:)(v16);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v17, v18, "Weather/Selector.swift", 22, 2);
    __break(1u);
  }
  else
  {
    sub_10007802C((uint64_t)v9, a3, type metadata accessor for ConditionDetailInput);
  }
}

uint64_t sub_100184C5C@<X0>(void (*a1)(uint64_t *__return_ptr, uint64_t *)@<X0>, void (*a2)(uint64_t *__return_ptr)@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t result;
  __int16 v7;
  Swift::String v8;
  Swift::String v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int16 v18;

  a2(&v13);
  v5 = v13;
  a1(&v14, &v13);
  result = swift_release(v5);
  if (v14 == 1)
  {
    v14 = 0;
    *(_QWORD *)&v15 = 0xE000000000000000;
    _StringGuts.grow(_:)(82);
    v8._countAndFlagsBits = 0xD00000000000004BLL;
    v8._object = (void *)0x80000001009F12E0;
    String.append(_:)(v8);
    v9._object = (void *)0x80000001009F13B0;
    v9._countAndFlagsBits = 0xD000000000000017;
    String.append(_:)(v9);
    v10._countAndFlagsBits = 8236;
    v10._object = (void *)0xE200000000000000;
    String.append(_:)(v10);
    v11._countAndFlagsBits = 0xD00000000000001BLL;
    v11._object = (void *)0x80000001009F13D0;
    String.append(_:)(v11);
    v12._countAndFlagsBits = 46;
    v12._object = (void *)0xE100000000000000;
    String.append(_:)(v12);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v14, v15, "Weather/Selector.swift", 22, 2);
    __break(1u);
  }
  else
  {
    v7 = v18;
    *(_QWORD *)a3 = v14;
    *(_OWORD *)(a3 + 8) = v15;
    *(_OWORD *)(a3 + 24) = v16;
    *(_OWORD *)(a3 + 40) = v17;
    *(_BYTE *)(a3 + 56) = v7;
    *(_BYTE *)(a3 + 57) = HIBYTE(v7) & 1;
  }
  return result;
}

void sub_100184DD0(void (*a1)(uint64_t *)@<X0>, void (*a2)(uint64_t *__return_ptr, uint64_t)@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;
  uint64_t v17;
  unint64_t v18;

  v6 = sub_1000BA294(&qword_100BC44D0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(&v17, v7);
  v10 = v17;
  a1(&v17);
  swift_release(v10);
  v11 = type metadata accessor for DayPickerInput(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v11) == 1)
  {
    sub_100021A14((uint64_t)v9, &qword_100BC44D0);
    v17 = 0;
    v18 = 0xE000000000000000;
    _StringGuts.grow(_:)(82);
    v12._countAndFlagsBits = 0xD00000000000004BLL;
    v12._object = (void *)0x80000001009F12E0;
    String.append(_:)(v12);
    v13._countAndFlagsBits = 0x656B636950796144;
    v13._object = (void *)0xEE007475706E4972;
    String.append(_:)(v13);
    v14._countAndFlagsBits = 8236;
    v14._object = (void *)0xE200000000000000;
    String.append(_:)(v14);
    v15._object = (void *)0x80000001009F13F0;
    v15._countAndFlagsBits = 0xD000000000000012;
    String.append(_:)(v15);
    v16._countAndFlagsBits = 46;
    v16._object = (void *)0xE100000000000000;
    String.append(_:)(v16);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v17, v18, "Weather/Selector.swift", 22, 2);
    __break(1u);
  }
  else
  {
    sub_10007802C((uint64_t)v9, a3, type metadata accessor for DayPickerInput);
  }
}

void sub_100184F8C(void (*a1)(uint64_t *)@<X0>, void (*a2)(uint64_t *__return_ptr, __n128)@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;
  uint64_t v17;
  unint64_t v18;

  v6 = sub_1000BA294(&qword_100BC4520);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(&v17, v7);
  v10 = v17;
  a1(&v17);
  swift_release(v10);
  v11 = type metadata accessor for WeatherMenuInput(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v11) == 1)
  {
    sub_100021A14((uint64_t)v9, &qword_100BC4520);
    v17 = 0;
    v18 = 0xE000000000000000;
    _StringGuts.grow(_:)(82);
    v12._countAndFlagsBits = 0xD00000000000004BLL;
    v12._object = (void *)0x80000001009F12E0;
    String.append(_:)(v12);
    v13._object = (void *)0x80000001009F1430;
    v13._countAndFlagsBits = 0xD000000000000010;
    String.append(_:)(v13);
    v14._countAndFlagsBits = 8236;
    v14._object = (void *)0xE200000000000000;
    String.append(_:)(v14);
    v15._countAndFlagsBits = 0xD000000000000014;
    v15._object = (void *)0x80000001009F1450;
    String.append(_:)(v15);
    v16._countAndFlagsBits = 46;
    v16._object = (void *)0xE100000000000000;
    String.append(_:)(v16);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v17, v18, "Weather/Selector.swift", 22, 2);
    __break(1u);
  }
  else
  {
    sub_10007802C((uint64_t)v9, a3, type metadata accessor for WeatherMenuInput);
  }
}

uint64_t sub_10018513C(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  uint64_t v4;
  uint64_t result;
  Swift::String v6;
  Swift::String v7;
  Swift::String v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  a3(&v11);
  v4 = v11;
  a1(&v13, &v11);
  result = swift_release(v4);
  if ((v13 & 1) != 0)
  {
    v11 = 0;
    v12 = 0xE000000000000000;
    _StringGuts.grow(_:)(82);
    v6._countAndFlagsBits = 0xD00000000000004BLL;
    v6._object = (void *)0x80000001009F12E0;
    String.append(_:)(v6);
    v7._object = (void *)0x80000001009F1470;
    v7._countAndFlagsBits = 0xD000000000000019;
    String.append(_:)(v7);
    v8._countAndFlagsBits = 8236;
    v8._object = (void *)0xE200000000000000;
    String.append(_:)(v8);
    v9._countAndFlagsBits = 0xD00000000000001DLL;
    v9._object = (void *)0x80000001009F1490;
    String.append(_:)(v9);
    v10._countAndFlagsBits = 46;
    v10._object = (void *)0xE100000000000000;
    String.append(_:)(v10);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v11, v12, "Weather/Selector.swift", 22, 2);
    __break(1u);
  }
  return result;
}

void sub_100185274(void (*a1)(uint64_t *)@<X0>, void (*a2)(uint64_t *__return_ptr, uint64_t)@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;
  uint64_t v17;
  unint64_t v18;

  v6 = sub_1000BA294(&qword_100BC4568);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(&v17, v7);
  v10 = v17;
  a1(&v17);
  swift_release(v10);
  v11 = type metadata accessor for LocationPreviewInput(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v11) == 1)
  {
    sub_100021A14((uint64_t)v9, &qword_100BC4568);
    v17 = 0;
    v18 = 0xE000000000000000;
    _StringGuts.grow(_:)(82);
    v12._countAndFlagsBits = 0xD00000000000004BLL;
    v12._object = (void *)0x80000001009F12E0;
    String.append(_:)(v12);
    v13._object = (void *)0x80000001009F14B0;
    v13._countAndFlagsBits = 0xD000000000000014;
    String.append(_:)(v13);
    v14._countAndFlagsBits = 8236;
    v14._object = (void *)0xE200000000000000;
    String.append(_:)(v14);
    v15._countAndFlagsBits = 0xD000000000000018;
    v15._object = (void *)0x80000001009F14D0;
    String.append(_:)(v15);
    v16._countAndFlagsBits = 46;
    v16._object = (void *)0xE100000000000000;
    String.append(_:)(v16);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v17, v18, "Weather/Selector.swift", 22, 2);
    __break(1u);
  }
  else
  {
    sub_10007802C((uint64_t)v9, a3, type metadata accessor for LocationPreviewInput);
  }
}

void sub_100185424(void (*a1)(uint64_t *)@<X0>, void (*a2)(uint64_t *__return_ptr, uint64_t)@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;
  uint64_t v17;
  unint64_t v18;

  v6 = sub_1000BA294(&qword_100BC45A0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(&v17, v7);
  v10 = v17;
  a1(&v17);
  swift_release(v10);
  v11 = type metadata accessor for InteractiveMapInput(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v11) == 1)
  {
    sub_100021A14((uint64_t)v9, &qword_100BC45A0);
    v17 = 0;
    v18 = 0xE000000000000000;
    _StringGuts.grow(_:)(82);
    v12._countAndFlagsBits = 0xD00000000000004BLL;
    v12._object = (void *)0x80000001009F12E0;
    String.append(_:)(v12);
    v13._object = (void *)0x80000001009F14F0;
    v13._countAndFlagsBits = 0xD000000000000013;
    String.append(_:)(v13);
    v14._countAndFlagsBits = 8236;
    v14._object = (void *)0xE200000000000000;
    String.append(_:)(v14);
    v15._countAndFlagsBits = 0xD000000000000017;
    v15._object = (void *)0x80000001009F1510;
    String.append(_:)(v15);
    v16._countAndFlagsBits = 46;
    v16._object = (void *)0xE100000000000000;
    String.append(_:)(v16);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v17, v18, "Weather/Selector.swift", 22, 2);
    __break(1u);
  }
  else
  {
    sub_10007802C((uint64_t)v9, a3, type metadata accessor for InteractiveMapInput);
  }
}

void sub_1001855D4(void (*a1)(uint64_t *)@<X0>, void (*a2)(uint64_t *__return_ptr, uint64_t)@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t HourPrecipitationDetailInput;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;
  uint64_t v17;
  unint64_t v18;

  v6 = sub_1000BA294(&qword_100BC45D8);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(&v17, v7);
  v10 = v17;
  a1(&v17);
  swift_release(v10);
  HourPrecipitationDetailInput = type metadata accessor for NextHourPrecipitationDetailInput(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, HourPrecipitationDetailInput) == 1)
  {
    sub_100021A14((uint64_t)v9, &qword_100BC45D8);
    v17 = 0;
    v18 = 0xE000000000000000;
    _StringGuts.grow(_:)(82);
    v12._countAndFlagsBits = 0xD00000000000004BLL;
    v12._object = (void *)0x80000001009F12E0;
    String.append(_:)(v12);
    v13._object = (void *)0x80000001009F1530;
    v13._countAndFlagsBits = 0xD000000000000020;
    String.append(_:)(v13);
    v14._countAndFlagsBits = 8236;
    v14._object = (void *)0xE200000000000000;
    String.append(_:)(v14);
    v15._countAndFlagsBits = 0xD000000000000024;
    v15._object = (void *)0x80000001009F1560;
    String.append(_:)(v15);
    v16._countAndFlagsBits = 46;
    v16._object = (void *)0xE100000000000000;
    String.append(_:)(v16);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v17, v18, "Weather/Selector.swift", 22, 2);
    __break(1u);
  }
  else
  {
    sub_10007802C((uint64_t)v9, a3, type metadata accessor for NextHourPrecipitationDetailInput);
  }
}

void sub_100185784(void (*a1)(uint64_t *)@<X0>, void (*a2)(uint64_t *__return_ptr, __n128)@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;
  uint64_t v17;
  unint64_t v18;

  v6 = sub_1000BA294(&qword_100BC46F8);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(&v17, v7);
  v10 = v17;
  a1(&v17);
  swift_release(v10);
  v11 = type metadata accessor for ListInput(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v11) == 1)
  {
    sub_100021A14((uint64_t)v9, &qword_100BC46F8);
    v17 = 0;
    v18 = 0xE000000000000000;
    _StringGuts.grow(_:)(82);
    v12._object = (void *)0x80000001009F12E0;
    v12._countAndFlagsBits = 0xD00000000000004BLL;
    String.append(_:)(v12);
    v13._countAndFlagsBits = 0x75706E497473694CLL;
    v13._object = (void *)0xE900000000000074;
    String.append(_:)(v13);
    v14._countAndFlagsBits = 8236;
    v14._object = (void *)0xE200000000000000;
    String.append(_:)(v14);
    v15._countAndFlagsBits = 0x776569567473694CLL;
    v15._object = (void *)0xED00006C65646F4DLL;
    String.append(_:)(v15);
    v16._countAndFlagsBits = 46;
    v16._object = (void *)0xE100000000000000;
    String.append(_:)(v16);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v17, v18, "Weather/Selector.swift", 22, 2);
    __break(1u);
  }
  else
  {
    sub_10007802C((uint64_t)v9, a3, type metadata accessor for ListInput);
  }
}

void sub_10018593C(void (*a1)(uint64_t *)@<X0>, void (*a2)(uint64_t *__return_ptr, uint64_t)@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;
  uint64_t v17;
  unint64_t v18;

  v6 = sub_1000BA294(&qword_100BC4738);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(&v17, v7);
  v10 = v17;
  a1(&v17);
  swift_release(v10);
  v11 = type metadata accessor for NotificationsOptInInput(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v11) == 1)
  {
    sub_100021A14((uint64_t)v9, &qword_100BC4738);
    v17 = 0;
    v18 = 0xE000000000000000;
    _StringGuts.grow(_:)(82);
    v12._countAndFlagsBits = 0xD00000000000004BLL;
    v12._object = (void *)0x80000001009F12E0;
    String.append(_:)(v12);
    v13._object = (void *)0x80000001009F1680;
    v13._countAndFlagsBits = 0xD000000000000017;
    String.append(_:)(v13);
    v14._countAndFlagsBits = 8236;
    v14._object = (void *)0xE200000000000000;
    String.append(_:)(v14);
    v15._countAndFlagsBits = 0xD00000000000001BLL;
    v15._object = (void *)0x80000001009F16A0;
    String.append(_:)(v15);
    v16._countAndFlagsBits = 46;
    v16._object = (void *)0xE100000000000000;
    String.append(_:)(v16);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v17, v18, "Weather/Selector.swift", 22, 2);
    __break(1u);
  }
  else
  {
    sub_10007802C((uint64_t)v9, a3, type metadata accessor for NotificationsOptInInput);
  }
}

void sub_100185AEC(void (*a1)(uint64_t *)@<X0>, void (*a2)(uint64_t *__return_ptr, uint64_t)@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;
  uint64_t v17;
  unint64_t v18;

  v6 = sub_1000BA294(&qword_100BC4790);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(&v17, v7);
  v10 = v17;
  a1(&v17);
  swift_release(v10);
  v11 = type metadata accessor for AveragesDetailInput(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v11) == 1)
  {
    sub_100021A14((uint64_t)v9, &qword_100BC4790);
    v17 = 0;
    v18 = 0xE000000000000000;
    _StringGuts.grow(_:)(82);
    v12._countAndFlagsBits = 0xD00000000000004BLL;
    v12._object = (void *)0x80000001009F12E0;
    String.append(_:)(v12);
    v13._object = (void *)0x80000001009F16C0;
    v13._countAndFlagsBits = 0xD000000000000013;
    String.append(_:)(v13);
    v14._countAndFlagsBits = 8236;
    v14._object = (void *)0xE200000000000000;
    String.append(_:)(v14);
    v15._countAndFlagsBits = 0xD000000000000017;
    v15._object = (void *)0x80000001009F16E0;
    String.append(_:)(v15);
    v16._countAndFlagsBits = 46;
    v16._object = (void *)0xE100000000000000;
    String.append(_:)(v16);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v17, v18, "Weather/Selector.swift", 22, 2);
    __break(1u);
  }
  else
  {
    sub_10007802C((uint64_t)v9, a3, type metadata accessor for AveragesDetailInput);
  }
}

void sub_100185C9C(void (*a1)(uint64_t *)@<X0>, void (*a2)(uint64_t *__return_ptr, uint64_t)@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;
  uint64_t v17;
  unint64_t v18;

  v6 = sub_1000BA294(&qword_100BC47C8);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(&v17, v7);
  v10 = v17;
  a1(&v17);
  swift_release(v10);
  v11 = type metadata accessor for MoonScrubberInput(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v11) == 1)
  {
    sub_100021A14((uint64_t)v9, &qword_100BC47C8);
    v17 = 0;
    v18 = 0xE000000000000000;
    _StringGuts.grow(_:)(82);
    v12._countAndFlagsBits = 0xD00000000000004BLL;
    v12._object = (void *)0x80000001009F12E0;
    String.append(_:)(v12);
    v13._object = (void *)0x80000001009F1700;
    v13._countAndFlagsBits = 0xD000000000000011;
    String.append(_:)(v13);
    v14._countAndFlagsBits = 8236;
    v14._object = (void *)0xE200000000000000;
    String.append(_:)(v14);
    v15._countAndFlagsBits = 0xD000000000000015;
    v15._object = (void *)0x80000001009F1720;
    String.append(_:)(v15);
    v16._countAndFlagsBits = 46;
    v16._object = (void *)0xE100000000000000;
    String.append(_:)(v16);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v17, v18, "Weather/Selector.swift", 22, 2);
    __break(1u);
  }
  else
  {
    sub_10007802C((uint64_t)v9, a3, type metadata accessor for MoonScrubberInput);
  }
}

void sub_100185E4C(void (*a1)(uint64_t *)@<X0>, void (*a2)(uint64_t *__return_ptr, uint64_t)@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;
  uint64_t v17;
  unint64_t v18;

  v6 = sub_1000BA294(&qword_100BC4800);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(&v17, v7);
  v10 = v17;
  a1(&v17);
  swift_release(v10);
  v11 = type metadata accessor for SunriseSunsetDetailInput(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v11) == 1)
  {
    sub_100021A14((uint64_t)v9, &qword_100BC4800);
    v17 = 0;
    v18 = 0xE000000000000000;
    _StringGuts.grow(_:)(82);
    v12._countAndFlagsBits = 0xD00000000000004BLL;
    v12._object = (void *)0x80000001009F12E0;
    String.append(_:)(v12);
    v13._object = (void *)0x80000001009F1740;
    v13._countAndFlagsBits = 0xD000000000000018;
    String.append(_:)(v13);
    v14._countAndFlagsBits = 8236;
    v14._object = (void *)0xE200000000000000;
    String.append(_:)(v14);
    v15._countAndFlagsBits = 0xD00000000000001CLL;
    v15._object = (void *)0x80000001009F1760;
    String.append(_:)(v15);
    v16._countAndFlagsBits = 46;
    v16._object = (void *)0xE100000000000000;
    String.append(_:)(v16);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v17, v18, "Weather/Selector.swift", 22, 2);
    __break(1u);
  }
  else
  {
    sub_10007802C((uint64_t)v9, a3, type metadata accessor for SunriseSunsetDetailInput);
  }
}

uint64_t sub_100185FFC(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  uint64_t v4;
  uint64_t result;
  Swift::String v6;
  Swift::String v7;
  Swift::String v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  a3(&v11);
  v4 = v11;
  a1(&v12, &v11);
  swift_release(v4);
  result = v12;
  if (!v12)
  {
    v12 = 0;
    v13 = 0xE000000000000000;
    _StringGuts.grow(_:)(82);
    v6._countAndFlagsBits = 0xD00000000000004BLL;
    v6._object = (void *)0x80000001009F12E0;
    String.append(_:)(v6);
    v7._countAndFlagsBits = 0x756E654D7473694CLL;
    v7._object = (void *)0xED00007475706E49;
    String.append(_:)(v7);
    v8._countAndFlagsBits = 8236;
    v8._object = (void *)0xE200000000000000;
    String.append(_:)(v8);
    v9._object = (void *)0x80000001009F1780;
    v9._countAndFlagsBits = 0xD000000000000011;
    String.append(_:)(v9);
    v10._countAndFlagsBits = 46;
    v10._object = (void *)0xE100000000000000;
    String.append(_:)(v10);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v12, v13, "Weather/Selector.swift", 22, 2);
    __break(1u);
  }
  return result;
}

void sub_10018614C(void (*a1)(uint64_t *)@<X0>, void (*a2)(uint64_t *__return_ptr, uint64_t)@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;
  uint64_t v17;
  unint64_t v18;

  v6 = sub_1000BA294(&qword_100BC4848);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(&v17, v7);
  v10 = v17;
  a1(&v17);
  swift_release(v10);
  v11 = type metadata accessor for MoonCalendarInput(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v11) == 1)
  {
    sub_100021A14((uint64_t)v9, &qword_100BC4848);
    v17 = 0;
    v18 = 0xE000000000000000;
    _StringGuts.grow(_:)(82);
    v12._countAndFlagsBits = 0xD00000000000004BLL;
    v12._object = (void *)0x80000001009F12E0;
    String.append(_:)(v12);
    v13._object = (void *)0x80000001009F17A0;
    v13._countAndFlagsBits = 0xD000000000000011;
    String.append(_:)(v13);
    v14._countAndFlagsBits = 8236;
    v14._object = (void *)0xE200000000000000;
    String.append(_:)(v14);
    v15._countAndFlagsBits = 0xD000000000000015;
    v15._object = (void *)0x80000001009F17C0;
    String.append(_:)(v15);
    v16._countAndFlagsBits = 46;
    v16._object = (void *)0xE100000000000000;
    String.append(_:)(v16);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v17, v18, "Weather/Selector.swift", 22, 2);
    __break(1u);
  }
  else
  {
    sub_10007802C((uint64_t)v9, a3, type metadata accessor for MoonCalendarInput);
  }
}

void sub_1001862FC(void (*a1)(uint64_t *)@<X0>, void (*a2)(uint64_t *__return_ptr, __n128)@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;
  uint64_t v16;
  unint64_t v17;

  v6 = sub_1000BA294(&qword_100BC4880);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(&v16, v7);
  a1(&v16);
  swift_release();
  v10 = type metadata accessor for HomeAndWorkRefinementInput(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10) == 1)
  {
    sub_100021A14((uint64_t)v9, &qword_100BC4880);
    v16 = 0;
    v17 = 0xE000000000000000;
    _StringGuts.grow(_:)(82);
    v11._countAndFlagsBits = 0xD00000000000004BLL;
    v11._object = (void *)0x80000001009F12E0;
    String.append(_:)(v11);
    v12._object = (void *)0x80000001009F17E0;
    v12._countAndFlagsBits = 0xD00000000000001ALL;
    String.append(_:)(v12);
    v13._countAndFlagsBits = 8236;
    v13._object = (void *)0xE200000000000000;
    String.append(_:)(v13);
    v14._countAndFlagsBits = 0xD00000000000001ELL;
    v14._object = (void *)0x80000001009F1800;
    String.append(_:)(v14);
    v15._countAndFlagsBits = 46;
    v15._object = (void *)0xE100000000000000;
    String.append(_:)(v15);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v16, v17, "Weather/Selector.swift", 22, 2);
    __break(1u);
  }
  else
  {
    sub_10007802C((uint64_t)v9, a3, type metadata accessor for HomeAndWorkRefinementInput);
  }
}

void sub_1001864AC(void (*a1)(uint64_t *)@<X0>, void (*a2)(uint64_t *__return_ptr, uint64_t)@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;
  uint64_t v17;
  unint64_t v18;

  v6 = sub_1000BA294(&qword_100BC48B0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(&v17, v7);
  v10 = v17;
  a1(&v17);
  swift_release(v10);
  v11 = type metadata accessor for NotificationSettingsInput(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v11) == 1)
  {
    sub_100021A14((uint64_t)v9, &qword_100BC48B0);
    v17 = 0;
    v18 = 0xE000000000000000;
    _StringGuts.grow(_:)(82);
    v12._countAndFlagsBits = 0xD00000000000004BLL;
    v12._object = (void *)0x80000001009F12E0;
    String.append(_:)(v12);
    v13._object = (void *)0x80000001009F1820;
    v13._countAndFlagsBits = 0xD000000000000019;
    String.append(_:)(v13);
    v14._countAndFlagsBits = 8236;
    v14._object = (void *)0xE200000000000000;
    String.append(_:)(v14);
    v15._countAndFlagsBits = 0xD00000000000001DLL;
    v15._object = (void *)0x80000001009F1840;
    String.append(_:)(v15);
    v16._countAndFlagsBits = 46;
    v16._object = (void *)0xE100000000000000;
    String.append(_:)(v16);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v17, v18, "Weather/Selector.swift", 22, 2);
    __break(1u);
  }
  else
  {
    sub_10007802C((uint64_t)v9, a3, type metadata accessor for NotificationSettingsInput);
  }
}

void sub_10018665C(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  uint64_t v15;
  unint64_t v16;

  v6 = sub_1000BA294(&qword_100BC4408);
  __chkstk_darwin(v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(a1);
  v9 = type metadata accessor for MoonDetailViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9) == 1)
  {
    sub_100021A14((uint64_t)v8, &qword_100BC4408);
    v15 = 0;
    v16 = 0xE000000000000000;
    _StringGuts.grow(_:)(87);
    v10._countAndFlagsBits = 0xD000000000000050;
    v10._object = (void *)0x80000001009F1280;
    String.append(_:)(v10);
    v11._countAndFlagsBits = 0x617465446E6F6F4DLL;
    v11._object = (void *)0xEF7475706E496C69;
    String.append(_:)(v11);
    v12._countAndFlagsBits = 8236;
    v12._object = (void *)0xE200000000000000;
    String.append(_:)(v12);
    v13._object = (void *)0x80000001009F1330;
    v13._countAndFlagsBits = 0xD000000000000013;
    String.append(_:)(v13);
    v14._countAndFlagsBits = 46;
    v14._object = (void *)0xE100000000000000;
    String.append(_:)(v14);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v15, v16, "Weather/Selector.swift", 22, 2);
    __break(1u);
  }
  else
  {
    sub_10007802C((uint64_t)v8, a3, type metadata accessor for MoonDetailViewModel);
  }
}

_QWORD *sub_1001867F8@<X0>(uint64_t a1@<X0>, _QWORD *(*a2)(uint64_t *__return_ptr, uint64_t *)@<X1>, uint64_t a3@<X8>)
{
  _QWORD *result;
  uint64_t v5;
  Swift::String v6;
  Swift::String v7;
  Swift::String v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;

  v18 = a1;
  result = a2(&v11, &v18);
  if ((~v11 & 0xF000000000000006) != 0)
  {
    v5 = v17;
    *(_QWORD *)a3 = v11;
    *(_OWORD *)(a3 + 8) = v12;
    *(_OWORD *)(a3 + 24) = v13;
    *(_OWORD *)(a3 + 40) = v14;
    *(_OWORD *)(a3 + 56) = v15;
    *(_OWORD *)(a3 + 72) = v16;
    *(_QWORD *)(a3 + 88) = v5;
  }
  else
  {
    v11 = 0;
    *(_QWORD *)&v12 = 0xE000000000000000;
    _StringGuts.grow(_:)(87);
    v6._countAndFlagsBits = 0xD000000000000050;
    v6._object = (void *)0x80000001009F1280;
    String.append(_:)(v6);
    v7._countAndFlagsBits = 0x746174536E69614DLL;
    v7._object = (void *)0xE900000000000065;
    String.append(_:)(v7);
    v8._countAndFlagsBits = 8236;
    v8._object = (void *)0xE200000000000000;
    String.append(_:)(v8);
    v9._object = (void *)0x80000001009F1350;
    v9._countAndFlagsBits = 0xD000000000000016;
    String.append(_:)(v9);
    v10._countAndFlagsBits = 46;
    v10._object = (void *)0xE100000000000000;
    String.append(_:)(v10);
    result = (_QWORD *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v11, v12, "Weather/Selector.swift", 22, 2);
    __break(1u);
  }
  return result;
}

void sub_100186950(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  uint64_t v15;
  unint64_t v16;

  v6 = sub_1000BA294(&qword_100BC4460);
  __chkstk_darwin(v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(a1);
  v9 = type metadata accessor for ConditionDetailViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9) == 1)
  {
    sub_100021A14((uint64_t)v8, &qword_100BC4460);
    v15 = 0;
    v16 = 0xE000000000000000;
    _StringGuts.grow(_:)(87);
    v10._countAndFlagsBits = 0xD000000000000050;
    v10._object = (void *)0x80000001009F1280;
    String.append(_:)(v10);
    v11._object = (void *)0x80000001009F1370;
    v11._countAndFlagsBits = 0xD000000000000014;
    String.append(_:)(v11);
    v12._countAndFlagsBits = 8236;
    v12._object = (void *)0xE200000000000000;
    String.append(_:)(v12);
    v13._countAndFlagsBits = 0xD000000000000018;
    v13._object = (void *)0x80000001009F1390;
    String.append(_:)(v13);
    v14._countAndFlagsBits = 46;
    v14._object = (void *)0xE100000000000000;
    String.append(_:)(v14);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v15, v16, "Weather/Selector.swift", 22, 2);
    __break(1u);
  }
  else
  {
    sub_10007802C((uint64_t)v8, a3, type metadata accessor for ConditionDetailViewModel);
  }
}

void sub_100186AE0(_OWORD *a1@<X0>, void (*a2)(_OWORD *)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  uint64_t v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;
  uint64_t v16;
  unint64_t v17;
  _OWORD v18[2];
  _OWORD v19[2];

  v6 = sub_1000BA294(&qword_100BC4498);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[1];
  v18[0] = *a1;
  v18[1] = v9;
  v19[0] = a1[2];
  *(_OWORD *)((char *)v19 + 10) = *(_OWORD *)((char *)a1 + 42);
  a2(v18);
  v10 = type metadata accessor for UnitsConfigurationViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v10) == 1)
  {
    sub_100021A14((uint64_t)v8, &qword_100BC4498);
    v16 = 0;
    v17 = 0xE000000000000000;
    _StringGuts.grow(_:)(87);
    v11._countAndFlagsBits = 0xD000000000000050;
    v11._object = (void *)0x80000001009F1280;
    String.append(_:)(v11);
    v12._object = (void *)0x80000001009F13B0;
    v12._countAndFlagsBits = 0xD000000000000017;
    String.append(_:)(v12);
    v13._countAndFlagsBits = 8236;
    v13._object = (void *)0xE200000000000000;
    String.append(_:)(v13);
    v14._countAndFlagsBits = 0xD00000000000001BLL;
    v14._object = (void *)0x80000001009F13D0;
    String.append(_:)(v14);
    v15._countAndFlagsBits = 46;
    v15._object = (void *)0xE100000000000000;
    String.append(_:)(v15);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v16, v17, "Weather/Selector.swift", 22, 2);
    __break(1u);
  }
  else
  {
    sub_10007802C((uint64_t)v8, a3, type metadata accessor for UnitsConfigurationViewModel);
  }
}

void sub_100186C88(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  uint64_t v15;
  unint64_t v16;

  v6 = sub_1000BA294(&qword_100BC44C0);
  __chkstk_darwin(v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(a1);
  v9 = type metadata accessor for DayPickerViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9) == 1)
  {
    sub_100021A14((uint64_t)v8, &qword_100BC44C0);
    v15 = 0;
    v16 = 0xE000000000000000;
    _StringGuts.grow(_:)(87);
    v10._countAndFlagsBits = 0xD000000000000050;
    v10._object = (void *)0x80000001009F1280;
    String.append(_:)(v10);
    v11._countAndFlagsBits = 0x656B636950796144;
    v11._object = (void *)0xEE007475706E4972;
    String.append(_:)(v11);
    v12._countAndFlagsBits = 8236;
    v12._object = (void *)0xE200000000000000;
    String.append(_:)(v12);
    v13._object = (void *)0x80000001009F13F0;
    v13._countAndFlagsBits = 0xD000000000000012;
    String.append(_:)(v13);
    v14._countAndFlagsBits = 46;
    v14._object = (void *)0xE100000000000000;
    String.append(_:)(v14);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v15, v16, "Weather/Selector.swift", 22, 2);
    __break(1u);
  }
  else
  {
    sub_10007802C((uint64_t)v8, a3, type metadata accessor for DayPickerViewModel);
  }
}

void sub_100186E24()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);
  uint64_t (*v2)(_QWORD);
  uint64_t *v3;
  uint64_t *v4;
  void (*v5)(uint64_t *);
  void (*v6)(uint64_t *);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1000986AC();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  sub_1000BA294(v3);
  sub_1000B42B0();
  __chkstk_darwin(v11);
  sub_10009E540();
  v16 = v8;
  v6(&v16);
  v12 = sub_1000C0894();
  if (_s7Weather24LocationCompositionStateOwet_0(v0, 1, v12) == 1)
  {
    sub_100021A14(v0, v4);
    _StringGuts.grow(_:)(87);
    v13._object = (void *)0x80000001009F1280;
    v13._countAndFlagsBits = 0xD000000000000050;
    String.append(_:)(v13);
    sub_1000BF090();
    sub_10009DE78();
    sub_1000FD9D4();
    sub_10003BC84();
    sub_1000BD924((uint64_t)"Fatal error", v14, v15, 0, 0xE000000000000000, (uint64_t)"Weather/Selector.swift");
    __break(1u);
  }
  else
  {
    sub_10007802C(v0, v10, v2);
    sub_100098640();
  }
}

void sub_100186F44(uint64_t a1@<X0>, void (*a2)(uint64_t, __n128)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;
  uint64_t v16;
  unint64_t v17;

  v6 = sub_1000BA294(&qword_100BC4510);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(a1, v7);
  v10 = type metadata accessor for WeatherMenuViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10) == 1)
  {
    sub_100021A14((uint64_t)v9, &qword_100BC4510);
    v16 = 0;
    v17 = 0xE000000000000000;
    _StringGuts.grow(_:)(87);
    v11._countAndFlagsBits = 0xD000000000000050;
    v11._object = (void *)0x80000001009F1280;
    String.append(_:)(v11);
    v12._object = (void *)0x80000001009F1430;
    v12._countAndFlagsBits = 0xD000000000000010;
    String.append(_:)(v12);
    v13._countAndFlagsBits = 8236;
    v13._object = (void *)0xE200000000000000;
    String.append(_:)(v13);
    v14._countAndFlagsBits = 0xD000000000000014;
    v14._object = (void *)0x80000001009F1450;
    String.append(_:)(v14);
    v15._countAndFlagsBits = 46;
    v15._object = (void *)0xE100000000000000;
    String.append(_:)(v15);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v16, v17, "Weather/Selector.swift", 22, 2);
    __break(1u);
  }
  else
  {
    sub_10007802C((uint64_t)v9, a3, type metadata accessor for WeatherMenuViewModel);
  }
}

uint64_t sub_1001870D4(void (*a1)(uint64_t *__return_ptr))
{
  uint64_t result;
  Swift::String v2;
  Swift::String v3;
  Swift::String v4;
  Swift::String v5;
  Swift::String v6;
  uint64_t v7;
  unint64_t v8;

  a1(&v7);
  if (v7 != 2)
    return v7 & 1;
  v7 = 0;
  v8 = 0xE000000000000000;
  _StringGuts.grow(_:)(87);
  v2._countAndFlagsBits = 0xD000000000000050;
  v2._object = (void *)0x80000001009F1280;
  String.append(_:)(v2);
  v3._object = (void *)0x80000001009F1470;
  v3._countAndFlagsBits = 0xD000000000000019;
  String.append(_:)(v3);
  v4._countAndFlagsBits = 8236;
  v4._object = (void *)0xE200000000000000;
  String.append(_:)(v4);
  v5._countAndFlagsBits = 0xD00000000000001DLL;
  v5._object = (void *)0x80000001009F1490;
  String.append(_:)(v5);
  v6._countAndFlagsBits = 46;
  v6._object = (void *)0xE100000000000000;
  String.append(_:)(v6);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v7, v8, "Weather/Selector.swift", 22, 2);
  __break(1u);
  return result;
}

void sub_1001871E4(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  uint64_t v15;
  unint64_t v16;

  v6 = sub_1000BA294(&qword_100BC4558);
  __chkstk_darwin(v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(a1);
  v9 = type metadata accessor for LocationPreviewViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9) == 1)
  {
    sub_100021A14((uint64_t)v8, &qword_100BC4558);
    v15 = 0;
    v16 = 0xE000000000000000;
    _StringGuts.grow(_:)(87);
    v10._countAndFlagsBits = 0xD000000000000050;
    v10._object = (void *)0x80000001009F1280;
    String.append(_:)(v10);
    v11._object = (void *)0x80000001009F14B0;
    v11._countAndFlagsBits = 0xD000000000000014;
    String.append(_:)(v11);
    v12._countAndFlagsBits = 8236;
    v12._object = (void *)0xE200000000000000;
    String.append(_:)(v12);
    v13._countAndFlagsBits = 0xD000000000000018;
    v13._object = (void *)0x80000001009F14D0;
    String.append(_:)(v13);
    v14._countAndFlagsBits = 46;
    v14._object = (void *)0xE100000000000000;
    String.append(_:)(v14);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v15, v16, "Weather/Selector.swift", 22, 2);
    __break(1u);
  }
  else
  {
    sub_10007802C((uint64_t)v8, a3, type metadata accessor for LocationPreviewViewModel);
  }
}

void sub_100187374(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  uint64_t v15;
  unint64_t v16;

  v6 = sub_1000BA294(&qword_100BC4590);
  __chkstk_darwin(v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(a1);
  v9 = type metadata accessor for InteractiveMapViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9) == 1)
  {
    sub_100021A14((uint64_t)v8, &qword_100BC4590);
    v15 = 0;
    v16 = 0xE000000000000000;
    _StringGuts.grow(_:)(87);
    v10._countAndFlagsBits = 0xD000000000000050;
    v10._object = (void *)0x80000001009F1280;
    String.append(_:)(v10);
    v11._object = (void *)0x80000001009F14F0;
    v11._countAndFlagsBits = 0xD000000000000013;
    String.append(_:)(v11);
    v12._countAndFlagsBits = 8236;
    v12._object = (void *)0xE200000000000000;
    String.append(_:)(v12);
    v13._countAndFlagsBits = 0xD000000000000017;
    v13._object = (void *)0x80000001009F1510;
    String.append(_:)(v13);
    v14._countAndFlagsBits = 46;
    v14._object = (void *)0xE100000000000000;
    String.append(_:)(v14);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v15, v16, "Weather/Selector.swift", 22, 2);
    __break(1u);
  }
  else
  {
    sub_10007802C((uint64_t)v8, a3, type metadata accessor for InteractiveMapViewModel);
  }
}

void sub_100187504(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t HourPrecipitationDetailViewModel;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  uint64_t v15;
  unint64_t v16;

  v6 = sub_1000BA294(&qword_100BC45C8);
  __chkstk_darwin(v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(a1);
  HourPrecipitationDetailViewModel = type metadata accessor for NextHourPrecipitationDetailViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, HourPrecipitationDetailViewModel) == 1)
  {
    sub_100021A14((uint64_t)v8, &qword_100BC45C8);
    v15 = 0;
    v16 = 0xE000000000000000;
    _StringGuts.grow(_:)(87);
    v10._countAndFlagsBits = 0xD000000000000050;
    v10._object = (void *)0x80000001009F1280;
    String.append(_:)(v10);
    v11._object = (void *)0x80000001009F1530;
    v11._countAndFlagsBits = 0xD000000000000020;
    String.append(_:)(v11);
    v12._countAndFlagsBits = 8236;
    v12._object = (void *)0xE200000000000000;
    String.append(_:)(v12);
    v13._countAndFlagsBits = 0xD000000000000024;
    v13._object = (void *)0x80000001009F1560;
    String.append(_:)(v13);
    v14._countAndFlagsBits = 46;
    v14._object = (void *)0xE100000000000000;
    String.append(_:)(v14);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v15, v16, "Weather/Selector.swift", 22, 2);
    __break(1u);
  }
  else
  {
    sub_10007802C((uint64_t)v8, a3, type metadata accessor for NextHourPrecipitationDetailViewModel);
  }
}

void sub_100187694(uint64_t a1@<X0>, void (*a2)(uint64_t, __n128)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;
  uint64_t v16;
  unint64_t v17;

  v6 = sub_1000BA294(&qword_100BC46E8);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(a1, v7);
  v10 = type metadata accessor for ListViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10) == 1)
  {
    sub_100021A14((uint64_t)v9, &qword_100BC46E8);
    v16 = 0;
    v17 = 0xE000000000000000;
    _StringGuts.grow(_:)(87);
    v11._object = (void *)0x80000001009F1280;
    v11._countAndFlagsBits = 0xD000000000000050;
    String.append(_:)(v11);
    v12._countAndFlagsBits = 0x75706E497473694CLL;
    v12._object = (void *)0xE900000000000074;
    String.append(_:)(v12);
    v13._countAndFlagsBits = 8236;
    v13._object = (void *)0xE200000000000000;
    String.append(_:)(v13);
    v14._countAndFlagsBits = 0x776569567473694CLL;
    v14._object = (void *)0xED00006C65646F4DLL;
    String.append(_:)(v14);
    v15._countAndFlagsBits = 46;
    v15._object = (void *)0xE100000000000000;
    String.append(_:)(v15);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v16, v17, "Weather/Selector.swift", 22, 2);
    __break(1u);
  }
  else
  {
    sub_10007802C((uint64_t)v9, a3, type metadata accessor for ListViewModel);
  }
}

_QWORD *sub_10018782C@<X0>(uint64_t a1@<X0>, _QWORD *(*a2)(_OWORD *__return_ptr, uint64_t *)@<X1>, uint64_t a3@<X8>)
{
  _QWORD *result;
  unsigned __int8 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  Swift::String v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  _OWORD v14[6];
  unsigned __int8 v15;
  uint64_t v16;

  v16 = a1;
  result = a2(v14, &v16);
  v5 = v15;
  if (v15 == 255)
  {
    *(_QWORD *)&v14[0] = 0;
    *((_QWORD *)&v14[0] + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(87);
    v9._object = (void *)0x80000001009F1280;
    v9._countAndFlagsBits = 0xD000000000000050;
    String.append(_:)(v9);
    v10._countAndFlagsBits = 0x746174536E69614DLL;
    v10._object = (void *)0xE900000000000065;
    String.append(_:)(v10);
    v11._countAndFlagsBits = 8236;
    v11._object = (void *)0xE200000000000000;
    String.append(_:)(v11);
    v12._countAndFlagsBits = 0x6956686372616553;
    v12._object = (void *)0xEF6C65646F4D7765;
    String.append(_:)(v12);
    v13._countAndFlagsBits = 46;
    v13._object = (void *)0xE100000000000000;
    String.append(_:)(v13);
    result = (_QWORD *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, *(_QWORD *)&v14[0], *((_QWORD *)&v14[0] + 1), "Weather/Selector.swift", 22, 2);
    __break(1u);
  }
  else
  {
    v6 = v14[1];
    *(_OWORD *)a3 = v14[0];
    *(_OWORD *)(a3 + 16) = v6;
    v7 = v14[3];
    *(_OWORD *)(a3 + 32) = v14[2];
    *(_OWORD *)(a3 + 48) = v7;
    v8 = v14[5];
    *(_OWORD *)(a3 + 64) = v14[4];
    *(_OWORD *)(a3 + 80) = v8;
    *(_BYTE *)(a3 + 96) = v5;
  }
  return result;
}

uint64_t sub_100187968(uint64_t a1, void (*a2)(uint64_t *__return_ptr))
{
  uint64_t result;
  Swift::String v3;
  Swift::String v4;
  Swift::String v5;
  Swift::String v6;
  Swift::String v7;
  uint64_t v8;
  unint64_t v9;

  a2(&v8);
  if ((v8 & 0xFF0000) != 0x20000)
    return v8 & 0xFF01FFFF;
  v8 = 0;
  v9 = 0xE000000000000000;
  _StringGuts.grow(_:)(87);
  v3._countAndFlagsBits = 0xD000000000000050;
  v3._object = (void *)0x80000001009F1280;
  String.append(_:)(v3);
  v4._object = (void *)0x80000001009F1680;
  v4._countAndFlagsBits = 0xD000000000000017;
  String.append(_:)(v4);
  v5._countAndFlagsBits = 8236;
  v5._object = (void *)0xE200000000000000;
  String.append(_:)(v5);
  v6._countAndFlagsBits = 0xD00000000000001BLL;
  v6._object = (void *)0x80000001009F16A0;
  String.append(_:)(v6);
  v7._countAndFlagsBits = 46;
  v7._object = (void *)0xE100000000000000;
  String.append(_:)(v7);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v8, v9, "Weather/Selector.swift", 22, 2);
  __break(1u);
  return result;
}

void sub_100187A7C(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  uint64_t v15;
  unint64_t v16;

  v6 = sub_1000BA294(&qword_100BC4780);
  __chkstk_darwin(v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(a1);
  v9 = type metadata accessor for AveragesDetailViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9) == 1)
  {
    sub_100021A14((uint64_t)v8, &qword_100BC4780);
    v15 = 0;
    v16 = 0xE000000000000000;
    _StringGuts.grow(_:)(87);
    v10._countAndFlagsBits = 0xD000000000000050;
    v10._object = (void *)0x80000001009F1280;
    String.append(_:)(v10);
    v11._object = (void *)0x80000001009F16C0;
    v11._countAndFlagsBits = 0xD000000000000013;
    String.append(_:)(v11);
    v12._countAndFlagsBits = 8236;
    v12._object = (void *)0xE200000000000000;
    String.append(_:)(v12);
    v13._countAndFlagsBits = 0xD000000000000017;
    v13._object = (void *)0x80000001009F16E0;
    String.append(_:)(v13);
    v14._countAndFlagsBits = 46;
    v14._object = (void *)0xE100000000000000;
    String.append(_:)(v14);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v15, v16, "Weather/Selector.swift", 22, 2);
    __break(1u);
  }
  else
  {
    sub_10007802C((uint64_t)v8, a3, type metadata accessor for AveragesDetailViewModel);
  }
}

void sub_100187C0C(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  uint64_t v15;
  unint64_t v16;

  v6 = sub_1000BA294(&qword_100BC47B8);
  __chkstk_darwin(v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(a1);
  v9 = type metadata accessor for MoonScrubberViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9) == 1)
  {
    sub_100021A14((uint64_t)v8, &qword_100BC47B8);
    v15 = 0;
    v16 = 0xE000000000000000;
    _StringGuts.grow(_:)(87);
    v10._countAndFlagsBits = 0xD000000000000050;
    v10._object = (void *)0x80000001009F1280;
    String.append(_:)(v10);
    v11._object = (void *)0x80000001009F1700;
    v11._countAndFlagsBits = 0xD000000000000011;
    String.append(_:)(v11);
    v12._countAndFlagsBits = 8236;
    v12._object = (void *)0xE200000000000000;
    String.append(_:)(v12);
    v13._countAndFlagsBits = 0xD000000000000015;
    v13._object = (void *)0x80000001009F1720;
    String.append(_:)(v13);
    v14._countAndFlagsBits = 46;
    v14._object = (void *)0xE100000000000000;
    String.append(_:)(v14);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v15, v16, "Weather/Selector.swift", 22, 2);
    __break(1u);
  }
  else
  {
    sub_10007802C((uint64_t)v8, a3, type metadata accessor for MoonScrubberViewModel);
  }
}

void sub_100187D9C(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  uint64_t v15;
  unint64_t v16;

  v6 = sub_1000BA294(&qword_100BC47F0);
  __chkstk_darwin(v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(a1);
  v9 = type metadata accessor for SunriseSunsetDetailViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9) == 1)
  {
    sub_100021A14((uint64_t)v8, &qword_100BC47F0);
    v15 = 0;
    v16 = 0xE000000000000000;
    _StringGuts.grow(_:)(87);
    v10._countAndFlagsBits = 0xD000000000000050;
    v10._object = (void *)0x80000001009F1280;
    String.append(_:)(v10);
    v11._object = (void *)0x80000001009F1740;
    v11._countAndFlagsBits = 0xD000000000000018;
    String.append(_:)(v11);
    v12._countAndFlagsBits = 8236;
    v12._object = (void *)0xE200000000000000;
    String.append(_:)(v12);
    v13._countAndFlagsBits = 0xD00000000000001CLL;
    v13._object = (void *)0x80000001009F1760;
    String.append(_:)(v13);
    v14._countAndFlagsBits = 46;
    v14._object = (void *)0xE100000000000000;
    String.append(_:)(v14);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v15, v16, "Weather/Selector.swift", 22, 2);
    __break(1u);
  }
  else
  {
    sub_10007802C((uint64_t)v8, a3, type metadata accessor for SunriseSunsetDetailViewModel);
  }
}

uint64_t sub_100187F2C(uint64_t a1, uint64_t a2, char a3, void (*a4)(uint64_t *__return_ptr, _QWORD *))
{
  uint64_t result;
  Swift::String v5;
  Swift::String v6;
  Swift::String v7;
  Swift::String v8;
  Swift::String v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD v12[2];
  char v13;

  v12[0] = a1;
  v12[1] = a2;
  v13 = a3 & 1;
  a4(&v10, v12);
  result = v10;
  if (!v10)
  {
    v10 = 0;
    v11 = 0xE000000000000000;
    _StringGuts.grow(_:)(87);
    v5._countAndFlagsBits = 0xD000000000000050;
    v5._object = (void *)0x80000001009F1280;
    String.append(_:)(v5);
    v6._countAndFlagsBits = 0x756E654D7473694CLL;
    v6._object = (void *)0xED00007475706E49;
    String.append(_:)(v6);
    v7._countAndFlagsBits = 8236;
    v7._object = (void *)0xE200000000000000;
    String.append(_:)(v7);
    v8._object = (void *)0x80000001009F1780;
    v8._countAndFlagsBits = 0xD000000000000011;
    String.append(_:)(v8);
    v9._countAndFlagsBits = 46;
    v9._object = (void *)0xE100000000000000;
    String.append(_:)(v9);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v10, v11, "Weather/Selector.swift", 22, 2);
    __break(1u);
  }
  return result;
}

void sub_10018805C(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  uint64_t v15;
  unint64_t v16;

  v6 = sub_1000BA294(&qword_100BC4838);
  __chkstk_darwin(v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(a1);
  v9 = type metadata accessor for MoonCalendarViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9) == 1)
  {
    sub_100021A14((uint64_t)v8, &qword_100BC4838);
    v15 = 0;
    v16 = 0xE000000000000000;
    _StringGuts.grow(_:)(87);
    v10._countAndFlagsBits = 0xD000000000000050;
    v10._object = (void *)0x80000001009F1280;
    String.append(_:)(v10);
    v11._object = (void *)0x80000001009F17A0;
    v11._countAndFlagsBits = 0xD000000000000011;
    String.append(_:)(v11);
    v12._countAndFlagsBits = 8236;
    v12._object = (void *)0xE200000000000000;
    String.append(_:)(v12);
    v13._countAndFlagsBits = 0xD000000000000015;
    v13._object = (void *)0x80000001009F17C0;
    String.append(_:)(v13);
    v14._countAndFlagsBits = 46;
    v14._object = (void *)0xE100000000000000;
    String.append(_:)(v14);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v15, v16, "Weather/Selector.swift", 22, 2);
    __break(1u);
  }
  else
  {
    sub_10007802C((uint64_t)v8, a3, type metadata accessor for MoonCalendarViewModel);
  }
}

void sub_1001881EC(uint64_t a1@<X0>, void (*a2)(uint64_t, __n128)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;
  uint64_t v16;
  unint64_t v17;

  v6 = sub_1000BA294(&qword_100BC4870);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(a1, v7);
  v10 = type metadata accessor for HomeAndWorkRefinementViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10) == 1)
  {
    sub_100021A14((uint64_t)v9, &qword_100BC4870);
    v16 = 0;
    v17 = 0xE000000000000000;
    _StringGuts.grow(_:)(87);
    v11._countAndFlagsBits = 0xD000000000000050;
    v11._object = (void *)0x80000001009F1280;
    String.append(_:)(v11);
    v12._object = (void *)0x80000001009F17E0;
    v12._countAndFlagsBits = 0xD00000000000001ALL;
    String.append(_:)(v12);
    v13._countAndFlagsBits = 8236;
    v13._object = (void *)0xE200000000000000;
    String.append(_:)(v13);
    v14._countAndFlagsBits = 0xD00000000000001ELL;
    v14._object = (void *)0x80000001009F1800;
    String.append(_:)(v14);
    v15._countAndFlagsBits = 46;
    v15._object = (void *)0xE100000000000000;
    String.append(_:)(v15);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v16, v17, "Weather/Selector.swift", 22, 2);
    __break(1u);
  }
  else
  {
    sub_10007802C((uint64_t)v9, a3, type metadata accessor for HomeAndWorkRefinementViewModel);
  }
}

_QWORD *sub_10018837C@<X0>(_QWORD *(*a1)(_OWORD *__return_ptr)@<X1>, uint64_t a2@<X8>)
{
  _QWORD *result;
  unsigned __int8 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  Swift::String v8;
  Swift::String v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  _OWORD v13[6];
  unsigned __int8 v14;

  result = a1(v13);
  v4 = v14;
  if (v14 > 0xFDu)
  {
    *(_QWORD *)&v13[0] = 0;
    *((_QWORD *)&v13[0] + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(87);
    v8._countAndFlagsBits = 0xD000000000000050;
    v8._object = (void *)0x80000001009F1280;
    String.append(_:)(v8);
    v9._object = (void *)0x80000001009F1820;
    v9._countAndFlagsBits = 0xD000000000000019;
    String.append(_:)(v9);
    v10._countAndFlagsBits = 8236;
    v10._object = (void *)0xE200000000000000;
    String.append(_:)(v10);
    v11._countAndFlagsBits = 0xD00000000000001DLL;
    v11._object = (void *)0x80000001009F1840;
    String.append(_:)(v11);
    v12._countAndFlagsBits = 46;
    v12._object = (void *)0xE100000000000000;
    String.append(_:)(v12);
    result = (_QWORD *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, *(_QWORD *)&v13[0], *((_QWORD *)&v13[0] + 1), "Weather/Selector.swift", 22, 2);
    __break(1u);
  }
  else
  {
    v5 = v13[1];
    *(_OWORD *)a2 = v13[0];
    *(_OWORD *)(a2 + 16) = v5;
    v6 = v13[3];
    *(_OWORD *)(a2 + 32) = v13[2];
    *(_OWORD *)(a2 + 48) = v6;
    v7 = v13[5];
    *(_OWORD *)(a2 + 64) = v13[4];
    *(_OWORD *)(a2 + 80) = v7;
    *(_BYTE *)(a2 + 96) = v4;
  }
  return result;
}

void sub_1001884A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, void (*a5)(uint64_t *__return_ptr, uint64_t), uint64_t a6, void (*a7)(uint64_t *, __n128), uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t Strong;
  uint64_t v22;
  double v23;
  char v24;
  char v25;
  uint64_t v26;
  _QWORD *v27;
  void (*v28)(uint64_t *__return_ptr, uint64_t);
  uint64_t v29;
  void (*v30)(uint64_t *, __n128);
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  __n128 v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t *, __n128);
  _QWORD aBlock[5];
  uint64_t v64;
  _BYTE v65[72];
  _BYTE __src[72];
  char v67[8];

  v62 = a7;
  v14 = type metadata accessor for DispatchWorkItemFlags(0);
  v59 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v58 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for DispatchQoS(0);
  v56 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v55 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for DispatchTime(0);
  v53 = *(_QWORD *)(v60 - 8);
  v17 = __chkstk_darwin(v60);
  v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v54 = (char *)&v49 - v20;
  a2 += 16;
  swift_beginAccess(a2, v67, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v22 = Strong;
    v52 = v14;
    v23 = COERCE_DOUBLE(a3(a1));
    v25 = v24;
    v61 = a8;
    sub_100037768(a1, (uint64_t)__src, &qword_100BC43C0);
    v26 = v61;
    sub_100037768((uint64_t)__src, (uint64_t)v65, &qword_100BC43C0);
    v27 = (_QWORD *)swift_allocObject(&unk_100B5D3D0, 128, 7);
    v28 = a5;
    v27[2] = a5;
    v27[3] = a6;
    v29 = a6;
    memcpy(v27 + 4, __src, 0x48uLL);
    v30 = v62;
    v27[13] = v22;
    v27[14] = v30;
    v27[15] = v26;
    if ((v25 & 1) != 0)
    {
      if (v23 == 0.0)
      {
        swift_retain_n(v26, 2);
        swift_retain();
        swift_retain();
        goto LABEL_12;
      }
      v31 = qword_100BC2820;
      swift_retain_n(v26, 2);
      swift_retain_n(v29, 2);
      swift_retain();
      if (v31 != -1)
        swift_once(&qword_100BC2820, sub_10091A684);
      sub_10017BD28(v22, (uint64_t)sub_10019CFCC, (uint64_t)v27);
    }
    else
    {
      if (v23 != 0.0)
      {
        sub_10009FFE0();
        swift_retain_n(v26, 2);
        v51 = a6;
        swift_retain_n(a6, 2);
        v32 = swift_retain_n(v22, 2);
        v50 = static OS_dispatch_queue.main.getter(v32);
        static DispatchTime.now()(v50);
        v33 = v54;
        + infix(_:_:)(v19);
        v62 = *(void (**)(uint64_t *, __n128))(v53 + 8);
        ((void (*)(char *, uint64_t))v62)(v19, v60);
        v34 = swift_allocObject(&unk_100B5D3F8, 32, 7);
        *(_QWORD *)(v34 + 16) = sub_10019CFCC;
        *(_QWORD *)(v34 + 24) = v27;
        aBlock[4] = sub_10019CFD8;
        v64 = v34;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100121D84;
        aBlock[3] = &unk_100B5D410;
        v35 = _Block_copy(aBlock);
        v36 = v64;
        swift_retain();
        v37 = swift_release(v36);
        v38 = (_QWORD *)v22;
        v39 = v55;
        static DispatchQoS.unspecified.getter(v37);
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_10000F1C8((unint64_t *)&qword_100BFFA20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        v41 = v40;
        v42 = sub_1000BA294(&qword_100BD4F10);
        sub_10003D2DC((unint64_t *)&qword_100BFFA30, &qword_100BD4F10);
        v43 = v58;
        v44 = v52;
        v45 = v41;
        v26 = v61;
        dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v42, v46, v52, v45);
        v47 = (void *)v50;
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v33, v39, v43, v35);
        _Block_release(v35);

        (*(void (**)(char *, uint64_t))(v59 + 8))(v43, v44);
        v48 = v39;
        v22 = (uint64_t)v38;
        (*(void (**)(char *, uint64_t))(v56 + 8))(v48, v57);
        ((void (*)(char *, uint64_t))v62)(v33, v60);
        swift_release(v51);
        swift_release(v27);
        v27 = v38;
        goto LABEL_12;
      }
      swift_retain_n(v26, 2);
      swift_retain_n(a6, 2);
      swift_retain();
      sub_10018FEB0(v28, a6, (uint64_t)v65, v22, v30);
    }
    swift_release(v29);
LABEL_12:
    swift_release(v27);
    sub_100021A14((uint64_t)v65, &qword_100BC43C0);
    swift_release(v26);
    swift_release(v22);
  }
}

void sub_100188A34(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, void (*a5)(uint64_t), uint64_t a6, void (*a7)(uint64_t), uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t Strong;
  uint64_t v22;
  double v23;
  char v24;
  char v25;
  uint64_t v26;
  _QWORD *v27;
  void (*v28)(uint64_t);
  uint64_t v29;
  void (*v30)(uint64_t);
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  __n128 v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t);
  _QWORD aBlock[5];
  uint64_t v64;
  _BYTE v65[72];
  _BYTE __src[72];
  char v67[8];

  v62 = a7;
  v14 = type metadata accessor for DispatchWorkItemFlags(0);
  v59 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v58 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for DispatchQoS(0);
  v56 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v55 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for DispatchTime(0);
  v53 = *(_QWORD *)(v60 - 8);
  v17 = __chkstk_darwin(v60);
  v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v54 = (char *)&v49 - v20;
  a2 += 16;
  swift_beginAccess(a2, v67, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v22 = Strong;
    v52 = v14;
    v23 = COERCE_DOUBLE(a3(a1));
    v25 = v24;
    v61 = a8;
    sub_100037768(a1, (uint64_t)__src, &qword_100BC43C0);
    v26 = v61;
    sub_100037768((uint64_t)__src, (uint64_t)v65, &qword_100BC43C0);
    v27 = (_QWORD *)swift_allocObject(&unk_100B5D588, 128, 7);
    v28 = a5;
    v27[2] = a5;
    v27[3] = a6;
    v29 = a6;
    memcpy(v27 + 4, __src, 0x48uLL);
    v30 = v62;
    v27[13] = v22;
    v27[14] = v30;
    v27[15] = v26;
    if ((v25 & 1) != 0)
    {
      if (v23 == 0.0)
      {
        swift_retain_n(v26, 2);
        swift_retain();
        swift_retain();
        goto LABEL_12;
      }
      v31 = qword_100BC2820;
      swift_retain_n(v26, 2);
      swift_retain_n(v29, 2);
      swift_retain();
      if (v31 != -1)
        swift_once(&qword_100BC2820, sub_10091A684);
      sub_10017C0BC(v22, (uint64_t)sub_10019D07C, (uint64_t)v27);
    }
    else
    {
      if (v23 != 0.0)
      {
        sub_10009FFE0();
        swift_retain_n(v26, 2);
        v51 = a6;
        swift_retain_n(a6, 2);
        v32 = swift_retain_n(v22, 2);
        v50 = static OS_dispatch_queue.main.getter(v32);
        static DispatchTime.now()(v50);
        v33 = v54;
        + infix(_:_:)(v19);
        v62 = *(void (**)(uint64_t))(v53 + 8);
        ((void (*)(char *, uint64_t))v62)(v19, v60);
        v34 = swift_allocObject(&unk_100B5D5B0, 32, 7);
        *(_QWORD *)(v34 + 16) = sub_10019D07C;
        *(_QWORD *)(v34 + 24) = v27;
        aBlock[4] = sub_10019EACC;
        v64 = v34;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100121D84;
        aBlock[3] = &unk_100B5D5C8;
        v35 = _Block_copy(aBlock);
        v36 = v64;
        swift_retain();
        v37 = swift_release(v36);
        v38 = (_QWORD *)v22;
        v39 = v55;
        static DispatchQoS.unspecified.getter(v37);
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_10000F1C8((unint64_t *)&qword_100BFFA20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        v41 = v40;
        v42 = sub_1000BA294(&qword_100BD4F10);
        sub_10003D2DC((unint64_t *)&qword_100BFFA30, &qword_100BD4F10);
        v43 = v58;
        v44 = v52;
        v45 = v41;
        v26 = v61;
        dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v42, v46, v52, v45);
        v47 = (void *)v50;
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v33, v39, v43, v35);
        _Block_release(v35);

        (*(void (**)(char *, uint64_t))(v59 + 8))(v43, v44);
        v48 = v39;
        v22 = (uint64_t)v38;
        (*(void (**)(char *, uint64_t))(v56 + 8))(v48, v57);
        ((void (*)(char *, uint64_t))v62)(v33, v60);
        swift_release(v51);
        swift_release(v27);
        v27 = v38;
        goto LABEL_12;
      }
      swift_retain_n(v26, 2);
      swift_retain_n(a6, 2);
      swift_retain();
      sub_10019045C(v28, a6, (uint64_t)v65, v22, v30, v26);
    }
    swift_release(v29);
LABEL_12:
    swift_release(v27);
    sub_100021A14((uint64_t)v65, &qword_100BC43C0);
    swift_release(v26);
    swift_release(v22);
  }
}

void sub_100188FC0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, void (*a5)(__int128 *__return_ptr, uint64_t), uint64_t a6, void (*a7)(__int128 *__return_ptr, uint64_t *, __n128), uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t Strong;
  uint64_t v22;
  double v23;
  char v24;
  char v25;
  uint64_t v26;
  _QWORD *v27;
  void (*v28)(__int128 *__return_ptr, uint64_t);
  uint64_t v29;
  void (*v30)(__int128 *__return_ptr, uint64_t *, __n128);
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  __n128 v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(__int128 *__return_ptr, uint64_t *, __n128);
  _QWORD aBlock[5];
  uint64_t v64;
  _BYTE v65[72];
  _BYTE __src[72];
  char v67[8];

  v62 = a7;
  v14 = type metadata accessor for DispatchWorkItemFlags(0);
  v59 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v58 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for DispatchQoS(0);
  v56 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v55 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for DispatchTime(0);
  v53 = *(_QWORD *)(v60 - 8);
  __chkstk_darwin(v60);
  v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v54 = (char *)&v49 - v20;
  a2 += 16;
  swift_beginAccess(a2, v67, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v22 = Strong;
    v52 = v14;
    v23 = COERCE_DOUBLE(a3(a1));
    v25 = v24;
    v61 = a8;
    sub_100037768(a1, (uint64_t)__src, &qword_100BC43C0);
    v26 = v61;
    sub_100037768((uint64_t)__src, (uint64_t)v65, &qword_100BC43C0);
    v27 = (_QWORD *)swift_allocObject(&unk_100B5D6F0, 128, 7);
    v28 = a5;
    v27[2] = a5;
    v27[3] = a6;
    v29 = a6;
    memcpy(v27 + 4, __src, 0x48uLL);
    v30 = v62;
    v27[13] = v22;
    v27[14] = v30;
    v27[15] = v26;
    if ((v25 & 1) != 0)
    {
      if (v23 == 0.0)
      {
        swift_retain_n(v26, 2);
        swift_retain();
        swift_retain();
        goto LABEL_12;
      }
      v31 = qword_100BC2820;
      swift_retain_n(v26, 2);
      swift_retain_n(v29, 2);
      swift_retain();
      if (v31 != -1)
        swift_once(&qword_100BC2820, sub_10091A684);
      sub_10017C458(v22, (uint64_t)sub_10019D154, (uint64_t)v27);
    }
    else
    {
      if (v23 != 0.0)
      {
        sub_10009FFE0();
        swift_retain_n(v26, 2);
        v51 = a6;
        swift_retain_n(a6, 2);
        v32 = swift_retain_n(v22, 2);
        v50 = static OS_dispatch_queue.main.getter(v32);
        static DispatchTime.now()(v50);
        v33 = v54;
        + infix(_:_:)(v18);
        v62 = *(void (**)(__int128 *__return_ptr, uint64_t *, __n128))(v53 + 8);
        ((void (*)(char *, uint64_t))v62)(v18, v60);
        v34 = swift_allocObject(&unk_100B5D718, 32, 7);
        *(_QWORD *)(v34 + 16) = sub_10019D154;
        *(_QWORD *)(v34 + 24) = v27;
        aBlock[4] = sub_10019EACC;
        v64 = v34;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100121D84;
        aBlock[3] = &unk_100B5D730;
        v35 = _Block_copy(aBlock);
        v36 = v64;
        swift_retain();
        v37 = swift_release(v36);
        v38 = (_QWORD *)v22;
        v39 = v55;
        static DispatchQoS.unspecified.getter(v37);
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_10000F1C8((unint64_t *)&qword_100BFFA20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        v41 = v40;
        v42 = sub_1000BA294(&qword_100BD4F10);
        sub_10003D2DC((unint64_t *)&qword_100BFFA30, &qword_100BD4F10);
        v43 = v58;
        v44 = v52;
        v45 = v41;
        v26 = v61;
        dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v42, v46, v52, v45);
        v47 = (void *)v50;
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v33, v39, v43, v35);
        _Block_release(v35);

        (*(void (**)(char *, uint64_t))(v59 + 8))(v43, v44);
        v48 = v39;
        v22 = (uint64_t)v38;
        (*(void (**)(char *, uint64_t))(v56 + 8))(v48, v57);
        ((void (*)(char *, uint64_t))v62)(v33, v60);
        swift_release(v51);
        swift_release(v27);
        v27 = v38;
        goto LABEL_12;
      }
      swift_retain_n(v26, 2);
      swift_retain_n(a6, 2);
      swift_retain();
      sub_100190CC4(v28, a6, (uint64_t)v65, v22, v30);
    }
    swift_release(v29);
LABEL_12:
    swift_release(v27);
    sub_100021A14((uint64_t)v65, &qword_100BC43C0);
    swift_release(v26);
    swift_release(v22);
  }
}

void sub_10018954C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, void (*a5)(uint64_t), uint64_t a6, void (*a7)(uint64_t), uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t Strong;
  uint64_t v22;
  double v23;
  char v24;
  char v25;
  uint64_t v26;
  _QWORD *v27;
  void (*v28)(uint64_t);
  uint64_t v29;
  void (*v30)(uint64_t);
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  __n128 v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t);
  _QWORD aBlock[5];
  uint64_t v64;
  _BYTE v65[72];
  _BYTE __src[72];
  char v67[8];

  v62 = a7;
  v14 = type metadata accessor for DispatchWorkItemFlags(0);
  v59 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v58 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for DispatchQoS(0);
  v56 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v55 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for DispatchTime(0);
  v53 = *(_QWORD *)(v60 - 8);
  v17 = __chkstk_darwin(v60);
  v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v54 = (char *)&v49 - v20;
  a2 += 16;
  swift_beginAccess(a2, v67, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v22 = Strong;
    v52 = v14;
    v23 = COERCE_DOUBLE(a3(a1));
    v25 = v24;
    v61 = a8;
    sub_100037768(a1, (uint64_t)__src, &qword_100BC43C0);
    v26 = v61;
    sub_100037768((uint64_t)__src, (uint64_t)v65, &qword_100BC43C0);
    v27 = (_QWORD *)swift_allocObject(&unk_100B5D858, 128, 7);
    v28 = a5;
    v27[2] = a5;
    v27[3] = a6;
    v29 = a6;
    memcpy(v27 + 4, __src, 0x48uLL);
    v30 = v62;
    v27[13] = v22;
    v27[14] = v30;
    v27[15] = v26;
    if ((v25 & 1) != 0)
    {
      if (v23 == 0.0)
      {
        swift_retain_n(v26, 2);
        swift_retain();
        swift_retain();
        goto LABEL_12;
      }
      v31 = qword_100BC2820;
      swift_retain_n(v26, 2);
      swift_retain_n(v29, 2);
      swift_retain();
      if (v31 != -1)
        swift_once(&qword_100BC2820, sub_10091A684);
      sub_10017C7EC(v22, (uint64_t)sub_10019D420, (uint64_t)v27);
    }
    else
    {
      if (v23 != 0.0)
      {
        sub_10009FFE0();
        swift_retain_n(v26, 2);
        v51 = a6;
        swift_retain_n(a6, 2);
        v32 = swift_retain_n(v22, 2);
        v50 = static OS_dispatch_queue.main.getter(v32);
        static DispatchTime.now()(v50);
        v33 = v54;
        + infix(_:_:)(v19);
        v62 = *(void (**)(uint64_t))(v53 + 8);
        ((void (*)(char *, uint64_t))v62)(v19, v60);
        v34 = swift_allocObject(&unk_100B5D880, 32, 7);
        *(_QWORD *)(v34 + 16) = sub_10019D420;
        *(_QWORD *)(v34 + 24) = v27;
        aBlock[4] = sub_10019EACC;
        v64 = v34;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100121D84;
        aBlock[3] = &unk_100B5D898;
        v35 = _Block_copy(aBlock);
        v36 = v64;
        swift_retain();
        v37 = swift_release(v36);
        v38 = (_QWORD *)v22;
        v39 = v55;
        static DispatchQoS.unspecified.getter(v37);
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_10000F1C8((unint64_t *)&qword_100BFFA20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        v41 = v40;
        v42 = sub_1000BA294(&qword_100BD4F10);
        sub_10003D2DC((unint64_t *)&qword_100BFFA30, &qword_100BD4F10);
        v43 = v58;
        v44 = v52;
        v45 = v41;
        v26 = v61;
        dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v42, v46, v52, v45);
        v47 = (void *)v50;
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v33, v39, v43, v35);
        _Block_release(v35);

        (*(void (**)(char *, uint64_t))(v59 + 8))(v43, v44);
        v48 = v39;
        v22 = (uint64_t)v38;
        (*(void (**)(char *, uint64_t))(v56 + 8))(v48, v57);
        ((void (*)(char *, uint64_t))v62)(v33, v60);
        swift_release(v51);
        swift_release(v27);
        v27 = v38;
        goto LABEL_12;
      }
      swift_retain_n(v26, 2);
      swift_retain_n(a6, 2);
      swift_retain();
      sub_100191464(v28, a6, (uint64_t)v65, v22, v30, v26);
    }
    swift_release(v29);
LABEL_12:
    swift_release(v27);
    sub_100021A14((uint64_t)v65, &qword_100BC43C0);
    swift_release(v26);
    swift_release(v22);
  }
}

void sub_100189AD8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, void (*a5)(__int128 *__return_ptr, uint64_t), uint64_t a6, void (*a7)(__int128 *), void *a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t Strong;
  uint64_t v22;
  double v23;
  char v24;
  char v25;
  void *v26;
  _QWORD *v27;
  void (*v28)(__int128 *__return_ptr, uint64_t);
  uint64_t v29;
  void (*v30)(__int128 *);
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  __n128 v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  void (*v62)(__int128 *);
  _QWORD aBlock[5];
  uint64_t v64;
  _BYTE v65[72];
  _BYTE __src[72];
  char v67[8];

  v62 = a7;
  v14 = type metadata accessor for DispatchWorkItemFlags(0);
  v59 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v58 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for DispatchQoS(0);
  v56 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v55 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for DispatchTime(0);
  v53 = *(_QWORD *)(v60 - 8);
  v17 = __chkstk_darwin(v60);
  v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v54 = (char *)&v49 - v20;
  a2 += 16;
  swift_beginAccess(a2, v67, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v22 = Strong;
    v52 = v14;
    v23 = COERCE_DOUBLE(a3(a1));
    v25 = v24;
    v61 = a8;
    sub_100037768(a1, (uint64_t)__src, &qword_100BC43C0);
    v26 = v61;
    sub_100037768((uint64_t)__src, (uint64_t)v65, &qword_100BC43C0);
    v27 = (_QWORD *)swift_allocObject(&unk_100B5D9C0, 128, 7);
    v28 = a5;
    v27[2] = a5;
    v27[3] = a6;
    v29 = a6;
    memcpy(v27 + 4, __src, 0x48uLL);
    v30 = v62;
    v27[13] = v22;
    v27[14] = v30;
    v27[15] = v26;
    if ((v25 & 1) != 0)
    {
      if (v23 == 0.0)
      {
        swift_retain_n(v26, 2);
        swift_retain();
        swift_retain();
        goto LABEL_12;
      }
      v31 = qword_100BC2820;
      swift_retain_n(v26, 2);
      swift_retain_n(v29, 2);
      swift_retain();
      if (v31 != -1)
        swift_once(&qword_100BC2820, sub_10091A684);
      sub_10017CB84(v22, (uint64_t)sub_10019D50C, (uint64_t)v27);
    }
    else
    {
      if (v23 != 0.0)
      {
        sub_10009FFE0();
        swift_retain_n(v26, 2);
        v51 = a6;
        swift_retain_n(a6, 2);
        v32 = swift_retain_n(v22, 2);
        v50 = static OS_dispatch_queue.main.getter(v32);
        static DispatchTime.now()(v50);
        v33 = v54;
        + infix(_:_:)(v19);
        v62 = *(void (**)(__int128 *))(v53 + 8);
        ((void (*)(char *, uint64_t))v62)(v19, v60);
        v34 = swift_allocObject(&unk_100B5D9E8, 32, 7);
        *(_QWORD *)(v34 + 16) = sub_10019D50C;
        *(_QWORD *)(v34 + 24) = v27;
        aBlock[4] = sub_10019EACC;
        v64 = v34;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100121D84;
        aBlock[3] = &unk_100B5DA00;
        v35 = _Block_copy(aBlock);
        v36 = v64;
        swift_retain();
        v37 = swift_release(v36);
        v38 = (_QWORD *)v22;
        v39 = v55;
        static DispatchQoS.unspecified.getter(v37);
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_10000F1C8((unint64_t *)&qword_100BFFA20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        v41 = v40;
        v42 = sub_1000BA294(&qword_100BD4F10);
        sub_10003D2DC((unint64_t *)&qword_100BFFA30, &qword_100BD4F10);
        v43 = v58;
        v44 = v52;
        v45 = v41;
        v26 = v61;
        dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v42, v46, v52, v45);
        v47 = (void *)v50;
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v33, v39, v43, v35);
        _Block_release(v35);

        (*(void (**)(char *, uint64_t))(v59 + 8))(v43, v44);
        v48 = v39;
        v22 = (uint64_t)v38;
        (*(void (**)(char *, uint64_t))(v56 + 8))(v48, v57);
        ((void (*)(char *, uint64_t))v62)(v33, v60);
        swift_release(v51);
        swift_release(v27);
        v27 = v38;
        goto LABEL_12;
      }
      swift_retain_n(v26, 2);
      swift_retain_n(a6, 2);
      swift_retain();
      sub_100191CC8(v28, a6, (uint64_t)v65, v22, v30, v26);
    }
    swift_release(v29);
LABEL_12:
    swift_release(v27);
    sub_100021A14((uint64_t)v65, &qword_100BC43C0);
    swift_release(v26);
    swift_release(v22);
  }
}

void sub_10018A064(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, void (*a5)(uint64_t), uint64_t a6, void (*a7)(char *), uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t Strong;
  uint64_t v22;
  double v23;
  char v24;
  char v25;
  uint64_t v26;
  _QWORD *v27;
  void (*v28)(uint64_t);
  uint64_t v29;
  void (*v30)(char *);
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  __n128 v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *);
  _QWORD aBlock[5];
  uint64_t v64;
  _BYTE v65[72];
  _BYTE __src[72];
  char v67[8];

  v62 = a7;
  v14 = type metadata accessor for DispatchWorkItemFlags(0);
  v59 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v58 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for DispatchQoS(0);
  v56 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v55 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for DispatchTime(0);
  v53 = *(_QWORD *)(v60 - 8);
  v17 = __chkstk_darwin(v60);
  v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v54 = (char *)&v49 - v20;
  a2 += 16;
  swift_beginAccess(a2, v67, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v22 = Strong;
    v52 = v14;
    v23 = COERCE_DOUBLE(a3(a1));
    v25 = v24;
    v61 = a8;
    sub_100037768(a1, (uint64_t)__src, &qword_100BC43C0);
    v26 = v61;
    sub_100037768((uint64_t)__src, (uint64_t)v65, &qword_100BC43C0);
    v27 = (_QWORD *)swift_allocObject(&unk_100B5DB28, 128, 7);
    v28 = a5;
    v27[2] = a5;
    v27[3] = a6;
    v29 = a6;
    memcpy(v27 + 4, __src, 0x48uLL);
    v30 = v62;
    v27[13] = v22;
    v27[14] = v30;
    v27[15] = v26;
    if ((v25 & 1) != 0)
    {
      if (v23 == 0.0)
      {
        swift_retain_n(v26, 2);
        swift_retain();
        swift_retain();
        goto LABEL_12;
      }
      v31 = qword_100BC2820;
      swift_retain_n(v26, 2);
      swift_retain_n(v29, 2);
      swift_retain();
      if (v31 != -1)
        swift_once(&qword_100BC2820, sub_10091A684);
      sub_10017CF1C(v22, (uint64_t)sub_10019D748, (uint64_t)v27);
    }
    else
    {
      if (v23 != 0.0)
      {
        sub_10009FFE0();
        swift_retain_n(v26, 2);
        v51 = a6;
        swift_retain_n(a6, 2);
        v32 = swift_retain_n(v22, 2);
        v50 = static OS_dispatch_queue.main.getter(v32);
        static DispatchTime.now()(v50);
        v33 = v54;
        + infix(_:_:)(v19);
        v62 = *(void (**)(char *))(v53 + 8);
        ((void (*)(char *, uint64_t))v62)(v19, v60);
        v34 = swift_allocObject(&unk_100B5DB50, 32, 7);
        *(_QWORD *)(v34 + 16) = sub_10019D748;
        *(_QWORD *)(v34 + 24) = v27;
        aBlock[4] = sub_10019EACC;
        v64 = v34;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100121D84;
        aBlock[3] = &unk_100B5DB68;
        v35 = _Block_copy(aBlock);
        v36 = v64;
        swift_retain();
        v37 = swift_release(v36);
        v38 = (_QWORD *)v22;
        v39 = v55;
        static DispatchQoS.unspecified.getter(v37);
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_10000F1C8((unint64_t *)&qword_100BFFA20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        v41 = v40;
        v42 = sub_1000BA294(&qword_100BD4F10);
        sub_10003D2DC((unint64_t *)&qword_100BFFA30, &qword_100BD4F10);
        v43 = v58;
        v44 = v52;
        v45 = v41;
        v26 = v61;
        dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v42, v46, v52, v45);
        v47 = (void *)v50;
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v33, v39, v43, v35);
        _Block_release(v35);

        (*(void (**)(char *, uint64_t))(v59 + 8))(v43, v44);
        v48 = v39;
        v22 = (uint64_t)v38;
        (*(void (**)(char *, uint64_t))(v56 + 8))(v48, v57);
        ((void (*)(char *, uint64_t))v62)(v33, v60);
        swift_release(v51);
        swift_release(v27);
        v27 = v38;
        goto LABEL_12;
      }
      swift_retain_n(v26, 2);
      swift_retain_n(a6, 2);
      swift_retain();
      sub_1001925B0(v28, a6, (uint64_t)v65, v22, v30, v26);
    }
    swift_release(v29);
LABEL_12:
    swift_release(v27);
    sub_100021A14((uint64_t)v65, &qword_100BC43C0);
    swift_release(v26);
    swift_release(v22);
  }
}

void sub_10018A5F0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, void (*a5)(uint64_t *__return_ptr, uint64_t, __n128), uint64_t a6, void (*a7)(uint64_t *, __n128), uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t Strong;
  uint64_t v22;
  double v23;
  char v24;
  char v25;
  uint64_t v26;
  _QWORD *v27;
  void (*v28)(uint64_t *__return_ptr, uint64_t, __n128);
  uint64_t v29;
  void (*v30)(uint64_t *, __n128);
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  __n128 v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t *, __n128);
  _QWORD aBlock[5];
  uint64_t v64;
  _BYTE v65[72];
  _BYTE __src[72];
  char v67[8];

  v62 = a7;
  v14 = type metadata accessor for DispatchWorkItemFlags(0);
  v59 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v58 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for DispatchQoS(0);
  v56 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v55 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for DispatchTime(0);
  v53 = *(_QWORD *)(v60 - 8);
  __chkstk_darwin(v60);
  v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v54 = (char *)&v49 - v20;
  a2 += 16;
  swift_beginAccess(a2, v67, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v22 = Strong;
    v52 = v14;
    v23 = COERCE_DOUBLE(a3(a1));
    v25 = v24;
    v61 = a8;
    sub_100037768(a1, (uint64_t)__src, &qword_100BC43C0);
    v26 = v61;
    sub_100037768((uint64_t)__src, (uint64_t)v65, &qword_100BC43C0);
    v27 = (_QWORD *)swift_allocObject(&unk_100B5DC90, 128, 7);
    v28 = a5;
    v27[2] = a5;
    v27[3] = a6;
    v29 = a6;
    memcpy(v27 + 4, __src, 0x48uLL);
    v30 = v62;
    v27[13] = v22;
    v27[14] = v30;
    v27[15] = v26;
    if ((v25 & 1) != 0)
    {
      if (v23 == 0.0)
      {
        swift_retain_n(v26, 2);
        swift_retain();
        swift_retain();
        goto LABEL_12;
      }
      v31 = qword_100BC2820;
      swift_retain_n(v26, 2);
      swift_retain_n(v29, 2);
      swift_retain();
      if (v31 != -1)
        swift_once(&qword_100BC2820, sub_10091A684);
      sub_10017D2B8(v22, (uint64_t)sub_10019D858, (uint64_t)v27);
    }
    else
    {
      if (v23 != 0.0)
      {
        sub_10009FFE0();
        swift_retain_n(v26, 2);
        v51 = a6;
        swift_retain_n(a6, 2);
        v32 = swift_retain_n(v22, 2);
        v50 = static OS_dispatch_queue.main.getter(v32);
        static DispatchTime.now()(v50);
        v33 = v54;
        + infix(_:_:)(v18);
        v62 = *(void (**)(uint64_t *, __n128))(v53 + 8);
        ((void (*)(char *, uint64_t))v62)(v18, v60);
        v34 = swift_allocObject(&unk_100B5DCB8, 32, 7);
        *(_QWORD *)(v34 + 16) = sub_10019D858;
        *(_QWORD *)(v34 + 24) = v27;
        aBlock[4] = sub_10019EACC;
        v64 = v34;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100121D84;
        aBlock[3] = &unk_100B5DCD0;
        v35 = _Block_copy(aBlock);
        v36 = v64;
        swift_retain();
        v37 = swift_release(v36);
        v38 = (_QWORD *)v22;
        v39 = v55;
        static DispatchQoS.unspecified.getter(v37);
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_10000F1C8((unint64_t *)&qword_100BFFA20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        v41 = v40;
        v42 = sub_1000BA294(&qword_100BD4F10);
        sub_10003D2DC((unint64_t *)&qword_100BFFA30, &qword_100BD4F10);
        v43 = v58;
        v44 = v52;
        v45 = v41;
        v26 = v61;
        dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v42, v46, v52, v45);
        v47 = (void *)v50;
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v33, v39, v43, v35);
        _Block_release(v35);

        (*(void (**)(char *, uint64_t))(v59 + 8))(v43, v44);
        v48 = v39;
        v22 = (uint64_t)v38;
        (*(void (**)(char *, uint64_t))(v56 + 8))(v48, v57);
        ((void (*)(char *, uint64_t))v62)(v33, v60);
        swift_release(v51);
        swift_release(v27);
        v27 = v38;
        goto LABEL_12;
      }
      swift_retain_n(v26, 2);
      swift_retain_n(a6, 2);
      swift_retain();
      sub_100192E9C(v28, a6, (uint64_t)v65, v22, v30);
    }
    swift_release(v29);
LABEL_12:
    swift_release(v27);
    sub_100021A14((uint64_t)v65, &qword_100BC43C0);
    swift_release(v26);
    swift_release(v22);
  }
}

void sub_10018AB7C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, void (*a5)(uint64_t, __n128), uint64_t a6, void (*a7)(uint64_t), uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t Strong;
  uint64_t v22;
  double v23;
  char v24;
  char v25;
  uint64_t v26;
  _QWORD *v27;
  void (*v28)(uint64_t, __n128);
  uint64_t v29;
  void (*v30)(uint64_t);
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  __n128 v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t);
  _QWORD aBlock[5];
  uint64_t v64;
  _BYTE v65[72];
  _BYTE __src[72];
  char v67[8];

  v62 = a7;
  v14 = type metadata accessor for DispatchWorkItemFlags(0);
  v59 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v58 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for DispatchQoS(0);
  v56 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v55 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for DispatchTime(0);
  v53 = *(_QWORD *)(v60 - 8);
  __chkstk_darwin(v60);
  v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v54 = (char *)&v49 - v20;
  a2 += 16;
  swift_beginAccess(a2, v67, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v22 = Strong;
    v52 = v14;
    v23 = COERCE_DOUBLE(a3(a1));
    v25 = v24;
    v61 = a8;
    sub_100037768(a1, (uint64_t)__src, &qword_100BC43C0);
    v26 = v61;
    sub_100037768((uint64_t)__src, (uint64_t)v65, &qword_100BC43C0);
    v27 = (_QWORD *)swift_allocObject(&unk_100B5DDF8, 128, 7);
    v28 = a5;
    v27[2] = a5;
    v27[3] = a6;
    v29 = a6;
    memcpy(v27 + 4, __src, 0x48uLL);
    v30 = v62;
    v27[13] = v22;
    v27[14] = v30;
    v27[15] = v26;
    if ((v25 & 1) != 0)
    {
      if (v23 == 0.0)
      {
        swift_retain_n(v26, 2);
        swift_retain();
        swift_retain();
        goto LABEL_12;
      }
      v31 = qword_100BC2820;
      swift_retain_n(v26, 2);
      swift_retain_n(v29, 2);
      swift_retain();
      if (v31 != -1)
        swift_once(&qword_100BC2820, sub_10091A684);
      sub_10017D64C(v22, (uint64_t)sub_10019D8D8, (uint64_t)v27);
    }
    else
    {
      if (v23 != 0.0)
      {
        sub_10009FFE0();
        swift_retain_n(v26, 2);
        v51 = a6;
        swift_retain_n(a6, 2);
        v32 = swift_retain_n(v22, 2);
        v50 = static OS_dispatch_queue.main.getter(v32);
        static DispatchTime.now()(v50);
        v33 = v54;
        + infix(_:_:)(v18);
        v62 = *(void (**)(uint64_t))(v53 + 8);
        ((void (*)(char *, uint64_t))v62)(v18, v60);
        v34 = swift_allocObject(&unk_100B5DE20, 32, 7);
        *(_QWORD *)(v34 + 16) = sub_10019D8D8;
        *(_QWORD *)(v34 + 24) = v27;
        aBlock[4] = sub_10019EACC;
        v64 = v34;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100121D84;
        aBlock[3] = &unk_100B5DE38;
        v35 = _Block_copy(aBlock);
        v36 = v64;
        swift_retain();
        v37 = swift_release(v36);
        v38 = (_QWORD *)v22;
        v39 = v55;
        static DispatchQoS.unspecified.getter(v37);
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_10000F1C8((unint64_t *)&qword_100BFFA20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        v41 = v40;
        v42 = sub_1000BA294(&qword_100BD4F10);
        sub_10003D2DC((unint64_t *)&qword_100BFFA30, &qword_100BD4F10);
        v43 = v58;
        v44 = v52;
        v45 = v41;
        v26 = v61;
        dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v42, v46, v52, v45);
        v47 = (void *)v50;
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v33, v39, v43, v35);
        _Block_release(v35);

        (*(void (**)(char *, uint64_t))(v59 + 8))(v43, v44);
        v48 = v39;
        v22 = (uint64_t)v38;
        (*(void (**)(char *, uint64_t))(v56 + 8))(v48, v57);
        ((void (*)(char *, uint64_t))v62)(v33, v60);
        swift_release(v51);
        swift_release(v27);
        v27 = v38;
        goto LABEL_12;
      }
      swift_retain_n(v26, 2);
      swift_retain_n(a6, 2);
      swift_retain();
      sub_100193448(v28, a6, (uint64_t)v65, v22, v30, v26);
    }
    swift_release(v29);
LABEL_12:
    swift_release(v27);
    sub_100021A14((uint64_t)v65, &qword_100BC43C0);
    swift_release(v26);
    swift_release(v22);
  }
}

void sub_10018B108(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, void (*a5)(uint64_t *__return_ptr, uint64_t), uint64_t a6, void (*a7)(uint64_t *__return_ptr), uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t Strong;
  uint64_t v22;
  double v23;
  char v24;
  char v25;
  uint64_t v26;
  _QWORD *v27;
  void (*v28)(uint64_t *__return_ptr, uint64_t);
  uint64_t v29;
  void (*v30)(uint64_t *__return_ptr);
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  __n128 v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t *__return_ptr);
  _QWORD aBlock[5];
  uint64_t v64;
  _BYTE v65[72];
  _BYTE __src[72];
  char v67[8];

  v62 = a7;
  v14 = type metadata accessor for DispatchWorkItemFlags(0);
  v59 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v58 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for DispatchQoS(0);
  v56 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v55 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for DispatchTime(0);
  v53 = *(_QWORD *)(v60 - 8);
  __chkstk_darwin(v60);
  v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v54 = (char *)&v49 - v20;
  a2 += 16;
  swift_beginAccess(a2, v67, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v22 = Strong;
    v52 = v14;
    v23 = COERCE_DOUBLE(a3(a1));
    v25 = v24;
    v61 = a8;
    sub_100037768(a1, (uint64_t)__src, &qword_100BC43C0);
    v26 = v61;
    sub_100037768((uint64_t)__src, (uint64_t)v65, &qword_100BC43C0);
    v27 = (_QWORD *)swift_allocObject(&unk_100B5DF60, 128, 7);
    v28 = a5;
    v27[2] = a5;
    v27[3] = a6;
    v29 = a6;
    memcpy(v27 + 4, __src, 0x48uLL);
    v30 = v62;
    v27[13] = v22;
    v27[14] = v30;
    v27[15] = v26;
    if ((v25 & 1) != 0)
    {
      if (v23 == 0.0)
      {
        swift_retain_n(v26, 2);
        swift_retain();
        swift_retain();
        goto LABEL_12;
      }
      v31 = qword_100BC2820;
      swift_retain_n(v26, 2);
      swift_retain_n(v29, 2);
      swift_retain();
      if (v31 != -1)
        swift_once(&qword_100BC2820, sub_10091A684);
      sub_10017D9E4(v22, (uint64_t)sub_10019D984, (uint64_t)v27);
    }
    else
    {
      if (v23 != 0.0)
      {
        sub_10009FFE0();
        swift_retain_n(v26, 2);
        v51 = a6;
        swift_retain_n(a6, 2);
        v32 = swift_retain_n(v22, 2);
        v50 = static OS_dispatch_queue.main.getter(v32);
        static DispatchTime.now()(v50);
        v33 = v54;
        + infix(_:_:)(v18);
        v62 = *(void (**)(uint64_t *__return_ptr))(v53 + 8);
        ((void (*)(char *, uint64_t))v62)(v18, v60);
        v34 = swift_allocObject(&unk_100B5DF88, 32, 7);
        *(_QWORD *)(v34 + 16) = sub_10019D984;
        *(_QWORD *)(v34 + 24) = v27;
        aBlock[4] = sub_10019EACC;
        v64 = v34;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100121D84;
        aBlock[3] = &unk_100B5DFA0;
        v35 = _Block_copy(aBlock);
        v36 = v64;
        swift_retain();
        v37 = swift_release(v36);
        v38 = (_QWORD *)v22;
        v39 = v55;
        static DispatchQoS.unspecified.getter(v37);
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_10000F1C8((unint64_t *)&qword_100BFFA20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        v41 = v40;
        v42 = sub_1000BA294(&qword_100BD4F10);
        sub_10003D2DC((unint64_t *)&qword_100BFFA30, &qword_100BD4F10);
        v43 = v58;
        v44 = v52;
        v45 = v41;
        v26 = v61;
        dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v42, v46, v52, v45);
        v47 = (void *)v50;
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v33, v39, v43, v35);
        _Block_release(v35);

        (*(void (**)(char *, uint64_t))(v59 + 8))(v43, v44);
        v48 = v39;
        v22 = (uint64_t)v38;
        (*(void (**)(char *, uint64_t))(v56 + 8))(v48, v57);
        ((void (*)(char *, uint64_t))v62)(v33, v60);
        swift_release(v51);
        swift_release(v27);
        v27 = v38;
        goto LABEL_12;
      }
      swift_retain_n(v26, 2);
      swift_retain_n(a6, 2);
      swift_retain();
      sub_100193CAC(v28, a6, (uint64_t)v65, v22, v30);
    }
    swift_release(v29);
LABEL_12:
    swift_release(v27);
    sub_100021A14((uint64_t)v65, &qword_100BC43C0);
    swift_release(v26);
    swift_release(v22);
  }
}

void sub_10018B694(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, void (*a5)(uint64_t), uint64_t a6, void (*a7)(uint64_t), uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t Strong;
  uint64_t v22;
  double v23;
  char v24;
  char v25;
  uint64_t v26;
  _QWORD *v27;
  void (*v28)(uint64_t);
  uint64_t v29;
  void (*v30)(uint64_t);
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  __n128 v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t);
  _QWORD aBlock[5];
  uint64_t v64;
  _BYTE v65[72];
  _BYTE __src[72];
  char v67[8];

  v62 = a7;
  v14 = type metadata accessor for DispatchWorkItemFlags(0);
  v59 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v58 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for DispatchQoS(0);
  v56 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v55 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for DispatchTime(0);
  v53 = *(_QWORD *)(v60 - 8);
  v17 = __chkstk_darwin(v60);
  v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v54 = (char *)&v49 - v20;
  a2 += 16;
  swift_beginAccess(a2, v67, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v22 = Strong;
    v52 = v14;
    v23 = COERCE_DOUBLE(a3(a1));
    v25 = v24;
    v61 = a8;
    sub_100037768(a1, (uint64_t)__src, &qword_100BC43C0);
    v26 = v61;
    sub_100037768((uint64_t)__src, (uint64_t)v65, &qword_100BC43C0);
    v27 = (_QWORD *)swift_allocObject(&unk_100B5E0C8, 128, 7);
    v28 = a5;
    v27[2] = a5;
    v27[3] = a6;
    v29 = a6;
    memcpy(v27 + 4, __src, 0x48uLL);
    v30 = v62;
    v27[13] = v22;
    v27[14] = v30;
    v27[15] = v26;
    if ((v25 & 1) != 0)
    {
      if (v23 == 0.0)
      {
        swift_retain_n(v26, 2);
        swift_retain();
        swift_retain();
        goto LABEL_12;
      }
      v31 = qword_100BC2820;
      swift_retain_n(v26, 2);
      swift_retain_n(v29, 2);
      swift_retain();
      if (v31 != -1)
        swift_once(&qword_100BC2820, sub_10091A684);
      sub_10017DD7C(v22, (uint64_t)sub_10019DA4C, (uint64_t)v27);
    }
    else
    {
      if (v23 != 0.0)
      {
        sub_10009FFE0();
        swift_retain_n(v26, 2);
        v51 = a6;
        swift_retain_n(a6, 2);
        v32 = swift_retain_n(v22, 2);
        v50 = static OS_dispatch_queue.main.getter(v32);
        static DispatchTime.now()(v50);
        v33 = v54;
        + infix(_:_:)(v19);
        v62 = *(void (**)(uint64_t))(v53 + 8);
        ((void (*)(char *, uint64_t))v62)(v19, v60);
        v34 = swift_allocObject(&unk_100B5E0F0, 32, 7);
        *(_QWORD *)(v34 + 16) = sub_10019DA4C;
        *(_QWORD *)(v34 + 24) = v27;
        aBlock[4] = sub_10019EACC;
        v64 = v34;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100121D84;
        aBlock[3] = &unk_100B5E108;
        v35 = _Block_copy(aBlock);
        v36 = v64;
        swift_retain();
        v37 = swift_release(v36);
        v38 = (_QWORD *)v22;
        v39 = v55;
        static DispatchQoS.unspecified.getter(v37);
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_10000F1C8((unint64_t *)&qword_100BFFA20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        v41 = v40;
        v42 = sub_1000BA294(&qword_100BD4F10);
        sub_10003D2DC((unint64_t *)&qword_100BFFA30, &qword_100BD4F10);
        v43 = v58;
        v44 = v52;
        v45 = v41;
        v26 = v61;
        dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v42, v46, v52, v45);
        v47 = (void *)v50;
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v33, v39, v43, v35);
        _Block_release(v35);

        (*(void (**)(char *, uint64_t))(v59 + 8))(v43, v44);
        v48 = v39;
        v22 = (uint64_t)v38;
        (*(void (**)(char *, uint64_t))(v56 + 8))(v48, v57);
        ((void (*)(char *, uint64_t))v62)(v33, v60);
        swift_release(v51);
        swift_release(v27);
        v27 = v38;
        goto LABEL_12;
      }
      swift_retain_n(v26, 2);
      swift_retain_n(a6, 2);
      swift_retain();
      sub_100193F94(v28, a6, (uint64_t)v65, v22, v30, v26);
    }
    swift_release(v29);
LABEL_12:
    swift_release(v27);
    sub_100021A14((uint64_t)v65, &qword_100BC43C0);
    swift_release(v26);
    swift_release(v22);
  }
}

void sub_10018BC20(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, void (*a5)(uint64_t), uint64_t a6, void (*a7)(uint64_t), uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t Strong;
  uint64_t v22;
  double v23;
  char v24;
  char v25;
  uint64_t v26;
  _QWORD *v27;
  void (*v28)(uint64_t);
  uint64_t v29;
  void (*v30)(uint64_t);
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  __n128 v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t);
  _QWORD aBlock[5];
  uint64_t v64;
  _BYTE v65[72];
  _BYTE __src[72];
  char v67[8];

  v62 = a7;
  v14 = type metadata accessor for DispatchWorkItemFlags(0);
  v59 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v58 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for DispatchQoS(0);
  v56 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v55 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for DispatchTime(0);
  v53 = *(_QWORD *)(v60 - 8);
  v17 = __chkstk_darwin(v60);
  v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v54 = (char *)&v49 - v20;
  a2 += 16;
  swift_beginAccess(a2, v67, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v22 = Strong;
    v52 = v14;
    v23 = COERCE_DOUBLE(a3(a1));
    v25 = v24;
    v61 = a8;
    sub_100037768(a1, (uint64_t)__src, &qword_100BC43C0);
    v26 = v61;
    sub_100037768((uint64_t)__src, (uint64_t)v65, &qword_100BC43C0);
    v27 = (_QWORD *)swift_allocObject(&unk_100B5E230, 128, 7);
    v28 = a5;
    v27[2] = a5;
    v27[3] = a6;
    v29 = a6;
    memcpy(v27 + 4, __src, 0x48uLL);
    v30 = v62;
    v27[13] = v22;
    v27[14] = v30;
    v27[15] = v26;
    if ((v25 & 1) != 0)
    {
      if (v23 == 0.0)
      {
        swift_retain_n(v26, 2);
        swift_retain();
        swift_retain();
        goto LABEL_12;
      }
      v31 = qword_100BC2820;
      swift_retain_n(v26, 2);
      swift_retain_n(v29, 2);
      swift_retain();
      if (v31 != -1)
        swift_once(&qword_100BC2820, sub_10091A684);
      sub_10017E114(v22, (uint64_t)sub_10019DAE0, (uint64_t)v27);
    }
    else
    {
      if (v23 != 0.0)
      {
        sub_10009FFE0();
        swift_retain_n(v26, 2);
        v51 = a6;
        swift_retain_n(a6, 2);
        v32 = swift_retain_n(v22, 2);
        v50 = static OS_dispatch_queue.main.getter(v32);
        static DispatchTime.now()(v50);
        v33 = v54;
        + infix(_:_:)(v19);
        v62 = *(void (**)(uint64_t))(v53 + 8);
        ((void (*)(char *, uint64_t))v62)(v19, v60);
        v34 = swift_allocObject(&unk_100B5E258, 32, 7);
        *(_QWORD *)(v34 + 16) = sub_10019DAE0;
        *(_QWORD *)(v34 + 24) = v27;
        aBlock[4] = sub_10019EACC;
        v64 = v34;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100121D84;
        aBlock[3] = &unk_100B5E270;
        v35 = _Block_copy(aBlock);
        v36 = v64;
        swift_retain();
        v37 = swift_release(v36);
        v38 = (_QWORD *)v22;
        v39 = v55;
        static DispatchQoS.unspecified.getter(v37);
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_10000F1C8((unint64_t *)&qword_100BFFA20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        v41 = v40;
        v42 = sub_1000BA294(&qword_100BD4F10);
        sub_10003D2DC((unint64_t *)&qword_100BFFA30, &qword_100BD4F10);
        v43 = v58;
        v44 = v52;
        v45 = v41;
        v26 = v61;
        dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v42, v46, v52, v45);
        v47 = (void *)v50;
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v33, v39, v43, v35);
        _Block_release(v35);

        (*(void (**)(char *, uint64_t))(v59 + 8))(v43, v44);
        v48 = v39;
        v22 = (uint64_t)v38;
        (*(void (**)(char *, uint64_t))(v56 + 8))(v48, v57);
        ((void (*)(char *, uint64_t))v62)(v33, v60);
        swift_release(v51);
        swift_release(v27);
        v27 = v38;
        goto LABEL_12;
      }
      swift_retain_n(v26, 2);
      swift_retain_n(a6, 2);
      swift_retain();
      sub_1001947F8(v28, a6, (uint64_t)v65, v22, v30, v26);
    }
    swift_release(v29);
LABEL_12:
    swift_release(v27);
    sub_100021A14((uint64_t)v65, &qword_100BC43C0);
    swift_release(v26);
    swift_release(v22);
  }
}

void sub_10018C1AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, void (*a5)(uint64_t), uint64_t a6, void (*a7)(uint64_t), uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t Strong;
  uint64_t v22;
  double v23;
  char v24;
  char v25;
  uint64_t v26;
  _QWORD *v27;
  void (*v28)(uint64_t);
  uint64_t v29;
  void (*v30)(uint64_t);
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  __n128 v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t);
  _QWORD aBlock[5];
  uint64_t v64;
  _BYTE v65[72];
  _BYTE __src[72];
  char v67[8];

  v62 = a7;
  v14 = type metadata accessor for DispatchWorkItemFlags(0);
  v59 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v58 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for DispatchQoS(0);
  v56 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v55 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for DispatchTime(0);
  v53 = *(_QWORD *)(v60 - 8);
  v17 = __chkstk_darwin(v60);
  v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v54 = (char *)&v49 - v20;
  a2 += 16;
  swift_beginAccess(a2, v67, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v22 = Strong;
    v52 = v14;
    v23 = COERCE_DOUBLE(a3(a1));
    v25 = v24;
    v61 = a8;
    sub_100037768(a1, (uint64_t)__src, &qword_100BC43C0);
    v26 = v61;
    sub_100037768((uint64_t)__src, (uint64_t)v65, &qword_100BC43C0);
    v27 = (_QWORD *)swift_allocObject(&unk_100B5E398, 128, 7);
    v28 = a5;
    v27[2] = a5;
    v27[3] = a6;
    v29 = a6;
    memcpy(v27 + 4, __src, 0x48uLL);
    v30 = v62;
    v27[13] = v22;
    v27[14] = v30;
    v27[15] = v26;
    if ((v25 & 1) != 0)
    {
      if (v23 == 0.0)
      {
        swift_retain_n(v26, 2);
        swift_retain();
        swift_retain();
        goto LABEL_12;
      }
      v31 = qword_100BC2820;
      swift_retain_n(v26, 2);
      swift_retain_n(v29, 2);
      swift_retain();
      if (v31 != -1)
        swift_once(&qword_100BC2820, sub_10091A684);
      sub_10017E4AC(v22, (uint64_t)sub_10019DB74, (uint64_t)v27);
    }
    else
    {
      if (v23 != 0.0)
      {
        sub_10009FFE0();
        swift_retain_n(v26, 2);
        v51 = a6;
        swift_retain_n(a6, 2);
        v32 = swift_retain_n(v22, 2);
        v50 = static OS_dispatch_queue.main.getter(v32);
        static DispatchTime.now()(v50);
        v33 = v54;
        + infix(_:_:)(v19);
        v62 = *(void (**)(uint64_t))(v53 + 8);
        ((void (*)(char *, uint64_t))v62)(v19, v60);
        v34 = swift_allocObject(&unk_100B5E3C0, 32, 7);
        *(_QWORD *)(v34 + 16) = sub_10019DB74;
        *(_QWORD *)(v34 + 24) = v27;
        aBlock[4] = sub_10019EACC;
        v64 = v34;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100121D84;
        aBlock[3] = &unk_100B5E3D8;
        v35 = _Block_copy(aBlock);
        v36 = v64;
        swift_retain();
        v37 = swift_release(v36);
        v38 = (_QWORD *)v22;
        v39 = v55;
        static DispatchQoS.unspecified.getter(v37);
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_10000F1C8((unint64_t *)&qword_100BFFA20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        v41 = v40;
        v42 = sub_1000BA294(&qword_100BD4F10);
        sub_10003D2DC((unint64_t *)&qword_100BFFA30, &qword_100BD4F10);
        v43 = v58;
        v44 = v52;
        v45 = v41;
        v26 = v61;
        dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v42, v46, v52, v45);
        v47 = (void *)v50;
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v33, v39, v43, v35);
        _Block_release(v35);

        (*(void (**)(char *, uint64_t))(v59 + 8))(v43, v44);
        v48 = v39;
        v22 = (uint64_t)v38;
        (*(void (**)(char *, uint64_t))(v56 + 8))(v48, v57);
        ((void (*)(char *, uint64_t))v62)(v33, v60);
        swift_release(v51);
        swift_release(v27);
        v27 = v38;
        goto LABEL_12;
      }
      swift_retain_n(v26, 2);
      swift_retain_n(a6, 2);
      swift_retain();
      sub_10019505C(v28, a6, (uint64_t)v65, v22, v30, v26);
    }
    swift_release(v29);
LABEL_12:
    swift_release(v27);
    sub_100021A14((uint64_t)v65, &qword_100BC43C0);
    swift_release(v26);
    swift_release(v22);
  }
}

void sub_10018C738(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, void (*a5)(uint64_t, __n128), uint64_t a6, void (*a7)(uint64_t), uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t Strong;
  uint64_t v22;
  double v23;
  char v24;
  char v25;
  uint64_t v26;
  _QWORD *v27;
  void (*v28)(uint64_t, __n128);
  uint64_t v29;
  void (*v30)(uint64_t);
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  __n128 v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t);
  _QWORD aBlock[5];
  uint64_t v64;
  _BYTE v65[72];
  _BYTE __src[72];
  char v67[8];

  v62 = a7;
  v14 = type metadata accessor for DispatchWorkItemFlags(0);
  v59 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v58 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for DispatchQoS(0);
  v56 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v55 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for DispatchTime(0);
  v53 = *(_QWORD *)(v60 - 8);
  __chkstk_darwin(v60);
  v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v54 = (char *)&v49 - v20;
  a2 += 16;
  swift_beginAccess(a2, v67, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v22 = Strong;
    v52 = v14;
    v23 = COERCE_DOUBLE(a3(a1));
    v25 = v24;
    v61 = a8;
    sub_100037768(a1, (uint64_t)__src, &qword_100BC43C0);
    v26 = v61;
    sub_100037768((uint64_t)__src, (uint64_t)v65, &qword_100BC43C0);
    v27 = (_QWORD *)swift_allocObject(&unk_100B5EAA0, 128, 7);
    v28 = a5;
    v27[2] = a5;
    v27[3] = a6;
    v29 = a6;
    memcpy(v27 + 4, __src, 0x48uLL);
    v30 = v62;
    v27[13] = v22;
    v27[14] = v30;
    v27[15] = v26;
    if ((v25 & 1) != 0)
    {
      if (v23 == 0.0)
      {
        swift_retain_n(v26, 2);
        swift_retain();
        swift_retain();
        goto LABEL_12;
      }
      v31 = qword_100BC2820;
      swift_retain_n(v26, 2);
      swift_retain_n(v29, 2);
      swift_retain();
      if (v31 != -1)
        swift_once(&qword_100BC2820, sub_10091A684);
      sub_10017F6A4(v22, (uint64_t)sub_10019DD90, (uint64_t)v27);
    }
    else
    {
      if (v23 != 0.0)
      {
        sub_10009FFE0();
        swift_retain_n(v26, 2);
        v51 = a6;
        swift_retain_n(a6, 2);
        v32 = swift_retain_n(v22, 2);
        v50 = static OS_dispatch_queue.main.getter(v32);
        static DispatchTime.now()(v50);
        v33 = v54;
        + infix(_:_:)(v18);
        v62 = *(void (**)(uint64_t))(v53 + 8);
        ((void (*)(char *, uint64_t))v62)(v18, v60);
        v34 = swift_allocObject(&unk_100B5EAC8, 32, 7);
        *(_QWORD *)(v34 + 16) = sub_10019DD90;
        *(_QWORD *)(v34 + 24) = v27;
        aBlock[4] = sub_10019EACC;
        v64 = v34;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100121D84;
        aBlock[3] = &unk_100B5EAE0;
        v35 = _Block_copy(aBlock);
        v36 = v64;
        swift_retain();
        v37 = swift_release(v36);
        v38 = (_QWORD *)v22;
        v39 = v55;
        static DispatchQoS.unspecified.getter(v37);
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_10000F1C8((unint64_t *)&qword_100BFFA20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        v41 = v40;
        v42 = sub_1000BA294(&qword_100BD4F10);
        sub_10003D2DC((unint64_t *)&qword_100BFFA30, &qword_100BD4F10);
        v43 = v58;
        v44 = v52;
        v45 = v41;
        v26 = v61;
        dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v42, v46, v52, v45);
        v47 = (void *)v50;
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v33, v39, v43, v35);
        _Block_release(v35);

        (*(void (**)(char *, uint64_t))(v59 + 8))(v43, v44);
        v48 = v39;
        v22 = (uint64_t)v38;
        (*(void (**)(char *, uint64_t))(v56 + 8))(v48, v57);
        ((void (*)(char *, uint64_t))v62)(v33, v60);
        swift_release(v51);
        swift_release(v27);
        v27 = v38;
        goto LABEL_12;
      }
      swift_retain_n(v26, 2);
      swift_retain_n(a6, 2);
      swift_retain();
      sub_100197A60(v28, a6, (uint64_t)v65, v22, v30, v26);
    }
    swift_release(v29);
LABEL_12:
    swift_release(v27);
    sub_100021A14((uint64_t)v65, &qword_100BC43C0);
    swift_release(v26);
    swift_release(v22);
  }
}

void sub_10018CCC4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, void (*a5)(__int128 *__return_ptr, uint64_t), uint64_t a6, void (*a7)(__int128 *__return_ptr, uint64_t *, __n128), uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t Strong;
  uint64_t v22;
  double v23;
  char v24;
  char v25;
  uint64_t v26;
  _QWORD *v27;
  void (*v28)(__int128 *__return_ptr, uint64_t);
  uint64_t v29;
  void (*v30)(__int128 *__return_ptr, uint64_t *, __n128);
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  __n128 v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(__int128 *__return_ptr, uint64_t *, __n128);
  _QWORD aBlock[5];
  uint64_t v64;
  _BYTE v65[72];
  _BYTE __src[72];
  char v67[8];

  v62 = a7;
  v14 = type metadata accessor for DispatchWorkItemFlags(0);
  v59 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v58 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for DispatchQoS(0);
  v56 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v55 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for DispatchTime(0);
  v53 = *(_QWORD *)(v60 - 8);
  __chkstk_darwin(v60);
  v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v54 = (char *)&v49 - v20;
  a2 += 16;
  swift_beginAccess(a2, v67, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v22 = Strong;
    v52 = v14;
    v23 = COERCE_DOUBLE(a3(a1));
    v25 = v24;
    v61 = a8;
    sub_100037768(a1, (uint64_t)__src, &qword_100BC43C0);
    v26 = v61;
    sub_100037768((uint64_t)__src, (uint64_t)v65, &qword_100BC43C0);
    v27 = (_QWORD *)swift_allocObject(&unk_100B5EC08, 128, 7);
    v28 = a5;
    v27[2] = a5;
    v27[3] = a6;
    v29 = a6;
    memcpy(v27 + 4, __src, 0x48uLL);
    v30 = v62;
    v27[13] = v22;
    v27[14] = v30;
    v27[15] = v26;
    if ((v25 & 1) != 0)
    {
      if (v23 == 0.0)
      {
        swift_retain_n(v26, 2);
        swift_retain();
        swift_retain();
        goto LABEL_12;
      }
      v31 = qword_100BC2820;
      swift_retain_n(v26, 2);
      swift_retain_n(v29, 2);
      swift_retain();
      if (v31 != -1)
        swift_once(&qword_100BC2820, sub_10091A684);
      sub_10017FA44(v22, (uint64_t)sub_10019DE7C, (uint64_t)v27);
    }
    else
    {
      if (v23 != 0.0)
      {
        sub_10009FFE0();
        swift_retain_n(v26, 2);
        v51 = a6;
        swift_retain_n(a6, 2);
        v32 = swift_retain_n(v22, 2);
        v50 = static OS_dispatch_queue.main.getter(v32);
        static DispatchTime.now()(v50);
        v33 = v54;
        + infix(_:_:)(v18);
        v62 = *(void (**)(__int128 *__return_ptr, uint64_t *, __n128))(v53 + 8);
        ((void (*)(char *, uint64_t))v62)(v18, v60);
        v34 = swift_allocObject(&unk_100B5EC30, 32, 7);
        *(_QWORD *)(v34 + 16) = sub_10019DE7C;
        *(_QWORD *)(v34 + 24) = v27;
        aBlock[4] = sub_10019EACC;
        v64 = v34;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100121D84;
        aBlock[3] = &unk_100B5EC48;
        v35 = _Block_copy(aBlock);
        v36 = v64;
        swift_retain();
        v37 = swift_release(v36);
        v38 = (_QWORD *)v22;
        v39 = v55;
        static DispatchQoS.unspecified.getter(v37);
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_10000F1C8((unint64_t *)&qword_100BFFA20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        v41 = v40;
        v42 = sub_1000BA294(&qword_100BD4F10);
        sub_10003D2DC((unint64_t *)&qword_100BFFA30, &qword_100BD4F10);
        v43 = v58;
        v44 = v52;
        v45 = v41;
        v26 = v61;
        dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v42, v46, v52, v45);
        v47 = (void *)v50;
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v33, v39, v43, v35);
        _Block_release(v35);

        (*(void (**)(char *, uint64_t))(v59 + 8))(v43, v44);
        v48 = v39;
        v22 = (uint64_t)v38;
        (*(void (**)(char *, uint64_t))(v56 + 8))(v48, v57);
        ((void (*)(char *, uint64_t))v62)(v33, v60);
        swift_release(v51);
        swift_release(v27);
        v27 = v38;
        goto LABEL_12;
      }
      swift_retain_n(v26, 2);
      swift_retain_n(a6, 2);
      swift_retain();
      sub_1001982C8(v28, a6, (uint64_t)v65, v22, v30);
    }
    swift_release(v29);
LABEL_12:
    swift_release(v27);
    sub_100021A14((uint64_t)v65, &qword_100BC43C0);
    swift_release(v26);
    swift_release(v22);
  }
}

void sub_10018D250(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, void (*a5)(uint64_t), uint64_t a6, void (*a7)(uint64_t *__return_ptr, uint64_t), uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t Strong;
  uint64_t v22;
  double v23;
  char v24;
  char v25;
  uint64_t v26;
  _QWORD *v27;
  void (*v28)(uint64_t);
  uint64_t v29;
  void (*v30)(uint64_t *__return_ptr, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  __n128 v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t *__return_ptr, uint64_t);
  _QWORD aBlock[5];
  uint64_t v64;
  _BYTE v65[72];
  _BYTE __src[72];
  char v67[8];

  v62 = a7;
  v14 = type metadata accessor for DispatchWorkItemFlags(0);
  v59 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v58 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for DispatchQoS(0);
  v56 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v55 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for DispatchTime(0);
  v53 = *(_QWORD *)(v60 - 8);
  v17 = __chkstk_darwin(v60);
  v19 = (uint64_t *)((char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v17);
  v54 = (char *)&v49 - v20;
  a2 += 16;
  swift_beginAccess(a2, v67, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v22 = Strong;
    v52 = v14;
    v23 = COERCE_DOUBLE(a3(a1));
    v25 = v24;
    v61 = a8;
    sub_100037768(a1, (uint64_t)__src, &qword_100BC43C0);
    v26 = v61;
    sub_100037768((uint64_t)__src, (uint64_t)v65, &qword_100BC43C0);
    v27 = (_QWORD *)swift_allocObject(&unk_100B5ED70, 128, 7);
    v28 = a5;
    v27[2] = a5;
    v27[3] = a6;
    v29 = a6;
    memcpy(v27 + 4, __src, 0x48uLL);
    v30 = v62;
    v27[13] = v22;
    v27[14] = v30;
    v27[15] = v26;
    if ((v25 & 1) != 0)
    {
      if (v23 == 0.0)
      {
        swift_retain_n(v26, 2);
        swift_retain();
        swift_retain();
        goto LABEL_12;
      }
      v31 = qword_100BC2820;
      swift_retain_n(v26, 2);
      swift_retain_n(v29, 2);
      swift_retain();
      if (v31 != -1)
        swift_once(&qword_100BC2820, sub_10091A684);
      sub_10017FDE0(v22, (uint64_t)sub_10019E230, (uint64_t)v27);
    }
    else
    {
      if (v23 != 0.0)
      {
        sub_10009FFE0();
        swift_retain_n(v26, 2);
        v51 = a6;
        swift_retain_n(a6, 2);
        v32 = swift_retain_n(v22, 2);
        v50 = static OS_dispatch_queue.main.getter(v32);
        static DispatchTime.now()(v50);
        v33 = (uint64_t *)v54;
        + infix(_:_:)(v19);
        v62 = *(void (**)(uint64_t *__return_ptr, uint64_t))(v53 + 8);
        v62(v19, v60);
        v34 = swift_allocObject(&unk_100B5ED98, 32, 7);
        *(_QWORD *)(v34 + 16) = sub_10019E230;
        *(_QWORD *)(v34 + 24) = v27;
        aBlock[4] = sub_10019EACC;
        v64 = v34;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100121D84;
        aBlock[3] = &unk_100B5EDB0;
        v35 = _Block_copy(aBlock);
        v36 = v64;
        swift_retain();
        v37 = swift_release(v36);
        v38 = (_QWORD *)v22;
        v39 = v55;
        static DispatchQoS.unspecified.getter(v37);
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_10000F1C8((unint64_t *)&qword_100BFFA20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        v41 = v40;
        v42 = sub_1000BA294(&qword_100BD4F10);
        sub_10003D2DC((unint64_t *)&qword_100BFFA30, &qword_100BD4F10);
        v43 = v58;
        v44 = v52;
        v45 = v41;
        v26 = v61;
        dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v42, v46, v52, v45);
        v47 = (void *)v50;
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v33, v39, v43, v35);
        _Block_release(v35);

        (*(void (**)(char *, uint64_t))(v59 + 8))(v43, v44);
        v48 = v39;
        v22 = (uint64_t)v38;
        (*(void (**)(char *, uint64_t))(v56 + 8))(v48, v57);
        v62(v33, v60);
        swift_release(v51);
        swift_release(v27);
        v27 = v38;
        goto LABEL_12;
      }
      swift_retain_n(v26, 2);
      swift_retain_n(a6, 2);
      swift_retain();
      sub_10019887C(v28, a6, (uint64_t)v65, v22, v30, v26);
    }
    swift_release(v29);
LABEL_12:
    swift_release(v27);
    sub_100021A14((uint64_t)v65, &qword_100BC43C0);
    swift_release(v26);
    swift_release(v22);
  }
}

void sub_10018D7DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, void (*a5)(uint64_t), uint64_t a6, void (*a7)(uint64_t), uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t Strong;
  uint64_t v22;
  double v23;
  char v24;
  char v25;
  uint64_t v26;
  _QWORD *v27;
  void (*v28)(uint64_t);
  uint64_t v29;
  void (*v30)(uint64_t);
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  __n128 v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t);
  _QWORD aBlock[5];
  uint64_t v64;
  _BYTE v65[72];
  _BYTE __src[72];
  char v67[8];

  v62 = a7;
  v14 = type metadata accessor for DispatchWorkItemFlags(0);
  v59 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v58 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for DispatchQoS(0);
  v56 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v55 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for DispatchTime(0);
  v53 = *(_QWORD *)(v60 - 8);
  v17 = __chkstk_darwin(v60);
  v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v54 = (char *)&v49 - v20;
  a2 += 16;
  swift_beginAccess(a2, v67, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v22 = Strong;
    v52 = v14;
    v23 = COERCE_DOUBLE(a3(a1));
    v25 = v24;
    v61 = a8;
    sub_100037768(a1, (uint64_t)__src, &qword_100BC43C0);
    v26 = v61;
    sub_100037768((uint64_t)__src, (uint64_t)v65, &qword_100BC43C0);
    v27 = (_QWORD *)swift_allocObject(&unk_100B5F040, 128, 7);
    v28 = a5;
    v27[2] = a5;
    v27[3] = a6;
    v29 = a6;
    memcpy(v27 + 4, __src, 0x48uLL);
    v30 = v62;
    v27[13] = v22;
    v27[14] = v30;
    v27[15] = v26;
    if ((v25 & 1) != 0)
    {
      if (v23 == 0.0)
      {
        swift_retain_n(v26, 2);
        swift_retain();
        swift_retain();
        goto LABEL_12;
      }
      v31 = qword_100BC2820;
      swift_retain_n(v26, 2);
      swift_retain_n(v29, 2);
      swift_retain();
      if (v31 != -1)
        swift_once(&qword_100BC2820, sub_10091A684);
      sub_100180514(v22, (uint64_t)sub_10019E320, (uint64_t)v27);
    }
    else
    {
      if (v23 != 0.0)
      {
        sub_10009FFE0();
        swift_retain_n(v26, 2);
        v51 = a6;
        swift_retain_n(a6, 2);
        v32 = swift_retain_n(v22, 2);
        v50 = static OS_dispatch_queue.main.getter(v32);
        static DispatchTime.now()(v50);
        v33 = v54;
        + infix(_:_:)(v19);
        v62 = *(void (**)(uint64_t))(v53 + 8);
        ((void (*)(char *, uint64_t))v62)(v19, v60);
        v34 = swift_allocObject(&unk_100B5F068, 32, 7);
        *(_QWORD *)(v34 + 16) = sub_10019E320;
        *(_QWORD *)(v34 + 24) = v27;
        aBlock[4] = sub_10019EACC;
        v64 = v34;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100121D84;
        aBlock[3] = &unk_100B5F080;
        v35 = _Block_copy(aBlock);
        v36 = v64;
        swift_retain();
        v37 = swift_release(v36);
        v38 = (_QWORD *)v22;
        v39 = v55;
        static DispatchQoS.unspecified.getter(v37);
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_10000F1C8((unint64_t *)&qword_100BFFA20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        v41 = v40;
        v42 = sub_1000BA294(&qword_100BD4F10);
        sub_10003D2DC((unint64_t *)&qword_100BFFA30, &qword_100BD4F10);
        v43 = v58;
        v44 = v52;
        v45 = v41;
        v26 = v61;
        dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v42, v46, v52, v45);
        v47 = (void *)v50;
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v33, v39, v43, v35);
        _Block_release(v35);

        (*(void (**)(char *, uint64_t))(v59 + 8))(v43, v44);
        v48 = v39;
        v22 = (uint64_t)v38;
        (*(void (**)(char *, uint64_t))(v56 + 8))(v48, v57);
        ((void (*)(char *, uint64_t))v62)(v33, v60);
        swift_release(v51);
        swift_release(v27);
        v27 = v38;
        goto LABEL_12;
      }
      swift_retain_n(v26, 2);
      swift_retain_n(a6, 2);
      swift_retain();
      sub_10019955C(v28, a6, (uint64_t)v65, v22, v30, v26);
    }
    swift_release(v29);
LABEL_12:
    swift_release(v27);
    sub_100021A14((uint64_t)v65, &qword_100BC43C0);
    swift_release(v26);
    swift_release(v22);
  }
}

void sub_10018DD68(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, void (*a5)(uint64_t), uint64_t a6, void (*a7)(uint64_t), uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t Strong;
  uint64_t v22;
  double v23;
  char v24;
  char v25;
  uint64_t v26;
  _QWORD *v27;
  void (*v28)(uint64_t);
  uint64_t v29;
  void (*v30)(uint64_t);
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  __n128 v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t);
  _QWORD aBlock[5];
  uint64_t v64;
  _BYTE v65[72];
  _BYTE __src[72];
  char v67[8];

  v62 = a7;
  v14 = type metadata accessor for DispatchWorkItemFlags(0);
  v59 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v58 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for DispatchQoS(0);
  v56 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v55 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for DispatchTime(0);
  v53 = *(_QWORD *)(v60 - 8);
  v17 = __chkstk_darwin(v60);
  v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v54 = (char *)&v49 - v20;
  a2 += 16;
  swift_beginAccess(a2, v67, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v22 = Strong;
    v52 = v14;
    v23 = COERCE_DOUBLE(a3(a1));
    v25 = v24;
    v61 = a8;
    sub_100037768(a1, (uint64_t)__src, &qword_100BC43C0);
    v26 = v61;
    sub_100037768((uint64_t)__src, (uint64_t)v65, &qword_100BC43C0);
    v27 = (_QWORD *)swift_allocObject(&unk_100B5F1A8, 128, 7);
    v28 = a5;
    v27[2] = a5;
    v27[3] = a6;
    v29 = a6;
    memcpy(v27 + 4, __src, 0x48uLL);
    v30 = v62;
    v27[13] = v22;
    v27[14] = v30;
    v27[15] = v26;
    if ((v25 & 1) != 0)
    {
      if (v23 == 0.0)
      {
        swift_retain_n(v26, 2);
        swift_retain();
        swift_retain();
        goto LABEL_12;
      }
      v31 = qword_100BC2820;
      swift_retain_n(v26, 2);
      swift_retain_n(v29, 2);
      swift_retain();
      if (v31 != -1)
        swift_once(&qword_100BC2820, sub_10091A684);
      sub_1001808AC(v22, (uint64_t)sub_10019E3B4, (uint64_t)v27);
    }
    else
    {
      if (v23 != 0.0)
      {
        sub_10009FFE0();
        swift_retain_n(v26, 2);
        v51 = a6;
        swift_retain_n(a6, 2);
        v32 = swift_retain_n(v22, 2);
        v50 = static OS_dispatch_queue.main.getter(v32);
        static DispatchTime.now()(v50);
        v33 = v54;
        + infix(_:_:)(v19);
        v62 = *(void (**)(uint64_t))(v53 + 8);
        ((void (*)(char *, uint64_t))v62)(v19, v60);
        v34 = swift_allocObject(&unk_100B5F1D0, 32, 7);
        *(_QWORD *)(v34 + 16) = sub_10019E3B4;
        *(_QWORD *)(v34 + 24) = v27;
        aBlock[4] = sub_10019EACC;
        v64 = v34;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100121D84;
        aBlock[3] = &unk_100B5F1E8;
        v35 = _Block_copy(aBlock);
        v36 = v64;
        swift_retain();
        v37 = swift_release(v36);
        v38 = (_QWORD *)v22;
        v39 = v55;
        static DispatchQoS.unspecified.getter(v37);
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_10000F1C8((unint64_t *)&qword_100BFFA20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        v41 = v40;
        v42 = sub_1000BA294(&qword_100BD4F10);
        sub_10003D2DC((unint64_t *)&qword_100BFFA30, &qword_100BD4F10);
        v43 = v58;
        v44 = v52;
        v45 = v41;
        v26 = v61;
        dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v42, v46, v52, v45);
        v47 = (void *)v50;
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v33, v39, v43, v35);
        _Block_release(v35);

        (*(void (**)(char *, uint64_t))(v59 + 8))(v43, v44);
        v48 = v39;
        v22 = (uint64_t)v38;
        (*(void (**)(char *, uint64_t))(v56 + 8))(v48, v57);
        ((void (*)(char *, uint64_t))v62)(v33, v60);
        swift_release(v51);
        swift_release(v27);
        v27 = v38;
        goto LABEL_12;
      }
      swift_retain_n(v26, 2);
      swift_retain_n(a6, 2);
      swift_retain();
      sub_100199E08(v28, a6, (uint64_t)v65, v22, v30, v26);
    }
    swift_release(v29);
LABEL_12:
    swift_release(v27);
    sub_100021A14((uint64_t)v65, &qword_100BC43C0);
    swift_release(v26);
    swift_release(v22);
  }
}

void sub_10018E2F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, void (*a5)(uint64_t), uint64_t a6, void (*a7)(uint64_t), uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t Strong;
  uint64_t v22;
  double v23;
  char v24;
  char v25;
  uint64_t v26;
  _QWORD *v27;
  void (*v28)(uint64_t);
  uint64_t v29;
  void (*v30)(uint64_t);
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  __n128 v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t);
  _QWORD aBlock[5];
  uint64_t v64;
  _BYTE v65[72];
  _BYTE __src[72];
  char v67[8];

  v62 = a7;
  v14 = type metadata accessor for DispatchWorkItemFlags(0);
  v59 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v58 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for DispatchQoS(0);
  v56 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v55 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for DispatchTime(0);
  v53 = *(_QWORD *)(v60 - 8);
  v17 = __chkstk_darwin(v60);
  v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v54 = (char *)&v49 - v20;
  a2 += 16;
  swift_beginAccess(a2, v67, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v22 = Strong;
    v52 = v14;
    v23 = COERCE_DOUBLE(a3(a1));
    v25 = v24;
    v61 = a8;
    sub_100037768(a1, (uint64_t)__src, &qword_100BC43C0);
    v26 = v61;
    sub_100037768((uint64_t)__src, (uint64_t)v65, &qword_100BC43C0);
    v27 = (_QWORD *)swift_allocObject(&unk_100B5F310, 128, 7);
    v28 = a5;
    v27[2] = a5;
    v27[3] = a6;
    v29 = a6;
    memcpy(v27 + 4, __src, 0x48uLL);
    v30 = v62;
    v27[13] = v22;
    v27[14] = v30;
    v27[15] = v26;
    if ((v25 & 1) != 0)
    {
      if (v23 == 0.0)
      {
        swift_retain_n(v26, 2);
        swift_retain();
        swift_retain();
        goto LABEL_12;
      }
      v31 = qword_100BC2820;
      swift_retain_n(v26, 2);
      swift_retain_n(v29, 2);
      swift_retain();
      if (v31 != -1)
        swift_once(&qword_100BC2820, sub_10091A684);
      sub_100180C44(v22, (uint64_t)sub_10019E448, (uint64_t)v27);
    }
    else
    {
      if (v23 != 0.0)
      {
        sub_10009FFE0();
        swift_retain_n(v26, 2);
        v51 = a6;
        swift_retain_n(a6, 2);
        v32 = swift_retain_n(v22, 2);
        v50 = static OS_dispatch_queue.main.getter(v32);
        static DispatchTime.now()(v50);
        v33 = v54;
        + infix(_:_:)(v19);
        v62 = *(void (**)(uint64_t))(v53 + 8);
        ((void (*)(char *, uint64_t))v62)(v19, v60);
        v34 = swift_allocObject(&unk_100B5F338, 32, 7);
        *(_QWORD *)(v34 + 16) = sub_10019E448;
        *(_QWORD *)(v34 + 24) = v27;
        aBlock[4] = sub_10019EACC;
        v64 = v34;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100121D84;
        aBlock[3] = &unk_100B5F350;
        v35 = _Block_copy(aBlock);
        v36 = v64;
        swift_retain();
        v37 = swift_release(v36);
        v38 = (_QWORD *)v22;
        v39 = v55;
        static DispatchQoS.unspecified.getter(v37);
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_10000F1C8((unint64_t *)&qword_100BFFA20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        v41 = v40;
        v42 = sub_1000BA294(&qword_100BD4F10);
        sub_10003D2DC((unint64_t *)&qword_100BFFA30, &qword_100BD4F10);
        v43 = v58;
        v44 = v52;
        v45 = v41;
        v26 = v61;
        dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v42, v46, v52, v45);
        v47 = (void *)v50;
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v33, v39, v43, v35);
        _Block_release(v35);

        (*(void (**)(char *, uint64_t))(v59 + 8))(v43, v44);
        v48 = v39;
        v22 = (uint64_t)v38;
        (*(void (**)(char *, uint64_t))(v56 + 8))(v48, v57);
        ((void (*)(char *, uint64_t))v62)(v33, v60);
        swift_release(v51);
        swift_release(v27);
        v27 = v38;
        goto LABEL_12;
      }
      swift_retain_n(v26, 2);
      swift_retain_n(a6, 2);
      swift_retain();
      sub_10019A66C(v28, a6, (uint64_t)v65, v22, v30, v26);
    }
    swift_release(v29);
LABEL_12:
    swift_release(v27);
    sub_100021A14((uint64_t)v65, &qword_100BC43C0);
    swift_release(v26);
    swift_release(v22);
  }
}

void sub_10018E880(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, void (*a5)(id *__return_ptr, uint64_t), uint64_t a6, void (*a7)(id *__return_ptr, id *), uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t Strong;
  uint64_t v22;
  double v23;
  char v24;
  char v25;
  uint64_t v26;
  _QWORD *v27;
  void (*v28)(id *__return_ptr, uint64_t);
  uint64_t v29;
  void (*v30)(id *__return_ptr, id *);
  uint64_t v31;
  uint64_t v32;
  id *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  __n128 v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(id *__return_ptr, id *);
  _QWORD aBlock[5];
  uint64_t v64;
  _BYTE v65[72];
  _BYTE __src[72];
  char v67[8];

  v62 = a7;
  v14 = type metadata accessor for DispatchWorkItemFlags(0);
  v59 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v58 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for DispatchQoS(0);
  v56 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v55 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for DispatchTime(0);
  v53 = *(_QWORD *)(v60 - 8);
  __chkstk_darwin(v60);
  v18 = (id *)((char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v19);
  v54 = (id *)((char *)&v49 - v20);
  a2 += 16;
  swift_beginAccess(a2, v67, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v22 = Strong;
    v52 = v14;
    v23 = COERCE_DOUBLE(a3(a1));
    v25 = v24;
    v61 = a8;
    sub_100037768(a1, (uint64_t)__src, &qword_100BC43C0);
    v26 = v61;
    sub_100037768((uint64_t)__src, (uint64_t)v65, &qword_100BC43C0);
    v27 = (_QWORD *)swift_allocObject(&unk_100B5F478, 128, 7);
    v28 = a5;
    v27[2] = a5;
    v27[3] = a6;
    v29 = a6;
    memcpy(v27 + 4, __src, 0x48uLL);
    v30 = v62;
    v27[13] = v22;
    v27[14] = v30;
    v27[15] = v26;
    if ((v25 & 1) != 0)
    {
      if (v23 == 0.0)
      {
        swift_retain_n(v26, 2);
        swift_retain();
        swift_retain();
        goto LABEL_12;
      }
      v31 = qword_100BC2820;
      swift_retain_n(v26, 2);
      swift_retain_n(v29, 2);
      swift_retain();
      if (v31 != -1)
        swift_once(&qword_100BC2820, sub_10091A684);
      sub_100180FDC(v22, (uint64_t)sub_10019E53C, (uint64_t)v27);
    }
    else
    {
      if (v23 != 0.0)
      {
        sub_10009FFE0();
        swift_retain_n(v26, 2);
        v51 = a6;
        swift_retain_n(a6, 2);
        v32 = swift_retain_n(v22, 2);
        v50 = static OS_dispatch_queue.main.getter(v32);
        static DispatchTime.now()(v50);
        v33 = v54;
        + infix(_:_:)(v18);
        v62 = *(void (**)(id *__return_ptr, id *))(v53 + 8);
        v62(v18, (id *)v60);
        v34 = swift_allocObject(&unk_100B5F4A0, 32, 7);
        *(_QWORD *)(v34 + 16) = sub_10019E53C;
        *(_QWORD *)(v34 + 24) = v27;
        aBlock[4] = sub_10019EACC;
        v64 = v34;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100121D84;
        aBlock[3] = &unk_100B5F4B8;
        v35 = _Block_copy(aBlock);
        v36 = v64;
        swift_retain();
        v37 = swift_release(v36);
        v38 = (_QWORD *)v22;
        v39 = v55;
        static DispatchQoS.unspecified.getter(v37);
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_10000F1C8((unint64_t *)&qword_100BFFA20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        v41 = v40;
        v42 = sub_1000BA294(&qword_100BD4F10);
        sub_10003D2DC((unint64_t *)&qword_100BFFA30, &qword_100BD4F10);
        v43 = v58;
        v44 = v52;
        v45 = v41;
        v26 = v61;
        dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v42, v46, v52, v45);
        v47 = (void *)v50;
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v33, v39, v43, v35);
        _Block_release(v35);

        (*(void (**)(char *, uint64_t))(v59 + 8))(v43, v44);
        v48 = v39;
        v22 = (uint64_t)v38;
        (*(void (**)(char *, uint64_t))(v56 + 8))(v48, v57);
        v62(v33, (id *)v60);
        swift_release(v51);
        swift_release(v27);
        v27 = v38;
        goto LABEL_12;
      }
      swift_retain_n(v26, 2);
      swift_retain_n(a6, 2);
      swift_retain();
      sub_10019AED0(v28, a6, (uint64_t)v65, v22, v30);
    }
    swift_release(v29);
LABEL_12:
    swift_release(v27);
    sub_100021A14((uint64_t)v65, &qword_100BC43C0);
    swift_release(v26);
    swift_release(v22);
  }
}

void sub_10018EE0C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, void (*a5)(uint64_t), uint64_t a6, void (*a7)(char *), uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t Strong;
  uint64_t v22;
  double v23;
  char v24;
  char v25;
  uint64_t v26;
  _QWORD *v27;
  void (*v28)(uint64_t);
  uint64_t v29;
  void (*v30)(char *);
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  __n128 v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *);
  _QWORD aBlock[5];
  uint64_t v64;
  _BYTE v65[72];
  _BYTE __src[72];
  char v67[8];

  v62 = a7;
  v14 = type metadata accessor for DispatchWorkItemFlags(0);
  v59 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v58 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for DispatchQoS(0);
  v56 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v55 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for DispatchTime(0);
  v53 = *(_QWORD *)(v60 - 8);
  v17 = __chkstk_darwin(v60);
  v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v54 = (char *)&v49 - v20;
  a2 += 16;
  swift_beginAccess(a2, v67, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v22 = Strong;
    v52 = v14;
    v23 = COERCE_DOUBLE(a3(a1));
    v25 = v24;
    v61 = a8;
    sub_100037768(a1, (uint64_t)__src, &qword_100BC43C0);
    v26 = v61;
    sub_100037768((uint64_t)__src, (uint64_t)v65, &qword_100BC43C0);
    v27 = (_QWORD *)swift_allocObject(&unk_100B5F5E0, 128, 7);
    v28 = a5;
    v27[2] = a5;
    v27[3] = a6;
    v29 = a6;
    memcpy(v27 + 4, __src, 0x48uLL);
    v30 = v62;
    v27[13] = v22;
    v27[14] = v30;
    v27[15] = v26;
    if ((v25 & 1) != 0)
    {
      if (v23 == 0.0)
      {
        swift_retain_n(v26, 2);
        swift_retain();
        swift_retain();
        goto LABEL_12;
      }
      v31 = qword_100BC2820;
      swift_retain_n(v26, 2);
      swift_retain_n(v29, 2);
      swift_retain();
      if (v31 != -1)
        swift_once(&qword_100BC2820, sub_10091A684);
      sub_100181378(v22, (uint64_t)sub_10019E638, (uint64_t)v27);
    }
    else
    {
      if (v23 != 0.0)
      {
        sub_10009FFE0();
        swift_retain_n(v26, 2);
        v51 = a6;
        swift_retain_n(a6, 2);
        v32 = swift_retain_n(v22, 2);
        v50 = static OS_dispatch_queue.main.getter(v32);
        static DispatchTime.now()(v50);
        v33 = v54;
        + infix(_:_:)(v19);
        v62 = *(void (**)(char *))(v53 + 8);
        ((void (*)(char *, uint64_t))v62)(v19, v60);
        v34 = swift_allocObject(&unk_100B5F608, 32, 7);
        *(_QWORD *)(v34 + 16) = sub_10019E638;
        *(_QWORD *)(v34 + 24) = v27;
        aBlock[4] = sub_10019EACC;
        v64 = v34;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100121D84;
        aBlock[3] = &unk_100B5F620;
        v35 = _Block_copy(aBlock);
        v36 = v64;
        swift_retain();
        v37 = swift_release(v36);
        v38 = (_QWORD *)v22;
        v39 = v55;
        static DispatchQoS.unspecified.getter(v37);
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_10000F1C8((unint64_t *)&qword_100BFFA20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        v41 = v40;
        v42 = sub_1000BA294(&qword_100BD4F10);
        sub_10003D2DC((unint64_t *)&qword_100BFFA30, &qword_100BD4F10);
        v43 = v58;
        v44 = v52;
        v45 = v41;
        v26 = v61;
        dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v42, v46, v52, v45);
        v47 = (void *)v50;
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v33, v39, v43, v35);
        _Block_release(v35);

        (*(void (**)(char *, uint64_t))(v59 + 8))(v43, v44);
        v48 = v39;
        v22 = (uint64_t)v38;
        (*(void (**)(char *, uint64_t))(v56 + 8))(v48, v57);
        ((void (*)(char *, uint64_t))v62)(v33, v60);
        swift_release(v51);
        swift_release(v27);
        v27 = v38;
        goto LABEL_12;
      }
      swift_retain_n(v26, 2);
      swift_retain_n(a6, 2);
      swift_retain();
      sub_10019B308(v28, a6, (uint64_t)v65, v22, v30, v26);
    }
    swift_release(v29);
LABEL_12:
    swift_release(v27);
    sub_100021A14((uint64_t)v65, &qword_100BC43C0);
    swift_release(v26);
    swift_release(v22);
  }
}

void sub_10018F398(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, void (*a5)(uint64_t, __n128), uint64_t a6, void (*a7)(uint64_t), uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t Strong;
  uint64_t v22;
  double v23;
  char v24;
  char v25;
  uint64_t v26;
  _QWORD *v27;
  void (*v28)(uint64_t, __n128);
  uint64_t v29;
  void (*v30)(uint64_t);
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void *v35;
  __n128 v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t);
  _QWORD aBlock[6];
  _BYTE v60[72];
  _BYTE __src[72];
  char v62[8];

  v58 = a7;
  v14 = type metadata accessor for DispatchWorkItemFlags(0);
  v55 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v54 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = type metadata accessor for DispatchQoS(0);
  v52 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin(v53);
  v51 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = type metadata accessor for DispatchTime(0);
  v49 = *(_QWORD *)(v56 - 8);
  __chkstk_darwin(v56);
  v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v50 = (char *)&v45 - v20;
  a2 += 16;
  swift_beginAccess(a2, v62, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v22 = Strong;
    v48 = v14;
    v23 = COERCE_DOUBLE(a3(a1));
    v25 = v24;
    v57 = a8;
    sub_100037768(a1, (uint64_t)__src, &qword_100BC43C0);
    v26 = v57;
    sub_100037768((uint64_t)__src, (uint64_t)v60, &qword_100BC43C0);
    v27 = (_QWORD *)swift_allocObject(&unk_100B5F748, 128, 7);
    v28 = a5;
    v27[2] = a5;
    v27[3] = a6;
    v29 = a6;
    memcpy(v27 + 4, __src, 0x48uLL);
    v30 = v58;
    v27[13] = v22;
    v27[14] = v30;
    v27[15] = v26;
    if ((v25 & 1) != 0)
    {
      if (v23 == 0.0)
      {
        swift_retain_n(v26, 2);
        swift_retain();
        swift_retain();
        goto LABEL_12;
      }
      v31 = qword_100BC2820;
      swift_retain_n(v26, 2);
      swift_retain_n(v29, 2);
      swift_retain();
      if (v31 != -1)
        swift_once(&qword_100BC2820, sub_10091A684);
      sub_100181710(v22, (uint64_t)sub_10019E6CC, (uint64_t)v27);
    }
    else
    {
      if (v23 != 0.0)
      {
        sub_10009FFE0();
        swift_retain_n(v26, 2);
        v47 = a6;
        swift_retain_n(a6, 2);
        v32 = swift_retain_n(v22, 2);
        v46 = static OS_dispatch_queue.main.getter(v32);
        static DispatchTime.now()(v46);
        v33 = v50;
        + infix(_:_:)(v18);
        v58 = *(void (**)(uint64_t))(v49 + 8);
        ((void (*)(char *, uint64_t))v58)(v18, v56);
        v34 = swift_allocObject(&unk_100B5F770, 32, 7);
        *(_QWORD *)(v34 + 16) = sub_10019E6CC;
        *(_QWORD *)(v34 + 24) = v27;
        aBlock[4] = sub_10019EACC;
        aBlock[5] = v34;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100121D84;
        aBlock[3] = &unk_100B5F788;
        v35 = _Block_copy(aBlock);
        swift_retain();
        v36 = swift_release();
        v37 = v51;
        static DispatchQoS.unspecified.getter(v36);
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_10000F1C8((unint64_t *)&qword_100BFFA20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        v39 = v38;
        v40 = sub_1000BA294(&qword_100BD4F10);
        sub_10003D2DC((unint64_t *)&qword_100BFFA30, &qword_100BD4F10);
        v41 = v54;
        v42 = v48;
        dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v40, v43, v48, v39);
        v44 = (void *)v46;
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v33, v37, v41, v35);
        _Block_release(v35);

        (*(void (**)(char *, uint64_t))(v55 + 8))(v41, v42);
        (*(void (**)(char *, uint64_t))(v52 + 8))(v37, v53);
        ((void (*)(char *, uint64_t))v58)(v33, v56);
        swift_release();
        swift_release();
        goto LABEL_12;
      }
      swift_retain_n(v26, 2);
      swift_retain_n(a6, 2);
      swift_retain();
      sub_10019BB70(v28, a6, (uint64_t)v60, v22, v30, v26);
    }
    swift_release();
LABEL_12:
    swift_release();
    sub_100021A14((uint64_t)v60, &qword_100BC43C0);
    swift_release();
    swift_release();
  }
}

void sub_10018F924(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, void (*a5)(uint64_t), uint64_t a6, void (*a7)(uint64_t *__return_ptr, uint64_t), uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t Strong;
  uint64_t v22;
  double v23;
  char v24;
  char v25;
  uint64_t v26;
  _QWORD *v27;
  void (*v28)(uint64_t);
  uint64_t v29;
  void (*v30)(uint64_t *__return_ptr, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  __n128 v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t *__return_ptr, uint64_t);
  _QWORD aBlock[5];
  uint64_t v64;
  _BYTE v65[72];
  _BYTE __src[72];
  char v67[8];

  v62 = a7;
  v14 = type metadata accessor for DispatchWorkItemFlags(0);
  v59 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v58 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for DispatchQoS(0);
  v56 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v55 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for DispatchTime(0);
  v53 = *(_QWORD *)(v60 - 8);
  v17 = __chkstk_darwin(v60);
  v19 = (uint64_t *)((char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v17);
  v54 = (char *)&v49 - v20;
  a2 += 16;
  swift_beginAccess(a2, v67, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v22 = Strong;
    v52 = v14;
    v23 = COERCE_DOUBLE(a3(a1));
    v25 = v24;
    v61 = a8;
    sub_100037768(a1, (uint64_t)__src, &qword_100BC43C0);
    v26 = v61;
    sub_100037768((uint64_t)__src, (uint64_t)v65, &qword_100BC43C0);
    v27 = (_QWORD *)swift_allocObject(&unk_100B5F8B0, 128, 7);
    v28 = a5;
    v27[2] = a5;
    v27[3] = a6;
    v29 = a6;
    memcpy(v27 + 4, __src, 0x48uLL);
    v30 = v62;
    v27[13] = v22;
    v27[14] = v30;
    v27[15] = v26;
    if ((v25 & 1) != 0)
    {
      if (v23 == 0.0)
      {
        swift_retain_n(v26, 2);
        swift_retain();
        swift_retain();
        goto LABEL_12;
      }
      v31 = qword_100BC2820;
      swift_retain_n(v26, 2);
      swift_retain_n(v29, 2);
      swift_retain();
      if (v31 != -1)
        swift_once(&qword_100BC2820, sub_10091A684);
      sub_100181AA8(v22, (uint64_t)sub_10019E818, (uint64_t)v27);
    }
    else
    {
      if (v23 != 0.0)
      {
        sub_10009FFE0();
        swift_retain_n(v26, 2);
        v51 = a6;
        swift_retain_n(a6, 2);
        v32 = swift_retain_n(v22, 2);
        v50 = static OS_dispatch_queue.main.getter(v32);
        static DispatchTime.now()(v50);
        v33 = (uint64_t *)v54;
        + infix(_:_:)(v19);
        v62 = *(void (**)(uint64_t *__return_ptr, uint64_t))(v53 + 8);
        v62(v19, v60);
        v34 = swift_allocObject(&unk_100B5F8D8, 32, 7);
        *(_QWORD *)(v34 + 16) = sub_10019E818;
        *(_QWORD *)(v34 + 24) = v27;
        aBlock[4] = sub_10019EACC;
        v64 = v34;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100121D84;
        aBlock[3] = &unk_100B5F8F0;
        v35 = _Block_copy(aBlock);
        v36 = v64;
        swift_retain();
        v37 = swift_release(v36);
        v38 = (_QWORD *)v22;
        v39 = v55;
        static DispatchQoS.unspecified.getter(v37);
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_10000F1C8((unint64_t *)&qword_100BFFA20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        v41 = v40;
        v42 = sub_1000BA294(&qword_100BD4F10);
        sub_10003D2DC((unint64_t *)&qword_100BFFA30, &qword_100BD4F10);
        v43 = v58;
        v44 = v52;
        v45 = v41;
        v26 = v61;
        dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v42, v46, v52, v45);
        v47 = (void *)v50;
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v33, v39, v43, v35);
        _Block_release(v35);

        (*(void (**)(char *, uint64_t))(v59 + 8))(v43, v44);
        v48 = v39;
        v22 = (uint64_t)v38;
        (*(void (**)(char *, uint64_t))(v56 + 8))(v48, v57);
        v62(v33, v60);
        swift_release(v51);
        swift_release(v27);
        v27 = v38;
        goto LABEL_12;
      }
      swift_retain_n(v26, 2);
      swift_retain_n(a6, 2);
      swift_retain();
      sub_10019C3D4(v28, a6, (uint64_t)v65, v22, v30, v26);
    }
    swift_release(v29);
LABEL_12:
    swift_release(v27);
    sub_100021A14((uint64_t)v65, &qword_100BC43C0);
    swift_release(v26);
    swift_release(v22);
  }
}

double sub_10018FEB0(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *, __n128))
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  double result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  void (*v46)(uint64_t *, __n128);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49[3];
  uint64_t v50;

  v46 = a5;
  v47 = sub_1000BA294(&qword_100BC43B8);
  __chkstk_darwin(v47);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1000BA294(&qword_100BC43C8);
  __chkstk_darwin(v10);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for AirQualityDetailViewModel(0);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v18 = (char *)&v45 - v17;
  a1(v49, a3 + 64);
  v20 = v49[0];
  if (v49[0])
  {
    v45 = (uint64_t *)v9;
    v50 = v49[0];
    swift_retain();
    v21 = a4;
    v22 = sub_100182508();
    if (v22)
    {
      v23 = v22;
      if (v20 == v22)
      {
        swift_release_n(v20, 3);
        return result;
      }
      type metadata accessor for MainState._Storage(0);
      swift_retain_n(v20, 2);
      sub_10009CC70();
      v25 = v24;
      swift_release_n(v20, 3);
      v26 = swift_release(v23);
      if ((v25 & 1) != 0)
      {
        *(_QWORD *)&result = swift_release(v20).n128_u64[0];
        return result;
      }
    }
    else
    {
      v26 = swift_release(v20);
    }
    v46(&v50, v26);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13) == 1)
    {
      sub_100021A14((uint64_t)v12, &qword_100BC43C8);
      v27 = a4;
LABEL_11:
      v30 = v45;
      sub_1000BA294(&qword_100BC43D0);
      v31 = v50;
      *v30 = v50;
      swift_retain();
      sub_1000A2930();
      swift_release(v31);
      swift_storeEnumTagMultiPayload(v30, v47, 1);
      v32 = v27 + *(_QWORD *)(*(_QWORD *)v27 + 120);
      swift_beginAccess(v32, v49, 33, 0);
      sub_1000A3908((uint64_t)v30, v32, &qword_100BC43B8);
      swift_endAccess(v49);
      return result;
    }
    v28 = (uint64_t)v18;
    sub_10007802C((uint64_t)v12, (uint64_t)v18, type metadata accessor for AirQualityDetailViewModel);
    v27 = v21;
    sub_1000A2930();
    v29 = sub_10058F814((uint64_t)v18, (uint64_t)v16);
    sub_1000215BC((uint64_t)v16, type metadata accessor for AirQualityDetailViewModel);
    if ((v29 & 1) != 0)
    {
      sub_1000215BC((uint64_t)v18, type metadata accessor for AirQualityDetailViewModel);
      goto LABEL_11;
    }
    v33 = v45;
    if (qword_100BC2490 != -1)
      swift_once(&qword_100BC2490, sub_100159750);
    v34 = type metadata accessor for Logger(0);
    v35 = sub_1000AECD4(v34, (uint64_t)qword_100CAF198);
    v36 = Logger.logObject.getter(v35);
    v37 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = swift_slowAlloc(22, -1);
      v39 = swift_slowAlloc(64, -1);
      v49[0] = v39;
      *(_DWORD *)v38 = 136446466;
      v48 = sub_1000CE1C8(0x746174536E69614DLL, 0xE900000000000065, v49);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, v49);
      *(_WORD *)(v38 + 12) = 2082;
      v48 = sub_1000CE1C8(0xD000000000000019, 0x80000001009F1240, v49);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, v49);
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "Selector observed model difference for %{public}s, %{public}s; views will update",
        (uint8_t *)v38,
        0x16u);
      swift_arrayDestroy(v39, 2);
      swift_slowDealloc(v39, -1, -1);
      swift_slowDealloc(v38, -1, -1);
    }

    v40 = (uint64_t)v33 + *(int *)(sub_1000BA294(&qword_100BC43D0) + 48);
    v41 = v50;
    *v33 = v50;
    sub_100080C0C(v28, v40, type metadata accessor for AirQualityDetailViewModel);
    swift_storeEnumTagMultiPayload(v33, v47, 1);
    v42 = v27 + *(_QWORD *)(*(_QWORD *)v27 + 120);
    swift_beginAccess(v42, v49, 33, 0);
    swift_retain();
    sub_1000A3908((uint64_t)v33, v42, &qword_100BC43B8);
    swift_endAccess(v49);
    v43 = sub_1000BA294(&qword_100BC43A8);
    sub_10003D2DC((unint64_t *)&qword_100BC43D8, &qword_100BC43A8);
    v44 = ObservableObject<>.objectWillChange.getter(v43);
    ObservableObjectPublisher.send()();
    swift_release(v44);
    sub_1000215BC(v28, type metadata accessor for AirQualityDetailViewModel);
    *(_QWORD *)&result = swift_release(v41).n128_u64[0];
  }
  return result;
}

void sub_10019045C(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  void (*v66)(uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72[3];

  v65 = a6;
  v66 = a5;
  v69 = a4;
  v70 = a2;
  v67 = sub_1000BA294(&qword_100BC4400);
  __chkstk_darwin(v67);
  v68 = (uint64_t)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000BA294(&qword_100BC4408);
  __chkstk_darwin(v9);
  v64 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for MoonDetailViewModel(0);
  v11 = __chkstk_darwin(v63);
  v60 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v61 = (uint64_t)&v59 - v13;
  v14 = sub_1000BA294(&qword_100BC4410);
  __chkstk_darwin(v14);
  v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1000BA294(&qword_100BC4418);
  v18 = __chkstk_darwin(v17);
  v62 = (uint64_t)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v59 - v21;
  v23 = __chkstk_darwin(v20);
  v25 = (char *)&v59 - v24;
  __chkstk_darwin(v23);
  v27 = (char *)&v59 - v26;
  v28 = type metadata accessor for MoonDetailInput(0);
  v29 = __chkstk_darwin(v28);
  v31 = (char *)&v59 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v33 = (char *)&v59 - v32;
  a1(a3 + 64);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28) == 1)
  {
    sub_100021A14((uint64_t)v27, &qword_100BC4418);
    return;
  }
  sub_10007802C((uint64_t)v27, (uint64_t)v33, type metadata accessor for MoonDetailInput);
  sub_100080C0C((uint64_t)v33, (uint64_t)v25, type metadata accessor for MoonDetailInput);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v28);
  sub_100182030();
  v34 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_100037768((uint64_t)v25, (uint64_t)v16, &qword_100BC4418);
  sub_100037768((uint64_t)v22, v34, &qword_100BC4418);
  v35 = (uint64_t)v33;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v28) != 1)
  {
    v36 = v62;
    sub_100037768((uint64_t)v16, v62, &qword_100BC4418);
    if (_s7Weather24LocationCompositionStateOwet_0(v34, 1, v28) != 1)
    {
      sub_10007802C(v34, (uint64_t)v31, type metadata accessor for MoonDetailInput);
      v44 = sub_1001D3488(v36, (uint64_t)v31);
      sub_1000215BC((uint64_t)v31, type metadata accessor for MoonDetailInput);
      sub_100021A14((uint64_t)v22, &qword_100BC4418);
      sub_100021A14((uint64_t)v25, &qword_100BC4418);
      sub_1000215BC(v36, type metadata accessor for MoonDetailInput);
      sub_100021A14((uint64_t)v16, &qword_100BC4418);
      if (v44)
        goto LABEL_15;
LABEL_9:
      v37 = (uint64_t)v64;
      v66(v35);
      if (_s7Weather24LocationCompositionStateOwet_0(v37, 1, v63) == 1)
      {
        sub_100021A14(v37, &qword_100BC4408);
        v38 = v69;
      }
      else
      {
        v39 = v61;
        sub_10007802C(v37, v61, type metadata accessor for MoonDetailViewModel);
        v40 = (uint64_t)v60;
        v38 = v69;
        sub_10017B048();
        v41 = sub_10047C1EC(v39, v40);
        sub_1000215BC(v40, type metadata accessor for MoonDetailViewModel);
        if ((v41 & 1) == 0)
        {
          if (qword_100BC2490 != -1)
            swift_once(&qword_100BC2490, sub_100159750);
          v46 = v35;
          v47 = type metadata accessor for Logger(0);
          v48 = sub_1000AECD4(v47, (uint64_t)qword_100CAF198);
          v49 = Logger.logObject.getter(v48);
          v50 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v49, v50))
          {
            v51 = swift_slowAlloc(22, -1);
            v52 = swift_slowAlloc(64, -1);
            v72[0] = v52;
            *(_DWORD *)v51 = 136446466;
            v71 = sub_1000CE1C8(0x617465446E6F6F4DLL, 0xEF7475706E496C69, v72);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, v72);
            *(_WORD *)(v51 + 12) = 2082;
            v71 = sub_1000CE1C8(0xD000000000000013, 0x80000001009F1330, v72);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, v72);
            _os_log_impl((void *)&_mh_execute_header, v49, v50, "Selector observed model difference for %{public}s, %{public}s; views will update",
              (uint8_t *)v51,
              0x16u);
            swift_arrayDestroy(v52, 2);
            swift_slowDealloc(v52, -1, -1);
            swift_slowDealloc(v51, -1, -1);
          }

          v53 = sub_1000BA294(&qword_100BC4420);
          v54 = v68;
          v55 = v68 + *(int *)(v53 + 48);
          sub_100080C0C(v46, v68, type metadata accessor for MoonDetailInput);
          sub_100080C0C(v39, v55, type metadata accessor for MoonDetailViewModel);
          swift_storeEnumTagMultiPayload(v54, v67, 1);
          v56 = v38 + *(_QWORD *)(*(_QWORD *)v38 + 120);
          swift_beginAccess(v56, v72, 33, 0);
          sub_1000A3908(v54, v56, &qword_100BC4400);
          swift_endAccess(v72);
          v57 = sub_1000BA294(&qword_100BC4428);
          sub_10003D2DC((unint64_t *)&qword_100BC4430, &qword_100BC4428);
          v58 = ObservableObject<>.objectWillChange.getter(v57);
          ObservableObjectPublisher.send()();
          swift_release(v58);
          sub_1000215BC(v39, type metadata accessor for MoonDetailViewModel);
          v45 = v46;
          goto LABEL_21;
        }
        sub_1000215BC(v39, type metadata accessor for MoonDetailViewModel);
      }
      sub_1000BA294(&qword_100BC4420);
      v42 = v68;
      sub_100080C0C(v35, v68, type metadata accessor for MoonDetailInput);
      sub_10017B048();
      sub_1000215BC(v35, type metadata accessor for MoonDetailInput);
      swift_storeEnumTagMultiPayload(v42, v67, 1);
      v43 = v38 + *(_QWORD *)(*(_QWORD *)v38 + 120);
      swift_beginAccess(v43, v72, 33, 0);
      sub_1000A3908(v42, v43, &qword_100BC4400);
      swift_endAccess(v72);
      return;
    }
    sub_100021A14((uint64_t)v22, &qword_100BC4418);
    sub_100021A14((uint64_t)v25, &qword_100BC4418);
    sub_1000215BC(v36, type metadata accessor for MoonDetailInput);
LABEL_8:
    sub_100021A14((uint64_t)v16, &qword_100BC4410);
    goto LABEL_9;
  }
  sub_100021A14((uint64_t)v22, &qword_100BC4418);
  sub_100021A14((uint64_t)v25, &qword_100BC4418);
  if (_s7Weather24LocationCompositionStateOwet_0(v34, 1, v28) != 1)
    goto LABEL_8;
  sub_100021A14((uint64_t)v16, &qword_100BC4418);
LABEL_15:
  v45 = v35;
LABEL_21:
  sub_1000215BC(v45, type metadata accessor for MoonDetailInput);
}

double sub_100190CC4(void (*a1)(__int128 *__return_ptr, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(__int128 *__return_ptr, uint64_t *, __n128))
{
  double result;
  void (*v8)(_QWORD *__return_ptr, __n128);
  void (*v9)(_QWORD *__return_ptr, __n128);
  void (*v10)(_QWORD *__return_ptr, __n128);
  char v11;
  char v12;
  __n128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  char v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  __int128 v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _BYTE v94[16];
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  uint64_t v101;
  uint64_t v102;
  _BYTE v103[8];
  uint64_t v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  uint64_t v109;
  uint64_t v110;
  _BYTE v111[8];
  uint64_t v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;

  a1(&v95, a3 + 64);
  v8 = (void (*)(_QWORD *__return_ptr, __n128))v95;
  if (!(_QWORD)v95)
    return result;
  v102 = v95;
  swift_retain();
  v9 = sub_100181E40();
  if (v9)
  {
    v10 = v9;
    if (v8 == v9)
    {
      swift_release_n(v8, 3);
      return result;
    }
    type metadata accessor for MainState._Storage(0);
    swift_retain_n(v8, 2);
    sub_10009CC70();
    v12 = v11;
    swift_release_n(v8, 3);
    v13 = swift_release(v10);
    if ((v12 & 1) != 0)
    {
      *(_QWORD *)&result = swift_release(v8).n128_u64[0];
      return result;
    }
  }
  else
  {
    v13 = swift_release(v8);
  }
  a5(&v95, &v102, v13);
  if ((~(_QWORD)v95 & 0xF000000000000006) == 0)
    goto LABEL_17;
  v14 = v96;
  v15 = v97;
  v16 = v98;
  v17 = v99;
  v91 = v100;
  v89 = *((_QWORD *)&v95 + 1);
  v90 = *((_QWORD *)&v100 + 1);
  v92 = v95;
  sub_10017AEA8((void (**)(uint64_t *__return_ptr, double))&v95);
  v18 = v99;
  if (v92 < 0)
  {
    v103[0] = v92 & 1;
    v104 = v89;
    v19 = *((_QWORD *)&v14 + 1);
    v105 = v14;
    v106 = v15;
    v107 = v16;
    v108 = v17;
    v109 = v91;
    v110 = v90;
    if ((v95 & 0x8000000000000000) != 0)
    {
      v28 = v17;
      v33 = v91;
      v27 = v90;
      v111[0] = v95 & 1;
      v112 = *((_QWORD *)&v95 + 1);
      v113 = v96;
      v114 = v97;
      v115 = v98;
      v116 = v99;
      v117 = v100;
      v76 = v95;
      v84 = v97;
      v87 = *((_QWORD *)&v98 + 1);
      v66 = v98;
      v73 = *((_QWORD *)&v97 + 1);
      v80 = v96;
      v35 = *((_QWORD *)&v100 + 1);
      v34 = v100;
      v64 = sub_100544468((uint64_t)v103, (uint64_t)v111);
      sub_10019D2B8(v76, *((uint64_t *)&v76 + 1), v80, *((uint64_t *)&v80 + 1), v84, v73, v66, v87, v18, *((uint64_t *)&v18 + 1), v34, v35);
      v29 = v15;
      v32 = v16;
      v31 = *((_QWORD *)&v14 + 1);
      v30 = v14;
      v26 = v89;
LABEL_15:
      if ((v64 & 1) != 0)
      {
        sub_10019D398(v92, v26, v30, v31, v29, *((uint64_t *)&v15 + 1), v32, *((uint64_t *)&v16 + 1), v28, *((uint64_t *)&v17 + 1), v33, v27);
LABEL_17:
        *(_QWORD *)&v95 = v8;
        swift_retain();
        sub_10017AEA8((void (**)(uint64_t *__return_ptr, double))&v95 + 1);
        swift_release(v8);
        swift_beginAccess(a4 + 16, &v93, 1, 0);
        v36 = v101;
        v37 = *(_QWORD *)(a4 + 16);
        v38 = *(_QWORD *)(a4 + 24);
        v39 = *(_QWORD *)(a4 + 32);
        v40 = *(_QWORD *)(a4 + 40);
        v41 = *(_QWORD *)(a4 + 48);
        v42 = *(_QWORD *)(a4 + 56);
        v43 = *(_QWORD *)(a4 + 64);
        v44 = *(_QWORD *)(a4 + 72);
        v45 = *(_OWORD *)(a4 + 80);
        v46 = *(_OWORD *)(a4 + 96);
        v47 = *(_QWORD *)(a4 + 112);
        v48 = *(_BYTE *)(a4 + 120);
        v49 = v96;
        *(_OWORD *)(a4 + 16) = v95;
        *(_OWORD *)(a4 + 32) = v49;
        v50 = v98;
        *(_OWORD *)(a4 + 48) = v97;
        *(_OWORD *)(a4 + 64) = v50;
        v51 = v100;
        *(_OWORD *)(a4 + 80) = v99;
        *(_OWORD *)(a4 + 96) = v51;
        *(_QWORD *)(a4 + 112) = v36;
        *(_BYTE *)(a4 + 120) = 1;
        return sub_10019D198(v37, v38, v39, v40, v41, v42, v43, v44, v45, *((uint64_t *)&v45 + 1), v46, *((uint64_t *)&v46 + 1), v47, v48);
      }
      goto LABEL_18;
    }
  }
  else
  {
    v19 = *((_QWORD *)&v14 + 1);
    if ((v95 & 0x8000000000000000) == 0)
    {
      v72 = *((_QWORD *)&v97 + 1);
      v75 = v95;
      v83 = v97;
      v86 = *((_QWORD *)&v98 + 1);
      v20 = v98;
      v79 = v96;
      v21 = *((_QWORD *)&v99 + 1);
      v70 = *((_QWORD *)&v99 + 1);
      v22 = v99;
      v23 = v100;
      v24 = v100;
      v67 = *((_QWORD *)&v100 + 1);
      type metadata accessor for ReportWeatherContentViewModel._Storage(0);
      sub_10019D314(v92, v89, v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17, *((uint64_t *)&v17 + 1), v91, v90);
      v63 = v22;
      v65 = v20;
      sub_10019D33C(v75, *((uint64_t *)&v75 + 1), v79, *((uint64_t *)&v79 + 1), v83, v72, v20, v86, v22, v21, v23, *((uint64_t *)&v24 + 1));
      sub_1001EE598();
      v64 = v25;
      sub_10019D2B8(v75, *((uint64_t *)&v75 + 1), v79, *((uint64_t *)&v79 + 1), v83, v72, v20, v86, v22, v70, v24, v67);
      v26 = v89;
      v27 = v90;
      v28 = v17;
      v29 = v15;
      v31 = *((_QWORD *)&v14 + 1);
      v30 = v14;
      sub_10019D398(v92, v89, v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17, *((uint64_t *)&v17 + 1), v91, v90);
      sub_10019D2B8(v75, *((uint64_t *)&v75 + 1), v79, *((uint64_t *)&v79 + 1), v83, v72, v65, v86, v63, v70, v24, v67);
      v32 = v16;
      v33 = v91;
      goto LABEL_15;
    }
  }
  sub_10019D2B8(v95, *((uint64_t *)&v95 + 1), v96, *((uint64_t *)&v96 + 1), v97, *((uint64_t *)&v97 + 1), v98, *((uint64_t *)&v98 + 1), v99, *((uint64_t *)&v99 + 1), v100, *((uint64_t *)&v100 + 1));
  v31 = v19;
  v26 = v89;
LABEL_18:
  if (qword_100BC2490 != -1)
    swift_once(&qword_100BC2490, sub_100159750);
  v52 = type metadata accessor for Logger(0);
  v53 = sub_1000AECD4(v52, (uint64_t)qword_100CAF198);
  v54 = Logger.logObject.getter(v53);
  v55 = static os_log_type_t.default.getter(v54);
  if (os_log_type_enabled(v54, v55))
  {
    v56 = swift_slowAlloc(22, -1);
    v57 = swift_slowAlloc(64, -1);
    *(_QWORD *)&v95 = v57;
    *(_DWORD *)v56 = 136446466;
    v93 = sub_1000CE1C8(0x746174536E69614DLL, 0xE900000000000065, (uint64_t *)&v95);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, v94);
    *(_WORD *)(v56 + 12) = 2082;
    v93 = sub_1000CE1C8(0xD000000000000016, 0x80000001009F1350, (uint64_t *)&v95);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, v94);
    _os_log_impl((void *)&_mh_execute_header, v54, v55, "Selector observed model difference for %{public}s, %{public}s; views will update",
      (uint8_t *)v56,
      0x16u);
    swift_arrayDestroy(v57, 2);
    swift_slowDealloc(v57, -1, -1);
    swift_slowDealloc(v56, -1, -1);
  }

  v58 = v102;
  swift_beginAccess(a4 + 16, &v95, 1, 0);
  v85 = *(_QWORD *)(a4 + 24);
  v88 = *(_QWORD *)(a4 + 16);
  v81 = *(_QWORD *)(a4 + 40);
  v82 = *(_QWORD *)(a4 + 32);
  v77 = *(_QWORD *)(a4 + 56);
  v78 = *(_QWORD *)(a4 + 48);
  v71 = *(_QWORD *)(a4 + 72);
  v74 = *(_QWORD *)(a4 + 64);
  v68 = *(_OWORD *)(a4 + 96);
  v69 = *(_OWORD *)(a4 + 80);
  v59 = *(_QWORD *)(a4 + 112);
  v60 = *(_BYTE *)(a4 + 120);
  *(_QWORD *)(a4 + 16) = v58;
  *(_QWORD *)(a4 + 24) = v92;
  *(_QWORD *)(a4 + 32) = v26;
  *(_QWORD *)(a4 + 40) = v14;
  *(_QWORD *)(a4 + 48) = v31;
  *(_OWORD *)(a4 + 56) = v15;
  *(_OWORD *)(a4 + 72) = v16;
  *(_OWORD *)(a4 + 88) = v17;
  *(_QWORD *)(a4 + 104) = v91;
  *(_QWORD *)(a4 + 112) = v90;
  *(_BYTE *)(a4 + 120) = 1;
  sub_10019D314(v92, v26, v14, v31, v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17, *((uint64_t *)&v17 + 1), v91, v90);
  swift_retain();
  sub_10019D198(v88, v85, v82, v81, v78, v77, v74, v71, v69, *((uint64_t *)&v69 + 1), v68, *((uint64_t *)&v68 + 1), v59, v60);
  v61 = sub_1000BA294(&qword_100BC4448);
  sub_10003D2DC(&qword_100BC4450, &qword_100BC4448);
  v62 = ObservableObject<>.objectWillChange.getter(v61);
  ObservableObjectPublisher.send()();
  swift_release(v62);
  sub_10019D398(v92, v89, v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17, *((uint64_t *)&v17 + 1), v91, v90);
  *(_QWORD *)&result = swift_release(v58).n128_u64[0];
  return result;
}

void sub_100191464(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  void (*v66)(uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72[3];

  v65 = a6;
  v66 = a5;
  v69 = a4;
  v70 = a2;
  v67 = sub_1000BA294(&qword_100BC4458);
  __chkstk_darwin(v67);
  v68 = (uint64_t)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000BA294(&qword_100BC4460);
  __chkstk_darwin(v9);
  v64 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for ConditionDetailViewModel(0);
  v11 = __chkstk_darwin(v63);
  v60 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v61 = (uint64_t)&v59 - v13;
  v14 = sub_1000BA294(&qword_100BC4468);
  __chkstk_darwin(v14);
  v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1000BA294(&qword_100BC4470);
  v18 = __chkstk_darwin(v17);
  v62 = (uint64_t)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v59 - v21;
  v23 = __chkstk_darwin(v20);
  v25 = (char *)&v59 - v24;
  __chkstk_darwin(v23);
  v27 = (char *)&v59 - v26;
  v28 = type metadata accessor for ConditionDetailInput(0);
  v29 = __chkstk_darwin(v28);
  v31 = (char *)&v59 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v33 = (char *)&v59 - v32;
  a1(a3 + 64);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28) == 1)
  {
    sub_100021A14((uint64_t)v27, &qword_100BC4470);
    return;
  }
  sub_10007802C((uint64_t)v27, (uint64_t)v33, type metadata accessor for ConditionDetailInput);
  sub_100080C0C((uint64_t)v33, (uint64_t)v25, type metadata accessor for ConditionDetailInput);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v28);
  sub_100182030();
  v34 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_100037768((uint64_t)v25, (uint64_t)v16, &qword_100BC4470);
  sub_100037768((uint64_t)v22, v34, &qword_100BC4470);
  v35 = (uint64_t)v33;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v28) != 1)
  {
    v36 = v62;
    sub_100037768((uint64_t)v16, v62, &qword_100BC4470);
    if (_s7Weather24LocationCompositionStateOwet_0(v34, 1, v28) != 1)
    {
      sub_10007802C(v34, (uint64_t)v31, type metadata accessor for ConditionDetailInput);
      v44 = sub_10027441C(v36, (uint64_t)v31);
      sub_1000215BC((uint64_t)v31, type metadata accessor for ConditionDetailInput);
      sub_100021A14((uint64_t)v22, &qword_100BC4470);
      sub_100021A14((uint64_t)v25, &qword_100BC4470);
      sub_1000215BC(v36, type metadata accessor for ConditionDetailInput);
      sub_100021A14((uint64_t)v16, &qword_100BC4470);
      if ((v44 & 1) != 0)
        goto LABEL_15;
LABEL_9:
      v37 = (uint64_t)v64;
      v66(v35);
      if (_s7Weather24LocationCompositionStateOwet_0(v37, 1, v63) == 1)
      {
        sub_100021A14(v37, &qword_100BC4460);
        v38 = v69;
      }
      else
      {
        v39 = v61;
        sub_10007802C(v37, v61, type metadata accessor for ConditionDetailViewModel);
        v40 = (uint64_t)v60;
        v38 = v69;
        sub_10017B048();
        v41 = sub_100866A8C(v39, v40);
        sub_1000215BC(v40, type metadata accessor for ConditionDetailViewModel);
        if ((v41 & 1) == 0)
        {
          if (qword_100BC2490 != -1)
            swift_once(&qword_100BC2490, sub_100159750);
          v46 = v35;
          v47 = type metadata accessor for Logger(0);
          v48 = sub_1000AECD4(v47, (uint64_t)qword_100CAF198);
          v49 = Logger.logObject.getter(v48);
          v50 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v49, v50))
          {
            v51 = swift_slowAlloc(22, -1);
            v52 = swift_slowAlloc(64, -1);
            v72[0] = v52;
            *(_DWORD *)v51 = 136446466;
            v71 = sub_1000CE1C8(0xD000000000000014, 0x80000001009F1370, v72);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, v72);
            *(_WORD *)(v51 + 12) = 2082;
            v71 = sub_1000CE1C8(0xD000000000000018, 0x80000001009F1390, v72);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, v72);
            _os_log_impl((void *)&_mh_execute_header, v49, v50, "Selector observed model difference for %{public}s, %{public}s; views will update",
              (uint8_t *)v51,
              0x16u);
            swift_arrayDestroy(v52, 2);
            swift_slowDealloc(v52, -1, -1);
            swift_slowDealloc(v51, -1, -1);
          }

          v53 = sub_1000BA294(&qword_100BC4478);
          v54 = v68;
          v55 = v68 + *(int *)(v53 + 48);
          sub_100080C0C(v46, v68, type metadata accessor for ConditionDetailInput);
          sub_100080C0C(v39, v55, type metadata accessor for ConditionDetailViewModel);
          swift_storeEnumTagMultiPayload(v54, v67, 1);
          v56 = v38 + *(_QWORD *)(*(_QWORD *)v38 + 120);
          swift_beginAccess(v56, v72, 33, 0);
          sub_1000A3908(v54, v56, &qword_100BC4458);
          swift_endAccess(v72);
          v57 = sub_1000BA294(&qword_100BC4480);
          sub_10003D2DC((unint64_t *)&qword_100BC4488, &qword_100BC4480);
          v58 = ObservableObject<>.objectWillChange.getter(v57);
          ObservableObjectPublisher.send()();
          swift_release(v58);
          sub_1000215BC(v39, type metadata accessor for ConditionDetailViewModel);
          v45 = v46;
          goto LABEL_21;
        }
        sub_1000215BC(v39, type metadata accessor for ConditionDetailViewModel);
      }
      sub_1000BA294(&qword_100BC4478);
      v42 = v68;
      sub_100080C0C(v35, v68, type metadata accessor for ConditionDetailInput);
      sub_10017B048();
      sub_1000215BC(v35, type metadata accessor for ConditionDetailInput);
      swift_storeEnumTagMultiPayload(v42, v67, 1);
      v43 = v38 + *(_QWORD *)(*(_QWORD *)v38 + 120);
      swift_beginAccess(v43, v72, 33, 0);
      sub_1000A3908(v42, v43, &qword_100BC4458);
      swift_endAccess(v72);
      return;
    }
    sub_100021A14((uint64_t)v22, &qword_100BC4470);
    sub_100021A14((uint64_t)v25, &qword_100BC4470);
    sub_1000215BC(v36, type metadata accessor for ConditionDetailInput);
LABEL_8:
    sub_100021A14((uint64_t)v16, &qword_100BC4468);
    goto LABEL_9;
  }
  sub_100021A14((uint64_t)v22, &qword_100BC4470);
  sub_100021A14((uint64_t)v25, &qword_100BC4470);
  if (_s7Weather24LocationCompositionStateOwet_0(v34, 1, v28) != 1)
    goto LABEL_8;
  sub_100021A14((uint64_t)v16, &qword_100BC4470);
LABEL_15:
  v45 = v35;
LABEL_21:
  sub_1000215BC(v45, type metadata accessor for ConditionDetailInput);
}

double sub_100191CC8(void (*a1)(__int128 *__return_ptr, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(__int128 *), void *a6)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  double result;
  void *v20;
  void *v21;
  void *v22;
  __int128 v23;
  uint64_t v24;
  int v25;
  void *v26;
  char v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  uint64_t v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  uint64_t v38;
  void *v39;
  void *v40;
  void *v41;
  __int128 v42;
  uint64_t v43;
  void *v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  __int128 v56;
  void *v57;
  void *v58;
  uint64_t v59;
  char v60;
  char v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  uint64_t v78;
  __int128 v79;
  void *v80;
  void *v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  id v85;
  id v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  void *v93;
  void *v94;
  void *v95;
  void *v96;
  int v97;
  id v98;
  id v99;
  id v100;
  id v101;
  id v102;
  id v103;
  void (*v104)(__int128 *);
  char *v105;
  uint64_t v106;
  char *v107;
  int v108;
  uint64_t v109;
  uint64_t v110;
  void *v111;
  __int128 v112;
  void *v113;
  void *v114;
  uint64_t v115;
  id v116;
  char *v117;
  id v118;
  uint64_t v119;
  __int128 v120;
  __int128 v121;
  void *v122;
  id v123;
  uint64_t v124;
  unsigned __int16 v125;
  unsigned __int128 v126;
  __int128 v127;
  void *v128;
  void *v129;
  uint64_t v130;
  __int16 v131;
  __int128 v132;
  __int128 v133;
  void *v134;
  void *v135;
  uint64_t v136;
  __int16 v137;
  __int128 v138;
  __int128 v139;
  _BYTE v140[26];
  _OWORD v141[2];
  _BYTE v142[26];

  v118 = a6;
  v10 = sub_1000BA294(&qword_100BC4490);
  __chkstk_darwin(v10);
  v12 = (char *)&v91 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1000BA294(&qword_100BC4498);
  __chkstk_darwin(v13);
  v117 = (char *)&v91 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = (id)type metadata accessor for UnitsConfigurationViewModel(0);
  v15 = __chkstk_darwin(v116);
  v110 = (uint64_t)&v91 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v18 = (char *)&v91 - v17;
  a1(&v120, a3 + 64);
  v20 = (void *)v120;
  if ((_QWORD)v120 != 1)
  {
    v104 = a5;
    v105 = v18;
    v106 = v10;
    v107 = v12;
    v21 = (void *)*((_QWORD *)&v120 + 1);
    v23 = v121;
    v22 = v122;
    v24 = v124;
    v25 = v125;
    v141[0] = v120;
    v141[1] = v121;
    *(_QWORD *)v142 = v122;
    *(_QWORD *)&v142[8] = v123;
    *(_QWORD *)&v142[16] = v124;
    *(_WORD *)&v142[24] = v125 & 0x1FF;
    v138 = v120;
    v139 = v121;
    *(_OWORD *)v140 = *(_OWORD *)v142;
    *(_OWORD *)&v140[10] = *(_OWORD *)&v142[10];
    v114 = v123;
    v101 = v123;
    v103 = v20;
    v111 = v21;
    v102 = v21;
    *(_QWORD *)&v112 = v23;
    v100 = (id)v23;
    *((_QWORD *)&v112 + 1) = *((_QWORD *)&v23 + 1);
    v99 = *((id *)&v23 + 1);
    v113 = v22;
    v98 = v22;
    v115 = v24;
    sub_10019D564(v24, v25);
    v109 = a4;
    sub_100182230((uint64_t)&v132);
    v26 = (void *)v132;
    v27 = v137;
    if ((_QWORD)v132 == 1)
    {
      *(_QWORD *)&v120 = v20;
      *((_QWORD *)&v120 + 1) = v111;
      v121 = v112;
      v122 = v113;
      v123 = v114;
      v124 = v115;
      v125 = v25;
      v126 = __PAIR128__(*((unint64_t *)&v132 + 1), 1);
      v127 = v133;
      v128 = v134;
      v129 = v135;
      v130 = v136;
      v131 = v137;
      sub_10019D578((uint64_t)&v120);
    }
    else
    {
      v120 = v132;
      v121 = v133;
      v122 = v134;
      v123 = v135;
      v124 = v136;
      v125 = v137 & 0x1FF;
      v95 = (void *)v133;
      v96 = (void *)*((_QWORD *)&v132 + 1);
      v29 = v111;
      v28 = (void *)v112;
      v93 = v134;
      v94 = (void *)*((_QWORD *)&v133 + 1);
      v31 = (void *)*((_QWORD *)&v112 + 1);
      v30 = v113;
      v91 = v136;
      v92 = v135;
      v32 = v115;
      v108 = v25;
      v33 = v114;
      sub_10019D694((uint64_t)v20, v111, (void *)v112, *((void **)&v112 + 1), v113, v114, v115, v108);
      sub_10019D694((uint64_t)v20, v29, v28, v31, v30, v33, v32, v108);
      v34 = v95;
      v35 = v96;
      v36 = v93;
      v37 = v94;
      v38 = v91;
      v39 = v92;
      sub_10019D694((uint64_t)v26, v96, v95, v94, v93, v92, v91, v27);
      v97 = sub_1007397E0((uint64_t)v141, (uint64_t)&v120);
      sub_10019D608(v26, v35, v34, v37, v36, v39, v38, v27);
      sub_10019D608(v26, v35, v34, v37, v36, v39, v38, v27);
      v40 = v111;
      v42 = v112;
      v41 = v113;
      v44 = v114;
      v43 = v115;
      v45 = v108;
      sub_10019D608(v20, v111, (void *)v112, *((void **)&v112 + 1), v113, v114, v115, v108);
      sub_10019D608(v20, v40, (void *)v42, *((void **)&v42 + 1), v41, v44, v43, v45);

      sub_10019D680(v43, v45);
      if ((v97 & 1) != 0)
        return sub_10019D608(v20, v111, (void *)v112, *((void **)&v112 + 1), v113, v114, v115, v45);
    }
    v46 = (uint64_t)v117;
    v104(&v138);
    if (_s7Weather24LocationCompositionStateOwet_0(v46, 1, (uint64_t)v116) == 1)
    {
      sub_100021A14(v46, &qword_100BC4498);
      v47 = (uint64_t)v107;
LABEL_10:
      v53 = v47 + *(int *)(sub_1000BA294(&qword_100BC44A0) + 48);
      v54 = v138;
      v55 = v47;
      v56 = v139;
      v58 = *(void **)v140;
      v57 = *(void **)&v140[8];
      v59 = *(_QWORD *)&v140[16];
      v60 = v140[25];
      *(_OWORD *)v47 = v138;
      *(_OWORD *)(v47 + 16) = v56;
      *(_QWORD *)(v47 + 32) = v58;
      *(_QWORD *)(v47 + 40) = v57;
      *(_QWORD *)(v47 + 48) = v59;
      v61 = v140[24];
      *(_BYTE *)(v47 + 56) = v140[24];
      *(_BYTE *)(v47 + 57) = v60;
      v118 = v57;
      v62 = (id)v54;
      v63 = *((id *)&v54 + 1);
      v64 = (id)v56;
      v65 = *((id *)&v56 + 1);
      v66 = v58;
      sub_10019D564(v59, v61);
      v67 = v53;
      v68 = v109;
      sub_10017B3CC(v67);

      sub_10019D680(v59, v61);
      swift_storeEnumTagMultiPayload(v55, v106, 1);
      v69 = v68 + *(_QWORD *)(*(_QWORD *)v68 + 120);
      swift_beginAccess(v69, &v132, 33, 0);
      sub_1000A3908(v55, v69, &qword_100BC4490);
      swift_endAccess(&v132);
      return result;
    }
    v48 = v46;
    v49 = (uint64_t)v105;
    sub_10007802C(v48, (uint64_t)v105, type metadata accessor for UnitsConfigurationViewModel);
    v50 = v110;
    sub_10017B3CC(v110);
    sub_100658DFC();
    v52 = v51;
    sub_1000215BC(v50, type metadata accessor for UnitsConfigurationViewModel);
    v47 = (uint64_t)v107;
    if ((v52 & 1) != 0)
    {
      sub_1000215BC(v49, type metadata accessor for UnitsConfigurationViewModel);
      goto LABEL_10;
    }
    if (qword_100BC2490 != -1)
      swift_once(&qword_100BC2490, sub_100159750);
    v70 = type metadata accessor for Logger(0);
    v71 = sub_1000AECD4(v70, (uint64_t)qword_100CAF198);
    v72 = Logger.logObject.getter(v71);
    v73 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v72, v73))
    {
      v74 = swift_slowAlloc(22, -1);
      v75 = swift_slowAlloc(64, -1);
      *(_QWORD *)&v132 = v75;
      *(_DWORD *)v74 = 136446466;
      v119 = sub_1000CE1C8(0xD000000000000017, 0x80000001009F13B0, (uint64_t *)&v132);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v119, &v120);
      *(_WORD *)(v74 + 12) = 2082;
      v119 = sub_1000CE1C8(0xD00000000000001BLL, 0x80000001009F13D0, (uint64_t *)&v132);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v119, &v120);
      _os_log_impl((void *)&_mh_execute_header, v72, v73, "Selector observed model difference for %{public}s, %{public}s; views will update",
        (uint8_t *)v74,
        0x16u);
      swift_arrayDestroy(v75, 2);
      swift_slowDealloc(v75, -1, -1);
      swift_slowDealloc(v74, -1, -1);
    }

    v76 = v47 + *(int *)(sub_1000BA294(&qword_100BC44A0) + 48);
    v77 = v138;
    v78 = v47;
    v79 = v139;
    v80 = *(void **)v140;
    v81 = *(void **)&v140[8];
    v82 = *(_QWORD *)&v140[16];
    v115 = *(_QWORD *)&v140[16];
    v83 = v140[25];
    *(_OWORD *)v47 = v138;
    *(_OWORD *)(v47 + 16) = v79;
    *(_QWORD *)(v47 + 32) = v80;
    *(_QWORD *)(v47 + 40) = v81;
    *(_QWORD *)(v47 + 48) = v82;
    LODWORD(v114) = v140[24];
    *(_BYTE *)(v47 + 56) = v140[24];
    *(_BYTE *)(v47 + 57) = v83;
    sub_100080C0C((uint64_t)v105, v76, type metadata accessor for UnitsConfigurationViewModel);
    swift_storeEnumTagMultiPayload(v47, v106, 1);
    v84 = v109 + *(_QWORD *)(*(_QWORD *)v109 + 120);
    swift_beginAccess(v84, &v132, 33, 0);
    v116 = v81;
    v118 = (id)v77;
    v117 = (char *)*((id *)&v77 + 1);
    v85 = (id)v79;
    v86 = *((id *)&v79 + 1);
    v87 = v80;
    v88 = v115;
    LOBYTE(v81) = (_BYTE)v114;
    sub_10019D564(v115, (char)v114);
    sub_1000A3908(v78, v84, &qword_100BC4490);
    swift_endAccess(&v132);
    v89 = sub_1000BA294(&qword_100BC44A8);
    sub_10003D2DC((unint64_t *)&qword_100BC44B0, &qword_100BC44A8);
    v90 = ObservableObject<>.objectWillChange.getter(v89);
    ObservableObjectPublisher.send()();
    swift_release(v90);
    sub_1000215BC((uint64_t)v105, type metadata accessor for UnitsConfigurationViewModel);

    return sub_10019D680(v88, (char)v81);
  }
  return result;
}

void sub_1001925B0(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(char *), uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  int *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  BOOL v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  BOOL v60;
  uint64_t v61;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  void (*v80)(char *);
  int *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85[3];

  v79 = a6;
  v80 = a5;
  v82 = a4;
  v83 = (char *)a2;
  v76 = sub_1000BA294(&qword_100BC44B8);
  __chkstk_darwin(v76);
  v77 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000BA294(&qword_100BC44C0);
  __chkstk_darwin(v9);
  v78 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = (int *)type metadata accessor for DayPickerViewModel(0);
  v11 = __chkstk_darwin(v81);
  v73 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v74 = (uint64_t)&v72 - v13;
  v14 = sub_1000BA294(&qword_100BC44C8);
  __chkstk_darwin(v14);
  v16 = (char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1000BA294(&qword_100BC44D0);
  v18 = __chkstk_darwin(v17);
  v75 = (uint64_t)&v72 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v72 - v21;
  v23 = __chkstk_darwin(v20);
  v25 = (char *)&v72 - v24;
  __chkstk_darwin(v23);
  v27 = (char *)&v72 - v26;
  v28 = type metadata accessor for DayPickerInput(0);
  v29 = __chkstk_darwin(v28);
  v31 = (char *)&v72 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v33 = (char *)&v72 - v32;
  a1(a3 + 64);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28) == 1)
  {
    sub_100021A14((uint64_t)v27, &qword_100BC44D0);
    return;
  }
  sub_10007802C((uint64_t)v27, (uint64_t)v33, type metadata accessor for DayPickerInput);
  sub_100080C0C((uint64_t)v33, (uint64_t)v25, type metadata accessor for DayPickerInput);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v28);
  v34 = v82;
  sub_100182030();
  v35 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_100037768((uint64_t)v25, (uint64_t)v16, &qword_100BC44D0);
  sub_100037768((uint64_t)v22, v35, &qword_100BC44D0);
  v36 = v34;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v28) != 1)
  {
    v37 = v75;
    sub_100037768((uint64_t)v16, v75, &qword_100BC44D0);
    if (_s7Weather24LocationCompositionStateOwet_0(v35, 1, v28) != 1)
    {
      sub_10007802C(v35, (uint64_t)v31, type metadata accessor for DayPickerInput);
      v38 = sub_100415158(v37, (uint64_t)v31);
      sub_1000215BC((uint64_t)v31, type metadata accessor for DayPickerInput);
      sub_100021A14((uint64_t)v22, &qword_100BC44D0);
      sub_100021A14((uint64_t)v25, &qword_100BC44D0);
      sub_1000215BC(v37, type metadata accessor for DayPickerInput);
      sub_100021A14((uint64_t)v16, &qword_100BC44D0);
      if ((v38 & 1) != 0)
        goto LABEL_10;
LABEL_11:
      v40 = (uint64_t)v78;
      v83 = v33;
      v80(v33);
      v41 = v81;
      if (_s7Weather24LocationCompositionStateOwet_0(v40, 1, (uint64_t)v81) == 1)
      {
        sub_100021A14(v40, &qword_100BC44C0);
        v43 = v76;
        v42 = (uint64_t)v77;
      }
      else
      {
        v46 = v74;
        sub_10007802C(v40, v74, type metadata accessor for DayPickerViewModel);
        v47 = (uint64_t)v73;
        sub_10017B048();
        sub_10094A130();
        v43 = v76;
        v42 = (uint64_t)v77;
        if ((v48 & 1) == 0 || (static Date.== infix(_:_:)(v46 + v41[5], v47 + v41[5]) & 1) == 0)
          goto LABEL_28;
        v49 = v41[6];
        v50 = *(_QWORD *)(v46 + v49);
        v51 = *(_QWORD *)(v46 + v49 + 8);
        v52 = (_QWORD *)(v47 + v49);
        v53 = v52[1];
        v54 = v50 == *v52 && v51 == v53;
        if (!v54 && (_stringCompareWithSmolCheck(_:_:expecting:)(v50, v51, *v52, v53, 0) & 1) == 0
          || ((v55 = v41[7],
               v56 = *(_QWORD *)(v46 + v55),
               v57 = *(_QWORD *)(v46 + v55 + 8),
               v58 = (_QWORD *)(v47 + v55),
               v59 = v58[1],
               v56 == *v58)
            ? (v60 = v57 == v59)
            : (v60 = 0),
              !v60 && (_stringCompareWithSmolCheck(_:_:expecting:)(v56, v57, *v58, v59, 0) & 1) == 0
           || (static TimeZone.== infix(_:_:)(v46 + v41[8], v47 + v41[8]) & 1) == 0))
        {
LABEL_28:
          sub_1000215BC(v47, type metadata accessor for DayPickerViewModel);
          if (qword_100BC2490 != -1)
            swift_once(&qword_100BC2490, sub_100159750);
          v61 = type metadata accessor for Logger(0);
          v62 = sub_1000AECD4(v61, (uint64_t)qword_100CAF198);
          v63 = Logger.logObject.getter(v62);
          v64 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v63, v64))
          {
            v65 = swift_slowAlloc(22, -1);
            v66 = swift_slowAlloc(64, -1);
            v85[0] = v66;
            *(_DWORD *)v65 = 136446466;
            v84 = sub_1000CE1C8(0x656B636950796144, 0xEE007475706E4972, v85);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v84, v85);
            *(_WORD *)(v65 + 12) = 2082;
            v84 = sub_1000CE1C8(0xD000000000000012, 0x80000001009F13F0, v85);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v84, v85);
            _os_log_impl((void *)&_mh_execute_header, v63, v64, "Selector observed model difference for %{public}s, %{public}s; views will update",
              (uint8_t *)v65,
              0x16u);
            swift_arrayDestroy(v66, 2);
            swift_slowDealloc(v66, -1, -1);
            swift_slowDealloc(v65, -1, -1);
          }

          v67 = v42 + *(int *)(sub_1000BA294(&qword_100BC44D8) + 48);
          v68 = (uint64_t)v83;
          sub_100080C0C((uint64_t)v83, v42, type metadata accessor for DayPickerInput);
          sub_100080C0C(v46, v67, type metadata accessor for DayPickerViewModel);
          swift_storeEnumTagMultiPayload(v42, v43, 1);
          v69 = v36 + *(_QWORD *)(*(_QWORD *)v36 + 120);
          swift_beginAccess(v69, v85, 33, 0);
          sub_1000A3908(v42, v69, &qword_100BC44B8);
          swift_endAccess(v85);
          v70 = sub_1000BA294(&qword_100BC44E0);
          sub_10003D2DC((unint64_t *)&qword_100BC44E8, &qword_100BC44E0);
          v71 = ObservableObject<>.objectWillChange.getter(v70);
          ObservableObjectPublisher.send()();
          swift_release(v71);
          sub_1000215BC(v46, type metadata accessor for DayPickerViewModel);
          v39 = v68;
          goto LABEL_33;
        }
        sub_1000215BC(v47, type metadata accessor for DayPickerViewModel);
        sub_1000215BC(v46, type metadata accessor for DayPickerViewModel);
      }
      sub_1000BA294(&qword_100BC44D8);
      v44 = (uint64_t)v83;
      sub_100080C0C((uint64_t)v83, v42, type metadata accessor for DayPickerInput);
      sub_10017B048();
      sub_1000215BC(v44, type metadata accessor for DayPickerInput);
      swift_storeEnumTagMultiPayload(v42, v43, 1);
      v45 = v36 + *(_QWORD *)(*(_QWORD *)v36 + 120);
      swift_beginAccess(v45, v85, 33, 0);
      sub_1000A3908(v42, v45, &qword_100BC44B8);
      swift_endAccess(v85);
      return;
    }
    sub_100021A14((uint64_t)v22, &qword_100BC44D0);
    sub_100021A14((uint64_t)v25, &qword_100BC44D0);
    sub_1000215BC(v37, type metadata accessor for DayPickerInput);
LABEL_8:
    sub_100021A14((uint64_t)v16, &qword_100BC44C8);
    goto LABEL_11;
  }
  sub_100021A14((uint64_t)v22, &qword_100BC44D0);
  sub_100021A14((uint64_t)v25, &qword_100BC44D0);
  if (_s7Weather24LocationCompositionStateOwet_0(v35, 1, v28) != 1)
    goto LABEL_8;
  sub_100021A14((uint64_t)v16, &qword_100BC44D0);
LABEL_10:
  v39 = (uint64_t)v33;
LABEL_33:
  sub_1000215BC(v39, type metadata accessor for DayPickerInput);
}

double sub_100192E9C(void (*a1)(uint64_t *__return_ptr, uint64_t, __n128), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *, __n128))
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  double result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  void (*v47)(uint64_t *, __n128);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50[3];
  uint64_t v51;

  v47 = a5;
  v48 = sub_1000BA294(&qword_100BC4438);
  __chkstk_darwin(v48);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1000BA294(&qword_100BC44F0);
  __chkstk_darwin(v10);
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for VFXTestViewModel(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v46 - v18;
  a1(v50, a3 + 64, v17);
  v21 = v50[0];
  if (v50[0])
  {
    v46 = (uint64_t *)v9;
    v51 = v50[0];
    swift_retain();
    v22 = a4;
    v23 = sub_100182508();
    if (v23)
    {
      v24 = v23;
      if (v21 == v23)
      {
        swift_release_n(v21, 3);
        return result;
      }
      type metadata accessor for MainState._Storage(0);
      swift_retain_n(v21, 2);
      sub_10009CC70();
      v26 = v25;
      swift_release_n(v21, 3);
      v27 = swift_release(v24);
      if ((v26 & 1) != 0)
      {
        *(_QWORD *)&result = swift_release(v21).n128_u64[0];
        return result;
      }
    }
    else
    {
      v27 = swift_release(v21);
    }
    v47(&v51, v27);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13) == 1)
    {
      sub_100021A14((uint64_t)v12, &qword_100BC44F0);
      v28 = a4;
LABEL_11:
      v31 = v46;
      sub_1000BA294(&qword_100BC4440);
      v32 = v51;
      *v31 = v51;
      swift_retain();
      sub_1000A2930();
      swift_release(v32);
      swift_storeEnumTagMultiPayload(v31, v48, 1);
      v33 = v28 + *(_QWORD *)(*(_QWORD *)v28 + 120);
      swift_beginAccess(v33, v50, 33, 0);
      sub_1000A3908((uint64_t)v31, v33, &qword_100BC4438);
      swift_endAccess(v50);
      return result;
    }
    v29 = (uint64_t)v19;
    sub_10007802C((uint64_t)v12, (uint64_t)v19, type metadata accessor for VFXTestViewModel);
    v28 = v22;
    sub_1000A2930();
    v30 = sub_10008805C((uint64_t)v19, (uint64_t)v15);
    sub_1000215BC((uint64_t)v15, type metadata accessor for VFXTestViewModel);
    if ((v30 & 1) != 0)
    {
      sub_1000215BC((uint64_t)v19, type metadata accessor for VFXTestViewModel);
      goto LABEL_11;
    }
    v34 = v46;
    if (qword_100BC2490 != -1)
      swift_once(&qword_100BC2490, sub_100159750);
    v35 = type metadata accessor for Logger(0);
    v36 = sub_1000AECD4(v35, (uint64_t)qword_100CAF198);
    v37 = Logger.logObject.getter(v36);
    v38 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = swift_slowAlloc(22, -1);
      v40 = swift_slowAlloc(64, -1);
      v50[0] = v40;
      *(_DWORD *)v39 = 136446466;
      v49 = sub_1000CE1C8(0x746174536E69614DLL, 0xE900000000000065, v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, v50);
      *(_WORD *)(v39 + 12) = 2082;
      v49 = sub_1000CE1C8(0xD000000000000010, 0x80000001009F1410, v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, v50);
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "Selector observed model difference for %{public}s, %{public}s; views will update",
        (uint8_t *)v39,
        0x16u);
      swift_arrayDestroy(v40, 2);
      swift_slowDealloc(v40, -1, -1);
      swift_slowDealloc(v39, -1, -1);
    }

    v41 = (uint64_t)v34 + *(int *)(sub_1000BA294(&qword_100BC4440) + 48);
    v42 = v51;
    *v34 = v51;
    sub_100080C0C(v29, v41, type metadata accessor for VFXTestViewModel);
    swift_storeEnumTagMultiPayload(v34, v48, 1);
    v43 = v28 + *(_QWORD *)(*(_QWORD *)v28 + 120);
    swift_beginAccess(v43, v50, 33, 0);
    swift_retain();
    sub_1000A3908((uint64_t)v34, v43, &qword_100BC4438);
    swift_endAccess(v50);
    v44 = sub_1000BA294(&qword_100BC44F8);
    sub_10003D2DC(&qword_100BC4500, &qword_100BC44F8);
    v45 = ObservableObject<>.objectWillChange.getter(v44);
    ObservableObjectPublisher.send()();
    swift_release(v45);
    sub_1000215BC(v29, type metadata accessor for VFXTestViewModel);
    *(_QWORD *)&result = swift_release(v42).n128_u64[0];
  }
  return result;
}

void sub_100193448(void (*a1)(uint64_t, __n128), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  void (*v67)(uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73[3];

  v66 = a6;
  v67 = a5;
  v70 = a4;
  v71 = a2;
  v68 = sub_1000BA294(&qword_100BC4508);
  __chkstk_darwin(v68);
  v69 = (uint64_t)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000BA294(&qword_100BC4510);
  __chkstk_darwin(v9);
  v65 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = type metadata accessor for WeatherMenuViewModel(0);
  __chkstk_darwin(v64);
  v61 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v62 = (uint64_t)&v60 - v13;
  v14 = sub_1000BA294(&qword_100BC4518);
  __chkstk_darwin(v14);
  v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1000BA294(&qword_100BC4520);
  __chkstk_darwin(v17);
  v63 = (uint64_t)&v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v60 - v20;
  __chkstk_darwin(v22);
  v24 = (char *)&v60 - v23;
  __chkstk_darwin(v25);
  v27 = (char *)&v60 - v26;
  v28 = type metadata accessor for WeatherMenuInput(0);
  __chkstk_darwin(v28);
  v30 = (char *)&v60 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __chkstk_darwin(v31);
  v34 = (char *)&v60 - v33;
  a1(a3 + 64, v32);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28) == 1)
  {
    sub_100021A14((uint64_t)v27, &qword_100BC4520);
    return;
  }
  sub_10007802C((uint64_t)v27, (uint64_t)v34, type metadata accessor for WeatherMenuInput);
  sub_100080C0C((uint64_t)v34, (uint64_t)v24, type metadata accessor for WeatherMenuInput);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v28);
  sub_100182030();
  v35 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_100037768((uint64_t)v24, (uint64_t)v16, &qword_100BC4520);
  sub_100037768((uint64_t)v21, v35, &qword_100BC4520);
  v36 = (uint64_t)v34;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v28) != 1)
  {
    v37 = v63;
    sub_100037768((uint64_t)v16, v63, &qword_100BC4520);
    if (_s7Weather24LocationCompositionStateOwet_0(v35, 1, v28) != 1)
    {
      sub_10007802C(v35, (uint64_t)v30, type metadata accessor for WeatherMenuInput);
      v45 = sub_10050BDDC(v37, (uint64_t)v30);
      sub_1000215BC((uint64_t)v30, type metadata accessor for WeatherMenuInput);
      sub_100021A14((uint64_t)v21, &qword_100BC4520);
      sub_100021A14((uint64_t)v24, &qword_100BC4520);
      sub_1000215BC(v37, type metadata accessor for WeatherMenuInput);
      sub_100021A14((uint64_t)v16, &qword_100BC4520);
      if ((v45 & 1) != 0)
        goto LABEL_15;
LABEL_9:
      v38 = (uint64_t)v65;
      v67(v36);
      if (_s7Weather24LocationCompositionStateOwet_0(v38, 1, v64) == 1)
      {
        sub_100021A14(v38, &qword_100BC4510);
        v39 = v70;
      }
      else
      {
        v40 = v62;
        sub_10007802C(v38, v62, type metadata accessor for WeatherMenuViewModel);
        v41 = (uint64_t)v61;
        v39 = v70;
        sub_10017B048();
        v42 = sub_10036DE88(v40, v41);
        sub_1000215BC(v41, type metadata accessor for WeatherMenuViewModel);
        if ((v42 & 1) == 0)
        {
          if (qword_100BC2490 != -1)
            swift_once(&qword_100BC2490, sub_100159750);
          v47 = v36;
          v48 = type metadata accessor for Logger(0);
          v49 = sub_1000AECD4(v48, (uint64_t)qword_100CAF198);
          v50 = Logger.logObject.getter(v49);
          v51 = static os_log_type_t.default.getter(v50);
          if (os_log_type_enabled(v50, v51))
          {
            v52 = swift_slowAlloc(22, -1);
            v53 = swift_slowAlloc(64, -1);
            v73[0] = v53;
            *(_DWORD *)v52 = 136446466;
            v72 = sub_1000CE1C8(0xD000000000000010, 0x80000001009F1430, v73);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, v73);
            *(_WORD *)(v52 + 12) = 2082;
            v72 = sub_1000CE1C8(0xD000000000000014, 0x80000001009F1450, v73);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, v73);
            _os_log_impl((void *)&_mh_execute_header, v50, v51, "Selector observed model difference for %{public}s, %{public}s; views will update",
              (uint8_t *)v52,
              0x16u);
            swift_arrayDestroy(v53, 2);
            swift_slowDealloc(v53, -1, -1);
            swift_slowDealloc(v52, -1, -1);
          }

          v54 = sub_1000BA294(&qword_100BC4528);
          v55 = v69;
          v56 = v69 + *(int *)(v54 + 48);
          sub_100080C0C(v47, v69, type metadata accessor for WeatherMenuInput);
          sub_100080C0C(v40, v56, type metadata accessor for WeatherMenuViewModel);
          swift_storeEnumTagMultiPayload(v55, v68, 1);
          v57 = v39 + *(_QWORD *)(*(_QWORD *)v39 + 120);
          swift_beginAccess(v57, v73, 33, 0);
          sub_1000A3908(v55, v57, &qword_100BC4508);
          swift_endAccess(v73);
          v58 = sub_1000BA294(&qword_100BC4530);
          sub_10003D2DC(&qword_100BC4538, &qword_100BC4530);
          v59 = ObservableObject<>.objectWillChange.getter(v58);
          ObservableObjectPublisher.send()();
          swift_release(v59);
          sub_1000215BC(v40, type metadata accessor for WeatherMenuViewModel);
          v46 = v47;
          goto LABEL_21;
        }
        sub_1000215BC(v40, type metadata accessor for WeatherMenuViewModel);
      }
      sub_1000BA294(&qword_100BC4528);
      v43 = v69;
      sub_100080C0C(v36, v69, type metadata accessor for WeatherMenuInput);
      sub_10017B048();
      sub_1000215BC(v36, type metadata accessor for WeatherMenuInput);
      swift_storeEnumTagMultiPayload(v43, v68, 1);
      v44 = v39 + *(_QWORD *)(*(_QWORD *)v39 + 120);
      swift_beginAccess(v44, v73, 33, 0);
      sub_1000A3908(v43, v44, &qword_100BC4508);
      swift_endAccess(v73);
      return;
    }
    sub_100021A14((uint64_t)v21, &qword_100BC4520);
    sub_100021A14((uint64_t)v24, &qword_100BC4520);
    sub_1000215BC(v37, type metadata accessor for WeatherMenuInput);
LABEL_8:
    sub_100021A14((uint64_t)v16, &qword_100BC4518);
    goto LABEL_9;
  }
  sub_100021A14((uint64_t)v21, &qword_100BC4520);
  sub_100021A14((uint64_t)v24, &qword_100BC4520);
  if (_s7Weather24LocationCompositionStateOwet_0(v35, 1, v28) != 1)
    goto LABEL_8;
  sub_100021A14((uint64_t)v16, &qword_100BC4520);
LABEL_15:
  v46 = v36;
LABEL_21:
  sub_1000215BC(v46, type metadata accessor for WeatherMenuInput);
}

void sub_100193CAC(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *__return_ptr))
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29[3];

  a1(v29, a3 + 64);
  if ((v29[0] & 1) == 0 && sub_100182684())
  {
    a5(v29);
    v7 = v29[0];
    if (LOBYTE(v29[0]) == 2 || (v8 = v29[0] & 1, ((((v7 & 1) != 0) ^ sub_10017B798()) & 1) == 0))
    {
      v22 = sub_10017B798() & 1;
      swift_beginAccess(a4 + 16, v29, 1, 0);
      v23 = *(_QWORD *)(a4 + 16);
      v24 = *(_QWORD *)(a4 + 24);
      v25 = *(_QWORD *)(a4 + 32);
      v26 = *(_QWORD *)(a4 + 40);
      *(_QWORD *)(a4 + 16) = v22;
      *(_QWORD *)(a4 + 24) = 0;
      *(_QWORD *)(a4 + 32) = 0;
      *(_QWORD *)(a4 + 40) = 0;
      v27 = *(_BYTE *)(a4 + 48);
      *(_BYTE *)(a4 + 48) = 1;
      sub_10019D9DC(v23, v24, v25, v26, v27);
    }
    else
    {
      if (qword_100BC2490 != -1)
        swift_once(&qword_100BC2490, sub_100159750);
      v9 = type metadata accessor for Logger(0);
      v10 = sub_1000AECD4(v9, (uint64_t)qword_100CAF198);
      v11 = Logger.logObject.getter(v10);
      v12 = static os_log_type_t.default.getter(v11);
      if (os_log_type_enabled(v11, v12))
      {
        v13 = swift_slowAlloc(22, -1);
        v14 = swift_slowAlloc(64, -1);
        v29[0] = v14;
        *(_DWORD *)v13 = 136446466;
        v28 = sub_1000CE1C8(0xD000000000000019, 0x80000001009F1470, v29);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, v29);
        *(_WORD *)(v13 + 12) = 2082;
        v28 = sub_1000CE1C8(0xD00000000000001DLL, 0x80000001009F1490, v29);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, v29);
        _os_log_impl((void *)&_mh_execute_header, v11, v12, "Selector observed model difference for %{public}s, %{public}s; views will update",
          (uint8_t *)v13,
          0x16u);
        swift_arrayDestroy(v14, 2);
        swift_slowDealloc(v14, -1, -1);
        swift_slowDealloc(v13, -1, -1);
      }

      swift_beginAccess(a4 + 16, v29, 1, 0);
      v15 = *(_QWORD *)(a4 + 16);
      v16 = *(_QWORD *)(a4 + 24);
      v17 = *(_QWORD *)(a4 + 32);
      v18 = *(_QWORD *)(a4 + 40);
      *(_QWORD *)(a4 + 16) = v8;
      *(_QWORD *)(a4 + 24) = 0;
      *(_QWORD *)(a4 + 32) = 0;
      *(_QWORD *)(a4 + 40) = 0;
      v19 = *(_BYTE *)(a4 + 48);
      *(_BYTE *)(a4 + 48) = 1;
      sub_10019D9DC(v15, v16, v17, v18, v19);
      v20 = sub_1000BA294(&qword_100BC4540);
      sub_10003D2DC(&qword_100BC4548, &qword_100BC4540);
      v21 = ObservableObject<>.objectWillChange.getter(v20);
      ObservableObjectPublisher.send()();
      swift_release(v21);
    }
  }
}

void sub_100193F94(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  void (*v66)(uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72[3];

  v65 = a6;
  v66 = a5;
  v69 = a4;
  v70 = a2;
  v67 = sub_1000BA294(&qword_100BC4550);
  __chkstk_darwin(v67);
  v68 = (uint64_t)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000BA294(&qword_100BC4558);
  __chkstk_darwin(v9);
  v64 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for LocationPreviewViewModel(0);
  v11 = __chkstk_darwin(v63);
  v60 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v61 = (uint64_t)&v59 - v13;
  v14 = sub_1000BA294(&qword_100BC4560);
  __chkstk_darwin(v14);
  v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1000BA294(&qword_100BC4568);
  v18 = __chkstk_darwin(v17);
  v62 = (uint64_t)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v59 - v21;
  v23 = __chkstk_darwin(v20);
  v25 = (char *)&v59 - v24;
  __chkstk_darwin(v23);
  v27 = (char *)&v59 - v26;
  v28 = type metadata accessor for LocationPreviewInput(0);
  v29 = __chkstk_darwin(v28);
  v31 = (char *)&v59 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v33 = (char *)&v59 - v32;
  a1(a3 + 64);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28) == 1)
  {
    sub_100021A14((uint64_t)v27, &qword_100BC4568);
    return;
  }
  sub_10007802C((uint64_t)v27, (uint64_t)v33, type metadata accessor for LocationPreviewInput);
  sub_100080C0C((uint64_t)v33, (uint64_t)v25, type metadata accessor for LocationPreviewInput);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v28);
  sub_100182030();
  v34 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_100037768((uint64_t)v25, (uint64_t)v16, &qword_100BC4568);
  sub_100037768((uint64_t)v22, v34, &qword_100BC4568);
  v35 = (uint64_t)v33;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v28) != 1)
  {
    v36 = v62;
    sub_100037768((uint64_t)v16, v62, &qword_100BC4568);
    if (_s7Weather24LocationCompositionStateOwet_0(v34, 1, v28) != 1)
    {
      sub_10007802C(v34, (uint64_t)v31, type metadata accessor for LocationPreviewInput);
      v44 = sub_1002D9B44(v36, (uint64_t)v31);
      sub_1000215BC((uint64_t)v31, type metadata accessor for LocationPreviewInput);
      sub_100021A14((uint64_t)v22, &qword_100BC4568);
      sub_100021A14((uint64_t)v25, &qword_100BC4568);
      sub_1000215BC(v36, type metadata accessor for LocationPreviewInput);
      sub_100021A14((uint64_t)v16, &qword_100BC4568);
      if ((v44 & 1) != 0)
        goto LABEL_15;
LABEL_9:
      v37 = (uint64_t)v64;
      v66(v35);
      if (_s7Weather24LocationCompositionStateOwet_0(v37, 1, v63) == 1)
      {
        sub_100021A14(v37, &qword_100BC4558);
        v38 = v69;
      }
      else
      {
        v39 = v61;
        sub_10007802C(v37, v61, type metadata accessor for LocationPreviewViewModel);
        v40 = (uint64_t)v60;
        v38 = v69;
        sub_10017B048();
        v41 = sub_10050AF58(v39, v40);
        sub_1000215BC(v40, type metadata accessor for LocationPreviewViewModel);
        if ((v41 & 1) == 0)
        {
          if (qword_100BC2490 != -1)
            swift_once(&qword_100BC2490, sub_100159750);
          v46 = v35;
          v47 = type metadata accessor for Logger(0);
          v48 = sub_1000AECD4(v47, (uint64_t)qword_100CAF198);
          v49 = Logger.logObject.getter(v48);
          v50 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v49, v50))
          {
            v51 = swift_slowAlloc(22, -1);
            v52 = swift_slowAlloc(64, -1);
            v72[0] = v52;
            *(_DWORD *)v51 = 136446466;
            v71 = sub_1000CE1C8(0xD000000000000014, 0x80000001009F14B0, v72);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, v72);
            *(_WORD *)(v51 + 12) = 2082;
            v71 = sub_1000CE1C8(0xD000000000000018, 0x80000001009F14D0, v72);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, v72);
            _os_log_impl((void *)&_mh_execute_header, v49, v50, "Selector observed model difference for %{public}s, %{public}s; views will update",
              (uint8_t *)v51,
              0x16u);
            swift_arrayDestroy(v52, 2);
            swift_slowDealloc(v52, -1, -1);
            swift_slowDealloc(v51, -1, -1);
          }

          v53 = sub_1000BA294(&qword_100BC4570);
          v54 = v68;
          v55 = v68 + *(int *)(v53 + 48);
          sub_100080C0C(v46, v68, type metadata accessor for LocationPreviewInput);
          sub_100080C0C(v39, v55, type metadata accessor for LocationPreviewViewModel);
          swift_storeEnumTagMultiPayload(v54, v67, 1);
          v56 = v38 + *(_QWORD *)(*(_QWORD *)v38 + 120);
          swift_beginAccess(v56, v72, 33, 0);
          sub_1000A3908(v54, v56, &qword_100BC4550);
          swift_endAccess(v72);
          v57 = sub_1000BA294(&qword_100BC4578);
          sub_10003D2DC(&qword_100BC4580, &qword_100BC4578);
          v58 = ObservableObject<>.objectWillChange.getter(v57);
          ObservableObjectPublisher.send()();
          swift_release(v58);
          sub_1000215BC(v39, type metadata accessor for LocationPreviewViewModel);
          v45 = v46;
          goto LABEL_21;
        }
        sub_1000215BC(v39, type metadata accessor for LocationPreviewViewModel);
      }
      sub_1000BA294(&qword_100BC4570);
      v42 = v68;
      sub_100080C0C(v35, v68, type metadata accessor for LocationPreviewInput);
      sub_10017B048();
      sub_1000215BC(v35, type metadata accessor for LocationPreviewInput);
      swift_storeEnumTagMultiPayload(v42, v67, 1);
      v43 = v38 + *(_QWORD *)(*(_QWORD *)v38 + 120);
      swift_beginAccess(v43, v72, 33, 0);
      sub_1000A3908(v42, v43, &qword_100BC4550);
      swift_endAccess(v72);
      return;
    }
    sub_100021A14((uint64_t)v22, &qword_100BC4568);
    sub_100021A14((uint64_t)v25, &qword_100BC4568);
    sub_1000215BC(v36, type metadata accessor for LocationPreviewInput);
LABEL_8:
    sub_100021A14((uint64_t)v16, &qword_100BC4560);
    goto LABEL_9;
  }
  sub_100021A14((uint64_t)v22, &qword_100BC4568);
  sub_100021A14((uint64_t)v25, &qword_100BC4568);
  if (_s7Weather24LocationCompositionStateOwet_0(v34, 1, v28) != 1)
    goto LABEL_8;
  sub_100021A14((uint64_t)v16, &qword_100BC4568);
LABEL_15:
  v45 = v35;
LABEL_21:
  sub_1000215BC(v45, type metadata accessor for LocationPreviewInput);
}

void sub_1001947F8(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  void (*v66)(uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72[3];

  v65 = a6;
  v66 = a5;
  v69 = a4;
  v70 = a2;
  v67 = sub_1000BA294(&qword_100BC4588);
  __chkstk_darwin(v67);
  v68 = (uint64_t)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000BA294(&qword_100BC4590);
  __chkstk_darwin(v9);
  v64 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for InteractiveMapViewModel(0);
  v11 = __chkstk_darwin(v63);
  v60 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v61 = (uint64_t)&v59 - v13;
  v14 = sub_1000BA294(&qword_100BC4598);
  __chkstk_darwin(v14);
  v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1000BA294(&qword_100BC45A0);
  v18 = __chkstk_darwin(v17);
  v62 = (uint64_t)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v59 - v21;
  v23 = __chkstk_darwin(v20);
  v25 = (char *)&v59 - v24;
  __chkstk_darwin(v23);
  v27 = (char *)&v59 - v26;
  v28 = type metadata accessor for InteractiveMapInput(0);
  v29 = __chkstk_darwin(v28);
  v31 = (char *)&v59 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v33 = (char *)&v59 - v32;
  a1(a3 + 64);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28) == 1)
  {
    sub_100021A14((uint64_t)v27, &qword_100BC45A0);
    return;
  }
  sub_10007802C((uint64_t)v27, (uint64_t)v33, type metadata accessor for InteractiveMapInput);
  sub_100080C0C((uint64_t)v33, (uint64_t)v25, type metadata accessor for InteractiveMapInput);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v28);
  sub_100182030();
  v34 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_100037768((uint64_t)v25, (uint64_t)v16, &qword_100BC45A0);
  sub_100037768((uint64_t)v22, v34, &qword_100BC45A0);
  v35 = (uint64_t)v33;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v28) != 1)
  {
    v36 = v62;
    sub_100037768((uint64_t)v16, v62, &qword_100BC45A0);
    if (_s7Weather24LocationCompositionStateOwet_0(v34, 1, v28) != 1)
    {
      sub_10007802C(v34, (uint64_t)v31, type metadata accessor for InteractiveMapInput);
      v44 = sub_1002813EC(v36, (uint64_t)v31);
      sub_1000215BC((uint64_t)v31, type metadata accessor for InteractiveMapInput);
      sub_100021A14((uint64_t)v22, &qword_100BC45A0);
      sub_100021A14((uint64_t)v25, &qword_100BC45A0);
      sub_1000215BC(v36, type metadata accessor for InteractiveMapInput);
      sub_100021A14((uint64_t)v16, &qword_100BC45A0);
      if (v44)
        goto LABEL_15;
LABEL_9:
      v37 = (uint64_t)v64;
      v66(v35);
      if (_s7Weather24LocationCompositionStateOwet_0(v37, 1, v63) == 1)
      {
        sub_100021A14(v37, &qword_100BC4590);
        v38 = v69;
      }
      else
      {
        v39 = v61;
        sub_10007802C(v37, v61, type metadata accessor for InteractiveMapViewModel);
        v40 = (uint64_t)v60;
        v38 = v69;
        sub_10017B048();
        v41 = sub_10038D0C4(v39, v40);
        sub_1000215BC(v40, type metadata accessor for InteractiveMapViewModel);
        if (!v41)
        {
          if (qword_100BC2490 != -1)
            swift_once(&qword_100BC2490, sub_100159750);
          v46 = v35;
          v47 = type metadata accessor for Logger(0);
          v48 = sub_1000AECD4(v47, (uint64_t)qword_100CAF198);
          v49 = Logger.logObject.getter(v48);
          v50 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v49, v50))
          {
            v51 = swift_slowAlloc(22, -1);
            v52 = swift_slowAlloc(64, -1);
            v72[0] = v52;
            *(_DWORD *)v51 = 136446466;
            v71 = sub_1000CE1C8(0xD000000000000013, 0x80000001009F14F0, v72);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, v72);
            *(_WORD *)(v51 + 12) = 2082;
            v71 = sub_1000CE1C8(0xD000000000000017, 0x80000001009F1510, v72);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, v72);
            _os_log_impl((void *)&_mh_execute_header, v49, v50, "Selector observed model difference for %{public}s, %{public}s; views will update",
              (uint8_t *)v51,
              0x16u);
            swift_arrayDestroy(v52, 2);
            swift_slowDealloc(v52, -1, -1);
            swift_slowDealloc(v51, -1, -1);
          }

          v53 = sub_1000BA294(&qword_100BC45A8);
          v54 = v68;
          v55 = v68 + *(int *)(v53 + 48);
          sub_100080C0C(v46, v68, type metadata accessor for InteractiveMapInput);
          sub_100080C0C(v39, v55, type metadata accessor for InteractiveMapViewModel);
          swift_storeEnumTagMultiPayload(v54, v67, 1);
          v56 = v38 + *(_QWORD *)(*(_QWORD *)v38 + 120);
          swift_beginAccess(v56, v72, 33, 0);
          sub_1000A3908(v54, v56, &qword_100BC4588);
          swift_endAccess(v72);
          v57 = sub_1000BA294(&qword_100BC45B0);
          sub_10003D2DC(&qword_100BC45B8, &qword_100BC45B0);
          v58 = ObservableObject<>.objectWillChange.getter(v57);
          ObservableObjectPublisher.send()();
          swift_release(v58);
          sub_1000215BC(v39, type metadata accessor for InteractiveMapViewModel);
          v45 = v46;
          goto LABEL_21;
        }
        sub_1000215BC(v39, type metadata accessor for InteractiveMapViewModel);
      }
      sub_1000BA294(&qword_100BC45A8);
      v42 = v68;
      sub_100080C0C(v35, v68, type metadata accessor for InteractiveMapInput);
      sub_10017B048();
      sub_1000215BC(v35, type metadata accessor for InteractiveMapInput);
      swift_storeEnumTagMultiPayload(v42, v67, 1);
      v43 = v38 + *(_QWORD *)(*(_QWORD *)v38 + 120);
      swift_beginAccess(v43, v72, 33, 0);
      sub_1000A3908(v42, v43, &qword_100BC4588);
      swift_endAccess(v72);
      return;
    }
    sub_100021A14((uint64_t)v22, &qword_100BC45A0);
    sub_100021A14((uint64_t)v25, &qword_100BC45A0);
    sub_1000215BC(v36, type metadata accessor for InteractiveMapInput);
LABEL_8:
    sub_100021A14((uint64_t)v16, &qword_100BC4598);
    goto LABEL_9;
  }
  sub_100021A14((uint64_t)v22, &qword_100BC45A0);
  sub_100021A14((uint64_t)v25, &qword_100BC45A0);
  if (_s7Weather24LocationCompositionStateOwet_0(v34, 1, v28) != 1)
    goto LABEL_8;
  sub_100021A14((uint64_t)v16, &qword_100BC45A0);
LABEL_15:
  v45 = v35;
LABEL_21:
  sub_1000215BC(v45, type metadata accessor for InteractiveMapInput);
}

void sub_10019505C(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t HourPrecipitationDetailInput;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t HourPrecipitationDetailViewModel;
  char *v65;
  uint64_t v66;
  void (*v67)(uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73[3];

  v66 = a6;
  v67 = a5;
  v70 = a4;
  v71 = a2;
  v68 = sub_1000BA294(&qword_100BC45C0);
  __chkstk_darwin(v68);
  v69 = (uint64_t)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000BA294(&qword_100BC45C8);
  __chkstk_darwin(v9);
  v65 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  HourPrecipitationDetailViewModel = type metadata accessor for NextHourPrecipitationDetailViewModel(0);
  v11 = __chkstk_darwin(HourPrecipitationDetailViewModel);
  v61 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v62 = (uint64_t)&v60 - v13;
  v14 = sub_1000BA294(&qword_100BC45D0);
  __chkstk_darwin(v14);
  v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1000BA294(&qword_100BC45D8);
  v18 = __chkstk_darwin(v17);
  v63 = (uint64_t)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v60 - v21;
  v23 = __chkstk_darwin(v20);
  v25 = (char *)&v60 - v24;
  __chkstk_darwin(v23);
  v27 = (char *)&v60 - v26;
  HourPrecipitationDetailInput = type metadata accessor for NextHourPrecipitationDetailInput(0);
  v29 = __chkstk_darwin(HourPrecipitationDetailInput);
  v31 = (char *)&v60 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v33 = (char *)&v60 - v32;
  a1(a3 + 64);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, HourPrecipitationDetailInput) == 1)
  {
    sub_100021A14((uint64_t)v27, &qword_100BC45D8);
    return;
  }
  sub_10007802C((uint64_t)v27, (uint64_t)v33, type metadata accessor for NextHourPrecipitationDetailInput);
  sub_100080C0C((uint64_t)v33, (uint64_t)v25, type metadata accessor for NextHourPrecipitationDetailInput);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, HourPrecipitationDetailInput);
  sub_100182030();
  v34 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_100037768((uint64_t)v25, (uint64_t)v16, &qword_100BC45D8);
  sub_100037768((uint64_t)v22, v34, &qword_100BC45D8);
  v35 = (uint64_t)v33;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, HourPrecipitationDetailInput) != 1)
  {
    v36 = v63;
    sub_100037768((uint64_t)v16, v63, &qword_100BC45D8);
    if (_s7Weather24LocationCompositionStateOwet_0(v34, 1, HourPrecipitationDetailInput) != 1)
    {
      sub_10007802C(v34, (uint64_t)v31, type metadata accessor for NextHourPrecipitationDetailInput);
      sub_10028D61C(v36, (uint64_t)v31);
      v45 = v44;
      sub_1000215BC((uint64_t)v31, type metadata accessor for NextHourPrecipitationDetailInput);
      sub_100021A14((uint64_t)v22, &qword_100BC45D8);
      sub_100021A14((uint64_t)v25, &qword_100BC45D8);
      sub_1000215BC(v36, type metadata accessor for NextHourPrecipitationDetailInput);
      sub_100021A14((uint64_t)v16, &qword_100BC45D8);
      if ((v45 & 1) != 0)
        goto LABEL_15;
LABEL_9:
      v37 = (uint64_t)v65;
      v67(v35);
      if (_s7Weather24LocationCompositionStateOwet_0(v37, 1, HourPrecipitationDetailViewModel) == 1)
      {
        sub_100021A14(v37, &qword_100BC45C8);
        v38 = v70;
      }
      else
      {
        v39 = v62;
        sub_10007802C(v37, v62, type metadata accessor for NextHourPrecipitationDetailViewModel);
        v40 = (uint64_t)v61;
        v38 = v70;
        sub_10017B048();
        v41 = sub_1002AC918(v39, v40);
        sub_1000215BC(v40, type metadata accessor for NextHourPrecipitationDetailViewModel);
        if (!v41)
        {
          if (qword_100BC2490 != -1)
            swift_once(&qword_100BC2490, sub_100159750);
          v47 = v35;
          v48 = type metadata accessor for Logger(0);
          v49 = sub_1000AECD4(v48, (uint64_t)qword_100CAF198);
          v50 = Logger.logObject.getter(v49);
          v51 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v50, v51))
          {
            v52 = swift_slowAlloc(22, -1);
            v53 = swift_slowAlloc(64, -1);
            v73[0] = v53;
            *(_DWORD *)v52 = 136446466;
            v72 = sub_1000CE1C8(0xD000000000000020, 0x80000001009F1530, v73);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, v73);
            *(_WORD *)(v52 + 12) = 2082;
            v72 = sub_1000CE1C8(0xD000000000000024, 0x80000001009F1560, v73);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, v73);
            _os_log_impl((void *)&_mh_execute_header, v50, v51, "Selector observed model difference for %{public}s, %{public}s; views will update",
              (uint8_t *)v52,
              0x16u);
            swift_arrayDestroy(v53, 2);
            swift_slowDealloc(v53, -1, -1);
            swift_slowDealloc(v52, -1, -1);
          }

          v54 = sub_1000BA294(&qword_100BC45E0);
          v55 = v69;
          v56 = v69 + *(int *)(v54 + 48);
          sub_100080C0C(v47, v69, type metadata accessor for NextHourPrecipitationDetailInput);
          sub_100080C0C(v39, v56, type metadata accessor for NextHourPrecipitationDetailViewModel);
          swift_storeEnumTagMultiPayload(v55, v68, 1);
          v57 = v38 + *(_QWORD *)(*(_QWORD *)v38 + 120);
          swift_beginAccess(v57, v73, 33, 0);
          sub_1000A3908(v55, v57, &qword_100BC45C0);
          swift_endAccess(v73);
          v58 = sub_1000BA294(&qword_100BC45E8);
          sub_10003D2DC((unint64_t *)&qword_100BC45F0, &qword_100BC45E8);
          v59 = ObservableObject<>.objectWillChange.getter(v58);
          ObservableObjectPublisher.send()();
          swift_release(v59);
          sub_1000215BC(v39, type metadata accessor for NextHourPrecipitationDetailViewModel);
          v46 = v47;
          goto LABEL_21;
        }
        sub_1000215BC(v39, type metadata accessor for NextHourPrecipitationDetailViewModel);
      }
      sub_1000BA294(&qword_100BC45E0);
      v42 = v69;
      sub_100080C0C(v35, v69, type metadata accessor for NextHourPrecipitationDetailInput);
      sub_10017B048();
      sub_1000215BC(v35, type metadata accessor for NextHourPrecipitationDetailInput);
      swift_storeEnumTagMultiPayload(v42, v68, 1);
      v43 = v38 + *(_QWORD *)(*(_QWORD *)v38 + 120);
      swift_beginAccess(v43, v73, 33, 0);
      sub_1000A3908(v42, v43, &qword_100BC45C0);
      swift_endAccess(v73);
      return;
    }
    sub_100021A14((uint64_t)v22, &qword_100BC45D8);
    sub_100021A14((uint64_t)v25, &qword_100BC45D8);
    sub_1000215BC(v36, type metadata accessor for NextHourPrecipitationDetailInput);
LABEL_8:
    sub_100021A14((uint64_t)v16, &qword_100BC45D0);
    goto LABEL_9;
  }
  sub_100021A14((uint64_t)v22, &qword_100BC45D8);
  sub_100021A14((uint64_t)v25, &qword_100BC45D8);
  if (_s7Weather24LocationCompositionStateOwet_0(v34, 1, HourPrecipitationDetailInput) != 1)
    goto LABEL_8;
  sub_100021A14((uint64_t)v16, &qword_100BC45D8);
LABEL_15:
  v46 = v35;
LABEL_21:
  sub_1000215BC(v46, type metadata accessor for NextHourPrecipitationDetailInput);
}

void sub_1001958C0(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  unsigned __int8 *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  unsigned __int8 *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  void (*v66)(uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72[3];

  v65 = a6;
  v66 = a5;
  v69 = a4;
  v70 = a2;
  v67 = sub_1000BA294(&qword_100BC4628);
  __chkstk_darwin(v67);
  v68 = (uint64_t)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000BA294(&qword_100BC4630);
  __chkstk_darwin(v9);
  v64 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for LocationViewModel(0);
  v11 = __chkstk_darwin(v63);
  v60 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v61 = (uint64_t)&v59 - v13;
  v14 = sub_1000BA294(&qword_100BC4638);
  __chkstk_darwin(v14);
  v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1000BA294(&qword_100BC4640);
  v18 = __chkstk_darwin(v17);
  v62 = (unsigned __int8 *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v59 - v21;
  v23 = __chkstk_darwin(v20);
  v25 = (char *)&v59 - v24;
  __chkstk_darwin(v23);
  v27 = (char *)&v59 - v26;
  v28 = type metadata accessor for LocationInput(0);
  v29 = __chkstk_darwin(v28);
  v31 = (unsigned __int8 *)&v59 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v33 = (char *)&v59 - v32;
  a1(a3 + 64);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28) == 1)
  {
    sub_100021A14((uint64_t)v27, &qword_100BC4640);
    return;
  }
  sub_10007802C((uint64_t)v27, (uint64_t)v33, type metadata accessor for LocationInput);
  sub_100080C0C((uint64_t)v33, (uint64_t)v25, type metadata accessor for LocationInput);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v28);
  sub_100182030();
  v34 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_100037768((uint64_t)v25, (uint64_t)v16, &qword_100BC4640);
  sub_100037768((uint64_t)v22, v34, &qword_100BC4640);
  v35 = (uint64_t)v33;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v28) != 1)
  {
    v36 = v62;
    sub_100037768((uint64_t)v16, (uint64_t)v62, &qword_100BC4640);
    if (_s7Weather24LocationCompositionStateOwet_0(v34, 1, v28) != 1)
    {
      sub_10007802C(v34, (uint64_t)v31, type metadata accessor for LocationInput);
      v44 = sub_10009AF74(v36, v31);
      sub_1000215BC((uint64_t)v31, type metadata accessor for LocationInput);
      sub_100021A14((uint64_t)v22, &qword_100BC4640);
      sub_100021A14((uint64_t)v25, &qword_100BC4640);
      sub_1000215BC((uint64_t)v36, type metadata accessor for LocationInput);
      sub_100021A14((uint64_t)v16, &qword_100BC4640);
      if ((v44 & 1) != 0)
        goto LABEL_15;
LABEL_9:
      v37 = (uint64_t)v64;
      v66(v35);
      if (_s7Weather24LocationCompositionStateOwet_0(v37, 1, v63) == 1)
      {
        sub_100021A14(v37, &qword_100BC4630);
        v38 = v69;
      }
      else
      {
        v39 = v61;
        sub_10007802C(v37, v61, type metadata accessor for LocationViewModel);
        v40 = (uint64_t)v60;
        v38 = v69;
        sub_10017B048();
        v41 = sub_100084CEC(v39, v40);
        sub_1000215BC(v40, type metadata accessor for LocationViewModel);
        if ((v41 & 1) == 0)
        {
          if (qword_100BC2490 != -1)
            swift_once(&qword_100BC2490, sub_100159750);
          v46 = v35;
          v47 = type metadata accessor for Logger(0);
          v48 = sub_1000AECD4(v47, (uint64_t)qword_100CAF198);
          v49 = Logger.logObject.getter(v48);
          v50 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v49, v50))
          {
            v51 = swift_slowAlloc(22, -1);
            v52 = swift_slowAlloc(64, -1);
            v72[0] = v52;
            *(_DWORD *)v51 = 136446466;
            v71 = sub_1000CE1C8(0x6E6F697461636F4CLL, 0xED00007475706E49, v72);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, v72);
            *(_WORD *)(v51 + 12) = 2082;
            v71 = sub_1000CE1C8(0xD000000000000011, 0x80000001009F15D0, v72);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, v72);
            _os_log_impl((void *)&_mh_execute_header, v49, v50, "Selector observed model difference for %{public}s, %{public}s; views will update",
              (uint8_t *)v51,
              0x16u);
            swift_arrayDestroy(v52, 2);
            swift_slowDealloc(v52, -1, -1);
            swift_slowDealloc(v51, -1, -1);
          }

          v53 = sub_1000BA294(&qword_100BC4648);
          v54 = v68;
          v55 = v68 + *(int *)(v53 + 48);
          sub_100080C0C(v46, v68, type metadata accessor for LocationInput);
          sub_100080C0C(v39, v55, type metadata accessor for LocationViewModel);
          swift_storeEnumTagMultiPayload(v54, v67, 1);
          v56 = v38 + *(_QWORD *)(*(_QWORD *)v38 + 120);
          swift_beginAccess(v56, v72, 33, 0);
          sub_1000A3908(v54, v56, &qword_100BC4628);
          swift_endAccess(v72);
          v57 = sub_1000BA294(&qword_100BC4650);
          sub_10003D2DC((unint64_t *)&qword_100BC4658, &qword_100BC4650);
          v58 = ObservableObject<>.objectWillChange.getter(v57);
          ObservableObjectPublisher.send()();
          swift_release(v58);
          sub_1000215BC(v39, type metadata accessor for LocationViewModel);
          v45 = v46;
          goto LABEL_21;
        }
        sub_1000215BC(v39, type metadata accessor for LocationViewModel);
      }
      sub_1000BA294(&qword_100BC4648);
      v42 = v68;
      sub_100080C0C(v35, v68, type metadata accessor for LocationInput);
      sub_10017B048();
      sub_1000215BC(v35, type metadata accessor for LocationInput);
      swift_storeEnumTagMultiPayload(v42, v67, 1);
      v43 = v38 + *(_QWORD *)(*(_QWORD *)v38 + 120);
      swift_beginAccess(v43, v72, 33, 0);
      sub_1000A3908(v42, v43, &qword_100BC4628);
      swift_endAccess(v72);
      return;
    }
    sub_100021A14((uint64_t)v22, &qword_100BC4640);
    sub_100021A14((uint64_t)v25, &qword_100BC4640);
    sub_1000215BC((uint64_t)v36, type metadata accessor for LocationInput);
LABEL_8:
    sub_100021A14((uint64_t)v16, &qword_100BC4638);
    goto LABEL_9;
  }
  sub_100021A14((uint64_t)v22, &qword_100BC4640);
  sub_100021A14((uint64_t)v25, &qword_100BC4640);
  if (_s7Weather24LocationCompositionStateOwet_0(v34, 1, v28) != 1)
    goto LABEL_8;
  sub_100021A14((uint64_t)v16, &qword_100BC4640);
LABEL_15:
  v45 = v35;
LABEL_21:
  sub_1000215BC(v45, type metadata accessor for LocationInput);
}

void sub_100196128(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t active;
  char *v66;
  uint64_t v67;
  void (*v68)(uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74[3];

  v67 = a6;
  v68 = a5;
  v71 = a4;
  v72 = a2;
  v69 = sub_1000BA294(&qword_100BC45F8);
  __chkstk_darwin(v69);
  v70 = (uint64_t)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000BA294(&qword_100BC4600);
  __chkstk_darwin(v9);
  v66 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  active = type metadata accessor for ActiveLocationModel(0);
  v11 = __chkstk_darwin(active);
  v62 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v63 = (uint64_t)&v61 - v13;
  v14 = sub_1000BA294(&qword_100BC4608);
  __chkstk_darwin(v14);
  v16 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1000BA294(&qword_100BC4610);
  v18 = __chkstk_darwin(v17);
  v64 = (uint64_t)&v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v61 - v21;
  v23 = __chkstk_darwin(v20);
  v25 = (char *)&v61 - v24;
  __chkstk_darwin(v23);
  v27 = (char *)&v61 - v26;
  v28 = type metadata accessor for ActiveLocationInput(0);
  v29 = __chkstk_darwin(v28);
  v31 = (char *)&v61 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v33 = (char *)&v61 - v32;
  a1(a3 + 64);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28) == 1)
  {
    sub_100021A14((uint64_t)v27, &qword_100BC4610);
    return;
  }
  sub_10007802C((uint64_t)v27, (uint64_t)v33, type metadata accessor for ActiveLocationInput);
  sub_100080C0C((uint64_t)v33, (uint64_t)v25, type metadata accessor for ActiveLocationInput);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v28);
  sub_100182030();
  v34 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_100037768((uint64_t)v25, (uint64_t)v16, &qword_100BC4610);
  sub_100037768((uint64_t)v22, v34, &qword_100BC4610);
  v35 = (uint64_t)v33;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v28) != 1)
  {
    v36 = v64;
    sub_100037768((uint64_t)v16, v64, &qword_100BC4610);
    if (_s7Weather24LocationCompositionStateOwet_0(v34, 1, v28) != 1)
    {
      sub_10007802C(v34, (uint64_t)v31, type metadata accessor for ActiveLocationInput);
      sub_1000F1150();
      v46 = v45;
      sub_1000215BC((uint64_t)v31, type metadata accessor for ActiveLocationInput);
      sub_100021A14((uint64_t)v22, &qword_100BC4610);
      sub_100021A14((uint64_t)v25, &qword_100BC4610);
      sub_1000215BC(v36, type metadata accessor for ActiveLocationInput);
      sub_100021A14((uint64_t)v16, &qword_100BC4610);
      if ((v46 & 1) != 0)
        goto LABEL_15;
LABEL_9:
      v37 = (uint64_t)v66;
      v68(v35);
      if (_s7Weather24LocationCompositionStateOwet_0(v37, 1, active) == 1)
      {
        sub_100021A14(v37, &qword_100BC4600);
        v38 = v71;
      }
      else
      {
        v39 = v63;
        sub_10007802C(v37, v63, type metadata accessor for ActiveLocationModel);
        v40 = (uint64_t)v62;
        v38 = v71;
        sub_10017B048();
        sub_10013D7F0();
        v42 = v41;
        sub_1000215BC(v40, type metadata accessor for ActiveLocationModel);
        if ((v42 & 1) == 0)
        {
          if (qword_100BC2490 != -1)
            swift_once(&qword_100BC2490, sub_100159750);
          v48 = v35;
          v49 = type metadata accessor for Logger(0);
          v50 = sub_1000AECD4(v49, (uint64_t)qword_100CAF198);
          v51 = Logger.logObject.getter(v50);
          v52 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v51, v52))
          {
            v53 = swift_slowAlloc(22, -1);
            v54 = swift_slowAlloc(64, -1);
            v74[0] = v54;
            *(_DWORD *)v53 = 136446466;
            v73 = sub_1000CE1C8(0xD000000000000013, 0x80000001009F1590, v74);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v73, v74);
            *(_WORD *)(v53 + 12) = 2082;
            v73 = sub_1000CE1C8(0xD000000000000013, 0x80000001009F15B0, v74);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v73, v74);
            _os_log_impl((void *)&_mh_execute_header, v51, v52, "Selector observed model difference for %{public}s, %{public}s; views will update",
              (uint8_t *)v53,
              0x16u);
            swift_arrayDestroy(v54, 2);
            swift_slowDealloc(v54, -1, -1);
            swift_slowDealloc(v53, -1, -1);
          }

          v55 = sub_1000BA294(&qword_100BC4618);
          v56 = v70;
          v57 = v70 + *(int *)(v55 + 48);
          sub_100080C0C(v48, v70, type metadata accessor for ActiveLocationInput);
          sub_100080C0C(v39, v57, type metadata accessor for ActiveLocationModel);
          swift_storeEnumTagMultiPayload(v56, v69, 1);
          v58 = v38 + *(_QWORD *)(*(_QWORD *)v38 + 120);
          swift_beginAccess(v58, v74, 33, 0);
          sub_1000A3908(v56, v58, &qword_100BC45F8);
          swift_endAccess(v74);
          v59 = sub_1000BA294((uint64_t *)&unk_100C0A200);
          sub_10003D2DC(&qword_100BC4620, (uint64_t *)&unk_100C0A200);
          v60 = ObservableObject<>.objectWillChange.getter(v59);
          ObservableObjectPublisher.send()();
          swift_release(v60);
          sub_1000215BC(v39, type metadata accessor for ActiveLocationModel);
          v47 = v48;
          goto LABEL_21;
        }
        sub_1000215BC(v39, type metadata accessor for ActiveLocationModel);
      }
      sub_1000BA294(&qword_100BC4618);
      v43 = v70;
      sub_100080C0C(v35, v70, type metadata accessor for ActiveLocationInput);
      sub_10017B048();
      sub_1000215BC(v35, type metadata accessor for ActiveLocationInput);
      swift_storeEnumTagMultiPayload(v43, v69, 1);
      v44 = v38 + *(_QWORD *)(*(_QWORD *)v38 + 120);
      swift_beginAccess(v44, v74, 33, 0);
      sub_1000A3908(v43, v44, &qword_100BC45F8);
      swift_endAccess(v74);
      return;
    }
    sub_100021A14((uint64_t)v22, &qword_100BC4610);
    sub_100021A14((uint64_t)v25, &qword_100BC4610);
    sub_1000215BC(v36, type metadata accessor for ActiveLocationInput);
LABEL_8:
    sub_100021A14((uint64_t)v16, &qword_100BC4608);
    goto LABEL_9;
  }
  sub_100021A14((uint64_t)v22, &qword_100BC4610);
  sub_100021A14((uint64_t)v25, &qword_100BC4610);
  if (_s7Weather24LocationCompositionStateOwet_0(v34, 1, v28) != 1)
    goto LABEL_8;
  sub_100021A14((uint64_t)v16, &qword_100BC4610);
LABEL_15:
  v47 = v35;
LABEL_21:
  sub_1000215BC(v47, type metadata accessor for ActiveLocationInput);
}

void sub_100196988(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  void (*v66)(uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72[3];

  v65 = a6;
  v66 = a5;
  v69 = a4;
  v70 = a2;
  v67 = sub_1000BA294(&qword_100BC4660);
  __chkstk_darwin(v67);
  v68 = (uint64_t)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000BA294(&qword_100BC46B8);
  __chkstk_darwin(v9);
  v64 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for LocationViewerViewModel(0);
  v11 = __chkstk_darwin(v63);
  v60 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v61 = (uint64_t)&v59 - v13;
  v14 = sub_1000BA294(&qword_100BC46C0);
  __chkstk_darwin(v14);
  v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1000BA294(&qword_100BC46C8);
  v18 = __chkstk_darwin(v17);
  v62 = (uint64_t)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v59 - v21;
  v23 = __chkstk_darwin(v20);
  v25 = (char *)&v59 - v24;
  __chkstk_darwin(v23);
  v27 = (char *)&v59 - v26;
  v28 = type metadata accessor for LocationViewerInput(0);
  v29 = __chkstk_darwin(v28);
  v31 = (char *)&v59 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v33 = (char *)&v59 - v32;
  a1(a3 + 64);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28) == 1)
  {
    sub_100021A14((uint64_t)v27, &qword_100BC46C8);
    return;
  }
  sub_10007802C((uint64_t)v27, (uint64_t)v33, type metadata accessor for LocationViewerInput);
  sub_100080C0C((uint64_t)v33, (uint64_t)v25, type metadata accessor for LocationViewerInput);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v28);
  sub_100182030();
  v34 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_100037768((uint64_t)v25, (uint64_t)v16, &qword_100BC46C8);
  sub_100037768((uint64_t)v22, v34, &qword_100BC46C8);
  v35 = (uint64_t)v33;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v28) != 1)
  {
    v36 = v62;
    sub_100037768((uint64_t)v16, v62, &qword_100BC46C8);
    if (_s7Weather24LocationCompositionStateOwet_0(v34, 1, v28) != 1)
    {
      sub_10007802C(v34, (uint64_t)v31, type metadata accessor for LocationViewerInput);
      v44 = sub_1000F1B48(v36, (uint64_t)v31);
      sub_1000215BC((uint64_t)v31, type metadata accessor for LocationViewerInput);
      sub_100021A14((uint64_t)v22, &qword_100BC46C8);
      sub_100021A14((uint64_t)v25, &qword_100BC46C8);
      sub_1000215BC(v36, type metadata accessor for LocationViewerInput);
      sub_100021A14((uint64_t)v16, &qword_100BC46C8);
      if (v44)
        goto LABEL_15;
LABEL_9:
      v37 = (uint64_t)v64;
      v66(v35);
      if (_s7Weather24LocationCompositionStateOwet_0(v37, 1, v63) == 1)
      {
        sub_100021A14(v37, &qword_100BC46B8);
        v38 = v69;
      }
      else
      {
        v39 = v61;
        sub_10007802C(v37, v61, type metadata accessor for LocationViewerViewModel);
        v40 = (uint64_t)v60;
        v38 = v69;
        sub_10017B048();
        v41 = sub_1000317B0(v39, v40);
        sub_1000215BC(v40, type metadata accessor for LocationViewerViewModel);
        if ((v41 & 1) == 0)
        {
          if (qword_100BC2490 != -1)
            swift_once(&qword_100BC2490, sub_100159750);
          v46 = v35;
          v47 = type metadata accessor for Logger(0);
          v48 = sub_1000AECD4(v47, (uint64_t)qword_100CAF198);
          v49 = Logger.logObject.getter(v48);
          v50 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v49, v50))
          {
            v51 = swift_slowAlloc(22, -1);
            v52 = swift_slowAlloc(64, -1);
            v72[0] = v52;
            *(_DWORD *)v51 = 136446466;
            v71 = sub_1000CE1C8(0xD000000000000013, 0x80000001009F1640, v72);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, v72);
            *(_WORD *)(v51 + 12) = 2082;
            v71 = sub_1000CE1C8(0xD000000000000017, 0x80000001009F1660, v72);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, v72);
            _os_log_impl((void *)&_mh_execute_header, v49, v50, "Selector observed model difference for %{public}s, %{public}s; views will update",
              (uint8_t *)v51,
              0x16u);
            swift_arrayDestroy(v52, 2);
            swift_slowDealloc(v52, -1, -1);
            swift_slowDealloc(v51, -1, -1);
          }

          v53 = sub_1000BA294(&qword_100BC4668);
          v54 = v68;
          v55 = v68 + *(int *)(v53 + 48);
          sub_100080C0C(v46, v68, type metadata accessor for LocationViewerInput);
          sub_100080C0C(v39, v55, type metadata accessor for LocationViewerViewModel);
          swift_storeEnumTagMultiPayload(v54, v67, 1);
          v56 = v38 + *(_QWORD *)(*(_QWORD *)v38 + 120);
          swift_beginAccess(v56, v72, 33, 0);
          sub_1000A3908(v54, v56, &qword_100BC4660);
          swift_endAccess(v72);
          v57 = sub_1000BA294(&qword_100BC46D0);
          sub_10003D2DC(&qword_100BC46D8, &qword_100BC46D0);
          v58 = ObservableObject<>.objectWillChange.getter(v57);
          ObservableObjectPublisher.send()();
          swift_release(v58);
          sub_1000215BC(v39, type metadata accessor for LocationViewerViewModel);
          v45 = v46;
          goto LABEL_21;
        }
        sub_1000215BC(v39, type metadata accessor for LocationViewerViewModel);
      }
      sub_1000BA294(&qword_100BC4668);
      v42 = v68;
      sub_100080C0C(v35, v68, type metadata accessor for LocationViewerInput);
      sub_10017B048();
      sub_1000215BC(v35, type metadata accessor for LocationViewerInput);
      swift_storeEnumTagMultiPayload(v42, v67, 1);
      v43 = v38 + *(_QWORD *)(*(_QWORD *)v38 + 120);
      swift_beginAccess(v43, v72, 33, 0);
      sub_1000A3908(v42, v43, &qword_100BC4660);
      swift_endAccess(v72);
      return;
    }
    sub_100021A14((uint64_t)v22, &qword_100BC46C8);
    sub_100021A14((uint64_t)v25, &qword_100BC46C8);
    sub_1000215BC(v36, type metadata accessor for LocationViewerInput);
LABEL_8:
    sub_100021A14((uint64_t)v16, &qword_100BC46C0);
    goto LABEL_9;
  }
  sub_100021A14((uint64_t)v22, &qword_100BC46C8);
  sub_100021A14((uint64_t)v25, &qword_100BC46C8);
  if (_s7Weather24LocationCompositionStateOwet_0(v34, 1, v28) != 1)
    goto LABEL_8;
  sub_100021A14((uint64_t)v16, &qword_100BC46C8);
LABEL_15:
  v45 = v35;
LABEL_21:
  sub_1000215BC(v45, type metadata accessor for LocationViewerInput);
}

void sub_1001971EC(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, void (*a5)(char *), uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  void (*v52)(char *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __n128 v66;
  void (*v67)(char *, char *, uint64_t);
  void (*v68)(char *, char *, uint64_t);
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  void (*v75)(char *);
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83[4];

  v74 = a6;
  v75 = a5;
  v79 = a4;
  v80 = a2;
  v81 = a1;
  v77 = sub_1000BA294(&qword_100BC4670);
  __chkstk_darwin(v77);
  v78 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1000BA294(&qword_100BC4678);
  __chkstk_darwin(v8);
  v73 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = type metadata accessor for WeatherConditionBackgroundModel(0);
  v71 = *(_QWORD *)(v76 - 8);
  v10 = __chkstk_darwin(v76);
  v69 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v70 = (char *)&v67 - v12;
  v13 = sub_1000BA294(&qword_100BC4680);
  __chkstk_darwin(v13);
  v15 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1000BA294(&qword_100BC4688);
  v17 = __chkstk_darwin(v16);
  v72 = (uint64_t)&v67 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v67 - v20;
  v22 = __chkstk_darwin(v19);
  v24 = (char *)&v67 - v23;
  __chkstk_darwin(v22);
  v26 = (char *)&v67 - v25;
  v27 = type metadata accessor for WeatherConditionBackgroundModelFactoryInput(0);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = __chkstk_darwin(v27);
  v31 = (char *)&v67 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v33 = (char *)&v67 - v32;
  ((void (*)(uint64_t))v81)(a3 + 64);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v27) == 1)
  {
    sub_100021A14((uint64_t)v26, &qword_100BC4688);
    return;
  }
  v67 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
  v67(v33, v26, v27);
  v80 = v33;
  v81 = v28;
  v68 = *(void (**)(char *, char *, uint64_t))(v28 + 16);
  v68(v24, v33, v27);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v27);
  v34 = v79;
  sub_1000A3640((uint64_t)v21);
  v35 = (uint64_t)&v15[*(int *)(v13 + 48)];
  sub_100037768((uint64_t)v24, (uint64_t)v15, &qword_100BC4688);
  sub_100037768((uint64_t)v21, v35, &qword_100BC4688);
  v36 = v27;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v27) == 1)
  {
    sub_100021A14((uint64_t)v21, &qword_100BC4688);
    sub_100021A14((uint64_t)v24, &qword_100BC4688);
    if (_s7Weather24LocationCompositionStateOwet_0(v35, 1, v27) == 1)
    {
      sub_100021A14((uint64_t)v15, &qword_100BC4688);
      (*(void (**)(char *, uint64_t))(v81 + 8))(v80, v27);
      return;
    }
    goto LABEL_8;
  }
  v37 = v72;
  sub_100037768((uint64_t)v15, v72, &qword_100BC4688);
  if (_s7Weather24LocationCompositionStateOwet_0(v35, 1, v27) == 1)
  {
    sub_100021A14((uint64_t)v21, &qword_100BC4688);
    sub_100021A14((uint64_t)v24, &qword_100BC4688);
    (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v37, v27);
LABEL_8:
    sub_100021A14((uint64_t)v15, &qword_100BC4680);
    goto LABEL_9;
  }
  v67(v31, (char *)v35, v27);
  sub_10000F1C8(&qword_100BC46B0, (uint64_t (*)(uint64_t))&type metadata accessor for WeatherConditionBackgroundModelFactoryInput);
  v51 = dispatch thunk of static Equatable.== infix(_:_:)(v37, v31, v27, v50);
  v52 = *(void (**)(char *, uint64_t))(v81 + 8);
  v52(v31, v36);
  sub_100021A14((uint64_t)v21, &qword_100BC4688);
  sub_100021A14((uint64_t)v24, &qword_100BC4688);
  v52((char *)v37, v36);
  sub_100021A14((uint64_t)v15, &qword_100BC4688);
  if ((v51 & 1) != 0)
  {
    v52(v80, v36);
    return;
  }
LABEL_9:
  v38 = (uint64_t)v73;
  v39 = v80;
  v75(v80);
  v40 = v76;
  if (_s7Weather24LocationCompositionStateOwet_0(v38, 1, v76) == 1)
  {
    sub_100021A14(v38, &qword_100BC4678);
    v41 = v81;
LABEL_13:
    sub_1000BA294(&qword_100BC4690);
    v48 = (uint64_t)v78;
    v68(v78, v39, v36);
    sub_100042A08();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v39, v36);
    swift_storeEnumTagMultiPayload(v48, v77, 1);
    v49 = v34 + *(_QWORD *)(*(_QWORD *)v34 + 120);
    swift_beginAccess(v49, v83, 33, 0);
    sub_1000A3908(v48, v49, &qword_100BC4670);
    swift_endAccess(v83);
    return;
  }
  v43 = v70;
  v42 = v71;
  (*(void (**)(char *, uint64_t, uint64_t))(v71 + 32))(v70, v38, v40);
  v44 = v69;
  sub_100042A08();
  sub_10000F1C8((unint64_t *)&qword_100BC4698, (uint64_t (*)(uint64_t))&type metadata accessor for WeatherConditionBackgroundModel);
  v46 = dispatch thunk of static Equatable.== infix(_:_:)(v43, v44, v40, v45);
  v47 = *(void (**)(char *, uint64_t))(v42 + 8);
  v47(v44, v40);
  v41 = v81;
  if ((v46 & 1) != 0)
  {
    v47(v43, v40);
    goto LABEL_13;
  }
  if (qword_100BC2490 != -1)
    swift_once(&qword_100BC2490, sub_100159750);
  v53 = type metadata accessor for Logger(0);
  v54 = sub_1000AECD4(v53, (uint64_t)qword_100CAF198);
  v55 = Logger.logObject.getter(v54);
  v56 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v55, v56))
  {
    v57 = swift_slowAlloc(22, -1);
    v58 = swift_slowAlloc(64, -1);
    v83[0] = v58;
    *(_DWORD *)v57 = 136446466;
    v82 = sub_1000CE1C8(0xD00000000000002BLL, 0x80000001009F15F0, v83);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v82, v83);
    *(_WORD *)(v57 + 12) = 2082;
    v82 = sub_1000CE1C8(0xD00000000000001FLL, 0x80000001009F1620, v83);
    v39 = v80;
    v41 = v81;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v82, v83);
    _os_log_impl((void *)&_mh_execute_header, v55, v56, "Selector observed model difference for %{public}s, %{public}s; views will update",
      (uint8_t *)v57,
      0x16u);
    swift_arrayDestroy(v58, 2);
    v59 = v58;
    v43 = v70;
    swift_slowDealloc(v59, -1, -1);
    swift_slowDealloc(v57, -1, -1);
  }

  v60 = sub_1000BA294(&qword_100BC4690);
  v61 = (uint64_t)v78;
  v62 = &v78[*(int *)(v60 + 48)];
  v68(v78, v39, v36);
  (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v62, v43, v40);
  swift_storeEnumTagMultiPayload(v61, v77, 1);
  v63 = v34 + *(_QWORD *)(*(_QWORD *)v34 + 120);
  swift_beginAccess(v63, v83, 33, 0);
  sub_1000A3908(v61, v63, &qword_100BC4670);
  swift_endAccess(v83);
  v64 = sub_1000BA294(&qword_100BC46A0);
  sub_10003D2DC(&qword_100BC46A8, &qword_100BC46A0);
  v65 = ObservableObject<>.objectWillChange.getter(v64);
  ObservableObjectPublisher.send()();
  v66 = swift_release(v65);
  ((void (*)(char *, uint64_t, __n128))v47)(v43, v40, v66);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v39, v36);
}

void sub_100197A60(void (*a1)(uint64_t, __n128), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  void (*v67)(uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73[3];

  v66 = a6;
  v67 = a5;
  v70 = a4;
  v71 = a2;
  v68 = sub_1000BA294(&qword_100BC46E0);
  __chkstk_darwin(v68);
  v69 = (uint64_t)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000BA294(&qword_100BC46E8);
  __chkstk_darwin(v9);
  v65 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = type metadata accessor for ListViewModel(0);
  __chkstk_darwin(v64);
  v61 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v62 = (uint64_t)&v60 - v13;
  v14 = sub_1000BA294(&qword_100BC46F0);
  __chkstk_darwin(v14);
  v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1000BA294(&qword_100BC46F8);
  __chkstk_darwin(v17);
  v63 = (uint64_t)&v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v60 - v20;
  __chkstk_darwin(v22);
  v24 = (char *)&v60 - v23;
  __chkstk_darwin(v25);
  v27 = (char *)&v60 - v26;
  v28 = type metadata accessor for ListInput(0);
  __chkstk_darwin(v28);
  v30 = (char *)&v60 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __chkstk_darwin(v31);
  v34 = (char *)&v60 - v33;
  a1(a3 + 64, v32);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28) == 1)
  {
    sub_100021A14((uint64_t)v27, &qword_100BC46F8);
    return;
  }
  sub_10007802C((uint64_t)v27, (uint64_t)v34, type metadata accessor for ListInput);
  sub_100080C0C((uint64_t)v34, (uint64_t)v24, type metadata accessor for ListInput);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v28);
  sub_100182030();
  v35 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_100037768((uint64_t)v24, (uint64_t)v16, &qword_100BC46F8);
  sub_100037768((uint64_t)v21, v35, &qword_100BC46F8);
  v36 = (uint64_t)v34;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v28) != 1)
  {
    v37 = v63;
    sub_100037768((uint64_t)v16, v63, &qword_100BC46F8);
    if (_s7Weather24LocationCompositionStateOwet_0(v35, 1, v28) != 1)
    {
      sub_10007802C(v35, (uint64_t)v30, type metadata accessor for ListInput);
      v45 = sub_1003C3A1C(v37, (uint64_t)v30);
      sub_1000215BC((uint64_t)v30, type metadata accessor for ListInput);
      sub_100021A14((uint64_t)v21, &qword_100BC46F8);
      sub_100021A14((uint64_t)v24, &qword_100BC46F8);
      sub_1000215BC(v37, type metadata accessor for ListInput);
      sub_100021A14((uint64_t)v16, &qword_100BC46F8);
      if ((v45 & 1) != 0)
        goto LABEL_15;
LABEL_9:
      v38 = (uint64_t)v65;
      v67(v36);
      if (_s7Weather24LocationCompositionStateOwet_0(v38, 1, v64) == 1)
      {
        sub_100021A14(v38, &qword_100BC46E8);
        v39 = v70;
      }
      else
      {
        v40 = v62;
        sub_10007802C(v38, v62, type metadata accessor for ListViewModel);
        v41 = (uint64_t)v61;
        v39 = v70;
        sub_10017B048();
        v42 = sub_10060B710(v40, v41);
        sub_1000215BC(v41, type metadata accessor for ListViewModel);
        if ((v42 & 1) == 0)
        {
          if (qword_100BC2490 != -1)
            swift_once(&qword_100BC2490, sub_100159750);
          v47 = v36;
          v48 = type metadata accessor for Logger(0);
          v49 = sub_1000AECD4(v48, (uint64_t)qword_100CAF198);
          v50 = Logger.logObject.getter(v49);
          v51 = static os_log_type_t.default.getter(v50);
          if (os_log_type_enabled(v50, v51))
          {
            v52 = swift_slowAlloc(22, -1);
            v53 = swift_slowAlloc(64, -1);
            v73[0] = v53;
            *(_DWORD *)v52 = 136446466;
            v72 = sub_1000CE1C8(0x75706E497473694CLL, 0xE900000000000074, v73);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, v73);
            *(_WORD *)(v52 + 12) = 2082;
            v72 = sub_1000CE1C8(0x776569567473694CLL, 0xED00006C65646F4DLL, v73);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, v73);
            _os_log_impl((void *)&_mh_execute_header, v50, v51, "Selector observed model difference for %{public}s, %{public}s; views will update",
              (uint8_t *)v52,
              0x16u);
            swift_arrayDestroy(v53, 2);
            swift_slowDealloc(v53, -1, -1);
            swift_slowDealloc(v52, -1, -1);
          }

          v54 = sub_1000BA294(&qword_100BC4700);
          v55 = v69;
          v56 = v69 + *(int *)(v54 + 48);
          sub_100080C0C(v47, v69, type metadata accessor for ListInput);
          sub_100080C0C(v40, v56, type metadata accessor for ListViewModel);
          swift_storeEnumTagMultiPayload(v55, v68, 1);
          v57 = v39 + *(_QWORD *)(*(_QWORD *)v39 + 120);
          swift_beginAccess(v57, v73, 33, 0);
          sub_1000A3908(v55, v57, &qword_100BC46E0);
          swift_endAccess(v73);
          v58 = sub_1000BA294(&qword_100BC4708);
          sub_10003D2DC(&qword_100BC4710, &qword_100BC4708);
          v59 = ObservableObject<>.objectWillChange.getter(v58);
          ObservableObjectPublisher.send()();
          swift_release(v59);
          sub_1000215BC(v40, type metadata accessor for ListViewModel);
          v46 = v47;
          goto LABEL_21;
        }
        sub_1000215BC(v40, type metadata accessor for ListViewModel);
      }
      sub_1000BA294(&qword_100BC4700);
      v43 = v69;
      sub_100080C0C(v36, v69, type metadata accessor for ListInput);
      sub_10017B048();
      sub_1000215BC(v36, type metadata accessor for ListInput);
      swift_storeEnumTagMultiPayload(v43, v68, 1);
      v44 = v39 + *(_QWORD *)(*(_QWORD *)v39 + 120);
      swift_beginAccess(v44, v73, 33, 0);
      sub_1000A3908(v43, v44, &qword_100BC46E0);
      swift_endAccess(v73);
      return;
    }
    sub_100021A14((uint64_t)v21, &qword_100BC46F8);
    sub_100021A14((uint64_t)v24, &qword_100BC46F8);
    sub_1000215BC(v37, type metadata accessor for ListInput);
LABEL_8:
    sub_100021A14((uint64_t)v16, &qword_100BC46F0);
    goto LABEL_9;
  }
  sub_100021A14((uint64_t)v21, &qword_100BC46F8);
  sub_100021A14((uint64_t)v24, &qword_100BC46F8);
  if (_s7Weather24LocationCompositionStateOwet_0(v35, 1, v28) != 1)
    goto LABEL_8;
  sub_100021A14((uint64_t)v16, &qword_100BC46F8);
LABEL_15:
  v46 = v36;
LABEL_21:
  sub_1000215BC(v46, type metadata accessor for ListInput);
}

double sub_1001982C8(void (*a1)(__int128 *__return_ptr, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(__int128 *__return_ptr, uint64_t *, __n128))
{
  double result;
  void (*v8)(_QWORD *__return_ptr, __n128);
  void (*v9)(_QWORD *__return_ptr, __n128);
  void (*v10)(_QWORD *__return_ptr, __n128);
  char v11;
  char v12;
  __n128 v13;
  unsigned __int8 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  char v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  __int16 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int16 v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unsigned __int8 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE v66[16];
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  _OWORD v76[6];
  char v77;
  _BYTE v78[112];

  a1(&v67, a3 + 64);
  v8 = (void (*)(_QWORD *__return_ptr, __n128))v67;
  if ((_QWORD)v67)
  {
    v75 = v67;
    swift_retain();
    v9 = sub_100182750();
    if (v9)
    {
      v10 = v9;
      if (v8 == v9)
      {
        swift_release_n(v8, 3);
        return result;
      }
      type metadata accessor for MainState._Storage(0);
      swift_retain_n(v8, 2);
      sub_10009CC70();
      v12 = v11;
      swift_release_n(v8, 3);
      v13 = swift_release(v10);
      if ((v12 & 1) != 0)
      {
        *(_QWORD *)&result = swift_release(v8).n128_u64[0];
        return result;
      }
    }
    else
    {
      v13 = swift_release(v8);
    }
    a5(&v67, &v75, v13);
    v14 = v73;
    if (v73 == 255)
    {
LABEL_10:
      *(_QWORD *)&v67 = v8;
      swift_retain();
      sub_10017B894((uint64_t)&v67 + 8);
      swift_release(v8);
      swift_beginAccess(a4 + 16, &v65, 1, 0);
      v20 = v73;
      v21 = v74;
      v22 = *(_QWORD *)(a4 + 16);
      v23 = *(_QWORD *)(a4 + 24);
      v24 = *(_QWORD *)(a4 + 32);
      v25 = *(_QWORD *)(a4 + 40);
      v26 = *(_QWORD *)(a4 + 48);
      v27 = *(_QWORD *)(a4 + 56);
      v28 = *(_QWORD *)(a4 + 64);
      v29 = *(_QWORD *)(a4 + 72);
      v30 = *(_OWORD *)(a4 + 80);
      v31 = *(_OWORD *)(a4 + 96);
      v32 = *(_QWORD *)(a4 + 112);
      v33 = *(_WORD *)(a4 + 120);
      v34 = v68;
      *(_OWORD *)(a4 + 16) = v67;
      *(_OWORD *)(a4 + 32) = v34;
      v35 = v70;
      *(_OWORD *)(a4 + 48) = v69;
      *(_OWORD *)(a4 + 64) = v35;
      v36 = v72;
      *(_OWORD *)(a4 + 80) = v71;
      *(_OWORD *)(a4 + 96) = v36;
      *(_QWORD *)(a4 + 112) = v20;
      *(_BYTE *)(a4 + 120) = v21;
      *(_BYTE *)(a4 + 121) = 1;
      return sub_10019DECC(v22, v23, v24, v25, v26, v27, v28, v29, v30, *((uint64_t *)&v30 + 1), v31, *((uint64_t *)&v31 + 1), v32, v33, SHIBYTE(v33));
    }
    v15 = v67;
    v16 = v71;
    v17 = v72;
    v76[0] = v67;
    v61 = *((_QWORD *)&v68 + 1);
    v62 = v68;
    v76[1] = v68;
    v59 = v69;
    v76[2] = v69;
    v63 = *((_QWORD *)&v70 + 1);
    v64 = *((_QWORD *)&v69 + 1);
    v60 = v70;
    v76[3] = v70;
    v76[4] = v71;
    v76[5] = v72;
    v77 = v73;
    sub_10017B894((uint64_t)&v67);
    sub_10019E094(&v67, v78);
    sub_1006E806C(v76);
    v19 = v18;
    sub_10019E8EC((uint64_t)v78, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_10019DFF0);
    if ((v19 & 1) != 0)
    {
      sub_10019E190(v15, *((uint64_t *)&v15 + 1), v62, v61, v59, v64, v60, v63, v16, *((uint64_t *)&v16 + 1), v17, *((uint64_t *)&v17 + 1), v14);
      goto LABEL_10;
    }
    v58 = v14;
    if (qword_100BC2490 != -1)
      swift_once(&qword_100BC2490, sub_100159750);
    v37 = type metadata accessor for Logger(0);
    v38 = sub_1000AECD4(v37, (uint64_t)qword_100CAF198);
    v39 = Logger.logObject.getter(v38);
    v40 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v39, v40))
    {
      v41 = swift_slowAlloc(22, -1);
      v42 = swift_slowAlloc(64, -1);
      *(_QWORD *)&v67 = v42;
      *(_DWORD *)v41 = 136446466;
      v65 = sub_1000CE1C8(0x746174536E69614DLL, 0xE900000000000065, (uint64_t *)&v67);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, v66);
      *(_WORD *)(v41 + 12) = 2082;
      v65 = sub_1000CE1C8(0x6956686372616553, 0xEF6C65646F4D7765, (uint64_t *)&v67);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, v66);
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "Selector observed model difference for %{public}s, %{public}s; views will update",
        (uint8_t *)v41,
        0x16u);
      swift_arrayDestroy(v42, 2);
      swift_slowDealloc(v42, -1, -1);
      swift_slowDealloc(v41, -1, -1);
    }

    v43 = v75;
    swift_beginAccess(a4 + 16, &v67, 1, 0);
    v56 = *(_QWORD *)(a4 + 24);
    v57 = *(_QWORD *)(a4 + 16);
    v54 = *(_QWORD *)(a4 + 40);
    v55 = *(_QWORD *)(a4 + 32);
    v52 = *(_QWORD *)(a4 + 56);
    v53 = *(_QWORD *)(a4 + 48);
    v50 = *(_QWORD *)(a4 + 72);
    v51 = *(_QWORD *)(a4 + 64);
    v48 = *(_OWORD *)(a4 + 96);
    v49 = *(_OWORD *)(a4 + 80);
    v47 = *(_QWORD *)(a4 + 112);
    v46 = *(_WORD *)(a4 + 120);
    *(_QWORD *)(a4 + 16) = v43;
    *(_OWORD *)(a4 + 24) = v15;
    *(_QWORD *)(a4 + 40) = v62;
    *(_QWORD *)(a4 + 48) = v61;
    *(_QWORD *)(a4 + 56) = v59;
    *(_QWORD *)(a4 + 64) = v64;
    *(_QWORD *)(a4 + 72) = v60;
    *(_QWORD *)(a4 + 80) = v63;
    *(_OWORD *)(a4 + 88) = v16;
    *(_OWORD *)(a4 + 104) = v17;
    *(_BYTE *)(a4 + 120) = v58;
    *(_BYTE *)(a4 + 121) = 1;
    swift_retain();
    sub_10019E0D0(v15, *((uint64_t *)&v15 + 1), v62, v61, v59, v64, v60, v63, v16, *((uint64_t *)&v16 + 1), v17, *((uint64_t *)&v17 + 1), v58);
    sub_10019DECC(v57, v56, v55, v54, v53, v52, v51, v50, v49, *((uint64_t *)&v49 + 1), v48, *((uint64_t *)&v48 + 1), v47, v46, SHIBYTE(v46));
    v44 = sub_1000BA294(&qword_100BC4718);
    sub_10003D2DC(&qword_100BC4720, &qword_100BC4718);
    v45 = ObservableObject<>.objectWillChange.getter(v44);
    ObservableObjectPublisher.send()();
    swift_release(v45);
    sub_10019E190(v15, *((uint64_t *)&v15 + 1), v62, v61, v59, v64, v60, v63, v16, *((uint64_t *)&v16 + 1), v17, *((uint64_t *)&v17 + 1), v58);
    *(_QWORD *)&result = swift_release(v43).n128_u64[0];
  }
  return result;
}

void sub_10019887C(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *__return_ptr, uint64_t), uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t *__return_ptr, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64[3];

  v58 = a6;
  v59 = a5;
  v62 = a4;
  v60 = sub_1000BA294(&qword_100BC4728);
  __chkstk_darwin(v60);
  v61 = (uint64_t)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000BA294(&qword_100BC4730);
  __chkstk_darwin(v9);
  v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1000BA294(&qword_100BC4738);
  v13 = __chkstk_darwin(v12);
  v57 = (uint64_t)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v55 - v16;
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v55 - v19;
  __chkstk_darwin(v18);
  v22 = (char *)&v55 - v21;
  v23 = type metadata accessor for NotificationsOptInInput(0);
  v24 = __chkstk_darwin(v23);
  v56 = (uint64_t)&v55 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v27 = (char *)&v55 - v26;
  a1(a3 + 64);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v23) == 1)
  {
    sub_100021A14((uint64_t)v22, &qword_100BC4738);
    return;
  }
  sub_10007802C((uint64_t)v22, (uint64_t)v27, type metadata accessor for NotificationsOptInInput);
  sub_100080C0C((uint64_t)v27, (uint64_t)v20, type metadata accessor for NotificationsOptInInput);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v23);
  v28 = v62;
  sub_100182950((uint64_t)v17);
  v29 = (uint64_t)&v11[*(int *)(v9 + 48)];
  sub_100037768((uint64_t)v20, (uint64_t)v11, &qword_100BC4738);
  sub_100037768((uint64_t)v17, v29, &qword_100BC4738);
  v30 = (uint64_t)v27;
  v31 = (uint64_t)v11;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v23) == 1)
  {
    sub_100021A14((uint64_t)v17, &qword_100BC4738);
    sub_100021A14((uint64_t)v20, &qword_100BC4738);
    if (_s7Weather24LocationCompositionStateOwet_0(v29, 1, v23) == 1)
    {
      sub_100021A14((uint64_t)v11, &qword_100BC4738);
LABEL_13:
      v42 = v30;
      goto LABEL_19;
    }
    goto LABEL_8;
  }
  v32 = v57;
  sub_100037768((uint64_t)v11, v57, &qword_100BC4738);
  if (_s7Weather24LocationCompositionStateOwet_0(v29, 1, v23) == 1)
  {
    sub_100021A14((uint64_t)v17, &qword_100BC4738);
    sub_100021A14((uint64_t)v20, &qword_100BC4738);
    sub_1000215BC(v32, type metadata accessor for NotificationsOptInInput);
LABEL_8:
    sub_100021A14((uint64_t)v11, &qword_100BC4730);
    goto LABEL_9;
  }
  v40 = v56;
  sub_10007802C(v29, v56, type metadata accessor for NotificationsOptInInput);
  v41 = sub_10054F208(v32, v40);
  sub_1000215BC(v40, type metadata accessor for NotificationsOptInInput);
  sub_100021A14((uint64_t)v17, &qword_100BC4738);
  sub_100021A14((uint64_t)v20, &qword_100BC4738);
  sub_1000215BC(v32, type metadata accessor for NotificationsOptInInput);
  sub_100021A14(v31, &qword_100BC4738);
  if ((v41 & 1) != 0)
    goto LABEL_13;
LABEL_9:
  v59(v64, v30);
  v33 = v64[0];
  if ((v64[0] & 0xFF0000) == 0x20000
    || (v34 = sub_10017B5B4(), (sub_1004AFACC(v33 & 0xFF01FFFF, v34 & 0xFF01FFFF) & 1) != 0))
  {
    v35 = sub_1000BA294(&qword_100BC4740);
    v36 = v61;
    v37 = v61 + *(int *)(v35 + 48);
    sub_100080C0C(v30, v61, type metadata accessor for NotificationsOptInInput);
    v38 = sub_10017B5B4();
    *(_WORD *)v37 = v38;
    *(_BYTE *)(v37 + 2) = BYTE2(v38) & 1;
    *(_BYTE *)(v37 + 3) = HIBYTE(v38);
    sub_1000215BC(v30, type metadata accessor for NotificationsOptInInput);
    swift_storeEnumTagMultiPayload(v36, v60, 1);
    v39 = v28 + *(_QWORD *)(*(_QWORD *)v28 + 120);
    swift_beginAccess(v39, v64, 33, 0);
    sub_1000A3908(v36, v39, &qword_100BC4728);
    swift_endAccess(v64);
    return;
  }
  if (qword_100BC2490 != -1)
    swift_once(&qword_100BC2490, sub_100159750);
  v43 = type metadata accessor for Logger(0);
  v44 = sub_1000AECD4(v43, (uint64_t)qword_100CAF198);
  v45 = Logger.logObject.getter(v44);
  v46 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v45, v46))
  {
    v47 = swift_slowAlloc(22, -1);
    v48 = swift_slowAlloc(64, -1);
    v64[0] = v48;
    *(_DWORD *)v47 = 136446466;
    v63 = sub_1000CE1C8(0xD000000000000017, 0x80000001009F1680, v64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, v64);
    *(_WORD *)(v47 + 12) = 2082;
    v63 = sub_1000CE1C8(0xD00000000000001BLL, 0x80000001009F16A0, v64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, v64);
    _os_log_impl((void *)&_mh_execute_header, v45, v46, "Selector observed model difference for %{public}s, %{public}s; views will update",
      (uint8_t *)v47,
      0x16u);
    swift_arrayDestroy(v48, 2);
    swift_slowDealloc(v48, -1, -1);
    swift_slowDealloc(v47, -1, -1);
  }

  v49 = sub_1000BA294(&qword_100BC4740);
  v50 = v61;
  v51 = v61 + *(int *)(v49 + 48);
  sub_100080C0C(v30, v61, type metadata accessor for NotificationsOptInInput);
  *(_WORD *)v51 = v33;
  *(_BYTE *)(v51 + 2) = BYTE2(v33) & 1;
  *(_BYTE *)(v51 + 3) = HIBYTE(v33);
  swift_storeEnumTagMultiPayload(v50, v60, 1);
  v52 = v28 + *(_QWORD *)(*(_QWORD *)v28 + 120);
  swift_beginAccess(v52, v64, 33, 0);
  sub_1000A3908(v50, v52, &qword_100BC4728);
  swift_endAccess(v64);
  v53 = sub_1000BA294(&qword_100BC4748);
  sub_10003D2DC(&qword_100BC4750, &qword_100BC4748);
  v54 = ObservableObject<>.objectWillChange.getter(v53);
  ObservableObjectPublisher.send()();
  swift_release(v54);
  v42 = v30;
LABEL_19:
  sub_1000215BC(v42, type metadata accessor for NotificationsOptInInput);
}

double sub_100198FA8(void (*a1)(uint64_t *__return_ptr, uint64_t, __n128), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *, __n128))
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  double result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  void (*v47)(uint64_t *, __n128);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50[3];
  uint64_t v51;

  v47 = a5;
  v48 = sub_1000BA294(&qword_100BC4758);
  __chkstk_darwin(v48);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1000BA294(&qword_100BC4760);
  __chkstk_darwin(v10);
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for MainViewModel(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v46 - v18;
  a1(v50, a3 + 64, v17);
  v21 = v50[0];
  if (v50[0])
  {
    v46 = (uint64_t *)v9;
    v51 = v50[0];
    swift_retain();
    v22 = a4;
    v23 = sub_100182508();
    if (v23)
    {
      v24 = v23;
      if (v21 == v23)
      {
        swift_release_n(v21, 3);
        return result;
      }
      type metadata accessor for MainState._Storage(0);
      swift_retain_n(v21, 2);
      sub_10009CC70();
      v26 = v25;
      swift_release_n(v21, 3);
      v27 = swift_release(v24);
      if ((v26 & 1) != 0)
      {
        *(_QWORD *)&result = swift_release(v21).n128_u64[0];
        return result;
      }
    }
    else
    {
      v27 = swift_release(v21);
    }
    v47(&v51, v27);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13) == 1)
    {
      sub_100021A14((uint64_t)v12, &qword_100BC4760);
      v28 = a4;
LABEL_11:
      v31 = v46;
      sub_1000BA294(&qword_100BC4768);
      v32 = v51;
      *v31 = v51;
      swift_retain();
      sub_1000A2930();
      swift_release(v32);
      swift_storeEnumTagMultiPayload(v31, v48, 1);
      v33 = v28 + *(_QWORD *)(*(_QWORD *)v28 + 120);
      swift_beginAccess(v33, v50, 33, 0);
      sub_1000A3908((uint64_t)v31, v33, &qword_100BC4758);
      swift_endAccess(v50);
      return result;
    }
    v29 = (uint64_t)v19;
    sub_10007802C((uint64_t)v12, (uint64_t)v19, type metadata accessor for MainViewModel);
    v28 = v22;
    sub_1000A2930();
    v30 = sub_1000FF1B4(v19, v15);
    sub_1000215BC((uint64_t)v15, type metadata accessor for MainViewModel);
    if ((v30 & 1) != 0)
    {
      sub_1000215BC((uint64_t)v19, type metadata accessor for MainViewModel);
      goto LABEL_11;
    }
    v34 = v46;
    if (qword_100BC2490 != -1)
      swift_once(&qword_100BC2490, sub_100159750);
    v35 = type metadata accessor for Logger(0);
    v36 = sub_1000AECD4(v35, (uint64_t)qword_100CAF198);
    v37 = Logger.logObject.getter(v36);
    v38 = static os_log_type_t.default.getter(v37);
    if (os_log_type_enabled(v37, v38))
    {
      v39 = swift_slowAlloc(22, -1);
      v40 = swift_slowAlloc(64, -1);
      v50[0] = v40;
      *(_DWORD *)v39 = 136446466;
      v49 = sub_1000CE1C8(0x746174536E69614DLL, 0xE900000000000065, v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, v50);
      *(_WORD *)(v39 + 12) = 2082;
      v49 = sub_1000CE1C8(0x776569566E69614DLL, 0xED00006C65646F4DLL, v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, v50);
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "Selector observed model difference for %{public}s, %{public}s; views will update",
        (uint8_t *)v39,
        0x16u);
      swift_arrayDestroy(v40, 2);
      swift_slowDealloc(v40, -1, -1);
      swift_slowDealloc(v39, -1, -1);
    }

    v41 = (uint64_t)v34 + *(int *)(sub_1000BA294(&qword_100BC4768) + 48);
    v42 = v51;
    *v34 = v51;
    sub_100080C0C(v29, v41, type metadata accessor for MainViewModel);
    swift_storeEnumTagMultiPayload(v34, v48, 1);
    v43 = v28 + *(_QWORD *)(*(_QWORD *)v28 + 120);
    swift_beginAccess(v43, v50, 33, 0);
    swift_retain();
    sub_1000A3908((uint64_t)v34, v43, &qword_100BC4758);
    swift_endAccess(v50);
    v44 = sub_1000BA294(&qword_100BC4770);
    sub_10003D2DC(&qword_100C09E40, &qword_100BC4770);
    v45 = ObservableObject<>.objectWillChange.getter(v44);
    ObservableObjectPublisher.send()();
    swift_release(v45);
    sub_1000215BC(v29, type metadata accessor for MainViewModel);
    *(_QWORD *)&result = swift_release(v42).n128_u64[0];
  }
  return result;
}

void sub_10019955C(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void (*v32)(uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  void (*v67)(uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(uint64_t);
  uint64_t v72;
  uint64_t v73[3];

  v66 = a6;
  v67 = a5;
  v70 = a4;
  v71 = a1;
  v68 = sub_1000BA294(&qword_100BC4778);
  __chkstk_darwin(v68);
  v69 = (uint64_t)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1000BA294(&qword_100BC4780);
  __chkstk_darwin(v8);
  v65 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = type metadata accessor for AveragesDetailViewModel(0);
  v10 = __chkstk_darwin(v64);
  v61 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v62 = (uint64_t)&v60 - v12;
  v13 = sub_1000BA294(&qword_100BC4788);
  __chkstk_darwin(v13);
  v15 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1000BA294(&qword_100BC4790);
  v17 = __chkstk_darwin(v16);
  v63 = (uint64_t)&v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v60 - v20;
  v22 = __chkstk_darwin(v19);
  v24 = (char *)&v60 - v23;
  __chkstk_darwin(v22);
  v26 = (char *)&v60 - v25;
  v27 = type metadata accessor for AveragesDetailInput(0);
  v28 = __chkstk_darwin(v27);
  v30 = (char *)&v60 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v32 = (void (*)(uint64_t))((char *)&v60 - v31);
  v71(a3 + 64);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v27) == 1)
  {
    sub_100021A14((uint64_t)v26, &qword_100BC4790);
    return;
  }
  sub_10007802C((uint64_t)v26, (uint64_t)v32, type metadata accessor for AveragesDetailInput);
  v71 = v32;
  sub_100080C0C((uint64_t)v32, (uint64_t)v24, type metadata accessor for AveragesDetailInput);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v27);
  v33 = v70;
  sub_100182030();
  v34 = (uint64_t)&v15[*(int *)(v13 + 48)];
  sub_100037768((uint64_t)v24, (uint64_t)v15, &qword_100BC4790);
  sub_100037768((uint64_t)v21, v34, &qword_100BC4790);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v27) != 1)
  {
    v37 = v63;
    sub_100037768((uint64_t)v15, v63, &qword_100BC4790);
    if (_s7Weather24LocationCompositionStateOwet_0(v34, 1, v27) == 1)
    {
      v38 = &qword_100BC4788;
      v35 = (uint64_t)v71;
    }
    else
    {
      sub_10007802C(v34, (uint64_t)v30, type metadata accessor for AveragesDetailInput);
      sub_100397668(v37, (uint64_t)v30);
      v35 = (uint64_t)v71;
      if ((v39 & 1) != 0 && *(unsigned __int8 *)(v37 + *(int *)(v27 + 20)) == v30[*(int *)(v27 + 20)])
      {
        v59 = static Location.== infix(_:_:)(v37 + *(int *)(v27 + 24), &v30[*(int *)(v27 + 24)]);
        sub_1000215BC((uint64_t)v30, type metadata accessor for AveragesDetailInput);
        sub_100021A14((uint64_t)v21, &qword_100BC4790);
        sub_100021A14((uint64_t)v24, &qword_100BC4790);
        sub_1000215BC(v37, type metadata accessor for AveragesDetailInput);
        sub_100021A14((uint64_t)v15, &qword_100BC4790);
        if ((v59 & 1) != 0)
          goto LABEL_6;
LABEL_15:
        v40 = (uint64_t)v65;
        v67(v35);
        if (_s7Weather24LocationCompositionStateOwet_0(v40, 1, v64) == 1)
        {
          sub_100021A14(v40, &qword_100BC4780);
        }
        else
        {
          v41 = v62;
          sub_10007802C(v40, v62, type metadata accessor for AveragesDetailViewModel);
          v42 = (uint64_t)v61;
          sub_10017B048();
          sub_1004878C0(v41, v42);
          v44 = v43;
          sub_1000215BC(v42, type metadata accessor for AveragesDetailViewModel);
          if ((v44 & 1) == 0)
          {
            if (qword_100BC2490 != -1)
              swift_once(&qword_100BC2490, sub_100159750);
            v47 = type metadata accessor for Logger(0);
            v48 = sub_1000AECD4(v47, (uint64_t)qword_100CAF198);
            v49 = Logger.logObject.getter(v48);
            v50 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v49, v50))
            {
              v51 = swift_slowAlloc(22, -1);
              v52 = swift_slowAlloc(64, -1);
              v73[0] = v52;
              *(_DWORD *)v51 = 136446466;
              v72 = sub_1000CE1C8(0xD000000000000013, 0x80000001009F16C0, v73);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, v73);
              *(_WORD *)(v51 + 12) = 2082;
              v72 = sub_1000CE1C8(0xD000000000000017, 0x80000001009F16E0, v73);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, v73);
              _os_log_impl((void *)&_mh_execute_header, v49, v50, "Selector observed model difference for %{public}s, %{public}s; views will update",
                (uint8_t *)v51,
                0x16u);
              swift_arrayDestroy(v52, 2);
              swift_slowDealloc(v52, -1, -1);
              swift_slowDealloc(v51, -1, -1);
            }

            v53 = sub_1000BA294(&qword_100BC4798);
            v54 = v69;
            v55 = v69 + *(int *)(v53 + 48);
            sub_100080C0C(v35, v69, type metadata accessor for AveragesDetailInput);
            sub_100080C0C(v41, v55, type metadata accessor for AveragesDetailViewModel);
            swift_storeEnumTagMultiPayload(v54, v68, 1);
            v56 = v33 + *(_QWORD *)(*(_QWORD *)v33 + 120);
            swift_beginAccess(v56, v73, 33, 0);
            sub_1000A3908(v54, v56, &qword_100BC4778);
            swift_endAccess(v73);
            v57 = sub_1000BA294(&qword_100BC47A0);
            sub_10003D2DC((unint64_t *)&qword_100BC47A8, &qword_100BC47A0);
            v58 = ObservableObject<>.objectWillChange.getter(v57);
            ObservableObjectPublisher.send()();
            swift_release(v58);
            sub_1000215BC(v41, type metadata accessor for AveragesDetailViewModel);
            v36 = v35;
            goto LABEL_25;
          }
          sub_1000215BC(v41, type metadata accessor for AveragesDetailViewModel);
        }
        sub_1000BA294(&qword_100BC4798);
        v45 = v69;
        sub_100080C0C(v35, v69, type metadata accessor for AveragesDetailInput);
        sub_10017B048();
        sub_1000215BC(v35, type metadata accessor for AveragesDetailInput);
        swift_storeEnumTagMultiPayload(v45, v68, 1);
        v46 = v33 + *(_QWORD *)(*(_QWORD *)v33 + 120);
        swift_beginAccess(v46, v73, 33, 0);
        sub_1000A3908(v45, v46, &qword_100BC4778);
        swift_endAccess(v73);
        return;
      }
      sub_1000215BC((uint64_t)v30, type metadata accessor for AveragesDetailInput);
      v38 = &qword_100BC4790;
    }
    sub_100021A14((uint64_t)v21, &qword_100BC4790);
    sub_100021A14((uint64_t)v24, &qword_100BC4790);
    sub_1000215BC(v37, type metadata accessor for AveragesDetailInput);
LABEL_14:
    sub_100021A14((uint64_t)v15, v38);
    goto LABEL_15;
  }
  sub_100021A14((uint64_t)v21, &qword_100BC4790);
  sub_100021A14((uint64_t)v24, &qword_100BC4790);
  if (_s7Weather24LocationCompositionStateOwet_0(v34, 1, v27) != 1)
  {
    v38 = &qword_100BC4788;
    v35 = (uint64_t)v71;
    goto LABEL_14;
  }
  sub_100021A14((uint64_t)v15, &qword_100BC4790);
  v35 = (uint64_t)v71;
LABEL_6:
  v36 = v35;
LABEL_25:
  sub_1000215BC(v36, type metadata accessor for AveragesDetailInput);
}

void sub_100199E08(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  void (*v66)(uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72[3];

  v65 = a6;
  v66 = a5;
  v69 = a4;
  v70 = a2;
  v67 = sub_1000BA294(&qword_100BC47B0);
  __chkstk_darwin(v67);
  v68 = (uint64_t)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000BA294(&qword_100BC47B8);
  __chkstk_darwin(v9);
  v64 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for MoonScrubberViewModel(0);
  v11 = __chkstk_darwin(v63);
  v60 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v61 = (uint64_t)&v59 - v13;
  v14 = sub_1000BA294(&qword_100BC47C0);
  __chkstk_darwin(v14);
  v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1000BA294(&qword_100BC47C8);
  v18 = __chkstk_darwin(v17);
  v62 = (uint64_t)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v59 - v21;
  v23 = __chkstk_darwin(v20);
  v25 = (char *)&v59 - v24;
  __chkstk_darwin(v23);
  v27 = (char *)&v59 - v26;
  v28 = type metadata accessor for MoonScrubberInput(0);
  v29 = __chkstk_darwin(v28);
  v31 = (char *)&v59 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v33 = (char *)&v59 - v32;
  a1(a3 + 64);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28) == 1)
  {
    sub_100021A14((uint64_t)v27, &qword_100BC47C8);
    return;
  }
  sub_10007802C((uint64_t)v27, (uint64_t)v33, type metadata accessor for MoonScrubberInput);
  sub_100080C0C((uint64_t)v33, (uint64_t)v25, type metadata accessor for MoonScrubberInput);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v28);
  sub_100182030();
  v34 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_100037768((uint64_t)v25, (uint64_t)v16, &qword_100BC47C8);
  sub_100037768((uint64_t)v22, v34, &qword_100BC47C8);
  v35 = (uint64_t)v33;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v28) != 1)
  {
    v36 = v62;
    sub_100037768((uint64_t)v16, v62, &qword_100BC47C8);
    if (_s7Weather24LocationCompositionStateOwet_0(v34, 1, v28) != 1)
    {
      sub_10007802C(v34, (uint64_t)v31, type metadata accessor for MoonScrubberInput);
      v44 = sub_10034DCAC(v36, (uint64_t)v31);
      sub_1000215BC((uint64_t)v31, type metadata accessor for MoonScrubberInput);
      sub_100021A14((uint64_t)v22, &qword_100BC47C8);
      sub_100021A14((uint64_t)v25, &qword_100BC47C8);
      sub_1000215BC(v36, type metadata accessor for MoonScrubberInput);
      sub_100021A14((uint64_t)v16, &qword_100BC47C8);
      if ((v44 & 1) != 0)
        goto LABEL_15;
LABEL_9:
      v37 = (uint64_t)v64;
      v66(v35);
      if (_s7Weather24LocationCompositionStateOwet_0(v37, 1, v63) == 1)
      {
        sub_100021A14(v37, &qword_100BC47B8);
        v38 = v69;
      }
      else
      {
        v39 = v61;
        sub_10007802C(v37, v61, type metadata accessor for MoonScrubberViewModel);
        v40 = (uint64_t)v60;
        v38 = v69;
        sub_10017B048();
        v41 = sub_1001C9F48(v39, v40);
        sub_1000215BC(v40, type metadata accessor for MoonScrubberViewModel);
        if ((v41 & 1) == 0)
        {
          if (qword_100BC2490 != -1)
            swift_once(&qword_100BC2490, sub_100159750);
          v46 = v35;
          v47 = type metadata accessor for Logger(0);
          v48 = sub_1000AECD4(v47, (uint64_t)qword_100CAF198);
          v49 = Logger.logObject.getter(v48);
          v50 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v49, v50))
          {
            v51 = swift_slowAlloc(22, -1);
            v52 = swift_slowAlloc(64, -1);
            v72[0] = v52;
            *(_DWORD *)v51 = 136446466;
            v71 = sub_1000CE1C8(0xD000000000000011, 0x80000001009F1700, v72);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, v72);
            *(_WORD *)(v51 + 12) = 2082;
            v71 = sub_1000CE1C8(0xD000000000000015, 0x80000001009F1720, v72);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, v72);
            _os_log_impl((void *)&_mh_execute_header, v49, v50, "Selector observed model difference for %{public}s, %{public}s; views will update",
              (uint8_t *)v51,
              0x16u);
            swift_arrayDestroy(v52, 2);
            swift_slowDealloc(v52, -1, -1);
            swift_slowDealloc(v51, -1, -1);
          }

          v53 = sub_1000BA294(&qword_100BC47D0);
          v54 = v68;
          v55 = v68 + *(int *)(v53 + 48);
          sub_100080C0C(v46, v68, type metadata accessor for MoonScrubberInput);
          sub_100080C0C(v39, v55, type metadata accessor for MoonScrubberViewModel);
          swift_storeEnumTagMultiPayload(v54, v67, 1);
          v56 = v38 + *(_QWORD *)(*(_QWORD *)v38 + 120);
          swift_beginAccess(v56, v72, 33, 0);
          sub_1000A3908(v54, v56, &qword_100BC47B0);
          swift_endAccess(v72);
          v57 = sub_1000BA294(&qword_100BC47D8);
          sub_10003D2DC(&qword_100BC47E0, &qword_100BC47D8);
          v58 = ObservableObject<>.objectWillChange.getter(v57);
          ObservableObjectPublisher.send()();
          swift_release(v58);
          sub_1000215BC(v39, type metadata accessor for MoonScrubberViewModel);
          v45 = v46;
          goto LABEL_21;
        }
        sub_1000215BC(v39, type metadata accessor for MoonScrubberViewModel);
      }
      sub_1000BA294(&qword_100BC47D0);
      v42 = v68;
      sub_100080C0C(v35, v68, type metadata accessor for MoonScrubberInput);
      sub_10017B048();
      sub_1000215BC(v35, type metadata accessor for MoonScrubberInput);
      swift_storeEnumTagMultiPayload(v42, v67, 1);
      v43 = v38 + *(_QWORD *)(*(_QWORD *)v38 + 120);
      swift_beginAccess(v43, v72, 33, 0);
      sub_1000A3908(v42, v43, &qword_100BC47B0);
      swift_endAccess(v72);
      return;
    }
    sub_100021A14((uint64_t)v22, &qword_100BC47C8);
    sub_100021A14((uint64_t)v25, &qword_100BC47C8);
    sub_1000215BC(v36, type metadata accessor for MoonScrubberInput);
LABEL_8:
    sub_100021A14((uint64_t)v16, &qword_100BC47C0);
    goto LABEL_9;
  }
  sub_100021A14((uint64_t)v22, &qword_100BC47C8);
  sub_100021A14((uint64_t)v25, &qword_100BC47C8);
  if (_s7Weather24LocationCompositionStateOwet_0(v34, 1, v28) != 1)
    goto LABEL_8;
  sub_100021A14((uint64_t)v16, &qword_100BC47C8);
LABEL_15:
  v45 = v35;
LABEL_21:
  sub_1000215BC(v45, type metadata accessor for MoonScrubberInput);
}

void sub_10019A66C(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  void (*v66)(uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72[3];

  v65 = a6;
  v66 = a5;
  v69 = a4;
  v70 = a2;
  v67 = sub_1000BA294(&qword_100BC47E8);
  __chkstk_darwin(v67);
  v68 = (uint64_t)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000BA294(&qword_100BC47F0);
  __chkstk_darwin(v9);
  v64 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for SunriseSunsetDetailViewModel(0);
  v11 = __chkstk_darwin(v63);
  v60 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v61 = (uint64_t)&v59 - v13;
  v14 = sub_1000BA294(&qword_100BC47F8);
  __chkstk_darwin(v14);
  v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1000BA294(&qword_100BC4800);
  v18 = __chkstk_darwin(v17);
  v62 = (uint64_t)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v59 - v21;
  v23 = __chkstk_darwin(v20);
  v25 = (char *)&v59 - v24;
  __chkstk_darwin(v23);
  v27 = (char *)&v59 - v26;
  v28 = type metadata accessor for SunriseSunsetDetailInput(0);
  v29 = __chkstk_darwin(v28);
  v31 = (char *)&v59 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v33 = (char *)&v59 - v32;
  a1(a3 + 64);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28) == 1)
  {
    sub_100021A14((uint64_t)v27, &qword_100BC4800);
    return;
  }
  sub_10007802C((uint64_t)v27, (uint64_t)v33, type metadata accessor for SunriseSunsetDetailInput);
  sub_100080C0C((uint64_t)v33, (uint64_t)v25, type metadata accessor for SunriseSunsetDetailInput);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v28);
  sub_100182030();
  v34 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_100037768((uint64_t)v25, (uint64_t)v16, &qword_100BC4800);
  sub_100037768((uint64_t)v22, v34, &qword_100BC4800);
  v35 = (uint64_t)v33;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v28) != 1)
  {
    v36 = v62;
    sub_100037768((uint64_t)v16, v62, &qword_100BC4800);
    if (_s7Weather24LocationCompositionStateOwet_0(v34, 1, v28) != 1)
    {
      sub_10007802C(v34, (uint64_t)v31, type metadata accessor for SunriseSunsetDetailInput);
      v44 = sub_1003CDA2C(v36, (uint64_t)v31);
      sub_1000215BC((uint64_t)v31, type metadata accessor for SunriseSunsetDetailInput);
      sub_100021A14((uint64_t)v22, &qword_100BC4800);
      sub_100021A14((uint64_t)v25, &qword_100BC4800);
      sub_1000215BC(v36, type metadata accessor for SunriseSunsetDetailInput);
      sub_100021A14((uint64_t)v16, &qword_100BC4800);
      if ((v44 & 1) != 0)
        goto LABEL_15;
LABEL_9:
      v37 = (uint64_t)v64;
      v66(v35);
      if (_s7Weather24LocationCompositionStateOwet_0(v37, 1, v63) == 1)
      {
        sub_100021A14(v37, &qword_100BC47F0);
        v38 = v69;
      }
      else
      {
        v39 = v61;
        sub_10007802C(v37, v61, type metadata accessor for SunriseSunsetDetailViewModel);
        v40 = (uint64_t)v60;
        v38 = v69;
        sub_10017B048();
        v41 = sub_100581A50(v39, v40);
        sub_1000215BC(v40, type metadata accessor for SunriseSunsetDetailViewModel);
        if ((v41 & 1) == 0)
        {
          if (qword_100BC2490 != -1)
            swift_once(&qword_100BC2490, sub_100159750);
          v46 = v35;
          v47 = type metadata accessor for Logger(0);
          v48 = sub_1000AECD4(v47, (uint64_t)qword_100CAF198);
          v49 = Logger.logObject.getter(v48);
          v50 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v49, v50))
          {
            v51 = swift_slowAlloc(22, -1);
            v52 = swift_slowAlloc(64, -1);
            v72[0] = v52;
            *(_DWORD *)v51 = 136446466;
            v71 = sub_1000CE1C8(0xD000000000000018, 0x80000001009F1740, v72);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, v72);
            *(_WORD *)(v51 + 12) = 2082;
            v71 = sub_1000CE1C8(0xD00000000000001CLL, 0x80000001009F1760, v72);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, v72);
            _os_log_impl((void *)&_mh_execute_header, v49, v50, "Selector observed model difference for %{public}s, %{public}s; views will update",
              (uint8_t *)v51,
              0x16u);
            swift_arrayDestroy(v52, 2);
            swift_slowDealloc(v52, -1, -1);
            swift_slowDealloc(v51, -1, -1);
          }

          v53 = sub_1000BA294(&qword_100BC4808);
          v54 = v68;
          v55 = v68 + *(int *)(v53 + 48);
          sub_100080C0C(v46, v68, type metadata accessor for SunriseSunsetDetailInput);
          sub_100080C0C(v39, v55, type metadata accessor for SunriseSunsetDetailViewModel);
          swift_storeEnumTagMultiPayload(v54, v67, 1);
          v56 = v38 + *(_QWORD *)(*(_QWORD *)v38 + 120);
          swift_beginAccess(v56, v72, 33, 0);
          sub_1000A3908(v54, v56, &qword_100BC47E8);
          swift_endAccess(v72);
          v57 = sub_1000BA294(&qword_100BC4810);
          sub_10003D2DC((unint64_t *)&qword_100BC4818, &qword_100BC4810);
          v58 = ObservableObject<>.objectWillChange.getter(v57);
          ObservableObjectPublisher.send()();
          swift_release(v58);
          sub_1000215BC(v39, type metadata accessor for SunriseSunsetDetailViewModel);
          v45 = v46;
          goto LABEL_21;
        }
        sub_1000215BC(v39, type metadata accessor for SunriseSunsetDetailViewModel);
      }
      sub_1000BA294(&qword_100BC4808);
      v42 = v68;
      sub_100080C0C(v35, v68, type metadata accessor for SunriseSunsetDetailInput);
      sub_10017B048();
      sub_1000215BC(v35, type metadata accessor for SunriseSunsetDetailInput);
      swift_storeEnumTagMultiPayload(v42, v67, 1);
      v43 = v38 + *(_QWORD *)(*(_QWORD *)v38 + 120);
      swift_beginAccess(v43, v72, 33, 0);
      sub_1000A3908(v42, v43, &qword_100BC47E8);
      swift_endAccess(v72);
      return;
    }
    sub_100021A14((uint64_t)v22, &qword_100BC4800);
    sub_100021A14((uint64_t)v25, &qword_100BC4800);
    sub_1000215BC(v36, type metadata accessor for SunriseSunsetDetailInput);
LABEL_8:
    sub_100021A14((uint64_t)v16, &qword_100BC47F8);
    goto LABEL_9;
  }
  sub_100021A14((uint64_t)v22, &qword_100BC4800);
  sub_100021A14((uint64_t)v25, &qword_100BC4800);
  if (_s7Weather24LocationCompositionStateOwet_0(v34, 1, v28) != 1)
    goto LABEL_8;
  sub_100021A14((uint64_t)v16, &qword_100BC4800);
LABEL_15:
  v45 = v35;
LABEL_21:
  sub_1000215BC(v45, type metadata accessor for SunriseSunsetDetailInput);
}

double sub_10019AED0(void (*a1)(id *__return_ptr, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(id *__return_ptr, id *))
{
  double result;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  char v14;
  void *v15;
  uint64_t v16;
  char v17;
  id v18;
  uint64_t v19;
  char v20;
  id v21;
  char v22;
  uint64_t v23;
  char v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  id v58;
  id v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  char v63;
  id v64;
  uint64_t v65;
  BOOL v66;

  a1(&v61, a3 + 64);
  v8 = v61;
  if (v61)
  {
    v9 = v62;
    v10 = v63 & 1;
    v64 = v61;
    v65 = v62;
    v66 = (_DWORD)v10 != 0;
    v11 = v61;
    v12 = sub_100182B6C();
    if (v12)
    {
      v15 = v12;
      v16 = v13;
      v17 = v14 & 1;
      v58 = v11;
      LOBYTE(v16) = sub_10083CA10((uint64_t)v58, v9, v10, (uint64_t)v15, v16, v17);

      if ((v16 & 1) != 0)
      {

        return result;
      }
    }
    else
    {

    }
    a5(&v61, &v64);
    v18 = v61;
    if (!v61)
      goto LABEL_9;
    v19 = v62;
    v20 = v63 & 1;
    v21 = sub_10017B254();
    v24 = sub_1001B51A4((uint64_t)v18, v19, v20, (uint64_t)v21, v23, v22 & 1);

    if ((v24 & 1) != 0)
    {

LABEL_9:
      v25 = v11;
      v26 = sub_10017B254();
      v28 = v27;
      v30 = v29;

      swift_beginAccess(a4 + 16, &v61, 1, 0);
      v31 = *(void **)(a4 + 16);
      v32 = *(_QWORD *)(a4 + 24);
      v33 = *(_QWORD *)(a4 + 32);
      v34 = *(void **)(a4 + 40);
      v35 = *(_QWORD *)(a4 + 48);
      *(_QWORD *)(a4 + 16) = v8;
      *(_QWORD *)(a4 + 24) = v9;
      *(_QWORD *)(a4 + 32) = v10;
      *(_QWORD *)(a4 + 40) = v26;
      *(_QWORD *)(a4 + 48) = v28;
      v36 = *(unsigned __int8 *)(a4 + 56);
      *(_BYTE *)(a4 + 56) = v30 & 1;
      v37 = *(_BYTE *)(a4 + 57);
      *(_BYTE *)(a4 + 57) = 1;
      sub_10019E598(v31, v32, v33, v34, v35, v36, v37);
      return result;
    }
    if (qword_100BC2490 != -1)
      swift_once(&qword_100BC2490, sub_100159750);
    v38 = type metadata accessor for Logger(0);
    v39 = sub_1000AECD4(v38, (uint64_t)qword_100CAF198);
    v40 = Logger.logObject.getter(v39);
    v41 = static os_log_type_t.default.getter();
    v59 = (id)v19;
    v57 = v20;
    if (os_log_type_enabled(v40, v41))
    {
      v42 = swift_slowAlloc(22, -1);
      v43 = (void *)swift_slowAlloc(64, -1);
      v61 = v43;
      *(_DWORD *)v42 = 136446466;
      v60 = sub_1000CE1C8(0x756E654D7473694CLL, 0xED00007475706E49, (uint64_t *)&v61);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61);
      *(_WORD *)(v42 + 12) = 2082;
      v60 = sub_1000CE1C8(0xD000000000000011, 0x80000001009F1780, (uint64_t *)&v61);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61);
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "Selector observed model difference for %{public}s, %{public}s; views will update",
        (uint8_t *)v42,
        0x16u);
      swift_arrayDestroy(v43, 2);
      swift_slowDealloc(v43, -1, -1);
      swift_slowDealloc(v42, -1, -1);
    }

    v45 = v64;
    v44 = v65;
    v46 = v66;
    swift_beginAccess(a4 + 16, &v61, 1, 0);
    v47 = *(void **)(a4 + 16);
    v48 = *(_QWORD *)(a4 + 24);
    v49 = *(_QWORD *)(a4 + 32);
    v50 = *(void **)(a4 + 40);
    v51 = *(_QWORD *)(a4 + 48);
    *(_QWORD *)(a4 + 16) = v45;
    *(_QWORD *)(a4 + 24) = v44;
    *(_QWORD *)(a4 + 32) = v46;
    *(_QWORD *)(a4 + 40) = v18;
    *(_QWORD *)(a4 + 48) = v59;
    v52 = *(unsigned __int8 *)(a4 + 56);
    *(_BYTE *)(a4 + 56) = v57;
    LOBYTE(v46) = *(_BYTE *)(a4 + 57);
    *(_BYTE *)(a4 + 57) = 1;
    v53 = v45;
    v54 = v18;
    sub_10019E598(v47, v48, v49, v50, v51, v52, v46);
    v55 = sub_1000BA294(&qword_100BC4820);
    sub_10003D2DC(&qword_100BC4828, &qword_100BC4820);
    v56 = ObservableObject<>.objectWillChange.getter(v55);
    ObservableObjectPublisher.send()();

    *(_QWORD *)&result = swift_release(v56).n128_u64[0];
  }
  return result;
}

void sub_10019B308(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(char *), uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71[3];

  v66 = a6;
  v67 = a5;
  v68 = a4;
  v69 = a2;
  v62 = sub_1000BA294(&qword_100BC4830);
  __chkstk_darwin(v62);
  v63 = (uint64_t)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000BA294(&qword_100BC4838);
  __chkstk_darwin(v9);
  v64 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = type metadata accessor for MoonCalendarViewModel(0);
  v11 = __chkstk_darwin(v65);
  v59 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v60 = (uint64_t)&v58 - v13;
  v14 = sub_1000BA294(&qword_100BC4840);
  __chkstk_darwin(v14);
  v16 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1000BA294(&qword_100BC4848);
  v18 = __chkstk_darwin(v17);
  v61 = (uint64_t)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v58 - v21;
  v23 = __chkstk_darwin(v20);
  v25 = (char *)&v58 - v24;
  __chkstk_darwin(v23);
  v27 = (char *)&v58 - v26;
  v28 = type metadata accessor for MoonCalendarInput(0);
  v29 = __chkstk_darwin(v28);
  v31 = (char *)&v58 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v33 = (char *)&v58 - v32;
  a1(a3 + 64);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28) == 1)
  {
    sub_100021A14((uint64_t)v27, &qword_100BC4848);
    return;
  }
  sub_10007802C((uint64_t)v27, (uint64_t)v33, type metadata accessor for MoonCalendarInput);
  sub_100080C0C((uint64_t)v33, (uint64_t)v25, type metadata accessor for MoonCalendarInput);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v28);
  v34 = v68;
  sub_100182030();
  v35 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_100037768((uint64_t)v25, (uint64_t)v16, &qword_100BC4848);
  sub_100037768((uint64_t)v22, v35, &qword_100BC4848);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v28) != 1)
  {
    v36 = v61;
    sub_100037768((uint64_t)v16, v61, &qword_100BC4848);
    if (_s7Weather24LocationCompositionStateOwet_0(v35, 1, v28) != 1)
    {
      sub_10007802C(v35, (uint64_t)v31, type metadata accessor for MoonCalendarInput);
      v44 = sub_100561C90(v36, (uint64_t)v31);
      sub_1000215BC((uint64_t)v31, type metadata accessor for MoonCalendarInput);
      sub_100021A14((uint64_t)v22, &qword_100BC4848);
      sub_100021A14((uint64_t)v25, &qword_100BC4848);
      sub_1000215BC(v36, type metadata accessor for MoonCalendarInput);
      sub_100021A14((uint64_t)v16, &qword_100BC4848);
      if (v44)
        goto LABEL_16;
LABEL_9:
      v37 = (uint64_t)v64;
      v67(v33);
      if (_s7Weather24LocationCompositionStateOwet_0(v37, 1, v65) == 1)
      {
        sub_100021A14(v37, &qword_100BC4838);
      }
      else
      {
        v38 = v60;
        sub_10007802C(v37, v60, type metadata accessor for MoonCalendarViewModel);
        v39 = (uint64_t)v59;
        sub_10017B048();
        sub_10019F894(v38, v39);
        if ((v40 & 1) == 0 || (sub_100947318(), (v41 & 1) == 0))
        {
          sub_1000215BC(v39, type metadata accessor for MoonCalendarViewModel);
          if (qword_100BC2490 != -1)
            swift_once(&qword_100BC2490, sub_100159750);
          v46 = type metadata accessor for Logger(0);
          v47 = sub_1000AECD4(v46, (uint64_t)qword_100CAF198);
          v48 = Logger.logObject.getter(v47);
          v49 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v48, v49))
          {
            v50 = swift_slowAlloc(22, -1);
            v51 = swift_slowAlloc(64, -1);
            v71[0] = v51;
            *(_DWORD *)v50 = 136446466;
            v70 = sub_1000CE1C8(0xD000000000000011, 0x80000001009F17A0, v71);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v70, v71);
            *(_WORD *)(v50 + 12) = 2082;
            v70 = sub_1000CE1C8(0xD000000000000015, 0x80000001009F17C0, v71);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v70, v71);
            _os_log_impl((void *)&_mh_execute_header, v48, v49, "Selector observed model difference for %{public}s, %{public}s; views will update",
              (uint8_t *)v50,
              0x16u);
            swift_arrayDestroy(v51, 2);
            swift_slowDealloc(v51, -1, -1);
            swift_slowDealloc(v50, -1, -1);
          }

          v52 = sub_1000BA294(&qword_100BC4850);
          v53 = v63;
          v54 = v63 + *(int *)(v52 + 48);
          sub_100080C0C((uint64_t)v33, v63, type metadata accessor for MoonCalendarInput);
          sub_100080C0C(v38, v54, type metadata accessor for MoonCalendarViewModel);
          swift_storeEnumTagMultiPayload(v53, v62, 1);
          v55 = v34 + *(_QWORD *)(*(_QWORD *)v34 + 120);
          swift_beginAccess(v55, v71, 33, 0);
          sub_1000A3908(v53, v55, &qword_100BC4830);
          swift_endAccess(v71);
          v56 = sub_1000BA294(&qword_100BC4858);
          sub_10003D2DC((unint64_t *)&qword_100BC4860, &qword_100BC4858);
          v57 = ObservableObject<>.objectWillChange.getter(v56);
          ObservableObjectPublisher.send()();
          swift_release(v57);
          sub_1000215BC(v38, type metadata accessor for MoonCalendarViewModel);
          v45 = (uint64_t)v33;
          goto LABEL_22;
        }
        sub_1000215BC(v39, type metadata accessor for MoonCalendarViewModel);
        sub_1000215BC(v38, type metadata accessor for MoonCalendarViewModel);
      }
      sub_1000BA294(&qword_100BC4850);
      v42 = v63;
      sub_100080C0C((uint64_t)v33, v63, type metadata accessor for MoonCalendarInput);
      sub_10017B048();
      sub_1000215BC((uint64_t)v33, type metadata accessor for MoonCalendarInput);
      swift_storeEnumTagMultiPayload(v42, v62, 1);
      v43 = v34 + *(_QWORD *)(*(_QWORD *)v34 + 120);
      swift_beginAccess(v43, v71, 33, 0);
      sub_1000A3908(v42, v43, &qword_100BC4830);
      swift_endAccess(v71);
      return;
    }
    sub_100021A14((uint64_t)v22, &qword_100BC4848);
    sub_100021A14((uint64_t)v25, &qword_100BC4848);
    sub_1000215BC(v36, type metadata accessor for MoonCalendarInput);
LABEL_8:
    sub_100021A14((uint64_t)v16, &qword_100BC4840);
    goto LABEL_9;
  }
  sub_100021A14((uint64_t)v22, &qword_100BC4848);
  sub_100021A14((uint64_t)v25, &qword_100BC4848);
  if (_s7Weather24LocationCompositionStateOwet_0(v35, 1, v28) != 1)
    goto LABEL_8;
  sub_100021A14((uint64_t)v16, &qword_100BC4848);
LABEL_16:
  v45 = (uint64_t)v33;
LABEL_22:
  sub_1000215BC(v45, type metadata accessor for MoonCalendarInput);
}

void sub_10019BB70(void (*a1)(uint64_t, __n128), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  void (*v66)(uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72[3];

  v65 = a6;
  v66 = a5;
  v69 = a4;
  v70 = a2;
  v67 = sub_1000BA294(&qword_100BC4868);
  __chkstk_darwin(v67);
  v68 = (uint64_t)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000BA294(&qword_100BC4870);
  __chkstk_darwin(v9);
  v64 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for HomeAndWorkRefinementViewModel(0);
  __chkstk_darwin(v63);
  v60 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v61 = (uint64_t)&v59 - v13;
  v14 = sub_1000BA294(&qword_100BC4878);
  __chkstk_darwin(v14);
  v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1000BA294(&qword_100BC4880);
  __chkstk_darwin(v17);
  v62 = (uint64_t)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v59 - v20;
  __chkstk_darwin(v22);
  v24 = (char *)&v59 - v23;
  __chkstk_darwin(v25);
  v27 = (char *)&v59 - v26;
  v28 = type metadata accessor for HomeAndWorkRefinementInput(0);
  __chkstk_darwin(v28);
  v30 = (char *)&v59 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __chkstk_darwin(v31);
  v34 = (char *)&v59 - v33;
  a1(a3 + 64, v32);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28) == 1)
  {
    sub_100021A14((uint64_t)v27, &qword_100BC4880);
    return;
  }
  sub_10007802C((uint64_t)v27, (uint64_t)v34, type metadata accessor for HomeAndWorkRefinementInput);
  sub_100080C0C((uint64_t)v34, (uint64_t)v24, type metadata accessor for HomeAndWorkRefinementInput);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v28);
  sub_100182030();
  v35 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_100037768((uint64_t)v24, (uint64_t)v16, &qword_100BC4880);
  sub_100037768((uint64_t)v21, v35, &qword_100BC4880);
  v36 = (uint64_t)v34;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v28) != 1)
  {
    v37 = v62;
    sub_100037768((uint64_t)v16, v62, &qword_100BC4880);
    if (_s7Weather24LocationCompositionStateOwet_0(v35, 1, v28) != 1)
    {
      sub_10007802C(v35, (uint64_t)v30, type metadata accessor for HomeAndWorkRefinementInput);
      v45 = sub_10049C0F4(v37, (uint64_t)v30);
      sub_1000215BC((uint64_t)v30, type metadata accessor for HomeAndWorkRefinementInput);
      sub_100021A14((uint64_t)v21, &qword_100BC4880);
      sub_100021A14((uint64_t)v24, &qword_100BC4880);
      sub_1000215BC(v37, type metadata accessor for HomeAndWorkRefinementInput);
      sub_100021A14((uint64_t)v16, &qword_100BC4880);
      if ((v45 & 1) != 0)
        goto LABEL_15;
LABEL_9:
      v38 = (uint64_t)v64;
      v66(v36);
      if (_s7Weather24LocationCompositionStateOwet_0(v38, 1, v63) == 1)
      {
        sub_100021A14(v38, &qword_100BC4870);
        v39 = v69;
      }
      else
      {
        v40 = v61;
        sub_10007802C(v38, v61, type metadata accessor for HomeAndWorkRefinementViewModel);
        v41 = (uint64_t)v60;
        v39 = v69;
        sub_10017B048();
        v42 = sub_10092EA5C(v40, v41);
        sub_1000215BC(v41, type metadata accessor for HomeAndWorkRefinementViewModel);
        if ((v42 & 1) == 0)
        {
          if (qword_100BC2490 != -1)
            swift_once(&qword_100BC2490, sub_100159750);
          v47 = v36;
          v48 = type metadata accessor for Logger(0);
          v49 = sub_1000AECD4(v48, (uint64_t)qword_100CAF198);
          v50 = Logger.logObject.getter(v49);
          v51 = static os_log_type_t.default.getter(v50);
          if (os_log_type_enabled(v50, v51))
          {
            v52 = swift_slowAlloc(22, -1);
            v53 = swift_slowAlloc(64, -1);
            v72[0] = v53;
            *(_DWORD *)v52 = 136446466;
            v71 = sub_1000CE1C8(0xD00000000000001ALL, 0x80000001009F17E0, v72);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, v72);
            *(_WORD *)(v52 + 12) = 2082;
            v71 = sub_1000CE1C8(0xD00000000000001ELL, 0x80000001009F1800, v72);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, v72);
            _os_log_impl((void *)&_mh_execute_header, v50, v51, "Selector observed model difference for %{public}s, %{public}s; views will update",
              (uint8_t *)v52,
              0x16u);
            swift_arrayDestroy(v53, 2);
            swift_slowDealloc(v53, -1, -1);
            swift_slowDealloc(v52, -1, -1);
          }

          v54 = sub_1000BA294(&qword_100BC4888);
          v55 = v68;
          v56 = v68 + *(int *)(v54 + 48);
          sub_100080C0C(v47, v68, type metadata accessor for HomeAndWorkRefinementInput);
          sub_100080C0C(v40, v56, type metadata accessor for HomeAndWorkRefinementViewModel);
          swift_storeEnumTagMultiPayload(v55, v67, 1);
          v57 = v39 + *(_QWORD *)(*(_QWORD *)v39 + 120);
          swift_beginAccess(v57, v72, 33, 0);
          sub_1000A3908(v55, v57, &qword_100BC4868);
          swift_endAccess(v72);
          v58 = sub_1000BA294(&qword_100BC4890);
          sub_10003D2DC((unint64_t *)&qword_100BC4898, &qword_100BC4890);
          ObservableObject<>.objectWillChange.getter(v58);
          ObservableObjectPublisher.send()();
          swift_release();
          sub_1000215BC(v40, type metadata accessor for HomeAndWorkRefinementViewModel);
          v46 = v47;
          goto LABEL_21;
        }
        sub_1000215BC(v40, type metadata accessor for HomeAndWorkRefinementViewModel);
      }
      sub_1000BA294(&qword_100BC4888);
      v43 = v68;
      sub_100080C0C(v36, v68, type metadata accessor for HomeAndWorkRefinementInput);
      sub_10017B048();
      sub_1000215BC(v36, type metadata accessor for HomeAndWorkRefinementInput);
      swift_storeEnumTagMultiPayload(v43, v67, 1);
      v44 = v39 + *(_QWORD *)(*(_QWORD *)v39 + 120);
      swift_beginAccess(v44, v72, 33, 0);
      sub_1000A3908(v43, v44, &qword_100BC4868);
      swift_endAccess(v72);
      return;
    }
    sub_100021A14((uint64_t)v21, &qword_100BC4880);
    sub_100021A14((uint64_t)v24, &qword_100BC4880);
    sub_1000215BC(v37, type metadata accessor for HomeAndWorkRefinementInput);
LABEL_8:
    sub_100021A14((uint64_t)v16, &qword_100BC4878);
    goto LABEL_9;
  }
  sub_100021A14((uint64_t)v21, &qword_100BC4880);
  sub_100021A14((uint64_t)v24, &qword_100BC4880);
  if (_s7Weather24LocationCompositionStateOwet_0(v35, 1, v28) != 1)
    goto LABEL_8;
  sub_100021A14((uint64_t)v16, &qword_100BC4880);
LABEL_15:
  v46 = v36;
LABEL_21:
  sub_1000215BC(v46, type metadata accessor for HomeAndWorkRefinementInput);
}

void sub_10019C3D4(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *__return_ptr, uint64_t), uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int16 *v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  BOOL v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  __int16 *v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _BYTE *v61;
  _BYTE *v62;
  uint64_t v63;
  unsigned __int8 v64;
  uint64_t v65;
  __int16 *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __int16 *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _BYTE v76[12];
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __int16 *v85;
  __int16 *v86;
  uint64_t v87;
  void (*v88)(uint64_t *__return_ptr, uint64_t);
  uint64_t v89;
  _BYTE *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94[13];
  _QWORD v95[12];
  unsigned __int8 v96;
  uint64_t v97;
  void (*v98)(uint64_t *__return_ptr, uint64_t);
  uint64_t v99;
  __int16 *v100;
  uint64_t v101;
  uint64_t v102;
  __int16 *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unsigned __int8 v109;

  v87 = a6;
  v88 = a5;
  v91 = a4;
  v92 = a2;
  v89 = sub_1000BA294(&qword_100BC48A0);
  __chkstk_darwin(v89);
  v90 = &v76[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_1000BA294(&qword_100BC48A8);
  __chkstk_darwin(v9);
  v11 = &v76[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = sub_1000BA294(&qword_100BC48B0);
  v13 = __chkstk_darwin(v12);
  v86 = (__int16 *)&v76[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = __chkstk_darwin(v13);
  v17 = &v76[-v16];
  v18 = __chkstk_darwin(v15);
  v20 = &v76[-v19];
  __chkstk_darwin(v18);
  v22 = &v76[-v21];
  v23 = type metadata accessor for NotificationSettingsInput(0);
  v24 = __chkstk_darwin(v23);
  v85 = (__int16 *)&v76[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v24);
  v27 = &v76[-v26];
  a1(a3 + 64);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v23) == 1)
  {
    sub_100021A14((uint64_t)v22, &qword_100BC48B0);
    return;
  }
  sub_10007802C((uint64_t)v22, (uint64_t)v27, type metadata accessor for NotificationSettingsInput);
  sub_100080C0C((uint64_t)v27, (uint64_t)v20, type metadata accessor for NotificationSettingsInput);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v23);
  v28 = v91;
  sub_100182CA8((uint64_t)v17);
  v29 = (uint64_t)&v11[*(int *)(v9 + 48)];
  sub_100037768((uint64_t)v20, (uint64_t)v11, &qword_100BC48B0);
  sub_100037768((uint64_t)v17, v29, &qword_100BC48B0);
  v30 = v28;
  v31 = (uint64_t)v27;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v23) != 1)
  {
    v32 = v86;
    sub_100037768((uint64_t)v11, (uint64_t)v86, &qword_100BC48B0);
    if (_s7Weather24LocationCompositionStateOwet_0(v29, 1, v23) != 1)
    {
      v44 = v29;
      v45 = v85;
      sub_10007802C(v44, (uint64_t)v85, type metadata accessor for NotificationSettingsInput);
      v46 = sub_100252CA4(v32, v45);
      sub_1000215BC((uint64_t)v45, type metadata accessor for NotificationSettingsInput);
      sub_100021A14((uint64_t)v17, &qword_100BC48B0);
      sub_100021A14((uint64_t)v20, &qword_100BC48B0);
      sub_1000215BC((uint64_t)v32, type metadata accessor for NotificationSettingsInput);
      sub_100021A14((uint64_t)v11, &qword_100BC48B0);
      if ((v46 & 1) != 0)
        goto LABEL_14;
LABEL_9:
      v88(&v97, v31);
      v33 = v109;
      if (v109 <= 0xFDu)
      {
        v92 = v31;
        v34 = v99;
        v35 = v101;
        v36 = v105;
        v37 = v106;
        v38 = v107;
        v39 = v108;
        v40 = v104;
        v87 = v97;
        v88 = v98;
        v95[0] = v97;
        v95[1] = v98;
        v95[2] = v99;
        v95[3] = v100;
        v84 = v102;
        v85 = v100;
        v95[4] = v101;
        v95[5] = v102;
        v86 = v103;
        v95[6] = v103;
        v95[7] = v104;
        v95[8] = v105;
        v95[9] = v106;
        v95[10] = v107;
        v95[11] = v108;
        v96 = v109;
        sub_10017BAA0();
        sub_10019E8B0(v94, &v97);
        v41 = sub_10063F0CC(v95, &v97);
        sub_10019E8EC((uint64_t)&v97, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_10019E948);
        if (!v41)
        {
          v48 = v84;
          v80 = v39;
          v81 = v38;
          v82 = v37;
          v83 = v34;
          v77 = v33;
          v49 = v87;
          v78 = v35;
          if (qword_100BC2490 != -1)
            swift_once(&qword_100BC2490, sub_100159750);
          v50 = v48;
          v79 = v40;
          v51 = type metadata accessor for Logger(0);
          v52 = sub_1000AECD4(v51, (uint64_t)qword_100CAF198);
          v53 = Logger.logObject.getter(v52);
          v54 = static os_log_type_t.default.getter();
          v55 = v36;
          if (os_log_type_enabled(v53, v54))
          {
            v56 = swift_slowAlloc(22, -1);
            v57 = swift_slowAlloc(64, -1);
            v94[0] = v57;
            *(_DWORD *)v56 = 136446466;
            v93 = sub_1000CE1C8(0xD000000000000019, 0x80000001009F1820, v94);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, v94);
            *(_WORD *)(v56 + 12) = 2082;
            v93 = sub_1000CE1C8(0xD00000000000001DLL, 0x80000001009F1840, v94);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, v94);
            _os_log_impl((void *)&_mh_execute_header, v53, v54, "Selector observed model difference for %{public}s, %{public}s; views will update",
              (uint8_t *)v56,
              0x16u);
            swift_arrayDestroy(v57, 2);
            swift_slowDealloc(v57, -1, -1);
            swift_slowDealloc(v56, -1, -1);
          }

          v58 = v49;
          v59 = v82;
          v60 = sub_1000BA294(&qword_100BC48B8);
          v61 = v90;
          v62 = &v90[*(int *)(v60 + 48)];
          sub_100080C0C(v92, (uint64_t)v90, type metadata accessor for NotificationSettingsInput);
          sub_10019E8B0(v95, v62);
          swift_storeEnumTagMultiPayload(v61, v89, 1);
          v63 = v91 + *(_QWORD *)(*(_QWORD *)v91 + 120);
          swift_beginAccess(v63, v94, 33, 0);
          v64 = v77;
          v75 = v59;
          v74 = v55;
          v65 = v58;
          v66 = v85;
          v68 = v78;
          v67 = v79;
          v89 = v55;
          v69 = v50;
          v70 = v50;
          v71 = v86;
          sub_10019E9F4(v65, (uint64_t)v88, v83, (uint64_t)v85, v78, v70, (uint64_t)v86, v79, v74, v75, v81, v80, v77);
          sub_1000A3908((uint64_t)v61, v63, &qword_100BC48A0);
          swift_endAccess(v94);
          v72 = sub_1000BA294(&qword_100BC48C0);
          sub_10003D2DC((unint64_t *)&qword_100BC48C8, &qword_100BC48C0);
          v73 = ObservableObject<>.objectWillChange.getter(v72);
          ObservableObjectPublisher.send()();
          swift_release(v73);
          sub_10019EAA4(v87, (uint64_t)v88, v83, (uint64_t)v66, v68, v69, (uint64_t)v71, v67, v89, v82, v81, v80, v64);
          v47 = v92;
          goto LABEL_20;
        }
        sub_10019EAA4(v87, (uint64_t)v88, v34, (uint64_t)v85, v35, v84, (uint64_t)v86, v40, v36, v37, v38, v39, v33);
        v30 = v91;
        v31 = v92;
      }
      sub_1000BA294(&qword_100BC48B8);
      v42 = v90;
      sub_100080C0C(v31, (uint64_t)v90, type metadata accessor for NotificationSettingsInput);
      sub_10017BAA0();
      sub_1000215BC(v31, type metadata accessor for NotificationSettingsInput);
      swift_storeEnumTagMultiPayload(v42, v89, 1);
      v43 = v30 + *(_QWORD *)(*(_QWORD *)v30 + 120);
      swift_beginAccess(v43, v94, 33, 0);
      sub_1000A3908((uint64_t)v42, v43, &qword_100BC48A0);
      swift_endAccess(v94);
      return;
    }
    sub_100021A14((uint64_t)v17, &qword_100BC48B0);
    sub_100021A14((uint64_t)v20, &qword_100BC48B0);
    sub_1000215BC((uint64_t)v32, type metadata accessor for NotificationSettingsInput);
LABEL_8:
    sub_100021A14((uint64_t)v11, &qword_100BC48A8);
    goto LABEL_9;
  }
  sub_100021A14((uint64_t)v17, &qword_100BC48B0);
  sub_100021A14((uint64_t)v20, &qword_100BC48B0);
  if (_s7Weather24LocationCompositionStateOwet_0(v29, 1, v23) != 1)
    goto LABEL_8;
  sub_100021A14((uint64_t)v11, &qword_100BC48B0);
LABEL_14:
  v47 = v31;
LABEL_20:
  sub_1000215BC(v47, type metadata accessor for NotificationSettingsInput);
}

void sub_10019CC48(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, unint64_t a9)
{
  uint64_t v15;
  uint64_t Strong;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42[3];
  _BYTE v43[24];

  v15 = a1 + 16;
  sub_10009922C(a1 + 16, (uint64_t)v43, 0);
  Strong = swift_weakLoadStrong(v15);
  if (Strong)
  {
    v17 = Strong;
    v18 = Strong + 16;
    v19 = sub_10009922C(Strong + 16, (uint64_t)v42, 32);
    v23 = *(_QWORD *)(v17 + 16);
    if (*(_QWORD *)(v23 + 16) && (v19 = sub_1000BFD34(a2), (v20 & 1) != 0))
    {
      v24 = *(_QWORD *)(*(_QWORD *)(v23 + 56) + 8 * v19);
      sub_10009EE34(v19, v20, v21, v22);
      if (v24 == a3)
      {
LABEL_5:
        sub_10009922C(v18, (uint64_t)v42, 33);
        v25 = sub_10016D6E4();
        v30 = sub_10009EE34(v26, v27, v28, v29, v25);
        a4(v30);
LABEL_12:
        sub_10009925C();
        return;
      }
    }
    else
    {
      sub_10009EE34(v19, v20, v21, v22);
      if (!a3)
        goto LABEL_5;
    }
    if (qword_100BC2490 != -1)
      swift_once(&qword_100BC2490, sub_100159750);
    v31 = type metadata accessor for Logger(0);
    v32 = sub_1000AECD4(v31, (uint64_t)qword_100CAF198);
    v33 = Logger.logObject.getter(v32);
    v34 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = swift_slowAlloc(42, -1);
      v40 = swift_slowAlloc(96, -1);
      v42[0] = v40;
      *(_DWORD *)v35 = 136315906;
      v41 = sub_1000CE1C8(0x746174536E69614DLL, 0xE900000000000065, v42);
      sub_1000CE4EC(v41, v36, v37, v35 + 12);
      *(_WORD *)(v35 + 12) = 2080;
      v41 = sub_1000CE1C8(a6, a7, v42);
      sub_1000CE4EC(v41, v38, v39, v35 + 22);
      *(_WORD *)(v35 + 22) = 2080;
      v41 = sub_1000CE1C8(a8, a9, v42);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, v42);
      *(_WORD *)(v35 + 32) = 2048;
      v41 = a3;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, v42);
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "Debounced state update; another update came through afterwards. Selector=<%s, %s, %s>, Count=%ld",
        (uint8_t *)v35,
        0x2Au);
      swift_arrayDestroy(v40, 3);
      sub_1000986F0(v40);
      sub_1000986F0(v35);
      sub_10009925C();

      return;
    }

    goto LABEL_12;
  }
}

void sub_10019CEF0(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  j__swift_retain_0(*a1);
  *a2 = v3;
}

uint64_t sub_10019CF18@<X0>(void (*a1)(uint64_t *__return_ptr, uint64_t *)@<X0>, uint64_t a2@<X1>, void (**a3)(uint64_t *__return_ptr)@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result;

  result = sub_100122714(a1, a2, *a3);
  *a4 = result;
  return result;
}

uint64_t sub_10019CF64@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_10019CF18(*(void (**)(uint64_t *__return_ptr, uint64_t *))(v1 + 16), *(_QWORD *)(v1 + 24), (void (**)(uint64_t *__return_ptr))(v1 + 32), a1);
}

void sub_10019CF70()
{
  sub_100186E24();
}

void sub_10019CFB0()
{
  sub_10019CF70();
}

uint64_t sub_10019CFBC(uint64_t a1)
{
  return sub_1000A1C88(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001884A8);
}

uint64_t sub_10019CFCC()
{
  return sub_10019E824((uint64_t (*)(_QWORD, _QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))sub_10018FEB0);
}

uint64_t sub_10019CFD8()
{
  uint64_t v0;

  return sub_10091A4FC(*(uint64_t (**)(uint64_t))(v0 + 16));
}

void sub_10019CFE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  sub_1000D0534();
  sub_100099888();
  sub_1000CDB8C(v0, v1, v2, v3, v4, v5, v6, 25, v7);
  sub_1000CC7E4();
}

uint64_t sub_10019D018()
{
  uint64_t v0;

  sub_10009C0B4();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 64, 7);
}

void sub_10019D040(void (*a1)(uint64_t *)@<X0>, void (**a2)(uint64_t *__return_ptr, uint64_t)@<X2>, uint64_t a3@<X8>)
{
  sub_1001848F0(a1, *a2, a3);
}

void sub_10019D054(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_10019D040(*(void (**)(uint64_t *))(v1 + 16), (void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 32), a1);
}

void sub_10019D060(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_10018665C(a1, *(void (**)(uint64_t))(v2 + 16), a2);
}

uint64_t sub_10019D06C(uint64_t a1)
{
  return sub_1000A1C88(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100188A34);
}

uint64_t sub_10019D07C()
{
  return sub_10019E824((uint64_t (*)(_QWORD, _QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))sub_10019045C);
}

void sub_10019D08C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  unint64_t v5;

  sub_1000D0534();
  sub_1000BA330();
  sub_1000CDB8C(v0, v1, v2, v3, v4, 0x617465446E6F6F4DLL, 0xEF7475706E496C69, 19, v5);
  sub_1000CC7E4();
}

uint64_t sub_10019D0D8@<X0>(void (*a1)(uint64_t *__return_ptr, uint64_t *)@<X0>, uint64_t a2@<X1>, void (**a3)(uint64_t *__return_ptr)@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result;

  result = sub_100122714(a1, a2, *a3);
  *a4 = result;
  return result;
}

uint64_t sub_10019D124@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_10019D0D8(*(void (**)(uint64_t *__return_ptr, uint64_t *))(v1 + 16), *(_QWORD *)(v1 + 24), (void (**)(uint64_t *__return_ptr))(v1 + 32), a1);
}

_QWORD *sub_10019D130@<X0>(uint64_t *a1@<X0>, _QWORD *(*a2)(uint64_t *__return_ptr, uint64_t *)@<X1>, uint64_t a3@<X8>)
{
  return sub_1001867F8(*a1, a2, a3);
}

_QWORD *sub_10019D138@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10019D130(a1, *(_QWORD *(**)(uint64_t *__return_ptr, uint64_t *))(v2 + 16), a2);
}

uint64_t sub_10019D144(uint64_t a1)
{
  return sub_1000A1C88(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100188FC0);
}

uint64_t sub_10019D154()
{
  return sub_10019E824((uint64_t (*)(_QWORD, _QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))sub_100190CC4);
}

void sub_10019D164()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  sub_1000D0534();
  sub_100099888();
  sub_1000CDB8C(v0, v1, v2, v3, v4, v5, v6, 22, v7);
  sub_1000CC7E4();
}

double sub_10019D198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double result;
  uint64_t v23;

  v14 = a7;
  v15 = a6;
  v16 = a5;
  v17 = a4;
  v18 = a3;
  v19 = a2;
  v20 = a11;
  v21 = a9;
  switch(a14)
  {
    case 2:
      return sub_10019D2B8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
    case 1:
      v23 = a8;
      swift_release(a1);
      a11 = a12;
      a12 = a13;
      a9 = a10;
      a10 = v20;
      a1 = v19;
      a2 = v18;
      a3 = v17;
      a4 = v16;
      a5 = v15;
      a6 = v14;
      a7 = v23;
      a8 = v21;
      return sub_10019D2B8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
    case 0:
      swift_release(a2);
      *(_QWORD *)&result = swift_release(v17).n128_u64[0];
      break;
  }
  return result;
}

double sub_10019D2B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  double result;

  if (a1 < 0)
  {
    swift_bridgeObjectRelease(a3);
    swift_bridgeObjectRelease(a5);
    swift_bridgeObjectRelease(a7);
    swift_bridgeObjectRelease(a12);
    *(_QWORD *)&result = swift_bridgeObjectRelease(a10).n128_u64[0];
  }
  else
  {
    swift_release(a1);
  }
  return result;
}

void sub_10019D314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  if ((~a1 & 0xF000000000000006) != 0)
    sub_10019D33C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
}

void sub_10019D33C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  if (a1 < 0)
  {
    swift_bridgeObjectRetain(a10);
    swift_bridgeObjectRetain(a12);
    swift_bridgeObjectRetain(a3);
    swift_bridgeObjectRetain(a5);
    swift_bridgeObjectRetain(a7);
  }
  else
  {
    swift_retain(a1);
  }
}

double sub_10019D398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  double result;

  if ((~a1 & 0xF000000000000006) != 0)
    return sub_10019D2B8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
  return result;
}

void sub_10019D3C0(void (*a1)(uint64_t *)@<X0>, void (**a2)(uint64_t *__return_ptr, uint64_t)@<X2>, uint64_t a3@<X8>)
{
  sub_100184AAC(a1, *a2, a3);
}

void sub_10019D3D4(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_10019D3C0(*(void (**)(uint64_t *))(v1 + 16), (void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 32), a1);
}

void sub_10019D3E0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_100186950(a1, *(void (**)(uint64_t))(v2 + 16), a2);
}

uint64_t sub_10019D3E8()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10019D410(uint64_t a1)
{
  return sub_1000A1C88(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10018954C);
}

uint64_t sub_10019D420()
{
  return sub_10019E824((uint64_t (*)(_QWORD, _QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))sub_100191464);
}

uint64_t sub_10019D42C()
{
  uint64_t v0;

  sub_10009884C();
  return swift_deallocObject(v0, 32, 7);
}

void sub_10019D450()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  sub_1000E7B94();
  sub_1000BA330();
  sub_1000C1980(v0, v1, v2, v3, v4, 20, 0x80000001009F1370, v5, v6);
  sub_1000CC7E4();
}

uint64_t sub_10019D498@<X0>(void (*a1)(uint64_t *__return_ptr, uint64_t *)@<X0>, void (**a2)(uint64_t *__return_ptr)@<X2>, uint64_t a3@<X8>)
{
  return sub_100184C5C(a1, *a2, a3);
}

uint64_t sub_10019D4AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10019D498(*(void (**)(uint64_t *__return_ptr, uint64_t *))(v1 + 16), (void (**)(uint64_t *__return_ptr))(v1 + 32), a1);
}

void sub_10019D4B8(_OWORD *a1@<X0>, void (*a2)(_OWORD *)@<X1>, uint64_t a3@<X8>)
{
  __int128 v3;
  _OWORD v4[2];
  _OWORD v5[2];

  v3 = a1[1];
  v4[0] = *a1;
  v4[1] = v3;
  v5[0] = a1[2];
  *(_OWORD *)((char *)v5 + 10) = *(_OWORD *)((char *)a1 + 42);
  sub_100186AE0(v4, a2, a3);
}

void sub_10019D4F0(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_10019D4B8(a1, *(void (**)(_OWORD *))(v2 + 16), a2);
}

uint64_t sub_10019D4FC(uint64_t a1)
{
  return sub_1000A1C88(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100189AD8);
}

uint64_t sub_10019D50C()
{
  return sub_10019E824((uint64_t (*)(_QWORD, _QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))sub_100191CC8);
}

void sub_10019D51C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  sub_1000E7B94();
  sub_1000BA330();
  sub_1000C1980(v0, v1, v2, v3, v4, 23, 0x80000001009F13B0, v5, v6);
  sub_1000CC7E4();
}

uint64_t sub_10019D564(uint64_t result, char a2)
{
  if (a2 == 1)
    return swift_bridgeObjectRetain(result);
  return result;
}

uint64_t sub_10019D578(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  __int16 v9;

  v2 = *(void **)(a1 + 64);
  v3 = *(void **)(a1 + 72);
  v4 = *(void **)(a1 + 80);
  v5 = *(void **)(a1 + 88);
  v6 = *(void **)(a1 + 96);
  v7 = *(void **)(a1 + 104);
  v8 = *(_QWORD *)(a1 + 112);
  v9 = *(_WORD *)(a1 + 120);
  sub_10019D608(*(void **)a1, *(void **)(a1 + 8), *(void **)(a1 + 16), *(void **)(a1 + 24), *(void **)(a1 + 32), *(void **)(a1 + 40), *(_QWORD *)(a1 + 48), *(_WORD *)(a1 + 56));
  sub_10019D608(v2, v3, v4, v5, v6, v7, v8, v9);
  return a1;
}

double sub_10019D608(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, uint64_t a7, char a8)
{
  double result;

  if (a1 != (void *)1)
  {

    return sub_10019D680(a7, a8);
  }
  return result;
}

double sub_10019D680(uint64_t a1, char a2)
{
  double result;

  if (a2 == 1)
    *(_QWORD *)&result = swift_bridgeObjectRelease(a1).n128_u64[0];
  return result;
}

uint64_t sub_10019D694(uint64_t result, void *a2, void *a3, void *a4, void *a5, void *a6, uint64_t a7, char a8)
{
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;

  if (result != 1)
  {
    v14 = (void *)result;
    v15 = a6;
    v16 = v14;
    v17 = a2;
    v18 = a3;
    v19 = a4;
    v20 = a5;
    return sub_10019D564(a7, a8);
  }
  return result;
}

void sub_10019D70C(void (*a1)(uint64_t *)@<X0>, void (**a2)(uint64_t *__return_ptr, uint64_t)@<X2>, uint64_t a3@<X8>)
{
  sub_100184DD0(a1, *a2, a3);
}

void sub_10019D720(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_10019D70C(*(void (**)(uint64_t *))(v1 + 16), (void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 32), a1);
}

void sub_10019D72C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_100186C88(a1, *(void (**)(uint64_t))(v2 + 16), a2);
}

uint64_t sub_10019D738(uint64_t a1)
{
  return sub_1000A1C88(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10018A064);
}

uint64_t sub_10019D748()
{
  return sub_10019E824((uint64_t (*)(_QWORD, _QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))sub_1001925B0);
}

void sub_10019D758()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  unint64_t v5;

  sub_1000D0534();
  sub_1000BA330();
  sub_1000CDB8C(v0, v1, v2, v3, v4, 0x656B636950796144, 0xEE007475706E4972, 18, v5);
  sub_1000CC7E4();
}

uint64_t sub_10019D7A4@<X0>(void (*a1)(uint64_t *__return_ptr, uint64_t *)@<X0>, uint64_t a2@<X1>, void (**a3)(uint64_t *__return_ptr)@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result;

  result = sub_100122714(a1, a2, *a3);
  *a4 = result;
  return result;
}

uint64_t sub_10019D7F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_10019D7A4(*(void (**)(uint64_t *__return_ptr, uint64_t *))(v1 + 16), *(_QWORD *)(v1 + 24), (void (**)(uint64_t *__return_ptr))(v1 + 32), a1);
}

void sub_10019D7FC()
{
  sub_100186E24();
}

void sub_10019D83C()
{
  sub_10019D7FC();
}

uint64_t sub_10019D848(uint64_t a1)
{
  return sub_1000A1C88(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10018A5F0);
}

uint64_t sub_10019D858()
{
  return sub_10019E824((uint64_t (*)(_QWORD, _QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))sub_100192E9C);
}

void sub_10019D868()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  sub_1000D0534();
  sub_100099888();
  sub_1000CDB8C(v0, v1, v2, v3, v4, v5, v6, 16, v7);
  sub_1000CC7E4();
}

void sub_10019D89C(void (*a1)(uint64_t *)@<X0>, void (**a2)(uint64_t *__return_ptr, __n128)@<X2>, uint64_t a3@<X8>)
{
  sub_100184F8C(a1, *a2, a3);
}

void sub_10019D8B0(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_10019D89C(*(void (**)(uint64_t *))(v1 + 16), (void (**)(uint64_t *__return_ptr, __n128))(v1 + 32), a1);
}

void sub_10019D8BC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_100186F44(a1, *(void (**)(uint64_t, __n128))(v2 + 16), a2);
}

uint64_t sub_10019D8C8(uint64_t a1)
{
  return sub_1000A1C88(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10018AB7C);
}

uint64_t sub_10019D8D8()
{
  return sub_10019E824((uint64_t (*)(_QWORD, _QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))sub_100193448);
}

void sub_10019D8E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  sub_10009BBE8();
  sub_100109870();
  sub_1000BA330();
  sub_1000FC450();
  sub_1000C1980(v0, v1, v2, v3, v4, 16, v5, v6, v7);
  sub_1000CC7E4();
}

uint64_t sub_10019D928(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, void (**a3)(uint64_t *__return_ptr))
{
  return sub_10018513C(a1, a2, *a3);
}

uint64_t sub_10019D93C()
{
  uint64_t v0;

  return sub_10019D928(*(void (**)(uint64_t *__return_ptr, uint64_t *))(v0 + 16), *(_QWORD *)(v0 + 24), (void (**)(uint64_t *__return_ptr))(v0 + 32));
}

void sub_10019D948(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = sub_1001870D4(*(void (**)(uint64_t *__return_ptr))(v1 + 16)) & 1;
  sub_10004A298();
}

uint64_t sub_10019D974(uint64_t a1)
{
  return sub_1000A1C88(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10018B108);
}

uint64_t sub_10019D984()
{
  return sub_10019E824((uint64_t (*)(_QWORD, _QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))sub_100193CAC);
}

void sub_10019D994()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  sub_100109870();
  sub_1000BA330();
  sub_1000C1980(v0, v1, v2, v3, v4, 25, 0x80000001009F1470, v5, v6);
  sub_1000CC7E4();
}

uint64_t sub_10019D9DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if (!a5)
  {
    swift_release(a2);
    return swift_release(a4);
  }
  return result;
}

void sub_10019DA10(void (*a1)(uint64_t *)@<X0>, void (**a2)(uint64_t *__return_ptr, uint64_t)@<X2>, uint64_t a3@<X8>)
{
  sub_100185274(a1, *a2, a3);
}

void sub_10019DA24(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_10019DA10(*(void (**)(uint64_t *))(v1 + 16), (void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 32), a1);
}

void sub_10019DA30(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1001871E4(a1, *(void (**)(uint64_t))(v2 + 16), a2);
}

uint64_t sub_10019DA3C(uint64_t a1)
{
  return sub_1000A1C88(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10018B694);
}

uint64_t sub_10019DA4C()
{
  return sub_10019E824((uint64_t (*)(_QWORD, _QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))sub_100193F94);
}

void sub_10019DA5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  sub_1000E7B94();
  sub_1000BA330();
  sub_1000C1980(v0, v1, v2, v3, v4, 20, 0x80000001009F14B0, v5, v6);
  sub_1000CC7E4();
}

void sub_10019DAA4(void (*a1)(uint64_t *)@<X0>, void (**a2)(uint64_t *__return_ptr, uint64_t)@<X2>, uint64_t a3@<X8>)
{
  sub_100185424(a1, *a2, a3);
}

void sub_10019DAB8(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_10019DAA4(*(void (**)(uint64_t *))(v1 + 16), (void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 32), a1);
}

void sub_10019DAC4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_100187374(a1, *(void (**)(uint64_t))(v2 + 16), a2);
}

uint64_t sub_10019DAD0(uint64_t a1)
{
  return sub_1000A1C88(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10018BC20);
}

uint64_t sub_10019DAE0()
{
  return sub_10019E824((uint64_t (*)(_QWORD, _QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))sub_1001947F8);
}

void sub_10019DAF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  sub_100109870();
  sub_1000BA330();
  sub_1000C1980(v0, v1, v2, v3, v4, 19, 0x80000001009F14F0, v5, v6);
  sub_1000CC7E4();
}

void sub_10019DB38(void (*a1)(uint64_t *)@<X0>, void (**a2)(uint64_t *__return_ptr, uint64_t)@<X2>, uint64_t a3@<X8>)
{
  sub_1001855D4(a1, *a2, a3);
}

void sub_10019DB4C(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_10019DB38(*(void (**)(uint64_t *))(v1 + 16), (void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 32), a1);
}

void sub_10019DB58(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_100187504(a1, *(void (**)(uint64_t))(v2 + 16), a2);
}

uint64_t sub_10019DB64(uint64_t a1)
{
  return sub_1000A1C88(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10018C1AC);
}

uint64_t sub_10019DB74()
{
  return sub_10019E824((uint64_t (*)(_QWORD, _QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))sub_10019505C);
}

void sub_10019DB84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  sub_10009BBE8();
  sub_100109870();
  sub_1000BA330();
  sub_1000FC450();
  sub_1000C1980(v0, v1, v2, v3, v4, 32, v5, v6, v7);
  sub_1000CC7E4();
}

uint64_t sub_10019DBD0()
{
  return sub_10019E824((uint64_t (*)(_QWORD, _QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))sub_100196128);
}

void sub_10019DBE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  unint64_t v5;

  sub_1000D0534();
  sub_1000BA330();
  sub_1000CDB8C(v0, v1, v2, v3, v4, 0xD000000000000013, 0x80000001009F1590, 19, v5);
  sub_1000CC7E4();
}

uint64_t sub_10019DC30()
{
  return sub_10019E824((uint64_t (*)(_QWORD, _QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))sub_1001958C0);
}

void sub_10019DC40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  unint64_t v5;

  sub_1000D0534();
  sub_1000BA330();
  sub_1000CDB8C(v0, v1, v2, v3, v4, 0x6E6F697461636F4CLL, 0xED00007475706E49, 17, v5);
  sub_1000CC7E4();
}

uint64_t sub_10019DC98()
{
  return sub_10019E824((uint64_t (*)(_QWORD, _QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))sub_1001971EC);
}

void sub_10019DCA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  sub_10009BBE8();
  sub_1000BA330();
  sub_1000FC450();
  sub_1000CDB8C(v0, v1, v2, v3, v4, v5, v6, 31, v7);
  sub_1000CC7E4();
}

uint64_t sub_10019DCFC()
{
  return sub_10019E824((uint64_t (*)(_QWORD, _QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))sub_100196988);
}

void sub_10019DD0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  sub_100109870();
  sub_1000BA330();
  sub_1000C1980(v0, v1, v2, v3, v4, 19, 0x80000001009F1640, v5, v6);
  sub_1000CC7E4();
}

void sub_10019DD54(void (*a1)(uint64_t *)@<X0>, void (**a2)(uint64_t *__return_ptr, __n128)@<X2>, uint64_t a3@<X8>)
{
  sub_100185784(a1, *a2, a3);
}

void sub_10019DD68(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_10019DD54(*(void (**)(uint64_t *))(v1 + 16), (void (**)(uint64_t *__return_ptr, __n128))(v1 + 32), a1);
}

void sub_10019DD74(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_100187694(a1, *(void (**)(uint64_t, __n128))(v2 + 16), a2);
}

uint64_t sub_10019DD80(uint64_t a1)
{
  return sub_1000A1C88(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10018C738);
}

uint64_t sub_10019DD90()
{
  return sub_10019E824((uint64_t (*)(_QWORD, _QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))sub_100197A60);
}

void sub_10019DDA0()
{
  uint64_t v0;

  sub_1000BEC20(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(void (**)(uint64_t))(v0 + 40), *(_QWORD *)(v0 + 48), 0x75706E497473694CLL, 0xE900000000000074, 0x7473694Cu, 0xED00006C65646F4DLL);
  sub_1000CC7E4();
}

uint64_t sub_10019DDF8@<X0>(void (*a1)(uint64_t *__return_ptr, uint64_t *)@<X0>, uint64_t a2@<X1>, void (**a3)(uint64_t *__return_ptr)@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result;

  result = sub_100122714(a1, a2, *a3);
  *a4 = result;
  return result;
}

uint64_t sub_10019DE4C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_10019DDF8(*(void (**)(uint64_t *__return_ptr, uint64_t *))(v1 + 16), *(_QWORD *)(v1 + 24), (void (**)(uint64_t *__return_ptr))(v1 + 32), a1);
}

_QWORD *sub_10019DE58@<X0>(uint64_t *a1@<X0>, _QWORD *(*a2)(_OWORD *__return_ptr, uint64_t *)@<X1>, uint64_t a3@<X8>)
{
  return sub_10018782C(*a1, a2, a3);
}

_QWORD *sub_10019DE60@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10019DE58(a1, *(_QWORD *(**)(_OWORD *__return_ptr, uint64_t *))(v2 + 16), a2);
}

uint64_t sub_10019DE6C(uint64_t a1)
{
  return sub_1000A1C88(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10018CCC4);
}

uint64_t sub_10019DE7C()
{
  return sub_10019E824((uint64_t (*)(_QWORD, _QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))sub_1001982C8);
}

void sub_10019DE8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  sub_1000D0534();
  sub_100099888();
  sub_10019CC48(v0, v1, v2, v3, v4, v5, v6, 0x6956686372616553, v7);
  sub_1000CC7E4();
}

double sub_10019DECC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, char a15)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double result;
  uint64_t v24;
  uint64_t v25;

  v15 = a6;
  v16 = a5;
  v17 = a4;
  v18 = a3;
  v19 = a2;
  v20 = a13;
  v21 = a11;
  v22 = a9;
  switch(a15)
  {
    case 2:
      return sub_10019DFF0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
    case 1:
      v24 = a7;
      v25 = a8;
      swift_release(a1);
      LOBYTE(a13) = a14;
      a11 = a12;
      a12 = v20;
      a9 = a10;
      a10 = v21;
      a1 = v19;
      a2 = v18;
      a3 = v17;
      a4 = v16;
      a5 = v15;
      a6 = v24;
      a7 = v25;
      a8 = v22;
      return sub_10019DFF0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
    case 0:
      swift_release(a2);
      *(_QWORD *)&result = swift_release(v17).n128_u64[0];
      break;
  }
  return result;
}

double sub_10019DFF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  uint64_t v13;
  double result;

  if (!a13)
  {
    a10 = a6;
    a12 = a4;
    a5 = a1;
    a7 = a2;
LABEL_6:
    swift_bridgeObjectRelease(a5);
    swift_bridgeObjectRelease(a7);
    a1 = a12;
    v13 = a10;
    goto LABEL_7;
  }
  v13 = a3;
  if (a13 != 2)
  {
    if (a13 != 1)
      return result;
    swift_bridgeObjectRelease(a3);
    goto LABEL_6;
  }
LABEL_7:
  swift_bridgeObjectRelease(a1);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v13).n128_u64[0];
  return result;
}

void *sub_10019E094(const void *a1, void *a2)
{
  initializeWithTake for SearchViewModel(a2, a1);
  return a2;
}

uint64_t sub_10019E0D0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned __int8 a13)
{
  if (a13 != 255)
    return sub_10019E0F8(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
  return result;
}

uint64_t sub_10019E0F8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  uint64_t v13;

  v13 = result;
  if (!a13)
  {
    a3 = a2;
    a5 = a4;
    a7 = a6;
LABEL_6:
    swift_bridgeObjectRetain(v13);
    swift_bridgeObjectRetain(a3);
    v13 = a5;
    a3 = a7;
    goto LABEL_7;
  }
  if (a13 != 2)
  {
    if (a13 != 1)
      return result;
    v13 = a12;
    swift_bridgeObjectRetain(a10);
    goto LABEL_6;
  }
LABEL_7:
  swift_bridgeObjectRetain(v13);
  return swift_bridgeObjectRetain(a3);
}

double sub_10019E190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned __int8 a13)
{
  double result;

  if (a13 != 255)
    return sub_10019DFF0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
  return result;
}

void sub_10019E1B8(void (*a1)(uint64_t *)@<X0>, void (**a2)(uint64_t *__return_ptr, uint64_t)@<X2>, uint64_t a3@<X8>)
{
  sub_10018593C(a1, *a2, a3);
}

void sub_10019E1CC(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_10019E1B8(*(void (**)(uint64_t *))(v1 + 16), (void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 32), a1);
}

uint64_t sub_10019E1D8@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t *__return_ptr)@<X1>, uint64_t a3@<X8>)
{
  uint64_t result;

  result = sub_100187968(a1, a2);
  *(_WORD *)a3 = result;
  *(_BYTE *)(a3 + 2) = BYTE2(result) & 1;
  *(_BYTE *)(a3 + 3) = BYTE3(result);
  return result;
}

uint64_t sub_10019E214@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10019E1D8(a1, *(void (**)(uint64_t *__return_ptr))(v2 + 16), a2);
}

uint64_t sub_10019E220(uint64_t a1)
{
  return sub_1000A1C88(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10018D250);
}

uint64_t sub_10019E230()
{
  return sub_10019E824((uint64_t (*)(_QWORD, _QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))sub_10019887C);
}

void sub_10019E240()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  sub_1000E7B94();
  sub_1000BA330();
  sub_1000C1980(v0, v1, v2, v3, v4, 23, 0x80000001009F1680, v5, v6);
  sub_1000CC7E4();
}

uint64_t sub_10019E294()
{
  return sub_10019E824((uint64_t (*)(_QWORD, _QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))sub_100198FA8);
}

void sub_10019E2A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  sub_100099888();
  sub_1000BEC20(v0, v1, v2, v3, v4, v5, v6, 0x6E69614Du, v7);
  sub_1000CC7E4();
}

void sub_10019E2E4(void (*a1)(uint64_t *)@<X0>, void (**a2)(uint64_t *__return_ptr, uint64_t)@<X2>, uint64_t a3@<X8>)
{
  sub_100185AEC(a1, *a2, a3);
}

void sub_10019E2F8(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_10019E2E4(*(void (**)(uint64_t *))(v1 + 16), (void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 32), a1);
}

void sub_10019E304(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_100187A7C(a1, *(void (**)(uint64_t))(v2 + 16), a2);
}

uint64_t sub_10019E310(uint64_t a1)
{
  return sub_1000A1C88(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10018D7DC);
}

uint64_t sub_10019E320()
{
  return sub_10019E824((uint64_t (*)(_QWORD, _QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))sub_10019955C);
}

void sub_10019E330()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  sub_100109870();
  sub_1000BA330();
  sub_1000C1980(v0, v1, v2, v3, v4, 19, 0x80000001009F16C0, v5, v6);
  sub_1000CC7E4();
}

void sub_10019E378(void (*a1)(uint64_t *)@<X0>, void (**a2)(uint64_t *__return_ptr, uint64_t)@<X2>, uint64_t a3@<X8>)
{
  sub_100185C9C(a1, *a2, a3);
}

void sub_10019E38C(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_10019E378(*(void (**)(uint64_t *))(v1 + 16), (void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 32), a1);
}

void sub_10019E398(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_100187C0C(a1, *(void (**)(uint64_t))(v2 + 16), a2);
}

uint64_t sub_10019E3A4(uint64_t a1)
{
  return sub_1000A1C88(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10018DD68);
}

uint64_t sub_10019E3B4()
{
  return sub_10019E824((uint64_t (*)(_QWORD, _QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))sub_100199E08);
}

void sub_10019E3C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  sub_100109870();
  sub_1000BA330();
  sub_1000C1980(v0, v1, v2, v3, v4, 17, 0x80000001009F1700, v5, v6);
  sub_1000CC7E4();
}

void sub_10019E40C(void (*a1)(uint64_t *)@<X0>, void (**a2)(uint64_t *__return_ptr, uint64_t)@<X2>, uint64_t a3@<X8>)
{
  sub_100185E4C(a1, *a2, a3);
}

void sub_10019E420(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_10019E40C(*(void (**)(uint64_t *))(v1 + 16), (void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 32), a1);
}

void sub_10019E42C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_100187D9C(a1, *(void (**)(uint64_t))(v2 + 16), a2);
}

uint64_t sub_10019E438(uint64_t a1)
{
  return sub_1000A1C88(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10018E2F4);
}

uint64_t sub_10019E448()
{
  return sub_10019E824((uint64_t (*)(_QWORD, _QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))sub_10019A66C);
}

void sub_10019E458()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  sub_10009BBE8();
  sub_100109870();
  sub_1000BA330();
  sub_1000FC450();
  sub_1000C1980(v0, v1, v2, v3, v4, 24, v5, v6, v7);
  sub_1000CC7E4();
}

uint64_t sub_10019E498@<X0>(void (*a1)(uint64_t *__return_ptr, uint64_t *)@<X0>, uint64_t a2@<X1>, void (**a3)(uint64_t *__return_ptr)@<X2>, uint64_t a4@<X8>)
{
  uint64_t result;
  uint64_t v6;
  char v7;

  result = sub_100185FFC(a1, a2, *a3);
  *(_QWORD *)a4 = result;
  *(_QWORD *)(a4 + 8) = v6;
  *(_BYTE *)(a4 + 16) = v7 & 1;
  return result;
}

uint64_t sub_10019E4D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10019E498(*(void (**)(uint64_t *__return_ptr, uint64_t *))(v1 + 16), *(_QWORD *)(v1 + 24), (void (**)(uint64_t *__return_ptr))(v1 + 32), a1);
}

uint64_t sub_10019E4E0@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t *__return_ptr, _QWORD *)@<X1>, uint64_t a3@<X8>)
{
  uint64_t result;
  uint64_t v5;
  char v6;

  result = sub_100187F2C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), a2);
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = v6 & 1;
  return result;
}

uint64_t sub_10019E520@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10019E4E0(a1, *(void (**)(uint64_t *__return_ptr, _QWORD *))(v2 + 16), a2);
}

uint64_t sub_10019E52C(uint64_t a1)
{
  return sub_1000A1C88(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10018E880);
}

uint64_t sub_10019E53C()
{
  return sub_10019E824((uint64_t (*)(_QWORD, _QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))sub_10019AED0);
}

void sub_10019E54C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  unint64_t v5;

  sub_1000D0534();
  sub_1000BA330();
  sub_1000CDB8C(v0, v1, v2, v3, v4, 0x756E654D7473694CLL, 0xED00007475706E49, 17, v5);
  sub_1000CC7E4();
}

void sub_10019E598(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, char a7)
{
  switch(a7)
  {
    case 2:
      goto LABEL_6;
    case 1:

      a1 = a4;
LABEL_6:

      return;
    case 0:
      swift_release(a2);
      swift_release(a4);
      break;
  }
}

void sub_10019E5FC(void (*a1)(uint64_t *)@<X0>, void (**a2)(uint64_t *__return_ptr, uint64_t)@<X2>, uint64_t a3@<X8>)
{
  sub_10018614C(a1, *a2, a3);
}

void sub_10019E610(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_10019E5FC(*(void (**)(uint64_t *))(v1 + 16), (void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 32), a1);
}

void sub_10019E61C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_10018805C(a1, *(void (**)(uint64_t))(v2 + 16), a2);
}

uint64_t sub_10019E628(uint64_t a1)
{
  return sub_1000A1C88(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10018EE0C);
}

uint64_t sub_10019E638()
{
  return sub_10019E824((uint64_t (*)(_QWORD, _QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))sub_10019B308);
}

void sub_10019E648()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  sub_100109870();
  sub_1000BA330();
  sub_1000C1980(v0, v1, v2, v3, v4, 17, 0x80000001009F17A0, v5, v6);
  sub_1000CC7E4();
}

void sub_10019E690(void (*a1)(uint64_t *)@<X0>, void (**a2)(uint64_t *__return_ptr, __n128)@<X2>, uint64_t a3@<X8>)
{
  sub_1001862FC(a1, *a2, a3);
}

void sub_10019E6A4(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_10019E690(*(void (**)(uint64_t *))(v1 + 16), (void (**)(uint64_t *__return_ptr, __n128))(v1 + 32), a1);
}

void sub_10019E6B0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1001881EC(a1, *(void (**)(uint64_t, __n128))(v2 + 16), a2);
}

uint64_t sub_10019E6BC(uint64_t a1)
{
  return sub_1000A1C88(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10018F398);
}

uint64_t sub_10019E6CC()
{
  return sub_10019E824((uint64_t (*)(_QWORD, _QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))sub_10019BB70);
}

void sub_10019E6DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  sub_10009BBE8();
  sub_100109870();
  sub_1000BA330();
  sub_1000FC450();
  sub_1000C1980(v0, v1, v2, v3, v4, 26, v5, v6, v7);
  sub_1000CC7E4();
}

void sub_10019E71C(void (*a1)(uint64_t *)@<X0>, void (**a2)(uint64_t *__return_ptr, uint64_t)@<X2>, uint64_t a3@<X8>)
{
  sub_1001864AC(a1, *a2, a3);
}

uint64_t sub_10019E730()
{
  uint64_t v0;

  sub_10009884C();
  swift_release(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

void sub_10019E760(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_10019E71C(*(void (**)(uint64_t *))(v1 + 16), (void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 32), a1);
}

_QWORD *sub_10019E76C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10018837C(*(_QWORD *(**)(_OWORD *__return_ptr))(v1 + 16), a1);
}

uint64_t sub_10019E778()
{
  _QWORD *v0;

  sub_10009C0B4();
  swift_release(v0[4]);
  swift_release(v0[6]);
  swift_release(v0[8]);
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10019E7B0(uint64_t a1)
{
  return sub_1000A1C88(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10018F924);
}

uint64_t sub_10019E7C0()
{
  _QWORD *v0;

  sub_10009884C();
  if (v0[7])
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 4);
  swift_bridgeObjectRelease();
  swift_release(v0[11]);
  swift_release(v0[12]);
  swift_release(v0[13]);
  swift_release(v0[15]);
  return swift_deallocObject(v0, 128, 7);
}

uint64_t sub_10019E818()
{
  return sub_10019E824((uint64_t (*)(_QWORD, _QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))sub_10019C3D4);
}

uint64_t sub_10019E824(uint64_t (*a1)(_QWORD, _QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[2], v1[3], v1 + 4, v1[13], v1[14], v1[15]);
}

uint64_t sub_10019E840()
{
  uint64_t v0;

  sub_10009C0B4();
  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

void sub_10019E868()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  sub_100109870();
  sub_1000BA330();
  sub_1000C1980(v0, v1, v2, v3, v4, 25, 0x80000001009F1820, v5, v6);
  sub_1000CC7E4();
}

void *sub_10019E8B0(const void *a1, void *a2)
{
  initializeWithTake for SearchViewModel(a2, a1);
  return a2;
}

uint64_t sub_10019E8EC(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  char v4;

  v4 = *(_BYTE *)(a1 + 96);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), v4);
  return a1;
}

double sub_10019E948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  double result;

  if ((a13 & 0xC0) == 0x40)
    return sub_10019E978(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13 & 1);
  return result;
}

double sub_10019E978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  uint64_t v17;
  uint64_t v18;
  double result;

  if ((a13 & 1) != 0)
  {
    swift_bridgeObjectRelease(a3);
    v17 = a5;
    v18 = a7;
  }
  else
  {
    a12 = a6;
    v18 = a4;
    v17 = a2;
    a10 = a9;
  }
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v18);
  swift_bridgeObjectRelease(a12);
  *(_QWORD *)&result = swift_bridgeObjectRelease(a10).n128_u64[0];
  return result;
}

uint64_t sub_10019E9F4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  if ((a13 & 0xC0) == 0x40)
    return sub_10019EA24(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13 & 1);
  return result;
}

uint64_t sub_10019EA24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  uint64_t v17;
  uint64_t v18;

  if ((a13 & 1) != 0)
  {
    swift_bridgeObjectRetain(a10);
    v17 = a3;
    v18 = a5;
  }
  else
  {
    v18 = a6;
    v17 = a4;
    a12 = a2;
    a7 = a9;
  }
  swift_bridgeObjectRetain(a12);
  swift_bridgeObjectRetain(v17);
  swift_bridgeObjectRetain(v18);
  return swift_bridgeObjectRetain(a7);
}

double sub_10019EAA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned __int8 a13)
{
  double result;

  if (a13 <= 0xFDu)
    return sub_10019E948(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
  return result;
}

char *sub_10019EDB8(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t, __n128);
  __n128 v25;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for TimeZone(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = type metadata accessor for Date(0);
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    v12(&a1[a3[6]], &a2[a3[6]], v11);
    v12(&a1[a3[7]], &a2[a3[7]], v11);
    v13 = a3[8];
    v14 = &a1[v13];
    v15 = &a2[v13];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&a2[v13], 1, v11))
    {
      v16 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      v12(v14, v15, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v11);
    }
    v18 = a3[9];
    v19 = a3[10];
    v20 = *(_QWORD *)&a2[v18];
    *(_QWORD *)&a1[v18] = v20;
    v21 = &a1[v19];
    v22 = &a2[v19];
    v23 = type metadata accessor for MoonPhase.Hemisphere(0);
    v24 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v23 - 8) + 16);
    v25 = swift_bridgeObjectRetain(v20);
    v24(v21, v22, v23, v25);
  }
  return a1;
}

uint64_t sub_10019EF44(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  v6 = type metadata accessor for Date(0);
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v5, v6);
  v7(a1 + a2[6], v6);
  v7(a1 + a2[7], v6);
  v8 = a1 + a2[8];
  if (!_s7Weather24LocationCompositionStateOwet_0(v8, 1, v6))
    v7(v8, v6);
  swift_bridgeObjectRelease();
  v9 = a1 + a2[10];
  v10 = type metadata accessor for MoonPhase.Hemisphere(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

uint64_t sub_10019F02C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  void (*v11)(void *, const void *, uint64_t);
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v23;

  v6 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for Date(0);
  v11 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  v11((void *)(a1 + a3[6]), (const void *)(a2 + a3[6]), v10);
  v11((void *)(a1 + a3[7]), (const void *)(a2 + a3[7]), v10);
  v12 = a3[8];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  if (_s7Weather24LocationCompositionStateOwet_0(a2 + v12, 1, v10))
  {
    v15 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v11(v13, v14, v10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v10);
  }
  v16 = a3[9];
  v17 = a3[10];
  v18 = *(_QWORD *)(a2 + v16);
  *(_QWORD *)(a1 + v16) = v18;
  v19 = a1 + v17;
  v20 = a2 + v17;
  v21 = type metadata accessor for MoonPhase.Hemisphere(0);
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v21 - 8) + 16);
  v23 = swift_bridgeObjectRetain(v18);
  v22(v19, v20, v21, v23);
  return a1;
}

uint64_t sub_10019F18C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void *, const void *, uint64_t);
  uint64_t v13;
  void *v14;
  const void *v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for Date(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 24);
  v12(v8, v9, v10);
  v12((void *)(a1 + a3[6]), (const void *)(a2 + a3[6]), v10);
  v12((void *)(a1 + a3[7]), (const void *)(a2 + a3[7]), v10);
  v13 = a3[8];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  v16 = _s7Weather24LocationCompositionStateOwet_0(a1 + v13, 1, v10);
  v17 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v10);
  if (!v16)
  {
    if (!v17)
    {
      v12(v14, v15, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v14, v10);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    v18 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v14, v15, v10);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v10);
LABEL_7:
  v19 = a3[9];
  v20 = *(_QWORD *)(a2 + v19);
  *(_QWORD *)(a1 + v19) = v20;
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRelease();
  v21 = a3[10];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = type metadata accessor for MoonPhase.Hemisphere(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 24))(v22, v23, v24);
  return a1;
}

uint64_t sub_10019F340(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  void (*v11)(void *, const void *, uint64_t);
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for Date(0);
  v11 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v11((void *)(a1 + a3[6]), (const void *)(a2 + a3[6]), v10);
  v11((void *)(a1 + a3[7]), (const void *)(a2 + a3[7]), v10);
  v12 = a3[8];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  if (_s7Weather24LocationCompositionStateOwet_0(a2 + v12, 1, v10))
  {
    v15 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v11(v13, v14, v10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v10);
  }
  v16 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = type metadata accessor for MoonPhase.Hemisphere(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  return a1;
}

uint64_t sub_10019F494(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void *, const void *, uint64_t);
  uint64_t v13;
  void *v14;
  const void *v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for Date(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  v12((void *)(a1 + a3[6]), (const void *)(a2 + a3[6]), v10);
  v12((void *)(a1 + a3[7]), (const void *)(a2 + a3[7]), v10);
  v13 = a3[8];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  v16 = _s7Weather24LocationCompositionStateOwet_0(a1 + v13, 1, v10);
  v17 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v10);
  if (!v16)
  {
    if (!v17)
    {
      v12(v14, v15, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v14, v10);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    v18 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v14, v15, v10);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v10);
LABEL_7:
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRelease();
  v19 = a3[10];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = type metadata accessor for MoonPhase.Hemisphere(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t sub_10019F640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10019F64C);
}

void sub_10019F64C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;

  sub_1000E6E70();
  sub_100088FF0();
  if (v9)
  {
    v7 = v6;
    v8 = v4;
  }
  else
  {
    sub_100098778();
    sub_100088FF0();
    if (v9)
    {
      v7 = v10;
      v11 = a3[5];
    }
    else
    {
      sub_1000BA294((uint64_t *)&unk_100BD35A0);
      sub_100088FF0();
      if (v12)
      {
        v7 = v13;
        v11 = a3[8];
      }
      else
      {
        if ((_DWORD)v3 == 0x7FFFFFFF)
        {
          sub_100079F70();
          return;
        }
        v7 = type metadata accessor for MoonPhase.Hemisphere(0);
        v11 = a3[10];
      }
    }
    v8 = v4 + v11;
  }
  sub_1000B250C(v8, v3, v7);
}

uint64_t sub_10019F6FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10019F708);
}

void sub_10019F708(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;

  sub_1000E6E70();
  sub_10009D2E8();
  if (v11)
  {
    v9 = v8;
    v10 = v5;
  }
  else
  {
    sub_100098778();
    sub_10009D2E8();
    if (v11)
    {
      v9 = v12;
      v13 = a4[5];
    }
    else
    {
      sub_1000BA294((uint64_t *)&unk_100BD35A0);
      sub_10009D2E8();
      if (v14)
      {
        v9 = v15;
        v13 = a4[8];
      }
      else
      {
        if (a3 == 0x7FFFFFFF)
        {
          *(_QWORD *)(v5 + a4[9]) = (v4 - 1);
          sub_100079F70();
          return;
        }
        v9 = type metadata accessor for MoonPhase.Hemisphere(0);
        v13 = a4[10];
      }
    }
    v10 = v5 + v13;
  }
  sub_1000987C4(v10, v4, v4, v9);
}

uint64_t type metadata accessor for CalendarViewModel(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC4928, (uint64_t)&nominal type descriptor for CalendarViewModel);
}

void sub_10019F7C8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;

  v2 = type metadata accessor for TimeZone(319);
  if (v3 <= 0x3F)
  {
    v10 = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for Date(319);
    if (v5 <= 0x3F)
    {
      v11 = *(_QWORD *)(v4 - 8) + 64;
      v12 = v11;
      v13 = v11;
      sub_10015BB24(319);
      if (v7 <= 0x3F)
      {
        v14 = *(_QWORD *)(v6 - 8) + 64;
        v15 = (char *)&value witness table for Builtin.BridgeObject + 64;
        v8 = type metadata accessor for MoonPhase.Hemisphere(319);
        if (v9 <= 0x3F)
        {
          v16 = *(_QWORD *)(v8 - 8) + 64;
          swift_initStructMetadata(a1, 256, 7, &v10, a1 + 16);
        }
      }
    }
  }
}

void sub_10019F894(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  void (*v29)(uint64_t, uint64_t);
  int *v30;
  char v31;
  int *v32;
  uint64_t v33;

  v4 = sub_100098778();
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  sub_100098728();
  v8 = v7 - v6;
  v9 = sub_1000BA294(&qword_100BC4978);
  sub_1000B42B0();
  __chkstk_darwin(v10);
  sub_100098728();
  v13 = v12 - v11;
  sub_1000BA294((uint64_t *)&unk_100BD35A0);
  sub_1000B42B0();
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v32 - v19;
  __chkstk_darwin(v18);
  v22 = (char *)&v32 - v21;
  if ((static TimeZone.== infix(_:_:)(a1, a2) & 1) == 0)
    goto LABEL_16;
  v33 = v4;
  v23 = (int *)type metadata accessor for CalendarViewModel(0);
  if ((sub_1000C08AC(v23[5]) & 1) == 0 || (sub_1000C08AC(v23[6]) & 1) == 0 || (sub_1000C08AC(v23[7]) & 1) == 0)
    goto LABEL_16;
  sub_10007C714(a1 + v23[8], (uint64_t)v22);
  v32 = v23;
  sub_10007C714(a2 + v23[8], (uint64_t)v20);
  v24 = v13 + *(int *)(v9 + 48);
  sub_10007C714((uint64_t)v22, v13);
  sub_10007C714((uint64_t)v20, v24);
  v25 = v33;
  if (_s7Weather24LocationCompositionStateOwet_0(v13, 1, v33) == 1)
  {
    sub_1000B43C0((uint64_t)v20);
    sub_1000B43C0((uint64_t)v22);
    sub_100098750(v24);
    if (!v26)
      goto LABEL_12;
    sub_100021A68(v13, (uint64_t *)&unk_100BD35A0);
LABEL_14:
    v30 = v32;
    sub_1001F4638();
    if ((v31 & 1) != 0)
      static MoonPhase.Hemisphere.== infix(_:_:)(a1 + v30[10], a2 + v30[10]);
    goto LABEL_16;
  }
  sub_10007C714(v13, (uint64_t)v17);
  sub_100098750(v24);
  if (v26)
  {
    sub_100021A68((uint64_t)v20, (uint64_t *)&unk_100BD35A0);
    sub_100021A68((uint64_t)v22, (uint64_t *)&unk_100BD35A0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v17, v25);
LABEL_12:
    sub_100021A68(v13, &qword_100BC4978);
    goto LABEL_16;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v8, v24, v25);
  v27 = sub_100051B90((unint64_t *)&qword_100BC3590, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  v28 = dispatch thunk of static Equatable.== infix(_:_:)(v17, v8, v25, v27);
  v29 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v29(v8, v25);
  sub_1000B43C0((uint64_t)v20);
  sub_1000B43C0((uint64_t)v22);
  v29((uint64_t)v17, v25);
  sub_1000B43C0(v13);
  if ((v28 & 1) != 0)
    goto LABEL_14;
LABEL_16:
  sub_100098640();
}

void sub_10019FB7C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v4 = sub_100098778();
  v39 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  sub_100098728();
  v37 = v6 - v5;
  v7 = sub_1000BA294(&qword_100BC4978);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_100098728();
  v11 = v10 - v9;
  sub_1000BA294((uint64_t *)&unk_100BD35A0);
  sub_1000B42B0();
  __chkstk_darwin(v12);
  v38 = (uint64_t)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v36 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v36 - v18;
  v20 = *a2;
  v21 = MoonPhase.rawValue.getter(*a1);
  v23 = v22;
  v24 = MoonPhase.rawValue.getter(v20);
  v26 = v21 == v24 && v23 == v25;
  if (v26)
  {
    swift_bridgeObjectRelease_n(v23, 2);
  }
  else
  {
    v27 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v23, v24, v25, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v27 & 1) == 0)
      goto LABEL_17;
  }
  v28 = type metadata accessor for CalendarMoonPhaseData(0);
  sub_10007C714((uint64_t)&a1[*(int *)(v28 + 20)], (uint64_t)v19);
  sub_10007C714((uint64_t)&a2[*(int *)(v28 + 20)], (uint64_t)v16);
  v29 = v11 + *(int *)(v7 + 48);
  sub_10007C714((uint64_t)v19, v11);
  sub_10007C714((uint64_t)v16, v29);
  sub_100098750(v11);
  if (!v26)
  {
    v30 = v38;
    sub_10007C714(v11, v38);
    sub_100098750(v29);
    if (!v31)
    {
      v32 = v39;
      v33 = v37;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 32))(v37, v29, v4);
      v34 = sub_100051B90((unint64_t *)&qword_100BC3590, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
      dispatch thunk of static Equatable.== infix(_:_:)(v30, v33, v4, v34);
      v35 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
      v35(v33, v4);
      sub_1000BBB5C((uint64_t)v16);
      sub_1000BBB5C((uint64_t)v19);
      v35(v30, v4);
      sub_1000BBB5C(v11);
      goto LABEL_17;
    }
    sub_1000BBB54((uint64_t)v16);
    sub_1000BBB54((uint64_t)v19);
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v30, v4);
LABEL_16:
    sub_100021A68(v11, &qword_100BC4978);
    goto LABEL_17;
  }
  sub_1000BBB54((uint64_t)v16);
  sub_1000BBB54((uint64_t)v19);
  sub_100098750(v29);
  if (!v26)
    goto LABEL_16;
  sub_100021A68(v11, (uint64_t *)&unk_100BD35A0);
LABEL_17:
  sub_100098640();
}

void sub_10019FE74(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = sub_100098778();
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  sub_100098728();
  v7 = v6 - v5;
  sub_1000BA294((uint64_t *)&unk_100BD35A0);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_100098728();
  v11 = v10 - v9;
  v12 = MoonPhase.rawValue.getter(*v1);
  String.hash(into:)(a1, v12, v13);
  swift_bridgeObjectRelease();
  v14 = type metadata accessor for CalendarMoonPhaseData(0);
  sub_10007C714((uint64_t)&v1[*(int *)(v14 + 20)], v11);
  if (_s7Weather24LocationCompositionStateOwet_0(v11, 1, v3) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v7, v11, v3);
    Hasher._combine(_:)(1u);
    v15 = sub_100051B90((unint64_t *)&qword_100BC3588, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
    dispatch thunk of Hashable.hash(into:)(a1, v3, v15);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  }
}

Swift::Int sub_10019FFC8()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  sub_10019FE74((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_1001A0014()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  sub_10019FE74((uint64_t)v1);
  return Hasher._finalize()();
}

uint64_t type metadata accessor for CalendarMoonPhaseData(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC49D8, (uint64_t)&nominal type descriptor for CalendarMoonPhaseData);
}

uint64_t *sub_1001A0060(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  _BYTE *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v10 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v8))
    {
      v9 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v6, 0, 1, v8);
    }
  }
  return v3;
}

uint64_t sub_1001A0138(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = type metadata accessor for Date(0);
  result = _s7Weather24LocationCompositionStateOwet_0(v2, 1, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return result;
}

_BYTE *sub_1001A0194(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = type metadata accessor for Date(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v7))
  {
    v8 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v5, 0, 1, v7);
  }
  return a1;
}

_BYTE *sub_1001A0240(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = type metadata accessor for Date(0);
  v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v5, 1, v7);
  v9 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v7);
  if (!v8)
  {
    v10 = *(_QWORD *)(v7 - 8);
    if (!v9)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 24))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v9)
  {
LABEL_6:
    v11 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    return a1;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v5, 0, 1, v7);
  return a1;
}

_BYTE *sub_1001A033C(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = type metadata accessor for Date(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v7))
  {
    v8 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v5, 0, 1, v7);
  }
  return a1;
}

_BYTE *sub_1001A03E8(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = type metadata accessor for Date(0);
  v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v5, 1, v7);
  v9 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v7);
  if (!v8)
  {
    v10 = *(_QWORD *)(v7 - 8);
    if (!v9)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 40))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v9)
  {
LABEL_6:
    v11 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    return a1;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v5, 0, 1, v7);
  return a1;
}

uint64_t sub_1001A04E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001A04F0);
}

void sub_1001A04F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 248)
  {
    sub_100079F70();
  }
  else
  {
    v6 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    sub_1000B250C(a1 + *(int *)(a3 + 20), a2, v6);
  }
}

uint64_t sub_1001A0550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001A055C);
}

void sub_1001A055C(_BYTE *a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 248)
  {
    *a1 = a2 + 7;
    sub_100079F70();
  }
  else
  {
    v7 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    sub_1000987C4((uint64_t)&a1[*(int *)(a4 + 20)], a2, a2, v7);
  }
}

void sub_1001A05B8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = &unk_10097EB48;
  sub_10015BB24(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
  }
}

uint64_t sub_1001A062C()
{
  return sub_100051B90(qword_100BC4A10, type metadata accessor for CalendarMoonPhaseData, (uint64_t)&unk_10097EBA0);
}

const char *String.location.unsafeMutableAddressor()
{
  return "Location";
}

const char *String.detailsURL.unsafeMutableAddressor()
{
  return "DetailsURL";
}

uint64_t static String.location.getter()
{
  return 0x6E6F697461636F4CLL;
}

uint64_t static String.detailsURL.getter()
{
  return 0x55736C6961746544;
}

uint64_t sub_1001A06A4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  *(_QWORD *)a1 = *a2;
  *(_WORD *)(a1 + 8) = *((_WORD *)a2 + 4);
  v4 = a2[3];
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = v4;
  swift_retain(v3);
  swift_retain(v4);
  return a1;
}

uint64_t *sub_1001A06E8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  *((_BYTE *)a1 + 9) = *((_BYTE *)a2 + 9);
  v7 = a2[2];
  v6 = a2[3];
  v8 = a1[3];
  a1[2] = v7;
  a1[3] = v6;
  swift_retain(v6);
  swift_release(v8);
  return a1;
}

uint64_t *sub_1001A0754(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  *((_BYTE *)a1 + 9) = *((_BYTE *)a2 + 9);
  v5 = a1[3];
  *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
  swift_release(v5);
  return a1;
}

uint64_t type metadata accessor for ElevatedAqiSevereContentView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100108FF8(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ElevatedAqiSevereContentView);
}

uint64_t sub_1001A07B4(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_100AA9614, 1);
}

uint64_t sub_1001A07E8@<X0>(uint64_t a1@<X0>, __int16 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  void *v24;
  uint64_t v25;
  uint64_t (*v26)(_QWORD, _QWORD);
  uint64_t WitnessTable;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, char *, uint64_t);
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t (*v51)(_QWORD, _QWORD);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  _QWORD v63[2];
  _QWORD v64[2];
  _QWORD v65[4];
  _BYTE v66[488];
  _QWORD v67[62];

  v62 = a4;
  v55 = a3;
  v60 = a7;
  v67[0] = a5;
  v67[1] = a5;
  v67[2] = a5;
  v67[3] = a5;
  v10 = a2;
  v11 = a2 & 0x100;
  v67[4] = a5;
  v67[5] = a5;
  v67[6] = a5;
  v67[7] = a5;
  v12 = sub_1000BBB64(255, 8, (uint64_t)v67);
  v53 = sub_1000AE86C(v12);
  v13 = type metadata accessor for Group(0, v53);
  v14 = *(_QWORD *)(v13 - 8);
  v56 = v13;
  v57 = v14;
  __chkstk_darwin(v13);
  sub_1000986FC();
  v59 = v15;
  __chkstk_darwin(v16);
  v58 = (char *)&v48 - v17;
  v67[0] = a5;
  v67[1] = a5;
  v67[2] = type metadata accessor for Optional(255, a5);
  v67[3] = a5;
  v67[4] = a5;
  v67[5] = a5;
  v67[6] = a5;
  v18 = sub_1000BBB64(255, 7, (uint64_t)v67);
  v51 = (uint64_t (*)(_QWORD, _QWORD))sub_1000AE86C(v18);
  v54 = type metadata accessor for Group(0, v51);
  v52 = *(_QWORD *)(v54 - 8);
  __chkstk_darwin(v54);
  sub_1000986FC();
  v20 = v19;
  __chkstk_darwin(v21);
  v61 = (char *)&v48 - v22;
  if (v10)
  {
    if (v10 == 1)
    {
      if (v11)
      {
        v23 = &qword_100BF0A78;
        goto LABEL_11;
      }
    }
    else if (v11)
    {
      v23 = &qword_100BF0E48;
      goto LABEL_11;
    }
    v23 = &qword_100BF0C60;
    goto LABEL_11;
  }
  if (v11)
    v23 = &qword_100BF06A8;
  else
    v23 = &qword_100BF0890;
LABEL_11:
  memcpy(v67, v23, 0x1E8uLL);
  v24 = memcpy(v66, v67, sizeof(v66));
  v50 = &v48;
  __chkstk_darwin(v24);
  *(&v48 - 8) = a5;
  *(&v48 - 7) = a6;
  v48 = a1;
  *(&v48 - 6) = a1;
  *((_BYTE *)&v48 - 40) = v10;
  HIDWORD(v49) = v11 >> 8;
  *((_BYTE *)&v48 - 39) = BYTE1(v11);
  v25 = v62;
  *(&v48 - 4) = v55;
  *(&v48 - 3) = v25;
  *(&v48 - 2) = (uint64_t)v66;
  v26 = v51;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v51);
  Group<A>.init(content:)(sub_1001A1CBC, &v48 - 10, v26, WitnessTable);
  v65[3] = WitnessTable;
  v28 = v54;
  v50 = (uint64_t *)swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v54);
  sub_1000B2074(v20, v28, v50);
  v29 = v52;
  v51 = *(uint64_t (**)(_QWORD, _QWORD))(v52 + 8);
  v30 = v51(v20, v28);
  __chkstk_darwin(v30);
  *(&v48 - 8) = a5;
  *(&v48 - 7) = a6;
  *(&v48 - 6) = v48;
  *((_BYTE *)&v48 - 40) = v10;
  *((_BYTE *)&v48 - 39) = BYTE4(v49);
  v31 = v62;
  *(&v48 - 4) = v32;
  *(&v48 - 3) = v31;
  *(&v48 - 2) = (uint64_t)v66;
  v33 = v53;
  v34 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v53);
  v35 = v59;
  Group<A>.init(content:)(sub_1001A1CC8, &v48 - 10, v33, v34);
  v65[2] = v34;
  v36 = v56;
  v37 = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v56);
  v38 = (uint64_t)v58;
  sub_1000B2074(v35, v36, v37);
  v39 = v57;
  sub_1000C3530(v35);
  v40 = *(void (**)(uint64_t, char *, uint64_t))(v29 + 16);
  v41 = v61;
  v40(v20, v61, v28);
  v65[0] = v20;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16))(v35, v38, v36);
  v65[1] = v35;
  v64[0] = v28;
  v64[1] = v36;
  v63[0] = v50;
  v63[1] = v37;
  sub_10052800C((uint64_t)v65, 2, (uint64_t)v64, (uint64_t)v63, v42, v43, v44, v45, v48, v49, (uint64_t)v50, (uint64_t)v51, v52, v53, v54, v55, v56, v57);
  sub_1000C3530(v38);
  v46 = v51;
  v51(v41, v28);
  sub_1000C3530(v35);
  return v46(v20, v28);
}

uint64_t sub_1001A0C0C@<X0>(uint64_t a1@<X0>, void (*a2)(char *, _QWORD, _QWORD, _QWORD, _QWORD)@<X2>, _QWORD *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  void (*v61)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  void (*v66)(char *, char *, uint64_t);
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  void (*v86)(uint64_t, uint64_t);
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  char *v98;
  char *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  void (*v106)(char *, _QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v107;
  uint64_t v108;
  _QWORD v109[7];
  _QWORD v110[7];
  _QWORD v111[7];
  _BYTE v112[24];
  _BYTE v113[40];
  _QWORD v114[4];
  char v115;

  v103 = a5;
  v106 = a2;
  v90 = a6;
  v10 = sub_1000BA294(&qword_100BC4A98);
  __chkstk_darwin(v10);
  v85 = (uint64_t)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = type metadata accessor for Optional(0, a4);
  v95 = *(_QWORD *)(v100 - 8);
  __chkstk_darwin(v100);
  v107 = (uint64_t)&v82 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v102 = (uint64_t)&v82 - v14;
  v86 = (void (*)(uint64_t, uint64_t))type metadata accessor for LocationComponentContainerViewModel(0);
  __chkstk_darwin(v86);
  v83 = (uint64_t)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v82 - v17;
  v19 = *(_QWORD *)(a4 - 8);
  __chkstk_darwin(v20);
  v89 = (char *)&v82 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v88 = (char *)&v82 - v23;
  __chkstk_darwin(v24);
  v99 = (char *)&v82 - v25;
  __chkstk_darwin(v26);
  v97 = (char *)&v82 - v27;
  __chkstk_darwin(v28);
  v98 = (char *)&v82 - v29;
  __chkstk_darwin(v30);
  v96 = (char *)&v82 - v31;
  __chkstk_darwin(v32);
  v93 = (char *)&v82 - v33;
  __chkstk_darwin(v34);
  v92 = (char *)&v82 - v35;
  __chkstk_darwin(v36);
  v105 = (char *)&v82 - v37;
  __chkstk_darwin(v38);
  v101 = (char *)&v82 - v39;
  __chkstk_darwin(v40);
  v42 = (char *)&v82 - v41;
  __chkstk_darwin(v43);
  v45 = (char *)&v82 - v44;
  sub_100080E30(a1 + OBJC_IVAR____TtCV7Weather24ElevatedAqiSevereContent8_Storage_severeAlert, (uint64_t)v18);
  a2(v18, a3[41], a3[42], a3[43], a3[44]);
  sub_100080DF4((uint64_t)v18);
  v91 = v45;
  v46 = v103;
  sub_1000B2074(v42, a4, v103);
  v87 = v19;
  v47 = *(void (**)(char *, uint64_t))(v19 + 8);
  v48 = v85;
  v47(v42, a4);
  sub_100080E30(a1 + OBJC_IVAR____TtCV7Weather24ElevatedAqiSevereContent8_Storage_airQuality, (uint64_t)v18);
  v106(v18, *a3, a3[1], a3[2], a3[3]);
  v84 = v18;
  sub_100080DF4((uint64_t)v18);
  sub_1000B2074(v42, a4, v46);
  v104 = v42;
  v47(v42, a4);
  v94 = a1;
  v49 = a1 + OBJC_IVAR____TtCV7Weather24ElevatedAqiSevereContent8_Storage_map;
  swift_beginAccess(a1 + OBJC_IVAR____TtCV7Weather24ElevatedAqiSevereContent8_Storage_map, v112, 0, 0);
  sub_1001A1D04(v49, v48);
  if (_s7Weather24LocationCompositionStateOwet_0(v48, 1, (uint64_t)v86) == 1)
  {
    sub_1001A1D4C(v48);
    v50 = 1;
    v51 = a3;
  }
  else
  {
    v52 = v83;
    sub_1001A1D8C(v48, v83);
    sub_1001A1DD0((uint64_t)(a3 + 24), (uint64_t)v113);
    sub_1001A1DD0((uint64_t)v113, (uint64_t)v114);
    v51 = a3;
    if (v115 == 1)
    {
      sub_100080DF4(v52);
      v50 = 1;
    }
    else
    {
      v53 = v105;
      v106((char *)v52, v114[0], v114[1], v114[2], v114[3]);
      sub_100080DF4(v52);
      v54 = (uint64_t)v104;
      sub_1000B2074(v53, a4, v103);
      v47(v53, a4);
      sub_1000B1100(v54, a4, v107);
      v47((char *)v54, a4);
      v50 = 0;
    }
  }
  v55 = v107;
  _s7Weather24LocationCompositionStateOwst_0(v107, v50, 1, a4);
  v56 = v103;
  sub_100158984(v55, a4, v102);
  v86 = *(void (**)(uint64_t, uint64_t))(v95 + 8);
  v86(v55, v100);
  v57 = v94;
  v58 = (uint64_t)v84;
  sub_100080E30(*(_QWORD *)(v94 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, (uint64_t)v84);
  v59 = v105;
  v106((char *)v58, v51[16], v51[17], v51[18], v51[19]);
  sub_100080DF4(v58);
  sub_1000B2074(v59, a4, v56);
  v47(v59, a4);
  sub_100080E30(*(_QWORD *)(v57 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v58);
  v60 = v92;
  v61 = (void (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))v106;
  v106((char *)v58, v51[8], v51[9], v51[10], v51[11]);
  sub_100080DF4(v58);
  v62 = v103;
  sub_1000B2074(v60, a4, v103);
  v47(v60, a4);
  sub_100080E30(*(_QWORD *)(v57 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, v58);
  v63 = v93;
  v61(v58, v51[49], v51[50], v51[51], v51[52]);
  sub_100080DF4(v58);
  sub_1000B2074(v63, a4, v62);
  v47(v63, a4);
  sub_100080E30(*(_QWORD *)(v94 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, v58);
  v64 = v96;
  v61(v58, v51[45], v51[46], v51[47], v51[48]);
  sub_100080DF4(v58);
  v65 = v62;
  sub_1000B2074(v64, a4, v62);
  v47(v64, a4);
  v66 = *(void (**)(char *, char *, uint64_t))(v87 + 16);
  v66(v64, v91, a4);
  v111[0] = v64;
  v67 = v98;
  v66(v98, v101, a4);
  v111[1] = v67;
  v68 = v107;
  v69 = v100;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v95 + 16))(v107, v102, v100);
  v111[2] = v68;
  v70 = v97;
  v66(v97, v104, a4);
  v111[3] = v70;
  v71 = v99;
  v66(v99, v105, a4);
  v111[4] = v71;
  v72 = (uint64_t)v88;
  v73 = v92;
  v66(v88, v92, a4);
  v111[5] = v72;
  v74 = (uint64_t)v89;
  v75 = v93;
  v66(v89, v93, a4);
  v111[6] = v74;
  v110[0] = a4;
  v110[1] = a4;
  v110[2] = v69;
  v110[3] = a4;
  v110[4] = a4;
  v110[5] = a4;
  v110[6] = a4;
  v109[0] = v65;
  v109[1] = v65;
  v108 = v65;
  v109[2] = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v69);
  v109[3] = v65;
  v109[4] = v65;
  v109[5] = v65;
  v109[6] = v65;
  sub_10052800C((uint64_t)v111, 7, (uint64_t)v110, (uint64_t)v109, v76, v77, v78, v79, v82, v83, (uint64_t)v84, v85, (uint64_t)v86, v87, (uint64_t)v88, (uint64_t)v89, v90, (uint64_t)v91);
  v47(v75, a4);
  v47(v73, a4);
  v47(v105, a4);
  v47(v104, a4);
  v80 = v86;
  v86(v102, v69);
  v47(v101, a4);
  v47(v91, a4);
  v47((char *)v74, a4);
  v47((char *)v72, a4);
  v47(v99, a4);
  v47(v97, a4);
  v80(v107, v69);
  v47(v98, a4);
  return ((uint64_t (*)(char *, uint64_t))v47)(v96, a4);
}

uint64_t sub_1001A144C@<X0>(uint64_t a1@<X0>, void (*a2)(char *, _QWORD, _QWORD, _QWORD, _QWORD)@<X2>, _QWORD *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  void (*v57)(char *, char *, uint64_t);
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  char *v81;
  char *v82;
  char *v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  char *v92;
  _QWORD v93[8];
  _QWORD v94[8];
  _QWORD v95[8];

  v78 = a6;
  v11 = type metadata accessor for LocationComponentContainerViewModel(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = *(_QWORD *)(a4 - 8);
  __chkstk_darwin(v14);
  v77 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v76 = (char *)&v74 - v17;
  __chkstk_darwin(v18);
  v92 = (char *)&v74 - v19;
  __chkstk_darwin(v20);
  v91 = (char *)&v74 - v21;
  __chkstk_darwin(v22);
  v89 = (char *)&v74 - v23;
  __chkstk_darwin(v24);
  v87 = (char *)&v74 - v25;
  __chkstk_darwin(v26);
  v86 = (char *)&v74 - v27;
  __chkstk_darwin(v28);
  v85 = (char *)&v74 - v29;
  __chkstk_darwin(v30);
  v75 = (uint64_t)&v74 - v31;
  __chkstk_darwin(v32);
  v83 = (char *)&v74 - v33;
  __chkstk_darwin(v34);
  v81 = (char *)&v74 - v35;
  __chkstk_darwin(v36);
  v79 = (char *)&v74 - v37;
  __chkstk_darwin(v38);
  v80 = (char *)&v74 - v39;
  __chkstk_darwin(v40);
  v42 = (char *)&v74 - v41;
  __chkstk_darwin(v43);
  v45 = (char *)&v74 - v44;
  __chkstk_darwin(v46);
  v88 = (char *)&v74 - v47;
  sub_100080E30(*(_QWORD *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind, (uint64_t)v13);
  a2(v13, a3[57], a3[58], a3[59], a3[60]);
  sub_100080DF4((uint64_t)v13);
  sub_1000B2074(v45, a4, a5);
  v48 = *(void (**)(char *, uint64_t))(v90 + 8);
  v84 = v45;
  v48(v45, a4);
  sub_100080E30(*(_QWORD *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, (uint64_t)v13);
  a2(v13, a3[37], a3[38], a3[39], a3[40]);
  sub_100080DF4((uint64_t)v13);
  v49 = a5;
  sub_1000B2074(v42, a4, a5);
  v82 = v42;
  v48(v42, a4);
  sub_100080E30(*(_QWORD *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike, (uint64_t)v13);
  v50 = (uint64_t)v80;
  a2(v13, a3[12], a3[13], a3[14], a3[15]);
  sub_100080DF4((uint64_t)v13);
  sub_1000B2074(v50, a4, v49);
  v48((char *)v50, a4);
  sub_100080E30(*(_QWORD *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, (uint64_t)v13);
  v51 = (uint64_t)v79;
  a2(v13, a3[20], a3[21], a3[22], a3[23]);
  sub_100080DF4((uint64_t)v13);
  sub_1000B2074(v51, a4, v49);
  v48((char *)v51, a4);
  sub_100080E30(*(_QWORD *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility, (uint64_t)v13);
  v52 = (uint64_t)v81;
  a2(v13, a3[53], a3[54], a3[55], a3[56]);
  sub_100080DF4((uint64_t)v13);
  sub_1000B2074(v52, a4, v49);
  v48((char *)v52, a4);
  sub_100080E30(*(_QWORD *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, (uint64_t)v13);
  v53 = (uint64_t)v83;
  a2(v13, a3[33], a3[34], a3[35], a3[36]);
  sub_100080DF4((uint64_t)v13);
  sub_1000B2074(v53, a4, v49);
  v48((char *)v53, a4);
  sub_100080E30(*(_QWORD *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, (uint64_t)v13);
  v54 = v75;
  a2(v13, a3[29], a3[30], a3[31], a3[32]);
  sub_100080DF4((uint64_t)v13);
  v55 = v54;
  v74 = v49;
  sub_1000B2074(v54, a4, v49);
  v48((char *)v54, a4);
  sub_100080E30(*(_QWORD *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, (uint64_t)v13);
  v56 = v85;
  a2(v13, a3[4], a3[5], a3[6], a3[7]);
  sub_100080DF4((uint64_t)v13);
  sub_1000B2074(v56, a4, v49);
  v48(v56, a4);
  v57 = *(void (**)(char *, char *, uint64_t))(v90 + 16);
  v57(v56, v88, a4);
  v95[0] = v56;
  v58 = v86;
  v57(v86, v84, a4);
  v95[1] = v58;
  v59 = v87;
  v57(v87, v82, a4);
  v95[2] = v59;
  v60 = v89;
  v61 = (uint64_t)v80;
  v57(v89, v80, a4);
  v95[3] = v60;
  v62 = v91;
  v63 = (uint64_t)v79;
  v57(v91, v79, a4);
  v95[4] = v62;
  v64 = v92;
  v65 = (uint64_t)v81;
  v57(v92, v81, a4);
  v95[5] = v64;
  v66 = (uint64_t)v76;
  v67 = (uint64_t)v83;
  v57(v76, v83, a4);
  v95[6] = v66;
  v68 = (uint64_t)v77;
  v57(v77, (char *)v55, a4);
  v95[7] = v68;
  v94[0] = a4;
  v94[1] = a4;
  v94[2] = a4;
  v94[3] = a4;
  v94[4] = a4;
  v94[5] = a4;
  v94[6] = a4;
  v94[7] = a4;
  v93[0] = v74;
  v93[1] = v74;
  v93[2] = v74;
  v93[3] = v74;
  v93[4] = v74;
  v93[5] = v74;
  v93[6] = v74;
  v93[7] = v74;
  sub_10052800C((uint64_t)v95, 8, (uint64_t)v94, (uint64_t)v93, v69, v70, v71, v72, v74, v75, (uint64_t)v76, (uint64_t)v77, v78, (uint64_t)v79, (uint64_t)v80, (uint64_t)v81, (uint64_t)v82, (uint64_t)v83);
  v48((char *)v55, a4);
  v48((char *)v67, a4);
  v48((char *)v65, a4);
  v48((char *)v63, a4);
  v48((char *)v61, a4);
  v48(v82, a4);
  v48(v84, a4);
  v48(v88, a4);
  v48((char *)v68, a4);
  v48((char *)v66, a4);
  v48(v92, a4);
  v48(v91, a4);
  v48(v89, a4);
  v48(v87, a4);
  v48(v86, a4);
  return ((uint64_t (*)(char *, uint64_t))v48)(v85, a4);
}

uint64_t sub_1001A1C90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int16 v3;

  if (*(_BYTE *)(v2 + 9))
    v3 = 256;
  else
    v3 = 0;
  return sub_1001A07E8(*(_QWORD *)v2, v3 | *(unsigned __int8 *)(v2 + 8), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2);
}

uint64_t sub_1001A1CBC()
{
  return sub_1001A1CD4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001A0C0C);
}

uint64_t sub_1001A1CC8()
{
  return sub_1001A1CD4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001A144C);
}

uint64_t sub_1001A1CD4(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v1;
  int v2;

  if (*(_BYTE *)(v1 + 41))
    v2 = 256;
  else
    v2 = 0;
  return a1(*(_QWORD *)(v1 + 32), v2 | *(unsigned __int8 *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1001A1D04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BC4A98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001A1D4C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1000BA294(&qword_100BC4A98);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001A1D8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LocationComponentContainerViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001A1DD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BC4AA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001A1E18(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t TupleTypeMetadata2;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *a1;
  v11 = v1;
  v12 = v1;
  v13 = type metadata accessor for Optional(255, v1);
  v14 = v1;
  v15 = v1;
  v16 = v1;
  v17 = v1;
  v2 = sub_1000BBB64(255, 7, (uint64_t)&v11);
  v3 = sub_1000AE86C(v2);
  v4 = sub_1000C43AC(v3);
  v11 = v1;
  v12 = v1;
  v13 = v1;
  v14 = v1;
  v15 = v1;
  v16 = v1;
  v17 = v1;
  v18 = v1;
  v5 = sub_1000BBB64(255, 8, (uint64_t)&v11);
  v6 = sub_1000AE86C(v5);
  v7 = sub_1000C43AC(v6);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v4, v7, 0, 0);
  v9 = sub_1000AE86C(TupleTypeMetadata2);
  return swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v9);
}

uint64_t *sub_1001A1EC8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for ContentStatusBanner(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = sub_1000BA294(&qword_100BC3620);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v10 = a2 + 1;
      v11 = a2[2];
      if (v11 >= 2)
      {
        a1[1] = *v10;
        a1[2] = v11;
        swift_bridgeObjectRetain(v11);
      }
      else
      {
        *(_OWORD *)(a1 + 1) = *(_OWORD *)v10;
      }
      v12 = *(int *)(v7 + 24);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15))
      {
        v16 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
    }
    v17 = *(int *)(a3 + 20);
    v18 = *(_OWORD *)((char *)a2 + v17 + 24);
    *(_OWORD *)((char *)a1 + v17 + 24) = v18;
    (**(void (***)(void))(v18 - 8))();
    v19 = *(int *)(a3 + 24);
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    v22 = sub_1000BA294(&qword_100BC37E0);
    if (swift_getEnumCaseMultiPayload(v21) == 1)
    {
      *(_OWORD *)v20 = *(_OWORD *)v21;
      v20[16] = v21[16];
      v20[17] = v21[17];
      v20[18] = v21[18];
      v23 = *(int *)(type metadata accessor for DisplayMetrics(0) + 36);
      v24 = &v20[v23];
      v25 = &v21[v23];
      v26 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
      v27 = v20;
      v28 = v22;
      v29 = 1;
    }
    else
    {
      *(_QWORD *)v20 = *(_QWORD *)v21;
      swift_retain();
      v27 = v20;
      v28 = v22;
      v29 = 0;
    }
    swift_storeEnumTagMultiPayload(v27, v28, v29);
  }
  return a1;
}

double sub_1001A2110(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  double result;

  v4 = type metadata accessor for ContentStatusBanner(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(a1, 1, v4))
  {
    if (*(_QWORD *)(a1 + 16) >= 2uLL)
      swift_bridgeObjectRelease();
    v5 = a1 + *(int *)(v4 + 24);
    v6 = type metadata accessor for Date(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v5, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(a1 + *(int *)(a2 + 20)));
  v7 = (_QWORD *)(a1 + *(int *)(a2 + 24));
  sub_1000BA294(&qword_100BC37E0);
  if (swift_getEnumCaseMultiPayload(v7) == 1)
  {
    v8 = (char *)v7 + *(int *)(type metadata accessor for DisplayMetrics(0) + 36);
    v9 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*v7).n128_u64[0];
  }
  return result;
}

_QWORD *sub_1001A2214(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;

  v6 = type metadata accessor for ContentStatusBanner(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_1000BA294(&qword_100BC3620);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v8 = a2 + 1;
    v9 = a2[2];
    if (v9 >= 2)
    {
      a1[1] = *v8;
      a1[2] = v9;
      swift_bridgeObjectRetain(v9);
    }
    else
    {
      *(_OWORD *)(a1 + 1) = *(_OWORD *)v8;
    }
    v10 = *(int *)(v6 + 24);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13))
    {
      v14 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v13);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v15 = *(int *)(a3 + 20);
  v16 = *(_OWORD *)((char *)a2 + v15 + 24);
  *(_OWORD *)((char *)a1 + v15 + 24) = v16;
  (**(void (***)(void))(v16 - 8))();
  v17 = *(int *)(a3 + 24);
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = sub_1000BA294(&qword_100BC37E0);
  if (swift_getEnumCaseMultiPayload(v19) == 1)
  {
    *(_OWORD *)v18 = *(_OWORD *)v19;
    v18[16] = v19[16];
    v18[17] = v19[17];
    v18[18] = v19[18];
    v21 = *(int *)(type metadata accessor for DisplayMetrics(0) + 36);
    v22 = &v18[v21];
    v23 = &v19[v21];
    v24 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
    v25 = 1;
  }
  else
  {
    *(_QWORD *)v18 = *(_QWORD *)v19;
    swift_retain();
    v25 = 0;
  }
  swift_storeEnumTagMultiPayload(v18, v20, v25);
  return a1;
}

uint64_t sub_1001A2428(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  size_t v9;
  void *v10;
  const void *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  int v38;
  uint64_t v39;

  v6 = type metadata accessor for ContentStatusBanner(0);
  v7 = _s7Weather24LocationCompositionStateOwet_0(a1, 1, v6);
  v8 = _s7Weather24LocationCompositionStateOwet_0(a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      if (*(_QWORD *)(a2 + 16) >= 2uLL)
      {
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        v14 = *(_QWORD *)(a2 + 16);
        *(_QWORD *)(a1 + 16) = v14;
        swift_bridgeObjectRetain(v14);
      }
      else
      {
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      }
      v15 = *(int *)(v6 + 24);
      v16 = (void *)(a1 + v15);
      v17 = (const void *)(a2 + v15);
      v18 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18))
      {
        v19 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v18);
      }
      v20 = a1;
      v21 = v6;
      goto LABEL_17;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_1000215BC(a1, type metadata accessor for ContentStatusBanner);
LABEL_7:
    v9 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BC3620) - 8) + 64);
    v10 = (void *)a1;
    v11 = (const void *)a2;
LABEL_8:
    memcpy(v10, v11, v9);
    goto LABEL_18;
  }
  *(_BYTE *)a1 = *(_BYTE *)a2;
  v12 = *(_QWORD *)(a2 + 16);
  if (*(_QWORD *)(a1 + 16) < 2uLL)
  {
    if (v12 >= 2)
    {
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      v13 = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 16) = v13;
      swift_bridgeObjectRetain(v13);
      goto LABEL_28;
    }
    goto LABEL_26;
  }
  if (v12 < 2)
  {
    sub_1001A27B4(a1 + 8);
LABEL_26:
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    goto LABEL_28;
  }
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v32 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v32;
  swift_bridgeObjectRetain(v32);
  swift_bridgeObjectRelease();
LABEL_28:
  v33 = *(int *)(v6 + 24);
  v34 = a1 + v33;
  v35 = a2 + v33;
  v36 = type metadata accessor for Date(0);
  v37 = _s7Weather24LocationCompositionStateOwet_0(v34, 1, v36);
  v38 = _s7Weather24LocationCompositionStateOwet_0(v35, 1, v36);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v34, v35, v36);
      v20 = v34;
      v21 = v36;
LABEL_17:
      _s7Weather24LocationCompositionStateOwst_0(v20, 0, 1, v21);
      goto LABEL_18;
    }
    goto LABEL_33;
  }
  v39 = *(_QWORD *)(v36 - 8);
  if (v38)
  {
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v34, v36);
LABEL_33:
    v9 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294((uint64_t *)&unk_100BD35A0) - 8) + 64);
    v10 = (void *)v34;
    v11 = (const void *)v35;
    goto LABEL_8;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 24))(v34, v35, v36);
LABEL_18:
  sub_100094D04((_QWORD *)(a1 + *(int *)(a3 + 20)), (_QWORD *)(a2 + *(int *)(a3 + 20)));
  if (a1 != a2)
  {
    v22 = *(int *)(a3 + 24);
    v23 = a1 + v22;
    v24 = a2 + v22;
    sub_100021A14(a1 + v22, &qword_100BC37E0);
    v25 = sub_1000BA294(&qword_100BC37E0);
    if (swift_getEnumCaseMultiPayload(v24) == 1)
    {
      *(_QWORD *)v23 = *(_QWORD *)v24;
      *(_QWORD *)(v23 + 8) = *(_QWORD *)(v24 + 8);
      *(_BYTE *)(v23 + 16) = *(_BYTE *)(v24 + 16);
      *(_BYTE *)(v23 + 17) = *(_BYTE *)(v24 + 17);
      *(_BYTE *)(v23 + 18) = *(_BYTE *)(v24 + 18);
      v26 = *(int *)(type metadata accessor for DisplayMetrics(0) + 36);
      v27 = v23 + v26;
      v28 = v24 + v26;
      v29 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
      v30 = 1;
    }
    else
    {
      *(_QWORD *)v23 = *(_QWORD *)v24;
      swift_retain();
      v30 = 0;
    }
    swift_storeEnumTagMultiPayload(v23, v25, v30);
  }
  return a1;
}

uint64_t sub_1001A27B4(uint64_t a1)
{
  (*(void (**)(void))(*(&type metadata for String - 1) + 8))();
  return a1;
}

_BYTE *sub_1001A27E8(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  __int128 v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;

  v6 = type metadata accessor for ContentStatusBanner(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_1000BA294(&qword_100BC3620);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    v8 = *(int *)(v6 + 24);
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11))
    {
      v12 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v13 = *(int *)(a3 + 20);
  v14 = *(int *)(a3 + 24);
  v15 = &a1[v13];
  v16 = &a2[v13];
  v17 = *((_OWORD *)v16 + 1);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *((_OWORD *)v15 + 1) = v17;
  *((_QWORD *)v15 + 4) = *((_QWORD *)v16 + 4);
  v18 = &a1[v14];
  v19 = &a2[v14];
  v20 = sub_1000BA294(&qword_100BC37E0);
  if (swift_getEnumCaseMultiPayload(v19) == 1)
  {
    *(_OWORD *)v18 = *(_OWORD *)v19;
    v18[16] = v19[16];
    v18[17] = v19[17];
    v18[18] = v19[18];
    v21 = *(int *)(type metadata accessor for DisplayMetrics(0) + 36);
    v22 = &v18[v21];
    v23 = &v19[v21];
    v24 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
    swift_storeEnumTagMultiPayload(v18, v20, 1);
  }
  else
  {
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1001A29D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  size_t v14;
  void *v15;
  const void *v16;
  _OWORD *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v6 = type metadata accessor for ContentStatusBanner(0);
  v7 = _s7Weather24LocationCompositionStateOwet_0(a1, 1, v6);
  v8 = _s7Weather24LocationCompositionStateOwet_0(a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      v9 = *(int *)(v6 + 24);
      v10 = (void *)(a1 + v9);
      v11 = (const void *)(a2 + v9);
      v12 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12))
      {
        v13 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v12);
      }
      v19 = a1;
      v20 = v6;
      goto LABEL_15;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_1000215BC(a1, type metadata accessor for ContentStatusBanner);
LABEL_7:
    v14 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BC3620) - 8) + 64);
    v15 = (void *)a1;
    v16 = (const void *)a2;
LABEL_8:
    memcpy(v15, v16, v14);
    goto LABEL_16;
  }
  *(_BYTE *)a1 = *(_BYTE *)a2;
  v17 = (_OWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 16) < 2uLL)
    goto LABEL_12;
  v18 = *(_QWORD *)(a2 + 16);
  if (v18 < 2)
  {
    sub_1001A27B4(a1 + 8);
LABEL_12:
    *(_OWORD *)(a1 + 8) = *v17;
    goto LABEL_22;
  }
  *(_QWORD *)(a1 + 8) = *(_QWORD *)v17;
  *(_QWORD *)(a1 + 16) = v18;
  swift_bridgeObjectRelease();
LABEL_22:
  v34 = *(int *)(v6 + 24);
  v35 = a1 + v34;
  v36 = a2 + v34;
  v37 = type metadata accessor for Date(0);
  v38 = _s7Weather24LocationCompositionStateOwet_0(v35, 1, v37);
  v39 = _s7Weather24LocationCompositionStateOwet_0(v36, 1, v37);
  if (v38)
  {
    if (!v39)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v35, v36, v37);
      v19 = v35;
      v20 = v37;
LABEL_15:
      _s7Weather24LocationCompositionStateOwst_0(v19, 0, 1, v20);
      goto LABEL_16;
    }
    goto LABEL_27;
  }
  v40 = *(_QWORD *)(v37 - 8);
  if (v39)
  {
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v35, v37);
LABEL_27:
    v14 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294((uint64_t *)&unk_100BD35A0) - 8) + 64);
    v15 = (void *)v35;
    v16 = (const void *)v36;
    goto LABEL_8;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 40))(v35, v36, v37);
LABEL_16:
  v21 = *(int *)(a3 + 20);
  v22 = a1 + v21;
  v23 = a2 + v21;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(a1 + v21));
  v24 = *(_OWORD *)(v23 + 16);
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *(_OWORD *)(v22 + 16) = v24;
  *(_QWORD *)(v22 + 32) = *(_QWORD *)(v23 + 32);
  if (a1 != a2)
  {
    v25 = *(int *)(a3 + 24);
    v26 = (char *)(a1 + v25);
    v27 = (char *)(a2 + v25);
    sub_100021A14(a1 + v25, &qword_100BC37E0);
    v28 = sub_1000BA294(&qword_100BC37E0);
    if (swift_getEnumCaseMultiPayload(v27) == 1)
    {
      *(_OWORD *)v26 = *(_OWORD *)v27;
      v26[16] = v27[16];
      v26[17] = v27[17];
      v26[18] = v27[18];
      v29 = *(int *)(type metadata accessor for DisplayMetrics(0) + 36);
      v30 = &v26[v29];
      v31 = &v27[v29];
      v32 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
      swift_storeEnumTagMultiPayload(v26, v28, 1);
    }
    else
    {
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1001A2D10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001A2D1C);
}

uint64_t sub_1001A2D1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v6 = sub_1000BA294(&qword_100BC3620);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
    return _s7Weather24LocationCompositionStateOwet_0(v8, a2, v7);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v7 = sub_1000BA294(&qword_100BC3808);
    v8 = a1 + *(int *)(a3 + 24);
    return _s7Weather24LocationCompositionStateOwet_0(v8, a2, v7);
  }
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 24);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1001A2DC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001A2DD0);
}

uint64_t sub_1001A2DD0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = sub_1000BA294(&qword_100BC3620);
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
  {
    v9 = result;
    v10 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
      return result;
    }
    v9 = sub_1000BA294(&qword_100BC3808);
    v10 = a1 + *(int *)(a4 + 24);
  }
  return _s7Weather24LocationCompositionStateOwst_0(v10, a2, a2, v9);
}

uint64_t type metadata accessor for MapContentStatusBanner(uint64_t a1)
{
  uint64_t result;

  result = qword_100BC4B00;
  if (!qword_100BC4B00)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MapContentStatusBanner);
  return result;
}

void sub_1001A2EAC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  sub_100158C7C(319, (unint64_t *)&qword_100BC4B10, type metadata accessor for ContentStatusBanner, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = "(";
    sub_100158C7C(319, (unint64_t *)&qword_100BC3890, type metadata accessor for DisplayMetrics, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 3, v6, a1 + 16);
    }
  }
}

uint64_t sub_1001A2F68(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AA9670, 1);
}

uint64_t sub_1001A2F78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned __int8 *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v22;

  type metadata accessor for ContentStatusBanner(0);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_100099864();
  v7 = sub_1000BA294(&qword_100BC4B48);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_100079F58();
  sub_1000BA294(&qword_100BC3620);
  sub_1000B42B0();
  __chkstk_darwin(v9);
  v11 = (unsigned __int8 *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v22 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v22 - v16;
  sub_1000DD6F8(a1, (uint64_t)&v22 - v16);
  sub_1000DD6F8(a2, (uint64_t)v14);
  v18 = v2 + *(int *)(v7 + 48);
  sub_1000DD6F8((uint64_t)v17, v2);
  sub_1000DD6F8((uint64_t)v14, v18);
  sub_100098750(v2);
  if (v20)
  {
    sub_100021A14((uint64_t)v14, &qword_100BC3620);
    sub_100021A14((uint64_t)v17, &qword_100BC3620);
    sub_100098750(v18);
    if (v20)
      v19 = -1;
    else
      v19 = 0;
  }
  else
  {
    sub_10007EBC8(v2, (uint64_t)v11, &qword_100BC3620);
    sub_100098750(v18);
    if (v20)
    {
      sub_100099298((uint64_t)v14);
      sub_100099298((uint64_t)v17);
      sub_1000215BC((uint64_t)v11, type metadata accessor for ContentStatusBanner);
      v19 = 0;
    }
    else
    {
      sub_1001A36C4(v18, (uint64_t)v3);
      v19 = sub_10007BDA4(v11, v3);
      sub_1000215BC((uint64_t)v3, type metadata accessor for ContentStatusBanner);
      sub_10009E47C((uint64_t)v14);
      sub_10009E47C((uint64_t)v17);
      sub_1000215BC((uint64_t)v11, type metadata accessor for ContentStatusBanner);
    }
  }
  sub_10009E47C(v2);
  return v19 & 1;
}

void sub_1001A319C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t KeyPath;
  uint64_t *v42;
  uint64_t v43;
  unsigned int v44;
  unsigned int v45;
  uint64_t v46;
  int v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  double v56;
  double v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  char v84;
  __int128 v85;

  v80 = a1;
  v79 = sub_1000BA294(&qword_100BC4B50);
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_100099864();
  type metadata accessor for DisplayMetrics(0);
  sub_1000B42B0();
  __chkstk_darwin(v5);
  sub_100088FDC();
  v77 = v6;
  type metadata accessor for ContentStatusBannerView(0);
  sub_1000B42B0();
  __chkstk_darwin(v7);
  sub_100098728();
  v10 = (_OWORD *)(v9 - v8);
  v11 = sub_1000BA294(&qword_100BC4B58);
  sub_1000B42B0();
  __chkstk_darwin(v12);
  sub_100079F58();
  v74 = sub_1000BA294(&qword_100BC4B60);
  sub_1000B42B0();
  __chkstk_darwin(v13);
  sub_100088FDC();
  v76 = v14;
  v15 = sub_1000BA294(&qword_100BC4B68);
  sub_1000B42B0();
  __chkstk_darwin(v16);
  v75 = (uint64_t)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v78 = (uint64_t)&v70 - v19;
  sub_1000BA294(&qword_100BC3620);
  sub_1000B42B0();
  __chkstk_darwin(v20);
  sub_100098728();
  v23 = v22 - v21;
  v24 = type metadata accessor for ContentStatusBanner(0);
  sub_1000B42B0();
  __chkstk_darwin(v25);
  sub_100098728();
  v28 = v27 - v26;
  sub_10007EBC8(v2, v23, &qword_100BC3620);
  if (_s7Weather24LocationCompositionStateOwet_0(v23, 1, v24) == 1)
  {
    sub_100021A14(v23, &qword_100BC3620);
    v30 = static Color.clear.getter(v29);
    static Alignment.center.getter(v30);
    _FrameLayout.init(width:height:alignment:)(0, 0, 0, 0);
    v31 = v81;
    v32 = v82;
    v33 = v83;
    v34 = v84;
    *(_QWORD *)v3 = v30;
    *(_QWORD *)(v3 + 8) = v31;
    *(_BYTE *)(v3 + 16) = v32;
    *(_QWORD *)(v3 + 24) = v33;
    *(_BYTE *)(v3 + 32) = v34;
    *(_OWORD *)(v3 + 40) = v85;
    swift_storeEnumTagMultiPayload(v3, v79, 1);
    v35 = sub_1000BA294(&qword_100BC4B70);
    v36 = sub_1001A3724(&qword_100BC4B78, &qword_100BC4B68, (void (*)(void))sub_1001A3708);
    v37 = sub_1001A3880();
    _ConditionalContent<>.init(storage:)(v3, v15, v35, v36, v37);
  }
  else
  {
    v71 = v15;
    v38 = v79;
    sub_1001A36C4(v23, v28);
    v70 = type metadata accessor for MapContentStatusBanner(0);
    v39 = *(int *)(v70 + 20);
    v73 = v2;
    sub_1000DB418((_QWORD *)(v2 + v39), *(_QWORD *)(v2 + v39 + 24));
    v72 = v28;
    sub_100129198(v28, v10);
    v40 = static Color.primary.getter();
    KeyPath = swift_getKeyPath(&unk_10097ED38);
    sub_1001A38EC((uint64_t)v10, v1);
    v42 = (uint64_t *)(v1 + *(int *)(v11 + 36));
    *v42 = KeyPath;
    v42[1] = v40;
    sub_1000215BC((uint64_t)v10, type metadata accessor for ContentStatusBannerView);
    v44 = static Edge.Set.leading.getter(v43);
    v45 = static Edge.Set.trailing.getter();
    v46 = Edge.Set.init(rawValue:)(0);
    v47 = Edge.Set.init(rawValue:)(v46);
    if (Edge.Set.init(rawValue:)(v47 & v44) != v44)
      v46 = Edge.Set.init(rawValue:)(v46 | v44);
    v48 = Edge.Set.init(rawValue:)(v46);
    if (Edge.Set.init(rawValue:)(v48 & v45) != v45)
      LOBYTE(v46) = Edge.Set.init(rawValue:)(v46 | v45);
    v49 = v71;
    v50 = v76;
    sub_10007EBC8(v1, v76, &qword_100BC4B58);
    v51 = v50 + *(int *)(v74 + 36);
    *(_BYTE *)v51 = v46;
    *(_OWORD *)(v51 + 8) = 0u;
    *(_OWORD *)(v51 + 24) = 0u;
    *(_BYTE *)(v51 + 40) = 1;
    sub_100021A14(v1, &qword_100BC4B58);
    v53 = static Edge.Set.bottom.getter(v52);
    v54 = v53;
    v55 = v77;
    sub_100117228(v53);
    v56 = sub_100016BF8();
    sub_1000215BC(v55, type metadata accessor for DisplayMetrics);
    v57 = EdgeInsets.init(_all:)(v56);
    v59 = v58;
    v61 = v60;
    v63 = v62;
    v64 = v75;
    sub_10007EBC8(v50, v75, &qword_100BC4B60);
    v65 = v64 + *(int *)(v49 + 36);
    *(_BYTE *)v65 = v54;
    *(double *)(v65 + 8) = v57;
    *(_QWORD *)(v65 + 16) = v59;
    *(_QWORD *)(v65 + 24) = v61;
    *(_QWORD *)(v65 + 32) = v63;
    *(_BYTE *)(v65 + 40) = 0;
    sub_100099298(v50);
    v66 = v78;
    sub_1001A3930(v64, v78);
    sub_10007EBC8(v66, v3, &qword_100BC4B68);
    swift_storeEnumTagMultiPayload(v3, v38, 0);
    v67 = sub_1000BA294(&qword_100BC4B70);
    v68 = sub_1001A3724(&qword_100BC4B78, &qword_100BC4B68, (void (*)(void))sub_1001A3708);
    v69 = sub_1001A3880();
    _ConditionalContent<>.init(storage:)(v3, v49, v67, v68, v69);
    sub_100021A14(v66, &qword_100BC4B68);
    sub_1000215BC(v72, type metadata accessor for ContentStatusBanner);
  }
}

uint64_t sub_1001A36C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ContentStatusBanner(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001A3708()
{
  return sub_1001A3724(&qword_100BC4B80, &qword_100BC4B60, (void (*)(void))sub_1001A3790);
}

uint64_t sub_1001A3724(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_100075EB0(a2);
    a3();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1001A3790()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC4B88;
  if (!qword_100BC4B88)
  {
    v1 = sub_100075EB0(&qword_100BC4B58);
    sub_1001A37FC();
    sub_1001A383C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BC4B88);
  }
  return result;
}

unint64_t sub_1001A37FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC4B90;
  if (!qword_100BC4B90)
  {
    v1 = type metadata accessor for ContentStatusBannerView(255);
    result = swift_getWitnessTable(&unk_1009BD408, v1);
    atomic_store(result, (unint64_t *)&qword_100BC4B90);
  }
  return result;
}

unint64_t sub_1001A383C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC4B98;
  if (!qword_100BC4B98)
  {
    v1 = sub_100075EB0((uint64_t *)&unk_100C09EE0);
    result = swift_getWitnessTable(&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100BC4B98);
  }
  return result;
}

unint64_t sub_1001A3880()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC4BA0;
  if (!qword_100BC4BA0)
  {
    v1 = sub_100075EB0(&qword_100BC4B70);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BC4BA0);
  }
  return result;
}

uint64_t sub_1001A38EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ContentStatusBannerView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001A3930(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BC4B68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1001A397C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC4BA8;
  if (!qword_100BC4BA8)
  {
    v1 = sub_100075EB0(&qword_100BC4BB0);
    sub_1001A3724(&qword_100BC4B78, &qword_100BC4B68, (void (*)(void))sub_1001A3708);
    sub_1001A3880();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BC4BA8);
  }
  return result;
}

uint64_t sub_1001A3A00(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  int *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t active;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t EnumCaseMultiPayload;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  _QWORD *v100;
  uint64_t v101;
  _QWORD *v102;
  _QWORD *v103;
  uint64_t v104;
  _QWORD *v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  int *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void (*v116)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v117;
  uint64_t v118;
  uint64_t v119;
  _QWORD *v120;
  _QWORD *v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  _QWORD *v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  _QWORD *v129;
  uint64_t v130;
  _QWORD *v131;
  _QWORD *v132;
  uint64_t v133;
  _QWORD *v134;
  _QWORD *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t *v140;
  void (*v141)(uint64_t, uint64_t, uint64_t);
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  void (*v148)(uint64_t, uint64_t, uint64_t);
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    v6 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v6;
    v7 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v7;
    v8 = a2[7];
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v8;
    v9 = a2[8];
    v10 = a2[9];
    *(_QWORD *)(a1 + 64) = v9;
    *(_QWORD *)(a1 + 72) = v10;
    v12 = a2[10];
    v11 = a2[11];
    *(_QWORD *)(a1 + 80) = v12;
    *(_QWORD *)(a1 + 88) = v11;
    v13 = a2[12];
    *(_QWORD *)(a1 + 96) = v13;
    *(_BYTE *)(a1 + 104) = *((_BYTE *)a2 + 104);
    v14 = (void *)a2[14];
    v15 = a3[9];
    v150 = a1 + v15;
    v149 = (uint64_t)a2 + v15;
    *(_QWORD *)(a1 + 112) = v14;
    v16 = type metadata accessor for TemperatureScaleConfiguration(0);
    v148 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
    swift_bridgeObjectRetain(v5);
    swift_bridgeObjectRetain(v6);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRetain(v10);
    swift_bridgeObjectRetain(v12);
    swift_bridgeObjectRetain(v13);
    v17 = v14;
    v148(v150, v149, v16);
    v18 = a3[11];
    *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
    v19 = *(uint64_t *)((char *)a2 + v18);
    *(_QWORD *)(a1 + v18) = v19;
    v20 = a3[12];
    v21 = a1 + v20;
    v22 = (uint64_t)a2 + v20;
    v23 = *(void **)v22;
    v24 = *(void **)(v22 + 8);
    v25 = *(_QWORD *)(v22 + 16);
    LOBYTE(v6) = *(_BYTE *)(v22 + 24);
    swift_bridgeObjectRetain(v19);
    sub_1001A41A0(v23, v24, v25, v6);
    *(_QWORD *)v21 = v23;
    *(_QWORD *)(v21 + 8) = v24;
    *(_QWORD *)(v21 + 16) = v25;
    *(_BYTE *)(v21 + 24) = v6;
    v26 = a2;
    v27 = a3[13];
    v28 = (char *)(a1 + v27);
    v29 = (char *)a2 + v27;
    v30 = type metadata accessor for TemperatureAveragesHeroChartViewModel.PeakMarkModel(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v30))
    {
      v31 = sub_1000BA294(&qword_100BC4BB8);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      v34 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v28, v29, v34);
      *(_QWORD *)&v28[*(int *)(v30 + 20)] = *(_QWORD *)&v29[*(int *)(v30 + 20)];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v30);
    }
    v35 = a3[14];
    v36 = (char *)(a1 + v35);
    v37 = (char *)a2 + v35;
    v38 = (int *)type metadata accessor for PeakUpperMarkModel(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, (uint64_t)v38))
    {
      v39 = sub_1000BA294(&qword_100BC4BC0);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      v40 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v36, v37, v40);
      *(_QWORD *)&v36[v38[5]] = *(_QWORD *)&v37[v38[5]];
      v41 = v38[6];
      v42 = &v36[v41];
      v43 = &v37[v41];
      v44 = *((_QWORD *)v43 + 1);
      *(_QWORD *)v42 = *(_QWORD *)v43;
      *((_QWORD *)v42 + 1) = v44;
      v45 = v38[7];
      v46 = &v36[v45];
      v47 = &v37[v45];
      v48 = *((_QWORD *)v47 + 1);
      *(_QWORD *)v46 = *(_QWORD *)v47;
      *((_QWORD *)v46 + 1) = v48;
      v49 = v38[8];
      v50 = &v36[v49];
      v51 = &v37[v49];
      v52 = *((_QWORD *)v51 + 1);
      *(_QWORD *)v50 = *(_QWORD *)v51;
      *((_QWORD *)v50 + 1) = v52;
      swift_bridgeObjectRetain(v44);
      swift_bridgeObjectRetain(v48);
      swift_bridgeObjectRetain(v52);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v36, 0, 1, (uint64_t)v38);
    }
    v53 = a3[15];
    v54 = a1 + v53;
    v55 = (uint64_t)a2 + v53;
    v56 = type metadata accessor for DetailHeroChartLollipopModel(0);
    if (swift_getEnumCaseMultiPayload(v55) == 1)
    {
      v151 = v56;
      *(_QWORD *)v54 = *(_QWORD *)v55;
      active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
      v58 = *(int *)(active + 20);
      v59 = v54 + v58;
      v60 = v55 + v58;
      v61 = type metadata accessor for Date(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(v59, v60, v61);
      v62 = (int *)type metadata accessor for LollipopMarkModel(0);
      *(_QWORD *)(v59 + v62[5]) = *(_QWORD *)(v60 + v62[5]);
      *(_QWORD *)(v59 + v62[6]) = *(_QWORD *)(v60 + v62[6]);
      *(_QWORD *)(v59 + v62[7]) = *(_QWORD *)(v60 + v62[7]);
      v63 = *(int *)(active + 24);
      v64 = v54 + v63;
      v65 = v55 + v63;
      v66 = type metadata accessor for LollipopDetailViewModel(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v65);
      v68 = EnumCaseMultiPayload;
      if ((_DWORD)EnumCaseMultiPayload == 2)
      {
        v80 = *(_QWORD *)(v65 + 8);
        *(_QWORD *)v64 = *(_QWORD *)v65;
        *(_QWORD *)(v64 + 8) = v80;
        v81 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
        v82 = v81[5];
        v83 = v66;
        v84 = v64 + v82;
        v85 = v65 + v82;
        v86 = type metadata accessor for AttributedString(0);
        v87 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v86 - 8) + 16);
        v88 = swift_bridgeObjectRetain(v80);
        v89 = v84;
        v66 = v83;
        v87(v89, v85, v86, v88);
        v26 = a2;
        v90 = v81[6];
        v91 = (_QWORD *)(v64 + v90);
        v92 = (_QWORD *)(v65 + v90);
        v93 = v92[1];
        *v91 = *v92;
        v91[1] = v93;
        v94 = v81[7];
        v95 = (_QWORD *)(v64 + v94);
        v96 = (_QWORD *)(v65 + v94);
        v97 = v96[1];
        *v95 = *v96;
        v95[1] = v97;
        v98 = v81[8];
        v99 = (_QWORD *)(v64 + v98);
        v100 = (_QWORD *)(v65 + v98);
        v70 = v100[1];
        *v99 = *v100;
        v99[1] = v70;
        v101 = v81[9];
        v102 = (_QWORD *)(v64 + v101);
        v103 = (_QWORD *)(v65 + v101);
        v71 = v103[1];
        *v102 = *v103;
        v102[1] = v71;
        v104 = v81[10];
        v105 = (_QWORD *)(v64 + v104);
        v106 = (_QWORD *)(v65 + v104);
        v72 = v106[1];
        *v105 = *v106;
        v105[1] = v72;
        v107 = v81[11];
        v68 = 2;
        *(_BYTE *)(v64 + v107) = *(_BYTE *)(v65 + v107);
        swift_bridgeObjectRetain(v93);
        v69 = v97;
      }
      else
      {
        if ((_DWORD)EnumCaseMultiPayload != 1)
        {
          v56 = v151;
          v70 = *(_QWORD *)(v65 + 8);
          *(_QWORD *)v64 = *(_QWORD *)v65;
          *(_QWORD *)(v64 + 8) = v70;
          v71 = *(_QWORD *)(v65 + 24);
          *(_QWORD *)(v64 + 16) = *(_QWORD *)(v65 + 16);
          *(_QWORD *)(v64 + 24) = v71;
          v72 = *(_QWORD *)(v65 + 40);
          *(_QWORD *)(v64 + 32) = *(_QWORD *)(v65 + 32);
          *(_QWORD *)(v64 + 40) = v72;
          goto LABEL_19;
        }
        v69 = *(_QWORD *)(v65 + 8);
        *(_QWORD *)v64 = *(_QWORD *)v65;
        *(_QWORD *)(v64 + 8) = v69;
        v70 = *(_QWORD *)(v65 + 24);
        *(_QWORD *)(v64 + 16) = *(_QWORD *)(v65 + 16);
        *(_QWORD *)(v64 + 24) = v70;
        v71 = *(_QWORD *)(v65 + 40);
        *(_QWORD *)(v64 + 32) = *(_QWORD *)(v65 + 32);
        *(_QWORD *)(v64 + 40) = v71;
        v72 = *(_QWORD *)(v65 + 56);
        *(_QWORD *)(v64 + 48) = *(_QWORD *)(v65 + 48);
        *(_QWORD *)(v64 + 56) = v72;
        *(_BYTE *)(v64 + 64) = *(_BYTE *)(v65 + 64);
        *(_BYTE *)(v64 + 65) = *(_BYTE *)(v65 + 65);
      }
      swift_bridgeObjectRetain(v69);
      v56 = v151;
LABEL_19:
      swift_bridgeObjectRetain(v70);
      swift_bridgeObjectRetain(v71);
      swift_bridgeObjectRetain(v72);
      swift_storeEnumTagMultiPayload(v64, v66, v68);
      v108 = 1;
LABEL_24:
      swift_storeEnumTagMultiPayload(v54, v56, v108);
      v136 = a3[16];
      v33 = a1;
      v137 = a1 + v136;
      v138 = (uint64_t)v26 + v136;
      v139 = type metadata accessor for Date(0);
      v140 = v26;
      v141 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v139 - 8) + 16);
      v141(v137, v138, v139);
      v141(a1 + a3[17], (uint64_t)v140 + a3[17], v139);
      v142 = a3[18];
      v143 = a1 + v142;
      v144 = (uint64_t)v140 + v142;
      v145 = type metadata accessor for DetailChartGradientModel(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v145 - 8) + 16))(v143, v144, v145);
      v146 = a3[20];
      *(_OWORD *)(a1 + a3[19]) = *(_OWORD *)((char *)v140 + a3[19]);
      *(_OWORD *)(a1 + v146) = *(_OWORD *)((char *)v140 + v146);
      return v33;
    }
    v73 = type metadata accessor for LollipopDetailViewModel(0);
    v74 = swift_getEnumCaseMultiPayload(v55);
    v75 = v74;
    if ((_DWORD)v74 == 2)
    {
      v152 = v56;
      v109 = *(_QWORD *)(v55 + 8);
      *(_QWORD *)v54 = *(_QWORD *)v55;
      *(_QWORD *)(v54 + 8) = v109;
      v110 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      v111 = v110[5];
      v112 = v73;
      v113 = v54 + v111;
      v114 = v55 + v111;
      v115 = type metadata accessor for AttributedString(0);
      v116 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v115 - 8) + 16);
      v117 = swift_bridgeObjectRetain(v109);
      v118 = v113;
      v73 = v112;
      v116(v118, v114, v115, v117);
      v26 = a2;
      v119 = v110[6];
      v120 = (_QWORD *)(v54 + v119);
      v121 = (_QWORD *)(v55 + v119);
      v122 = v121[1];
      *v120 = *v121;
      v120[1] = v122;
      v123 = v110[7];
      v124 = (_QWORD *)(v54 + v123);
      v125 = (_QWORD *)(v55 + v123);
      v126 = v125[1];
      *v124 = *v125;
      v124[1] = v126;
      v127 = v110[8];
      v128 = (_QWORD *)(v54 + v127);
      v129 = (_QWORD *)(v55 + v127);
      v77 = v129[1];
      *v128 = *v129;
      v128[1] = v77;
      v130 = v110[9];
      v131 = (_QWORD *)(v54 + v130);
      v132 = (_QWORD *)(v55 + v130);
      v78 = v132[1];
      *v131 = *v132;
      v131[1] = v78;
      v133 = v110[10];
      v134 = (_QWORD *)(v54 + v133);
      v135 = (_QWORD *)(v55 + v133);
      v79 = v135[1];
      *v134 = *v135;
      v134[1] = v79;
      *(_BYTE *)(v54 + v110[11]) = *(_BYTE *)(v55 + v110[11]);
      swift_bridgeObjectRetain(v122);
      v76 = v126;
      v56 = v152;
    }
    else
    {
      if ((_DWORD)v74 != 1)
      {
        v77 = *(_QWORD *)(v55 + 8);
        *(_QWORD *)v54 = *(_QWORD *)v55;
        *(_QWORD *)(v54 + 8) = v77;
        v78 = *(_QWORD *)(v55 + 24);
        *(_QWORD *)(v54 + 16) = *(_QWORD *)(v55 + 16);
        *(_QWORD *)(v54 + 24) = v78;
        v79 = *(_QWORD *)(v55 + 40);
        *(_QWORD *)(v54 + 32) = *(_QWORD *)(v55 + 32);
        *(_QWORD *)(v54 + 40) = v79;
        goto LABEL_23;
      }
      v76 = *(_QWORD *)(v55 + 8);
      *(_QWORD *)v54 = *(_QWORD *)v55;
      *(_QWORD *)(v54 + 8) = v76;
      v77 = *(_QWORD *)(v55 + 24);
      *(_QWORD *)(v54 + 16) = *(_QWORD *)(v55 + 16);
      *(_QWORD *)(v54 + 24) = v77;
      v78 = *(_QWORD *)(v55 + 40);
      *(_QWORD *)(v54 + 32) = *(_QWORD *)(v55 + 32);
      *(_QWORD *)(v54 + 40) = v78;
      v79 = *(_QWORD *)(v55 + 56);
      *(_QWORD *)(v54 + 48) = *(_QWORD *)(v55 + 48);
      *(_QWORD *)(v54 + 56) = v79;
      *(_BYTE *)(v54 + 64) = *(_BYTE *)(v55 + 64);
      *(_BYTE *)(v54 + 65) = *(_BYTE *)(v55 + 65);
    }
    swift_bridgeObjectRetain(v76);
LABEL_23:
    swift_bridgeObjectRetain(v77);
    swift_bridgeObjectRetain(v78);
    swift_bridgeObjectRetain(v79);
    swift_storeEnumTagMultiPayload(v54, v73, v75);
    v108 = 0;
    goto LABEL_24;
  }
  v32 = *a2;
  *(_QWORD *)a1 = *a2;
  v33 = v32 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v33;
}

id sub_1001A41A0(id result, void *a2, uint64_t a3, unsigned __int8 a4)
{
  id v4;
  id v5;

  if (a4 <= 0x3Fu)
  {
    v5 = result;
    v4 = a2;
    return v5;
  }
  return result;
}

uint64_t type metadata accessor for TemperatureAveragesHeroChartViewModel.PeakMarkModel(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC4D00, (uint64_t)&nominal type descriptor for TemperatureAveragesHeroChartViewModel.PeakMarkModel);
}

uint64_t sub_1001A41E8(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t active;
  uint64_t v14;
  uint64_t v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v4 = a1 + a2[9];
  v5 = type metadata accessor for TemperatureScaleConfiguration(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  sub_1001A44FC(*(void **)(a1 + a2[12]), *(void **)(a1 + a2[12] + 8), *(_QWORD *)(a1 + a2[12] + 16), *(_BYTE *)(a1 + a2[12] + 24));
  v6 = a1 + a2[13];
  v7 = type metadata accessor for TemperatureAveragesHeroChartViewModel.PeakMarkModel(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v6, 1, v7))
  {
    v8 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  v9 = a1 + a2[14];
  v10 = type metadata accessor for PeakUpperMarkModel(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v9, 1, v10))
  {
    v11 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v9, v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v12 = a1 + a2[15];
  type metadata accessor for DetailHeroChartLollipopModel(0);
  if (swift_getEnumCaseMultiPayload(v12) == 1)
  {
    active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
    v14 = v12 + *(int *)(active + 20);
    v15 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
    v12 += *(int *)(active + 24);
  }
  type metadata accessor for LollipopDetailViewModel(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v12);
  switch(EnumCaseMultiPayload)
  {
    case 2:
      swift_bridgeObjectRelease();
      v17 = v12 + *(int *)(type metadata accessor for TitleAndDetailLollipopDetailViewModel(0) + 20);
      v18 = type metadata accessor for AttributedString(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_13;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_13;
    case 0:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_13:
      swift_bridgeObjectRelease();
      break;
  }
  v19 = a1 + a2[16];
  v20 = type metadata accessor for Date(0);
  v21 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8);
  v21(v19, v20);
  v21(a1 + a2[17], v20);
  v22 = a1 + a2[18];
  v23 = type metadata accessor for DetailChartGradientModel(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v22, v23);
}

void sub_1001A44FC(void *a1, void *a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 0x3Fu)
  {

  }
}

uint64_t sub_1001A4530(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  int *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t active;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t EnumCaseMultiPayload;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  _QWORD *v97;
  uint64_t v98;
  _QWORD *v99;
  _QWORD *v100;
  uint64_t v101;
  _QWORD *v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  int *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  void (*v112)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  _QWORD *v117;
  uint64_t v118;
  uint64_t v119;
  _QWORD *v120;
  _QWORD *v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  _QWORD *v125;
  uint64_t v126;
  _QWORD *v127;
  _QWORD *v128;
  uint64_t v129;
  _QWORD *v130;
  _QWORD *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  void (*v137)(uint64_t, uint64_t, uint64_t);
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  void (*v144)(uint64_t, uint64_t, uint64_t);
  void *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  v8 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v8;
  v9 = *(_QWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v9;
  *(_QWORD *)(a1 + 72) = v10;
  v11 = *(_QWORD *)(a2 + 88);
  v146 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 80) = v146;
  *(_QWORD *)(a1 + 88) = v11;
  v12 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 96) = v12;
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  v145 = *(void **)(a2 + 112);
  v13 = a3[9];
  v147 = a2 + v13;
  v150 = a1 + v13;
  *(_QWORD *)(a1 + 112) = v145;
  v14 = type metadata accessor for TemperatureScaleConfiguration(0);
  v144 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  v15 = v8;
  v16 = a2;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v146);
  swift_bridgeObjectRetain(v12);
  v17 = v145;
  v144(v150, v147, v14);
  v18 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  v19 = *(_QWORD *)(a2 + v18);
  *(_QWORD *)(a1 + v18) = v19;
  v20 = a3[12];
  v21 = a1 + v20;
  v22 = v16 + v20;
  v23 = *(void **)v22;
  v24 = *(void **)(v22 + 8);
  v25 = *(_QWORD *)(v22 + 16);
  LOBYTE(v6) = *(_BYTE *)(v22 + 24);
  swift_bridgeObjectRetain(v19);
  sub_1001A41A0(v23, v24, v25, v6);
  *(_QWORD *)v21 = v23;
  *(_QWORD *)(v21 + 8) = v24;
  *(_QWORD *)(v21 + 16) = v25;
  *(_BYTE *)(v21 + 24) = v6;
  v26 = a1;
  v27 = a3[13];
  v28 = (char *)(a1 + v27);
  v29 = (char *)(v16 + v27);
  v30 = type metadata accessor for TemperatureAveragesHeroChartViewModel.PeakMarkModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v30))
  {
    v31 = sub_1000BA294(&qword_100BC4BB8);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    v32 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v28, v29, v32);
    *(_QWORD *)&v28[*(int *)(v30 + 20)] = *(_QWORD *)&v29[*(int *)(v30 + 20)];
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v30);
  }
  v33 = a3[14];
  v34 = (char *)(a1 + v33);
  v35 = (char *)(v16 + v33);
  v36 = (int *)type metadata accessor for PeakUpperMarkModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v35, 1, (uint64_t)v36))
  {
    v37 = sub_1000BA294(&qword_100BC4BC0);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    v38 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v34, v35, v38);
    *(_QWORD *)&v34[v36[5]] = *(_QWORD *)&v35[v36[5]];
    v39 = v36[6];
    v40 = &v34[v39];
    v41 = &v35[v39];
    v42 = *((_QWORD *)v41 + 1);
    *(_QWORD *)v40 = *(_QWORD *)v41;
    *((_QWORD *)v40 + 1) = v42;
    v43 = v36[7];
    v44 = &v34[v43];
    v45 = &v35[v43];
    v46 = *((_QWORD *)v45 + 1);
    *(_QWORD *)v44 = *(_QWORD *)v45;
    *((_QWORD *)v44 + 1) = v46;
    v47 = v36[8];
    v48 = &v34[v47];
    v49 = &v35[v47];
    v50 = *((_QWORD *)v49 + 1);
    *(_QWORD *)v48 = *(_QWORD *)v49;
    *((_QWORD *)v48 + 1) = v50;
    swift_bridgeObjectRetain(v42);
    swift_bridgeObjectRetain(v46);
    swift_bridgeObjectRetain(v50);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v34, 0, 1, (uint64_t)v36);
  }
  v51 = a3[15];
  v52 = a1 + v51;
  v53 = v16 + v51;
  v54 = type metadata accessor for DetailHeroChartLollipopModel(0);
  v153 = v16;
  if (swift_getEnumCaseMultiPayload(v53) != 1)
  {
    v71 = type metadata accessor for LollipopDetailViewModel(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v53);
    v73 = EnumCaseMultiPayload;
    if ((_DWORD)EnumCaseMultiPayload == 2)
    {
      v152 = v54;
      v106 = *(_QWORD *)(v53 + 8);
      *(_QWORD *)v52 = *(_QWORD *)v53;
      *(_QWORD *)(v52 + 8) = v106;
      v107 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      v108 = v107[5];
      v149 = v71;
      v109 = v52 + v108;
      v110 = v53 + v108;
      v111 = type metadata accessor for AttributedString(0);
      v112 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v111 - 8) + 16);
      v113 = swift_bridgeObjectRetain(v106);
      v114 = v109;
      v71 = v149;
      v112(v114, v110, v111, v113);
      v26 = a1;
      v115 = v107[6];
      v116 = (_QWORD *)(v52 + v115);
      v117 = (_QWORD *)(v53 + v115);
      v118 = v117[1];
      *v116 = *v117;
      v116[1] = v118;
      v119 = v107[7];
      v120 = (_QWORD *)(v52 + v119);
      v121 = (_QWORD *)(v53 + v119);
      v122 = v121[1];
      *v120 = *v121;
      v120[1] = v122;
      v123 = v107[8];
      v124 = (_QWORD *)(v52 + v123);
      v125 = (_QWORD *)(v53 + v123);
      v75 = v125[1];
      *v124 = *v125;
      v124[1] = v75;
      v126 = v107[9];
      v127 = (_QWORD *)(v52 + v126);
      v128 = (_QWORD *)(v53 + v126);
      v76 = v128[1];
      *v127 = *v128;
      v127[1] = v76;
      v129 = v107[10];
      v130 = (_QWORD *)(v52 + v129);
      v131 = (_QWORD *)(v53 + v129);
      v77 = v131[1];
      *v130 = *v131;
      v130[1] = v77;
      *(_BYTE *)(v52 + v107[11]) = *(_BYTE *)(v53 + v107[11]);
      swift_bridgeObjectRetain(v118);
      v74 = v122;
      v54 = v152;
    }
    else
    {
      if ((_DWORD)EnumCaseMultiPayload != 1)
      {
        v75 = *(_QWORD *)(v53 + 8);
        *(_QWORD *)v52 = *(_QWORD *)v53;
        *(_QWORD *)(v52 + 8) = v75;
        v76 = *(_QWORD *)(v53 + 24);
        *(_QWORD *)(v52 + 16) = *(_QWORD *)(v53 + 16);
        *(_QWORD *)(v52 + 24) = v76;
        v77 = *(_QWORD *)(v53 + 40);
        *(_QWORD *)(v52 + 32) = *(_QWORD *)(v53 + 32);
        *(_QWORD *)(v52 + 40) = v77;
        goto LABEL_21;
      }
      v74 = *(_QWORD *)(v53 + 8);
      *(_QWORD *)v52 = *(_QWORD *)v53;
      *(_QWORD *)(v52 + 8) = v74;
      v75 = *(_QWORD *)(v53 + 24);
      *(_QWORD *)(v52 + 16) = *(_QWORD *)(v53 + 16);
      *(_QWORD *)(v52 + 24) = v75;
      v76 = *(_QWORD *)(v53 + 40);
      *(_QWORD *)(v52 + 32) = *(_QWORD *)(v53 + 32);
      *(_QWORD *)(v52 + 40) = v76;
      v77 = *(_QWORD *)(v53 + 56);
      *(_QWORD *)(v52 + 48) = *(_QWORD *)(v53 + 48);
      *(_QWORD *)(v52 + 56) = v77;
      *(_BYTE *)(v52 + 64) = *(_BYTE *)(v53 + 64);
      *(_BYTE *)(v52 + 65) = *(_BYTE *)(v53 + 65);
    }
    swift_bridgeObjectRetain(v74);
LABEL_21:
    swift_bridgeObjectRetain(v75);
    swift_bridgeObjectRetain(v76);
    swift_bridgeObjectRetain(v77);
    swift_storeEnumTagMultiPayload(v52, v71, v73);
    v105 = 0;
    goto LABEL_22;
  }
  v151 = v54;
  *(_QWORD *)v52 = *(_QWORD *)v53;
  active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
  v56 = *(int *)(active + 20);
  v57 = v52 + v56;
  v58 = v53 + v56;
  v59 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v57, v58, v59);
  v60 = (int *)type metadata accessor for LollipopMarkModel(0);
  *(_QWORD *)(v57 + v60[5]) = *(_QWORD *)(v58 + v60[5]);
  *(_QWORD *)(v57 + v60[6]) = *(_QWORD *)(v58 + v60[6]);
  *(_QWORD *)(v57 + v60[7]) = *(_QWORD *)(v58 + v60[7]);
  v61 = *(int *)(active + 24);
  v62 = v52 + v61;
  v63 = v53 + v61;
  v64 = type metadata accessor for LollipopDetailViewModel(0);
  v65 = swift_getEnumCaseMultiPayload(v63);
  v66 = v65;
  if ((_DWORD)v65 == 2)
  {
    v78 = *(_QWORD *)(v63 + 8);
    *(_QWORD *)v62 = *(_QWORD *)v63;
    *(_QWORD *)(v62 + 8) = v78;
    v79 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
    v80 = v79[5];
    v148 = v64;
    v81 = v62 + v80;
    v82 = v63 + v80;
    v83 = type metadata accessor for AttributedString(0);
    v84 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v83 - 8) + 16);
    v85 = swift_bridgeObjectRetain(v78);
    v86 = v81;
    v64 = v148;
    v84(v86, v82, v83, v85);
    v26 = a1;
    v87 = v79[6];
    v88 = (_QWORD *)(v62 + v87);
    v89 = (_QWORD *)(v63 + v87);
    v90 = v89[1];
    *v88 = *v89;
    v88[1] = v90;
    v91 = v79[7];
    v92 = (_QWORD *)(v62 + v91);
    v93 = (_QWORD *)(v63 + v91);
    v94 = v93[1];
    *v92 = *v93;
    v92[1] = v94;
    v95 = v79[8];
    v96 = (_QWORD *)(v62 + v95);
    v97 = (_QWORD *)(v63 + v95);
    v68 = v97[1];
    *v96 = *v97;
    v96[1] = v68;
    v98 = v79[9];
    v99 = (_QWORD *)(v62 + v98);
    v100 = (_QWORD *)(v63 + v98);
    v69 = v100[1];
    *v99 = *v100;
    v99[1] = v69;
    v101 = v79[10];
    v102 = (_QWORD *)(v62 + v101);
    v103 = (_QWORD *)(v63 + v101);
    v70 = v103[1];
    *v102 = *v103;
    v102[1] = v70;
    v104 = v79[11];
    v66 = 2;
    *(_BYTE *)(v62 + v104) = *(_BYTE *)(v63 + v104);
    swift_bridgeObjectRetain(v90);
    v67 = v94;
  }
  else
  {
    if ((_DWORD)v65 != 1)
    {
      v54 = v151;
      v68 = *(_QWORD *)(v63 + 8);
      *(_QWORD *)v62 = *(_QWORD *)v63;
      *(_QWORD *)(v62 + 8) = v68;
      v69 = *(_QWORD *)(v63 + 24);
      *(_QWORD *)(v62 + 16) = *(_QWORD *)(v63 + 16);
      *(_QWORD *)(v62 + 24) = v69;
      v70 = *(_QWORD *)(v63 + 40);
      *(_QWORD *)(v62 + 32) = *(_QWORD *)(v63 + 32);
      *(_QWORD *)(v62 + 40) = v70;
      goto LABEL_17;
    }
    v67 = *(_QWORD *)(v63 + 8);
    *(_QWORD *)v62 = *(_QWORD *)v63;
    *(_QWORD *)(v62 + 8) = v67;
    v68 = *(_QWORD *)(v63 + 24);
    *(_QWORD *)(v62 + 16) = *(_QWORD *)(v63 + 16);
    *(_QWORD *)(v62 + 24) = v68;
    v69 = *(_QWORD *)(v63 + 40);
    *(_QWORD *)(v62 + 32) = *(_QWORD *)(v63 + 32);
    *(_QWORD *)(v62 + 40) = v69;
    v70 = *(_QWORD *)(v63 + 56);
    *(_QWORD *)(v62 + 48) = *(_QWORD *)(v63 + 48);
    *(_QWORD *)(v62 + 56) = v70;
    *(_BYTE *)(v62 + 64) = *(_BYTE *)(v63 + 64);
    *(_BYTE *)(v62 + 65) = *(_BYTE *)(v63 + 65);
  }
  swift_bridgeObjectRetain(v67);
  v54 = v151;
LABEL_17:
  swift_bridgeObjectRetain(v68);
  swift_bridgeObjectRetain(v69);
  swift_bridgeObjectRetain(v70);
  swift_storeEnumTagMultiPayload(v62, v64, v66);
  v105 = 1;
LABEL_22:
  swift_storeEnumTagMultiPayload(v52, v54, v105);
  v132 = a3[16];
  v133 = v26 + v132;
  v134 = v153 + v132;
  v135 = type metadata accessor for Date(0);
  v136 = v26;
  v137 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v135 - 8) + 16);
  v137(v133, v134, v135);
  v137(v136 + a3[17], v153 + a3[17], v135);
  v138 = a3[18];
  v139 = v136 + v138;
  v140 = v153 + v138;
  v141 = type metadata accessor for DetailChartGradientModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v141 - 8) + 16))(v139, v140, v141);
  v142 = a3[20];
  *(_OWORD *)(v136 + a3[19]) = *(_OWORD *)(v153 + a3[19]);
  *(_OWORD *)(v136 + v142) = *(_OWORD *)(v153 + v142);
  return v136;
}

uint64_t sub_1001A4C7C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  unsigned __int8 v32;
  void *v33;
  void *v34;
  uint64_t v35;
  unsigned __int8 v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  int *v48;
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t active;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unsigned int EnumCaseMultiPayload;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  int *v105;
  uint64_t v106;
  uint64_t v107;
  void (*v108)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v109;
  uint64_t v110;
  _QWORD *v111;
  _QWORD *v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  _QWORD *v116;
  uint64_t v117;
  _QWORD *v118;
  _QWORD *v119;
  uint64_t v120;
  _QWORD *v121;
  _QWORD *v122;
  uint64_t v123;
  _QWORD *v124;
  _QWORD *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  int *v129;
  uint64_t v130;
  uint64_t v131;
  void (*v132)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v133;
  uint64_t v134;
  _QWORD *v135;
  _QWORD *v136;
  uint64_t v137;
  uint64_t v138;
  _QWORD *v139;
  _QWORD *v140;
  uint64_t v141;
  _QWORD *v142;
  _QWORD *v143;
  uint64_t v144;
  _QWORD *v145;
  _QWORD *v146;
  uint64_t v147;
  _QWORD *v148;
  _QWORD *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  void (*v155)(uint64_t, uint64_t, uint64_t);
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  _QWORD *v161;
  _QWORD *v162;
  uint64_t v163;
  _QWORD *v164;
  _QWORD *v165;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  unsigned int v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 64) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 72) = v11;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 80) = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v13 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 96) = v13;
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  v14 = *(void **)(a2 + 112);
  v15 = *(void **)(a1 + 112);
  *(_QWORD *)(a1 + 112) = v14;
  v16 = v14;

  v17 = a3[9];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = type metadata accessor for TemperatureScaleConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 24))(v18, v19, v20);
  v21 = a3[10];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (_QWORD *)(a2 + v21);
  *v22 = *v23;
  v22[1] = v23[1];
  v24 = a3[11];
  v25 = *(_QWORD *)(a2 + v24);
  *(_QWORD *)(a1 + v24) = v25;
  swift_bridgeObjectRetain(v25);
  swift_bridgeObjectRelease();
  v26 = a3[12];
  v27 = a1 + v26;
  v28 = a2 + v26;
  v29 = *(id *)v28;
  v30 = *(void **)(v28 + 8);
  v31 = *(_QWORD *)(v28 + 16);
  v32 = *(_BYTE *)(v28 + 24);
  sub_1001A41A0(*(id *)v28, v30, v31, v32);
  v33 = *(void **)v27;
  v34 = *(void **)(v27 + 8);
  v35 = *(_QWORD *)(v27 + 16);
  *(_QWORD *)v27 = v29;
  *(_QWORD *)(v27 + 8) = v30;
  *(_QWORD *)(v27 + 16) = v31;
  v36 = *(_BYTE *)(v27 + 24);
  *(_BYTE *)(v27 + 24) = v32;
  sub_1001A44FC(v33, v34, v35, v36);
  v37 = a3[13];
  v38 = (char *)(a1 + v37);
  v39 = (char *)(a2 + v37);
  v40 = type metadata accessor for TemperatureAveragesHeroChartViewModel.PeakMarkModel(0);
  v41 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v40);
  v42 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v40);
  if (v41)
  {
    if (!v42)
    {
      v43 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v38, v39, v43);
      *(_QWORD *)&v38[*(int *)(v40 + 20)] = *(_QWORD *)&v39[*(int *)(v40 + 20)];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v40);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v42)
  {
    sub_1000215BC((uint64_t)v38, type metadata accessor for TemperatureAveragesHeroChartViewModel.PeakMarkModel);
LABEL_6:
    v44 = sub_1000BA294(&qword_100BC4BB8);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    goto LABEL_7;
  }
  v90 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v90 - 8) + 24))(v38, v39, v90);
  *(_QWORD *)&v38[*(int *)(v40 + 20)] = *(_QWORD *)&v39[*(int *)(v40 + 20)];
LABEL_7:
  v45 = a3[14];
  v46 = (char *)(a1 + v45);
  v47 = (char *)(a2 + v45);
  v48 = (int *)type metadata accessor for PeakUpperMarkModel(0);
  v49 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v46, 1, (uint64_t)v48);
  v50 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v47, 1, (uint64_t)v48);
  if (v49)
  {
    if (!v50)
    {
      v51 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v46, v47, v51);
      *(_QWORD *)&v46[v48[5]] = *(_QWORD *)&v47[v48[5]];
      v52 = v48[6];
      v53 = &v46[v52];
      v54 = &v47[v52];
      *(_QWORD *)v53 = *(_QWORD *)v54;
      v55 = *((_QWORD *)v54 + 1);
      *((_QWORD *)v53 + 1) = v55;
      v56 = v48[7];
      v57 = &v46[v56];
      v58 = &v47[v56];
      *(_QWORD *)v57 = *(_QWORD *)v58;
      v59 = *((_QWORD *)v58 + 1);
      *((_QWORD *)v57 + 1) = v59;
      v60 = v48[8];
      v61 = &v46[v60];
      v62 = &v47[v60];
      *(_QWORD *)v61 = *(_QWORD *)v62;
      v63 = *((_QWORD *)v62 + 1);
      *((_QWORD *)v61 + 1) = v63;
      swift_bridgeObjectRetain(v55);
      swift_bridgeObjectRetain(v59);
      swift_bridgeObjectRetain(v63);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v46, 0, 1, (uint64_t)v48);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v50)
  {
    sub_1000215BC((uint64_t)v46, type metadata accessor for PeakUpperMarkModel);
LABEL_12:
    v64 = sub_1000BA294(&qword_100BC4BC0);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
    goto LABEL_13;
  }
  v91 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v91 - 8) + 24))(v46, v47, v91);
  *(_QWORD *)&v46[v48[5]] = *(_QWORD *)&v47[v48[5]];
  v92 = v48[6];
  v93 = &v46[v92];
  v94 = &v47[v92];
  *(_QWORD *)v93 = *(_QWORD *)v94;
  v95 = *((_QWORD *)v94 + 1);
  *((_QWORD *)v93 + 1) = v95;
  swift_bridgeObjectRetain(v95);
  swift_bridgeObjectRelease();
  v96 = v48[7];
  v97 = &v46[v96];
  v98 = &v47[v96];
  *(_QWORD *)v97 = *(_QWORD *)v98;
  v99 = *((_QWORD *)v98 + 1);
  *((_QWORD *)v97 + 1) = v99;
  swift_bridgeObjectRetain(v99);
  swift_bridgeObjectRelease();
  v100 = v48[8];
  v101 = &v46[v100];
  v102 = &v47[v100];
  *(_QWORD *)v101 = *(_QWORD *)v102;
  v103 = *((_QWORD *)v102 + 1);
  *((_QWORD *)v101 + 1) = v103;
  swift_bridgeObjectRetain(v103);
  swift_bridgeObjectRelease();
LABEL_13:
  if (a1 != a2)
  {
    v65 = a3[15];
    v66 = a1 + v65;
    v67 = a2 + v65;
    sub_1000215BC(a1 + v65, type metadata accessor for DetailHeroChartLollipopModel);
    v68 = type metadata accessor for DetailHeroChartLollipopModel(0);
    if (swift_getEnumCaseMultiPayload(v67) == 1)
    {
      v176 = v68;
      *(_QWORD *)v66 = *(_QWORD *)v67;
      active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
      v70 = *(int *)(active + 20);
      v71 = v66 + v70;
      v72 = v67 + v70;
      v73 = type metadata accessor for Date(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 16))(v71, v72, v73);
      v74 = (int *)type metadata accessor for LollipopMarkModel(0);
      *(_QWORD *)(v71 + v74[5]) = *(_QWORD *)(v72 + v74[5]);
      *(_QWORD *)(v71 + v74[6]) = *(_QWORD *)(v72 + v74[6]);
      *(_QWORD *)(v71 + v74[7]) = *(_QWORD *)(v72 + v74[7]);
      v75 = *(int *)(active + 24);
      v76 = v66 + v75;
      v77 = v67 + v75;
      v78 = type metadata accessor for LollipopDetailViewModel(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v77);
      v174 = EnumCaseMultiPayload;
      if (EnumCaseMultiPayload == 2)
      {
        *(_QWORD *)v76 = *(_QWORD *)v77;
        v104 = *(_QWORD *)(v77 + 8);
        *(_QWORD *)(v76 + 8) = v104;
        v171 = v78;
        v105 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
        v106 = v105[5];
        v167 = v77 + v106;
        v168 = v76 + v106;
        v107 = type metadata accessor for AttributedString(0);
        v108 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v107 - 8) + 16);
        v109 = swift_bridgeObjectRetain(v104);
        v108(v168, v167, v107, v109);
        v110 = v105[6];
        v111 = (_QWORD *)(v76 + v110);
        v112 = (_QWORD *)(v77 + v110);
        *v111 = *v112;
        v113 = v112[1];
        v111[1] = v113;
        v114 = v105[7];
        v115 = (_QWORD *)(v76 + v114);
        v116 = (_QWORD *)(v77 + v114);
        *v115 = *v116;
        v169 = v116[1];
        v115[1] = v169;
        v117 = v105[8];
        v118 = (_QWORD *)(v76 + v117);
        v119 = (_QWORD *)(v77 + v117);
        *v118 = *v119;
        v81 = v119[1];
        v118[1] = v81;
        v120 = v105[9];
        v121 = (_QWORD *)(v76 + v120);
        v122 = (_QWORD *)(v77 + v120);
        *v121 = *v122;
        v82 = v122[1];
        v121[1] = v82;
        v123 = v105[10];
        v124 = (_QWORD *)(v76 + v123);
        v125 = (_QWORD *)(v77 + v123);
        *v124 = *v125;
        v83 = v125[1];
        v124[1] = v83;
        v126 = v105[11];
        v78 = v171;
        *(_BYTE *)(v76 + v126) = *(_BYTE *)(v77 + v126);
        swift_bridgeObjectRetain(v113);
        v80 = v169;
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          *(_QWORD *)v76 = *(_QWORD *)v77;
          v81 = *(_QWORD *)(v77 + 8);
          *(_QWORD *)(v76 + 8) = v81;
          *(_QWORD *)(v76 + 16) = *(_QWORD *)(v77 + 16);
          v82 = *(_QWORD *)(v77 + 24);
          *(_QWORD *)(v76 + 24) = v82;
          *(_QWORD *)(v76 + 32) = *(_QWORD *)(v77 + 32);
          v83 = *(_QWORD *)(v77 + 40);
          *(_QWORD *)(v76 + 40) = v83;
          goto LABEL_26;
        }
        *(_QWORD *)v76 = *(_QWORD *)v77;
        v80 = *(_QWORD *)(v77 + 8);
        *(_QWORD *)(v76 + 8) = v80;
        *(_QWORD *)(v76 + 16) = *(_QWORD *)(v77 + 16);
        v81 = *(_QWORD *)(v77 + 24);
        *(_QWORD *)(v76 + 24) = v81;
        *(_QWORD *)(v76 + 32) = *(_QWORD *)(v77 + 32);
        v82 = *(_QWORD *)(v77 + 40);
        *(_QWORD *)(v76 + 40) = v82;
        *(_QWORD *)(v76 + 48) = *(_QWORD *)(v77 + 48);
        v83 = *(_QWORD *)(v77 + 56);
        *(_QWORD *)(v76 + 56) = v83;
        *(_BYTE *)(v76 + 64) = *(_BYTE *)(v77 + 64);
        *(_BYTE *)(v76 + 65) = *(_BYTE *)(v77 + 65);
      }
      swift_bridgeObjectRetain(v80);
LABEL_26:
      swift_bridgeObjectRetain(v81);
      swift_bridgeObjectRetain(v82);
      swift_bridgeObjectRetain(v83);
      swift_storeEnumTagMultiPayload(v76, v78, v174);
      v127 = 1;
      v68 = v176;
LABEL_31:
      swift_storeEnumTagMultiPayload(v66, v68, v127);
      goto LABEL_32;
    }
    v175 = type metadata accessor for LollipopDetailViewModel(0);
    v84 = swift_getEnumCaseMultiPayload(v67);
    v85 = v84;
    if ((_DWORD)v84 == 2)
    {
      *(_QWORD *)v66 = *(_QWORD *)v67;
      v128 = *(_QWORD *)(v67 + 8);
      *(_QWORD *)(v66 + 8) = v128;
      v177 = v68;
      v129 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      v130 = v129[5];
      v170 = v67 + v130;
      v172 = v66 + v130;
      v131 = type metadata accessor for AttributedString(0);
      v132 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v131 - 8) + 16);
      v133 = swift_bridgeObjectRetain(v128);
      v132(v172, v170, v131, v133);
      v134 = v129[6];
      v135 = (_QWORD *)(v66 + v134);
      v136 = (_QWORD *)(v67 + v134);
      *v135 = *v136;
      v137 = v136[1];
      v135[1] = v137;
      v138 = v129[7];
      v139 = (_QWORD *)(v66 + v138);
      v140 = (_QWORD *)(v67 + v138);
      *v139 = *v140;
      v173 = v140[1];
      v139[1] = v173;
      v141 = v129[8];
      v142 = (_QWORD *)(v66 + v141);
      v143 = (_QWORD *)(v67 + v141);
      *v142 = *v143;
      v87 = v143[1];
      v142[1] = v87;
      v144 = v129[9];
      v145 = (_QWORD *)(v66 + v144);
      v146 = (_QWORD *)(v67 + v144);
      *v145 = *v146;
      v88 = v146[1];
      v145[1] = v88;
      v147 = v129[10];
      v148 = (_QWORD *)(v66 + v147);
      v149 = (_QWORD *)(v67 + v147);
      *v148 = *v149;
      v89 = v149[1];
      v148[1] = v89;
      v150 = v129[11];
      v68 = v177;
      *(_BYTE *)(v66 + v150) = *(_BYTE *)(v67 + v150);
      swift_bridgeObjectRetain(v137);
      v86 = v173;
    }
    else
    {
      if ((_DWORD)v84 != 1)
      {
        *(_QWORD *)v66 = *(_QWORD *)v67;
        v87 = *(_QWORD *)(v67 + 8);
        *(_QWORD *)(v66 + 8) = v87;
        *(_QWORD *)(v66 + 16) = *(_QWORD *)(v67 + 16);
        v88 = *(_QWORD *)(v67 + 24);
        *(_QWORD *)(v66 + 24) = v88;
        *(_QWORD *)(v66 + 32) = *(_QWORD *)(v67 + 32);
        v89 = *(_QWORD *)(v67 + 40);
        *(_QWORD *)(v66 + 40) = v89;
        goto LABEL_30;
      }
      *(_QWORD *)v66 = *(_QWORD *)v67;
      v86 = *(_QWORD *)(v67 + 8);
      *(_QWORD *)(v66 + 8) = v86;
      *(_QWORD *)(v66 + 16) = *(_QWORD *)(v67 + 16);
      v87 = *(_QWORD *)(v67 + 24);
      *(_QWORD *)(v66 + 24) = v87;
      *(_QWORD *)(v66 + 32) = *(_QWORD *)(v67 + 32);
      v88 = *(_QWORD *)(v67 + 40);
      *(_QWORD *)(v66 + 40) = v88;
      *(_QWORD *)(v66 + 48) = *(_QWORD *)(v67 + 48);
      v89 = *(_QWORD *)(v67 + 56);
      *(_QWORD *)(v66 + 56) = v89;
      *(_BYTE *)(v66 + 64) = *(_BYTE *)(v67 + 64);
      *(_BYTE *)(v66 + 65) = *(_BYTE *)(v67 + 65);
    }
    swift_bridgeObjectRetain(v86);
LABEL_30:
    swift_bridgeObjectRetain(v87);
    swift_bridgeObjectRetain(v88);
    swift_bridgeObjectRetain(v89);
    swift_storeEnumTagMultiPayload(v66, v175, v85);
    v127 = 0;
    goto LABEL_31;
  }
LABEL_32:
  v151 = a3[16];
  v152 = a1 + v151;
  v153 = a2 + v151;
  v154 = type metadata accessor for Date(0);
  v155 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v154 - 8) + 24);
  v155(v152, v153, v154);
  v155(a1 + a3[17], a2 + a3[17], v154);
  v156 = a3[18];
  v157 = a1 + v156;
  v158 = a2 + v156;
  v159 = type metadata accessor for DetailChartGradientModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v159 - 8) + 24))(v157, v158, v159);
  v160 = a3[19];
  v161 = (_QWORD *)(a1 + v160);
  v162 = (_QWORD *)(a2 + v160);
  *v161 = *v162;
  v161[1] = v162[1];
  v163 = a3[20];
  v164 = (_QWORD *)(a1 + v163);
  v165 = (_QWORD *)(a2 + v163);
  *v164 = *v165;
  v164[1] = v165[1];
  return a1;
}

uint64_t sub_1001A5684(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t active;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  int *v39;
  uint64_t v40;
  _OWORD *v41;
  _OWORD *v42;
  uint64_t v43;
  int *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  int *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v70;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  v8 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v8;
  v9 = *(_OWORD *)(a2 + 89);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  v10 = a3[9];
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_OWORD *)(a1 + 89) = v9;
  v13 = type metadata accessor for TemperatureScaleConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);
  v15 = a3[12];
  v16 = a3[13];
  v17 = (_OWORD *)(a1 + v15);
  v18 = (_OWORD *)(a2 + v15);
  *v17 = *v18;
  *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)((char *)v18 + 9);
  v19 = (char *)(a1 + v16);
  v20 = (char *)(a2 + v16);
  v21 = type metadata accessor for TemperatureAveragesHeroChartViewModel.PeakMarkModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v21))
  {
    v22 = sub_1000BA294(&qword_100BC4BB8);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v23 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v19, v20, v23);
    *(_QWORD *)&v19[*(int *)(v21 + 20)] = *(_QWORD *)&v20[*(int *)(v21 + 20)];
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v21);
  }
  v24 = a3[14];
  v25 = (char *)(a1 + v24);
  v26 = (char *)(a2 + v24);
  v27 = (int *)type metadata accessor for PeakUpperMarkModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, (uint64_t)v27))
  {
    v28 = sub_1000BA294(&qword_100BC4BC0);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    v29 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v25, v26, v29);
    *(_QWORD *)&v25[v27[5]] = *(_QWORD *)&v26[v27[5]];
    *(_OWORD *)&v25[v27[6]] = *(_OWORD *)&v26[v27[6]];
    *(_OWORD *)&v25[v27[7]] = *(_OWORD *)&v26[v27[7]];
    *(_OWORD *)&v25[v27[8]] = *(_OWORD *)&v26[v27[8]];
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, (uint64_t)v27);
  }
  v30 = a3[15];
  v31 = (_QWORD *)(a1 + v30);
  v32 = (_QWORD *)(a2 + v30);
  v33 = type metadata accessor for DetailHeroChartLollipopModel(0);
  if (swift_getEnumCaseMultiPayload(v32) == 1)
  {
    *v31 = *v32;
    active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
    v35 = *(int *)(active + 20);
    v36 = (char *)v31 + v35;
    v37 = (char *)v32 + v35;
    v38 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
    v39 = (int *)type metadata accessor for LollipopMarkModel(0);
    *(_QWORD *)&v36[v39[5]] = *(_QWORD *)&v37[v39[5]];
    *(_QWORD *)&v36[v39[6]] = *(_QWORD *)&v37[v39[6]];
    *(_QWORD *)&v36[v39[7]] = *(_QWORD *)&v37[v39[7]];
    v40 = *(int *)(active + 24);
    v41 = (_OWORD *)((char *)v31 + v40);
    v42 = (_OWORD *)((char *)v32 + v40);
    v43 = type metadata accessor for LollipopDetailViewModel(0);
    if (swift_getEnumCaseMultiPayload(v42) == 2)
    {
      *v41 = *v42;
      v44 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      v45 = v44[5];
      v46 = (char *)v41 + v45;
      v70 = v33;
      v47 = (char *)v42 + v45;
      v48 = type metadata accessor for AttributedString(0);
      v49 = v47;
      v33 = v70;
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v46, v49, v48);
      *(_OWORD *)((char *)v41 + v44[6]) = *(_OWORD *)((char *)v42 + v44[6]);
      *(_OWORD *)((char *)v41 + v44[7]) = *(_OWORD *)((char *)v42 + v44[7]);
      *(_OWORD *)((char *)v41 + v44[8]) = *(_OWORD *)((char *)v42 + v44[8]);
      *(_OWORD *)((char *)v41 + v44[9]) = *(_OWORD *)((char *)v42 + v44[9]);
      *(_OWORD *)((char *)v41 + v44[10]) = *(_OWORD *)((char *)v42 + v44[10]);
      *((_BYTE *)v41 + v44[11]) = *((_BYTE *)v42 + v44[11]);
      swift_storeEnumTagMultiPayload(v41, v43, 2);
    }
    else
    {
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
    v56 = v31;
    v57 = v33;
    v58 = 1;
  }
  else
  {
    v50 = type metadata accessor for LollipopDetailViewModel(0);
    if (swift_getEnumCaseMultiPayload(v32) == 2)
    {
      *(_OWORD *)v31 = *(_OWORD *)v32;
      v51 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      v52 = v51[5];
      v53 = (char *)v31 + v52;
      v54 = (char *)v32 + v52;
      v55 = type metadata accessor for AttributedString(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v53, v54, v55);
      *(_OWORD *)((char *)v31 + v51[6]) = *(_OWORD *)((char *)v32 + v51[6]);
      *(_OWORD *)((char *)v31 + v51[7]) = *(_OWORD *)((char *)v32 + v51[7]);
      *(_OWORD *)((char *)v31 + v51[8]) = *(_OWORD *)((char *)v32 + v51[8]);
      *(_OWORD *)((char *)v31 + v51[9]) = *(_OWORD *)((char *)v32 + v51[9]);
      *(_OWORD *)((char *)v31 + v51[10]) = *(_OWORD *)((char *)v32 + v51[10]);
      *((_BYTE *)v31 + v51[11]) = *((_BYTE *)v32 + v51[11]);
      swift_storeEnumTagMultiPayload(v31, v50, 2);
    }
    else
    {
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    }
    v56 = v31;
    v57 = v33;
    v58 = 0;
  }
  swift_storeEnumTagMultiPayload(v56, v57, v58);
  v59 = a3[16];
  v60 = a1 + v59;
  v61 = a2 + v59;
  v62 = type metadata accessor for Date(0);
  v63 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 32);
  v63(v60, v61, v62);
  v63(a1 + a3[17], a2 + a3[17], v62);
  v64 = a3[18];
  v65 = a1 + v64;
  v66 = a2 + v64;
  v67 = type metadata accessor for DetailChartGradientModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(v65, v66, v67);
  v68 = a3[20];
  *(_OWORD *)(a1 + a3[19]) = *(_OWORD *)(a2 + a3[19]);
  *(_OWORD *)(a1 + v68) = *(_OWORD *)(a2 + v68);
  return a1;
}

uint64_t sub_1001A5B88(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  void *v22;
  void *v23;
  uint64_t v24;
  unsigned __int8 v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  int *v37;
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t active;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  int *v51;
  uint64_t v52;
  _OWORD *v53;
  _OWORD *v54;
  uint64_t v55;
  int *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  int *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(uint64_t, uint64_t, uint64_t);
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v97;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  v11 = *(void **)(a1 + 112);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);

  v12 = a3[9];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = type metadata accessor for TemperatureScaleConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  swift_bridgeObjectRelease();
  v17 = a3[12];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = *(_QWORD *)(v19 + 16);
  v21 = *(_BYTE *)(v19 + 24);
  v22 = *(void **)v18;
  v23 = *(void **)(v18 + 8);
  v24 = *(_QWORD *)(v18 + 16);
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *(_QWORD *)(v18 + 16) = v20;
  v25 = *(_BYTE *)(v18 + 24);
  *(_BYTE *)(v18 + 24) = v21;
  sub_1001A44FC(v22, v23, v24, v25);
  v26 = a3[13];
  v27 = (char *)(a1 + v26);
  v28 = (char *)(a2 + v26);
  v29 = type metadata accessor for TemperatureAveragesHeroChartViewModel.PeakMarkModel(0);
  v30 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v29);
  v31 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, v29);
  if (v30)
  {
    if (!v31)
    {
      v32 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v27, v28, v32);
      *(_QWORD *)&v27[*(int *)(v29 + 20)] = *(_QWORD *)&v28[*(int *)(v29 + 20)];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, v29);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v31)
  {
    sub_1000215BC((uint64_t)v27, type metadata accessor for TemperatureAveragesHeroChartViewModel.PeakMarkModel);
LABEL_6:
    v33 = sub_1000BA294(&qword_100BC4BB8);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    goto LABEL_7;
  }
  v68 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 40))(v27, v28, v68);
  *(_QWORD *)&v27[*(int *)(v29 + 20)] = *(_QWORD *)&v28[*(int *)(v29 + 20)];
LABEL_7:
  v34 = a3[14];
  v35 = (char *)(a1 + v34);
  v36 = (char *)(a2 + v34);
  v37 = (int *)type metadata accessor for PeakUpperMarkModel(0);
  v38 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v35, 1, (uint64_t)v37);
  v39 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, (uint64_t)v37);
  if (v38)
  {
    if (!v39)
    {
      v40 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v35, v36, v40);
      *(_QWORD *)&v35[v37[5]] = *(_QWORD *)&v36[v37[5]];
      *(_OWORD *)&v35[v37[6]] = *(_OWORD *)&v36[v37[6]];
      *(_OWORD *)&v35[v37[7]] = *(_OWORD *)&v36[v37[7]];
      *(_OWORD *)&v35[v37[8]] = *(_OWORD *)&v36[v37[8]];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, (uint64_t)v37);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v39)
  {
    sub_1000215BC((uint64_t)v35, type metadata accessor for PeakUpperMarkModel);
LABEL_12:
    v41 = sub_1000BA294(&qword_100BC4BC0);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    goto LABEL_13;
  }
  v69 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 40))(v35, v36, v69);
  *(_QWORD *)&v35[v37[5]] = *(_QWORD *)&v36[v37[5]];
  v70 = v37[6];
  v71 = &v35[v70];
  v72 = &v36[v70];
  v74 = *(_QWORD *)v72;
  v73 = *((_QWORD *)v72 + 1);
  *(_QWORD *)v71 = v74;
  *((_QWORD *)v71 + 1) = v73;
  swift_bridgeObjectRelease();
  v75 = v37[7];
  v76 = &v35[v75];
  v77 = &v36[v75];
  v79 = *(_QWORD *)v77;
  v78 = *((_QWORD *)v77 + 1);
  *(_QWORD *)v76 = v79;
  *((_QWORD *)v76 + 1) = v78;
  swift_bridgeObjectRelease();
  v80 = v37[8];
  v81 = &v35[v80];
  v82 = &v36[v80];
  v84 = *(_QWORD *)v82;
  v83 = *((_QWORD *)v82 + 1);
  *(_QWORD *)v81 = v84;
  *((_QWORD *)v81 + 1) = v83;
  swift_bridgeObjectRelease();
LABEL_13:
  if (a1 != a2)
  {
    v42 = a3[15];
    v43 = (_QWORD *)(a1 + v42);
    v44 = (_QWORD *)(a2 + v42);
    sub_1000215BC(a1 + v42, type metadata accessor for DetailHeroChartLollipopModel);
    v45 = type metadata accessor for DetailHeroChartLollipopModel(0);
    if (swift_getEnumCaseMultiPayload(v44) == 1)
    {
      *v43 = *v44;
      active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
      v47 = *(int *)(active + 20);
      v48 = (char *)v43 + v47;
      v49 = (char *)v44 + v47;
      v50 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
      v51 = (int *)type metadata accessor for LollipopMarkModel(0);
      *(_QWORD *)&v48[v51[5]] = *(_QWORD *)&v49[v51[5]];
      *(_QWORD *)&v48[v51[6]] = *(_QWORD *)&v49[v51[6]];
      *(_QWORD *)&v48[v51[7]] = *(_QWORD *)&v49[v51[7]];
      v52 = *(int *)(active + 24);
      v53 = (_OWORD *)((char *)v43 + v52);
      v54 = (_OWORD *)((char *)v44 + v52);
      v55 = type metadata accessor for LollipopDetailViewModel(0);
      if (swift_getEnumCaseMultiPayload(v54) == 2)
      {
        *v53 = *v54;
        v56 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
        v57 = v56[5];
        v58 = (char *)v53 + v57;
        v97 = v45;
        v59 = (char *)v54 + v57;
        v60 = type metadata accessor for AttributedString(0);
        v61 = v59;
        v45 = v97;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 32))(v58, v61, v60);
        *(_OWORD *)((char *)v53 + v56[6]) = *(_OWORD *)((char *)v54 + v56[6]);
        *(_OWORD *)((char *)v53 + v56[7]) = *(_OWORD *)((char *)v54 + v56[7]);
        *(_OWORD *)((char *)v53 + v56[8]) = *(_OWORD *)((char *)v54 + v56[8]);
        *(_OWORD *)((char *)v53 + v56[9]) = *(_OWORD *)((char *)v54 + v56[9]);
        *(_OWORD *)((char *)v53 + v56[10]) = *(_OWORD *)((char *)v54 + v56[10]);
        *((_BYTE *)v53 + v56[11]) = *((_BYTE *)v54 + v56[11]);
        swift_storeEnumTagMultiPayload(v53, v55, 2);
      }
      else
      {
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      v85 = 1;
    }
    else
    {
      v62 = type metadata accessor for LollipopDetailViewModel(0);
      if (swift_getEnumCaseMultiPayload(v44) == 2)
      {
        *(_OWORD *)v43 = *(_OWORD *)v44;
        v63 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
        v64 = v63[5];
        v65 = (char *)v43 + v64;
        v66 = (char *)v44 + v64;
        v67 = type metadata accessor for AttributedString(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(v65, v66, v67);
        *(_OWORD *)((char *)v43 + v63[6]) = *(_OWORD *)((char *)v44 + v63[6]);
        *(_OWORD *)((char *)v43 + v63[7]) = *(_OWORD *)((char *)v44 + v63[7]);
        *(_OWORD *)((char *)v43 + v63[8]) = *(_OWORD *)((char *)v44 + v63[8]);
        *(_OWORD *)((char *)v43 + v63[9]) = *(_OWORD *)((char *)v44 + v63[9]);
        *(_OWORD *)((char *)v43 + v63[10]) = *(_OWORD *)((char *)v44 + v63[10]);
        *((_BYTE *)v43 + v63[11]) = *((_BYTE *)v44 + v63[11]);
        swift_storeEnumTagMultiPayload(v43, v62, 2);
      }
      else
      {
        memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
      }
      v85 = 0;
    }
    swift_storeEnumTagMultiPayload(v43, v45, v85);
  }
  v86 = a3[16];
  v87 = a1 + v86;
  v88 = a2 + v86;
  v89 = type metadata accessor for Date(0);
  v90 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 40);
  v90(v87, v88, v89);
  v90(a1 + a3[17], a2 + a3[17], v89);
  v91 = a3[18];
  v92 = a1 + v91;
  v93 = a2 + v91;
  v94 = type metadata accessor for DetailChartGradientModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 40))(v92, v93, v94);
  v95 = a3[20];
  *(_OWORD *)(a1 + a3[19]) = *(_OWORD *)(a2 + a3[19]);
  *(_OWORD *)(a1 + v95) = *(_OWORD *)(a2 + v95);
  return a1;
}

uint64_t sub_1001A623C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001A6248);
}

uint64_t sub_1001A6248(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1000D10FC();
    sub_100088FF0();
    if (v11)
    {
      v9 = v8;
      v10 = a3[9];
    }
    else
    {
      sub_1000BA294(&qword_100BC4BB8);
      sub_100088FF0();
      if (v11)
      {
        v9 = v12;
        v10 = a3[13];
      }
      else
      {
        sub_1000BA294(&qword_100BC4BC0);
        sub_100088FF0();
        if (v13)
        {
          v9 = v14;
          v10 = a3[14];
        }
        else
        {
          type metadata accessor for DetailHeroChartLollipopModel(0);
          sub_100088FF0();
          if (v15)
          {
            v9 = v16;
            v10 = a3[15];
          }
          else
          {
            sub_100098778();
            sub_100088FF0();
            if (v17)
            {
              v9 = v18;
              v10 = a3[16];
            }
            else
            {
              v9 = sub_1000D1C24();
              v10 = a3[18];
            }
          }
        }
      }
    }
    return _s7Weather24LocationCompositionStateOwet_0(a1 + v10, a2, v9);
  }
}

uint64_t sub_1001A6344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001A6350);
}

uint64_t sub_1001A6350(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1000D10FC();
    sub_10009D2E8();
    if (v10)
    {
      v8 = v7;
      v9 = a4[9];
    }
    else
    {
      sub_1000BA294(&qword_100BC4BB8);
      sub_10009D2E8();
      if (v10)
      {
        v8 = v11;
        v9 = a4[13];
      }
      else
      {
        sub_1000BA294(&qword_100BC4BC0);
        sub_10009D2E8();
        if (v12)
        {
          v8 = v13;
          v9 = a4[14];
        }
        else
        {
          type metadata accessor for DetailHeroChartLollipopModel(0);
          sub_10009D2E8();
          if (v14)
          {
            v8 = v15;
            v9 = a4[15];
          }
          else
          {
            sub_100098778();
            sub_10009D2E8();
            if (v16)
            {
              v8 = v17;
              v9 = a4[16];
            }
            else
            {
              v8 = sub_1000D1C24();
              v9 = a4[18];
            }
          }
        }
      }
    }
    return _s7Weather24LocationCompositionStateOwst_0(v5 + v9, a2, a2, v8);
  }
  return result;
}

uint64_t type metadata accessor for TemperatureAveragesHeroChartViewModel(uint64_t a1)
{
  return sub_100098190(a1, (uint64_t *)&unk_100BC4C20, (uint64_t)&nominal type descriptor for TemperatureAveragesHeroChartViewModel);
}

void sub_1001A645C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD v14[12];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;

  v14[0] = "@";
  v14[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v14[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v14[3] = &unk_10097EDB0;
  v14[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2 = type metadata accessor for TemperatureScaleConfiguration(319);
  if (v3 <= 0x3F)
  {
    v14[5] = *(_QWORD *)(v2 - 8) + 64;
    v14[6] = &unk_10097EDC8;
    v14[7] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v14[8] = &unk_10097EDE0;
    sub_1001345CC(319, &qword_100BC4C30, type metadata accessor for TemperatureAveragesHeroChartViewModel.PeakMarkModel);
    if (v5 <= 0x3F)
    {
      v14[9] = *(_QWORD *)(v4 - 8) + 64;
      sub_1001345CC(319, (unint64_t *)&unk_100BC4C38, type metadata accessor for PeakUpperMarkModel);
      if (v7 <= 0x3F)
      {
        v14[10] = *(_QWORD *)(v6 - 8) + 64;
        v8 = type metadata accessor for DetailHeroChartLollipopModel(319);
        if (v9 <= 0x3F)
        {
          v14[11] = *(_QWORD *)(v8 - 8) + 64;
          v10 = type metadata accessor for Date(319);
          if (v11 <= 0x3F)
          {
            v15 = *(_QWORD *)(v10 - 8) + 64;
            v16 = v15;
            v12 = type metadata accessor for DetailChartGradientModel(319);
            if (v13 <= 0x3F)
            {
              v17 = *(_QWORD *)(v12 - 8) + 64;
              v18 = &unk_10097EDC8;
              v19 = &unk_10097EDC8;
              swift_initStructMetadata(a1, 256, 17, v14, a1 + 16);
            }
          }
        }
      }
    }
  }
}

uint64_t *sub_1001A65C4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v8);
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_1001A664C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Date(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_1001A6680(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1001A66DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1001A6738(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1001A6794(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1001A67F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001A67FC);
}

uint64_t sub_1001A67FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100098778();
  return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
}

uint64_t sub_1001A682C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001A6838);
}

uint64_t sub_1001A6838(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100098778();
  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v4);
}

uint64_t sub_1001A686C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1001A68E0@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, double a13@<D3>, double a14@<D4>, double a15@<D5>, uint64_t a16, uint64_t a17, __int128 a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  __int128 v33;
  __int128 v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  double *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t result;
  double *v46;
  double *v47;

  v33 = a1[1];
  *(_OWORD *)a9 = *a1;
  *(_OWORD *)(a9 + 16) = v33;
  v34 = a1[3];
  *(_OWORD *)(a9 + 32) = a1[2];
  *(_OWORD *)(a9 + 48) = v34;
  *(_QWORD *)(a9 + 64) = a2;
  *(_QWORD *)(a9 + 72) = a3;
  *(_QWORD *)(a9 + 80) = a4;
  *(_QWORD *)(a9 + 88) = a5;
  *(_QWORD *)(a9 + 96) = a6;
  *(_BYTE *)(a9 + 104) = a7;
  *(_QWORD *)(a9 + 112) = a8;
  v35 = (int *)type metadata accessor for TemperatureAveragesHeroChartViewModel(0);
  v36 = a9 + v35[9];
  v37 = sub_1000D10FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v36, a16, v37);
  v38 = (double *)(a9 + v35[10]);
  *v38 = a10;
  v38[1] = a11;
  *(_QWORD *)(a9 + v35[11]) = a17;
  v39 = a9 + v35[12];
  *(_OWORD *)v39 = a18;
  *(_QWORD *)(v39 + 16) = a19;
  *(_BYTE *)(v39 + 24) = a20;
  sub_1001A7244(a21, a9 + v35[13], &qword_100BC4BB8);
  sub_1001A7244(a22, a9 + v35[14], &qword_100BC4BC0);
  sub_1000DB648(a23, a9 + v35[15], type metadata accessor for DetailHeroChartLollipopModel);
  v40 = a9 + v35[16];
  v41 = sub_100098778();
  v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 32);
  v42(v40, a24, v41);
  v42(a9 + v35[17], a25, v41);
  v43 = a9 + v35[18];
  v44 = sub_1000D1C24();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v43, a26, v44);
  v46 = (double *)(a9 + v35[19]);
  *v46 = a12;
  v46[1] = a13;
  v47 = (double *)(a9 + v35[20]);
  *v47 = a14;
  v47[1] = a15;
  return result;
}

uint64_t sub_1001A6AC8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t result;
  char v41;
  char v43;
  char v45;
  char v47;
  uint64_t *v48;
  uint64_t *v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  char v66;
  char v68;
  uint64_t *v69;
  uint64_t *v70;
  int *v71;
  uint64_t v72;
  double v73;
  double v74;
  double *v75;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  double v90;
  double v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  char v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  double v105;
  double v106;
  double v108;
  double v109;
  unsigned int v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t *v126;
  uint64_t *v127;
  uint64_t v128;
  uint64_t v129;

  v116 = type metadata accessor for PeakUpperMarkModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_100088FDC();
  v112 = v5;
  v115 = sub_1000BA294(&qword_100BC4D38);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_100088FDC();
  v117 = v7;
  sub_1000BA294(&qword_100BC4BC0);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_1000986FC();
  v113 = v9;
  sub_10009D2A4();
  __chkstk_darwin(v10);
  v119 = (uint64_t)&v111 - v11;
  sub_10009D2A4();
  __chkstk_darwin(v12);
  v120 = (uint64_t)&v111 - v13;
  v124 = type metadata accessor for TemperatureAveragesHeroChartViewModel.PeakMarkModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v14);
  sub_100088FDC();
  v114 = v15;
  v121 = sub_1000BA294(&qword_100BC4D40);
  sub_1000B42B0();
  __chkstk_darwin(v16);
  sub_100088FDC();
  v125 = v17;
  sub_1000BA294(&qword_100BC4BB8);
  sub_1000B42B0();
  __chkstk_darwin(v18);
  sub_1000986FC();
  v118 = v19;
  sub_10009D2A4();
  __chkstk_darwin(v20);
  v122 = (uint64_t)&v111 - v21;
  sub_10009D2A4();
  __chkstk_darwin(v22);
  v123 = (uint64_t)&v111 - v23;
  v24 = *a1;
  v25 = a1[1];
  v26 = a1[2];
  v27 = a1[3];
  v28 = a1[4];
  v29 = a1[5];
  v30 = a1[6];
  v126 = a1;
  v127 = a2;
  v128 = a1[7];
  v129 = v30;
  v31 = *a2;
  v32 = a2[1];
  v33 = a2[2];
  v34 = a2[3];
  v35 = a2[4];
  v36 = a2[5];
  v37 = v24 == *a2 && v25 == v32;
  v39 = a2[6];
  v38 = a2[7];
  if (!v37)
  {
    sub_100099264(v24, v25, v31, v32);
    result = sub_10007A150();
    if ((v41 & 1) == 0)
      return result;
  }
  if (v26 != v33 || v27 != v34)
  {
    sub_100099264(v26, v27, v33, v34);
    result = sub_10007A150();
    if ((v43 & 1) == 0)
      return result;
  }
  if (v28 != v35 || v29 != v36)
  {
    sub_100099264(v28, v29, v35, v36);
    result = sub_10007A150();
    if ((v45 & 1) == 0)
      return result;
  }
  if (v129 != v39 || v128 != v38)
  {
    sub_100099264(v129, v128, v39, v38);
    result = sub_10007A150();
    if ((v47 & 1) == 0)
      return result;
  }
  v48 = v126;
  v49 = v127;
  sub_100946D9C();
  if ((v50 & 1) == 0)
    return 0;
  sub_100946D9C();
  if ((v57 & 1) == 0)
    return 0;
  v58 = v48[10];
  v59 = v48[11];
  v60 = v48[12];
  v61 = *((unsigned __int8 *)v48 + 104);
  v62 = v49[10];
  v63 = v49[11];
  v64 = v49[12];
  v65 = *((unsigned __int8 *)v49 + 104);
  sub_100946E20(v58, v62, v51, v52, v53, v54, v55, v56, v111, v112, v113, v114, v115, v116, v117, v118, v119, v120, v121,
    v122);
  if ((v66 & 1) == 0)
    return 0;
  if (v59 == v63 && v60 == v64)
  {
    if (v61 != v65)
      return 0;
  }
  else
  {
    sub_100099264(v59, v60, v63, v64);
    result = sub_10007A150();
    if ((v68 & 1) == 0 || ((v61 ^ v65) & 1) != 0)
      return result;
  }
  sub_10008596C();
  v70 = v126;
  v69 = v127;
  if ((static NSObject.== infix(_:_:)(v126[14], v127[14]) & 1) == 0)
    return 0;
  v71 = (int *)type metadata accessor for TemperatureAveragesHeroChartViewModel(0);
  if ((static TemperatureScaleConfiguration.== infix(_:_:)((char *)v70 + v71[9], (char *)v69 + v71[9]) & 1) == 0)
    return 0;
  v72 = v71[10];
  v73 = *(double *)((char *)v70 + v72);
  v74 = *(double *)((char *)v70 + v72 + 8);
  v75 = (double *)((char *)v69 + v72);
  if (v73 != *v75 || v74 != v75[1])
    return 0;
  if ((sub_100946DB8(*(uint64_t *)((char *)v70 + v71[11]), *(uint64_t *)((char *)v69 + v71[11])) & 1) == 0)
    return 0;
  v77 = v71[12];
  if (!sub_1005F80A4(*(uint64_t *)((char *)v70 + v77), *(uint64_t *)((char *)v70 + v77 + 8), *(uint64_t *)((char *)v70 + v77 + 16), *((_BYTE *)v70 + v77 + 24), *(uint64_t *)((char *)v69 + v77), *(uint64_t *)((char *)v69 + v77 + 8), *(uint64_t *)((char *)v69 + v77 + 16), *((_BYTE *)v69 + v77 + 24)))return 0;
  v78 = v123;
  sub_1000C3538((uint64_t)v70 + v71[13], v123);
  v79 = v122;
  sub_1000C3538((uint64_t)v69 + v71[13], v122);
  v80 = v125;
  v81 = v125 + *(int *)(v121 + 48);
  sub_1000C3538(v78, v125);
  sub_1000C3538(v79, v81);
  v82 = v124;
  if (_s7Weather24LocationCompositionStateOwet_0(v80, 1, v124) != 1)
  {
    v83 = v118;
    sub_1001A7210(v80, v118, &qword_100BC4BB8);
    sub_1000BBB70();
    if (v37)
    {
      sub_100075DD0(v79);
      sub_100075DD0(v78);
      sub_1000215BC(v83, type metadata accessor for TemperatureAveragesHeroChartViewModel.PeakMarkModel);
LABEL_48:
      v84 = &qword_100BC4D40;
      v85 = v80;
LABEL_60:
      sub_100021A14(v85, v84);
      return 0;
    }
    v86 = v81;
    v87 = v114;
    sub_1000DB648(v86, v114, type metadata accessor for TemperatureAveragesHeroChartViewModel.PeakMarkModel);
    v88 = static Date.== infix(_:_:)(v83, v87);
    if ((v88 & 1) == 0)
    {
      sub_100079F9C(v87);
      sub_100021A14(v79, &qword_100BC4BB8);
      sub_100021A14(v78, &qword_100BC4BB8);
      sub_100079F9C(v83);
      v85 = v80;
      v84 = &qword_100BC4BB8;
      goto LABEL_60;
    }
    v89 = *(int *)(v82 + 20);
    v90 = *(double *)(v83 + v89);
    v91 = *(double *)(v87 + v89);
    sub_100079F9C(v87);
    sub_10009E47C(v79);
    sub_10009E47C(v78);
    sub_100079F9C(v83);
    sub_10009E47C(v80);
    if (v90 == v91)
      goto LABEL_51;
    return 0;
  }
  sub_100075DD0(v79);
  sub_100075DD0(v78);
  sub_1000BBB70();
  if (!v37)
    goto LABEL_48;
  sub_100021A14(v80, &qword_100BC4BB8);
LABEL_51:
  v92 = v120;
  sub_1000C3538((uint64_t)v70 + v71[14], v120);
  v93 = v119;
  sub_1000C3538((uint64_t)v69 + v71[14], v119);
  v94 = v117;
  v95 = v117 + *(int *)(v115 + 48);
  sub_1000C3538(v92, v117);
  sub_1000C3538(v93, v95);
  if (_s7Weather24LocationCompositionStateOwet_0(v94, 1, v116) == 1)
  {
    sub_100075DD0(v119);
    sub_100075DD0(v120);
    sub_1000BBB70();
    if (!v37)
      goto LABEL_58;
    sub_100021A14(v94, &qword_100BC4BC0);
  }
  else
  {
    v96 = v113;
    sub_1001A7210(v94, v113, &qword_100BC4BC0);
    sub_1000BBB70();
    if (v37)
    {
      sub_100075DD0(v119);
      sub_100075DD0(v120);
      sub_1000215BC(v96, type metadata accessor for PeakUpperMarkModel);
LABEL_58:
      v84 = &qword_100BC4D38;
      v85 = v94;
      goto LABEL_60;
    }
    v97 = v95;
    v98 = v112;
    sub_1000DB648(v97, v112, type metadata accessor for PeakUpperMarkModel);
    sub_10077BDAC(v96, v98);
    v100 = v99;
    sub_100079F9C(v98);
    sub_100098854(v119);
    sub_100098854(v120);
    sub_100079F9C(v96);
    sub_100098854(v94);
    if ((v100 & 1) == 0)
      return 0;
  }
  v101 = sub_1000D8D94(v71[15]);
  if ((sub_1003E66C4(v101, v102) & 1) == 0)
    return 0;
  if ((sub_1000C5184(v71[16]) & 1) == 0)
    return 0;
  if ((sub_1000C5184(v71[17]) & 1) == 0)
    return 0;
  v103 = sub_1000D8D94(v71[18]);
  if ((static DetailChartGradientModel.== infix(_:_:)(v103, v104) & 1) == 0)
    return 0;
  sub_1000CC7EC(v71[19]);
  if (!v37 || v105 != v106)
    return 0;
  sub_1000CC7EC(v71[20]);
  v110 = v37;
  if (v108 == v109)
    return v110;
  else
    return 0;
}

BOOL sub_1001A71BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if ((static Date.== infix(_:_:)(a1, a2) & 1) == 0)
    return 0;
  v4 = type metadata accessor for TemperatureAveragesHeroChartViewModel.PeakMarkModel(0);
  return *(double *)(a1 + *(int *)(v4 + 20)) == *(double *)(a2 + *(int *)(v4 + 20));
}

void sub_1001A7210(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = sub_100075DC0(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v3, v4, v5);
  sub_10004A298();
}

void sub_1001A7244(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_100075DC0(a1, a2, a3);
  sub_1000B4328(v3);
  sub_10004A298();
}

double destroy for ContentStatusBanner.Placement(uint64_t a1)
{
  unint64_t v1;
  double result;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    *(_QWORD *)&result = swift_bridgeObjectRelease(v1).n128_u64[0];
  return result;
}

uint64_t _s7Weather10LinkActionOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_bridgeObjectRetain(v3);
  }
  return a1;
}

_QWORD *assignWithCopy for ContentStatusBanner.Placement(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a1[1];
  v5 = a2[1];
  if (v4 < 0xFFFFFFFF)
  {
    if (v5 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      v7 = a2[1];
      a1[1] = v7;
      swift_bridgeObjectRetain(v7);
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v5 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease(a1[1]);
    goto LABEL_7;
  }
  *a1 = *a2;
  v6 = a2[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t assignWithTake for ContentStatusBanner.Placement(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4 < 0xFFFFFFFF)
    goto LABEL_5;
  v5 = *(_QWORD *)(a2 + 8);
  if (v5 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease(v4);
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t sub_1001A73C8(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_1001A73E0(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for LinkAction()
{
  return &type metadata for LinkAction;
}

void sub_1001A7410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;

  v9 = type metadata accessor for Calendar(0);
  __chkstk_darwin(v9);
  sub_10009E4D4();
  static Calendar.currentCalendar(with:)(a2);
  v10 = Calendar.isDateInToday(_:)(a1);
  sub_1000DCAE0();
  if ((v10 & 1) != 0)
  {
    v11 = sub_1000C3540();
    sub_1001A7504(v11, v12, a3, a4, v13);
  }
  else
  {
    static Calendar.currentCalendar(with:)(a2);
    v14 = Calendar.isDateInYesterday(_:)(a1);
    sub_1000DCAE0();
    v15 = sub_1000C3540();
    if ((v14 & 1) != 0)
      v19 = a5;
    else
      v19 = a4;
    sub_1001A77D0(v15, v16, v19, v17, v18);
  }
  sub_100098640();
}

uint64_t sub_1001A7504@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  Swift::String v41;

  v6 = v5;
  v39 = a4;
  v35 = a3;
  v38 = type metadata accessor for UVIndex(0);
  v36 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = type metadata accessor for WeatherDescription(0);
  v40 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v34 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v41._object = (void *)0x80000001009F1860;
  v14._countAndFlagsBits = 0x4025202C776F4ELL;
  v14._object = (void *)0xE700000000000000;
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  v41._countAndFlagsBits = 0xD00000000000004ELL;
  v16 = NSLocalizedString(_:tableName:bundle:value:comment:)(v14, (Swift::String_optional)0, (NSBundle)v13, v15, v41);

  v17 = sub_1000BA294(&qword_100BC3C38);
  v18 = swift_allocObject(v17, 72, 7);
  *(_OWORD *)(v18 + 16) = xmmword_10097CA50;
  v19 = Date.formattedTime(timeZone:)(a2);
  v21 = v20;
  *(_QWORD *)(v18 + 56) = &type metadata for String;
  *(_QWORD *)(v18 + 64) = sub_1000B2E24();
  *(_QWORD *)(v18 + 32) = v19;
  *(_QWORD *)(v18 + 40) = v21;
  v22 = static String.localizedStringWithFormat(_:_:)(v16._countAndFlagsBits, v16._object, v18);
  v33 = v23;
  swift_bridgeObjectRelease(v18);
  swift_bridgeObjectRelease(v16._object);
  v24 = v6[3];
  v25 = v6[4];
  sub_1000DB418(v6, v24);
  CurrentWeather.uvIndex.getter();
  v26 = v34;
  dispatch thunk of UVISummaryStringBuilderType.makeTodayDescription(from:timeZone:currentUVIndex:hourlyForecast:)(a1, a2, v11, v39, v24, v25);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v38);
  v27 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
  v28 = v37;
  _s7Weather24LocationCompositionStateOwst_0(a5 + v27[6], 1, 1, v37);
  v29 = a5 + v27[7];
  (*(void (**)(uint64_t, char *, uint64_t))(v40 + 32))(v29, v26, v28);
  v30 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
  swift_storeEnumTagMultiPayload(v29, v30, 0);
  result = _s7Weather24LocationCompositionStateOwst_0(a5 + v27[8], 1, 1, v30);
  *(_QWORD *)a5 = 0;
  *(_QWORD *)(a5 + 8) = 0;
  *(_BYTE *)(a5 + 16) = 2;
  v32 = v33;
  *(_QWORD *)(a5 + 24) = v22;
  *(_QWORD *)(a5 + 32) = v32;
  *(_BYTE *)(a5 + v27[9]) = 1;
  *(_BYTE *)(a5 + v27[10]) = 1;
  return result;
}

uint64_t sub_1001A77D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X3>, uint64_t a5@<X8>)
{
  _QWORD *v5;
  _QWORD *v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;

  v7 = v5;
  v12 = Date.formattedMonthDayYear(timeZone:)(a2);
  v22 = v13;
  v23 = v12;
  v14 = v7[3];
  v15 = v7[4];
  sub_1000DB418(v7, v14);
  v16 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
  v17 = a5 + v16[7];
  a4(a1, a2, a3, v14, v15);
  v18 = a5 + v16[6];
  v19 = type metadata accessor for WeatherDescription(0);
  _s7Weather24LocationCompositionStateOwst_0(v18, 1, 1, v19);
  v20 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
  swift_storeEnumTagMultiPayload(v17, v20, 0);
  result = _s7Weather24LocationCompositionStateOwst_0(a5 + v16[8], 1, 1, v20);
  *(_QWORD *)a5 = 0;
  *(_QWORD *)(a5 + 8) = 0;
  *(_BYTE *)(a5 + 16) = 2;
  *(_QWORD *)(a5 + 24) = v23;
  *(_QWORD *)(a5 + 32) = v22;
  *(_BYTE *)(a5 + v16[9]) = 1;
  *(_BYTE *)(a5 + v16[10]) = 1;
  return result;
}

void sub_1001A7900(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = type metadata accessor for Calendar(0);
  __chkstk_darwin(v6);
  sub_10009E4D4();
  static Calendar.currentCalendar(with:)(a2);
  v7 = Calendar.isDateInToday(_:)(a1);
  sub_1000C43B8();
  if ((v7 & 1) != 0)
  {
    v8 = sub_1000BBB90();
    sub_1001A79E4(v8, v9, v10, v11, v12);
LABEL_6:
    v14 = 0;
    goto LABEL_7;
  }
  static Calendar.currentCalendar(with:)(a2);
  v13 = Calendar.isDateInYesterday(_:)(a1);
  sub_1000C43B8();
  if ((v13 & 1) == 0)
  {
    v15 = sub_1000BBB90();
    sub_1001A7BF0(v15, v16, v17, v18, v19);
    goto LABEL_6;
  }
  v14 = 1;
LABEL_7:
  v20 = type metadata accessor for ConditionDetailPlatterViewModel(0);
  _s7Weather24LocationCompositionStateOwst_0(a3, v14, 1, v20);
  sub_100098640();
}

uint64_t sub_1001A79E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  _QWORD *v5;
  _QWORD *v6;
  id v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  Swift::String v32;

  v6 = v5;
  v10 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v32._object = (void *)0x80000001009F1860;
  v11._countAndFlagsBits = 0x25202C7961646F54;
  v11._object = (void *)0xE900000000000040;
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  v32._countAndFlagsBits = 0xD00000000000004ELL;
  v13 = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)v10, v12, v32);

  v14 = sub_1000BA294(&qword_100BC3C38);
  v15 = swift_allocObject(v14, 72, 7);
  *(_OWORD *)(v15 + 16) = xmmword_10097CA50;
  v16 = Date.formattedTime(timeZone:)(a2);
  v18 = v17;
  *(_QWORD *)(v15 + 56) = &type metadata for String;
  *(_QWORD *)(v15 + 64) = sub_1000B2E24();
  *(_QWORD *)(v15 + 32) = v16;
  *(_QWORD *)(v15 + 40) = v18;
  v19 = static String.localizedStringWithFormat(_:_:)(v13._countAndFlagsBits, v13._object, v15);
  v21 = v20;
  swift_bridgeObjectRelease(v15);
  swift_bridgeObjectRelease(v13._object);
  v22 = v6[3];
  v23 = v6[4];
  sub_1000DB418(v6, v22);
  v24 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
  v25 = a5 + v24[7];
  dispatch thunk of UVISummaryStringBuilderType.makeTodayDescription(from:timeZone:currentUVIndex:hourlyForecast:)(a1, a2, a3, a4, v22, v23);
  v26 = a5 + v24[6];
  v27 = type metadata accessor for WeatherDescription(0);
  _s7Weather24LocationCompositionStateOwst_0(v26, 1, 1, v27);
  v28 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
  swift_storeEnumTagMultiPayload(v25, v28, 0);
  result = _s7Weather24LocationCompositionStateOwst_0(a5 + v24[8], 1, 1, v28);
  *(_QWORD *)a5 = 0;
  *(_QWORD *)(a5 + 8) = 0;
  *(_BYTE *)(a5 + 16) = 2;
  *(_QWORD *)(a5 + 24) = v19;
  *(_QWORD *)(a5 + 32) = v21;
  *(_BYTE *)(a5 + v24[9]) = 1;
  *(_BYTE *)(a5 + v24[10]) = 1;
  return result;
}

uint64_t sub_1001A7BF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;

  v6 = v5;
  v12 = Date.formattedMonthDayTime(timeZone:)(a2);
  v22 = v13;
  v23 = v12;
  v14 = v6[3];
  v15 = v6[4];
  sub_1000DB418(v6, v14);
  v16 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
  v17 = a5 + v16[7];
  dispatch thunk of UVISummaryStringBuilderType.makeTodayDescription(from:timeZone:currentUVIndex:hourlyForecast:)(a1, a2, a3, a4, v14, v15);
  v18 = a5 + v16[6];
  v19 = type metadata accessor for WeatherDescription(0);
  _s7Weather24LocationCompositionStateOwst_0(v18, 1, 1, v19);
  v20 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
  swift_storeEnumTagMultiPayload(v17, v20, 0);
  result = _s7Weather24LocationCompositionStateOwst_0(a5 + v16[8], 1, 1, v20);
  *(_QWORD *)a5 = 0;
  *(_QWORD *)(a5 + 8) = 0;
  *(_BYTE *)(a5 + 16) = 2;
  *(_QWORD *)(a5 + 24) = v23;
  *(_QWORD *)(a5 + 32) = v22;
  *(_BYTE *)(a5 + v16[9]) = 1;
  *(_BYTE *)(a5 + v16[10]) = 1;
  return result;
}

uint64_t initializeWithCopy for UVIDescriptorViewModelFactory(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

_QWORD *assignWithCopy for UVIDescriptorViewModelFactory(_QWORD *a1, _QWORD *a2)
{
  sub_100094D04(a1, a2);
  return a1;
}

uint64_t assignWithTake for UVIDescriptorViewModelFactory(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for UVIDescriptorViewModelFactory(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UVIDescriptorViewModelFactory(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for UVIDescriptorViewModelFactory()
{
  return &type metadata for UVIDescriptorViewModelFactory;
}

uint64_t *sub_1001A7E50(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v9);
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    v5 = *(int *)(a3 + 24);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = type metadata accessor for MoonPhase.Hemisphere(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_1001A7ED8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 24);
  v3 = type metadata accessor for MoonPhase.Hemisphere(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_WORD *sub_1001A7F10(_WORD *a1, _WORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for MoonPhase.Hemisphere(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_BYTE *sub_1001A7F6C(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  v4 = *(int *)(a3 + 24);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = type metadata accessor for MoonPhase.Hemisphere(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_WORD *sub_1001A7FD0(_WORD *a1, _WORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for MoonPhase.Hemisphere(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_BYTE *sub_1001A802C(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  v4 = *(int *)(a3 + 24);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = type metadata accessor for MoonPhase.Hemisphere(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_1001A8090(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001A809C);
}

uint64_t sub_1001A809C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  BOOL v5;
  int v6;
  uint64_t v10;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 1);
    v5 = v4 >= 2;
    v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5)
      return (v6 + 1);
    else
      return 0;
  }
  else
  {
    v10 = type metadata accessor for MoonPhase.Hemisphere(0);
    return _s7Weather24LocationCompositionStateOwet_0(a1 + *(int *)(a3 + 24), a2, v10);
  }
}

uint64_t sub_1001A8110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001A811C);
}

uint64_t sub_1001A811C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 1) = a2 + 1;
  }
  else
  {
    v7 = type metadata accessor for MoonPhase.Hemisphere(0);
    return _s7Weather24LocationCompositionStateOwst_0(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for CalendarDayMoonPhase(uint64_t a1)
{
  uint64_t result;

  result = qword_100BC4DA8;
  if (!qword_100BC4DA8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CalendarDayMoonPhase);
  return result;
}

uint64_t sub_1001A81BC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = &unk_10097EEE8;
  v4[1] = &unk_10097EF00;
  result = type metadata accessor for MoonPhase.Hemisphere(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1001A8238(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AA9770, 1);
}

uint64_t sub_1001A8248@<X0>(uint64_t a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t KeyPath;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  unsigned __int8 *v38;
  uint64_t v39;
  uint64_t OpaqueTypeConformance2;
  unint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  double v45;
  uint64_t v46;
  unsigned __int8 *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  _QWORD v53[2];
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v3 = sub_1000BA294((uint64_t *)&unk_100C0A510);
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_100098728();
  v7 = v6 - v5;
  v52 = sub_1000BA294(&qword_100BC4DE8);
  v50 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  sub_100098728();
  v10 = v9 - v8;
  v49 = sub_1000BA294(&qword_100BC4DF0);
  sub_1000B42B0();
  __chkstk_darwin(v11);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v51 = (char *)&v46 - v15;
  v48 = sub_1000BA294(&qword_100BC4DF8);
  sub_1000B42B0();
  __chkstk_darwin(v16);
  sub_100098728();
  v19 = v18 - v17;
  v20 = *v1;
  v21 = *(int *)(type metadata accessor for CalendarDayMoonPhase(0) + 24);
  v47 = v1;
  v22 = MoonPhase.symbolName(for:)(&v1[v21], v20);
  v24 = Image.init(systemName:)(v22, v23);
  v25 = static Font.headline.getter(v24);
  KeyPath = swift_getKeyPath(&unk_10097EF68);
  v27 = static Color.secondary.getter();
  v28 = swift_getKeyPath(&unk_10097EF98);
  v54 = v24;
  v55 = KeyPath;
  v56 = v25;
  v57 = v28;
  v58 = v27;
  v29 = enum case for DynamicTypeSize.large(_:);
  v30 = type metadata accessor for DynamicTypeSize(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v7, v29, v30);
  sub_10000F1C8(&qword_100C0A550, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  result = dispatch thunk of static Equatable.== infix(_:_:)(v7, v7, v30, v31);
  if ((result & 1) != 0)
  {
    v33 = sub_1000BA294(&qword_100BC4E00);
    v34 = sub_1001A85D8();
    sub_10003D2DC(&qword_100BC4E30, (uint64_t *)&unk_100C0A510);
    v46 = a1;
    v36 = v35;
    View.dynamicTypeSize<A>(_:)(v7, v33, v3, v34, v35);
    sub_1000C2428(v7);
    swift_release(v54);
    swift_release(v55);
    swift_release(v56);
    swift_release(v57);
    v37 = swift_release(v58);
    v38 = v47;
    v53[0] = MoonPhase.accessibilityDescription.getter(*v47, v37);
    v53[1] = v39;
    v54 = v33;
    v55 = v3;
    v56 = v34;
    v57 = v36;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v54, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize<A>(_:)>>, 1);
    v41 = sub_100114EF8();
    v42 = v52;
    View.accessibilityValue<A>(_:)(v53, v52, &type metadata for String, OpaqueTypeConformance2, v41);
    v43 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, __n128))(v50 + 8))(v10, v42, v43);
    v44 = (uint64_t)v51;
    ModifiedContent<>.accessibilityHidden(_:)((v38[1] & 1) == 0, v49);
    sub_1000C2428((uint64_t)v13);
    if (v38[1])
      v45 = 1.0;
    else
      v45 = 0.0;
    sub_1001A86E0(v44, v19);
    *(double *)(v19 + *(int *)(v48 + 36)) = v45;
    sub_1000C2428(v44);
    return sub_1001A8728(v19, v46);
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_1001A85D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC4E08;
  if (!qword_100BC4E08)
  {
    v1 = sub_100075EB0(&qword_100BC4E00);
    sub_1001A865C();
    sub_10003D2DC((unint64_t *)&qword_100BC4B98, (uint64_t *)&unk_100C09EE0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BC4E08);
  }
  return result;
}

unint64_t sub_1001A865C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC4E10;
  if (!qword_100BC4E10)
  {
    v1 = sub_100075EB0(&qword_100BC4E18);
    sub_10003D2DC(&qword_100BC4E20, &qword_100BC4E28);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BC4E10);
  }
  return result;
}

uint64_t sub_1001A86E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BC4DF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001A8728(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BC4DF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1001A8774()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC4E38;
  if (!qword_100BC4E38)
  {
    v1 = sub_100075EB0(&qword_100BC4DF8);
    sub_1001A87E0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BC4E38);
  }
  return result;
}

unint64_t sub_1001A87E0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD v6[4];

  result = qword_100BC4E40;
  if (!qword_100BC4E40)
  {
    v1 = sub_100075EB0(&qword_100BC4DF0);
    v2 = sub_100075EB0(&qword_100BC4E00);
    v3 = sub_100075EB0((uint64_t *)&unk_100C0A510);
    v4 = sub_1001A85D8();
    sub_10003D2DC(&qword_100BC4E30, (uint64_t *)&unk_100C0A510);
    v6[0] = v2;
    v6[1] = v3;
    v6[2] = v4;
    v6[3] = v5;
    swift_getOpaqueTypeConformance2(v6, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize<A>(_:)>>, 1);
    sub_10000F1C8((unint64_t *)&qword_100BC4E48, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BC4E40);
  }
  return result;
}

uint64_t sub_1001A88D0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t (*v36)(char *, _QWORD *);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  __n128 v63;
  _QWORD *v64;
  double v65;
  id v66;
  void (*v67)(uint64_t, uint64_t);
  char *v68;
  char *v69;
  void *v70;
  _QWORD *v71;
  uint64_t v72;
  void *v73;
  _QWORD *v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  Swift::String v83;
  Swift::String v84;
  Swift::String v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  int *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v107[2];
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t *v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  uint64_t v117;
  __int128 v118;
  uint64_t object;
  uint64_t countAndFlagsBits;
  __int128 v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  _QWORD *v126;
  id v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  char v138[8];
  uint64_t v139;
  __int128 v140;
  uint64_t v141;
  Swift::String v142;

  v133 = a2;
  type metadata accessor for AttributedString(0);
  sub_10009D98C();
  __chkstk_darwin(v3);
  sub_100088FDC();
  v111 = v4;
  v5 = sub_10009876C();
  v112 = type metadata accessor for ConditionDetailPlatterViewModel.Body(v5);
  sub_10009D98C();
  __chkstk_darwin(v6);
  sub_100088FDC();
  v113 = v7;
  sub_1000BA294(&qword_100BC3368);
  sub_10009D98C();
  __chkstk_darwin(v8);
  sub_100088FDC();
  v117 = v9;
  v10 = sub_10009876C();
  v110 = type metadata accessor for WeatherDescription(v10);
  v109 = *(_QWORD *)(v110 - 8);
  sub_10009D98C();
  __chkstk_darwin(v11);
  sub_100088FDC();
  v108 = v12;
  v13 = sub_10009876C();
  type metadata accessor for TemperatureScaleConfiguration.Gradient(v13);
  sub_10009D98C();
  __chkstk_darwin(v14);
  sub_100088FDC();
  v115 = v15;
  sub_1000BA294((uint64_t *)&unk_100BD35A0);
  sub_10009D98C();
  __chkstk_darwin(v16);
  sub_100088FDC();
  v127 = v17;
  v18 = sub_10009876C();
  v134 = type metadata accessor for Date(v18);
  v124 = *(_QWORD *)(v134 - 8);
  sub_10009D98C();
  __chkstk_darwin(v19);
  sub_1000986FC();
  v125 = v20;
  __chkstk_darwin(v21);
  v132 = (char *)v107 - v22;
  v23 = sub_10009876C();
  v122 = type metadata accessor for DateComponents(v23);
  v126 = *(_QWORD **)(v122 - 8);
  sub_10009D98C();
  __chkstk_darwin(v24);
  sub_1000986FC();
  v123 = v25;
  __chkstk_darwin(v26);
  v136 = (uint64_t)v107 - v27;
  v28 = sub_10009876C();
  v131 = type metadata accessor for TimeZone(v28);
  v129 = *(_QWORD *)(v131 - 8);
  sub_10009D98C();
  __chkstk_darwin(v29);
  v31 = (char *)v107 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for Calendar(0);
  __chkstk_darwin(v32);
  v34 = (char *)v107 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = v35;
  v36 = *(uint64_t (**)(char *, _QWORD *))(v35 + 16);
  v130 = v37;
  v38 = v36(v34, a1);
  v135 = v31;
  Calendar.timeZone.getter(v38);
  v39 = sub_1000BA294(&qword_100BC4E50);
  *(_QWORD *)&v121 = v39;
  v40 = type metadata accessor for Calendar.Component(0);
  v41 = *(_QWORD *)(v40 - 8);
  v42 = *(_QWORD *)(v41 + 72);
  v43 = *(unsigned __int8 *)(v41 + 80);
  v44 = (v43 + 32) & ~v43;
  countAndFlagsBits = v44 + 2 * v42;
  object = v43 | 7;
  v45 = swift_allocObject(v39, countAndFlagsBits, v43 | 7);
  v118 = xmmword_10097DA20;
  *(_OWORD *)(v45 + 16) = xmmword_10097DA20;
  v46 = enum case for Calendar.Component.year(_:);
  v47 = *(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 104);
  sub_1000C5198(v45 + v44, enum case for Calendar.Component.year(_:));
  v48 = enum case for Calendar.Component.month(_:);
  sub_1000C5198(v45 + v44 + v42, enum case for Calendar.Component.month(_:));
  v49 = sub_1000A8278(v45);
  v114 = type metadata accessor for MonthlyAveragesChartInput(0);
  v50 = a1;
  v51 = (uint64_t)a1 + *(int *)(v114 + 20);
  v116 = v50;
  Calendar.dateComponents(_:from:)(v49, v51);
  swift_bridgeObjectRelease(v49);
  v52 = swift_allocObject(v121, countAndFlagsBits, object);
  *(_OWORD *)(v52 + 16) = v118;
  v53 = v52 + v44;
  v54 = v134;
  sub_1000C5198(v53, v46);
  v55 = v53 + v42;
  v56 = v124;
  v57 = v40;
  v58 = v34;
  v47(v55, v48, v57);
  v59 = v122;
  v60 = sub_1000A8278(v52);
  v61 = v125;
  Date.startOfDay.getter();
  v62 = v123;
  Calendar.dateComponents(_:from:)(v60, v61);
  v63 = swift_bridgeObjectRelease(v60);
  v64 = *(_QWORD **)(v56 + 8);
  v65 = ((double (*)(_QWORD *, uint64_t, __n128))v64)(v61, v54, v63);
  v66 = v127;
  Calendar.date(from:)(v62, v65);
  v67 = (void (*)(uint64_t, uint64_t))v126[1];
  v67(v62, v59);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v66, 1, v54) == 1)
  {
    sub_1000DD700();
    sub_1000BBBAC();
    sub_1000DCAEC();
    sub_100021AA4((uint64_t)v66, (uint64_t *)&unk_100BD35A0);
LABEL_6:
    v105 = type metadata accessor for ConditionDetailPlatterViewModel(0);
    v103 = v133;
    v104 = 1;
    return _s7Weather24LocationCompositionStateOwst_0(v103, v104, 1, v105);
  }
  v126 = v64;
  v68 = v132;
  (*(void (**)(char *, id, uint64_t))(v56 + 32))(v132, v66, v54);
  sub_1000B375C();
  v69 = v135;
  v70 = (void *)static NSDateFormatter.shortMonthNameFormatter(with:)(v135);
  v71 = (_QWORD *)static NSDateFormatter.longMonthNameFormatter(with:)(v69);
  v72 = static NSDateFormatter.longMonthNameFormatter(with:)(v69);
  v73 = (void *)__chkstk_darwin(v72);
  v74 = v116;
  v107[-6] = v116;
  v107[-5] = v68;
  v127 = v70;
  v107[-4] = v70;
  v107[-3] = v71;
  v125 = v71;
  v75 = v73;
  v142._object = v73;
  sub_1006883C4((void (*)(_QWORD))sub_1001A9D58, (uint64_t)&v107[-8], 1, 12);
  v77 = v76;
  v78 = v115;
  TemperatureScaleConfiguration.gradient.getter(v76);
  v79 = sub_1000ADC80(v78);
  sub_1005B04E8(1, v77, (uint64_t)v79, &v137);
  sub_10009E8CC((uint64_t)&v137, (uint64_t)v138, &qword_100BC4E60);
  v80 = v139;
  if (!v139)
  {

    sub_1000C5AF0();
    sub_1000DD700();
    sub_1000BBBAC();
    sub_1000DCAEC();
    sub_1000B43C8();
    goto LABEL_6;
  }
  v123 = v138[0];
  v121 = v140;
  v124 = v141;
  v81 = v108;
  sub_1001A9930(v74, v136, v107[1], v108);
  v82 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v142._countAndFlagsBits = 0xD00000000000006ELL;
  v142._object = (void *)0x80000001009F18D0;
  v83._object = (void *)0x80000001009F18B0;
  v83._countAndFlagsBits = 0xD000000000000010;
  v84._countAndFlagsBits = 0;
  v84._object = (void *)0xE000000000000000;
  v85 = NSLocalizedString(_:tableName:bundle:value:comment:)(v83, (Swift::String_optional)0, (NSBundle)v82, v84, v142);
  countAndFlagsBits = v85._countAndFlagsBits;
  object = (uint64_t)v85._object;

  *(_QWORD *)&v118 = v58;
  v86 = v110;
  v87 = _s7Weather24LocationCompositionStateOwst_0(v117, 1, 1, v110);
  v88 = static Font.body.getter(v87);
  v89 = v59;
  v90 = v111;
  WeatherDescription.formatted(font:color:)(v88, 0);
  swift_release(v88);
  v91 = Text.init(_:)(v90);
  v93 = v92;
  v95 = v94;
  v97 = v96;

  sub_1000C5AF0();
  (*(void (**)(uint64_t, uint64_t))(v109 + 8))(v81, v86);
  v67(v136, v89);
  sub_1000BBBAC();
  (*(void (**)(_QWORD, uint64_t))(v128 + 8))(v118, v130);
  v98 = (uint64_t)v113;
  *v113 = v91;
  *(_QWORD *)(v98 + 8) = v93;
  *(_QWORD *)(v98 + 16) = v95 & 1;
  *(_QWORD *)(v98 + 24) = v97;
  *(_QWORD *)(v98 + 32) = v123;
  *(_QWORD *)(v98 + 40) = v80;
  *(_OWORD *)(v98 + 48) = v121;
  *(_QWORD *)(v98 + 72) = 0;
  *(_QWORD *)(v98 + 80) = 0;
  *(_QWORD *)(v98 + 64) = v124;
  *(_WORD *)(v98 + 88) = 0;
  v99 = v112;
  swift_storeEnumTagMultiPayload(v98, v112, 5);
  v100 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
  v101 = v133;
  _s7Weather24LocationCompositionStateOwst_0(v133 + v100[8], 1, 1, v99);
  *(_OWORD *)v101 = xmmword_10097EFD0;
  *(_BYTE *)(v101 + 16) = 2;
  v102 = object;
  *(_QWORD *)(v101 + 24) = countAndFlagsBits;
  *(_QWORD *)(v101 + 32) = v102;
  sub_10009E8CC(v117, v101 + v100[6], &qword_100BC3368);
  sub_1000DB648(v98, v101 + v100[7], type metadata accessor for ConditionDetailPlatterViewModel.Body);
  *(_BYTE *)(v101 + v100[9]) = 0;
  *(_BYTE *)(v101 + v100[10]) = 0;
  sub_1000B43C8();
  v103 = v101;
  v104 = 0;
  v105 = (uint64_t)v100;
  return _s7Weather24LocationCompositionStateOwst_0(v103, v104, 1, v105);
}

uint64_t sub_1001A9164@<X0>(uint64_t *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, void *a5@<X4>, char *a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  uint64_t v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Class isa;
  id v59;
  uint64_t v60;
  uint64_t v61;
  Class v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  Class v66;
  id v67;
  void *v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(char *, char *, uint64_t);
  char *v73;
  char *v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t);
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  id v83;
  id v84;
  char *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t *v104;

  v100 = a3;
  v87 = a6;
  v83 = a4;
  v84 = a5;
  v104 = a7;
  v9 = sub_1000BA294(qword_100BC4E80);
  __chkstk_darwin(v9);
  v90 = (uint64_t)&v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = type metadata accessor for ComparisonCapsuleViewModel.Row.Body(0);
  __chkstk_darwin(v91);
  v92 = (char *)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1000BA294(&qword_100BC4E68);
  v88 = *(_QWORD *)(v12 - 8);
  v89 = v12;
  v13 = __chkstk_darwin(v12);
  v86 = (char *)&v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v85 = (char *)&v83 - v16;
  v17 = __chkstk_darwin(v15);
  v99 = (char *)&v83 - v18;
  __chkstk_darwin(v17);
  v98 = (char *)&v83 - v19;
  v20 = sub_1000BA294(&qword_100BC4E70);
  v93 = *(_QWORD *)(v20 - 8);
  v94 = v20;
  __chkstk_darwin(v20);
  v22 = (char *)&v83 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1000BA294(&qword_100BC4E78);
  __chkstk_darwin(v23);
  v95 = (char *)&v83 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = type metadata accessor for MonthTemperatureStatistics(0);
  v97 = *(_QWORD *)(v103 - 8);
  __chkstk_darwin(v103);
  v96 = (char *)&v83 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for Calendar.Component(0);
  v27 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v29 = (char *)&v83 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
  __chkstk_darwin(v30);
  v32 = (char *)&v83 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for Date(0);
  v102 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v35 = (char *)&v83 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = *a1;
  (*(void (**)(char *, _QWORD, uint64_t))(v27 + 104))(v29, enum case for Calendar.Component.month(_:), v26);
  Calendar.date(bySetting:value:of:)(v29, v36, v100);
  v37 = v29;
  v38 = v33;
  (*(void (**)(char *, uint64_t))(v27 + 8))(v37, v26);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v32, 1, v33) == 1)
  {
    v39 = (uint64_t *)&unk_100BD35A0;
    v40 = (uint64_t)v32;
  }
  else
  {
    v41 = v35;
    (*(void (**)(char *, char *, uint64_t))(v102 + 32))(v35, v32, v38);
    v42 = type metadata accessor for MonthlyAveragesChartInput(0);
    v44 = v93;
    v43 = v94;
    v45 = (*(uint64_t (**)(char *, char *, uint64_t))(v93 + 16))(v22, &a2[*(int *)(v42 + 28)], v94);
    __chkstk_darwin(v45);
    *(&v83 - 2) = a2;
    *(&v83 - 1) = v41;
    v46 = (uint64_t)v95;
    sub_10024AE70();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v22, v43);
    if (_s7Weather24LocationCompositionStateOwet_0(v46, 1, v103) != 1)
    {
      v56 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v97 + 32))(v96, v46, v103);
      v57 = MonthTemperatureStatistics.averageLowTemperature.getter(v56);
      MonthTemperatureStatistics.averageHighTemperature.getter(v57);
      isa = Date._bridgeToObjectiveC()().super.isa;
      v59 = objc_msgSend(v83, "stringFromDate:", isa);

      v60 = static String._unconditionallyBridgeFromObjectiveC(_:)(v59);
      v100 = v61;
      v101 = v60;

      v62 = Date._bridgeToObjectiveC()().super.isa;
      v63 = objc_msgSend(v84, "stringFromDate:", v62);

      v64 = static String._unconditionallyBridgeFromObjectiveC(_:)(v63);
      v94 = v65;
      v95 = (char *)v64;

      v66 = Date._bridgeToObjectiveC()().super.isa;
      v67 = objc_msgSend(v87, "stringFromDate:", v66);

      v68 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v67);
      v83 = v69;
      v84 = v68;

      v71 = v88;
      v70 = v89;
      v72 = *(void (**)(char *, char *, uint64_t))(v88 + 16);
      v93 = v38;
      v73 = v98;
      v72(v85, v98, v89);
      v87 = v41;
      v74 = v99;
      v72(v86, v99, v70);
      _s7Weather24LocationCompositionStateOwst_0(v90, 1, 1, v70);
      v75 = (uint64_t)v92;
      sub_1005B035C();
      v76 = *(void (**)(char *, uint64_t))(v71 + 8);
      v76(v74, v70);
      v76(v73, v70);
      (*(void (**)(char *, uint64_t))(v97 + 8))(v96, v103);
      swift_storeEnumTagMultiPayload(v75, v91, 0);
      v77 = v104;
      v78 = v100;
      *v104 = v101;
      v77[1] = v78;
      v79 = v94;
      v77[2] = (uint64_t)v95;
      v77[3] = v79;
      v80 = (uint64_t)v83;
      v77[4] = (uint64_t)v84;
      v77[5] = v80;
      v81 = type metadata accessor for ComparisonCapsuleViewModel.Row(0);
      sub_1000DB648(v75, (uint64_t)v77 + *(int *)(v81 + 20), type metadata accessor for ComparisonCapsuleViewModel.Row.Body);
      *((_BYTE *)v77 + *(int *)(v81 + 24)) = 1;
      (*(void (**)(char *, uint64_t))(v102 + 8))(v87, v93);
      v54 = (uint64_t)v77;
      v55 = 0;
      v53 = v81;
      return _s7Weather24LocationCompositionStateOwst_0(v54, v55, 1, v53);
    }
    (*(void (**)(char *, uint64_t))(v102 + 8))(v41, v38);
    v39 = &qword_100BC4E78;
    v40 = v46;
  }
  sub_100021AA4(v40, v39);
  if (qword_100BC2470 != -1)
    swift_once(&qword_100BC2470, sub_1006F38C8);
  v47 = type metadata accessor for Logger(0);
  v48 = sub_1000AECD4(v47, (uint64_t)qword_100CAF138);
  v49 = Logger.logObject.getter(v48);
  v51 = static os_log_type_t.error.getter(v49, v50);
  if (os_log_type_enabled(v49, v51))
  {
    v52 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v52 = 0;
    _os_log_impl((void *)&_mh_execute_header, v49, v51, "Failed to find this month's temperature averages for the Averages L2 Chart summary.", v52, 2u);
    swift_slowDealloc(v52, -1, -1);
  }

  v53 = type metadata accessor for ComparisonCapsuleViewModel.Row(0);
  v54 = (uint64_t)v104;
  v55 = 1;
  return _s7Weather24LocationCompositionStateOwst_0(v54, v55, 1, v53);
}

BOOL sub_1001A9860(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v4 = type metadata accessor for Calendar.Component(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MonthTemperatureStatistics.month.getter(v6);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v8, enum case for Calendar.Component.month(_:), v4);
  v10 = Calendar.component(_:from:)(v8, a3);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  return v9 == v10;
}

uint64_t sub_1001A9930@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  uint64_t v28;
  os_log_type_t v29;
  uint8_t *v30;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char v39;
  void (*v40)(char *, uint64_t);
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  _QWORD *v43[2];
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v43[0] = a3;
  v50 = a2;
  v51 = a4;
  v49 = type metadata accessor for Calendar.Identifier(0);
  v47 = *(_QWORD *)(v49 - 8);
  v5 = __chkstk_darwin(v49);
  v45 = (char *)v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v44 = (char *)v43 - v7;
  v48 = sub_1000BA294(&qword_100BC4E68);
  v46 = *(_QWORD *)(v48 - 8);
  v8 = __chkstk_darwin(v48);
  v10 = (char *)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)v43 - v11;
  v13 = sub_1000BA294(&qword_100BC4E70);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1000BA294(&qword_100BC4E78);
  __chkstk_darwin(v17);
  v19 = (char *)v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for MonthTemperatureStatistics(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)v43 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = *(int *)(type metadata accessor for MonthlyAveragesChartInput(0) + 28);
  v43[1] = a1;
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v16, (char *)a1 + v24, v13);
  v52 = v50;
  sub_10024AE70();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v20) == 1)
  {
    sub_100021AA4((uint64_t)v19, &qword_100BC4E78);
    if (qword_100BC2450 != -1)
      swift_once(&qword_100BC2450, sub_1006F3844);
    v25 = type metadata accessor for Logger(0);
    v26 = sub_1000AECD4(v25, (uint64_t)qword_100CAF0E8);
    v27 = Logger.logObject.getter(v26);
    v29 = static os_log_type_t.error.getter(v27, v28);
    if (os_log_type_enabled(v27, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v30 = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, v29, "Failed to find this month's temperature averages for the Averages L2 Chart summary.", v30, 2u);
      swift_slowDealloc(v30, -1, -1);
    }

    return static WeatherDescription.string(_:)(0, 0xE000000000000000);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v23, v19, v20);
    v32 = sub_1000DB418(v43[0], v43[0][3]);
    v33 = MonthTemperatureStatistics.averageLowTemperature.getter(v32);
    v34 = MonthTemperatureStatistics.averageHighTemperature.getter(v33);
    v50 = MonthTemperatureStatistics.month.getter(v34);
    v35 = v44;
    Calendar.identifier.getter();
    v36 = v47;
    v37 = v45;
    v38 = v49;
    (*(void (**)(char *, _QWORD, uint64_t))(v47 + 104))(v45, enum case for Calendar.Identifier.gregorian(_:), v49);
    v39 = static Calendar.Identifier.== infix(_:_:)(v35, v37);
    v40 = *(void (**)(char *, uint64_t))(v36 + 8);
    v40(v37, v38);
    v40(v35, v38);
    sub_10045C394((uint64_t)v10, v50, (v39 & 1) == 0, v51);
    v41 = *(void (**)(char *, uint64_t))(v46 + 8);
    v42 = v48;
    v41(v10, v48);
    v41(v12, v42);
    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  }
}

BOOL sub_1001A9D0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = MonthTemperatureStatistics.month.getter(a1);
  v2 = DateComponents.month.getter();
  return (v3 & 1) == 0 && v1 == v2;
}

uint64_t sub_1001A9D58@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1001A9164(a1, *(char **)(v2 + 16), *(_QWORD *)(v2 + 24), *(void **)(v2 + 32), *(void **)(v2 + 40), *(char **)(v2 + 48), a2);
}

BOOL sub_1001A9D78(uint64_t a1)
{
  return sub_1001A9D0C(a1);
}

BOOL sub_1001A9D94(uint64_t a1)
{
  uint64_t v1;

  return sub_1001A9860(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

ValueMetadata *type metadata accessor for TemperatureMonthlyAveragesChartViewModelFactory()
{
  return &type metadata for TemperatureMonthlyAveragesChartViewModelFactory;
}

uint64_t type metadata accessor for ElevatedAqiSevereNewsContentView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100108FF8(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ElevatedAqiSevereNewsContentView);
}

uint64_t sub_1001A9DCC(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_100AA9810, 1);
}

uint64_t sub_1001A9E00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  void *v25;
  uint64_t v26;
  uint64_t (*v27)(_QWORD, _QWORD);
  uint64_t WitnessTable;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, char *, uint64_t);
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t (*v52)(_QWORD, _QWORD);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  _QWORD v64[2];
  _QWORD v65[2];
  _QWORD v66[4];
  _BYTE v67[520];
  _QWORD v68[66];

  v63 = a4;
  v56 = a3;
  v61 = a7;
  v68[0] = a5;
  v68[1] = a5;
  v68[2] = a5;
  v68[3] = a5;
  v10 = a2;
  v11 = a2 & 0x100;
  v68[4] = a5;
  v68[5] = a5;
  v68[6] = a5;
  v68[7] = a5;
  v12 = sub_1000BA3E0(a1, a2, (uint64_t)v68);
  v54 = sub_1000AE86C(v12);
  v13 = type metadata accessor for Group(0, v54);
  v14 = *(_QWORD *)(v13 - 8);
  v57 = v13;
  v58 = v14;
  __chkstk_darwin(v13);
  sub_1000986FC();
  v60 = v15;
  __chkstk_darwin(v16);
  v59 = (char *)&v49 - v17;
  v68[0] = a5;
  v68[1] = a5;
  v68[2] = a5;
  v68[3] = type metadata accessor for Optional(255, a5);
  v68[4] = a5;
  v68[5] = a5;
  v68[6] = a5;
  v68[7] = a5;
  v19 = sub_1000BA3E0(v68[3], v18, (uint64_t)v68);
  v52 = (uint64_t (*)(_QWORD, _QWORD))sub_1000AE86C(v19);
  v55 = type metadata accessor for Group(0, v52);
  v53 = *(_QWORD *)(v55 - 8);
  __chkstk_darwin(v55);
  sub_1000986FC();
  v21 = v20;
  __chkstk_darwin(v22);
  v62 = (char *)&v49 - v23;
  if (v10)
  {
    if (v10 == 1)
    {
      if (v11)
      {
        v24 = &qword_100BEF448;
        goto LABEL_11;
      }
    }
    else if (v11)
    {
      v24 = &qword_100BEF858;
      goto LABEL_11;
    }
    v24 = &qword_100BEF650;
    goto LABEL_11;
  }
  if (v11)
    v24 = &qword_100BEF038;
  else
    v24 = &qword_100BEF240;
LABEL_11:
  memcpy(v68, v24, 0x208uLL);
  v25 = memcpy(v67, v68, sizeof(v67));
  v51 = &v49;
  __chkstk_darwin(v25);
  *(&v49 - 8) = a5;
  *(&v49 - 7) = a6;
  v49 = a1;
  *(&v49 - 6) = a1;
  *((_BYTE *)&v49 - 40) = v10;
  HIDWORD(v50) = v11 >> 8;
  *((_BYTE *)&v49 - 39) = BYTE1(v11);
  v26 = v63;
  *(&v49 - 4) = v56;
  *(&v49 - 3) = v26;
  *(&v49 - 2) = (uint64_t)v67;
  v27 = v52;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v52);
  Group<A>.init(content:)(sub_1001AB398, &v49 - 10, v27, WitnessTable);
  v66[3] = WitnessTable;
  v29 = v55;
  v51 = (uint64_t *)swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v55);
  sub_1000B2074(v21, v29, v51);
  v30 = v53;
  v52 = *(uint64_t (**)(_QWORD, _QWORD))(v53 + 8);
  v31 = v52(v21, v29);
  __chkstk_darwin(v31);
  *(&v49 - 8) = a5;
  *(&v49 - 7) = a6;
  *(&v49 - 6) = v49;
  *((_BYTE *)&v49 - 40) = v10;
  *((_BYTE *)&v49 - 39) = BYTE4(v50);
  v32 = v63;
  *(&v49 - 4) = v33;
  *(&v49 - 3) = v32;
  *(&v49 - 2) = (uint64_t)v67;
  v34 = v54;
  v35 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v54);
  v36 = v60;
  Group<A>.init(content:)(sub_1001AB3A4, &v49 - 10, v34, v35);
  v66[2] = v35;
  v37 = v57;
  v38 = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v57);
  v39 = (uint64_t)v59;
  sub_1000B2074(v36, v37, v38);
  v40 = v58;
  sub_1000C3530(v36);
  v41 = *(void (**)(uint64_t, char *, uint64_t))(v30 + 16);
  v42 = v62;
  v41(v21, v62, v29);
  v66[0] = v21;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16))(v36, v39, v37);
  v66[1] = v36;
  v65[0] = v29;
  v65[1] = v37;
  v64[0] = v51;
  v64[1] = v38;
  sub_10052800C((uint64_t)v66, 2, (uint64_t)v65, (uint64_t)v64, v43, v44, v45, v46, v49, v50, (uint64_t)v51, (uint64_t)v52, v53, v54, v55, v56, v57, v58);
  sub_1000C3530(v39);
  v47 = v52;
  v52(v42, v29);
  sub_1000C3530(v36);
  return v47(v21, v29);
}

uint64_t sub_1001AA218@<X0>(uint64_t a1@<X0>, void (*a2)(char *, _QWORD, _QWORD, _QWORD, _QWORD)@<X2>, _QWORD *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  void (*v51)(char *, _QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(_QWORD, _QWORD);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  void (*v65)(uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  char *v68;
  void (*v69)(char *, uint64_t);
  char *v70;
  void (*v71)(char *, _QWORD, _QWORD, _QWORD, _QWORD);
  void (*v72)(uint64_t, uint64_t);
  uint64_t v73;
  char *v74;
  void (*v75)(char *, char *, uint64_t);
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(uint64_t, uint64_t);
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  void (*v99)(uint64_t, uint64_t);
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  char *v104;
  char *v105;
  char *v106;
  char *v107;
  char *v108;
  uint64_t v109;
  void (*v110)(char *, _QWORD, _QWORD, _QWORD, _QWORD);
  char *v111;
  char *v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD v119[8];
  _QWORD v120[8];
  _QWORD v121[8];
  _BYTE v122[24];
  _BYTE v123[40];
  _QWORD v124[4];
  char v125;

  v92 = a5;
  v98 = a6;
  v10 = sub_1000BA294(&qword_100BC4A98);
  __chkstk_darwin(v10);
  v94 = (uint64_t *)((char *)&v91 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v109 = type metadata accessor for Optional(0, a4);
  v103 = *(_QWORD *)(v109 - 8);
  __chkstk_darwin(v109);
  v116 = (uint64_t)&v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v113 = (uint64_t)&v91 - v14;
  v93 = type metadata accessor for LocationComponentContainerViewModel(0);
  __chkstk_darwin(v93);
  v91 = (uint64_t)&v91 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v91 - v17;
  v100 = *(_QWORD *)(a4 - 8);
  __chkstk_darwin(v19);
  v97 = (char *)&v91 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v96 = (char *)&v91 - v22;
  __chkstk_darwin(v23);
  v108 = (char *)&v91 - v24;
  __chkstk_darwin(v25);
  v107 = (char *)&v91 - v26;
  __chkstk_darwin(v27);
  v106 = (char *)&v91 - v28;
  __chkstk_darwin(v29);
  v105 = (char *)&v91 - v30;
  __chkstk_darwin(v31);
  v104 = (char *)&v91 - v32;
  __chkstk_darwin(v33);
  v95 = (uint64_t)&v91 - v34;
  __chkstk_darwin(v35);
  v102 = (char *)&v91 - v36;
  __chkstk_darwin(v37);
  v115 = (char *)&v91 - v38;
  __chkstk_darwin(v39);
  v112 = (char *)&v91 - v40;
  __chkstk_darwin(v41);
  v111 = (char *)&v91 - v42;
  __chkstk_darwin(v43);
  v45 = (char *)&v91 - v44;
  __chkstk_darwin(v46);
  v48 = (char *)&v91 - v47;
  v117 = a1;
  sub_100080E30(a1 + OBJC_IVAR____TtCV7Weather28ElevatedAqiSevereNewsContent8_Storage_severeAlert, (uint64_t)v18);
  a2(v18, a3[45], a3[46], a3[47], a3[48]);
  sub_100080DF4((uint64_t)v18);
  v101 = v48;
  v49 = v92;
  sub_1000B2074(v45, a4, v92);
  v50 = *(void (**)(char *, uint64_t))(v100 + 8);
  v50(v45, a4);
  sub_100080E30(a1 + OBJC_IVAR____TtCV7Weather28ElevatedAqiSevereNewsContent8_Storage_airQuality, (uint64_t)v18);
  a2(v18, *a3, a3[1], a3[2], a3[3]);
  v51 = a2;
  sub_100080DF4((uint64_t)v18);
  sub_1000B2074(v45, a4, v49);
  v50(v45, a4);
  v52 = v117;
  sub_100080E30(v117 + OBJC_IVAR____TtCV7Weather28ElevatedAqiSevereNewsContent8_Storage_newsArticle, (uint64_t)v18);
  v53 = a3[33];
  v54 = a3[34];
  v55 = a3[35];
  v56 = a3[36];
  v110 = v51;
  v51(v18, v53, v54, v55, v56);
  sub_100080DF4((uint64_t)v18);
  sub_1000B2074(v45, a4, v49);
  v114 = v45;
  v99 = (void (*)(uint64_t, uint64_t))v50;
  v50(v45, a4);
  v57 = v52 + OBJC_IVAR____TtCV7Weather28ElevatedAqiSevereNewsContent8_Storage_map;
  swift_beginAccess(v57, v122, 0, 0);
  v58 = v57;
  v59 = (void (*)(_QWORD, _QWORD))v94;
  sub_1001A1D04(v58, (uint64_t)v94);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v59, 1, v93) == 1)
  {
    sub_1001A1D4C((uint64_t)v59);
  }
  else
  {
    v60 = (uint64_t)v59;
    v61 = v91;
    sub_1001A1D8C(v60, v91);
    sub_1001A1DD0((uint64_t)(a3 + 24), (uint64_t)v123);
    sub_1001A1DD0((uint64_t)v123, (uint64_t)v124);
    if (v125 != 1)
    {
      v63 = v115;
      v110((char *)v61, v124[0], v124[1], v124[2], v124[3]);
      sub_100080DF4(v61);
      v64 = (uint64_t)v114;
      sub_1000B2074(v63, a4, v49);
      v65 = v99;
      v99((uint64_t)v63, a4);
      sub_1000B1100(v64, a4, v116);
      v65(v64, a4);
      v62 = 0;
      goto LABEL_7;
    }
    sub_100080DF4(v61);
  }
  v62 = 1;
LABEL_7:
  v66 = v116;
  _s7Weather24LocationCompositionStateOwst_0(v116, v62, 1, a4);
  sub_100158984(v66, a4, v113);
  v94 = *(uint64_t **)(v103 + 8);
  ((void (*)(uint64_t, uint64_t))v94)(v66, v109);
  v67 = v117;
  sub_100080E30(*(_QWORD *)(v117 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, (uint64_t)v18);
  v68 = v115;
  v110(v18, a3[16], a3[17], a3[18], a3[19]);
  sub_100080DF4((uint64_t)v18);
  sub_1000B2074(v68, a4, v49);
  v69 = (void (*)(char *, uint64_t))v99;
  v99((uint64_t)v68, a4);
  sub_100080E30(*(_QWORD *)(v67 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, (uint64_t)v18);
  v70 = v102;
  v71 = v110;
  v110(v18, a3[8], a3[9], a3[10], a3[11]);
  sub_100080DF4((uint64_t)v18);
  sub_1000B2074(v70, a4, v49);
  v69(v70, a4);
  sub_100080E30(*(_QWORD *)(v117 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, (uint64_t)v18);
  v72 = (void (*)(uint64_t, uint64_t))v69;
  v73 = v95;
  v71(v18, a3[53], a3[54], a3[55], a3[56]);
  sub_100080DF4((uint64_t)v18);
  sub_1000B2074(v73, a4, v49);
  v72(v73, a4);
  sub_100080E30(*(_QWORD *)(v117 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, (uint64_t)v18);
  v74 = v104;
  v71(v18, a3[49], a3[50], a3[51], a3[52]);
  sub_100080DF4((uint64_t)v18);
  sub_1000B2074(v74, a4, v49);
  v72((uint64_t)v74, a4);
  v75 = *(void (**)(char *, char *, uint64_t))(v100 + 16);
  v75(v74, v101, a4);
  v121[0] = v74;
  v76 = v105;
  v75(v105, v111, a4);
  v121[1] = v76;
  v77 = v106;
  v75(v106, v112, a4);
  v121[2] = v77;
  v78 = v116;
  v79 = v109;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v103 + 16))(v116, v113, v109);
  v121[3] = v78;
  v80 = v107;
  v75(v107, v114, a4);
  v121[4] = v80;
  v81 = v108;
  v75(v108, v115, a4);
  v121[5] = v81;
  v82 = (uint64_t)v96;
  v83 = v102;
  v75(v96, v102, a4);
  v121[6] = v82;
  v84 = (uint64_t)v97;
  v75(v97, (char *)v73, a4);
  v121[7] = v84;
  v120[0] = a4;
  v120[1] = a4;
  v120[2] = a4;
  v120[3] = v79;
  v120[4] = a4;
  v120[5] = a4;
  v120[6] = a4;
  v120[7] = a4;
  v119[0] = v49;
  v119[1] = v49;
  v119[2] = v49;
  v118 = v49;
  v119[3] = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v79);
  v119[4] = v49;
  v119[5] = v49;
  v119[6] = v49;
  v119[7] = v49;
  sub_10052800C((uint64_t)v121, 8, (uint64_t)v120, (uint64_t)v119, v85, v86, v87, v88, v91, v92, v93, (uint64_t)v94, v95, (uint64_t)v96, (uint64_t)v97, v98, (uint64_t)v99, v100);
  v72(v73, a4);
  v72((uint64_t)v83, a4);
  v72((uint64_t)v115, a4);
  v72((uint64_t)v114, a4);
  v89 = (void (*)(uint64_t, uint64_t))v94;
  ((void (*)(uint64_t, uint64_t))v94)(v113, v79);
  v72((uint64_t)v112, a4);
  v72((uint64_t)v111, a4);
  v72((uint64_t)v101, a4);
  v72(v84, a4);
  v72(v82, a4);
  v72((uint64_t)v108, a4);
  v72((uint64_t)v107, a4);
  v89(v116, v79);
  v72((uint64_t)v106, a4);
  v72((uint64_t)v105, a4);
  return ((uint64_t (*)(char *, uint64_t))v72)(v104, a4);
}

uint64_t sub_1001AAB28@<X0>(uint64_t a1@<X0>, void (*a2)(char *, _QWORD, _QWORD, _QWORD, _QWORD)@<X2>, _QWORD *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  void (*v57)(char *, char *, uint64_t);
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  char *v81;
  char *v82;
  char *v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  char *v92;
  _QWORD v93[8];
  _QWORD v94[8];
  _QWORD v95[8];

  v78 = a6;
  v11 = type metadata accessor for LocationComponentContainerViewModel(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = *(_QWORD *)(a4 - 8);
  __chkstk_darwin(v14);
  v77 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v76 = (char *)&v74 - v17;
  __chkstk_darwin(v18);
  v92 = (char *)&v74 - v19;
  __chkstk_darwin(v20);
  v91 = (char *)&v74 - v21;
  __chkstk_darwin(v22);
  v89 = (char *)&v74 - v23;
  __chkstk_darwin(v24);
  v87 = (char *)&v74 - v25;
  __chkstk_darwin(v26);
  v86 = (char *)&v74 - v27;
  __chkstk_darwin(v28);
  v85 = (char *)&v74 - v29;
  __chkstk_darwin(v30);
  v75 = (uint64_t)&v74 - v31;
  __chkstk_darwin(v32);
  v83 = (char *)&v74 - v33;
  __chkstk_darwin(v34);
  v81 = (char *)&v74 - v35;
  __chkstk_darwin(v36);
  v79 = (char *)&v74 - v37;
  __chkstk_darwin(v38);
  v80 = (char *)&v74 - v39;
  __chkstk_darwin(v40);
  v42 = (char *)&v74 - v41;
  __chkstk_darwin(v43);
  v45 = (char *)&v74 - v44;
  __chkstk_darwin(v46);
  v88 = (char *)&v74 - v47;
  sub_100080E30(*(_QWORD *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind, (uint64_t)v13);
  a2(v13, a3[61], a3[62], a3[63], a3[64]);
  sub_100080DF4((uint64_t)v13);
  sub_1000B2074(v45, a4, a5);
  v48 = *(void (**)(char *, uint64_t))(v90 + 8);
  v84 = v45;
  v48(v45, a4);
  sub_100080E30(*(_QWORD *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, (uint64_t)v13);
  a2(v13, a3[41], a3[42], a3[43], a3[44]);
  sub_100080DF4((uint64_t)v13);
  v49 = a5;
  sub_1000B2074(v42, a4, a5);
  v82 = v42;
  v48(v42, a4);
  sub_100080E30(*(_QWORD *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike, (uint64_t)v13);
  v50 = (uint64_t)v80;
  a2(v13, a3[12], a3[13], a3[14], a3[15]);
  sub_100080DF4((uint64_t)v13);
  sub_1000B2074(v50, a4, v49);
  v48((char *)v50, a4);
  sub_100080E30(*(_QWORD *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, (uint64_t)v13);
  v51 = (uint64_t)v79;
  a2(v13, a3[20], a3[21], a3[22], a3[23]);
  sub_100080DF4((uint64_t)v13);
  sub_1000B2074(v51, a4, v49);
  v48((char *)v51, a4);
  sub_100080E30(*(_QWORD *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility, (uint64_t)v13);
  v52 = (uint64_t)v81;
  a2(v13, a3[57], a3[58], a3[59], a3[60]);
  sub_100080DF4((uint64_t)v13);
  sub_1000B2074(v52, a4, v49);
  v48((char *)v52, a4);
  sub_100080E30(*(_QWORD *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, (uint64_t)v13);
  v53 = (uint64_t)v83;
  a2(v13, a3[37], a3[38], a3[39], a3[40]);
  sub_100080DF4((uint64_t)v13);
  sub_1000B2074(v53, a4, v49);
  v48((char *)v53, a4);
  sub_100080E30(*(_QWORD *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, (uint64_t)v13);
  v54 = v75;
  a2(v13, a3[29], a3[30], a3[31], a3[32]);
  sub_100080DF4((uint64_t)v13);
  v55 = v54;
  v74 = v49;
  sub_1000B2074(v54, a4, v49);
  v48((char *)v54, a4);
  sub_100080E30(*(_QWORD *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, (uint64_t)v13);
  v56 = v85;
  a2(v13, a3[4], a3[5], a3[6], a3[7]);
  sub_100080DF4((uint64_t)v13);
  sub_1000B2074(v56, a4, v49);
  v48(v56, a4);
  v57 = *(void (**)(char *, char *, uint64_t))(v90 + 16);
  v57(v56, v88, a4);
  v95[0] = v56;
  v58 = v86;
  v57(v86, v84, a4);
  v95[1] = v58;
  v59 = v87;
  v57(v87, v82, a4);
  v95[2] = v59;
  v60 = v89;
  v61 = (uint64_t)v80;
  v57(v89, v80, a4);
  v95[3] = v60;
  v62 = v91;
  v63 = (uint64_t)v79;
  v57(v91, v79, a4);
  v95[4] = v62;
  v64 = v92;
  v65 = (uint64_t)v81;
  v57(v92, v81, a4);
  v95[5] = v64;
  v66 = (uint64_t)v76;
  v67 = (uint64_t)v83;
  v57(v76, v83, a4);
  v95[6] = v66;
  v68 = (uint64_t)v77;
  v57(v77, (char *)v55, a4);
  v95[7] = v68;
  v94[0] = a4;
  v94[1] = a4;
  v94[2] = a4;
  v94[3] = a4;
  v94[4] = a4;
  v94[5] = a4;
  v94[6] = a4;
  v94[7] = a4;
  v93[0] = v74;
  v93[1] = v74;
  v93[2] = v74;
  v93[3] = v74;
  v93[4] = v74;
  v93[5] = v74;
  v93[6] = v74;
  v93[7] = v74;
  sub_10052800C((uint64_t)v95, 8, (uint64_t)v94, (uint64_t)v93, v69, v70, v71, v72, v74, v75, (uint64_t)v76, (uint64_t)v77, v78, (uint64_t)v79, (uint64_t)v80, (uint64_t)v81, (uint64_t)v82, (uint64_t)v83);
  v48((char *)v55, a4);
  v48((char *)v67, a4);
  v48((char *)v65, a4);
  v48((char *)v63, a4);
  v48((char *)v61, a4);
  v48(v82, a4);
  v48(v84, a4);
  v48(v88, a4);
  v48((char *)v68, a4);
  v48((char *)v66, a4);
  v48(v92, a4);
  v48(v91, a4);
  v48(v89, a4);
  v48(v87, a4);
  v48(v86, a4);
  return ((uint64_t (*)(char *, uint64_t))v48)(v85, a4);
}

uint64_t sub_1001AB36C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;

  if (*(_BYTE *)(v2 + 9))
    v3 = 256;
  else
    v3 = 0;
  return sub_1001A9E00(*(_QWORD *)v2, v3 | *(unsigned __int8 *)(v2 + 8), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2);
}

uint64_t sub_1001AB398()
{
  return sub_1001A1CD4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001AA218);
}

uint64_t sub_1001AB3A4()
{
  return sub_1001A1CD4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001AAB28);
}

uint64_t sub_1001AB3B0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t TupleTypeMetadata2;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *a1;
  v13 = v1;
  v14 = v1;
  v15 = v1;
  v16 = type metadata accessor for Optional(255, v1);
  v17 = v1;
  v18 = v1;
  v19 = v1;
  v20 = v1;
  v3 = sub_1000BA3E0(v16, v2, (uint64_t)&v13);
  v4 = sub_1000AE86C(v3);
  v5 = sub_1000C43AC(v4);
  v13 = v1;
  v14 = v1;
  v15 = v1;
  v16 = v1;
  v17 = v1;
  v18 = v1;
  v19 = v1;
  v20 = v1;
  v7 = sub_1000BA3E0(v5, v6, (uint64_t)&v13);
  v8 = sub_1000AE86C(v7);
  v9 = sub_1000C43AC(v8);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v5, v9, 0, 0);
  v11 = sub_1000AE86C(TupleTypeMetadata2);
  return swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v11);
}

uint64_t destroy for HomeAndWorkRefinementView(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + 8));
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(a1 + 16));
}

uint64_t initializeWithCopy for HomeAndWorkRefinementView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v8;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = a2 + 16;
  v5 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v5;
  v6 = v5;
  v7 = **(void (***)(uint64_t, uint64_t, uint64_t, __n128))(v5 - 8);
  v8 = swift_retain(v3);
  v7(a1 + 16, v4, v6, v8);
  return a1;
}

_QWORD *assignWithCopy for HomeAndWorkRefinementView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = a1[1];
  a1[1] = a2[1];
  swift_retain();
  swift_release(v4);
  sub_100094D04(a1 + 2, a2 + 2);
  return a1;
}

uint64_t assignWithTake for HomeAndWorkRefinementView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_release(v5);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(a1 + 16));
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for HomeAndWorkRefinementView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HomeAndWorkRefinementView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for HomeAndWorkRefinementView()
{
  return &type metadata for HomeAndWorkRefinementView;
}

uint64_t sub_1001AB624(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AA9860, 1);
}

void sub_1001AB634()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1000BA294(&qword_100BC4F08);
  sub_1000B42B0();
  __chkstk_darwin(v2);
  sub_100098728();
  v5 = (_QWORD *)(v4 - v3);
  v6 = type metadata accessor for HomeAndWorkRefinementContentViewModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v7);
  sub_100098728();
  v10 = (uint64_t *)(v9 - v8);
  v11 = sub_1000BA294(&qword_100BC4F10);
  sub_1000B42B0();
  __chkstk_darwin(v12);
  v13 = sub_1000992A8();
  type metadata accessor for HomeAndWorkRefinementViewModel(v13);
  sub_1000B42B0();
  __chkstk_darwin(v14);
  sub_100098728();
  v17 = v16 - v15;
  v18 = *(_QWORD *)(v0 + 8);
  swift_retain();
  sub_10017B20C();
  swift_release(v18);
  if (_s7Weather24LocationCompositionStateOwet_0(v17, 1, v6) == 1)
  {
    swift_storeEnumTagMultiPayload(v1, v11, 0);
    sub_10003D310(&qword_100BC4F18, &qword_100BC4F08, (uint64_t)&unk_1009B0A58);
    sub_1000CC80C(v19, (uint64_t)&type metadata for EmptyView, v20, (uint64_t)&protocol witness table for EmptyView, v19);
  }
  else
  {
    sub_1001AC7A8(v17, (uint64_t)v10);
    sub_1001AB808(v10, v5);
    sub_10003773C((uint64_t)v5, v1, &qword_100BC4F08);
    swift_storeEnumTagMultiPayload(v1, v11, 1);
    sub_10003D310(&qword_100BC4F18, &qword_100BC4F08, (uint64_t)&unk_1009B0A58);
    sub_1000CC80C(v21, (uint64_t)&type metadata for EmptyView, v22, (uint64_t)&protocol witness table for EmptyView, v21);
    sub_100021A14((uint64_t)v5, &qword_100BC4F08);
    sub_1000215BC((uint64_t)v10, type metadata accessor for HomeAndWorkRefinementContentViewModel);
  }
  sub_100098640();
}

void sub_1001AB808(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  _QWORD *v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41[16];
  uint64_t v42;
  _BYTE *v43;
  _BYTE v44[56];
  _QWORD v45[5];

  v6 = sub_1000BA294(&qword_100BC4F20);
  v39 = *(_QWORD *)(v6 - 8);
  v40 = v6;
  __chkstk_darwin(v6);
  sub_100098728();
  v9 = v8 - v7;
  v10 = type metadata accessor for HomeAndWorkRefinementContentViewModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v11);
  v12 = sub_1000992A8();
  v13 = type metadata accessor for DetailViewVisibilityTrackerModel(v12);
  sub_1000B42B0();
  __chkstk_darwin(v14);
  sub_100098728();
  v17 = v16 - v15;
  v18 = enum case for DetailType.homeAndWorkRefinement(_:);
  v19 = type metadata accessor for DetailType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v17, v18, v19);
  v20 = (char *)a1 + *(int *)(v10 + 20);
  v21 = v17 + *(int *)(v13 + 20);
  v22 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v21, v20, v22);
  v23 = v17 + *(int *)(v13 + 24);
  v24 = enum case for DetailViewOrigin.unknown(_:);
  v25 = type metadata accessor for DetailViewOrigin(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v23, v24, v25);
  v26 = v2[5];
  v27 = v2[6];
  v28 = sub_1000DB418(v2 + 2, v26);
  v45[3] = v26;
  v45[4] = *(_QWORD *)(v27 + 8);
  v29 = sub_10005F164(v45);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v29, v28, v26);
  v30 = *a1;
  v31 = a1[1];
  sub_10000AB54((uint64_t)a1, v3, type metadata accessor for HomeAndWorkRefinementContentViewModel);
  sub_1001AC7EC((uint64_t)v2, (uint64_t)v44);
  *a2 = swift_getKeyPath(&unk_10097F170);
  v32 = sub_1000BA294(&qword_100BC4F28);
  swift_storeEnumTagMultiPayload(a2, v32, 0);
  v33 = (int *)sub_1000BA294(&qword_100BC4F08);
  sub_10000AB54(v17, (uint64_t)a2 + v33[9], type metadata accessor for DetailViewVisibilityTrackerModel);
  sub_100043CA8((uint64_t)v45, (uint64_t)a2 + v33[10]);
  v34 = (_QWORD *)((char *)a2 + v33[11]);
  *v34 = v30;
  v34[1] = v31;
  v35 = (_QWORD *)((char *)a2 + v33[12]);
  *v35 = 0;
  v35[1] = 0;
  *((_BYTE *)a2 + v33[13]) = 0;
  v36 = (_QWORD *)((char *)a2 + v33[14]);
  *v36 = 0;
  v36[1] = 0;
  *((_BYTE *)a2 + v33[15]) = 1;
  v42 = v3;
  v43 = v44;
  swift_bridgeObjectRetain(v31);
  v37 = sub_1000BA294(&qword_100BC4F30);
  v38 = sub_1001AC82C();
  List<>.init(content:)(sub_1001AC824, v41, v37, v38);
  sub_1000215BC(v3, type metadata accessor for HomeAndWorkRefinementContentViewModel);
  sub_1001AC9C4((uint64_t)v44);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v45);
  sub_1000215BC(v17, type metadata accessor for DetailViewVisibilityTrackerModel);
  (*(void (**)(char *, uint64_t, uint64_t))(v39 + 32))((char *)a2 + v33[16], v9, v40);
  sub_100098640();
}

uint64_t sub_1001ABACC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t KeyPath;
  uint64_t v34;
  __int128 v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63[16];
  uint64_t v64;
  _OWORD v65[3];
  uint64_t v66;

  v61 = a3;
  v5 = sub_1000BA294(&qword_100BC4F90);
  __chkstk_darwin(v5);
  v60 = (uint64_t)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_1000BA294(&qword_100BC4F78);
  v7 = __chkstk_darwin(v56);
  v9 = (uint64_t *)((char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v55 = type metadata accessor for OpenURLAction(0, v7);
  v10 = *(_QWORD *)(v55 - 8);
  __chkstk_darwin(v55);
  v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for AttributedString(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_1000BA294(&qword_100BC4F68);
  __chkstk_darwin(v62);
  v18 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_1000BA294(&qword_100BC4F58);
  __chkstk_darwin(v57);
  v20 = (char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1000BA294(&qword_100BC4F48);
  v58 = *(_QWORD *)(v21 - 8);
  v59 = v21;
  __chkstk_darwin(v21);
  v54 = (char *)&v53 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = a1;
  *(_QWORD *)v20 = static VerticalAlignment.center.getter(v23);
  *((_QWORD *)v20 + 1) = 0;
  v20[16] = 1;
  v53 = v20;
  v24 = (uint64_t)&v20[*(int *)(sub_1000BA294(&qword_100BC4F98) + 44)];
  v25 = a2;
  sub_1001AC0E4(a1, a2, v24);
  v26 = type metadata accessor for HomeAndWorkRefinementContentViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a1 + *(int *)(v26 + 28), v13);
  v27 = Text.init(_:)(v16);
  v29 = v28;
  v31 = v30;
  LOBYTE(v14) = v32 & 1;
  KeyPath = swift_getKeyPath(&unk_10097F1A0);
  sub_1001AC7EC(v25, (uint64_t)v65);
  v34 = swift_allocObject(&unk_100B5FDC0, 72, 7);
  v35 = v65[1];
  *(_OWORD *)(v34 + 16) = v65[0];
  *(_OWORD *)(v34 + 32) = v35;
  *(_OWORD *)(v34 + 48) = v65[2];
  *(_QWORD *)(v34 + 64) = v66;
  v36 = v12;
  OpenURLAction.init(handler:)(sub_1001ACA04, v34);
  v37 = v12;
  v38 = v55;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))((char *)v9 + *(int *)(v56 + 28), v37, v55);
  *v9 = KeyPath;
  sub_10003773C((uint64_t)v9, (uint64_t)&v18[*(int *)(v62 + 36)], &qword_100BC4F78);
  *(_QWORD *)v18 = v27;
  *((_QWORD *)v18 + 1) = v29;
  v18[16] = v14;
  *((_QWORD *)v18 + 3) = v31;
  sub_1000D55D4(v27, v29, v14);
  swift_bridgeObjectRetain(v31);
  sub_100021A14((uint64_t)v9, &qword_100BC4F78);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v36, v38);
  sub_1000D31B4(v27, v29, v14);
  swift_bridgeObjectRelease();
  sub_10003D310(&qword_100BC4F50, &qword_100BC4F58, (uint64_t)&protocol conformance descriptor for HStack<A>);
  v40 = v39;
  v41 = sub_1001AC940();
  v42 = v54;
  Section<>.init(header:footer:content:)(v53, v18, sub_1001AC9F0, v63, v57, &type metadata for Text, v62, v40, &protocol witness table for Text, v41);
  v43 = type metadata accessor for Text.Case(0);
  v44 = v60;
  _s7Weather24LocationCompositionStateOwst_0(v60, 1, 1, v43);
  v45 = swift_getKeyPath(&unk_10097F1D0);
  v46 = sub_1000BA294(&qword_100BC4F30);
  v47 = v61;
  v48 = (uint64_t *)(v61 + *(int *)(v46 + 36));
  v49 = sub_1000BA294(&qword_100BC4F88);
  sub_10003773C(v44, (uint64_t)v48 + *(int *)(v49 + 28), &qword_100BC4F90);
  *v48 = v45;
  v51 = v58;
  v50 = v59;
  (*(void (**)(uint64_t, char *, uint64_t))(v58 + 16))(v47, v42, v59);
  sub_100021A14(v44, &qword_100BC4F90);
  return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v42, v50);
}

void sub_1001ABF34(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[16];
  _QWORD v35[2];

  v4 = type metadata accessor for Location(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v34[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for HomeAndWorkRefinementContentViewModel(0);
  v9 = __chkstk_darwin(v8);
  v11 = &v34[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = LocationOfInterest.fullAddress.getter(v9);
  v14 = v13;
  sub_10000AB54(a1, (uint64_t)v11, type metadata accessor for HomeAndWorkRefinementContentViewModel);
  if (!v14)
  {
    LocationOfInterest.location.getter(v15);
    v12 = Location.inlineName.getter(v16);
    v14 = v17;
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  }
  sub_1000215BC((uint64_t)v11, type metadata accessor for HomeAndWorkRefinementContentViewModel);
  v35[0] = v12;
  v35[1] = v14;
  v18 = sub_100114EF8();
  v19 = Text.init<A>(_:)(v35, &type metadata for String, v18);
  v21 = v20;
  v23 = v22;
  v25 = v24 & 1;
  v26 = static Color.secondary.getter();
  v27 = Text.foregroundColor(_:)(v26, v19, v21, v25, v23);
  v29 = v28;
  v31 = v30;
  v33 = v32;
  swift_release(v26);
  sub_1000D31B4(v19, v21, v25);
  swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v27;
  *(_QWORD *)(a2 + 8) = v29;
  *(_BYTE *)(a2 + 16) = v31 & 1;
  *(_QWORD *)(a2 + 24) = v33;
}

double sub_1001AC0E4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  double result;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _OWORD v69[3];
  uint64_t v70;

  v55 = a2;
  v64 = a1;
  v4 = type metadata accessor for BorderlessButtonStyle(0);
  v62 = *(_QWORD *)(v4 - 8);
  v63 = v4;
  __chkstk_darwin(v4);
  v61 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1000BA294(&qword_100BC4FA0);
  v59 = *(_QWORD *)(v6 - 8);
  v60 = v6;
  __chkstk_darwin(v6);
  v58 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_1000BA294(&qword_100BC4FA8);
  v57 = *(_QWORD *)(v68 - 8);
  __chkstk_darwin(v68);
  v56 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000BA294(&qword_100BC4FB0);
  __chkstk_darwin(v9);
  v67 = (uint64_t)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v54 - v12;
  v14 = type metadata accessor for LocationOfInterestType(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for HomeAndWorkRefinementContentViewModel(0);
  v19 = LocationOfInterest.type.getter(v18);
  v20 = LocationOfInterestType.title.getter(v19);
  v22 = v21;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  *(_QWORD *)&v69[0] = v20;
  *((_QWORD *)&v69[0] + 1) = v22;
  v23 = sub_100114EF8();
  v24 = Text.init<A>(_:)(v69, &type metadata for String, v23);
  v26 = v25;
  v28 = v27;
  v30 = v29 & 1;
  v31 = static Color.secondary.getter();
  v32 = Text.foregroundColor(_:)(v31, v24, v26, v30, v28);
  v34 = v33;
  v65 = v35;
  v66 = v36;
  swift_release(v31);
  sub_1000D31B4(v24, v26, v30);
  swift_bridgeObjectRelease();
  v37 = 1;
  if (*(_BYTE *)(v64 + *(int *)(v18 + 32)) == 1)
  {
    sub_1001AC7EC(v55, (uint64_t)v69);
    v38 = swift_allocObject(&unk_100B5FDE8, 72, 7);
    v39 = v69[1];
    *(_OWORD *)(v38 + 16) = v69[0];
    *(_OWORD *)(v38 + 32) = v39;
    *(_OWORD *)(v38 + 48) = v69[2];
    *(_QWORD *)(v38 + 64) = v70;
    v40 = v58;
    v41 = Button.init(action:label:)(sub_1001ACA18, v38, sub_1001AC520, 0, &type metadata for Text, &protocol witness table for Text);
    v42 = v61;
    BorderlessButtonStyle.init()(v41);
    sub_10003D310(&qword_100BC4FC0, &qword_100BC4FA0, (uint64_t)&protocol conformance descriptor for Button<A>);
    v44 = v43;
    v45 = sub_1001ACA1C();
    v46 = v56;
    v47 = v60;
    v48 = v63;
    View.buttonStyle<A>(_:)(v42, v60, v63, v44, v45);
    (*(void (**)(char *, uint64_t))(v62 + 8))(v42, v48);
    (*(void (**)(char *, uint64_t))(v59 + 8))(v40, v47);
    (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v13, v46, v68);
    v37 = 0;
  }
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, v37, 1, v68);
  v49 = v65 & 1;
  v50 = v67;
  sub_10003773C((uint64_t)v13, v67, &qword_100BC4FB0);
  *(_QWORD *)a3 = v32;
  *(_QWORD *)(a3 + 8) = v34;
  *(_BYTE *)(a3 + 16) = v49;
  v51 = v66;
  *(_QWORD *)(a3 + 24) = v66;
  *(_QWORD *)(a3 + 32) = 0;
  *(_BYTE *)(a3 + 40) = 1;
  v52 = sub_1000BA294(&qword_100BC4FB8);
  sub_10003773C(v50, a3 + *(int *)(v52 + 64), &qword_100BC4FB0);
  sub_1000D55D4(v32, v34, v49);
  swift_bridgeObjectRetain(v51);
  sub_100021A14((uint64_t)v13, &qword_100BC4FB0);
  sub_100021A14(v50, &qword_100BC4FB0);
  sub_1000D31B4(v32, v34, v49);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

void sub_1001AC520(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;

  v40 = a1;
  v1 = sub_1000BA294(&qword_100BC3B98);
  __chkstk_darwin(v1);
  v3 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Font.TextStyle(0);
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = LocalizedStringKey.init(stringLiteral:)(0x6F43206F74206F47, 0xEE0073746361746ELL);
  v11 = Text.init(_:tableName:bundle:comment:)(v7, v9, v8 & 1, v10, 0, 0, 0, "Button title that link to me card in contacts app");
  v13 = v12;
  v15 = v14;
  v17 = v16 & 1;
  v18 = static Color.accentColor.getter();
  v19 = Text.foregroundColor(_:)(v18, v11, v13, v17, v15);
  v21 = v20;
  v23 = v22;
  v37 = v24;
  swift_release(v18);
  sub_1000D31B4(v11, v13, v17);
  v25 = swift_bridgeObjectRelease();
  v27 = v38;
  v26 = v39;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v38 + 104))(v6, enum case for Font.TextStyle.footnote(_:), v39, v25);
  v28 = type metadata accessor for Font.Design(0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v3, 1, 1, v28);
  v29 = static Font.system(_:design:weight:)(v6, v3, 0, 1);
  sub_100021A14((uint64_t)v3, &qword_100BC3B98);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v6, v26);
  v30 = Text.font(_:)(v29, v19, v21, v23 & 1, v37);
  v32 = v31;
  LOBYTE(v27) = v33;
  v35 = v34;
  swift_release(v29);
  sub_1000D31B4(v19, v21, v23 & 1);
  swift_bridgeObjectRelease();
  v36 = v40;
  *v40 = v30;
  v36[1] = v32;
  *((_BYTE *)v36 + 16) = v27 & 1;
  v36[3] = v35;
}

uint64_t sub_1001AC760(uint64_t a1, uint64_t a2)
{
  sub_1000DB418((_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 40));
  sub_1008040E0();
  return static OpenURLAction.Result.systemAction.getter();
}

uint64_t sub_1001AC7A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HomeAndWorkRefinementContentViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001AC7EC(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for HomeAndWorkRefinementView(a2, a1);
  return a2;
}

uint64_t sub_1001AC824@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1001ABACC(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_1001AC82C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC4F38;
  if (!qword_100BC4F38)
  {
    v1 = sub_100075EB0(&qword_100BC4F30);
    sub_1001AC8B0();
    sub_10003D310(&qword_100BC4F80, &qword_100BC4F88, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BC4F38);
  }
  return result;
}

unint64_t sub_1001AC8B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC4F40;
  if (!qword_100BC4F40)
  {
    v1 = sub_100075EB0(&qword_100BC4F48);
    sub_10003D310(&qword_100BC4F50, &qword_100BC4F58, (uint64_t)&protocol conformance descriptor for HStack<A>);
    sub_1001AC940();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_100BC4F40);
  }
  return result;
}

unint64_t sub_1001AC940()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC4F60;
  if (!qword_100BC4F60)
  {
    v1 = sub_100075EB0(&qword_100BC4F68);
    sub_10003D310(&qword_100BC4F70, &qword_100BC4F78, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BC4F60);
  }
  return result;
}

uint64_t sub_1001AC9C4(uint64_t a1)
{
  destroy for HomeAndWorkRefinementView(a1);
  return a1;
}

void sub_1001AC9F0(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1001ABF34(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1001ACA04(uint64_t a1)
{
  uint64_t v1;

  return sub_1001AC760(a1, v1 + 16);
}

unint64_t sub_1001ACA1C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC4FC8;
  if (!qword_100BC4FC8)
  {
    v1 = type metadata accessor for BorderlessButtonStyle(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for BorderlessButtonStyle, v1);
    atomic_store(result, (unint64_t *)&qword_100BC4FC8);
  }
  return result;
}

unint64_t sub_1001ACA60()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC4FD0;
  if (!qword_100BC4FD0)
  {
    v1 = sub_100075EB0(&qword_100BC4FD8);
    sub_10003D310(&qword_100BC4F18, &qword_100BC4F08, (uint64_t)&unk_1009B0A58);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BC4FD0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for NotificationsOptInListTip(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 3) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (v4)
        goto LABEL_15;
    }
    else
    {
      if (v3 == 2)
      {
        v4 = *(unsigned __int16 *)(a1 + 1);
        if (!*(_WORD *)(a1 + 1))
          goto LABEL_17;
LABEL_15:
        v5 = (*a1 | (v4 << 8)) - 4;
        return (v5 + 1);
      }
      v4 = a1[1];
      if (a1[1])
        goto LABEL_15;
    }
  }
LABEL_17:
  v6 = *a1;
  if (v6 >= 2)
    v5 = ((v6 + 2147483646) & 0x7FFFFFFF) - 2;
  else
    v5 = -3;
  if (v5 < 0)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for NotificationsOptInListTip(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1001ACBD4 + 4 * byte_10097F205[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1001ACC08 + 4 * byte_10097F200[v4]))();
}

uint64_t sub_1001ACC08(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001ACC10(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001ACC18);
  return result;
}

uint64_t sub_1001ACC24(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001ACC2CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1001ACC30(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001ACC38(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NotificationsOptInListTip()
{
  return &type metadata for NotificationsOptInListTip;
}

uint64_t sub_1001ACC54()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  _QWORD v4[2];

  sub_100225618();
  v4[0] = v0;
  v4[1] = v1;
  v2 = sub_100114EF8();
  return Text.init<A>(_:)(v4, &type metadata for String, v2);
}

uint64_t sub_1001ACCA0(char a1)
{
  int v2;
  id v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  Swift::String v7;
  Swift::String v8;
  unint64_t v9;
  unint64_t v11;
  Swift::String v12;

  v2 = a1 & 0xFE;
  v3 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  if (v2 == 2 || (a1 & 1) != 0)
  {
    v6 = 0xD000000000000048;
    v4 = 0xD00000000000006CLL;
    v11 = 0x80000001009F1A30;
    v5 = 0x80000001009F19E0;
  }
  else
  {
    v4 = 0xD000000000000087;
    v11 = 0x80000001009F1AE0;
    v5 = 0x80000001009F1AA0;
    v6 = 0xD00000000000003ELL;
  }
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  v8 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v6, (Swift::String_optional)0, (NSBundle)v3, v7, *(Swift::String *)&v4);

  v12 = v8;
  v9 = sub_100114EF8();
  return Text.init<A>(_:)(&v12, &type metadata for String, v9);
}

uint64_t sub_1001ACDAC(char a1)
{
  _BOOL4 v1;
  _BOOL4 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = (a1 & 0xFE) != 2;
  v2 = (a1 & 1) == 0;
  if (v1 && v2)
    v3 = 0xD00000000000001ELL;
  else
    v3 = 0xD00000000000001DLL;
  if (v1 && v2)
    v4 = 0x80000001009F19C0;
  else
    v4 = 0x80000001009F19A0;
  sub_10021D348(v3, v4, v1 && v2);
  v6 = v5;
  sub_10016F41C(v3, v4);
  return v6;
}

_QWORD *sub_1001ACE3C(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v3 = type metadata accessor for Tips.Action(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  sub_1000BCED8();
  v5 = swift_allocObject(&unk_100B5FEE0, 17, 7);
  *(_BYTE *)(v5 + 16) = a1;
  Tips.Action.init(id:perform:_:)(0xD000000000000014, 0x80000001009F1980, LocationSearchEntityFromStringResolver.init(), 0, sub_1001AD800, v5);
  v6 = sub_1000BA294(&qword_100BC5028);
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = (v7 + 32) & ~v7;
  v9 = swift_allocObject(v6, v8 + *(_QWORD *)(v4 + 72), v7 | 7);
  *(_OWORD *)(v9 + 16) = xmmword_10097CA50;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v9 + v8, v1, v3);
  v10 = sub_1002870AC(v9);
  swift_setDeallocating(v9);
  sub_10050047C();
  return v10;
}

uint64_t sub_1001ACF5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v19[2];

  v0 = type metadata accessor for Font.TextStyle(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002257A0();
  v19[0] = v4;
  v19[1] = v5;
  v6 = sub_100114EF8();
  v7 = Text.init<A>(_:)(v19, &type metadata for String, v6);
  v9 = v8;
  v11 = v10;
  v13 = v12 & 1;
  v14 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for Font.TextStyle.body(_:), v0);
  static Font.Weight.medium.getter(v14);
  v15 = static Font.system(_:weight:)(v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v16 = Text.font(_:)(v15, v7, v9, v13, v11);
  swift_release(v15);
  sub_1000D31B4(v7, v9, v13);
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1001AD0B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;

  v35 = sub_1000BA294(&qword_100BC4FE8);
  v36 = *(_QWORD *)(v35 - 8);
  sub_10009D98C();
  __chkstk_darwin(v1);
  sub_100088FDC();
  v33 = v2;
  v31 = sub_1000BA294(&qword_100BC4FF0);
  v34 = *(_QWORD *)(v31 - 8);
  sub_10009D98C();
  __chkstk_darwin(v3);
  sub_100088FDC();
  v29 = v4;
  v5 = type metadata accessor for Tips.IgnoresDisplayFrequency(0);
  v28 = *(_QWORD *)(v5 - 8);
  sub_10009D98C();
  __chkstk_darwin(v6);
  sub_100098728();
  v9 = v8 - v7;
  v10 = sub_1000BA294(&qword_100BC4FF8);
  v32 = *(_QWORD *)(v10 - 8);
  sub_10009D98C();
  __chkstk_darwin(v11);
  sub_100098728();
  v14 = v13 - v12;
  v15 = type metadata accessor for Tips.MaxDisplayCount(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  sub_1000BCED8();
  v17 = sub_1000BA294(&qword_100BC5000);
  v30 = *(_QWORD *)(v17 - 8);
  sub_10009D98C();
  __chkstk_darwin(v18);
  sub_100098728();
  v21 = v20 - v19;
  Tips.MaxDisplayCount.init(_:)(3);
  static Tips.OptionsBuilder.buildExpression<A>(_:)(v0, v15, &protocol witness table for Tips.MaxDisplayCount);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v0, v15);
  Tips.IgnoresDisplayFrequency.init(_:)(1);
  static Tips.OptionsBuilder.buildExpression<A>(_:)(v9, v5, &protocol witness table for Tips.IgnoresDisplayFrequency);
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v9, v5);
  v37 = v15;
  v38 = &protocol witness table for Tips.MaxDisplayCount;
  v22 = sub_10009885C((uint64_t)&v37, (uint64_t)&opaque type descriptor for <<opaque return type of static Tips.OptionsBuilder.buildExpression<A>(_:)>>);
  static Tips.OptionsBuilder.buildPartialBlock<A>(first:)(v21, v17, v22);
  v37 = v17;
  v38 = (void *)v22;
  v23 = sub_10009885C((uint64_t)&v37, (uint64_t)&opaque type descriptor for <<opaque return type of static Tips.OptionsBuilder.buildPartialBlock<A>(first:)>>);
  v37 = v5;
  v38 = &protocol witness table for Tips.IgnoresDisplayFrequency;
  v24 = sub_10009885C((uint64_t)&v37, (uint64_t)&opaque type descriptor for <<opaque return type of static Tips.OptionsBuilder.buildExpression<A>(_:)>>);
  static Tips.OptionsBuilder.buildPartialBlock<A, B>(accumulated:next:)(v29, v14, v31, v10, v23, v24);
  v37 = v31;
  v38 = (void *)v10;
  v39 = v23;
  v40 = v24;
  v25 = sub_10009885C((uint64_t)&v37, (uint64_t)&opaque type descriptor for <<opaque return type of static Tips.OptionsBuilder.buildPartialBlock<A, B>(accumulated:next:)>>);
  v26 = static Tips.OptionsBuilder.buildFinalResult<A>(_:)(v33, v35, v25);
  (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v33, v35);
  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v29, v31);
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v14, v10);
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v21, v17);
  return v26;
}

uint64_t sub_1001AD394()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_1000BA294(&qword_100BC3130);
  sub_10004037C(v0, qword_100CADCF0);
  sub_1000AECD4(v0, (uint64_t)qword_100CADCF0);
  v5 = 0;
  v1 = sub_1000BA294(&qword_100BC5020);
  v2 = type metadata accessor for Tips.ParameterOption(0);
  v3 = swift_allocObject(v1, ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v2 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) | 7);
  *(_OWORD *)(v3 + 16) = xmmword_10097CA50;
  static Tips.ParameterOption.transient.getter();
  return Tips.Parameter.init<A>(_:_:_:_:)(&type metadata for NotificationsOptInListTip, 0x79616C707369642BLL, 0xEB00000000706954, &v5, v3, &type metadata for Bool, &type metadata for NotificationsOptInListTip, &protocol witness table for Bool, &protocol witness table for Bool);
}

uint64_t sub_1001AD498()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[24];

  v0 = sub_1000BA294(&qword_100BC3130);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  sub_100098728();
  v4 = v3 - v2;
  v5 = type metadata accessor for Tips.Rule(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_100098728();
  v9 = v8 - v7;
  if (qword_100BC1E10 != -1)
    swift_once(&qword_100BC1E10, sub_1001AD394);
  v10 = sub_1000AECD4(v0, (uint64_t)qword_100CADCF0);
  swift_beginAccess(v10, v14, 0, 0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v4, v10, v0);
  Tips.Rule.init<A>(_:_:)(v4, sub_1001AD5F8, 0);
  v11 = static Tips.RuleBuilder.buildExpression(_:)(v9);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  v12 = static Tips.RuleBuilder.buildPartialBlock(first:)(v11);
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1001AD5F8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1000BA294(&qword_100BC5008);
  a2[3] = v4;
  a2[4] = sub_1001AD7AC(&qword_100BC5010, (uint64_t)&protocol conformance descriptor for PredicateExpressions.Variable<A>);
  sub_10005F164(a2);
  v5 = sub_1001AD7AC(&qword_100BC5018, (uint64_t)&protocol conformance descriptor for PredicateExpressions.Variable<A>);
  return static PredicateExpressions.build_Arg<A>(_:)(a1, v4, v5);
}

BOOL sub_1001AD680(char a1, unsigned __int8 a2)
{
  if (a1 == 2)
    return a2 == 2;
  if (a1 != 3)
    return (a2 & 0xFE) != 2 && ((((a1 & 1) == 0) ^ a2) & 1) != 0;
  return a2 == 3;
}

uint64_t sub_1001AD6E0()
{
  return sub_1001ACC54();
}

uint64_t sub_1001AD704()
{
  char *v0;

  return sub_1001ACCA0(*v0);
}

uint64_t sub_1001AD70C()
{
  char *v0;

  return sub_1001ACDAC(*v0);
}

_QWORD *sub_1001AD714()
{
  char *v0;

  return sub_1001ACE3C(*v0);
}

BOOL sub_1001AD724(char *a1, unsigned __int8 *a2)
{
  return sub_1001AD680(*a1, *a2);
}

uint64_t sub_1001AD730@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v4;
  uint64_t result;
  uint64_t v6;

  v4 = sub_100162BE8();
  result = Tip.id.getter(a1, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

unint64_t sub_1001AD770()
{
  unint64_t result;

  result = qword_100BC4FE0;
  if (!qword_100BC4FE0)
  {
    result = swift_getWitnessTable(&unk_10097F22C, &type metadata for NotificationsOptInListTip);
    atomic_store(result, (unint64_t *)&qword_100BC4FE0);
  }
  return result;
}

uint64_t sub_1001AD7AC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_100075EB0(&qword_100BC5008);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001AD7F0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001AD800()
{
  return sub_1001ACF5C();
}

uint64_t WindowFocusManager.__allocating_init()()
{
  uint64_t v0;
  uint64_t result;

  result = swift_allocObject(v0, 24, 7);
  *(_QWORD *)(result + 16) = _swiftEmptyArrayStorage;
  return result;
}

uint64_t WindowFocusManager.init()()
{
  uint64_t v0;
  uint64_t result;

  result = v0;
  *(_QWORD *)(v0 + 16) = _swiftEmptyArrayStorage;
  return result;
}

void sub_1001AD848(uint64_t a1)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  uint64_t v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t j;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[24];

  v2 = (uint64_t *)(a1 + 16);
  swift_beginAccess(a1 + 16, v23, 1, 0);
  v3 = *(_QWORD *)(a1 + 16);
  if ((unint64_t)v3 >> 62)
  {
    if (v3 < 0)
      v20 = *(_QWORD *)(a1 + 16);
    else
      v20 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v4 = _CocoaArrayWrapper.endIndex.getter(v20);
    if (!v4)
      goto LABEL_12;
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*(_QWORD *)(a1 + 16));
    if (!v4)
      goto LABEL_12;
  }
  if (v4 < 1)
  {
    __break(1u);
    goto LABEL_35;
  }
  for (i = 0; i != v4; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0)
    {
      v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v3);
    }
    else
    {
      v6 = *(_QWORD *)(v3 + 8 * i + 32);
      swift_retain(v6);
    }
    Strong = swift_unknownObjectWeakLoadStrong(v6 + 32);
    swift_unknownObjectRelease(Strong);
    if (Strong)
    {
      v8 = swift_unknownObjectWeakLoadStrong(v6 + 16);
      if (v8)
      {
        v9 = v8;
        v10 = *(_QWORD *)(v6 + 24);
        ObjectType = swift_getObjectType(v8);
        (*(void (**)(uint64_t, uint64_t))(v10 + 16))(ObjectType, v10);
        swift_unknownObjectRelease(v9);
      }
    }
    swift_release(v6);
  }
LABEL_12:
  swift_bridgeObjectRelease(v3);
  v12 = *v2;
  if (!((unint64_t)*v2 >> 62))
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v12);
    if (v13)
      goto LABEL_14;
LABEL_33:
    swift_bridgeObjectRelease(v12);
    v22 = *v2;
    *v2 = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRelease(v22);
    return;
  }
  if (v12 < 0)
    v21 = *v2;
  else
    v21 = v12 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v12);
  v13 = _CocoaArrayWrapper.endIndex.getter(v21);
  if (!v13)
    goto LABEL_33;
LABEL_14:
  if (v13 >= 1)
  {
    for (j = 0; j != v13; ++j)
    {
      if ((v12 & 0xC000000000000001) != 0)
      {
        v15 = specialized _ArrayBuffer._getElementSlowPath(_:)(j, v12);
      }
      else
      {
        v15 = *(_QWORD *)(v12 + 8 * j + 32);
        swift_retain(v15);
      }
      v16 = swift_unknownObjectWeakLoadStrong(v15 + 32);
      v17 = swift_unknownObjectRelease(v16);
      if (v16)
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v17);
        v18 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v18);
        v19 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v15);
        specialized ContiguousArray._endMutation()(v19);
      }
      else
      {
        swift_release(v15);
      }
    }
    goto LABEL_33;
  }
LABEL_35:
  __break(1u);
}

Swift::Void __swiftcall WindowFocusManager.didLoseFocus()()
{
  uint64_t v0;

  sub_1001AD848(v0);
}

double WindowFocusManager.remove(monitor:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t Strong;
  uint64_t v10;
  double result;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[24];
  _BYTE v15[24];

  v3 = v1 + 16;
  sub_10009922C(v1 + 16, (uint64_t)v15, 0);
  v4 = *(_QWORD *)(v1 + 16);
  if ((unint64_t)v4 >> 62)
    goto LABEL_14;
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(*(_QWORD *)(v1 + 16));
  for (; v5; v5 = _CocoaArrayWrapper.endIndex.getter(v13))
  {
    v6 = 0;
    while (1)
    {
      if ((v4 & 0xC000000000000001) != 0)
      {
        v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v4);
      }
      else
      {
        v7 = *(_QWORD *)(v4 + 8 * v6 + 32);
        swift_retain();
      }
      v8 = v6 + 1;
      if (__OFADD__(v6, 1))
        break;
      Strong = swift_unknownObjectWeakLoadStrong(v7 + 16);
      if (Strong)
      {
        v10 = Strong;
        swift_unknownObjectRelease(Strong);
        if (v10 == a1)
        {
          swift_bridgeObjectRelease();
          sub_10009922C(v3, (uint64_t)v14, 33);
          v12 = sub_1001ADC18(v6, sub_100866FF4, (uint64_t (*)(uint64_t, unint64_t))sub_1006001D8);
          swift_endAccess(v14);
          swift_release(v12);
          *(_QWORD *)&result = swift_release(v7).n128_u64[0];
          return result;
        }
      }
      swift_release(v7);
      ++v6;
      if (v8 == v5)
        goto LABEL_11;
    }
    __break(1u);
LABEL_14:
    if (v4 < 0)
      v13 = v4;
    else
      v13 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
  }
LABEL_11:
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_1001ADC04(unint64_t a1)
{
  return sub_1001ADC18(a1, sub_100866FF4, (uint64_t (*)(uint64_t, unint64_t))sub_1006001D8);
}

uint64_t sub_1001ADC18(unint64_t a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(uint64_t, unint64_t))
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v7 = *v3;
  result = swift_isUniquelyReferenced_nonNull_bridgeObject(*v3);
  *v3 = v7;
  if (!(_DWORD)result || v7 < 0 || (v7 & 0x4000000000000000) != 0)
  {
    result = a2(v7);
    v7 = result;
    *v3 = result;
  }
  v9 = v7 & 0xFFFFFFFFFFFFFF8;
  v10 = *(_QWORD *)(v9 + 16);
  if (v10 <= a1)
  {
    __break(1u);
  }
  else
  {
    v11 = v10 - 1;
    v12 = v10 - 1 - a1;
    v13 = v9 + 8 * a1;
    v14 = *(_QWORD *)(v13 + 32);
    v15 = a3(v13 + 40, v12);
    *(_QWORD *)(v9 + 16) = v11;
    specialized Array._endMutation()(v15);
    return v14;
  }
  return result;
}

uint64_t StubLocalSearchRequestService.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return v0;
}

uint64_t StubLocalSearchRequestService.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocClassInstance(v0, 24, 7);
}

void sub_1001ADCF0()
{
  WindowFocusManager.didLoseFocus()();
}

double sub_1001ADD10(uint64_t a1)
{
  return WindowFocusManager.remove(monitor:)(a1);
}

uint64_t sub_1001ADD30()
{
  uint64_t v0;

  return swift_unknownObjectWeakAssign(v0 + 32, 0);
}

uint64_t sub_1001ADD3C()
{
  uint64_t v0;

  sub_1001ADE1C(v0 + 16);
  sub_1001ADE1C(v0 + 32);
  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t sub_1001ADD68()
{
  return sub_1001ADD30();
}

uint64_t sub_1001ADD88(uint64_t a1)
{
  return sub_1001ADDDC(a1, (uint64_t (*)(BOOL))sub_1000B2E08);
}

uint64_t sub_1001ADD94(uint64_t a1)
{
  return sub_1001ADDDC(a1, (uint64_t (*)(BOOL))sub_1005FED1C);
}

uint64_t sub_1001ADDA0(uint64_t a1)
{
  return sub_1001ADDDC(a1, (uint64_t (*)(BOOL))sub_1005FED58);
}

uint64_t sub_1001ADDAC(uint64_t a1)
{
  return sub_1001ADDDC(a1, (uint64_t (*)(BOOL))sub_1005FF104);
}

uint64_t sub_1001ADDB8(uint64_t a1)
{
  return sub_1001ADDDC(a1, (uint64_t (*)(BOOL))sub_1005FF148);
}

uint64_t sub_1001ADDC4(uint64_t a1)
{
  return sub_1001ADDDC(a1, (uint64_t (*)(BOOL))sub_1005FED00);
}

uint64_t sub_1001ADDD0(uint64_t a1)
{
  return sub_1001ADDDC(a1, (uint64_t (*)(BOOL))sub_1005FF450);
}

uint64_t sub_1001ADDDC(uint64_t result, uint64_t (*a2)(BOOL))
{
  uint64_t v2;
  unint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)v2 + 24);
  if (result + 1 > (uint64_t)(v3 >> 1))
  {
    result = a2(v3 > 1);
    *(_QWORD *)v2 = result;
  }
  return result;
}

uint64_t sub_1001ADE1C(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

uint64_t sub_1001ADE40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if ((static Date.== infix(_:_:)(a1, a2) & 1) == 0)
    return 0;
  v4 = *(int *)(type metadata accessor for SunriseSunsetDetailDataProcessor.ProcessingKey(0) + 20);
  return static Location.== infix(_:_:)(a1 + v4, a2 + v4);
}

uint64_t sub_1001ADE8C()
{
  uint64_t v0;
  uint64_t v1;

  sub_100098778();
  sub_100086DA4((unint64_t *)&qword_100BC3588, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  sub_1000C5AFC(v0);
  type metadata accessor for SunriseSunsetDetailDataProcessor.ProcessingKey(0);
  sub_1000992C4();
  sub_100086DA4(&qword_100BC35B0, (uint64_t (*)(uint64_t))&type metadata accessor for Location, (uint64_t)&protocol conformance descriptor for Location);
  return sub_1000C5AFC(v1);
}

Swift::Int sub_1001ADF10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5);
  sub_100098778();
  sub_100086DA4((unint64_t *)&qword_100BC3588, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  sub_1000AE878(v0, v1);
  type metadata accessor for SunriseSunsetDetailDataProcessor.ProcessingKey(0);
  sub_1000992C4();
  sub_100086DA4(&qword_100BC35B0, (uint64_t (*)(uint64_t))&type metadata accessor for Location, (uint64_t)&protocol conformance descriptor for Location);
  sub_1000AE878(v2, v3);
  return Hasher._finalize()();
}

Swift::Int sub_1001ADFB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5);
  v0 = type metadata accessor for Date(0);
  sub_100086DA4((unint64_t *)&qword_100BC3588, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  dispatch thunk of Hashable.hash(into:)(v5, v0, v1);
  v2 = type metadata accessor for Location(0);
  sub_100086DA4(&qword_100BC35B0, (uint64_t (*)(uint64_t))&type metadata accessor for Location, (uint64_t)&protocol conformance descriptor for Location);
  dispatch thunk of Hashable.hash(into:)(v5, v2, v3);
  return Hasher._finalize()();
}

uint64_t sub_1001AE064()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_1000986AC();
  sub_1000BA294(&qword_100BC52D8);
  sub_10009D98C();
  __chkstk_darwin(v5);
  sub_100088FDC();
  v21 = v6;
  sub_1000BE718();
  sub_10009D98C();
  __chkstk_darwin(v7);
  v19 = *(_QWORD *)(sub_1000D1C2C() - 8);
  sub_10009D98C();
  __chkstk_darwin(v8);
  v18 = sub_100098778();
  v9 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  sub_1000BEDA4();
  __chkstk_darwin(v10);
  sub_1000C6D5C();
  sub_1000BEC2C();
  __chkstk_darwin(v11);
  v20 = *(_QWORD *)(sub_1000BD21C() - 8);
  sub_10009D98C();
  __chkstk_darwin(v12);
  sub_100098864();
  sub_1000ED3E4();
  sub_100099254(v0, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_10003BC9C();
  sub_1000FC45C();
  sub_1001106CC();
  sub_1000F4380(v19);
  sub_10009BBF4();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v4, v18);
  sub_1000D054C();
  v13 = sub_1000992C4();
  sub_1000C6978(v13);
  sub_1000DC890(v1);
  sub_1000F3F3C();
  sub_10009880C();
  sub_1000215BC(v2, type metadata accessor for SunriseSunsetDetailDataProcessor.ProcessingKey);
  sub_10011AB7C();
  sub_1000BE888(v20);
  v14 = sub_1000C654C();
  sub_100088FC8(v21, 1, v14);
  if (v15)
    v16 = 0;
  else
    v16 = 1;
  sub_100021A14(v21, &qword_100BC52D8);
  return v16;
}

uint64_t sub_1001AE238()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_1000986AC();
  v24 = v5;
  sub_1000BA294(&qword_100BC52D8);
  sub_10009D98C();
  __chkstk_darwin(v6);
  sub_100088FDC();
  v23 = v7;
  sub_1000BE718();
  sub_10009D98C();
  __chkstk_darwin(v8);
  v21 = *(_QWORD *)(sub_1000D1C2C() - 8);
  sub_10009D98C();
  __chkstk_darwin(v9);
  v20 = sub_100098778();
  v10 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  sub_1000BEDA4();
  __chkstk_darwin(v11);
  sub_1000C6D5C();
  sub_1000BEC2C();
  __chkstk_darwin(v12);
  v22 = *(_QWORD *)(sub_1000BD21C() - 8);
  sub_10009D98C();
  __chkstk_darwin(v13);
  sub_100098864();
  sub_1000ED3E4();
  sub_100099254(v0, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_10003BC9C();
  sub_1000FC45C();
  sub_1001106CC();
  sub_1000F4380(v21);
  sub_10009BBF4();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v4, v20);
  sub_1000D054C();
  v14 = sub_1000992C4();
  sub_1000C6978(v14);
  sub_1000DC890(v1);
  sub_1000F3F3C();
  swift_release(v1);
  sub_1000215BC(v2, type metadata accessor for SunriseSunsetDetailDataProcessor.ProcessingKey);
  sub_10011AB7C();
  sub_1000BE888(v22);
  v15 = sub_1000C654C();
  v16 = sub_100088FC8(v23, 1, v15);
  if (v17)
  {
    sub_10009518C(v16, &qword_100BC52D8);
    v18 = 1;
  }
  else
  {
    sub_10007C77C(v23, v24, type metadata accessor for SunriseSunsetDetailPreprocessedDataModel);
    v18 = 0;
  }
  return _s7Weather24LocationCompositionStateOwst_0(v24, v18, 1, v15);
}

uint64_t sub_1001AE448(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3[7] = a2;
  v3[8] = v2;
  v3[6] = a1;
  v4 = sub_1000992C4();
  v3[9] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[10] = v5;
  v3[11] = sub_1000BA400(v5);
  v6 = sub_1000C654C();
  v3[12] = v6;
  v3[13] = sub_1000BA400(*(_QWORD *)(v6 - 8));
  v7 = sub_1000BA294(&qword_100BC52D8);
  v3[14] = sub_1000D9B64(*(_QWORD *)(v7 - 8));
  v3[15] = sub_1000BA410();
  v8 = type metadata accessor for SunriseSunsetDetailDataProcessor.ProcessingKey(0);
  v3[16] = v8;
  v3[17] = sub_1000D9B64(*(_QWORD *)(v8 - 8));
  v3[18] = sub_1000BA410();
  v9 = type metadata accessor for CurrentWeather(0);
  v3[19] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v3[20] = v10;
  v3[21] = sub_1000BA400(v10);
  v11 = sub_100098778();
  v3[22] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v3[23] = v12;
  v3[24] = sub_1000D9B64(v12);
  v3[25] = sub_1000BA410();
  v3[26] = sub_1000BA410();
  v13 = type metadata accessor for TimeZone(0);
  v3[27] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v3[28] = v14;
  v3[29] = sub_1000BA400(v14);
  v15 = type metadata accessor for Calendar(0);
  v3[30] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v3[31] = v16;
  v3[32] = sub_1000BA400(v16);
  sub_10003BC90();
  return sub_1000BA3F4();
}

uint64_t sub_1001AE560(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  void (*v10)(uint64_t, uint64_t, uint64_t);
  int v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  os_log_type_t type[8];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t, __n128);
  uint64_t v57;
  uint64_t v58;

  v3 = *(_QWORD *)(v1 + 224);
  v2 = *(_QWORD *)(v1 + 232);
  v4 = *(_QWORD *)(v1 + 216);
  v5 = *(_QWORD *)(v1 + 200);
  v38 = *(_QWORD *)(v1 + 208);
  *(_QWORD *)type = *(_QWORD *)(v1 + 184);
  v41 = *(_QWORD *)(v1 + 176);
  v37 = *(_QWORD *)(v1 + 160);
  v6 = *(_QWORD *)(v1 + 144);
  v45 = *(_QWORD *)(v1 + 128);
  v51 = *(_QWORD *)(v1 + 120);
  v55 = *(_QWORD *)(v1 + 96);
  v47 = *(_QWORD *)(v1 + 72);
  v49 = *(_QWORD *)(v1 + 64);
  v43 = *(_QWORD *)(v1 + 56);
  v44 = *(_QWORD *)(v1 + 80);
  Location.timeZone.getter(a1);
  static Calendar.currentCalendar(with:)(v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  v7 = sub_10003BC9C();
  v8 = WeatherDataModel.currentWeather.getter(v7);
  CurrentWeather.date.getter(v8);
  sub_1000AE82C(v37);
  Calendar.startOfDay(for:)(v5);
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)type + 8);
  *(_QWORD *)(v1 + 264) = v9;
  v9(v5, v41);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)type + 16))(v6, v38, v41);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16);
  v10(v6 + *(int *)(v45 + 20), v43, v47);
  sub_1000DC890(v49);
  Cache.subscript.getter(v6);
  sub_10009880C();
  v11 = _s7Weather24LocationCompositionStateOwet_0(v51, 1, v55);
  sub_100021A14(v51, &qword_100BC52D8);
  if (v11 == 1)
  {
    v12 = (_QWORD *)swift_task_alloc(dword_100BC52EC);
    *(_QWORD *)(v1 + 272) = v12;
    *v12 = v1;
    v12[1] = sub_1001AEA88;
    return sub_1001AEC14(*(_QWORD *)(v1 + 104), *(_QWORD *)(v1 + 144));
  }
  else
  {
    v56 = (void (*)(uint64_t, uint64_t, __n128))v9;
    if (qword_100BC2450 != -1)
      swift_once(&qword_100BC2450, sub_1006F3844);
    v14 = *(_QWORD *)(v1 + 208);
    v15 = *(_QWORD *)(v1 + 192);
    v16 = *(_QWORD *)(v1 + 88);
    v52 = *(_QWORD *)(v1 + 72);
    v17 = *(_QWORD *)(v1 + 56);
    v18 = sub_100098720();
    sub_1000AECD4(v18, (uint64_t)qword_100CAF0E8);
    sub_1000C2440(v15, v14);
    v19 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v10)(v16, v17, v52);
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.default.getter(v20);
    v22 = os_log_type_enabled(v20, v21);
    v24 = *(_QWORD *)(v1 + 248);
    v23 = *(_QWORD *)(v1 + 256);
    v25 = *(_QWORD *)(v1 + 240);
    v26 = *(_QWORD *)(v1 + 208);
    v27 = *(_QWORD *)(v1 + 192);
    v28 = *(_QWORD *)(v1 + 176);
    v50 = *(_QWORD *)(v1 + 88);
    v53 = *(_QWORD *)(v1 + 144);
    v46 = *(_QWORD *)(v1 + 80);
    v48 = *(_QWORD *)(v1 + 72);
    if (v22)
    {
      v42 = *(_QWORD *)(v1 + 256);
      v29 = swift_slowAlloc(42, -1);
      v39 = swift_slowAlloc(64, -1);
      v58 = v39;
      *(_DWORD *)v29 = 141558787;
      *(_QWORD *)(v1 + 16) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 16, v1 + 24);
      *(_WORD *)(v29 + 12) = 2081;
      sub_100086DA4((unint64_t *)&qword_100BC52F0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
      v30 = dispatch thunk of CustomStringConvertible.description.getter(v28);
      *(_QWORD *)(v1 + 24) = sub_1000CE1C8(v30, v31, &v58);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 24, v1 + 32);
      v32 = swift_bridgeObjectRelease();
      v56(v27, v28, v32);
      *(_WORD *)(v29 + 22) = 2160;
      *(_QWORD *)(v1 + 32) = 1752392040;
      v33 = UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 32, v1 + 40);
      *(_WORD *)(v29 + 32) = 2081;
      Location.name.getter(v33);
      *(_QWORD *)(v1 + 40) = sub_1000CE1C8(v34, v35, &v58);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 40, v1 + 48);
      swift_bridgeObjectRelease();
      sub_1000AE82C(v46);
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Preprocessed data already exist for %{private,mask.hash}s %{private,mask.hash}s. Skip making data", (uint8_t *)v29, 0x2Au);
      swift_arrayDestroy(v39, 2);
      sub_1000986F0(v39);
      sub_1000986F0(v29);

      sub_1000215BC(v53, type metadata accessor for SunriseSunsetDetailDataProcessor.ProcessingKey);
      ((void (*)(uint64_t, uint64_t))v56)(v26, v28);
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v42, v25);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v50, v48);
      ((void (*)(uint64_t, uint64_t))v56)(v27, v28);
      sub_1000215BC(v53, type metadata accessor for SunriseSunsetDetailDataProcessor.ProcessingKey);
      ((void (*)(uint64_t, uint64_t))v56)(v26, v28);
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
    }
    v36 = sub_1000C1CA8();
    v54 = *(_QWORD *)(v1 + 104);
    v57 = *(_QWORD *)(v1 + 88);
    swift_task_dealloc(v36);
    sub_1000B30A8();
    sub_1000992CC();
    sub_1000992D4();
    sub_1000CFFF0();
    sub_1000D0544();
    sub_1000CF75C();
    sub_1000DA8A4();
    sub_1000DC684();
    sub_1000DAE14();
    swift_task_dealloc(v54);
    swift_task_dealloc(v57);
    return sub_100110178(*(uint64_t (**)(void))(v1 + 8));
  }
}

uint64_t sub_1001AEA88()
{
  uint64_t v0;

  sub_1000B43D4();
  sub_10009E3B0(*(_QWORD *)(v0 + 272));
  sub_10003BC90();
  return sub_1000BA3F4();
}

uint64_t sub_1001AEABC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v10 = *(_QWORD *)(v0 + 248);
  v11 = *(void (**)(uint64_t, uint64_t))(v0 + 264);
  v12 = *(_QWORD *)(v0 + 240);
  v14 = *(_QWORD *)(v0 + 256);
  v1 = *(_QWORD *)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 144);
  v6 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 112);
  v7 = *(_QWORD *)(v0 + 96);
  sub_100095B78(v4, v3, type metadata accessor for SunriseSunsetDetailDataProcessor.ProcessingKey);
  sub_100095B78(v6, v5, type metadata accessor for SunriseSunsetDetailPreprocessedDataModel);
  _s7Weather24LocationCompositionStateOwst_0(v5, 0, 1, v7);
  swift_retain();
  Cache.subscript.setter(v5, v3);
  sub_10009880C();
  sub_1000215BC(v6, type metadata accessor for SunriseSunsetDetailPreprocessedDataModel);
  sub_1000215BC(v4, type metadata accessor for SunriseSunsetDetailDataProcessor.ProcessingKey);
  v11(v1, v2);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v14, v12);
  v8 = sub_1000C1CA8();
  v13 = *(_QWORD *)(v0 + 104);
  v15 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(v8);
  sub_1000B30A8();
  sub_1000992CC();
  sub_1000992D4();
  sub_1000CFFF0();
  sub_1000D0544();
  sub_1000CF75C();
  sub_1000DA8A4();
  sub_1000DC684();
  sub_1000DAE14();
  swift_task_dealloc(v13);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001AEC14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3[7] = a2;
  v3[8] = v2;
  v3[6] = a1;
  v4 = type metadata accessor for SunriseSunsetMonthlyViewModel(0);
  v3[9] = v4;
  v5 = (*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[10] = swift_task_alloc(v5);
  v3[11] = swift_task_alloc(v5);
  v3[12] = swift_task_alloc(v5);
  v6 = (*(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BC52F8) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[13] = swift_task_alloc(v6);
  v3[14] = swift_task_alloc(v6);
  v3[15] = swift_task_alloc(v6);
  v7 = type metadata accessor for TimeZone(0);
  v3[16] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[17] = v8;
  v3[18] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Calendar(0);
  v3[19] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v3[20] = v10;
  v3[21] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Date(0);
  v3[22] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v3[23] = v12;
  v13 = (*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[24] = swift_task_alloc(v13);
  v3[25] = swift_task_alloc(v13);
  v14 = type metadata accessor for Location(0);
  v3[26] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v3[27] = v15;
  v3[28] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001AED80, 0, 0);
}

uint64_t sub_1001AED80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  os_log_type_t v29;
  _WORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v39;
  void *v40;
  os_log_type_t v41;
  _WORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  os_log_type_t v67;
  _WORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __int128 v91;
  uint64_t v92;
  uint64_t v93;

  v2 = *(_QWORD *)(v0 + 216);
  v1 = *(_QWORD *)(v0 + 224);
  v4 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 208);
  v5 = *(_QWORD *)(v0 + 184);
  v6 = *(_QWORD *)(v0 + 176);
  v7 = *(_QWORD *)(v0 + 144);
  v85 = *(_QWORD *)(v0 + 136);
  v86 = *(_QWORD *)(v0 + 128);
  v87 = *(_QWORD *)(v0 + 192);
  v8 = *(_QWORD *)(v0 + 64);
  v88 = *(_QWORD *)(v0 + 120);
  v90 = *(_QWORD *)(v0 + 72);
  v9 = *(_QWORD *)(v0 + 56);
  v10 = type metadata accessor for SunriseSunsetDetailDataProcessor.ProcessingKey(0);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v12 = v1;
  v11(v1, v9 + *(int *)(v10 + 20), v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v9, v6);
  *(_QWORD *)(v0 + 232) = type metadata accessor for Elevation(0);
  sub_100086DA4((unint64_t *)&qword_100BC3588, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  *(_QWORD *)(v0 + 240) = v13;
  v14 = sub_1000DC11C();
  *(_QWORD *)(v0 + 16) = sub_1000BD938(v14);
  *(_QWORD *)(v0 + 248) = sub_1001B2404();
  v15 = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage);
  *(_QWORD *)(v0 + 24) = v15;
  Location.timeZone.getter(v15);
  static Calendar.currentCalendar(with:)(v7);
  sub_1000F4380(v85);
  Calendar.startOfDay(for:)(v4);
  v16 = sub_1000DC11C();
  *(_QWORD *)(v0 + 32) = sub_1000BD938(v16);
  sub_10009D34C(v88, v17, v18, v90);
  *(_QWORD *)(v0 + 40) = 0;
  v19 = (_QWORD *)(v8 + 96);
  v20 = v8;
  sub_1000DB418((_QWORD *)(v8 + 96), *(_QWORD *)(v8 + 120));
  sub_1004CFBA4(v12, v87);
  if (!v21)
    goto LABEL_4;
  v22 = v21;
  v23 = *(_QWORD *)(v0 + 224);
  v24 = *(_QWORD *)(v0 + 112);
  v25 = *(_QWORD *)(v0 + 72);
  sub_1000DB418(v19, *(_QWORD *)(v20 + 120));
  sub_1004CFA8C(v23);
  if (_s7Weather24LocationCompositionStateOwet_0(v24, 1, v25) != 1)
  {
    sub_10007C77C(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 96), type metadata accessor for SunriseSunsetMonthlyViewModel);
    if (qword_100BC2450 != -1)
      swift_once(&qword_100BC2450, sub_1006F3844);
    v39 = sub_100098720();
    v40 = (void *)sub_1000C34E4(v39, (uint64_t)qword_100CAF0E8);
    v41 = static os_log_type_t.debug.getter();
    if (sub_1000C1990(v41))
    {
      v42 = (_WORD *)sub_10009D340();
      *v42 = 0;
      sub_1000CDEAC((void *)&_mh_execute_header, v43, v44, "SunriseSunsetDetailViewModelFactory gets data from cache");
      sub_1000986F0((uint64_t)v42);
    }
    v45 = *(_QWORD *)(v0 + 120);
    v46 = *(_QWORD *)(v0 + 96);
    v47 = *(_QWORD *)(v0 + 72);
    swift_bridgeObjectRelease();

    *(_QWORD *)(v0 + 40) = v22;
    sub_100021A14(v45, &qword_100BC52F8);
    sub_10007C77C(v46, v45, type metadata accessor for SunriseSunsetMonthlyViewModel);
    _s7Weather24LocationCompositionStateOwst_0(v45, 0, 1, v47);
    v48 = *(_QWORD *)(v0 + 104);
    sub_10003773C(*(_QWORD *)(v0 + 120), v48, &qword_100BC52F8);
    v49 = sub_1000CF764(v48);
    v50 = *(_QWORD *)(v0 + 104);
    if (v49 == 1)
    {
      sub_100021A14(v50, &qword_100BC52F8);
    }
    else
    {
      sub_10007C77C(v50, *(_QWORD *)(v0 + 88), type metadata accessor for SunriseSunsetMonthlyViewModel);
      v51 = *(_QWORD *)(v0 + 40);
      if (v51)
      {
        sub_1000BCF10();
        v83 = *(_QWORD *)(v0 + 192);
        v52 = *(_QWORD *)(v0 + 176);
        v54 = *(_QWORD *)(v0 + 160);
        v53 = *(_QWORD *)(v0 + 168);
        v55 = *(_QWORD *)(v0 + 152);
        v92 = *(_QWORD *)(v0 + 120);
        v56 = *(_QWORD *)(v0 + 88);
        v57 = *(_QWORD *)(v0 + 48);
        swift_bridgeObjectRetain(v51);
        sub_1001B0A48(v58, (void (*)(char *, uint64_t))(v0 + 16), v0 + 24, v0 + 32);
        (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v53, v55);
        swift_bridgeObjectRelease();
        v59 = *(_QWORD *)(v0 + 16);
        v60 = *(_QWORD *)(v0 + 24);
        v61 = sub_1000C654C();
        sub_10007C77C(v56, v57 + *(int *)(v61 + 24), type metadata accessor for SunriseSunsetMonthlyViewModel);
        v62 = *(_QWORD *)(v0 + 32);
        *(_QWORD *)v57 = v59;
        *(_QWORD *)(v57 + 8) = v60;
        *(_QWORD *)(v57 + *(int *)(v61 + 28)) = v62;
        sub_1000BDC2C();
        swift_bridgeObjectRetain(v60);
        sub_100094EDC();
        ((void (*)(uint64_t, uint64_t))v57)(v83, v52);
        v63 = v85;
        v64 = v52;
LABEL_23:
        ((void (*)(uint64_t, uint64_t))v57)(v63, v64);
        (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v88, v87);
        swift_bridgeObjectRelease();
        sub_100021A14(v92, &qword_100BC52F8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1000CFB50();
        v89 = v78;
        v93 = v77;
        swift_bridgeObjectRelease();
        sub_1000B30A8();
        sub_1000992CC();
        sub_1000992D4();
        sub_1000CFFF0();
        sub_1000D0544();
        sub_1000CF75C();
        sub_1000DA8A4();
        sub_1000DC684();
        sub_1000DAE14();
        swift_task_dealloc(v89);
        swift_task_dealloc(v93);
        return sub_100110178(*(uint64_t (**)(void))(v0 + 8));
      }
      sub_1000215BC(*(_QWORD *)(v0 + 88), type metadata accessor for SunriseSunsetMonthlyViewModel);
    }
    if (qword_100BC2450 != -1)
      swift_once(&qword_100BC2450, sub_1006F3844);
    v65 = (void *)sub_1000C34E4(v39, (uint64_t)qword_100CAF0E8);
    v67 = static os_log_type_t.error.getter(v65, v66);
    if (sub_1000FDAD4(v67))
    {
      v68 = (_WORD *)sub_10009D340();
      *v68 = 0;
      sub_10009D9D0((void *)&_mh_execute_header, v69, v70, "Failed to calculate sunrise sunset data");
      sub_1000986F0((uint64_t)v68);
    }
    v71 = *(_QWORD *)(v0 + 248);
    sub_1000BCF10();
    v72 = *(_QWORD *)(v0 + 176);
    v82 = *(_QWORD *)(v0 + 184);
    v84 = *(_QWORD *)(v0 + 192);
    v79 = *(_QWORD *)(v0 + 160);
    v80 = *(_QWORD *)(v0 + 152);
    v81 = *(_QWORD *)(v0 + 168);
    v92 = *(_QWORD *)(v0 + 120);
    v73 = *(_QWORD **)(v0 + 80);
    v74 = *(uint64_t **)(v0 + 48);

    v75 = sub_1000ECEFC((uint64_t)_swiftEmptyArrayStorage);
    sub_1000BD938((uint64_t)_swiftEmptyArrayStorage);
    sub_1000C08B8();
    *v73 = _swiftEmptyArrayStorage;
    v57 = sub_1000ECEFC((uint64_t)_swiftEmptyArrayStorage);
    (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v81, v80);
    *v74 = v75;
    v74[1] = v71;
    v76 = sub_1000C654C();
    sub_10007C77C((uint64_t)v73, (uint64_t)v74 + *(int *)(v76 + 24), type metadata accessor for SunriseSunsetMonthlyViewModel);
    *(uint64_t *)((char *)v74 + *(int *)(v76 + 28)) = v57;
    sub_1000FD9E0(v84, v82);
    v63 = v85;
    v64 = v72;
    goto LABEL_23;
  }
  swift_bridgeObjectRelease();
  sub_10009518C(v26, &qword_100BC52F8);
LABEL_4:
  if (qword_100BC2450 != -1)
    swift_once(&qword_100BC2450, sub_1006F3844);
  v27 = sub_100098720();
  v28 = (void *)sub_1000C34E4(v27, (uint64_t)qword_100CAF0E8);
  v29 = static os_log_type_t.debug.getter();
  if (sub_1000C1990(v29))
  {
    v30 = (_WORD *)sub_10009D340();
    *v30 = 0;
    sub_1000CDEAC((void *)&_mh_execute_header, v31, v32, "SunriseSunsetDetailViewModelFactory calculates data");
    sub_1000986F0((uint64_t)v30);
  }
  v33 = *(_QWORD *)(v0 + 224);
  v34 = *(_QWORD *)(v0 + 120);
  v35 = *(_QWORD *)(v0 + 64);
  v91 = *(_OWORD *)(v0 + 192);

  type metadata accessor for SunriseSunsetDetailDataProcessor.GroupTaskResponse(0);
  v36 = sub_10009DE84();
  *(_QWORD *)(v0 + 256) = v36;
  *(_QWORD *)(v36 + 16) = v35;
  *(_QWORD *)(v36 + 24) = v33;
  *(_OWORD *)(v36 + 32) = v91;
  *(_QWORD *)(v36 + 48) = v0 + 40;
  *(_QWORD *)(v36 + 56) = v34;
  v37 = (_QWORD *)swift_task_alloc(async function pointer to withTaskGroup<A, B>(of:returning:isolation:body:)[1]);
  *(_QWORD *)(v0 + 264) = v37;
  *v37 = v0;
  v37[1] = sub_1001AF464;
  sub_1000EAF00();
  return withTaskGroup<A, B>(of:returning:isolation:body:)();
}

uint64_t sub_1001AF464()
{
  uint64_t v0;

  sub_1000B43D4();
  sub_10009E3B0(*(_QWORD *)(v0 + 264));
  sub_1000B30A8();
  sub_10003BC90();
  return sub_1000BA3F4();
}

uint64_t sub_1001AF49C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  os_log_type_t v24;
  _WORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v3 = *(_QWORD *)(v2 + 104);
  v4 = *(_QWORD *)(v2 + 72);
  sub_1000C20F4(*(_QWORD *)(v2 + 120), a2, &qword_100BC52F8);
  v5 = _s7Weather24LocationCompositionStateOwet_0(v3, 1, v4);
  v6 = *(_QWORD *)(v2 + 104);
  if (v5 == 1)
  {
    sub_100021A14(v6, &qword_100BC52F8);
  }
  else
  {
    sub_10007C77C(v6, *(_QWORD *)(v2 + 88), type metadata accessor for SunriseSunsetMonthlyViewModel);
    v7 = *(_QWORD *)(v2 + 40);
    if (v7)
    {
      sub_1000C20D8();
      v8 = *(_QWORD *)(v2 + 168);
      v43 = *(_QWORD *)(v2 + 176);
      v45 = v9;
      v11 = *(_QWORD *)(v2 + 152);
      v10 = *(_QWORD *)(v2 + 160);
      v50 = *(_QWORD *)(v2 + 120);
      v12 = *(_QWORD *)(v2 + 88);
      v13 = *(_QWORD **)(v2 + 48);
      swift_bridgeObjectRetain(v7);
      sub_1001B0A48(v14, (void (*)(char *, uint64_t))(v2 + 16), v2 + 24, v2 + 32);
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v11);
      swift_bridgeObjectRelease();
      v15 = *(_QWORD *)(v2 + 16);
      v16 = *(_QWORD *)(v2 + 24);
      v17 = sub_1000C654C();
      sub_10007C77C(v12, (uint64_t)v13 + *(int *)(v17 + 24), type metadata accessor for SunriseSunsetMonthlyViewModel);
      v18 = *(_QWORD *)(v2 + 32);
      *v13 = v15;
      v13[1] = v16;
      *(_QWORD *)((char *)v13 + *(int *)(v17 + 28)) = v18;
      sub_1000BDC2C();
      swift_bridgeObjectRetain(v16);
      sub_100094EDC();
      ((void (*)(uint64_t, uint64_t))v10)(v45, v43);
      v19 = v47;
      v20 = v43;
      goto LABEL_11;
    }
    sub_1000215BC(*(_QWORD *)(v2 + 88), type metadata accessor for SunriseSunsetMonthlyViewModel);
  }
  if (qword_100BC2450 != -1)
    swift_once(&qword_100BC2450, sub_1006F3844);
  v21 = sub_100098720();
  v22 = (void *)sub_1000C34E4(v21, (uint64_t)qword_100CAF0E8);
  v24 = static os_log_type_t.error.getter(v22, v23);
  if (sub_1000FDAD4(v24))
  {
    v25 = (_WORD *)sub_10009D340();
    *v25 = 0;
    sub_10009D9D0((void *)&_mh_execute_header, v26, v27, "Failed to calculate sunrise sunset data");
    sub_1000986F0((uint64_t)v25);
  }
  v28 = *(_QWORD *)(v2 + 248);
  sub_1000C20D8();
  v29 = *(_QWORD *)(v2 + 176);
  v44 = *(_QWORD *)(v2 + 184);
  v46 = v30;
  v40 = *(_QWORD *)(v2 + 160);
  v41 = *(_QWORD *)(v2 + 152);
  v42 = *(_QWORD *)(v2 + 168);
  v50 = *(_QWORD *)(v2 + 120);
  v31 = *(_QWORD **)(v2 + 80);
  v32 = *(uint64_t **)(v2 + 48);

  v33 = sub_1000DC11C();
  v34 = sub_1000ECEFC(v33);
  sub_1000BD938((uint64_t)_swiftEmptyArrayStorage);
  sub_1000C08B8();
  *v31 = _swiftEmptyArrayStorage;
  v35 = sub_1000DC11C();
  v10 = sub_1000ECEFC(v35);
  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v42, v41);
  *v32 = v34;
  v32[1] = v28;
  v36 = sub_1000C654C();
  sub_10007C77C((uint64_t)v31, (uint64_t)v32 + *(int *)(v36 + 24), type metadata accessor for SunriseSunsetMonthlyViewModel);
  *(uint64_t *)((char *)v32 + *(int *)(v36 + 28)) = v10;
  sub_1000FD9E0(v46, v44);
  v19 = v47;
  v20 = v29;
LABEL_11:
  ((void (*)(uint64_t, uint64_t))v10)(v19, v20);
  (*(void (**)())(v48 + 8))();
  swift_bridgeObjectRelease();
  sub_100021A14(v50, &qword_100BC52F8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000CFB50();
  v49 = v38;
  v51 = v37;
  swift_bridgeObjectRelease();
  sub_1000B30A8();
  sub_1000992CC();
  sub_1000992D4();
  sub_1000CFFF0();
  sub_1000D0544();
  sub_1000CF75C();
  sub_1000DA8A4();
  sub_1000DC684();
  sub_1000DAE14();
  swift_task_dealloc(v49);
  swift_task_dealloc(v51);
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1001AF7E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v8[7] = a7;
  v8[8] = a8;
  v8[5] = a5;
  v8[6] = a6;
  v8[3] = a3;
  v8[4] = a4;
  v8[2] = a2;
  v9 = type metadata accessor for SunriseSunsetMonthlyViewModel(0);
  v8[9] = v9;
  v8[10] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for SunriseSunsetDetailDataProcessor.GroupTaskResponse(0);
  v8[11] = v10;
  v8[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000BA294(&qword_100BC5320);
  v8[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1000BA294(&qword_100BC5328);
  v8[14] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v8[15] = v13;
  v8[16] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Date(0);
  v8[17] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v8[18] = v15;
  v16 = *(_QWORD *)(v15 + 64);
  v8[19] = v16;
  v8[20] = swift_task_alloc((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Location(0);
  v8[21] = v17;
  v18 = *(_QWORD *)(v17 - 8);
  v8[22] = v18;
  v19 = *(_QWORD *)(v18 + 64);
  v8[23] = v19;
  v8[24] = swift_task_alloc((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1000BA294(&qword_100BC30C8);
  v8[25] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v20 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001AF938, 0, 0);
}

uint64_t sub_1001AF938()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  _QWORD *v20;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t);
  void (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;

  v2 = v0[24];
  v1 = v0[25];
  v29 = v1;
  v3 = v0[22];
  v4 = v0[20];
  v5 = v0[21];
  v22 = v2;
  v6 = v0[18];
  v25 = v0[19];
  v27 = v0[23];
  v7 = v0[17];
  v35 = v0[11];
  v8 = v0[5];
  v34 = v0[6];
  v9 = v0[4];
  v32 = v9;
  v23 = v0[3];
  v36 = (_QWORD *)v0[2];
  v33 = sub_1000B30B0();
  sub_10009D34C(v1, v10, v11, v33);
  v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v31(v2, v9, v5);
  v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v12 = v4;
  v30(v4, v8, v7);
  v13 = *(unsigned __int8 *)(v3 + 80);
  v14 = *(unsigned __int8 *)(v6 + 80);
  v15 = (v13 + 40) & ~v13;
  v16 = (v27 + v14 + v15) & ~v14;
  v17 = v16 + v25;
  v26 = v13 | v14 | 7;
  v28 = v17;
  v18 = (char *)swift_allocObject(&unk_100B5FFE8, v17, v26);
  *((_QWORD *)v18 + 2) = 0;
  *((_QWORD *)v18 + 3) = 0;
  *((_QWORD *)v18 + 4) = v23;
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 32);
  v24(&v18[v15], v22, v5);
  sub_1000C2440((uint64_t)&v18[v16], v12);
  sub_100079FA4();
  sub_1001B011C(v29, (uint64_t)&unk_100BC5338, (uint64_t)v18);
  sub_100021A14(v29, &qword_100BC30C8);
  _s7Weather24LocationCompositionStateOwst_0(v29, 1, 1, v33);
  v31(v22, v32, v5);
  v30(v12, v34, v7);
  v19 = (char *)swift_allocObject(&unk_100B60010, v28, v26);
  *((_QWORD *)v19 + 2) = 0;
  *((_QWORD *)v19 + 3) = 0;
  *((_QWORD *)v19 + 4) = v23;
  v24(&v19[v15], v22, v5);
  sub_1000C2440((uint64_t)&v19[v16], v12);
  sub_100079FA4();
  sub_1001B011C(v29, (uint64_t)&unk_100BC5348, (uint64_t)v19);
  sub_100021A14(v29, &qword_100BC30C8);
  TaskGroup.makeAsyncIterator()(*v36, v35);
  v20 = (_QWORD *)swift_task_alloc(async function pointer to TaskGroup.Iterator.next(isolation:)[1]);
  v0[26] = v20;
  *v20 = v0;
  v20[1] = sub_1001AFBB0;
  sub_10003BC90();
  return TaskGroup.Iterator.next(isolation:)();
}

uint64_t sub_1001AFBB0()
{
  uint64_t v0;

  sub_1000B43D4();
  sub_10009E3B0(*(_QWORD *)(v0 + 208));
  sub_10003BC90();
  return sub_1000BA3F4();
}

uint64_t sub_1001AFBE4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v1 = *(_QWORD *)(v0 + 104);
  sub_100088FC8(v1, 1, *(_QWORD *)(v0 + 88));
  if (v2)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 112));
    sub_1000992CC();
    sub_1000992D4();
    sub_1000CFFF0();
    sub_1000D0544();
    sub_1000B30A8();
    sub_1000CF75C();
    sub_1000DA8A4();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 96);
    sub_10007C77C(v1, v4, type metadata accessor for SunriseSunsetDetailDataProcessor.GroupTaskResponse);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v4);
    v6 = *(uint64_t **)(v0 + 96);
    if (EnumCaseMultiPayload == 1)
    {
      v8 = *(_QWORD *)(v0 + 72);
      v7 = *(_QWORD *)(v0 + 80);
      v9 = *(_QWORD *)(v0 + 64);
      v11 = *(_QWORD *)(v0 + 24);
      v10 = *(_QWORD *)(v0 + 32);
      sub_1000BE9B0((uint64_t)v6, v7);
      sub_100021A14(v9, &qword_100BC52F8);
      sub_100095B78(v7, v9, type metadata accessor for SunriseSunsetMonthlyViewModel);
      _s7Weather24LocationCompositionStateOwst_0(v9, 0, 1, v8);
      sub_1000DB418((_QWORD *)(v11 + 96), *(_QWORD *)(v11 + 120));
      sub_1004CFACC(v10, v7);
      sub_1000215BC(v7, type metadata accessor for SunriseSunsetMonthlyViewModel);
    }
    else
    {
      v12 = *(_QWORD *)(v0 + 32);
      v13 = *(_QWORD *)(v0 + 40);
      v14 = *(_QWORD *)(v0 + 24);
      v15 = *v6;
      **(_QWORD **)(v0 + 56) = *v6;
      swift_bridgeObjectRetain(v15);
      swift_bridgeObjectRelease();
      sub_1000DB418((_QWORD *)(v14 + 96), *(_QWORD *)(v14 + 120));
      sub_1004CFC3C(v12, v13, v15);
      swift_bridgeObjectRelease();
    }
    v16 = (_QWORD *)swift_task_alloc(async function pointer to TaskGroup.Iterator.next(isolation:)[1]);
    *(_QWORD *)(v0 + 208) = v16;
    *v16 = v0;
    v16[1] = sub_1001AFBB0;
    sub_10003BC90();
    return TaskGroup.Iterator.next(isolation:)();
  }
}

uint64_t sub_1001AFDD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v6[4] = a5;
  v6[5] = a6;
  v6[2] = a1;
  v6[3] = a4;
  v7 = type metadata accessor for OSSignpostID(0);
  v6[6] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[7] = v8;
  v6[8] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001AFE3C, 0, 0);
}

uint64_t sub_1001AFE3C()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = v0[8];
  v2 = *(void **)(v0[3] + 136);
  v0[9] = v2;
  v3 = v2;
  v4 = OSSignpostID.init(log:)(v3);
  v5 = static os_signpost_type_t.begin.getter(v4);
  os_signpost(_:dso:log:name:signpostID:)(v5, &_mh_execute_header, v3, "Weather:makeElevationData", 25, 2, v1);
  v6 = (_QWORD *)swift_task_alloc(dword_100BC537C);
  v0[10] = v6;
  *v6 = v0;
  v6[1] = sub_1001AFED4;
  return sub_1001AFFB8(v0[4], v0[5]);
}

uint64_t sub_1001AFED4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  *(_QWORD *)(*(_QWORD *)v1 + 88) = a1;
  swift_task_dealloc(v2);
  sub_10003BC90();
  return sub_1000BA3F4();
}

uint64_t sub_1001AFF24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(v1 + 88);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(v1 + 72);
  v5 = *(_QWORD *)(v1 + 56);
  v6 = *(_QWORD **)(v1 + 16);
  v7 = static os_signpost_type_t.end.getter(a1);
  sub_1000BF0AC(v7, (uint64_t)&_mh_execute_header, v4, (uint64_t)"Weather:makeElevationData", 25);
  sub_100099254(v3, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  *v6 = v2;
  v8 = type metadata accessor for SunriseSunsetDetailDataProcessor.GroupTaskResponse(0);
  swift_storeEnumTagMultiPayload(v6, v8, 0);
  sub_1000992CC();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1001AFFB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return swift_task_switch(sub_1001AFFD4, 0, 0);
}

uint64_t sub_1001AFFD4()
{
  int8x16_t *v0;
  uint64_t v1;
  uint64_t v2;
  int8x16_t **v3;
  int8x16_t v5;

  v1 = v0[1].i64[1];
  sub_100098778();
  type metadata accessor for ElevationData(0);
  sub_100086DA4((unint64_t *)&qword_100BC3588, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  v5 = v0[2];
  v0[1].i64[0] = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage);
  sub_1000BA294(&qword_100BC5380);
  v2 = sub_10009DE84();
  v0[3].i64[0] = v2;
  *(int8x16_t *)(v2 + 16) = vextq_s8(v5, v5, 8uLL);
  *(_QWORD *)(v2 + 32) = v1;
  *(_OWORD *)(v2 + 40) = xmmword_10097F3A0;
  *(_QWORD *)(v2 + 56) = v0 + 1;
  v3 = (int8x16_t **)swift_task_alloc(*((unsigned int *)&async function pointer to withTaskGroup<A, B>(of:returning:isolation:body:)
                                      + 1));
  v0[3].i64[1] = (uint64_t)v3;
  *v3 = v0;
  v3[1] = (int8x16_t *)sub_1001B00DC;
  sub_1000EAF00();
  return withTaskGroup<A, B>(of:returning:isolation:body:)();
}

uint64_t sub_1001B00DC()
{
  uint64_t v0;

  sub_1000B43D4();
  sub_10009E3B0(*(_QWORD *)(v0 + 56));
  sub_1000B30A8();
  sub_10003BC90();
  return sub_1000BA3F4();
}

uint64_t sub_1001B0114()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

double sub_1001B011C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  double result;
  _QWORD v27[3];
  _QWORD v28[4];

  v4 = v3;
  v8 = sub_1000BA294(&qword_100BC30C8);
  __chkstk_darwin(v8);
  v10 = (char *)&v27[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003773C(a1, (uint64_t)v10, &qword_100BC30C8);
  v11 = type metadata accessor for TaskPriority(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11) == 1)
  {
    sub_100021A14((uint64_t)v10, &qword_100BC30C8);
    v13 = 12544;
  }
  else
  {
    v14 = TaskPriority.rawValue.getter(v12);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
    v13 = v14 | 0x3100;
  }
  v15 = *(_QWORD *)(a3 + 16);
  if (v15)
  {
    ObjectType = swift_getObjectType(*(_QWORD *)(a3 + 16));
    swift_unknownObjectRetain(v15);
    v17 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType);
    v19 = v18;
    swift_unknownObjectRelease(v15);
  }
  else
  {
    v17 = 0;
    v19 = 0;
  }
  v20 = *v4;
  v21 = swift_allocObject(&unk_100B60060, 32, 7);
  *(_QWORD *)(v21 + 16) = a2;
  *(_QWORD *)(v21 + 24) = a3;
  v22 = type metadata accessor for SunriseSunsetDetailDataProcessor.GroupTaskResponse(0);
  v23 = (_QWORD *)(v19 | v17);
  if (v19 | v17)
  {
    v28[0] = 0;
    v28[1] = 0;
    v23 = v28;
    v28[2] = v17;
    v28[3] = v19;
  }
  v27[0] = 1;
  v27[1] = v23;
  v27[2] = v20;
  v24 = swift_task_create(v13, v27, v22, &unk_100BC5370, v21);
  *(_QWORD *)&result = swift_release(v24).n128_u64[0];
  return result;
}

double sub_1001B02C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  char v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  double result;
  _QWORD v28[3];
  _QWORD v29[4];

  v4 = v3;
  sub_1000BA294(&qword_100BC30C8);
  sub_10009D98C();
  __chkstk_darwin(v8);
  v10 = (char *)&v28[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003773C(a1, (uint64_t)v10, &qword_100BC30C8);
  v11 = sub_1000B30B0();
  v12 = sub_100088FC8((uint64_t)v10, 1, v11);
  if (v14)
  {
    sub_10009518C(v12, &qword_100BC30C8);
    v16 = 12544;
  }
  else
  {
    v15 = TaskPriority.rawValue.getter(v13);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
    v16 = v15 | 0x3100;
  }
  v17 = *(_QWORD *)(a3 + 16);
  if (v17)
  {
    swift_getObjectType(*(_QWORD *)(a3 + 16));
    swift_unknownObjectRetain(v17);
    v18 = sub_1000DC11C();
    v19 = dispatch thunk of Actor.unownedExecutor.getter(v18);
    v21 = v20;
    swift_unknownObjectRelease(v17);
  }
  else
  {
    v19 = 0;
    v21 = 0;
  }
  v22 = *v4;
  v23 = sub_1000BA418((uint64_t)&unk_100B60038);
  *(_QWORD *)(v23 + 16) = a2;
  *(_QWORD *)(v23 + 24) = a3;
  v24 = sub_1000BA294(&qword_100BC5360);
  v25 = (_QWORD *)(v21 | v19);
  if (v21 | v19)
  {
    v29[0] = 0;
    v29[1] = 0;
    v25 = v29;
    v29[2] = v19;
    v29[3] = v21;
  }
  v28[0] = 1;
  v28[1] = v25;
  v28[2] = v22;
  swift_task_create(v16, v28, v24, &unk_100BC5358, v23);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_1001B0454(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v6[9] = a5;
  v6[10] = a6;
  v6[7] = a1;
  v6[8] = a4;
  v7 = type metadata accessor for OSSignpostID(0);
  v6[11] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[12] = v8;
  v6[13] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001B04B8, 0, 0);
}

uint64_t sub_1001B04B8()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = v0[8];
  v2 = *(void **)(v1 + 136);
  v0[14] = v2;
  v3 = v2;
  v4 = OSSignpostID.init(log:)(v3);
  v5 = static os_signpost_type_t.begin.getter(v4);
  sub_1000BF0AC(v5, (uint64_t)&_mh_execute_header, (uint64_t)v3, (uint64_t)"Weather:makeSunriseSunsetMonthlyViewModel", 41);
  sub_100043CA8(v1 + 16, (uint64_t)(v0 + 2));
  sub_1000DB418(v0 + 2, v0[5]);
  v6 = (_QWORD *)swift_task_alloc(dword_100BF5894);
  v0[15] = v6;
  *v6 = v0;
  v6[1] = sub_1001B0570;
  return sub_1005E7ED4(v0[7], v0[9], v0[10]);
}

uint64_t sub_1001B0570()
{
  uint64_t v0;

  sub_1000B43D4();
  sub_10009E3B0(*(_QWORD *)(v0 + 120));
  sub_10003BC90();
  return sub_1000BA3F4();
}

uint64_t sub_1001B05A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 56);
  v5 = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + 16));
  v6 = static os_signpost_type_t.end.getter(v5);
  sub_1000BF0AC(v6, (uint64_t)&_mh_execute_header, v2, (uint64_t)"Weather:makeSunriseSunsetMonthlyViewModel", 41);
  sub_100099254(v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  v7 = type metadata accessor for SunriseSunsetDetailDataProcessor.GroupTaskResponse(0);
  swift_storeEnumTagMultiPayload(v4, v7, 1);
  sub_1000992CC();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1001B0638(uint64_t a1, void (*a2)(char *, uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  double v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  double v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t, uint64_t);
  void (*v51)(char *, uint64_t, uint64_t);
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v60 = a4;
  v59 = (char *)a3;
  v57 = a2;
  v56 = type metadata accessor for Elevation(0);
  v62 = *(_QWORD *)(v56 - 8);
  __chkstk_darwin(v56);
  v58 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1000BA294(&qword_100BC3370);
  __chkstk_darwin(v6);
  v55 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1000BA294(&qword_100BC5318);
  __chkstk_darwin(v8);
  v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v48 - v12;
  v15 = *(int *)(v14 + 48);
  v16 = v14;
  v61 = v14;
  v17 = (char *)&v48 + v15 - v12;
  v18 = a1 + v15;
  v52 = a1 + v15;
  v53 = v17;
  v19 = type metadata accessor for Date(0);
  v54 = *(_QWORD *)(v19 - 8);
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v54 + 16);
  v20(v13, a1, v19);
  v51 = v20;
  sub_100095B78(v18, (uint64_t)v17, type metadata accessor for ElevationData);
  v21 = (uint64_t)&v10[*(int *)(v16 + 48)];
  v48 = v10;
  v22 = a1;
  v20(v10, a1, v19);
  sub_100095B78(v18, v21, type metadata accessor for ElevationData);
  v50 = *(void (**)(char *, uint64_t, uint64_t))(v62 + 16);
  v23 = (uint64_t)v55;
  v24 = v56;
  v50(v55, v21, v56);
  sub_1000215BC(v21, type metadata accessor for ElevationData);
  v25 = v24;
  _s7Weather24LocationCompositionStateOwst_0(v23, 0, 1, v24);
  sub_10016B54C(v23, (uint64_t)v13);
  v57 = *(void (**)(char *, uint64_t))(v54 + 8);
  v57(v10, v19);
  sub_1000215BC((uint64_t)v53, type metadata accessor for ElevationData);
  v26 = v61;
  v27 = (uint64_t)&v13[*(int *)(v61 + 48)];
  v28 = v22;
  v49 = v22;
  v29 = v51;
  v51(v13, v22, v19);
  v30 = v52;
  sub_100095B78(v52, v27, type metadata accessor for ElevationData);
  v31 = v58;
  v50(v58, v27, v25);
  sub_1000215BC(v27, type metadata accessor for ElevationData);
  v33 = Elevation.degrees.getter(v32);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v31, v25);
  v34 = v48;
  v35 = (uint64_t)&v48[*(int *)(v26 + 48)];
  v36 = v28;
  v37 = v29;
  v29(v48, v36, v19);
  v38 = v30;
  sub_100095B78(v30, v35, type metadata accessor for ElevationData);
  v62 = type metadata accessor for ElevationData(0);
  swift_bridgeObjectRetain(*(_QWORD *)(v35 + *(int *)(v62 + 20) + 8));
  sub_1000215BC(v35, type metadata accessor for ElevationData);
  v39 = sub_10016D764(v33);
  v40 = v57;
  ((void (*)(char *, uint64_t, double))v57)(v34, v19, v39);
  v40(v13, v19);
  v41 = v61;
  v59 = &v13[*(int *)(v61 + 48)];
  v42 = (uint64_t)v59;
  v43 = v49;
  v37(v13, v49, v19);
  sub_100095B78(v38, v42, type metadata accessor for ElevationData);
  v44 = (uint64_t)&v34[*(int *)(v41 + 48)];
  v37(v34, v43, v19);
  sub_100095B78(v38, v44, type metadata accessor for ElevationData);
  v45 = (uint64_t *)(v44 + *(int *)(v62 + 24));
  v46 = *v45;
  v47 = v45[1];
  swift_bridgeObjectRetain(v47);
  sub_1000215BC(v44, type metadata accessor for ElevationData);
  sub_10016D728(v46, v47, v13);
  v40(v13, v19);
  v40(v34, v19);
  sub_1000215BC((uint64_t)v59, type metadata accessor for ElevationData);
}

void sub_1001B0A48(uint64_t a1, void (*a2)(char *, uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  _QWORD v30[5];
  uint64_t v31;

  v31 = a4;
  v28 = a2;
  v29 = a3;
  v6 = sub_1000BA294(&qword_100BC5318);
  __chkstk_darwin(v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v25 - v10;
  sub_1006C17D4(v30, a1);
  v12 = v30[0];
  v13 = v30[3];
  v14 = v30[4];
  v26 = v30[1];
  v27 = (unint64_t)(v30[2] + 64) >> 6;
  swift_bridgeObjectRetain(a1);
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v13 << 6);
      goto LABEL_15;
    }
    v17 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v17 >= v27)
      goto LABEL_23;
    v18 = *(_QWORD *)(v26 + 8 * v17);
    if (!v18)
    {
      v19 = v13 + 2;
      if (v13 + 2 >= v27)
        goto LABEL_23;
      v18 = *(_QWORD *)(v26 + 8 * v19);
      if (v18)
        goto LABEL_13;
      v19 = v13 + 3;
      if (v13 + 3 >= v27)
        goto LABEL_23;
      v18 = *(_QWORD *)(v26 + 8 * v19);
      if (v18)
        goto LABEL_13;
      v19 = v13 + 4;
      if (v13 + 4 >= v27)
        goto LABEL_23;
      v18 = *(_QWORD *)(v26 + 8 * v19);
      if (v18)
      {
LABEL_13:
        v17 = v19;
      }
      else
      {
        v17 = v13 + 5;
        if (v13 + 5 >= v27)
          goto LABEL_23;
        v18 = *(_QWORD *)(v26 + 8 * v17);
        if (!v18)
        {
          v24 = v13 + 6;
          while (v24 < v27)
          {
            v18 = *(_QWORD *)(v26 + 8 * v24++);
            if (v18)
            {
              v17 = v24 - 1;
              goto LABEL_14;
            }
          }
LABEL_23:
          swift_release(v12);
          return;
        }
      }
    }
LABEL_14:
    v14 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v13 = v17;
LABEL_15:
    v20 = *(_QWORD *)(v12 + 48);
    v21 = type metadata accessor for Date(0);
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v11, v20 + *(_QWORD *)(*(_QWORD *)(v21 - 8) + 72) * v16, v21);
    v22 = *(_QWORD *)(v12 + 56);
    v23 = type metadata accessor for ElevationData(0);
    sub_100095B78(v22 + *(_QWORD *)(*(_QWORD *)(v23 - 8) + 72) * v16, (uint64_t)&v11[*(int *)(v6 + 48)], type metadata accessor for ElevationData);
    sub_1001B251C((uint64_t)v11, (uint64_t)v8);
    sub_1001B0638((uint64_t)v8, v28, v29, v31);
    sub_100021A14((uint64_t)v8, &qword_100BC5318);
    if (v4)
      goto LABEL_23;
  }
  __break(1u);
}

uint64_t sub_1001B0CAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;

  v8[30] = a7;
  v8[31] = a8;
  v8[28] = a5;
  v8[29] = a6;
  v8[26] = a3;
  v8[27] = a4;
  v8[25] = a2;
  v9 = *(_QWORD *)(type metadata accessor for ElevationData(0) - 8);
  v8[32] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[33] = swift_task_alloc(v10);
  v8[34] = swift_task_alloc(v10);
  v11 = sub_1000BA294(&qword_100BC5398);
  v8[35] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1000BA294(&qword_100BC53A0);
  v8[36] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v8[37] = v13;
  v8[38] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Location(0);
  v8[39] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v8[40] = v15;
  v16 = *(_QWORD *)(v15 + 64);
  v8[41] = v16;
  v8[42] = swift_task_alloc((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Date(0);
  v8[43] = v17;
  v18 = *(_QWORD *)(v17 - 8);
  v8[44] = v18;
  v19 = *(_QWORD *)(v18 + 64);
  v8[45] = v19;
  v20 = (v19 + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[46] = swift_task_alloc(v20);
  v8[47] = swift_task_alloc(v20);
  v21 = (*(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BC30C8) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[48] = swift_task_alloc(v21);
  v8[49] = swift_task_alloc(v21);
  v8[50] = swift_task_alloc(v21);
  v8[51] = swift_task_alloc(v21);
  return swift_task_switch(sub_1001B0E28, 0, 0);
}

void sub_1001B0E28()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 v24;
  uint64_t v25;
  uint64_t ObjectType;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  _QWORD *v50;
  uint64_t *v51;
  void (*v52)(char *, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  unsigned __int8 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  _QWORD *v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;

  if ((uint64_t)v0[29] < 1)
  {
LABEL_29:
    __break(1u);
  }
  else
  {
    v72 = v0 + 13;
    v73 = v0 + 9;
    v75 = v0 + 17;
    v76 = v0[41] + 7;
    v77 = v0[44];
    v78 = v0[40];
    v1 = 1;
    v74 = v0;
    while (1)
    {
      v2 = v0[30];
      if ((unsigned __int128)((v1 - 1) * (__int128)v2) >> 64 != ((v1 - 1) * v2) >> 63)
      {
        __break(1u);
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
      v3 = v1 * v2;
      if ((unsigned __int128)(v1 * (__int128)v2) >> 64 != (v1 * v2) >> 63)
        goto LABEL_28;
      v93 = (v1 - 1) * v2;
      if (v1 == v0[29])
        break;
      v79 = v1;
      v4 = v0[49];
      v91 = v0[48];
      v5 = v0[47];
      v80 = v5;
      v89 = v0[45];
      v7 = v0[42];
      v6 = v0[43];
      v8 = v0[39];
      v81 = v8;
      v83 = v7;
      v9 = v0[27];
      v10 = v0[28];
      v84 = v0[26];
      v86 = sub_1000B30B0();
      sub_10009D34C(v4, v11, v12, v86);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v77 + 16))(v5, v9, v6);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v78 + 16))(v7, v10, v8);
      v13 = *(unsigned __int8 *)(v77 + 80);
      v14 = (v13 + 40) & ~v13;
      v15 = *(unsigned __int8 *)(v78 + 80);
      v16 = (v89 + v15 + v14) & ~v15;
      v17 = (v16 + v76) & 0xFFFFFFFFFFFFFFF8;
      v18 = (v17 + 15) & 0xFFFFFFFFFFFFFFF8;
      v19 = (_QWORD *)swift_allocObject(&unk_100B60088, v18 + 8, v13 | v15 | 7);
      v19[2] = 0;
      v90 = v19 + 2;
      v19[3] = 0;
      v19[4] = v84;
      (*(void (**)(char *, uint64_t, uint64_t))(v77 + 32))((char *)v19 + v14, v80, v6);
      (*(void (**)(char *, uint64_t, uint64_t))(v78 + 32))((char *)v19 + v16, v83, v81);
      *(_QWORD *)((char *)v19 + v17) = v93;
      v0 = v74;
      *(_QWORD *)((char *)v19 + v18) = v3;
      sub_1000C20F4(v4, v20, &qword_100BC30C8);
      LODWORD(v4) = sub_1000CF764(v91);
      v21 = swift_retain();
      v22 = v74[48];
      if ((_DWORD)v4 == 1)
      {
        sub_100021A14(v74[48], &qword_100BC30C8);
        v23 = 0;
      }
      else
      {
        v24 = TaskPriority.rawValue.getter(v21);
        sub_100099254(v22, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 8));
        v23 = v24;
      }
      v25 = *v90;
      if (*v90)
      {
        ObjectType = swift_getObjectType(*v90);
        swift_unknownObjectRetain(v25);
        v27 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType);
        v29 = v28;
        swift_unknownObjectRelease(v25);
      }
      else
      {
        v27 = 0;
        v29 = 0;
      }
      v30 = *(_QWORD *)v74[25];
      v31 = sub_1000BA418((uint64_t)&unk_100B600B0);
      *(_QWORD *)(v31 + 16) = &unk_100BC53B0;
      *(_QWORD *)(v31 + 24) = v19;
      v32 = sub_1000BA294(&qword_100BC5380);
      v33 = (_QWORD *)(v29 | v27);
      if (v29 | v27)
      {
        v33 = v73;
        *v73 = 0;
        v73[1] = 0;
        v74[11] = v27;
        v74[12] = v29;
      }
      v34 = v74[49];
      v74[17] = 1;
      v74[18] = v33;
      v74[19] = v30;
      v35 = swift_task_create(v23 | 0x3100, v75, v32, &unk_100BC53C0, v31);
      swift_release(v35);
      sub_100021A14(v34, &qword_100BC30C8);
      v1 = v79 + 1;
      if (__OFADD__(v79, 1))
      {
        __break(1u);
        break;
      }
    }
    v36 = v0[51];
    v92 = v0[50];
    v37 = v0[47];
    v38 = v0[45];
    v40 = v0[42];
    v39 = v0[43];
    v82 = v39;
    v41 = v0[39];
    v85 = v41;
    v87 = v40;
    v43 = v0[27];
    v42 = v0[28];
    v88 = v0[26];
    v44 = sub_1000B30B0();
    _s7Weather24LocationCompositionStateOwst_0(v36, 1, 1, v44);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v77 + 16))(v37, v43, v39);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v78 + 16))(v40, v42, v41);
    v45 = *(unsigned __int8 *)(v77 + 80);
    v46 = (v45 + 40) & ~v45;
    v47 = *(unsigned __int8 *)(v78 + 80);
    v48 = (v38 + v47 + v46) & ~v47;
    v49 = (v48 + v76) & 0xFFFFFFFFFFFFFFF8;
    v50 = (_QWORD *)swift_allocObject(&unk_100B600D8, v49 + 8, v45 | v47 | 7);
    v50[2] = 0;
    v51 = v50 + 2;
    v50[3] = 0;
    v50[4] = v88;
    v52 = *(void (**)(char *, uint64_t, uint64_t))(v77 + 32);
    v0[52] = v52;
    v52((char *)v50 + v46, v37, v82);
    (*(void (**)(char *, uint64_t, uint64_t))(v78 + 32))((char *)v50 + v48, v87, v85);
    *(_QWORD *)((char *)v50 + v49) = v93;
    sub_1000C20F4(v36, v53, &qword_100BC30C8);
    LODWORD(v48) = _s7Weather24LocationCompositionStateOwet_0(v92, 1, v44);
    v54 = sub_100079FA4();
    v56 = v0[50];
    if ((_DWORD)v48 == 1)
    {
      sub_10009518C(v54, &qword_100BC30C8);
      v57 = 12544;
    }
    else
    {
      v58 = TaskPriority.rawValue.getter(v55);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 8))(v56, v44);
      v57 = v58 | 0x3100;
    }
    v59 = *v51;
    if (*v51)
    {
      v60 = swift_getObjectType(v59);
      swift_unknownObjectRetain(v59);
      v61 = dispatch thunk of Actor.unownedExecutor.getter(v60);
      v63 = v62;
      swift_unknownObjectRelease(v59);
    }
    else
    {
      v61 = 0;
      v63 = 0;
    }
    v64 = (_QWORD *)v0[25];
    v65 = *v64;
    v66 = sub_1000BA418((uint64_t)&unk_100B60100);
    *(_QWORD *)(v66 + 16) = &unk_100BC53D0;
    *(_QWORD *)(v66 + 24) = v50;
    v67 = sub_1000BA294(&qword_100BC5380);
    if (v63 | v61)
    {
      v68 = v72;
      *v72 = 0;
      v72[1] = 0;
      v0[15] = v61;
      v0[16] = v63;
    }
    else
    {
      v68 = 0;
    }
    v69 = v0[51];
    v0[20] = 1;
    v0[21] = v68;
    v0[22] = v65;
    v70 = swift_task_create(v57, v0 + 20, v67, &unk_100BC53D8, v66);
    swift_release(v70);
    sub_100021A14(v69, &qword_100BC30C8);
    TaskGroup.makeAsyncIterator()(*v64, v67);
    v71 = (_QWORD *)swift_task_alloc(async function pointer to TaskGroup.Iterator.next(isolation:)[1]);
    v0[53] = v71;
    *v71 = v0;
    v71[1] = sub_1001B13E0;
    sub_10003BC90();
    TaskGroup.Iterator.next(isolation:)();
  }
}

uint64_t sub_1001B13E0()
{
  uint64_t v0;

  sub_1000B43D4();
  sub_10009E3B0(*(_QWORD *)(v0 + 424));
  sub_10003BC90();
  return sub_1000BA3F4();
}

void sub_1001B1414()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(unint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v1 = *(_QWORD *)(v0 + 184);
  if (!v1)
  {
    v38 = *(_QWORD *)(v0 + 272);
    v39 = *(_QWORD *)(v0 + 264);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 296) + 8))(*(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 288));
    sub_1000B30A8();
    sub_1000992CC();
    sub_1000992D4();
    sub_1000CFFF0();
    sub_1000D0544();
    sub_1000CF75C();
    sub_1000DA8A4();
    sub_1000DC684();
    sub_1000DAE14();
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    sub_1000B2538();
    __asm { BR              X0 }
  }
  v2 = *(_QWORD *)(v0 + 280);
  v3 = **(_QWORD **)(v0 + 248);
  v4 = sub_100094EDC();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v4);
  *(_QWORD *)(v0 + 192) = v3;
  sub_1005D7E98(v1, sub_1001B24C0, 0);
  swift_bridgeObjectRetain(v1);
  sub_10009EE3C();
  v6 = sub_1000BA294(&qword_100BC53E0);
  sub_100088FC8(v2, 1, v6);
  if (v7)
  {
LABEL_17:
    v35 = *(_QWORD **)(v0 + 248);
    swift_bridgeObjectRelease();
    sub_100163978(*(_QWORD *)(v0 + 16));
    swift_release(*(_QWORD *)(v0 + 64));
    swift_bridgeObjectRelease();
    *v35 = v3;
    swift_bridgeObjectRelease();
    v36 = (_QWORD *)swift_task_alloc(async function pointer to TaskGroup.Iterator.next(isolation:)[1]);
    *(_QWORD *)(v0 + 424) = v36;
    *v36 = v0;
    v36[1] = sub_1001B13E0;
    sub_10003BC90();
    sub_1000B2538();
    TaskGroup.Iterator.next(isolation:)();
  }
  else
  {
    while (1)
    {
      v8 = *(_QWORD *)(v0 + 272);
      v9 = *(_QWORD *)(v0 + 280) + *(int *)(v6 + 48);
      (*(void (**)(_QWORD))(v0 + 416))(*(_QWORD *)(v0 + 368));
      sub_1000BE9B0(v9, v8);
      v10 = *(_QWORD *)(v0 + 192);
      sub_10016C6BC();
      v13 = v12;
      v14 = *(_QWORD *)(v10 + 16);
      v15 = (v11 & 1) == 0;
      v16 = v14 + v15;
      if (__OFADD__(v14, v15))
        break;
      v17 = v11;
      if (*(_QWORD *)(v10 + 24) >= v16)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1000BA294(&qword_100BC53E8);
          _NativeDictionary.copy()();
        }
      }
      else
      {
        sub_100554224(v16, isUniquelyReferenced_nonNull_native & 1);
        sub_10016C6BC();
        if ((v17 & 1) != (v19 & 1))
        {
          sub_1000B2538();
          KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v37);
          return;
        }
        v13 = v18;
      }
      v20 = *(_QWORD *)(v0 + 256);
      if ((v17 & 1) != 0)
      {
        v21 = *(_QWORD *)(v0 + 368);
        v22 = *(_QWORD *)(v0 + 352);
        v23 = *(_QWORD *)(v0 + 264);
        sub_1000BE9B0(*(_QWORD *)(v0 + 272), v23);
        sub_100099254(v21, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
        sub_1001B2AAC(v23, *(_QWORD *)(*(_QWORD *)(v0 + 192) + 56) + *(_QWORD *)(v20 + 72) * v13);
      }
      else
      {
        v24 = *(void (**)(unint64_t, uint64_t, uint64_t))(v0 + 416);
        v25 = *(_QWORD *)(v0 + 368);
        v26 = *(_QWORD *)(v0 + 344);
        v27 = *(_QWORD *)(v0 + 352);
        v28 = *(_QWORD *)(v0 + 272);
        v29 = *(_QWORD **)(v0 + 192);
        v29[(v13 >> 6) + 8] |= 1 << v13;
        v24(v29[6] + *(_QWORD *)(v27 + 72) * v13, v25, v26);
        sub_1000BE9B0(v28, v29[7] + *(_QWORD *)(v20 + 72) * v13);
        v30 = v29[2];
        v31 = __OFADD__(v30, 1);
        v32 = v30 + 1;
        if (v31)
          goto LABEL_20;
        v29[2] = v32;
      }
      v33 = *(_QWORD *)(v0 + 280);
      sub_10009EE3C();
      v6 = sub_1000BA294(&qword_100BC53E0);
      isUniquelyReferenced_nonNull_native = 1;
      sub_100088FC8(v33, 1, v6);
      if (v7)
      {
        v3 = *(_QWORD *)(v0 + 192);
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_20:
    __break(1u);
  }
}

uint64_t sub_1001B1774(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  Swift::String v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t *v47;
  void (*v48)(char *, uint64_t, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  unint64_t v50;
  char v51;
  uint64_t v52;
  _BOOL8 v53;
  Swift::Int v54;
  unint64_t v55;
  char v56;
  unint64_t v57;
  char v58;
  uint64_t v59;
  BOOL v60;
  uint64_t v61;
  __n128 v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t, __n128);
  uint64_t v65;
  char *v66;
  uint64_t result;
  uint64_t v68;
  id v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *object;
  uint64_t countAndFlagsBits;
  char *v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  char *v93;
  double v94;

  v84 = a4;
  v85 = a5;
  v73 = a2;
  v7 = type metadata accessor for ElevationData(0);
  v74 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v90 = (uint64_t)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v68 - v10;
  v12 = type metadata accessor for TimeZone(0);
  v80 = *(_QWORD *)(v12 - 8);
  v81 = v12;
  __chkstk_darwin(v12);
  v79 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Elevation(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Calendar(0);
  v77 = *(_QWORD *)(v18 - 8);
  v78 = v18;
  __chkstk_darwin(v18);
  v76 = (char *)&v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for Date(0);
  v91 = *(_QWORD **)(v20 - 8);
  __chkstk_darwin(v20);
  v93 = (char *)&v68 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v89 = (char *)&v68 - v23;
  v72 = type metadata accessor for OSSignpostID(0);
  v71 = *(_QWORD *)(v72 - 8);
  __chkstk_darwin(v72);
  v25 = (char *)&v68 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = *(id *)(a3 + 136);
  v27 = OSSignpostID.init(log:)(v26);
  v28 = static os_signpost_type_t.begin.getter(v27);
  v69 = v26;
  v70 = v25;
  os_signpost(_:dso:log:name:signpostID:)(v28, &_mh_execute_header, v26, "Weather:makeElevationSegmentData", 32, 2, v25);
  sub_100086DA4((unint64_t *)&qword_100BC3588, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  v92 = v20;
  v82 = v7;
  v29 = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage);
  v30 = *(double *)&v29;
  v83 = a3;
  v75 = (_QWORD *)(a3 + 56);
  while (1)
  {
    v31 = v76;
    static Calendar.current.getter(v29);
    v32 = (uint64_t)v89;
    v86 = a1;
    Date.wc_addMinutes(_:calendar:)(a1, v31);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v31, v78);
    sub_1000DB418(v75, *(_QWORD *)(v83 + 80));
    v33 = sub_10087BDA8(v85, v32, (uint64_t)v17);
    v94 = Elevation.degrees.getter(v33);
    sub_10010FE84();
    v34 = BinaryFloatingPoint.formatted()();
    object = v34._object;
    countAndFlagsBits = v34._countAndFlagsBits;
    v35 = v17;
    v36 = v15;
    v37 = v11;
    v38 = v14;
    v39 = v79;
    Location.timeZone.getter(v34._countAndFlagsBits);
    v40 = Date.formattedHours(timeZone:forAccessibility:)(v39, 0);
    v42 = v41;
    v43 = v39;
    v14 = v38;
    v11 = v37;
    v15 = v36;
    v17 = v35;
    (*(void (**)(char *, uint64_t))(v80 + 8))(v43, v81);
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v11, v35, v14);
    v44 = v82;
    v45 = (uint64_t *)&v11[*(int *)(v82 + 20)];
    v46 = (uint64_t)object;
    *v45 = countAndFlagsBits;
    v45[1] = v46;
    v47 = (uint64_t *)&v11[*(int *)(v44 + 24)];
    *v47 = v40;
    v47[1] = v42;
    v48 = (void (*)(char *, uint64_t, uint64_t))v91[2];
    v48(v93, v32, v92);
    sub_100095B78((uint64_t)v11, v90, type metadata accessor for ElevationData);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)&v30);
    v94 = v30;
    sub_10016C6BC();
    v52 = *(_QWORD *)(*(_QWORD *)&v30 + 16);
    v53 = (v51 & 1) == 0;
    v54 = v52 + v53;
    if (__OFADD__(v52, v53))
      break;
    v55 = v50;
    v56 = v51;
    sub_1000BA294(&qword_100BC53E8);
    if (_NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v54))
    {
      sub_10016C6BC();
      if ((v56 & 1) != (v58 & 1))
        goto LABEL_17;
      v55 = v57;
    }
    v30 = v94;
    if ((v56 & 1) != 0)
    {
      sub_1001B2AAC(v90, *(_QWORD *)(*(_QWORD *)&v94 + 56) + *(_QWORD *)(v74 + 72) * v55);
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)&v94 + 8 * (v55 >> 6) + 64) |= 1 << v55;
      v48((char *)(*(_QWORD *)(*(_QWORD *)&v30 + 48) + v91[9] * v55), (uint64_t)v93, v92);
      sub_10007C77C(v90, *(_QWORD *)(*(_QWORD *)&v30 + 56) + *(_QWORD *)(v74 + 72) * v55, type metadata accessor for ElevationData);
      v59 = *(_QWORD *)(*(_QWORD *)&v30 + 16);
      v60 = __OFADD__(v59, 1);
      v61 = v59 + 1;
      if (v60)
        goto LABEL_16;
      *(_QWORD *)(*(_QWORD *)&v30 + 16) = v61;
      v30 = v94;
    }
    v62 = swift_bridgeObjectRelease();
    v63 = v92;
    v64 = (void (*)(char *, uint64_t, __n128))v91[1];
    v64(v93, v92, v62);
    sub_1000215BC((uint64_t)v11, type metadata accessor for ElevationData);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    v29 = ((uint64_t (*)(char *, uint64_t))v64)(v89, v63);
    if (v73 == v86)
      goto LABEL_14;
    a1 = v86 + 1;
    if (__OFADD__(v86, 1))
    {
      __break(1u);
LABEL_14:
      v65 = static os_signpost_type_t.end.getter(v29);
      v66 = v70;
      os_signpost(_:dso:log:name:signpostID:)(v65, &_mh_execute_header, v69, "Weather:makeElevationSegmentData", 32, 2, v70);
      (*(void (**)(char *, uint64_t))(v71 + 8))(v66, v72);
      return *(_QWORD *)&v30;
    }
  }
  __break(1u);
LABEL_16:
  __break(1u);
LABEL_17:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v92);
  __break(1u);
  return result;
}

uint64_t sub_1001B1D2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[5] = a6;
  v7[6] = a7;
  v7[3] = a4;
  v7[4] = a5;
  v7[2] = a1;
  return swift_task_switch(sub_1001B1D4C, 0, 0);
}

uint64_t sub_1001B1D4C()
{
  uint64_t v0;
  uint64_t result;
  uint64_t *v2;

  result = *(_QWORD *)(v0 + 48);
  if (result > 1440)
  {
    __break(1u);
  }
  else
  {
    v2 = *(uint64_t **)(v0 + 16);
    *v2 = sub_1001B1774(result, 1440, *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
    return sub_1000950D8(*(uint64_t (**)(void))(v0 + 8));
  }
  return result;
}

uint64_t sub_1001B1D90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[6] = a7;
  v8[7] = a8;
  v8[4] = a5;
  v8[5] = a6;
  v8[2] = a1;
  v8[3] = a4;
  return swift_task_switch(sub_1001B1DB0, 0, 0);
}

uint64_t sub_1001B1DB0()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t *v3;

  result = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  if (v2 < result)
  {
    __break(1u);
  }
  else
  {
    v3 = *(uint64_t **)(v0 + 16);
    *v3 = sub_1001B1774(result, v2, *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
    return sub_1000950D8(*(uint64_t (**)(void))(v0 + 8));
  }
  return result;
}

uint64_t sub_1001B1DF0()
{
  uint64_t v0;

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + 16));
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + 56));
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + 96));

  swift_release(*(_QWORD *)(v0 + 144));
  return v0;
}

uint64_t sub_1001B1E2C()
{
  uint64_t v0;

  sub_1001B1DF0();
  return swift_deallocClassInstance(v0, 152, 7);
}

uint64_t type metadata accessor for SunriseSunsetDetailDataProcessor()
{
  return objc_opt_self(_TtC7Weather32SunriseSunsetDetailDataProcessor);
}

uint64_t *sub_1001B1E6C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for Location(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_1001B1F14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = type metadata accessor for Location(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_1001B1F70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t sub_1001B1FEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_1001B2068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_1001B20E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1001B2160(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001B216C);
}

uint64_t sub_1001B216C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_100098778();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
  }
  else
  {
    v7 = sub_1000992C4();
    v8 = a1 + *(int *)(a3 + 20);
  }
  return _s7Weather24LocationCompositionStateOwet_0(v8, a2, v7);
}

uint64_t sub_1001B21CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001B21D8);
}

uint64_t sub_1001B21D8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = sub_100098778();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a1;
  }
  else
  {
    v9 = sub_1000992C4();
    v10 = a1 + *(int *)(a4 + 20);
  }
  return _s7Weather24LocationCompositionStateOwst_0(v10, a2, a2, v9);
}

uint64_t type metadata accessor for SunriseSunsetDetailDataProcessor.ProcessingKey(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC5298, (uint64_t)&nominal type descriptor for SunriseSunsetDetailDataProcessor.ProcessingKey);
}

uint64_t sub_1001B2254(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[2];

  result = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for Location(319);
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 256, 2, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

void sub_1001B22D8()
{
  sub_100086DA4(&qword_100BC52D0, type metadata accessor for SunriseSunsetDetailDataProcessor.ProcessingKey, (uint64_t)&unk_10097F4B0);
}

uint64_t sub_1001B2304(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1001B2FC0;
  return v6(a1);
}

uint64_t sub_1001B2368(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1001B23CC;
  return v6(a1);
}

uint64_t sub_1001B23CC()
{
  uint64_t (**v0)(void);

  sub_10009E3B0(*((_QWORD *)*v0 + 2));
  return sub_1000950D8(v0[1]);
}

unint64_t sub_1001B2404()
{
  unint64_t result;

  result = qword_100BC5300;
  if (!qword_100BC5300)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, &qword_100BC5300);
  }
  return result;
}

uint64_t type metadata accessor for SunriseSunsetDetailDataProcessor.GroupTaskResponse(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC5468, (uint64_t)&nominal type descriptor for SunriseSunsetDetailDataProcessor.GroupTaskResponse);
}

uint64_t sub_1001B2454()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1000ED200();
  v1 = swift_task_alloc(dword_100BC530C);
  v2 = (_QWORD *)sub_1000C00C0(v1);
  *v2 = v0;
  v2[1] = sub_1001B2FBC;
  sub_1000E6E80();
  return sub_1001AF7E0(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1001B24C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(sub_1000BA294(&qword_100BC5318) + 48);
  v5 = a2 + *(int *)(sub_1000BA294(&qword_100BC53E0) + 48);
  return sub_1005D7AA0(a2, v5, a1, v4);
}

uint64_t sub_1001B251C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BC5318);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001B2568()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1000992C4();
  sub_100098778();
  sub_1000C12B8();
  v0 = swift_task_alloc(dword_100BC5334);
  v1 = (_QWORD *)sub_1000C00C0(v0);
  v2 = sub_1000DA450(v1);
  return sub_1001AFDD8(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1001B25E0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1000992C4();
  sub_100098778();
  sub_1000C12B8();
  v0 = swift_task_alloc(dword_100BC5344);
  v1 = (_QWORD *)sub_1000C00C0(v0);
  v2 = sub_1000DA450(v1);
  return sub_1001B0454(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1001B2654()
{
  uint64_t (**v0)(void);

  sub_10009E3B0(*((_QWORD *)*v0 + 2));
  return sub_1000950D8(v0[1]);
}

uint64_t sub_1001B2688()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B26AC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_10004A2C0();
  v0 = sub_1000F41E8();
  v1 = (_QWORD *)sub_1000C00C0(v0);
  v2 = sub_1000C3550(v1);
  return sub_1000C2430(v2, v3, v4, v5);
}

uint64_t sub_1001B26EC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_10004A2C0();
  v0 = sub_1000F41E8();
  v1 = (_QWORD *)sub_1000C00C0(v0);
  v2 = sub_1000C3550(v1);
  return sub_1000C2430(v2, v3, v4, v5);
}

uint64_t sub_1001B272C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1000ED200();
  v1 = swift_task_alloc(dword_100BC538C);
  v2 = (_QWORD *)sub_1000C00C0(v1);
  *v2 = v0;
  v2[1] = sub_1001B2FBC;
  sub_1000E6E80();
  return sub_1001B0CAC(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1001B2798()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1000986AC();
  v3 = *(_QWORD *)(sub_100098778() - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  sub_1000992C4();
  sub_1000DB71C();
  sub_1000B3B14();
  sub_1000FCC38();
  sub_1000C0C88();
  sub_100099254(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  return sub_1000BBBC0(v0, v5, v4);
}

uint64_t sub_1001B2804()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_100098778();
  sub_1000992C4();
  sub_1000CFFCC();
  sub_1000C00CC();
  v1 = swift_task_alloc(dword_100BC53AC);
  v2 = (_QWORD *)sub_1000C00C0(v1);
  *v2 = v0;
  v2[1] = sub_1001B2FBC;
  sub_1000E6E80();
  return sub_1001B1D90(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1001B28A8(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 24) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 32) = v3;
  *v3 = v2;
  v3[1] = sub_1001B2910;
  return v5(v2 + 16);
}

uint64_t sub_1001B2910()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_QWORD **)(*v0 + 24);
  v4 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 32));
  *v2 = *(_QWORD *)(v1 + 16);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_1001B2960()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_10004A2C0();
  v0 = sub_1000F41E8();
  v1 = (_QWORD *)sub_1000C00C0(v0);
  v2 = sub_1000C3550(v1);
  return sub_1000C2430(v2, v3, v4, v5);
}

uint64_t sub_1001B29A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1000986AC();
  v3 = *(_QWORD *)(sub_100098778() - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  sub_1000992C4();
  sub_1000DB71C();
  sub_1000B3B14();
  sub_1000FCC38();
  sub_1000C0C88();
  sub_100099254(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  return sub_1000BBBC0(v0, v5, v4);
}

uint64_t sub_1001B2A04(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v7 = *(_QWORD *)(sub_100098778() - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  sub_1000992C4();
  sub_1000CFFCC();
  sub_1000C00CC();
  v11 = *(_QWORD *)(v1 + v10);
  v12 = swift_task_alloc(dword_100BC53CC);
  v13 = (_QWORD *)sub_1000C00C0(v12);
  *v13 = v2;
  v13[1] = sub_1001B2FBC;
  return sub_1001B1D2C(a1, v9, v3, v4, v8, v5, v11);
}

uint64_t sub_1001B2AAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ElevationData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t *sub_1001B2AF0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t, __n128);
  __n128 v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
    v8 = *a2;
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      v9 = *(int *)(type metadata accessor for SunriseSunsetMonthlyViewModel(0) + 20);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = type metadata accessor for WeatherDescription(0);
      v13 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v12 - 8) + 16);
      v14 = swift_bridgeObjectRetain(v8);
      v13(v10, v11, v12, v14);
      v15 = a1;
      v16 = a3;
      v17 = 1;
    }
    else
    {
      swift_bridgeObjectRetain(v8);
      v15 = a1;
      v16 = a3;
      v17 = 0;
    }
    swift_storeEnumTagMultiPayload(v15, v16, v17);
  }
  return a1;
}

void sub_1001B2BE0(uint64_t a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;
  uint64_t v4;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1);
  swift_bridgeObjectRelease();
  if (EnumCaseMultiPayload == 1)
  {
    v3 = a1 + *(int *)(type metadata accessor for SunriseSunsetMonthlyViewModel(0) + 20);
    v4 = type metadata accessor for WeatherDescription(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  }
}

uint64_t *sub_1001B2C48(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t, __n128);
  __n128 v13;
  uint64_t v14;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
  v7 = *a2;
  *a1 = *a2;
  if (EnumCaseMultiPayload == 1)
  {
    v8 = *(int *)(type metadata accessor for SunriseSunsetMonthlyViewModel(0) + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for WeatherDescription(0);
    v12 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v11 - 8) + 16);
    v13 = swift_bridgeObjectRetain(v7);
    v12(v9, v10, v11, v13);
    v14 = 1;
  }
  else
  {
    swift_bridgeObjectRetain(v7);
    v14 = 0;
  }
  swift_storeEnumTagMultiPayload(a1, a3, v14);
  return a1;
}

uint64_t *sub_1001B2D04(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t, __n128);
  __n128 v13;
  uint64_t v14;

  if (a1 != a2)
  {
    sub_1000215BC((uint64_t)a1, type metadata accessor for SunriseSunsetDetailDataProcessor.GroupTaskResponse);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
    v7 = *a2;
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      v8 = *(int *)(type metadata accessor for SunriseSunsetMonthlyViewModel(0) + 20);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = type metadata accessor for WeatherDescription(0);
      v12 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v11 - 8) + 16);
      v13 = swift_bridgeObjectRetain(v7);
      v12(v9, v10, v11, v13);
      v14 = 1;
    }
    else
    {
      swift_bridgeObjectRetain(v7);
      v14 = 0;
    }
    swift_storeEnumTagMultiPayload(a1, a3, v14);
  }
  return a1;
}

_QWORD *sub_1001B2DD8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  if (swift_getEnumCaseMultiPayload(a2) == 1)
  {
    *a1 = *a2;
    v6 = *(int *)(type metadata accessor for SunriseSunsetMonthlyViewModel(0) + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = type metadata accessor for WeatherDescription(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_1001B2E80(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_1000215BC((uint64_t)a1, type metadata accessor for SunriseSunsetDetailDataProcessor.GroupTaskResponse);
    if (swift_getEnumCaseMultiPayload(a2) == 1)
    {
      *a1 = *a2;
      v6 = *(int *)(type metadata accessor for SunriseSunsetMonthlyViewModel(0) + 20);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = type metadata accessor for WeatherDescription(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1001B2F48(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  result = type metadata accessor for SunriseSunsetMonthlyViewModel(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v4);
    return 0;
  }
  return result;
}

_QWORD *sub_1001B2FD0(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for TemperatureScaleConfiguration(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
    *(_QWORD *)((char *)a1 + v8[5]) = *(_QWORD *)((char *)a2 + v8[5]);
    *(_QWORD *)((char *)a1 + v8[6]) = *(_QWORD *)((char *)a2 + v8[6]);
    *(_QWORD *)((char *)a1 + v8[7]) = *(_QWORD *)((char *)a2 + v8[7]);
    v9 = v8[8];
    v10 = (_QWORD *)((char *)a1 + v9);
    v11 = (_QWORD *)((char *)a2 + v9);
    v13 = *v11;
    v12 = v11[1];
    *v10 = v13;
    v10[1] = v12;
    *((_BYTE *)a1 + v8[9]) = *((_BYTE *)a2 + v8[9]);
    v14 = a3[6];
    *(_OWORD *)((char *)a1 + a3[5]) = *(_OWORD *)((char *)a2 + a3[5]);
    *(_QWORD *)((char *)a1 + v14) = *(_QWORD *)((char *)a2 + v14);
    *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain(v12);
  }
  return a1;
}

double sub_1001B30C0(uint64_t a1)
{
  uint64_t v2;
  double result;

  v2 = type metadata accessor for TemperatureScaleConfiguration(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_1001B310C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = type metadata accessor for TemperatureScaleConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
  *(_QWORD *)(a1 + v7[5]) = *(_QWORD *)(a2 + v7[5]);
  *(_QWORD *)(a1 + v7[6]) = *(_QWORD *)(a2 + v7[6]);
  *(_QWORD *)(a1 + v7[7]) = *(_QWORD *)(a2 + v7[7]);
  v8 = v7[8];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  *(_BYTE *)(a1 + v7[9]) = *(_BYTE *)(a2 + v7[9]);
  v13 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain(v11);
  return a1;
}

uint64_t sub_1001B31D0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;

  v6 = type metadata accessor for TemperatureScaleConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
  *(_QWORD *)(a1 + v7[5]) = *(_QWORD *)(a2 + v7[5]);
  *(_QWORD *)(a1 + v7[6]) = *(_QWORD *)(a2 + v7[6]);
  *(_QWORD *)(a1 + v7[7]) = *(_QWORD *)(a2 + v7[7]);
  v8 = v7[8];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *v9 = *v10;
  v11 = v10[1];
  v9[1] = v11;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v7[9]) = *(_BYTE *)(a2 + v7[9]);
  v12 = a3[5];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  *v13 = *v14;
  v13[1] = v14[1];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1001B32C4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;

  v6 = type metadata accessor for TemperatureScaleConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
  *(_QWORD *)(a1 + v7[5]) = *(_QWORD *)(a2 + v7[5]);
  *(_QWORD *)(a1 + v7[6]) = *(_QWORD *)(a2 + v7[6]);
  *(_QWORD *)(a1 + v7[7]) = *(_QWORD *)(a2 + v7[7]);
  *(_OWORD *)(a1 + v7[8]) = *(_OWORD *)(a2 + v7[8]);
  *(_BYTE *)(a1 + v7[9]) = *(_BYTE *)(a2 + v7[9]);
  v8 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1001B3378(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = type metadata accessor for TemperatureScaleConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
  *(_QWORD *)(a1 + v7[5]) = *(_QWORD *)(a2 + v7[5]);
  *(_QWORD *)(a1 + v7[6]) = *(_QWORD *)(a2 + v7[6]);
  *(_QWORD *)(a1 + v7[7]) = *(_QWORD *)(a2 + v7[7]);
  v8 = v7[8];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v7[9]) = *(_BYTE *)(a2 + v7[9]);
  v13 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1001B3440(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001B344C);
}

uint64_t sub_1001B344C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1000BA424();
  return _s7Weather24LocationCompositionStateOwet_0(v1, v0, v2);
}

uint64_t sub_1001B3474(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001B3480);
}

uint64_t sub_1001B3480()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1000BA424();
  return _s7Weather24LocationCompositionStateOwst_0(v1, v0, v0, v2);
}

uint64_t type metadata accessor for FeelsLikeComponentVarianceBarView(uint64_t a1)
{
  uint64_t result;

  result = qword_100BC54F8;
  if (!qword_100BC54F8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FeelsLikeComponentVarianceBarView);
  return result;
}

uint64_t sub_1001B34E4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  result = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_10097F558;
    v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[3] = (char *)&value witness table for Builtin.Int64 + 64;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1001B3564(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AA9A60, 1);
}

double sub_1001B3574@<D0>(uint64_t a1@<X8>)
{
  double result;
  __int128 v3;
  uint64_t v4;
  _OWORD v5[2];
  char v6;

  Path.init(_:)(v5, sub_1001B3744, &v4);
  result = *(double *)v5;
  v3 = v5[1];
  *(_OWORD *)a1 = v5[0];
  *(_OWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 32) = v6;
  return result;
}

void sub_1001B35C4(uint64_t a1, uint64_t a2)
{
  int *v3;
  double *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  _QWORD v11[6];

  v3 = (int *)type metadata accessor for FeelsLikeComponentVarianceBarView(0);
  v4 = (double *)(a2 + v3[5]);
  v5 = v4[1];
  v6 = *(double *)(a2 + v3[7]);
  Path.move(to:)(0.0, (v5 - v6) * 0.5);
  v7 = *(double *)(a2 + v3[6]);
  v8 = v5 * 0.5;
  v9 = v7 - (v5 * 0.5 + *v4);
  Path.addLine(to:)(v9, (v5 - v6) * 0.5);
  Path.addCurve(to:control1:control2:)(v8 * 1.5 + v9, 0.0, v8 * 0.6 + v9, (v5 - v6) * 0.5, v8 * 0.6 + v9, 0.0);
  v10 = v7 - v5 * 0.5;
  Path.addLine(to:)(v10, 0.0);
  v11[0] = 0x3FF0000000000000;
  v11[1] = 0;
  v11[2] = 0;
  v11[3] = 0x3FF0000000000000;
  v11[4] = 0;
  v11[5] = 0;
  Path.addArc(center:radius:startAngle:endAngle:clockwise:transform:)(0, v11, v10, v8, v8, 4.71238898, 1.57079633);
  Path.addLine(to:)(v5 * 0.5 * 1.5 + v9, v5);
  Path.addCurve(to:control1:control2:)(v9, (v5 + v6) * 0.5, v8 * 0.6 + v9, v5, v8 * 0.6 + v9, (v5 + v6) * 0.5);
  Path.addLine(to:)(0.0, (v5 + v6) * 0.5);
  Path.addLine(to:)(0.0, (v5 - v6) * 0.5);
}

void sub_1001B3744(uint64_t a1)
{
  uint64_t v1;

  sub_1001B35C4(a1, *(_QWORD *)(v1 + 16));
}

unint64_t sub_1001B3750()
{
  unint64_t result;

  result = qword_100BC5538;
  if (!qword_100BC5538)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Path, &type metadata for Path);
    atomic_store(result, (unint64_t *)&qword_100BC5538);
  }
  return result;
}

char *sub_1001B378C(char *a1, char *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t, __n128);
  __n128 v26;
  uint64_t v27;
  uint64_t v28;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for TimeZone(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = (int *)type metadata accessor for CalendarViewModel(0);
    v9 = v8[5];
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = type metadata accessor for Date(0);
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    v13(v10, v11, v12);
    v13(&a1[v8[6]], &a2[v8[6]], v12);
    v13(&a1[v8[7]], &a2[v8[7]], v12);
    v14 = v8[8];
    v15 = &a1[v14];
    v16 = &a2[v14];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&a2[v14], 1, v12))
    {
      v17 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v13(v15, v16, v12);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v12);
    }
    v19 = v8[9];
    v20 = *(_QWORD *)&a2[v19];
    *(_QWORD *)&a1[v19] = v20;
    v21 = v8[10];
    v22 = &a1[v21];
    v23 = &a2[v21];
    v24 = type metadata accessor for MoonPhase.Hemisphere(0);
    v25 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v24 - 8) + 16);
    v26 = swift_bridgeObjectRetain(v20);
    v25(v22, v23, v24, v26);
    v27 = *(int *)(a3 + 20);
    v28 = *(_QWORD *)&a2[v27];
    *(_QWORD *)&a1[v27] = v28;
    swift_bridgeObjectRetain(v28);
  }
  return a1;
}

double sub_1001B3938(uint64_t a1)
{
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;

  v2 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  v3 = (int *)type metadata accessor for CalendarViewModel(0);
  v4 = a1 + v3[5];
  v5 = type metadata accessor for Date(0);
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(a1 + v3[6], v5);
  v6(a1 + v3[7], v5);
  v7 = a1 + v3[8];
  if (!_s7Weather24LocationCompositionStateOwet_0(v7, 1, v5))
    v6(v7, v5);
  swift_bridgeObjectRelease();
  v8 = a1 + v3[10];
  v9 = type metadata accessor for MoonPhase.Hemisphere(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_1001B3A38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  void (*v12)(void *, const void *, uint64_t);
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v24;
  uint64_t v25;
  uint64_t v26;

  v6 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = (int *)type metadata accessor for CalendarViewModel(0);
  v8 = v7[5];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = type metadata accessor for Date(0);
  v12 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  v12(v9, v10, v11);
  v12((void *)(a1 + v7[6]), (const void *)(a2 + v7[6]), v11);
  v12((void *)(a1 + v7[7]), (const void *)(a2 + v7[7]), v11);
  v13 = v7[8];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  if (_s7Weather24LocationCompositionStateOwet_0(a2 + v13, 1, v11))
  {
    v16 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v12(v14, v15, v11);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v11);
  }
  v17 = v7[9];
  v18 = *(_QWORD *)(a2 + v17);
  *(_QWORD *)(a1 + v17) = v18;
  v19 = v7[10];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = type metadata accessor for MoonPhase.Hemisphere(0);
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v22 - 8) + 16);
  v24 = swift_bridgeObjectRetain(v18);
  v23(v20, v21, v22, v24);
  v25 = *(int *)(a3 + 20);
  v26 = *(_QWORD *)(a2 + v25);
  *(_QWORD *)(a1 + v25) = v26;
  swift_bridgeObjectRetain(v26);
  return a1;
}

uint64_t sub_1001B3BB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(void *, const void *, uint64_t);
  uint64_t v14;
  void *v15;
  const void *v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = (int *)type metadata accessor for CalendarViewModel(0);
  v8 = v7[5];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = type metadata accessor for Date(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(void (**)(void *, const void *, uint64_t))(v12 + 24);
  v13(v9, v10, v11);
  v13((void *)(a1 + v7[6]), (const void *)(a2 + v7[6]), v11);
  v13((void *)(a1 + v7[7]), (const void *)(a2 + v7[7]), v11);
  v14 = v7[8];
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  v17 = _s7Weather24LocationCompositionStateOwet_0(a1 + v14, 1, v11);
  v18 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v11);
  if (!v17)
  {
    if (!v18)
    {
      v13(v15, v16, v11);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v15, v11);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    v19 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v15, v16, v11);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v11);
LABEL_7:
  v20 = v7[9];
  v21 = *(_QWORD *)(a2 + v20);
  *(_QWORD *)(a1 + v20) = v21;
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRelease();
  v22 = v7[10];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = type metadata accessor for MoonPhase.Hemisphere(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 24))(v23, v24, v25);
  v26 = *(int *)(a3 + 20);
  v27 = *(_QWORD *)(a2 + v26);
  *(_QWORD *)(a1 + v26) = v27;
  swift_bridgeObjectRetain(v27);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1001B3D94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  void (*v12)(void *, const void *, uint64_t);
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = (int *)type metadata accessor for CalendarViewModel(0);
  v8 = v7[5];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = type metadata accessor for Date(0);
  v12 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32);
  v12(v9, v10, v11);
  v12((void *)(a1 + v7[6]), (const void *)(a2 + v7[6]), v11);
  v12((void *)(a1 + v7[7]), (const void *)(a2 + v7[7]), v11);
  v13 = v7[8];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  if (_s7Weather24LocationCompositionStateOwet_0(a2 + v13, 1, v11))
  {
    v16 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v12(v14, v15, v11);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v11);
  }
  *(_QWORD *)(a1 + v7[9]) = *(_QWORD *)(a2 + v7[9]);
  v17 = v7[10];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = type metadata accessor for MoonPhase.Hemisphere(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1001B3F04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(void *, const void *, uint64_t);
  uint64_t v14;
  void *v15;
  const void *v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = (int *)type metadata accessor for CalendarViewModel(0);
  v8 = v7[5];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = type metadata accessor for Date(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(void (**)(void *, const void *, uint64_t))(v12 + 40);
  v13(v9, v10, v11);
  v13((void *)(a1 + v7[6]), (const void *)(a2 + v7[6]), v11);
  v13((void *)(a1 + v7[7]), (const void *)(a2 + v7[7]), v11);
  v14 = v7[8];
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  v17 = _s7Weather24LocationCompositionStateOwet_0(a1 + v14, 1, v11);
  v18 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v11);
  if (!v17)
  {
    if (!v18)
    {
      v13(v15, v16, v11);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v15, v11);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    v19 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v15, v16, v11);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v11);
LABEL_7:
  *(_QWORD *)(a1 + v7[9]) = *(_QWORD *)(a2 + v7[9]);
  swift_bridgeObjectRelease();
  v20 = v7[10];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = type metadata accessor for MoonPhase.Hemisphere(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 40))(v21, v22, v23);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1001B40D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001B40DC);
}

uint64_t sub_1001B40DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = type metadata accessor for CalendarViewModel(0);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_1001B4154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001B4160);
}

uint64_t sub_1001B4160(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = type metadata accessor for CalendarViewModel(0);
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for MoonCalendarViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_100BC5598;
  if (!qword_100BC5598)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MoonCalendarViewModel);
  return result;
}

uint64_t sub_1001B420C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for CalendarViewModel(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

void sub_1001B4280(uint64_t a1, uint64_t a2)
{
  char v2;

  sub_10019F894(a1, a2);
  if ((v2 & 1) != 0)
  {
    type metadata accessor for MoonCalendarViewModel(0);
    sub_100947318();
  }
}

uint64_t sub_1001B42D0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage);
  a1[3] = sub_1000BA294(&qword_100BC55D8);
  a1[4] = sub_1001B43DC();
  sub_10005F164(a1);
  v3 = type metadata accessor for MoonCalendarViewModel(0);
  return ShortDescription.init(name:_:)(0xD000000000000015, 0x800000010097F5A0, v2, v3);
}

uint64_t sub_1001B436C@<X0>(_QWORD *a1@<X8>)
{
  return sub_1001B42D0(a1);
}

uint64_t sub_1001B4380(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1001B4420(&qword_100BC55E8, (uint64_t)&unk_10097F600);
  return ShortDescribable.description.getter(a1, v2);
}

uint64_t sub_1001B43B8()
{
  return sub_1001B4420(&qword_100BC55D0, (uint64_t)&unk_10097F5D8);
}

unint64_t sub_1001B43DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC55E0;
  if (!qword_100BC55E0)
  {
    v1 = sub_100075EB0(&qword_100BC55D8);
    result = swift_getWitnessTable(&protocol conformance descriptor for ShortDescription<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100BC55E0);
  }
  return result;
}

uint64_t sub_1001B4420(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for MoonCalendarViewModel(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001B4460@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  char v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[7];
  int v23;
  __int16 v24;
  char v25;
  char v26;
  uint64_t v27;

  v9 = a1;
  v11 = sub_1000BA434(a1, a2, a3, a4, a5, a6, a7, a8, v20, *(int *)v22, *(__int16 *)&v22[4], v22[6], 0);
  result = sub_1000BA434(v11, v12, v13, v14, v15, v16, v17, v18, v21, v23, v24, v25, 0);
  *(_BYTE *)a9 = v9;
  *(_BYTE *)(a9 + 8) = v26;
  *(_QWORD *)(a9 + 16) = v27;
  *(_BYTE *)(a9 + 24) = v26;
  *(_QWORD *)(a9 + 32) = v27;
  return result;
}

uint64_t destroy for LazyUntilDismissedViewModifier(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + 16));
  return swift_release(*(_QWORD *)(a1 + 32));
}

uint64_t initializeWithCopy for LazyUntilDismissedViewModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v4;
  swift_retain(v3);
  swift_retain(v4);
  return a1;
}

uint64_t assignWithCopy for LazyUntilDismissedViewModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v5;
  swift_retain(v5);
  swift_release(v4);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v7;
  swift_retain(v7);
  swift_release(v6);
  return a1;
}

uint64_t assignWithTake for LazyUntilDismissedViewModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release(v4);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release(v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for LazyUntilDismissedViewModifier(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 40))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 16);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LazyUntilDismissedViewModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for LazyUntilDismissedViewModifier()
{
  return &type metadata for LazyUntilDismissedViewModifier;
}

uint64_t sub_1001B46E0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AA9ACC, 1);
}

uint64_t sub_1001B46F0()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v3;

  if ((*v0 & 1) == 0)
    return 1;
  v1 = sub_1000BA294(&qword_100BC5608);
  State.wrappedValue.getter(&v3, v1);
  if ((v3 & 1) != 0)
    return 1;
  State.wrappedValue.getter(&v3, v1);
  return v3;
}

void sub_1001B4774(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  void (**v20)(uint64_t);
  __int128 v21;
  __int128 v22;

  v3 = v2;
  v6 = type metadata accessor for NSNotificationCenter.Publisher(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1000BA294(&qword_100BC55F0);
  __chkstk_darwin(v10);
  v12 = (_QWORD *)((char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v12 = static Alignment.center.getter(v13);
  v12[1] = v14;
  sub_1000BA294(&qword_100BC55F8);
  sub_1001B4940(v3, a1);
  v15 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  NSNotificationCenter.publisher(for:object:)(UIPresentationControllerDismissalTransitionWillBeginNotification, 0);

  v16 = *(_OWORD *)(v3 + 8);
  v21 = *(_OWORD *)(v3 + 24);
  v22 = v16;
  v17 = swift_allocObject(&unk_100B60260, 56, 7);
  v18 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(v17 + 16) = *(_OWORD *)v3;
  *(_OWORD *)(v17 + 32) = v18;
  *(_QWORD *)(v17 + 48) = *(_QWORD *)(v3 + 32);
  sub_10007EBC8((uint64_t)v12, a2, &qword_100BC55F0);
  v19 = sub_1000BA294(&qword_100BC5600);
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(a2 + *(int *)(v19 + 52), v9, v6);
  v20 = (void (**)(uint64_t))(a2 + *(int *)(v19 + 56));
  *v20 = sub_1001B4F44;
  v20[1] = (void (*)(uint64_t))v17;
  sub_1001B4F4C((uint64_t)&v22);
  sub_1001B4F4C((uint64_t)&v21);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_100021AA4((uint64_t)v12, &qword_100BC55F0);
}

void sub_1001B4940(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t (**v15)();
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  __int128 v22;
  __int128 v23;

  v4 = sub_1000BA294(&qword_100BC5610);
  __chkstk_darwin(v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000BA294(&qword_100BC5618);
  __chkstk_darwin(v7);
  v9 = (_QWORD *)((char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_1001B46F0();
  if ((v10 & 1) != 0)
  {
    v11 = *(_OWORD *)(a1 + 8);
    v22 = *(_OWORD *)(a1 + 24);
    v23 = v11;
    v12 = swift_allocObject(&unk_100B60288, 56, 7);
    v13 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v12 + 16) = *(_OWORD *)a1;
    *(_OWORD *)(v12 + 32) = v13;
    *(_QWORD *)(v12 + 48) = *(_QWORD *)(a1 + 32);
    v14 = sub_1000BA294(&qword_100BC5640);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v6, a2, v14);
    v15 = (uint64_t (**)())&v6[*(int *)(v4 + 36)];
    *v15 = sub_1001B4FFC;
    v15[1] = (uint64_t (*)())v12;
    v15[2] = 0;
    v15[3] = 0;
    sub_10007EBC8((uint64_t)v6, (uint64_t)v9, &qword_100BC5610);
    swift_storeEnumTagMultiPayload(v9, v7, 1);
    sub_1001B4F4C((uint64_t)&v23);
    sub_1001B4F4C((uint64_t)&v22);
    v16 = sub_1000BA294(&qword_100BC5620);
    v17 = sub_100157200();
    v18 = sub_1001B4F74();
    _ConditionalContent<>.init(storage:)(v9, v16, v4, v17, v18);
    sub_100021AA4((uint64_t)v6, &qword_100BC5610);
  }
  else
  {
    *v9 = static Color.clear.getter(v10);
    v9[1] = sub_1001B4B54;
    v9[3] = 0;
    v9[4] = 0;
    v9[2] = 0;
    swift_storeEnumTagMultiPayload(v9, v7, 0);
    v19 = sub_1000BA294(&qword_100BC5620);
    v20 = sub_100157200();
    v21 = sub_1001B4F74();
    _ConditionalContent<>.init(storage:)(v9, v19, v4, v20, v21);
  }
}

void sub_1001B4B54()
{
  uint64_t v0;
  uint64_t v1;
  os_log_type_t v2;
  uint8_t *v3;
  NSObject *oslog;

  if (qword_100BC23F8 != -1)
    swift_once(&qword_100BC23F8, sub_1006F3784);
  v0 = type metadata accessor for Logger(0);
  v1 = sub_1000AECD4(v0, (uint64_t)qword_100CAEFE0);
  oslog = Logger.logObject.getter(v1);
  v2 = static os_log_type_t.default.getter(oslog);
  if (os_log_type_enabled(oslog, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v2, "Lazy: Hiding under presentation", v3, 2u);
    swift_slowDealloc(v3, -1, -1);
  }

}

uint64_t sub_1001B4C20(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  char v9;
  __int128 v10;

  if (qword_100BC23F8 != -1)
    swift_once(&qword_100BC23F8, sub_1006F3784);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_1000AECD4(v2, (uint64_t)qword_100CAEFE0);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Lazy: Appeared", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v10 = *(_OWORD *)(a1 + 8);
  v9 = 1;
  v7 = sub_1000BA294(&qword_100BC5608);
  State.wrappedValue.setter(&v9, v7);
  v10 = *(_OWORD *)(a1 + 24);
  v9 = 0;
  return State.wrappedValue.setter(&v9, v7);
}

void sub_1001B4D44(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  NSObject *oslog;
  char v14;
  __int128 v15;

  if ((sub_1001B46F0() & 1) != 0)
  {
    if (qword_100BC23F8 != -1)
      swift_once(&qword_100BC23F8, sub_1006F3784);
    v3 = type metadata accessor for Logger(0);
    v4 = sub_1000AECD4(v3, (uint64_t)qword_100CAEFE0);
    oslog = Logger.logObject.getter(v4);
    v5 = static os_log_type_t.default.getter(oslog);
    if (os_log_type_enabled(oslog, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v5, "Lazy: Will dismiss presentation. Already loading.", v6, 2u);
      swift_slowDealloc(v6, -1, -1);
    }

  }
  else
  {
    if (qword_100BC23F8 != -1)
      swift_once(&qword_100BC23F8, sub_1006F3784);
    v7 = type metadata accessor for Logger(0);
    v8 = sub_1000AECD4(v7, (uint64_t)qword_100CAEFE0);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.default.getter(v9);
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Lazy: Will dismiss presentation. Starting to load.", v11, 2u);
      swift_slowDealloc(v11, -1, -1);
    }

    v15 = *(_OWORD *)(a2 + 24);
    v14 = 1;
    v12 = sub_1000BA294(&qword_100BC5608);
    State.wrappedValue.setter(&v14, v12);
  }
}

void sub_1001B4F08(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1001B4774(a1, a2);
}

void sub_1001B4F44(uint64_t a1)
{
  uint64_t v1;

  sub_1001B4D44(a1, v1 + 16);
}

uint64_t sub_1001B4F4C(uint64_t a1)
{
  swift_retain(*(_QWORD *)(a1 + 8));
  return a1;
}

unint64_t sub_1001B4F74()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC5630;
  if (!qword_100BC5630)
  {
    v1 = sub_100075EB0(&qword_100BC5610);
    sub_10003D310(&qword_100BC5638, &qword_100BC5640, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BC5630);
  }
  return result;
}

uint64_t sub_1001B4FFC()
{
  uint64_t v0;

  return sub_1001B4C20(v0 + 16);
}

void sub_1001B5004()
{
  sub_10003D310(&qword_100BC5648, &qword_100BC5600, (uint64_t)&protocol conformance descriptor for SubscriptionView<A, B>);
}

uint64_t initializeBufferWithCopyOfBuffer for ListMenuViewModel(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = v3;
  return a1;
}

void destroy for ConfiguredUnitState(id *a1)
{

}

uint64_t assignWithCopy for ListMenuViewModel(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v7;
  return a1;
}

__n128 initializeWithTake for LocationsOfInterestState(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ListMenuViewModel(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for ListMenuViewModel(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 17))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ListMenuViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ListMenuViewModel()
{
  return &type metadata for ListMenuViewModel;
}

uint64_t sub_1001B51A4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  sub_1000A0794(0, (unint64_t *)&qword_100BC4D48, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(a1, a4) & 1) != 0)
  {
    if ((a3 & 1) != 0)
    {
      if ((a6 & 1) != 0)
        return 1;
    }
    else if ((a6 & 1) == 0 && a2 == a5)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_1001B5234(uint64_t a1, uint64_t a2)
{
  return sub_1001B51A4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_BYTE *)(a2 + 16));
}

uint64_t sub_1001B5250@<X0>(void *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t inited;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v14;

  v8 = sub_1000BA294(&qword_100BC31F0);
  inited = swift_initStackObject(v8, &v14);
  *(_OWORD *)(inited + 16) = xmmword_10097DA20;
  *(_QWORD *)(inited + 32) = 0x74617265706D6574;
  *(_QWORD *)(inited + 40) = 0xEF74696E55657275;
  v10 = sub_1000A0794(0, (unint64_t *)&qword_100BC5658, NSUnitTemperature_ptr);
  *(_QWORD *)(inited + 48) = a1;
  *(_QWORD *)(inited + 72) = v10;
  strcpy((char *)(inited + 80), "menuCategory");
  *(_QWORD *)(inited + 120) = &unk_100B80420;
  *(_BYTE *)(inited + 93) = 0;
  *(_WORD *)(inited + 94) = -5120;
  *(_QWORD *)(inited + 96) = a2;
  *(_BYTE *)(inited + 104) = a3 & 1;
  v11 = a1;
  v12 = Dictionary.init(dictionaryLiteral:)(inited);
  a4[3] = sub_1000BA294(&qword_100BC5660);
  a4[4] = sub_1001B5418();
  sub_10005F164(a4);
  return ShortDescription.init(name:_:)(0xD000000000000011, 0x800000010097F6B0, v12, &type metadata for ListMenuViewModel);
}

uint64_t sub_1001B53A4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1001B5250(*(void **)v1, *(_QWORD *)(v1 + 8), *(_BYTE *)(v1 + 16), a1);
}

uint64_t sub_1001B53B0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001B545C();
  return ShortDescribable.description.getter(a1, v2);
}

unint64_t sub_1001B53DC()
{
  unint64_t result;

  result = qword_100BC5650;
  if (!qword_100BC5650)
  {
    result = swift_getWitnessTable(&unk_10097F6E4, &type metadata for ListMenuViewModel);
    atomic_store(result, (unint64_t *)&qword_100BC5650);
  }
  return result;
}

unint64_t sub_1001B5418()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC5668;
  if (!qword_100BC5668)
  {
    v1 = sub_100075EB0(&qword_100BC5660);
    result = swift_getWitnessTable(&protocol conformance descriptor for ShortDescription<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100BC5668);
  }
  return result;
}

unint64_t sub_1001B545C()
{
  unint64_t result;

  result = qword_100BC5670;
  if (!qword_100BC5670)
  {
    result = swift_getWitnessTable(&unk_10097F70C, &type metadata for ListMenuViewModel);
    atomic_store(result, (unint64_t *)&qword_100BC5670);
  }
  return result;
}

BOOL sub_1001B549C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;
  double *v8;
  BOOL v9;

  if ((static DetailChartGradientModel.== infix(_:_:)(a1, a2) & 1) != 0
    && ((v4 = type metadata accessor for ConditionDetailLegendForeground.LegendGradient(0),
         v5 = *(int *)(v4 + 20),
         v6 = *(double *)(a1 + v5),
         v7 = *(double *)(a1 + v5 + 8),
         v8 = (double *)(a2 + v5),
         v6 == *v8)
      ? (v9 = v7 == v8[1])
      : (v9 = 0),
        v9))
  {
    return *(double *)(a1 + *(int *)(v4 + 24)) == *(double *)(a2 + *(int *)(v4 + 24));
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1001B5508(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  double v20;
  double v21;
  double *v22;
  BOOL v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;

  v4 = type metadata accessor for ConditionDetailLegendForeground.LegendGradient(0);
  sub_1000B42B0();
  __chkstk_darwin(v5);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000C43C4();
  sub_1000B42B0();
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (uint64_t *)((char *)&v31 - v12);
  sub_1000BA294(&qword_100BC5678);
  sub_1000B42B0();
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = &v17[*(int *)(v15 + 48)];
  sub_1001B5788(a1, (uint64_t)v17);
  sub_1001B5788(a2, (uint64_t)v18);
  if (swift_getEnumCaseMultiPayload(v17) != 1)
  {
    sub_1001B5788((uint64_t)v17, (uint64_t)v13);
    v26 = *v13;
    if (sub_1000CC81C() != 1)
    {
      v27 = *(_QWORD *)v18;
      v25 = static Color.== infix(_:_:)(v26, *(_QWORD *)v18);
      swift_release(v26);
      swift_release(v27);
      sub_1000C3570(v28, type metadata accessor for ConditionDetailLegendForeground);
      return v25 & 1;
    }
    swift_release(v26);
    goto LABEL_14;
  }
  sub_1001B5788((uint64_t)v17, (uint64_t)v11);
  if (sub_1000CC81C() != 1)
  {
    sub_10006BD20((uint64_t)v11, type metadata accessor for ConditionDetailLegendForeground.LegendGradient);
LABEL_14:
    sub_1001B57CC((uint64_t)v17);
LABEL_17:
    v25 = 0;
    return v25 & 1;
  }
  sub_1001B580C((uint64_t)v18, (uint64_t)v7);
  if ((static DetailChartGradientModel.== infix(_:_:)(v11, v7) & 1) == 0
    || ((v19 = *(int *)(v4 + 20),
         v20 = *(double *)&v11[v19],
         v21 = *(double *)&v11[v19 + 8],
         v22 = (double *)&v7[v19],
         v20 == *v22)
      ? (v23 = v21 == v22[1])
      : (v23 = 0),
        !v23 || *(double *)&v11[*(int *)(v4 + 24)] != *(double *)&v7[*(int *)(v4 + 24)]))
  {
    sub_1000BBBD8((uint64_t)v7);
    v29 = sub_1000BBBD8((uint64_t)v11);
    sub_1000C3570(v29, type metadata accessor for ConditionDetailLegendForeground);
    goto LABEL_17;
  }
  sub_1000BBBD8((uint64_t)v7);
  v24 = sub_1000BBBD8((uint64_t)v11);
  sub_1000C3570(v24, type metadata accessor for ConditionDetailLegendForeground);
  v25 = 1;
  return v25 & 1;
}

uint64_t type metadata accessor for ConditionDetailLegendForeground.LegendGradient(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC5780, (uint64_t)&nominal type descriptor for ConditionDetailLegendForeground.LegendGradient);
}

uint64_t type metadata accessor for ConditionDetailLegendForeground(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC56F0, (uint64_t)&nominal type descriptor for ConditionDetailLegendForeground);
}

uint64_t sub_1001B5788(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ConditionDetailLegendForeground(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001B57CC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1000BA294(&qword_100BC5678);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001B580C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ConditionDetailLegendForeground.LegendGradient(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1001B5858(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;

  v4 = *a1;
  v5 = a1[1];
  v6 = a2[1];
  v7 = v4 == *a2 && v5 == v6;
  if (!v7 && (sub_100099264(v4, v5, *a2, v6) & 1) == 0)
    goto LABEL_17;
  v8 = a1[2];
  v9 = a1[3];
  v10 = a2[2];
  v11 = a2[3];
  v12 = v8 == v10 && v9 == v11;
  if ((v12 || (sub_100099264(v8, v9, v10, v11) & 1) != 0)
    && (v13 = type metadata accessor for ConditionDetailLegend(0),
        (sub_1001B5508((uint64_t)a1 + *(int *)(v13 + 24), (uint64_t)a2 + *(int *)(v13 + 24)) & 1) != 0)
    && ((v14 = *(int *)(v13 + 28),
         v15 = *(uint64_t *)((char *)a1 + v14),
         v16 = *(uint64_t *)((char *)a1 + v14 + 8),
         v17 = (uint64_t *)((char *)a2 + v14),
         v18 = v17[1],
         v15 == *v17)
      ? (v19 = v16 == v18)
      : (v19 = 0),
        !v19))
  {
    _stringCompareWithSmolCheck(_:_:expecting:)(v15, v16, *v17, v18, 0);
  }
  else
  {
LABEL_17:
    sub_100079F70();
  }
}

uint64_t sub_1001B5928@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain(v2);
}

#error "1001B5964: call analysis failed (funcsize=34)"

uint64_t sub_1001B59BC(uint64_t a1, uint64_t a2)
{
  return sub_1001B5934(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(unsigned __int8 *)(a1 + 24), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(unsigned __int8 *)(a2 + 24));
}

uint64_t type metadata accessor for ConditionDetailLegend(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC5818, (uint64_t)&nominal type descriptor for ConditionDetailLegend);
}

uint64_t *sub_1001B59F4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(a2) == 1)
    {
      v7 = type metadata accessor for DetailChartGradientModel(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = type metadata accessor for ConditionDetailLegendForeground.LegendGradient(0);
      *(_OWORD *)((char *)a1 + *(int *)(v8 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v8 + 20));
      *(uint64_t *)((char *)a1 + *(int *)(v8 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v8 + 24));
      v9 = a1;
      v10 = a3;
      v11 = 1;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
      v9 = a1;
      v10 = a3;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_1001B5AD0(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;

  if (swift_getEnumCaseMultiPayload(a1, a2) != 1)
    return swift_release(*a1);
  v3 = type metadata accessor for DetailChartGradientModel(0);
  return (*(uint64_t (**)(_QWORD *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
}

_QWORD *sub_1001B5B20(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  if (swift_getEnumCaseMultiPayload(a2) == 1)
  {
    v6 = type metadata accessor for DetailChartGradientModel(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    v7 = type metadata accessor for ConditionDetailLegendForeground.LegendGradient(0);
    *(_OWORD *)((char *)a1 + *(int *)(v7 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v7 + 20));
    *(_QWORD *)((char *)a1 + *(int *)(v7 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v7 + 24));
    v8 = a1;
    v9 = a3;
    v10 = 1;
  }
  else
  {
    *a1 = *a2;
    swift_retain();
    v8 = a1;
    v9 = a3;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  return a1;
}

_QWORD *sub_1001B5BD0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  if (a1 != a2)
  {
    sub_10006BD20((uint64_t)a1, type metadata accessor for ConditionDetailLegendForeground);
    if (swift_getEnumCaseMultiPayload(a2) == 1)
    {
      v6 = type metadata accessor for DetailChartGradientModel(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      v7 = type metadata accessor for ConditionDetailLegendForeground.LegendGradient(0);
      *(_OWORD *)((char *)a1 + *(int *)(v7 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v7 + 20));
      *(_QWORD *)((char *)a1 + *(int *)(v7 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v7 + 24));
      v8 = a1;
      v9 = a3;
      v10 = 1;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
      v8 = a1;
      v9 = a3;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  return a1;
}

char *sub_1001B5C98(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (swift_getEnumCaseMultiPayload(a2) == 1)
  {
    v6 = type metadata accessor for DetailChartGradientModel(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    v7 = type metadata accessor for ConditionDetailLegendForeground.LegendGradient(0);
    *(_OWORD *)&a1[*(int *)(v7 + 20)] = *(_OWORD *)&a2[*(int *)(v7 + 20)];
    *(_QWORD *)&a1[*(int *)(v7 + 24)] = *(_QWORD *)&a2[*(int *)(v7 + 24)];
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *sub_1001B5D44(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_10006BD20((uint64_t)a1, type metadata accessor for ConditionDetailLegendForeground);
    if (swift_getEnumCaseMultiPayload(a2) == 1)
    {
      v6 = type metadata accessor for DetailChartGradientModel(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = type metadata accessor for ConditionDetailLegendForeground.LegendGradient(0);
      *(_OWORD *)&a1[*(int *)(v7 + 20)] = *(_OWORD *)&a2[*(int *)(v7 + 20)];
      *(_QWORD *)&a1[*(int *)(v7 + 24)] = *(_QWORD *)&a2[*(int *)(v7 + 24)];
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1001B5E08(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  result = type metadata accessor for ConditionDetailLegendForeground.LegendGradient(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v4);
    return 0;
  }
  return result;
}

uint64_t *sub_1001B5E7C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v9);
  }
  else
  {
    v7 = type metadata accessor for DetailChartGradientModel(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
  }
  return a1;
}

uint64_t sub_1001B5F0C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DetailChartGradientModel(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_1001B5F40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for DetailChartGradientModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_1001B5FA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = type metadata accessor for DetailChartGradientModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1001B601C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for DetailChartGradientModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_1001B6080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for DetailChartGradientModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_1001B60E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001B60F0);
}

uint64_t sub_1001B60F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1000BA444();
  return _s7Weather24LocationCompositionStateOwet_0(v1, v0, v2);
}

uint64_t sub_1001B6118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001B6124);
}

uint64_t sub_1001B6124()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1000BA444();
  return _s7Weather24LocationCompositionStateOwst_0(v1, v0, v0, v2);
}

uint64_t sub_1001B6150(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for DetailChartGradientModel(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_10097F7A0;
    v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t *sub_1001B61D0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    v12 = type metadata accessor for ConditionDetailLegendForeground(0);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v8);
    if (swift_getEnumCaseMultiPayload(v11) == 1)
    {
      v13 = type metadata accessor for DetailChartGradientModel(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v10, v11, v13);
      v14 = type metadata accessor for ConditionDetailLegendForeground.LegendGradient(0);
      *(_OWORD *)((char *)v10 + *(int *)(v14 + 20)) = *(_OWORD *)((char *)v11 + *(int *)(v14 + 20));
      *(_QWORD *)((char *)v10 + *(int *)(v14 + 24)) = *(_QWORD *)((char *)v11 + *(int *)(v14 + 24));
      v15 = 1;
    }
    else
    {
      *v10 = *v11;
      swift_retain();
      v15 = 0;
    }
    swift_storeEnumTagMultiPayload(v10, v12, v15);
    v17 = *(int *)(a3 + 28);
    v18 = (uint64_t *)((char *)v4 + v17);
    v19 = (uint64_t *)((char *)a2 + v17);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    swift_bridgeObjectRetain(v20);
  }
  return v4;
}

double sub_1001B6304(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  double result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = (_QWORD *)(a1 + *(int *)(a2 + 24));
  type metadata accessor for ConditionDetailLegendForeground(0);
  if (swift_getEnumCaseMultiPayload(v4) == 1)
  {
    v5 = type metadata accessor for DetailChartGradientModel(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release(*v4);
  }
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

_QWORD *sub_1001B6394(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (_QWORD *)((char *)a2 + v8);
  v11 = type metadata accessor for ConditionDetailLegendForeground(0);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  if (swift_getEnumCaseMultiPayload(v10) == 1)
  {
    v12 = type metadata accessor for DetailChartGradientModel(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
    v13 = type metadata accessor for ConditionDetailLegendForeground.LegendGradient(0);
    *(_OWORD *)((char *)v9 + *(int *)(v13 + 20)) = *(_OWORD *)((char *)v10 + *(int *)(v13 + 20));
    *(_QWORD *)((char *)v9 + *(int *)(v13 + 24)) = *(_QWORD *)((char *)v10 + *(int *)(v13 + 24));
    v14 = 1;
  }
  else
  {
    *v9 = *v10;
    swift_retain();
    v14 = 0;
  }
  swift_storeEnumTagMultiPayload(v9, v11, v14);
  v15 = *(int *)(a3 + 28);
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  swift_bridgeObjectRetain(v18);
  return a1;
}

_QWORD *sub_1001B649C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;

  *a1 = *a2;
  v6 = a2[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v7 = a2[3];
  a1[3] = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v8 = *(int *)(a3 + 24);
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    sub_10006BD20((uint64_t)a1 + v8, type metadata accessor for ConditionDetailLegendForeground);
    v11 = type metadata accessor for ConditionDetailLegendForeground(0);
    if (swift_getEnumCaseMultiPayload(v10) == 1)
    {
      v12 = type metadata accessor for DetailChartGradientModel(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
      v13 = type metadata accessor for ConditionDetailLegendForeground.LegendGradient(0);
      *(_OWORD *)((char *)v9 + *(int *)(v13 + 20)) = *(_OWORD *)((char *)v10 + *(int *)(v13 + 20));
      *(_QWORD *)((char *)v9 + *(int *)(v13 + 24)) = *(_QWORD *)((char *)v10 + *(int *)(v13 + 24));
      v14 = 1;
    }
    else
    {
      *v9 = *v10;
      swift_retain();
      v14 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v14);
  }
  v15 = *(int *)(a3 + 28);
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  *v16 = *v17;
  v18 = v17[1];
  v16[1] = v18;
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1001B65E8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for ConditionDetailLegendForeground(0);
  if (swift_getEnumCaseMultiPayload(v9) == 1)
  {
    v11 = type metadata accessor for DetailChartGradientModel(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
    v12 = type metadata accessor for ConditionDetailLegendForeground.LegendGradient(0);
    *(_OWORD *)&v8[*(int *)(v12 + 20)] = *(_OWORD *)&v9[*(int *)(v12 + 20)];
    *(_QWORD *)&v8[*(int *)(v12 + 24)] = *(_QWORD *)&v9[*(int *)(v12 + 24)];
    swift_storeEnumTagMultiPayload(v8, v10, 1);
  }
  else
  {
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

_QWORD *sub_1001B66C8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v8 = *(int *)(a3 + 24);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_10006BD20((uint64_t)a1 + v8, type metadata accessor for ConditionDetailLegendForeground);
    v11 = type metadata accessor for ConditionDetailLegendForeground(0);
    if (swift_getEnumCaseMultiPayload(v10) == 1)
    {
      v12 = type metadata accessor for DetailChartGradientModel(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
      v13 = type metadata accessor for ConditionDetailLegendForeground.LegendGradient(0);
      *(_OWORD *)&v9[*(int *)(v13 + 20)] = *(_OWORD *)&v10[*(int *)(v13 + 20)];
      *(_QWORD *)&v9[*(int *)(v13 + 24)] = *(_QWORD *)&v10[*(int *)(v13 + 24)];
      swift_storeEnumTagMultiPayload(v9, v11, 1);
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
  }
  v14 = *(int *)(a3 + 28);
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  v18 = *v16;
  v17 = v16[1];
  *v15 = v18;
  v15[1] = v17;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1001B67E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001B67F4);
}

void sub_1001B67F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    sub_100079F70();
  }
  else
  {
    v6 = sub_1000C43C4();
    _s7Weather24LocationCompositionStateOwet_0(a1 + *(int *)(a3 + 24), a2, v6);
  }
}

uint64_t sub_1001B685C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001B6868);
}

uint64_t sub_1001B6868(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1000C43C4();
    return _s7Weather24LocationCompositionStateOwst_0(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1001B68D0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_10097F7D8;
  v4[1] = &unk_10097F7D8;
  result = type metadata accessor for ConditionDetailLegendForeground(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    v4[3] = &unk_10097F7D8;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t initializeWithCopy for ConditionDetailLegendViewModel(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = a2[2];
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v5);
  return a1;
}

uint64_t *assignWithCopy for ConditionDetailLegendViewModel(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[1] = a2[1];
  v6 = a2[2];
  v7 = a1[2];
  a1[2] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
  return a1;
}

uint64_t *assignWithTake for ConditionDetailLegendViewModel(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v4);
  v5 = a2[2];
  v6 = a1[2];
  a1[1] = a2[1];
  a1[2] = v5;
  swift_bridgeObjectRelease(v6);
  *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for ConditionDetailLegendViewModel(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 25))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ConditionDetailLegendViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ConditionDetailLegendViewModel()
{
  return &type metadata for ConditionDetailLegendViewModel;
}

void *sub_1001B6AD4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[128];
  _QWORD v33[2];
  char v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  LOBYTE(v33[0]) = 1;
  State.init(wrappedValue:)(v33, &type metadata for Bool);
  v4 = v45;
  v5 = v46;
  swift_retain();
  swift_retain();
  v6 = sub_1000BA294(&qword_100BC46A0);
  v7 = sub_10005F124(&qword_100BC46A8, &qword_100BC46A0, (uint64_t)&unk_1009D9950);
  v8 = ObservedObject.init(wrappedValue:)(a1, v6, v7);
  v10 = v9;
  v11 = swift_retain();
  static LinearGradient.fallback.getter(&v21, v11);
  v12 = v21;
  v20 = v22;
  v13 = v23;
  v14 = v24;
  static LinearGradient.fallback.getter(&v25, v22);
  v33[0] = v8;
  v33[1] = v10;
  v34 = v4;
  v35 = v5;
  v36 = v12;
  v37 = v20;
  v38 = v13;
  v39 = v14;
  v40 = 0;
  v41 = v25;
  v42 = v26;
  v43 = v27;
  v44 = 0;
  sub_1000BA454(v32, v33);
  sub_1001B6EA4(v33);
  sub_1001B6CC4(&v28);
  v16 = v28;
  v15 = v29;
  v17 = v30;
  v18 = v31;
  swift_release();
  sub_1001B6F10(v33);
  swift_bridgeObjectRetain_n(v16, 2);
  sub_100158858(&v21);
  swift_bridgeObjectRetain();
  sub_100158858(&v25);
  v45 = v8;
  v46 = v10;
  v47 = v4;
  v48 = v5;
  v49 = v16;
  v50 = v15;
  v51 = v17;
  v52 = v18;
  v53 = 0;
  v54 = v16;
  v55 = v15;
  v56 = v17;
  v57 = v18;
  v58 = 0;
  sub_1001B6EA4(&v45);
  sub_100158858(&v28);
  sub_100158858(&v28);
  swift_release();
  swift_release();
  sub_1001B6F10(&v45);
  return sub_1000BA454(a2, &v45);
}

double sub_1001B6CC4@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double result;
  __int128 v27;
  _OWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _OWORD *v31;
  _OWORD v32[2];
  uint64_t v33;

  v31 = a1;
  v30 = type metadata accessor for CodableColor(0);
  v1 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for SkyBackgroundGradient(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for WeatherConditionBackgroundModel(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1000BA294(&qword_100BC42C8);
  v13 = swift_allocObject(v12, 40, 7);
  *(_OWORD *)(v13 + 16) = xmmword_10097CA50;
  sub_100042A08();
  WeatherConditionBackgroundModel.gradient.getter(v14);
  v15 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  SkyBackgroundGradient.topColor.getter(v15);
  v16 = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v17 = CodableColor.color.getter(v16);
  v18 = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v30);
  *(_QWORD *)(v13 + 32) = v17;
  *(_QWORD *)&v32[0] = v13;
  specialized Array._endMutation()(v18);
  v19 = Gradient.init(colors:)(*(_QWORD *)&v32[0]);
  v21 = static UnitPoint.top.getter(v20);
  v23 = v22;
  v24 = static UnitPoint.bottom.getter();
  LinearGradient.init(gradient:startPoint:endPoint:)(v32, v19, v21, v23, v24, v25);
  result = *(double *)v32;
  v27 = v32[1];
  v28 = v31;
  *v31 = v32[0];
  v28[1] = v27;
  *((_QWORD *)v28 + 4) = v33;
  return result;
}

_QWORD *sub_1001B6EA4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[4];
  v5 = a1[9];
  v6 = a1[10];
  swift_retain(a1[15]);
  swift_retain(v2);
  swift_retain(v3);
  swift_bridgeObjectRetain(v4);
  swift_retain(v5);
  swift_bridgeObjectRetain(v6);
  return a1;
}

_QWORD *sub_1001B6F10(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[4];
  v5 = a1[9];
  v6 = a1[15];
  swift_bridgeObjectRelease(a1[10]);
  swift_bridgeObjectRelease(v4);
  swift_release(v2);
  swift_release(v3);
  swift_release(v5);
  swift_release(v6);
  return a1;
}

uint64_t destroy for ListGradientView(_QWORD *a1)
{
  swift_release(a1[1]);
  swift_release(a1[3]);
  swift_bridgeObjectRelease(a1[4]);
  swift_release(a1[9]);
  swift_bridgeObjectRelease(a1[10]);
  return swift_release(a1[15]);
}

uint64_t initializeWithCopy for ListGradientView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v6 = *(_QWORD *)(a2 + 72);
  v7 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v6;
  *(_QWORD *)(a1 + 80) = v7;
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  v8 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 120) = v8;
  swift_retain(v3);
  swift_retain(v4);
  swift_bridgeObjectRetain(v5);
  swift_retain(v6);
  swift_bridgeObjectRetain(v7);
  swift_retain(v8);
  return a1;
}

uint64_t assignWithCopy for ListGradientView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain(v4);
  swift_release(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v7;
  swift_retain(v7);
  swift_release(v6);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a1 + 72);
  v11 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 72) = v11;
  swift_retain(v11);
  swift_release(v10);
  v12 = *(_QWORD *)(a2 + 80);
  v13 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 80) = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  v14 = *(_QWORD *)(a1 + 120);
  v15 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 120) = v15;
  swift_retain(v15);
  swift_release(v14);
  return a1;
}

void *initializeWithTake for ListGradientView(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x80uLL);
}

uint64_t assignWithTake for ListGradientView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_release(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_release(*(_QWORD *)(a1 + 24));
  v6 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease(v6);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release(*(_QWORD *)(a1 + 72));
  v7 = *(_QWORD *)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_bridgeObjectRelease(v7);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  v8 = *(_QWORD *)(a1 + 120);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_release(v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for ListGradientView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 128))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ListGradientView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 128) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 128) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ListGradientView()
{
  return &type metadata for ListGradientView;
}

uint64_t sub_1001B72C8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AA9BC0, 1);
}

double sub_1001B72D8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  __n128 v21;
  double result;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  _BYTE v27[24];
  __int128 v28;
  __int128 v29;
  uint64_t v30;

  v1 = v0;
  v2 = type metadata accessor for WeatherConditionBackgroundModel(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = static Alignment.center.getter(v6);
  v9 = v8;
  sub_1001B7580((uint64_t)&v24);
  v10 = v24;
  v11 = *(_QWORD *)v27;
  v12 = v29;
  v13 = v25;
  v14 = v26;
  v15 = *(_OWORD *)&v27[8];
  v16 = v28;
  v24 = v7;
  *(_QWORD *)&v25 = v9;
  *((_QWORD *)&v25 + 1) = v10;
  v26 = v13;
  *(_OWORD *)v27 = v14;
  *(_QWORD *)&v27[16] = v11;
  v28 = v15;
  v29 = v16;
  v30 = v12;
  sub_100042A08();
  v17 = swift_allocObject(&unk_100B604E8, 144, 7);
  sub_1000BA454((void *)(v17 + 16), v1);
  sub_1001B6EA4(v1);
  v18 = sub_1000BA294(&qword_100BC5858);
  v19 = sub_10005F124(&qword_100BC5860, &qword_100BC5858, (uint64_t)&protocol conformance descriptor for ZStack<A>);
  v20 = sub_1001B77D8();
  View.onChange<A>(of:initial:_:)(v5, 0, sub_1001B77B8, v17, v18, v2, v19, v20);
  v21 = swift_release(v17);
  (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v21);
  swift_bridgeObjectRelease();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

double sub_1001B7464()
{
  _OWORD *v0;
  _OWORD *v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double result;
  _QWORD v12[6];
  _OWORD v13[2];
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _OWORD v18[2];
  uint64_t v19;

  v1 = v0;
  sub_1001B6CC4(v18);
  v15 = v0[1];
  v2 = sub_1000BA294(&qword_100BC5608);
  State.wrappedValue.getter(v13, v2);
  if (LOBYTE(v13[0]) == 1)
  {
    v3 = v0[6];
    v15 = v0[5];
    v16 = v3;
    v4 = v0[7];
  }
  else
  {
    v5 = v0[3];
    v15 = v0[2];
    v16 = v5;
    v4 = v0[4];
  }
  v17 = v4;
  v13[0] = v18[0];
  v13[1] = v18[1];
  v14 = v19;
  v6 = sub_1000BA294(&qword_100BC5868);
  v7 = State.wrappedValue.setter(v13, v6);
  v8 = static Animation.default.getter(v7);
  v9 = Animation.delay(_:)(0.3);
  swift_release(v8);
  __chkstk_darwin(v10);
  v12[2] = v1;
  withAnimation<A>(_:_:)(v9, sub_1001B7818, v12, &type metadata for () + 1);
  *(_QWORD *)&result = swift_release(v9).n128_u64[0];
  return result;
}

_QWORD *sub_1001B7580@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *result;
  BOOL v11;
  double v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;

  v2 = sub_1000BA294(&qword_100BC5868);
  State.wrappedValue.getter(&v15, v2);
  v3 = v15;
  v4 = v17;
  v5 = v18;
  v14 = v16;
  State.wrappedValue.getter(&v15, v2);
  v6 = v15;
  v13 = v16;
  v7 = v17;
  v8 = v18;
  v9 = sub_1000BA294(&qword_100BC5608);
  result = State.wrappedValue.getter(&v15, v9);
  v11 = v15 == 0;
  v12 = 0.0;
  *(_QWORD *)a1 = v3;
  if (!v11)
    v12 = 1.0;
  *(_OWORD *)(a1 + 8) = v14;
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  *(_OWORD *)(a1 + 48) = v13;
  *(_QWORD *)(a1 + 64) = v7;
  *(_QWORD *)(a1 + 72) = v8;
  *(double *)(a1 + 80) = v12;
  return result;
}

uint64_t sub_1001B7688(uint64_t a1)
{
  uint64_t v1;
  BOOL v3;
  __int128 v4;
  char v5;
  __int128 v6;
  uint64_t v7;

  v6 = *(_OWORD *)(a1 + 16);
  sub_1001B7830((uint64_t)&v6 + 8, (uint64_t)&v7);
  sub_10017989C(&v7);
  v1 = sub_1000BA294(&qword_100BC5608);
  State.wrappedValue.getter(&v5, v1);
  v4 = v6;
  v3 = (v5 & 1) == 0;
  State.wrappedValue.setter(&v3, v1);
  return sub_1001B7878((uint64_t)&v6);
}

double sub_1001B772C()
{
  const void *v0;
  _BYTE v2[128];

  memcpy(v2, v0, sizeof(v2));
  return sub_1001B72D8();
}

uint64_t sub_1001B776C()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_release(v0[5]);
  swift_bridgeObjectRelease(v0[6]);
  swift_release(v0[11]);
  swift_bridgeObjectRelease(v0[12]);
  swift_release(v0[17]);
  return swift_deallocObject(v0, 144, 7);
}

double sub_1001B77B8()
{
  return sub_1001B7464();
}

unint64_t sub_1001B77D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC4698;
  if (!qword_100BC4698)
  {
    v1 = type metadata accessor for WeatherConditionBackgroundModel(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for WeatherConditionBackgroundModel, v1);
    atomic_store(result, (unint64_t *)&qword_100BC4698);
  }
  return result;
}

uint64_t sub_1001B7818()
{
  uint64_t v0;

  return sub_1001B7688(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1001B7830(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(qword_100BC5870);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001B7878(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + 8));
  return a1;
}

uint64_t sub_1001B78A0()
{
  _QWORD v1[4];

  v1[0] = sub_100075EB0(&qword_100BC5858);
  v1[1] = type metadata accessor for WeatherConditionBackgroundModel(255);
  v1[2] = sub_10005F124(&qword_100BC5860, &qword_100BC5858, (uint64_t)&protocol conformance descriptor for ZStack<A>);
  v1[3] = sub_1001B77D8();
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
}

_QWORD *assignWithCopy for Scroll(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  v4 = a1[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain(v3);
  swift_release(v4);
  return a1;
}

uint64_t assignWithTake for Scroll(uint64_t a1, _OWORD *a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  swift_release(v3);
  return a1;
}

uint64_t sub_1001B798C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 8);
}

double sub_1001B7994(_QWORD *a1)
{
  double result;

  if (a1[5] >= 0xFFFFFFFFuLL)
  {
    if (a1[3])
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  return result;
}

uint64_t sub_1001B79E0(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;

  v4 = *(_QWORD *)(a2 + 40);
  if (v4 < 0xFFFFFFFF)
  {
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  }
  else
  {
    v5 = *(_QWORD *)(a2 + 24);
    if (v5)
    {
      v6 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 24) = v5;
      *(_QWORD *)(a1 + 32) = v6;
      (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
      v4 = *(_QWORD *)(a2 + 40);
    }
    else
    {
      v8 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v8;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    }
    *(_QWORD *)(a1 + 40) = v4;
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
    swift_bridgeObjectRetain(v4);
  }
  return a1;
}

uint64_t sub_1001B7A7C(uint64_t a1, __int128 *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;

  v4 = *((_QWORD *)a2 + 5);
  if (*(_QWORD *)(a1 + 40) >= 0xFFFFFFFFuLL)
  {
    v5 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
    {
      v6 = *((_QWORD *)a2 + 3);
      if (v5)
      {
        if (v6)
        {
          sub_100094D04((_QWORD *)a1, a2);
LABEL_19:
          v16 = *((_QWORD *)a2 + 5);
          *(_QWORD *)(a1 + 40) = v16;
          swift_bridgeObjectRetain(v16);
          swift_bridgeObjectRelease();
          *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
          return a1;
        }
        _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)a1);
      }
      else if (v6)
      {
        *(_QWORD *)(a1 + 24) = v6;
        *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
        (**(void (***)(uint64_t, __int128 *))(v6 - 8))(a1, a2);
        goto LABEL_19;
      }
      v14 = *a2;
      v15 = a2[1];
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      *(_OWORD *)a1 = v14;
      *(_OWORD *)(a1 + 16) = v15;
      goto LABEL_19;
    }
    if (v5)
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)a1);
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  if (v4 < 0xFFFFFFFF)
  {
LABEL_12:
    v8 = *a2;
    v9 = a2[1];
    v10 = a2[2];
    *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
    *(_OWORD *)(a1 + 16) = v9;
    *(_OWORD *)(a1 + 32) = v10;
    *(_OWORD *)a1 = v8;
    return a1;
  }
  v7 = *((_QWORD *)a2 + 3);
  if (v7)
  {
    *(_QWORD *)(a1 + 24) = v7;
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    (**(void (***)(uint64_t, __int128 *))(v7 - 8))(a1, a2);
  }
  else
  {
    v11 = *a2;
    v12 = a2[1];
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    *(_OWORD *)a1 = v11;
    *(_OWORD *)(a1 + 16) = v12;
  }
  v13 = *((_QWORD *)a2 + 5);
  *(_QWORD *)(a1 + 40) = v13;
  *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
  swift_bridgeObjectRetain(v13);
  return a1;
}

__n128 initializeWithTake for MainViewFullscreenMapOverlayModifier(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_1001B7BF0(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;

  if (*(_QWORD *)(a1 + 40) < 0xFFFFFFFFuLL)
  {
LABEL_9:
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    goto LABEL_10;
  }
  v4 = *(_QWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a1 + 24);
  if (v4 < 0xFFFFFFFF)
  {
    if (v5)
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)a1);
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  if (v5)
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
LABEL_10:
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t sub_1001B7C94(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 40);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t sub_1001B7CE8(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_BYTE *)(result + 48) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_QWORD *)(result + 40) = a2 + 1;
  }
  return result;
}

uint64_t sub_1001B7D50(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 40);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

double sub_1001B7D68(uint64_t a1, int a2)
{
  double result;

  if (a2 < 0)
  {
    *(_QWORD *)(a1 + 40) = 0;
    result = 0.0;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_BYTE *)(a1 + 48) = 0;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(_QWORD *)(a1 + 40) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for MiddlewareResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100108FF8(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MiddlewareResult);
}

void sub_1001B7DA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;

  v4 = type metadata accessor for WeatherMapOverlayKind(0);
  __chkstk_darwin(v4);
  sub_1000860DC();
  v5 = (char *)sub_1001B7E30 + 4 * word_10097F9F0[sub_100414254(a1, a2)];
  __asm { BR              X10 }
}

uint64_t sub_1001B7E30()
{
  unsigned int v0;

  if (qword_100BC1E18 != -1)
    swift_once(&qword_100BC1E18, sub_1001B83FC);
  v0 = byte_100CADD08;
  sub_1000860DC();
  return v0;
}

void sub_1001B8104()
{
  sub_1000BA45C();
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001009F2170, "Weather/PerformanceTestDefinitions_Mac.swift", 44, 2);
  __break(1u);
}

uint64_t type metadata accessor for PerformanceTestDefinitions_Mac()
{
  return objc_opt_self(_TtC7Weather30PerformanceTestDefinitions_Mac);
}

void sub_1001B83E8(uint64_t a1, uint64_t a2)
{
  sub_1001B7DA8(a1, a2);
}

uint64_t sub_1001B83FC()
{
  uint64_t result;

  result = sub_1001B8424();
  byte_100CADD08 = 3;
  qword_100CADD10 = result;
  return result;
}

uint64_t sub_1001B8424()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;

  v0 = type metadata accessor for Navigate(0);
  __chkstk_darwin(v0);
  v2 = (uint64_t *)((char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = type metadata accessor for SettingReader(0);
  v4 = static SettingReader.shared.getter(v3);
  if (qword_100BC2138 != -1)
    swift_once(&qword_100BC2138, sub_1004EB7A4);
  SettingReader.read<A>(_:)(&v13);
  swift_release(v4);
  v5 = v13;
  *v2 = 2;
  v6 = type metadata accessor for Navigate.Destination(0);
  swift_storeEnumTagMultiPayload(v2, v6, 1);
  *((_BYTE *)v2 + *(int *)(v0 + 20)) = 0;
  v7 = sub_1000BA294(&qword_100BC5A28);
  v8 = swift_allocObject(v7, 112, 7);
  *(_OWORD *)(v8 + 16) = xmmword_10097DA20;
  *(_QWORD *)(v8 + 56) = &type metadata for ChangeMacAppState;
  *(_QWORD *)(v8 + 64) = &off_100B9A1B8;
  *(_BYTE *)(v8 + 32) = 0;
  *(_QWORD *)(v8 + 96) = &type metadata for Delay;
  *(_QWORD *)(v8 + 104) = &off_100B674E0;
  *(_QWORD *)(v8 + 72) = 0x4008000000000000;
  v9 = swift_allocObject(v7, 432, 7);
  *(_OWORD *)(v9 + 16) = xmmword_10097FA60;
  *(_QWORD *)(v9 + 56) = &type metadata for Mica;
  *(_QWORD *)(v9 + 64) = &off_100B80EE8;
  *(_BYTE *)(v9 + 32) = 0;
  *(_QWORD *)(v9 + 96) = &type metadata for Delay;
  *(_QWORD *)(v9 + 104) = &off_100B674E0;
  *(_QWORD *)(v9 + 72) = 0x3FF0000000000000;
  *(_QWORD *)(v9 + 136) = &type metadata for UpdateWeather;
  *(_QWORD *)(v9 + 144) = &off_100B9D1D0;
  *(_BYTE *)(v9 + 112) = v5;
  *(_QWORD *)(v9 + 176) = &type metadata for Delay;
  *(_QWORD *)(v9 + 184) = &off_100B674E0;
  *(_QWORD *)(v9 + 152) = 0x3FF0000000000000;
  *(_QWORD *)(v9 + 216) = v0;
  *(_QWORD *)(v9 + 224) = &off_100B7C430;
  v10 = sub_10005F164((_QWORD *)(v9 + 192));
  sub_1001B8BC4((uint64_t)v2, (uint64_t)v10);
  *(_QWORD *)(v9 + 256) = &type metadata for Delay;
  *(_QWORD *)(v9 + 264) = &off_100B674E0;
  *(_QWORD *)(v9 + 232) = 0x3FF0000000000000;
  *(_QWORD *)(v9 + 296) = &type metadata for Sidebar;
  *(_QWORD *)(v9 + 304) = &off_100B8FAA0;
  *(_BYTE *)(v9 + 272) = 0;
  *(_QWORD *)(v9 + 336) = &type metadata for Delay;
  *(_QWORD *)(v9 + 344) = &off_100B674E0;
  *(_QWORD *)(v9 + 312) = 0x3FF0000000000000;
  *(_QWORD *)(v9 + 376) = &type metadata for Measure;
  *(_QWORD *)(v9 + 384) = &off_100B65218;
  *(_QWORD *)(v9 + 352) = v8;
  *(_QWORD *)(v9 + 416) = &type metadata for Mica;
  *(_QWORD *)(v9 + 424) = &off_100B80EE8;
  *(_BYTE *)(v9 + 392) = 1;
  sub_1001B8C08((uint64_t)v2);
  return v9;
}

uint64_t sub_1001B8658()
{
  uint64_t result;

  result = sub_1001B8680();
  byte_100CADD18 = 24;
  qword_100CADD20 = result;
  return result;
}

uint64_t sub_1001B8680()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;

  v0 = type metadata accessor for Navigate(0);
  __chkstk_darwin(v0);
  v2 = (uint64_t *)((char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = type metadata accessor for SettingReader(0);
  v4 = static SettingReader.shared.getter(v3);
  if (qword_100BC2138 != -1)
    swift_once(&qword_100BC2138, sub_1004EB7A4);
  SettingReader.read<A>(_:)(&v16);
  swift_release(v4);
  v5 = v16;
  *v2 = 0;
  v6 = type metadata accessor for Navigate.Destination(0);
  swift_storeEnumTagMultiPayload(v2, v6, 1);
  *((_BYTE *)v2 + *(int *)(v0 + 20)) = 0;
  if (qword_100BC2838 != -1)
    swift_once(&qword_100BC2838, sub_100944938);
  v7 = qword_100CAF688;
  v8 = *(double *)&qword_100CAF688 + 200.0;
  v9 = sub_1000BA294(&qword_100BC5A28);
  v10 = swift_allocObject(v9, 72, 7);
  *(_OWORD *)(v10 + 16) = xmmword_10097CA50;
  *(_QWORD *)(v10 + 56) = &type metadata for ResizeMacWindow;
  *(_QWORD *)(v10 + 64) = &off_100B66810;
  v11 = swift_allocObject(&unk_100B60620, 48, 7);
  *(_QWORD *)(v10 + 32) = v11;
  *(_QWORD *)(v11 + 16) = v7;
  *(_QWORD *)(v11 + 24) = 0x4084000000000000;
  *(double *)(v11 + 32) = v8;
  *(_QWORD *)(v11 + 40) = 0x4084000000000000;
  v12 = swift_allocObject(v9, 432, 7);
  *(_OWORD *)(v12 + 16) = xmmword_10097FA60;
  *(_QWORD *)(v12 + 56) = &type metadata for Mica;
  *(_QWORD *)(v12 + 64) = &off_100B80EE8;
  *(_BYTE *)(v12 + 32) = 0;
  *(_QWORD *)(v12 + 96) = &type metadata for Delay;
  *(_QWORD *)(v12 + 104) = &off_100B674E0;
  *(_QWORD *)(v12 + 72) = 0x3FF0000000000000;
  *(_QWORD *)(v12 + 136) = &type metadata for UpdateWeather;
  *(_QWORD *)(v12 + 144) = &off_100B9D1D0;
  *(_BYTE *)(v12 + 112) = v5;
  *(_QWORD *)(v12 + 176) = &type metadata for Delay;
  *(_QWORD *)(v12 + 184) = &off_100B674E0;
  *(_QWORD *)(v12 + 152) = 0x3FF0000000000000;
  *(_QWORD *)(v12 + 216) = v0;
  *(_QWORD *)(v12 + 224) = &off_100B7C430;
  v13 = sub_10005F164((_QWORD *)(v12 + 192));
  sub_1001B8BC4((uint64_t)v2, (uint64_t)v13);
  *(_QWORD *)(v12 + 256) = &type metadata for Delay;
  *(_QWORD *)(v12 + 264) = &off_100B674E0;
  *(_QWORD *)(v12 + 232) = 0x3FF0000000000000;
  *(_QWORD *)(v12 + 296) = &type metadata for Sidebar;
  *(_QWORD *)(v12 + 304) = &off_100B8FAA0;
  *(_BYTE *)(v12 + 272) = 1;
  *(_QWORD *)(v12 + 336) = &type metadata for Delay;
  *(_QWORD *)(v12 + 344) = &off_100B674E0;
  *(_QWORD *)(v12 + 312) = 0x3FF0000000000000;
  *(_QWORD *)(v12 + 376) = &type metadata for Measure;
  *(_QWORD *)(v12 + 384) = &off_100B65218;
  *(_QWORD *)(v12 + 352) = v10;
  *(_QWORD *)(v12 + 416) = &type metadata for Mica;
  *(_QWORD *)(v12 + 424) = &off_100B80EE8;
  *(_BYTE *)(v12 + 392) = 1;
  sub_1001B8C08((uint64_t)v2);
  return v12;
}

uint64_t sub_1001B8910()
{
  uint64_t result;

  result = sub_1001B8938();
  byte_100CADD28 = 25;
  qword_100CADD30 = result;
  return result;
}

uint64_t sub_1001B8938()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;

  v0 = type metadata accessor for Navigate(0);
  __chkstk_darwin(v0);
  v2 = (uint64_t *)((char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = type metadata accessor for SettingReader(0);
  v4 = static SettingReader.shared.getter(v3);
  if (qword_100BC2138 != -1)
    swift_once(&qword_100BC2138, sub_1004EB7A4);
  SettingReader.read<A>(_:)(&v15);
  swift_release(v4);
  v5 = v15;
  *v2 = 0;
  v6 = type metadata accessor for Navigate.Destination(0);
  swift_storeEnumTagMultiPayload(v2, v6, 1);
  *((_BYTE *)v2 + *(int *)(v0 + 20)) = 0;
  if (qword_100BC2830 != -1)
    swift_once(&qword_100BC2830, sub_1009448D4);
  v7 = qword_100CAF680;
  v8 = sub_1000BA294(&qword_100BC5A28);
  v9 = swift_allocObject(v8, 72, 7);
  *(_OWORD *)(v9 + 16) = xmmword_10097CA50;
  *(_QWORD *)(v9 + 56) = &type metadata for ResizeMacWindow;
  *(_QWORD *)(v9 + 64) = &off_100B66810;
  v10 = (_QWORD *)swift_allocObject(&unk_100B60620, 48, 7);
  *(_QWORD *)(v9 + 32) = v10;
  v10[2] = v7;
  v10[3] = 0x4084000000000000;
  v10[4] = v7;
  v10[5] = 0x408A400000000000;
  v11 = swift_allocObject(v8, 432, 7);
  *(_OWORD *)(v11 + 16) = xmmword_10097FA60;
  *(_QWORD *)(v11 + 56) = &type metadata for Mica;
  *(_QWORD *)(v11 + 64) = &off_100B80EE8;
  *(_BYTE *)(v11 + 32) = 0;
  *(_QWORD *)(v11 + 96) = &type metadata for Delay;
  *(_QWORD *)(v11 + 104) = &off_100B674E0;
  *(_QWORD *)(v11 + 72) = 0x3FF0000000000000;
  *(_QWORD *)(v11 + 136) = &type metadata for UpdateWeather;
  *(_QWORD *)(v11 + 144) = &off_100B9D1D0;
  *(_BYTE *)(v11 + 112) = v5;
  *(_QWORD *)(v11 + 176) = &type metadata for Delay;
  *(_QWORD *)(v11 + 184) = &off_100B674E0;
  *(_QWORD *)(v11 + 152) = 0x3FF0000000000000;
  *(_QWORD *)(v11 + 216) = v0;
  *(_QWORD *)(v11 + 224) = &off_100B7C430;
  v12 = sub_10005F164((_QWORD *)(v11 + 192));
  sub_1001B8BC4((uint64_t)v2, (uint64_t)v12);
  *(_QWORD *)(v11 + 256) = &type metadata for Delay;
  *(_QWORD *)(v11 + 264) = &off_100B674E0;
  *(_QWORD *)(v11 + 232) = 0x3FF0000000000000;
  *(_QWORD *)(v11 + 296) = &type metadata for Sidebar;
  *(_QWORD *)(v11 + 304) = &off_100B8FAA0;
  *(_BYTE *)(v11 + 272) = 1;
  *(_QWORD *)(v11 + 336) = &type metadata for Delay;
  *(_QWORD *)(v11 + 344) = &off_100B674E0;
  *(_QWORD *)(v11 + 312) = 0x3FF0000000000000;
  *(_QWORD *)(v11 + 376) = &type metadata for Measure;
  *(_QWORD *)(v11 + 384) = &off_100B65218;
  *(_QWORD *)(v11 + 352) = v9;
  *(_QWORD *)(v11 + 416) = &type metadata for Mica;
  *(_QWORD *)(v11 + 424) = &off_100B80EE8;
  *(_BYTE *)(v11 + 392) = 1;
  sub_1001B8C08((uint64_t)v2);
  return v11;
}

uint64_t sub_1001B8BC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Navigate(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001B8C08(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Navigate(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001B8C44()
{
  uint64_t v0;

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1001B8C54()
{
  return sub_100054AD4((void (*)(void))sub_1001B9364);
}

void sub_1001B8C68(char a1)
{
  sub_100027F28(a1, (void (*)(void))sub_1001B9364);
}

uint64_t sub_1001B8C7C()
{
  return sub_1001B8D30((void (*)(void))sub_1001B941C);
}

void sub_1001B8C90(uint64_t a1, uint64_t a2)
{
  sub_1001B8D80(a1, a2, (void (*)(uint64_t, uint64_t))sub_1001B941C);
}

uint64_t sub_1001B8CA4()
{
  return sub_100054AD4((void (*)(void))sub_1001B92A8);
}

void sub_1001B8CB8(char a1)
{
  sub_100027F28(a1, (void (*)(void))sub_1001B92A8);
}

void sub_1001B8CCC(char a1)
{
  sub_100027F28(a1, (void (*)(void))sub_100137D58);
}

uint64_t sub_1001B8CE0()
{
  return sub_100054AD4((void (*)(void))sub_1001B9538);
}

void sub_1001B8CF4(char a1)
{
  sub_100027F28(a1, (void (*)(void))sub_1001B9538);
}

void sub_1001B8D08(char a1)
{
  sub_100027F28(a1, (void (*)(void))sub_100127F90);
}

uint64_t sub_1001B8D1C()
{
  return sub_1001B8D30((void (*)(void))sub_1001B94EC);
}

uint64_t sub_1001B8D30(void (*a1)(void))
{
  uint64_t v2;

  a1();
  sub_1000E6E9C();
  return v2;
}

void sub_1001B8D6C(uint64_t a1, uint64_t a2)
{
  sub_1001B8D80(a1, a2, (void (*)(uint64_t, uint64_t))sub_1001B94EC);
}

void sub_1001B8D80(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  uint64_t v3;
  char v4;

  v3 = a1;
  v4 = a2 & 1;
  a3(a1, a2);
  sub_1000DD70C((uint64_t)&v3);
  sub_100089028();
}

void sub_1001B8DB8(uint64_t a1@<X8>)
{
  char v1;

  v1 = byte_100BC5A38;
  *(_QWORD *)a1 = qword_100BC5A30;
  *(_BYTE *)(a1 + 8) = v1;
}

void sub_1001B8DD4(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t *MapTransitionNamespaceKey.defaultValue.unsafeMutableAddressor()
{
  return &static MapTransitionNamespaceKey.defaultValue;
}

uint64_t static MapTransitionNamespaceKey.defaultValue.getter()
{
  _BYTE v1[24];

  sub_10009922C((uint64_t)&static MapTransitionNamespaceKey.defaultValue, (uint64_t)v1, 0);
  return static MapTransitionNamespaceKey.defaultValue;
}

uint64_t static MapTransitionNamespaceKey.defaultValue.setter(uint64_t a1, char a2)
{
  uint64_t result;
  _BYTE v5[24];

  result = sub_10009922C((uint64_t)&static MapTransitionNamespaceKey.defaultValue, (uint64_t)v5, 1);
  static MapTransitionNamespaceKey.defaultValue = a1;
  byte_100BC5A48 = a2 & 1;
  return result;
}

uint64_t (*static MapTransitionNamespaceKey.defaultValue.modify(uint64_t a1))(_QWORD)
{
  sub_10009922C((uint64_t)&static MapTransitionNamespaceKey.defaultValue, a1, 33);
  return j__swift_endAccess;
}

double static SafeAreaInsetsKey.defaultValue.getter()
{
  if (qword_100BC1E48 != -1)
    swift_once(&qword_100BC1E48, sub_10013FF70);
  return *(double *)&static SafeAreaInsetsKey.defaultValue;
}

void *AutomationInfoEnabledKey.defaultValue.unsafeMutableAddressor()
{
  return &static AutomationInfoEnabledKey.defaultValue;
}

void static WindowHorizontalSizeClassKey.defaultValue.getter(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_100BC1E50 != -1)
    swift_once(&qword_100BC1E50, sub_10012A45C);
  v2 = sub_1000BA294(&qword_100BC5A68);
  v3 = sub_1000AECD4(v2, (uint64_t)static WindowHorizontalSizeClassKey.defaultValue);
  sub_10007EBC8(v3, a1, &qword_100BC5A68);
}

void *SidebarVisibilityKey.defaultValue.unsafeMutableAddressor()
{
  return &static SidebarVisibilityKey.defaultValue;
}

void *SearchOverlayVisibilityKey.defaultValue.unsafeMutableAddressor()
{
  return &static SearchOverlayVisibilityKey.defaultValue;
}

void *LocationKey.defaultValue.unsafeMutableAddressor()
{
  return &static LocationKey.defaultValue;
}

void static LocationKey.defaultValue.getter()
{
  sub_100098884();
}

void sub_1001B8FB0(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

uint64_t sub_1001B8FB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  v8 = sub_1001B91A8(&qword_100BC5AA0, &qword_100BC5AA8);
  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

void *GridCompactLayoutKey.defaultValue.unsafeMutableAddressor()
{
  return &static GridCompactLayoutKey.defaultValue;
}

uint64_t static TipAlignmentKey.defaultValue.getter()
{
  if (qword_100BC1E58 != -1)
    swift_once(&qword_100BC1E58, sub_100144E1C);
  return static TipAlignmentKey.defaultValue;
}

void *HeaderLineLimitKey.defaultValue.unsafeMutableAddressor()
{
  return &static HeaderLineLimitKey.defaultValue;
}

uint64_t sub_1001B907C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  v8 = sub_1001B91A8(&qword_100BC5A88, &qword_100BC5A90);
  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

double static CompressedLocationHeaderHeightKey.defaultValue.getter()
{
  if (qword_100BC1E60 != -1)
    swift_once(&qword_100BC1E60, sub_1001264E8);
  return *(double *)&static CompressedLocationHeaderHeightKey.defaultValue;
}

void type metadata accessor for MapTransitionNamespaceKey()
{
  sub_100098884();
}

void type metadata accessor for SafeAreaInsetsKey()
{
  sub_100098884();
}

void type metadata accessor for AutomationInfoEnabledKey()
{
  sub_100098884();
}

void type metadata accessor for WindowHorizontalSizeClassKey()
{
  sub_100098884();
}

void type metadata accessor for SidebarVisibilityKey()
{
  sub_100098884();
}

void type metadata accessor for SearchOverlayVisibilityKey()
{
  sub_100098884();
}

void type metadata accessor for LocationKey()
{
  sub_100098884();
}

void type metadata accessor for GridCompactLayoutKey()
{
  sub_100098884();
}

void type metadata accessor for TipAlignmentKey()
{
  sub_100098884();
}

void type metadata accessor for HeaderLineLimitKey()
{
  sub_100098884();
}

void type metadata accessor for CompressedLocationHeaderHeightKey()
{
  sub_100098884();
}

uint64_t sub_1001B91A8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_100075EB0(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001B91FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8;

  v8 = sub_1001B93A0();
  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

uint64_t sub_1001B924C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8;

  v8 = sub_1001B9488();
  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

void type metadata accessor for PerformanceTestFeaturesKey()
{
  sub_100098884();
}

unint64_t sub_1001B92A8()
{
  unint64_t result;

  result = qword_100BC5B40;
  if (!qword_100BC5B40)
  {
    result = swift_getWitnessTable(&unk_10098002C, &unk_100B607F0);
    atomic_store(result, (unint64_t *)&qword_100BC5B40);
  }
  return result;
}

ValueMetadata *type metadata accessor for UseLargerLayoutKey()
{
  return &type metadata for UseLargerLayoutKey;
}

void type metadata accessor for IsMapPinnedToTopKey()
{
  sub_100098884();
}

ValueMetadata *type metadata accessor for ForegroundEffectKey()
{
  return &type metadata for ForegroundEffectKey;
}

void type metadata accessor for MapPresentationStyleKey()
{
  sub_100098884();
}

ValueMetadata *type metadata accessor for LocationConditionRequiresAdditionalContrastEnvironmentKey()
{
  return &type metadata for LocationConditionRequiresAdditionalContrastEnvironmentKey;
}

void type metadata accessor for DisplayMetricsKey()
{
  sub_100098884();
}

void type metadata accessor for GridGeometryKey()
{
  sub_100098884();
}

ValueMetadata *type metadata accessor for IsLocationPreviewEnvironmentKey()
{
  return &type metadata for IsLocationPreviewEnvironmentKey;
}

ValueMetadata *type metadata accessor for IsBackgroundDarkKey()
{
  return &type metadata for IsBackgroundDarkKey;
}

unint64_t sub_1001B9364()
{
  unint64_t result;

  result = qword_100BC5B58;
  if (!qword_100BC5B58)
  {
    result = swift_getWitnessTable(&unk_100980334, &unk_100B60950);
    atomic_store(result, (unint64_t *)&qword_100BC5B58);
  }
  return result;
}

unint64_t sub_1001B93A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC5B90;
  if (!qword_100BC5B90)
  {
    v1 = sub_100075EB0(&qword_100BC5B30);
    sub_100086DA4(&qword_100BC5B98, (uint64_t (*)(uint64_t))&type metadata accessor for ForegroundEffect, (uint64_t)&protocol conformance descriptor for ForegroundEffect);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_100BC5B90);
  }
  return result;
}

unint64_t sub_1001B941C()
{
  unint64_t result;

  result = qword_100BC5BA0;
  if (!qword_100BC5BA0)
  {
    result = swift_getWitnessTable(&unk_10098028C, &unk_100B608F0);
    atomic_store(result, (unint64_t *)&qword_100BC5BA0);
  }
  return result;
}

void type metadata accessor for LocationComponentContainerWidthEnvironmentKey()
{
  sub_100098884();
}

void type metadata accessor for WeatherBackgroundOrientationKey()
{
  sub_100098884();
}

void type metadata accessor for AnimatedBackgroundsDisabledKey()
{
  sub_100098884();
}

void type metadata accessor for MapSupportsScaleAnimationsEnvironmentKey()
{
  sub_100098884();
}

unint64_t sub_1001B9488()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC5BB8;
  if (!qword_100BC5BB8)
  {
    v1 = sub_100075EB0(&qword_100BC5BC0);
    sub_100116BFC();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_100BC5BB8);
  }
  return result;
}

unint64_t sub_1001B94EC()
{
  unint64_t result;

  result = qword_100BC5BC8;
  if (!qword_100BC5BC8)
  {
    result = swift_getWitnessTable(&unk_10098039C, &type metadata for LocationComponentContentWidthPreferenceKey);
    atomic_store(result, (unint64_t *)&qword_100BC5BC8);
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationComponentContentWidthPreferenceKey()
{
  return &type metadata for LocationComponentContentWidthPreferenceKey;
}

unint64_t sub_1001B9538()
{
  unint64_t result;

  result = qword_100BC5BD0;
  if (!qword_100BC5BD0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SearchOverlayVisibilityKey, &type metadata for SearchOverlayVisibilityKey);
    atomic_store(result, (unint64_t *)&qword_100BC5BD0);
  }
  return result;
}

ValueMetadata *type metadata accessor for ComparisonBarView()
{
  return &type metadata for ComparisonBarView;
}

uint64_t sub_1001B958C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AA9FF4, 1);
}

uint64_t sub_1001B959C@<X0>(double *a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  uint64_t v4;

  *a1 = a2;
  a1[1] = a3;
  v4 = sub_1000BA294(&qword_100BC5BD8);
  return sub_1001B95D4((uint64_t)a1 + *(int *)(v4 + 44));
}

uint64_t sub_1001B95D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;

  v28 = a1;
  v1 = type metadata accessor for Capsule(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1000BA294(&qword_100BC5BE0);
  __chkstk_darwin(v4);
  v27 = (uint64_t)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v27 - v7;
  __chkstk_darwin(v9);
  v11 = (char *)&v27 - v10;
  __chkstk_darwin(v12);
  v14 = (char *)&v27 - v13;
  v15 = enum case for RoundedCornerStyle.continuous(_:);
  v16 = type metadata accessor for RoundedCornerStyle(0);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104);
  v18 = v17(v3, v15, v16);
  v19 = static Color.black.getter(v18);
  v20 = Color.opacity(_:)(0.2);
  swift_release(v19);
  sub_1001B981C((uint64_t)v3, (uint64_t)v11);
  *(_QWORD *)&v11[*(int *)(v4 + 52)] = v20;
  *(_WORD *)&v11[*(int *)(v4 + 56)] = 256;
  sub_1001B9860((uint64_t)v3);
  sub_1001B989C((uint64_t)v11, (uint64_t)v14);
  v21 = v17(v3, v15, v16);
  v22 = static Color.cyan.getter(v21);
  sub_1001B981C((uint64_t)v3, (uint64_t)v8);
  *(_QWORD *)&v8[*(int *)(v4 + 52)] = v22;
  *(_WORD *)&v8[*(int *)(v4 + 56)] = 256;
  sub_1001B9860((uint64_t)v3);
  sub_1001B989C((uint64_t)v8, (uint64_t)v11);
  sub_1001B98E4((uint64_t)v14, (uint64_t)v8);
  v23 = v27;
  sub_1001B98E4((uint64_t)v11, v27);
  v24 = v28;
  sub_1001B98E4((uint64_t)v8, v28);
  v25 = sub_1000BA294(&qword_100BC5BE8);
  sub_1001B98E4(v23, v24 + *(int *)(v25 + 48));
  sub_1001B992C((uint64_t)v11);
  sub_1001B992C((uint64_t)v14);
  sub_1001B992C(v23);
  return sub_1001B992C((uint64_t)v8);
}

uint64_t sub_1001B9814@<X0>(double *a1@<X8>)
{
  double *v1;

  return sub_1001B959C(a1, *v1, v1[1]);
}

uint64_t sub_1001B981C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Capsule(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001B9860(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Capsule(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001B989C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BC5BE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001B98E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BC5BE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001B992C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1000BA294(&qword_100BC5BE0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for ComparisonBarViewLayout()
{
  return &type metadata for ComparisonBarViewLayout;
}

unint64_t sub_1001B9980()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC5BF0;
  if (!qword_100BC5BF0)
  {
    v1 = sub_100075EB0(&qword_100BC5BD8);
    sub_10005F124(&qword_100BC5BF8, &qword_100BC5C00, (uint64_t)&protocol conformance descriptor for _LayoutRoot<A>);
    sub_10005F124(&qword_100BC5C08, &qword_100BC5C10, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _VariadicView.Tree<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BC5BF0);
  }
  return result;
}

double sub_1001B9A1C(uint64_t a1, char a2)
{
  double result;

  result = *(double *)&a1;
  if ((a2 & 1) != 0)
    return 10.0;
  return result;
}

uint64_t sub_1001B9A3C(uint64_t a1, char a2, uint64_t a3, char a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  __n128 v26;
  unint64_t v27;
  __n128 v28;
  unsigned __int8 v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  __n128 v33;
  unint64_t v34;
  __n128 v35;
  void (*v36)(_BYTE *, uint64_t);
  _BYTE v38[32];

  v18 = type metadata accessor for LayoutSubview(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = __chkstk_darwin(v18);
  v22 = &v38[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v20);
  v24 = &v38[-v23];
  LayoutSubviews.subscript.getter(0);
  v25 = LayoutSubviews.subscript.getter(1);
  v26.n128_u64[0] = static UnitPoint.topLeading.getter(v25);
  v28.n128_u64[0] = v27;
  v29 = a4 & 1;
  if ((a4 & 1) != 0)
    v30 = 0x4024000000000000;
  else
    v30 = a3;
  v38[24] = a2 & 1;
  v38[16] = v29;
  if ((a2 & 1) != 0)
    v31 = 10.0;
  else
    v31 = *(double *)&a1;
  v32 = LayoutSubview.place(at:anchor:proposal:)(a1, a2 & 1, a3, v29, a5, a6, v26, v28);
  v33.n128_u64[0] = static UnitPoint.topLeading.getter(v32);
  v35.n128_u64[0] = v34;
  v38[8] = 0;
  v38[0] = 0;
  ((void (*)(_QWORD, _QWORD, _QWORD, _QWORD, double, double, __n128, __n128))LayoutSubview.place(at:anchor:proposal:))(v31 * a9, 0, v30, 0, v31 * a10 + a5, a6, v33, v35);
  v36 = *(void (**)(_BYTE *, uint64_t))(v19 + 8);
  v36(v22, v18);
  return ((uint64_t (*)(_BYTE *, uint64_t))v36)(v24, v18);
}

double sub_1001B9BD4(uint64_t a1, char a2)
{
  return sub_1001B9A1C(a1, a2 & 1);
}

uint64_t sub_1001B9BF0(uint64_t a1, char a2, uint64_t a3, char a4, double a5, double a6, double a7, double a8)
{
  double *v8;

  return sub_1001B9A3C(a1, a2 & 1, a3, a4 & 1, a5, a6, a7, a8, *v8, v8[1]);
}

void sub_1001B9C0C()
{
  LocationSearchEntityFromStringResolver.init()();
}

unint64_t sub_1001B9C18()
{
  unint64_t result;

  result = qword_100BC5C18;
  if (!qword_100BC5C18)
  {
    result = swift_getWitnessTable(&unk_100980468, &type metadata for ComparisonBarViewLayout);
    atomic_store(result, (unint64_t *)&qword_100BC5C18);
  }
  return result;
}

_QWORD *sub_1001B9C54(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v8 = a2[5];
    v9 = a2[6];
    v4[5] = v8;
    v4[6] = v9;
    v10 = a2[8];
    v4[7] = a2[7];
    v4[8] = v10;
    v11 = a2[9];
    v12 = a2[10];
    v13 = *(int *)(a3 + 36);
    v14 = (uint64_t *)((char *)a2 + v13);
    v15 = (_QWORD *)((char *)v4 + v13);
    v4[9] = v11;
    v4[10] = v12;
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRetain(v10);
    swift_bridgeObjectRetain(v12);
    v16 = sub_1000BA294((uint64_t *)&unk_100C09CD0);
    if (swift_getEnumCaseMultiPayload(v14) == 1)
    {
      v17 = type metadata accessor for UserInterfaceSizeClass(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v17))
      {
        v18 = sub_1000BA294(&qword_100BC5A68);
        memcpy(v15, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v14, v17);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v17);
      }
      v20 = v15;
      v21 = v16;
      v22 = 1;
    }
    else
    {
      *v15 = *v14;
      swift_retain();
      v20 = v15;
      v21 = v16;
      v22 = 0;
    }
    swift_storeEnumTagMultiPayload(v20, v21, v22);
  }
  return v4;
}

void sub_1001B9DE0(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = (_QWORD *)((char *)a1 + *(int *)(a2 + 36));
  sub_1000BA294((uint64_t *)&unk_100C09CD0);
  if (swift_getEnumCaseMultiPayload(v4) == 1)
  {
    v5 = type metadata accessor for UserInterfaceSizeClass(0);
    if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v4, 1, v5))
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release(*v4);
  }
}

uint64_t sub_1001B9E98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  v9 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v9;
  v10 = *(_QWORD *)(a2 + 80);
  v11 = *(int *)(a3 + 36);
  v12 = (_QWORD *)(a2 + v11);
  v13 = (_QWORD *)(a1 + v11);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v10;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v10);
  v14 = sub_1000BA294((uint64_t *)&unk_100C09CD0);
  if (swift_getEnumCaseMultiPayload(v12) == 1)
  {
    v15 = type metadata accessor for UserInterfaceSizeClass(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v15))
    {
      v16 = sub_1000BA294(&qword_100BC5A68);
      memcpy(v13, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      v17 = 1;
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v12, v15);
      v17 = 1;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
    }
  }
  else
  {
    *v13 = *v12;
    swift_retain();
    v17 = 0;
  }
  swift_storeEnumTagMultiPayload(v13, v14, v17);
  return a1;
}

_QWORD *sub_1001B9FF0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_100094D04(a1, a2);
  v6 = a2[5];
  a1[5] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease();
  v7 = a2[6];
  a1[6] = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  v8 = a2[8];
  a1[8] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  v9 = a2[10];
  a1[10] = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v10 = *(int *)(a3 + 36);
    v11 = (_QWORD *)((char *)a1 + v10);
    v12 = (_QWORD *)((char *)a2 + v10);
    sub_100021AA4((uint64_t)a1 + v10, (uint64_t *)&unk_100C09CD0);
    v13 = sub_1000BA294((uint64_t *)&unk_100C09CD0);
    if (swift_getEnumCaseMultiPayload(v12) == 1)
    {
      v14 = type metadata accessor for UserInterfaceSizeClass(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v14))
      {
        v15 = sub_1000BA294(&qword_100BC5A68);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
        v16 = 1;
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v11, v12, v14);
        v16 = 1;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v14);
      }
    }
    else
    {
      *v11 = *v12;
      swift_retain();
      v16 = 0;
    }
    swift_storeEnumTagMultiPayload(v11, v13, v16);
  }
  return a1;
}

uint64_t sub_1001BA180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v5 = *(int *)(a3 + 36);
  v6 = (void *)(a1 + v5);
  v7 = (const void *)(a2 + v5);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v8 = sub_1000BA294((uint64_t *)&unk_100C09CD0);
  if (swift_getEnumCaseMultiPayload(v7) == 1)
  {
    v9 = type metadata accessor for UserInterfaceSizeClass(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v9))
    {
      v10 = sub_1000BA294(&qword_100BC5A68);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v6, v7, v9);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v6, 0, 1, v9);
    }
    swift_storeEnumTagMultiPayload(v6, v8, 1);
  }
  else
  {
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1001BA2A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v9;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v10 = *(int *)(a3 + 36);
    v11 = (void *)(a1 + v10);
    v12 = (const void *)(a2 + v10);
    sub_100021AA4(a1 + v10, (uint64_t *)&unk_100C09CD0);
    v13 = sub_1000BA294((uint64_t *)&unk_100C09CD0);
    if (swift_getEnumCaseMultiPayload(v12) == 1)
    {
      v14 = type metadata accessor for UserInterfaceSizeClass(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v14))
      {
        v15 = sub_1000BA294(&qword_100BC5A68);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v11, v12, v14);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v14);
      }
      swift_storeEnumTagMultiPayload(v11, v13, 1);
    }
    else
    {
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1001BA404(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001BA410);
}

void sub_1001BA410(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    sub_10003BCA4(*(_QWORD *)(a1 + 24));
    sub_100079F70();
  }
  else
  {
    v6 = sub_1000BA294((uint64_t *)&unk_100C09CB0);
    sub_1000B250C(a1 + *(int *)(a3 + 36), a2, v6);
  }
}

uint64_t sub_1001BA46C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001BA478);
}

void sub_1001BA478(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(a1 + 24) = (a2 - 1);
    sub_100079F70();
  }
  else
  {
    v7 = sub_1000BA294((uint64_t *)&unk_100C09CB0);
    sub_1000987C4(a1 + *(int *)(a4 + 36), a2, a2, v7);
  }
}

uint64_t type metadata accessor for SearchResultsView(uint64_t a1)
{
  return sub_100098190(a1, (uint64_t *)&unk_100BC5C78, (uint64_t)&nominal type descriptor for SearchResultsView);
}

void sub_1001BA4EC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = "(";
  v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[3] = &unk_100980560;
  v4[4] = &unk_100980560;
  sub_100158AF0(319);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 6, v4, a1 + 16);
  }
}

uint64_t sub_1001BA57C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AAA098, 1);
}

void sub_1001BA58C(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  double v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __int128 v91[2];
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;

  v2 = v1;
  v90 = a1;
  v3 = (int *)sub_1000D93E4();
  sub_1000B42B0();
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v88 = sub_1000BA294(&qword_100BC5CC8);
  sub_1000B42B0();
  __chkstk_darwin(v7);
  v9 = (char *)&v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v85 = (uint64_t)&v82 - v11;
  v12 = sub_1000BA294(&qword_100BC5CD0);
  sub_1000B42B0();
  __chkstk_darwin(v13);
  v15 = (char *)&v82 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = sub_1000BA294(&qword_100BC5CD8);
  sub_1000B42B0();
  __chkstk_darwin(v16);
  sub_100088FDC();
  v87 = v17;
  v18 = sub_1000BA294(&qword_100BC5CE0);
  sub_1000B42B0();
  __chkstk_darwin(v19);
  sub_100088FDC();
  v89 = v20;
  sub_1000BA294(&qword_100BC5A68);
  sub_1000B42B0();
  __chkstk_darwin(v21);
  v23 = (char *)&v82 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v26 = (char *)&v82 - v25;
  v27 = type metadata accessor for SearchResultsView(0);
  sub_10011AA68(v27);
  v28 = type metadata accessor for UserInterfaceSizeClass(0);
  v29 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v28);
  if ((_DWORD)v29 == 1)
  {
    v98 = 0;
    sub_1000DD718(v29, (uint64_t)&type metadata for EmptyView, v30, (uint64_t)&protocol witness table for EmptyView);
    *v15 = v91[0];
    sub_10009525C((uint64_t)v15, v12);
    v31 = sub_1000BA294(&qword_100BC5CE8);
    v32 = sub_1001BC0B4();
    v33 = sub_1001BC198();
    v34 = (uint64_t)v15;
    v35 = v18;
LABEL_8:
    _ConditionalContent<>.init(storage:)(v34, v35, v31, v32, v33);
    goto LABEL_9;
  }
  v83 = v12;
  v84 = v18;
  sub_100037794((uint64_t)v26, (uint64_t)v23, &qword_100BC5A68);
  v36 = *(_QWORD *)(v28 - 8);
  v37 = (*(uint64_t (**)(char *, uint64_t))(v36 + 88))(v23, v28);
  if (v37 == enum case for UserInterfaceSizeClass.compact(_:))
  {
    sub_1000C5B0C();
    v38 = v2[5];
    v39 = v2[6];
    v40 = v2[7];
    v41 = v2[8];
    *v6 = swift_getKeyPath(&unk_1009805C8);
    v42 = sub_1000BA294((uint64_t *)&unk_100C09CD0);
    swift_storeEnumTagMultiPayload(v6, v42, 0);
    sub_10003C800(v91, (uint64_t)v6 + v3[5]);
    *(_QWORD *)((char *)v6 + v3[6]) = v38;
    *(_QWORD *)((char *)v6 + v3[7]) = v39;
    v43 = (_QWORD *)((char *)v6 + v3[8]);
    *v43 = v40;
    v43[1] = v41;
    swift_bridgeObjectRetain(v38);
    swift_bridgeObjectRetain(v39);
    swift_bridgeObjectRetain(v41);
    LOBYTE(v38) = static Edge.Set.top.getter(v44);
    v45 = EdgeInsets.init(_all:)(6.0);
    v47 = v46;
    v49 = v48;
    v51 = v50;
    sub_10000AB54((uint64_t)v6, (uint64_t)v9, type metadata accessor for SearchResultsList);
    v52 = v88;
    v53 = &v9[*(int *)(v88 + 36)];
    *v53 = v38;
    *((double *)v53 + 1) = v45;
    *((_QWORD *)v53 + 2) = v47;
    *((_QWORD *)v53 + 3) = v49;
    *((_QWORD *)v53 + 4) = v51;
    v53[40] = 0;
    sub_1001BC1FC((uint64_t)v6);
    v54 = (uint64_t)v9;
    v55 = v85;
    sub_1000F111C(v54, v85, &qword_100BC5CC8);
    v56 = v87;
    sub_100037794(v55, v87, &qword_100BC5CC8);
    sub_10009525C(v56, v86);
    v57 = sub_1001BC0D8();
    v58 = sub_1001BC114();
    v59 = v89;
    _ConditionalContent<>.init(storage:)(v56, &type metadata for RegularSearchResultsView, v52, v57, v58);
    sub_1000DB750(v59);
    sub_1000CC828();
    v60 = sub_1000BA294(&qword_100BC5CE8);
    v61 = sub_1001BC0B4();
    sub_1001BC198();
    v62 = sub_1000BBC10();
    _ConditionalContent<>.init(storage:)(v62, v63, v60, v61, v64);
    sub_100021AA4(v59, &qword_100BC5CE0);
    sub_100021AA4(v55, &qword_100BC5CC8);
  }
  else
  {
    if (v37 != enum case for UserInterfaceSizeClass.regular(_:))
    {
      v80 = (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v23, v28);
      v98 = 1;
      sub_1000DD718(v80, (uint64_t)&type metadata for EmptyView, v81, (uint64_t)&protocol witness table for EmptyView);
      *v15 = v91[0];
      sub_10009525C((uint64_t)v15, v83);
      v31 = sub_1000BA294(&qword_100BC5CE8);
      v32 = sub_1001BC0B4();
      sub_1001BC198();
      v34 = sub_1000BBC10();
      goto LABEL_8;
    }
    sub_1000C5B0C();
    v65 = v2[5];
    v66 = v2[6];
    v67 = v2[7];
    v68 = v2[8];
    v69 = v2[9];
    v70 = v2[10];
    v92 = v65;
    v93 = v66;
    v94 = v67;
    v95 = v68;
    v96 = v69;
    v97 = v70;
    v71 = v87;
    sub_1001BC238((uint64_t)v91, v87);
    swift_storeEnumTagMultiPayload(v71, v86, 0);
    v72 = sub_1001BC0D8();
    v73 = sub_1001BC114();
    swift_bridgeObjectRetain(v65);
    swift_bridgeObjectRetain(v66);
    swift_bridgeObjectRetain(v68);
    swift_bridgeObjectRetain(v70);
    v74 = v89;
    _ConditionalContent<>.init(storage:)(v71, &type metadata for RegularSearchResultsView, v88, v72, v73);
    sub_1000DB750(v74);
    sub_1000CC828();
    v75 = sub_1000BA294(&qword_100BC5CE8);
    v76 = sub_1001BC0B4();
    sub_1001BC198();
    v77 = sub_1000BBC10();
    _ConditionalContent<>.init(storage:)(v77, v78, v75, v76, v79);
    sub_100021AA4(v74, &qword_100BC5CE0);
    sub_1001BC26C(v91);
  }
LABEL_9:
  sub_100021AA4((uint64_t)v26, &qword_100BC5A68);
}

uint64_t type metadata accessor for SearchResultsList(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC5D70, (uint64_t)&nominal type descriptor for SearchResultsList);
}

double sub_1001BAB54@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v4;

  *(_QWORD *)a2 = static HorizontalAlignment.leading.getter(a1);
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 0;
  v4 = sub_1000BA294(&qword_100BC5DC8);
  return sub_1001BAB98(v2, a2 + *(int *)(v4 + 44));
}

double sub_1001BAB98@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t KeyPath;
  uint64_t v49;
  uint64_t v50;
  int *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  double result;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  char v88;
  __int128 v89;
  char v90;
  uint64_t v91;
  char v92;
  __int128 v93;
  __int128 v94;
  char v95;
  _QWORD *v96[6];

  v80 = a2;
  v76 = type metadata accessor for SearchResultsList(0);
  __chkstk_darwin(v76);
  v75 = (uint64_t *)((char *)&v66 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v79 = sub_1000BA294(&qword_100BC5DD0);
  __chkstk_darwin(v79);
  v77 = (uint64_t *)((char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  v78 = (uint64_t)&v66 - v6;
  v71 = type metadata accessor for Divider(0);
  v70 = *(_QWORD *)(v71 - 8);
  __chkstk_darwin(v71);
  v67 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_1000BA294(&qword_100BC5DD8);
  __chkstk_darwin(v68);
  v81 = (uint64_t *)((char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  v82 = (uint64_t)&v66 - v10;
  v11 = a1[10];
  *(_QWORD *)&v89 = a1[9];
  *((_QWORD *)&v89 + 1) = v11;
  v12 = sub_100114EF8();
  swift_bridgeObjectRetain(v11);
  v13 = Text.init<A>(_:)(&v89, &type metadata for String, v12);
  v15 = v14;
  v17 = v16;
  v19 = v18 & 1;
  v20 = static Font.largeTitle.getter(v13);
  static Font.Weight.bold.getter(v20);
  v21 = Font.weight(_:)(v20);
  swift_release(v20);
  v22 = Text.font(_:)(v21, v13, v15, v19, v17);
  v24 = v23;
  v26 = v25;
  v28 = v27;
  swift_release(v21);
  v29 = v26 & 1;
  sub_1000D31B4(v13, v15, v19);
  v30 = swift_bridgeObjectRelease();
  v31 = static Color.primary.getter(v30);
  v73 = Text.foregroundColor(_:)(v31, v22, v24, v29, v28);
  v72 = v32;
  LOBYTE(v17) = v33;
  v74 = v34;
  swift_release(v31);
  LOBYTE(v17) = v17 & 1;
  sub_1000D31B4(v22, v24, v29);
  swift_bridgeObjectRelease();
  v36 = static Edge.Set.leading.getter(v35);
  v69 = v36;
  v37 = v67;
  v38 = Divider.init()(v36);
  LOBYTE(v29) = static Edge.Set.leading.getter(v38);
  v39 = v70;
  v40 = (uint64_t)v81;
  v41 = v71;
  (*(void (**)(_QWORD *, char *, uint64_t))(v70 + 16))(v81, v37, v71);
  v42 = v40 + *(int *)(v68 + 36);
  *(_BYTE *)v42 = v29;
  *(_OWORD *)(v42 + 8) = 0u;
  *(_OWORD *)(v42 + 24) = 0u;
  *(_BYTE *)(v42 + 40) = 1;
  (*(void (**)(char *, uint64_t))(v39 + 8))(v37, v41);
  v43 = v82;
  sub_1000F111C(v40, v82, &qword_100BC5DD8);
  sub_100043CA8((uint64_t)a1, (uint64_t)&v89);
  v44 = a1[5];
  v45 = a1[6];
  v47 = a1[7];
  v46 = a1[8];
  KeyPath = swift_getKeyPath(&unk_1009805C8);
  v49 = (uint64_t)v75;
  *v75 = KeyPath;
  v50 = sub_1000BA294((uint64_t *)&unk_100C09CD0);
  swift_storeEnumTagMultiPayload(v49, v50, 0);
  v51 = (int *)v76;
  sub_10003C800(&v89, v49 + *(int *)(v76 + 20));
  *(_QWORD *)(v49 + v51[6]) = v44;
  *(_QWORD *)(v49 + v51[7]) = v45;
  v52 = (_QWORD *)(v49 + v51[8]);
  *v52 = v47;
  v52[1] = v46;
  swift_bridgeObjectRetain(v44);
  swift_bridgeObjectRetain(v45);
  swift_bridgeObjectRetain(v46);
  v54 = static Font.body.getter(v53);
  static Font.Weight.bold.getter(v54);
  v55 = Font.weight(_:)(v54);
  swift_release(v54);
  v56 = swift_getKeyPath(&unk_1009806E0);
  v57 = v77;
  sub_10000AB54(v49, (uint64_t)v77, type metadata accessor for SearchResultsList);
  v58 = (_QWORD *)((char *)v57 + *(int *)(v79 + 36));
  *v58 = v56;
  v58[1] = v55;
  sub_1001BC1FC(v49);
  v59 = v78;
  sub_1000F111C((uint64_t)v57, v78, &qword_100BC5DD0);
  v60 = v73;
  v61 = v72;
  *(_QWORD *)&v89 = v73;
  *((_QWORD *)&v89 + 1) = v72;
  v90 = v17;
  v62 = v74;
  v91 = v74;
  v92 = v69;
  v93 = 0u;
  v94 = 0u;
  v95 = 1;
  v87 = 0;
  v88 = 1;
  v96[0] = &v89;
  v96[1] = &v87;
  v63 = v43;
  v64 = v81;
  sub_100037794(v63, (uint64_t)v81, &qword_100BC5DD8);
  v85 = 0;
  v86 = 1;
  v96[2] = v64;
  v96[3] = &v85;
  v83 = 0;
  v84 = 1;
  v96[4] = &v83;
  sub_100037794(v59, (uint64_t)v57, &qword_100BC5DD0);
  v96[5] = v57;
  sub_10035D624(v96, v80);
  sub_1000D55D4(v60, v61, v17);
  swift_bridgeObjectRetain(v62);
  sub_100021AA4(v59, &qword_100BC5DD0);
  sub_100021AA4(v82, &qword_100BC5DD8);
  sub_1000D31B4(v60, v61, v17);
  swift_bridgeObjectRelease();
  sub_100021AA4((uint64_t)v57, &qword_100BC5DD0);
  sub_100021AA4((uint64_t)v64, &qword_100BC5DD8);
  sub_1000D31B4(v89, *((uint64_t *)&v89 + 1), v90);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

double sub_1001BB15C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  double result;
  uint64_t v19;
  char v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;

  v0 = type metadata accessor for UserInterfaceSizeClass(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1000BA294(&qword_100BC5E60);
  __chkstk_darwin(v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000BA294(&qword_100BC5A68);
  __chkstk_darwin(v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v22 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)&v22 - v14;
  sub_10011AA68(v16);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v12, enum case for UserInterfaceSizeClass.compact(_:), v0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v0);
  v17 = (uint64_t)&v6[*(int *)(v4 + 48)];
  sub_100037794((uint64_t)v15, (uint64_t)v6, &qword_100BC5A68);
  sub_100037794((uint64_t)v12, v17, &qword_100BC5A68);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v0) == 1)
  {
    sub_100021AA4((uint64_t)v12, &qword_100BC5A68);
    sub_100021AA4((uint64_t)v15, &qword_100BC5A68);
    if (_s7Weather24LocationCompositionStateOwet_0(v17, 1, v0) == 1)
    {
      sub_100021AA4((uint64_t)v6, &qword_100BC5A68);
      return 20.0;
    }
  }
  else
  {
    sub_100037794((uint64_t)v6, (uint64_t)v9, &qword_100BC5A68);
    if (_s7Weather24LocationCompositionStateOwet_0(v17, 1, v0) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v1 + 32))(v3, v17, v0);
      sub_10000F1C8(&qword_100BC5AB8, (uint64_t (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
      v20 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v3, v0, v19);
      v21 = *(void (**)(char *, uint64_t))(v1 + 8);
      v21(v3, v0);
      sub_100021AA4((uint64_t)v12, &qword_100BC5A68);
      sub_100021AA4((uint64_t)v15, &qword_100BC5A68);
      v21(v9, v0);
      sub_100021AA4((uint64_t)v6, &qword_100BC5A68);
      result = 20.0;
      if ((v20 & 1) != 0)
        return result;
      return 16.0;
    }
    sub_100021AA4((uint64_t)v12, &qword_100BC5A68);
    sub_100021AA4((uint64_t)v15, &qword_100BC5A68);
    (*(void (**)(char *, uint64_t))(v1 + 8))(v9, v0);
  }
  sub_100021AA4((uint64_t)v6, &qword_100BC5E60);
  return 16.0;
}

uint64_t sub_1001BB458(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = static Axis.Set.vertical.getter(a1);
  v2 = sub_1000BA294(&qword_100BC5DE0);
  sub_10003D2DC(&qword_100BC5DE8, &qword_100BC5DE0);
  return ScrollView.init(_:showsIndicators:content:)(v1, 1, sub_1001BCF00, &v5, v2, v3);
}

void sub_1001BB4E0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  *(_QWORD *)a2 = static HorizontalAlignment.leading.getter(a1);
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 0;
  v4 = sub_1000BA294(&qword_100BC5DF0);
  sub_1001BB528(a1, a2 + *(int *)(v4 + 44));
}

void sub_1001BB528(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  double v60;
  double v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t KeyPath;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char v85;
  double v86;
  double v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  void (*v108)(char *, char *, uint64_t);
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void (*v116)(char *, uint64_t);
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  void (*v130)(char *, char *, uint64_t);
  uint64_t v131;
  uint64_t v132;
  void (*v133)(char *, uint64_t);
  uint64_t v134;
  uint64_t v135;
  int v136;
  int v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char v163[24];

  v162 = a1;
  v155 = a2;
  v2 = sub_1000BA294(&qword_100BC5DF8);
  v154 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v134 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v134 - v6;
  v147 = type metadata accessor for Divider(0);
  v146 = *(_QWORD *)(v147 - 8);
  __chkstk_darwin(v147);
  v145 = (char *)&v134 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = sub_1000BA294(&qword_100BC5DD8);
  __chkstk_darwin(v148);
  v144 = (char *)&v134 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1000BA294(&qword_100BC5E00);
  __chkstk_darwin(v10);
  v158 = (uint64_t)&v134 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v151 = (uint64_t)&v134 - v13;
  v14 = type metadata accessor for SearchResultsList(0);
  v160 = *(_QWORD *)(v14 - 8);
  v15 = *(_QWORD *)(v160 + 64);
  __chkstk_darwin(v14);
  v161 = (uint64_t)&v134 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v150 = sub_1000BA294(&qword_100BC5E08);
  v157 = *(_QWORD *)(v150 - 8);
  __chkstk_darwin(v150);
  v149 = (char *)&v134 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v156 = (char *)&v134 - v18;
  v19 = type metadata accessor for Font.TextStyle(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v134 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1000BA294(&qword_100BC5E10);
  __chkstk_darwin(v23);
  v25 = (char *)&v134 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v28 = (char *)&v134 - v27;
  v159 = v14;
  v29 = *(int *)(v14 + 24);
  v30 = *(_QWORD *)(*(_QWORD *)(v162 + v29) + 16);
  v153 = v7;
  if (v30)
  {
    v141 = (char *)&v134 - v27;
    v142 = v4;
    v143 = v2;
    v135 = v29;
    v31 = LocalizedStringKey.init(stringLiteral:)(0x6574736567677553, 0xE900000000000064);
    v35 = Text.init(_:tableName:bundle:comment:)(v31, v33, v32 & 1, v34, 0, 0, 0, 0);
    v37 = v36;
    v39 = v38;
    v41 = v40 & 1;
    v42 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v20 + 104))(v22, enum case for Font.TextStyle.subheadline(_:), v19);
    static Font.Weight.medium.getter(v42);
    v43 = static Font.system(_:weight:)(v22);
    v152 = v15;
    v44 = v43;
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    v45 = Font.smallCaps()(v44);
    swift_release(v44);
    v46 = Text.font(_:)(v45, v35, v37, v41, v39);
    v48 = v47;
    v50 = v49;
    v52 = v51;
    swift_release(v45);
    sub_1000D31B4(v35, v37, v41);
    swift_bridgeObjectRelease();
    v53 = objc_msgSend((id)objc_opt_self(UIColor), "tertiaryLabelColor");
    v54 = Color.init(_:)(v53);
    *(_QWORD *)v163 = v54;
    v139 = Text.foregroundStyle<A>(_:)(v163, v46, v48, v50 & 1, v52, &type metadata for Color, &protocol witness table for Color);
    v138 = v55;
    v137 = v56;
    v140 = v57;
    sub_1000D31B4(v46, v48, v50 & 1);
    swift_release(v54);
    swift_bridgeObjectRelease();
    v136 = static Edge.Set.horizontal.getter(v58);
    v59 = v162;
    v60 = sub_1001BB15C();
    v61 = EdgeInsets.init(_all:)(v60);
    v63 = v62;
    v65 = v64;
    v67 = v66;
    *(_QWORD *)v163 = *(_QWORD *)(v59 + v135);
    v68 = *(_QWORD *)v163;
    KeyPath = swift_getKeyPath(&unk_100980710);
    v70 = v161;
    sub_10000AB54(v59, v161, type metadata accessor for SearchResultsList);
    v71 = *(unsigned __int8 *)(v160 + 80);
    v72 = (v71 + 16) & ~v71;
    v73 = swift_allocObject(&unk_100B60C10, v72 + v152, v71 | 7);
    sub_1001BCF10(v70, v73 + v72);
    swift_bridgeObjectRetain(v68);
    v74 = sub_1000BA294(&qword_100BC5E18);
    v75 = type metadata accessor for SuggestedSearchResultRowView(0);
    sub_10003D2DC(&qword_100BC5E20, &qword_100BC5E18);
    v77 = v76;
    sub_10000F1C8(&qword_100BC3120, (uint64_t (*)(uint64_t))&type metadata accessor for LocationOfInterestType);
    v79 = v78;
    sub_10000F1C8(&qword_100BC5E28, type metadata accessor for SuggestedSearchResultRowView);
    v80 = v156;
    v82 = ForEach<>.init(_:id:content:)(v163, KeyPath, sub_1001BCF54, v73, v74, v75, v77, v79, v81);
    if (*(_QWORD *)(*(_QWORD *)(v59 + *(int *)(v159 + 28)) + 16))
    {
      v83 = v145;
      v84 = Divider.init()(v82);
      v85 = static Edge.Set.horizontal.getter(v84);
      v86 = sub_1001BB15C();
      v87 = EdgeInsets.init(_all:)(v86);
      v89 = v88;
      v91 = v90;
      v93 = v92;
      v94 = v146;
      v95 = v144;
      v96 = v147;
      (*(void (**)(char *, char *, uint64_t))(v146 + 16))(v144, v83, v147);
      v97 = v148;
      v98 = &v95[*(int *)(v148 + 36)];
      *v98 = v85;
      *((double *)v98 + 1) = v87;
      *((_QWORD *)v98 + 2) = v89;
      *((_QWORD *)v98 + 3) = v91;
      *((_QWORD *)v98 + 4) = v93;
      v98[40] = 0;
      (*(void (**)(char *, uint64_t))(v94 + 8))(v83, v96);
      v99 = (uint64_t)v95;
      v100 = v151;
      sub_1000F111C(v99, v151, &qword_100BC5DD8);
      v101 = 0;
    }
    else
    {
      v101 = 1;
      v100 = v151;
      v97 = v148;
    }
    _s7Weather24LocationCompositionStateOwst_0(v100, v101, 1, v97);
    v107 = v137 & 1;
    v163[0] = v137 & 1;
    v108 = *(void (**)(char *, char *, uint64_t))(v157 + 16);
    v109 = v149;
    v110 = v150;
    v108(v149, v80, v150);
    sub_100037794(v100, v158, &qword_100BC5E00);
    v111 = v139;
    v112 = v138;
    *(_QWORD *)v25 = v139;
    *((_QWORD *)v25 + 1) = v112;
    v25[16] = v107;
    v113 = v140;
    *((_QWORD *)v25 + 3) = v140;
    v25[32] = v136;
    *((double *)v25 + 5) = v61;
    *((_QWORD *)v25 + 6) = v63;
    *((_QWORD *)v25 + 7) = v65;
    *((_QWORD *)v25 + 8) = v67;
    v25[72] = 0;
    v114 = sub_1000BA294(&qword_100BC5E30);
    v108(&v25[*(int *)(v114 + 48)], v109, v110);
    v115 = v158;
    sub_100037794(v158, (uint64_t)&v25[*(int *)(v114 + 64)], &qword_100BC5E00);
    sub_1000D55D4(v111, v112, v107);
    swift_bridgeObjectRetain(v113);
    sub_1000D55D4(v111, v112, v107);
    swift_bridgeObjectRetain(v113);
    sub_100021AA4(v100, &qword_100BC5E00);
    v116 = *(void (**)(char *, uint64_t))(v157 + 8);
    v116(v156, v110);
    sub_1000D31B4(v111, v112, v107);
    swift_bridgeObjectRelease();
    sub_100021AA4(v115, &qword_100BC5E00);
    v116(v109, v110);
    sub_1000D31B4(v111, v112, v163[0]);
    swift_bridgeObjectRelease();
    v117 = sub_1000BA294(&qword_100BC5E38);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v117);
    v28 = v141;
    sub_1000F111C((uint64_t)v25, (uint64_t)v141, &qword_100BC5E10);
    v2 = v143;
    v4 = v142;
    v106 = v160;
    v104 = v161;
    v15 = v152;
    v105 = v159;
    v103 = v162;
  }
  else
  {
    v102 = sub_1000BA294(&qword_100BC5E38);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 1, 1, v102);
    v104 = v161;
    v103 = v162;
    v105 = v159;
    v106 = v160;
  }
  *(_QWORD *)v163 = *(_QWORD *)(v103 + *(int *)(v105 + 28));
  v118 = *(_QWORD *)v163;
  v119 = swift_getKeyPath(&unk_100980740);
  sub_10000AB54(v103, v104, type metadata accessor for SearchResultsList);
  v120 = *(unsigned __int8 *)(v106 + 80);
  v121 = (v120 + 16) & ~v120;
  v122 = swift_allocObject(&unk_100B60C38, v121 + v15, v120 | 7);
  sub_1001BCF10(v104, v122 + v121);
  swift_bridgeObjectRetain(v118);
  v123 = sub_1000BA294(&qword_100BC5E40);
  v124 = type metadata accessor for SearchResultRowView(0);
  sub_10003D2DC(&qword_100BC5E48, &qword_100BC5E40);
  v126 = v125;
  sub_10000F1C8(&qword_100BC5E50, type metadata accessor for SearchResultRowView);
  v127 = v153;
  ForEach<>.init(_:id:content:)(v163, v119, sub_1001BCF64, v122, v123, v124, v126, &protocol witness table for String, v128);
  sub_100037794((uint64_t)v28, (uint64_t)v25, &qword_100BC5E10);
  v129 = v154;
  v130 = *(void (**)(char *, char *, uint64_t))(v154 + 16);
  v130(v4, v127, v2);
  v131 = v155;
  sub_100037794((uint64_t)v25, v155, &qword_100BC5E10);
  v132 = sub_1000BA294(&qword_100BC5E58);
  v130((char *)(v131 + *(int *)(v132 + 48)), v4, v2);
  v133 = *(void (**)(char *, uint64_t))(v129 + 8);
  v133(v127, v2);
  sub_100021AA4((uint64_t)v28, &qword_100BC5E10);
  v133(v4, v2);
  sub_100021AA4((uint64_t)v25, &qword_100BC5E10);
}

uint64_t sub_1001BBFB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for SearchResultsList(0);
  sub_100043CA8(a2 + *(int *)(v6 + 20), a3);
  v7 = a3 + *(int *)(type metadata accessor for SuggestedSearchResultRowView(0) + 20);
  v8 = type metadata accessor for LocationOfInterest(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v7, a1, v8);
}

double sub_1001BC024@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  double result;

  v6 = type metadata accessor for SearchResultsList(0);
  sub_100043CA8(a2 + *(int *)(v6 + 20), a3);
  v7 = type metadata accessor for SearchResultRowView(0);
  sub_10000AB54(a1, a3 + *(int *)(v7 + 20), type metadata accessor for SearchLocation);
  v8 = (uint64_t *)(a2 + *(int *)(v6 + 32));
  v10 = *v8;
  v9 = v8[1];
  v11 = (_QWORD *)(a3 + *(int *)(v7 + 24));
  *v11 = v10;
  v11[1] = v9;
  *(_QWORD *)&result = swift_bridgeObjectRetain(v9).n128_u64[0];
  return result;
}

uint64_t sub_1001BC0B4()
{
  return sub_1001BCE68(&qword_100BC5CF0, &qword_100BC5CE0, (void (*)(void))sub_1001BC0D8, (void (*)(void))sub_1001BC114);
}

unint64_t sub_1001BC0D8()
{
  unint64_t result;

  result = qword_100BC5CF8;
  if (!qword_100BC5CF8)
  {
    result = swift_getWitnessTable(&unk_10098068C, &type metadata for RegularSearchResultsView);
    atomic_store(result, (unint64_t *)&qword_100BC5CF8);
  }
  return result;
}

unint64_t sub_1001BC114()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC5D00;
  if (!qword_100BC5D00)
  {
    v1 = sub_100075EB0(&qword_100BC5CC8);
    sub_10000F1C8(&qword_100BC5D08, type metadata accessor for SearchResultsList);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BC5D00);
  }
  return result;
}

unint64_t sub_1001BC198()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC5D10;
  if (!qword_100BC5D10)
  {
    v1 = sub_100075EB0(&qword_100BC5CE8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BC5D10);
  }
  return result;
}

uint64_t sub_1001BC1FC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SearchResultsList(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001BC238(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for RegularSearchResultsView(a2, a1);
  return a2;
}

_QWORD *sub_1001BC26C(_QWORD *a1)
{
  destroy for RegularSearchResultsView(a1);
  return a1;
}

uint64_t *sub_1001BC298(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1000BA294((uint64_t *)&unk_100C09CD0);
    if (swift_getEnumCaseMultiPayload(a2) == 1)
    {
      v8 = type metadata accessor for UserInterfaceSizeClass(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v8))
      {
        v9 = sub_1000BA294(&qword_100BC5A68);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v8);
      }
      v11 = a1;
      v12 = v7;
      v13 = 1;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
      v11 = a1;
      v12 = v7;
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v11, v12, v13);
    v14 = a3[5];
    v15 = *(_OWORD *)((char *)a2 + v14 + 24);
    *(_OWORD *)((char *)a1 + v14 + 24) = v15;
    (**(void (***)(void))(v15 - 8))();
    v16 = a3[6];
    v17 = a3[7];
    v18 = *(uint64_t *)((char *)a2 + v16);
    *(uint64_t *)((char *)a1 + v16) = v18;
    v19 = *(uint64_t *)((char *)a2 + v17);
    *(uint64_t *)((char *)a1 + v17) = v19;
    v20 = a3[8];
    v21 = (uint64_t *)((char *)a1 + v20);
    v22 = (uint64_t *)((char *)a2 + v20);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRetain(v19);
    swift_bridgeObjectRetain(v23);
  }
  return a1;
}

double sub_1001BC41C(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  double result;

  sub_1000BA294((uint64_t *)&unk_100C09CD0);
  if (swift_getEnumCaseMultiPayload(a1) == 1)
  {
    v4 = type metadata accessor for UserInterfaceSizeClass(0);
    if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v4))
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release(*a1);
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)((char *)a1 + *(int *)(a2 + 20)));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

_QWORD *sub_1001BC4D4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;

  v6 = sub_1000BA294((uint64_t *)&unk_100C09CD0);
  if (swift_getEnumCaseMultiPayload(a2) == 1)
  {
    v7 = type metadata accessor for UserInterfaceSizeClass(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = sub_1000BA294(&qword_100BC5A68);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
    }
    v9 = a1;
    v10 = v6;
    v11 = 1;
  }
  else
  {
    *a1 = *a2;
    swift_retain();
    v9 = a1;
    v10 = v6;
    v11 = 0;
  }
  swift_storeEnumTagMultiPayload(v9, v10, v11);
  v12 = a3[5];
  v13 = *(_OWORD *)((char *)a2 + v12 + 24);
  *(_OWORD *)((char *)a1 + v12 + 24) = v13;
  (**(void (***)(void))(v13 - 8))();
  v14 = a3[6];
  v15 = a3[7];
  v16 = *(_QWORD *)((char *)a2 + v14);
  *(_QWORD *)((char *)a1 + v14) = v16;
  v17 = *(_QWORD *)((char *)a2 + v15);
  *(_QWORD *)((char *)a1 + v15) = v17;
  v18 = a3[8];
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRetain(v17);
  swift_bridgeObjectRetain(v21);
  return a1;
}

_QWORD *sub_1001BC62C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;

  if (a1 != a2)
  {
    sub_100021AA4((uint64_t)a1, (uint64_t *)&unk_100C09CD0);
    v6 = sub_1000BA294((uint64_t *)&unk_100C09CD0);
    if (swift_getEnumCaseMultiPayload(a2) == 1)
    {
      v7 = type metadata accessor for UserInterfaceSizeClass(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
      {
        v8 = sub_1000BA294(&qword_100BC5A68);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
      }
      v9 = a1;
      v10 = v6;
      v11 = 1;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
      v9 = a1;
      v10 = v6;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
  }
  sub_100094D04((_QWORD *)((char *)a1 + a3[5]), (_QWORD *)((char *)a2 + a3[5]));
  v12 = a3[6];
  v13 = *(_QWORD *)((char *)a2 + v12);
  *(_QWORD *)((char *)a1 + v12) = v13;
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRelease();
  v14 = a3[7];
  v15 = *(_QWORD *)((char *)a2 + v14);
  *(_QWORD *)((char *)a1 + v14) = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease();
  v16 = a3[8];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  *v17 = *v18;
  v19 = v18[1];
  v17[1] = v19;
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_1001BC7B0(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;

  v6 = sub_1000BA294((uint64_t *)&unk_100C09CD0);
  if (swift_getEnumCaseMultiPayload(a2) == 1)
  {
    v7 = type metadata accessor for UserInterfaceSizeClass(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = sub_1000BA294(&qword_100BC5A68);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
    }
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v9 = a3[5];
  v10 = a3[6];
  v11 = &a1[v9];
  v12 = &a2[v9];
  v13 = *(_OWORD *)v12;
  v14 = *((_OWORD *)v12 + 1);
  *((_QWORD *)v11 + 4) = *((_QWORD *)v12 + 4);
  *(_OWORD *)v11 = v13;
  *((_OWORD *)v11 + 1) = v14;
  *(_QWORD *)&a1[v10] = *(_QWORD *)&a2[v10];
  v15 = a3[8];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  *(_OWORD *)&a1[v15] = *(_OWORD *)&a2[v15];
  return a1;
}

char *sub_1001BC8DC(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  if (a1 != a2)
  {
    sub_100021AA4((uint64_t)a1, (uint64_t *)&unk_100C09CD0);
    v6 = sub_1000BA294((uint64_t *)&unk_100C09CD0);
    if (swift_getEnumCaseMultiPayload(a2) == 1)
    {
      v7 = type metadata accessor for UserInterfaceSizeClass(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
      {
        v8 = sub_1000BA294(&qword_100BC5A68);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
      }
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&a1[v9]);
  v12 = *((_OWORD *)v11 + 1);
  *(_OWORD *)v10 = *(_OWORD *)v11;
  *((_OWORD *)v10 + 1) = v12;
  *((_QWORD *)v10 + 4) = *((_QWORD *)v11 + 4);
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  swift_bridgeObjectRelease();
  v13 = a3[8];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v17 = *(_QWORD *)v15;
  v16 = *((_QWORD *)v15 + 1);
  *(_QWORD *)v14 = v17;
  *((_QWORD *)v14 + 1) = v16;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1001BCA50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001BCA5C);
}

void sub_1001BCA5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1000BA294((uint64_t *)&unk_100C09CB0);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    sub_1000B250C(a1, a2, v6);
  }
  else
  {
    sub_10003BCA4(*(_QWORD *)(a1 + *(int *)(a3 + 20) + 24));
    sub_100079F70();
  }
}

uint64_t sub_1001BCAC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001BCACC);
}

void sub_1001BCACC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = sub_1000BA294((uint64_t *)&unk_100C09CB0);
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    sub_1000987C4(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
    sub_100079F70();
  }
}

void sub_1001BCB38(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  sub_100158AF0(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = "(";
    v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[4] = &unk_100980560;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
  }
}

double destroy for RegularSearchResultsView(_QWORD *a1)
{
  double result;

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for RegularSearchResultsView(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_QWORD *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = v6;
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  v8 = *(_QWORD *)(a2 + 72);
  v9 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v8;
  *(_QWORD *)(a1 + 80) = v9;
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v9);
  return a1;
}

_QWORD *assignWithCopy for RegularSearchResultsView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_100094D04(a1, a2);
  v4 = a2[5];
  a1[5] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease();
  v5 = a2[6];
  a1[6] = v5;
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  v6 = a2[8];
  a1[8] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  v7 = a2[10];
  a1[10] = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for RegularSearchResultsView(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x58uLL);
}

uint64_t assignWithTake for RegularSearchResultsView(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RegularSearchResultsView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 88))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RegularSearchResultsView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for RegularSearchResultsView()
{
  return &type metadata for RegularSearchResultsView;
}

uint64_t sub_1001BCE34()
{
  return sub_1001BCE68(&qword_100BC5DB8, &qword_100BC5DC0, (void (*)(void))sub_1001BC0B4, (void (*)(void))sub_1001BC198);
}

uint64_t sub_1001BCE68(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v8 = sub_100075EB0(a2);
    a3();
    a4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001BCED8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AAA0E8, 1);
}

uint64_t sub_1001BCEE8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AAA0C0, 1);
}

void sub_1001BCF00(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1001BB4E0(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1001BCF10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SearchResultsList(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001BCF54(uint64_t a1)
{
  return sub_1001BCF70(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1001BBFB4);
}

uint64_t sub_1001BCF64(uint64_t a1)
{
  return sub_1001BCF70(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1001BC024);
}

uint64_t sub_1001BCF70(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_1000D93E4() - 8) + 80);
  return a2(a1, v2 + ((v4 + 16) & ~v4));
}

void sub_1001BCFC8()
{
  sub_10003D2DC(&qword_100BC5E68, &qword_100BC5E70);
}

void sub_1001BCFF4()
{
  sub_10003D2DC(&qword_100BC5E78, &qword_100BC5E80);
}

uint64_t sub_1001BD020(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t *v180;
  char v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  void (*v188)(uint64_t, char *, uint64_t);
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  _BYTE *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t (*v229)(uint64_t, _QWORD);
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t *v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  char v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t *v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  int *v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  id v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  void (*v268)(int *, uint64_t *, uint64_t);
  uint64_t v269;
  char v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  char v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  char *v287;
  uint64_t v288;
  char v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  NSObject *v296;
  uint64_t v297;
  os_log_type_t v298;
  uint8_t *v299;
  uint64_t v300;
  uint64_t v301;
  unint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  char *v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t (*v340)(_QWORD, _QWORD);
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t (*v346)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  char v351;
  uint64_t v352;
  void (*v353)(uint64_t, uint64_t);
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t (*v388)(_QWORD, _QWORD);
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t (*v393)(uint64_t, uint64_t, uint64_t);
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t (*v397)(uint64_t, uint64_t, uint64_t);
  uint64_t v398;
  uint64_t v399;
  void (*v400)(uint64_t, uint64_t, uint64_t);
  uint64_t v401;
  uint64_t v402;
  NSObject *v403;
  os_log_type_t v404;
  _BOOL4 v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  unint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  void (*v422)(uint64_t, uint64_t);
  uint64_t v423;
  void (*v424)(uint64_t, uint64_t, uint64_t);
  NSObject *v425;
  os_log_type_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  unint64_t v431;
  uint64_t v432;
  uint64_t v433;
  NSObject *v434;
  os_log_type_t v435;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  unint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  char *v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  char v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t active;
  void (*v465)(uint64_t, uint64_t);
  char v466[8];
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  _BYTE *v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499[2];
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  uint64_t v504;
  uint64_t v505;
  char *v506;
  uint64_t v507;
  uint64_t v508;
  uint64_t v509;
  char *v510;
  uint64_t v511;
  int *v512;
  uint64_t v513;
  void (*v514)(uint64_t, uint64_t, uint64_t);
  uint64_t v515;
  void (*v516)(uint64_t, uint64_t);
  uint64_t v517;
  uint64_t v518;
  uint64_t v519;
  uint64_t *v520;
  uint64_t v521;
  char v522[8];
  uint64_t v523;
  uint64_t *v524;
  uint64_t v525;
  uint64_t v526;
  uint64_t v527;
  uint64_t v528;
  uint64_t v529;
  char v530[8];
  uint64_t v531;
  uint64_t v532;
  uint64_t v533;
  uint64_t v534;
  char v535[8];
  char v536[8];
  char v537[8];
  char v538[8];
  uint64_t v539;

  v529 = a2;
  v463 = type metadata accessor for NotificationsOptInInput(0);
  sub_1000B42B0();
  __chkstk_darwin(v3);
  sub_100088FDC();
  v5 = sub_1000987B4(v4);
  v497 = type metadata accessor for NotificationsOptInState(v5);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_100088FDC();
  sub_10009511C(v7);
  sub_1000BA294(&qword_100BC5F40);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v9);
  sub_100079F7C();
  v11 = sub_1000987B4(v10);
  v468 = type metadata accessor for HomeAndWorkRefinementViewState(v11);
  sub_1000B42B0();
  __chkstk_darwin(v12);
  sub_100088FDC();
  v14 = sub_1000987B4(v13);
  v15 = type metadata accessor for LocationOfInterest(v14);
  sub_1000B43A4(v15, (uint64_t)&v501);
  v474 = v16;
  sub_10009D98C();
  __chkstk_darwin(v17);
  sub_100088FDC();
  v19 = sub_1000987B4(v18);
  type metadata accessor for LocationFooterAction(v19);
  sub_1000B42B0();
  __chkstk_darwin(v20);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v21);
  sub_100079F7C();
  v23 = sub_1000987B4(v22);
  v502 = type metadata accessor for LocationsState(v23);
  sub_1000B42B0();
  __chkstk_darwin(v24);
  sub_100088FDC();
  sub_10009511C(v25);
  sub_1000BA294(&qword_100C0B8D0);
  sub_1000B42B0();
  __chkstk_darwin(v26);
  sub_100088FDC();
  v28 = sub_1000987B4(v27);
  v29 = type metadata accessor for LocationModel(v28);
  sub_1000B43A4(v29, (uint64_t)&v506);
  v507 = v30;
  sub_10009D98C();
  __chkstk_darwin(v31);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v32);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v33);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v34);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v35);
  sub_100079F7C();
  v37 = sub_1000987B4(v36);
  active = type metadata accessor for LocationViewerActiveLocationState(v37);
  sub_1000B42B0();
  __chkstk_darwin(v38);
  sub_100088FDC();
  v40 = sub_1000987B4(v39);
  v41 = type metadata accessor for Location.Identifier(v40);
  sub_1000B43A4(v41, (uint64_t)&v521);
  v478 = v42;
  sub_10009D98C();
  __chkstk_darwin(v43);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v44);
  sub_100079F7C();
  v46 = sub_1000987B4(v45);
  v527 = type metadata accessor for ViewState.SecondaryViewState(v46);
  sub_1000B42B0();
  __chkstk_darwin(v47);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v48);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v49);
  sub_100079F7C();
  sub_10009511C(v50);
  sub_1000BA294(&qword_100BC5F48);
  sub_1000B42B0();
  __chkstk_darwin(v51);
  sub_100088FDC();
  sub_10009511C(v52);
  sub_1000BA294(&qword_100BC5F50);
  sub_1000B42B0();
  __chkstk_darwin(v53);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v54);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v55);
  sub_100079F7C();
  v57 = sub_1000987B4(v56);
  v493 = type metadata accessor for LocationPreviewModalViewState(v57);
  sub_1000B42B0();
  __chkstk_darwin(v58);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v59);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v60);
  sub_100079F7C();
  sub_10009511C(v61);
  sub_1000BA294(&qword_100BC35F8);
  sub_1000B42B0();
  __chkstk_darwin(v62);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v63);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v64);
  sub_100079F7C();
  v66 = sub_1000987B4(v65);
  v67 = type metadata accessor for Location(v66);
  sub_1000B43A4(v67, (uint64_t)v535);
  v505 = v68;
  sub_10009D98C();
  __chkstk_darwin(v69);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v70);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v71);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v72);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v73);
  sub_100079F7C();
  v75 = sub_1000987B4(v74);
  type metadata accessor for LocationPreviewViewState(v75);
  sub_1000B42B0();
  __chkstk_darwin(v76);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v77);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v78);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v79);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v80);
  sub_100079F7C();
  v82 = sub_1000987B4(v81);
  v531 = type metadata accessor for ModalViewState(v82);
  sub_1000B42B0();
  __chkstk_darwin(v83);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v84);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v85);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v86);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v87);
  sub_100079F7C();
  sub_10009511C(v88);
  sub_1000BA294(&qword_100BC5F58);
  sub_1000B42B0();
  __chkstk_darwin(v89);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v90);
  sub_100079F7C();
  sub_10009511C(v91);
  sub_1000BA294((uint64_t *)&unk_100BD35A0);
  sub_1000B42B0();
  __chkstk_darwin(v92);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v93);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v94);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v95);
  v97 = (char *)&v451 - v96;
  sub_1000BA294(&qword_100BC5F60);
  sub_1000B42B0();
  __chkstk_darwin(v98);
  sub_100088FDC();
  v100 = sub_1000987B4(v99);
  type metadata accessor for WeatherMapTrackingState(v100);
  sub_1000B42B0();
  __chkstk_darwin(v101);
  sub_100088FDC();
  v103 = sub_1000987B4(v102);
  v491 = type metadata accessor for WeatherMapPresentationState(v103);
  sub_1000B42B0();
  __chkstk_darwin(v104);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v105);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v106);
  sub_100079F7C();
  sub_10009511C(v107);
  sub_1000BA294(&qword_100BC5F68);
  sub_1000B42B0();
  __chkstk_darwin(v108);
  sub_100088FDC();
  sub_10009511C(v109);
  sub_1000BA294(&qword_100BC5F70);
  sub_1000B42B0();
  __chkstk_darwin(v110);
  sub_100088FDC();
  sub_10009511C(v111);
  sub_1000BA294(&qword_100BC5F78);
  sub_1000B42B0();
  __chkstk_darwin(v112);
  sub_100088FDC();
  sub_10009511C(v113);
  sub_1000BA294(&qword_100BC5F80);
  sub_1000B42B0();
  __chkstk_darwin(v114);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v115);
  sub_100079F7C();
  v117 = sub_1000987B4(v116);
  v118 = type metadata accessor for ViewState(v117);
  sub_1000B42B0();
  __chkstk_darwin(v119);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v120);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v121);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v122);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v123);
  sub_100079F7C();
  sub_10009511C(v124);
  sub_1000BA294(&qword_100BC5F88);
  sub_1000B42B0();
  __chkstk_darwin(v125);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v126);
  sub_100079F7C();
  sub_10009511C(v127);
  sub_1000BA294(&qword_100BC5F90);
  sub_1000B42B0();
  __chkstk_darwin(v128);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v129);
  sub_100079F7C();
  sub_10009511C(v130);
  sub_1000BA294(&qword_100BC5F98);
  sub_1000B42B0();
  __chkstk_darwin(v131);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v132);
  sub_100079F7C();
  sub_10009511C(v133);
  sub_1000BA294(&qword_100BC5FA0);
  sub_1000B42B0();
  __chkstk_darwin(v134);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v135);
  sub_100079F7C();
  sub_10009511C(v136);
  sub_1000BA294(&qword_100BC5FA8);
  sub_1000B42B0();
  __chkstk_darwin(v137);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v138);
  sub_100079F7C();
  sub_10009511C(v139);
  sub_1000BA294(&qword_100BC5FB0);
  sub_1000B42B0();
  __chkstk_darwin(v140);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v141);
  sub_100079F7C();
  v143 = sub_1000987B4(v142);
  v144 = type metadata accessor for WeatherMapOverlayKind(v143);
  sub_1000B43A4(v144, (uint64_t)v530);
  v499[1] = v145;
  sub_10009D98C();
  __chkstk_darwin(v146);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v147);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v148);
  sub_100079F7C();
  v150 = sub_1000987B4(v149);
  v151 = type metadata accessor for LocationViewAction(v150);
  sub_1000B42B0();
  __chkstk_darwin(v152);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v153);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v154);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v155);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v156);
  v158 = (char *)&v451 - v157;
  __chkstk_darwin(v159);
  v161 = (char *)&v451 - v160;
  v501 = type metadata accessor for LocationComponentAction(0);
  sub_1000B42B0();
  __chkstk_darwin(v162);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v163);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v164);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v165);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v166);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v167);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v168);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v169);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v170);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v171);
  v173 = (char *)&v451 - v172;
  __chkstk_darwin(v174);
  v176 = (char *)&v451 - v175;
  v490 = type metadata accessor for DisplayMetrics(0);
  sub_1000B42B0();
  __chkstk_darwin(v177);
  v179 = (uint64_t)&v451 - ((v178 + 15) & 0xFFFFFFFFFFFFFFF0);
  v532 = a1;
  v180 = (uint64_t *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view);
  v528 = v118;
  sub_100080C0C((uint64_t)v180 + *(int *)(v118 + 36), v179, type metadata accessor for DisplayMetrics);
  sub_100403A6C();
  LOBYTE(v118) = v181;
  v489 = v179;
  sub_1000215BC(v179, type metadata accessor for DisplayMetrics);
  v182 = sub_10009E558();
  v523 = v151;
  if ((v118 & 1) != 0)
  {
    v179 = (uint64_t)v180;
    v184 = v182;
    sub_1000860E4(v182, v183, type metadata accessor for LocationViewAction);
    v185 = sub_1001C4C14((uint64_t)v161);
    if ((_DWORD)v185 == 1)
    {
      sub_1000BA294(&qword_100BC5FC8);
      sub_1000BEC60((uint64_t)v161, (uint64_t)v176);
      sub_1000B3B00(v186, (uint64_t *)&unk_100BD35A0);
      sub_100086100((uint64_t)v176, (uint64_t)v173);
      if (sub_1000BCF28((uint64_t)v173, (uint64_t)&v528) == 1)
      {
        sub_1000C6554();
        v187 = sub_1001C4C44();
        v188(v187, v173, v503);
        v189 = sub_1000C08E4();
        v190 = sub_1000BBC28(v189);
        _s7Weather24LocationCompositionStateOwst_0(v518, 1, 1, v190);
        _s7Weather24LocationCompositionStateOwst_0(v517, 1, 1, v502);
        v191 = sub_1000C43CC((uint64_t)v510);
        sub_10009D34C(v508, v192, v193, v191);
        sub_100080C0C((uint64_t)v180, v499[0], type metadata accessor for ViewState);
        v194 = sub_10011DB00((uint64_t)&v511);
        sub_1000E7BA4(v194, v195, v196, v527);
        sub_10009ED68();
        sub_1000ECF04(*(_QWORD *)(v197 - 256), v198, v199, v200);
        v202 = sub_1000C08D0(v201);
        sub_1000C6990(v202, v203, v204, (uint64_t)&v513);
        v205 = v528;
        sub_1000B2EA4((uint64_t)v180 + *(int *)(v528 + 40), type metadata accessor for WeatherMapPresentationState, (uint64_t)&v509);
        sub_1000BF0B8((uint64_t)v180 + *(int *)(v205 + 36), type metadata accessor for DisplayMetrics, (uint64_t)&v510);
        v206 = sub_1000BA294(&qword_100BC5FD0);
        v207 = v488;
        sub_1000BE894(v488, v208, v209, v206);
        v210 = v492;
        sub_1008E539C(v180, (uint64_t)v180, v207, v492);
        sub_1000878B4(v211, type metadata accessor for WeatherMapTrackingState);
        sub_1000215BC((uint64_t)v180, type metadata accessor for DisplayMetrics);
        sub_1000215BC((uint64_t)type metadata accessor for LocationComponentAction, type metadata accessor for WeatherMapPresentationState);
        sub_1000ED3F0((uint64_t)v210);
        sub_10009DD58();
        v212 = v499[0];
        sub_100112494();
        sub_1000992DC(v213, &qword_100BC5F68);
        sub_10009ED60(v214, &qword_100BC5F70);
        sub_100094EEC(v215, &qword_100BC5F78);
        sub_1000988A0(v216, &qword_100BC5F80);
        sub_1000215BC(v212, type metadata accessor for ViewState);
        sub_1000FC5E0();
        v217 = v525;
        _s7Weather24LocationCompositionStateOwst_0(v525, 1, 1, v531);
        sub_1000CD54C();
        v221 = sub_10009D358(0, 3, v519, v518, v517, v218, v219, v220, (uint64_t)v510, v508, v207, v217, v455, v456, v457, v458, v459, v460, v461,
                 v462);
        v222 = sub_1000CDEC0(v221);
        sub_1000B3B00(v222, &qword_100BC5F60);
        sub_100098898(v223, &qword_100BC5F88);
        sub_1000988B0(v224, &qword_100BC5F90);
        sub_100094EEC(v225, &qword_100BC5F98);
        sub_1000988A0(v226, &qword_100BC5FA0);
        sub_10004A2CC(v227, &qword_100BC5FA8);
        sub_10009518C(v228, &qword_100BC5FB0);
        sub_1000988C4();
        sub_100094F10(v498, v229);
        v230 = (uint64_t)v176;
LABEL_53:
        sub_1000215BC(v230, type metadata accessor for LocationComponentAction);
        return v532;
      }
      sub_100079F9C((uint64_t)v176);
      sub_100079F9C((uint64_t)v173);
      sub_10009E5F0();
    }
    else
    {
      sub_1000878B4(v185, type metadata accessor for LocationViewAction);
      v182 = v184;
    }
  }
  v524 = v180;
  sub_100080C0C(v182, (uint64_t)v158, type metadata accessor for LocationViewAction);
  v231 = sub_1001C4C14((uint64_t)v158);
  if ((_DWORD)v231 != 1)
  {
    sub_1000998D4(v231, type metadata accessor for LocationViewAction);
    sub_10009E3C0();
    sub_1000F3DE8();
    goto LABEL_46;
  }
  v232 = sub_1000BA294(&qword_100BC5FC8);
  sub_1000787D4((uint64_t)&v158[*(int *)(v232 + 48)], (uint64_t)v537, &qword_100BC40B0);
  v233 = (uint64_t)&v158[*(int *)(v232 + 64)];
  v234 = (uint64_t)v158;
  v235 = v521;
  sub_10007802C(v234, v521, type metadata accessor for LocationComponentAction);
  sub_1000787D4(v233, (uint64_t)v97, (uint64_t *)&unk_100BD35A0);
  v236 = v532 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView;
  sub_1000B2EA4(v532 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView, type metadata accessor for ModalViewState, (uint64_t)v536);
  v237 = v531;
  v238 = sub_1000988D0((uint64_t)&OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView);
  if ((_DWORD)v238 == 4)
  {
    v239 = v500;
    sub_1000787D4((uint64_t)&OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView, v500, &qword_100BC5F58);
    v240 = v496;
    sub_100037768(v239, v496, &qword_100BC5F58);
    v241 = sub_10007A15C();
    sub_100088FC8(v240, 1, v241);
    v242 = v515;
    if (v248)
    {
      sub_100021A14(v239, &qword_100BC5F58);
      v243 = v240;
      v244 = &qword_100BC5F58;
    }
    else
    {
      sub_10007802C(v240, v494, type metadata accessor for LocationPreviewViewState);
      v246 = v487;
      sub_10062F730(v487);
      v247 = v513;
      v249 = sub_100088FC8(v246, 1, v513);
      if (!v248)
      {
        v179 = v505;
        v285 = v482;
        sub_1000992E4(v482, v246, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v505 + 32));
        v286 = v475;
        sub_1001C4C1C(v285, v235, (uint64_t)v537, v475);
        v287 = v97;
        v288 = v493;
        sub_100088FC8(v286, 1, v493);
        if (!v289)
        {
          v354 = v286;
          v355 = v476;
          sub_10007802C(v354, v476, type metadata accessor for LocationPreviewModalViewState);
          v356 = sub_1000C08E4();
          v357 = sub_1000BBC28(v356);
          _s7Weather24LocationCompositionStateOwst_0(v518, 1, 1, v357);
          _s7Weather24LocationCompositionStateOwst_0(v517, 1, 1, v502);
          v358 = sub_1000C43CC((uint64_t)v510);
          v359 = v508;
          _s7Weather24LocationCompositionStateOwst_0(v508, 1, 1, v358);
          v360 = sub_1000C08D0((uint64_t)v522);
          v363 = sub_1000BD940(v360, v361, v362);
          v364 = v484;
          sub_10009D34C(v484, v365, v366, v363);
          v367 = v355;
          v368 = (uint64_t)v287;
          v369 = v483;
          sub_100080C0C(v367, v483, type metadata accessor for LocationPreviewModalViewState);
          _s7Weather24LocationCompositionStateOwst_0(v369, 0, 1, v288);
          v370 = v525;
          sub_1003804CC(v364, v369, v525);
          sub_1000988A0(v371, &qword_100BC5F50);
          sub_100098898(v372, &qword_100BC5F48);
          sub_10009C7F0(v370, 0);
          sub_10009F7C4(v370, v237);
          _s7Weather24LocationCompositionStateOwst_0(v370, 0, 1, v237);
          sub_1000CD54C();
          v453 = v237;
          v454 = v370;
          v452 = v359;
          v451 = v510;
          v373 = sub_1000C0C98();
          v380 = sub_10009D358(v373, v374, v375, v376, v517, v377, v378, v379, (uint64_t)v451, v452, v453, v454, v455, v456, v457, v458, v459, v460, v461,
                   v462);
          v381 = sub_1000CDEC0(v380);
          sub_10004A2CC(v381, &qword_100BC5F60);
          sub_10009ED60(v382, &qword_100BC5F88);
          sub_1000B3B00(v383, &qword_100BC5F90);
          sub_100094EEC(v384, &qword_100BC5F98);
          sub_1000988A0(v385, &qword_100BC5FA0);
          sub_100098898(v386, &qword_100BC5FA8);
          sub_1000988A8(v387, &qword_100BC5FB0);
          sub_1000215BC(v476, type metadata accessor for LocationPreviewModalViewState);
          sub_1000988C4();
          v389 = sub_1000CFFF8(v388);
          sub_10009BC18(v389, type metadata accessor for LocationPreviewViewState);
          sub_1000EAF1C(&qword_100BC5F58, (uint64_t)&v527);
          v342 = v368;
          goto LABEL_52;
        }
        (*(void (**)(uint64_t, uint64_t))(v179 + 8))(v285, v247);
        sub_1000B30B8(type metadata accessor for LocationPreviewViewState, (uint64_t)&v520);
        sub_1000EAF1C(&qword_100BC5F58, (uint64_t)&v527);
        sub_1000988A0(v290, (uint64_t *)&unk_100BD35A0);
        sub_1000998D4(v291, type metadata accessor for LocationComponentAction);
        sub_1000988B0(v292, &qword_100BC5F50);
        sub_1000F3DE8();
        sub_10009E5F0();
        goto LABEL_46;
      }
      sub_10009BC18(v249, type metadata accessor for LocationPreviewViewState);
      sub_10004A2CC(v250, &qword_100BC5F58);
      v244 = &qword_100BC35F8;
      v243 = v246;
    }
    sub_100021A14(v243, v244);
    v179 = v526;
  }
  else
  {
    sub_10009BC18(v238, type metadata accessor for ModalViewState);
    v179 = v526;
    v242 = v515;
  }
  v251 = v520;
  v252 = (uint64_t)v516;
  v253 = v236;
  v254 = v509;
  sub_1000860E4(v253, v245, type metadata accessor for ModalViewState);
  sub_1000988D0(v254);
  sub_10009E5F0();
  v256 = v512;
  if ((_DWORD)v255)
  {
    sub_1000878B4(v255, type metadata accessor for ModalViewState);
  }
  else
  {
    sub_10007802C(v254, v242, type metadata accessor for LocationPreviewViewState);
    sub_10062F730((uint64_t)v251);
    v251 = v520;
    v257 = v513;
    v258 = sub_100088FC8((uint64_t)v520, 1, v513);
    if (!v248)
    {
      sub_1000C6554();
      v268(v256, v251, v257);
      v269 = v480;
      v451 = v97;
      sub_1001C4C1C((uint64_t)v256, v235, (uint64_t)v537, v480);
      sub_100088FC8(v269, 1, v493);
      if (!v270)
      {
        v308 = v481;
        sub_10007802C(v269, v481, type metadata accessor for LocationPreviewModalViewState);
        v309 = sub_1000C08E4();
        v310 = sub_1000BBC28(v309);
        sub_1000D0910(v310);
        v312 = *(_QWORD *)(v311 - 256);
        sub_1000C43CC(v312);
        sub_1000FCC40();
        v314 = *(_QWORD *)(v313 - 256);
        sub_1000D8DA8(v314, v315, v316, v317);
        v318 = sub_10003BCB8();
        v319 = v484;
        sub_10009D34C(v484, v320, v321, v318);
        v322 = v483;
        sub_100080C0C(v308, v483, type metadata accessor for LocationPreviewModalViewState);
        sub_1000988B8(v322, 0);
        sub_1000BEC54();
        sub_1003804CC(v319, v322, v323);
        sub_1000988A8(v324, &qword_100BC5F50);
        sub_1000B3B00(v325, &qword_100BC5F48);
        sub_1000916FC(v257, v237);
        _s7Weather24LocationCompositionStateOwst_0(v257, 0, 1, v237);
        sub_100089034();
        v451 = (char *)v312;
        v452 = v314;
        v326 = sub_1000F438C();
        v332 = sub_10009D358(v326, v328, *(_QWORD *)(v327 - 256), v518, v517, v329, v330, v331, (uint64_t)v451, v452, v453, v454, v455, v456, v457, v458, v459, v460, v461,
                 v462);
        v333 = sub_1000CDEC0(v332);
        sub_100098898(v333, &qword_100BC5F60);
        sub_1000992DC(v334, &qword_100BC5F88);
        sub_100094EEC(v335, &qword_100BC5F90);
        sub_1000988A0(v336, &qword_100BC5F98);
        sub_1000988A8(v337, &qword_100BC5FA0);
        sub_10009518C(v338, &qword_100BC5FA8);
        sub_1000B3B00(v339, &qword_100BC5FB0);
        sub_1000215BC(v481, type metadata accessor for LocationPreviewModalViewState);
        sub_1000988C4();
        v341 = sub_1000CFFF8(v340);
        sub_1000998DC(v341, type metadata accessor for LocationPreviewViewState);
        v342 = (uint64_t)v451;
LABEL_52:
        sub_100021A14(v342, (uint64_t *)&unk_100BD35A0);
        v230 = v521;
        goto LABEL_53;
      }
      v271 = (*(uint64_t (**)(int *, uint64_t))(v505 + 8))(v256, v257);
      sub_1000998DC(v271, type metadata accessor for LocationPreviewViewState);
      sub_1000EAF1C((uint64_t *)&unk_100BD35A0, (uint64_t)v466);
      sub_1000998D4(v272, type metadata accessor for LocationComponentAction);
      sub_1000988A0(v273, &qword_100BC5F50);
      sub_100110504();
LABEL_46:
      sub_100080C0C(v532 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView, v179, type metadata accessor for ModalViewState);
      v307 = (char *)&loc_1001BE8C8 + *((int *)qword_1001C1A80 + sub_1000988D0(v179));
      __asm { BR              X10 }
    }
    sub_1000998DC(v258, type metadata accessor for LocationPreviewViewState);
    sub_10009518C(v259, &qword_100BC35F8);
  }
  sub_1000FD9EC((uint64_t)v524, type metadata accessor for ViewState, (uint64_t)&v531);
  sub_100110504();
  sub_1000B2EA4(v235 + v256[5], type metadata accessor for ViewState.SecondaryViewState, (uint64_t)&v532);
  v260 = sub_1000BCF28((uint64_t)v251, (uint64_t)&v539);
  v261 = v504;
  if ((_DWORD)v260 == 1)
  {
    sub_10009BC18(v260, type metadata accessor for ViewState.SecondaryViewState);
LABEL_39:
    sub_1000998D4(v262, type metadata accessor for ViewState);
    goto LABEL_40;
  }
  v263 = *v251;
  if (*(_QWORD *)(v235 + v256[9] + 8) == 1)
  {
    v264 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
    objc_msgSend(v264, "userInterfaceIdiom");

    if ((*(_BYTE *)(v235 + v256[7]) & 1) == 0)
    {
      swift_release(v263);
      goto LABEL_39;
    }
  }
  sub_1000998D4(v260, type metadata accessor for ViewState);
  sub_1000860E4(v263 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_activeLocationState, v265, type metadata accessor for LocationViewerActiveLocationState);
  v266 = v495;
  sub_100088FC8(v261, 1, v495);
  if (v248)
  {
    swift_release(v263);
    sub_1000878B4(v267, type metadata accessor for LocationViewerActiveLocationState);
LABEL_40:
    v293 = v529;
LABEL_41:
    if (qword_100BC2400 != -1)
      swift_once(&qword_100BC2400, sub_1001597C4);
    v294 = type metadata accessor for Logger(0);
    sub_1000AECD4(v294, (uint64_t)qword_100CAEFF8);
    sub_100080C0C(v293, v252, type metadata accessor for LocationViewAction);
    v296 = Logger.logObject.getter(v295);
    v298 = static os_log_type_t.error.getter(v296, v297);
    if (os_log_type_enabled(v296, v298))
    {
      v299 = (uint8_t *)sub_100098710(12);
      v300 = sub_100098710(32);
      v534 = v300;
      v451 = v97;
      *(_DWORD *)v299 = 136315138;
      sub_100086DA4(&qword_100BC5FD8, type metadata accessor for LocationViewAction, (uint64_t)&unk_100995AC0);
      v301 = dispatch thunk of CustomStringConvertible.description.getter(v523);
      v533 = sub_1000B2EB0(v301, v302);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v533, &v534);
      swift_bridgeObjectRelease();
      sub_1000215BC(v252, type metadata accessor for LocationViewAction);
      _os_log_impl((void *)&_mh_execute_header, v296, v298, "Invalid state for component tap; action=%s", v299, 0xCu);
      sub_1000988D8(v300);
      v303 = v300;
      v179 = v526;
      sub_1000986F0(v303);
      sub_100110504();
      sub_1000986F0(v304);

      sub_1000EAF1C((uint64_t *)&unk_100BD35A0, (uint64_t)v466);
      sub_1000B30B8(type metadata accessor for LocationComponentAction, (uint64_t)v538);
      sub_10009E3C0();
    }
    else
    {

      sub_1000215BC(v252, type metadata accessor for LocationViewAction);
      sub_100094EEC(v305, (uint64_t *)&unk_100BD35A0);
      sub_1000998D4(v306, type metadata accessor for LocationComponentAction);
      sub_10009E3C0();
      sub_10009E5F0();
    }
    goto LABEL_46;
  }
  v515 = v263;
  v274 = v532;
  v275 = v478;
  v276 = v511;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v478 + 32))(v511, v261, v266);
  sub_10011AB88(v274 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, type metadata accessor for LocationsState, (uint64_t)&v505);
  sub_1000BEC54();
  static CurrentLocation.placeholderIdentifier.getter(v277);
  v278 = static Location.Identifier.== infix(_:_:)(v276, v261);
  v520 = *(uint64_t **)(v275 + 8);
  ((void (*)(uint64_t, uint64_t))v520)(v261, v266);
  v451 = v97;
  if ((v278 & 1) != 0)
  {
    sub_1000BA294(&qword_100BC3488);
    v261 = v477;
    v279 = type metadata accessor for CurrentLocation(0);
    swift_storeEnumTagMultiPayload(v261, v279, 3);
    v280 = sub_1000C00E0();
    sub_1000C6990(v280, v281, v282, (uint64_t)&v501);
    v283 = v486;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v507 + 104))(v261, enum case for LocationModel.current(_:), v486);
    v284 = sub_1000988B8(v261, 0);
  }
  else
  {
    v343 = *(int *)(v502 + 24);
    v344 = *(_QWORD *)(v274 + v343);
    v179 = *(_QWORD *)(v344 + 16);
    if (v179)
    {
      v261 = v344 + ((*(unsigned __int8 *)(v507 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v507 + 80));
      v345 = *(_QWORD *)(v507 + 72);
      v346 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v507 + 16);
      v347 = swift_bridgeObjectRetain(v344);
      v283 = v486;
      v348 = v467;
      v97 = v506;
      while (1)
      {
        v349 = v346(v348, v261, v283, v347);
        v350 = v283;
        LocationModel.identifier.getter(v349);
        v351 = static Location.Identifier.== infix(_:_:)(v97, v511);
        v352 = sub_1000C00F0();
        ((void (*)(uint64_t))v520)(v352);
        if ((v351 & 1) != 0)
          break;
        sub_1000988C4();
        v353(v348, v350);
        v261 += v345;
        --v179;
        v283 = v350;
        if (!v179)
          goto LABEL_55;
      }
      sub_1000C6554();
      v261 = v477;
      sub_1000992E4(v477, v348, v393);
      sub_1000FC5E0();
      sub_10003BC58();
      sub_10011E440();
      v283 = v350;
    }
    else
    {
      swift_bridgeObjectRetain(*(_QWORD *)(v274 + v343));
      v283 = v486;
LABEL_55:
      v390 = sub_1000DB1EC((uint64_t)v499);
      _s7Weather24LocationCompositionStateOwst_0(v390, v391, v392, v283);
      sub_10003BC58();
      sub_10011E440();
    }
    sub_10009E5F0();
    v274 = v485;
  }
  sub_1000998DC(v284, type metadata accessor for LocationsState);
  sub_100088FC8(v261, 1, v283);
  v252 = (uint64_t)v516;
  if (v248)
  {
    sub_1000DA8AC();
    v394 = sub_1000FDAE4();
    sub_100098898(v394, &qword_100C0B8D0);
    sub_100110504();
    v293 = v529;
    goto LABEL_41;
  }
  v395 = v507;
  v396 = sub_1001C4C44();
  sub_1000B2FD0(v396, v261, v397);
  if (qword_100BC2450 != -1)
    swift_once(&qword_100BC2450, sub_1006F3844);
  v398 = type metadata accessor for Logger(0);
  v399 = sub_1000AECD4(v398, (uint64_t)qword_100CAF0E8);
  v400 = *(void (**)(uint64_t, uint64_t, uint64_t))(v395 + 16);
  v401 = v472;
  v400(v472, v274, v283);
  v402 = v283;
  v403 = sub_10011E144();
  v404 = static os_log_type_t.default.getter(v403);
  v405 = os_log_type_enabled(v403, v404);
  v514 = v400;
  if (v405)
  {
    v406 = sub_100098710(22);
    v512 = (int *)v399;
    v407 = v406;
    v509 = sub_100098710(32);
    sub_1000C20FC(v509, 7.2225e-34);
    *(_WORD *)(v407 + 12) = 2081;
    v516 = (void (*)(uint64_t, uint64_t))(v407 + 14);
    v408 = v469;
    v400(v469, v401, v402);
    v409 = String.init<A>(describing:)(v408);
    v411 = sub_1000B2EB0(v409, v410);
    v412 = sub_10011E1E0(v411);
    v274 = v479;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v412, v413);
    swift_bridgeObjectRelease();
    sub_1000BE724();
    sub_10009C914((void *)&_mh_execute_header, v403, v414, "TappedComponent for locationModel=%{private,mask.hash}s");
    v415 = v509;
    sub_1000988D8(v509);
    sub_1000986F0(v415);
    sub_1000986F0(v407);
  }
  else
  {
    sub_1000BE724();
  }

  v416 = v505;
  v417 = v470;
  LocationModel.coalesceLocation.getter(v418);
  v419 = v513;
  v420 = sub_100088FC8(v417, 1, v513);
  v421 = v471;
  if (!v248)
  {
    v433 = v473;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v416 + 32))(v473, v417, v419);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v416 + 16))(v421, v433, v419);
    v434 = sub_10011E144();
    v435 = static os_log_type_t.default.getter(v434);
    v179 = v435;
    if (os_log_type_enabled(v434, v435))
    {
      v437 = sub_100098710(22);
      v438 = sub_100098710(32);
      sub_1000C20FC(v438, 7.2225e-34);
      *(_WORD *)(v437 + 12) = 2081;
      sub_100086DA4((unint64_t *)&qword_100BC5FE0, (uint64_t (*)(uint64_t))&type metadata accessor for Location, (uint64_t)&protocol conformance descriptor for Location);
      v439 = dispatch thunk of CustomStringConvertible.description.getter(v419);
      v441 = sub_1000B2EB0(v439, v440);
      v442 = sub_10011E1E0(v441);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v442, v443);
      swift_bridgeObjectRelease();
      sub_1000DC5E8(v421);
      sub_10009C914((void *)&_mh_execute_header, v434, v444, "TappedComponent for location=%{private,mask.hash}s");
      sub_1000988D8(v438);
      sub_1000986F0(v438);
      sub_1000986F0(v437);
    }
    else
    {
      sub_1000DC5E8(v421);
    }

    sub_1000F3DE8();
    v445 = v473;
    v446 = v521;
    sub_1001C230C(v532, v473, v521, (uint64_t)v451, (uint64_t)v537);
    v448 = v447;
    sub_1000FDAE4();
    sub_1000DC5E8(v445);
    v516(v479, v486);
    v449 = sub_1000DA8AC();
    sub_100094EEC(v449, (uint64_t *)&unk_100BD35A0);
    sub_1000215BC(v446, type metadata accessor for LocationComponentAction);
    sub_100110504();
    sub_10009E3C0();
    if (v448)
      return v448;
    goto LABEL_46;
  }
  sub_1000988A8(v420, &qword_100BC35F8);
  v422 = v465;
  v423 = v486;
  v424 = v514;
  v514((uint64_t)v465, v274, v486);
  v425 = sub_10011E144();
  v426 = static os_log_type_t.default.getter(v425);
  if (os_log_type_enabled(v425, v426))
  {
    v427 = sub_100098710(22);
    v428 = sub_100098710(32);
    *(_DWORD *)v427 = 141558275;
    v533 = 1752392040;
    v534 = v428;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v533, &v534);
    *(_WORD *)(v427 + 12) = 2081;
    v429 = v469;
    v424(v469, (uint64_t)v422, v423);
    v430 = String.init<A>(describing:)(v429);
    v533 = sub_1000B2EB0(v430, v431);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v533, &v534);
    swift_bridgeObjectRelease();
    sub_1000860EC();
    _os_log_impl((void *)&_mh_execute_header, v425, v426, "Failed to find locationModel.coalesceLocation for locationModel=%{private,mask.hash}s", (uint8_t *)v427, 0x16u);
    sub_1000988D8(v428);
    sub_1000986F0(v428);
    sub_1000986F0(v427);

    sub_1000FDAE4();
    v432 = v479;
  }
  else
  {

    sub_1000FDAE4();
    sub_1000860EC();
    v432 = v274;
  }
  v422(v432, v423);
  sub_1000DA8AC();
  sub_1000EAF1C((uint64_t *)&unk_100BD35A0, (uint64_t)v466);
  sub_1000215BC(v521, type metadata accessor for LocationComponentAction);
  swift_retain();
  return v532;
}

void sub_1001C1B14(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t (*v22)(_QWORD);
  char *v23;
  _QWORD v24[14];

  v24[9] = a4;
  v24[10] = a1;
  v24[7] = a3;
  v24[13] = a5;
  v6 = type metadata accessor for URL(0);
  __chkstk_darwin(v6);
  v7 = type metadata accessor for TimeZone(0);
  v24[2] = *(_QWORD *)(v7 - 8);
  v24[3] = v7;
  __chkstk_darwin(v7);
  v24[1] = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Location(0);
  v24[11] = *(_QWORD *)(v9 - 8);
  v24[12] = v9;
  __chkstk_darwin(v9);
  v24[6] = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
  __chkstk_darwin(v11);
  v24[5] = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v24[4] = (char *)v24 - v14;
  __chkstk_darwin(v15);
  v16 = type metadata accessor for DetailCondition(0);
  __chkstk_darwin(v16);
  v24[8] = (char *)v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v19 = type metadata accessor for LocationComponentAction(0);
  __chkstk_darwin(v19);
  v21 = (char *)v24 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100080C0C(a2, (uint64_t)v21, v22);
  v23 = (char *)sub_1001C1D38 + 4 * word_100980760[swift_getEnumCaseMultiPayload(v21)];
  __asm { BR              X10 }
}

uint64_t sub_1001C1D38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(unsigned __int8 *)(v3 + *(int *)(sub_1000BA294(&qword_100BC5FE8) + 48));
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
  v6(v0, v3, v1);
  if (v5 == 1)
  {
    v7 = *(_QWORD *)(v4 - 88);
    v6(v7, v0, v1);
    v8 = type metadata accessor for LocationPreviewModalViewState(0);
    swift_storeEnumTagMultiPayload(v7, v8, 0);
    v9 = v7;
    v10 = 0;
    v11 = v8;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
    v11 = type metadata accessor for LocationPreviewModalViewState(0);
    v9 = *(_QWORD *)(v4 - 88);
    v10 = 1;
  }
  return _s7Weather24LocationCompositionStateOwst_0(v9, v10, 1, v11);
}

void sub_1001C230C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t (*v74)(_QWORD);
  char *v75;
  _QWORD v76[3];
  uint64_t v77;
  char *v78;
  char *v79;
  char *v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  char *v89;
  char *v90;
  char *v91;
  char *v92;
  char *v93;
  char *v94;
  char *v95;
  char *v96;
  uint64_t v97;
  char *v98;
  char *v99;
  char *v100;
  char *v101;
  char *v102;
  char *v103;
  char *v104;
  char *v105;
  char *v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  char *v115;
  char *v116;
  char *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;

  v109 = a5;
  v97 = a4;
  v121 = a3;
  v112 = a2;
  v120 = a1;
  v86 = type metadata accessor for URL(0);
  v84 = *(_QWORD *)(v86 - 8);
  __chkstk_darwin(v86);
  v96 = (char *)v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1000BA294(&qword_100BC6000);
  __chkstk_darwin(v6);
  v82 = (char *)v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = type metadata accessor for DisplayMetrics(0);
  __chkstk_darwin(v85);
  v89 = (char *)v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = type metadata accessor for WeatherMapPresentationState(0);
  __chkstk_darwin(v81);
  v88 = (char *)v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1000BA294(&qword_100BC5F68);
  __chkstk_darwin(v10);
  v80 = (char *)v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1000BA294(&qword_100BC5F70);
  __chkstk_darwin(v12);
  v106 = (char *)v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1000BA294(&qword_100BC5F78);
  __chkstk_darwin(v14);
  v105 = (char *)v76 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1000BA294(&qword_100BC5F80);
  __chkstk_darwin(v16);
  v104 = (char *)v76 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = type metadata accessor for ViewState(0);
  __chkstk_darwin(v118);
  v103 = (char *)v76 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1000BA294(qword_100BC6008);
  __chkstk_darwin(v19);
  v83 = (char *)v76 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v79 = (char *)v76 - v22;
  __chkstk_darwin(v23);
  v108 = (char *)v76 - v24;
  v77 = type metadata accessor for TimeZone(0);
  v76[2] = *(_QWORD *)(v77 - 8);
  __chkstk_darwin(v77);
  v76[1] = (char *)v76 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = type metadata accessor for Location(0);
  v111 = *(_QWORD *)(v110 - 8);
  __chkstk_darwin(v110);
  v94 = (char *)v76 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_1000BA294(&qword_100BC5F60);
  __chkstk_darwin(v27);
  v119 = (char *)v76 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v78 = (char *)v76 - v30;
  v31 = sub_1000BA294(&qword_100BC5F88);
  __chkstk_darwin(v31);
  v87 = (char *)v76 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v113 = (char *)v76 - v34;
  __chkstk_darwin(v35);
  v95 = (char *)v76 - v36;
  v37 = sub_1000BA294(&qword_100BC5F90);
  __chkstk_darwin(v37);
  v102 = (char *)v76 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  v114 = (char *)v76 - v40;
  __chkstk_darwin(v41);
  v93 = (char *)v76 - v42;
  v43 = sub_1000BA294(&qword_100BC5F98);
  __chkstk_darwin(v43);
  v101 = (char *)v76 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v45);
  v115 = (char *)v76 - v46;
  __chkstk_darwin(v47);
  v92 = (char *)v76 - v48;
  v49 = sub_1000BA294(&qword_100BC5FA0);
  __chkstk_darwin(v49);
  v100 = (char *)v76 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v51);
  v116 = (char *)v76 - v52;
  __chkstk_darwin(v53);
  v91 = (char *)v76 - v54;
  v55 = sub_1000BA294(&qword_100BC5FA8);
  __chkstk_darwin(v55);
  v99 = (char *)v76 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v57);
  v117 = (char *)v76 - v58;
  __chkstk_darwin(v59);
  v90 = (char *)v76 - v60;
  v61 = sub_1000BA294(&qword_100BC5FB0);
  __chkstk_darwin(v61);
  v98 = (char *)v76 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v63);
  __chkstk_darwin(v64);
  v107 = (char *)v76 - v65;
  v66 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
  __chkstk_darwin(v66);
  __chkstk_darwin(v67);
  __chkstk_darwin(v68);
  v69 = type metadata accessor for DetailCondition(0);
  __chkstk_darwin(v69);
  __chkstk_darwin(v70);
  v71 = type metadata accessor for LocationComponentAction(0);
  __chkstk_darwin(v71);
  v73 = (char *)v76 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100080C0C(v121, (uint64_t)v73, v74);
  v75 = (char *)sub_1001C2B78 + 4 * word_100980772[swift_getEnumCaseMultiPayload(v73)];
  __asm { BR              X10 }
}

uint64_t sub_1001C2B78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v3 = *(unsigned __int8 *)(v1 + *(int *)(sub_1000BA294(&qword_100BC5FE8) + 48));
  v4 = *(_QWORD *)(v2 - 496);
  v5 = *(_QWORD *)(v2 - 400);
  v6 = *(_QWORD *)(v2 - 480);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v5, v1, v6);
  if (v3 == 1)
  {
    v7 = type metadata accessor for AppConfigurationState(0);
    *(_QWORD *)(v2 - 576) = v0;
    _s7Weather24LocationCompositionStateOwst_0(v0, 1, 1, v7);
    v8 = type metadata accessor for EnvironmentState(0);
    v9 = *(_QWORD *)(v2 - 224);
    _s7Weather24LocationCompositionStateOwst_0(v9, 1, 1, v8);
    v10 = type metadata accessor for LocationsState(0);
    v11 = *(_QWORD *)(v2 - 232);
    _s7Weather24LocationCompositionStateOwst_0(v11, 1, 1, v10);
    v12 = type metadata accessor for NotificationsOptInState(0);
    v13 = *(_QWORD *)(v2 - 240);
    _s7Weather24LocationCompositionStateOwst_0(v13, 1, 1, v12);
    v14 = type metadata accessor for TimeState(0);
    v15 = *(_QWORD *)(v2 - 248);
    _s7Weather24LocationCompositionStateOwst_0(v15, 1, 1, v14);
    v16 = *(_QWORD *)(v2 - 256);
    _s7Weather24LocationCompositionStateOwst_0(v16, 1, 1, *(_QWORD *)(v2 - 216));
    v17 = *(_QWORD *)(v2 - 208);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v17, v5, v6);
    v18 = type metadata accessor for ModalViewState.LocationDetailModal(0);
    swift_storeEnumTagMultiPayload(v17, v18, 6);
    v19 = type metadata accessor for ModalViewState(0);
    swift_storeEnumTagMultiPayload(v17, v19, 5);
    _s7Weather24LocationCompositionStateOwst_0(v17, 0, 1, v19);
    v20 = *(_QWORD *)(v2 - 576);
    v21 = v4;
    v22 = sub_1000DEBAC(0, 3, v20, v9, v11, 0, 0, 0, v13, v15, v16, v17, 0, 0, 0, 0, 0, 0, 0,
            *(_QWORD *)(v2 - 200));
    sub_100021A14(v17, &qword_100BC5F60);
    sub_100021A14(v16, &qword_100BC5F88);
    sub_100021A14(v15, &qword_100BC5F90);
    sub_100021A14(v13, &qword_100BC5F98);
    sub_100021A14(v11, &qword_100BC5FA0);
    sub_100021A14(v9, &qword_100BC5FA8);
    sub_100021A14(v20, &qword_100BC5FB0);
    (*(void (**)(_QWORD, uint64_t))(v21 + 8))(*(_QWORD *)(v2 - 400), v6);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v6);
    v22 = *(_QWORD *)(v2 - 200);
    swift_retain();
  }
  return v22;
}

void sub_1001C43A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  char *v8;
  uint64_t v9;

  v3 = type metadata accessor for URL(0);
  __chkstk_darwin(v3);
  v4 = type metadata accessor for LocationComponentAction(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100080C0C(a2, (uint64_t)v6, v7);
  v8 = (char *)sub_1001C4470 + 4 * byte_100980784[swift_getEnumCaseMultiPayload(v6)];
  __asm { BR              X10 }
}

void sub_1001C4470()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;

  v6 = *(unsigned __int8 *)(v4 + *(int *)(sub_1000BA294(&qword_100BC5FE8) + 48));
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32);
  v7(v3, v4, v2);
  if (v6 == 1)
  {
    v7(v0, v3, v2);
    v8 = type metadata accessor for LocationPreviewModalViewState(0);
    swift_storeEnumTagMultiPayload(v0, v8, 0);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v2);
    v9 = type metadata accessor for LocationPreviewViewState(0);
    sub_100080C0C(v1 + *(int *)(v9 + 20), v0, type metadata accessor for LocationPreviewModalViewState);
  }
}

_QWORD *sub_1001C4570()
{
  _QWORD *v0;

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 2);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 7);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 12);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 17);
  return v0;
}

uint64_t sub_1001C45A4()
{
  uint64_t v0;

  sub_1001C4570();
  return swift_deallocClassInstance(v0, 176, 7);
}

uint64_t sub_1001C45C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v10 = type metadata accessor for ModalViewState(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for LocationPreviewViewState(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1000BA294(qword_100BC6008);
  __chkstk_darwin(v16);
  v18 = (char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001C4790(a2, a3, a4, (uint64_t)v18);
  sub_1001C4BCC((uint64_t)v18, a1);
  sub_100080C0C(a2 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView, (uint64_t)v12, type metadata accessor for ModalViewState);
  if (swift_getEnumCaseMultiPayload(v12))
  {
    sub_1000215BC((uint64_t)v12, type metadata accessor for ModalViewState);
    v19 = 1;
  }
  else
  {
    sub_10007802C((uint64_t)v12, (uint64_t)v15, type metadata accessor for LocationPreviewViewState);
    sub_10007802C((uint64_t)v15, a5, type metadata accessor for LocationPreviewViewState);
    v19 = 0;
  }
  v20 = type metadata accessor for ModalViewState.MapViewModal(0);
  _s7Weather24LocationCompositionStateOwst_0(a5, v19, 1, v20);
  swift_storeEnumTagMultiPayload(a5, v10, 4);
  return _s7Weather24LocationCompositionStateOwst_0(a5, 0, 1, v10);
}

uint64_t sub_1001C4790@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  char v51[24];

  v49 = a3;
  v50 = a2;
  v6 = type metadata accessor for Location.Identifier(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1000BA294(&qword_100BC3380);
  __chkstk_darwin(v10);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1000BA294(&qword_100BC3460);
  __chkstk_darwin(v13);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for WeatherData(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = OBJC_IVAR____TtCV7Weather9MainState8_Storage_view;
  if (*(unsigned __int8 *)(a1 + *(int *)(type metadata accessor for ViewState(0) + 40) + v19 + 1) != 128)
  {
    v26 = type metadata accessor for WeatherMapOverlayKind(0);
    return _s7Weather24LocationCompositionStateOwst_0(a4, 1, 1, v26);
  }
  v46 = v6;
  v47 = v16;
  v43 = v18;
  v44 = v9;
  v20 = v49;
  v45 = v7;
  v48 = a4;
  v21 = *(_QWORD *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
  swift_bridgeObjectRetain(v21);
  v23 = Location.id.getter(v22);
  sub_1000EED10(v23, v24, v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v25 = type metadata accessor for LocationWeatherDataState(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v25) == 1)
  {
    sub_100021A14((uint64_t)v12, &qword_100BC3380);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 1, 1, v47);
  }
  else
  {
    sub_1000EADE8();
    sub_1000215BC((uint64_t)v12, type metadata accessor for LocationWeatherDataState);
    v28 = v47;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v47) != 1)
    {
      v32 = (uint64_t)v43;
      sub_10007802C((uint64_t)v15, (uint64_t)v43, type metadata accessor for WeatherData);
      v33 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
      swift_beginAccess(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment, v51, 0, 0);
      LOBYTE(v33) = *(_BYTE *)(v33 + 2) == 4;
      sub_1000DB418(v20 + 2, v20[5]);
      v34 = sub_100023644(v32, v33);
      v36 = v35;
      v37 = sub_1000DB418(v20 + 7, v20[10]);
      v38 = v32 + *(int *)(v28 + 24);
      v39 = (uint64_t)v44;
      Location.identifier.getter(v37);
      v40 = v48;
      sub_10005886C(v38, (uint64_t)v34, v36, v39, v48);
      swift_bridgeObjectRelease();
      v41 = swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t, __n128))(v45 + 8))(v39, v46, v41);
      sub_1000215BC(v32, type metadata accessor for WeatherData);
      v30 = type metadata accessor for WeatherMapOverlayKind(0);
      v31 = v40;
      return _s7Weather24LocationCompositionStateOwst_0(v31, 0, 1, v30);
    }
  }
  sub_100021A14((uint64_t)v15, &qword_100BC3460);
  sub_1000DB418(v20 + 7, v20[10]);
  v29 = v48;
  sub_1000198FC(v48);
  v30 = type metadata accessor for WeatherMapOverlayKind(0);
  v31 = v29;
  return _s7Weather24LocationCompositionStateOwst_0(v31, 0, 1, v30);
}

void *sub_1001C4B3C(const void *a1, void *a2)
{
  initializeWithTake for ReportWeatherViewModel(a2, a1);
  return a2;
}

_QWORD *sub_1001C4B78(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11]);
  return a1;
}

uint64_t sub_1001C4BCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(qword_100BC6008);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001C4C14(uint64_t a1)
{
  uint64_t v1;

  return swift_getEnumCaseMultiPayload(a1, v1);
}

void sub_1001C4C1C(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v4;

  sub_1001C1B14(a1, a2, v4, a3, a4);
}

void sub_1001C4C2C()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);

  sub_1000215BC(v0, v1);
}

void sub_1001C4C38()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);

  sub_1000215BC(v0, v1);
}

uint64_t sub_1001C4C44()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 256);
}

void property wrapper backing initializer of WindowLiveResizeDeferred._value()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1000BBC50();
  __chkstk_darwin(v0);
  sub_1000BA47C(v1, v2);
  sub_1001C4C98();
  sub_1000C440C();
  sub_10004A2A0();
}

void sub_1001C4C98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1000BBC50();
  __chkstk_darwin(v2);
  sub_1000BA47C(v3, v4);
  Published.init(initialValue:)(v1, v0);
  sub_1000C440C();
  sub_10004A2A0();
}

uint64_t WindowLiveResizeDeferred.wrappedValue.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100980810);
  v4 = swift_getKeyPath(&unk_100980848);
  static Published.subscript.getter(a1, v1, KeyPath, v4);
  swift_release(KeyPath);
  return swift_release(v4);
}

uint64_t Debounced.wrappedValue.setter(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  CurrentValueSubject.send(_:)();
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 8))(a1);
}

void (*WindowLiveResizeDeferred.wrappedValue.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  _QWORD *v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v3[1] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[2] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[3] = malloc(v6);
  v7 = malloc(v6);
  v3[4] = v7;
  WindowLiveResizeDeferred.wrappedValue.getter(v7);
  return sub_1001C4E34;
}

void sub_1001C4E34(uint64_t a1, char a2)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 24);
  v4 = *(void **)(*(_QWORD *)a1 + 32);
  if ((a2 & 1) != 0)
  {
    v5 = v2[1];
    v6 = v2[2];
    (*(void (**)(_QWORD, void *, uint64_t))(v6 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 24), v4, v5);
    Debounced.wrappedValue.setter((uint64_t)v3);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    Debounced.wrappedValue.setter(*(_QWORD *)(*(_QWORD *)a1 + 32));
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t WindowLiveResizeDeferred.__allocating_init(wrappedValue:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
  WindowLiveResizeDeferred.init(wrappedValue:)(a1);
  return v3;
}

_QWORD *WindowLiveResizeDeferred.init(wrappedValue:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  __n128 v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  __n128 v34;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t WitnessTable;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  _QWORD v48[4];

  v2 = v1;
  v4 = (_QWORD *)*v1;
  v5 = sub_1000BA294(&qword_100BC3068);
  __chkstk_darwin(v5);
  sub_100098728();
  v8 = v7 - v6;
  v9 = type metadata accessor for NSRunLoop.SchedulerTimeType.Stride(0);
  v43 = *(_QWORD *)(v9 - 8);
  v44 = v9;
  __chkstk_darwin(v9);
  sub_100098728();
  v12 = v11 - v10;
  v13 = v4[10];
  v14 = type metadata accessor for CurrentValueSubject(255, v13, &type metadata for Never, &protocol witness table for Never);
  v40 = sub_10012038C();
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for CurrentValueSubject<A, B>, v14);
  v38 = sub_1001203C8();
  v48[0] = v14;
  v48[1] = v40;
  v48[2] = WitnessTable;
  v48[3] = v38;
  v42 = type metadata accessor for Publishers.Debounce(0, v48);
  v45 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin(v42);
  v36 = (char *)&v36 - v15;
  v46 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v16);
  sub_100098728();
  v19 = v18 - v17;
  *(_QWORD *)((char *)v2 + v4[14]) = &_swiftEmptySetSingleton;
  v41 = a1;
  sub_1000DD72C(v18 - v17);
  sub_1000BBC6C((uint64_t)v2 + *(_QWORD *)(*v2 + 96), (uint64_t)v48);
  v37 = v4[11];
  property wrapper backing initializer of WindowLiveResizeDeferred._value();
  swift_endAccess(v48);
  sub_1000DD72C(v19);
  v20 = CurrentValueSubject.__allocating_init(_:)(v19);
  *(_QWORD *)((char *)v2 + *(_QWORD *)(*v2 + 104)) = v20;
  v48[0] = v20;
  swift_retain();
  NSRunLoop.SchedulerTimeType.Stride.init(floatLiteral:)(v21, 0.05);
  v47 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v22 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  _s7Weather24LocationCompositionStateOwst_0(v8, 1, 1, v22);
  v23 = v36;
  Publisher.debounce<A>(for:scheduler:options:)(v12, &v47, v8, v14, v40, WitnessTable, v38, v24);
  sub_1001C570C(v8);

  (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v12, v44);
  swift_release(v48[0]);
  v25 = swift_allocObject(&unk_100B60CC0, 24, 7);
  swift_weakInit(v25 + 16);
  v26 = (_QWORD *)swift_allocObject(&unk_100B60CE8, 40, 7);
  v27 = v37;
  v26[2] = v13;
  v26[3] = v27;
  v26[4] = v25;
  swift_retain();
  v28 = v42;
  v29 = swift_getWitnessTable(&protocol conformance descriptor for Publishers.Debounce<A, B>, v42);
  v31 = Publisher<>.sink(receiveValue:)(sub_1001C5794, v26, v28, v29, v30);
  v32 = swift_release(v26);
  (*(void (**)(char *, uint64_t, __n128))(v45 + 8))(v23, v28, v32);
  swift_release(v25);
  v33 = (uint64_t)v2 + *(_QWORD *)(*v2 + 112);
  sub_1000BBC6C(v33, (uint64_t)v48);
  AnyCancellable.store(in:)(v33);
  swift_endAccess(v48);
  v34 = swift_release(v31);
  (*(void (**)(uint64_t, uint64_t, __n128))(v46 + 8))(v41, v13, v34);
  return v2;
}

uint64_t sub_1001C5280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[24];

  v7 = *(_QWORD *)(a3 - 8);
  v8 = __chkstk_darwin(a1);
  v10 = &v25[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v8);
  v12 = &v25[-v11 - 8];
  v14 = v13 + 16;
  swift_beginAccess(v13 + 16, v25, 0, 0);
  result = swift_weakLoadStrong(v14);
  if (result)
  {
    v16 = result;
    __chkstk_darwin(result);
    *(&v24 - 2) = a3;
    *(&v24 - 1) = a4;
    KeyPath = swift_getKeyPath(&unk_100980810);
    __chkstk_darwin(KeyPath);
    *(&v24 - 2) = a3;
    *(&v24 - 1) = a4;
    v18 = swift_getKeyPath(&unk_100980848);
    static Published.subscript.getter(v12, v16, KeyPath, v18);
    swift_release(KeyPath);
    swift_release(v18);
    LOBYTE(KeyPath) = dispatch thunk of static Equatable.== infix(_:_:)(v12, a1, a3, a4);
    v19 = *(void (**)(char *, uint64_t))(v7 + 8);
    v19(v12, a3);
    if ((KeyPath & 1) != 0)
    {
      return swift_release(v16);
    }
    else
    {
      v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16);
      v21 = v20(v12, a1, a3);
      __chkstk_darwin(v21);
      *(&v24 - 2) = a3;
      *(&v24 - 1) = a4;
      v22 = swift_getKeyPath(&unk_100980810);
      __chkstk_darwin(v22);
      *(&v24 - 2) = a3;
      *(&v24 - 1) = a4;
      v23 = swift_getKeyPath(&unk_100980848);
      v20(v10, (uint64_t)v12, a3);
      static Published.subscript.setter(v10, v16, v22, v23);
      return ((uint64_t (*)(char *, uint64_t))v19)(v12, a3);
    }
  }
  return result;
}

uint64_t Debounced.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 96);
  v2 = type metadata accessor for Published(0, *(_QWORD *)(*(_QWORD *)v0 + 80));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release(*(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 104)));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 112)));
  return v0;
}

uint64_t Debounced.__deallocating_deinit()
{
  uint64_t v0;

  Debounced.deinit();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1001C5548@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100980810);
  v5 = swift_getKeyPath(&unk_100980848);
  static Published.subscript.getter(a2, v3, KeyPath, v5);
  swift_release(KeyPath);
  return swift_release(v5);
}

uint64_t sub_1001C55E0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *);
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  _QWORD v18[4];

  v5 = *(_QWORD *)(a4 + a3 - 16);
  v6 = *(_QWORD *)(a4 + a3 - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = __chkstk_darwin(a1);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)v18 - v11;
  v13 = *(void (**)(char *))(v7 + 16);
  v13((char *)v18 - v11);
  v14 = *a2;
  v18[2] = v5;
  v18[3] = v6;
  KeyPath = swift_getKeyPath(&unk_100980810);
  v18[0] = v5;
  v18[1] = v6;
  v16 = swift_getKeyPath(&unk_100980848);
  ((void (*)(char *, char *, uint64_t))v13)(v10, v12, v5);
  swift_retain(v14);
  static Published.subscript.setter(v10, v14, KeyPath, v16);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v5);
}

uint64_t sub_1001C56F4()
{
  return 16;
}

__n128 sub_1001C5700(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1001C570C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1000BA294(&qword_100BC3068);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001C574C()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001C5770()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001C5794(uint64_t a1)
{
  uint64_t *v1;

  return sub_1001C5280(a1, v1[4], v1[2], v1[3]);
}

uint64_t type metadata accessor for WindowLiveResizeDeferred(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100108FF8(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WindowLiveResizeDeferred);
}

void sub_1001C57B0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1000BA294((uint64_t *)&unk_100BD35A0);
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_100098728();
  type metadata accessor for NotificationsOptInState(0);
  sub_1000B42B0();
  __chkstk_darwin(v5);
  sub_100088FDC();
  sub_1000BA294(&qword_100BC5F60);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_100088FDC();
  sub_1000BA294(&qword_100BC5F88);
  sub_1000B42B0();
  __chkstk_darwin(v7);
  sub_100088FDC();
  sub_1000BA294(&qword_100BC5F90);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_100088FDC();
  sub_1000BA294(&qword_100BC5F98);
  sub_1000B42B0();
  __chkstk_darwin(v9);
  sub_100088FDC();
  sub_1000BA294(&qword_100BC5FA0);
  sub_1000B42B0();
  __chkstk_darwin(v10);
  sub_100088FDC();
  sub_1000BA294(&qword_100BC5FA8);
  sub_1000B42B0();
  __chkstk_darwin(v11);
  sub_100088FDC();
  sub_1000BA294(&qword_100BC5FB0);
  sub_1000B42B0();
  __chkstk_darwin(v12);
  sub_100088FDC();
  v13 = type metadata accessor for Location.Identifier(0);
  __chkstk_darwin(v13);
  sub_100098728();
  type metadata accessor for LocationViewerActiveLocationState(0);
  sub_1000B42B0();
  __chkstk_darwin(v14);
  __chkstk_darwin(v15);
  type metadata accessor for ViewState.SecondaryViewState(0);
  sub_1000B42B0();
  __chkstk_darwin(v16);
  sub_100098728();
  type metadata accessor for ViewState(0);
  sub_1000B42B0();
  __chkstk_darwin(v17);
  sub_100098728();
  __asm { BR              X10 }
}

uint64_t sub_1001C5A24()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v10 = *(_QWORD *)(v8 - 104);
  v9 = *(_QWORD *)(v8 - 96);
  if (*(_BYTE *)(v10 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications) != 1)
    goto LABEL_19;
  sub_100084050(v10 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, v7, type metadata accessor for ViewState);
  v11 = *(int **)(v8 - 88);
  sub_100084050(v7 + v11[5], (uint64_t)v0, type metadata accessor for ViewState.SecondaryViewState);
  if (swift_getEnumCaseMultiPayload(v0) == 1)
  {
    sub_1000215BC((uint64_t)v0, type metadata accessor for ViewState.SecondaryViewState);
LABEL_4:
    v9 = *(_QWORD *)(v8 - 96);
    sub_1000215BC(v7, type metadata accessor for ViewState);
LABEL_19:
    v51 = sub_1000C08E4();
    v23 = *(_QWORD *)(v8 - 120);
    v54 = sub_1000BBC78(v51, v52, v53, v51);
    v55 = sub_1000BA4A4(v54);
    v58 = sub_1000DCB10(v55, v56, v57, v55);
    v59 = sub_1000B43E4(v58);
    v32 = *(_QWORD *)(v8 - 128);
    swift_storeEnumTagMultiPayload(v32, v59, 6);
    v60 = _s7Weather24LocationCompositionStateOwst_0(v32, 0, 1, v59);
    v50 = sub_1000DD738(v60, v12, v13, v14, v15, v16, v17, v18, v61, v62, v63, v64, v65, v66, v67, v68, v69, v70, 0,
            v10);
    goto LABEL_5;
  }
  v20 = *v0;
  if (*(_QWORD *)(v7 + v11[9] + 8) == 1)
  {
    v21 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
    objc_msgSend(v21, "userInterfaceIdiom");

    if ((*(_BYTE *)(v7 + v11[7]) & 1) == 0)
    {
      sub_100098834();
      v10 = *(_QWORD *)(v8 - 104);
      goto LABEL_4;
    }
  }
  sub_1000215BC(v7, type metadata accessor for ViewState);
  sub_100084050(v20 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_activeLocationState, v5, type metadata accessor for LocationViewerActiveLocationState);
  sub_100084050(v5, v6, type metadata accessor for LocationViewerActiveLocationState);
  v22 = _s7Weather24LocationCompositionStateOwet_0(v6, 1, v2);
  if ((_DWORD)v22 == 1)
    static CurrentLocation.placeholderIdentifier.getter(v22);
  else
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v1, v6, v2);
  v23 = *(_QWORD *)(v8 - 120);
  v6 = *(_QWORD *)(v8 - 112);
  v9 = *(_QWORD *)(v8 - 96);
  sub_1000215BC(v5, type metadata accessor for LocationViewerActiveLocationState);
  v25 = Location.Identifier.kind.getter(v24) & 1;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v26 = Location.Identifier.Kind.rawValue.getter(v25);
  v28 = v27;
  v29 = Location.Identifier.Kind.rawValue.getter(1);
  if (v26 == v29 && v28 == v30)
  {
    swift_bridgeObjectRelease_n(v28, 2);
    goto LABEL_18;
  }
  v32 = _stringCompareWithSmolCheck(_:_:expecting:)(v26, v28, v29, v30, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v32 & 1) != 0)
  {
LABEL_18:
    sub_100098834();
    v10 = *(_QWORD *)(v8 - 104);
    goto LABEL_19;
  }
  v33 = sub_1000C08E4();
  v36 = sub_1000BBC78(v33, v34, v35, v33);
  _s7Weather24LocationCompositionStateOwst_0(v6, 1, 1, v36);
  v37 = type metadata accessor for LocationsState(0);
  v40 = sub_1000DCB10(v37, v38, v39, v37);
  v41 = sub_1000CC83C(v40);
  sub_1000D9B78(v41);
  v42 = _s7Weather24LocationCompositionStateOwst_0(v32, 0, 1, v28);
  v50 = sub_1000DD738(v42, v43, v44, v45, v46, v47, v48, v49, v61, v62, v63, v64, v65, v66, v67, v68, v69, v70, 0,
          *(_QWORD *)(v8 - 104));
  sub_100098834();
LABEL_5:
  sub_100021A14(v32, &qword_100BC5F60);
  sub_100021A14(v3, &qword_100BC5F88);
  sub_100021A14(v4, &qword_100BC5F90);
  sub_100021A14(v5, &qword_100BC5F98);
  sub_100021A14(v9, &qword_100BC5FA0);
  sub_100021A14(v6, &qword_100BC5FA8);
  sub_100021A14(v23, &qword_100BC5FB0);
  return v50;
}

void sub_1001C6064(uint64_t a1, unint64_t a2, int a3, uint64_t a4, unint64_t a5, double a6, double a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  os_log_type_t v44;
  _BOOL4 v45;
  _QWORD *v46;
  char v47;
  uint8_t *v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  _BYTE *v52;
  int *v53;
  uint64_t v54;
  _BYTE *v55;
  _QWORD *v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  double v65;
  double v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  _BOOL4 v71;
  char v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  unint64_t v77;
  NSObject *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  os_log_type_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  os_log_type_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  os_log_type_t v103;
  uint8_t *v104;
  int *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  double *v110;
  uint64_t *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t (*v116)(uint64_t);
  _QWORD *v117;
  uint64_t v118;
  char v119;
  uint64_t v120;
  _BYTE *v121;
  int *v122;
  uint64_t v123;
  _BYTE *v124;
  _QWORD *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _BYTE *v131;
  int *v132;
  uint64_t v133;
  uint64_t v134;
  double *v135;
  uint64_t *v136;
  uint64_t v137;
  _BYTE v138[4];
  int v139;
  uint64_t v140;
  NSObject *v141;
  uint64_t v142;
  unint64_t v143;
  uint64_t v144;
  uint64_t v145;
  _BYTE *v146;
  uint64_t v147;
  int v148;
  _QWORD *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;

  v144 = a4;
  v148 = a3;
  sub_1000BA294(&qword_100BC61F0);
  sub_1000B42B0();
  __chkstk_darwin(v12);
  sub_100098728();
  v15 = v14 - v13;
  v16 = type metadata accessor for SavedLocation(0);
  sub_1000B42B0();
  __chkstk_darwin(v17);
  v19 = &v138[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v20);
  v22 = &v138[-v21];
  sub_1000BA294(&qword_100BC61F8);
  sub_1000B42B0();
  __chkstk_darwin(v23);
  sub_100098728();
  v26 = v25 - v24;
  v145 = type metadata accessor for OpenL2Descriptor(0);
  sub_1000B42B0();
  __chkstk_darwin(v27);
  sub_100098728();
  v146 = (_BYTE *)(v29 - v28);
  v147 = type metadata accessor for ActivityAction(0);
  sub_1000B42B0();
  __chkstk_darwin(v30);
  sub_100098728();
  v33 = v32 - v31;
  sub_1000BA294((uint64_t *)&unk_100BD35A0);
  sub_1000B42B0();
  __chkstk_darwin(v34);
  sub_100098728();
  v37 = v36 - v35;
  if (!a2)
    goto LABEL_5;
  v38 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v38 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v38)
  {
    if (qword_100BC24B0 != -1)
      swift_once(&qword_100BC24B0, sub_1006F391C);
    v80 = sub_100098720();
    v81 = sub_1000AECD4(v80, (uint64_t)qword_100CAF1F8);
    Logger.logObject.getter(v81);
    v82 = sub_100099224();
    if (os_log_type_enabled((os_log_t)v15, v82))
    {
      v83 = sub_100098710(22);
      v84 = sub_100098710(32);
      v152 = v84;
      *(_DWORD *)v83 = 141558275;
      sub_1000DCB44();
      *(_WORD *)(v83 + 12) = 2081;
      sub_1000BD28C();
      v85 = String.init<A>(describing:)(&v150);
      v87 = v86;
      v150 = sub_1000CE1C8(v85, v86, &v152);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v150, &v151);
      swift_bridgeObjectRelease(v87);
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)v15, v82, "Encountered an empty location name while handling a coordinate activity. coordinate=%{private,mask.hash}s", (uint8_t *)v83, 0x16u);
      sub_1000C12F0();
      sub_1000986F0(v84);
      sub_1000986F0(v83);
    }

    v88 = type metadata accessor for Date(0);
    sub_10009D34C(v37, v89, v90, v88);
    sub_1001C6D68();
    v91 = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage);
    sub_1001C6064(0, 0, 16, v37, v91, a6, a7);
    swift_bridgeObjectRelease(v91);
    sub_100021A14(v37, (uint64_t *)&unk_100BD35A0);
  }
  else
  {
LABEL_5:
    v142 = v26;
    v143 = a5;
    v39 = v149;
    v40 = v149 + 4;
    sub_1000DB418(v149 + 4, v149[7]);
    sub_1000CFB74();
    sub_1004E14D0();
    if ((v41 & 1) != 0)
    {
      if (qword_100BC24B0 != -1)
        swift_once(&qword_100BC24B0, sub_1006F391C);
      v42 = sub_100098720();
      v43 = sub_1000AECD4(v42, (uint64_t)qword_100CAF1F8);
      Logger.logObject.getter(v43);
      v44 = sub_100099224();
      v45 = sub_1000E6EC8();
      v46 = v149;
      v47 = v148;
      if (v45)
      {
        v48 = (uint8_t *)sub_100098710(2);
        *(_WORD *)v48 = 0;
        _os_log_impl((void *)&_mh_execute_header, (os_log_t)v15, v44, "CoordinateHandler found existing location for coordinate but it matched a location coalesced with the current location", v48, 2u);
        sub_1000986F0((uint64_t)v48);
      }

      v49 = v46[23];
      sub_1000DB418(v46 + 19, v46[22]);
      swift_storeEnumTagMultiPayload(v33, v147, 4);
      sub_10009D368();
      v50 = sub_1000CD574();
      sub_1000C51B4(v50);
      sub_1000998D4(v51, type metadata accessor for ActivityAction);
      if (v47 != 16)
      {
        v53 = (int *)v145;
        v52 = v146;
        v54 = sub_1000992C4();
        sub_1000DD770(v54);
        sub_1000B4424(v53[9]);
        *v52 = v47;
        v52[1] = 0;
        v55 = &v52[v53[7]];
        *(_QWORD *)v55 = 0;
        *((_QWORD *)v55 + 1) = 0;
        v55[16] = v49;
        v56 = &v52[v53[8]];
        *v56 = 0;
        v56[1] = 0;
        v57 = v143;
        *(_QWORD *)&v52[v53[10]] = v143;
        sub_1000DB418(v46 + 19, v46[22]);
        sub_1000C2450();
        v58 = sub_1000D9404();
        _s7Weather24LocationCompositionStateOwst_0(v58, v59, v60, (uint64_t)v53);
        v61 = v57;
LABEL_38:
        swift_bridgeObjectRetain(v61);
        sub_100264948(v16);
        sub_100021A14(v16, &qword_100BC61F8);
        v115 = (uint64_t)v52;
LABEL_39:
        v116 = type metadata accessor for OpenL2Descriptor;
LABEL_44:
        sub_1000215BC(v115, v116);
      }
    }
    else
    {
      sub_1000DB418(v39 + 4, v39[7]);
      v62 = sub_1000CFB74();
      sub_1004E18B4(v62, v63, v64, v65, v66);
      if (_s7Weather24LocationCompositionStateOwet_0(v15, 1, v16) != 1)
      {
        sub_1001C6CE4(v15, (uint64_t)v22);
        v92 = v148;
        if (qword_100BC24B0 != -1)
          swift_once(&qword_100BC24B0, sub_1006F391C);
        v93 = sub_100098720();
        sub_1000AECD4(v93, (uint64_t)qword_100CAF1F8);
        sub_100084050((uint64_t)v22, (uint64_t)v19, (uint64_t (*)(_QWORD))&type metadata accessor for SavedLocation);
        Logger.logObject.getter(v94);
        v95 = sub_100099224();
        if (os_log_type_enabled((os_log_t)v15, v95))
        {
          v96 = sub_100098710(22);
          v150 = sub_100098710(32);
          v97 = v150;
          *(_DWORD *)v96 = 141558275;
          v152 = 1752392040;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v152, &v153);
          *(_WORD *)(v96 + 12) = 2081;
          v141 = (v96 + 14);
          sub_1001C6D28();
          v98 = dispatch thunk of CustomStringConvertible.description.getter(v16);
          v100 = v99;
          v152 = sub_1000CE1C8(v98, v99, &v150);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v152, &v153);
          swift_bridgeObjectRelease(v100);
          sub_1000215BC((uint64_t)v19, (uint64_t (*)(_QWORD))&type metadata accessor for SavedLocation);
          _os_log_impl((void *)&_mh_execute_header, (os_log_t)v15, v95, "CoordinateHandler found existing location for coordinate; opening location viewer; location=%{private,mask.hash}s",
            (uint8_t *)v96,
            0x16u);
          sub_1000C12F0();
          v101 = v97;
          v92 = v148;
          sub_1000986F0(v101);
          sub_1000986F0(v96);
        }
        else
        {
          sub_1000215BC((uint64_t)v19, (uint64_t (*)(_QWORD))&type metadata accessor for SavedLocation);
        }

        v117 = v149;
        v118 = v149[23];
        sub_1000DB418(v149 + 19, v149[22]);
        sub_100084050((uint64_t)v22, v33, (uint64_t (*)(_QWORD))&type metadata accessor for SavedLocation);
        swift_storeEnumTagMultiPayload(v33, v147, 0);
        sub_10009D368();
        v119 = sub_1000CD574();
        sub_1000C51B4(v119);
        sub_1000998D4(v120, type metadata accessor for ActivityAction);
        if (v92 != 16)
        {
          v122 = (int *)v145;
          v121 = v146;
          v123 = sub_1000992C4();
          sub_1000DD770(v123);
          sub_1000B4424(v122[9]);
          *v121 = v92;
          v121[1] = 0;
          v124 = &v121[v122[7]];
          *(_QWORD *)v124 = 0;
          *((_QWORD *)v124 + 1) = 0;
          v124[16] = v118;
          v125 = &v121[v122[8]];
          *v125 = 0;
          v125[1] = 0;
          *(_QWORD *)&v121[v122[10]] = v143;
          sub_1000DB418(v117 + 19, v117[22]);
          sub_1000C2450();
          v126 = sub_1000D9404();
          sub_1000C5B30(v126, v127, v128, (uint64_t)v122);
          sub_100264948(v16);
          sub_100021A14(v16, &qword_100BC61F8);
          sub_1000215BC((uint64_t)v121, type metadata accessor for OpenL2Descriptor);
        }
        v116 = (uint64_t (*)(uint64_t))&type metadata accessor for SavedLocation;
        v115 = (uint64_t)v22;
        goto LABEL_44;
      }
      v67 = a1;
      sub_100021A14(v15, &qword_100BC61F0);
      if (qword_100BC24B0 != -1)
        swift_once(&qword_100BC24B0, sub_1006F391C);
      v68 = sub_100098720();
      sub_1000AECD4(v68, (uint64_t)qword_100CAF1F8);
      v69 = swift_bridgeObjectRetain_n(a2, 2);
      Logger.logObject.getter(v69);
      v70 = sub_100099224();
      v141 = v15;
      v71 = sub_1000E6EC8();
      v72 = v148;
      if (v71)
      {
        v15 = sub_100098710(42);
        v140 = sub_100098710(64);
        v152 = v140;
        *(_DWORD *)v15 = 141558787;
        sub_1000DCB44();
        v139 = v70;
        *(_WORD *)(v15 + 12) = 2081;
        sub_1000BD28C();
        v73 = String.init<A>(describing:)(&v150);
        v75 = v74;
        v150 = sub_1000CE1C8(v73, v74, &v152);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v150, &v151);
        swift_bridgeObjectRelease(v75);
        *(_WORD *)(v15 + 22) = 2160;
        v150 = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v150, &v151);
        *(_WORD *)(v15 + 32) = 2081;
        if (a2)
          v76 = v67;
        else
          v76 = 7104878;
        if (a2)
          v77 = a2;
        else
          v77 = 0xE300000000000000;
        sub_100095508();
        v150 = sub_1000CE1C8(v76, v77, &v152);
        v72 = v148;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v150, &v151);
        sub_1000CF770();
        swift_bridgeObjectRelease(v77);
        v78 = v141;
        _os_log_impl((void *)&_mh_execute_header, v141, (os_log_type_t)v139, "CoordinateHandler handling coordinate that isn't in our locations; coordinate=%{private,mask.hash}s, name=%{pr"
          "ivate,mask.hash}s",
          (uint8_t *)v15,
          0x2Au);
        v79 = v140;
        swift_arrayDestroy(v140, 2);
        sub_1000986F0(v79);
        sub_1000986F0(v15);

      }
      else
      {

        sub_1000CF770();
      }
      v16 = (uint64_t)v149;
      sub_1000DB418(v40, v149[7]);
      sub_1004E1BC8();
      if ((v102 & 1) != 0)
      {
        Logger.logObject.getter(v102);
        v103 = sub_100099224();
        if (sub_1000E6EC8())
        {
          v104 = (uint8_t *)sub_100098710(2);
          *(_WORD *)v104 = 0;
          _os_log_impl((void *)&_mh_execute_header, (os_log_t)v15, v103, "A location that matches the given coordinate and location name is already being previewed.", v104, 2u);
          sub_1000986F0((uint64_t)v104);
        }

        if (v72 != 16)
        {
          v105 = (int *)v145;
          v52 = v146;
          v106 = (uint64_t)&v146[*(int *)(v145 + 24)];
          v107 = sub_1000992C4();
          sub_10009D34C(v106, v108, v109, v107);
          sub_1000B4424(v105[9]);
          *v52 = v72;
          v52[1] = 1;
          v110 = (double *)&v52[v105[7]];
          *v110 = a6;
          v110[1] = a7;
          *((_BYTE *)v110 + 16) = 0;
          v111 = (uint64_t *)&v52[v105[8]];
          *v111 = v67;
          v111[1] = a2;
          *(_QWORD *)&v52[v105[10]] = v143;
          sub_1000DB418((_QWORD *)(v16 + 152), *(_QWORD *)(v16 + 176));
          sub_1000C2450();
          v112 = sub_1000D9404();
          sub_1000C5B30(v112, v113, v114, (uint64_t)v105);
          v61 = a2;
          goto LABEL_38;
        }
      }
      else
      {
        sub_1000D0008();
        *(double *)v33 = a6;
        *(double *)(v33 + 8) = a7;
        *(_QWORD *)(v33 + 16) = v67;
        *(_QWORD *)(v33 + 24) = a2;
        v129 = type metadata accessor for PreviewLocation(0);
        swift_storeEnumTagMultiPayload(v33, v129, 3);
        swift_storeEnumTagMultiPayload(v33, v147, 1);
        sub_100095508();
        sub_10026563C(v33, 0, 1);
        sub_1000998D4(v130, type metadata accessor for ActivityAction);
        if (v72 != 16)
        {
          v132 = (int *)v145;
          v131 = v146;
          v133 = (uint64_t)&v146[*(int *)(v145 + 24)];
          v134 = sub_1000992C4();
          _s7Weather24LocationCompositionStateOwst_0(v133, 1, 1, v134);
          sub_10007C714(v144, (uint64_t)&v131[v132[9]]);
          *v131 = v72;
          v131[1] = 1;
          v135 = (double *)&v131[v132[7]];
          *v135 = a6;
          v135[1] = a7;
          *((_BYTE *)v135 + 16) = 0;
          v136 = (uint64_t *)&v131[v132[8]];
          *v136 = v67;
          v136[1] = a2;
          *(_QWORD *)&v131[v132[10]] = v143;
          sub_1000D0008();
          v137 = v142;
          sub_100084050((uint64_t)v131, v142, type metadata accessor for OpenL2Descriptor);
          sub_1000C5B30(v137, 0, 1, (uint64_t)v132);
          sub_100095508();
          sub_100264948(v137);
          sub_100021A14(v137, &qword_100BC61F8);
          v115 = (uint64_t)v131;
          goto LABEL_39;
        }
      }
    }
  }
}

void sub_1001C6C50()
{
  _QWORD *v0;
  uint64_t v1;

  swift_release(v0[3]);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 4);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 9);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 14);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 19);
  v1 = v0[25];
  swift_release(v0[27]);
  swift_release(v1);
  sub_10004A298();
}

uint64_t sub_1001C6CA4()
{
  uint64_t v0;

  sub_1001C6C50();
  return swift_deallocClassInstance(v0, 224, 7);
}

uint64_t type metadata accessor for CoordinateActivityHandler()
{
  return objc_opt_self(_TtC7Weather25CoordinateActivityHandler);
}

uint64_t sub_1001C6CE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SavedLocation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1001C6D28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC6200[0];
  if (!qword_100BC6200[0])
  {
    v1 = type metadata accessor for SavedLocation(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for SavedLocation, v1);
    atomic_store(result, qword_100BC6200);
  }
  return result;
}

unint64_t sub_1001C6D68()
{
  unint64_t result;

  result = qword_100BC6410;
  if (!qword_100BC6410)
  {
    result = swift_getWitnessTable(&unk_1009D335C, &type metadata for OpenL2DescriptorParamKeys);
    atomic_store(result, (unint64_t *)&qword_100BC6410);
  }
  return result;
}

uint64_t type metadata accessor for NoAqiNhpContentView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100108FF8(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for NoAqiNhpContentView);
}

uint64_t sub_1001C6DB0(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_100AAA29C, 1);
}

uint64_t sub_1001C6DE4@<X0>(uint64_t a1@<X0>, __int16 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  const void *v23;
  void *v24;
  uint64_t v25;
  uint64_t (*v26)(_QWORD, _QWORD);
  uint64_t WitnessTable;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, char *, uint64_t);
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t (*v51)(_QWORD, _QWORD);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  _QWORD v63[2];
  _QWORD v64[2];
  _QWORD v65[4];
  _BYTE v66[456];
  _QWORD v67[58];

  v62 = a4;
  v55 = a3;
  v60 = a7;
  v67[0] = a5;
  v67[1] = a5;
  v67[2] = a5;
  v67[3] = a5;
  v10 = a2;
  v11 = a2 & 0x100;
  v67[4] = a5;
  v67[5] = a5;
  v67[6] = a5;
  v67[7] = a5;
  v12 = sub_1000BBB64(255, 8, (uint64_t)v67);
  v53 = sub_1000AE86C(v12);
  v13 = type metadata accessor for Group(0, v53);
  v14 = *(_QWORD *)(v13 - 8);
  v56 = v13;
  v57 = v14;
  __chkstk_darwin(v13);
  sub_1000986FC();
  v59 = v15;
  __chkstk_darwin(v16);
  v58 = (char *)&v48 - v17;
  v67[0] = a5;
  v67[1] = type metadata accessor for Optional(255, a5);
  v67[2] = a5;
  v67[3] = a5;
  v67[4] = a5;
  v67[5] = a5;
  v18 = sub_1000BBB64(255, 6, (uint64_t)v67);
  v51 = (uint64_t (*)(_QWORD, _QWORD))sub_1000AE86C(v18);
  v54 = type metadata accessor for Group(0, v51);
  v52 = *(_QWORD *)(v54 - 8);
  __chkstk_darwin(v54);
  sub_1000986FC();
  v20 = v19;
  __chkstk_darwin(v21);
  v61 = (char *)&v48 - v22;
  if (v10)
  {
    if (v10 == 1)
    {
      if (v11)
      {
        v23 = &unk_100C0F178;
        goto LABEL_11;
      }
    }
    else if (v11)
    {
      v23 = &unk_100C0F508;
      goto LABEL_11;
    }
    v23 = &unk_100C0F340;
    goto LABEL_11;
  }
  if (v11)
    v23 = &unk_100C0EDE8;
  else
    v23 = &unk_100C0EFB0;
LABEL_11:
  memcpy(v67, v23, 0x1C8uLL);
  v24 = memcpy(v66, v67, sizeof(v66));
  v50 = &v48;
  __chkstk_darwin(v24);
  *(&v48 - 8) = a5;
  *(&v48 - 7) = a6;
  v48 = a1;
  *(&v48 - 6) = a1;
  *((_BYTE *)&v48 - 40) = v10;
  HIDWORD(v49) = v11 >> 8;
  *((_BYTE *)&v48 - 39) = BYTE1(v11);
  v25 = v62;
  *(&v48 - 4) = v55;
  *(&v48 - 3) = v25;
  *(&v48 - 2) = (uint64_t)v66;
  v26 = v51;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v51);
  Group<A>.init(content:)(sub_1001C81EC, &v48 - 10, v26, WitnessTable);
  v65[3] = WitnessTable;
  v28 = v54;
  v50 = (uint64_t *)swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v54);
  sub_1000B2074(v20, v28, v50);
  v29 = v52;
  v51 = *(uint64_t (**)(_QWORD, _QWORD))(v52 + 8);
  v30 = v51(v20, v28);
  __chkstk_darwin(v30);
  *(&v48 - 8) = a5;
  *(&v48 - 7) = a6;
  *(&v48 - 6) = v48;
  *((_BYTE *)&v48 - 40) = v10;
  *((_BYTE *)&v48 - 39) = BYTE4(v49);
  v31 = v62;
  *(&v48 - 4) = v32;
  *(&v48 - 3) = v31;
  *(&v48 - 2) = (uint64_t)v66;
  v33 = v53;
  v34 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v53);
  v35 = v59;
  Group<A>.init(content:)(sub_1001C81F8, &v48 - 10, v33, v34);
  v65[2] = v34;
  v36 = v56;
  v37 = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v56);
  v38 = (uint64_t)v58;
  sub_1000B2074(v35, v36, v37);
  v39 = v57;
  sub_1000C3530(v35);
  v40 = *(void (**)(uint64_t, char *, uint64_t))(v29 + 16);
  v41 = v61;
  v40(v20, v61, v28);
  v65[0] = v20;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16))(v35, v38, v36);
  v65[1] = v35;
  v64[0] = v28;
  v64[1] = v36;
  v63[0] = v50;
  v63[1] = v37;
  sub_10052800C((uint64_t)v65, 2, (uint64_t)v64, (uint64_t)v63, v42, v43, v44, v45, v48, v49, (uint64_t)v50, (uint64_t)v51, v52, v53, v54, v55, v56, v57);
  sub_1000C3530(v38);
  v46 = v51;
  v51(v41, v28);
  sub_1000C3530(v35);
  return v46(v20, v28);
}

uint64_t sub_1001C7204@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X2>, _QWORD *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t, uint64_t);
  void (*v65)(uint64_t, char *, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(uint64_t, uint64_t);
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(char *, uint64_t);
  void (*v90)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  char *v91;
  char *v92;
  uint64_t v93;
  char *v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD v104[6];
  _QWORD v105[6];
  _QWORD v106[6];
  _BYTE v107[24];
  _BYTE v108[40];
  _QWORD v109[4];
  char v110;

  v98 = a5;
  v90 = a2;
  v88 = a6;
  v9 = sub_1000BA294(&qword_100BC4A98);
  __chkstk_darwin(v9);
  v11 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = type metadata accessor for Optional(0, a4);
  v93 = *(_QWORD *)(v97 - 8);
  __chkstk_darwin(v97);
  v102 = (uint64_t)&v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v99 = (uint64_t)&v80 - v14;
  v82 = type metadata accessor for LocationComponentContainerViewModel(0);
  __chkstk_darwin(v82);
  v80 = (uint64_t)&v80 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v80 - v17;
  v19 = *(_QWORD *)(a4 - 8);
  __chkstk_darwin(v20);
  v87 = (uint64_t)&v80 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v96 = (char *)&v80 - v23;
  __chkstk_darwin(v24);
  v95 = (char *)&v80 - v25;
  __chkstk_darwin(v26);
  v94 = (char *)&v80 - v27;
  __chkstk_darwin(v28);
  v86 = (uint64_t)&v80 - v29;
  __chkstk_darwin(v30);
  v84 = (uint64_t)&v80 - v31;
  __chkstk_darwin(v32);
  v92 = (char *)&v80 - v33;
  __chkstk_darwin(v34);
  v101 = (char *)&v80 - v35;
  __chkstk_darwin(v36);
  v38 = (char *)&v80 - v37;
  __chkstk_darwin(v39);
  v41 = (char *)&v80 - v40;
  sub_100080E30(a1 + OBJC_IVAR____TtCV7Weather15NoAqiNhpContent8_Storage_nextHourPrecipitation, (uint64_t)v18);
  v90((uint64_t)v18, a3[29], a3[30], a3[31], a3[32]);
  v81 = v18;
  sub_100080DF4((uint64_t)v18);
  v91 = v41;
  sub_1000B2074(v38, a4, v98);
  v83 = v19;
  v42 = *(void (**)(char *, uint64_t))(v19 + 8);
  v100 = v38;
  v43 = v42;
  v42(v38, a4);
  v85 = a1;
  v44 = a1 + OBJC_IVAR____TtCV7Weather15NoAqiNhpContent8_Storage_map;
  swift_beginAccess(a1 + OBJC_IVAR____TtCV7Weather15NoAqiNhpContent8_Storage_map, v107, 0, 0);
  sub_1001A1D04(v44, (uint64_t)v11);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v82) == 1)
  {
    sub_1001A1D4C((uint64_t)v11);
  }
  else
  {
    v45 = v80;
    sub_1001A1D8C((uint64_t)v11, v80);
    sub_1001A1DD0((uint64_t)(a3 + 20), (uint64_t)v108);
    sub_1001A1DD0((uint64_t)v108, (uint64_t)v109);
    if (v110 != 1)
    {
      v48 = v101;
      v47 = v90;
      v90(v45, v109[0], v109[1], v109[2], v109[3]);
      sub_100080DF4(v45);
      v49 = (uint64_t)v100;
      sub_1000B2074(v48, a4, v98);
      v43(v48, a4);
      sub_1000B1100(v49, a4, v102);
      v43((char *)v49, a4);
      v46 = 0;
      goto LABEL_7;
    }
    sub_100080DF4(v45);
  }
  v46 = 1;
  v47 = v90;
LABEL_7:
  v50 = v102;
  _s7Weather24LocationCompositionStateOwst_0(v102, v46, 1, a4);
  v51 = v98;
  sub_100158984(v50, a4, v99);
  v90 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v93 + 8);
  ((void (*)(uint64_t, uint64_t))v90)(v50, v97);
  v52 = v85;
  v53 = (uint64_t)v81;
  sub_100080E30(*(_QWORD *)(v85 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, (uint64_t)v81);
  v54 = v101;
  v47(v53, a3[12], a3[13], a3[14], a3[15]);
  sub_100080DF4(v53);
  sub_1000B2074(v54, a4, v51);
  v89 = v43;
  v43(v54, a4);
  v55 = v52;
  sub_100080E30(*(_QWORD *)(v52 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v53);
  v56 = v92;
  v47(v53, a3[4], a3[5], a3[6], a3[7]);
  sub_100080DF4(v53);
  sub_1000B2074(v56, a4, v51);
  v89(v56, a4);
  sub_100080E30(*(_QWORD *)(v55 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, v53);
  v57 = v84;
  v47(v53, a3[45], a3[46], a3[47], a3[48]);
  sub_100080DF4(v53);
  sub_1000B2074(v57, a4, v51);
  v58 = (void (*)(uint64_t, uint64_t))v89;
  v89((char *)v57, a4);
  sub_100080E30(*(_QWORD *)(v55 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, v53);
  v59 = a3[41];
  v60 = a3[42];
  v61 = a3[43];
  v62 = a3[44];
  v63 = v86;
  v47(v53, v59, v60, v61, v62);
  sub_100080DF4(v53);
  sub_1000B2074(v63, a4, v51);
  v58(v63, a4);
  v64 = v58;
  v65 = *(void (**)(uint64_t, char *, uint64_t))(v83 + 16);
  v65(v63, v91, a4);
  v106[0] = v63;
  v66 = v63;
  v67 = v102;
  v68 = v97;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v93 + 16))(v102, v99, v97);
  v106[1] = v67;
  v69 = v94;
  v65((uint64_t)v94, v100, a4);
  v106[2] = v69;
  v70 = v95;
  v65((uint64_t)v95, v101, a4);
  v106[3] = v70;
  v71 = v96;
  v72 = v92;
  v65((uint64_t)v96, v92, a4);
  v106[4] = v71;
  v73 = v87;
  v65(v87, (char *)v57, a4);
  v106[5] = v73;
  v105[0] = a4;
  v105[1] = v68;
  v105[2] = a4;
  v105[3] = a4;
  v105[4] = a4;
  v105[5] = a4;
  v103 = v51;
  v104[0] = v51;
  v104[1] = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v68);
  v104[2] = v51;
  v104[3] = v51;
  v104[4] = v51;
  v104[5] = v51;
  sub_10052800C((uint64_t)v106, 6, (uint64_t)v105, (uint64_t)v104, v74, v75, v76, v77, v80, (uint64_t)v81, v82, v83, v84, v85, v86, v87, v88, (uint64_t)v89);
  v64(v57, a4);
  v64((uint64_t)v72, a4);
  v64((uint64_t)v101, a4);
  v64((uint64_t)v100, a4);
  v78 = (void (*)(uint64_t, uint64_t))v90;
  ((void (*)(uint64_t, uint64_t))v90)(v99, v68);
  v64((uint64_t)v91, a4);
  v64(v73, a4);
  v64((uint64_t)v96, a4);
  v64((uint64_t)v95, a4);
  v64((uint64_t)v94, a4);
  v78(v102, v68);
  return ((uint64_t (*)(uint64_t, uint64_t))v64)(v66, a4);
}

uint64_t sub_1001C797C@<X0>(uint64_t a1@<X0>, void (*a2)(char *, _QWORD, _QWORD, _QWORD, _QWORD)@<X2>, _QWORD *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  void (*v57)(char *, char *, uint64_t);
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  char *v81;
  char *v82;
  char *v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  char *v92;
  _QWORD v93[8];
  _QWORD v94[8];
  _QWORD v95[8];

  v78 = a6;
  v11 = type metadata accessor for LocationComponentContainerViewModel(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = *(_QWORD *)(a4 - 8);
  __chkstk_darwin(v14);
  v77 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v76 = (char *)&v74 - v17;
  __chkstk_darwin(v18);
  v92 = (char *)&v74 - v19;
  __chkstk_darwin(v20);
  v91 = (char *)&v74 - v21;
  __chkstk_darwin(v22);
  v89 = (char *)&v74 - v23;
  __chkstk_darwin(v24);
  v87 = (char *)&v74 - v25;
  __chkstk_darwin(v26);
  v86 = (char *)&v74 - v27;
  __chkstk_darwin(v28);
  v85 = (char *)&v74 - v29;
  __chkstk_darwin(v30);
  v75 = (uint64_t)&v74 - v31;
  __chkstk_darwin(v32);
  v83 = (char *)&v74 - v33;
  __chkstk_darwin(v34);
  v81 = (char *)&v74 - v35;
  __chkstk_darwin(v36);
  v79 = (char *)&v74 - v37;
  __chkstk_darwin(v38);
  v80 = (char *)&v74 - v39;
  __chkstk_darwin(v40);
  v42 = (char *)&v74 - v41;
  __chkstk_darwin(v43);
  v45 = (char *)&v74 - v44;
  __chkstk_darwin(v46);
  v88 = (char *)&v74 - v47;
  sub_100080E30(*(_QWORD *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind, (uint64_t)v13);
  a2(v13, a3[53], a3[54], a3[55], a3[56]);
  sub_100080DF4((uint64_t)v13);
  sub_1000B2074(v45, a4, a5);
  v48 = *(void (**)(char *, uint64_t))(v90 + 8);
  v84 = v45;
  v48(v45, a4);
  sub_100080E30(*(_QWORD *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, (uint64_t)v13);
  a2(v13, a3[37], a3[38], a3[39], a3[40]);
  sub_100080DF4((uint64_t)v13);
  v49 = a5;
  sub_1000B2074(v42, a4, a5);
  v82 = v42;
  v48(v42, a4);
  sub_100080E30(*(_QWORD *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike, (uint64_t)v13);
  v50 = (uint64_t)v80;
  a2(v13, a3[8], a3[9], a3[10], a3[11]);
  sub_100080DF4((uint64_t)v13);
  sub_1000B2074(v50, a4, v49);
  v48((char *)v50, a4);
  sub_100080E30(*(_QWORD *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, (uint64_t)v13);
  v51 = (uint64_t)v79;
  a2(v13, a3[16], a3[17], a3[18], a3[19]);
  sub_100080DF4((uint64_t)v13);
  sub_1000B2074(v51, a4, v49);
  v48((char *)v51, a4);
  sub_100080E30(*(_QWORD *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility, (uint64_t)v13);
  v52 = (uint64_t)v81;
  a2(v13, a3[49], a3[50], a3[51], a3[52]);
  sub_100080DF4((uint64_t)v13);
  sub_1000B2074(v52, a4, v49);
  v48((char *)v52, a4);
  sub_100080E30(*(_QWORD *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, (uint64_t)v13);
  v53 = (uint64_t)v83;
  a2(v13, a3[33], a3[34], a3[35], a3[36]);
  sub_100080DF4((uint64_t)v13);
  sub_1000B2074(v53, a4, v49);
  v48((char *)v53, a4);
  sub_100080E30(*(_QWORD *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, (uint64_t)v13);
  v54 = v75;
  a2(v13, a3[25], a3[26], a3[27], a3[28]);
  sub_100080DF4((uint64_t)v13);
  v55 = v54;
  v74 = v49;
  sub_1000B2074(v54, a4, v49);
  v48((char *)v54, a4);
  sub_100080E30(*(_QWORD *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, (uint64_t)v13);
  v56 = v85;
  a2(v13, *a3, a3[1], a3[2], a3[3]);
  sub_100080DF4((uint64_t)v13);
  sub_1000B2074(v56, a4, v49);
  v48(v56, a4);
  v57 = *(void (**)(char *, char *, uint64_t))(v90 + 16);
  v57(v56, v88, a4);
  v95[0] = v56;
  v58 = v86;
  v57(v86, v84, a4);
  v95[1] = v58;
  v59 = v87;
  v57(v87, v82, a4);
  v95[2] = v59;
  v60 = v89;
  v61 = (uint64_t)v80;
  v57(v89, v80, a4);
  v95[3] = v60;
  v62 = v91;
  v63 = (uint64_t)v79;
  v57(v91, v79, a4);
  v95[4] = v62;
  v64 = v92;
  v65 = (uint64_t)v81;
  v57(v92, v81, a4);
  v95[5] = v64;
  v66 = (uint64_t)v76;
  v67 = (uint64_t)v83;
  v57(v76, v83, a4);
  v95[6] = v66;
  v68 = (uint64_t)v77;
  v57(v77, (char *)v55, a4);
  v95[7] = v68;
  v94[0] = a4;
  v94[1] = a4;
  v94[2] = a4;
  v94[3] = a4;
  v94[4] = a4;
  v94[5] = a4;
  v94[6] = a4;
  v94[7] = a4;
  v93[0] = v74;
  v93[1] = v74;
  v93[2] = v74;
  v93[3] = v74;
  v93[4] = v74;
  v93[5] = v74;
  v93[6] = v74;
  v93[7] = v74;
  sub_10052800C((uint64_t)v95, 8, (uint64_t)v94, (uint64_t)v93, v69, v70, v71, v72, v74, v75, (uint64_t)v76, (uint64_t)v77, v78, (uint64_t)v79, (uint64_t)v80, (uint64_t)v81, (uint64_t)v82, (uint64_t)v83);
  v48((char *)v55, a4);
  v48((char *)v67, a4);
  v48((char *)v65, a4);
  v48((char *)v63, a4);
  v48((char *)v61, a4);
  v48(v82, a4);
  v48(v84, a4);
  v48(v88, a4);
  v48((char *)v68, a4);
  v48((char *)v66, a4);
  v48(v92, a4);
  v48(v91, a4);
  v48(v89, a4);
  v48(v87, a4);
  v48(v86, a4);
  return ((uint64_t (*)(char *, uint64_t))v48)(v85, a4);
}

uint64_t sub_1001C81C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int16 v3;

  if (*(_BYTE *)(v2 + 9))
    v3 = 256;
  else
    v3 = 0;
  return sub_1001C6DE4(*(_QWORD *)v2, v3 | *(unsigned __int8 *)(v2 + 8), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2);
}

uint64_t sub_1001C81EC()
{
  return sub_1001A1CD4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001C7204);
}

uint64_t sub_1001C81F8()
{
  return sub_1001A1CD4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001C797C);
}

uint64_t sub_1001C8204(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t TupleTypeMetadata2;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *a1;
  v11 = v1;
  v12 = type metadata accessor for Optional(255, v1);
  v13 = v1;
  v14 = v1;
  v15 = v1;
  v16 = v1;
  v2 = sub_1000BBB64(255, 6, (uint64_t)&v11);
  v3 = sub_1000AE86C(v2);
  v4 = sub_1000C43AC(v3);
  v11 = v1;
  v12 = v1;
  v13 = v1;
  v14 = v1;
  v15 = v1;
  v16 = v1;
  v17 = v1;
  v18 = v1;
  v5 = sub_1000BBB64(255, 8, (uint64_t)&v11);
  v6 = sub_1000AE86C(v5);
  v7 = sub_1000C43AC(v6);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v4, v7, 0, 0);
  v9 = sub_1000AE86C(TupleTypeMetadata2);
  return swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v9);
}

_QWORD *sub_1001C82B4()
{
  _QWORD *v0;

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 2);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 7);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 12);
  return v0;
}

uint64_t sub_1001C82E0()
{
  uint64_t v0;

  sub_1001C82B4();
  return swift_deallocClassInstance(v0, 136, 7);
}

unint64_t sub_1001C8300(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100B59408, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3)
    return 3;
  else
    return v3;
}

unint64_t sub_1001C8348(char a1)
{
  if (!a1)
    return 0xD00000000000002ALL;
  if (a1 == 1)
    return 0xD00000000000001FLL;
  return 0xD00000000000001ELL;
}

void sub_1001C83A0(unsigned __int8 *a1, char *a2)
{
  sub_10068BB98(*a1, *a2);
}

void sub_1001C83AC()
{
  char *v0;

  sub_1004A7458(*v0);
}

double sub_1001C83B4(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1001D8F60(a1, *v1);
}

void sub_1001C83BC(uint64_t a1)
{
  char *v1;

  sub_1001D9CA8(a1, *v1);
}

unint64_t sub_1001C83C4@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1001C8300(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_1001C83F0@<X0>(unint64_t *a1@<X8>)
{
  char *v1;
  unint64_t result;
  unint64_t v4;

  result = sub_1001C8348(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1001C8418(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _QWORD v8[4];

  v1 = objc_msgSend(a1, "type");
  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  v4 = v3;

  v8[2] = v2;
  v8[3] = v4;
  v8[0] = 0xD00000000000001ALL;
  v8[1] = 0x80000001009F2420;
  v5 = sub_1001C8F34();
  v6 = sub_1001C8F70();
  LOBYTE(v5) = BidirectionalCollection<>.starts<A>(with:)(v8, &type metadata for String, &type metadata for String, v5, v6);
  swift_bridgeObjectRelease(v4);
  return v5 & 1;
}

uint64_t sub_1001C84C4(void *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  char v13;
  uint64_t v14;
  id v15;
  NSObject *v16;
  uint64_t v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  double v45;
  uint64_t v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  os_log_type_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v76;
  uint64_t v77;
  id v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  double v85;
  uint64_t v86;
  Swift::String v87;

  v82 = *v1;
  v3 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
  __chkstk_darwin(v3);
  v81 = (uint64_t)&v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ActivityAction(0);
  *(_QWORD *)&v6 = __chkstk_darwin(v5).n128_u64[0];
  v8 = (char *)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(a1, "type", v6);
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  v87._countAndFlagsBits = v10;
  v87._object = v12;
  v13 = sub_1001C8300(v87);
  if (v13 == 3)
  {
    if (qword_100BC24B8 != -1)
      swift_once(&qword_100BC24B8, sub_1006F3940);
    v14 = type metadata accessor for Logger(0);
    sub_1000AECD4(v14, (uint64_t)qword_100CAF210);
    v15 = a1;
    v16 = Logger.logObject.getter(v15);
    v18 = static os_log_type_t.error.getter(v16, v17);
    if (os_log_type_enabled(v16, v18))
    {
      v19 = (uint8_t *)sub_100098710(12);
      v20 = sub_100098710(32);
      v83 = v20;
      *(_DWORD *)v19 = 136446210;
      v21 = objc_msgSend(v15, "type");
      v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
      v24 = v23;

      v85 = COERCE_DOUBLE(sub_1000CE1C8(v22, v24, &v83));
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v85, &v86);

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v16, v18, "Failed to handle shortcut with unknown type=%{public}s", v19, 0xCu);
      swift_arrayDestroy(v20, 1);
      sub_1000986F0(v20);
      v25 = (uint64_t)v19;
LABEL_35:
      sub_1000986F0(v25);

      return 0;
    }
    goto LABEL_32;
  }
  v26 = v13;
  v80 = v1;
  if (qword_100BC24B8 != -1)
    swift_once(&qword_100BC24B8, sub_1006F3940);
  v27 = type metadata accessor for Logger(0);
  v28 = sub_1000AECD4(v27, (uint64_t)qword_100CAF210);
  v29 = a1;
  v79 = v28;
  v30 = Logger.logObject.getter(v29);
  v31 = static os_log_type_t.default.getter(v30);
  if (os_log_type_enabled(v30, v31))
  {
    v32 = sub_100098710(32);
    v77 = sub_100098710(64);
    v85 = *(double *)&v77;
    *(_DWORD *)v32 = 136446723;
    LOBYTE(v83) = v26;
    v33 = String.init<A>(describing:)(&v83);
    v83 = sub_1000CE1C8(v33, v34, (uint64_t *)&v85);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v83, &v84);
    sub_1000986C4();
    *(_WORD *)(v32 + 12) = 2160;
    v83 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v83, &v84);
    *(_WORD *)(v32 + 22) = 2081;
    v78 = v29;
    v35 = sub_1000C5B48();
    if (v35)
    {
      v36 = v35;
      v37 = sub_1000BA294(&qword_100C0D160);
      v38 = Dictionary.description.getter(v36, &type metadata for String, v37, &protocol witness table for String);
      v40 = v39;
      swift_bridgeObjectRelease();
    }
    else
    {
      v38 = 0xD000000000000030;
      sub_1000C4434();
      swift_bridgeObjectRelease();
      v40 = 0x80000001009F23E0;
    }
    v83 = sub_1000CE1C8(v38, v40, (uint64_t *)&v85);
    v41 = sub_1000DCB60();
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v41, v42);
    v29 = v78;

    sub_1000986C4();
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "Handling shortcut for type=%{public}s, userInfo=%{private,mask.hash}s", (uint8_t *)v32, 0x20u);
    v43 = v77;
    swift_arrayDestroy(v77, 2);
    sub_1000986F0(v43);
    sub_1000986F0(v32);

  }
  else
  {

  }
  if (!v26)
  {
    v55 = sub_1000CC884();
    swift_storeEnumTagMultiPayload(v55, v56, 4);
    v52 = 1;
LABEL_28:
    sub_10026563C((uint64_t)v8, 1, 0);
    sub_1001C8E48((uint64_t)v8);
    return v52;
  }
  if (v26 != 1)
  {
    if (qword_100BC2650 != -1)
      swift_once(&qword_100BC2650, sub_10015AA64);
    v57 = qword_100CAF4B8;
    v52 = 1;
    LOBYTE(v83) = 1;
    v58 = sub_1001C8E0C((unint64_t *)&unk_100BC6400, (uint64_t)&unk_100980B24);
    Updatable.save<A>(setting:value:)(v57, &v83, v82, v58);
    v59 = sub_1000CC884();
    swift_storeEnumTagMultiPayload(v59, v60, 5);
    goto LABEL_28;
  }
  if (!sub_1000C5B48())
    goto LABEL_29;
  sub_1000B4430(0x656475746974616CLL, 0xE800000000000000);
  sub_1000C2464();
  if (!v29)
    goto LABEL_29;
  v83 = (uint64_t)v29;
  sub_1000BA294(&qword_100C0D160);
  if ((sub_1000C358C((uint64_t)&v85, (uint64_t)&v83, v44, (uint64_t)&type metadata for Double) & 1) == 0)
    goto LABEL_29;
  v45 = v85;
  if (!sub_1001C8E84(v29)
    || (sub_1000B4430(0x64757469676E6F6CLL, 0xE900000000000065),
        sub_1000C2464(),
        v83 = (uint64_t)v29,
        (sub_1000C358C((uint64_t)&v85, (uint64_t)&v83, v46, (uint64_t)&type metadata for Double) & 1) == 0)
    || (v47 = v85, !sub_1001C8E84(v29))
    || (sub_1000B4430(1701667182, 0xE400000000000000),
        sub_1000C2464(),
        v85 = *(double *)&v29,
        (sub_1000C358C((uint64_t)&v83, (uint64_t)&v85, v48, (uint64_t)&type metadata for String) & 1) == 0))
  {
LABEL_29:
    v15 = v29;
    v16 = Logger.logObject.getter(v15);
    v62 = static os_log_type_t.error.getter(v16, v61);
    if (os_log_type_enabled(v16, v62))
    {
      v63 = sub_100098710(22);
      v64 = sub_100098710(32);
      v85 = *(double *)&v64;
      *(_DWORD *)v63 = 141558275;
      v83 = 1752392040;
      v65 = sub_1000DCB60();
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v65, v66);
      *(_WORD *)(v63 + 12) = 2081;
      v67 = sub_1000C5B48();
      if (v67)
      {
        v68 = v67;
        v69 = sub_1000BA294(&qword_100C0D160);
        v70 = Dictionary.description.getter(v68, &type metadata for String, v69, &protocol witness table for String);
        v72 = v71;
        swift_bridgeObjectRelease();
      }
      else
      {
        v70 = 0xD000000000000030;
        sub_1000C4434();
        swift_bridgeObjectRelease();
        v72 = 0x80000001009F23E0;
      }
      v83 = sub_1000CE1C8(v70, v72, (uint64_t *)&v85);
      v73 = sub_1000DCB60();
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v73, v74);

      sub_1000986C4();
      _os_log_impl((void *)&_mh_execute_header, v16, v62, "Failed to handle saved location shortcut, missing information from userInfo=%{private,mask.hash}s", (uint8_t *)v63, 0x16u);
      swift_arrayDestroy(v64, 1);
      sub_1000986F0(v64);
      v25 = v63;
      goto LABEL_35;
    }
LABEL_32:

    return 0;
  }
  v49 = v83;
  v50 = v84;
  v51 = type metadata accessor for Date(0);
  v52 = 1;
  v53 = v81;
  _s7Weather24LocationCompositionStateOwst_0(v81, 1, 1, v51);
  sub_1001C6D68();
  v54 = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage);
  sub_1001C6064(v49, v50, 16, v53, v54, v45, v47);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1001C8EF4(v53);
  return v52;
}

uint64_t sub_1001C8D08()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release(*(_QWORD *)(v0 + 24));
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + 32));
  return v0;
}

uint64_t sub_1001C8D34()
{
  uint64_t v0;

  sub_1001C8D08();
  return swift_deallocClassInstance(v0, 72, 7);
}

uint64_t type metadata accessor for ShortcutItemHandler()
{
  return objc_opt_self(_TtC7Weather19ShortcutItemHandler);
}

uint64_t sub_1001C8D74()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(*(_QWORD *)v0 + 16));
}

uint64_t sub_1001C8D80(void *a1)
{
  return sub_1001C84C4(a1) & 1;
}

uint64_t sub_1001C8DA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  return Updatable.save<A>(setting:value:)(a1, a2, *v6, a6);
}

uint64_t sub_1001C8DB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  return Updatable.reset<A>(setting:)(a1, *v5, a5);
}

uint64_t sub_1001C8DBC(uint64_t a1)
{
  _QWORD *v1;

  return Updatable.apply(preset:)(a1, *v1);
}

uint64_t sub_1001C8DC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  return Configurable.setting<A>(_:)(a1, *v5, a5);
}

uint64_t sub_1001C8DD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  return Configurable.setting<A>(_:_:)(a1, a2, a3, *v7, a7);
}

uint64_t sub_1001C8DDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  return Configurable.setting<A>(_:defaultValue:_:)(a1, a2, a3, a4, *v8, a8);
}

uint64_t sub_1001C8DE8()
{
  return sub_1001C8E0C((unint64_t *)&unk_100BC63F0, (uint64_t)&unk_100980AE4);
}

uint64_t sub_1001C8E0C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for ShortcutItemHandler();
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001C8E48(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ActivityAction(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001C8E84(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = objc_msgSend(a1, "userInfo");
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1000BA294(&qword_100C0D160);
  v4 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v2, &type metadata for String, v3, &protocol witness table for String);

  return v4;
}

uint64_t sub_1001C8EF4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1001C8F34()
{
  unint64_t result;

  result = qword_100BC6418;
  if (!qword_100BC6418)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_100BC6418);
  }
  return result;
}

unint64_t sub_1001C8F70()
{
  unint64_t result;

  result = qword_100BC6420;
  if (!qword_100BC6420)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_100BC6420);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AppLifecycleAction(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 2) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 3;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v5 = v6 - 3;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ShortcutItem(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1001C9080 + 4 * byte_100980AA5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1001C90B4 + 4 * byte_100980AA0[v4]))();
}

uint64_t sub_1001C90B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001C90BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001C90C4);
  return result;
}

uint64_t sub_1001C90D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001C90D8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1001C90DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001C90E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ShortcutItem()
{
  return &type metadata for ShortcutItem;
}

unint64_t sub_1001C9104()
{
  unint64_t result;

  result = qword_100BC6428;
  if (!qword_100BC6428)
  {
    result = swift_getWitnessTable(&unk_100980C28, &type metadata for ShortcutItem);
    atomic_store(result, (unint64_t *)&qword_100BC6428);
  }
  return result;
}

uint64_t *sub_1001C9140(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t, __n128);
  __n128 v25;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for ScrubberDateSelection(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = sub_1000BA294(&qword_100BC6430);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      v10 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v10))
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v10);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
    }
    v11 = a3[5];
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = type metadata accessor for Date(0);
    v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
    v15(v12, v13, v14);
    v15((char *)a1 + a3[6], (char *)a2 + a3[6], v14);
    v15((char *)a1 + a3[7], (char *)a2 + a3[7], v14);
    v16 = a3[8];
    v17 = a3[9];
    v18 = *(uint64_t *)((char *)a2 + v16);
    *(uint64_t *)((char *)a1 + v16) = v18;
    v19 = *(uint64_t *)((char *)a2 + v17);
    *(uint64_t *)((char *)a1 + v17) = v19;
    v20 = a3[10];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    v23 = type metadata accessor for TimeZone(0);
    v24 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v23 - 8) + 16);
    swift_bridgeObjectRetain(v18);
    v25 = swift_bridgeObjectRetain(v19);
    v24(v21, v22, v23, v25);
  }
  return a1;
}

uint64_t sub_1001C9314(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for ScrubberDateSelection(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(a1, 1, v4))
  {
    v5 = type metadata accessor for Date(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(a1, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  v6 = a1 + a2[5];
  v7 = type metadata accessor for Date(0);
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v8(v6, v7);
  v8(a1 + a2[6], v7);
  v8(a1 + a2[7], v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = a1 + a2[10];
  v10 = type metadata accessor for TimeZone(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

char *sub_1001C9414(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t, __n128);
  __n128 v23;

  v6 = type metadata accessor for ScrubberDateSelection(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_1000BA294(&qword_100BC6430);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v8))
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v8);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = type metadata accessor for Date(0);
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  v13(v10, v11, v12);
  v13(&a1[a3[6]], &a2[a3[6]], v12);
  v13(&a1[a3[7]], &a2[a3[7]], v12);
  v14 = a3[8];
  v15 = a3[9];
  v16 = *(_QWORD *)&a2[v14];
  *(_QWORD *)&a1[v14] = v16;
  v17 = *(_QWORD *)&a2[v15];
  *(_QWORD *)&a1[v15] = v17;
  v18 = a3[10];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = type metadata accessor for TimeZone(0);
  v22 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v21 - 8) + 16);
  swift_bridgeObjectRetain(v16);
  v23 = swift_bridgeObjectRetain(v17);
  v22(v19, v20, v21, v23);
  return a1;
}

char *sub_1001C95BC(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v30;

  v6 = type metadata accessor for ScrubberDateSelection(0);
  v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v6);
  v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      v9 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v9))
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v9);
      }
      v14 = (uint64_t)a1;
      v15 = v6;
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_1001C9834((uint64_t)a1);
LABEL_7:
    v10 = *(_QWORD *)(sub_1000BA294(&qword_100BC6430) - 8);
    goto LABEL_8;
  }
  v11 = type metadata accessor for Date(0);
  v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v11);
  v13 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v11);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      v14 = (uint64_t)a1;
      v15 = v11;
LABEL_14:
      _s7Weather24LocationCompositionStateOwst_0(v14, 0, 1, v15);
      goto LABEL_15;
    }
  }
  else
  {
    v30 = *(_QWORD *)(v11 - 8);
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 24))(a1, a2, v11);
      goto LABEL_15;
    }
    (*(void (**)(char *, uint64_t))(v30 + 8))(a1, v11);
  }
  v10 = *(_QWORD *)(v6 - 8);
LABEL_8:
  memcpy(a1, a2, *(_QWORD *)(v10 + 64));
LABEL_15:
  v16 = a3[5];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = type metadata accessor for Date(0);
  v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 24);
  v20(v17, v18, v19);
  v20(&a1[a3[6]], &a2[a3[6]], v19);
  v20(&a1[a3[7]], &a2[a3[7]], v19);
  v21 = a3[8];
  v22 = *(_QWORD *)&a2[v21];
  *(_QWORD *)&a1[v21] = v22;
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRelease();
  v23 = a3[9];
  v24 = *(_QWORD *)&a2[v23];
  *(_QWORD *)&a1[v23] = v24;
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRelease();
  v25 = a3[10];
  v26 = &a1[v25];
  v27 = &a2[v25];
  v28 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 24))(v26, v27, v28);
  return a1;
}

uint64_t sub_1001C9834(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ScrubberDateSelection(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_1001C9870(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v6 = type metadata accessor for ScrubberDateSelection(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_1000BA294(&qword_100BC6430);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v8))
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v8);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = type metadata accessor for Date(0);
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32);
  v13(v10, v11, v12);
  v13(&a1[a3[6]], &a2[a3[6]], v12);
  v13(&a1[a3[7]], &a2[a3[7]], v12);
  v14 = a3[9];
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  *(_QWORD *)&a1[v14] = *(_QWORD *)&a2[v14];
  v15 = a3[10];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

char *sub_1001C9A04(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v26;

  v6 = type metadata accessor for ScrubberDateSelection(0);
  v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v6);
  v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      v9 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v9))
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v9);
      }
      v14 = (uint64_t)a1;
      v15 = v6;
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_1001C9834((uint64_t)a1);
LABEL_7:
    v10 = *(_QWORD *)(sub_1000BA294(&qword_100BC6430) - 8);
    goto LABEL_8;
  }
  v11 = type metadata accessor for Date(0);
  v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v11);
  v13 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v11);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
      v14 = (uint64_t)a1;
      v15 = v11;
LABEL_14:
      _s7Weather24LocationCompositionStateOwst_0(v14, 0, 1, v15);
      goto LABEL_15;
    }
  }
  else
  {
    v26 = *(_QWORD *)(v11 - 8);
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 40))(a1, a2, v11);
      goto LABEL_15;
    }
    (*(void (**)(char *, uint64_t))(v26 + 8))(a1, v11);
  }
  v10 = *(_QWORD *)(v6 - 8);
LABEL_8:
  memcpy(a1, a2, *(_QWORD *)(v10 + 64));
LABEL_15:
  v16 = a3[5];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = type metadata accessor for Date(0);
  v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 40);
  v20(v17, v18, v19);
  v20(&a1[a3[6]], &a2[a3[6]], v19);
  v20(&a1[a3[7]], &a2[a3[7]], v19);
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  swift_bridgeObjectRelease();
  v21 = a3[10];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 40))(v22, v23, v24);
  return a1;
}

uint64_t sub_1001C9C6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001C9C78);
}

uint64_t sub_1001C9C78(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v6 = sub_1000BA294(&qword_100BC6430);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
    return _s7Weather24LocationCompositionStateOwet_0(v8, a2, v7);
  }
  v9 = type metadata accessor for Date(0);
  if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v9;
    v10 = a3[5];
LABEL_10:
    v8 = a1 + v10;
    return _s7Weather24LocationCompositionStateOwet_0(v8, a2, v7);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v7 = type metadata accessor for TimeZone(0);
    v10 = a3[10];
    goto LABEL_10;
  }
  v11 = *(_QWORD *)(a1 + a3[8]);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_1001C9D3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001C9D48);
}

uint64_t sub_1001C9D48(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v8 = sub_1000BA294(&qword_100BC6430);
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a1;
  }
  else
  {
    result = type metadata accessor for Date(0);
    if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    {
      v9 = result;
      v12 = a4[5];
    }
    else
    {
      if (a3 == 0x7FFFFFFF)
      {
        *(_QWORD *)(a1 + a4[8]) = (a2 - 1);
        return result;
      }
      v9 = type metadata accessor for TimeZone(0);
      v12 = a4[10];
    }
    v10 = a1 + v12;
  }
  return _s7Weather24LocationCompositionStateOwst_0(v10, a2, a2, v9);
}

uint64_t type metadata accessor for MoonScrubberViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_100BC6490;
  if (!qword_100BC6490)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MoonScrubberViewModel);
  return result;
}

void sub_1001C9E40(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  sub_1001C9EF4(319);
  if (v3 <= 0x3F)
  {
    v8 = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for Date(319);
    if (v5 <= 0x3F)
    {
      v9 = *(_QWORD *)(v4 - 8) + 64;
      v10 = v9;
      v11 = v9;
      v12 = (char *)&value witness table for Builtin.BridgeObject + 64;
      v13 = (char *)&value witness table for Builtin.BridgeObject + 64;
      v6 = type metadata accessor for TimeZone(319);
      if (v7 <= 0x3F)
      {
        v14 = *(_QWORD *)(v6 - 8) + 64;
        swift_initStructMetadata(a1, 256, 7, &v8, a1 + 16);
      }
    }
  }
}

void sub_1001C9EF4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100BC64A0)
  {
    v2 = type metadata accessor for ScrubberDateSelection(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100BC64A0);
  }
}

uint64_t sub_1001C9F48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char v21;
  char v22;
  int *v23;
  char v24;
  char v25;
  char v26;
  uint64_t v28;

  type metadata accessor for ScrubberDateSelection(0);
  sub_1000B42B0();
  __chkstk_darwin(v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000BA294(&qword_100BC64F0);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000BA294(&qword_100BC6430);
  sub_1000B42B0();
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v28 - v16;
  __chkstk_darwin(v15);
  v19 = (char *)&v28 - v18;
  sub_1001CA2FC(a1, (uint64_t)&v28 - v18);
  sub_1001CA2FC(a2, (uint64_t)v17);
  v20 = (uint64_t)&v10[*(int *)(v7 + 48)];
  sub_1001CA2FC((uint64_t)v19, (uint64_t)v10);
  sub_1001CA2FC((uint64_t)v17, v20);
  sub_1000BBCA0((uint64_t)v10);
  if (v21)
  {
    sub_1000BBC98((uint64_t)v17);
    sub_1000BBC98((uint64_t)v19);
    sub_1000BBCA0(v20);
    if (v21)
    {
      sub_100021A68((uint64_t)v10, &qword_100BC6430);
      goto LABEL_11;
    }
LABEL_9:
    sub_100021A68((uint64_t)v10, &qword_100BC64F0);
LABEL_17:
    v26 = 0;
    return v26 & 1;
  }
  sub_1001CA2FC((uint64_t)v10, (uint64_t)v14);
  sub_1000BBCA0(v20);
  if (v21)
  {
    sub_100021A68((uint64_t)v17, &qword_100BC6430);
    sub_100021A68((uint64_t)v19, &qword_100BC6430);
    sub_1001C9834((uint64_t)v14);
    goto LABEL_9;
  }
  sub_1001CA344(v20, (uint64_t)v6);
  v22 = sub_100901258((uint64_t)v14, (uint64_t)v6);
  sub_1001C9834((uint64_t)v6);
  sub_1000BBC98((uint64_t)v17);
  sub_1000BBC98((uint64_t)v19);
  sub_1001C9834((uint64_t)v14);
  sub_1000BBC98((uint64_t)v10);
  if ((v22 & 1) == 0)
    goto LABEL_17;
LABEL_11:
  v23 = (int *)type metadata accessor for MoonScrubberViewModel(0);
  if ((sub_1000B4438(v23[5]) & 1) == 0)
    goto LABEL_17;
  if ((sub_1000B4438(v23[6]) & 1) == 0)
    goto LABEL_17;
  if ((sub_1000B4438(v23[7]) & 1) == 0)
    goto LABEL_17;
  sub_10094945C();
  if ((v24 & 1) == 0)
    goto LABEL_17;
  sub_1009496F4();
  if ((v25 & 1) == 0)
    goto LABEL_17;
  v26 = static TimeZone.== infix(_:_:)(a1 + v23[10], a2 + v23[10]);
  return v26 & 1;
}

uint64_t sub_1001CA1F0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage);
  a1[3] = sub_1000BA294(&qword_100BC64F8);
  a1[4] = sub_1001CA388();
  sub_10005F164(a1);
  v3 = type metadata accessor for MoonScrubberViewModel(0);
  return ShortDescription.init(name:_:)(0xD000000000000015, 0x8000000100980C30, v2, v3);
}

uint64_t sub_1001CA28C@<X0>(_QWORD *a1@<X8>)
{
  return sub_1001CA1F0(a1);
}

uint64_t sub_1001CA2A0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1001CA3CC(&qword_100BC6508, (uint64_t)&unk_100980C90);
  return ShortDescribable.description.getter(a1, v2);
}

uint64_t sub_1001CA2D8()
{
  return sub_1001CA3CC(&qword_100BC64E8, (uint64_t)&unk_100980C68);
}

uint64_t sub_1001CA2FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BC6430);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001CA344(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ScrubberDateSelection(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1001CA388()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC6500;
  if (!qword_100BC6500)
  {
    v1 = sub_100075EB0(&qword_100BC64F8);
    result = swift_getWitnessTable(&protocol conformance descriptor for ShortDescription<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100BC6500);
  }
  return result;
}

uint64_t sub_1001CA3CC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for MoonScrubberViewModel(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_1001CA40C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  __int128 v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t, __n128);
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1000BA294(&qword_100BC4F28);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      a1[1] = a2[1];
      swift_retain();
      swift_retain();
      v9 = *(int *)(sub_1000BA294(&qword_100BC6510) + 32);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = type metadata accessor for PresentationMode(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
      v13 = 1;
    }
    else
    {
      swift_retain();
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(a1, v7, v13);
    v15 = a3[5];
    v16 = a3[6];
    v17 = (uint64_t *)((char *)a1 + v15);
    v18 = (uint64_t *)((char *)a2 + v15);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = (char *)a1 + v16;
    v21 = (char *)a2 + v16;
    v22 = *(_OWORD *)((char *)a2 + v16 + 24);
    *(_OWORD *)((char *)a1 + v16 + 24) = v22;
    v23 = v22;
    v24 = **(void (***)(char *, char *, uint64_t, __n128))(v22 - 8);
    v25 = swift_retain();
    v24(v20, v21, v23, v25);
    v26 = a3[7];
    v27 = a3[8];
    v28 = (char *)a1 + v26;
    v29 = (char *)a2 + v26;
    *v28 = *v29;
    *((_QWORD *)v28 + 1) = *((_QWORD *)v29 + 1);
    v30 = (uint64_t *)((char *)a1 + v27);
    v31 = (uint64_t *)((char *)a2 + v27);
    v32 = v31[1];
    *v30 = *v31;
    v30[1] = v32;
    swift_retain();
    swift_bridgeObjectRetain(v32);
  }
  return a1;
}

double sub_1001CA58C(_QWORD *a1, int *a2)
{
  int EnumCaseMultiPayload;
  char *v5;
  uint64_t v6;
  double result;

  sub_1000BA294(&qword_100BC4F28);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1);
  swift_release(*a1);
  if (EnumCaseMultiPayload == 1)
  {
    swift_release(a1[1]);
    v5 = (char *)a1 + *(int *)(sub_1000BA294(&qword_100BC6510) + 32);
    v6 = type metadata accessor for PresentationMode(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  swift_release(*(_QWORD *)((char *)a1 + a2[5] + 8));
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)((char *)a1 + a2[6]));
  swift_release(*(_QWORD *)((char *)a1 + a2[7] + 8));
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

_QWORD *sub_1001CA650(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  __int128 v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t, __n128);
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;

  v6 = sub_1000BA294(&qword_100BC4F28);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
  *a1 = *a2;
  if (EnumCaseMultiPayload == 1)
  {
    a1[1] = a2[1];
    swift_retain();
    swift_retain();
    v8 = *(int *)(sub_1000BA294(&qword_100BC6510) + 32);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for PresentationMode(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = 1;
  }
  else
  {
    swift_retain();
    v12 = 0;
  }
  swift_storeEnumTagMultiPayload(a1, v6, v12);
  v13 = a3[5];
  v14 = a3[6];
  v15 = (_QWORD *)((char *)a1 + v13);
  v16 = (_QWORD *)((char *)a2 + v13);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v18 = (char *)a1 + v14;
  v19 = (char *)a2 + v14;
  v20 = *(_OWORD *)((char *)a2 + v14 + 24);
  *(_OWORD *)((char *)a1 + v14 + 24) = v20;
  v21 = v20;
  v22 = **(void (***)(char *, char *, uint64_t, __n128))(v20 - 8);
  v23 = swift_retain();
  v22(v18, v19, v21, v23);
  v24 = a3[7];
  v25 = a3[8];
  v26 = (char *)a1 + v24;
  v27 = (char *)a2 + v24;
  *v26 = *v27;
  *((_QWORD *)v26 + 1) = *((_QWORD *)v27 + 1);
  v28 = (_QWORD *)((char *)a1 + v25);
  v29 = (_QWORD *)((char *)a2 + v25);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  swift_retain();
  swift_bridgeObjectRetain(v30);
  return a1;
}

_QWORD *sub_1001CA7A4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;

  if (a1 != a2)
  {
    sub_1000FF448((uint64_t)a1, &qword_100BC4F28);
    v6 = sub_1000BA294(&qword_100BC4F28);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      a1[1] = a2[1];
      swift_retain();
      swift_retain();
      v8 = *(int *)(sub_1000BA294(&qword_100BC6510) + 32);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = type metadata accessor for PresentationMode(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      v12 = 1;
    }
    else
    {
      swift_retain();
      v12 = 0;
    }
    swift_storeEnumTagMultiPayload(a1, v6, v12);
  }
  v13 = a3[5];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  *v14 = *v15;
  v16 = v14[1];
  v14[1] = v15[1];
  swift_retain();
  swift_release(v16);
  sub_100094D04((_QWORD *)((char *)a1 + a3[6]), (_QWORD *)((char *)a2 + a3[6]));
  v17 = a3[7];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  *v18 = *v19;
  v20 = *((_QWORD *)v18 + 1);
  *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
  swift_retain();
  swift_release(v20);
  v21 = a3[8];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  *v22 = *v23;
  v24 = v23[1];
  v22[1] = v24;
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *sub_1001CA920(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  __int128 v15;
  uint64_t v16;

  v6 = sub_1000BA294(&qword_100BC4F28);
  if (swift_getEnumCaseMultiPayload(a2) == 1)
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(sub_1000BA294(&qword_100BC6510) + 32);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for PresentationMode(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v12 = a3[6];
  *(_OWORD *)((char *)a1 + a3[5]) = *(_OWORD *)((char *)a2 + a3[5]);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
  v16 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  *(_OWORD *)((char *)a1 + v16) = *(_OWORD *)((char *)a2 + v16);
  return a1;
}

_QWORD *sub_1001CAA1C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  __int128 v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;

  if (a1 != a2)
  {
    sub_1000FF448((uint64_t)a1, &qword_100BC4F28);
    v6 = sub_1000BA294(&qword_100BC4F28);
    if (swift_getEnumCaseMultiPayload(a2) == 1)
    {
      v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      v8 = *(int *)(sub_1000BA294(&qword_100BC6510) + 32);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = type metadata accessor for PresentationMode(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v12 = a3[5];
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  v17 = v13[1];
  *v13 = v16;
  v13[1] = v15;
  swift_release(v17);
  v18 = a3[6];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)((char *)a1 + v18));
  v21 = *((_OWORD *)v20 + 1);
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *((_OWORD *)v19 + 1) = v21;
  *((_QWORD *)v19 + 4) = *((_QWORD *)v20 + 4);
  v22 = a3[7];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  *v23 = *v24;
  v25 = *((_QWORD *)v23 + 1);
  *((_QWORD *)v23 + 1) = *((_QWORD *)v24 + 1);
  swift_release(v25);
  v26 = a3[8];
  v27 = (_QWORD *)((char *)a1 + v26);
  v28 = (_QWORD *)((char *)a2 + v26);
  v30 = *v28;
  v29 = v28[1];
  *v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1001CAB78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001CAB84);
}

uint64_t sub_1001CAB84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = sub_1000BA294(&qword_100BC6518);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_1001CAC04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001CAC10);
}

uint64_t sub_1001CAC10(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = sub_1000BA294(&qword_100BC6518);
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1001CAC8C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AAA3DC, 1);
}

void sub_1001CAC9C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t KeyPath;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (**v37)();
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66[16];
  uint64_t v67;

  v65 = a1;
  v64 = type metadata accessor for AutomationInfo(0);
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_100088FDC();
  v63 = v5;
  v6 = type metadata accessor for AccessibilityChildBehavior(0);
  v61 = *(_QWORD *)(v6 - 8);
  v62 = v6;
  __chkstk_darwin(v6);
  sub_100088FDC();
  v60 = v7;
  v8 = sub_1000CC8A8();
  v9 = *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64);
  v55 = *(_QWORD *)(v8 - 8);
  v56 = v9;
  __chkstk_darwin(v8);
  v50 = (uint64_t)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000BA294(&qword_100BC65C8);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  sub_100098728();
  v15 = v14 - v13;
  v16 = sub_1000BA294(&qword_100BC65D0);
  sub_1000B42B0();
  __chkstk_darwin(v17);
  sub_100098728();
  v20 = v19 - v18;
  v51 = sub_1000BA294(&qword_100BC65D8);
  sub_1000B42B0();
  __chkstk_darwin(v21);
  sub_100094EC4();
  v52 = sub_1000BA294(&qword_100BC65E0);
  sub_1000B42B0();
  __chkstk_darwin(v22);
  sub_10004A2E8();
  v23 = sub_1000BA294(&qword_100BC65E8);
  v58 = *(_QWORD *)(v23 - 8);
  v59 = v23;
  __chkstk_darwin(v23);
  sub_100088FDC();
  v53 = v24;
  v57 = sub_1000BA294(&qword_100BC65F0);
  sub_1000B42B0();
  __chkstk_darwin(v25);
  sub_100088FDC();
  v54 = v26;
  v67 = v1;
  v27 = sub_1000BA294(&qword_100BC65F8);
  sub_1001CDAD0(&qword_100BC6600, &qword_100BC65F8);
  v29 = NavigationView.init(content:)(sub_1001CD0AC, v66, v27, v28);
  v30 = static Color.white.getter(v29);
  KeyPath = swift_getKeyPath(&unk_100980DB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v20, v15, v11);
  v32 = (uint64_t *)(v20 + *(int *)(v16 + 36));
  *v32 = KeyPath;
  v32[1] = v30;
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v15, v11);
  v33 = v1;
  v34 = v1;
  v35 = v50;
  sub_10000AB54(v33, v50, type metadata accessor for ReportWeatherView);
  v36 = sub_1000988E0((uint64_t)&unk_100B61058);
  sub_1000D1C48(v36);
  sub_100037794(v20, v2, &qword_100BC65D0);
  v37 = (uint64_t (**)())(v2 + *(int *)(v51 + 36));
  *v37 = sub_1001CD104;
  v37[1] = (uint64_t (*)())v36;
  v37[2] = 0;
  v37[3] = 0;
  sub_1000FF448(v20, &qword_100BC65D0);
  sub_10000AB54(v34, v35, type metadata accessor for ReportWeatherView);
  v38 = sub_1000988E0((uint64_t)&unk_100B61080);
  sub_1000D1C48(v38);
  sub_100037794(v2, v3, &qword_100BC65D8);
  v39 = v52;
  v40 = (_QWORD *)(v3 + *(int *)(v52 + 36));
  *v40 = 0;
  v40[1] = 0;
  v40[2] = sub_1001CD114;
  v40[3] = v38;
  sub_1000FF448(v2, &qword_100BC65D8);
  v41 = v60;
  static AccessibilityChildBehavior.contain.getter(v42);
  v43 = sub_1001CD13C(&qword_100BC6608, &qword_100BC65E0);
  v44 = v53;
  View.accessibilityElement(children:)(v41, v39, v43);
  sub_1000C51C8(v61);
  sub_1000FF448(v3, &qword_100BC65E0);
  v46 = v58;
  v45 = v59;
  v47 = v54;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 16))(v54, v44, v59);
  *(_BYTE *)(v47 + *(int *)(v57 + 36)) = 1;
  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v44, v45);
  v48 = type metadata accessor for AutomationViewInfo(0);
  v49 = v63;
  swift_storeEnumTagMultiPayload(v63, v48, 7);
  sub_1000916FC(v49, v64);
  sub_1003351A4();
  sub_10006BD5C(v49, type metadata accessor for AutomationInfo);
  sub_1000FF448(v47, &qword_100BC65F0);
  sub_100098640();
}

void sub_1001CB0DC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  *(_QWORD *)a2 = static HorizontalAlignment.center.getter(a1);
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  v4 = sub_1000BA294(&qword_100BC6630);
  sub_1001CB128(a1, a2 + *(int *)(v4 + 44));
}

void sub_1001CB128(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char v34;
  unint64_t v35;
  uint64_t v36;
  __n128 v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t OpaqueTypeConformance2;
  unint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;

  v108 = a2;
  v3 = sub_1000BA294((uint64_t *)&unk_100C09DB0);
  v4 = __chkstk_darwin(v3);
  v102 = (char *)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for NavigationBarItem.TitleDisplayMode(0, v4);
  v99 = *(_QWORD *)(v6 - 8);
  v100 = v6;
  __chkstk_darwin(v6);
  v98 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = sub_1000BA294(&qword_100BC6638);
  __chkstk_darwin(v87);
  v86 = (uint64_t)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = sub_1000BA294(&qword_100BC6640);
  v89 = *(_QWORD *)(v90 - 8);
  __chkstk_darwin(v90);
  v88 = (char *)&v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = sub_1000BA294(&qword_100BC6648);
  v92 = *(_QWORD *)(v93 - 8);
  __chkstk_darwin(v93);
  v91 = (char *)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000BA294(&qword_100BC6650);
  v96 = *(_QWORD *)(v11 - 8);
  v97 = v11;
  __chkstk_darwin(v11);
  v95 = (char *)&v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = sub_1000BA294(&qword_100BC6658);
  __chkstk_darwin(v107);
  v94 = (char *)&v85 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v101 = (uint64_t)&v85 - v15;
  v104 = sub_1000BA294(&qword_100BC6660);
  __chkstk_darwin(v104);
  v106 = (uint64_t)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1000BA294(&qword_100BC6510);
  __chkstk_darwin(v17);
  v19 = (char *)&v85 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v85 - v21;
  v103 = type metadata accessor for ReportWeatherSubmittedView(0);
  __chkstk_darwin(v103);
  v24 = (char *)&v85 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = sub_1000BA294(&qword_100BC6668);
  v25 = *(_QWORD *)(v105 - 8);
  __chkstk_darwin(v105);
  v27 = (char *)&v85 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v30 = (char *)&v85 - v29;
  v31 = type metadata accessor for ReportWeatherView(0);
  v32 = a1;
  v33 = (char *)(a1 + *(int *)(v31 + 28));
  v34 = *v33;
  v35 = *((_QWORD *)v33 + 1);
  LOBYTE(v109) = v34;
  v110 = v35;
  v36 = sub_1000BA294(&qword_100BC5608);
  State.wrappedValue.getter(&v113, v36);
  if (v113 == 1)
  {
    sub_1007A5A6C(v37);
    Binding.projectedValue.getter(v17);
    sub_1000FF448((uint64_t)v22, &qword_100BC6510);
    sub_1000F111C((uint64_t)v19, (uint64_t)v24, &qword_100BC6510);
    sub_10000F1C8(&qword_100BC66C0, type metadata accessor for ReportWeatherSubmittedView);
    v39 = v38;
    v40 = v103;
    View.navigationBarHidden(_:)(1, v103, v38);
    sub_10006BD5C((uint64_t)v24, type metadata accessor for ReportWeatherSubmittedView);
    v41 = v105;
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v30, v27, v105);
    v42 = v106;
    (*(void (**)(uint64_t, char *, uint64_t))(v25 + 16))(v106, v30, v41);
    swift_storeEnumTagMultiPayload(v42, v104, 0);
    v109 = v40;
    v110 = v39;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v109, &opaque type descriptor for <<opaque return type of View.navigationBarHidden(_:)>>, 1);
    v44 = sub_1001CD364();
    _ConditionalContent<>.init(storage:)(v42, v41, v107, OpaqueTypeConformance2, v44);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v41);
  }
  else
  {
    v45 = v86;
    sub_1001CB970(v86);
    v46 = (uint64_t *)(a1 + *(int *)(v31 + 32));
    v47 = v46[1];
    v109 = *v46;
    v110 = v47;
    v48 = sub_100114EF8();
    swift_bridgeObjectRetain(v47);
    v49 = Text.init<A>(_:)(&v109, &type metadata for String, v48);
    v51 = v50;
    v53 = v52;
    v55 = v54 & 1;
    v56 = sub_1001CD23C();
    v57 = v88;
    v58 = v87;
    View.navigationTitle(_:)(v49, v51, v55, v53, v87, v56);
    sub_1000D31B4(v49, v51, v55);
    swift_bridgeObjectRelease();
    sub_1000FF448(v45, &qword_100BC6638);
    __chkstk_darwin(v59);
    *(&v85 - 2) = v32;
    v60 = sub_1000BA294(&qword_100BC66A8);
    v109 = v58;
    v110 = v56;
    v61 = swift_getOpaqueTypeConformance2(&v109, &opaque type descriptor for <<opaque return type of View.navigationTitle(_:)>>, 1);
    v62 = sub_100075EB0(&qword_100BC66B0);
    sub_1001CDAD0(&qword_100BC66B8, &qword_100BC66B0);
    v109 = v62;
    v110 = v63;
    v64 = swift_getOpaqueTypeConformance2(&v109, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
    v65 = v91;
    v66 = v90;
    View.toolbar<A>(content:)(sub_1001CD35C, &v85 - 4, v90, v60, v61, v64);
    (*(void (**)(char *, uint64_t))(v89 + 8))(v57, v66);
    v68 = v98;
    v67 = v99;
    v69 = v100;
    (*(void (**)(char *, _QWORD, uint64_t))(v99 + 104))(v98, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v100);
    v109 = v66;
    v110 = v60;
    v111 = v61;
    v112 = v64;
    v70 = swift_getOpaqueTypeConformance2(&v109, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 1);
    v71 = v95;
    v72 = v93;
    View.navigationBarTitleDisplayMode(_:)(v68, v93, v70);
    (*(void (**)(char *, uint64_t))(v67 + 8))(v68, v69);
    (*(void (**)(char *, uint64_t))(v92 + 8))(v65, v72);
    v73 = enum case for ColorScheme.dark(_:);
    v74 = type metadata accessor for ColorScheme(0);
    v75 = (uint64_t)v102;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 104))(v102, v73, v74);
    _s7Weather24LocationCompositionStateOwst_0(v75, 0, 1, v74);
    v76 = v107;
    v77 = (uint64_t)v94;
    sub_100037794(v75, (uint64_t)&v94[*(int *)(v107 + 36)], (uint64_t *)&unk_100C09DB0);
    v79 = v96;
    v78 = v97;
    (*(void (**)(uint64_t, char *, uint64_t))(v96 + 16))(v77, v71, v97);
    sub_1000FF448(v75, (uint64_t *)&unk_100C09DB0);
    (*(void (**)(char *, uint64_t))(v79 + 8))(v71, v78);
    v80 = v101;
    sub_1000F111C(v77, v101, &qword_100BC6658);
    v81 = v106;
    sub_100037794(v80, v106, &qword_100BC6658);
    swift_storeEnumTagMultiPayload(v81, v104, 1);
    sub_10000F1C8(&qword_100BC66C0, type metadata accessor for ReportWeatherSubmittedView);
    v109 = v103;
    v110 = v82;
    v83 = swift_getOpaqueTypeConformance2(&v109, &opaque type descriptor for <<opaque return type of View.navigationBarHidden(_:)>>, 1);
    v84 = sub_1001CD364();
    _ConditionalContent<>.init(storage:)(v81, v105, v76, v83, v84);
    sub_1000FF448(v80, &qword_100BC6658);
  }
}

void sub_1001CB970(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t KeyPath;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88[24];
  _QWORD __src[13];
  _BYTE __dst[97];

  v4 = v1;
  v87 = a1;
  v5 = sub_1000BA294(&qword_100BC6730);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_100094EC4();
  sub_1000BA294(&qword_100BD4280);
  sub_1000B42B0();
  __chkstk_darwin(v7);
  sub_100088FDC();
  v83 = v8;
  v9 = type metadata accessor for ReportWeatherContentView(0);
  sub_1000B42B0();
  __chkstk_darwin(v10);
  sub_10004A2E8();
  v84 = sub_1000BA294(&qword_100BC6680);
  sub_1000B42B0();
  __chkstk_darwin(v11);
  v82 = (char *)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v76 - v14;
  v16 = sub_1000CC8A8();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  __chkstk_darwin(v16);
  v20 = *(_QWORD *)(v1 + *(int *)(v19 + 20) + 8);
  swift_retain();
  sub_10017AEA8((void (**)(uint64_t *__return_ptr, double))__dst);
  swift_release(v20);
  v21 = *(_QWORD *)__dst;
  v86 = v2;
  v85 = v5;
  if ((*(_QWORD *)__dst & 0x8000000000000000) == 0)
  {
    v22 = sub_100098740((uint64_t)&unk_100B61148, 24);
    v81 = v15;
    v23 = v4;
    v24 = v22;
    *(_QWORD *)(v22 + 16) = v21;
    v79 = (_QWORD *)(v22 + 16);
    type metadata accessor for MainActor(0);
    v77 = v9;
    v25 = v24;
    swift_retain();
    v27 = static MainActor.shared.getter(v26);
    v28 = (_QWORD *)sub_100098740((uint64_t)&unk_100B61170, 40);
    v28[2] = v27;
    v28[3] = &protocol witness table for MainActor;
    v28[4] = v25;
    sub_10000AB54(v23, (uint64_t)&v76 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ReportWeatherView);
    v29 = v25;
    v80 = v25;
    swift_retain();
    v31 = static MainActor.shared.getter(v30);
    v32 = *(unsigned __int8 *)(v17 + 80);
    v33 = (v32 + 40) & ~v32;
    v34 = (_QWORD *)swift_allocObject(&unk_100B61198, v33 + v18, v32 | 7);
    v34[2] = v31;
    v34[3] = &protocol witness table for MainActor;
    v34[4] = v29;
    sub_1001CD0C0((uint64_t)&v76 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v34 + v33);
    Binding.init(get:set:)(__dst, sub_1001CD798, v28, sub_1001CD860, v34, &unk_100B632F8);
    v35 = *(_QWORD *)__dst;
    v36 = *(_QWORD *)&__dst[8];
    v37 = *(_QWORD *)&__dst[16];
    KeyPath = swift_getKeyPath(&unk_100980E40);
    v39 = (uint64_t *)((char *)v3 + *(int *)(v77 + 20));
    *v39 = KeyPath;
    v40 = sub_1000BA294(&qword_100BC2990);
    sub_1000916FC((uint64_t)v39, v40);
    *v3 = v35;
    v3[1] = v36;
    v3[2] = v37;
    v41 = swift_getKeyPath(&unk_100980E70);
    *(_QWORD *)__dst = v35;
    *(_QWORD *)&__dst[8] = v36;
    *(_QWORD *)&__dst[16] = v37;
    v78 = v35;
    sub_1000CD584(v35);
    sub_1000CD584(v36);
    sub_1000CD584(v37);
    v42 = sub_1000BA294(&qword_100BC6740);
    Binding.subscript.getter(__src, v41, v42);
    swift_release(v37);
    swift_release(v36);
    swift_release(v35);
    swift_release(v41);
    v77 = __src[0];
    v43 = __src[1];
    LOBYTE(v29) = __src[2];
    v44 = v79;
    sub_1000992EC((uint64_t)v79, (uint64_t)__dst);
    v45 = *v44 + OBJC_IVAR____TtCV7Weather29ReportWeatherContentViewModel8_Storage_onlineFeedbackURL;
    v46 = type metadata accessor for URL(0);
    v47 = v83;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v83, v45, v46);
    _s7Weather24LocationCompositionStateOwst_0(v47, 0, 1, v46);
    v48 = v84;
    v49 = (uint64_t)v82;
    v50 = &v82[*(int *)(v84 + 36)];
    v51 = type metadata accessor for SafariSheetModifier(0);
    sub_100037794(v47, (uint64_t)&v50[*(int *)(v51 + 20)], &qword_100BD4280);
    *(_QWORD *)v50 = v77;
    *((_QWORD *)v50 + 1) = v43;
    v50[16] = v29;
    sub_10000AB54((uint64_t)v3, v49, type metadata accessor for ReportWeatherContentView);
    sub_1000CFB88();
    sub_10006BD5C((uint64_t)v3, type metadata accessor for ReportWeatherContentView);
    v52 = (uint64_t)v81;
    sub_1000F111C(v49, (uint64_t)v81, &qword_100BC6680);
    v53 = v86;
    sub_100037794(v52, v86, &qword_100BC6680);
    sub_1000916FC(v53, v85);
    v54 = sub_1000BA294(&qword_100BC66A0);
    v55 = sub_1001CD2C0();
    sub_1001CDAD0(&qword_100BC6698, &qword_100BC66A0);
    _ConditionalContent<>.init(storage:)(v53, v48, v54, v55, v56);
    swift_release(v37);
    swift_release(v36);
    swift_release(v78);
    sub_1000CFB88();
    swift_release(v80);
LABEL_7:
    sub_100098640();
    return;
  }
  v57 = *(_QWORD *)&__dst[16];
  v83 = *(_QWORD *)&__dst[8];
  v58 = *(_QWORD *)&__dst[24];
  v59 = *(_QWORD *)&__dst[32];
  v60 = *(_QWORD *)&__dst[40];
  v61 = *(_QWORD *)&__dst[48];
  v62 = *(_QWORD *)&__dst[56];
  v63 = *(_QWORD *)&__dst[64];
  v82 = *(char **)&__dst[72];
  v64 = *(_QWORD *)&__dst[88];
  v81 = *(char **)&__dst[80];
  v65 = __dst[0] & 1;
  v66 = sub_100098740((uint64_t)&unk_100B61120, 112);
  *(_BYTE *)(v66 + 16) = v65;
  *(_QWORD *)(v66 + 24) = v83;
  *(_QWORD *)(v66 + 32) = v57;
  *(_QWORD *)(v66 + 40) = v58;
  *(_QWORD *)(v66 + 48) = v59;
  *(_QWORD *)(v66 + 56) = v60;
  *(_QWORD *)(v66 + 64) = v61;
  *(_QWORD *)(v66 + 72) = v62;
  *(_QWORD *)(v66 + 80) = v63;
  v67 = (uint64_t)v81;
  *(_QWORD *)(v66 + 88) = v82;
  *(_QWORD *)(v66 + 96) = v67;
  *(_QWORD *)(v66 + 104) = v64;
  v68 = sub_1000BA294(&qword_100BC6738);
  __src[10] = sub_10067962C;
  __src[11] = 0;
  LOBYTE(__src[12]) = 0;
  __src[0] = v68;
  if (qword_100BC1F00 != -1)
    swift_once(&qword_100BC1F00, sub_10014C654);
  sub_1000992EC((uint64_t)&xmmword_100CAE588, (uint64_t)v88);
  sub_100037794((uint64_t)&xmmword_100CAE588, (uint64_t)__dst, &qword_100BCED50);
  v69 = v86;
  v70 = v85;
  v71 = v84;
  if (*(_QWORD *)&__dst[24])
  {
    sub_10003C800((__int128 *)__dst, (uint64_t)&__src[3]);
    __src[1] = sub_1001CD740;
    __src[2] = v66;
    v72 = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage);
    __src[8] = _swiftEmptyArrayStorage;
    __src[9] = v72;
    memcpy(__dst, __src, sizeof(__dst));
    sub_100037794((uint64_t)__dst, v69, &qword_100BC66A0);
    swift_storeEnumTagMultiPayload(v69, v70, 1);
    v73 = sub_1000BA294(&qword_100BC66A0);
    v74 = sub_1001CD2C0();
    sub_1001CDAD0(&qword_100BC6698, &qword_100BC66A0);
    _ConditionalContent<>.init(storage:)(v69, v71, v73, v74, v75);
    sub_1000FF448((uint64_t)__dst, &qword_100BC66A0);
    goto LABEL_7;
  }
  __break(1u);
}

uint64_t sub_1001CC070()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_1000BA294(&qword_100BC66B0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001CC128();
  sub_1001CDAD0(&qword_100BC66B8, &qword_100BC66B0);
  static ToolbarContentBuilder.buildBlock<A>(_:)(v3, v0, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

void sub_1001CC128()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[16];
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;

  v18 = sub_1000BA294(&qword_100BC66E0);
  sub_1000B42B0();
  __chkstk_darwin(v2);
  sub_100098728();
  v5 = v4 - v3;
  v17 = sub_1000BA294(&qword_100BC66E8);
  v6 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  sub_100098728();
  v9 = v8 - v7;
  type metadata accessor for ToolbarItemPlacement(0);
  sub_1000B42B0();
  __chkstk_darwin(v10);
  sub_100098728();
  v11 = sub_1000BA294(&qword_100BC66F0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  sub_10004A2E8();
  static ToolbarItemPlacement.navigationBarLeading.getter();
  v22 = v0;
  sub_1000BA294(&qword_100BC4FA0);
  sub_1001CDAD0(&qword_100BC4FC0, &qword_100BC4FA0);
  v14 = sub_1000C1300(v13, (uint64_t)sub_1001CD4D4, (uint64_t)v21);
  static ToolbarItemPlacement.confirmationAction.getter(v14);
  v20 = v0;
  sub_1000BA294(&qword_100BC66F8);
  v15 = sub_1001CD4E4();
  sub_1000C1300(v15, (uint64_t)sub_1001CD4DC, (uint64_t)v19);
  v16 = v5 + *(int *)(v18 + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v5, v1, v11);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v16, v9, v17);
  TupleToolbarContent.init(_:)(v5, v18);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v17);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v1, v11);
  sub_100098640();
}

uint64_t sub_1001CC2F8(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = type metadata accessor for ReportWeatherView(0);
  v3 = sub_1000DB418((_QWORD *)(a1 + *(int *)(v2 + 24)), *(_QWORD *)(a1 + *(int *)(v2 + 24) + 24));
  sub_1000DB418((_QWORD *)(*v3 + 32), *(_QWORD *)(*v3 + 56));
  v4 = type metadata accessor for ReportWeatherExposureEvent(0);
  sub_10000F1C8(&qword_100BC6628, (uint64_t (*)(uint64_t))&type metadata accessor for ReportWeatherExposureEvent);
  return Tracker.timeDiagnosticEvent<A>(_:)(v4, v4, v5);
}

double sub_1001CC378(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t *__return_ptr, double);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v2 = type metadata accessor for ReportWeatherView(0);
  v3 = *(_QWORD *)(a1 + *(int *)(v2 + 20) + 8);
  swift_retain();
  sub_10017AEA8((void (**)(uint64_t *__return_ptr, double))&v26);
  swift_release(v3);
  v5 = (void (*)(uint64_t *__return_ptr, double))v26;
  v4 = v27;
  v6 = v28;
  v7 = v29;
  v8 = v30;
  v9 = v31;
  v11 = v32;
  v10 = v33;
  v12 = v34;
  v13 = v35;
  v14 = v36;
  v15 = v37;
  if ((v26 & 0x8000000000000000) == 0)
  {
    v16 = (_QWORD *)(a1 + *(int *)(v2 + 24));
    v24 = v29;
    v25 = v27;
    v22 = v30;
    v23 = v28;
    v17 = v31;
    v18 = sub_1000DB418(v16, v16[3]);
    sub_1000DB418((_QWORD *)(*v18 + 32), *(_QWORD *)(*v18 + 56));
    v19 = type metadata accessor for ReportWeatherExposureEvent(0);
    sub_10000F1C8(&qword_100BC6628, (uint64_t (*)(uint64_t))&type metadata accessor for ReportWeatherExposureEvent);
    Tracker.submitDiagnosticEvent<A>(_:onlyIfTimed:completion:)(v19, 1, 0, 0, v19, v20);
    v9 = v17;
    v8 = v22;
    v6 = v23;
    v7 = v24;
    v4 = v25;
  }
  return sub_10019D2B8((uint64_t)v5, v4, v6, v7, v8, v9, v11, v10, v12, v13, v14, v15);
}

double sub_1001CC4A0@<D0>(uint64_t a1@<X2>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  double result;
  _BYTE v6[24];

  swift_beginAccess(a1 + 16, v6, 0, 0);
  v4 = *(_QWORD *)(a1 + 16);
  *a2 = v4;
  *(_QWORD *)&result = swift_retain(v4).n128_u64[0];
  return result;
}

double sub_1001CC4E8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[24];
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;

  v7 = *a1;
  swift_beginAccess(a4 + 16, v11, 1, 0);
  v8 = *(_QWORD *)(a4 + 16);
  *(_QWORD *)(a4 + 16) = v7;
  swift_retain();
  swift_release(v8);
  v9 = type metadata accessor for ReportWeatherView(0);
  sub_1000DB418((_QWORD *)(a5 + *(int *)(v9 + 24)), *(_QWORD *)(a5 + *(int *)(v9 + 24) + 24));
  v12 = v7;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v18 = 0;
  return sub_100679278(&v12);
}

_QWORD *sub_1001CC58C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v5;

  v5 = sub_1000DB418(a1, a1[3]);
  sub_100043CA8(*v5 + 16, a3);
  memcpy((void *)(a3 + 40), a2, 0x60uLL);
  return sub_1001CD8F0(a2);
}

uint64_t sub_1001CC5D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v2 = type metadata accessor for ReportWeatherView(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  v5 = sub_1000BA294(&qword_100BC6728);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static ButtonRole.cancel.getter(v6);
  v9 = type metadata accessor for ButtonRole(0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v9);
  sub_10000AB54(a1, (uint64_t)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ReportWeatherView);
  v10 = *(unsigned __int8 *)(v3 + 80);
  v11 = (v10 + 16) & ~v10;
  v12 = swift_allocObject(&unk_100B610F8, v11 + v4, v10 | 7);
  sub_1001CD0C0((uint64_t)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v12 + v11);
  return Button.init(role:action:label:)(v8, sub_1001CD6B8, v12, sub_1001CC800, 0, &type metadata for Text, &protocol witness table for Text);
}

void sub_1001CC720()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v0 = type metadata accessor for PresentationMode(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1000BA294(&qword_100BC6510);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1007A5A6C(v4);
  Binding.wrappedValue.getter(v3);
  PresentationMode.dismiss()();
  Binding.wrappedValue.setter(v2, v3);
  sub_1000FF448((uint64_t)v6, &qword_100BC6510);
}

uint64_t sub_1001CC800@<X0>(uint64_t a1@<X8>)
{
  return sub_1001CCEA8(0x6C65636E6143, (uint64_t)"The word cancel to dismiss the view", a1);
}

void sub_1001CC81C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t *__return_ptr, double);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t KeyPath;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  void (*v41)(uint64_t *__return_ptr, double);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _BOOL4 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;

  v72 = a2;
  v3 = type metadata accessor for ReportWeatherView(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000BA294(&qword_100BC4FA0);
  v68 = *(_QWORD *)(v7 - 8);
  v69 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_1000BA294(&qword_100BC6710);
  __chkstk_darwin(v66);
  v73 = (uint64_t)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_1000BA294(&qword_100BC66F8);
  __chkstk_darwin(v70);
  v71 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000AB54(a1, (uint64_t)v6, type metadata accessor for ReportWeatherView);
  v12 = *(unsigned __int8 *)(v4 + 80);
  v13 = (v12 + 16) & ~v12;
  v14 = swift_allocObject(&unk_100B610A8, v13 + v5, v12 | 7);
  sub_1001CD0C0((uint64_t)v6, v14 + v13);
  v67 = v9;
  Button.init(action:label:)(sub_1001CD608, v14, sub_1001CCE8C, 0, &type metadata for Text, &protocol witness table for Text);
  v65 = a1 + *(int *)(v3 + 20);
  v15 = *(_QWORD *)(v65 + 8);
  swift_retain();
  sub_10017AEA8((void (**)(uint64_t *__return_ptr, double))&v74);
  swift_release(v15);
  v16 = (void (*)(uint64_t *__return_ptr, double))v74;
  v17 = v75;
  v18 = v76;
  v19 = v77;
  v21 = v78;
  v20 = v79;
  v22 = v82;
  v23 = v83;
  v24 = v84;
  v25 = v85;
  if (v74 < 0)
  {
    v29.n128_f64[0] = sub_10019D2B8(v74, v75, v76, v77, v78, v79, v80, v81, v82, v83, v84, v85);
    v31 = v68;
    v30 = v69;
    v33 = v66;
    v32 = v67;
    v34 = v65;
  }
  else
  {
    v64 = v80;
    v62 = v81;
    v61 = v83;
    swift_retain();
    v63 = sub_1004DF284(v26);
    v60 = v23;
    v27 = v62;
    sub_10019D2B8((uint64_t)v16, v17, v18, v19, v21, v20, v64, v62, v22, v60, v24, v25);
    v29.n128_f64[0] = sub_10019D2B8((uint64_t)v16, v17, v18, v19, v21, v20, v64, v27, v22, v61, v24, v25);
    v31 = v68;
    v30 = v69;
    v33 = v66;
    v32 = v67;
    v34 = v65;
    if (v63)
    {
      v35 = static Color.white.getter(v28);
      goto LABEL_6;
    }
  }
  v35 = static Color.gray.getter(v29);
LABEL_6:
  v36 = v35;
  KeyPath = swift_getKeyPath(&unk_100980DE0);
  v38 = v73;
  (*(void (**)(uint64_t, char *, uint64_t))(v31 + 16))(v73, v32, v30);
  v39 = (uint64_t *)(v38 + *(int *)(v33 + 36));
  *v39 = KeyPath;
  v39[1] = v36;
  (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v30);
  v40 = *(_QWORD *)(v34 + 8);
  swift_retain();
  sub_10017AEA8((void (**)(uint64_t *__return_ptr, double))&v74);
  swift_release(v40);
  v41 = (void (*)(uint64_t *__return_ptr, double))v74;
  v42 = v75;
  v44 = v76;
  v43 = v77;
  v45 = v78;
  v46 = v79;
  v47 = v82;
  v48 = v83;
  v50 = v84;
  v49 = v85;
  if (v74 < 0)
  {
    sub_10019D2B8(v74, v75, v76, v77, v78, v79, v80, v81, v82, v83, v84, v85);
    v52 = 1;
  }
  else
  {
    v68 = v80;
    v69 = v81;
    swift_retain();
    LODWORD(v67) = sub_1004DF284(v51);
    sub_10019D2B8((uint64_t)v41, v42, v44, v43, v45, v46, v68, v69, v47, v48, v50, v49);
    sub_10019D2B8((uint64_t)v41, v42, v44, v43, v45, v46, v68, v69, v47, v48, v50, v49);
    v52 = v67 ^ 1;
  }
  v54 = (uint64_t)v71;
  v53 = v72;
  v55 = v70;
  v56 = swift_getKeyPath(&unk_100980E10);
  v57 = swift_allocObject(&unk_100B610D0, 17, 7);
  *(_BYTE *)(v57 + 16) = v52 & 1;
  v58 = v73;
  sub_100037794(v73, v54, &qword_100BC6710);
  v59 = (uint64_t *)(v54 + *(int *)(v55 + 36));
  *v59 = v56;
  v59[1] = (uint64_t)sub_1001545D0;
  v59[2] = v57;
  sub_1000FF448(v58, &qword_100BC6710);
  sub_1000F111C(v54, v53, &qword_100BC66F8);
}

double sub_1001CCCDC(uint64_t a1, __n128 a2, double a3, __n128 a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t *__return_ptr, double);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[16];
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  a2.n128_u64[0] = 0x3FD51EB851EB851FLL;
  a4.n128_u64[0] = 0x3FE570A3D70A3D71;
  v5 = static Animation.timingCurve(_:_:_:_:duration:)(a2, 0.0, a4, 1.0);
  v28 = a1;
  withAnimation<A>(_:_:)(v5, sub_1001CD69C, v27, &type metadata for () + 1);
  swift_release(v5);
  v6 = type metadata accessor for ReportWeatherView(0);
  v7 = *(_QWORD *)(a1 + *(int *)(v6 + 20) + 8);
  swift_retain();
  sub_10017AEA8((void (**)(uint64_t *__return_ptr, double))&v29);
  swift_release(v7);
  v9 = (void (*)(uint64_t *__return_ptr, double))v29;
  v8 = v30;
  v10 = v31;
  v11 = v32;
  v13 = v33;
  v12 = v34;
  v14 = v35;
  v15 = v36;
  v16 = v37;
  v17 = v38;
  v18 = v39;
  v19 = v40;
  if ((v29 & 0x8000000000000000) == 0)
  {
    v25 = v37;
    v26 = v30;
    v20 = (_QWORD *)(a1 + *(int *)(v6 + 24));
    v24 = v31;
    v21 = v34;
    v22 = v39;
    sub_1000DB418(v20, v20[3]);
    sub_1006793C4((uint64_t)v9);
    v18 = v22;
    v10 = v24;
    v16 = v25;
    v12 = v21;
    v8 = v26;
  }
  return sub_10019D2B8((uint64_t)v9, v8, v10, v11, v13, v12, v14, v15, v16, v17, v18, v19);
}

uint64_t sub_1001CCE1C(uint64_t a1)
{
  char *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[9];
  uint64_t v7;

  v1 = (char *)(a1 + *(int *)(type metadata accessor for ReportWeatherView(0) + 28));
  v2 = *v1;
  v3 = *((_QWORD *)v1 + 1);
  v6[1] = v2;
  v7 = v3;
  v6[0] = 1;
  v4 = sub_1000BA294(&qword_100BC5608);
  return State.wrappedValue.setter(v6, v4);
}

uint64_t sub_1001CCE8C@<X0>(uint64_t a1@<X8>)
{
  return sub_1001CCEA8(0x74696D627553, (uint64_t)"The word submit to submit feedback", a1);
}

uint64_t sub_1001CCEA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  char v11;
  uint64_t v12;

  v5 = LocalizedStringKey.init(stringLiteral:)(a1, 0xE600000000000000);
  result = Text.init(_:tableName:bundle:comment:)(v5, v7, v6 & 1, v8, 0, 0, 0, a2);
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = v10;
  *(_BYTE *)(a3 + 16) = v11 & 1;
  *(_QWORD *)(a3 + 24) = v12;
  return result;
}

void sub_1001CCF18(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  int *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  Swift::String *v16;
  id v17;
  Swift::String v18;
  Swift::String v19;
  Swift::String v20;
  _BYTE v21[9];
  uint64_t v22;
  Swift::String v23;

  sub_1000F111C(a1, a5, &qword_100BC6518);
  v9 = (int *)sub_1000CC8A8();
  v10 = (_QWORD *)(a5 + v9[5]);
  v11 = sub_1000BA294(&qword_100BC4448);
  sub_1001CDAD0(&qword_100BC4450, &qword_100BC4448);
  *v10 = ObservedObject.init(wrappedValue:)(a2, v11, v12);
  v10[1] = v13;
  sub_10003C800(a3, a5 + v9[6]);
  v14 = a5 + v9[7];
  v21[0] = a4;
  State.init(wrappedValue:)(v21, &type metadata for Bool);
  v15 = v22;
  *(_BYTE *)v14 = v21[1];
  *(_QWORD *)(v14 + 8) = v15;
  v16 = (Swift::String *)(a5 + v9[8]);
  v17 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v23._countAndFlagsBits = 0xD00000000000002BLL;
  v23._object = (void *)0x80000001009F24D0;
  v18._object = (void *)0x80000001009F24A0;
  v18._countAndFlagsBits = 0xD000000000000020;
  v19._countAndFlagsBits = 0x612074726F706552;
  v19._object = (void *)0xEF6575737349206ELL;
  v20 = NSLocalizedString(_:tableName:bundle:value:comment:)(v18, (Swift::String_optional)0, (NSBundle)v17, v19, v23);

  *v16 = v20;
}

void sub_1001CD0AC(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1001CB0DC(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1001CD0C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ReportWeatherView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001CD104()
{
  return sub_1001CD6C4(sub_1001CC2F8);
}

uint64_t sub_1001CD114()
{
  return sub_1001CD6C4((uint64_t (*)(uint64_t))sub_1001CC378);
}

uint64_t sub_1001CD120()
{
  return sub_1001CD13C(&qword_100BC6610, &qword_100BC65D8);
}

uint64_t sub_1001CD13C(unint64_t *a1, uint64_t *a2)
{
  void (*v2)(void);
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1000B4444(0, a2);
    v2();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1001CD1A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC6618;
  if (!qword_100BC6618)
  {
    v1 = sub_100075EB0(&qword_100BC65D0);
    sub_1001CDAD0(&qword_100BC6620, &qword_100BC65C8);
    sub_1001CDAD0((unint64_t *)&qword_100BC4B98, (uint64_t *)&unk_100C09EE0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BC6618);
  }
  return result;
}

unint64_t sub_1001CD23C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC6670;
  if (!qword_100BC6670)
  {
    v1 = sub_100075EB0(&qword_100BC6638);
    sub_1001CD2C0();
    sub_1001CDAD0(&qword_100BC6698, &qword_100BC66A0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BC6670);
  }
  return result;
}

unint64_t sub_1001CD2C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC6678;
  if (!qword_100BC6678)
  {
    v1 = sub_100075EB0(&qword_100BC6680);
    sub_10000F1C8(&qword_100BC6688, type metadata accessor for ReportWeatherContentView);
    sub_10000F1C8(&qword_100BC6690, type metadata accessor for SafariSheetModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BC6678);
  }
  return result;
}

uint64_t sub_1001CD35C()
{
  return sub_1001CC070();
}

unint64_t sub_1001CD364()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t OpaqueTypeConformance2;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  result = qword_100BC66C8;
  if (!qword_100BC66C8)
  {
    v1 = sub_100075EB0(&qword_100BC6658);
    v2 = sub_100075EB0(&qword_100BC6648);
    v3 = sub_100075EB0(&qword_100BC6640);
    v4 = sub_100075EB0(&qword_100BC66A8);
    v10 = sub_100075EB0(&qword_100BC6638);
    v11 = sub_1001CD23C();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v10, &opaque type descriptor for <<opaque return type of View.navigationTitle(_:)>>, 1);
    v6 = sub_100075EB0(&qword_100BC66B0);
    sub_1001CDAD0(&qword_100BC66B8, &qword_100BC66B0);
    v10 = v6;
    v11 = v7;
    v8 = swift_getOpaqueTypeConformance2(&v10, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
    v10 = v3;
    v11 = v4;
    v12 = OpaqueTypeConformance2;
    v13 = v8;
    v9 = swift_getOpaqueTypeConformance2(&v10, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 1);
    v10 = v2;
    v11 = v9;
    swift_getOpaqueTypeConformance2(&v10, &opaque type descriptor for <<opaque return type of View.navigationBarTitleDisplayMode(_:)>>, 1);
    sub_1001CDAD0(&qword_100BC66D0, &qword_100BC66D8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BC66C8);
  }
  return result;
}

uint64_t sub_1001CD4D4()
{
  uint64_t v0;

  return sub_1001CC5D8(*(_QWORD *)(v0 + 16));
}

void sub_1001CD4DC(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1001CC81C(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1001CD4E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC6700;
  if (!qword_100BC6700)
  {
    v1 = sub_100075EB0(&qword_100BC66F8);
    sub_1001CD568();
    sub_1001CDAD0(&qword_100BC6718, &qword_100BC6720);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BC6700);
  }
  return result;
}

unint64_t sub_1001CD568()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC6708;
  if (!qword_100BC6708)
  {
    v1 = sub_100075EB0(&qword_100BC6710);
    sub_1001CDAD0(&qword_100BC4FC0, &qword_100BC4FA0);
    sub_1001CDAD0((unint64_t *)&qword_100BC4B98, (uint64_t *)&unk_100C09EE0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BC6708);
  }
  return result;
}

uint64_t sub_1001CD608()
{
  return sub_1001CD6C4((uint64_t (*)(uint64_t))sub_1001CCCDC);
}

void sub_1001CD61C()
{
  _BYTE *v0;

  *v0 = sub_1000D8DDC() & 1;
  sub_10004A298();
}

void sub_1001CD63C()
{
  _BYTE *v0;

  *v0 = sub_1000D8DDC() & 1;
  sub_10004A298();
}

void sub_1001CD65C(unsigned __int8 *a1)
{
  sub_1000C0CBC(a1);
  sub_10004A298();
}

void sub_1001CD674(unsigned __int8 *a1)
{
  sub_1000C0CBC(a1);
  sub_10004A298();
}

uint64_t sub_1001CD68C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001CD69C()
{
  uint64_t v0;

  return sub_1001CCE1C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1001CD6B8()
{
  return sub_1001CD6C4((uint64_t (*)(uint64_t))sub_1001CC720);
}

uint64_t sub_1001CD6C4(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(sub_1000CC8A8() - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

uint64_t sub_1001CD6FC()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[4]);
  swift_bridgeObjectRelease(v0[6]);
  swift_bridgeObjectRelease(v0[8]);
  swift_bridgeObjectRelease(v0[11]);
  swift_bridgeObjectRelease(v0[13]);
  return swift_deallocObject(v0, 112, 7);
}

_QWORD *sub_1001CD740@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1001CC58C(a1, (_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1001CD748()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001CD76C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

double sub_1001CD798@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1001CC4A0(*(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_1001CD7A4()
{
  uint64_t v0;
  int v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = (int *)sub_1000CC8A8();
  v3 = *((_QWORD *)v2 - 1);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 40) & ~v4;
  v6 = *(_QWORD *)(v3 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  v7 = v0 + v5;
  v8 = sub_1000BA294(&qword_100BC4F28);
  sub_100098814(v8);
  sub_1000BD298();
  if (v1 == 1)
  {
    swift_release(*(_QWORD *)(v7 + 8));
    sub_1000BA294(&qword_100BC6510);
    v9 = sub_1000BEDD4();
    sub_1000B2568(v9);
  }
  sub_1000C2470(v2[5]);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v7 + v2[6]));
  sub_1000C2470(v2[7]);
  sub_1000DF460();
  return sub_1000B4380(v0, v5 + v6, v4 | 7);
}

double sub_1001CD860(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_1000CC8A8() - 8) + 80);
  return sub_1001CC4E8(a1, v1[2], v1[3], v1[4], (uint64_t)v1 + ((v3 + 40) & ~v3));
}

void sub_1001CD8A8(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  *a2 = sub_1001DA418(*a1) & 1;
  sub_10004A298();
}

void sub_1001CD8D0(char *a1)
{
  sub_1001DA428(*a1);
  sub_10004A298();
}

_QWORD *sub_1001CD8F0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[2];
  v3 = a1[4];
  v4 = a1[6];
  v5 = a1[11];
  swift_bridgeObjectRetain(a1[9]);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

unint64_t sub_1001CD95C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC6748;
  if (!qword_100BC6748)
  {
    v1 = sub_100075EB0(&qword_100BC6750);
    sub_1001CD9E0();
    sub_10000F1C8((unint64_t *)&qword_100BC6768, type metadata accessor for AutomationInfoViewModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BC6748);
  }
  return result;
}

unint64_t sub_1001CD9E0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_100BC6758;
  if (!qword_100BC6758)
  {
    v1 = sub_100075EB0(&qword_100BC65F0);
    v2[0] = sub_100075EB0(&qword_100BC65E0);
    v2[1] = sub_1001CD13C(&qword_100BC6608, &qword_100BC65E0);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_1001CDA94();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BC6758);
  }
  return result;
}

unint64_t sub_1001CDA94()
{
  unint64_t result;

  result = qword_100BC6760;
  if (!qword_100BC6760)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for _AccessibilityIgnoresInvertColorsViewModifier, &type metadata for _AccessibilityIgnoresInvertColorsViewModifier);
    atomic_store(result, (unint64_t *)&qword_100BC6760);
  }
  return result;
}

void sub_1001CDAD0(unint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  if (!*a1)
  {
    v3 = sub_1000B4444(0, a2);
    atomic_store(sub_10003BC38(v3), a1);
  }
  sub_10004A298();
}

uint64_t sub_1001CDAFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _BYTE v10[24];

  v3 = type metadata accessor for Date(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_10009922C(v1 + 16, (uint64_t)v10, 0);
  v7 = *(_QWORD *)(v1 + 16);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  swift_retain();
  Atomic.wrappedValue.setter(v6);
  swift_release(v7);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
}

uint64_t sub_1001CDBB8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocClassInstance(v0, 24, 7);
}

uint64_t type metadata accessor for SevereNhpNewsContentView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100108FF8(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SevereNhpNewsContentView);
}

uint64_t sub_1001CDBE8(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_100AAA4B8, 1);
}

uint64_t sub_1001CDC1C@<X0>(uint64_t a1@<X0>, __int16 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  void *v24;
  uint64_t v25;
  uint64_t (*v26)(_QWORD, _QWORD);
  uint64_t WitnessTable;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, char *, uint64_t);
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t (*v51)(_QWORD, _QWORD);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  _QWORD v63[2];
  _QWORD v64[2];
  _QWORD v65[4];
  _BYTE v66[552];
  _QWORD v67[70];

  v62 = a4;
  v55 = a3;
  v60 = a7;
  v67[0] = a5;
  v67[1] = a5;
  v67[2] = a5;
  v67[3] = a5;
  v10 = a2;
  v11 = a2 & 0x100;
  v67[4] = a5;
  v67[5] = a5;
  v67[6] = a5;
  v67[7] = a5;
  v12 = sub_1000BBB64(255, 8, (uint64_t)v67);
  v53 = sub_1000AE86C(v12);
  v13 = type metadata accessor for Group(0, v53);
  v14 = *(_QWORD *)(v13 - 8);
  v56 = v13;
  v57 = v14;
  __chkstk_darwin(v13);
  sub_1000986FC();
  v59 = v15;
  __chkstk_darwin(v16);
  v58 = (char *)&v48 - v17;
  v67[0] = a5;
  v67[1] = a5;
  v67[2] = a5;
  v67[3] = a5;
  v67[4] = type metadata accessor for Optional(255, a5);
  v67[5] = a5;
  v67[6] = a5;
  v67[7] = a5;
  v67[8] = a5;
  v18 = sub_1000BBB64(255, 9, (uint64_t)v67);
  v51 = (uint64_t (*)(_QWORD, _QWORD))sub_1000AE86C(v18);
  v54 = type metadata accessor for Group(0, v51);
  v52 = *(_QWORD *)(v54 - 8);
  __chkstk_darwin(v54);
  sub_1000986FC();
  v20 = v19;
  __chkstk_darwin(v21);
  v61 = (char *)&v48 - v22;
  if (v10)
  {
    if (v10 == 1)
    {
      if (v11)
      {
        v23 = &qword_100BE9950;
        goto LABEL_11;
      }
    }
    else if (v11)
    {
      v23 = &qword_100BE9DA0;
      goto LABEL_11;
    }
    v23 = &qword_100BE9B78;
    goto LABEL_11;
  }
  if (v11)
    v23 = &qword_100BE9500;
  else
    v23 = &qword_100BE9728;
LABEL_11:
  memcpy(v67, v23, 0x228uLL);
  v24 = memcpy(v66, v67, sizeof(v66));
  v50 = &v48;
  __chkstk_darwin(v24);
  *(&v48 - 8) = a5;
  *(&v48 - 7) = a6;
  v48 = a1;
  *(&v48 - 6) = a1;
  *((_BYTE *)&v48 - 40) = v10;
  HIDWORD(v49) = v11 >> 8;
  *((_BYTE *)&v48 - 39) = BYTE1(v11);
  v25 = v62;
  *(&v48 - 4) = v55;
  *(&v48 - 3) = v25;
  *(&v48 - 2) = (uint64_t)v66;
  v26 = v51;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v51);
  Group<A>.init(content:)(sub_1001CF294, &v48 - 10, v26, WitnessTable);
  v65[3] = WitnessTable;
  v28 = v54;
  v50 = (uint64_t *)swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v54);
  sub_1000B2074(v20, v28, v50);
  v29 = v52;
  v51 = *(uint64_t (**)(_QWORD, _QWORD))(v52 + 8);
  v30 = v51(v20, v28);
  __chkstk_darwin(v30);
  *(&v48 - 8) = a5;
  *(&v48 - 7) = a6;
  *(&v48 - 6) = v48;
  *((_BYTE *)&v48 - 40) = v10;
  *((_BYTE *)&v48 - 39) = BYTE4(v49);
  v31 = v62;
  *(&v48 - 4) = v32;
  *(&v48 - 3) = v31;
  *(&v48 - 2) = (uint64_t)v66;
  v33 = v53;
  v34 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v53);
  v35 = v59;
  Group<A>.init(content:)(sub_1001CF2A0, &v48 - 10, v33, v34);
  v65[2] = v34;
  v36 = v56;
  v37 = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v56);
  v38 = (uint64_t)v58;
  sub_1000B2074(v35, v36, v37);
  v39 = v57;
  sub_1000C3530(v35);
  v40 = *(void (**)(uint64_t, char *, uint64_t))(v29 + 16);
  v41 = v61;
  v40(v20, v61, v28);
  v65[0] = v20;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16))(v35, v38, v36);
  v65[1] = v35;
  v64[0] = v28;
  v64[1] = v36;
  v63[0] = v50;
  v63[1] = v37;
  sub_10052800C((uint64_t)v65, 2, (uint64_t)v64, (uint64_t)v63, v42, v43, v44, v45, v48, v49, (uint64_t)v50, (uint64_t)v51, v52, v53, v54, v55, v56, v57);
  sub_1000C3530(v38);
  v46 = v51;
  v51(v41, v28);
  sub_1000C3530(v35);
  return v46(v20, v28);
}

uint64_t sub_1001CE048@<X0>(uint64_t a1@<X0>, void (*a2)(char *, _QWORD, _QWORD, _QWORD, _QWORD)@<X2>, _QWORD *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  void (*v62)(uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  void (*v67)(uint64_t, uint64_t);
  uint64_t v68;
  void (*v69)(char *, _QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v70;
  char *v71;
  void (*v72)(char *, char *, uint64_t);
  char *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;
  void (*v92)(uint64_t, uint64_t);
  uint64_t v93;
  char *v94;
  uint64_t v95;
  void (*v96)(uint64_t, uint64_t);
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  char *v101;
  char *v102;
  char *v103;
  char *v104;
  char *v105;
  char *v106;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  char *v111;
  char *v112;
  char *v113;
  uint64_t v114;
  char *v115;
  void (*v116)(char *, _QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v117;
  uint64_t v118;
  _QWORD v119[9];
  _QWORD v120[9];
  _QWORD v121[9];
  char v122[24];
  _BYTE v123[40];
  _QWORD v124[4];
  char v125;

  v95 = a6;
  v11 = sub_1000BA294(&qword_100BC4A98);
  __chkstk_darwin(v11);
  v91 = (uint64_t)&v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = type metadata accessor for Optional(0, a4);
  v100 = *(_QWORD *)(v108 - 8);
  __chkstk_darwin(v108);
  v117 = (uint64_t)&v90 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v114 = (uint64_t)&v90 - v15;
  v92 = (void (*)(uint64_t, uint64_t))type metadata accessor for LocationComponentContainerViewModel(0);
  __chkstk_darwin(v92);
  v90 = (uint64_t)&v90 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v90 - v18;
  v97 = *(_QWORD *)(a4 - 8);
  __chkstk_darwin(v20);
  v94 = (char *)&v90 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v107 = (char *)&v90 - v23;
  __chkstk_darwin(v24);
  v106 = (char *)&v90 - v25;
  __chkstk_darwin(v26);
  v105 = (char *)&v90 - v27;
  __chkstk_darwin(v28);
  v104 = (char *)&v90 - v29;
  __chkstk_darwin(v30);
  v103 = (char *)&v90 - v31;
  __chkstk_darwin(v32);
  v102 = (char *)&v90 - v33;
  __chkstk_darwin(v34);
  v101 = (char *)&v90 - v35;
  __chkstk_darwin(v36);
  v93 = (uint64_t)&v90 - v37;
  __chkstk_darwin(v38);
  v99 = (char *)&v90 - v39;
  __chkstk_darwin(v40);
  v109 = (char *)&v90 - v41;
  __chkstk_darwin(v42);
  v113 = (char *)&v90 - v43;
  __chkstk_darwin(v44);
  v112 = (char *)&v90 - v45;
  __chkstk_darwin(v46);
  v111 = (char *)&v90 - v47;
  __chkstk_darwin(v48);
  v50 = (char *)&v90 - v49;
  __chkstk_darwin(v51);
  v53 = (char *)&v90 - v52;
  sub_100080E30(a1 + OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_severeAlert, (uint64_t)v19);
  a2(v19, a3[49], a3[50], a3[51], a3[52]);
  sub_100080DF4((uint64_t)v19);
  v98 = v53;
  sub_1000B2074(v50, a4, a5);
  v54 = *(void (**)(char *, uint64_t))(v97 + 8);
  v54(v50, a4);
  sub_100080E30(a1 + OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_nextHourPrecipitation, (uint64_t)v19);
  a2(v19, a3[37], a3[38], a3[39], a3[40]);
  v116 = a2;
  sub_100080DF4((uint64_t)v19);
  sub_1000B2074(v50, a4, a5);
  v54(v50, a4);
  sub_100080E30(a1 + OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_newsArticle, (uint64_t)v19);
  a2(v19, a3[33], a3[34], a3[35], a3[36]);
  sub_100080DF4((uint64_t)v19);
  v55 = v91;
  sub_1000B2074(v50, a4, a5);
  v54(v50, a4);
  sub_100080E30(a1 + OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_airQuality, (uint64_t)v19);
  v116(v19, *a3, a3[1], a3[2], a3[3]);
  sub_100080DF4((uint64_t)v19);
  sub_1000B2074(v50, a4, a5);
  v115 = v50;
  v96 = (void (*)(uint64_t, uint64_t))v54;
  v54(v50, a4);
  v110 = a1;
  v56 = a1 + OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_map;
  swift_beginAccess(a1 + OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_map, v122, 0, 0);
  sub_1001A1D04(v56, v55);
  if (_s7Weather24LocationCompositionStateOwet_0(v55, 1, (uint64_t)v92) == 1)
  {
    sub_1001A1D4C(v55);
  }
  else
  {
    v57 = v90;
    sub_1001A1D8C(v55, v90);
    sub_1001A1DD0((uint64_t)(a3 + 24), (uint64_t)v123);
    sub_1001A1DD0((uint64_t)v123, (uint64_t)v124);
    if (v125 != 1)
    {
      v59 = v109;
      v116((char *)v57, v124[0], v124[1], v124[2], v124[3]);
      sub_100080DF4(v57);
      v60 = (uint64_t)v115;
      sub_1000B2074(v59, a4, a5);
      v61 = v59;
      v62 = v96;
      v96((uint64_t)v61, a4);
      sub_1000B1100(v60, a4, v117);
      v62(v60, a4);
      v58 = 0;
      goto LABEL_7;
    }
    sub_100080DF4(v57);
  }
  v58 = 1;
LABEL_7:
  v63 = v117;
  _s7Weather24LocationCompositionStateOwst_0(v117, v58, 1, a4);
  v64 = a5;
  sub_100158984(v63, a4, v114);
  v92 = *(void (**)(uint64_t, uint64_t))(v100 + 8);
  v92(v63, v108);
  v65 = v110;
  sub_100080E30(*(_QWORD *)(v110 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, (uint64_t)v19);
  v66 = v109;
  v116(v19, a3[16], a3[17], a3[18], a3[19]);
  sub_100080DF4((uint64_t)v19);
  sub_1000B2074(v66, a4, a5);
  v67 = v96;
  v96((uint64_t)v66, a4);
  sub_100080E30(*(_QWORD *)(v65 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, (uint64_t)v19);
  v68 = (uint64_t)v99;
  v69 = v116;
  v116(v19, a3[8], a3[9], a3[10], a3[11]);
  sub_100080DF4((uint64_t)v19);
  sub_1000B2074(v68, a4, v64);
  v67(v68, a4);
  sub_100080E30(*(_QWORD *)(v110 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, (uint64_t)v19);
  v70 = v93;
  v69(v19, a3[57], a3[58], a3[59], a3[60]);
  sub_100080DF4((uint64_t)v19);
  sub_1000B2074(v70, a4, v64);
  v67(v70, a4);
  sub_100080E30(*(_QWORD *)(v110 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, (uint64_t)v19);
  v71 = v101;
  v69(v19, a3[53], a3[54], a3[55], a3[56]);
  sub_100080DF4((uint64_t)v19);
  sub_1000B2074(v71, a4, v64);
  v67((uint64_t)v71, a4);
  v72 = *(void (**)(char *, char *, uint64_t))(v97 + 16);
  v72(v71, v98, a4);
  v121[0] = v71;
  v73 = v102;
  v72(v102, v111, a4);
  v121[1] = v73;
  v74 = v103;
  v72(v103, v112, a4);
  v121[2] = v74;
  v75 = v104;
  v72(v104, v113, a4);
  v121[3] = v75;
  v76 = v117;
  v77 = v108;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v100 + 16))(v117, v114, v108);
  v121[4] = v76;
  v78 = v105;
  v72(v105, v115, a4);
  v121[5] = v78;
  v79 = v106;
  v80 = v109;
  v72(v106, v109, a4);
  v121[6] = v79;
  v81 = v107;
  v82 = (uint64_t)v99;
  v72(v107, v99, a4);
  v121[7] = v81;
  v83 = (uint64_t)v94;
  v72(v94, (char *)v70, a4);
  v121[8] = v83;
  v120[0] = a4;
  v120[1] = a4;
  v120[2] = a4;
  v120[3] = a4;
  v120[4] = v77;
  v120[5] = a4;
  v120[6] = a4;
  v120[7] = a4;
  v120[8] = a4;
  v119[0] = v64;
  v119[1] = v64;
  v119[2] = v64;
  v119[3] = v64;
  v118 = v64;
  v119[4] = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v77);
  v119[5] = v64;
  v119[6] = v64;
  v119[7] = v64;
  v119[8] = v64;
  sub_10052800C((uint64_t)v121, 9, (uint64_t)v120, (uint64_t)v119, v84, v85, v86, v87, v90, v91, (uint64_t)v92, v93, (uint64_t)v94, v95, (uint64_t)v96, v97, (uint64_t)v98, (uint64_t)v99);
  v67(v70, a4);
  v67(v82, a4);
  v67((uint64_t)v80, a4);
  v67((uint64_t)v115, a4);
  v88 = v92;
  v92(v114, v77);
  v67((uint64_t)v113, a4);
  v67((uint64_t)v112, a4);
  v67((uint64_t)v111, a4);
  v67((uint64_t)v98, a4);
  v67(v83, a4);
  v67((uint64_t)v107, a4);
  v67((uint64_t)v106, a4);
  v67((uint64_t)v105, a4);
  v88(v117, v77);
  v67((uint64_t)v104, a4);
  v67((uint64_t)v103, a4);
  v67((uint64_t)v102, a4);
  return ((uint64_t (*)(char *, uint64_t))v67)(v101, a4);
}

uint64_t sub_1001CEA1C@<X0>(uint64_t a1@<X0>, void (*a2)(char *, _QWORD, _QWORD, _QWORD, _QWORD)@<X2>, _QWORD *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  void (*v57)(char *, char *, uint64_t);
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  char *v81;
  char *v82;
  char *v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  char *v92;
  _QWORD v93[8];
  _QWORD v94[8];
  _QWORD v95[8];

  v78 = a6;
  v11 = type metadata accessor for LocationComponentContainerViewModel(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = *(_QWORD *)(a4 - 8);
  __chkstk_darwin(v14);
  v77 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v76 = (char *)&v74 - v17;
  __chkstk_darwin(v18);
  v92 = (char *)&v74 - v19;
  __chkstk_darwin(v20);
  v91 = (char *)&v74 - v21;
  __chkstk_darwin(v22);
  v89 = (char *)&v74 - v23;
  __chkstk_darwin(v24);
  v87 = (char *)&v74 - v25;
  __chkstk_darwin(v26);
  v86 = (char *)&v74 - v27;
  __chkstk_darwin(v28);
  v85 = (char *)&v74 - v29;
  __chkstk_darwin(v30);
  v75 = (uint64_t)&v74 - v31;
  __chkstk_darwin(v32);
  v83 = (char *)&v74 - v33;
  __chkstk_darwin(v34);
  v81 = (char *)&v74 - v35;
  __chkstk_darwin(v36);
  v79 = (char *)&v74 - v37;
  __chkstk_darwin(v38);
  v80 = (char *)&v74 - v39;
  __chkstk_darwin(v40);
  v42 = (char *)&v74 - v41;
  __chkstk_darwin(v43);
  v45 = (char *)&v74 - v44;
  __chkstk_darwin(v46);
  v88 = (char *)&v74 - v47;
  sub_100080E30(*(_QWORD *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind, (uint64_t)v13);
  a2(v13, a3[65], a3[66], a3[67], a3[68]);
  sub_100080DF4((uint64_t)v13);
  sub_1000B2074(v45, a4, a5);
  v48 = *(void (**)(char *, uint64_t))(v90 + 8);
  v84 = v45;
  v48(v45, a4);
  sub_100080E30(*(_QWORD *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, (uint64_t)v13);
  a2(v13, a3[45], a3[46], a3[47], a3[48]);
  sub_100080DF4((uint64_t)v13);
  v49 = a5;
  sub_1000B2074(v42, a4, a5);
  v82 = v42;
  v48(v42, a4);
  sub_100080E30(*(_QWORD *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike, (uint64_t)v13);
  v50 = (uint64_t)v80;
  a2(v13, a3[12], a3[13], a3[14], a3[15]);
  sub_100080DF4((uint64_t)v13);
  sub_1000B2074(v50, a4, v49);
  v48((char *)v50, a4);
  sub_100080E30(*(_QWORD *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, (uint64_t)v13);
  v51 = (uint64_t)v79;
  a2(v13, a3[20], a3[21], a3[22], a3[23]);
  sub_100080DF4((uint64_t)v13);
  sub_1000B2074(v51, a4, v49);
  v48((char *)v51, a4);
  sub_100080E30(*(_QWORD *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility, (uint64_t)v13);
  v52 = (uint64_t)v81;
  a2(v13, a3[61], a3[62], a3[63], a3[64]);
  sub_100080DF4((uint64_t)v13);
  sub_1000B2074(v52, a4, v49);
  v48((char *)v52, a4);
  sub_100080E30(*(_QWORD *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, (uint64_t)v13);
  v53 = (uint64_t)v83;
  a2(v13, a3[41], a3[42], a3[43], a3[44]);
  sub_100080DF4((uint64_t)v13);
  sub_1000B2074(v53, a4, v49);
  v48((char *)v53, a4);
  sub_100080E30(*(_QWORD *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, (uint64_t)v13);
  v54 = v75;
  a2(v13, a3[29], a3[30], a3[31], a3[32]);
  sub_100080DF4((uint64_t)v13);
  v55 = v54;
  v74 = v49;
  sub_1000B2074(v54, a4, v49);
  v48((char *)v54, a4);
  sub_100080E30(*(_QWORD *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, (uint64_t)v13);
  v56 = v85;
  a2(v13, a3[4], a3[5], a3[6], a3[7]);
  sub_100080DF4((uint64_t)v13);
  sub_1000B2074(v56, a4, v49);
  v48(v56, a4);
  v57 = *(void (**)(char *, char *, uint64_t))(v90 + 16);
  v57(v56, v88, a4);
  v95[0] = v56;
  v58 = v86;
  v57(v86, v84, a4);
  v95[1] = v58;
  v59 = v87;
  v57(v87, v82, a4);
  v95[2] = v59;
  v60 = v89;
  v61 = (uint64_t)v80;
  v57(v89, v80, a4);
  v95[3] = v60;
  v62 = v91;
  v63 = (uint64_t)v79;
  v57(v91, v79, a4);
  v95[4] = v62;
  v64 = v92;
  v65 = (uint64_t)v81;
  v57(v92, v81, a4);
  v95[5] = v64;
  v66 = (uint64_t)v76;
  v67 = (uint64_t)v83;
  v57(v76, v83, a4);
  v95[6] = v66;
  v68 = (uint64_t)v77;
  v57(v77, (char *)v55, a4);
  v95[7] = v68;
  v94[0] = a4;
  v94[1] = a4;
  v94[2] = a4;
  v94[3] = a4;
  v94[4] = a4;
  v94[5] = a4;
  v94[6] = a4;
  v94[7] = a4;
  v93[0] = v74;
  v93[1] = v74;
  v93[2] = v74;
  v93[3] = v74;
  v93[4] = v74;
  v93[5] = v74;
  v93[6] = v74;
  v93[7] = v74;
  sub_10052800C((uint64_t)v95, 8, (uint64_t)v94, (uint64_t)v93, v69, v70, v71, v72, v74, v75, (uint64_t)v76, (uint64_t)v77, v78, (uint64_t)v79, (uint64_t)v80, (uint64_t)v81, (uint64_t)v82, (uint64_t)v83);
  v48((char *)v55, a4);
  v48((char *)v67, a4);
  v48((char *)v65, a4);
  v48((char *)v63, a4);
  v48((char *)v61, a4);
  v48(v82, a4);
  v48(v84, a4);
  v48(v88, a4);
  v48((char *)v68, a4);
  v48((char *)v66, a4);
  v48(v92, a4);
  v48(v91, a4);
  v48(v89, a4);
  v48(v87, a4);
  v48(v86, a4);
  return ((uint64_t (*)(char *, uint64_t))v48)(v85, a4);
}

uint64_t sub_1001CF268@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int16 v3;

  if (*(_BYTE *)(v2 + 9))
    v3 = 256;
  else
    v3 = 0;
  return sub_1001CDC1C(*(_QWORD *)v2, v3 | *(unsigned __int8 *)(v2 + 8), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2);
}

uint64_t sub_1001CF294()
{
  return sub_1001A1CD4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001CE048);
}

uint64_t sub_1001CF2A0()
{
  return sub_1001A1CD4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001CEA1C);
}

uint64_t sub_1001CF2AC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t TupleTypeMetadata2;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *a1;
  v11 = v1;
  v12 = v1;
  v13 = v1;
  v14 = v1;
  v15 = type metadata accessor for Optional(255, v1);
  v16 = v1;
  v17 = v1;
  v18 = v1;
  v19 = v1;
  v2 = sub_1000BBB64(255, 9, (uint64_t)&v11);
  v3 = sub_1000AE86C(v2);
  v4 = sub_1000C43AC(v3);
  v11 = v1;
  v12 = v1;
  v13 = v1;
  v14 = v1;
  v15 = v1;
  v16 = v1;
  v17 = v1;
  v18 = v1;
  v5 = sub_1000BBB64(255, 8, (uint64_t)&v11);
  v6 = sub_1000AE86C(v5);
  v7 = sub_1000C43AC(v6);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v4, v7, 0, 0);
  v9 = sub_1000AE86C(TupleTypeMetadata2);
  return swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v9);
}

uint64_t destroy for TemperatureAveragesDetailView(uint64_t a1)
{
  _QWORD *v1;

  v1 = (_QWORD *)(a1 + 8);
  swift_release();
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v1);
}

uint64_t initializeWithCopy for TemperatureAveragesDetailView(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t *v4;
  __int128 v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t *, uint64_t, __n128);
  __n128 v8;

  v3 = *a2;
  *(_QWORD *)a1 = *a2;
  v4 = a2 + 1;
  v5 = *((_OWORD *)a2 + 2);
  *(_OWORD *)(a1 + 32) = v5;
  v6 = v5;
  v7 = **(void (***)(uint64_t, uint64_t *, uint64_t, __n128))(v5 - 8);
  v8 = swift_retain(v3);
  v7(a1 + 8, v4, v6, v8);
  return a1;
}

uint64_t *assignWithCopy for TemperatureAveragesDetailView(uint64_t *a1, uint64_t *a2)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = a2 + 1;
  v4 = *a1;
  *a1 = *a2;
  swift_retain();
  swift_release(v4);
  sub_100094D04(a1 + 1, v3);
  return a1;
}

uint64_t *assignWithTake for TemperatureAveragesDetailView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 1);
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
  a1[5] = a2[5];
  return a1;
}

uint64_t getEnumTagSinglePayload for TemperatureAveragesDetailView(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TemperatureAveragesDetailView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TemperatureAveragesDetailView()
{
  return &type metadata for TemperatureAveragesDetailView;
}

uint64_t sub_1001CF534(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AAA508, 1);
}

void sub_1001CF544(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;

  *(_QWORD *)a2 = static HorizontalAlignment.leading.getter(a1);
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 0;
  v4 = sub_1000BA294(&qword_100BC6898);
  sub_1001CF588(v2, a2 + *(int *)(v4 + 44));
}

void sub_1001CF588(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  int *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t KeyPath;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  _QWORD *v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  _QWORD *v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t *v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  _BYTE v133[24];
  __int128 v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  _BYTE v139[8];
  _BYTE v140[8];
  _BYTE v141[8];

  v127 = a2;
  v120 = type metadata accessor for DetailNewsComponentView(0);
  __chkstk_darwin(v120);
  v112 = (uint64_t *)((char *)&v108 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_1000BA294(&qword_100BC68A0);
  __chkstk_darwin(v4);
  v119 = (uint64_t)&v108 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = type metadata accessor for DetailComponentContainerViewModel(0);
  __chkstk_darwin(v118);
  v111 = (uint64_t)&v108 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v110 = (uint64_t)&v108 - v8;
  v9 = sub_1000BA294(&qword_100BC68A8);
  __chkstk_darwin(v9);
  v126 = (uint64_t)&v108 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v131 = (uint64_t)&v108 - v12;
  v117 = type metadata accessor for MonthlyAveragesChart(0);
  __chkstk_darwin(v117);
  v125 = (uint64_t)&v108 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v130 = (uint64_t)&v108 - v15;
  v16 = (int *)sub_1000BA294(&qword_100BC68B0);
  __chkstk_darwin(v16);
  v124 = (uint64_t)&v108 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v123 = (uint64_t)&v108 - v19;
  __chkstk_darwin(v20);
  v121 = (uint64_t)&v108 - v21;
  __chkstk_darwin(v22);
  v116 = (uint64_t)&v108 - v23;
  v24 = sub_1000BA294(&qword_100BC68B8);
  __chkstk_darwin(v24);
  v26 = (char *)&v108 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = type metadata accessor for ConditionDetailPlatterViewModel(0);
  __chkstk_darwin(v113);
  v115 = (uint64_t)&v108 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v109 = (uint64_t)&v108 - v29;
  v30 = sub_1000BA294(&qword_100BC68C0);
  __chkstk_darwin(v30);
  v122 = (uint64_t)&v108 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v132 = (uint64_t)&v108 - v33;
  v34 = type metadata accessor for TemperatureAveragesHeroChartViewModel(0);
  __chkstk_darwin(v34);
  v36 = (char *)&v108 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = (int *)type metadata accessor for TemperatureAveragesHeroChartView(0);
  __chkstk_darwin(v37);
  v39 = (char *)&v108 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v40);
  v42 = (char *)&v108 - v41;
  v43 = a1[4];
  v44 = a1[5];
  v114 = a1 + 1;
  v45 = sub_1000DB418(a1 + 1, v43);
  v136 = v43;
  v137 = *(_QWORD *)(v44 + 16);
  v46 = sub_10005F164(&v134);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v46, v45, v43);
  sub_100095B78(*a1 + OBJC_IVAR____TtCV7Weather34TemperatureAveragesDetailViewModel8_Storage_heroChart, (uint64_t)v36, type metadata accessor for TemperatureAveragesHeroChartViewModel);
  *(_QWORD *)v39 = swift_getKeyPath(&unk_100980FE0);
  v39[8] = 0;
  v47 = &v39[v37[5]];
  *(_QWORD *)v47 = swift_getKeyPath(&unk_100981010);
  v48 = sub_1000BA294(&qword_100BC68C8);
  swift_storeEnumTagMultiPayload(v47, v48, 0);
  *(_QWORD *)&v39[v37[6]] = 0x4030000000000000;
  sub_10003C800(&v134, (uint64_t)&v39[v37[7]]);
  sub_10007C77C((uint64_t)v36, (uint64_t)&v39[v37[8]], type metadata accessor for TemperatureAveragesHeroChartViewModel);
  v129 = v39;
  v128 = v42;
  sub_10007C77C((uint64_t)v39, (uint64_t)v42, type metadata accessor for TemperatureAveragesHeroChartView);
  v49 = *a1 + OBJC_IVAR____TtCV7Weather34TemperatureAveragesDetailViewModel8_Storage_summaryPlatterViewModel;
  swift_beginAccess(v49, v141, 0, 0);
  sub_10003773C(v49, (uint64_t)v26, &qword_100BC68B8);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v113) == 1)
  {
    sub_100021A14((uint64_t)v26, &qword_100BC68B8);
    v50 = 1;
    v51 = v116;
    v52 = v132;
    v53 = v115;
    v54 = v114;
  }
  else
  {
    v55 = v109;
    sub_10007C77C((uint64_t)v26, v109, type metadata accessor for ConditionDetailPlatterViewModel);
    v53 = v115;
    sub_100095B78(v55, v115, type metadata accessor for ConditionDetailPlatterViewModel);
    v56 = a1[4];
    v57 = a1[5];
    v54 = v114;
    v58 = sub_1000DB418(v114, v56);
    v136 = v56;
    v137 = *(_QWORD *)(v57 + 8);
    v59 = sub_10005F164(&v134);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v56 - 8) + 16))(v59, v58, v56);
    v51 = v116;
    sub_100095B78(v53, v116, type metadata accessor for ConditionDetailPlatterViewModel);
    sub_10003B59C((uint64_t)&v134, v51 + v16[10]);
    *(_BYTE *)(v51 + v16[9]) = 0;
    v60 = (_QWORD *)(v51 + v16[11]);
    *v60 = 0;
    v60[1] = 0;
    v61 = v16[12];
    swift_beginAccess(&unk_100BE0830, v133, 1, 0);
    *(double *)(v51 + v61) = sub_10040908C();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&v134);
    sub_1000215BC(v53, type metadata accessor for ConditionDetailPlatterViewModel);
    sub_1000215BC(v55, type metadata accessor for ConditionDetailPlatterViewModel);
    v62 = v132;
    sub_1001D01BC(v51, v132);
    v50 = 0;
    v52 = v62;
  }
  _s7Weather24LocationCompositionStateOwst_0(v52, v50, 1, (uint64_t)v16);
  v63 = *a1;
  v64 = v130;
  sub_100095B78(*a1 + OBJC_IVAR____TtCV7Weather34TemperatureAveragesDetailViewModel8_Storage_averagesChart, v130, type metadata accessor for MonthlyAveragesChartModel);
  v65 = v117;
  sub_10003B59C((uint64_t)v54, v64 + *(int *)(v117 + 20));
  *(_BYTE *)(v64 + *(int *)(v65 + 24)) = 0;
  v66 = v63 + OBJC_IVAR____TtCV7Weather34TemperatureAveragesDetailViewModel8_Storage_newsViewModel;
  swift_beginAccess(v66, v140, 0, 0);
  v67 = v119;
  sub_10003773C(v66, v119, &qword_100BC68A0);
  if (_s7Weather24LocationCompositionStateOwet_0(v67, 1, v118) == 1)
  {
    sub_100021A14(v67, &qword_100BC68A0);
    v68 = 1;
    v69 = v131;
    v70 = v120;
  }
  else
  {
    v71 = v51;
    v72 = v54;
    v73 = v110;
    sub_10007C77C(v67, v110, type metadata accessor for DetailComponentContainerViewModel);
    v74 = v111;
    sub_100095B78(v73, v111, type metadata accessor for DetailComponentContainerViewModel);
    v75 = a1[4];
    v76 = a1[5];
    v77 = sub_1000DB418(v72, v75);
    v136 = v75;
    v137 = *(_QWORD *)(v76 + 8);
    v78 = sub_10005F164(&v134);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v75 - 8) + 16))(v78, v77, v75);
    v79 = v73;
    v54 = v72;
    v51 = v71;
    sub_1000215BC(v79, type metadata accessor for DetailComponentContainerViewModel);
    KeyPath = swift_getKeyPath(&unk_100981040);
    v81 = (uint64_t)v112;
    *v112 = KeyPath;
    v82 = sub_1000BA294((uint64_t *)&unk_100C09CD0);
    swift_storeEnumTagMultiPayload(v81, v82, 0);
    v70 = v120;
    sub_10007C77C(v74, v81 + *(int *)(v120 + 20), type metadata accessor for DetailComponentContainerViewModel);
    sub_10003C800(&v134, v81 + *(int *)(v70 + 24));
    *(_BYTE *)(v81 + *(int *)(v70 + 28)) = 0;
    v69 = v131;
    sub_10007C77C(v81, v131, type metadata accessor for DetailNewsComponentView);
    v68 = 0;
  }
  _s7Weather24LocationCompositionStateOwst_0(v69, v68, 1, v70);
  sub_100095B78(*a1 + OBJC_IVAR____TtCV7Weather34TemperatureAveragesDetailViewModel8_Storage_aboutNormalRangePlatterViewModel, v53, type metadata accessor for ConditionDetailPlatterViewModel);
  v83 = a1[4];
  v84 = a1[5];
  v85 = sub_1000DB418(v54, v83);
  v136 = v83;
  v137 = *(_QWORD *)(v84 + 8);
  v86 = sub_10005F164(&v134);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v83 - 8) + 16))(v86, v85, v83);
  v87 = v121;
  sub_100095B78(v53, v121, type metadata accessor for ConditionDetailPlatterViewModel);
  sub_10003B59C((uint64_t)&v134, v87 + v16[10]);
  *(_BYTE *)(v87 + v16[9]) = 0;
  v88 = (_QWORD *)(v87 + v16[11]);
  *v88 = 0;
  v88[1] = 0;
  v89 = v16[12];
  swift_beginAccess(&unk_100BE0830, v139, 1, 0);
  *(double *)(v87 + v89) = sub_10040908C();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&v134);
  sub_1000215BC(v53, type metadata accessor for ConditionDetailPlatterViewModel);
  sub_1001D01BC(v87, v51);
  sub_100095B78(*a1 + OBJC_IVAR____TtCV7Weather34TemperatureAveragesDetailViewModel8_Storage_aboutAverageTemperaturePlatterViewModel, v53, type metadata accessor for ConditionDetailPlatterViewModel);
  v91 = a1[4];
  v90 = a1[5];
  v92 = sub_1000DB418(v54, v91);
  v93 = v51;
  v94 = v53;
  v95 = v92;
  v136 = v91;
  v137 = *(_QWORD *)(v90 + 8);
  v96 = sub_10005F164(&v134);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v91 - 8) + 16))(v96, v95, v91);
  v97 = v123;
  sub_100095B78(v94, v123, type metadata accessor for ConditionDetailPlatterViewModel);
  sub_10003B59C((uint64_t)&v134, v97 + v16[10]);
  *(_BYTE *)(v97 + v16[9]) = 0;
  v98 = (_QWORD *)(v97 + v16[11]);
  *v98 = 0;
  v98[1] = 0;
  v99 = v16[12];
  *(double *)(v97 + v99) = sub_10040908C();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&v134);
  sub_1000215BC(v94, type metadata accessor for ConditionDetailPlatterViewModel);
  sub_1001D01BC(v97, v87);
  v100 = (uint64_t)v129;
  sub_100095B78((uint64_t)v128, (uint64_t)v129, type metadata accessor for TemperatureAveragesHeroChartView);
  *(_QWORD *)&v134 = v100;
  v101 = v122;
  sub_10003773C(v132, v122, &qword_100BC68C0);
  *((_QWORD *)&v134 + 1) = v101;
  v102 = v130;
  v103 = v125;
  sub_100095B78(v130, v125, type metadata accessor for MonthlyAveragesChart);
  v135 = v103;
  v104 = v131;
  v105 = v126;
  sub_10003773C(v131, v126, &qword_100BC68A8);
  v136 = v105;
  v106 = v93;
  sub_10003773C(v93, v97, &qword_100BC68B0);
  v137 = v97;
  v107 = v124;
  sub_10003773C(v87, v124, &qword_100BC68B0);
  v138 = v107;
  sub_10035D690((uint64_t)&v134);
  sub_100021A14(v87, &qword_100BC68B0);
  sub_100021A14(v106, &qword_100BC68B0);
  sub_100021A14(v104, &qword_100BC68A8);
  sub_1000215BC(v102, type metadata accessor for MonthlyAveragesChart);
  sub_100021A14(v132, &qword_100BC68C0);
  sub_1000215BC((uint64_t)v128, type metadata accessor for TemperatureAveragesHeroChartView);
  sub_100021A14(v107, &qword_100BC68B0);
  sub_100021A14(v97, &qword_100BC68B0);
  sub_100021A14(v105, &qword_100BC68A8);
  sub_1000215BC(v103, type metadata accessor for MonthlyAveragesChart);
  sub_100021A14(v101, &qword_100BC68C0);
  sub_1000215BC((uint64_t)v129, type metadata accessor for TemperatureAveragesHeroChartView);
}

uint64_t sub_1001D01BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BC68B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1001D0210()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC68D0;
  if (!qword_100BC68D0)
  {
    v1 = sub_100075EB0(&qword_100BC68D8);
    result = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100BC68D0);
  }
  return result;
}

id sub_1001D0254()
{
  id result;

  result = sub_1001D0270();
  qword_100BC68E0 = (uint64_t)result;
  return result;
}

id sub_1001D0270()
{
  id v0;
  NSString v1;

  v0 = objc_msgSend(objc_allocWithZone((Class)NSDateFormatter), "init");
  v1 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "setLocalizedDateFormatFromTemplate:", v1);

  objc_msgSend(v0, "setFormattingContext:", 2);
  return v0;
}

void sub_1001D02EC(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  char *v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  char *v38;

  v36 = a2;
  v6 = type metadata accessor for TimeZone(0);
  v34 = *(_QWORD *)(v6 - 8);
  v35 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v38 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v33 - v13;
  v15 = (int *)sub_1000B4450();
  __chkstk_darwin(v15);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)a3 = swift_getKeyPath(&unk_100981070);
  *(_BYTE *)(a3 + 8) = 0;
  v18 = sub_1000CC8B0();
  v19 = *(int *)(v18 + 20);
  v20 = v18;
  v37 = v18;
  v33 = a1;
  sub_100080C0C(a1, a3 + v19, type metadata accessor for CalendarViewModel);
  sub_100043CA8((uint64_t)a2, a3 + *(int *)(v20 + 28));
  v21 = sub_1000DD788();
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v22(v14, a1 + *(int *)(v21 + 28), v9);
  v23 = v34;
  v24 = a1;
  v25 = v35;
  (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v8, v24, v35);
  *(_QWORD *)v17 = swift_getKeyPath(&unk_1009810A0);
  v26 = sub_1000BA294(&qword_100BC68E8);
  v27 = swift_storeEnumTagMultiPayload(v17, v26, 0);
  ((void (*)(char *, char *, uint64_t, __n128))v22)(&v17[v15[5]], v14, v9, v27);
  v28 = static Calendar.currentCalendar(with:)(v8);
  v29 = static Date.distantFuture.getter(v28);
  v30 = static Date.distantPast.getter(v29);
  *(_QWORD *)&v17[v15[9]] = _swiftEmptyArrayStorage;
  v31 = v38;
  v32 = static Date.distantFuture.getter(v30);
  (*(void (**)(char *, uint64_t, double))(v23 + 8))(v8, v25, v32);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v17[v15[10]], v31, v9);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v36);
  sub_1000215BC(v33, type metadata accessor for CalendarViewModel);
  sub_10007802C((uint64_t)v17, a3 + *(int *)(v37 + 24), _s13CalendarStateVMa);
}

void sub_1001D0574(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a2 = static Alignment.center.getter(a1);
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = 0;
  *(_BYTE *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 32) = 0;
  *(_BYTE *)(a2 + 40) = 0;
  v5 = sub_1000BA294(&qword_100BC6988);
  sub_1001D05C4(v2, (__n128 *)(a2 + *(int *)(v5 + 44)));
}

void sub_1001D05C4(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  int *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t);
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, char *, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t KeyPath;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  double v99;
  void (*v100)(char *, uint64_t, double);
  void (*v101)(char *, uint64_t);
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  int v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  int v121;
  uint64_t v122;
  int v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  __n128 *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char v146;
  uint64_t v147;
  char v148;
  uint64_t v149;
  char v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char v154;
  uint64_t v155;
  char v156;
  uint64_t v157;
  char v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char v162;
  char *v163;
  char v164;
  uint64_t v165;
  char v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char v170;
  uint64_t v171;
  char v172;
  char *v173;
  char v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char v178;
  uint64_t v179;
  char v180;
  uint64_t v181;
  char v182;
  uint64_t v183;
  uint64_t v184;
  __int128 v185;
  uint64_t *v186;
  uint64_t v187;
  uint64_t *v188;
  char *v189;
  uint64_t *v190;
  char *v191;
  uint64_t *v192;
  uint64_t v193;
  unsigned __int8 v194;
  uint64_t v195;
  unsigned __int8 v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  unsigned __int8 v200;
  char *v201;
  unsigned __int8 v202;
  uint64_t v203;
  uint64_t v204;
  char *v205;
  unsigned __int8 v206;
  uint64_t v207;
  unsigned __int8 v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  unsigned __int8 v212;
  uint64_t v213;
  unsigned __int8 v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  unsigned __int8 v218;
  uint64_t v219;
  unsigned __int8 v220;
  uint64_t v221;
  uint64_t v222;

  v133 = a2;
  v3 = type metadata accessor for CalendarView(0);
  v127 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v128 = v4;
  v129 = (uint64_t)&v103 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = sub_1000BA294(&qword_100BC6990);
  v131 = *(_QWORD *)(v134 - 8);
  __chkstk_darwin(v134);
  v132 = (char *)&v103 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v143 = (char *)&v103 - v7;
  v8 = type metadata accessor for PrimaryDividerStyle(0);
  v125 = *(_QWORD *)(v8 - 8);
  v126 = v8;
  __chkstk_darwin(v8);
  v118 = (char *)&v103 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Divider(0);
  v116 = *(_QWORD *)(v10 - 8);
  v117 = v10;
  __chkstk_darwin(v10);
  v115 = (char *)&v103 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = sub_1000BA294(&qword_100BC6998);
  v140 = *(_QWORD *)(v142 - 8);
  __chkstk_darwin(v142);
  v141 = (char *)&v103 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v139 = (char *)&v103 - v14;
  v15 = sub_1000BA294(&qword_100BC69A0);
  __chkstk_darwin(v15);
  v130 = (uint64_t)&v103 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v110 = (char *)&v103 - v18;
  __chkstk_darwin(v19);
  v138 = (uint64_t)&v103 - v20;
  v21 = type metadata accessor for Date(0);
  v22 = *(_QWORD *)(v21 - 8);
  v135 = v21;
  v136 = v22;
  __chkstk_darwin(v21);
  v114 = (char *)&v103 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v26 = (char *)&v103 - v25;
  v113 = (char *)&v103 - v25;
  v27 = (int *)type metadata accessor for CalendarHeaderView(0);
  __chkstk_darwin(v27);
  v29 = (char *)&v103 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v144 = (uint64_t)&v103 - v31;
  static Alignment.center.getter(v32);
  _FrameLayout.init(width:height:alignment:)(0, 1, 0x402A000000000000, 0);
  v124 = v193;
  v123 = v194;
  v122 = v195;
  v121 = v196;
  v119 = v198;
  v120 = v197;
  v108 = v3;
  v33 = *(int *)(v3 + 24);
  v104 = a1;
  v34 = a1 + v33;
  v35 = _s13CalendarStateVMa(0);
  v36 = a1 + *(int *)(v3 + 20);
  v37 = Date.fullMonthAndYear(in:)(v36);
  v111 = v38;
  v112 = v37;
  v39 = v35;
  v109 = v35;
  v40 = v34 + *(int *)(v35 + 32);
  v41 = v135;
  v42 = *(void (**)(char *, uint64_t, uint64_t))(v136 + 16);
  v42(v26, v40, v135);
  v43 = v34 + *(int *)(v39 + 28);
  v44 = v114;
  v42(v114, v43, v41);
  v45 = type metadata accessor for CalendarViewModel(0);
  LOBYTE(v40) = static Date.< infix(_:_:)(v40, v36 + *(int *)(v45 + 20));
  v46 = v43;
  v47 = v104;
  LOBYTE(v45) = static Date.> infix(_:_:)(v46, v36 + *(int *)(v45 + 24));
  sub_100043CA8(v47 + *(int *)(v108 + 28), (uint64_t)&v185);
  *(_QWORD *)v29 = swift_getKeyPath(&unk_100981070);
  v29[8] = 0;
  v48 = v113;
  v49 = v111;
  *((_QWORD *)v29 + 2) = v112;
  *((_QWORD *)v29 + 3) = v49;
  v50 = v135;
  v51 = *(void (**)(char *, char *, uint64_t))(v136 + 32);
  v51(&v29[v27[6]], v48, v135);
  v51(&v29[v27[7]], v44, v50);
  v29[v27[8]] = v40 & 1;
  v29[v27[9]] = v45 & 1;
  v52 = v27[10];
  v53 = v34;
  sub_10003C800(&v185, (uint64_t)&v29[v52]);
  v137 = v29;
  sub_10007802C((uint64_t)v29, v144, type metadata accessor for CalendarHeaderView);
  static Alignment.center.getter(v54);
  v55 = _FrameLayout.init(width:height:alignment:)(0, 1, 0x4030000000000000, 0);
  v136 = v199;
  LODWORD(v135) = v200;
  v114 = v201;
  LODWORD(v113) = v202;
  v111 = v204;
  v112 = v203;
  v56 = *(int *)(v109 + 36);
  v57 = *(_QWORD *)(v34 + v56);
  if (*(_QWORD *)(v57 + 16))
  {
    v58 = *(_QWORD *)(v57 + 32);
    __chkstk_darwin(v55);
    v102 = v47;
    swift_bridgeObjectRetain(v58);
    sub_100849E10((uint64_t)sub_1001D2FFC, (uint64_t)(&v103 - 4), v58);
    v60 = v59;
    swift_bridgeObjectRelease();
  }
  else
  {
    v60 = 0;
  }
  *(_QWORD *)&v185 = v60;
  v61 = sub_1001D3018();
  v62 = (uint64_t)v110;
  View.accessibilityHidden(_:)(1, &type metadata for CalendarWeekdayView, v61);
  swift_bridgeObjectRelease();
  sub_1000787D4(v62, v138, &qword_100BC69A0);
  static Alignment.center.getter(v63);
  v64 = _FrameLayout.init(width:height:alignment:)(0, 1, 0x4024000000000000, 0);
  v110 = v205;
  LODWORD(v109) = v206;
  v108 = v207;
  v107 = v208;
  v105 = v210;
  v106 = v209;
  v65 = v115;
  v66 = Divider.init()(v64);
  v67 = v118;
  static DividerStyle<>.primary.getter(v66);
  sub_10000F1C8(&qword_100BC69B0, (uint64_t (*)(uint64_t))&type metadata accessor for Divider);
  v69 = v68;
  sub_10000F1C8(&qword_100BC69B8, (uint64_t (*)(uint64_t))&type metadata accessor for PrimaryDividerStyle);
  v70 = v141;
  v71 = v117;
  v72 = v126;
  View.dividerStyle<A>(_:)(v67, v117, v126, v69, v73);
  (*(void (**)(char *, uint64_t))(v125 + 8))(v67, v72);
  (*(void (**)(char *, uint64_t))(v116 + 8))(v65, v71);
  v74 = (*(uint64_t (**)(char *, char *, uint64_t))(v140 + 32))(v139, v70, v142);
  static Alignment.center.getter(v74);
  _FrameLayout.init(width:height:alignment:)(0, 1, 0x4010000000000000, 0);
  v75 = v211;
  LODWORD(v126) = v212;
  v125 = v213;
  LODWORD(v118) = v214;
  v116 = v216;
  v117 = v215;
  v76 = *(_QWORD *)(v53 + v56);
  *(_QWORD *)&v185 = v76;
  KeyPath = swift_getKeyPath(&unk_100981168);
  v78 = v129;
  sub_100080C0C(v47, v129, type metadata accessor for CalendarView);
  v79 = *(unsigned __int8 *)(v127 + 80);
  v80 = (v79 + 16) & ~v79;
  v81 = swift_allocObject(&unk_100B61398, v80 + v128, v79 | 7);
  sub_10007802C(v78, v81 + v80, type metadata accessor for CalendarView);
  swift_bridgeObjectRetain(v76);
  v82 = sub_1000BA294(&qword_100BC69C0);
  v83 = sub_1000BA294(&qword_100BC69C8);
  sub_10003D2DC(&qword_100BC69D0, &qword_100BC69C0);
  v85 = v84;
  v86 = sub_1001D3088();
  sub_10003D2DC(&qword_100BC69E8, &qword_100BC69C8);
  v88 = ForEach<>.init(_:id:content:)(&v185, KeyPath, sub_1001D3058, v81, v82, v83, v85, v86, v87);
  static Alignment.center.getter(v88);
  _FrameLayout.init(width:height:alignment:)(0, 1, 0x4010000000000000, 0);
  v129 = v217;
  LODWORD(v128) = v218;
  v127 = v219;
  LODWORD(v115) = v220;
  v103 = v222;
  v104 = v221;
  v177 = 0;
  v178 = 1;
  v179 = v124;
  v180 = v123;
  v181 = v122;
  v182 = v121;
  v183 = v120;
  v184 = v119;
  *(_QWORD *)&v185 = &v177;
  v89 = (uint64_t)v137;
  sub_100080C0C(v144, (uint64_t)v137, type metadata accessor for CalendarHeaderView);
  v169 = 0;
  v170 = 1;
  v171 = v136;
  v172 = v135;
  v173 = v114;
  v174 = (char)v113;
  v175 = v112;
  v176 = v111;
  *((_QWORD *)&v185 + 1) = v89;
  v186 = &v169;
  v90 = v138;
  v91 = v130;
  sub_100037768(v138, v130, &qword_100BC69A0);
  v161 = 0;
  v162 = 1;
  v163 = v110;
  v164 = v109;
  v165 = v108;
  v166 = v107;
  v167 = v106;
  v168 = v105;
  v187 = v91;
  v188 = &v161;
  v92 = v139;
  v93 = v140;
  v94 = v142;
  (*(void (**)(char *, char *, uint64_t))(v140 + 16))(v70, v139, v142);
  v153 = 0;
  v154 = 1;
  v155 = v75;
  v156 = v126;
  v157 = v125;
  v158 = (char)v118;
  v159 = v117;
  v160 = v116;
  v189 = v70;
  v190 = &v153;
  v96 = v131;
  v95 = v132;
  v97 = v143;
  v98 = v134;
  (*(void (**)(char *, char *, uint64_t))(v131 + 16))(v132, v143, v134);
  v145 = 0;
  v146 = 1;
  v147 = v129;
  v148 = v128;
  v149 = v127;
  v150 = (char)v115;
  v151 = v104;
  v152 = v103;
  v191 = v95;
  v192 = &v145;
  v99 = sub_10035D718((__n128 **)&v185, v133);
  v100 = *(void (**)(char *, uint64_t, double))(v96 + 8);
  v100(v97, v98, v99);
  v101 = *(void (**)(char *, uint64_t))(v93 + 8);
  v101(v92, v94);
  sub_100021A14(v90, &qword_100BC69A0);
  sub_1000215BC(v144, type metadata accessor for CalendarHeaderView);
  ((void (*)(char *, uint64_t))v100)(v95, v98);
  v101(v141, v94);
  sub_100021A14(v91, &qword_100BC69A0);
  sub_1000215BC((uint64_t)v137, type metadata accessor for CalendarHeaderView);
}

uint64_t sub_1001D107C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  v6 = type metadata accessor for CalendarView(0);
  v7 = Date.standaloneNarrowDayOfWeek(in:)(a2 + *(int *)(v6 + 20));
  v9 = v8;
  _s13CalendarStateVMa(0);
  result = Calendar.isDateInWeekend(_:)(a1);
  *(_QWORD *)a3 = v7;
  *(_QWORD *)(a3 + 8) = v9;
  *(_BYTE *)(a3 + 16) = result & 1;
  return result;
}

uint64_t sub_1001D1110@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  v6 = type metadata accessor for CalendarView(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = __chkstk_darwin(v6);
  v10 = *a1;
  *(_QWORD *)a3 = static VerticalAlignment.top.getter(v9);
  *(_BYTE *)(a3 + 8) = 0;
  sub_1000BA294(&qword_100BC69C8);
  v24 = v10;
  KeyPath = swift_getKeyPath(&unk_100981180);
  sub_100080C0C(a2, (uint64_t)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CalendarView);
  v12 = *(unsigned __int8 *)(v7 + 80);
  v13 = (v12 + 16) & ~v12;
  v14 = swift_allocObject(&unk_100B613C0, v13 + v8, v12 | 7);
  sub_10007802C((uint64_t)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v13, type metadata accessor for CalendarView);
  swift_bridgeObjectRetain(v10);
  v15 = sub_1000BA294(&qword_100BC69E0);
  v16 = type metadata accessor for CalendarGridCell(0);
  sub_10003D2DC(&qword_100BC69F0, &qword_100BC69E0);
  v18 = v17;
  sub_10000F1C8((unint64_t *)&qword_100BC3588, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
  v20 = v19;
  sub_10000F1C8(&qword_100BC69F8, type metadata accessor for CalendarGridCell);
  return ForEach<>.init(_:id:content:)(&v24, KeyPath, sub_1001D3108, v14, v15, v16, v18, v20, v21);
}

uint64_t sub_1001D12C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  _BYTE *v51;
  uint64_t v52;
  int v53;
  uint64_t *v54;
  char v55;
  _BYTE *v56;
  _BYTE *v57;
  uint64_t v58;
  void (*v59)(_BYTE *, uint64_t);
  uint64_t v60;
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE v67[12];
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _BYTE *v74;
  uint64_t v75;
  uint64_t v76;
  _BYTE *v77;
  _BYTE *v78;
  uint64_t v79;
  uint64_t v80;
  _BYTE *v81;
  _BYTE *v82;
  _BYTE *v83;
  uint64_t v84;
  _BYTE *v85;
  _BYTE *v86;
  uint64_t v87;
  _BYTE *v88;
  uint64_t v89;

  v87 = type metadata accessor for Date(0);
  v84 = *(_QWORD *)(v87 - 8);
  __chkstk_darwin(v87);
  v77 = &v67[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v80 = sub_1000BA294(&qword_100BC4978);
  __chkstk_darwin(v80);
  v85 = &v67[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
  __chkstk_darwin(v8);
  v86 = &v67[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v78 = &v67[-v11];
  __chkstk_darwin(v12);
  v88 = &v67[-v13];
  __chkstk_darwin(v14);
  v82 = &v67[-v15];
  v79 = type metadata accessor for CalendarDayViewModel(0);
  __chkstk_darwin(v79);
  v81 = &v67[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = type metadata accessor for CalendarGridCellViewModel(0);
  __chkstk_darwin(v17);
  v19 = &v67[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = sub_1000BA294(&qword_100BC6A00);
  __chkstk_darwin(v20);
  v83 = &v67[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v22);
  v24 = &v67[-v23];
  __chkstk_darwin(v25);
  v27 = &v67[-v26];
  v28 = type metadata accessor for CalendarView(0);
  v29 = a2 + *(int *)(v28 + 20);
  v30 = type metadata accessor for CalendarViewModel(0);
  sub_1007D4B40();
  v89 = v28;
  v31 = a2 + *(int *)(v28 + 24);
  v32 = _s13CalendarStateVMa(0);
  if ((static Date.< infix(_:_:)(a1, v31 + *(int *)(v32 + 40)) & 1) != 0)
  {
    sub_100021A14((uint64_t)v27, &qword_100BC6A00);
    v33 = type metadata accessor for CalendarDayCellViewModel(0);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 1, 1, v33);
  }
  else
  {
    v74 = v19;
    v76 = a3;
    sub_10012059C();
    v34 = static NSNumberFormatter.dayDigits(from:timeZone:)(a1, v29);
    v71 = v35;
    v72 = v34;
    v75 = a2;
    v36 = sub_1001D19C8(a1);
    v69 = v37;
    v70 = v36;
    v68 = Calendar.isDateInToday(_:)(a1);
    v38 = Calendar.isDateInWeekend(_:)(a1);
    sub_100037768((uint64_t)v27, (uint64_t)v24, &qword_100BC6A00);
    v73 = type metadata accessor for CalendarMoonPhaseData(0);
    v39 = (uint64_t)v27;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v73) == 1)
    {
      sub_100021A14((uint64_t)v24, &qword_100BC6A00);
      v40 = 8;
    }
    else
    {
      v40 = *v24;
      sub_1000215BC((uint64_t)v24, type metadata accessor for CalendarMoonPhaseData);
    }
    v41 = (uint64_t)v81;
    v42 = (uint64_t)v82;
    v43 = v29 + *(int *)(v30 + 40);
    v44 = &v81[*(int *)(v79 + 36)];
    v45 = type metadata accessor for MoonPhase.Hemisphere(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v44, v43, v45);
    v46 = v71;
    *(_QWORD *)v41 = v72;
    *(_QWORD *)(v41 + 8) = v46;
    v47 = v69;
    *(_QWORD *)(v41 + 16) = v70;
    *(_QWORD *)(v41 + 24) = v47;
    *(_BYTE *)(v41 + 32) = v68 & 1;
    *(_BYTE *)(v41 + 33) = v38 & 1;
    *(_BYTE *)(v41 + 34) = v40;
    sub_100037768(v29 + *(int *)(v30 + 32), v42, (uint64_t *)&unk_100BD35A0);
    v48 = v84;
    v49 = v87;
    v50 = v88;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v84 + 16))(v88, a1, v87);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v50, 0, 1, v49);
    v51 = v85;
    v52 = (uint64_t)&v85[*(int *)(v80 + 48)];
    sub_100037768(v42, (uint64_t)v85, (uint64_t *)&unk_100BD35A0);
    sub_100037768((uint64_t)v50, v52, (uint64_t *)&unk_100BD35A0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v51, 1, v49) == 1)
    {
      sub_100021A14((uint64_t)v50, (uint64_t *)&unk_100BD35A0);
      sub_100021A14(v42, (uint64_t *)&unk_100BD35A0);
      v53 = _s7Weather24LocationCompositionStateOwet_0(v52, 1, v49);
      if (v53 == 1)
        v54 = (uint64_t *)&unk_100BD35A0;
      else
        v54 = &qword_100BC4978;
      if (v53 == 1)
        v55 = -1;
      else
        v55 = 0;
    }
    else
    {
      v56 = v78;
      sub_100037768((uint64_t)v51, (uint64_t)v78, (uint64_t *)&unk_100BD35A0);
      if (_s7Weather24LocationCompositionStateOwet_0(v52, 1, v49) == 1)
      {
        sub_100021A14((uint64_t)v88, (uint64_t *)&unk_100BD35A0);
        sub_100021A14(v42, (uint64_t *)&unk_100BD35A0);
        (*(void (**)(_BYTE *, uint64_t))(v48 + 8))(v56, v49);
        v55 = 0;
        v54 = &qword_100BC4978;
      }
      else
      {
        v57 = v77;
        (*(void (**)(_BYTE *, uint64_t, uint64_t))(v48 + 32))(v77, v52, v49);
        sub_10000F1C8((unint64_t *)&qword_100BC3590, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
        v55 = dispatch thunk of static Equatable.== infix(_:_:)(v56, v57, v49, v58);
        v59 = *(void (**)(_BYTE *, uint64_t))(v48 + 8);
        v59(v57, v49);
        v54 = (uint64_t *)&unk_100BD35A0;
        sub_100021A14((uint64_t)v88, (uint64_t *)&unk_100BD35A0);
        sub_100021A14(v42, (uint64_t *)&unk_100BD35A0);
        v59(v56, v49);
      }
    }
    a2 = v75;
    v60 = (uint64_t)v86;
    sub_100021A14((uint64_t)v51, v54);
    v61 = v83;
    sub_1000787D4(v39, (uint64_t)v83, &qword_100BC6A00);
    v62 = v73;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v61, 1, v73) == 1)
    {
      sub_100021A14((uint64_t)v61, &qword_100BC6A00);
      _s7Weather24LocationCompositionStateOwst_0(v60, 1, 1, v49);
    }
    else
    {
      sub_100037768((uint64_t)&v61[*(int *)(v62 + 20)], v60, (uint64_t *)&unk_100BD35A0);
      sub_1000215BC((uint64_t)v61, type metadata accessor for CalendarMoonPhaseData);
    }
    v19 = v74;
    sub_10007802C(v41, (uint64_t)v74, type metadata accessor for CalendarDayViewModel);
    v63 = type metadata accessor for CalendarDayCellViewModel(0);
    v19[*(int *)(v63 + 20)] = v55 & 1;
    sub_1000787D4(v60, (uint64_t)&v19[*(int *)(v63 + 24)], (uint64_t *)&unk_100BD35A0);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v63);
    a3 = v76;
  }
  sub_10007802C((uint64_t)v19, a3, type metadata accessor for CalendarGridCellViewModel);
  v64 = a2 + *(int *)(v89 + 28);
  v65 = type metadata accessor for CalendarGridCell(0);
  return sub_100043CA8(v64, a3 + *(int *)(v65 + 20));
}

uint64_t sub_1001D19C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t v8;
  Class isa;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  Swift::String v17;
  Swift::String v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[2];
  Swift::String v24;

  v3 = type metadata accessor for Date(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100BC1E70 != -1)
    swift_once(&qword_100BC1E70, sub_1001D0254);
  v7 = (void *)qword_100BC68E0;
  v8 = type metadata accessor for CalendarView(0);
  Date.startOfDay(timeZone:)(v1 + *(int *)(v8 + 20));
  isa = Date._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v10 = objc_msgSend(v7, "stringFromDate:", isa);

  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v13 = v12;

  _s13CalendarStateVMa(0);
  if ((Calendar.isDateInToday(_:)(a1) & 1) != 0)
  {
    v14 = sub_1000BA294(&qword_100BC6A10);
    v15 = swift_allocObject(v14, 64, 7);
    *(_OWORD *)(v15 + 16) = xmmword_10097DA20;
    *(_QWORD *)(v15 + 32) = v11;
    *(_QWORD *)(v15 + 40) = v13;
    v16 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v24._countAndFlagsBits = 0xD00000000000003FLL;
    v24._object = (void *)0x80000001009F2560;
    v17._object = (void *)0x80000001009F2530;
    v17._countAndFlagsBits = 0xD000000000000026;
    v18._countAndFlagsBits = 0x7961646F54;
    v18._object = (void *)0xE500000000000000;
    v19 = NSLocalizedString(_:tableName:bundle:value:comment:)(v17, (Swift::String_optional)0, (NSBundle)v16, v18, v24);

    *(Swift::String *)(v15 + 48) = v19;
    v23[1] = v15;
    v20 = sub_1000BA294(&qword_100BF1280);
    sub_10003D2DC((unint64_t *)&qword_100BD35B0, &qword_100BF1280);
    v11 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v20, v21);
    swift_bridgeObjectRelease();
  }
  return v11;
}

uint64_t type metadata accessor for CalendarView(uint64_t a1)
{
  uint64_t result;

  result = qword_100BC6948;
  if (!qword_100BC6948)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CalendarView);
  return result;
}

uint64_t sub_1001D1C68()
{
  return EnvironmentValues.locale.getter();
}

uint64_t sub_1001D1C88(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return EnvironmentValues.locale.setter(v4);
}

unint64_t sub_1001D1D08(unint64_t a1, uint64_t a2, int *a3)
{
  int v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  __n128 v48;
  uint64_t v49;
  __int128 v50;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v23 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_BYTE *)(a2 + 8);
    sub_10008D47C(*(_QWORD *)a2, v8);
    *(_QWORD *)a1 = v7;
    *(_BYTE *)(a1 + 8) = v8;
    v9 = a3[5];
    v10 = a1 + v9;
    v11 = a2 + v9;
    v12 = type metadata accessor for TimeZone(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    v13 = (int *)type metadata accessor for CalendarViewModel(0);
    v14 = v13[5];
    v15 = v10 + v14;
    v16 = v11 + v14;
    v17 = type metadata accessor for Date(0);
    v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
    v18(v15, v16, v17);
    v18(v10 + v13[6], v11 + v13[6], v17);
    v18(v10 + v13[7], v11 + v13[7], v17);
    v19 = v13[8];
    v20 = (void *)(v10 + v19);
    v21 = (const void *)(v11 + v19);
    if (_s7Weather24LocationCompositionStateOwet_0(v11 + v19, 1, v17))
    {
      v22 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      v18((uint64_t)v20, (uint64_t)v21, v17);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v17);
    }
    v24 = v13[9];
    v25 = *(_QWORD *)(v11 + v24);
    *(_QWORD *)(v10 + v24) = v25;
    v26 = v13[10];
    v27 = v10 + v26;
    v28 = v11 + v26;
    v29 = type metadata accessor for MoonPhase.Hemisphere(0);
    v30 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v29 - 8) + 16);
    v31 = swift_bridgeObjectRetain(v25);
    v30(v27, v28, v29, v31);
    v32 = a3[6];
    v33 = (_QWORD *)(a1 + v32);
    v34 = (_QWORD *)(a2 + v32);
    v35 = sub_1000BA294(&qword_100BC68E8);
    if (swift_getEnumCaseMultiPayload(v34) == 1)
    {
      v36 = type metadata accessor for Locale(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v33, v34, v36);
      v37 = 1;
    }
    else
    {
      *v33 = *v34;
      swift_retain();
      v37 = 0;
    }
    swift_storeEnumTagMultiPayload(v33, v35, v37);
    v38 = (int *)_s13CalendarStateVMa(0);
    v18((uint64_t)v33 + v38[5], (uint64_t)v34 + v38[5], v17);
    v39 = v38[6];
    v40 = (char *)v33 + v39;
    v41 = (char *)v34 + v39;
    v42 = type metadata accessor for Calendar(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
    v18((uint64_t)v33 + v38[7], (uint64_t)v34 + v38[7], v17);
    v18((uint64_t)v33 + v38[8], (uint64_t)v34 + v38[8], v17);
    v43 = v38[9];
    v44 = *(_QWORD *)((char *)v34 + v43);
    *(_QWORD *)((char *)v33 + v43) = v44;
    v45 = v38[10];
    v46 = (char *)v33 + v45;
    v47 = (char *)v34 + v45;
    v48 = swift_bridgeObjectRetain(v44);
    ((void (*)(char *, char *, uint64_t, __n128))v18)(v46, v47, v17, v48);
    v49 = a3[7];
    v50 = *(_OWORD *)(a2 + v49 + 24);
    *(_OWORD *)(a1 + v49 + 24) = v50;
    (**(void (***)(void))(v50 - 8))();
  }
  return a1;
}

uint64_t sub_1001D200C(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  int *v15;
  char *v16;
  uint64_t v17;
  __n128 v18;

  sub_1000B15F8(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  v4 = a1 + a2[5];
  v5 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = (int *)type metadata accessor for CalendarViewModel(0);
  v7 = v4 + v6[5];
  v8 = type metadata accessor for Date(0);
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(v4 + v6[6], v8);
  v9(v4 + v6[7], v8);
  v10 = v4 + v6[8];
  if (!_s7Weather24LocationCompositionStateOwet_0(v10, 1, v8))
    v9(v10, v8);
  swift_bridgeObjectRelease();
  v11 = v4 + v6[10];
  v12 = type metadata accessor for MoonPhase.Hemisphere(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = (_QWORD *)(a1 + a2[6]);
  sub_1000BA294(&qword_100BC68E8);
  if (swift_getEnumCaseMultiPayload(v13) == 1)
  {
    v14 = type metadata accessor for Locale(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  }
  else
  {
    swift_release(*v13);
  }
  v15 = (int *)_s13CalendarStateVMa(0);
  v9((uint64_t)v13 + v15[5], v8);
  v16 = (char *)v13 + v15[6];
  v17 = type metadata accessor for Calendar(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
  v9((uint64_t)v13 + v15[7], v8);
  v9((uint64_t)v13 + v15[8], v8);
  v18 = swift_bridgeObjectRelease();
  ((void (*)(char *, uint64_t, __n128))v9)((char *)v13 + v15[10], v8, v18);
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(a1 + a2[7]));
}

uint64_t sub_1001D21F4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  void *v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  __n128 v46;
  uint64_t v47;
  __int128 v48;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_10008D47C(*(_QWORD *)a2, v7);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  v12 = (int *)type metadata accessor for CalendarViewModel(0);
  v13 = v12[5];
  v14 = v9 + v13;
  v15 = v10 + v13;
  v16 = type metadata accessor for Date(0);
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
  v17(v14, v15, v16);
  v17(v9 + v12[6], v10 + v12[6], v16);
  v17(v9 + v12[7], v10 + v12[7], v16);
  v18 = v12[8];
  v19 = (void *)(v9 + v18);
  v20 = (const void *)(v10 + v18);
  if (_s7Weather24LocationCompositionStateOwet_0(v10 + v18, 1, v16))
  {
    v21 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v17((uint64_t)v19, (uint64_t)v20, v16);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v16);
  }
  v22 = v12[9];
  v23 = *(_QWORD *)(v10 + v22);
  *(_QWORD *)(v9 + v22) = v23;
  v24 = v12[10];
  v25 = v9 + v24;
  v26 = v10 + v24;
  v27 = type metadata accessor for MoonPhase.Hemisphere(0);
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v27 - 8) + 16);
  v29 = swift_bridgeObjectRetain(v23);
  v28(v25, v26, v27, v29);
  v30 = a3[6];
  v31 = (_QWORD *)(a1 + v30);
  v32 = (_QWORD *)(a2 + v30);
  v33 = sub_1000BA294(&qword_100BC68E8);
  if (swift_getEnumCaseMultiPayload(v32) == 1)
  {
    v34 = type metadata accessor for Locale(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v31, v32, v34);
    v35 = 1;
  }
  else
  {
    *v31 = *v32;
    swift_retain();
    v35 = 0;
  }
  swift_storeEnumTagMultiPayload(v31, v33, v35);
  v36 = (int *)_s13CalendarStateVMa(0);
  v17((uint64_t)v31 + v36[5], (uint64_t)v32 + v36[5], v16);
  v37 = v36[6];
  v38 = (char *)v31 + v37;
  v39 = (char *)v32 + v37;
  v40 = type metadata accessor for Calendar(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
  v17((uint64_t)v31 + v36[7], (uint64_t)v32 + v36[7], v16);
  v17((uint64_t)v31 + v36[8], (uint64_t)v32 + v36[8], v16);
  v41 = v36[9];
  v42 = *(_QWORD *)((char *)v32 + v41);
  *(_QWORD *)((char *)v31 + v41) = v42;
  v43 = v36[10];
  v44 = (char *)v31 + v43;
  v45 = (char *)v32 + v43;
  v46 = swift_bridgeObjectRetain(v42);
  ((void (*)(char *, char *, uint64_t, __n128))v17)(v44, v45, v16, v46);
  v47 = a3[7];
  v48 = *(_OWORD *)(a2 + v47 + 24);
  *(_OWORD *)(a1 + v47 + 24) = v48;
  (**(void (***)(void))(v48 - 8))();
  return a1;
}

uint64_t sub_1001D24CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  void *v22;
  const void *v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v48;
  uint64_t v49;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_10008D47C(*(_QWORD *)a2, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_1000B15F8(v8, v9);
  v48 = a3;
  v49 = a2;
  v10 = *(int *)(a3 + 20);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  v14 = (int *)type metadata accessor for CalendarViewModel(0);
  v15 = v14[5];
  v16 = v11 + v15;
  v17 = v12 + v15;
  v18 = type metadata accessor for Date(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 24);
  v20(v16, v17, v18);
  v20(v11 + v14[6], v12 + v14[6], v18);
  v20(v11 + v14[7], v12 + v14[7], v18);
  v21 = v14[8];
  v22 = (void *)(v11 + v21);
  v23 = (const void *)(v12 + v21);
  v24 = _s7Weather24LocationCompositionStateOwet_0(v11 + v21, 1, v18);
  v25 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v18);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(void *, const void *, uint64_t))(v19 + 16))(v22, v23, v18);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v18);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v25)
  {
    (*(void (**)(void *, uint64_t))(v19 + 8))(v22, v18);
LABEL_6:
    v26 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_7;
  }
  v20((uint64_t)v22, (uint64_t)v23, v18);
LABEL_7:
  v27 = v14[9];
  v28 = *(_QWORD *)(v12 + v27);
  *(_QWORD *)(v11 + v27) = v28;
  swift_bridgeObjectRetain(v28);
  swift_bridgeObjectRelease();
  v29 = v14[10];
  v30 = v11 + v29;
  v31 = v12 + v29;
  v32 = type metadata accessor for MoonPhase.Hemisphere(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 24))(v30, v31, v32);
  v33 = *(int *)(v48 + 24);
  v34 = (_QWORD *)(a1 + v33);
  v35 = (_QWORD *)(v49 + v33);
  if (a1 != v49)
  {
    sub_100021A14(a1 + v33, &qword_100BC68E8);
    v36 = sub_1000BA294(&qword_100BC68E8);
    if (swift_getEnumCaseMultiPayload(v35) == 1)
    {
      v37 = type metadata accessor for Locale(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v34, v35, v37);
      v38 = 1;
    }
    else
    {
      *v34 = *v35;
      swift_retain();
      v38 = 0;
    }
    swift_storeEnumTagMultiPayload(v34, v36, v38);
  }
  v39 = (int *)_s13CalendarStateVMa(0);
  v20((uint64_t)v34 + v39[5], (uint64_t)v35 + v39[5], v18);
  v40 = v39[6];
  v41 = (char *)v34 + v40;
  v42 = (char *)v35 + v40;
  v43 = type metadata accessor for Calendar(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 24))(v41, v42, v43);
  v20((uint64_t)v34 + v39[7], (uint64_t)v35 + v39[7], v18);
  v20((uint64_t)v34 + v39[8], (uint64_t)v35 + v39[8], v18);
  v44 = v39[9];
  v45 = *(_QWORD *)((char *)v35 + v44);
  *(_QWORD *)((char *)v34 + v44) = v45;
  swift_bridgeObjectRetain(v45);
  v46 = swift_bridgeObjectRelease();
  ((void (*)(char *, char *, uint64_t, __n128))v20)((char *)v34 + v39[10], (char *)v35 + v39[10], v18, v46);
  sub_100094D04((_QWORD *)(a1 + *(int *)(v48 + 28)), (_QWORD *)(v49 + *(int *)(v48 + 28)));
  return a1;
}

uint64_t sub_1001D2814(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[5];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = (int *)type metadata accessor for CalendarViewModel(0);
  v11 = v10[5];
  v12 = v7 + v11;
  v13 = v8 + v11;
  v14 = type metadata accessor for Date(0);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32);
  v15(v12, v13, v14);
  v15(v7 + v10[6], v8 + v10[6], v14);
  v15(v7 + v10[7], v8 + v10[7], v14);
  v16 = v10[8];
  v17 = (void *)(v7 + v16);
  v18 = (const void *)(v8 + v16);
  if (_s7Weather24LocationCompositionStateOwet_0(v8 + v16, 1, v14))
  {
    v19 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v15((uint64_t)v17, (uint64_t)v18, v14);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v14);
  }
  *(_QWORD *)(v7 + v10[9]) = *(_QWORD *)(v8 + v10[9]);
  v20 = v10[10];
  v21 = v7 + v20;
  v22 = v8 + v20;
  v23 = type metadata accessor for MoonPhase.Hemisphere(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
  v24 = a3[6];
  v25 = (char *)(a1 + v24);
  v26 = (char *)(a2 + v24);
  v27 = sub_1000BA294(&qword_100BC68E8);
  if (swift_getEnumCaseMultiPayload(v26) == 1)
  {
    v28 = type metadata accessor for Locale(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v25, v26, v28);
    swift_storeEnumTagMultiPayload(v25, v27, 1);
  }
  else
  {
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  v29 = (int *)_s13CalendarStateVMa(0);
  v15((uint64_t)&v25[v29[5]], (uint64_t)&v26[v29[5]], v14);
  v30 = v29[6];
  v31 = &v25[v30];
  v32 = &v26[v30];
  v33 = type metadata accessor for Calendar(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v31, v32, v33);
  v15((uint64_t)&v25[v29[7]], (uint64_t)&v26[v29[7]], v14);
  v15((uint64_t)&v25[v29[8]], (uint64_t)&v26[v29[8]], v14);
  *(_QWORD *)&v25[v29[9]] = *(_QWORD *)&v26[v29[9]];
  v15((uint64_t)&v25[v29[10]], (uint64_t)&v26[v29[10]], v14);
  v34 = a3[7];
  v35 = a1 + v34;
  v36 = a2 + v34;
  v37 = *(_OWORD *)(v36 + 16);
  *(_OWORD *)v35 = *(_OWORD *)v36;
  *(_OWORD *)(v35 + 16) = v37;
  *(_QWORD *)(v35 + 32) = *(_QWORD *)(v36 + 32);
  return a1;
}

uint64_t sub_1001D2AC4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  void *v22;
  const void *v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  int *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v47;
  uint64_t *v48;

  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_1000B15F8(v8, v9);
  v47 = a3;
  v48 = a2;
  v10 = *(int *)(a3 + 20);
  v11 = a1 + v10;
  v12 = (uint64_t)a2 + v10;
  v13 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  v14 = (int *)type metadata accessor for CalendarViewModel(0);
  v15 = v14[5];
  v16 = v11 + v15;
  v17 = v12 + v15;
  v18 = type metadata accessor for Date(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 40);
  v20(v16, v17, v18);
  v20(v11 + v14[6], v12 + v14[6], v18);
  v20(v11 + v14[7], v12 + v14[7], v18);
  v21 = v14[8];
  v22 = (void *)(v11 + v21);
  v23 = (const void *)(v12 + v21);
  v24 = _s7Weather24LocationCompositionStateOwet_0(v11 + v21, 1, v18);
  v25 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v18);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(void *, const void *, uint64_t))(v19 + 32))(v22, v23, v18);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v18);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v25)
  {
    (*(void (**)(void *, uint64_t))(v19 + 8))(v22, v18);
LABEL_6:
    v26 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_7;
  }
  v20((uint64_t)v22, (uint64_t)v23, v18);
LABEL_7:
  *(_QWORD *)(v11 + v14[9]) = *(_QWORD *)(v12 + v14[9]);
  swift_bridgeObjectRelease();
  v27 = v14[10];
  v28 = v11 + v27;
  v29 = v12 + v27;
  v30 = type metadata accessor for MoonPhase.Hemisphere(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = *(int *)(v47 + 24);
  v32 = (char *)(a1 + v31);
  v33 = (char *)v48 + v31;
  if ((uint64_t *)a1 != v48)
  {
    sub_100021A14(a1 + v31, &qword_100BC68E8);
    v34 = sub_1000BA294(&qword_100BC68E8);
    if (swift_getEnumCaseMultiPayload(v33) == 1)
    {
      v35 = type metadata accessor for Locale(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v32, v33, v35);
      swift_storeEnumTagMultiPayload(v32, v34, 1);
    }
    else
    {
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
  }
  v36 = (int *)_s13CalendarStateVMa(0);
  v20((uint64_t)&v32[v36[5]], (uint64_t)&v33[v36[5]], v18);
  v37 = v36[6];
  v38 = &v32[v37];
  v39 = &v33[v37];
  v40 = type metadata accessor for Calendar(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 40))(v38, v39, v40);
  v20((uint64_t)&v32[v36[7]], (uint64_t)&v33[v36[7]], v18);
  v20((uint64_t)&v32[v36[8]], (uint64_t)&v33[v36[8]], v18);
  *(_QWORD *)&v32[v36[9]] = *(_QWORD *)&v33[v36[9]];
  v41 = swift_bridgeObjectRelease();
  ((void (*)(char *, char *, uint64_t, __n128))v20)(&v32[v36[10]], &v33[v36[10]], v18, v41);
  v42 = *(int *)(v47 + 28);
  v43 = a1 + v42;
  v44 = (uint64_t)v48 + v42;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(a1 + v42));
  v45 = *(_OWORD *)(v44 + 16);
  *(_OWORD *)v43 = *(_OWORD *)v44;
  *(_OWORD *)(v43 + 16) = v45;
  *(_QWORD *)(v43 + 32) = *(_QWORD *)(v44 + 32);
  return a1;
}

uint64_t sub_1001D2E08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001D2E14);
}

uint64_t sub_1001D2E14(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v11;

  v6 = sub_1000DD788();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a3[5];
    return _s7Weather24LocationCompositionStateOwet_0(a1 + v8, a2, v7);
  }
  v9 = sub_1000B4450();
  if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v9;
    v8 = a3[6];
    return _s7Weather24LocationCompositionStateOwet_0(a1 + v8, a2, v7);
  }
  v11 = *(_QWORD *)(a1 + a3[7] + 24);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_1001D2EB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001D2EBC);
}

uint64_t sub_1001D2EBC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v8 = sub_1000DD788();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a4[5];
    return _s7Weather24LocationCompositionStateOwst_0(a1 + v10, a2, a2, v9);
  }
  result = sub_1000B4450();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
  {
    v9 = result;
    v10 = a4[6];
    return _s7Weather24LocationCompositionStateOwst_0(a1 + v10, a2, a2, v9);
  }
  *(_QWORD *)(a1 + a4[7] + 24) = (a2 - 1);
  return result;
}

uint64_t sub_1001D2F54(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[4];

  v5[0] = "\t";
  result = type metadata accessor for CalendarViewModel(319);
  if (v3 <= 0x3F)
  {
    v5[1] = *(_QWORD *)(result - 8) + 64;
    result = _s13CalendarStateVMa(319);
    if (v4 <= 0x3F)
    {
      v5[2] = *(_QWORD *)(result - 8) + 64;
      v5[3] = &unk_1009810F8;
      swift_initStructMetadata(a1, 256, 4, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

uint64_t sub_1001D2FEC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AAA558, 1);
}

uint64_t sub_1001D2FFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1001D107C(a1, *(_QWORD *)(v2 + 16), a2);
}

unint64_t sub_1001D3018()
{
  unint64_t result;

  result = qword_100BC69A8;
  if (!qword_100BC69A8)
  {
    result = swift_getWitnessTable(&unk_1009CE1EC, &type metadata for CalendarWeekdayView);
    atomic_store(result, (unint64_t *)&qword_100BC69A8);
  }
  return result;
}

uint64_t sub_1001D3058()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  sub_1000CC8B0();
  v0 = (uint64_t *)sub_1000C130C();
  return sub_1001D1110(v0, v1, v2);
}

unint64_t sub_1001D3088()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC69D8;
  if (!qword_100BC69D8)
  {
    v1 = sub_100075EB0(&qword_100BC69E0);
    sub_10000F1C8((unint64_t *)&qword_100BC3588, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v1);
    atomic_store(result, (unint64_t *)&qword_100BC69D8);
  }
  return result;
}

uint64_t sub_1001D3108()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1000CC8B0();
  v0 = sub_1000C130C();
  return sub_1001D12C4(v0, v1, v2);
}

void sub_1001D3138()
{
  sub_10003D2DC(&qword_100BC6A18, &qword_100BC6A20);
}

uint64_t AppLaunchCountMonitor.__deallocating_deinit()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + 32));
  return swift_deallocClassInstance(v0, 72, 7);
}

uint64_t type metadata accessor for VFXTestInteractor()
{
  return objc_opt_self(_TtC7Weather17VFXTestInteractor);
}

BOOL sub_1001D31B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v27;

  v6 = type metadata accessor for NewsDataModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v7);
  sub_100099864();
  v8 = sub_1000BA294(&qword_100BC6CB0);
  sub_1000B42B0();
  __chkstk_darwin(v9);
  sub_100079F58();
  sub_1000BA294(&qword_100BC6B68);
  sub_1000B42B0();
  __chkstk_darwin(v10);
  sub_10009883C();
  v13 = v11 - v12;
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v27 - v16;
  __chkstk_darwin(v15);
  v19 = (char *)&v27 - v18;
  if ((static Location.== infix(_:_:)(a1, a2) & 1) == 0)
    return 0;
  v20 = (int *)sub_1000C6560();
  if ((sub_100669320(a1 + v20[5], a2 + v20[5]) & 1) == 0
    || (sub_1000C4448(v20[6]) & 1) == 0
    || (sub_1000C4448(v20[7]) & 1) == 0
    || (sub_1000C4448(v20[8]) & 1) == 0
    || (static Locale.== infix(_:_:)(a1 + v20[9], a2 + v20[9]) & 1) == 0
    || *(unsigned __int8 *)(a1 + v20[10]) != *(unsigned __int8 *)(a2 + v20[10])
    || *(unsigned __int8 *)(a1 + v20[11]) != *(unsigned __int8 *)(a2 + v20[11]))
  {
    return 0;
  }
  sub_1000CD58C(a1 + v20[12], (uint64_t)v19);
  sub_1000CD58C(a2 + v20[12], (uint64_t)v17);
  v21 = v2 + *(int *)(v8 + 48);
  sub_1000CD58C((uint64_t)v19, v2);
  sub_1000CD58C((uint64_t)v17, v21);
  sub_100088FC8(v2, 1, v6);
  if (v23)
  {
    sub_10009E47C((uint64_t)v17);
    sub_10009E47C((uint64_t)v19);
    v22 = sub_100088FC8(v21, 1, v6);
    if (v23)
    {
      sub_1000B3B00(v22, &qword_100BC6B68);
      return 1;
    }
    goto LABEL_17;
  }
  sub_10003773C(v2, v13, &qword_100BC6B68);
  sub_100088FC8(v21, 1, v6);
  if (v23)
  {
    sub_100021A14((uint64_t)v17, &qword_100BC6B68);
    sub_100021A14((uint64_t)v19, &qword_100BC6B68);
    sub_1000878B4(v24, type metadata accessor for NewsDataModel);
LABEL_17:
    sub_1000B3B00(v22, &qword_100BC6CB0);
    return 0;
  }
  sub_10007C77C(v21, v3, type metadata accessor for NewsDataModel);
  v25 = sub_1000FA3BC(v13, v3);
  sub_10009EFA8(v3);
  sub_10009E47C((uint64_t)v17);
  sub_10009E47C((uint64_t)v19);
  sub_10009EFA8(v13);
  sub_10009E47C(v2);
  return (v25 & 1) != 0;
}

BOOL sub_1001D3488(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  char v18;
  uint64_t v19;

  v6 = sub_1000C6560();
  sub_1000B42B0();
  __chkstk_darwin(v7);
  v8 = sub_1000C19E4();
  type metadata accessor for MoonDetailInput(v8);
  sub_1000B42B0();
  __chkstk_darwin(v9);
  sub_100098728();
  v12 = v11 - v10;
  sub_1000BA294(&qword_100BC6CA8);
  sub_1000B42B0();
  __chkstk_darwin(v13);
  sub_100079F58();
  v15 = v2 + *(int *)(v14 + 48);
  sub_100095B78(a1, v2, type metadata accessor for MoonDetailInput);
  sub_100095B78(a2, v15, type metadata accessor for MoonDetailInput);
  sub_100088FC8(v2, 1, v6);
  if (!v18)
  {
    sub_100095B78(v2, v12, type metadata accessor for MoonDetailInput);
    v19 = sub_100088FC8(v15, 1, v6);
    if (!v18)
    {
      sub_10007C77C(v15, v3, type metadata accessor for MoonDetailInput.Input);
      v17 = sub_1001D31B0(v12, v3);
      sub_1000215BC(v3, type metadata accessor for MoonDetailInput.Input);
      sub_1000215BC(v12, type metadata accessor for MoonDetailInput.Input);
      sub_1000215BC(v2, type metadata accessor for MoonDetailInput);
      return v17;
    }
    sub_1000878B4(v19, type metadata accessor for MoonDetailInput.Input);
LABEL_9:
    sub_1000B3B00(v16, &qword_100BC6CA8);
    return 0;
  }
  v16 = sub_100088FC8(v15, 1, v6);
  if (!v18)
    goto LABEL_9;
  sub_1000215BC(v2, type metadata accessor for MoonDetailInput);
  return 1;
}

void sub_1001D3634(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  NSObject *v74;
  uint64_t v75;
  os_log_type_t v76;
  _BOOL4 v77;
  uint64_t v78;
  uint8_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t (*v83)(uint64_t, uint64_t, uint64_t);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int EnumCaseMultiPayload;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  int *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  int *v182;
  char v183[8];

  v180 = a2;
  v5 = sub_1000988FC();
  v174 = *(_QWORD *)(v5 - 8);
  v175 = v5;
  sub_10009D98C();
  __chkstk_darwin(v6);
  sub_100088FDC();
  v173 = v7;
  sub_1000BA294(&qword_100BC6CB8);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_100088FDC();
  v169 = v9;
  v10 = sub_10009876C();
  v168 = type metadata accessor for MoonDetailSelectedDate(v10);
  sub_1000B42B0();
  __chkstk_darwin(v11);
  sub_1000986FC();
  v172 = v12;
  sub_10009D2A4();
  __chkstk_darwin(v13);
  v170 = (char *)&v143 - v14;
  sub_10009D2A4();
  __chkstk_darwin(v15);
  sub_100079F7C();
  v171 = v16;
  v17 = sub_10009876C();
  v18 = type metadata accessor for TimeZone(v17);
  v165 = *(_QWORD *)(v18 - 8);
  v166 = v18;
  sub_10009D98C();
  __chkstk_darwin(v19);
  sub_100088FDC();
  v21 = sub_1000987B4(v20);
  type metadata accessor for TimeState(v21);
  sub_1000B42B0();
  __chkstk_darwin(v22);
  sub_100088FDC();
  v24 = sub_1000987B4(v23);
  v151 = type metadata accessor for CurrentWeather(v24);
  v150 = *(_QWORD *)(v151 - 8);
  sub_10009D98C();
  __chkstk_darwin(v25);
  sub_100088FDC();
  v149 = v26;
  sub_1000BA294(&qword_100BC3350);
  sub_1000B42B0();
  __chkstk_darwin(v27);
  sub_100088FDC();
  v153 = v28;
  sub_1000BA294((uint64_t *)&unk_100BD35A0);
  sub_1000B42B0();
  __chkstk_darwin(v29);
  sub_1000986FC();
  v167 = v30;
  sub_10009D2A4();
  __chkstk_darwin(v31);
  sub_100079F7C();
  v33 = sub_1000987B4(v32);
  v34 = type metadata accessor for NewsDataModel(v33);
  sub_1000B42B0();
  __chkstk_darwin(v35);
  sub_100088FDC();
  v37 = sub_1000987B4(v36);
  v152 = type metadata accessor for WeatherData(v37);
  sub_1000B42B0();
  __chkstk_darwin(v38);
  sub_100088FDC();
  v154 = v39;
  sub_1000BA294(&qword_100BC3380);
  sub_1000B42B0();
  __chkstk_darwin(v40);
  sub_100098728();
  v43 = v42 - v41;
  v162 = type metadata accessor for LocationWeatherDataState(0);
  sub_1000B42B0();
  __chkstk_darwin(v44);
  sub_1000986FC();
  v157 = v45;
  sub_10009D2A4();
  __chkstk_darwin(v46);
  sub_100079F7C();
  v48 = sub_1000987B4(v47);
  v49 = type metadata accessor for Location(v48);
  v50 = *(_QWORD *)(v49 - 8);
  __chkstk_darwin(v49);
  sub_100098728();
  v53 = v52 - v51;
  sub_1000BA294(&qword_100BC6B68);
  sub_1000B42B0();
  __chkstk_darwin(v54);
  sub_100099864();
  v55 = sub_100098778();
  v176 = *(_QWORD *)(v55 - 8);
  v177 = v55;
  sub_10009D98C();
  __chkstk_darwin(v56);
  v178 = (uint64_t)&v143 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009D2A4();
  __chkstk_darwin(v58);
  v163 = (uint64_t)&v143 - v59;
  sub_10009D2A4();
  __chkstk_darwin(v60);
  v179 = (uint64_t)&v143 - v61;
  sub_10009D2A4();
  __chkstk_darwin(v62);
  sub_100079F7C();
  v181 = v63;
  sub_1000BA294(&qword_100BC6CC0);
  sub_1000B42B0();
  __chkstk_darwin(v64);
  v65 = sub_1000C19E4();
  v66 = type metadata accessor for MoonDetailViewState(v65);
  sub_1000B42B0();
  __chkstk_darwin(v67);
  sub_100098728();
  v70 = v69 - v68;
  sub_1001D41C0(a1, v2);
  v182 = (int *)v66;
  v71 = sub_100088FC8(v2, 1, v66);
  if (!v89)
  {
    sub_10007C77C(v2, v70, type metadata accessor for MoonDetailViewState);
    v146 = v34;
    _s7Weather24LocationCompositionStateOwst_0(v3, 1, 1, v34);
    v147 = v50;
    v83 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v50 + 16);
    v161 = v53;
    v148 = v49;
    sub_1000BE9D4(v53, v70, v83);
    v144 = a1;
    v84 = *(_QWORD *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
    swift_bridgeObjectRetain(v84);
    v86 = Location.id.getter(v85);
    v88 = v87;
    sub_1000EED10(v86, v87, v84);
    swift_bridgeObjectRelease(v88);
    swift_bridgeObjectRelease(v84);
    sub_100088FC8(v43, 1, v162);
    v159 = v3;
    v145 = v70;
    if (v89)
    {
      sub_100021A14(v3, &qword_100BC6B68);
      sub_100021A14(v43, &qword_100BC3380);
      v90 = v3;
      v91 = v176;
    }
    else
    {
      v92 = v158;
      sub_10007C77C(v43, v158, type metadata accessor for LocationWeatherDataState);
      v93 = v157;
      sub_100095B78(v92, v157, type metadata accessor for LocationWeatherDataState);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v93);
      v91 = v176;
      if (EnumCaseMultiPayload == 1)
      {
        v95 = v93 + *(int *)(sub_1000BA294(&qword_100BC3358) + 64);
        v96 = v154;
        sub_10007C77C(v93, v154, type metadata accessor for WeatherData);
        v97 = v156;
        sub_10007C77C(v95, v156, type metadata accessor for NewsDataModel);
        sub_10009BC18(v98, type metadata accessor for PreprocessedWeatherData);
        v99 = v153;
        sub_10003773C(v96 + *(int *)(v152 + 36), v153, &qword_100BC3350);
        v100 = type metadata accessor for WeatherDataOverrides(0);
        v101 = sub_100088FC8(v99, 1, v100);
        v90 = v159;
        if (v89)
        {
          sub_10009518C(v101, &qword_100BC3350);
          v114 = _s7Weather24LocationCompositionStateOwst_0(v155, 1, 1, v177);
          v102 = v171;
          v103 = v146;
        }
        else
        {
          v111 = v155;
          sub_10003773C(v99, v155, (uint64_t *)&unk_100BD35A0);
          sub_10009BC18(v112, type metadata accessor for WeatherDataOverrides);
          v114 = sub_100088FC8(v111, 1, v177);
          v102 = v171;
          v103 = v146;
          if (!v113)
          {
            sub_1000215BC(v96, type metadata accessor for WeatherData);
            sub_1000998E4(v120, type metadata accessor for LocationWeatherDataState);
            sub_1000992DC(v121, &qword_100BC6B68);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v91 + 32))(v181, v111, v177);
LABEL_20:
            v106 = v144;
            sub_10007C77C(v97, v90, type metadata accessor for NewsDataModel);
            v109 = 0;
            v110 = (uint64_t)v170;
            v108 = v176;
            v105 = v177;
            goto LABEL_21;
          }
        }
        sub_1000B3B00(v114, (uint64_t *)&unk_100BD35A0);
        v115 = v149;
        v117 = WeatherDataModel.currentWeather.getter(v116);
        CurrentWeather.date.getter(v117);
        (*(void (**)(uint64_t, uint64_t))(v150 + 8))(v115, v151);
        sub_1000215BC(v96, type metadata accessor for WeatherData);
        sub_1000998E4(v118, type metadata accessor for LocationWeatherDataState);
        sub_1000992DC(v119, &qword_100BC6B68);
        goto LABEL_20;
      }
      sub_10009EFA8(v92);
      v90 = v159;
      sub_1000992DC(v104, &qword_100BC6B68);
      sub_10009EFA8(v93);
    }
    v105 = v177;
    v106 = v144;
    v107 = v160;
    sub_100095B78(v144 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_time, v160, type metadata accessor for TimeState);
    v108 = v91;
    sub_1000BE9D4(v181, v107, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v91 + 32));
    v109 = 1;
    v110 = (uint64_t)v170;
    v102 = v171;
    v103 = v146;
LABEL_21:
    v122 = _s7Weather24LocationCompositionStateOwst_0(v90, v109, 1, v103);
    v123 = v164;
    Location.timeZone.getter(v122);
    v124 = v179;
    Date.zeroMinutes(timeZone:)(v123);
    (*(void (**)(uint64_t, uint64_t))(v165 + 8))(v123, v166);
    v125 = v145;
    v126 = v169;
    sub_10003773C(v145 + v182[5], v169, &qword_100BC6CB8);
    v127 = v163;
    sub_1000BE9D4(v163, v124, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v108 + 16));
    v128 = v168;
    if (_s7Weather24LocationCompositionStateOwet_0(v126, 1, v168) == 1)
    {
      sub_1000BE9D4(v102, v127, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v108 + 32));
      swift_storeEnumTagMultiPayload(v102, v128, 2);
      sub_10009518C(v129, &qword_100BC6CB8);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v127, v105);
      sub_10007C77C(v126, v102, type metadata accessor for MoonDetailSelectedDate);
    }
    v130 = v167;
    sub_10003773C(v125 + v182[6], v167, (uint64_t *)&unk_100BD35A0);
    sub_100095B78(v102, v110, type metadata accessor for MoonDetailSelectedDate);
    v131 = sub_100088FC8(v130, 1, v105);
    v132 = v178;
    if (v89)
    {
      v133 = sub_1006692BC(v178);
      sub_10004A2E0(v133, type metadata accessor for MoonDetailSelectedDate);
      sub_100021A14(v130, (uint64_t *)&unk_100BD35A0);
    }
    else
    {
      sub_10004A2E0(v131, type metadata accessor for MoonDetailSelectedDate);
      sub_1000BE9D4(v132, v130, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v108 + 32));
    }
    v134 = v172;
    sub_10007C77C(v102, v172, type metadata accessor for MoonDetailSelectedDate);
    v135 = v106 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
    swift_beginAccess(v106 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment, v183, 0, 0);
    v136 = type metadata accessor for EnvironmentState(0);
    v137 = v173;
    v138 = v174;
    v139 = v175;
    v140 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v174 + 16))(v173, v135 + *(int *)(v136 + 28), v175);
    LODWORD(v182) = *(unsigned __int8 *)(v125 + v182[8]);
    sub_1000878B4(v140, type metadata accessor for MoonDetailViewState);
    v78 = v180;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v147 + 32))(v180, v161, v148);
    v141 = (int *)sub_1000C6560();
    sub_10007C77C(v134, v78 + v141[5], type metadata accessor for MoonDetailSelectedDate);
    sub_1000F3DFC(v78 + v141[6], v178);
    sub_1000F3DFC(v78 + v141[7], v181);
    sub_1000F3DFC(v78 + v141[8], v179);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v138 + 32))(v78 + v141[9], v137, v139);
    *(_BYTE *)(v78 + v141[10]) = (_BYTE)v182;
    *(_BYTE *)(v78 + v141[11]) = 1;
    sub_1001D6A5C(v159, v78 + v141[12]);
    v81 = v78;
    v82 = 0;
    v80 = (uint64_t)v141;
    goto LABEL_28;
  }
  sub_10009518C(v71, &qword_100BC6CC0);
  if (qword_100BC2450 != -1)
    swift_once(&qword_100BC2450, sub_1006F3844);
  v72 = type metadata accessor for Logger(0);
  v73 = sub_1000AECD4(v72, (uint64_t)qword_100CAF0E8);
  v74 = Logger.logObject.getter(v73);
  v76 = static os_log_type_t.error.getter(v74, v75);
  v77 = os_log_type_enabled(v74, v76);
  v78 = v180;
  if (v77)
  {
    v79 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v79 = 0;
    _os_log_impl((void *)&_mh_execute_header, v74, v76, "Unable to make MoonDetailInput due to missing moonDetailViewState.", v79, 2u);
    swift_slowDealloc(v79, -1, -1);
  }

  v80 = type metadata accessor for MoonDetailInput.Input(0);
  v81 = v78;
  v82 = 1;
LABEL_28:
  _s7Weather24LocationCompositionStateOwst_0(v81, v82, 1, v80);
  v142 = type metadata accessor for MoonDetailInput(0);
  _s7Weather24LocationCompositionStateOwst_0(v78, 0, 1, v142);
  sub_100098640();
}

void sub_1001D41C0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t EnumCaseMultiPayload;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v70 = a2;
  v68 = type metadata accessor for LocationPreviewModalViewState(0);
  sub_1000B42B0();
  __chkstk_darwin(v3);
  sub_1000986FC();
  v65 = v4;
  sub_10009D2A4();
  __chkstk_darwin(v5);
  sub_100079F7C();
  v67 = v6;
  v7 = sub_10009876C();
  v69 = type metadata accessor for LocationPreviewViewState(v7);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_1000986FC();
  v64 = v9;
  sub_10009D2A4();
  __chkstk_darwin(v10);
  sub_100079F7C();
  v66 = v11;
  v12 = sub_10009876C();
  v13 = type metadata accessor for MoonDetailViewState(v12);
  sub_1000B42B0();
  __chkstk_darwin(v14);
  v62 = (uint64_t)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009D2A4();
  __chkstk_darwin(v16);
  v63 = (uint64_t)&v61 - v17;
  sub_10009D2A4();
  __chkstk_darwin(v18);
  v20 = (char *)&v61 - v19;
  type metadata accessor for ModalViewState(0);
  sub_1000B42B0();
  __chkstk_darwin(v21);
  sub_10009883C();
  v24 = v22 - v23;
  v26 = __chkstk_darwin(v25);
  v28 = (char *)&v61 - v27;
  __chkstk_darwin(v26);
  v30 = (char *)&v61 - v29;
  type metadata accessor for ModalViewState.LocationDetailModal(0);
  sub_1000B42B0();
  __chkstk_darwin(v31);
  sub_10009883C();
  v34 = v32 - v33;
  __chkstk_darwin(v35);
  v37 = (char *)&v61 - v36;
  v38 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView;
  sub_100095B78(v38, (uint64_t)v30, type metadata accessor for ModalViewState);
  v39 = sub_1000988D0((uint64_t)v30);
  if ((_DWORD)v39 != 5)
  {
    sub_10004A2E0(v39, type metadata accessor for ModalViewState);
    goto LABEL_6;
  }
  v61 = v13;
  sub_1000992F8((uint64_t)v30, (uint64_t)v37);
  sub_1000992F8((uint64_t)v37, v34);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v34);
  if ((_DWORD)EnumCaseMultiPayload != 4)
  {
    sub_1000998E4(EnumCaseMultiPayload, type metadata accessor for ModalViewState.LocationDetailModal);
    v13 = v61;
LABEL_6:
    sub_100095B78(v38, (uint64_t)v28, type metadata accessor for ModalViewState);
    v44 = sub_1000988D0((uint64_t)v28);
    v45 = v69;
    if (v44)
    {
      sub_1000215BC((uint64_t)v28, type metadata accessor for ModalViewState);
    }
    else
    {
      v46 = v13;
      v47 = v66;
      sub_1000992F8((uint64_t)v28, v66);
      v48 = v67;
      sub_100095B78(v47 + *(int *)(v45 + 20), v67, type metadata accessor for LocationPreviewModalViewState);
      sub_1000215BC(v47, type metadata accessor for LocationPreviewViewState);
      v49 = swift_getEnumCaseMultiPayload(v48);
      if ((_DWORD)v49 == 5)
      {
        v50 = v48;
        v51 = v63;
        sub_1000992F8(v50, v63);
        v52 = v51;
        v42 = v70;
        goto LABEL_19;
      }
      sub_10009BC18(v49, type metadata accessor for LocationPreviewModalViewState);
    }
    sub_100095B78(v38, v24, type metadata accessor for ModalViewState);
    if (sub_1000988D0(v24) == 4)
    {
      v53 = type metadata accessor for ModalViewState.MapViewModal(0);
      v54 = sub_100088FC8(v24, 1, v53);
      if (!v55)
      {
        v46 = v13;
        v56 = v64;
        sub_1000992F8(v24, v64);
        v57 = v65;
        sub_100095B78(v56 + *(int *)(v45 + 20), v65, type metadata accessor for LocationPreviewModalViewState);
        sub_1000215BC(v56, type metadata accessor for LocationPreviewViewState);
        v58 = swift_getEnumCaseMultiPayload(v57);
        v42 = v70;
        if ((_DWORD)v58 != 5)
        {
          sub_1000878B4(v58, type metadata accessor for LocationPreviewModalViewState);
          v43 = 1;
          goto LABEL_21;
        }
        v59 = v57;
        v60 = v62;
        sub_1000992F8(v59, v62);
        v52 = v60;
LABEL_19:
        sub_1000992F8(v52, v42);
        v43 = 0;
LABEL_21:
        v13 = v46;
        goto LABEL_22;
      }
      sub_1000992DC(v54, &qword_100BC5F58);
    }
    else
    {
      sub_1000215BC(v24, type metadata accessor for ModalViewState);
    }
    v43 = 1;
    v42 = v70;
    goto LABEL_22;
  }
  sub_1000992F8(v34, (uint64_t)v20);
  v41 = (uint64_t)v20;
  v42 = v70;
  sub_1000992F8(v41, v70);
  v43 = 0;
  v13 = v61;
LABEL_22:
  _s7Weather24LocationCompositionStateOwst_0(v42, v43, 1, v13);
  sub_100098640();
}

uint64_t type metadata accessor for MoonDetailInputFactory()
{
  return objc_opt_self(_TtC7Weather22MoonDetailInputFactory);
}

uint64_t *sub_1001D4630(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t EnumCaseMultiPayload;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  __n128 v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = (int *)type metadata accessor for MoonDetailInput.Input(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = type metadata accessor for Location(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      v10 = v7[5];
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = type metadata accessor for MoonDetailSelectedDate(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v12);
      v15 = type metadata accessor for Date(0);
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
      v16(v11, v12, v15);
      v17 = swift_storeEnumTagMultiPayload(v11, v13, EnumCaseMultiPayload);
      ((void (*)(char *, char *, uint64_t, __n128))v16)((char *)a1 + v7[6], (char *)a2 + v7[6], v15, v17);
      v16((char *)a1 + v7[7], (char *)a2 + v7[7], v15);
      v16((char *)a1 + v7[8], (char *)a2 + v7[8], v15);
      v18 = v7[9];
      v19 = (char *)a1 + v18;
      v20 = (char *)a2 + v18;
      v21 = type metadata accessor for Locale(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
      *((_BYTE *)a1 + v7[10]) = *((_BYTE *)a2 + v7[10]);
      *((_BYTE *)a1 + v7[11]) = *((_BYTE *)a2 + v7[11]);
      v22 = v7[12];
      v23 = (uint64_t *)((char *)a1 + v22);
      v24 = (uint64_t *)((char *)a2 + v22);
      v25 = type metadata accessor for NewsDataModel(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v25))
      {
        v26 = sub_1000BA294(&qword_100BC6B68);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload(v24) == 1)
        {
          v27 = *v24;
          *v23 = *v24;
          swift_bridgeObjectRetain(v27);
          v28 = 1;
        }
        else
        {
          v29 = type metadata accessor for News(0);
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v23, v24, v29);
          v28 = 0;
        }
        swift_storeEnumTagMultiPayload(v23, v25, v28);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v25);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v7);
    }
  }
  return a1;
}

uint64_t type metadata accessor for MoonDetailInput.Input(uint64_t a1)
{
  return sub_100098190(a1, (uint64_t *)&unk_100BC6C48, (uint64_t)&nominal type descriptor for MoonDetailInput.Input);
}

void sub_1001D48B4(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = (int *)type metadata accessor for MoonDetailInput.Input(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(a1, 1, (uint64_t)v2))
  {
    v3 = type metadata accessor for Location(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
    v4 = a1 + v2[5];
    type metadata accessor for MoonDetailSelectedDate(0);
    if (swift_getEnumCaseMultiPayload(v4) <= 2)
    {
      v5 = type metadata accessor for Date(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
    }
    v6 = a1 + v2[6];
    v7 = type metadata accessor for Date(0);
    v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
    v8(v6, v7);
    v8(a1 + v2[7], v7);
    v8(a1 + v2[8], v7);
    v9 = a1 + v2[9];
    v10 = type metadata accessor for Locale(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
    v11 = a1 + v2[12];
    v12 = type metadata accessor for NewsDataModel(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v11, 1, v12))
    {
      if (swift_getEnumCaseMultiPayload(v11) == 1)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v13 = type metadata accessor for News(0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v11, v13);
      }
    }
  }
}

char *sub_1001D4A48(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t EnumCaseMultiPayload;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  __n128 v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = (int *)type metadata accessor for MoonDetailInput.Input(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = type metadata accessor for Location(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = v6[5];
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = type metadata accessor for MoonDetailSelectedDate(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10);
    v13 = type metadata accessor for Date(0);
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    v14(v9, v10, v13);
    v15 = swift_storeEnumTagMultiPayload(v9, v11, EnumCaseMultiPayload);
    ((void (*)(char *, char *, uint64_t, __n128))v14)(&a1[v6[6]], &a2[v6[6]], v13, v15);
    v14(&a1[v6[7]], &a2[v6[7]], v13);
    v14(&a1[v6[8]], &a2[v6[8]], v13);
    v16 = v6[9];
    v17 = &a1[v16];
    v18 = &a2[v16];
    v19 = type metadata accessor for Locale(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    a1[v6[10]] = a2[v6[10]];
    a1[v6[11]] = a2[v6[11]];
    v20 = v6[12];
    v21 = &a1[v20];
    v22 = &a2[v20];
    v23 = type metadata accessor for NewsDataModel(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v23))
    {
      v24 = sub_1000BA294(&qword_100BC6B68);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload(v22) == 1)
      {
        v25 = *(_QWORD *)v22;
        *(_QWORD *)v21 = *(_QWORD *)v22;
        swift_bridgeObjectRetain(v25);
        v26 = 1;
      }
      else
      {
        v27 = type metadata accessor for News(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v21, v22, v27);
        v26 = 0;
      }
      swift_storeEnumTagMultiPayload(v21, v23, v26);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, v23);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v6);
  }
  return a1;
}

uint64_t sub_1001D4C94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int *v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t EnumCaseMultiPayload;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  size_t v27;
  void *v28;
  const void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t *v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v6 = (int *)type metadata accessor for MoonDetailInput.Input(0);
  v7 = _s7Weather24LocationCompositionStateOwet_0(a1, 1, (uint64_t)v6);
  v8 = _s7Weather24LocationCompositionStateOwet_0(a2, 1, (uint64_t)v6);
  if (v7)
  {
    if (!v8)
    {
      v9 = type metadata accessor for Location(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      v10 = v6[5];
      v11 = a1 + v10;
      v12 = a2 + v10;
      v13 = type metadata accessor for MoonDetailSelectedDate(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v12);
      v15 = type metadata accessor for Date(0);
      v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
      v16(v11, v12, v15);
      v17 = swift_storeEnumTagMultiPayload(v11, v13, EnumCaseMultiPayload);
      ((void (*)(uint64_t, uint64_t, uint64_t, __n128))v16)(a1 + v6[6], a2 + v6[6], v15, v17);
      v16(a1 + v6[7], a2 + v6[7], v15);
      v16(a1 + v6[8], a2 + v6[8], v15);
      v18 = v6[9];
      v19 = a1 + v18;
      v20 = a2 + v18;
      v21 = type metadata accessor for Locale(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
      *(_BYTE *)(a1 + v6[10]) = *(_BYTE *)(a2 + v6[10]);
      *(_BYTE *)(a1 + v6[11]) = *(_BYTE *)(a2 + v6[11]);
      v22 = v6[12];
      v23 = (uint64_t *)(a1 + v22);
      v24 = (uint64_t *)(a2 + v22);
      v25 = type metadata accessor for NewsDataModel(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v25))
      {
        v26 = sub_1000BA294(&qword_100BC6B68);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload(v24) == 1)
        {
          v53 = *v24;
          *v23 = *v24;
          swift_bridgeObjectRetain(v53);
          v54 = 1;
        }
        else
        {
          v55 = type metadata accessor for News(0);
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v23, v24, v55);
          v54 = 0;
        }
        swift_storeEnumTagMultiPayload(v23, v25, v54);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v25);
      }
      v56 = a1;
      v57 = (uint64_t)v6;
      goto LABEL_23;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_1000215BC(a1, type metadata accessor for MoonDetailInput.Input);
LABEL_7:
    v27 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64);
    v28 = (void *)a1;
    v29 = (const void *)a2;
LABEL_8:
    memcpy(v28, v29, v27);
    return a1;
  }
  v30 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(a1, a2, v30);
  if (a1 != a2)
  {
    v31 = v6[5];
    v32 = a2 + v31;
    v33 = a1 + v31;
    sub_1000215BC(a1 + v31, type metadata accessor for MoonDetailSelectedDate);
    v34 = type metadata accessor for MoonDetailSelectedDate(0);
    v35 = swift_getEnumCaseMultiPayload(v32);
    v36 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v33, v32, v36);
    swift_storeEnumTagMultiPayload(v33, v34, v35);
  }
  v37 = v6[6];
  v38 = a1 + v37;
  v39 = a2 + v37;
  v40 = type metadata accessor for Date(0);
  v41 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 24);
  v41(v38, v39, v40);
  v41(a1 + v6[7], a2 + v6[7], v40);
  v41(a1 + v6[8], a2 + v6[8], v40);
  v42 = v6[9];
  v43 = a1 + v42;
  v44 = a2 + v42;
  v45 = type metadata accessor for Locale(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 24))(v43, v44, v45);
  *(_BYTE *)(a1 + v6[10]) = *(_BYTE *)(a2 + v6[10]);
  *(_BYTE *)(a1 + v6[11]) = *(_BYTE *)(a2 + v6[11]);
  v46 = v6[12];
  v47 = (uint64_t *)(a1 + v46);
  v48 = (uint64_t *)(a2 + v46);
  v49 = type metadata accessor for NewsDataModel(0);
  LODWORD(v40) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v47, 1, v49);
  v50 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, v49);
  if ((_DWORD)v40)
  {
    if (!v50)
    {
      if (swift_getEnumCaseMultiPayload(v48) == 1)
      {
        v51 = *v48;
        *v47 = *v48;
        swift_bridgeObjectRetain(v51);
        v52 = 1;
      }
      else
      {
        v63 = type metadata accessor for News(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v47, v48, v63);
        v52 = 0;
      }
      swift_storeEnumTagMultiPayload(v47, v49, v52);
      v56 = (uint64_t)v47;
      v57 = v49;
LABEL_23:
      _s7Weather24LocationCompositionStateOwst_0(v56, 0, 1, v57);
      return a1;
    }
    goto LABEL_19;
  }
  if (v50)
  {
    sub_1000215BC((uint64_t)v47, type metadata accessor for NewsDataModel);
LABEL_19:
    v27 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BC6B68) - 8) + 64);
    v28 = v47;
    v29 = v48;
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_1000215BC((uint64_t)v47, type metadata accessor for NewsDataModel);
    if (swift_getEnumCaseMultiPayload(v48) == 1)
    {
      v59 = *v48;
      *v47 = *v48;
      swift_bridgeObjectRetain(v59);
      v60 = v47;
      v61 = v49;
      v62 = 1;
    }
    else
    {
      v64 = type metadata accessor for News(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(v47, v48, v64);
      v60 = v47;
      v61 = v49;
      v62 = 0;
    }
    swift_storeEnumTagMultiPayload(v60, v61, v62);
  }
  return a1;
}

char *sub_1001D5198(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t EnumCaseMultiPayload;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  __n128 v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = (int *)type metadata accessor for MoonDetailInput.Input(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = type metadata accessor for Location(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    v8 = v6[5];
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = type metadata accessor for MoonDetailSelectedDate(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10);
    v13 = type metadata accessor for Date(0);
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32);
    v14(v9, v10, v13);
    v15 = swift_storeEnumTagMultiPayload(v9, v11, EnumCaseMultiPayload);
    ((void (*)(char *, char *, uint64_t, __n128))v14)(&a1[v6[6]], &a2[v6[6]], v13, v15);
    v14(&a1[v6[7]], &a2[v6[7]], v13);
    v14(&a1[v6[8]], &a2[v6[8]], v13);
    v16 = v6[9];
    v17 = &a1[v16];
    v18 = &a2[v16];
    v19 = type metadata accessor for Locale(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
    a1[v6[10]] = a2[v6[10]];
    a1[v6[11]] = a2[v6[11]];
    v20 = v6[12];
    v21 = &a1[v20];
    v22 = &a2[v20];
    v23 = type metadata accessor for NewsDataModel(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v23))
    {
      v24 = sub_1000BA294(&qword_100BC6B68);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload(v22))
      {
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        v25 = type metadata accessor for News(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v21, v22, v25);
        swift_storeEnumTagMultiPayload(v21, v23, 0);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, v23);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v6);
  }
  return a1;
}

uint64_t sub_1001D53E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int *v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t EnumCaseMultiPayload;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const void *v24;
  uint64_t v25;
  uint64_t v26;
  size_t v27;
  void *v28;
  const void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  const void *v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;

  v6 = (int *)type metadata accessor for MoonDetailInput.Input(0);
  v7 = _s7Weather24LocationCompositionStateOwet_0(a1, 1, (uint64_t)v6);
  v8 = _s7Weather24LocationCompositionStateOwet_0(a2, 1, (uint64_t)v6);
  if (v7)
  {
    if (!v8)
    {
      v9 = type metadata accessor for Location(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
      v10 = v6[5];
      v11 = a1 + v10;
      v12 = a2 + v10;
      v13 = type metadata accessor for MoonDetailSelectedDate(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v12);
      v15 = type metadata accessor for Date(0);
      v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
      v16(v11, v12, v15);
      v17 = swift_storeEnumTagMultiPayload(v11, v13, EnumCaseMultiPayload);
      ((void (*)(uint64_t, uint64_t, uint64_t, __n128))v16)(a1 + v6[6], a2 + v6[6], v15, v17);
      v16(a1 + v6[7], a2 + v6[7], v15);
      v16(a1 + v6[8], a2 + v6[8], v15);
      v18 = v6[9];
      v19 = a1 + v18;
      v20 = a2 + v18;
      v21 = type metadata accessor for Locale(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
      *(_BYTE *)(a1 + v6[10]) = *(_BYTE *)(a2 + v6[10]);
      *(_BYTE *)(a1 + v6[11]) = *(_BYTE *)(a2 + v6[11]);
      v22 = v6[12];
      v23 = (void *)(a1 + v22);
      v24 = (const void *)(a2 + v22);
      v25 = type metadata accessor for NewsDataModel(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v25))
      {
        v26 = sub_1000BA294(&qword_100BC6B68);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload(v24))
        {
          memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
        }
        else
        {
          v52 = type metadata accessor for News(0);
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v23, v24, v52);
          swift_storeEnumTagMultiPayload(v23, v25, 0);
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v25);
      }
      v53 = a1;
      v54 = (uint64_t)v6;
      goto LABEL_24;
    }
    goto LABEL_7;
  }
  if (!v8)
  {
    v30 = type metadata accessor for Location(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(a1, a2, v30);
    if (a1 != a2)
    {
      v31 = v6[5];
      v32 = a2 + v31;
      v33 = a1 + v31;
      sub_1000215BC(a1 + v31, type metadata accessor for MoonDetailSelectedDate);
      v34 = type metadata accessor for MoonDetailSelectedDate(0);
      v35 = swift_getEnumCaseMultiPayload(v32);
      v36 = type metadata accessor for Date(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v33, v32, v36);
      swift_storeEnumTagMultiPayload(v33, v34, v35);
    }
    v37 = v6[6];
    v38 = a1 + v37;
    v39 = a2 + v37;
    v40 = type metadata accessor for Date(0);
    v41 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 40);
    v41(v38, v39, v40);
    v41(a1 + v6[7], a2 + v6[7], v40);
    v41(a1 + v6[8], a2 + v6[8], v40);
    v42 = v6[9];
    v43 = a1 + v42;
    v44 = a2 + v42;
    v45 = type metadata accessor for Locale(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 40))(v43, v44, v45);
    *(_BYTE *)(a1 + v6[10]) = *(_BYTE *)(a2 + v6[10]);
    *(_BYTE *)(a1 + v6[11]) = *(_BYTE *)(a2 + v6[11]);
    v46 = v6[12];
    v47 = (void *)(a1 + v46);
    v48 = (const void *)(a2 + v46);
    v49 = type metadata accessor for NewsDataModel(0);
    LODWORD(v40) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v47, 1, v49);
    v50 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, v49);
    if ((_DWORD)v40)
    {
      if (!v50)
      {
        if (swift_getEnumCaseMultiPayload(v48))
        {
          memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
        }
        else
        {
          v56 = type metadata accessor for News(0);
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v47, v48, v56);
          swift_storeEnumTagMultiPayload(v47, v49, 0);
        }
        v53 = (uint64_t)v47;
        v54 = v49;
LABEL_24:
        _s7Weather24LocationCompositionStateOwst_0(v53, 0, 1, v54);
        return a1;
      }
    }
    else
    {
      if (!v50)
      {
        if (a1 == a2)
          return a1;
        sub_1000215BC((uint64_t)v47, type metadata accessor for NewsDataModel);
        if (!swift_getEnumCaseMultiPayload(v48))
        {
          v57 = type metadata accessor for News(0);
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v47, v48, v57);
          swift_storeEnumTagMultiPayload(v47, v49, 0);
          return a1;
        }
        v51 = *(_QWORD *)(v49 - 8);
        goto LABEL_20;
      }
      sub_1000215BC((uint64_t)v47, type metadata accessor for NewsDataModel);
    }
    v51 = *(_QWORD *)(sub_1000BA294(&qword_100BC6B68) - 8);
LABEL_20:
    v27 = *(_QWORD *)(v51 + 64);
    v28 = v47;
    v29 = v48;
    goto LABEL_8;
  }
  sub_1000215BC(a1, type metadata accessor for MoonDetailInput.Input);
LABEL_7:
  v27 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64);
  v28 = (void *)a1;
  v29 = (const void *)a2;
LABEL_8:
  memcpy(v28, v29, v27);
  return a1;
}

uint64_t sub_1001D58D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001D58DC);
}

uint64_t sub_1001D58DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_1000C6560();
  v5 = _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t sub_1001D591C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001D5928);
}

uint64_t sub_1001D5928(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = type metadata accessor for MoonDetailInput.Input(0);
  return sub_1000987C4(a1, v5, a3, v6);
}

uint64_t sub_1001D5968(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MoonDetailInput.Input(0);
  return _s7Weather24LocationCompositionStateOwet_0(a1, 1, v2);
}

uint64_t sub_1001D5998(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MoonDetailInput.Input(0);
  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, 1, v4);
}

uint64_t type metadata accessor for MoonDetailInput(uint64_t a1)
{
  return sub_100098190(a1, (uint64_t *)&unk_100BC6BE0, (uint64_t)&nominal type descriptor for MoonDetailInput);
}

uint64_t sub_1001D59E4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  result = type metadata accessor for MoonDetailInput.Input(319);
  if (v3 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload(a1, 256, *(_QWORD *)(result - 8) + 64, 1);
    return 0;
  }
  return result;
}

char *sub_1001D5A38(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t EnumCaseMultiPayload;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  __n128 v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v26 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for Location(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = type metadata accessor for MoonDetailSelectedDate(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10);
    v13 = type metadata accessor for Date(0);
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    v14(v9, v10, v13);
    v15 = swift_storeEnumTagMultiPayload(v9, v11, EnumCaseMultiPayload);
    ((void (*)(char *, char *, uint64_t, __n128))v14)(&a1[a3[6]], &a2[a3[6]], v13, v15);
    v14(&a1[a3[7]], &a2[a3[7]], v13);
    v14(&a1[a3[8]], &a2[a3[8]], v13);
    v16 = a3[9];
    v17 = &a1[v16];
    v18 = &a2[v16];
    v19 = type metadata accessor for Locale(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[11];
    a1[a3[10]] = a2[a3[10]];
    a1[v20] = a2[v20];
    v21 = a3[12];
    v22 = (uint64_t *)&a1[v21];
    v23 = (uint64_t *)&a2[v21];
    v24 = type metadata accessor for NewsDataModel(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v24))
    {
      v25 = sub_1000BA294(&qword_100BC6B68);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload(v23) == 1)
      {
        v27 = *v23;
        *v22 = *v23;
        swift_bridgeObjectRetain(v27);
        v28 = 1;
      }
      else
      {
        v29 = type metadata accessor for News(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v22, v23, v29);
        v28 = 0;
      }
      swift_storeEnumTagMultiPayload(v22, v24, v28);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v24);
    }
  }
  return a1;
}

void sub_1001D5C60(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  type metadata accessor for MoonDetailSelectedDate(0);
  if (swift_getEnumCaseMultiPayload(v5) <= 2)
  {
    v6 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  v7 = a1 + a2[6];
  v8 = type metadata accessor for Date(0);
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(a1 + a2[7], v8);
  v9(a1 + a2[8], v8);
  v10 = a1 + a2[9];
  v11 = type metadata accessor for Locale(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  v12 = a1 + a2[12];
  v13 = type metadata accessor for NewsDataModel(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v12, 1, v13))
  {
    if (swift_getEnumCaseMultiPayload(v12) == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v14 = type metadata accessor for News(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v12, v14);
    }
  }
}

uint64_t sub_1001D5DD8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t EnumCaseMultiPayload;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for MoonDetailSelectedDate(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9);
  v12 = type metadata accessor for Date(0);
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  v13(v8, v9, v12);
  v14 = swift_storeEnumTagMultiPayload(v8, v10, EnumCaseMultiPayload);
  ((void (*)(uint64_t, uint64_t, uint64_t, __n128))v13)(a1 + a3[6], a2 + a3[6], v12, v14);
  v13(a1 + a3[7], a2 + a3[7], v12);
  v13(a1 + a3[8], a2 + a3[8], v12);
  v15 = a3[9];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = type metadata accessor for Locale(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_BYTE *)(a1 + v19) = *(_BYTE *)(a2 + v19);
  v20 = a3[12];
  v21 = (uint64_t *)(a1 + v20);
  v22 = (uint64_t *)(a2 + v20);
  v23 = type metadata accessor for NewsDataModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v23))
  {
    v24 = sub_1000BA294(&qword_100BC6B68);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(v22) == 1)
    {
      v25 = *v22;
      *v21 = *v22;
      swift_bridgeObjectRetain(v25);
      v26 = 1;
    }
    else
    {
      v27 = type metadata accessor for News(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v21, v22, v27);
      v26 = 0;
    }
    swift_storeEnumTagMultiPayload(v21, v23, v26);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, v23);
  }
  return a1;
}

uint64_t sub_1001D5FD4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v6 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  if (a1 != a2)
  {
    v7 = a3[5];
    v8 = a2 + v7;
    v9 = a1 + v7;
    sub_1000215BC(a1 + v7, type metadata accessor for MoonDetailSelectedDate);
    v10 = type metadata accessor for MoonDetailSelectedDate(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v8);
    v12 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v8, v12);
    swift_storeEnumTagMultiPayload(v9, v10, EnumCaseMultiPayload);
  }
  v13 = a3[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = type metadata accessor for Date(0);
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 24);
  v17(v14, v15, v16);
  v17(a1 + a3[7], a2 + a3[7], v16);
  v17(a1 + a3[8], a2 + a3[8], v16);
  v18 = a3[9];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = type metadata accessor for Locale(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(v19, v20, v21);
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  v22 = a3[12];
  v23 = (uint64_t *)(a1 + v22);
  v24 = (uint64_t *)(a2 + v22);
  v25 = type metadata accessor for NewsDataModel(0);
  LODWORD(v16) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v25);
  v26 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v25);
  if ((_DWORD)v16)
  {
    if (!v26)
    {
      if (swift_getEnumCaseMultiPayload(v24) == 1)
      {
        v27 = *v24;
        *v23 = *v24;
        swift_bridgeObjectRetain(v27);
        v28 = 1;
      }
      else
      {
        v34 = type metadata accessor for News(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v23, v24, v34);
        v28 = 0;
      }
      swift_storeEnumTagMultiPayload(v23, v25, v28);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v25);
      return a1;
    }
LABEL_9:
    v29 = sub_1000BA294(&qword_100BC6B68);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    return a1;
  }
  if (v26)
  {
    sub_1000215BC((uint64_t)v23, type metadata accessor for NewsDataModel);
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    sub_1000215BC((uint64_t)v23, type metadata accessor for NewsDataModel);
    if (swift_getEnumCaseMultiPayload(v24) == 1)
    {
      v30 = *v24;
      *v23 = *v24;
      swift_bridgeObjectRetain(v30);
      v31 = v23;
      v32 = v25;
      v33 = 1;
    }
    else
    {
      v35 = type metadata accessor for News(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v23, v24, v35);
      v31 = v23;
      v32 = v25;
      v33 = 0;
    }
    swift_storeEnumTagMultiPayload(v31, v32, v33);
  }
  return a1;
}

uint64_t sub_1001D62A4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t EnumCaseMultiPayload;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for MoonDetailSelectedDate(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9);
  v12 = type metadata accessor for Date(0);
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32);
  v13(v8, v9, v12);
  v14 = swift_storeEnumTagMultiPayload(v8, v10, EnumCaseMultiPayload);
  ((void (*)(uint64_t, uint64_t, uint64_t, __n128))v13)(a1 + a3[6], a2 + a3[6], v12, v14);
  v13(a1 + a3[7], a2 + a3[7], v12);
  v13(a1 + a3[8], a2 + a3[8], v12);
  v15 = a3[9];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = type metadata accessor for Locale(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_BYTE *)(a1 + v19) = *(_BYTE *)(a2 + v19);
  v20 = a3[12];
  v21 = (void *)(a1 + v20);
  v22 = (const void *)(a2 + v20);
  v23 = type metadata accessor for NewsDataModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v23))
  {
    v24 = sub_1000BA294(&qword_100BC6B68);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(v22))
    {
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      v25 = type metadata accessor for News(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v21, v22, v25);
      swift_storeEnumTagMultiPayload(v21, v23, 0);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, v23);
  }
  return a1;
}

uint64_t sub_1001D64A0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  const void *v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;

  v6 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  if (a1 != a2)
  {
    v7 = a3[5];
    v8 = a2 + v7;
    v9 = a1 + v7;
    sub_1000215BC(a1 + v7, type metadata accessor for MoonDetailSelectedDate);
    v10 = type metadata accessor for MoonDetailSelectedDate(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v8);
    v12 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v8, v12);
    swift_storeEnumTagMultiPayload(v9, v10, EnumCaseMultiPayload);
  }
  v13 = a3[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = type metadata accessor for Date(0);
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 40);
  v17(v14, v15, v16);
  v17(a1 + a3[7], a2 + a3[7], v16);
  v17(a1 + a3[8], a2 + a3[8], v16);
  v18 = a3[9];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = type metadata accessor for Locale(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(v19, v20, v21);
  v22 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_BYTE *)(a1 + v22) = *(_BYTE *)(a2 + v22);
  v23 = a3[12];
  v24 = (void *)(a1 + v23);
  v25 = (const void *)(a2 + v23);
  v26 = type metadata accessor for NewsDataModel(0);
  LODWORD(v16) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v26);
  v27 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v26);
  if (!(_DWORD)v16)
  {
    if (!v27)
    {
      if (a1 == a2)
        return a1;
      sub_1000215BC((uint64_t)v24, type metadata accessor for NewsDataModel);
      if (!swift_getEnumCaseMultiPayload(v25))
      {
        v31 = type metadata accessor for News(0);
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v24, v25, v31);
        swift_storeEnumTagMultiPayload(v24, v26, 0);
        return a1;
      }
      v28 = *(_QWORD *)(v26 - 8);
      goto LABEL_10;
    }
    sub_1000215BC((uint64_t)v24, type metadata accessor for NewsDataModel);
LABEL_9:
    v28 = *(_QWORD *)(sub_1000BA294(&qword_100BC6B68) - 8);
LABEL_10:
    memcpy(v24, v25, *(_QWORD *)(v28 + 64));
    return a1;
  }
  if (v27)
    goto LABEL_9;
  if (swift_getEnumCaseMultiPayload(v25))
  {
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    v29 = type metadata accessor for News(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v24, v25, v29);
    swift_storeEnumTagMultiPayload(v24, v26, 0);
  }
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v26);
  return a1;
}

uint64_t sub_1001D6754(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001D6760);
}

uint64_t sub_1001D6760(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  unsigned int v16;

  sub_1000988EC();
  sub_100088FF0();
  if (v9)
  {
    v7 = v6;
    v8 = v4;
    return _s7Weather24LocationCompositionStateOwet_0(v8, v3, v7);
  }
  type metadata accessor for MoonDetailSelectedDate(0);
  sub_100088FF0();
  if (v9)
  {
    v7 = v10;
    v11 = a3[5];
LABEL_17:
    v8 = v4 + v11;
    return _s7Weather24LocationCompositionStateOwet_0(v8, v3, v7);
  }
  sub_100098778();
  sub_100088FF0();
  if (v12)
  {
    v7 = v13;
    v11 = a3[6];
    goto LABEL_17;
  }
  sub_1000988FC();
  sub_100088FF0();
  if (v14)
  {
    v7 = v15;
    v11 = a3[9];
    goto LABEL_17;
  }
  if ((_DWORD)v3 != 254)
  {
    v7 = sub_1000BA294(&qword_100BC6B68);
    v11 = a3[12];
    goto LABEL_17;
  }
  v16 = *(unsigned __int8 *)(v4 + a3[11]);
  if (v16 >= 2)
    return ((v16 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_1001D6844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001D6850);
}

void sub_1001D6850(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;

  sub_1000988EC();
  sub_10009D2E8();
  if (v11)
  {
    v9 = v8;
    v10 = v5;
  }
  else
  {
    type metadata accessor for MoonDetailSelectedDate(0);
    sub_10009D2E8();
    if (v11)
    {
      v9 = v12;
      v13 = a4[5];
    }
    else
    {
      sub_100098778();
      sub_10009D2E8();
      if (v14)
      {
        v9 = v15;
        v13 = a4[6];
      }
      else
      {
        sub_1000988FC();
        sub_10009D2E8();
        if (v16)
        {
          v9 = v17;
          v13 = a4[9];
        }
        else
        {
          if (a3 == 254)
          {
            *(_BYTE *)(v5 + a4[11]) = v4 + 1;
            return;
          }
          v9 = sub_1000BA294(&qword_100BC6B68);
          v13 = a4[12];
        }
      }
    }
    v10 = v5 + v13;
  }
  sub_1000987C4(v10, v4, v4, v9);
}

void sub_1001D6918(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD v12[2];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;

  v2 = type metadata accessor for Location(319);
  if (v3 <= 0x3F)
  {
    v12[0] = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for MoonDetailSelectedDate(319);
    if (v5 <= 0x3F)
    {
      v12[1] = *(_QWORD *)(v4 - 8) + 64;
      v6 = type metadata accessor for Date(319);
      if (v7 <= 0x3F)
      {
        v13 = *(_QWORD *)(v6 - 8) + 64;
        v14 = v13;
        v15 = v13;
        v8 = type metadata accessor for Locale(319);
        if (v9 <= 0x3F)
        {
          v16 = *(_QWORD *)(v8 - 8) + 64;
          v17 = &unk_100981250;
          v18 = &unk_100981268;
          sub_1001D6A08(319);
          if (v11 <= 0x3F)
          {
            v19 = *(_QWORD *)(v10 - 8) + 64;
            swift_initStructMetadata(a1, 256, 9, v12, a1 + 16);
          }
        }
      }
    }
  }
}

void sub_1001D6A08(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100BC6C58)
  {
    v2 = type metadata accessor for NewsDataModel(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100BC6C58);
  }
}

uint64_t sub_1001D6A5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BC6B68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001D6AA4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int EnumCaseMultiPayload;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD v129[2];
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;

  sub_1000BA294(&qword_100BC5F50);
  sub_1000B42B0();
  __chkstk_darwin(v2);
  sub_100088FDC();
  v132 = v3;
  sub_1000BA294(&qword_100BC5F48);
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_100088FDC();
  v131 = v5;
  type metadata accessor for LocationPreviewViewState(0);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_100088FDC();
  v130 = v7;
  sub_1000BA294(&qword_100BC5F60);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_100088FDC();
  v135 = v9;
  sub_1000BA294(&qword_100BC5F88);
  sub_1000B42B0();
  __chkstk_darwin(v10);
  sub_100088FDC();
  v136 = v11;
  sub_1000BA294(&qword_100BC5F90);
  sub_1000B42B0();
  __chkstk_darwin(v12);
  sub_100088FDC();
  v134 = v13;
  sub_1000BA294(&qword_100BC5F98);
  sub_1000B42B0();
  __chkstk_darwin(v14);
  sub_100088FDC();
  v133 = v15;
  sub_1000BA294(&qword_100BC5FA0);
  sub_1000B42B0();
  __chkstk_darwin(v16);
  sub_100098728();
  v19 = v18 - v17;
  sub_1000BA294(&qword_100BC5FA8);
  sub_1000B42B0();
  __chkstk_darwin(v20);
  sub_100098728();
  v23 = v22 - v21;
  sub_1000BA294(&qword_100BC5FB0);
  sub_1000B42B0();
  __chkstk_darwin(v24);
  sub_100098728();
  v27 = v26 - v25;
  v28 = type metadata accessor for ModalViewState(0);
  sub_1000B42B0();
  __chkstk_darwin(v29);
  v31 = (char *)v129 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v34 = (char *)v129 - v33;
  __chkstk_darwin(v35);
  v37 = (char *)v129 - v36;
  __chkstk_darwin(v38);
  v40 = (char *)v129 - v39;
  v41 = a1;
  v42 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView;
  sub_1001D7128(v42, (uint64_t)v129 - v39);
  v137 = v28;
  sub_1000BA4FC((uint64_t)v37, v28);
  sub_1000EF360();
  LOBYTE(v28) = v43;
  sub_1000B56C0((uint64_t)v37, type metadata accessor for ModalViewState);
  sub_1000B56C0((uint64_t)v40, type metadata accessor for ModalViewState);
  if ((v28 & 1) != 0)
    return 1;
  v129[1] = v41;
  v45 = v133;
  v46 = v134;
  sub_1001D7128(v42, (uint64_t)v34);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v34);
  sub_1000B56C0((uint64_t)v34, type metadata accessor for ModalViewState);
  if (EnumCaseMultiPayload == 5)
  {
    v48 = sub_1000C08E4();
    v49 = sub_1000BA4D8(v48);
    v52 = sub_1000B4474(v23, v50, v51, v49);
    v53 = sub_1000C3598(v52);
    v56 = sub_1000B4458(v45, v54, v55, v53);
    v57 = v46;
    v60 = sub_1000DCB70(v56, v58, v59, v56);
    v61 = v136;
    _s7Weather24LocationCompositionStateOwst_0(v136, 1, 1, v60);
    v62 = v135;
    v63 = v137;
    sub_1000BA4FC(v135, v137);
    _s7Weather24LocationCompositionStateOwst_0(v62, 0, 1, v63);
    sub_1000C4454();
    v44 = sub_1000DD790(v64, v65, v66, v67, v68, v69, v70, v71, v45, v57, v61, v62, v132, v133, v134, v135, v136, v137, v138,
            v139);
    v72 = sub_1000D1C54(v44, &qword_100BC5F60);
    sub_1000D1104(v72, &qword_100BC5F88);
    sub_100021A3C(v57, &qword_100BC5F90);
    v73 = v45;
  }
  else
  {
    sub_1001D7128(v42, (uint64_t)v31);
    v74 = swift_getEnumCaseMultiPayload(v31);
    v75 = v45;
    v76 = v136;
    if (!v74)
    {
      v102 = (uint64_t)v31;
      v103 = v130;
      sub_1001D716C(v102, v130);
      v104 = sub_1000C08E4();
      v105 = sub_1000BA4D8(v104);
      v108 = sub_1000B4474(v23, v106, v107, v105);
      v109 = sub_1000C3598(v108);
      v112 = sub_1000B4458(v45, v110, v111, v109);
      v115 = sub_1000DCB70(v112, v113, v114, v112);
      sub_1000C132C(v115);
      v116 = type metadata accessor for PreviewLocation(0);
      v129[0] = v23;
      v117 = v131;
      _s7Weather24LocationCompositionStateOwst_0(v131, 1, 1, v116);
      v118 = v76;
      v119 = type metadata accessor for LocationPreviewModalViewState(0);
      v120 = v132;
      swift_storeEnumTagMultiPayload(v132, v119, 9);
      _s7Weather24LocationCompositionStateOwst_0(v120, 0, 1, v119);
      v121 = v27;
      v122 = v135;
      sub_1003804CC(v117, v120, v135);
      v123 = sub_100021A3C(v120, &qword_100BC5F50);
      sub_1000C6568(v123, &qword_100BC5F48);
      v124 = v137;
      swift_storeEnumTagMultiPayload(v122, v137, 0);
      _s7Weather24LocationCompositionStateOwst_0(v122, 0, 1, v124);
      sub_1000C4454();
      v44 = sub_1000DEBAC(0, 3, v121, v75, v19, 0, 0, 0, v75, v46, v118, v122, v132, v133, v134, v135, v136, v137, v138,
              v139);
      v125 = sub_100021A3C(v122, &qword_100BC5F60);
      v126 = sub_1000D1C54(v125, &qword_100BC5F88);
      sub_1000D1104(v126, &qword_100BC5F90);
      sub_100021A3C(v75, &qword_100BC5F98);
      sub_100021A3C(v19, &qword_100BC5FA0);
      v127 = sub_100021A3C(v75, &qword_100BC5FA8);
      sub_1000C6568(v127, &qword_100BC5FB0);
      sub_1000B56C0(v103, type metadata accessor for LocationPreviewViewState);
      return v44;
    }
    sub_1000B56C0((uint64_t)v31, type metadata accessor for ModalViewState);
    v77 = sub_1000C08E4();
    v78 = sub_1000BA4D8(v77);
    v81 = sub_1000B4474(v23, v79, v80, v78);
    v82 = sub_1000C3598(v81);
    v85 = sub_1000B4458(v45, v83, v84, v82);
    v88 = sub_1000DCB70(v85, v86, v87, v85);
    sub_1000C132C(v88);
    v89 = v135;
    v90 = v137;
    sub_1000BA4FC(v135, v137);
    _s7Weather24LocationCompositionStateOwst_0(v89, 0, 1, v90);
    sub_1000C4454();
    v99 = v76;
    v44 = sub_1000DD790(v91, v92, v93, v94, v95, v96, v97, v98, v45, v46, v76, v89, v132, v133, v134, v135, v136, v137, v138,
            v139);
    sub_1000D1C54(v44, &qword_100BC5F60);
    v100 = sub_100021A3C(v99, &qword_100BC5F88);
    sub_1000D1104(v100, &qword_100BC5F90);
    v73 = v45;
  }
  sub_100021A3C(v73, &qword_100BC5F98);
  v101 = sub_100021A3C(v19, &qword_100BC5FA0);
  sub_1000C6568(v101, &qword_100BC5FA8);
  sub_100021A3C(v27, &qword_100BC5FB0);
  return v44;
}

uint64_t sub_1001D7128(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ModalViewState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001D716C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LocationPreviewViewState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for TipViewPlacement()
{
  return &type metadata for TipViewPlacement;
}

unint64_t sub_1001D71CC()
{
  unint64_t result;

  result = qword_100BC6CC8;
  if (!qword_100BC6CC8)
  {
    result = swift_getWitnessTable(&unk_100981454, &type metadata for TipViewPlacement);
    atomic_store(result, (unint64_t *)&qword_100BC6CC8);
  }
  return result;
}

uint64_t sub_1001D7208(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v8;
  char v10;

  if (a1 == 0x6D72657465646E75 && a2 == 0xEC00000064656E69)
  {
    v5 = 0xEC00000064656E69;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6D72657465646E75, 0xEC00000064656E69, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 1953720684 && a2 == 0xE400000000000000)
  {
    v8 = 0xE400000000000000;
    goto LABEL_16;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(1953720684, 0xE400000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
LABEL_16:
    swift_bridgeObjectRelease(v8);
    return 1;
  }
  if (a1 == 0x6E6F697461636F6CLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease(0xE800000000000000);
    return 2;
  }
  else
  {
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F697461636F6CLL, 0xE800000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v10 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1001D735C()
{
  return 3;
}

uint64_t sub_1001D7364(char a1)
{
  if (!a1)
    return 0x6D72657465646E75;
  if (a1 == 1)
    return 1953720684;
  return 0x6E6F697461636F6CLL;
}

uint64_t sub_1001D73BC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease(a2);
  return 1;
}

uint64_t sub_1001D73D8()
{
  return 0;
}

void _s7Weather22LocationSessionTriggerO9hashValueSivg_0(unsigned __int8 a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2);
  Hasher._combine(_:)(a1);
  Hasher._finalize()();
  sub_100098918();
}

uint64_t sub_1001D7420(_QWORD *a1, char a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v30;
  char v31;
  char v32;

  v4 = sub_1000BA294(&qword_100BC6D18);
  v26 = *(_QWORD *)(v4 - 8);
  v27 = v4;
  sub_10009D98C();
  __chkstk_darwin(v5);
  sub_100088FDC();
  v25 = v6;
  v7 = sub_1000BA294(&qword_100BC6D20);
  v23 = *(_QWORD *)(v7 - 8);
  v24 = v7;
  sub_10009D98C();
  __chkstk_darwin(v8);
  sub_100098728();
  v11 = v10 - v9;
  v12 = sub_1000BA294(&qword_100BC6D28);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  sub_100098728();
  v16 = v15 - v14;
  v17 = sub_1000BA294(&qword_100BC6D30);
  v28 = *(_QWORD *)(v17 - 8);
  sub_10009D98C();
  __chkstk_darwin(v18);
  sub_100098694();
  v20 = a1[3];
  v19 = a1[4];
  sub_1000DB418(a1, v20);
  v21 = sub_1001D7C94();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for TipViewPlacement.CodingKeys, &type metadata for TipViewPlacement.CodingKeys, v21, v20, v19);
  if (a2)
  {
    if (a2 == 1)
    {
      v31 = 1;
      sub_1001D7D0C();
      sub_1000BA504((uint64_t)&type metadata for TipViewPlacement.ListCodingKeys, (uint64_t)&v31);
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v11, v24);
    }
    else
    {
      sub_1000B44A4();
      sub_1000BA504((uint64_t)&type metadata for TipViewPlacement.LocationCodingKeys, (uint64_t)&v32);
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
    }
  }
  else
  {
    v30 = 0;
    sub_1001D7D48();
    sub_1000BA504((uint64_t)&type metadata for TipViewPlacement.UndeterminedCodingKeys, (uint64_t)&v30);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v16, v12);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 8))(v2, v17);
}

uint64_t sub_1001D7620(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  char v47;
  char v48;
  char v49;

  v41 = sub_1000BA294(&qword_100BC6CD0);
  v44 = *(_QWORD *)(v41 - 8);
  sub_10009D98C();
  __chkstk_darwin(v3);
  sub_100088FDC();
  v43 = v4;
  v5 = sub_1000BA294(&qword_100BC6CD8);
  v39 = *(_QWORD *)(v5 - 8);
  v40 = v5;
  sub_10009D98C();
  __chkstk_darwin(v6);
  sub_100088FDC();
  v42 = v7;
  v38 = sub_1000BA294(&qword_100BC6CE0);
  v8 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  sub_100098694();
  v9 = sub_1000BA294(&qword_100BC6CE8);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  sub_100098728();
  v13 = v12 - v11;
  v15 = a1[3];
  v14 = a1[4];
  sub_1000DB418(a1, v15);
  v16 = sub_1001D7C94();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for TipViewPlacement.CodingKeys, &type metadata for TipViewPlacement.CodingKeys, v16, v15, v14);
  if (v45)
    goto LABEL_11;
  v36 = v13;
  v37 = v10;
  v46 = a1;
  v17 = KeyedDecodingContainer.allKeys.getter(v9);
  v18 = v17;
  v19 = *(_QWORD *)(v17 + 16);
  if (!v19)
  {
LABEL_8:
    v26 = type metadata accessor for DecodingError(0);
    swift_allocError(v26, &protocol witness table for DecodingError, 0, 0);
    v28 = v27;
    sub_1000BA294(&qword_100BC6CF8);
    *v28 = &type metadata for TipViewPlacement;
    v29 = KeyedDecodingContainer.codingPath.getter(v9);
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)(v29, 0xD00000000000002BLL, 0x80000001009F2600, 0);
    v30 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v28, enum case for DecodingError.typeMismatch(_:), v26);
    swift_willThrow(v30, v31);
    swift_unknownObjectRelease(v18);
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v36, v9);
    a1 = v46;
LABEL_11:
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
    return v9;
  }
  v20 = v9;
  v9 = *(unsigned __int8 *)(v17 + 32);
  v21 = sub_10055FF58(1, v19, v17, v17 + 32, 0, (2 * v19) | 1);
  v23 = v22;
  v25 = v24;
  swift_bridgeObjectRelease();
  v18 = v21;
  if (v23 != v25 >> 1)
  {
    v9 = v20;
    goto LABEL_8;
  }
  if ((_DWORD)v9)
  {
    if ((_DWORD)v9 == 1)
    {
      v48 = 1;
      sub_1001D7D0C();
      sub_100098904((uint64_t)&type metadata for TipViewPlacement.ListCodingKeys, (uint64_t)&v48);
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v42, v40);
    }
    else
    {
      sub_1000B44A4();
      sub_100098904((uint64_t)&type metadata for TipViewPlacement.LocationCodingKeys, (uint64_t)&v49);
      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v43, v41);
    }
    v33 = v21;
  }
  else
  {
    v47 = 0;
    sub_1001D7D48();
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for TipViewPlacement.UndeterminedCodingKeys, &v47, v20, &type metadata for TipViewPlacement.UndeterminedCodingKeys);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v1, v38);
    v33 = v21;
  }
  swift_unknownObjectRelease(v33);
  v34 = sub_1000B4490();
  v35(v34);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v46);
  return v9;
}

void sub_1001D79C4()
{
  unsigned __int8 *v0;

  _s7Weather22LocationSessionTriggerO9hashValueSivg_0(*v0);
}

uint64_t sub_1001D79E0()
{
  char *v0;

  return sub_1001D7364(*v0);
}

uint64_t sub_1001D79E8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1001D7208(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1001D7A0C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1001D735C();
  *a1 = result;
  return result;
}

uint64_t sub_1001D7A30(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001D7C94();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001D7A58(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001D7C94();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001D7A84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1001D73BC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1001D7AAC()
{
  return static HeaderLineLimitKey.defaultValue.getter();
}

uint64_t sub_1001D7AC4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = static LocationSearchEntityFromStringResolver.__derived_struct_equals(_:_:)();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1001D7AEC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001D7D0C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001D7B14(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001D7D0C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001D7B3C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001D7CD0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001D7B64(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001D7CD0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001D7B8C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001D7D48();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001D7BB4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001D7D48();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001D7BDC()
{
  unsigned __int8 *v0;
  Swift::UInt v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2);
  Hasher._combine(_:)(v1);
  Hasher._finalize()();
  sub_100098918();
}

uint64_t sub_1001D7C14@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1001D7620(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1001D7C3C(_QWORD *a1)
{
  char *v1;

  return sub_1001D7420(a1, *v1);
}

void sub_1001D7C54(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  char v4;

  sub_10068FC8C(a1);
  if (!v2)
    *a2 = v4;
}

void sub_1001D7C7C(uint64_t a1)
{
  WeatherChange.Direction.write(to:)(a1);
}

unint64_t sub_1001D7C94()
{
  unint64_t result;

  result = qword_100BC6CF0;
  if (!qword_100BC6CF0)
  {
    result = swift_getWitnessTable(&unk_10098176C, &type metadata for TipViewPlacement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BC6CF0);
  }
  return result;
}

unint64_t sub_1001D7CD0()
{
  unint64_t result;

  result = qword_100BC6D00;
  if (!qword_100BC6D00)
  {
    result = swift_getWitnessTable(&unk_10098171C, &type metadata for TipViewPlacement.LocationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BC6D00);
  }
  return result;
}

unint64_t sub_1001D7D0C()
{
  unint64_t result;

  result = qword_100BC6D08;
  if (!qword_100BC6D08)
  {
    result = swift_getWitnessTable(&unk_1009816CC, &type metadata for TipViewPlacement.ListCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BC6D08);
  }
  return result;
}

unint64_t sub_1001D7D48()
{
  unint64_t result;

  result = qword_100BC6D10;
  if (!qword_100BC6D10)
  {
    result = swift_getWitnessTable(&unk_10098167C, &type metadata for TipViewPlacement.UndeterminedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BC6D10);
  }
  return result;
}

uint64_t _s7Weather16TipViewPlacementOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1001D7DD0 + 4 * byte_100981355[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1001D7E04 + 4 * byte_100981350[v4]))();
}

uint64_t sub_1001D7E04(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001D7E0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001D7E14);
  return result;
}

uint64_t sub_1001D7E20(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001D7E28);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1001D7E2C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001D7E34(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TipViewPlacement.CodingKeys()
{
  return &type metadata for TipViewPlacement.CodingKeys;
}

ValueMetadata *type metadata accessor for TipViewPlacement.UndeterminedCodingKeys()
{
  return &type metadata for TipViewPlacement.UndeterminedCodingKeys;
}

ValueMetadata *type metadata accessor for TipViewPlacement.ListCodingKeys()
{
  return &type metadata for TipViewPlacement.ListCodingKeys;
}

ValueMetadata *type metadata accessor for TipViewPlacement.LocationCodingKeys()
{
  return &type metadata for TipViewPlacement.LocationCodingKeys;
}

unint64_t sub_1001D7E84()
{
  unint64_t result;

  result = qword_100BC6D38;
  if (!qword_100BC6D38)
  {
    result = swift_getWitnessTable(&unk_100981654, &type metadata for TipViewPlacement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BC6D38);
  }
  return result;
}

unint64_t sub_1001D7EC4()
{
  unint64_t result;

  result = qword_100BC6D40;
  if (!qword_100BC6D40)
  {
    result = swift_getWitnessTable(&unk_100981574, &type metadata for TipViewPlacement.UndeterminedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BC6D40);
  }
  return result;
}

unint64_t sub_1001D7F04()
{
  unint64_t result;

  result = qword_100BC6D48;
  if (!qword_100BC6D48)
  {
    result = swift_getWitnessTable(&unk_10098159C, &type metadata for TipViewPlacement.UndeterminedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BC6D48);
  }
  return result;
}

unint64_t sub_1001D7F44()
{
  unint64_t result;

  result = qword_100BC6D50;
  if (!qword_100BC6D50)
  {
    result = swift_getWitnessTable(&unk_100981524, &type metadata for TipViewPlacement.ListCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BC6D50);
  }
  return result;
}

unint64_t sub_1001D7F84()
{
  unint64_t result;

  result = qword_100BC6D58;
  if (!qword_100BC6D58)
  {
    result = swift_getWitnessTable(&unk_10098154C, &type metadata for TipViewPlacement.ListCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BC6D58);
  }
  return result;
}

unint64_t sub_1001D7FC4()
{
  unint64_t result;

  result = qword_100BC6D60;
  if (!qword_100BC6D60)
  {
    result = swift_getWitnessTable(&unk_1009814D4, &type metadata for TipViewPlacement.LocationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BC6D60);
  }
  return result;
}

unint64_t sub_1001D8004()
{
  unint64_t result;

  result = qword_100BC6D68;
  if (!qword_100BC6D68)
  {
    result = swift_getWitnessTable(&unk_1009814FC, &type metadata for TipViewPlacement.LocationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BC6D68);
  }
  return result;
}

unint64_t sub_1001D8044()
{
  unint64_t result;

  result = qword_100BC6D70;
  if (!qword_100BC6D70)
  {
    result = swift_getWitnessTable(&unk_1009815C4, &type metadata for TipViewPlacement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BC6D70);
  }
  return result;
}

unint64_t sub_1001D8084()
{
  unint64_t result;

  result = qword_100BC6D78;
  if (!qword_100BC6D78)
  {
    result = swift_getWitnessTable(&unk_1009815EC, &type metadata for TipViewPlacement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BC6D78);
  }
  return result;
}

double sub_1001D80D8(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;

  v3 = a2;
  if (a2)
  {
    if (a2 == 1)
      v4 = 0x72616C75676572;
    else
      v4 = 0x6669636570736E75;
    if (v3 == 1)
      v2 = 0xE700000000000000;
    else
      v2 = 0xEB00000000646569;
  }
  else
  {
    sub_1001FBA8C();
  }
  sub_1000D0C18(a1, v4);
  return sub_1000BD200(v2);
}

void sub_1001D8144()
{
  sub_1001FBA74();
  __asm { BR              X10 }
}

double sub_1001D8174(uint64_t a1)
{
  sub_1000D0C18(a1, 0x7469617274726F70);
  return sub_1000BD200(0xE800000000000000);
}

void sub_1001D81E0(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

double sub_1001D8220(uint64_t a1)
{
  sub_1000D0C18(a1, 0x7261646E6F636573);
  return sub_1000BD200(0xE900000000000079);
}

double sub_1001D82D8(uint64_t a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  uint64_t v4;

  v2 = (a2 & 1) == 0;
  if ((a2 & 1) != 0)
    v3 = 0x74736554786676;
  else
    v3 = 0x6E6F697461636F6CLL;
  if (v2)
    v4 = 0xEE00726577656956;
  else
    v4 = 0xE700000000000000;
  sub_1000D0C18(a1, v3);
  return sub_1000BD200(v4);
}

double sub_1001D8334(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;

  v3 = a2;
  if (a2)
  {
    if (a2 == 1)
      v4 = 0x6E6F697461636F6CLL;
    else
      v4 = 0x74736554786676;
    if (v3 == 1)
      v2 = 0xEE00726577656956;
    else
      v2 = 0xE700000000000000;
  }
  else
  {
    sub_1001FB688();
  }
  sub_1000D0C18(a1, v4);
  return sub_1000BD200(v2);
}

double sub_1001D83A0(uint64_t a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  uint64_t v4;

  v2 = (a2 & 1) == 0;
  if ((a2 & 1) != 0)
    v3 = 0x6552686372616573;
  else
    v3 = 1701736302;
  if (v2)
    v4 = 0xE400000000000000;
  else
    v4 = 0xED000073746C7573;
  sub_1000D0C18(a1, v3);
  return sub_1000BD200(v4);
}

uint64_t sub_1001D83F4(uint64_t a1)
{
  return String.hash(into:)(a1, 1953720684, 0xE400000000000000);
}

double sub_1001D8404(uint64_t a1, char a2)
{
  uint64_t v2;
  double result;

  if ((a2 & 1) != 0)
    v2 = 1953720684;
  else
    v2 = 1701869940;
  String.hash(into:)(a1, v2, 0xE400000000000000);
  *(_QWORD *)&result = swift_bridgeObjectRelease(0xE400000000000000).n128_u64[0];
  return result;
}

void sub_1001D8438()
{
  sub_10009F780();
  __asm { BR              X10 }
}

double sub_1001D8460(uint64_t a1)
{
  sub_1000D0C18(a1, 0x6465776F6C6C61);
  return sub_1000BD200(0xE700000000000000);
}

double sub_1001D849C(uint64_t a1, uint64_t a2)
{
  return sub_1001D90A0(a1, a2, (uint64_t (*)(uint64_t))sub_100381C5C);
}

double sub_1001D84A8(uint64_t a1, uint64_t a2)
{
  return sub_1001D90A0(a1, a2, (uint64_t (*)(uint64_t))sub_100381A0C);
}

void sub_1001D84B4()
{
  sub_10009F780();
  __asm { BR              X10 }
}

double sub_1001D84DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1000F4AFC();
  sub_1000D0C18(v1, v2);
  return sub_1000BD200(v0);
}

uint64_t sub_1001D8538(uint64_t a1)
{
  return sub_1001FB7E0(a1, 0x6E6F697469736F70);
}

void sub_1001D854C()
{
  sub_1001FB7BC();
  __asm { BR              X10 }
}

double sub_1001D857C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_10011DDF4();
  sub_1000D0C18(v1, v2);
  return sub_1000BD200(v0);
}

double sub_1001D85B8(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  if (a2)
  {
    sub_10009EC94();
    sub_1001FB7A0();
    if (v6)
      v7 = v4;
    else
      v7 = v5;
  }
  else
  {
    v7 = 0xEE00726564616548;
    sub_100095274();
  }
  sub_1000D0C18(v2, v3);
  return sub_1000BD200(v7);
}

void sub_1001D8608()
{
  sub_1001FBA30();
  __asm { BR              X10 }
}

double sub_1001D8630()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1001FB698();
  sub_1000D0C18(v1, v2);
  return sub_1000BD200(v0);
}

void sub_1001D8678(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

double sub_1001D86BC(uint64_t a1)
{
  sub_1000D0C18(a1, 0x79746964696D7568);
  return sub_1000BD200(0xE800000000000000);
}

double sub_1001D8730(uint64_t a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  uint64_t v4;

  v2 = (a2 & 1) == 0;
  if ((a2 & 1) != 0)
    v3 = 0x656369746F6ELL;
  else
    v3 = 0x616D7269666E6F63;
  if (v2)
    v4 = 0xEC0000006E6F6974;
  else
    v4 = 0xE600000000000000;
  sub_1000D0C18(a1, v3);
  return sub_1000BD200(v4);
}

double sub_1001D8784(uint64_t a1, uint64_t a2)
{
  return sub_1001D90A0(a1, a2, (uint64_t (*)(uint64_t))sub_100103744);
}

double sub_1001D8790(uint64_t a1, uint64_t a2)
{
  return sub_1001D90A0(a1, a2, (uint64_t (*)(uint64_t))sub_100281014);
}

void sub_1001D879C(uint64_t a1, char a2)
{
  Hasher._combine(_:)(qword_100988888[a2]);
  sub_10004A298();
}

void sub_1001D87C8(uint64_t a1, char a2)
{
  Swift::UInt64 v2;

  if ((a2 & 1) != 0)
    v2 = 0x4090000000000000;
  else
    v2 = 0;
  Hasher._combine(_:)(v2);
  sub_10004A298();
}

void sub_1001D87F0(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

double sub_1001D8838(uint64_t a1)
{
  uint64_t v1;

  sub_1000D0C18(a1, 0x656D614E79746963);
  return sub_1000BD200(v1);
}

void sub_1001D8888(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

double sub_1001D88CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1000F4AFC();
  sub_1000D0C18(v1, v2);
  return sub_1000BD200(v0);
}

double sub_1001D893C(uint64_t a1, uint64_t a2)
{
  return sub_1001D90A0(a1, a2, (uint64_t (*)(uint64_t))sub_1007B2D60);
}

double sub_1001D8948(uint64_t a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  uint64_t v4;

  v2 = (a2 & 1) == 0;
  if ((a2 & 1) != 0)
    v3 = 0x736C6961746564;
  else
    v3 = 7368564;
  if (v2)
    v4 = 0xE300000000000000;
  else
    v4 = 0xE700000000000000;
  sub_1000D0C18(a1, v3);
  return sub_1000BD200(v4);
}

void sub_1001D8990(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

double sub_1001D89CC(uint64_t a1)
{
  sub_1000D0C18(a1, 0x7469577974706D65);
  return sub_1000BD200(0xED0000656D614E68);
}

double sub_1001D8A30(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  if (a2)
  {
    sub_1001FB0D8();
    if (v7)
      v2 = v5;
    else
      v2 = v6;
  }
  else
  {
    sub_1001FB6E4();
  }
  sub_1000D0C18(v3, v4);
  return sub_1000BD200(v2);
}

double sub_1001D8A6C(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;

  v2 = 0xEA0000000000646ELL;
  v3 = a2;
  if (a2)
  {
    if (a2 == 1)
      v4 = 0x756F726765726F66;
    else
      v4 = 0x6E6968636E75616CLL;
    if (v3 != 1)
      v2 = 0xE900000000000067;
  }
  else
  {
    sub_1001FBB9C();
  }
  sub_1000D0C18(a1, v4);
  return sub_1000BD200(v2);
}

void sub_1001D8AD4()
{
  sub_1001FBA30();
  __asm { BR              X10 }
}

double sub_1001D8AFC(uint64_t a1)
{
  sub_1000D0C18(a1, 0x72616C756C6C6563);
  return sub_1000BD200(0xE800000000000000);
}

void sub_1001D8B3C(uint64_t a1, char a2)
{
  Hasher._combine(_:)(qword_1009888A0[a2]);
  sub_10004A298();
}

double sub_1001D8B68(uint64_t a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  uint64_t v4;

  v2 = (a2 & 1) == 0;
  if ((a2 & 1) != 0)
    v3 = 0x746E657261707061;
  else
    v3 = 0x6C6175746361;
  if (v2)
    v4 = 0xE600000000000000;
  else
    v4 = 0xE800000000000000;
  sub_1000D0C18(a1, v3);
  return sub_1000BD200(v4);
}

void sub_1001D8BB4()
{
  sub_1001FBBC4();
  __asm { BR              X10 }
}

double sub_1001D8BE4(uint64_t a1)
{
  sub_1000D0C18(a1, 0x676E6964616F6CLL);
  return sub_1000BD200(0xE700000000000000);
}

void sub_1001D8C50()
{
  sub_1001FBA48();
  __asm { BR              X10 }
}

double sub_1001D8C78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1001FBBC4();
  sub_1000D0C18(v1, v2);
  return sub_1000BD200(v0);
}

void sub_1001D8CB0()
{
  sub_100095274();
  __asm { BR              X10 }
}

double sub_1001D8CE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1001FB2D0();
  sub_1000D0C18(v1, v2);
  return sub_1000BD200(v0);
}

void sub_1001D8D10()
{
  sub_1001FBA48();
  __asm { BR              X10 }
}

double sub_1001D8D38()
{
  uint64_t v0;
  uint64_t v1;

  sub_100095274();
  sub_1000D0C18(v0, v1);
  return sub_1000BD200(0xE800000000000000);
}

double sub_1001D8D7C(uint64_t a1, uint64_t a2)
{
  return sub_1001D90A0(a1, a2, (uint64_t (*)(uint64_t))sub_1004142A4);
}

double sub_1001D8D88(uint64_t a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) != 0)
    v2 = 0xEF77656976657250;
  else
    v2 = 0xEE00726577656956;
  sub_1000D0C18(a1, 0x6E6F697461636F6CLL);
  return sub_1000BD200(v2);
}

void sub_1001D8DDC(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

double sub_1001D8E18(uint64_t a1)
{
  sub_1000D0C18(a1, 0x656C746974627573);
  return sub_1000BD200(0xE800000000000000);
}

void sub_1001D8E88()
{
  sub_1001FB390();
  __asm { BR              X10 }
}

double sub_1001D8EB0()
{
  uint64_t v0;
  uint64_t v1;

  sub_100095274();
  sub_1000D0C18(v0, v1);
  return sub_1000BD200(0xEF77656976657250);
}

double sub_1001D8F54(uint64_t a1, uint64_t a2)
{
  return sub_1001D90A0(a1, a2, (uint64_t (*)(uint64_t))sub_100731564);
}

double sub_1001D8F60(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;

  v3 = a2;
  if (a2)
  {
    if (a2 == 1)
      v4 = 0xD00000000000001FLL;
    else
      v4 = 0xD00000000000001ELL;
    if (v3 == 1)
      v2 = 0x80000001009EF9E0;
    else
      v2 = 0x80000001009EFA00;
  }
  else
  {
    sub_1000F4AFC();
  }
  sub_1000D0C18(a1, v4);
  return sub_1000BD200(v2);
}

double sub_1001D8FCC(uint64_t a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  uint64_t v4;

  v2 = (a2 & 1) == 0;
  if ((a2 & 1) != 0)
    v3 = 0x656E696C66666FLL;
  else
    v3 = 0x6C62616863616572;
  if (v2)
    v4 = 0xE900000000000065;
  else
    v4 = 0xE700000000000000;
  sub_1000D0C18(a1, v3);
  return sub_1000BD200(v4);
}

double sub_1001D9020(uint64_t a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  uint64_t v4;

  v2 = (a2 & 1) == 0;
  if ((a2 & 1) != 0)
    v3 = 0x6361667265746E69;
  else
    v3 = 1701869940;
  if (v2)
    v4 = 0xE400000000000000;
  else
    v4 = 0xE900000000000065;
  sub_1000D0C18(a1, v3);
  return sub_1000BD200(v4);
}

void sub_1001D906C(uint64_t a1, unsigned __int8 a2)
{
  Hasher._combine(_:)(2 * a2 + 2);
  sub_10004A298();
}

double sub_1001D9094(uint64_t a1, uint64_t a2)
{
  return sub_1001D90A0(a1, a2, (uint64_t (*)(uint64_t))DetailKind.rawValue.getter);
}

double sub_1001D90A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a3(a2);
  v6 = v5;
  String.hash(into:)(a1, v4, v5);
  return sub_1000BD200(v6);
}

uint64_t sub_1001D90DC(uint64_t a1)
{
  return sub_1001FB7E0(a1, 0x343230326C6C6166);
}

void sub_1001D90F0(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

double sub_1001D913C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1001FB7BC();
  sub_1000D0C18(v1, v2);
  return sub_1000BD200(v0);
}

double sub_1001D9198(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  if (a2)
  {
    sub_1001FB130();
    if (v7)
      v2 = v5;
    else
      v2 = v6;
  }
  else
  {
    sub_1001FB3A8();
  }
  sub_1000D0C18(v3, v4);
  return sub_1000BD200(v2);
}

void sub_1001D91D4(int a1, Swift::UInt a2)
{
  Hasher._combine(_:)(a2);
  sub_10004A298();
}

double sub_1001D91F4(uint64_t a1, char a2)
{
  uint64_t v2;
  double result;

  if ((a2 & 1) != 0)
    v2 = 0x6567617373656DLL;
  else
    v2 = 0x746E65746E6F63;
  String.hash(into:)(a1, v2, 0xE700000000000000);
  *(_QWORD *)&result = swift_bridgeObjectRelease(0xE700000000000000).n128_u64[0];
  return result;
}

double sub_1001D9238(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  if (a2)
  {
    sub_1001FB784();
    if (v7)
      v2 = v5;
    else
      v2 = v6;
  }
  else
  {
    sub_1001FB688();
  }
  sub_1000D0C18(v3, v4);
  return sub_1000BD200(v2);
}

void sub_1001D9290()
{
  sub_1001FB390();
  __asm { BR              X10 }
}

double sub_1001D92B8(uint64_t a1)
{
  sub_1000D0C18(a1, 0x696152746867696CLL);
  return sub_1000BD200(0xE90000000000006ELL);
}

double sub_1001D93A4(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;

  v3 = a2;
  if (a2)
  {
    if (a2 == 1)
      v4 = 0x616365726F467361;
    else
      v4 = 0x7265646C6F63;
    if (v3 == 1)
      v2 = 0xEA00000000007473;
    else
      v2 = 0xE600000000000000;
  }
  else
  {
    sub_1001FBCC4();
  }
  sub_1000D0C18(a1, v4);
  return sub_1000BD200(v2);
}

double sub_1001D9404(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;

  v3 = a2;
  if (a2)
  {
    if (a2 == 1)
      v4 = 0x616365726F467361;
    else
      v4 = 0xD000000000000011;
    if (v3 == 1)
      v2 = 0xEA00000000007473;
    else
      v2 = 0x80000001009F03F0;
  }
  else
  {
    sub_1000F4AFC();
  }
  sub_1000D0C18(a1, v4);
  return sub_1000BD200(v2);
}

void sub_1001D9478(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

double sub_1001D94B8(uint64_t a1)
{
  sub_1000D0C18(a1, 0x6E696E746867696CLL);
  return sub_1000BD200(0xE900000000000067);
}

void sub_1001D9524()
{
  sub_1001FB390();
  __asm { BR              X10 }
}

double sub_1001D954C(uint64_t a1)
{
  sub_1000D0C18(a1, 0x796C74726170);
  return sub_1000BD200(0xE600000000000000);
}

void sub_1001D9590(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

double sub_1001D95D0(uint64_t a1)
{
  sub_1000D0C18(a1, 0x617361656C706E75);
  return sub_1000BD200(0xEA0000000000746ELL);
}

double sub_1001D9660(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  if (a2)
  {
    sub_10009C1E4();
    if (v8)
    {
      v4 = v7;
      v2 = v5;
    }
    else
    {
      v2 = v6;
    }
  }
  else
  {
    sub_1000F4AFC();
  }
  sub_1000D0C18(v3, v4);
  return sub_1000BD200(v2);
}

void sub_1001D96BC(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

double sub_1001D96F8(uint64_t a1)
{
  sub_1000D0C18(a1, 0x6C6C616D73);
  return sub_1000BD200(0xE500000000000000);
}

void sub_1001D97C4(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

double sub_1001D9804(uint64_t a1)
{
  sub_1000D0C18(a1, 0x7261656C63);
  return sub_1000BD200(0xE500000000000000);
}

void sub_1001D98A8(uint64_t a1, uint64_t a2)
{
  sub_1001DA324(a1, a2, (uint64_t (*)(uint64_t))sub_1004EB598);
}

void sub_1001D98B4(uint64_t a1, uint64_t a2)
{
  sub_1001DA324(a1, a2, (uint64_t (*)(uint64_t))sub_1004FDDF8);
}

void sub_1001D98C4(uint64_t a1, char a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;
  unint64_t v8;
  _BYTE v9[72];

  v3 = 0xD000000000000010;
  sub_10009E564(a1);
  if (a2)
  {
    sub_10009C1E4();
    if (v7)
    {
      v3 = v6;
      v8 = v4;
    }
    else
    {
      v8 = v5;
    }
  }
  else
  {
    v8 = 0x80000001009F0390;
  }
  String.hash(into:)(v9, v3, v8);
  sub_1000986C4();
  sub_10007A148();
  sub_100098918();
}

void sub_1001D993C(uint64_t a1, uint64_t a2)
{
  sub_1001DA324(a1, a2, (uint64_t (*)(uint64_t))sub_1004A8BE0);
}

void sub_1001D9948(uint64_t a1, uint64_t a2)
{
  sub_1001DA130(a1, a2, (void (*)(_BYTE *, uint64_t))sub_1001D9524);
}

void sub_1001D9954(uint64_t a1, uint64_t a2)
{
  sub_1001DA324(a1, a2, (uint64_t (*)(uint64_t))sub_1004A8B18);
}

void sub_1001D9960(uint64_t a1, char a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  _BYTE v6[72];

  sub_10009E564(a1);
  if (a2)
  {
    sub_10009C1E4();
    if (v4)
      v5 = v3;
    else
      v5 = 0xD000000000000011;
  }
  else
  {
    sub_1000F4AFC();
  }
  sub_1000D0C18((uint64_t)v6, v5);
  sub_1000986E8();
  sub_10007A148();
  sub_100098918();
}

void sub_1001D99D0(uint64_t a1)
{
  char v1;
  uint64_t v2;
  _BYTE v3[72];

  sub_1000ED238(a1);
  if (v1)
  {
    if (v1 == 1)
      v2 = 0x616365726F467361;
    else
      v2 = 0x7265646C6F63;
  }
  else
  {
    sub_1001FBCC4();
  }
  sub_1000D0C18((uint64_t)v3, v2);
  sub_1000986E8();
  sub_10007A148();
  sub_100098918();
}

void sub_1001D9A40(uint64_t a1, uint64_t a2)
{
  sub_1001DA324(a1, a2, (uint64_t (*)(uint64_t))sub_1004A8828);
}

void sub_1001D9A4C(uint64_t a1)
{
  char v1;
  uint64_t v2;
  _BYTE v3[72];

  sub_1000ED238(a1);
  if (v1)
    sub_1001FB784();
  else
    sub_1001FB688();
  sub_1000D0C18((uint64_t)v3, v2);
  sub_1000986E8();
  sub_10007A148();
  sub_100098918();
}

void sub_1001D9AB4(uint64_t a1)
{
  char v1;
  uint64_t v2;
  _BYTE v3[72];

  sub_1000ED238(a1);
  if ((v1 & 1) != 0)
    v2 = 0x6567617373656DLL;
  else
    v2 = 0x746E65746E6F63;
  String.hash(into:)(v3, v2, 0xE700000000000000);
  swift_bridgeObjectRelease();
  sub_10007A148();
  sub_100098918();
}

void sub_1001D9B10(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  char v10;

  v1 = sub_10009E564(a1);
  sub_10004A324(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10);
  sub_10007A148();
  sub_100098918();
}

void sub_1001D9B38(uint64_t a1)
{
  char v1;
  uint64_t v2;
  _BYTE v3[72];

  sub_1000ED238(a1);
  if (v1)
    sub_1001FB130();
  else
    sub_1001FB3A8();
  sub_1000D0C18((uint64_t)v3, v2);
  sub_1000986E8();
  sub_10007A148();
  sub_100098918();
}

void sub_1001D9B84(uint64_t a1, uint64_t a2)
{
  sub_1001DA324(a1, a2, (uint64_t (*)(uint64_t))sub_1008259C4);
}

void sub_1001D9B90(uint64_t a1)
{
  sub_1001FB7D8(a1, 0x343230326C6C6166);
}

void sub_1001D9BA4(uint64_t a1, uint64_t a2)
{
  sub_1001DA324(a1, a2, (uint64_t (*)(uint64_t))DetailKind.rawValue.getter);
}

void sub_1001D9BB0(uint64_t a1, unsigned __int8 a2)
{
  sub_10009E564(a1);
  Hasher._combine(_:)(2 * a2 + 2);
  sub_10007A148();
  sub_100098918();
}

void sub_1001D9BE8(uint64_t a1)
{
  char v1;
  uint64_t v2;
  _BYTE v3[72];

  sub_1000ED238(a1);
  if ((v1 & 1) != 0)
    v2 = 0x6361667265746E69;
  else
    v2 = 1701869940;
  sub_1000D0C18((uint64_t)v3, v2);
  sub_1000986E8();
  sub_10007A148();
  sub_100098918();
}

void sub_1001D9C44(uint64_t a1)
{
  char v1;
  uint64_t v2;
  _BYTE v3[72];

  sub_1000ED238(a1);
  if ((v1 & 1) != 0)
    v2 = 0x656E696C66666FLL;
  else
    v2 = 0x6C62616863616572;
  sub_1000D0C18((uint64_t)v3, v2);
  sub_1000986E8();
  sub_10007A148();
  sub_100098918();
}

void sub_1001D9CA8(uint64_t a1, char a2)
{
  uint64_t v3;
  _BYTE v4[72];

  sub_10009E564(a1);
  if (a2)
  {
    if (a2 == 1)
      v3 = 0xD00000000000001FLL;
    else
      v3 = 0xD00000000000001ELL;
  }
  else
  {
    sub_1000F4AFC();
  }
  sub_1000D0C18((uint64_t)v4, v3);
  sub_1000986E8();
  sub_10007A148();
  sub_100098918();
}

void sub_1001D9D28(uint64_t a1, uint64_t a2)
{
  sub_1001DA324(a1, a2, (uint64_t (*)(uint64_t))sub_100731564);
}

void sub_1001D9D34(uint64_t a1, uint64_t a2)
{
  sub_1001DA324(a1, a2, (uint64_t (*)(uint64_t))sub_100731734);
}

void sub_1001D9D40(uint64_t a1, uint64_t a2)
{
  sub_1001DA324(a1, a2, (uint64_t (*)(uint64_t))sub_100763D7C);
}

void sub_1001D9D4C(uint64_t a1)
{
  _BYTE v1[72];

  sub_1000ED238(a1);
  sub_1000D0C18((uint64_t)v1, 0x6E6F697461636F6CLL);
  sub_1000986E8();
  sub_10007A148();
  sub_100098918();
}

void sub_1001D9DB0(uint64_t a1, uint64_t a2)
{
  sub_1001DA324(a1, a2, (uint64_t (*)(uint64_t))sub_1004142A4);
}

void sub_1001D9DBC(uint64_t a1, uint64_t a2)
{
  sub_1001DA324(a1, a2, (uint64_t (*)(uint64_t))sub_100630F8C);
}

void sub_1001D9DC8(uint64_t a1, uint64_t a2)
{
  sub_1001DA130(a1, a2, (void (*)(_BYTE *, uint64_t))sub_1001D8CB0);
}

void sub_1001D9DD4(uint64_t a1, uint64_t a2)
{
  sub_1001DA130(a1, a2, (void (*)(_BYTE *, uint64_t))sub_1001D8C50);
}

void sub_1001D9DE0(uint64_t a1, uint64_t a2)
{
  sub_1001DA324(a1, a2, (uint64_t (*)(uint64_t))sub_100269170);
}

void sub_1001D9DEC(uint64_t a1)
{
  char v1;
  uint64_t v2;
  _BYTE v3[72];

  sub_1000ED238(a1);
  if ((v1 & 1) != 0)
    v2 = 0x746E657261707061;
  else
    v2 = 0x6C6175746361;
  sub_1000D0C18((uint64_t)v3, v2);
  sub_1000986E8();
  sub_10007A148();
  sub_100098918();
}

void sub_1001D9E48(uint64_t a1, uint64_t a2)
{
  sub_1001DA130(a1, a2, (void (*)(_BYTE *, uint64_t))sub_1001D8B3C);
}

void sub_1001D9E54(uint64_t a1, uint64_t a2)
{
  sub_1001DA130(a1, a2, (void (*)(_BYTE *, uint64_t))sub_1001D8AD4);
}

void sub_1001D9E60(uint64_t a1, char a2)
{
  uint64_t v3;
  _BYTE v4[72];

  sub_10009E564(a1);
  if (a2)
  {
    if (a2 == 1)
      v3 = 0x756F726765726F66;
    else
      v3 = 0x6E6968636E75616CLL;
  }
  else
  {
    sub_1001FBB9C();
  }
  sub_1000D0C18((uint64_t)v4, v3);
  sub_1000986E8();
  sub_10007A148();
  sub_100098918();
}

void sub_1001D9EDC(uint64_t a1)
{
  char v1;
  uint64_t v2;
  _BYTE v3[72];

  sub_1000ED238(a1);
  if (v1)
    sub_1001FB0D8();
  else
    sub_1001FB6E4();
  sub_1000D0C18((uint64_t)v3, v2);
  sub_1000986E8();
  sub_10007A148();
  sub_100098918();
}

void sub_1001D9F28(uint64_t a1, uint64_t a2)
{
  sub_1001DA130(a1, a2, (void (*)(_BYTE *, uint64_t))sub_1001D8990);
}

void sub_1001D9F34(uint64_t a1)
{
  char v1;
  uint64_t v2;
  _BYTE v3[72];

  sub_1000ED238(a1);
  if ((v1 & 1) != 0)
    v2 = 0x736C6961746564;
  else
    v2 = 7368564;
  sub_1000D0C18((uint64_t)v3, v2);
  sub_1000986E8();
  sub_10007A148();
  sub_100098918();
}

void sub_1001D9F8C(uint64_t a1, uint64_t a2)
{
  sub_1001DA324(a1, a2, (uint64_t (*)(uint64_t))sub_1007B2D60);
}

void sub_1001D9F98(uint64_t a1, uint64_t a2)
{
  sub_1001DA324(a1, a2, (uint64_t (*)(uint64_t))sub_10015F3E0);
}

void sub_1001D9FA4(uint64_t a1, uint64_t a2)
{
  sub_1001DA324(a1, a2, (uint64_t (*)(uint64_t))sub_1002CA6E4);
}

void sub_1001D9FB0(uint64_t a1, char a2)
{
  char v2;
  _BYTE v3[72];

  v2 = a2 & 1;
  sub_10009E564(a1);
  sub_1001D87C8((uint64_t)v3, v2);
  sub_10007A148();
  sub_100098918();
}

void sub_1001D9FE0(uint64_t a1, uint64_t a2)
{
  sub_1001DA130(a1, a2, (void (*)(_BYTE *, uint64_t))sub_1001D879C);
}

void sub_1001D9FEC(uint64_t a1, uint64_t a2)
{
  sub_1001DA324(a1, a2, (uint64_t (*)(uint64_t))sub_100281014);
}

void sub_1001D9FF8(uint64_t a1, uint64_t a2)
{
  sub_1001DA324(a1, a2, (uint64_t (*)(uint64_t))sub_100103744);
}

void sub_1001DA004(uint64_t a1)
{
  char v1;
  uint64_t v2;
  _BYTE v3[72];

  sub_1000ED238(a1);
  if ((v1 & 1) != 0)
    v2 = 0x656369746F6ELL;
  else
    v2 = 0x616D7269666E6F63;
  sub_1000D0C18((uint64_t)v3, v2);
  sub_1000986E8();
  sub_10007A148();
  sub_100098918();
}

void sub_1001DA068(uint64_t a1, uint64_t a2)
{
  sub_1001DA324(a1, a2, (uint64_t (*)(uint64_t))sub_1008D63C0);
}

void sub_1001DA074(uint64_t a1, uint64_t a2)
{
  sub_1001DA130(a1, a2, (void (*)(_BYTE *, uint64_t))sub_1001D8608);
}

void sub_1001DA080(uint64_t a1)
{
  char v1;
  uint64_t v2;
  _BYTE v3[72];

  sub_1000ED238(a1);
  if (v1)
  {
    sub_10009EC94();
    sub_1001FB7A0();
  }
  else
  {
    sub_100095274();
  }
  sub_1000D0C18((uint64_t)v3, v2);
  sub_1000986E8();
  sub_10007A148();
  sub_100098918();
}

void sub_1001DA0E0(uint64_t a1, uint64_t a2)
{
  sub_1001DA130(a1, a2, (void (*)(_BYTE *, uint64_t))sub_1001D854C);
}

void sub_1001DA0EC(uint64_t a1)
{
  sub_1001FB7D8(a1, 0x6E6F697469736F70);
}

void sub_1001DA100(uint64_t a1, uint64_t a2)
{
  sub_1001DA324(a1, a2, (uint64_t (*)(uint64_t))LocationAuthorizationState.rawValue.getter);
}

void sub_1001DA10C(uint64_t a1, uint64_t a2)
{
  sub_1001DA324(a1, a2, (uint64_t (*)(uint64_t))sub_100381A0C);
}

void sub_1001DA118(uint64_t a1, uint64_t a2)
{
  sub_1001DA324(a1, a2, (uint64_t (*)(uint64_t))sub_100381C5C);
}

void sub_1001DA124(uint64_t a1, uint64_t a2)
{
  sub_1001DA130(a1, a2, (void (*)(_BYTE *, uint64_t))sub_1001D8438);
}

void sub_1001DA130(uint64_t a1, uint64_t a2, void (*a3)(_BYTE *, uint64_t))
{
  _BYTE v5[72];

  sub_10009E564(a1);
  a3(v5, a2);
  sub_10007A148();
  sub_100098918();
}

void sub_1001DA164(uint64_t a1)
{
  char v1;
  uint64_t v2;
  _BYTE v3[72];

  sub_1000ED238(a1);
  if ((v1 & 1) != 0)
    v2 = 1953720684;
  else
    v2 = 1701869940;
  String.hash(into:)(v3, v2, 0xE400000000000000);
  swift_bridgeObjectRelease();
  sub_10007A148();
  sub_100098918();
}

void sub_1001DA1B0(uint64_t a1)
{
  sub_1001DA36C(a1, 1953720684);
}

void sub_1001DA1C0(uint64_t a1)
{
  char v1;
  uint64_t v2;
  _BYTE v3[72];

  sub_1000ED238(a1);
  if ((v1 & 1) != 0)
    v2 = 0x6552686372616573;
  else
    v2 = 1701736302;
  sub_1000D0C18((uint64_t)v3, v2);
  sub_1000986E8();
  sub_10007A148();
  sub_100098918();
}

void sub_1001DA224(uint64_t a1)
{
  char v1;
  uint64_t v2;
  _BYTE v3[72];

  sub_1000ED238(a1);
  if (v1)
  {
    if (v1 == 1)
      v2 = 0x6E6F697461636F6CLL;
    else
      v2 = 0x74736554786676;
  }
  else
  {
    sub_1001FB688();
  }
  sub_1000D0C18((uint64_t)v3, v2);
  sub_1000986E8();
  sub_10007A148();
  sub_100098918();
}

void sub_1001DA2A0(uint64_t a1)
{
  char v1;
  uint64_t v2;
  _BYTE v3[72];

  sub_1000ED238(a1);
  if ((v1 & 1) != 0)
    v2 = 0x74736554786676;
  else
    v2 = 0x6E6F697461636F6CLL;
  sub_1000D0C18((uint64_t)v3, v2);
  sub_1000986E8();
  sub_10007A148();
  sub_100098918();
}

void sub_1001DA30C(uint64_t a1, uint64_t a2)
{
  sub_1001DA324(a1, a2, (uint64_t (*)(uint64_t))sub_10076C288);
}

void sub_1001DA318(uint64_t a1, uint64_t a2)
{
  sub_1001DA324(a1, a2, (uint64_t (*)(uint64_t))sub_10076D8D4);
}

void sub_1001DA324(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5;
  _BYTE v6[72];

  sub_10009E564(a1);
  v5 = a3(a2);
  sub_1000D0C18((uint64_t)v6, v5);
  sub_1000986E8();
  sub_10007A148();
  sub_100098918();
}

void sub_1001DA36C(uint64_t a1, uint64_t a2)
{
  _BYTE v3[72];

  sub_10009E564(a1);
  sub_1000D0C18((uint64_t)v3, a2);
  sub_10007A148();
  sub_100098918();
}

void sub_1001DA3A0(uint64_t a1)
{
  char v1;
  uint64_t v2;
  _BYTE v3[72];

  sub_1000ED238(a1);
  if (v1)
  {
    if (v1 == 1)
      v2 = 0x72616C75676572;
    else
      v2 = 0x6669636570736E75;
  }
  else
  {
    sub_1001FBA8C();
  }
  sub_1000D0C18((uint64_t)v3, v2);
  sub_1000986E8();
  sub_10007A148();
  sub_100098918();
}

uint64_t sub_1001DA418(uint64_t a1)
{
  return *(unsigned __int8 *)(a1
                            + OBJC_IVAR____TtCV7Weather29ReportWeatherContentViewModel8_Storage_showOnlineFeedbackSafariView);
}

void sub_1001DA428(char a1)
{
  _QWORD *v1;
  uint64_t v3;

  if ((swift_isUniquelyReferenced_nonNull_native(*v1) & 1) == 0)
  {
    sub_1001EE400();
    sub_1001FB99C(v3);
  }
  *(_BYTE *)(*v1 + OBJC_IVAR____TtCV7Weather29ReportWeatherContentViewModel8_Storage_showOnlineFeedbackSafariView) = a1 & 1;
  sub_100079F70();
}

uint64_t sub_1001DA474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001DA958(a1, a2, a3, &OBJC_IVAR____TtCV7Weather14DefaultContent8_Storage_map, &OBJC_IVAR____TtCV7Weather14DefaultContent8_Storage_airQuality);
}

void sub_1001DA488()
{
  sub_1001EC6C4();
}

void sub_1001DA49C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1000BD2A4();
  type metadata accessor for LocationCommonViewComponents._Storage(v0);
  v1 = sub_1000C1A00();
  sub_1001DD4D4(v1, v2);
  sub_10004A298();
}

uint64_t sub_1001DA4C4()
{
  uint64_t v0;

  sub_10009C0B4();
  sub_100021A14(v0 + OBJC_IVAR____TtCV7Weather14DefaultContent8_Storage_map, &qword_100BC4A98);
  sub_1000215BC(v0 + OBJC_IVAR____TtCV7Weather14DefaultContent8_Storage_airQuality, type metadata accessor for LocationComponentContainerViewModel);
  return v0;
}

uint64_t sub_1001DA50C()
{
  return sub_100082C68((void (*)(void))sub_1001DA4C4);
}

uint64_t sub_1001DA518()
{
  return type metadata accessor for DefaultContent._Storage(0);
}

uint64_t type metadata accessor for DefaultContent._Storage(uint64_t a1)
{
  return sub_100098190(a1, (uint64_t *)&unk_100BC6DA8, (uint64_t)&nominal type descriptor for DefaultContent._Storage);
}

uint64_t sub_1001DA538()
{
  char v0;

  sub_1001EC6C4();
  return v0 & 1;
}

void sub_1001DA568()
{
  uint64_t v0;

  v0 = sub_1000BD2A4();
  type metadata accessor for DefaultContent._Storage(v0);
  sub_1001FB25C();
  sub_10004A298();
}

void sub_1001DA59C()
{
  sub_1001DA568();
}

void sub_1001DA5A8()
{
  sub_1001F12FC();
}

void sub_1001DA5C4()
{
  uint64_t v0;

  sub_10009C0B4();
  sub_100021A14(v0 + OBJC_IVAR____TtCV7Weather18DefaultNewsContent8_Storage_map, &qword_100BC4A98);
  sub_100079F9C(v0 + OBJC_IVAR____TtCV7Weather18DefaultNewsContent8_Storage_airQuality);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather18DefaultNewsContent8_Storage_newsArticle);
  sub_10004A298();
}

uint64_t sub_1001DA61C()
{
  return sub_100082C68(sub_1001DA5C4);
}

uint64_t sub_1001DA628()
{
  return type metadata accessor for DefaultNewsContent._Storage(0);
}

uint64_t type metadata accessor for DefaultNewsContent._Storage(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC6E70, (uint64_t)&nominal type descriptor for DefaultNewsContent._Storage);
}

uint64_t sub_1001DA648()
{
  char v0;

  sub_1001F12FC();
  return v0 & 1;
}

uint64_t sub_1001DA680(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001F16C8(a1, a2, a3, a4, type metadata accessor for DefaultNewsContent._Storage, &OBJC_IVAR____TtCV7Weather18DefaultNewsContent8_Storage_map, &OBJC_IVAR____TtCV7Weather18DefaultNewsContent8_Storage_airQuality, &OBJC_IVAR____TtCV7Weather18DefaultNewsContent8_Storage_newsArticle);
}

void sub_1001DA6A4()
{
  uint64_t v0;

  v0 = sub_1000BD2A4();
  type metadata accessor for DefaultNewsContent._Storage(v0);
  sub_1001FAF68();
  sub_10004A298();
}

void sub_1001DA6E0()
{
  sub_1001DA6A4();
}

void sub_1001DA6EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_10009E4F0();
  a23 = v25;
  a24 = v26;
  v28 = v27;
  v30 = v29;
  v32 = v31;
  v34 = v33;
  v36 = v24 + *v35;
  v37 = sub_1000878BC();
  sub_10009D34C(v36, v38, v39, v37);
  *(_QWORD *)(v24 + 16) = v34;
  sub_10009922C(v36, (uint64_t)&a10, 33);
  sub_1000A3908(v32, v36, &qword_100BC4A98);
  sub_1000DB75C(v40);
  v41 = sub_1001FB9AC();
  sub_1001FB980(v41, v42);
  sub_1001FB980(v30, v24 + *v28);
  sub_10009DE9C();
}

void sub_1001DA788()
{
  sub_1001F12FC();
}

void sub_1001DA7A4()
{
  uint64_t v0;

  sub_10009C0B4();
  sub_100021A14(v0 + OBJC_IVAR____TtCV7Weather23DefaultTrendNewsContent8_Storage_map, &qword_100BC4A98);
  sub_100079F9C(v0 + OBJC_IVAR____TtCV7Weather23DefaultTrendNewsContent8_Storage_airQuality);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather23DefaultTrendNewsContent8_Storage_newsArticle);
  sub_10004A298();
}

uint64_t sub_1001DA7FC()
{
  return sub_100082C68(sub_1001DA7A4);
}

uint64_t sub_1001DA808()
{
  return type metadata accessor for DefaultTrendNewsContent._Storage(0);
}

uint64_t type metadata accessor for DefaultTrendNewsContent._Storage(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC6F38, (uint64_t)&nominal type descriptor for DefaultTrendNewsContent._Storage);
}

void sub_1001DA824(uint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1001FBBFC(a1, (unint64_t *)&unk_100BC6DB8, type metadata accessor for LocationComponentContainerViewModel);
  if (v1 <= 0x3F)
  {
    type metadata accessor for LocationComponentContainerViewModel(319);
    if (v2 <= 0x3F)
    {
      sub_1001FB64C();
      v11 = sub_1001FB750(v3, v4, v5, v6, v7, v8, v9, v10, (uint64_t)&value witness table for Builtin.NativeObject + 64);
      sub_1001FB630(v11);
    }
  }
  sub_1000951C8();
}

uint64_t sub_1001DA8A0()
{
  char v0;

  sub_1001F12FC();
  return v0 & 1;
}

uint64_t sub_1001DA8D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001F16C8(a1, a2, a3, a4, type metadata accessor for DefaultTrendNewsContent._Storage, &OBJC_IVAR____TtCV7Weather23DefaultTrendNewsContent8_Storage_map, &OBJC_IVAR____TtCV7Weather23DefaultTrendNewsContent8_Storage_airQuality, &OBJC_IVAR____TtCV7Weather23DefaultTrendNewsContent8_Storage_newsArticle);
}

void sub_1001DA8FC()
{
  uint64_t v0;

  v0 = sub_1000BD2A4();
  type metadata accessor for DefaultTrendNewsContent._Storage(v0);
  sub_1001FAF68();
  sub_10004A298();
}

void sub_1001DA938()
{
  sub_1001DA8FC();
}

uint64_t sub_1001DA944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001DA958(a1, a2, a3, &OBJC_IVAR____TtCV7Weather18ElevatedAqiContent8_Storage_map, &OBJC_IVAR____TtCV7Weather18ElevatedAqiContent8_Storage_airQuality);
}

uint64_t sub_1001DA958(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[24];

  v10 = v5 + *a4;
  v11 = sub_1000878BC();
  sub_10009D34C(v10, v12, v13, v11);
  *(_QWORD *)(v5 + 16) = a1;
  sub_10009922C(v10, (uint64_t)v16, 33);
  sub_1000A3908(a2, v10, &qword_100BC4A98);
  sub_1000DB75C(v14);
  sub_10004A31C(a3, v5 + *a5);
  return v5;
}

void sub_1001DAA00()
{
  sub_1001EC6C4();
}

uint64_t sub_1001DAA14()
{
  uint64_t v0;

  sub_10009C0B4();
  sub_100021A14(v0 + OBJC_IVAR____TtCV7Weather18ElevatedAqiContent8_Storage_map, &qword_100BC4A98);
  sub_1000215BC(v0 + OBJC_IVAR____TtCV7Weather18ElevatedAqiContent8_Storage_airQuality, type metadata accessor for LocationComponentContainerViewModel);
  return v0;
}

uint64_t sub_1001DAA5C()
{
  return sub_100082C68((void (*)(void))sub_1001DAA14);
}

uint64_t sub_1001DAA68()
{
  return type metadata accessor for ElevatedAqiContent._Storage(0);
}

uint64_t type metadata accessor for ElevatedAqiContent._Storage(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC7000, (uint64_t)&nominal type descriptor for ElevatedAqiContent._Storage);
}

void sub_1001DAA84(uint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1001FBBFC(a1, (unint64_t *)&unk_100BC6DB8, type metadata accessor for LocationComponentContainerViewModel);
  if (v1 <= 0x3F)
  {
    sub_1001FB764();
    if (v2 <= 0x3F)
    {
      sub_1001FB63C();
      v9 = sub_1001FB728(v3, v4, v5, v6, v7, v8);
      sub_1001FB630(v9);
    }
  }
  sub_1000951C8();
}

uint64_t sub_1001DAAF4()
{
  char v0;

  sub_1001EC6C4();
  return v0 & 1;
}

void sub_1001DAB24()
{
  uint64_t v0;

  v0 = sub_1000BD2A4();
  type metadata accessor for ElevatedAqiContent._Storage(v0);
  sub_1001FB25C();
  sub_10004A298();
}

void sub_1001DAB58()
{
  sub_1001DAB24();
}

void sub_1001DAB64()
{
  sub_1001F12FC();
}

void sub_1001DAB80()
{
  uint64_t v0;

  sub_10009C0B4();
  sub_100021A14(v0 + OBJC_IVAR____TtCV7Weather28ElevatedAqiMinorAlertContent8_Storage_map, &qword_100BC4A98);
  sub_100079F9C(v0 + OBJC_IVAR____TtCV7Weather28ElevatedAqiMinorAlertContent8_Storage_airQuality);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather28ElevatedAqiMinorAlertContent8_Storage_severeAlert);
  sub_10004A298();
}

uint64_t sub_1001DABD8()
{
  return sub_100082C68(sub_1001DAB80);
}

uint64_t sub_1001DABE4()
{
  return type metadata accessor for ElevatedAqiMinorAlertContent._Storage(0);
}

uint64_t type metadata accessor for ElevatedAqiMinorAlertContent._Storage(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC70C0, (uint64_t)&nominal type descriptor for ElevatedAqiMinorAlertContent._Storage);
}

uint64_t sub_1001DAC00()
{
  char v0;

  sub_1001F12FC();
  return v0 & 1;
}

uint64_t sub_1001DAC38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001F16C8(a1, a2, a3, a4, type metadata accessor for ElevatedAqiMinorAlertContent._Storage, &OBJC_IVAR____TtCV7Weather28ElevatedAqiMinorAlertContent8_Storage_map, &OBJC_IVAR____TtCV7Weather28ElevatedAqiMinorAlertContent8_Storage_airQuality, &OBJC_IVAR____TtCV7Weather28ElevatedAqiMinorAlertContent8_Storage_severeAlert);
}

void sub_1001DAC5C()
{
  uint64_t v0;

  v0 = sub_1000BD2A4();
  type metadata accessor for ElevatedAqiMinorAlertContent._Storage(v0);
  sub_1001FAF68();
  sub_10004A298();
}

void sub_1001DAC98()
{
  sub_1001DAC5C();
}

void sub_1001DACA4()
{
  sub_1001F12FC();
}

void sub_1001DACC0()
{
  uint64_t v0;

  sub_10009C0B4();
  sub_100021A14(v0 + OBJC_IVAR____TtCV7Weather22ElevatedAqiNewsContent8_Storage_map, &qword_100BC4A98);
  sub_100079F9C(v0 + OBJC_IVAR____TtCV7Weather22ElevatedAqiNewsContent8_Storage_airQuality);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather22ElevatedAqiNewsContent8_Storage_newsArticle);
  sub_10004A298();
}

uint64_t sub_1001DAD18()
{
  return sub_100082C68(sub_1001DACC0);
}

uint64_t sub_1001DAD24()
{
  return type metadata accessor for ElevatedAqiNewsContent._Storage(0);
}

uint64_t type metadata accessor for ElevatedAqiNewsContent._Storage(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC7188, (uint64_t)&nominal type descriptor for ElevatedAqiNewsContent._Storage);
}

uint64_t sub_1001DAD40()
{
  char v0;

  sub_1001F12FC();
  return v0 & 1;
}

uint64_t sub_1001DAD78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001F16C8(a1, a2, a3, a4, type metadata accessor for ElevatedAqiNewsContent._Storage, &OBJC_IVAR____TtCV7Weather22ElevatedAqiNewsContent8_Storage_map, &OBJC_IVAR____TtCV7Weather22ElevatedAqiNewsContent8_Storage_airQuality, &OBJC_IVAR____TtCV7Weather22ElevatedAqiNewsContent8_Storage_newsArticle);
}

void sub_1001DAD9C()
{
  uint64_t v0;

  v0 = sub_1000BD2A4();
  type metadata accessor for ElevatedAqiNewsContent._Storage(v0);
  sub_1001FAF68();
  sub_10004A298();
}

void sub_1001DADD8()
{
  sub_1001DAD9C();
}

void sub_1001DADE4()
{
  sub_1001F12FC();
}

void sub_1001DAE00()
{
  uint64_t v0;

  sub_10009C0B4();
  sub_100021A14(v0 + OBJC_IVAR____TtCV7Weather24ElevatedAqiSevereContent8_Storage_map, &qword_100BC4A98);
  sub_100079F9C(v0 + OBJC_IVAR____TtCV7Weather24ElevatedAqiSevereContent8_Storage_airQuality);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather24ElevatedAqiSevereContent8_Storage_severeAlert);
  sub_10004A298();
}

uint64_t sub_1001DAE58()
{
  return sub_100082C68(sub_1001DAE00);
}

uint64_t sub_1001DAE64()
{
  return type metadata accessor for ElevatedAqiSevereContent._Storage(0);
}

uint64_t type metadata accessor for ElevatedAqiSevereContent._Storage(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC7250, (uint64_t)&nominal type descriptor for ElevatedAqiSevereContent._Storage);
}

uint64_t sub_1001DAE80()
{
  char v0;

  sub_1001F12FC();
  return v0 & 1;
}

uint64_t sub_1001DAEB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001F16C8(a1, a2, a3, a4, type metadata accessor for ElevatedAqiSevereContent._Storage, &OBJC_IVAR____TtCV7Weather24ElevatedAqiSevereContent8_Storage_map, &OBJC_IVAR____TtCV7Weather24ElevatedAqiSevereContent8_Storage_airQuality, &OBJC_IVAR____TtCV7Weather24ElevatedAqiSevereContent8_Storage_severeAlert);
}

void sub_1001DAEDC()
{
  uint64_t v0;

  v0 = sub_1000BD2A4();
  type metadata accessor for ElevatedAqiSevereContent._Storage(v0);
  sub_1001FAF68();
  sub_10004A298();
}

void sub_1001DAF18()
{
  sub_1001DAEDC();
}

void sub_1001DAF24()
{
  sub_1001F1CC8();
}

void sub_1001DAF48()
{
  uint64_t v0;

  sub_10009C0B4();
  sub_100021A14(v0 + OBJC_IVAR____TtCV7Weather28ElevatedAqiSevereNewsContent8_Storage_map, &qword_100BC4A98);
  sub_100079F9C(v0 + OBJC_IVAR____TtCV7Weather28ElevatedAqiSevereNewsContent8_Storage_airQuality);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather28ElevatedAqiSevereNewsContent8_Storage_newsArticle);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather28ElevatedAqiSevereNewsContent8_Storage_severeAlert);
  sub_10004A298();
}

uint64_t sub_1001DAFAC()
{
  return sub_100082C68(sub_1001DAF48);
}

uint64_t sub_1001DAFB8()
{
  return type metadata accessor for ElevatedAqiSevereNewsContent._Storage(0);
}

uint64_t type metadata accessor for ElevatedAqiSevereNewsContent._Storage(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC7318, (uint64_t)&nominal type descriptor for ElevatedAqiSevereNewsContent._Storage);
}

uint64_t sub_1001DAFD8()
{
  char v0;

  sub_1001F1CC8();
  return v0 & 1;
}

#error "1001DB0E8: call analysis failed (funcsize=60)"

void sub_1001DB124()
{
  uint64_t v0;

  v0 = sub_1000BD2A4();
  type metadata accessor for ElevatedAqiSevereNewsContent._Storage(v0);
  sub_10011DEF0();
  sub_10004A298();
}

void sub_1001DB168()
{
  sub_1001DB124();
}

uint64_t sub_1001DB174(uint64_t a1, unint64_t a2)
{
  unint64_t v4;
  unint64_t v6;
  unint64_t v7;
  unint64_t v9;
  unint64_t v10;
  unint64_t v12;
  unint64_t v14;
  unint64_t v16;
  char v17;

  if (a1 == 0xD000000000000013)
  {
    v4 = 0x80000001009F2810;
    if (a2 == 0x80000001009F2810)
      goto LABEL_5;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000013, 0x80000001009F2810, a1, a2, 0) & 1) != 0)
  {
    v4 = a2;
LABEL_5:
    swift_bridgeObjectRelease(v4);
    return 0;
  }
  if (a1 == 0xD000000000000019 && a2 == 0x80000001009F2830)
  {
    v6 = 0x80000001009F2830;
LABEL_11:
    swift_bridgeObjectRelease(v6);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000019, 0x80000001009F2830, a1, a2, 0) & 1) != 0)
  {
    v6 = a2;
    goto LABEL_11;
  }
  if (a1 == 0xD00000000000001CLL && a2 == 0x80000001009F2850)
  {
    v7 = 0x80000001009F2850;
LABEL_17:
    swift_bridgeObjectRelease(v7);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001CLL, 0x80000001009F2850, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_17;
  }
  if (a1 == 0x7551686372616573 && a2 == 0xEB00000000797265)
  {
    v9 = 0xEB00000000797265;
    goto LABEL_25;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7551686372616573, 0xEB00000000797265, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
LABEL_25:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if (a1 == 0xD000000000000013)
  {
    v10 = 0x80000001009F2880;
    if (a2 == 0x80000001009F2880)
      goto LABEL_30;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000013, 0x80000001009F2880, a1, a2, 0) & 1) != 0)
  {
    v10 = a2;
LABEL_30:
    swift_bridgeObjectRelease(v10);
    return 4;
  }
  if (a1 == 0x6863726165537369 && a2 == 0xEB00000000676E69)
  {
    v12 = 0xEB00000000676E69;
    goto LABEL_38;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6863726165537369, 0xEB00000000676E69, a1, a2, 0) & 1) != 0)
  {
    v12 = a2;
LABEL_38:
    swift_bridgeObjectRelease(v12);
    return 5;
  }
  if (a1 == 0x697469736E617274 && a2 == 0xEF6449676E696E6FLL)
  {
    v14 = 0xEF6449676E696E6FLL;
    goto LABEL_46;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x697469736E617274, 0xEF6449676E696E6FLL, a1, a2, 0) & 1) != 0)
  {
    v14 = a2;
LABEL_46:
    swift_bridgeObjectRelease(v14);
    return 6;
  }
  if (a1 == 0x72656767697274 && a2 == 0xE700000000000000)
  {
    v16 = 0xE700000000000000;
    goto LABEL_54;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x72656767697274, 0xE700000000000000, a1, a2, 0) & 1) != 0)
  {
    v16 = a2;
LABEL_54:
    swift_bridgeObjectRelease(v16);
    return 7;
  }
  if (a1 == 0xD00000000000001FLL && a2 == 0x80000001009F28C0)
  {
    swift_bridgeObjectRelease(0x80000001009F28C0);
    return 8;
  }
  else
  {
    v17 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001FLL, 0x80000001009F28C0, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v17 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

uint64_t sub_1001DB534()
{
  return 9;
}

uint64_t sub_1001DB53C(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1001DB574 + 4 * byte_10098184E[a1]))(0xD000000000000013, 0x80000001009F2810);
}

uint64_t sub_1001DB574(uint64_t a1)
{
  return a1 + 6;
}

uint64_t sub_1001DB638()
{
  unsigned __int8 *v0;

  return sub_1001DB53C(*v0);
}

uint64_t sub_1001DB640@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1001DB174(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1001DB664@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1001DB534();
  *a1 = result;
  return result;
}

uint64_t sub_1001DB688(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F5498();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001DB6B0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F5498();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001DB6D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;

  sub_1000BE9DC();
  v2 = v0;
  v4 = v3;
  sub_1000BA294(&qword_100BC9F58);
  sub_100099300();
  __chkstk_darwin(v5);
  sub_100079FBC();
  sub_1000BE73C(v4);
  v6 = sub_1001F5498();
  sub_1000B44E8((uint64_t)&type metadata for ListViewState._Storage.CodingKeys, v7, v6);
  v8 = sub_1001F54D4();
  sub_10011E234(v8, v9, v10, (uint64_t)&unk_100B80420, v8);
  if (!v1)
  {
    sub_100091704(*(unsigned __int8 *)(v2 + 25), 1);
    v11 = sub_1001F5510();
    sub_10011E234(v11, v12, v13, (uint64_t)&unk_100B773D8, v11);
    v14 = *(_QWORD *)(v2 + 32);
    sub_10003BCC8();
    v15 = sub_1001FB6AC();
    KeyedEncodingContainer.encode(_:forKey:)(v15, v16, v17, v18);
    if (v14)
      goto LABEL_7;
    sub_10009D2E0();
    v19 = sub_1001F554C();
    sub_10011E234(v19, v20, v21, (uint64_t)&type metadata for ExternalSearchQuery, v19);
    sub_100091704(*(unsigned __int8 *)(v2 + 64), 5);
    v22 = *(_QWORD *)(v2 + 72);
    sub_10003BCC8();
    v23 = sub_1001FB6AC();
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v23, v24, v25, v26);
    if (v22)
    {
LABEL_7:
      sub_10009894C();
      sub_10009D2E0();
      goto LABEL_5;
    }
    sub_10009D2E0();
    v27 = sub_1001F5588();
    sub_10011E234(v27, v28, v29, (uint64_t)&type metadata for ListSessionTrigger, v27);
    sub_100091704(*(unsigned __int8 *)(v2 + 89), 8);
  }
  sub_10009894C();
LABEL_5:
  sub_100089054();
}

#error "1001DB8BC: call analysis failed (funcsize=12)"

void sub_1001DB8CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  __int128 v47;

  sub_100099310();
  a22 = v26;
  a23 = v27;
  v28 = v23;
  v30 = v29;
  v31 = sub_1000BA294(&qword_100BCA458);
  sub_1000AE898();
  __chkstk_darwin(v32);
  sub_10004A2E8();
  *(_QWORD *)(v23 + 72) = 0;
  *(_QWORD *)(v23 + 80) = 0;
  sub_10011E458(v30);
  v33 = sub_1001F5498();
  sub_100095510((uint64_t)&type metadata for ListViewState._Storage.CodingKeys, v34, v33);
  if (v24)
  {
    swift_bridgeObjectRelease();
    v38 = sub_1000BCF4C();
    sub_1001FBD10(v38, v39, 90);
  }
  else
  {
    a13 = 0;
    sub_1001F6668();
    sub_1000C6570((uint64_t)&unk_100B80420, (uint64_t)&a13, v31, (uint64_t)&unk_100B80420);
    v35 = BYTE8(v47);
    *(_QWORD *)(v23 + 16) = v47;
    *(_BYTE *)(v23 + 24) = v35;
    *(_BYTE *)(v23 + 25) = sub_1001FB520(1) & 1;
    a13 = 2;
    sub_1001F5F24();
    sub_1000C6570((uint64_t)&unk_100B773D8, (uint64_t)&a13, v31, (uint64_t)&unk_100B773D8);
    *(_BYTE *)(v23 + 26) = v47;
    v36 = sub_1001FB860(3);
    *(_QWORD *)(v23 + 32) = KeyedDecodingContainer.decode(_:forKey:)(v36, v37);
    *(_QWORD *)(v23 + 40) = v40;
    a13 = 4;
    sub_1001F66A4();
    sub_1000C6570((uint64_t)&type metadata for ExternalSearchQuery, (uint64_t)&a13, v31, (uint64_t)&type metadata for ExternalSearchQuery);
    *(_OWORD *)(v23 + 48) = v47;
    LOBYTE(v47) = 5;
    *(_BYTE *)(v23 + 64) = KeyedDecodingContainer.decode(_:forKey:)(&v47, v31) & 1;
    v41 = sub_1001FB860(6);
    v43 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(v41, v42);
    v44 = *(_QWORD *)(v23 + 80);
    *(_QWORD *)(v23 + 72) = v43;
    *(_QWORD *)(v23 + 80) = v45;
    sub_1001FBC94(v44);
    a13 = 7;
    sub_1001F66E0();
    sub_1000C6570((uint64_t)&type metadata for ListSessionTrigger, (uint64_t)&a13, v31, (uint64_t)&type metadata for ListSessionTrigger);
    *(_BYTE *)(v23 + 88) = v47;
    v46 = sub_1001FB520(8);
    sub_10009CC44(*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8));
    *(_BYTE *)(v28 + 89) = v46 & 1;
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v30);
  sub_10011E690();
  sub_1000B44B0();
}

uint64_t sub_1001DBB5C()
{
  char v0;

  sub_10010A47C();
  return v0 & 1;
}

uint64_t sub_1001DBB7C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_1001DB89C();
  if (!v1)
    *a1 = result;
  return result;
}

void sub_1001DBBA4()
{
  sub_1001DB6D8();
}

void sub_1001DBBC4(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  sub_10068FCB4(a1);
  if (!v2)
    *a2 = v4;
}

void sub_1001DBBEC()
{
  sub_10068FEAC();
}

void sub_1001DBC0C()
{
  sub_10009E50C();
  type metadata accessor for ListViewState._Storage();
  sub_1000C1A00();
  sub_10010A47C();
  sub_10004A298();
}

void sub_1001DBC34()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1000BE9DC();
  sub_1001FB800();
  sub_1000BA294(&qword_100BCA7E8);
  sub_1000BA514();
  __chkstk_darwin(v0);
  sub_1000B44C8();
  v1 = sub_1001F8F18();
  sub_1000B44E8((uint64_t)&type metadata for ListViewState.CodingKeys, v2, v1);
  type metadata accessor for ListViewState._Storage();
  sub_10005329C(&qword_100BCA7F0, v3, (uint64_t (*)(uint64_t))type metadata accessor for ListViewState._Storage, (uint64_t)&unk_1009834CC);
  sub_100095128(v4, v5);
  sub_1000BA528();
  sub_10009ECD4();
  sub_100089054();
}

void sub_1001DBCDC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1000BE9DC();
  sub_1000C00FC();
  sub_1000BA294(&qword_100BCA7D0);
  sub_1000BA514();
  __chkstk_darwin(v1);
  sub_1000CD594();
  v2 = sub_1001F8F18();
  sub_1000C2488((uint64_t)&type metadata for ListViewState.CodingKeys, v3, v2);
  if (!v0)
  {
    type metadata accessor for ListViewState._Storage();
    sub_10005329C(&qword_100BCA7E0, v4, (uint64_t (*)(uint64_t))type metadata accessor for ListViewState._Storage, (uint64_t)&unk_1009834F4);
    sub_1000BBCBC(v5, v6);
    sub_1000C35BC();
  }
  sub_1000998EC();
  sub_1000BF0D8();
  sub_100089054();
}

void sub_1001DBD98(uint64_t a1)
{
  sub_1001F105C(a1);
}

uint64_t sub_1001DBDB8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F8F18();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001DBDE0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F8F18();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001DBE08()
{
  sub_1001DBC0C();
}

void sub_1001DBE14(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1001DBCDC();
  if (!v1)
    *a1 = v3;
}

void sub_1001DBE3C()
{
  sub_1001DBC34();
}

void sub_1001DBE54(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_100690004();
  if (!v1)
    *a1 = v3;
}

void sub_1001DBE7C()
{
  sub_10069002C();
}

void sub_1001DBE94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_10009E4F0();
  sub_10009DDCC();
  sub_10009C0AC(v21, v13 + OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_hourlyForecast);
  sub_10009C0AC(v15, v13 + OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_dailyForecast);
  sub_10009C0AC(v14, v13 + OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_uvIndex);
  sub_10009C0AC(v12, v13 + OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_sunriseSunset);
  sub_10009C0AC(v20, v13 + OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_wind);
  sub_10009C0AC(v19, v13 + OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_precipitationTotal);
  sub_10009C0AC(v18, v13 + OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_feelsLike);
  sub_10009C0AC(v16, v13 + OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_humidity);
  sub_10009C0AC(v17, v13 + OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_visibility);
  sub_10009C0AC(a10, v13 + OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_pressure);
  sub_10009C0AC(a11, v13 + OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_averages);
  sub_10009C0AC(a12, v13 + OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_moon);
  sub_10009DE9C();
}

void sub_1001DBFAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1001FB4F4();
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_10009BE6C();
  __chkstk_darwin(v5);
  sub_1000998F4();
  sub_1000CFB94(OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_hourlyForecast);
  sub_1000D1C5C(OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_hourlyForecast);
  sub_1000F409C();
  sub_1000D110C();
  sub_10009D37C(v2);
  if ((&unk_100CAD000 & 1) != 0)
  {
    sub_1000CFB94(OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_dailyForecast);
    sub_1000D1C5C(OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_dailyForecast);
    sub_1000F409C();
    sub_1000D110C();
    sub_10009D37C(v2);
    sub_1000CFB94(OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_uvIndex);
    sub_1000D1C5C(OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_uvIndex);
    sub_1000F409C();
    sub_1000D110C();
    sub_10009D37C(v2);
    sub_1000CFB94(OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_sunriseSunset);
    sub_1000D1C5C(OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_sunriseSunset);
    sub_1000F409C();
    sub_1000D110C();
    sub_10009D37C(v2);
    sub_1000CFB94(OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_wind);
    sub_1000D1C5C(OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_wind);
    sub_1000F409C();
    sub_1000D110C();
    sub_10009D37C(v2);
    sub_1000CFB94(OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_precipitationTotal);
    sub_1000D1C5C(OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_precipitationTotal);
    sub_1000F409C();
    sub_1000D110C();
    sub_10009D37C(v2);
    sub_1000CFB94(OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_feelsLike);
    sub_1000D1C5C(OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_feelsLike);
    sub_1000F409C();
    sub_1000D110C();
    sub_10009D37C(v2);
    sub_1000CFB94(OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_humidity);
    sub_1000D1C5C(OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_humidity);
    sub_1000F409C();
    sub_1000D110C();
    sub_10009D37C(v2);
    sub_1000CFB94(OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_visibility);
    sub_1000D1C5C(OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_visibility);
    sub_1000F409C();
    sub_1000D110C();
    sub_10009D37C(v2);
    sub_1000CFB94(OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_pressure);
    sub_1000D1C5C(OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_pressure);
    sub_1000F409C();
    sub_1000D110C();
    sub_10009D37C(v2);
    sub_1000CFB94(OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_averages);
    sub_1000D1C5C(OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_averages);
    sub_1000F409C();
    sub_1000D110C();
    sub_10009D37C(v2);
    sub_1001FB17C(v3 + OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_moon);
    sub_1000B326C(v0 + OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_moon, v1);
    sub_1000F409C();
    sub_1000BD95C(v1);
    sub_1000BD95C(v2);
  }
  sub_10004A2A0();
}

uint64_t sub_1001DC200(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v8;
  unint64_t v10;
  unint64_t v12;
  unint64_t v14;
  unint64_t v15;
  unint64_t v17;
  unint64_t v19;
  unint64_t v21;
  unint64_t v23;
  unint64_t v25;
  char v27;

  if (a1 == 0x6F46796C72756F68 && a2 == 0xEE00747361636572)
  {
    v5 = 0xEE00747361636572;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6F46796C72756F68, 0xEE00747361636572, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x726F46796C696164 && a2 == 0xED00007473616365)
  {
    v8 = 0xED00007473616365;
    goto LABEL_16;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x726F46796C696164, 0xED00007473616365, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
LABEL_16:
    swift_bridgeObjectRelease(v8);
    return 1;
  }
  if (a1 == 0x7865646E497675 && a2 == 0xE700000000000000)
  {
    v10 = 0xE700000000000000;
    goto LABEL_24;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7865646E497675, 0xE700000000000000, a1, a2, 0) & 1) != 0)
  {
    v10 = a2;
LABEL_24:
    swift_bridgeObjectRelease(v10);
    return 2;
  }
  if (a1 == 0x53657369726E7573 && a2 == 0xED00007465736E75)
  {
    v12 = 0xED00007465736E75;
    goto LABEL_32;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x53657369726E7573, 0xED00007465736E75, a1, a2, 0) & 1) != 0)
  {
    v12 = a2;
LABEL_32:
    swift_bridgeObjectRelease(v12);
    return 3;
  }
  if (a1 == 1684957559 && a2 == 0xE400000000000000)
  {
    v14 = 0xE400000000000000;
    goto LABEL_40;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(1684957559, 0xE400000000000000, a1, a2, 0) & 1) != 0)
  {
    v14 = a2;
LABEL_40:
    swift_bridgeObjectRelease(v14);
    return 4;
  }
  if (a1 == 0xD000000000000012)
  {
    v15 = 0x80000001009F0280;
    if (a2 == 0x80000001009F0280)
      goto LABEL_45;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000012, 0x80000001009F0280, a1, a2, 0) & 1) != 0)
  {
    v15 = a2;
LABEL_45:
    swift_bridgeObjectRelease(v15);
    return 5;
  }
  if (a1 == 0x6B694C736C656566 && a2 == 0xE900000000000065)
  {
    v17 = 0xE900000000000065;
    goto LABEL_53;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6B694C736C656566, 0xE900000000000065, a1, a2, 0) & 1) != 0)
  {
    v17 = a2;
LABEL_53:
    swift_bridgeObjectRelease(v17);
    return 6;
  }
  if (a1 == 0x79746964696D7568 && a2 == 0xE800000000000000)
  {
    v19 = 0xE800000000000000;
    goto LABEL_61;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x79746964696D7568, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v19 = a2;
LABEL_61:
    swift_bridgeObjectRelease(v19);
    return 7;
  }
  if (a1 == 0x696C696269736976 && a2 == 0xEA00000000007974)
  {
    v21 = 0xEA00000000007974;
    goto LABEL_69;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x696C696269736976, 0xEA00000000007974, a1, a2, 0) & 1) != 0)
  {
    v21 = a2;
LABEL_69:
    swift_bridgeObjectRelease(v21);
    return 8;
  }
  if (a1 == 0x6572757373657270 && a2 == 0xE800000000000000)
  {
    v23 = 0xE800000000000000;
    goto LABEL_77;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6572757373657270, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v23 = a2;
LABEL_77:
    swift_bridgeObjectRelease(v23);
    return 9;
  }
  if (a1 == 0x7365676172657661 && a2 == 0xE800000000000000)
  {
    v25 = 0xE800000000000000;
    goto LABEL_85;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7365676172657661, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v25 = a2;
LABEL_85:
    swift_bridgeObjectRelease(v25);
    return 10;
  }
  if (a1 == 1852796781 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease(0xE400000000000000);
    return 11;
  }
  else
  {
    v27 = _stringCompareWithSmolCheck(_:_:expecting:)(1852796781, 0xE400000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v27 & 1) != 0)
      return 11;
    else
      return 12;
  }
}

uint64_t sub_1001DC714()
{
  return 12;
}

uint64_t sub_1001DC71C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1001DC75C + 4 * byte_100981857[a1]))(0x6F46796C72756F68, 0xEE00747361636572);
}

uint64_t sub_1001DC75C()
{
  return 0x726F46796C696164;
}

uint64_t sub_1001DC780()
{
  return 0x7865646E497675;
}

uint64_t sub_1001DC798()
{
  return 0x53657369726E7573;
}

uint64_t sub_1001DC7BC()
{
  return 1684957559;
}

unint64_t sub_1001DC7CC()
{
  return 0xD000000000000012;
}

uint64_t sub_1001DC7E8()
{
  return 0x6B694C736C656566;
}

uint64_t sub_1001DC804()
{
  return 0x79746964696D7568;
}

uint64_t sub_1001DC81C()
{
  return 0x696C696269736976;
}

uint64_t sub_1001DC838()
{
  return 0x6572757373657270;
}

uint64_t sub_1001DC850()
{
  return 0x7365676172657661;
}

uint64_t sub_1001DC868()
{
  return 1852796781;
}

uint64_t sub_1001DC878()
{
  unsigned __int8 *v0;

  return sub_1001DC71C(*v0);
}

uint64_t sub_1001DC880@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1001DC200(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1001DC8A4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1001DC714();
  *a1 = result;
  return result;
}

uint64_t sub_1001DC8C8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F662C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001DC8F0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F662C();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001DC918()
{
  uint64_t v0;

  sub_100079F9C(v0 + OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_hourlyForecast);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_dailyForecast);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_uvIndex);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_sunriseSunset);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_wind);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_precipitationTotal);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_feelsLike);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_humidity);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_visibility);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_pressure);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_averages);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_moon);
  sub_10004A298();
}

uint64_t sub_1001DC9CC()
{
  return sub_100082C68(sub_1001DC918);
}

uint64_t sub_1001DC9D8()
{
  return type metadata accessor for LocationCommonConfigurationComponents._Storage(0);
}

uint64_t type metadata accessor for LocationCommonConfigurationComponents._Storage(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC74D0, (uint64_t)&nominal type descriptor for LocationCommonConfigurationComponents._Storage);
}

uint64_t sub_1001DC9F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001DD818(a1, a2, a3, type metadata accessor for LocationViewComponent);
}

uint64_t sub_1001DCA00(uint64_t a1)
{
  return sub_1001DDA20(a1, (void (*)(uint64_t))sub_1001DCA1C);
}

void sub_1001DCA1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char a11, char a12, char a13, char a14, char a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  uint64_t v27;
  uint64_t *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  uint64_t *v114;
  uint64_t v115;
  char v116;
  char v117;
  char v118;
  char v119;

  sub_100099310();
  a26 = v31;
  a27 = v32;
  v113 = v29;
  v114 = v28;
  v34 = v33;
  v115 = *v28;
  v109 = type metadata accessor for LocationViewComponent(0);
  sub_1000B42B0();
  __chkstk_darwin(v35);
  sub_1000986FC();
  v101 = v36;
  sub_10009D2A4();
  __chkstk_darwin(v37);
  sub_1000860D0();
  v102 = v38;
  sub_10009D2A4();
  __chkstk_darwin(v39);
  sub_1000860D0();
  v103 = v40;
  sub_10009D2A4();
  __chkstk_darwin(v41);
  v104 = (char *)&v97 - v42;
  sub_10009D2A4();
  __chkstk_darwin(v43);
  sub_1000860D0();
  v105 = v44;
  sub_10009D2A4();
  __chkstk_darwin(v45);
  sub_1000860D0();
  v106 = v46;
  sub_10009D2A4();
  __chkstk_darwin(v47);
  sub_1000860D0();
  v107 = v48;
  sub_10009D2A4();
  __chkstk_darwin(v49);
  sub_1000860D0();
  v108 = v50;
  sub_10009D2A4();
  __chkstk_darwin(v51);
  sub_1000B3B34();
  __chkstk_darwin(v52);
  v54 = (char *)&v97 - v53;
  __chkstk_darwin(v55);
  sub_100099338();
  __chkstk_darwin(v56);
  sub_1001FBB74(v57, v58, v59, v60, v61, v62, v63, v64, v97);
  v112 = sub_1000BA294(&qword_100BCA448);
  sub_1000AE898();
  __chkstk_darwin(v65);
  sub_100079F58();
  v67 = v34[3];
  v66 = v34[4];
  sub_1000CDECC(v34, v67);
  v68 = sub_1001F662C();
  v111 = v27;
  v69 = v66;
  v70 = v113;
  v71 = v114;
  v72 = dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for LocationCommonConfigurationComponents._Storage.CodingKeys, &type metadata for LocationCommonConfigurationComponents._Storage.CodingKeys, v68, v67, v69);
  v73 = v115;
  if (v70)
  {
LABEL_18:
    sub_10009EE5C(v72, v73);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v34);
    goto LABEL_19;
  }
  v100 = v54;
  v113 = v34;
  a17 = 0;
  sub_1000C0CC8((unint64_t *)&qword_100BCA2C0, v115, type metadata accessor for LocationViewComponent, (uint64_t)&unk_1009B2000);
  v75 = v74;
  v76 = v109;
  v77 = v112;
  sub_1000DC5F0(v109, (uint64_t)&a17, v112, v109);
  v99 = (uint64_t)v71 + OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_hourlyForecast;
  sub_10007802C(v110, (uint64_t)v71 + OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_hourlyForecast, type metadata accessor for LocationViewComponent);
  a16 = 1;
  v78 = v77;
  v79 = v75;
  v80 = sub_1000DC5F0(v76, (uint64_t)&a16, v78, v76);
  sub_1001FB9FC(v80, (uint64_t)v71 + OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_dailyForecast, type metadata accessor for LocationViewComponent);
  a15 = 2;
  v98 = 0;
  v81 = sub_1000DC5F0(v76, (uint64_t)&a15, v112, v76);
  sub_100110444(v81, (uint64_t)v71 + OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_uvIndex, type metadata accessor for LocationViewComponent);
  a14 = 3;
  v82 = sub_1000DC5F0(v76, (uint64_t)&a14, v112, v76);
  sub_10009C924(v82, (uint64_t)v71 + OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_sunriseSunset, type metadata accessor for LocationViewComponent);
  a13 = 4;
  v83 = sub_1000DC5F0(v76, (uint64_t)&a13, v112, v76);
  sub_10009C924(v83, (uint64_t)v71 + OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_wind, type metadata accessor for LocationViewComponent);
  a12 = 5;
  v84 = v111;
  v85 = v112;
  v86 = sub_1000DC5F0(v76, (uint64_t)&a12, v112, v76);
  sub_10009C924(v86, (uint64_t)v71 + OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_precipitationTotal, type metadata accessor for LocationViewComponent);
  a11 = 6;
  v87 = v106;
  v88 = sub_1000DC5F0(v76, (uint64_t)&a11, v85, v76);
  v108 = v30;
  sub_10009C924(v88, (uint64_t)v71 + OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_feelsLike, type metadata accessor for LocationViewComponent);
  a10 = 7;
  v89 = v105;
  v90 = sub_1000DC5F0(v76, (uint64_t)&a10, v85, v76);
  sub_1001FB9FC(v90, (uint64_t)v71 + OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_humidity, type metadata accessor for LocationViewComponent);
  v119 = 8;
  v91 = (uint64_t)v104;
  sub_1000DC5F0(v76, (uint64_t)&v119, v85, v76);
  v110 = 0;
  sub_10007802C(v91, (uint64_t)v114 + OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_visibility, type metadata accessor for LocationViewComponent);
  v118 = 9;
  v92 = v110;
  KeyedDecodingContainer.decode<A>(_:forKey:)(v76, &v118, v85, v76);
  v110 = v92;
  if (v92)
  {
    sub_100109284();
    sub_1001FB488();
    v95 = v98;
    sub_1000215BC(v99, type metadata accessor for LocationViewComponent);
    if (v95)
    {
      if (!v87)
        goto LABEL_7;
    }
    else
    {
      sub_1000215BC((uint64_t)v114 + OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_dailyForecast, type metadata accessor for LocationViewComponent);
      if (!v87)
      {
LABEL_7:
        if (!(_DWORD)v91)
          goto LABEL_9;
        goto LABEL_8;
      }
    }
    sub_1000215BC((uint64_t)v114 + OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_uvIndex, type metadata accessor for LocationViewComponent);
    if (!(_DWORD)v91)
    {
LABEL_9:
      v96 = v114;
      if (v84)
      {
        sub_1000215BC((uint64_t)v114 + OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_wind, type metadata accessor for LocationViewComponent);
        if (!v89)
        {
LABEL_11:
          if (!(_DWORD)v85)
            goto LABEL_12;
          goto LABEL_22;
        }
      }
      else if (!v89)
      {
        goto LABEL_11;
      }
      sub_1000215BC((uint64_t)v96 + OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_precipitationTotal, type metadata accessor for LocationViewComponent);
      if (!(_DWORD)v85)
      {
LABEL_12:
        if (!v79)
          goto LABEL_24;
        goto LABEL_23;
      }
LABEL_22:
      sub_1000215BC((uint64_t)v96 + OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_feelsLike, type metadata accessor for LocationViewComponent);
      if (!v79)
        goto LABEL_24;
LABEL_23:
      sub_1000215BC((uint64_t)v96 + OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_humidity, type metadata accessor for LocationViewComponent);
LABEL_24:
      sub_1000215BC((uint64_t)v96 + OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_visibility, type metadata accessor for LocationViewComponent);
      if ((_DWORD)v30)
        sub_1000215BC((uint64_t)v96 + OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_pressure, type metadata accessor for LocationViewComponent);
      if ((_DWORD)v112)
        sub_1000215BC((uint64_t)v96 + OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_averages, type metadata accessor for LocationViewComponent);
      v34 = v113;
      v73 = v115;
      goto LABEL_18;
    }
LABEL_8:
    sub_1000215BC((uint64_t)v114 + OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_sunriseSunset, type metadata accessor for LocationViewComponent);
    goto LABEL_9;
  }
  sub_10007802C(v103, (uint64_t)v114 + OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_pressure, type metadata accessor for LocationViewComponent);
  v117 = 10;
  sub_1001FB700(v93, (uint64_t)&v117);
  v110 = 0;
  sub_10007802C(v102, (uint64_t)v114 + OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_averages, type metadata accessor for LocationViewComponent);
  v116 = 11;
  sub_1001FB700(v94, (uint64_t)&v116);
  v110 = 0;
  sub_100109284();
  sub_10007802C(v101, (uint64_t)v114 + OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_moon, type metadata accessor for LocationViewComponent);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v113);
LABEL_19:
  sub_1000B44B0();
}

uint64_t sub_1001DD20C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1001DCA00(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1001DD234()
{
  char v0;

  sub_1001DBFAC();
  return v0 & 1;
}

void sub_1001DD254()
{
  uint64_t v0;

  v0 = sub_1000BD2A4();
  type metadata accessor for LocationCommonConfigurationComponents._Storage(v0);
  sub_1000C1A00();
  sub_1001DBFAC();
  sub_10004A298();
}

void sub_1001DD27C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1000BE9DC();
  sub_1000C00FC();
  sub_1000BA294(&qword_100BCA128);
  sub_1000BA514();
  __chkstk_darwin(v1);
  sub_1000CD594();
  v2 = sub_1001F5B28();
  sub_1000C2488((uint64_t)&type metadata for LocationCommonConfigurationComponents.CodingKeys, v3, v2);
  if (!v0)
  {
    type metadata accessor for LocationCommonConfigurationComponents._Storage(0);
    sub_1000C0CC8(&qword_100BCA138, v4, type metadata accessor for LocationCommonConfigurationComponents._Storage, (uint64_t)&unk_100983454);
    sub_1000BBCBC(v5, v6);
    sub_1000C35BC();
  }
  sub_1000998EC();
  sub_1000BF0D8();
  sub_100089054();
}

uint64_t sub_1001DD338(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F5B28();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001DD360(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F5B28();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001DD388(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1001DD27C();
  if (!v1)
    *a1 = v3;
}

void sub_1001DD3B0()
{
  sub_1001DD254();
}

void sub_1001DD3BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_10009E4F0();
  sub_10009DDCC();
  sub_10009C0AC(v21, v13 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast);
  sub_10009C0AC(v15, v13 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast);
  sub_10009C0AC(v14, v13 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
  sub_10009C0AC(v12, v13 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset);
  sub_10009C0AC(v20, v13 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
  sub_10009C0AC(v19, v13 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal);
  sub_10009C0AC(v18, v13 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike);
  sub_10009C0AC(v16, v13 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity);
  sub_10009C0AC(v17, v13 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility);
  sub_10009C0AC(a10, v13 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure);
  sub_10009C0AC(a11, v13 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages);
  sub_10009C0AC(a12, v13 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon);
  sub_10009DE9C();
}

void sub_1001DD4D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;

  sub_1000878BC();
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_10009BE6C();
  __chkstk_darwin(v7);
  sub_1000998F4();
  sub_1000CFB94(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast);
  sub_1000D1C5C(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast);
  sub_10011736C();
  sub_1000D110C();
  sub_10009D37C(v3);
  if ((&unk_100CAD000 & 1) != 0)
  {
    sub_1000CFB94(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast);
    sub_1000D1C5C(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast);
    sub_10011736C();
    sub_1000D110C();
    sub_10009D37C(v3);
    sub_1000CFB94(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
    sub_1000D1C5C(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
    sub_10011736C();
    sub_1000D110C();
    sub_10009D37C(v3);
    sub_1000CFB94(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset);
    sub_1000D1C5C(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset);
    sub_10011736C();
    sub_1000D110C();
    sub_10009D37C(v3);
    sub_1000CFB94(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
    sub_1000D1C5C(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
    sub_10011736C();
    sub_1000D110C();
    sub_10009D37C(v3);
    sub_1000CFB94(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal);
    sub_1000D1C5C(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal);
    sub_10011736C();
    sub_1000D110C();
    sub_10009D37C(v3);
    sub_1000CFB94(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike);
    sub_1000D1C5C(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike);
    sub_10011736C();
    sub_1000D110C();
    sub_10009D37C(v3);
    sub_1000CFB94(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity);
    sub_1000D1C5C(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity);
    sub_10011736C();
    sub_1000D110C();
    sub_10009D37C(v3);
    sub_1000CFB94(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility);
    sub_1000D1C5C(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility);
    sub_10011736C();
    sub_1000D110C();
    sub_10009D37C(v3);
    sub_1000CFB94(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure);
    sub_1000D1C5C(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure);
    sub_10011736C();
    sub_1000D110C();
    sub_10009D37C(v3);
    sub_1000CFB94(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages);
    sub_1000D1C5C(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages);
    sub_10011736C();
    sub_1000D110C();
    sub_10009D37C(v3);
    sub_1001FB17C(a1 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon);
    sub_1000B326C(a2 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v2);
    sub_10011736C();
    sub_1000BD95C(v2);
    sub_1000BD95C(v3);
  }
  sub_10004A2A0();
}

void sub_1001DD730()
{
  uint64_t v0;

  sub_100079F9C(v0 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon);
  sub_10004A298();
}

uint64_t sub_1001DD7E4()
{
  return sub_100082C68(sub_1001DD730);
}

uint64_t sub_1001DD7F0()
{
  return type metadata accessor for LocationCommonViewComponents._Storage(0);
}

uint64_t type metadata accessor for LocationCommonViewComponents._Storage(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC75E0, (uint64_t)&nominal type descriptor for LocationCommonViewComponents._Storage);
}

uint64_t sub_1001DD80C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001DD818(a1, a2, a3, type metadata accessor for LocationComponentContainerViewModel);
}

uint64_t sub_1001DD818(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t updated;
  _QWORD v10[12];

  result = a4(319);
  if (v6 <= 0x3F)
  {
    sub_1001FB63C();
    v10[0] = v7;
    v10[1] = v7;
    v10[2] = v7;
    v10[3] = v7;
    v10[4] = v7;
    v10[5] = v7;
    v10[6] = v7;
    v10[7] = v7;
    v10[8] = v7;
    v10[9] = v7;
    v10[10] = v7;
    v10[11] = v7;
    updated = swift_updateClassMetadata2(a1, 256, 12, v10, v8);
    return sub_1001FB630(updated);
  }
  return result;
}

uint64_t sub_1001DD88C(uint64_t *a1, uint64_t *a2)
{
  char v2;

  sub_1001DD4D4(*a1, *a2);
  return v2 & 1;
}

void sub_1001DD8AC()
{
  sub_1001DA49C();
}

void sub_1001DD8B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1001DE8EC(a1, a2, a3, &OBJC_IVAR____TtCV7Weather28LocationDefaultConfiguration8_Storage_map, &OBJC_IVAR____TtCV7Weather28LocationDefaultConfiguration8_Storage_airQuality);
}

uint64_t sub_1001DD8CC(char a1)
{
  if (!a1)
    return 0x6E6F6D6D6F63;
  if (a1 == 1)
    return 7364973;
  return 0x696C617551726961;
}

uint64_t sub_1001DD91C()
{
  char *v0;

  return sub_1001DD8CC(*v0);
}

void sub_1001DD924(_BYTE *a1@<X8>)
{
  char v2;

  sub_1001DE940();
  *a1 = v2;
}

uint64_t sub_1001DD948(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F65F0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001DD970(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F65F0();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001DD998()
{
  uint64_t v0;

  sub_10009C0B4();
  sub_100079F9C(v0 + OBJC_IVAR____TtCV7Weather28LocationDefaultConfiguration8_Storage_map);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather28LocationDefaultConfiguration8_Storage_airQuality);
  sub_10004A298();
}

uint64_t sub_1001DD9D8()
{
  return sub_100082C68(sub_1001DD998);
}

uint64_t sub_1001DD9E4()
{
  return type metadata accessor for LocationDefaultConfiguration._Storage(0);
}

uint64_t type metadata accessor for LocationDefaultConfiguration._Storage(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC76E8, (uint64_t)&nominal type descriptor for LocationDefaultConfiguration._Storage);
}

uint64_t sub_1001DDA04(uint64_t a1)
{
  return sub_1001DDA20(a1, (void (*)(uint64_t))sub_1001DDA70);
}

uint64_t sub_1001DDA20(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v5;

  v5 = swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  a2(a1);
  return v5;
}

void sub_1001DDA70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_100099310();
  v13 = v12;
  sub_1000D0014();
  sub_1000B42B0();
  __chkstk_darwin(v14);
  sub_1000DB210();
  __chkstk_darwin(v15);
  sub_1000BCEC0();
  sub_1000BA294(&qword_100BCA438);
  sub_1000AE898();
  __chkstk_darwin(v16);
  sub_1000CDECC(v13, v13[3]);
  v17 = sub_1001F65F0();
  sub_10004A300((uint64_t)&type metadata for LocationDefaultConfiguration._Storage.CodingKeys, v18, v17);
  sub_1001FB988();
  if (v11)
  {
    sub_1001FAF74(v19, v20);
  }
  else
  {
    sub_1000FD9F8();
    sub_1000BE8A0((uint64_t)&unk_100B616F0);
    *(_QWORD *)(v10 + 16) = a10;
    sub_1000FD8EC();
    sub_1000C0CC8((unint64_t *)&qword_100BCA2C0, v21, type metadata accessor for LocationViewComponent, (uint64_t)&unk_1009B2000);
    v23 = sub_1000CE4FC(v22);
    sub_10009C79C(v23, v10 + OBJC_IVAR____TtCV7Weather28LocationDefaultConfiguration8_Storage_map, type metadata accessor for LocationViewComponent);
    sub_1000DC89C();
    v24 = sub_10011E2D0();
    sub_10009C79C(v24, v10 + OBJC_IVAR____TtCV7Weather28LocationDefaultConfiguration8_Storage_airQuality, type metadata accessor for LocationViewComponent);
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v13);
  sub_10011DE38();
  sub_1000B44B0();
}

uint64_t sub_1001DDC14@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1001DDA04(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1001DDC3C()
{
  char v0;

  sub_1001E410C();
  return v0 & 1;
}

void sub_1001DDC6C()
{
  uint64_t v0;

  v0 = sub_1000BD2A4();
  type metadata accessor for LocationDefaultConfiguration._Storage(v0);
  sub_1001FB250();
  sub_10004A298();
}

void sub_1001DDCA0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1000BE9DC();
  sub_1000C00FC();
  sub_1000BA294(&qword_100BCA870);
  sub_1000BA514();
  __chkstk_darwin(v1);
  sub_1000CD594();
  v2 = sub_1001F9008();
  sub_1000C2488((uint64_t)&type metadata for LocationDefaultConfiguration.CodingKeys, v3, v2);
  if (!v0)
  {
    type metadata accessor for LocationDefaultConfiguration._Storage(0);
    sub_1000C0CC8(&qword_100BCA880, v4, type metadata accessor for LocationDefaultConfiguration._Storage, (uint64_t)&unk_1009833DC);
    sub_1000BBCBC(v5, v6);
    sub_1000C35BC();
  }
  sub_1000998EC();
  sub_1000BF0D8();
  sub_100089054();
}

uint64_t sub_1001DDD5C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F9008();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001DDD84(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F9008();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001DDDAC(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1001DDCA0();
  if (!v1)
    *a1 = v3;
}

void sub_1001DDDD4()
{
  sub_1001DDC6C();
}

void sub_1001DDDE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1001DE3A0(a1, a2, a3, a4, (uint64_t)&OBJC_IVAR____TtCV7Weather32LocationDefaultNewsConfiguration8_Storage_map, (uint64_t)&OBJC_IVAR____TtCV7Weather32LocationDefaultNewsConfiguration8_Storage_airQuality, &OBJC_IVAR____TtCV7Weather32LocationDefaultNewsConfiguration8_Storage_newsArticle);
}

uint64_t sub_1001DDDFC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1001DDE2C + 4 * byte_100981863[a1]))(0x6E6F6D6D6F63, 0xE600000000000000);
}

uint64_t sub_1001DDE2C()
{
  return 7364973;
}

uint64_t sub_1001DDE3C()
{
  return 0x696C617551726961;
}

uint64_t sub_1001DDE58()
{
  return 0x697472417377656ELL;
}

uint64_t sub_1001DDE78()
{
  unsigned __int8 *v0;

  return sub_1001DDDFC(*v0);
}

void sub_1001DDE80(_BYTE *a1@<X8>)
{
  char v2;

  sub_1001DF378();
  *a1 = v2;
}

uint64_t sub_1001DDEA4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F65B4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001DDECC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F65B4();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001DDEF4()
{
  uint64_t v0;

  sub_10009C0B4();
  sub_100079F9C(v0 + OBJC_IVAR____TtCV7Weather32LocationDefaultNewsConfiguration8_Storage_map);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather32LocationDefaultNewsConfiguration8_Storage_airQuality);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather32LocationDefaultNewsConfiguration8_Storage_newsArticle);
  sub_10004A298();
}

uint64_t sub_1001DDF40()
{
  return sub_100082C68(sub_1001DDEF4);
}

uint64_t sub_1001DDF4C()
{
  return type metadata accessor for LocationDefaultNewsConfiguration._Storage(0);
}

uint64_t type metadata accessor for LocationDefaultNewsConfiguration._Storage(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC77B0, (uint64_t)&nominal type descriptor for LocationDefaultNewsConfiguration._Storage);
}

uint64_t sub_1001DDF6C(uint64_t a1)
{
  return sub_1001DDA20(a1, (void (*)(uint64_t))sub_1001DDF88);
}

void sub_1001DDF88()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  sub_100099310();
  v3 = v2;
  sub_1000D0014();
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_1000DA474(v5, v19);
  __chkstk_darwin(v6);
  sub_1000D056C();
  __chkstk_darwin(v7);
  sub_1000BCEC0();
  v8 = sub_1000BA294(&qword_100BCA428);
  v9 = sub_1000DAC14(v8);
  __chkstk_darwin(v9);
  sub_1000CDECC(v3, v3[3]);
  v10 = sub_1001F65B4();
  sub_1000C0900((uint64_t)&type metadata for LocationDefaultNewsConfiguration._Storage.CodingKeys, v11, v10);
  sub_1001FAFA4();
  if (v1)
  {
    sub_1000F439C(v12, v13);
  }
  else
  {
    sub_1000CDBB0();
    sub_1000C6570((uint64_t)&unk_100B616F0, (uint64_t)&v21, v20, (uint64_t)&unk_100B616F0);
    sub_1000BE754();
    sub_1000C0CC8((unint64_t *)&qword_100BCA2C0, v14, type metadata accessor for LocationViewComponent, (uint64_t)&unk_1009B2000);
    v16 = sub_100098924(v15);
    sub_100110444(v16, v0 + OBJC_IVAR____TtCV7Weather32LocationDefaultNewsConfiguration8_Storage_map, type metadata accessor for LocationViewComponent);
    v17 = sub_1000D9B8C();
    sub_1000ED420(v17, v0 + OBJC_IVAR____TtCV7Weather32LocationDefaultNewsConfiguration8_Storage_airQuality, type metadata accessor for LocationViewComponent);
    sub_1000D15AC();
    v18 = sub_1000C6578();
    sub_1000ED420(v18, v0 + OBJC_IVAR____TtCV7Weather32LocationDefaultNewsConfiguration8_Storage_newsArticle, type metadata accessor for LocationViewComponent);
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v3);
  sub_10011E690();
  sub_1000B44B0();
}

uint64_t sub_1001DE1A8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1001DDF6C(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1001DE1D0()
{
  char v0;

  sub_1001E6064();
  return v0 & 1;
}

void sub_1001DE208()
{
  uint64_t v0;

  v0 = sub_1000BD2A4();
  type metadata accessor for LocationDefaultNewsConfiguration._Storage(v0);
  sub_10011E5C8();
  sub_10004A298();
}

void sub_1001DE244()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1000BE9DC();
  sub_1000C00FC();
  sub_1000BA294(&qword_100BCA888);
  sub_1000BA514();
  __chkstk_darwin(v1);
  sub_1000CD594();
  v2 = sub_1001F9044();
  sub_1000C2488((uint64_t)&type metadata for LocationDefaultNewsConfiguration.CodingKeys, v3, v2);
  if (!v0)
  {
    type metadata accessor for LocationDefaultNewsConfiguration._Storage(0);
    sub_1000C0CC8(&qword_100BCA898, v4, type metadata accessor for LocationDefaultNewsConfiguration._Storage, (uint64_t)&unk_10098338C);
    sub_1000BBCBC(v5, v6);
    sub_1000C35BC();
  }
  sub_1000998EC();
  sub_1000BF0D8();
  sub_100089054();
}

uint64_t sub_1001DE300(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F9044();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001DE328(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F9044();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001DE350(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1001DE244();
  if (!v1)
    *a1 = v3;
}

void sub_1001DE378()
{
  sub_1001DE208();
}

void sub_1001DE384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1001DE3A0(a1, a2, a3, a4, (uint64_t)&OBJC_IVAR____TtCV7Weather37LocationDefaultTrendNewsConfiguration8_Storage_map, (uint64_t)&OBJC_IVAR____TtCV7Weather37LocationDefaultTrendNewsConfiguration8_Storage_airQuality, &OBJC_IVAR____TtCV7Weather37LocationDefaultTrendNewsConfiguration8_Storage_newsArticle);
}

void sub_1001DE3A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v7;
  uint64_t v8;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_1001FBC48(a1);
  sub_1001FB2A4(v11, v7 + *v10);
  v12 = sub_1001FB9AC();
  sub_1001FB2A4(v12, v13);
  sub_1001FB2A4(v8, v7 + *a7);
  sub_10004A2A0();
}

uint64_t sub_1001DE3FC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F6578();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001DE424(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F6578();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001DE44C()
{
  uint64_t v0;

  sub_10009C0B4();
  sub_100079F9C(v0 + OBJC_IVAR____TtCV7Weather37LocationDefaultTrendNewsConfiguration8_Storage_map);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather37LocationDefaultTrendNewsConfiguration8_Storage_airQuality);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather37LocationDefaultTrendNewsConfiguration8_Storage_newsArticle);
  sub_10004A298();
}

uint64_t sub_1001DE498()
{
  return sub_100082C68(sub_1001DE44C);
}

uint64_t sub_1001DE4A4()
{
  return type metadata accessor for LocationDefaultTrendNewsConfiguration._Storage(0);
}

uint64_t type metadata accessor for LocationDefaultTrendNewsConfiguration._Storage(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC7880, (uint64_t)&nominal type descriptor for LocationDefaultTrendNewsConfiguration._Storage);
}

uint64_t sub_1001DE4C0(uint64_t a1)
{
  return sub_1001DDA20(a1, (void (*)(uint64_t))sub_1001DE4DC);
}

void sub_1001DE4DC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  sub_100099310();
  v3 = v2;
  sub_1000D0014();
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_1000DA474(v5, v19);
  __chkstk_darwin(v6);
  sub_1000D056C();
  __chkstk_darwin(v7);
  sub_1000BCEC0();
  v8 = sub_1000BA294(&qword_100BCA418);
  v9 = sub_1000DAC14(v8);
  __chkstk_darwin(v9);
  sub_1000CDECC(v3, v3[3]);
  v10 = sub_1001F6578();
  sub_1000C0900((uint64_t)&type metadata for LocationDefaultTrendNewsConfiguration._Storage.CodingKeys, v11, v10);
  sub_1001FAFA4();
  if (v1)
  {
    sub_1000F439C(v12, v13);
  }
  else
  {
    sub_1000CDBB0();
    sub_1000C6570((uint64_t)&unk_100B616F0, (uint64_t)&v21, v20, (uint64_t)&unk_100B616F0);
    sub_1000BE754();
    sub_1000C0CC8((unint64_t *)&qword_100BCA2C0, v14, type metadata accessor for LocationViewComponent, (uint64_t)&unk_1009B2000);
    v16 = sub_100098924(v15);
    sub_100110444(v16, v0 + OBJC_IVAR____TtCV7Weather37LocationDefaultTrendNewsConfiguration8_Storage_map, type metadata accessor for LocationViewComponent);
    v17 = sub_1000D9B8C();
    sub_1000ED420(v17, v0 + OBJC_IVAR____TtCV7Weather37LocationDefaultTrendNewsConfiguration8_Storage_airQuality, type metadata accessor for LocationViewComponent);
    sub_1000D15AC();
    v18 = sub_1000C6578();
    sub_1000ED420(v18, v0 + OBJC_IVAR____TtCV7Weather37LocationDefaultTrendNewsConfiguration8_Storage_newsArticle, type metadata accessor for LocationViewComponent);
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v3);
  sub_10011E690();
  sub_1000B44B0();
}

uint64_t sub_1001DE6FC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1001DE4C0(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1001DE724()
{
  char v0;

  sub_1001E6064();
  return v0 & 1;
}

void sub_1001DE75C()
{
  uint64_t v0;

  v0 = sub_1000BD2A4();
  type metadata accessor for LocationDefaultTrendNewsConfiguration._Storage(v0);
  sub_10011E5C8();
  sub_10004A298();
}

void sub_1001DE798()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1000BE9DC();
  sub_1000C00FC();
  sub_1000BA294(&qword_100BCA8A0);
  sub_1000BA514();
  __chkstk_darwin(v1);
  sub_1000CD594();
  v2 = sub_1001F9080();
  sub_1000C2488((uint64_t)&type metadata for LocationDefaultTrendNewsConfiguration.CodingKeys, v3, v2);
  if (!v0)
  {
    type metadata accessor for LocationDefaultTrendNewsConfiguration._Storage(0);
    sub_1000C0CC8(&qword_100BCA8B0, v4, type metadata accessor for LocationDefaultTrendNewsConfiguration._Storage, (uint64_t)&unk_10098333C);
    sub_1000BBCBC(v5, v6);
    sub_1000C35BC();
  }
  sub_1000998EC();
  sub_1000BF0D8();
  sub_100089054();
}

uint64_t sub_1001DE854(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F9080();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001DE87C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F9080();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001DE8A4(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1001DE798();
  if (!v1)
    *a1 = v3;
}

void sub_1001DE8CC()
{
  sub_1001DE75C();
}

void sub_1001DE8D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1001DE8EC(a1, a2, a3, &OBJC_IVAR____TtCV7Weather32LocationElevatedAqiConfiguration8_Storage_map, &OBJC_IVAR____TtCV7Weather32LocationElevatedAqiConfiguration8_Storage_airQuality);
}

void sub_1001DE8EC(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, _QWORD *a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a1;
  sub_1000B308C(a2, v5 + *a4);
  sub_1000B308C(a3, v5 + *a5);
  sub_100079F70();
}

void sub_1001DE940()
{
  uint64_t v0;
  BOOL v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;

  sub_10009C810();
  v1 = v1 && v0 == 0xE600000000000000;
  if (v1
    || (v2 = v0, (sub_1000D8DF8(0x6E6F6D6D6F63, 0xE600000000000000) & 1) != 0)
    || ((sub_10009F03C(), v1) ? (v3 = v2 == 0xE300000000000000) : (v3 = 0),
        v3 || (sub_1000D8DF8(7364973, 0xE300000000000000) & 1) != 0))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10009E30C();
    if (v1 && v2 == v4)
    {
      sub_100094F48();
    }
    else
    {
      sub_1000D8DF8(0x696C617551726961, 0xEA00000000007974);
      sub_1000986E8();
    }
  }
  sub_10004A298();
}

uint64_t sub_1001DEA20(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F653C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001DEA48(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F653C();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001DEA70()
{
  uint64_t v0;

  sub_10009C0B4();
  sub_100079F9C(v0 + OBJC_IVAR____TtCV7Weather32LocationElevatedAqiConfiguration8_Storage_map);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather32LocationElevatedAqiConfiguration8_Storage_airQuality);
  sub_10004A298();
}

uint64_t sub_1001DEAB0()
{
  return sub_100082C68(sub_1001DEA70);
}

uint64_t sub_1001DEABC()
{
  return type metadata accessor for LocationElevatedAqiConfiguration._Storage(0);
}

uint64_t type metadata accessor for LocationElevatedAqiConfiguration._Storage(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC7950, (uint64_t)&nominal type descriptor for LocationElevatedAqiConfiguration._Storage);
}

uint64_t sub_1001DEAD8(uint64_t a1)
{
  return sub_1001DDA20(a1, (void (*)(uint64_t))sub_1001DEAF4);
}

void sub_1001DEAF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_100099310();
  v13 = v12;
  sub_1000D0014();
  sub_1000B42B0();
  __chkstk_darwin(v14);
  sub_1000DB210();
  __chkstk_darwin(v15);
  sub_1000BCEC0();
  sub_1000BA294(&qword_100BCA408);
  sub_1000AE898();
  __chkstk_darwin(v16);
  sub_1000CDECC(v13, v13[3]);
  v17 = sub_1001F653C();
  sub_10004A300((uint64_t)&type metadata for LocationElevatedAqiConfiguration._Storage.CodingKeys, v18, v17);
  sub_1001FB988();
  if (v11)
  {
    sub_1001FAF74(v19, v20);
  }
  else
  {
    sub_1000FD9F8();
    sub_1000BE8A0((uint64_t)&unk_100B616F0);
    *(_QWORD *)(v10 + 16) = a10;
    sub_1000FD8EC();
    sub_1000C0CC8((unint64_t *)&qword_100BCA2C0, v21, type metadata accessor for LocationViewComponent, (uint64_t)&unk_1009B2000);
    v23 = sub_1000CE4FC(v22);
    sub_10009C79C(v23, v10 + OBJC_IVAR____TtCV7Weather32LocationElevatedAqiConfiguration8_Storage_map, type metadata accessor for LocationViewComponent);
    sub_1000DC89C();
    v24 = sub_10011E2D0();
    sub_10009C79C(v24, v10 + OBJC_IVAR____TtCV7Weather32LocationElevatedAqiConfiguration8_Storage_airQuality, type metadata accessor for LocationViewComponent);
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v13);
  sub_10011DE38();
  sub_1000B44B0();
}

uint64_t sub_1001DEC98@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1001DEAD8(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1001DECC0()
{
  char v0;

  sub_1001E410C();
  return v0 & 1;
}

void sub_1001DECF0()
{
  uint64_t v0;

  v0 = sub_1000BD2A4();
  type metadata accessor for LocationElevatedAqiConfiguration._Storage(v0);
  sub_1001FB250();
  sub_10004A298();
}

void sub_1001DED24()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1000BE9DC();
  sub_1000C00FC();
  sub_1000BA294(&qword_100BCA8B8);
  sub_1000BA514();
  __chkstk_darwin(v1);
  sub_1000CD594();
  v2 = sub_1001F90BC();
  sub_1000C2488((uint64_t)&type metadata for LocationElevatedAqiConfiguration.CodingKeys, v3, v2);
  if (!v0)
  {
    type metadata accessor for LocationElevatedAqiConfiguration._Storage(0);
    sub_1000C0CC8(&qword_100BCA8C8, v4, type metadata accessor for LocationElevatedAqiConfiguration._Storage, (uint64_t)&unk_1009832EC);
    sub_1000BBCBC(v5, v6);
    sub_1000C35BC();
  }
  sub_1000998EC();
  sub_1000BF0D8();
  sub_100089054();
}

uint64_t sub_1001DEDE0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F90BC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001DEE08(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F90BC();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001DEE30(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1001DED24();
  if (!v1)
    *a1 = v3;
}

void sub_1001DEE58()
{
  sub_1001DECF0();
}

void sub_1001DEE64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1001DE3A0(a1, a2, a3, a4, (uint64_t)&OBJC_IVAR____TtCV7Weather42LocationElevatedAqiMinorAlertConfiguration8_Storage_map, (uint64_t)&OBJC_IVAR____TtCV7Weather42LocationElevatedAqiMinorAlertConfiguration8_Storage_severeAlert, &OBJC_IVAR____TtCV7Weather42LocationElevatedAqiMinorAlertConfiguration8_Storage_airQuality);
}

uint64_t sub_1001DEE80(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F6500();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001DEEA8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F6500();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001DEED0()
{
  uint64_t v0;

  sub_10009C0B4();
  sub_100079F9C(v0 + OBJC_IVAR____TtCV7Weather42LocationElevatedAqiMinorAlertConfiguration8_Storage_map);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather42LocationElevatedAqiMinorAlertConfiguration8_Storage_severeAlert);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather42LocationElevatedAqiMinorAlertConfiguration8_Storage_airQuality);
  sub_10004A298();
}

uint64_t sub_1001DEF1C()
{
  return sub_100082C68(sub_1001DEED0);
}

uint64_t sub_1001DEF28()
{
  return type metadata accessor for LocationElevatedAqiMinorAlertConfiguration._Storage(0);
}

uint64_t type metadata accessor for LocationElevatedAqiMinorAlertConfiguration._Storage(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC7A18, (uint64_t)&nominal type descriptor for LocationElevatedAqiMinorAlertConfiguration._Storage);
}

uint64_t sub_1001DEF44(uint64_t a1)
{
  return sub_1001DDA20(a1, (void (*)(uint64_t))sub_1001DEF60);
}

void sub_1001DEF60()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  sub_100099310();
  v3 = v2;
  sub_1000D0014();
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_1000DA474(v5, v19);
  __chkstk_darwin(v6);
  sub_1000D056C();
  __chkstk_darwin(v7);
  sub_1000BCEC0();
  v8 = sub_1000BA294(&qword_100BCA3F8);
  v9 = sub_1000DAC14(v8);
  __chkstk_darwin(v9);
  sub_1000CDECC(v3, v3[3]);
  v10 = sub_1001F6500();
  sub_1000C0900((uint64_t)&type metadata for LocationElevatedAqiMinorAlertConfiguration._Storage.CodingKeys, v11, v10);
  sub_1001FAFA4();
  if (v1)
  {
    sub_1000F439C(v12, v13);
  }
  else
  {
    sub_1000CDBB0();
    sub_1000C6570((uint64_t)&unk_100B616F0, (uint64_t)&v21, v20, (uint64_t)&unk_100B616F0);
    sub_1000BE754();
    sub_1000C0CC8((unint64_t *)&qword_100BCA2C0, v14, type metadata accessor for LocationViewComponent, (uint64_t)&unk_1009B2000);
    v16 = sub_100098924(v15);
    sub_100110444(v16, v0 + OBJC_IVAR____TtCV7Weather42LocationElevatedAqiMinorAlertConfiguration8_Storage_map, type metadata accessor for LocationViewComponent);
    v17 = sub_1000D9B8C();
    sub_1000ED420(v17, v0 + OBJC_IVAR____TtCV7Weather42LocationElevatedAqiMinorAlertConfiguration8_Storage_severeAlert, type metadata accessor for LocationViewComponent);
    sub_1000D15AC();
    v18 = sub_1000C6578();
    sub_1000ED420(v18, v0 + OBJC_IVAR____TtCV7Weather42LocationElevatedAqiMinorAlertConfiguration8_Storage_airQuality, type metadata accessor for LocationViewComponent);
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v3);
  sub_10011E690();
  sub_1000B44B0();
}

uint64_t sub_1001DF180@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1001DEF44(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1001DF1A8()
{
  char v0;

  sub_1001E6064();
  return v0 & 1;
}

void sub_1001DF1E0()
{
  uint64_t v0;

  v0 = sub_1000BD2A4();
  type metadata accessor for LocationElevatedAqiMinorAlertConfiguration._Storage(v0);
  sub_10011E5C8();
  sub_10004A298();
}

void sub_1001DF21C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1000BE9DC();
  sub_1000C00FC();
  sub_1000BA294(&qword_100BCA8D0);
  sub_1000BA514();
  __chkstk_darwin(v1);
  sub_1000CD594();
  v2 = sub_1001F90F8();
  sub_1000C2488((uint64_t)&type metadata for LocationElevatedAqiMinorAlertConfiguration.CodingKeys, v3, v2);
  if (!v0)
  {
    type metadata accessor for LocationElevatedAqiMinorAlertConfiguration._Storage(0);
    sub_1000C0CC8(&qword_100BCA8E0, v4, type metadata accessor for LocationElevatedAqiMinorAlertConfiguration._Storage, (uint64_t)&unk_10098329C);
    sub_1000BBCBC(v5, v6);
    sub_1000C35BC();
  }
  sub_1000998EC();
  sub_1000BF0D8();
  sub_100089054();
}

uint64_t sub_1001DF2D8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F90F8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001DF300(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F90F8();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001DF328(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1001DF21C();
  if (!v1)
    *a1 = v3;
}

void sub_1001DF350()
{
  sub_1001DF1E0();
}

void sub_1001DF35C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1001DE3A0(a1, a2, a3, a4, (uint64_t)&OBJC_IVAR____TtCV7Weather36LocationElevatedAqiNewsConfiguration8_Storage_map, (uint64_t)&OBJC_IVAR____TtCV7Weather36LocationElevatedAqiNewsConfiguration8_Storage_airQuality, &OBJC_IVAR____TtCV7Weather36LocationElevatedAqiNewsConfiguration8_Storage_newsArticle);
}

void sub_1001DF378()
{
  uint64_t v0;
  uint64_t v1;
  BOOL v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  BOOL v7;
  BOOL v8;

  sub_10009C810();
  v2 = v2 && v1 == 0xE600000000000000;
  if (v2
    || (v3 = v1, v4 = v0, (sub_1000D8DF8(0x6E6F6D6D6F63, 0xE600000000000000) & 1) != 0)
    || ((sub_10009F03C(), v2) ? (v5 = v3 == 0xE300000000000000) : (v5 = 0),
        v5
     || (sub_1000D8DF8(7364973, 0xE300000000000000) & 1) != 0
     || ((sub_10009E30C(), v2) ? (v7 = v3 == v6) : (v7 = 0),
         v7
      || (sub_1000D8DF8(0x696C617551726961, 0xEA00000000007974) & 1) != 0
      || (v4 == 0x697472417377656ELL ? (v8 = v3 == 0xEB00000000656C63) : (v8 = 0), v8))))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1000D8DF8(0x697472417377656ELL, 0xEB00000000656C63);
    sub_1000986E8();
  }
  sub_10004A298();
}

uint64_t sub_1001DF4CC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F64C4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001DF4F4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F64C4();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001DF51C()
{
  uint64_t v0;

  sub_10009C0B4();
  sub_100079F9C(v0 + OBJC_IVAR____TtCV7Weather36LocationElevatedAqiNewsConfiguration8_Storage_map);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather36LocationElevatedAqiNewsConfiguration8_Storage_airQuality);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather36LocationElevatedAqiNewsConfiguration8_Storage_newsArticle);
  sub_10004A298();
}

uint64_t sub_1001DF568()
{
  return sub_100082C68(sub_1001DF51C);
}

uint64_t sub_1001DF574()
{
  return type metadata accessor for LocationElevatedAqiNewsConfiguration._Storage(0);
}

uint64_t type metadata accessor for LocationElevatedAqiNewsConfiguration._Storage(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC7AE8, (uint64_t)&nominal type descriptor for LocationElevatedAqiNewsConfiguration._Storage);
}

uint64_t sub_1001DF590(uint64_t a1)
{
  return sub_1001DDA20(a1, (void (*)(uint64_t))sub_1001DF5AC);
}

void sub_1001DF5AC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  sub_100099310();
  v3 = v2;
  sub_1000D0014();
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_1000DA474(v5, v19);
  __chkstk_darwin(v6);
  sub_1000D056C();
  __chkstk_darwin(v7);
  sub_1000BCEC0();
  v8 = sub_1000BA294(&qword_100BCA3E8);
  v9 = sub_1000DAC14(v8);
  __chkstk_darwin(v9);
  sub_1000CDECC(v3, v3[3]);
  v10 = sub_1001F64C4();
  sub_1000C0900((uint64_t)&type metadata for LocationElevatedAqiNewsConfiguration._Storage.CodingKeys, v11, v10);
  sub_1001FAFA4();
  if (v1)
  {
    sub_1000F439C(v12, v13);
  }
  else
  {
    sub_1000CDBB0();
    sub_1000C6570((uint64_t)&unk_100B616F0, (uint64_t)&v21, v20, (uint64_t)&unk_100B616F0);
    sub_1000BE754();
    sub_1000C0CC8((unint64_t *)&qword_100BCA2C0, v14, type metadata accessor for LocationViewComponent, (uint64_t)&unk_1009B2000);
    v16 = sub_100098924(v15);
    sub_100110444(v16, v0 + OBJC_IVAR____TtCV7Weather36LocationElevatedAqiNewsConfiguration8_Storage_map, type metadata accessor for LocationViewComponent);
    v17 = sub_1000D9B8C();
    sub_1000ED420(v17, v0 + OBJC_IVAR____TtCV7Weather36LocationElevatedAqiNewsConfiguration8_Storage_airQuality, type metadata accessor for LocationViewComponent);
    sub_1000D15AC();
    v18 = sub_1000C6578();
    sub_1000ED420(v18, v0 + OBJC_IVAR____TtCV7Weather36LocationElevatedAqiNewsConfiguration8_Storage_newsArticle, type metadata accessor for LocationViewComponent);
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v3);
  sub_10011E690();
  sub_1000B44B0();
}

uint64_t sub_1001DF7CC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1001DF590(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1001DF7F4()
{
  char v0;

  sub_1001E6064();
  return v0 & 1;
}

void sub_1001DF82C()
{
  uint64_t v0;

  v0 = sub_1000BD2A4();
  type metadata accessor for LocationElevatedAqiNewsConfiguration._Storage(v0);
  sub_10011E5C8();
  sub_10004A298();
}

void sub_1001DF868()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1000BE9DC();
  sub_1000C00FC();
  sub_1000BA294(&qword_100BCA8E8);
  sub_1000BA514();
  __chkstk_darwin(v1);
  sub_1000CD594();
  v2 = sub_1001F9134();
  sub_1000C2488((uint64_t)&type metadata for LocationElevatedAqiNewsConfiguration.CodingKeys, v3, v2);
  if (!v0)
  {
    type metadata accessor for LocationElevatedAqiNewsConfiguration._Storage(0);
    sub_1000C0CC8(&qword_100BCA8F8, v4, type metadata accessor for LocationElevatedAqiNewsConfiguration._Storage, (uint64_t)&unk_10098324C);
    sub_1000BBCBC(v5, v6);
    sub_1000C35BC();
  }
  sub_1000998EC();
  sub_1000BF0D8();
  sub_100089054();
}

uint64_t sub_1001DF924(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F9134();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001DF94C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F9134();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001DF974(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1001DF868();
  if (!v1)
    *a1 = v3;
}

void sub_1001DF99C()
{
  sub_1001DF82C();
}

void sub_1001DF9A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1001DE3A0(a1, a2, a3, a4, (uint64_t)&OBJC_IVAR____TtCV7Weather38LocationElevatedAqiSevereConfiguration8_Storage_map, (uint64_t)&OBJC_IVAR____TtCV7Weather38LocationElevatedAqiSevereConfiguration8_Storage_airQuality, &OBJC_IVAR____TtCV7Weather38LocationElevatedAqiSevereConfiguration8_Storage_severeAlert);
}

uint64_t sub_1001DF9C4(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v8;
  unint64_t v10;
  char v12;

  if (a1 == 0x6E6F6D6D6F63 && a2 == 0xE600000000000000)
  {
    v5 = 0xE600000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F6D6D6F63, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 7364973 && a2 == 0xE300000000000000)
  {
    v8 = 0xE300000000000000;
    goto LABEL_16;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(7364973, 0xE300000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
LABEL_16:
    swift_bridgeObjectRelease(v8);
    return 1;
  }
  if (a1 == 0x696C617551726961 && a2 == 0xEA00000000007974)
  {
    v10 = 0xEA00000000007974;
    goto LABEL_24;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x696C617551726961, 0xEA00000000007974, a1, a2, 0) & 1) != 0)
  {
    v10 = a2;
LABEL_24:
    swift_bridgeObjectRelease(v10);
    return 2;
  }
  if (a1 == 0x6C41657265766573 && a2 == 0xEB00000000747265)
  {
    swift_bridgeObjectRelease(0xEB00000000747265);
    return 3;
  }
  else
  {
    v12 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6C41657265766573, 0xEB00000000747265, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v12 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1001DFB7C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1001DFBAC + 4 * byte_100981867[a1]))(0x6E6F6D6D6F63, 0xE600000000000000);
}

uint64_t sub_1001DFBAC()
{
  return 7364973;
}

uint64_t sub_1001DFBBC()
{
  return 0x696C617551726961;
}

uint64_t sub_1001DFBD8()
{
  return 0x6C41657265766573;
}

uint64_t sub_1001DFBF8()
{
  unsigned __int8 *v0;

  return sub_1001DFB7C(*v0);
}

uint64_t sub_1001DFC00@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1001DF9C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1001DFC24(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F6488();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001DFC4C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F6488();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001DFC74()
{
  uint64_t v0;

  sub_10009C0B4();
  sub_100079F9C(v0 + OBJC_IVAR____TtCV7Weather38LocationElevatedAqiSevereConfiguration8_Storage_map);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather38LocationElevatedAqiSevereConfiguration8_Storage_airQuality);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather38LocationElevatedAqiSevereConfiguration8_Storage_severeAlert);
  sub_10004A298();
}

uint64_t sub_1001DFCC0()
{
  return sub_100082C68(sub_1001DFC74);
}

uint64_t sub_1001DFCCC()
{
  return type metadata accessor for LocationElevatedAqiSevereConfiguration._Storage(0);
}

uint64_t type metadata accessor for LocationElevatedAqiSevereConfiguration._Storage(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC7BB8, (uint64_t)&nominal type descriptor for LocationElevatedAqiSevereConfiguration._Storage);
}

uint64_t sub_1001DFCE8(uint64_t a1)
{
  return sub_1001DDA20(a1, (void (*)(uint64_t))sub_1001DFD04);
}

void sub_1001DFD04()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  sub_100099310();
  v3 = v2;
  sub_1000D0014();
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_1000DA474(v5, v19);
  __chkstk_darwin(v6);
  sub_1000D056C();
  __chkstk_darwin(v7);
  sub_1000BCEC0();
  v8 = sub_1000BA294(&qword_100BCA3D8);
  v9 = sub_1000DAC14(v8);
  __chkstk_darwin(v9);
  sub_1000CDECC(v3, v3[3]);
  v10 = sub_1001F6488();
  sub_1000C0900((uint64_t)&type metadata for LocationElevatedAqiSevereConfiguration._Storage.CodingKeys, v11, v10);
  sub_1001FAFA4();
  if (v1)
  {
    sub_1000F439C(v12, v13);
  }
  else
  {
    sub_1000CDBB0();
    sub_1000C6570((uint64_t)&unk_100B616F0, (uint64_t)&v21, v20, (uint64_t)&unk_100B616F0);
    sub_1000BE754();
    sub_1000C0CC8((unint64_t *)&qword_100BCA2C0, v14, type metadata accessor for LocationViewComponent, (uint64_t)&unk_1009B2000);
    v16 = sub_100098924(v15);
    sub_100110444(v16, v0 + OBJC_IVAR____TtCV7Weather38LocationElevatedAqiSevereConfiguration8_Storage_map, type metadata accessor for LocationViewComponent);
    v17 = sub_1000D9B8C();
    sub_1000ED420(v17, v0 + OBJC_IVAR____TtCV7Weather38LocationElevatedAqiSevereConfiguration8_Storage_airQuality, type metadata accessor for LocationViewComponent);
    sub_1000D15AC();
    v18 = sub_1000C6578();
    sub_1000ED420(v18, v0 + OBJC_IVAR____TtCV7Weather38LocationElevatedAqiSevereConfiguration8_Storage_severeAlert, type metadata accessor for LocationViewComponent);
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v3);
  sub_10011E690();
  sub_1000B44B0();
}

uint64_t sub_1001DFF24@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1001DFCE8(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1001DFF4C()
{
  char v0;

  sub_1001E6064();
  return v0 & 1;
}

void sub_1001DFF84()
{
  uint64_t v0;

  v0 = sub_1000BD2A4();
  type metadata accessor for LocationElevatedAqiSevereConfiguration._Storage(v0);
  sub_10011E5C8();
  sub_10004A298();
}

void sub_1001DFFC0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1000BE9DC();
  sub_1000C00FC();
  sub_1000BA294(&qword_100BCA900);
  sub_1000BA514();
  __chkstk_darwin(v1);
  sub_1000CD594();
  v2 = sub_1001F9170();
  sub_1000C2488((uint64_t)&type metadata for LocationElevatedAqiSevereConfiguration.CodingKeys, v3, v2);
  if (!v0)
  {
    type metadata accessor for LocationElevatedAqiSevereConfiguration._Storage(0);
    sub_1000C0CC8(&qword_100BCA910, v4, type metadata accessor for LocationElevatedAqiSevereConfiguration._Storage, (uint64_t)&unk_1009831FC);
    sub_1000BBCBC(v5, v6);
    sub_1000C35BC();
  }
  sub_1000998EC();
  sub_1000BF0D8();
  sub_100089054();
}

uint64_t sub_1001E007C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F9170();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001E00A4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F9170();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001E00CC(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1001DFFC0();
  if (!v1)
    *a1 = v3;
}

void sub_1001E00F4()
{
  sub_1001DFF84();
}

void sub_1001E0100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1001E16BC(a1, a2, a3, a4, a5, (uint64_t)&OBJC_IVAR____TtCV7Weather42LocationElevatedAqiSevereNewsConfiguration8_Storage_map, (uint64_t)&OBJC_IVAR____TtCV7Weather42LocationElevatedAqiSevereNewsConfiguration8_Storage_airQuality, (uint64_t)&OBJC_IVAR____TtCV7Weather42LocationElevatedAqiSevereNewsConfiguration8_Storage_severeAlert, &OBJC_IVAR____TtCV7Weather42LocationElevatedAqiSevereNewsConfiguration8_Storage_newsArticle);
  sub_1000CC7E4();
}

uint64_t sub_1001E013C(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v8;
  unint64_t v10;
  unint64_t v12;
  char v14;

  if (a1 == 0x6E6F6D6D6F63 && a2 == 0xE600000000000000)
  {
    v5 = 0xE600000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F6D6D6F63, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 7364973 && a2 == 0xE300000000000000)
  {
    v8 = 0xE300000000000000;
    goto LABEL_16;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(7364973, 0xE300000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
LABEL_16:
    swift_bridgeObjectRelease(v8);
    return 1;
  }
  if (a1 == 0x696C617551726961 && a2 == 0xEA00000000007974)
  {
    v10 = 0xEA00000000007974;
    goto LABEL_24;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x696C617551726961, 0xEA00000000007974, a1, a2, 0) & 1) != 0)
  {
    v10 = a2;
LABEL_24:
    swift_bridgeObjectRelease(v10);
    return 2;
  }
  if (a1 == 0x6C41657265766573 && a2 == 0xEB00000000747265)
  {
    v12 = 0xEB00000000747265;
    goto LABEL_32;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6C41657265766573, 0xEB00000000747265, a1, a2, 0) & 1) != 0)
  {
    v12 = a2;
LABEL_32:
    swift_bridgeObjectRelease(v12);
    return 3;
  }
  if (a1 == 0x697472417377656ELL && a2 == 0xEB00000000656C63)
  {
    swift_bridgeObjectRelease(0xEB00000000656C63);
    return 4;
  }
  else
  {
    v14 = _stringCompareWithSmolCheck(_:_:expecting:)(0x697472417377656ELL, 0xEB00000000656C63, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v14 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1001E036C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1001E039C + 4 * byte_10098186B[a1]))(0x6E6F6D6D6F63, 0xE600000000000000);
}

uint64_t sub_1001E039C()
{
  return 7364973;
}

uint64_t sub_1001E03AC()
{
  return 0x696C617551726961;
}

uint64_t sub_1001E03C8()
{
  return 0x6C41657265766573;
}

uint64_t sub_1001E03E8()
{
  return 0x697472417377656ELL;
}

uint64_t sub_1001E0408()
{
  unsigned __int8 *v0;

  return sub_1001E036C(*v0);
}

uint64_t sub_1001E0410@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1001E013C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1001E0434(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F644C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001E045C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F644C();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001E0484()
{
  uint64_t v0;

  sub_10009C0B4();
  sub_100079F9C(v0 + OBJC_IVAR____TtCV7Weather42LocationElevatedAqiSevereNewsConfiguration8_Storage_map);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather42LocationElevatedAqiSevereNewsConfiguration8_Storage_airQuality);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather42LocationElevatedAqiSevereNewsConfiguration8_Storage_severeAlert);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather42LocationElevatedAqiSevereNewsConfiguration8_Storage_newsArticle);
  sub_10004A298();
}

uint64_t sub_1001E04DC()
{
  return sub_100082C68(sub_1001E0484);
}

uint64_t sub_1001E04E8()
{
  return type metadata accessor for LocationElevatedAqiSevereNewsConfiguration._Storage(0);
}

uint64_t type metadata accessor for LocationElevatedAqiSevereNewsConfiguration._Storage(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC7C88, (uint64_t)&nominal type descriptor for LocationElevatedAqiSevereNewsConfiguration._Storage);
}

uint64_t sub_1001E0508(uint64_t a1)
{
  return sub_1001DDA20(a1, (void (*)(uint64_t))sub_1001E0524);
}

void sub_1001E0524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD v36[5];
  uint64_t v37;
  _QWORD *v38;
  char v39;
  char v40;
  __int16 v41;

  sub_100099310();
  v13 = v10;
  v15 = v14;
  v36[4] = sub_1000D0014();
  sub_1000B42B0();
  __chkstk_darwin(v16);
  v36[2] = (char *)v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009D2A4();
  __chkstk_darwin(v18);
  v36[3] = (char *)v36 - v19;
  sub_10009D2A4();
  __chkstk_darwin(v20);
  sub_10011E770();
  __chkstk_darwin(v21);
  sub_10011DB14();
  v22 = sub_1000BA294(&qword_100BCA3C8);
  v23 = sub_1000DAC14(v22);
  __chkstk_darwin(v23);
  sub_1000CDECC(v15, v15[3]);
  v24 = sub_1001F644C();
  sub_1000ECF20((uint64_t)&type metadata for LocationElevatedAqiSevereNewsConfiguration._Storage.CodingKeys, v25, v24);
  sub_1001FAFA4();
  if (v11)
  {
    sub_10009EE5C(v26, v27);
    v35 = v15;
  }
  else
  {
    sub_1000EF954();
    v28 = v37;
    sub_1000C6570((uint64_t)&unk_100B616F0, (uint64_t)&v41 + 1, v37, (uint64_t)&unk_100B616F0);
    *(_QWORD *)(v10 + 16) = a10;
    sub_1000FD8EC();
    sub_1000C0CC8((unint64_t *)&qword_100BCA2C0, v29, type metadata accessor for LocationViewComponent, (uint64_t)&unk_1009B2000);
    v30 = sub_1000C6570(v12, (uint64_t)&v41, v28, v12);
    sub_100110444(v30, v10 + OBJC_IVAR____TtCV7Weather42LocationElevatedAqiSevereNewsConfiguration8_Storage_map, type metadata accessor for LocationViewComponent);
    v31 = sub_1000BD2B4();
    sub_10009C924(v31, v10 + OBJC_IVAR____TtCV7Weather42LocationElevatedAqiSevereNewsConfiguration8_Storage_airQuality, type metadata accessor for LocationViewComponent);
    v40 = 3;
    v32 = sub_1000C6570(0, (uint64_t)&v40, v28, 0);
    sub_10009C924(v32, v10 + OBJC_IVAR____TtCV7Weather42LocationElevatedAqiSevereNewsConfiguration8_Storage_severeAlert, type metadata accessor for LocationViewComponent);
    v39 = 4;
    v33 = v38;
    sub_1000C6570(0, (uint64_t)&v39, v28, 0);
    sub_1001FB514();
    v34 = sub_1000C6578();
    sub_1000ED420(v34, v13 + OBJC_IVAR____TtCV7Weather42LocationElevatedAqiSevereNewsConfiguration8_Storage_newsArticle, type metadata accessor for LocationViewComponent);
    v35 = v33;
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v35);
  sub_10011E690();
  sub_1000B44B0();
}

uint64_t sub_1001E0838@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1001E0508(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1001E0860()
{
  char v0;

  sub_1001E7864();
  return v0 & 1;
}

void sub_1001E08A0()
{
  uint64_t v0;

  v0 = sub_1000BD2A4();
  type metadata accessor for LocationElevatedAqiSevereNewsConfiguration._Storage(v0);
  sub_1001FAFF4();
  sub_10004A298();
}

void sub_1001E08E4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1000BE9DC();
  sub_1000C00FC();
  sub_1000BA294(&qword_100BCA918);
  sub_1000BA514();
  __chkstk_darwin(v1);
  sub_1000CD594();
  v2 = sub_1001F91AC();
  sub_1000C2488((uint64_t)&type metadata for LocationElevatedAqiSevereNewsConfiguration.CodingKeys, v3, v2);
  if (!v0)
  {
    type metadata accessor for LocationElevatedAqiSevereNewsConfiguration._Storage(0);
    sub_1000C0CC8(&qword_100BCA928, v4, type metadata accessor for LocationElevatedAqiSevereNewsConfiguration._Storage, (uint64_t)&unk_1009831AC);
    sub_1000BBCBC(v5, v6);
    sub_1000C35BC();
  }
  sub_1000998EC();
  sub_1000BF0D8();
  sub_100089054();
}

uint64_t sub_1001E09A0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F91AC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001E09C8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F91AC();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001E09F0(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1001E08E4();
  if (!v1)
    *a1 = v3;
}

void sub_1001E0A18()
{
  sub_1001E08A0();
}

void sub_1001E0A24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1001DE3A0(a1, a2, a3, a4, (uint64_t)&OBJC_IVAR____TtCV7Weather31LocationMinorAlertConfiguration8_Storage_map, (uint64_t)&OBJC_IVAR____TtCV7Weather31LocationMinorAlertConfiguration8_Storage_severeAlert, &OBJC_IVAR____TtCV7Weather31LocationMinorAlertConfiguration8_Storage_airQuality);
}

uint64_t sub_1001E0A40(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F6410();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001E0A68(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F6410();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001E0A90()
{
  uint64_t v0;

  sub_10009C0B4();
  sub_100079F9C(v0 + OBJC_IVAR____TtCV7Weather31LocationMinorAlertConfiguration8_Storage_map);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather31LocationMinorAlertConfiguration8_Storage_severeAlert);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather31LocationMinorAlertConfiguration8_Storage_airQuality);
  sub_10004A298();
}

uint64_t sub_1001E0ADC()
{
  return sub_100082C68(sub_1001E0A90);
}

uint64_t sub_1001E0AE8()
{
  return type metadata accessor for LocationMinorAlertConfiguration._Storage(0);
}

uint64_t type metadata accessor for LocationMinorAlertConfiguration._Storage(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC7D60, (uint64_t)&nominal type descriptor for LocationMinorAlertConfiguration._Storage);
}

uint64_t sub_1001E0B04(uint64_t a1)
{
  return sub_1001DDA20(a1, (void (*)(uint64_t))sub_1001E0B20);
}

void sub_1001E0B20()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  sub_100099310();
  v3 = v2;
  sub_1000D0014();
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_1000DA474(v5, v19);
  __chkstk_darwin(v6);
  sub_1000D056C();
  __chkstk_darwin(v7);
  sub_1000BCEC0();
  v8 = sub_1000BA294(&qword_100BCA3B8);
  v9 = sub_1000DAC14(v8);
  __chkstk_darwin(v9);
  sub_1000CDECC(v3, v3[3]);
  v10 = sub_1001F6410();
  sub_1000C0900((uint64_t)&type metadata for LocationMinorAlertConfiguration._Storage.CodingKeys, v11, v10);
  sub_1001FAFA4();
  if (v1)
  {
    sub_1000F439C(v12, v13);
  }
  else
  {
    sub_1000CDBB0();
    sub_1000C6570((uint64_t)&unk_100B616F0, (uint64_t)&v21, v20, (uint64_t)&unk_100B616F0);
    sub_1000BE754();
    sub_1000C0CC8((unint64_t *)&qword_100BCA2C0, v14, type metadata accessor for LocationViewComponent, (uint64_t)&unk_1009B2000);
    v16 = sub_100098924(v15);
    sub_100110444(v16, v0 + OBJC_IVAR____TtCV7Weather31LocationMinorAlertConfiguration8_Storage_map, type metadata accessor for LocationViewComponent);
    v17 = sub_1000D9B8C();
    sub_1000ED420(v17, v0 + OBJC_IVAR____TtCV7Weather31LocationMinorAlertConfiguration8_Storage_severeAlert, type metadata accessor for LocationViewComponent);
    sub_1000D15AC();
    v18 = sub_1000C6578();
    sub_1000ED420(v18, v0 + OBJC_IVAR____TtCV7Weather31LocationMinorAlertConfiguration8_Storage_airQuality, type metadata accessor for LocationViewComponent);
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v3);
  sub_10011E690();
  sub_1000B44B0();
}

uint64_t sub_1001E0D40@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1001E0B04(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1001E0D68()
{
  char v0;

  sub_1001E6064();
  return v0 & 1;
}

void sub_1001E0DA0()
{
  uint64_t v0;

  v0 = sub_1000BD2A4();
  type metadata accessor for LocationMinorAlertConfiguration._Storage(v0);
  sub_10011E5C8();
  sub_10004A298();
}

void sub_1001E0DDC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1000BE9DC();
  sub_1000C00FC();
  sub_1000BA294(&qword_100BCA930);
  sub_1000BA514();
  __chkstk_darwin(v1);
  sub_1000CD594();
  v2 = sub_1001F91E8();
  sub_1000C2488((uint64_t)&type metadata for LocationMinorAlertConfiguration.CodingKeys, v3, v2);
  if (!v0)
  {
    type metadata accessor for LocationMinorAlertConfiguration._Storage(0);
    sub_1000C0CC8(&qword_100BCA940, v4, type metadata accessor for LocationMinorAlertConfiguration._Storage, (uint64_t)&unk_10098315C);
    sub_1000BBCBC(v5, v6);
    sub_1000C35BC();
  }
  sub_1000998EC();
  sub_1000BF0D8();
  sub_100089054();
}

uint64_t sub_1001E0E98(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F91E8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001E0EC0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F91E8();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001E0EE8(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1001E0DDC();
  if (!v1)
    *a1 = v3;
}

void sub_1001E0F10()
{
  sub_1001E0DA0();
}

void sub_1001E0F1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1001DE3A0(a1, a2, a3, a4, (uint64_t)&OBJC_IVAR____TtCV7Weather24LocationNhpConfiguration8_Storage_map, (uint64_t)&OBJC_IVAR____TtCV7Weather24LocationNhpConfiguration8_Storage_nextHourPrecipitation, &OBJC_IVAR____TtCV7Weather24LocationNhpConfiguration8_Storage_airQuality);
}

uint64_t sub_1001E0F38(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v8;
  unint64_t v9;
  char v11;

  if (a1 == 0x6E6F6D6D6F63 && a2 == 0xE600000000000000)
  {
    v5 = 0xE600000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F6D6D6F63, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 7364973 && a2 == 0xE300000000000000)
  {
    v8 = 0xE300000000000000;
    goto LABEL_16;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(7364973, 0xE300000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
LABEL_16:
    swift_bridgeObjectRelease(v8);
    return 1;
  }
  if (a1 == 0xD000000000000015)
  {
    v9 = 0x80000001009F0580;
    if (a2 == 0x80000001009F0580)
      goto LABEL_21;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000015, 0x80000001009F0580, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
LABEL_21:
    swift_bridgeObjectRelease(v9);
    return 2;
  }
  if (a1 == 0x696C617551726961 && a2 == 0xEA00000000007974)
  {
    swift_bridgeObjectRelease(0xEA00000000007974);
    return 3;
  }
  else
  {
    v11 = _stringCompareWithSmolCheck(_:_:expecting:)(0x696C617551726961, 0xEA00000000007974, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v11 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1001E10D4()
{
  return 4;
}

uint64_t sub_1001E10DC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1001E110C + 4 * byte_100981870[a1]))(0x6E6F6D6D6F63, 0xE600000000000000);
}

uint64_t sub_1001E110C()
{
  return 7364973;
}

unint64_t sub_1001E111C()
{
  return 0xD000000000000015;
}

uint64_t sub_1001E1138()
{
  return 0x696C617551726961;
}

uint64_t sub_1001E1154()
{
  unsigned __int8 *v0;

  return sub_1001E10DC(*v0);
}

uint64_t sub_1001E115C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1001E0F38(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1001E1180@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1001E10D4();
  *a1 = result;
  return result;
}

uint64_t sub_1001E11A4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F63D4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001E11CC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F63D4();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001E11F4()
{
  uint64_t v0;

  sub_10009C0B4();
  sub_100079F9C(v0 + OBJC_IVAR____TtCV7Weather24LocationNhpConfiguration8_Storage_map);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather24LocationNhpConfiguration8_Storage_nextHourPrecipitation);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather24LocationNhpConfiguration8_Storage_airQuality);
  sub_10004A298();
}

uint64_t sub_1001E1240()
{
  return sub_100082C68(sub_1001E11F4);
}

uint64_t sub_1001E124C()
{
  return type metadata accessor for LocationNhpConfiguration._Storage(0);
}

uint64_t type metadata accessor for LocationNhpConfiguration._Storage(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC7E30, (uint64_t)&nominal type descriptor for LocationNhpConfiguration._Storage);
}

uint64_t sub_1001E1268(uint64_t a1)
{
  return sub_1001DDA20(a1, (void (*)(uint64_t))sub_1001E1284);
}

void sub_1001E1284()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  sub_100099310();
  v3 = v2;
  sub_1000D0014();
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_1000DA474(v5, v19);
  __chkstk_darwin(v6);
  sub_1000D056C();
  __chkstk_darwin(v7);
  sub_1000BCEC0();
  v8 = sub_1000BA294(&qword_100BCA3A8);
  v9 = sub_1000DAC14(v8);
  __chkstk_darwin(v9);
  sub_1000CDECC(v3, v3[3]);
  v10 = sub_1001F63D4();
  sub_1000C0900((uint64_t)&type metadata for LocationNhpConfiguration._Storage.CodingKeys, v11, v10);
  sub_1001FAFA4();
  if (v1)
  {
    sub_1000F439C(v12, v13);
  }
  else
  {
    sub_1000CDBB0();
    sub_1000C6570((uint64_t)&unk_100B616F0, (uint64_t)&v21, v20, (uint64_t)&unk_100B616F0);
    sub_1000BE754();
    sub_1000C0CC8((unint64_t *)&qword_100BCA2C0, v14, type metadata accessor for LocationViewComponent, (uint64_t)&unk_1009B2000);
    v16 = sub_100098924(v15);
    sub_100110444(v16, v0 + OBJC_IVAR____TtCV7Weather24LocationNhpConfiguration8_Storage_map, type metadata accessor for LocationViewComponent);
    v17 = sub_1000D9B8C();
    sub_1000ED420(v17, v0 + OBJC_IVAR____TtCV7Weather24LocationNhpConfiguration8_Storage_nextHourPrecipitation, type metadata accessor for LocationViewComponent);
    sub_1000D15AC();
    v18 = sub_1000C6578();
    sub_1000ED420(v18, v0 + OBJC_IVAR____TtCV7Weather24LocationNhpConfiguration8_Storage_airQuality, type metadata accessor for LocationViewComponent);
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v3);
  sub_10011E690();
  sub_1000B44B0();
}

uint64_t sub_1001E14A4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1001E1268(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1001E14CC()
{
  char v0;

  sub_1001E6064();
  return v0 & 1;
}

void sub_1001E1504()
{
  uint64_t v0;

  v0 = sub_1000BD2A4();
  type metadata accessor for LocationNhpConfiguration._Storage(v0);
  sub_10011E5C8();
  sub_10004A298();
}

void sub_1001E1540()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1000BE9DC();
  sub_1000C00FC();
  sub_1000BA294(&qword_100BCA948);
  sub_1000BA514();
  __chkstk_darwin(v1);
  sub_1000CD594();
  v2 = sub_1001F9224();
  sub_1000C2488((uint64_t)&type metadata for LocationNhpConfiguration.CodingKeys, v3, v2);
  if (!v0)
  {
    type metadata accessor for LocationNhpConfiguration._Storage(0);
    sub_1000C0CC8(&qword_100BCA958, v4, type metadata accessor for LocationNhpConfiguration._Storage, (uint64_t)&unk_10098310C);
    sub_1000BBCBC(v5, v6);
    sub_1000C35BC();
  }
  sub_1000998EC();
  sub_1000BF0D8();
  sub_100089054();
}

uint64_t sub_1001E15FC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F9224();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001E1624(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F9224();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001E164C(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1001E1540();
  if (!v1)
    *a1 = v3;
}

void sub_1001E1674()
{
  sub_1001E1504();
}

void sub_1001E1680(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1001E16BC(a1, a2, a3, a4, a5, (uint64_t)&OBJC_IVAR____TtCV7Weather34LocationNhpMinorAlertConfiguration8_Storage_map, (uint64_t)&OBJC_IVAR____TtCV7Weather34LocationNhpMinorAlertConfiguration8_Storage_severeAlert, (uint64_t)&OBJC_IVAR____TtCV7Weather34LocationNhpMinorAlertConfiguration8_Storage_nextHourPrecipitation, &OBJC_IVAR____TtCV7Weather34LocationNhpMinorAlertConfiguration8_Storage_airQuality);
  sub_1000CC7E4();
}

uint64_t sub_1001E16BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, _QWORD *a9)
{
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;

  sub_10008900C();
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v19 = v18;
  *(_QWORD *)(v9 + 16) = v20;
  sub_10004A31C(v22, v9 + *v21);
  sub_10004A31C(v19, v9 + *v13);
  sub_10004A31C(v17, v9 + *v11);
  sub_10004A31C(v15, v9 + *a9);
  return v9;
}

uint64_t sub_1001E1754(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F6398();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001E177C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F6398();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001E17A4()
{
  uint64_t v0;

  sub_10009C0B4();
  sub_100079F9C(v0 + OBJC_IVAR____TtCV7Weather34LocationNhpMinorAlertConfiguration8_Storage_map);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather34LocationNhpMinorAlertConfiguration8_Storage_severeAlert);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather34LocationNhpMinorAlertConfiguration8_Storage_nextHourPrecipitation);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather34LocationNhpMinorAlertConfiguration8_Storage_airQuality);
  sub_10004A298();
}

uint64_t sub_1001E17FC()
{
  return sub_100082C68(sub_1001E17A4);
}

uint64_t sub_1001E1808()
{
  return type metadata accessor for LocationNhpMinorAlertConfiguration._Storage(0);
}

uint64_t type metadata accessor for LocationNhpMinorAlertConfiguration._Storage(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC7F00, (uint64_t)&nominal type descriptor for LocationNhpMinorAlertConfiguration._Storage);
}

uint64_t sub_1001E1824(uint64_t a1)
{
  return sub_1001DDA20(a1, (void (*)(uint64_t))sub_1001E1840);
}

void sub_1001E1840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD v36[5];
  uint64_t v37;
  _QWORD *v38;
  char v39;
  char v40;
  __int16 v41;

  sub_100099310();
  v13 = v10;
  v15 = v14;
  v36[4] = sub_1000D0014();
  sub_1000B42B0();
  __chkstk_darwin(v16);
  v36[2] = (char *)v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009D2A4();
  __chkstk_darwin(v18);
  v36[3] = (char *)v36 - v19;
  sub_10009D2A4();
  __chkstk_darwin(v20);
  sub_10011E770();
  __chkstk_darwin(v21);
  sub_10011DB14();
  v22 = sub_1000BA294(&qword_100BCA398);
  v23 = sub_1000DAC14(v22);
  __chkstk_darwin(v23);
  sub_1000CDECC(v15, v15[3]);
  v24 = sub_1001F6398();
  sub_1000ECF20((uint64_t)&type metadata for LocationNhpMinorAlertConfiguration._Storage.CodingKeys, v25, v24);
  sub_1001FAFA4();
  if (v11)
  {
    sub_10009EE5C(v26, v27);
    v35 = v15;
  }
  else
  {
    sub_1000EF954();
    v28 = v37;
    sub_1000C6570((uint64_t)&unk_100B616F0, (uint64_t)&v41 + 1, v37, (uint64_t)&unk_100B616F0);
    *(_QWORD *)(v10 + 16) = a10;
    sub_1000FD8EC();
    sub_1000C0CC8((unint64_t *)&qword_100BCA2C0, v29, type metadata accessor for LocationViewComponent, (uint64_t)&unk_1009B2000);
    v30 = sub_1000C6570(v12, (uint64_t)&v41, v28, v12);
    sub_100110444(v30, v10 + OBJC_IVAR____TtCV7Weather34LocationNhpMinorAlertConfiguration8_Storage_map, type metadata accessor for LocationViewComponent);
    v31 = sub_1000BD2B4();
    sub_10009C924(v31, v10 + OBJC_IVAR____TtCV7Weather34LocationNhpMinorAlertConfiguration8_Storage_severeAlert, type metadata accessor for LocationViewComponent);
    v40 = 3;
    v32 = sub_1000C6570(0, (uint64_t)&v40, v28, 0);
    sub_10009C924(v32, v10 + OBJC_IVAR____TtCV7Weather34LocationNhpMinorAlertConfiguration8_Storage_nextHourPrecipitation, type metadata accessor for LocationViewComponent);
    v39 = 4;
    v33 = v38;
    sub_1000C6570(0, (uint64_t)&v39, v28, 0);
    sub_1001FB514();
    v34 = sub_1000C6578();
    sub_1000ED420(v34, v13 + OBJC_IVAR____TtCV7Weather34LocationNhpMinorAlertConfiguration8_Storage_airQuality, type metadata accessor for LocationViewComponent);
    v35 = v33;
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v35);
  sub_10011E690();
  sub_1000B44B0();
}

uint64_t sub_1001E1B54@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1001E1824(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1001E1B7C()
{
  char v0;

  sub_1001E7864();
  return v0 & 1;
}

void sub_1001E1BBC()
{
  uint64_t v0;

  v0 = sub_1000BD2A4();
  type metadata accessor for LocationNhpMinorAlertConfiguration._Storage(v0);
  sub_1001FAFF4();
  sub_10004A298();
}

void sub_1001E1C00()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1000BE9DC();
  sub_1000C00FC();
  sub_1000BA294(&qword_100BCA960);
  sub_1000BA514();
  __chkstk_darwin(v1);
  sub_1000CD594();
  v2 = sub_1001F9260();
  sub_1000C2488((uint64_t)&type metadata for LocationNhpMinorAlertConfiguration.CodingKeys, v3, v2);
  if (!v0)
  {
    type metadata accessor for LocationNhpMinorAlertConfiguration._Storage(0);
    sub_1000C0CC8(&qword_100BCA970, v4, type metadata accessor for LocationNhpMinorAlertConfiguration._Storage, (uint64_t)&unk_1009830BC);
    sub_1000BBCBC(v5, v6);
    sub_1000C35BC();
  }
  sub_1000998EC();
  sub_1000BF0D8();
  sub_100089054();
}

uint64_t sub_1001E1CBC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F9260();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001E1CE4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F9260();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001E1D0C(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1001E1C00();
  if (!v1)
    *a1 = v3;
}

void sub_1001E1D34()
{
  sub_1001E1BBC();
}

void sub_1001E1D40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1001E16BC(a1, a2, a3, a4, a5, (uint64_t)&OBJC_IVAR____TtCV7Weather28LocationNhpNewsConfiguration8_Storage_map, (uint64_t)&OBJC_IVAR____TtCV7Weather28LocationNhpNewsConfiguration8_Storage_nextHourPrecipitation, (uint64_t)&OBJC_IVAR____TtCV7Weather28LocationNhpNewsConfiguration8_Storage_newsArticle, &OBJC_IVAR____TtCV7Weather28LocationNhpNewsConfiguration8_Storage_airQuality);
  sub_1000CC7E4();
}

uint64_t sub_1001E1D7C(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v8;
  unint64_t v9;
  unint64_t v11;
  char v13;

  if (a1 == 0x6E6F6D6D6F63 && a2 == 0xE600000000000000)
  {
    v5 = 0xE600000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F6D6D6F63, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 7364973 && a2 == 0xE300000000000000)
  {
    v8 = 0xE300000000000000;
    goto LABEL_16;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(7364973, 0xE300000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
LABEL_16:
    swift_bridgeObjectRelease(v8);
    return 1;
  }
  if (a1 == 0xD000000000000015)
  {
    v9 = 0x80000001009F0580;
    if (a2 == 0x80000001009F0580)
      goto LABEL_21;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000015, 0x80000001009F0580, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
LABEL_21:
    swift_bridgeObjectRelease(v9);
    return 2;
  }
  if (a1 == 0x697472417377656ELL && a2 == 0xEB00000000656C63)
  {
    v11 = 0xEB00000000656C63;
    goto LABEL_29;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x697472417377656ELL, 0xEB00000000656C63, a1, a2, 0) & 1) != 0)
  {
    v11 = a2;
LABEL_29:
    swift_bridgeObjectRelease(v11);
    return 3;
  }
  if (a1 == 0x696C617551726961 && a2 == 0xEA00000000007974)
  {
    swift_bridgeObjectRelease(0xEA00000000007974);
    return 4;
  }
  else
  {
    v13 = _stringCompareWithSmolCheck(_:_:expecting:)(0x696C617551726961, 0xEA00000000007974, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v13 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1001E1F90()
{
  return 5;
}

uint64_t sub_1001E1F98(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1001E1FC8 + 4 * byte_100981874[a1]))(0x6E6F6D6D6F63, 0xE600000000000000);
}

uint64_t sub_1001E1FC8()
{
  return 7364973;
}

unint64_t sub_1001E1FD8()
{
  return 0xD000000000000015;
}

uint64_t sub_1001E1FF4()
{
  return 0x697472417377656ELL;
}

uint64_t sub_1001E2014()
{
  return 0x696C617551726961;
}

uint64_t sub_1001E2030()
{
  unsigned __int8 *v0;

  return sub_1001E1F98(*v0);
}

uint64_t sub_1001E2038@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1001E1D7C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1001E205C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1001E1F90();
  *a1 = result;
  return result;
}

uint64_t sub_1001E2080(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F635C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001E20A8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F635C();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001E20D0()
{
  uint64_t v0;

  sub_10009C0B4();
  sub_100079F9C(v0 + OBJC_IVAR____TtCV7Weather28LocationNhpNewsConfiguration8_Storage_map);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather28LocationNhpNewsConfiguration8_Storage_nextHourPrecipitation);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather28LocationNhpNewsConfiguration8_Storage_newsArticle);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather28LocationNhpNewsConfiguration8_Storage_airQuality);
  sub_10004A298();
}

uint64_t sub_1001E2128()
{
  return sub_100082C68(sub_1001E20D0);
}

uint64_t sub_1001E2134()
{
  return type metadata accessor for LocationNhpNewsConfiguration._Storage(0);
}

uint64_t type metadata accessor for LocationNhpNewsConfiguration._Storage(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC7FD8, (uint64_t)&nominal type descriptor for LocationNhpNewsConfiguration._Storage);
}

uint64_t sub_1001E2150(uint64_t a1)
{
  return sub_1001DDA20(a1, (void (*)(uint64_t))sub_1001E216C);
}

void sub_1001E216C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD v36[5];
  uint64_t v37;
  _QWORD *v38;
  char v39;
  char v40;
  __int16 v41;

  sub_100099310();
  v13 = v10;
  v15 = v14;
  v36[4] = sub_1000D0014();
  sub_1000B42B0();
  __chkstk_darwin(v16);
  v36[2] = (char *)v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009D2A4();
  __chkstk_darwin(v18);
  v36[3] = (char *)v36 - v19;
  sub_10009D2A4();
  __chkstk_darwin(v20);
  sub_10011E770();
  __chkstk_darwin(v21);
  sub_10011DB14();
  v22 = sub_1000BA294(&qword_100BCA388);
  v23 = sub_1000DAC14(v22);
  __chkstk_darwin(v23);
  sub_1000CDECC(v15, v15[3]);
  v24 = sub_1001F635C();
  sub_1000ECF20((uint64_t)&type metadata for LocationNhpNewsConfiguration._Storage.CodingKeys, v25, v24);
  sub_1001FAFA4();
  if (v11)
  {
    sub_10009EE5C(v26, v27);
    v35 = v15;
  }
  else
  {
    sub_1000EF954();
    v28 = v37;
    sub_1000C6570((uint64_t)&unk_100B616F0, (uint64_t)&v41 + 1, v37, (uint64_t)&unk_100B616F0);
    *(_QWORD *)(v10 + 16) = a10;
    sub_1000FD8EC();
    sub_1000C0CC8((unint64_t *)&qword_100BCA2C0, v29, type metadata accessor for LocationViewComponent, (uint64_t)&unk_1009B2000);
    v30 = sub_1000C6570(v12, (uint64_t)&v41, v28, v12);
    sub_100110444(v30, v10 + OBJC_IVAR____TtCV7Weather28LocationNhpNewsConfiguration8_Storage_map, type metadata accessor for LocationViewComponent);
    v31 = sub_1000BD2B4();
    sub_10009C924(v31, v10 + OBJC_IVAR____TtCV7Weather28LocationNhpNewsConfiguration8_Storage_nextHourPrecipitation, type metadata accessor for LocationViewComponent);
    v40 = 3;
    v32 = sub_1000C6570(0, (uint64_t)&v40, v28, 0);
    sub_10009C924(v32, v10 + OBJC_IVAR____TtCV7Weather28LocationNhpNewsConfiguration8_Storage_newsArticle, type metadata accessor for LocationViewComponent);
    v39 = 4;
    v33 = v38;
    sub_1000C6570(0, (uint64_t)&v39, v28, 0);
    sub_1001FB514();
    v34 = sub_1000C6578();
    sub_1000ED420(v34, v13 + OBJC_IVAR____TtCV7Weather28LocationNhpNewsConfiguration8_Storage_airQuality, type metadata accessor for LocationViewComponent);
    v35 = v33;
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v35);
  sub_10011E690();
  sub_1000B44B0();
}

uint64_t sub_1001E2480@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1001E2150(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1001E24A8()
{
  char v0;

  sub_1001E7864();
  return v0 & 1;
}

void sub_1001E24E8()
{
  uint64_t v0;

  v0 = sub_1000BD2A4();
  type metadata accessor for LocationNhpNewsConfiguration._Storage(v0);
  sub_1001FAFF4();
  sub_10004A298();
}

void sub_1001E252C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1000BE9DC();
  sub_1000C00FC();
  sub_1000BA294(&qword_100BCA978);
  sub_1000BA514();
  __chkstk_darwin(v1);
  sub_1000CD594();
  v2 = sub_1001F929C();
  sub_1000C2488((uint64_t)&type metadata for LocationNhpNewsConfiguration.CodingKeys, v3, v2);
  if (!v0)
  {
    type metadata accessor for LocationNhpNewsConfiguration._Storage(0);
    sub_1000C0CC8(&qword_100BCA988, v4, type metadata accessor for LocationNhpNewsConfiguration._Storage, (uint64_t)&unk_10098306C);
    sub_1000BBCBC(v5, v6);
    sub_1000C35BC();
  }
  sub_1000998EC();
  sub_1000BF0D8();
  sub_100089054();
}

uint64_t sub_1001E25E8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F929C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001E2610(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F929C();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001E2638(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1001E252C();
  if (!v1)
    *a1 = v3;
}

void sub_1001E2660()
{
  sub_1001E24E8();
}

void sub_1001E266C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char v27;
  char v28;

  sub_10008900C();
  a17 = v21;
  a18 = v22;
  sub_1001FB4F4();
  sub_1000B42B0();
  __chkstk_darwin(v23);
  sub_10009BE6C();
  __chkstk_darwin(v24);
  v26 = (char *)&a9 - v25;
  sub_1001FB9BC();
  sub_1000C12B0();
  sub_1001FBC18();
  v28 = v27;
  sub_1000C1354();
  sub_1000C5AE8();
  if ((v28 & 1) != 0)
  {
    sub_1001FB17C(v20 + OBJC_IVAR____TtCV7Weather26LocationNoAqiConfiguration8_Storage_map);
    sub_1000B326C(v18 + OBJC_IVAR____TtCV7Weather26LocationNoAqiConfiguration8_Storage_map, v19);
    sub_1000F409C();
    sub_1000BD95C(v19);
    sub_1000BD95C((uint64_t)v26);
  }
  sub_10009D300();
}

BOOL static ListSessionTrigger.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void SizingBehavior.hash(into:)(uint64_t a1, char a2)
{
  Hasher._combine(_:)(a2 & 1);
}

uint64_t sub_1001E2758(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v8;

  if (a1 == 0x6E6F6D6D6F63 && a2 == 0xE600000000000000)
  {
    v5 = 0xE600000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F6D6D6F63, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 7364973 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease(0xE300000000000000);
    return 1;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(7364973, 0xE300000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v8 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

Swift::Int SizingBehavior.hashValue.getter(char a1)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(a1 & 1);
  return Hasher._finalize()();
}

uint64_t sub_1001E2870(char a1)
{
  if ((a1 & 1) != 0)
    return 7364973;
  else
    return 0x6E6F6D6D6F63;
}

BOOL sub_1001E289C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static ListSessionTrigger.__derived_enum_equals(_:_:)(*a1, *a2);
}

Swift::Int sub_1001E28A8()
{
  char *v0;

  return SizingBehavior.hashValue.getter(*v0);
}

void sub_1001E28B0(uint64_t a1)
{
  char *v1;

  SizingBehavior.hash(into:)(a1, *v1);
}

uint64_t sub_1001E28B8()
{
  char *v0;

  return sub_1001E2870(*v0);
}

uint64_t sub_1001E28C0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1001E2758(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1001E28E4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_100162A08();
  *a1 = result;
  return result;
}

uint64_t sub_1001E2908(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F6320();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001E2930(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F6320();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001E2958()
{
  return sub_1001EC20C(&OBJC_IVAR____TtCV7Weather26LocationNoAqiConfiguration8_Storage_map, (uint64_t)type metadata accessor for LocationViewComponent, (void (*)(uint64_t, uint64_t))sub_1000215BC);
}

uint64_t sub_1001E2974()
{
  return type metadata accessor for LocationNoAqiConfiguration._Storage(0);
}

uint64_t type metadata accessor for LocationNoAqiConfiguration._Storage(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC80B0, (uint64_t)&nominal type descriptor for LocationNoAqiConfiguration._Storage);
}

uint64_t sub_1001E2990(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  result = type metadata accessor for LocationViewComponent(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1001E2A0C(uint64_t a1)
{
  return sub_1001DDA20(a1, (void (*)(uint64_t))sub_1001E2A28);
}

void sub_1001E2A28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int16 v24;

  sub_100099310();
  v13 = v12;
  v14 = sub_1000D0014();
  sub_1000B42B0();
  __chkstk_darwin(v15);
  sub_100099234();
  v22 = sub_1000BA294(&qword_100BCA378);
  v16 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  sub_10007A130();
  v17 = v13[3];
  v18 = v13[4];
  sub_1000CDECC(v13, v17);
  v19 = sub_1001F6320();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for LocationNoAqiConfiguration._Storage.CodingKeys, &type metadata for LocationNoAqiConfiguration._Storage.CodingKeys, v19, v17, v18);
  sub_1001FAFA4();
  if (v23)
  {
    swift_deallocPartialClassInstance(v10, v20, *(unsigned int *)(*v10 + 48), *(unsigned __int16 *)(*v10 + 52));
  }
  else
  {
    sub_1000FD9F8();
    sub_1000C6570((uint64_t)&unk_100B616F0, (uint64_t)&v24 + 1, v22, (uint64_t)&unk_100B616F0);
    v10[2] = a10;
    sub_1000FD8EC();
    sub_1000C0CC8((unint64_t *)&qword_100BCA2C0, v21, type metadata accessor for LocationViewComponent, (uint64_t)&unk_1009B2000);
    sub_1000C6570(v14, (uint64_t)&v24, v22, v14);
    sub_1001FB188(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
    sub_10007802C(v11, (uint64_t)v10 + OBJC_IVAR____TtCV7Weather26LocationNoAqiConfiguration8_Storage_map, type metadata accessor for LocationViewComponent);
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v13);
  sub_10011E690();
  sub_1000B44B0();
}

uint64_t sub_1001E2BD4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1001E2A0C(a1);
  if (!v2)
    *a2 = result;
  return result;
}

#error "1001E2C0C: call analysis failed (funcsize=8)"

#error "1001E2C34: call analysis failed (funcsize=10)"

void sub_1001E2C44()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1000BE9DC();
  sub_1000C00FC();
  sub_1000BA294(&qword_100BCA990);
  sub_1000BA514();
  __chkstk_darwin(v1);
  sub_1000CD594();
  v2 = sub_1001F92D8();
  sub_1000C2488((uint64_t)&type metadata for LocationNoAqiConfiguration.CodingKeys, v3, v2);
  if (!v0)
  {
    type metadata accessor for LocationNoAqiConfiguration._Storage(0);
    sub_1000C0CC8(&qword_100BCA9A0, v4, type metadata accessor for LocationNoAqiConfiguration._Storage, (uint64_t)&unk_10098301C);
    sub_1000BBCBC(v5, v6);
    sub_1000C35BC();
  }
  sub_1000998EC();
  sub_1000BF0D8();
  sub_100089054();
}

uint64_t sub_1001E2D00(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F92D8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001E2D28(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F92D8();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001E2D50(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1001E2C44();
  if (!v1)
    *a1 = v3;
}

uint64_t sub_1001E2D78(_QWORD *a1, _QWORD *a2)
{
  return sub_1001E2C1C(*a1, *a2);
}

void sub_1001E2D84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1001DE8EC(a1, a2, a3, &OBJC_IVAR____TtCV7Weather30LocationNoAqiNewsConfiguration8_Storage_map, &OBJC_IVAR____TtCV7Weather30LocationNoAqiNewsConfiguration8_Storage_newsArticle);
}

uint64_t sub_1001E2D98(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v8;
  char v10;

  if (a1 == 0x6E6F6D6D6F63 && a2 == 0xE600000000000000)
  {
    v5 = 0xE600000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F6D6D6F63, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 7364973 && a2 == 0xE300000000000000)
  {
    v8 = 0xE300000000000000;
    goto LABEL_16;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(7364973, 0xE300000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
LABEL_16:
    swift_bridgeObjectRelease(v8);
    return 1;
  }
  if (a1 == 0x697472417377656ELL && a2 == 0xEB00000000656C63)
  {
    swift_bridgeObjectRelease(0xEB00000000656C63);
    return 2;
  }
  else
  {
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(0x697472417377656ELL, 0xEB00000000656C63, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v10 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1001E2EE4(char a1)
{
  if (!a1)
    return 0x6E6F6D6D6F63;
  if (a1 == 1)
    return 7364973;
  return 0x697472417377656ELL;
}

uint64_t sub_1001E2F38()
{
  char *v0;

  return sub_1001E2EE4(*v0);
}

uint64_t sub_1001E2F40@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1001E2D98(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1001E2F64(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F62E4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001E2F8C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F62E4();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001E2FB4()
{
  uint64_t v0;

  sub_10009C0B4();
  sub_100079F9C(v0 + OBJC_IVAR____TtCV7Weather30LocationNoAqiNewsConfiguration8_Storage_map);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather30LocationNoAqiNewsConfiguration8_Storage_newsArticle);
  sub_10004A298();
}

uint64_t sub_1001E2FF4()
{
  return sub_100082C68(sub_1001E2FB4);
}

uint64_t sub_1001E3000()
{
  return type metadata accessor for LocationNoAqiNewsConfiguration._Storage(0);
}

uint64_t type metadata accessor for LocationNoAqiNewsConfiguration._Storage(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC8170, (uint64_t)&nominal type descriptor for LocationNoAqiNewsConfiguration._Storage);
}

uint64_t sub_1001E301C(uint64_t a1)
{
  return sub_1001DDA20(a1, (void (*)(uint64_t))sub_1001E3038);
}

void sub_1001E3038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_100099310();
  v13 = v12;
  sub_1000D0014();
  sub_1000B42B0();
  __chkstk_darwin(v14);
  sub_1000DB210();
  __chkstk_darwin(v15);
  sub_1000BCEC0();
  sub_1000BA294(&qword_100BCA368);
  sub_1000AE898();
  __chkstk_darwin(v16);
  sub_1000CDECC(v13, v13[3]);
  v17 = sub_1001F62E4();
  sub_10004A300((uint64_t)&type metadata for LocationNoAqiNewsConfiguration._Storage.CodingKeys, v18, v17);
  sub_1001FB988();
  if (v11)
  {
    sub_1001FAF74(v19, v20);
  }
  else
  {
    sub_1000FD9F8();
    sub_1000BE8A0((uint64_t)&unk_100B616F0);
    *(_QWORD *)(v10 + 16) = a10;
    sub_1000FD8EC();
    sub_1000C0CC8((unint64_t *)&qword_100BCA2C0, v21, type metadata accessor for LocationViewComponent, (uint64_t)&unk_1009B2000);
    v23 = sub_1000CE4FC(v22);
    sub_10009C79C(v23, v10 + OBJC_IVAR____TtCV7Weather30LocationNoAqiNewsConfiguration8_Storage_map, type metadata accessor for LocationViewComponent);
    sub_1000DC89C();
    v24 = sub_10011E2D0();
    sub_10009C79C(v24, v10 + OBJC_IVAR____TtCV7Weather30LocationNoAqiNewsConfiguration8_Storage_newsArticle, type metadata accessor for LocationViewComponent);
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v13);
  sub_10011DE38();
  sub_1000B44B0();
}

uint64_t sub_1001E31DC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1001E301C(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1001E3204()
{
  char v0;

  sub_1001E410C();
  return v0 & 1;
}

void sub_1001E3234()
{
  uint64_t v0;

  v0 = sub_1000BD2A4();
  type metadata accessor for LocationNoAqiNewsConfiguration._Storage(v0);
  sub_1001FB250();
  sub_10004A298();
}

void sub_1001E3268()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1000BE9DC();
  sub_1000C00FC();
  sub_1000BA294(&qword_100BCA9A8);
  sub_1000BA514();
  __chkstk_darwin(v1);
  sub_1000CD594();
  v2 = sub_1001F9314();
  sub_1000C2488((uint64_t)&type metadata for LocationNoAqiNewsConfiguration.CodingKeys, v3, v2);
  if (!v0)
  {
    type metadata accessor for LocationNoAqiNewsConfiguration._Storage(0);
    sub_1000C0CC8(&qword_100BCA9B8, v4, type metadata accessor for LocationNoAqiNewsConfiguration._Storage, (uint64_t)&unk_100982FCC);
    sub_1000BBCBC(v5, v6);
    sub_1000C35BC();
  }
  sub_1000998EC();
  sub_1000BF0D8();
  sub_100089054();
}

uint64_t sub_1001E3324(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F9314();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001E334C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F9314();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001E3374(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1001E3268();
  if (!v1)
    *a1 = v3;
}

void sub_1001E339C()
{
  sub_1001E3234();
}

void sub_1001E33A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1001DE8EC(a1, a2, a3, &OBJC_IVAR____TtCV7Weather29LocationNoAqiNhpConfiguration8_Storage_map, &OBJC_IVAR____TtCV7Weather29LocationNoAqiNhpConfiguration8_Storage_nextHourPrecipitation);
}

uint64_t sub_1001E33BC(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v8;
  char v9;

  if (a1 == 0x6E6F6D6D6F63 && a2 == 0xE600000000000000)
  {
    v5 = 0xE600000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F6D6D6F63, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 7364973 && a2 == 0xE300000000000000)
  {
    v8 = 0xE300000000000000;
    goto LABEL_16;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(7364973, 0xE300000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
LABEL_16:
    swift_bridgeObjectRelease(v8);
    return 1;
  }
  if (a1 == 0xD000000000000015 && a2 == 0x80000001009F0580)
  {
    swift_bridgeObjectRelease(0x80000001009F0580);
    return 2;
  }
  else
  {
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000015, 0x80000001009F0580, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v9 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1001E34F0(char a1)
{
  if (!a1)
    return 0x6E6F6D6D6F63;
  if (a1 == 1)
    return 7364973;
  return 0xD000000000000015;
}

uint64_t sub_1001E3540()
{
  char *v0;

  return sub_1001E34F0(*v0);
}

uint64_t sub_1001E3548@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1001E33BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1001E356C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F62A8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001E3594(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F62A8();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001E35BC()
{
  uint64_t v0;

  sub_10009C0B4();
  sub_100079F9C(v0 + OBJC_IVAR____TtCV7Weather29LocationNoAqiNhpConfiguration8_Storage_map);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather29LocationNoAqiNhpConfiguration8_Storage_nextHourPrecipitation);
  sub_10004A298();
}

uint64_t sub_1001E35FC()
{
  return sub_100082C68(sub_1001E35BC);
}

uint64_t sub_1001E3608()
{
  return type metadata accessor for LocationNoAqiNhpConfiguration._Storage(0);
}

uint64_t type metadata accessor for LocationNoAqiNhpConfiguration._Storage(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC8238, (uint64_t)&nominal type descriptor for LocationNoAqiNhpConfiguration._Storage);
}

uint64_t sub_1001E3624(uint64_t a1)
{
  return sub_1001DDA20(a1, (void (*)(uint64_t))sub_1001E3640);
}

void sub_1001E3640(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_100099310();
  v13 = v12;
  sub_1000D0014();
  sub_1000B42B0();
  __chkstk_darwin(v14);
  sub_1000DB210();
  __chkstk_darwin(v15);
  sub_1000BCEC0();
  sub_1000BA294(&qword_100BCA358);
  sub_1000AE898();
  __chkstk_darwin(v16);
  sub_1000CDECC(v13, v13[3]);
  v17 = sub_1001F62A8();
  sub_10004A300((uint64_t)&type metadata for LocationNoAqiNhpConfiguration._Storage.CodingKeys, v18, v17);
  sub_1001FB988();
  if (v11)
  {
    sub_1001FAF74(v19, v20);
  }
  else
  {
    sub_1000FD9F8();
    sub_1000BE8A0((uint64_t)&unk_100B616F0);
    *(_QWORD *)(v10 + 16) = a10;
    sub_1000FD8EC();
    sub_1000C0CC8((unint64_t *)&qword_100BCA2C0, v21, type metadata accessor for LocationViewComponent, (uint64_t)&unk_1009B2000);
    v23 = sub_1000CE4FC(v22);
    sub_10009C79C(v23, v10 + OBJC_IVAR____TtCV7Weather29LocationNoAqiNhpConfiguration8_Storage_map, type metadata accessor for LocationViewComponent);
    sub_1000DC89C();
    v24 = sub_10011E2D0();
    sub_10009C79C(v24, v10 + OBJC_IVAR____TtCV7Weather29LocationNoAqiNhpConfiguration8_Storage_nextHourPrecipitation, type metadata accessor for LocationViewComponent);
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v13);
  sub_10011DE38();
  sub_1000B44B0();
}

uint64_t sub_1001E37E4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1001E3624(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1001E380C()
{
  char v0;

  sub_1001E410C();
  return v0 & 1;
}

void sub_1001E383C()
{
  uint64_t v0;

  v0 = sub_1000BD2A4();
  type metadata accessor for LocationNoAqiNhpConfiguration._Storage(v0);
  sub_1001FB250();
  sub_10004A298();
}

void sub_1001E3870()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1000BE9DC();
  sub_1000C00FC();
  sub_1000BA294(&qword_100BCA9C0);
  sub_1000BA514();
  __chkstk_darwin(v1);
  sub_1000CD594();
  v2 = sub_1001F9350();
  sub_1000C2488((uint64_t)&type metadata for LocationNoAqiNhpConfiguration.CodingKeys, v3, v2);
  if (!v0)
  {
    type metadata accessor for LocationNoAqiNhpConfiguration._Storage(0);
    sub_1000C0CC8(&qword_100BCA9D0, v4, type metadata accessor for LocationNoAqiNhpConfiguration._Storage, (uint64_t)&unk_100982F7C);
    sub_1000BBCBC(v5, v6);
    sub_1000C35BC();
  }
  sub_1000998EC();
  sub_1000BF0D8();
  sub_100089054();
}

uint64_t sub_1001E392C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F9350();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001E3954(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F9350();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001E397C(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1001E3870();
  if (!v1)
    *a1 = v3;
}

void sub_1001E39A4()
{
  sub_1001E383C();
}

void sub_1001E39B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1001DE3A0(a1, a2, a3, a4, (uint64_t)&OBJC_IVAR____TtCV7Weather33LocationNoAqiNhpNewsConfiguration8_Storage_map, (uint64_t)&OBJC_IVAR____TtCV7Weather33LocationNoAqiNhpNewsConfiguration8_Storage_nextHourPrecipitation, &OBJC_IVAR____TtCV7Weather33LocationNoAqiNhpNewsConfiguration8_Storage_newsArticle);
}

uint64_t sub_1001E39CC(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v8;
  unint64_t v9;
  char v11;

  if (a1 == 0x6E6F6D6D6F63 && a2 == 0xE600000000000000)
  {
    v5 = 0xE600000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F6D6D6F63, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 7364973 && a2 == 0xE300000000000000)
  {
    v8 = 0xE300000000000000;
    goto LABEL_16;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(7364973, 0xE300000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
LABEL_16:
    swift_bridgeObjectRelease(v8);
    return 1;
  }
  if (a1 == 0xD000000000000015)
  {
    v9 = 0x80000001009F0580;
    if (a2 == 0x80000001009F0580)
      goto LABEL_21;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000015, 0x80000001009F0580, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
LABEL_21:
    swift_bridgeObjectRelease(v9);
    return 2;
  }
  if (a1 == 0x697472417377656ELL && a2 == 0xEB00000000656C63)
  {
    swift_bridgeObjectRelease(0xEB00000000656C63);
    return 3;
  }
  else
  {
    v11 = _stringCompareWithSmolCheck(_:_:expecting:)(0x697472417377656ELL, 0xEB00000000656C63, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v11 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1001E3B74(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1001E3BA4 + 4 * byte_100981879[a1]))(0x6E6F6D6D6F63, 0xE600000000000000);
}

uint64_t sub_1001E3BA4()
{
  return 7364973;
}

unint64_t sub_1001E3BB4()
{
  return 0xD000000000000015;
}

uint64_t sub_1001E3BD0()
{
  return 0x697472417377656ELL;
}

uint64_t sub_1001E3BF0()
{
  unsigned __int8 *v0;

  return sub_1001E3B74(*v0);
}

uint64_t sub_1001E3BF8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1001E39CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1001E3C1C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F626C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001E3C44(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F626C();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001E3C6C()
{
  uint64_t v0;

  sub_10009C0B4();
  sub_100079F9C(v0 + OBJC_IVAR____TtCV7Weather33LocationNoAqiNhpNewsConfiguration8_Storage_map);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather33LocationNoAqiNhpNewsConfiguration8_Storage_nextHourPrecipitation);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather33LocationNoAqiNhpNewsConfiguration8_Storage_newsArticle);
  sub_10004A298();
}

uint64_t sub_1001E3CB8()
{
  return sub_100082C68(sub_1001E3C6C);
}

uint64_t sub_1001E3CC4()
{
  return type metadata accessor for LocationNoAqiNhpNewsConfiguration._Storage(0);
}

uint64_t type metadata accessor for LocationNoAqiNhpNewsConfiguration._Storage(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC8300, (uint64_t)&nominal type descriptor for LocationNoAqiNhpNewsConfiguration._Storage);
}

uint64_t sub_1001E3CE0(uint64_t a1)
{
  return sub_1001DDA20(a1, (void (*)(uint64_t))sub_1001E3CFC);
}

void sub_1001E3CFC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  sub_100099310();
  v3 = v2;
  sub_1000D0014();
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_1000DA474(v5, v19);
  __chkstk_darwin(v6);
  sub_1000D056C();
  __chkstk_darwin(v7);
  sub_1000BCEC0();
  v8 = sub_1000BA294(&qword_100BCA348);
  v9 = sub_1000DAC14(v8);
  __chkstk_darwin(v9);
  sub_1000CDECC(v3, v3[3]);
  v10 = sub_1001F626C();
  sub_1000C0900((uint64_t)&type metadata for LocationNoAqiNhpNewsConfiguration._Storage.CodingKeys, v11, v10);
  sub_1001FAFA4();
  if (v1)
  {
    sub_1000F439C(v12, v13);
  }
  else
  {
    sub_1000CDBB0();
    sub_1000C6570((uint64_t)&unk_100B616F0, (uint64_t)&v21, v20, (uint64_t)&unk_100B616F0);
    sub_1000BE754();
    sub_1000C0CC8((unint64_t *)&qword_100BCA2C0, v14, type metadata accessor for LocationViewComponent, (uint64_t)&unk_1009B2000);
    v16 = sub_100098924(v15);
    sub_100110444(v16, v0 + OBJC_IVAR____TtCV7Weather33LocationNoAqiNhpNewsConfiguration8_Storage_map, type metadata accessor for LocationViewComponent);
    v17 = sub_1000D9B8C();
    sub_1000ED420(v17, v0 + OBJC_IVAR____TtCV7Weather33LocationNoAqiNhpNewsConfiguration8_Storage_nextHourPrecipitation, type metadata accessor for LocationViewComponent);
    sub_1000D15AC();
    v18 = sub_1000C6578();
    sub_1000ED420(v18, v0 + OBJC_IVAR____TtCV7Weather33LocationNoAqiNhpNewsConfiguration8_Storage_newsArticle, type metadata accessor for LocationViewComponent);
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v3);
  sub_10011E690();
  sub_1000B44B0();
}

uint64_t sub_1001E3F1C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1001E3CE0(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1001E3F44()
{
  char v0;

  sub_1001E6064();
  return v0 & 1;
}

void sub_1001E3F7C()
{
  uint64_t v0;

  v0 = sub_1000BD2A4();
  type metadata accessor for LocationNoAqiNhpNewsConfiguration._Storage(v0);
  sub_10011E5C8();
  sub_10004A298();
}

void sub_1001E3FB8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1000BE9DC();
  sub_1000C00FC();
  sub_1000BA294(&qword_100BCA9D8);
  sub_1000BA514();
  __chkstk_darwin(v1);
  sub_1000CD594();
  v2 = sub_1001F938C();
  sub_1000C2488((uint64_t)&type metadata for LocationNoAqiNhpNewsConfiguration.CodingKeys, v3, v2);
  if (!v0)
  {
    type metadata accessor for LocationNoAqiNhpNewsConfiguration._Storage(0);
    sub_1000C0CC8(&qword_100BCA9E8, v4, type metadata accessor for LocationNoAqiNhpNewsConfiguration._Storage, (uint64_t)&unk_100982F2C);
    sub_1000BBCBC(v5, v6);
    sub_1000C35BC();
  }
  sub_1000998EC();
  sub_1000BF0D8();
  sub_100089054();
}

uint64_t sub_1001E4074(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F938C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001E409C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F938C();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001E40C4(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1001E3FB8();
  if (!v1)
    *a1 = v3;
}

void sub_1001E40EC()
{
  sub_1001E3F7C();
}

void sub_1001E40F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1001DE8EC(a1, a2, a3, &OBJC_IVAR____TtCV7Weather32LocationNoAqiSevereConfiguration8_Storage_map, &OBJC_IVAR____TtCV7Weather32LocationNoAqiSevereConfiguration8_Storage_severeAlert);
}

void sub_1001E410C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  char v17;

  sub_1000986AC();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  sub_10009E8F8();
  sub_1000B42B0();
  __chkstk_darwin(v10);
  sub_1000BBB38();
  __chkstk_darwin(v11);
  sub_1000BCEC0();
  v12 = *(_QWORD *)(v9 + 16);
  v13 = *(_QWORD *)(v7 + 16);
  sub_1001FB994();
  swift_retain();
  swift_retain();
  sub_1000878D0();
  sub_1001DBFAC();
  v15 = v14;
  swift_release(v12);
  swift_release(v13);
  if ((v15 & 1) != 0)
  {
    sub_1000DC370(v9 + *v5, v1);
    sub_1000DC370(v7 + *v5, v0);
    sub_1001FAFB0();
    v17 = v16;
    sub_10009DA28(v0);
    sub_10009DA28(v1);
    if ((v17 & 1) != 0)
    {
      sub_1000D0564(v9 + *v3, v1);
      sub_1000D0564(v7 + *v3, v0);
      sub_1001FAFB0();
      sub_10009D37C(v0);
      sub_10009D37C(v1);
    }
  }
  sub_1001FB384();
  sub_100098640();
}

uint64_t sub_1001E422C(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v8;
  char v10;

  if (a1 == 0x6E6F6D6D6F63 && a2 == 0xE600000000000000)
  {
    v5 = 0xE600000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F6D6D6F63, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 7364973 && a2 == 0xE300000000000000)
  {
    v8 = 0xE300000000000000;
    goto LABEL_16;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(7364973, 0xE300000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
LABEL_16:
    swift_bridgeObjectRelease(v8);
    return 1;
  }
  if (a1 == 0x6C41657265766573 && a2 == 0xEB00000000747265)
  {
    swift_bridgeObjectRelease(0xEB00000000747265);
    return 2;
  }
  else
  {
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6C41657265766573, 0xEB00000000747265, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v10 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1001E4378(char a1)
{
  if (!a1)
    return 0x6E6F6D6D6F63;
  if (a1 == 1)
    return 7364973;
  return 0x6C41657265766573;
}

uint64_t sub_1001E43CC()
{
  char *v0;

  return sub_1001E4378(*v0);
}

uint64_t sub_1001E43D4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1001E422C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1001E43F8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F6230();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001E4420(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F6230();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001E4448()
{
  uint64_t v0;

  sub_10009C0B4();
  sub_100079F9C(v0 + OBJC_IVAR____TtCV7Weather32LocationNoAqiSevereConfiguration8_Storage_map);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather32LocationNoAqiSevereConfiguration8_Storage_severeAlert);
  sub_10004A298();
}

uint64_t sub_1001E4488()
{
  return sub_100082C68(sub_1001E4448);
}

uint64_t sub_1001E4494()
{
  return type metadata accessor for LocationNoAqiSevereConfiguration._Storage(0);
}

uint64_t type metadata accessor for LocationNoAqiSevereConfiguration._Storage(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC83D0, (uint64_t)&nominal type descriptor for LocationNoAqiSevereConfiguration._Storage);
}

void sub_1001E44B0()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1001FB960();
  if (v0 <= 0x3F)
  {
    sub_1001FB64C();
    v7 = sub_1001FB728(v1, v2, v3, v4, v5, v6);
    sub_1001FB630(v7);
  }
  sub_1000951C8();
}

uint64_t sub_1001E44F8(uint64_t a1)
{
  return sub_1001DDA20(a1, (void (*)(uint64_t))sub_1001E4514);
}

void sub_1001E4514(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_100099310();
  v13 = v12;
  sub_1000D0014();
  sub_1000B42B0();
  __chkstk_darwin(v14);
  sub_1000DB210();
  __chkstk_darwin(v15);
  sub_1000BCEC0();
  sub_1000BA294(&qword_100BCA338);
  sub_1000AE898();
  __chkstk_darwin(v16);
  sub_1000CDECC(v13, v13[3]);
  v17 = sub_1001F6230();
  sub_10004A300((uint64_t)&type metadata for LocationNoAqiSevereConfiguration._Storage.CodingKeys, v18, v17);
  sub_1001FB988();
  if (v11)
  {
    sub_1001FAF74(v19, v20);
  }
  else
  {
    sub_1000FD9F8();
    sub_1000BE8A0((uint64_t)&unk_100B616F0);
    *(_QWORD *)(v10 + 16) = a10;
    sub_1000FD8EC();
    sub_1000C0CC8((unint64_t *)&qword_100BCA2C0, v21, type metadata accessor for LocationViewComponent, (uint64_t)&unk_1009B2000);
    v23 = sub_1000CE4FC(v22);
    sub_10009C79C(v23, v10 + OBJC_IVAR____TtCV7Weather32LocationNoAqiSevereConfiguration8_Storage_map, type metadata accessor for LocationViewComponent);
    sub_1000DC89C();
    v24 = sub_10011E2D0();
    sub_10009C79C(v24, v10 + OBJC_IVAR____TtCV7Weather32LocationNoAqiSevereConfiguration8_Storage_severeAlert, type metadata accessor for LocationViewComponent);
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v13);
  sub_10011DE38();
  sub_1000B44B0();
}

uint64_t sub_1001E46B8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1001E44F8(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1001E46E0()
{
  char v0;

  sub_1001E410C();
  return v0 & 1;
}

void sub_1001E4710()
{
  uint64_t v0;

  v0 = sub_1000BD2A4();
  type metadata accessor for LocationNoAqiSevereConfiguration._Storage(v0);
  sub_1001FB250();
  sub_10004A298();
}

void sub_1001E4744()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1000BE9DC();
  sub_1000C00FC();
  sub_1000BA294(&qword_100BCA9F0);
  sub_1000BA514();
  __chkstk_darwin(v1);
  sub_1000CD594();
  v2 = sub_1001F93C8();
  sub_1000C2488((uint64_t)&type metadata for LocationNoAqiSevereConfiguration.CodingKeys, v3, v2);
  if (!v0)
  {
    type metadata accessor for LocationNoAqiSevereConfiguration._Storage(0);
    sub_1000C0CC8(&qword_100BCAA00, v4, type metadata accessor for LocationNoAqiSevereConfiguration._Storage, (uint64_t)&unk_100982EDC);
    sub_1000BBCBC(v5, v6);
    sub_1000C35BC();
  }
  sub_1000998EC();
  sub_1000BF0D8();
  sub_100089054();
}

uint64_t sub_1001E4800(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F93C8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001E4828(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F93C8();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001E4850(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1001E4744();
  if (!v1)
    *a1 = v3;
}

void sub_1001E4878()
{
  sub_1001E4710();
}

void sub_1001E4884(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1001DE3A0(a1, a2, a3, a4, (uint64_t)&OBJC_IVAR____TtCV7Weather36LocationNoAqiSevereNewsConfiguration8_Storage_map, (uint64_t)&OBJC_IVAR____TtCV7Weather36LocationNoAqiSevereNewsConfiguration8_Storage_severeAlert, &OBJC_IVAR____TtCV7Weather36LocationNoAqiSevereNewsConfiguration8_Storage_newsArticle);
}

uint64_t sub_1001E48A0(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v8;
  unint64_t v10;
  char v12;

  if (a1 == 0x6E6F6D6D6F63 && a2 == 0xE600000000000000)
  {
    v5 = 0xE600000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F6D6D6F63, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 7364973 && a2 == 0xE300000000000000)
  {
    v8 = 0xE300000000000000;
    goto LABEL_16;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(7364973, 0xE300000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
LABEL_16:
    swift_bridgeObjectRelease(v8);
    return 1;
  }
  if (a1 == 0x6C41657265766573 && a2 == 0xEB00000000747265)
  {
    v10 = 0xEB00000000747265;
    goto LABEL_24;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6C41657265766573, 0xEB00000000747265, a1, a2, 0) & 1) != 0)
  {
    v10 = a2;
LABEL_24:
    swift_bridgeObjectRelease(v10);
    return 2;
  }
  if (a1 == 0x697472417377656ELL && a2 == 0xEB00000000656C63)
  {
    swift_bridgeObjectRelease(0xEB00000000656C63);
    return 3;
  }
  else
  {
    v12 = _stringCompareWithSmolCheck(_:_:expecting:)(0x697472417377656ELL, 0xEB00000000656C63, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v12 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1001E4A64(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1001E4A94 + 4 * byte_10098187D[a1]))(0x6E6F6D6D6F63, 0xE600000000000000);
}

uint64_t sub_1001E4A94()
{
  return 7364973;
}

uint64_t sub_1001E4AA4()
{
  return 0x6C41657265766573;
}

uint64_t sub_1001E4AC4()
{
  return 0x697472417377656ELL;
}

uint64_t sub_1001E4AE4()
{
  unsigned __int8 *v0;

  return sub_1001E4A64(*v0);
}

uint64_t sub_1001E4AEC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1001E48A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1001E4B10(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F61F4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001E4B38(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F61F4();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001E4B60()
{
  uint64_t v0;

  sub_10009C0B4();
  sub_100079F9C(v0 + OBJC_IVAR____TtCV7Weather36LocationNoAqiSevereNewsConfiguration8_Storage_map);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather36LocationNoAqiSevereNewsConfiguration8_Storage_severeAlert);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather36LocationNoAqiSevereNewsConfiguration8_Storage_newsArticle);
  sub_10004A298();
}

uint64_t sub_1001E4BAC()
{
  return sub_100082C68(sub_1001E4B60);
}

uint64_t sub_1001E4BB8()
{
  return type metadata accessor for LocationNoAqiSevereNewsConfiguration._Storage(0);
}

uint64_t type metadata accessor for LocationNoAqiSevereNewsConfiguration._Storage(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC8498, (uint64_t)&nominal type descriptor for LocationNoAqiSevereNewsConfiguration._Storage);
}

uint64_t sub_1001E4BD4(uint64_t a1)
{
  return sub_1001DDA20(a1, (void (*)(uint64_t))sub_1001E4BF0);
}

void sub_1001E4BF0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  sub_100099310();
  v3 = v2;
  sub_1000D0014();
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_1000DA474(v5, v19);
  __chkstk_darwin(v6);
  sub_1000D056C();
  __chkstk_darwin(v7);
  sub_1000BCEC0();
  v8 = sub_1000BA294(&qword_100BCA328);
  v9 = sub_1000DAC14(v8);
  __chkstk_darwin(v9);
  sub_1000CDECC(v3, v3[3]);
  v10 = sub_1001F61F4();
  sub_1000C0900((uint64_t)&type metadata for LocationNoAqiSevereNewsConfiguration._Storage.CodingKeys, v11, v10);
  sub_1001FAFA4();
  if (v1)
  {
    sub_1000F439C(v12, v13);
  }
  else
  {
    sub_1000CDBB0();
    sub_1000C6570((uint64_t)&unk_100B616F0, (uint64_t)&v21, v20, (uint64_t)&unk_100B616F0);
    sub_1000BE754();
    sub_1000C0CC8((unint64_t *)&qword_100BCA2C0, v14, type metadata accessor for LocationViewComponent, (uint64_t)&unk_1009B2000);
    v16 = sub_100098924(v15);
    sub_100110444(v16, v0 + OBJC_IVAR____TtCV7Weather36LocationNoAqiSevereNewsConfiguration8_Storage_map, type metadata accessor for LocationViewComponent);
    v17 = sub_1000D9B8C();
    sub_1000ED420(v17, v0 + OBJC_IVAR____TtCV7Weather36LocationNoAqiSevereNewsConfiguration8_Storage_severeAlert, type metadata accessor for LocationViewComponent);
    sub_1000D15AC();
    v18 = sub_1000C6578();
    sub_1000ED420(v18, v0 + OBJC_IVAR____TtCV7Weather36LocationNoAqiSevereNewsConfiguration8_Storage_newsArticle, type metadata accessor for LocationViewComponent);
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v3);
  sub_10011E690();
  sub_1000B44B0();
}

uint64_t sub_1001E4E10@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1001E4BD4(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1001E4E38()
{
  char v0;

  sub_1001E6064();
  return v0 & 1;
}

void sub_1001E4E70()
{
  uint64_t v0;

  v0 = sub_1000BD2A4();
  type metadata accessor for LocationNoAqiSevereNewsConfiguration._Storage(v0);
  sub_10011E5C8();
  sub_10004A298();
}

void sub_1001E4EAC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1000BE9DC();
  sub_1000C00FC();
  sub_1000BA294(&qword_100BCAA08);
  sub_1000BA514();
  __chkstk_darwin(v1);
  sub_1000CD594();
  v2 = sub_1001F9404();
  sub_1000C2488((uint64_t)&type metadata for LocationNoAqiSevereNewsConfiguration.CodingKeys, v3, v2);
  if (!v0)
  {
    type metadata accessor for LocationNoAqiSevereNewsConfiguration._Storage(0);
    sub_1000C0CC8(&qword_100BCAA18, v4, type metadata accessor for LocationNoAqiSevereNewsConfiguration._Storage, (uint64_t)&unk_100982E8C);
    sub_1000BBCBC(v5, v6);
    sub_1000C35BC();
  }
  sub_1000998EC();
  sub_1000BF0D8();
  sub_100089054();
}

uint64_t sub_1001E4F68(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F9404();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001E4F90(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F9404();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001E4FB8(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1001E4EAC();
  if (!v1)
    *a1 = v3;
}

void sub_1001E4FE0()
{
  sub_1001E4E70();
}

void sub_1001E4FEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1001DE3A0(a1, a2, a3, a4, (uint64_t)&OBJC_IVAR____TtCV7Weather35LocationNoAqiSevereNhpConfiguration8_Storage_map, (uint64_t)&OBJC_IVAR____TtCV7Weather35LocationNoAqiSevereNhpConfiguration8_Storage_severeAlert, &OBJC_IVAR____TtCV7Weather35LocationNoAqiSevereNhpConfiguration8_Storage_nextHourPrecipitation);
}

uint64_t sub_1001E5008(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v8;
  unint64_t v10;
  char v11;

  if (a1 == 0x6E6F6D6D6F63 && a2 == 0xE600000000000000)
  {
    v5 = 0xE600000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F6D6D6F63, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 7364973 && a2 == 0xE300000000000000)
  {
    v8 = 0xE300000000000000;
    goto LABEL_16;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(7364973, 0xE300000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
LABEL_16:
    swift_bridgeObjectRelease(v8);
    return 1;
  }
  if (a1 == 0x6C41657265766573 && a2 == 0xEB00000000747265)
  {
    v10 = 0xEB00000000747265;
    goto LABEL_24;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6C41657265766573, 0xEB00000000747265, a1, a2, 0) & 1) != 0)
  {
    v10 = a2;
LABEL_24:
    swift_bridgeObjectRelease(v10);
    return 2;
  }
  if (a1 == 0xD000000000000015 && a2 == 0x80000001009F0580)
  {
    swift_bridgeObjectRelease(0x80000001009F0580);
    return 3;
  }
  else
  {
    v11 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000015, 0x80000001009F0580, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v11 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1001E51B4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1001E51E4 + 4 * byte_100981881[a1]))(0x6E6F6D6D6F63, 0xE600000000000000);
}

uint64_t sub_1001E51E4()
{
  return 7364973;
}

uint64_t sub_1001E51F4()
{
  return 0x6C41657265766573;
}

unint64_t sub_1001E5214()
{
  return 0xD000000000000015;
}

uint64_t sub_1001E5230()
{
  unsigned __int8 *v0;

  return sub_1001E51B4(*v0);
}

uint64_t sub_1001E5238@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1001E5008(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1001E525C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F61B8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001E5284(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F61B8();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001E52AC()
{
  uint64_t v0;

  sub_10009C0B4();
  sub_100079F9C(v0 + OBJC_IVAR____TtCV7Weather35LocationNoAqiSevereNhpConfiguration8_Storage_map);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather35LocationNoAqiSevereNhpConfiguration8_Storage_severeAlert);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather35LocationNoAqiSevereNhpConfiguration8_Storage_nextHourPrecipitation);
  sub_10004A298();
}

uint64_t sub_1001E52F8()
{
  return sub_100082C68(sub_1001E52AC);
}

uint64_t sub_1001E5304()
{
  return type metadata accessor for LocationNoAqiSevereNhpConfiguration._Storage(0);
}

uint64_t type metadata accessor for LocationNoAqiSevereNhpConfiguration._Storage(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC8568, (uint64_t)&nominal type descriptor for LocationNoAqiSevereNhpConfiguration._Storage);
}

uint64_t sub_1001E5320(uint64_t a1)
{
  return sub_1001DDA20(a1, (void (*)(uint64_t))sub_1001E533C);
}

void sub_1001E533C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  sub_100099310();
  v3 = v2;
  sub_1000D0014();
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_1000DA474(v5, v19);
  __chkstk_darwin(v6);
  sub_1000D056C();
  __chkstk_darwin(v7);
  sub_1000BCEC0();
  v8 = sub_1000BA294(&qword_100BCA318);
  v9 = sub_1000DAC14(v8);
  __chkstk_darwin(v9);
  sub_1000CDECC(v3, v3[3]);
  v10 = sub_1001F61B8();
  sub_1000C0900((uint64_t)&type metadata for LocationNoAqiSevereNhpConfiguration._Storage.CodingKeys, v11, v10);
  sub_1001FAFA4();
  if (v1)
  {
    sub_1000F439C(v12, v13);
  }
  else
  {
    sub_1000CDBB0();
    sub_1000C6570((uint64_t)&unk_100B616F0, (uint64_t)&v21, v20, (uint64_t)&unk_100B616F0);
    sub_1000BE754();
    sub_1000C0CC8((unint64_t *)&qword_100BCA2C0, v14, type metadata accessor for LocationViewComponent, (uint64_t)&unk_1009B2000);
    v16 = sub_100098924(v15);
    sub_100110444(v16, v0 + OBJC_IVAR____TtCV7Weather35LocationNoAqiSevereNhpConfiguration8_Storage_map, type metadata accessor for LocationViewComponent);
    v17 = sub_1000D9B8C();
    sub_1000ED420(v17, v0 + OBJC_IVAR____TtCV7Weather35LocationNoAqiSevereNhpConfiguration8_Storage_severeAlert, type metadata accessor for LocationViewComponent);
    sub_1000D15AC();
    v18 = sub_1000C6578();
    sub_1000ED420(v18, v0 + OBJC_IVAR____TtCV7Weather35LocationNoAqiSevereNhpConfiguration8_Storage_nextHourPrecipitation, type metadata accessor for LocationViewComponent);
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v3);
  sub_10011E690();
  sub_1000B44B0();
}

uint64_t sub_1001E555C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1001E5320(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1001E5584()
{
  char v0;

  sub_1001E6064();
  return v0 & 1;
}

void sub_1001E55BC()
{
  uint64_t v0;

  v0 = sub_1000BD2A4();
  type metadata accessor for LocationNoAqiSevereNhpConfiguration._Storage(v0);
  sub_10011E5C8();
  sub_10004A298();
}

void sub_1001E55F8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1000BE9DC();
  sub_1000C00FC();
  sub_1000BA294(&qword_100BCAA20);
  sub_1000BA514();
  __chkstk_darwin(v1);
  sub_1000CD594();
  v2 = sub_1001F9440();
  sub_1000C2488((uint64_t)&type metadata for LocationNoAqiSevereNhpConfiguration.CodingKeys, v3, v2);
  if (!v0)
  {
    type metadata accessor for LocationNoAqiSevereNhpConfiguration._Storage(0);
    sub_1000C0CC8(&qword_100BCAA30, v4, type metadata accessor for LocationNoAqiSevereNhpConfiguration._Storage, (uint64_t)&unk_100982E3C);
    sub_1000BBCBC(v5, v6);
    sub_1000C35BC();
  }
  sub_1000998EC();
  sub_1000BF0D8();
  sub_100089054();
}

uint64_t sub_1001E56B4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F9440();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001E56DC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F9440();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001E5704(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1001E55F8();
  if (!v1)
    *a1 = v3;
}

void sub_1001E572C()
{
  sub_1001E55BC();
}

void sub_1001E5738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1001E16BC(a1, a2, a3, a4, a5, (uint64_t)&OBJC_IVAR____TtCV7Weather39LocationNoAqiSevereNhpNewsConfiguration8_Storage_map, (uint64_t)&OBJC_IVAR____TtCV7Weather39LocationNoAqiSevereNhpNewsConfiguration8_Storage_severeAlert, (uint64_t)&OBJC_IVAR____TtCV7Weather39LocationNoAqiSevereNhpNewsConfiguration8_Storage_nextHourPrecipitation, &OBJC_IVAR____TtCV7Weather39LocationNoAqiSevereNhpNewsConfiguration8_Storage_newsArticle);
  sub_1000CC7E4();
}

uint64_t sub_1001E5774(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v8;
  unint64_t v10;
  unint64_t v11;
  char v13;

  if (a1 == 0x6E6F6D6D6F63 && a2 == 0xE600000000000000)
  {
    v5 = 0xE600000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F6D6D6F63, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 7364973 && a2 == 0xE300000000000000)
  {
    v8 = 0xE300000000000000;
    goto LABEL_16;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(7364973, 0xE300000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
LABEL_16:
    swift_bridgeObjectRelease(v8);
    return 1;
  }
  if (a1 == 0x6C41657265766573 && a2 == 0xEB00000000747265)
  {
    v10 = 0xEB00000000747265;
    goto LABEL_24;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6C41657265766573, 0xEB00000000747265, a1, a2, 0) & 1) != 0)
  {
    v10 = a2;
LABEL_24:
    swift_bridgeObjectRelease(v10);
    return 2;
  }
  if (a1 == 0xD000000000000015)
  {
    v11 = 0x80000001009F0580;
    if (a2 == 0x80000001009F0580)
      goto LABEL_29;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000015, 0x80000001009F0580, a1, a2, 0) & 1) != 0)
  {
    v11 = a2;
LABEL_29:
    swift_bridgeObjectRelease(v11);
    return 3;
  }
  if (a1 == 0x697472417377656ELL && a2 == 0xEB00000000656C63)
  {
    swift_bridgeObjectRelease(0xEB00000000656C63);
    return 4;
  }
  else
  {
    v13 = _stringCompareWithSmolCheck(_:_:expecting:)(0x697472417377656ELL, 0xEB00000000656C63, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v13 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1001E5994(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1001E59C4 + 4 * byte_100981885[a1]))(0x6E6F6D6D6F63, 0xE600000000000000);
}

uint64_t sub_1001E59C4()
{
  return 7364973;
}

uint64_t sub_1001E59D4()
{
  return 0x6C41657265766573;
}

unint64_t sub_1001E59F4()
{
  return 0xD000000000000015;
}

uint64_t sub_1001E5A10()
{
  return 0x697472417377656ELL;
}

uint64_t sub_1001E5A30()
{
  unsigned __int8 *v0;

  return sub_1001E5994(*v0);
}

uint64_t sub_1001E5A38@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1001E5774(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1001E5A5C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F617C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001E5A84(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F617C();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001E5AAC()
{
  uint64_t v0;

  sub_10009C0B4();
  sub_100079F9C(v0 + OBJC_IVAR____TtCV7Weather39LocationNoAqiSevereNhpNewsConfiguration8_Storage_map);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather39LocationNoAqiSevereNhpNewsConfiguration8_Storage_severeAlert);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather39LocationNoAqiSevereNhpNewsConfiguration8_Storage_nextHourPrecipitation);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather39LocationNoAqiSevereNhpNewsConfiguration8_Storage_newsArticle);
  sub_10004A298();
}

uint64_t sub_1001E5B04()
{
  return sub_100082C68(sub_1001E5AAC);
}

uint64_t sub_1001E5B10()
{
  return type metadata accessor for LocationNoAqiSevereNhpNewsConfiguration._Storage(0);
}

uint64_t type metadata accessor for LocationNoAqiSevereNhpNewsConfiguration._Storage(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC8638, (uint64_t)&nominal type descriptor for LocationNoAqiSevereNhpNewsConfiguration._Storage);
}

uint64_t sub_1001E5B2C(uint64_t a1)
{
  return sub_1001DDA20(a1, (void (*)(uint64_t))sub_1001E5B48);
}

void sub_1001E5B48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD v36[5];
  uint64_t v37;
  _QWORD *v38;
  char v39;
  char v40;
  __int16 v41;

  sub_100099310();
  v13 = v10;
  v15 = v14;
  v36[4] = sub_1000D0014();
  sub_1000B42B0();
  __chkstk_darwin(v16);
  v36[2] = (char *)v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009D2A4();
  __chkstk_darwin(v18);
  v36[3] = (char *)v36 - v19;
  sub_10009D2A4();
  __chkstk_darwin(v20);
  sub_10011E770();
  __chkstk_darwin(v21);
  sub_10011DB14();
  v22 = sub_1000BA294(&qword_100BCA308);
  v23 = sub_1000DAC14(v22);
  __chkstk_darwin(v23);
  sub_1000CDECC(v15, v15[3]);
  v24 = sub_1001F617C();
  sub_1000ECF20((uint64_t)&type metadata for LocationNoAqiSevereNhpNewsConfiguration._Storage.CodingKeys, v25, v24);
  sub_1001FAFA4();
  if (v11)
  {
    sub_10009EE5C(v26, v27);
    v35 = v15;
  }
  else
  {
    sub_1000EF954();
    v28 = v37;
    sub_1000C6570((uint64_t)&unk_100B616F0, (uint64_t)&v41 + 1, v37, (uint64_t)&unk_100B616F0);
    *(_QWORD *)(v10 + 16) = a10;
    sub_1000FD8EC();
    sub_1000C0CC8((unint64_t *)&qword_100BCA2C0, v29, type metadata accessor for LocationViewComponent, (uint64_t)&unk_1009B2000);
    v30 = sub_1000C6570(v12, (uint64_t)&v41, v28, v12);
    sub_100110444(v30, v10 + OBJC_IVAR____TtCV7Weather39LocationNoAqiSevereNhpNewsConfiguration8_Storage_map, type metadata accessor for LocationViewComponent);
    v31 = sub_1000BD2B4();
    sub_10009C924(v31, v10 + OBJC_IVAR____TtCV7Weather39LocationNoAqiSevereNhpNewsConfiguration8_Storage_severeAlert, type metadata accessor for LocationViewComponent);
    v40 = 3;
    v32 = sub_1000C6570(0, (uint64_t)&v40, v28, 0);
    sub_10009C924(v32, v10 + OBJC_IVAR____TtCV7Weather39LocationNoAqiSevereNhpNewsConfiguration8_Storage_nextHourPrecipitation, type metadata accessor for LocationViewComponent);
    v39 = 4;
    v33 = v38;
    sub_1000C6570(0, (uint64_t)&v39, v28, 0);
    sub_1001FB514();
    v34 = sub_1000C6578();
    sub_1000ED420(v34, v13 + OBJC_IVAR____TtCV7Weather39LocationNoAqiSevereNhpNewsConfiguration8_Storage_newsArticle, type metadata accessor for LocationViewComponent);
    v35 = v33;
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v35);
  sub_10011E690();
  sub_1000B44B0();
}

uint64_t sub_1001E5E5C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1001E5B2C(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1001E5E84()
{
  char v0;

  sub_1001E7864();
  return v0 & 1;
}

void sub_1001E5EC4()
{
  uint64_t v0;

  v0 = sub_1000BD2A4();
  type metadata accessor for LocationNoAqiSevereNhpNewsConfiguration._Storage(v0);
  sub_1001FAFF4();
  sub_10004A298();
}

void sub_1001E5F08()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1000BE9DC();
  sub_1000C00FC();
  sub_1000BA294(&qword_100BCAA38);
  sub_1000BA514();
  __chkstk_darwin(v1);
  sub_1000CD594();
  v2 = sub_1001F947C();
  sub_1000C2488((uint64_t)&type metadata for LocationNoAqiSevereNhpNewsConfiguration.CodingKeys, v3, v2);
  if (!v0)
  {
    type metadata accessor for LocationNoAqiSevereNhpNewsConfiguration._Storage(0);
    sub_1000C0CC8(&qword_100BCAA48, v4, type metadata accessor for LocationNoAqiSevereNhpNewsConfiguration._Storage, (uint64_t)&unk_100982DEC);
    sub_1000BBCBC(v5, v6);
    sub_1000C35BC();
  }
  sub_1000998EC();
  sub_1000BF0D8();
  sub_100089054();
}

uint64_t sub_1001E5FC4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F947C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001E5FEC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F947C();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001E6014(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1001E5F08();
  if (!v1)
    *a1 = v3;
}

void sub_1001E603C()
{
  sub_1001E5EC4();
}

void sub_1001E6048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1001DE3A0(a1, a2, a3, a4, (uint64_t)&OBJC_IVAR____TtCV7Weather27LocationSevereConfiguration8_Storage_map, (uint64_t)&OBJC_IVAR____TtCV7Weather27LocationSevereConfiguration8_Storage_severeAlert, &OBJC_IVAR____TtCV7Weather27LocationSevereConfiguration8_Storage_airQuality);
}

void sub_1001E6064()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;

  sub_1000986AC();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  sub_10009E8F8();
  sub_1000B42B0();
  __chkstk_darwin(v12);
  sub_1000BBB38();
  __chkstk_darwin(v13);
  sub_1000BCEC0();
  v14 = *(_QWORD *)(v11 + 16);
  v15 = *(_QWORD *)(v9 + 16);
  sub_1001FB994();
  swift_retain();
  swift_retain();
  sub_1001DBFAC();
  v17 = v16;
  swift_release(v14);
  swift_release(v15);
  if ((v17 & 1) != 0)
  {
    sub_100110184(v11 + *v7, v1);
    sub_100110184(v9 + *v7, v0);
    sub_1001FAFB0();
    v19 = v18;
    sub_10009D2F8(v0);
    sub_10009D2F8(v1);
    if ((v19 & 1) != 0)
    {
      sub_1000DC370(v11 + *v5, v1);
      sub_1000DC370(v9 + *v5, v0);
      sub_1001FAFB0();
      v21 = v20;
      sub_10009DA28(v0);
      sub_10009DA28(v1);
      if ((v21 & 1) != 0)
      {
        sub_1000D0564(v11 + *v3, v1);
        sub_1000D0564(v9 + *v3, v0);
        sub_1001FAFB0();
        sub_10009D37C(v0);
        sub_10009D37C(v1);
      }
    }
  }
  sub_1001FB384();
  sub_100098640();
}

void sub_1001E61D0()
{
  uint64_t v0;
  BOOL v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  sub_10009C810();
  v1 = v1 && v0 == 0xE600000000000000;
  if (v1
    || (v2 = v0, (sub_1000D8DF8(0x6E6F6D6D6F63, 0xE600000000000000) & 1) != 0)
    || ((sub_10009F03C(), v1) ? (v3 = v2 == 0xE300000000000000) : (v3 = 0),
        v3
     || (sub_1000D8DF8(7364973, 0xE300000000000000) & 1) != 0
     || ((sub_10009DE40(), v1) ? (v5 = v2 == v4) : (v5 = 0),
         v5 || (sub_1000D8DF8(0x6C41657265766573, 0xEB00000000747265) & 1) != 0)))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10009E30C();
    if (v1 && v2 == v6)
    {
      sub_100094F48();
    }
    else
    {
      sub_1000D8DF8(0x696C617551726961, 0xEA00000000007974);
      sub_1000986E8();
    }
  }
  sub_10004A298();
}

uint64_t sub_1001E6300(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1001E6330 + 4 * byte_10098188A[a1]))(0x6E6F6D6D6F63, 0xE600000000000000);
}

uint64_t sub_1001E6330()
{
  return 7364973;
}

uint64_t sub_1001E6340()
{
  return 0x6C41657265766573;
}

uint64_t sub_1001E6360()
{
  return 0x696C617551726961;
}

uint64_t sub_1001E637C()
{
  unsigned __int8 *v0;

  return sub_1001E6300(*v0);
}

void sub_1001E6384(_BYTE *a1@<X8>)
{
  char v2;

  sub_1001E61D0();
  *a1 = v2;
}

uint64_t sub_1001E63A8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F6140();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001E63D0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F6140();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001E63F8()
{
  uint64_t v0;

  sub_10009C0B4();
  sub_100079F9C(v0 + OBJC_IVAR____TtCV7Weather27LocationSevereConfiguration8_Storage_map);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather27LocationSevereConfiguration8_Storage_severeAlert);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather27LocationSevereConfiguration8_Storage_airQuality);
  sub_10004A298();
}

uint64_t sub_1001E6444()
{
  return sub_100082C68(sub_1001E63F8);
}

uint64_t sub_1001E6450()
{
  return type metadata accessor for LocationSevereConfiguration._Storage(0);
}

uint64_t type metadata accessor for LocationSevereConfiguration._Storage(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC8710, (uint64_t)&nominal type descriptor for LocationSevereConfiguration._Storage);
}

void sub_1001E646C()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  type metadata accessor for LocationViewComponent(319);
  if (v0 <= 0x3F)
  {
    sub_1001FB63C();
    v9 = sub_1001FB750(v1, v2, v3, v4, v5, v6, v7, v8, (uint64_t)&value witness table for Builtin.NativeObject + 64);
    sub_1001FB630(v9);
  }
  sub_1000951C8();
}

uint64_t sub_1001E64C8(uint64_t a1)
{
  return sub_1001DDA20(a1, (void (*)(uint64_t))sub_1001E64E4);
}

void sub_1001E64E4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  sub_100099310();
  v3 = v2;
  sub_1000D0014();
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_1000DA474(v5, v19);
  __chkstk_darwin(v6);
  sub_1000D056C();
  __chkstk_darwin(v7);
  sub_1000BCEC0();
  v8 = sub_1000BA294(&qword_100BCA2F8);
  v9 = sub_1000DAC14(v8);
  __chkstk_darwin(v9);
  sub_1000CDECC(v3, v3[3]);
  v10 = sub_1001F6140();
  sub_1000C0900((uint64_t)&type metadata for LocationSevereConfiguration._Storage.CodingKeys, v11, v10);
  sub_1001FAFA4();
  if (v1)
  {
    sub_1000F439C(v12, v13);
  }
  else
  {
    sub_1000CDBB0();
    sub_1000C6570((uint64_t)&unk_100B616F0, (uint64_t)&v21, v20, (uint64_t)&unk_100B616F0);
    sub_1000BE754();
    sub_1000C0CC8((unint64_t *)&qword_100BCA2C0, v14, type metadata accessor for LocationViewComponent, (uint64_t)&unk_1009B2000);
    v16 = sub_100098924(v15);
    sub_100110444(v16, v0 + OBJC_IVAR____TtCV7Weather27LocationSevereConfiguration8_Storage_map, type metadata accessor for LocationViewComponent);
    v17 = sub_1000D9B8C();
    sub_1000ED420(v17, v0 + OBJC_IVAR____TtCV7Weather27LocationSevereConfiguration8_Storage_severeAlert, type metadata accessor for LocationViewComponent);
    sub_1000D15AC();
    v18 = sub_1000C6578();
    sub_1000ED420(v18, v0 + OBJC_IVAR____TtCV7Weather27LocationSevereConfiguration8_Storage_airQuality, type metadata accessor for LocationViewComponent);
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v3);
  sub_10011E690();
  sub_1000B44B0();
}

uint64_t sub_1001E6704@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1001E64C8(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1001E672C()
{
  char v0;

  sub_1001E6064();
  return v0 & 1;
}

void sub_1001E6764()
{
  uint64_t v0;

  v0 = sub_1000BD2A4();
  type metadata accessor for LocationSevereConfiguration._Storage(v0);
  sub_10011E5C8();
  sub_10004A298();
}

void sub_1001E67A0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1000BE9DC();
  sub_1000C00FC();
  sub_1000BA294(&qword_100BCAA50);
  sub_1000BA514();
  __chkstk_darwin(v1);
  sub_1000CD594();
  v2 = sub_1001F94B8();
  sub_1000C2488((uint64_t)&type metadata for LocationSevereConfiguration.CodingKeys, v3, v2);
  if (!v0)
  {
    type metadata accessor for LocationSevereConfiguration._Storage(0);
    sub_1000C0CC8(&qword_100BCAA60, v4, type metadata accessor for LocationSevereConfiguration._Storage, (uint64_t)&unk_100982D9C);
    sub_1000BBCBC(v5, v6);
    sub_1000C35BC();
  }
  sub_1000998EC();
  sub_1000BF0D8();
  sub_100089054();
}

uint64_t sub_1001E685C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F94B8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001E6884(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F94B8();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001E68AC(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1001E67A0();
  if (!v1)
    *a1 = v3;
}

void sub_1001E68D4()
{
  sub_1001E6764();
}

void sub_1001E68E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1001E16BC(a1, a2, a3, a4, a5, (uint64_t)&OBJC_IVAR____TtCV7Weather31LocationSevereNewsConfiguration8_Storage_map, (uint64_t)&OBJC_IVAR____TtCV7Weather31LocationSevereNewsConfiguration8_Storage_severeAlert, (uint64_t)&OBJC_IVAR____TtCV7Weather31LocationSevereNewsConfiguration8_Storage_newsArticle, &OBJC_IVAR____TtCV7Weather31LocationSevereNewsConfiguration8_Storage_airQuality);
  sub_1000CC7E4();
}

uint64_t sub_1001E691C(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v8;
  unint64_t v10;
  unint64_t v12;
  char v14;

  if (a1 == 0x6E6F6D6D6F63 && a2 == 0xE600000000000000)
  {
    v5 = 0xE600000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F6D6D6F63, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 7364973 && a2 == 0xE300000000000000)
  {
    v8 = 0xE300000000000000;
    goto LABEL_16;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(7364973, 0xE300000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
LABEL_16:
    swift_bridgeObjectRelease(v8);
    return 1;
  }
  if (a1 == 0x6C41657265766573 && a2 == 0xEB00000000747265)
  {
    v10 = 0xEB00000000747265;
    goto LABEL_24;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6C41657265766573, 0xEB00000000747265, a1, a2, 0) & 1) != 0)
  {
    v10 = a2;
LABEL_24:
    swift_bridgeObjectRelease(v10);
    return 2;
  }
  if (a1 == 0x697472417377656ELL && a2 == 0xEB00000000656C63)
  {
    v12 = 0xEB00000000656C63;
    goto LABEL_32;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x697472417377656ELL, 0xEB00000000656C63, a1, a2, 0) & 1) != 0)
  {
    v12 = a2;
LABEL_32:
    swift_bridgeObjectRelease(v12);
    return 3;
  }
  if (a1 == 0x696C617551726961 && a2 == 0xEA00000000007974)
  {
    swift_bridgeObjectRelease(0xEA00000000007974);
    return 4;
  }
  else
  {
    v14 = _stringCompareWithSmolCheck(_:_:expecting:)(0x696C617551726961, 0xEA00000000007974, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v14 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1001E6B4C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1001E6B7C + 4 * byte_10098188E[a1]))(0x6E6F6D6D6F63, 0xE600000000000000);
}

uint64_t sub_1001E6B7C()
{
  return 7364973;
}

uint64_t sub_1001E6B8C()
{
  return 0x6C41657265766573;
}

uint64_t sub_1001E6BAC()
{
  return 0x697472417377656ELL;
}

uint64_t sub_1001E6BCC()
{
  return 0x696C617551726961;
}

uint64_t sub_1001E6BE8()
{
  unsigned __int8 *v0;

  return sub_1001E6B4C(*v0);
}

uint64_t sub_1001E6BF0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1001E691C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1001E6C14(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F6104();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001E6C3C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F6104();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001E6C64()
{
  uint64_t v0;

  sub_10009C0B4();
  sub_100079F9C(v0 + OBJC_IVAR____TtCV7Weather31LocationSevereNewsConfiguration8_Storage_map);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather31LocationSevereNewsConfiguration8_Storage_severeAlert);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather31LocationSevereNewsConfiguration8_Storage_newsArticle);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather31LocationSevereNewsConfiguration8_Storage_airQuality);
  sub_10004A298();
}

uint64_t sub_1001E6CBC()
{
  return sub_100082C68(sub_1001E6C64);
}

uint64_t sub_1001E6CC8()
{
  return type metadata accessor for LocationSevereNewsConfiguration._Storage(0);
}

uint64_t type metadata accessor for LocationSevereNewsConfiguration._Storage(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC87E0, (uint64_t)&nominal type descriptor for LocationSevereNewsConfiguration._Storage);
}

uint64_t sub_1001E6CE4(uint64_t a1)
{
  return sub_1001DDA20(a1, (void (*)(uint64_t))sub_1001E6D00);
}

void sub_1001E6D00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD v36[5];
  uint64_t v37;
  _QWORD *v38;
  char v39;
  char v40;
  __int16 v41;

  sub_100099310();
  v13 = v10;
  v15 = v14;
  v36[4] = sub_1000D0014();
  sub_1000B42B0();
  __chkstk_darwin(v16);
  v36[2] = (char *)v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009D2A4();
  __chkstk_darwin(v18);
  v36[3] = (char *)v36 - v19;
  sub_10009D2A4();
  __chkstk_darwin(v20);
  sub_10011E770();
  __chkstk_darwin(v21);
  sub_10011DB14();
  v22 = sub_1000BA294(&qword_100BCA2E8);
  v23 = sub_1000DAC14(v22);
  __chkstk_darwin(v23);
  sub_1000CDECC(v15, v15[3]);
  v24 = sub_1001F6104();
  sub_1000ECF20((uint64_t)&type metadata for LocationSevereNewsConfiguration._Storage.CodingKeys, v25, v24);
  sub_1001FAFA4();
  if (v11)
  {
    sub_10009EE5C(v26, v27);
    v35 = v15;
  }
  else
  {
    sub_1000EF954();
    v28 = v37;
    sub_1000C6570((uint64_t)&unk_100B616F0, (uint64_t)&v41 + 1, v37, (uint64_t)&unk_100B616F0);
    *(_QWORD *)(v10 + 16) = a10;
    sub_1000FD8EC();
    sub_1000C0CC8((unint64_t *)&qword_100BCA2C0, v29, type metadata accessor for LocationViewComponent, (uint64_t)&unk_1009B2000);
    v30 = sub_1000C6570(v12, (uint64_t)&v41, v28, v12);
    sub_100110444(v30, v10 + OBJC_IVAR____TtCV7Weather31LocationSevereNewsConfiguration8_Storage_map, type metadata accessor for LocationViewComponent);
    v31 = sub_1000BD2B4();
    sub_10009C924(v31, v10 + OBJC_IVAR____TtCV7Weather31LocationSevereNewsConfiguration8_Storage_severeAlert, type metadata accessor for LocationViewComponent);
    v40 = 3;
    v32 = sub_1000C6570(0, (uint64_t)&v40, v28, 0);
    sub_10009C924(v32, v10 + OBJC_IVAR____TtCV7Weather31LocationSevereNewsConfiguration8_Storage_newsArticle, type metadata accessor for LocationViewComponent);
    v39 = 4;
    v33 = v38;
    sub_1000C6570(0, (uint64_t)&v39, v28, 0);
    sub_1001FB514();
    v34 = sub_1000C6578();
    sub_1000ED420(v34, v13 + OBJC_IVAR____TtCV7Weather31LocationSevereNewsConfiguration8_Storage_airQuality, type metadata accessor for LocationViewComponent);
    v35 = v33;
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v35);
  sub_10011E690();
  sub_1000B44B0();
}

uint64_t sub_1001E7014@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1001E6CE4(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1001E703C()
{
  char v0;

  sub_1001E7864();
  return v0 & 1;
}

void sub_1001E707C()
{
  uint64_t v0;

  v0 = sub_1000BD2A4();
  type metadata accessor for LocationSevereNewsConfiguration._Storage(v0);
  sub_1001FAFF4();
  sub_10004A298();
}

void sub_1001E70C0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1000BE9DC();
  sub_1000C00FC();
  sub_1000BA294(&qword_100BCAA68);
  sub_1000BA514();
  __chkstk_darwin(v1);
  sub_1000CD594();
  v2 = sub_1001F94F4();
  sub_1000C2488((uint64_t)&type metadata for LocationSevereNewsConfiguration.CodingKeys, v3, v2);
  if (!v0)
  {
    type metadata accessor for LocationSevereNewsConfiguration._Storage(0);
    sub_1000C0CC8(&qword_100BCAA78, v4, type metadata accessor for LocationSevereNewsConfiguration._Storage, (uint64_t)&unk_100982D4C);
    sub_1000BBCBC(v5, v6);
    sub_1000C35BC();
  }
  sub_1000998EC();
  sub_1000BF0D8();
  sub_100089054();
}

uint64_t sub_1001E717C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F94F4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001E71A4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F94F4();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001E71CC(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1001E70C0();
  if (!v1)
    *a1 = v3;
}

void sub_1001E71F4()
{
  sub_1001E707C();
}

void sub_1001E7200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1001E16BC(a1, a2, a3, a4, a5, (uint64_t)&OBJC_IVAR____TtCV7Weather33LocationSevereNhpAqiConfiguration8_Storage_map, (uint64_t)&OBJC_IVAR____TtCV7Weather33LocationSevereNhpAqiConfiguration8_Storage_severeAlert, (uint64_t)&OBJC_IVAR____TtCV7Weather33LocationSevereNhpAqiConfiguration8_Storage_nextHourPrecipitation, &OBJC_IVAR____TtCV7Weather33LocationSevereNhpAqiConfiguration8_Storage_airQuality);
  sub_1000CC7E4();
}

uint64_t sub_1001E723C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F60C8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001E7264(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F60C8();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001E728C()
{
  uint64_t v0;

  sub_10009C0B4();
  sub_100079F9C(v0 + OBJC_IVAR____TtCV7Weather33LocationSevereNhpAqiConfiguration8_Storage_map);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather33LocationSevereNhpAqiConfiguration8_Storage_severeAlert);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather33LocationSevereNhpAqiConfiguration8_Storage_nextHourPrecipitation);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather33LocationSevereNhpAqiConfiguration8_Storage_airQuality);
  sub_10004A298();
}

uint64_t sub_1001E72E4()
{
  return sub_100082C68(sub_1001E728C);
}

uint64_t sub_1001E72F0()
{
  return type metadata accessor for LocationSevereNhpAqiConfiguration._Storage(0);
}

uint64_t type metadata accessor for LocationSevereNhpAqiConfiguration._Storage(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC88B8, (uint64_t)&nominal type descriptor for LocationSevereNhpAqiConfiguration._Storage);
}

uint64_t sub_1001E730C(uint64_t a1)
{
  return sub_1001DDA20(a1, (void (*)(uint64_t))sub_1001E7328);
}

void sub_1001E7328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD v36[5];
  uint64_t v37;
  _QWORD *v38;
  char v39;
  char v40;
  __int16 v41;

  sub_100099310();
  v13 = v10;
  v15 = v14;
  v36[4] = sub_1000D0014();
  sub_1000B42B0();
  __chkstk_darwin(v16);
  v36[2] = (char *)v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009D2A4();
  __chkstk_darwin(v18);
  v36[3] = (char *)v36 - v19;
  sub_10009D2A4();
  __chkstk_darwin(v20);
  sub_10011E770();
  __chkstk_darwin(v21);
  sub_10011DB14();
  v22 = sub_1000BA294(&qword_100BCA2D8);
  v23 = sub_1000DAC14(v22);
  __chkstk_darwin(v23);
  sub_1000CDECC(v15, v15[3]);
  v24 = sub_1001F60C8();
  sub_1000ECF20((uint64_t)&type metadata for LocationSevereNhpAqiConfiguration._Storage.CodingKeys, v25, v24);
  sub_1001FAFA4();
  if (v11)
  {
    sub_10009EE5C(v26, v27);
    v35 = v15;
  }
  else
  {
    sub_1000EF954();
    v28 = v37;
    sub_1000C6570((uint64_t)&unk_100B616F0, (uint64_t)&v41 + 1, v37, (uint64_t)&unk_100B616F0);
    *(_QWORD *)(v10 + 16) = a10;
    sub_1000FD8EC();
    sub_1000C0CC8((unint64_t *)&qword_100BCA2C0, v29, type metadata accessor for LocationViewComponent, (uint64_t)&unk_1009B2000);
    v30 = sub_1000C6570(v12, (uint64_t)&v41, v28, v12);
    sub_100110444(v30, v10 + OBJC_IVAR____TtCV7Weather33LocationSevereNhpAqiConfiguration8_Storage_map, type metadata accessor for LocationViewComponent);
    v31 = sub_1000BD2B4();
    sub_10009C924(v31, v10 + OBJC_IVAR____TtCV7Weather33LocationSevereNhpAqiConfiguration8_Storage_severeAlert, type metadata accessor for LocationViewComponent);
    v40 = 3;
    v32 = sub_1000C6570(0, (uint64_t)&v40, v28, 0);
    sub_10009C924(v32, v10 + OBJC_IVAR____TtCV7Weather33LocationSevereNhpAqiConfiguration8_Storage_nextHourPrecipitation, type metadata accessor for LocationViewComponent);
    v39 = 4;
    v33 = v38;
    sub_1000C6570(0, (uint64_t)&v39, v28, 0);
    sub_1001FB514();
    v34 = sub_1000C6578();
    sub_1000ED420(v34, v13 + OBJC_IVAR____TtCV7Weather33LocationSevereNhpAqiConfiguration8_Storage_airQuality, type metadata accessor for LocationViewComponent);
    v35 = v33;
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v35);
  sub_10011E690();
  sub_1000B44B0();
}

uint64_t sub_1001E763C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1001E730C(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1001E7664()
{
  char v0;

  sub_1001E7864();
  return v0 & 1;
}

void sub_1001E76A4()
{
  uint64_t v0;

  v0 = sub_1000BD2A4();
  type metadata accessor for LocationSevereNhpAqiConfiguration._Storage(v0);
  sub_1001FAFF4();
  sub_10004A298();
}

void sub_1001E76E8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1000BE9DC();
  sub_1000C00FC();
  sub_1000BA294(&qword_100BCAA80);
  sub_1000BA514();
  __chkstk_darwin(v1);
  sub_1000CD594();
  v2 = sub_1001F9530();
  sub_1000C2488((uint64_t)&type metadata for LocationSevereNhpAqiConfiguration.CodingKeys, v3, v2);
  if (!v0)
  {
    type metadata accessor for LocationSevereNhpAqiConfiguration._Storage(0);
    sub_1000C0CC8(&qword_100BCAA90, v4, type metadata accessor for LocationSevereNhpAqiConfiguration._Storage, (uint64_t)&unk_100982CFC);
    sub_1000BBCBC(v5, v6);
    sub_1000C35BC();
  }
  sub_1000998EC();
  sub_1000BF0D8();
  sub_100089054();
}

uint64_t sub_1001E77A4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F9530();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001E77CC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F9530();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001E77F4(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1001E76E8();
  if (!v1)
    *a1 = v3;
}

void sub_1001E781C()
{
  sub_1001E76A4();
}

void sub_1001E7828(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1001E16BC(a1, a2, a3, a4, a5, (uint64_t)&OBJC_IVAR____TtCV7Weather30LocationSevereNhpConfiguration8_Storage_map, (uint64_t)&OBJC_IVAR____TtCV7Weather30LocationSevereNhpConfiguration8_Storage_severeAlert, (uint64_t)&OBJC_IVAR____TtCV7Weather30LocationSevereNhpConfiguration8_Storage_nextHourPrecipitation, &OBJC_IVAR____TtCV7Weather30LocationSevereNhpConfiguration8_Storage_airQuality);
  sub_1000CC7E4();
}

void sub_1001E7864()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  _QWORD *v18;
  _QWORD *v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  uint64_t v26;

  sub_1000986AC();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;
  sub_10009E8F8();
  sub_1000B42B0();
  __chkstk_darwin(v14);
  sub_1000BBB38();
  __chkstk_darwin(v15);
  sub_1000BCEC0();
  v16 = *(_QWORD *)(v13 + 16);
  v26 = v11;
  sub_1001FB994();
  swift_retain();
  sub_100079FA4();
  sub_1001DBFAC();
  LOBYTE(v11) = v17;
  swift_release(v16);
  sub_100098834();
  if ((v11 & 1) != 0)
  {
    v18 = v5;
    v19 = v3;
    sub_1000BCF30(v13 + *v9, v1);
    sub_1000BCF30(v26 + *v9, v0);
    sub_1001FAFB0();
    v21 = v20;
    sub_100079F9C(v0);
    sub_100079F9C(v1);
    if ((v21 & 1) != 0)
    {
      sub_1000BCF30(v13 + *v7, v1);
      sub_1000BCF30(v26 + *v7, v0);
      sub_1001FAFB0();
      v23 = v22;
      sub_100079F9C(v0);
      sub_100079F9C(v1);
      if ((v23 & 1) != 0)
      {
        sub_1000BCF30(v13 + *v18, v1);
        sub_1000BCF30(v26 + *v18, v0);
        sub_1001FAFB0();
        v25 = v24;
        sub_100079F9C(v0);
        sub_100079F9C(v1);
        if ((v25 & 1) != 0)
        {
          sub_1000D0564(v13 + *v19, v1);
          sub_1000D0564(v26 + *v19, v0);
          sub_1001FAFB0();
          sub_10009D37C(v0);
          sub_10009D37C(v1);
        }
      }
    }
  }
  sub_1001FB384();
  sub_100098640();
}

void sub_1001E7A18()
{
  uint64_t v0;
  uint64_t v1;
  BOOL v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  sub_10009C810();
  v2 = v2 && v1 == 0xE600000000000000;
  if (v2
    || (v3 = v1, v4 = v0, (sub_1000D8DF8(0x6E6F6D6D6F63, 0xE600000000000000) & 1) != 0)
    || ((sub_10009F03C(), v2) ? (v5 = v3 == 0xE300000000000000) : (v5 = 0),
        v5
     || (sub_1000D8DF8(7364973, 0xE300000000000000) & 1) != 0
     || ((sub_10009DE40(), v2) ? (v7 = v3 == v6) : (v7 = 0),
         v7
      || (sub_1000D8DF8(0x6C41657265766573, 0xEB00000000747265) & 1) != 0
      || v4 == 0xD000000000000015 && v3 == 0x80000001009F0580
      || (sub_1000D8DF8(0xD000000000000015, 0x80000001009F0580) & 1) != 0)))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10009E30C();
    if (v2 && v3 == v8)
    {
      sub_100094F48();
    }
    else
    {
      sub_1000D8DF8(0x696C617551726961, 0xEA00000000007974);
      sub_1000986E8();
    }
  }
  sub_10004A298();
}

uint64_t sub_1001E7B98(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1001E7BC8 + 4 * byte_100981893[a1]))(0x6E6F6D6D6F63, 0xE600000000000000);
}

uint64_t sub_1001E7BC8()
{
  return 7364973;
}

uint64_t sub_1001E7BD8()
{
  return 0x6C41657265766573;
}

unint64_t sub_1001E7BF8()
{
  return 0xD000000000000015;
}

uint64_t sub_1001E7C14()
{
  return 0x696C617551726961;
}

uint64_t sub_1001E7C30()
{
  unsigned __int8 *v0;

  return sub_1001E7B98(*v0);
}

void sub_1001E7C38(_BYTE *a1@<X8>)
{
  char v2;

  sub_1001E7A18();
  *a1 = v2;
}

uint64_t sub_1001E7C5C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F608C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001E7C84(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F608C();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001E7CAC()
{
  uint64_t v0;

  sub_10009C0B4();
  sub_100079F9C(v0 + OBJC_IVAR____TtCV7Weather30LocationSevereNhpConfiguration8_Storage_map);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather30LocationSevereNhpConfiguration8_Storage_severeAlert);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather30LocationSevereNhpConfiguration8_Storage_nextHourPrecipitation);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather30LocationSevereNhpConfiguration8_Storage_airQuality);
  sub_10004A298();
}

uint64_t sub_1001E7D04()
{
  return sub_100082C68(sub_1001E7CAC);
}

uint64_t sub_1001E7D10()
{
  return type metadata accessor for LocationSevereNhpConfiguration._Storage(0);
}

uint64_t type metadata accessor for LocationSevereNhpConfiguration._Storage(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC8990, (uint64_t)&nominal type descriptor for LocationSevereNhpConfiguration._Storage);
}

void sub_1001E7D2C()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1001FB960();
  if (v0 <= 0x3F)
  {
    sub_1001FB64C();
    v7 = sub_1001FB714(v1, v2, v3, v4, v5, v6);
    sub_1001FB630(v7);
  }
  sub_1000BBCDC();
}

uint64_t sub_1001E7D78(uint64_t a1)
{
  return sub_1001DDA20(a1, (void (*)(uint64_t))sub_1001E7D94);
}

void sub_1001E7D94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD v36[5];
  uint64_t v37;
  _QWORD *v38;
  char v39;
  char v40;
  __int16 v41;

  sub_100099310();
  v13 = v10;
  v15 = v14;
  v36[4] = sub_1000D0014();
  sub_1000B42B0();
  __chkstk_darwin(v16);
  v36[2] = (char *)v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009D2A4();
  __chkstk_darwin(v18);
  v36[3] = (char *)v36 - v19;
  sub_10009D2A4();
  __chkstk_darwin(v20);
  sub_10011E770();
  __chkstk_darwin(v21);
  sub_10011DB14();
  v22 = sub_1000BA294(&qword_100BCA2C8);
  v23 = sub_1000DAC14(v22);
  __chkstk_darwin(v23);
  sub_1000CDECC(v15, v15[3]);
  v24 = sub_1001F608C();
  sub_1000ECF20((uint64_t)&type metadata for LocationSevereNhpConfiguration._Storage.CodingKeys, v25, v24);
  sub_1001FAFA4();
  if (v11)
  {
    sub_10009EE5C(v26, v27);
    v35 = v15;
  }
  else
  {
    sub_1000EF954();
    v28 = v37;
    sub_1000C6570((uint64_t)&unk_100B616F0, (uint64_t)&v41 + 1, v37, (uint64_t)&unk_100B616F0);
    *(_QWORD *)(v10 + 16) = a10;
    sub_1000FD8EC();
    sub_1000C0CC8((unint64_t *)&qword_100BCA2C0, v29, type metadata accessor for LocationViewComponent, (uint64_t)&unk_1009B2000);
    v30 = sub_1000C6570(v12, (uint64_t)&v41, v28, v12);
    sub_100110444(v30, v10 + OBJC_IVAR____TtCV7Weather30LocationSevereNhpConfiguration8_Storage_map, type metadata accessor for LocationViewComponent);
    v31 = sub_1000BD2B4();
    sub_10009C924(v31, v10 + OBJC_IVAR____TtCV7Weather30LocationSevereNhpConfiguration8_Storage_severeAlert, type metadata accessor for LocationViewComponent);
    v40 = 3;
    v32 = sub_1000C6570(0, (uint64_t)&v40, v28, 0);
    sub_10009C924(v32, v10 + OBJC_IVAR____TtCV7Weather30LocationSevereNhpConfiguration8_Storage_nextHourPrecipitation, type metadata accessor for LocationViewComponent);
    v39 = 4;
    v33 = v38;
    sub_1000C6570(0, (uint64_t)&v39, v28, 0);
    sub_1001FB514();
    v34 = sub_1000C6578();
    sub_1000ED420(v34, v13 + OBJC_IVAR____TtCV7Weather30LocationSevereNhpConfiguration8_Storage_airQuality, type metadata accessor for LocationViewComponent);
    v35 = v33;
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v35);
  sub_10011E690();
  sub_1000B44B0();
}

uint64_t sub_1001E80A8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1001E7D78(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1001E80D0()
{
  char v0;

  sub_1001E7864();
  return v0 & 1;
}

void sub_1001E8110()
{
  uint64_t v0;

  v0 = sub_1000BD2A4();
  type metadata accessor for LocationSevereNhpConfiguration._Storage(v0);
  sub_1001FAFF4();
  sub_10004A298();
}

void sub_1001E8154()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1000BE9DC();
  sub_1000C00FC();
  sub_1000BA294(&qword_100BCAA98);
  sub_1000BA514();
  __chkstk_darwin(v1);
  sub_1000CD594();
  v2 = sub_1001F956C();
  sub_1000C2488((uint64_t)&type metadata for LocationSevereNhpConfiguration.CodingKeys, v3, v2);
  if (!v0)
  {
    type metadata accessor for LocationSevereNhpConfiguration._Storage(0);
    sub_1000C0CC8(&qword_100BCAAA8, v4, type metadata accessor for LocationSevereNhpConfiguration._Storage, (uint64_t)&unk_100982CAC);
    sub_1000BBCBC(v5, v6);
    sub_1000C35BC();
  }
  sub_1000998EC();
  sub_1000BF0D8();
  sub_100089054();
}

uint64_t sub_1001E8210(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F956C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001E8238(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F956C();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001E8260(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1001E8154();
  if (!v1)
    *a1 = v3;
}

void sub_1001E8288()
{
  sub_1001E8110();
}

void sub_1001E8294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;

  sub_1001FBC48(a1);
  sub_1001FB2A4(v11, v6 + OBJC_IVAR____TtCV7Weather34LocationSevereNhpNewsConfiguration8_Storage_map);
  sub_1001FB2A4(v8, v6 + OBJC_IVAR____TtCV7Weather34LocationSevereNhpNewsConfiguration8_Storage_severeAlert);
  sub_1001FB2A4(v7, v6 + OBJC_IVAR____TtCV7Weather34LocationSevereNhpNewsConfiguration8_Storage_nextHourPrecipitation);
  sub_1001FB2A4(a5, v6 + OBJC_IVAR____TtCV7Weather34LocationSevereNhpNewsConfiguration8_Storage_newsArticle);
  sub_1001FB2A4(a6, v6 + OBJC_IVAR____TtCV7Weather34LocationSevereNhpNewsConfiguration8_Storage_airQuality);
  sub_10004A2A0();
}

void sub_1001E832C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char v27;
  char v28;

  sub_10008900C();
  a17 = v21;
  a18 = v22;
  sub_1001FB4F4();
  sub_1000B42B0();
  __chkstk_darwin(v23);
  sub_10009BE6C();
  __chkstk_darwin(v24);
  v26 = (char *)&a9 - v25;
  sub_1001FB9BC();
  sub_1000C12B0();
  sub_1001FBC18();
  v28 = v27;
  sub_1000C1354();
  sub_1000C5AE8();
  if ((v28 & 1) != 0)
  {
    sub_1000D0564(v20 + OBJC_IVAR____TtCV7Weather34LocationSevereNhpNewsConfiguration8_Storage_map, (uint64_t)v26);
    sub_1000D1C5C(OBJC_IVAR____TtCV7Weather34LocationSevereNhpNewsConfiguration8_Storage_map);
    sub_1000F409C();
    sub_1000D110C();
    sub_10009D37C((uint64_t)v26);
    if ((&OBJC_IVAR____TtCV7Weather36LocationElevatedAqiNewsConfiguration8_Storage_airQuality & 1) != 0)
    {
      sub_1000CFB94(OBJC_IVAR____TtCV7Weather34LocationSevereNhpNewsConfiguration8_Storage_severeAlert);
      sub_1000D1C5C(OBJC_IVAR____TtCV7Weather34LocationSevereNhpNewsConfiguration8_Storage_severeAlert);
      sub_1000F409C();
      sub_1000D110C();
      sub_10009D37C((uint64_t)v26);
      sub_1000CFB94(OBJC_IVAR____TtCV7Weather34LocationSevereNhpNewsConfiguration8_Storage_nextHourPrecipitation);
      sub_1000D1C5C(OBJC_IVAR____TtCV7Weather34LocationSevereNhpNewsConfiguration8_Storage_nextHourPrecipitation);
      sub_1000F409C();
      sub_1000D110C();
      sub_10009D37C((uint64_t)v26);
      sub_1000CFB94(OBJC_IVAR____TtCV7Weather34LocationSevereNhpNewsConfiguration8_Storage_newsArticle);
      sub_1000D1C5C(OBJC_IVAR____TtCV7Weather34LocationSevereNhpNewsConfiguration8_Storage_newsArticle);
      sub_1000F409C();
      sub_1000D110C();
      sub_10009D37C((uint64_t)v26);
      sub_1001FB17C(v20 + OBJC_IVAR____TtCV7Weather34LocationSevereNhpNewsConfiguration8_Storage_airQuality);
      sub_1000B326C(v18 + OBJC_IVAR____TtCV7Weather34LocationSevereNhpNewsConfiguration8_Storage_airQuality, v19);
      sub_1000F409C();
      sub_1000BD95C(v19);
      sub_1000BD95C((uint64_t)v26);
    }
  }
  sub_10009D300();
}

uint64_t sub_1001E8494(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v8;
  unint64_t v10;
  unint64_t v11;
  unint64_t v13;
  char v15;

  if (a1 == 0x6E6F6D6D6F63 && a2 == 0xE600000000000000)
  {
    v5 = 0xE600000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F6D6D6F63, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 7364973 && a2 == 0xE300000000000000)
  {
    v8 = 0xE300000000000000;
    goto LABEL_16;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(7364973, 0xE300000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
LABEL_16:
    swift_bridgeObjectRelease(v8);
    return 1;
  }
  if (a1 == 0x6C41657265766573 && a2 == 0xEB00000000747265)
  {
    v10 = 0xEB00000000747265;
    goto LABEL_24;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6C41657265766573, 0xEB00000000747265, a1, a2, 0) & 1) != 0)
  {
    v10 = a2;
LABEL_24:
    swift_bridgeObjectRelease(v10);
    return 2;
  }
  if (a1 == 0xD000000000000015)
  {
    v11 = 0x80000001009F0580;
    if (a2 == 0x80000001009F0580)
      goto LABEL_29;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000015, 0x80000001009F0580, a1, a2, 0) & 1) != 0)
  {
    v11 = a2;
LABEL_29:
    swift_bridgeObjectRelease(v11);
    return 3;
  }
  if (a1 == 0x697472417377656ELL && a2 == 0xEB00000000656C63)
  {
    v13 = 0xEB00000000656C63;
    goto LABEL_37;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x697472417377656ELL, 0xEB00000000656C63, a1, a2, 0) & 1) != 0)
  {
    v13 = a2;
LABEL_37:
    swift_bridgeObjectRelease(v13);
    return 4;
  }
  if (a1 == 0x696C617551726961 && a2 == 0xEA00000000007974)
  {
    swift_bridgeObjectRelease(0xEA00000000007974);
    return 5;
  }
  else
  {
    v15 = _stringCompareWithSmolCheck(_:_:expecting:)(0x696C617551726961, 0xEA00000000007974, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v15 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_1001E8720(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1001E8750 + 4 * byte_100981898[a1]))(0x6E6F6D6D6F63, 0xE600000000000000);
}

uint64_t sub_1001E8750()
{
  return 7364973;
}

uint64_t sub_1001E8760()
{
  return 0x6C41657265766573;
}

unint64_t sub_1001E8780()
{
  return 0xD000000000000015;
}

uint64_t sub_1001E879C()
{
  return 0x697472417377656ELL;
}

uint64_t sub_1001E87BC()
{
  return 0x696C617551726961;
}

uint64_t sub_1001E87D8()
{
  unsigned __int8 *v0;

  return sub_1001E8720(*v0);
}

uint64_t sub_1001E87E0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1001E8494(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1001E8804(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F6014();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001E882C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F6014();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001E8854()
{
  uint64_t v0;

  sub_10009C0B4();
  sub_100079F9C(v0 + OBJC_IVAR____TtCV7Weather34LocationSevereNhpNewsConfiguration8_Storage_map);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather34LocationSevereNhpNewsConfiguration8_Storage_severeAlert);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather34LocationSevereNhpNewsConfiguration8_Storage_nextHourPrecipitation);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather34LocationSevereNhpNewsConfiguration8_Storage_newsArticle);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather34LocationSevereNhpNewsConfiguration8_Storage_airQuality);
  sub_10004A298();
}

uint64_t sub_1001E88B8()
{
  return sub_100082C68(sub_1001E8854);
}

uint64_t sub_1001E88C4()
{
  return type metadata accessor for LocationSevereNhpNewsConfiguration._Storage(0);
}

uint64_t type metadata accessor for LocationSevereNhpNewsConfiguration._Storage(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC8A68, (uint64_t)&nominal type descriptor for LocationSevereNhpNewsConfiguration._Storage);
}

uint64_t sub_1001E88E0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = (char *)&value witness table for Builtin.NativeObject + 64;
  result = type metadata accessor for LocationViewComponent(319);
  if (v3 <= 0x3F)
  {
    v5 = *(_QWORD *)(result - 8) + 64;
    v6 = v5;
    v7 = v5;
    v8 = v5;
    v9 = v5;
    result = swift_updateClassMetadata2(a1, 256, 6, &v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1001E8964(uint64_t a1)
{
  return sub_1001DDA20(a1, (void (*)(uint64_t))sub_1001E8980);
}

void sub_1001E8980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD v39[5];
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  char v45;
  char v46;
  char v47;
  char v48;
  __int16 v49;

  sub_100099310();
  v14 = v13;
  v41 = sub_1000D0014();
  sub_1000B42B0();
  __chkstk_darwin(v15);
  v39[3] = (char *)v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009D2A4();
  __chkstk_darwin(v17);
  sub_1000860D0();
  v39[4] = v18;
  sub_10009D2A4();
  __chkstk_darwin(v19);
  v40 = (char *)v39 - v20;
  sub_10009D2A4();
  __chkstk_darwin(v21);
  sub_1000B3B34();
  __chkstk_darwin(v22);
  sub_1000D0024();
  v42 = sub_1000BA294(&qword_100BCA2A8);
  sub_1000BD980();
  __chkstk_darwin(v23);
  sub_100094EC4();
  v24 = v14[3];
  v25 = v14[4];
  sub_1000BE73C(v14);
  v26 = sub_1001F6014();
  v43 = v12;
  v27 = v44;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for LocationSevereNhpNewsConfiguration._Storage.CodingKeys, &type metadata for LocationSevereNhpNewsConfiguration._Storage.CodingKeys, v26, v24, v25);
  sub_1001FAFA4();
  if (v27)
  {
    swift_deallocPartialClassInstance(v10, v28, *(unsigned int *)(*v10 + 48), *(unsigned __int16 *)(*v10 + 52));
    v38 = v14;
  }
  else
  {
    v39[2] = v11;
    v29 = v41;
    v44 = v14;
    sub_1000FD9F8();
    v30 = v42;
    sub_1000C6570((uint64_t)&unk_100B616F0, (uint64_t)&v49 + 1, v42, (uint64_t)&unk_100B616F0);
    v10[2] = a10;
    sub_1000FD8EC();
    sub_1000C0CC8((unint64_t *)&qword_100BCA2C0, v31, type metadata accessor for LocationViewComponent, (uint64_t)&unk_1009B2000);
    v39[1] = v32;
    v33 = sub_1000C6570(v29, (uint64_t)&v49, v30, v29);
    sub_1001FB9FC(v33, (uint64_t)v10 + OBJC_IVAR____TtCV7Weather34LocationSevereNhpNewsConfiguration8_Storage_map, type metadata accessor for LocationViewComponent);
    v48 = 2;
    v39[0] = 0;
    v34 = sub_1000C6570(v29, (uint64_t)&v48, v30, v29);
    sub_10009C924(v34, (uint64_t)v10 + OBJC_IVAR____TtCV7Weather34LocationSevereNhpNewsConfiguration8_Storage_severeAlert, type metadata accessor for LocationViewComponent);
    v47 = 3;
    v35 = (uint64_t)v40;
    sub_1000C6570(v29, (uint64_t)&v47, v30, v29);
    sub_10007802C(v35, (uint64_t)v10 + OBJC_IVAR____TtCV7Weather34LocationSevereNhpNewsConfiguration8_Storage_nextHourPrecipitation, type metadata accessor for LocationViewComponent);
    v46 = 4;
    v36 = sub_1000C6570(v29, (uint64_t)&v46, v30, v29);
    sub_10009C924(v36, (uint64_t)v10 + OBJC_IVAR____TtCV7Weather34LocationSevereNhpNewsConfiguration8_Storage_newsArticle, type metadata accessor for LocationViewComponent);
    v45 = 5;
    sub_1000C6570(v29, (uint64_t)&v45, v30, v29);
    v37 = sub_1001FB928();
    sub_1000ED420(v37, (uint64_t)v10 + OBJC_IVAR____TtCV7Weather34LocationSevereNhpNewsConfiguration8_Storage_airQuality, type metadata accessor for LocationViewComponent);
    v38 = v44;
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v38);
  sub_10011E690();
  sub_1000B44B0();
}

uint64_t sub_1001E8DD0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1001E8964(a1);
  if (!v2)
    *a2 = result;
  return result;
}

#error "1001E8E08: call analysis failed (funcsize=8)"

#error "1001E8E30: call analysis failed (funcsize=10)"

void sub_1001E8E40()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1000BE9DC();
  sub_1000C00FC();
  sub_1000BA294(&qword_100BCAAB0);
  sub_1000BA514();
  __chkstk_darwin(v1);
  sub_1000CD594();
  v2 = sub_1001F95A8();
  sub_1000C2488((uint64_t)&type metadata for LocationSevereNhpNewsConfiguration.CodingKeys, v3, v2);
  if (!v0)
  {
    type metadata accessor for LocationSevereNhpNewsConfiguration._Storage(0);
    sub_1000C0CC8(&qword_100BCAAC0, v4, type metadata accessor for LocationSevereNhpNewsConfiguration._Storage, (uint64_t)&unk_100982C5C);
    sub_1000BBCBC(v5, v6);
    sub_1000C35BC();
  }
  sub_1000998EC();
  sub_1000BF0D8();
  sub_100089054();
}

uint64_t sub_1001E8EFC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F95A8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001E8F24(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F95A8();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001E8F4C(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1001E8E40();
  if (!v1)
    *a1 = v3;
}

uint64_t sub_1001E8F74(_QWORD *a1, _QWORD *a2)
{
  return sub_1001E8E18(*a1, *a2);
}

uint64_t sub_1001E8F80(uint64_t a1, unint64_t a2)
{
  unint64_t v4;
  unint64_t v6;
  unint64_t v7;
  unint64_t v9;
  unint64_t v10;
  char v11;

  if (a1 == 0xD000000000000013)
  {
    v4 = 0x80000001009F3010;
    if (a2 == 0x80000001009F3010)
      goto LABEL_5;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000013, 0x80000001009F3010, a1, a2, 0) & 1) != 0)
  {
    v4 = a2;
LABEL_5:
    swift_bridgeObjectRelease(v4);
    return 0;
  }
  if (a1 == 0xD00000000000001CLL && a2 == 0x80000001009F2850)
  {
    v6 = 0x80000001009F2850;
LABEL_11:
    swift_bridgeObjectRelease(v6);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001CLL, 0x80000001009F2850, a1, a2, 0) & 1) != 0)
  {
    v6 = a2;
    goto LABEL_11;
  }
  if (a1 == 0xD000000000000015 && a2 == 0x80000001009F3030)
  {
    v7 = 0x80000001009F3030;
LABEL_17:
    swift_bridgeObjectRelease(v7);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000015, 0x80000001009F3030, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_17;
  }
  if (a1 == 0x72656767697274 && a2 == 0xE700000000000000)
  {
    v9 = 0xE700000000000000;
    goto LABEL_25;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x72656767697274, 0xE700000000000000, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
LABEL_25:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if (a1 == 0xD00000000000001ALL && a2 == 0x80000001009F3050)
  {
    v10 = 0x80000001009F3050;
LABEL_31:
    swift_bridgeObjectRelease(v10);
    return 4;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001ALL, 0x80000001009F3050, a1, a2, 0) & 1) != 0)
  {
    v10 = a2;
    goto LABEL_31;
  }
  if (a1 == 0xD000000000000021 && a2 == 0x80000001009F3070)
  {
    swift_bridgeObjectRelease(0x80000001009F3070);
    return 5;
  }
  else
  {
    v11 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000021, 0x80000001009F3070, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v11 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_1001E91D0()
{
  return 6;
}

uint64_t sub_1001E91D8(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1001E9210 + 4 * byte_10098189E[a1]))(0xD000000000000013, 0x80000001009F3010);
}

uint64_t sub_1001E9210(uint64_t a1)
{
  return a1 + 9;
}

uint64_t sub_1001E9270()
{
  unsigned __int8 *v0;

  return sub_1001E91D8(*v0);
}

uint64_t sub_1001E9278@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1001E8F80(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1001E929C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1001E91D0();
  *a1 = result;
  return result;
}

uint64_t sub_1001E92C0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F55C4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001E92E8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F55C4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001E9310()
{
  return type metadata accessor for LocationViewerViewState._Storage(0);
}

void sub_1001E9318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char a11, char a12, char a13, char a14, char a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t active;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  char v56;
  char v57;

  sub_100099310();
  a26 = v30;
  a27 = v31;
  v32 = v27;
  v34 = v33;
  active = type metadata accessor for LocationViewerActiveLocationState(0);
  sub_1000B42B0();
  __chkstk_darwin(v36);
  sub_10009E540();
  v37 = sub_1000BA294(&qword_100BC9F88);
  sub_100099300();
  __chkstk_darwin(v38);
  sub_100079FBC();
  v40 = *(_QWORD *)(v34 + 24);
  v39 = *(_QWORD *)(v34 + 32);
  v41 = (_QWORD *)sub_1001FB8B0();
  sub_1000DB418(v41, v42);
  v43 = sub_1001F55C4();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for LocationViewerViewState._Storage.CodingKeys, &type metadata for LocationViewerViewState._Storage.CodingKeys, v43, v40, v39);
  sub_100086100(v32 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_activeLocationState, v29);
  a17 = 0;
  sub_10009C8A4(&qword_100BC9F98, v44, v45, (uint64_t)&unk_1009CFD80);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v29, &a17, v37, active, v46);
  if (v28)
  {
    sub_1000215BC(v29, type metadata accessor for LocationViewerActiveLocationState);
  }
  else
  {
    sub_1000215BC(v29, type metadata accessor for LocationViewerActiveLocationState);
    a16 = *(_BYTE *)(v32 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_notificationsOptInAlertState);
    a15 = 1;
    v47 = sub_1001F5510();
    sub_1001FB1EC((uint64_t)&a16, (uint64_t)&a15, v48, (uint64_t)&unk_100B773D8, v47);
    a14 = *(_BYTE *)(v32 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_addLocationAlertState);
    a13 = 2;
    v49 = sub_1001F5600();
    sub_1001FB1EC((uint64_t)&a14, (uint64_t)&a13, v50, (uint64_t)&type metadata for AddLocationAlertState, v49);
    a12 = *(_BYTE *)(v32 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_trigger);
    a11 = 3;
    v51 = sub_1001F563C();
    sub_1001FB1EC((uint64_t)&a12, (uint64_t)&a11, v52, (uint64_t)&type metadata for LocationSessionTrigger, v51);
    v53 = *(unsigned __int8 *)(v32
                             + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_reportWeatherDisplayToggle);
    a10 = 4;
    KeyedEncodingContainer.encode(_:forKey:)(v53, &a10, v37);
    v57 = *(_BYTE *)(v32 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_listToLocationViewTransitionState);
    v56 = 5;
    v54 = sub_1001F5678();
    sub_1001FB1EC((uint64_t)&v57, (uint64_t)&v56, v55, (uint64_t)&type metadata for TransitionState, v54);
  }
  sub_10009894C();
  sub_10011E690();
  sub_1000B44B0();
}

uint64_t sub_1001E9558(uint64_t a1)
{
  return sub_1001DDA20(a1, (void (*)(uint64_t))sub_1001E9574);
}

void sub_1001E9574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char a11, char a12, char a13, char a14, char a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t active;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE v46[2];

  sub_100099310();
  a26 = v29;
  a27 = v30;
  v32 = v31;
  v33 = *v27;
  active = type metadata accessor for LocationViewerActiveLocationState(0);
  sub_1000B42B0();
  __chkstk_darwin(v35);
  sub_100088FDC();
  v45 = v36;
  v44 = sub_1000BA294(&qword_100BCA278);
  v37 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin(v44);
  sub_10007A130();
  v38 = v32[3];
  v39 = v32[4];
  v40 = (_QWORD *)sub_1001FB7E8();
  sub_1000DB418(v40, v41);
  v42 = sub_1001F55C4();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for LocationViewerViewState._Storage.CodingKeys, &type metadata for LocationViewerViewState._Storage.CodingKeys, v42, v38, v39);
  if (v28)
  {
    swift_deallocPartialClassInstance(v27, v33, *(unsigned int *)(*v27 + 48), *(unsigned __int16 *)(*v27 + 52));
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v32);
  }
  else
  {
    a17 = 0;
    sub_1000C0CC8(&qword_100BCA280, v43, type metadata accessor for LocationViewerActiveLocationState, (uint64_t)&unk_1009CFDA8);
    KeyedDecodingContainer.decode<A>(_:forKey:)(active, &a17, v44, active);
    sub_10007802C(v45, (uint64_t)v27 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_activeLocationState, type metadata accessor for LocationViewerActiveLocationState);
    a15 = 1;
    sub_1001F5F24();
    sub_1001FB000((uint64_t)&unk_100B773D8, (uint64_t)&a15);
    *((_BYTE *)v27 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_notificationsOptInAlertState) = a16;
    a13 = 2;
    sub_1001F5F60();
    sub_1001FB000((uint64_t)&type metadata for AddLocationAlertState, (uint64_t)&a13);
    *((_BYTE *)v27 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_addLocationAlertState) = a14;
    a11 = 3;
    sub_1001F5F9C();
    sub_1001FB000((uint64_t)&type metadata for LocationSessionTrigger, (uint64_t)&a11);
    *((_BYTE *)v27 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_trigger) = a12;
    a10 = 4;
    *((_BYTE *)v27 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_reportWeatherDisplayToggle) = KeyedDecodingContainer.decode(_:forKey:)(&a10, v44) & 1;
    v46[0] = 5;
    sub_1001F5FD8();
    sub_1001FB000((uint64_t)&type metadata for TransitionState, (uint64_t)v46);
    sub_1001FB244(*(uint64_t (**)(uint64_t, uint64_t))(v37 + 8));
    *((_BYTE *)v27 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_listToLocationViewTransitionState) = v46[1];
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v32);
  }
  sub_1000B44B0();
}

uint64_t sub_1001E9834()
{
  char v0;

  sub_100109190();
  return v0 & 1;
}

uint64_t sub_1001E9854@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1001E9558(a1);
  if (!v2)
    *a2 = result;
  return result;
}

#error "1001E988C: call analysis failed (funcsize=8)"

void sub_1001E989C(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_100690048();
  if (!v1)
    *a1 = v3;
}

uint64_t sub_1001E98C4()
{
  return sub_10069016C();
}

void sub_1001E98E4()
{
  uint64_t v0;

  v0 = sub_1000BD2A4();
  type metadata accessor for LocationViewerViewState._Storage(v0);
  sub_1000C1A00();
  sub_100109190();
  sub_10004A298();
}

void sub_1001E990C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1000BE9DC();
  sub_1001FB810();
  sub_1000BA294(&qword_100BCA810);
  sub_1000BA514();
  __chkstk_darwin(v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000B44C8();
  v5 = sub_1001F8F54();
  sub_1000B44E8((uint64_t)&type metadata for LocationViewerViewState.CodingKeys, v6, v5);
  v11 = v0;
  type metadata accessor for LocationViewerViewState._Storage(0);
  sub_1000C0CC8(&qword_100BCA818, v7, type metadata accessor for LocationViewerViewState._Storage, (uint64_t)&unk_100982BBC);
  sub_10011DF48(v8, v9);
  sub_100098748((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_10009ECD4();
  sub_100089054();
}

void sub_1001E99C0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1000BE9DC();
  sub_1000C00FC();
  sub_1000BA294(&qword_100BCA7F8);
  sub_1000BA514();
  __chkstk_darwin(v1);
  sub_1000CD594();
  v2 = sub_1001F8F54();
  sub_1000C2488((uint64_t)&type metadata for LocationViewerViewState.CodingKeys, v3, v2);
  if (!v0)
  {
    type metadata accessor for LocationViewerViewState._Storage(0);
    sub_1000C0CC8(&qword_100BCA808, v4, type metadata accessor for LocationViewerViewState._Storage, (uint64_t)&unk_100982BE4);
    sub_1000BBCBC(v5, v6);
    sub_1000C35BC();
  }
  sub_1000998EC();
  sub_1000BF0D8();
  sub_100089054();
}

uint64_t sub_1001E9A7C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F8F54();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001E9AA4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F8F54();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001E9ACC()
{
  sub_1001E98E4();
}

void sub_1001E9AD8(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1001E99C0();
  if (!v1)
    *a1 = v3;
}

void sub_1001E9B00()
{
  sub_1001E990C();
}

void sub_1001E9B18(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1006902A4();
  if (!v1)
    *a1 = v3;
}

void sub_1001E9B40()
{
  sub_1006902CC();
}

void sub_1001E9B58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(_QWORD);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[3];

  sub_1000986AC();
  v39 = *(_QWORD *)v0;
  type metadata accessor for ModalViewState(0);
  sub_1000B42B0();
  __chkstk_darwin(v7);
  sub_100094EC4();
  type metadata accessor for ViewState(0);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_10009E540();
  type metadata accessor for TimeState(0);
  sub_1000B42B0();
  __chkstk_darwin(v9);
  sub_100098694();
  v29 = v1;
  type metadata accessor for NotificationsOptInState(0);
  sub_1000B42B0();
  __chkstk_darwin(v10);
  sub_100099234();
  v30 = v5;
  type metadata accessor for LocationsState(0);
  sub_1000B42B0();
  __chkstk_darwin(v11);
  sub_10004A2E8();
  v34 = v4;
  type metadata accessor for EnvironmentState(0);
  sub_1000B42B0();
  __chkstk_darwin(v12);
  sub_10007A130();
  v35 = v6;
  type metadata accessor for AppConfigurationState(0);
  sub_1000B42B0();
  __chkstk_darwin(v13);
  v36 = (uint64_t)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = *(_QWORD *)(v0 + 16);
  v37 = *(unsigned __int8 *)(v0 + 24);
  sub_100080C0C(v0 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_appConfiguration, v36, v15);
  v16 = v0 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
  sub_1000992EC(v0 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment, (uint64_t)v40);
  sub_100099904(v16, v6);
  sub_1000BCF30(v0 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, v4);
  v17 = *(_QWORD *)(v0 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications + 16);
  v32 = *(_QWORD *)(v0 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications + 8);
  v33 = v17;
  v31 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications);
  sub_100080C0C(v0 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn, v5, type metadata accessor for NotificationsOptInState);
  sub_100080C0C(v0 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_time, v1, type metadata accessor for TimeState);
  v18 = v3;
  sub_100080C0C(v0 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, v3, type metadata accessor for ViewState);
  sub_100080C0C(v0 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView, v2, type metadata accessor for ModalViewState);
  v20 = *(_QWORD *)(v0 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData);
  v19 = *(_QWORD *)(v0 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 8);
  v22 = *(_QWORD *)(v0 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
  v21 = *(_QWORD *)(v0 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 24);
  v23 = *(_BYTE *)(v0 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_debugState);
  v24 = *(_QWORD *)(v0 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_debugState + 8);
  v25 = *(_QWORD *)(v0 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_contentStatusBanners);
  sub_1000860C4(v39);
  *(_QWORD *)&v28 = v20;
  *((_QWORD *)&v28 + 1) = v19;
  v27 = v18;
  v26 = v33;
  sub_1000DB488(v38, v37, v36, v35, v34, v31, v32, v33, v30, v29, v27, v2, v28, v22, v21, v23, v24, v25);
  sub_10009EF94();
  sub_100094EDC();
  swift_bridgeObjectRetain(v26);
  sub_10009E3E0();
  sub_10003BCC8();
  swift_bridgeObjectRetain(v21);
  sub_1000878DC();
  sub_100095508();
  sub_1001FB8A4();
  sub_100098640();
}

uint64_t sub_1001E9E2C(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v8;
  unint64_t v9;
  unint64_t v11;
  unint64_t v13;
  unint64_t v15;
  unint64_t v16;
  unint64_t v18;
  unint64_t v20;
  unint64_t v22;
  unint64_t v24;
  unint64_t v26;
  char v27;

  if (a1 == 0x6974616D6F747561 && a2 == 0xEA00000000006E6FLL)
  {
    v5 = 0xEA00000000006E6FLL;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6974616D6F747561, 0xEA00000000006E6FLL, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x636566694C707061 && a2 == 0xEC000000656C6379)
  {
    v8 = 0xEC000000656C6379;
    goto LABEL_16;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x636566694C707061, 0xEC000000656C6379, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
LABEL_16:
    swift_bridgeObjectRelease(v8);
    return 1;
  }
  if (a1 == 0xD000000000000010)
  {
    v9 = 0x80000001009F30E0;
    if (a2 == 0x80000001009F30E0)
      goto LABEL_21;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x80000001009F30E0, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
LABEL_21:
    swift_bridgeObjectRelease(v9);
    return 2;
  }
  if (a1 == 0x6D6E6F7269766E65 && a2 == 0xEB00000000746E65)
  {
    v11 = 0xEB00000000746E65;
    goto LABEL_29;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6D6E6F7269766E65, 0xEB00000000746E65, a1, a2, 0) & 1) != 0)
  {
    v11 = a2;
LABEL_29:
    swift_bridgeObjectRelease(v11);
    return 3;
  }
  if (a1 == 0x6E6F697461636F6CLL && a2 == 0xE900000000000073)
  {
    v13 = 0xE900000000000073;
    goto LABEL_37;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F697461636F6CLL, 0xE900000000000073, a1, a2, 0) & 1) != 0)
  {
    v13 = a2;
LABEL_37:
    swift_bridgeObjectRelease(v13);
    return 4;
  }
  if (a1 == 0x6163696669746F6ELL && a2 == 0xED0000736E6F6974)
  {
    v15 = 0xED0000736E6F6974;
    goto LABEL_45;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6163696669746F6ELL, 0xED0000736E6F6974, a1, a2, 0) & 1) != 0)
  {
    v15 = a2;
LABEL_45:
    swift_bridgeObjectRelease(v15);
    return 5;
  }
  if (a1 == 0xD000000000000012 && a2 == 0x80000001009F05A0)
  {
    v16 = 0x80000001009F05A0;
LABEL_51:
    swift_bridgeObjectRelease(v16);
    return 6;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000012, 0x80000001009F05A0, a1, a2, 0) & 1) != 0)
  {
    v16 = a2;
    goto LABEL_51;
  }
  if (a1 == 1701669236 && a2 == 0xE400000000000000)
  {
    v18 = 0xE400000000000000;
    goto LABEL_59;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(1701669236, 0xE400000000000000, a1, a2, 0) & 1) != 0)
  {
    v18 = a2;
LABEL_59:
    swift_bridgeObjectRelease(v18);
    return 7;
  }
  if (a1 == 2003134838 && a2 == 0xE400000000000000)
  {
    v20 = 0xE400000000000000;
    goto LABEL_67;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(2003134838, 0xE400000000000000, a1, a2, 0) & 1) != 0)
  {
    v20 = a2;
LABEL_67:
    swift_bridgeObjectRelease(v20);
    return 8;
  }
  if (a1 == 0x6569566C61646F6DLL && a2 == 0xE900000000000077)
  {
    v22 = 0xE900000000000077;
    goto LABEL_75;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6569566C61646F6DLL, 0xE900000000000077, a1, a2, 0) & 1) != 0)
  {
    v22 = a2;
LABEL_75:
    swift_bridgeObjectRelease(v22);
    return 9;
  }
  if (a1 == 0x4472656874616577 && a2 == 0xEB00000000617461)
  {
    v24 = 0xEB00000000617461;
    goto LABEL_83;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x4472656874616577, 0xEB00000000617461, a1, a2, 0) & 1) != 0)
  {
    v24 = a2;
LABEL_83:
    swift_bridgeObjectRelease(v24);
    return 10;
  }
  if (a1 == 0x6174536775626564 && a2 == 0xEA00000000006574)
  {
    v26 = 0xEA00000000006574;
    goto LABEL_91;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6174536775626564, 0xEA00000000006574, a1, a2, 0) & 1) != 0)
  {
    v26 = a2;
LABEL_91:
    swift_bridgeObjectRelease(v26);
    return 11;
  }
  if (a1 == 0xD000000000000014 && a2 == 0x80000001009F3130)
  {
    swift_bridgeObjectRelease(0x80000001009F3130);
    return 12;
  }
  else
  {
    v27 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000014, 0x80000001009F3130, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v27 & 1) != 0)
      return 12;
    else
      return 13;
  }
}

uint64_t sub_1001EA390(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1001EA3CC + 4 * byte_1009818A4[a1]))(0x6974616D6F747561, 0xEA00000000006E6FLL);
}

uint64_t sub_1001EA3CC()
{
  return 0x636566694C707061;
}

unint64_t sub_1001EA3EC()
{
  return 0xD000000000000010;
}

uint64_t sub_1001EA408()
{
  return 0x6D6E6F7269766E65;
}

uint64_t sub_1001EA428()
{
  return 0x6E6F697461636F6CLL;
}

uint64_t sub_1001EA444()
{
  return 0x6163696669746F6ELL;
}

unint64_t sub_1001EA468()
{
  return 0xD000000000000012;
}

uint64_t sub_1001EA51C()
{
  unsigned __int8 *v0;

  return sub_1001EA390(*v0);
}

uint64_t sub_1001EA524@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1001E9E2C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1001EA548(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F56B4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001EA570(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F56B4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001EA598()
{
  return type metadata accessor for MainState._Storage(0);
}

void sub_1001EA5A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  __int128 v126;
  uint64_t v127;
  _BYTE v128[32];

  sub_100099310();
  a22 = v29;
  a23 = v30;
  v124 = v23;
  v32 = v31;
  v114 = type metadata accessor for ModalViewState(0);
  sub_1000B42B0();
  __chkstk_darwin(v33);
  sub_100088FDC();
  v113 = v34;
  v115 = sub_1001FBC68();
  sub_1000B42B0();
  __chkstk_darwin(v35);
  sub_100088FDC();
  v116 = v36;
  v117 = sub_1001FBC74();
  sub_1000B42B0();
  __chkstk_darwin(v37);
  sub_10009BE88(v38, v111);
  v119 = type metadata accessor for NotificationsOptInState(0);
  sub_1000B42B0();
  __chkstk_darwin(v39);
  sub_100088FDC();
  v120 = v40;
  v121 = sub_1001FBC5C();
  sub_1000B42B0();
  __chkstk_darwin(v41);
  sub_1000BD964(v42, v112);
  v123 = type metadata accessor for EnvironmentState(0);
  sub_1000B42B0();
  __chkstk_darwin(v43);
  sub_10007A130();
  v44 = type metadata accessor for AppConfigurationState(0);
  sub_1000B42B0();
  __chkstk_darwin(v45);
  sub_100079FBC();
  v46 = sub_1000BA294(&qword_100BC9FB8);
  sub_1000AE898();
  __chkstk_darwin(v47);
  sub_100094EC4();
  v48 = *(_QWORD *)(v32 + 24);
  v49 = *(_QWORD *)(v32 + 32);
  v50 = (_QWORD *)sub_1000C1A00();
  sub_1000DB418(v50, v51);
  v52 = sub_1001F56B4();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for MainState._Storage.CodingKeys, &type metadata for MainState._Storage.CodingKeys, v52, v48, v49);
  v125 = *(_QWORD *)(v124 + 16);
  v128[0] = 0;
  v53 = sub_1001F56F0();
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v125, v128, v46, &type metadata for AutomationState, v53);
  if (v24)
  {
    v70 = sub_100079FDC();
    v71(v70);
  }
  else
  {
    LOBYTE(v125) = *(_BYTE *)(v124 + 24);
    v128[0] = 1;
    v54 = sub_1001F572C();
    sub_1000FEC28((uint64_t)&v125, (uint64_t)v128, v46, (uint64_t)&type metadata for AppLifecycleState, v54);
    sub_100086100(v124 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_appConfiguration, v25);
    LOBYTE(v125) = 2;
    sub_10009C8A4(&qword_100BC9FD8, v55, v56, (uint64_t)&unk_1009C9020);
    v57 = sub_1001FBAF0();
    v61 = sub_1000FEC28(v57, v58, v59, v44, v60);
    sub_1000878B4(v61, type metadata accessor for AppConfigurationState);
    v62 = v124 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
    swift_beginAccess(v124 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment, v128, 0, 0);
    sub_100086100(v62, v28);
    LOBYTE(v125) = 3;
    sub_10009C8A4(&qword_100BC9FE0, v63, v64, (uint64_t)&unk_1009C6AE0);
    v65 = sub_1001FBAF0();
    v69 = sub_1000FEC28(v65, v66, v67, v123, v68);
    sub_1000878B4(v69, type metadata accessor for EnvironmentState);
    sub_100086100(v124 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, v122);
    LOBYTE(v125) = 4;
    sub_10009C8A4(&qword_100BC9FE8, v72, v73, (uint64_t)&unk_1009C0EC8);
    v74 = sub_1001FB230();
    v78 = sub_1000FEC28(v74, v75, v76, v121, v77);
    sub_1000998D4(v78, type metadata accessor for LocationsState);
    LOBYTE(v125) = *(_BYTE *)(v124 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications);
    v126 = *(_OWORD *)(v124 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications + 8);
    a13 = 5;
    v79 = sub_1001F5768();
    sub_1000FEC28((uint64_t)&v125, (uint64_t)&a13, v46, (uint64_t)&type metadata for NotificationsState, v79);
    sub_100086100(v124 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn, v120);
    LOBYTE(v125) = 6;
    sub_10009C8A4(&qword_100BC9FF8, v80, v81, (uint64_t)&unk_1009AB070);
    v82 = sub_1001FB230();
    v86 = sub_1000FEC28(v82, v83, v84, v119, v85);
    sub_1000998D4(v86, type metadata accessor for NotificationsOptInState);
    sub_100086100(v124 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_time, v118);
    LOBYTE(v125) = 7;
    sub_10009C8A4(&qword_100BCA000, v87, v88, (uint64_t)&unk_1009C6628);
    v89 = sub_1001FB230();
    v93 = sub_1000FEC28(v89, v90, v91, v117, v92);
    sub_1000998D4(v93, type metadata accessor for TimeState);
    sub_100086100(v124 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, v116);
    LOBYTE(v125) = 8;
    sub_10009C8A4(&qword_100BCA008, v94, v95, (uint64_t)&unk_1009C75B8);
    v96 = sub_1001FB230();
    v100 = sub_1000FEC28(v96, v97, v98, v115, v99);
    sub_1000998D4(v100, type metadata accessor for ViewState);
    sub_100080C0C(v124 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView, v113, type metadata accessor for ModalViewState);
    LOBYTE(v125) = 9;
    sub_10005329C(&qword_100BCA010, 255, type metadata accessor for ModalViewState, (uint64_t)&unk_1009C37B8);
    sub_1000FEC28(v113, (uint64_t)&v125, v46, v114, v101);
    sub_1000215BC(v113, type metadata accessor for ModalViewState);
    v102 = *(_QWORD *)(v124 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 24);
    v125 = *(_QWORD *)(v124 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData);
    v126 = *(_OWORD *)(v124 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 8);
    v127 = v102;
    a13 = 10;
    v103 = sub_1001F57A4();
    sub_1000FEC28((uint64_t)&v125, (uint64_t)&a13, v46, (uint64_t)&type metadata for WeatherDataState, v103);
    v104 = *(_QWORD *)(v124 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_debugState + 8);
    LOBYTE(v125) = *(_BYTE *)(v124 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_debugState);
    *(_QWORD *)&v126 = v104;
    a13 = 11;
    v105 = sub_1001F57E0();
    sub_1001FB670(v105, v106, v107, (uint64_t)&type metadata for DebugState, v105);
    v125 = *(_QWORD *)(v124 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_contentStatusBanners);
    a13 = 12;
    v108 = sub_1001F581C();
    sub_1001FB670(v108, v109, v110, (uint64_t)&type metadata for ContentStatusBannerState, v108);
    (*(void (**)(uint64_t))(v26 + 8))(v27);
  }
  sub_1000B44B0();
}

uint64_t sub_1001EAB84(uint64_t a1)
{
  return sub_1001DDA20(a1, (void (*)(uint64_t))sub_1001EABA0);
}

void sub_1001EABA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __int128 v83;
  uint64_t v84;

  sub_100099310();
  a22 = v25;
  a23 = v26;
  v28 = v27;
  v81 = *(_QWORD *)v23;
  v72 = type metadata accessor for ModalViewState(0);
  sub_1000B42B0();
  __chkstk_darwin(v29);
  sub_100088FDC();
  v73 = v30;
  v74 = sub_1001FBC68();
  sub_1000B42B0();
  __chkstk_darwin(v31);
  sub_100088FDC();
  v75 = sub_1001FBC74();
  sub_1000B42B0();
  __chkstk_darwin(v32);
  sub_100088FDC();
  v76 = type metadata accessor for NotificationsOptInState(0);
  sub_1000B42B0();
  __chkstk_darwin(v33);
  sub_100088FDC();
  v78 = sub_1001FBC5C();
  sub_1000B42B0();
  __chkstk_darwin(v34);
  sub_10009D384(v35, v70);
  v79 = type metadata accessor for EnvironmentState(0);
  sub_1000B42B0();
  __chkstk_darwin(v36);
  v38 = sub_1001FB610(v37, v71);
  v39 = type metadata accessor for AppConfigurationState(v38);
  sub_1000B42B0();
  __chkstk_darwin(v40);
  sub_100098694();
  v80 = sub_1000BA294(&qword_100BCA208);
  sub_1000BD980();
  __chkstk_darwin(v41);
  sub_100099234();
  v42 = v28[3];
  v43 = v28[4];
  v44 = (_QWORD *)sub_1000878D0();
  sub_1000DB418(v44, v45);
  v46 = sub_1001F56B4();
  v47 = dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for MainState._Storage.CodingKeys, &type metadata for MainState._Storage.CodingKeys, v46, v42, v43);
  if (v24)
  {
    sub_1001FAF74(v47, v81);
  }
  else
  {
    a13 = 0;
    sub_1001F5DBC();
    sub_1000DC5F0((uint64_t)&type metadata for AutomationState, (uint64_t)&a13, v80, (uint64_t)&type metadata for AutomationState);
    *(_QWORD *)(v23 + 16) = v82;
    a13 = 1;
    sub_1001F5DF8();
    sub_1000DC5F0((uint64_t)&type metadata for AppLifecycleState, (uint64_t)&a13, v80, (uint64_t)&type metadata for AppLifecycleState);
    *(_BYTE *)(v23 + 24) = v82;
    sub_1000C0CC8(&qword_100BCA220, v48, type metadata accessor for AppConfigurationState, (uint64_t)&unk_1009C9048);
    sub_1001FB548();
    v50 = sub_1000DC5F0(v39, v49, v80, v39);
    sub_10009C924(v50, v23 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_appConfiguration, type metadata accessor for AppConfigurationState);
    sub_1000C0CC8(&qword_100BCA228, v51, type metadata accessor for EnvironmentState, (uint64_t)&unk_1009C6B08);
    sub_1001FB548();
    v53 = sub_1000DC5F0(v79, v52, v80, v79);
    sub_1001FB9FC(v53, v23 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment, type metadata accessor for EnvironmentState);
    sub_1000C0CC8(&qword_100BCA230, v54, type metadata accessor for LocationsState, (uint64_t)&unk_1009C0EF0);
    sub_1001FB548();
    sub_1000DC5F0(v78, v55, v80, v78);
    sub_10007802C(v77, v23 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, type metadata accessor for LocationsState);
    a13 = 5;
    sub_1001F5E34();
    sub_1000DC5F0((uint64_t)&type metadata for NotificationsState, (uint64_t)&a13, v80, (uint64_t)&type metadata for NotificationsState);
    v56 = v23 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications;
    *(_BYTE *)v56 = 4;
    *(_OWORD *)(v56 + 8) = v83;
    sub_1000C0CC8(&qword_100BCA240, v57, type metadata accessor for NotificationsOptInState, (uint64_t)&unk_1009AB098);
    sub_1001FB548();
    v59 = sub_1000DC5F0(v76, v58, v80, v76);
    sub_10009C79C(v59, v23 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn, type metadata accessor for NotificationsOptInState);
    sub_1000C0CC8(&qword_100BCA248, v60, type metadata accessor for TimeState, (uint64_t)&unk_1009C6650);
    sub_1001FB548();
    v62 = sub_1000DC5F0(v75, v61, v80, v75);
    sub_1000ED420(v62, v23 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_time, type metadata accessor for TimeState);
    sub_1000C0CC8(&qword_100BCA250, v63, type metadata accessor for ViewState, (uint64_t)&unk_1009C75E0);
    sub_1001FB548();
    v65 = sub_1000DC5F0(v74, v64, v80, v74);
    sub_1000ED420(v65, v23 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, type metadata accessor for ViewState);
    LOBYTE(v82) = 9;
    sub_1000C0CC8(&qword_100BCA258, v66, type metadata accessor for ModalViewState, (uint64_t)&unk_1009C37E0);
    sub_1001FB548();
    KeyedDecodingContainer.decode<A>(_:forKey:)(v72, v67, v80, v72);
    sub_10007802C(v73, v23 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView, type metadata accessor for ModalViewState);
    a13 = 10;
    sub_1001F5E70();
    sub_1001FB164((uint64_t)&type metadata for WeatherDataState);
    v68 = v23 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData;
    *(_QWORD *)v68 = v82;
    *(_OWORD *)(v68 + 8) = v83;
    *(_QWORD *)(v68 + 24) = v84;
    a13 = 11;
    sub_1001F5EAC();
    sub_1001FB164((uint64_t)&type metadata for DebugState);
    v69 = v23 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_debugState;
    *(_BYTE *)v69 = 9;
    *(_QWORD *)(v69 + 8) = v83;
    a13 = 12;
    sub_1001F5EE8();
    sub_1001FB164((uint64_t)&type metadata for ContentStatusBannerState);
    sub_1000C24BC();
    *(_QWORD *)(v23 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_contentStatusBanners) = v82;
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v28);
  sub_1000B44B0();
}

uint64_t sub_1001EB434@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1001EAB84(a1);
  if (!v2)
    *a2 = result;
  return result;
}

#error "1001EB46C: call analysis failed (funcsize=8)"

void sub_1001EB47C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_1006902E8(a1, a2, a3, a4, a5, a6, a7, a8, v12, v13, SWORD2(v13), SBYTE6(v13), HIBYTE(v13));
  if (!v9)
    *a9 = v11;
}

void sub_1001EB4A4()
{
  sub_100690A4C();
}

uint64_t sub_1001EB4C4()
{
  char v0;

  sub_10009CC70();
  return v0 & 1;
}

void sub_1001EB4E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1000BE9DC();
  sub_1001FB810();
  sub_1000BA294(&qword_100BCA180);
  sub_1000BA514();
  __chkstk_darwin(v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000B44C8();
  v5 = sub_1001F5B64();
  sub_1000B44E8((uint64_t)&type metadata for MainState.CodingKeys, v6, v5);
  v11 = v0;
  type metadata accessor for MainState._Storage(0);
  sub_1000C0CC8(&qword_100BCA188, v7, type metadata accessor for MainState._Storage, (uint64_t)&unk_100982B1C);
  sub_10011DF48(v8, v9);
  sub_100098748((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_10009ECD4();
  sub_100089054();
}

void sub_1001EB598()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1000BE9DC();
  sub_1000C00FC();
  sub_1000BA294(&qword_100BCA168);
  sub_1000BA514();
  __chkstk_darwin(v1);
  sub_1000CD594();
  v2 = sub_1001F5B64();
  sub_1000C2488((uint64_t)&type metadata for MainState.CodingKeys, v3, v2);
  if (!v0)
  {
    type metadata accessor for MainState._Storage(0);
    sub_1000C0CC8(&qword_100BCA178, v4, type metadata accessor for MainState._Storage, (uint64_t)&unk_100982B44);
    sub_1000BBCBC(v5, v6);
    sub_1000C35BC();
  }
  sub_1000998EC();
  sub_1000BF0D8();
  sub_100089054();
}

uint64_t sub_1001EB654(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F5B64();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001EB67C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F5B64();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001EB6A4(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1001EB598();
  if (!v1)
    *a1 = v3;
}

void sub_1001EB6CC()
{
  sub_1001EB4E4();
}

void sub_1001EB6E4(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_10069150C();
  if (!v1)
    *a1 = v3;
}

void sub_1001EB70C()
{
  sub_100691534();
}

uint64_t sub_1001EB724(uint64_t *a1, uint64_t *a2)
{
  return sub_1008C3E78(*a1, *a2);
}

void sub_1001EB730()
{
  sub_1001F12FC();
}

void sub_1001EB74C()
{
  uint64_t v0;

  sub_10009C0B4();
  sub_100021A14(v0 + OBJC_IVAR____TtCV7Weather17MinorAlertContent8_Storage_map, &qword_100BC4A98);
  sub_100079F9C(v0 + OBJC_IVAR____TtCV7Weather17MinorAlertContent8_Storage_airQuality);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather17MinorAlertContent8_Storage_severeAlert);
  sub_10004A298();
}

uint64_t sub_1001EB7A4()
{
  return sub_100082C68(sub_1001EB74C);
}

uint64_t sub_1001EB7B0()
{
  return type metadata accessor for MinorAlertContent._Storage(0);
}

uint64_t type metadata accessor for MinorAlertContent._Storage(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC8D40, (uint64_t)&nominal type descriptor for MinorAlertContent._Storage);
}

uint64_t sub_1001EB7CC()
{
  char v0;

  sub_1001F12FC();
  return v0 & 1;
}

uint64_t sub_1001EB804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001F16C8(a1, a2, a3, a4, type metadata accessor for MinorAlertContent._Storage, &OBJC_IVAR____TtCV7Weather17MinorAlertContent8_Storage_map, &OBJC_IVAR____TtCV7Weather17MinorAlertContent8_Storage_airQuality, &OBJC_IVAR____TtCV7Weather17MinorAlertContent8_Storage_severeAlert);
}

void sub_1001EB828()
{
  uint64_t v0;

  v0 = sub_1000BD2A4();
  type metadata accessor for MinorAlertContent._Storage(v0);
  sub_1001FAF68();
  sub_10004A298();
}

void sub_1001EB864()
{
  sub_1001EB828();
}

void sub_1001EB870()
{
  sub_1001F12FC();
}

void sub_1001EB88C()
{
  uint64_t v0;

  sub_10009C0B4();
  sub_100021A14(v0 + OBJC_IVAR____TtCV7Weather10NhpContent8_Storage_map, &qword_100BC4A98);
  sub_100079F9C(v0 + OBJC_IVAR____TtCV7Weather10NhpContent8_Storage_airQuality);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather10NhpContent8_Storage_nextHourPrecipitation);
  sub_10004A298();
}

uint64_t sub_1001EB8E4()
{
  return sub_100082C68(sub_1001EB88C);
}

uint64_t sub_1001EB8F0()
{
  return type metadata accessor for NhpContent._Storage(0);
}

uint64_t type metadata accessor for NhpContent._Storage(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC8E08, (uint64_t)&nominal type descriptor for NhpContent._Storage);
}

uint64_t sub_1001EB90C()
{
  char v0;

  sub_1001F12FC();
  return v0 & 1;
}

uint64_t sub_1001EB944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001F16C8(a1, a2, a3, a4, type metadata accessor for NhpContent._Storage, &OBJC_IVAR____TtCV7Weather10NhpContent8_Storage_map, &OBJC_IVAR____TtCV7Weather10NhpContent8_Storage_airQuality, &OBJC_IVAR____TtCV7Weather10NhpContent8_Storage_nextHourPrecipitation);
}

void sub_1001EB968()
{
  uint64_t v0;

  v0 = sub_1000BD2A4();
  type metadata accessor for NhpContent._Storage(v0);
  sub_1001FAF68();
  sub_10004A298();
}

void sub_1001EB9A4()
{
  sub_1001EB968();
}

void sub_1001EB9B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,_QWORD *a25)
{
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_10009E4F0();
  a23 = v29;
  a24 = v30;
  v32 = v31;
  v42 = v33;
  sub_1001FBC9C();
  v34 = a25;
  v36 = v25 + *v35;
  v37 = sub_1000878BC();
  _s7Weather24LocationCompositionStateOwst_0(v36, 1, 1, v37);
  *(_QWORD *)(v25 + 16) = v28;
  sub_10009922C(v36, (uint64_t)&a10, 33);
  sub_1001FBB4C(v27, v38, &qword_100BC4A98);
  sub_1000DB75C(v39);
  sub_1001FBB30(v26, v25 + *v32);
  v40 = sub_1001FB9AC();
  sub_1001FBB30(v40, v41);
  sub_1001FBB30(v42, v25 + *v34);
  sub_10009DE9C();
}

void sub_1001EBA5C()
{
  sub_1001F1CC8();
}

void sub_1001EBA80()
{
  uint64_t v0;

  sub_10009C0B4();
  sub_100021A14(v0 + OBJC_IVAR____TtCV7Weather20NhpMinorAlertContent8_Storage_map, &qword_100BC4A98);
  sub_100079F9C(v0 + OBJC_IVAR____TtCV7Weather20NhpMinorAlertContent8_Storage_airQuality);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather20NhpMinorAlertContent8_Storage_nextHourPrecipitation);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather20NhpMinorAlertContent8_Storage_severeAlert);
  sub_10004A298();
}

uint64_t sub_1001EBAE4()
{
  return sub_100082C68(sub_1001EBA80);
}

uint64_t sub_1001EBAF0()
{
  return type metadata accessor for NhpMinorAlertContent._Storage(0);
}

uint64_t type metadata accessor for NhpMinorAlertContent._Storage(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC8ED0, (uint64_t)&nominal type descriptor for NhpMinorAlertContent._Storage);
}

void sub_1001EBB0C(uint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1001FBBFC(a1, (unint64_t *)&unk_100BC6DB8, type metadata accessor for LocationComponentContainerViewModel);
  if (v1 <= 0x3F)
  {
    sub_1001FB764();
    if (v2 <= 0x3F)
    {
      sub_1001FB63C();
      v9 = sub_1001FB714(v3, v4, v5, v6, v7, v8);
      sub_1001FB630(v9);
    }
  }
  sub_1000BBCDC();
}

uint64_t sub_1001EBB80()
{
  char v0;

  sub_1001F1CC8();
  return v0 & 1;
}

#error "1001EBC90: call analysis failed (funcsize=60)"

void sub_1001EBCCC()
{
  uint64_t v0;

  v0 = sub_1000BD2A4();
  type metadata accessor for NhpMinorAlertContent._Storage(v0);
  sub_10011DEF0();
  sub_10004A298();
}

void sub_1001EBD10()
{
  sub_1001EBCCC();
}

void sub_1001EBD1C()
{
  sub_1001F1CC8();
}

void sub_1001EBD40()
{
  uint64_t v0;

  sub_10009C0B4();
  sub_100021A14(v0 + OBJC_IVAR____TtCV7Weather14NhpNewsContent8_Storage_map, &qword_100BC4A98);
  sub_100079F9C(v0 + OBJC_IVAR____TtCV7Weather14NhpNewsContent8_Storage_airQuality);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather14NhpNewsContent8_Storage_newsArticle);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather14NhpNewsContent8_Storage_nextHourPrecipitation);
  sub_10004A298();
}

uint64_t sub_1001EBDA4()
{
  return sub_100082C68(sub_1001EBD40);
}

uint64_t sub_1001EBDB0()
{
  return type metadata accessor for NhpNewsContent._Storage(0);
}

uint64_t type metadata accessor for NhpNewsContent._Storage(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC8FA0, (uint64_t)&nominal type descriptor for NhpNewsContent._Storage);
}

uint64_t sub_1001EBDCC()
{
  char v0;

  sub_1001F1CC8();
  return v0 & 1;
}

#error "1001EBEDC: call analysis failed (funcsize=60)"

void sub_1001EBF18()
{
  uint64_t v0;

  v0 = sub_1000BD2A4();
  type metadata accessor for NhpNewsContent._Storage(v0);
  sub_10011DEF0();
  sub_10004A298();
}

void sub_1001EBF5C()
{
  sub_1001EBF18();
}

uint64_t sub_1001EBF68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[24];

  v5 = v2 + OBJC_IVAR____TtCV7Weather12NoAqiContent8_Storage_map;
  v6 = sub_1000878BC();
  sub_10009D34C(v5, v7, v8, v6);
  *(_QWORD *)(v2 + 16) = a1;
  sub_10009922C(v5, (uint64_t)v11, 33);
  sub_1000A3908(a2, v5, &qword_100BC4A98);
  sub_1000DB75C(v9);
  return v2;
}

void sub_1001EBFE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1000986AC();
  v5 = v4;
  v7 = v6;
  v28 = sub_1000878BC();
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_100079FBC();
  v9 = sub_1000BA294(&qword_100BC9F50);
  sub_1000B42B0();
  __chkstk_darwin(v10);
  sub_100079F58();
  sub_1000BA294(&qword_100BC4A98);
  sub_1000B42B0();
  __chkstk_darwin(v11);
  sub_1000BBB38();
  __chkstk_darwin(v12);
  sub_10009C838();
  type metadata accessor for LocationCommonViewComponents._Storage(0);
  sub_100079FA4();
  sub_1000C12B0();
  v13 = sub_1001FBA04();
  sub_1001DD4D4(v13, v14);
  v16 = v15;
  sub_100098834();
  sub_1000C5AE8();
  if ((v16 & 1) != 0)
  {
    sub_1000992EC(v7 + OBJC_IVAR____TtCV7Weather12NoAqiContent8_Storage_map, (uint64_t)&v30);
    v17 = sub_1001FB898();
    sub_100099330(v17, v18);
    sub_1000992EC(v5 + OBJC_IVAR____TtCV7Weather12NoAqiContent8_Storage_map, (uint64_t)&v29);
    v19 = v0 + *(int *)(v9 + 48);
    sub_100099330(v3, v0);
    v20 = sub_10009C7C4();
    sub_100099330(v20, v21);
    sub_100088FC8(v0, 1, v28);
    if (v22)
    {
      sub_100021A14(v3, &qword_100BC4A98);
      sub_100088FC8(v19, 1, v28);
    }
    else
    {
      sub_100037768(v0, v1, &qword_100BC4A98);
      v23 = sub_100088FC8(v19, 1, v28);
      if (!v22)
      {
        sub_1001FB458(v19);
        v24 = sub_1001FBA04();
        sub_100094184(v24, v25);
        sub_10009EFA8(v2);
      }
      sub_10004A2CC(v23, &qword_100BC4A98);
      sub_1000215BC(v1, type metadata accessor for LocationComponentContainerViewModel);
    }
    v26 = sub_1000BCF4C();
    sub_100021A14(v26, v27);
  }
  sub_100098640();
}

uint64_t sub_1001EC1F0()
{
  return sub_1001EC20C(&OBJC_IVAR____TtCV7Weather12NoAqiContent8_Storage_map, (uint64_t)&qword_100BC4A98, (void (*)(uint64_t, uint64_t))sub_100021A14);
}

uint64_t sub_1001EC20C(_QWORD *a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_10009C0B4();
  a3(v3 + *a1, a2);
  v7 = sub_10009E484();
  return swift_deallocClassInstance(v7, v8, v9);
}

uint64_t sub_1001EC250()
{
  return type metadata accessor for NoAqiContent._Storage(0);
}

uint64_t type metadata accessor for NoAqiContent._Storage(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC9070, (uint64_t)&nominal type descriptor for NoAqiContent._Storage);
}

void sub_1001EC26C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  sub_1001345CC(319, (unint64_t *)&unk_100BC6DB8, type metadata accessor for LocationComponentContainerViewModel);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
  }
}

uint64_t sub_1001EC2F8()
{
  char v0;

  sub_1001EBFE4();
  return v0 & 1;
}

void sub_1001EC318()
{
  uint64_t v0;

  v0 = sub_1000BD2A4();
  type metadata accessor for NoAqiContent._Storage(v0);
  sub_1000C1A00();
  sub_1001EBFE4();
  sub_10004A298();
}

void sub_1001EC340()
{
  sub_1001EC318();
}

uint64_t sub_1001EC34C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001DA958(a1, a2, a3, &OBJC_IVAR____TtCV7Weather16NoAqiNewsContent8_Storage_map, &OBJC_IVAR____TtCV7Weather16NoAqiNewsContent8_Storage_newsArticle);
}

void sub_1001EC360()
{
  sub_1001EC6C4();
}

uint64_t sub_1001EC374()
{
  uint64_t v0;

  sub_10009C0B4();
  sub_100021A14(v0 + OBJC_IVAR____TtCV7Weather16NoAqiNewsContent8_Storage_map, &qword_100BC4A98);
  sub_1000215BC(v0 + OBJC_IVAR____TtCV7Weather16NoAqiNewsContent8_Storage_newsArticle, type metadata accessor for LocationComponentContainerViewModel);
  return v0;
}

uint64_t sub_1001EC3BC()
{
  return sub_100082C68((void (*)(void))sub_1001EC374);
}

uint64_t sub_1001EC3C8()
{
  return type metadata accessor for NoAqiNewsContent._Storage(0);
}

uint64_t type metadata accessor for NoAqiNewsContent._Storage(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC9128, (uint64_t)&nominal type descriptor for NoAqiNewsContent._Storage);
}

uint64_t sub_1001EC3E4()
{
  char v0;

  sub_1001EC6C4();
  return v0 & 1;
}

void sub_1001EC414()
{
  uint64_t v0;

  v0 = sub_1000BD2A4();
  type metadata accessor for NoAqiNewsContent._Storage(v0);
  sub_1001FB25C();
  sub_10004A298();
}

void sub_1001EC448()
{
  sub_1001EC414();
}

uint64_t sub_1001EC454(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001DA958(a1, a2, a3, &OBJC_IVAR____TtCV7Weather15NoAqiNhpContent8_Storage_map, &OBJC_IVAR____TtCV7Weather15NoAqiNhpContent8_Storage_nextHourPrecipitation);
}

void sub_1001EC468()
{
  sub_1001EC6C4();
}

uint64_t sub_1001EC47C()
{
  uint64_t v0;

  sub_10009C0B4();
  sub_100021A14(v0 + OBJC_IVAR____TtCV7Weather15NoAqiNhpContent8_Storage_map, &qword_100BC4A98);
  sub_1000215BC(v0 + OBJC_IVAR____TtCV7Weather15NoAqiNhpContent8_Storage_nextHourPrecipitation, type metadata accessor for LocationComponentContainerViewModel);
  return v0;
}

uint64_t sub_1001EC4C4()
{
  return sub_100082C68((void (*)(void))sub_1001EC47C);
}

uint64_t sub_1001EC4D0()
{
  return type metadata accessor for NoAqiNhpContent._Storage(0);
}

uint64_t type metadata accessor for NoAqiNhpContent._Storage(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC91E8, (uint64_t)&nominal type descriptor for NoAqiNhpContent._Storage);
}

uint64_t sub_1001EC4EC()
{
  char v0;

  sub_1001EC6C4();
  return v0 & 1;
}

void sub_1001EC51C()
{
  uint64_t v0;

  v0 = sub_1000BD2A4();
  type metadata accessor for NoAqiNhpContent._Storage(v0);
  sub_1001FB25C();
  sub_10004A298();
}

void sub_1001EC550()
{
  sub_1001EC51C();
}

void sub_1001EC55C()
{
  sub_1001F12FC();
}

void sub_1001EC578()
{
  uint64_t v0;

  sub_10009C0B4();
  sub_100021A14(v0 + OBJC_IVAR____TtCV7Weather19NoAqiNhpNewsContent8_Storage_map, &qword_100BC4A98);
  sub_100079F9C(v0 + OBJC_IVAR____TtCV7Weather19NoAqiNhpNewsContent8_Storage_newsArticle);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather19NoAqiNhpNewsContent8_Storage_nextHourPrecipitation);
  sub_10004A298();
}

uint64_t sub_1001EC5D0()
{
  return sub_100082C68(sub_1001EC578);
}

uint64_t sub_1001EC5DC()
{
  return type metadata accessor for NoAqiNhpNewsContent._Storage(0);
}

uint64_t type metadata accessor for NoAqiNhpNewsContent._Storage(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC92A8, (uint64_t)&nominal type descriptor for NoAqiNhpNewsContent._Storage);
}

uint64_t sub_1001EC5F8()
{
  char v0;

  sub_1001F12FC();
  return v0 & 1;
}

uint64_t sub_1001EC630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001F16C8(a1, a2, a3, a4, type metadata accessor for NoAqiNhpNewsContent._Storage, &OBJC_IVAR____TtCV7Weather19NoAqiNhpNewsContent8_Storage_map, &OBJC_IVAR____TtCV7Weather19NoAqiNhpNewsContent8_Storage_newsArticle, &OBJC_IVAR____TtCV7Weather19NoAqiNhpNewsContent8_Storage_nextHourPrecipitation);
}

void sub_1001EC654()
{
  uint64_t v0;

  v0 = sub_1000BD2A4();
  type metadata accessor for NoAqiNhpNewsContent._Storage(v0);
  sub_1001FAF68();
  sub_10004A298();
}

void sub_1001EC690()
{
  sub_1001EC654();
}

uint64_t sub_1001EC69C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001DA958(a1, a2, a3, &OBJC_IVAR____TtCV7Weather18NoAqiSevereContent8_Storage_map, &OBJC_IVAR____TtCV7Weather18NoAqiSevereContent8_Storage_severeAlert);
}

void sub_1001EC6B0()
{
  sub_1001EC6C4();
}

void sub_1001EC6C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  sub_1000986AC();
  v39 = v6;
  v40 = v5;
  v8 = v7;
  v10 = v9;
  v42 = sub_1000878BC();
  sub_1000B42B0();
  __chkstk_darwin(v11);
  sub_1000C24A0();
  __chkstk_darwin(v12);
  sub_1000D0024();
  v13 = sub_1000BA294(&qword_100BC9F50);
  sub_1000B42B0();
  __chkstk_darwin(v14);
  sub_10009E540();
  sub_1000BA294(&qword_100BC4A98);
  sub_1000B42B0();
  __chkstk_darwin(v15);
  sub_1000DB210();
  __chkstk_darwin(v16);
  sub_1001FB600();
  v17 = v10;
  v18 = *(_QWORD *)(v10 + 16);
  v41 = v8;
  type metadata accessor for LocationCommonViewComponents._Storage(0);
  swift_retain();
  sub_100094EE4();
  v19 = sub_1000C0108();
  sub_1001DD4D4(v19, v20);
  v22 = v21;
  swift_release(v18);
  sub_10009880C();
  if ((v22 & 1) == 0)
    goto LABEL_13;
  v38 = v2;
  v23 = v17 + *v40;
  sub_1000992EC(v23, (uint64_t)&v44);
  sub_1000C091C(v23, v3);
  v24 = v41 + *v40;
  sub_1000992EC(v24, (uint64_t)&v43);
  v25 = v1 + *(int *)(v13 + 48);
  sub_1000C091C(v3, v1);
  sub_1000C091C(v24, v25);
  v26 = sub_100088FC8(v1, 1, v42);
  v27 = v17;
  v28 = v1;
  if (v34)
  {
    sub_1000992DC(v26, &qword_100BC4A98);
    v29 = sub_100088FC8(v25, 1, v42);
    if (v34)
    {
      sub_1000988A0(v29, &qword_100BC4A98);
      v30 = v38;
LABEL_12:
      sub_100086100(v27 + *v39, v30);
      sub_100086100(v41 + *v39, v0);
      sub_100094184(v30, v0);
      sub_10009EFA8(v0);
      sub_10009EFA8(v30);
      goto LABEL_13;
    }
    goto LABEL_10;
  }
  v31 = sub_1000878C4();
  sub_100037768(v31, v32, v33);
  v35 = sub_100088FC8(v25, 1, v42);
  if (v34)
  {
    sub_1000992DC(v35, &qword_100BC4A98);
    sub_10003BCC0(v36, type metadata accessor for LocationComponentContainerViewModel);
LABEL_10:
    sub_1000988A0(v29, &qword_100BC9F50);
    goto LABEL_13;
  }
  v30 = v38;
  sub_10007802C(v25, v38, type metadata accessor for LocationComponentContainerViewModel);
  v37 = sub_100094184(v4, v38);
  sub_10009EFA8(v38);
  sub_10009E47C(v3);
  sub_10009EFA8(v4);
  sub_10009E47C(v28);
  if (v37)
    goto LABEL_12;
LABEL_13:
  sub_1001FB384();
  sub_100098640();
}

uint64_t sub_1001EC964()
{
  uint64_t v0;

  sub_10009C0B4();
  sub_100021A14(v0 + OBJC_IVAR____TtCV7Weather18NoAqiSevereContent8_Storage_map, &qword_100BC4A98);
  sub_1000215BC(v0 + OBJC_IVAR____TtCV7Weather18NoAqiSevereContent8_Storage_severeAlert, type metadata accessor for LocationComponentContainerViewModel);
  return v0;
}

uint64_t sub_1001EC9AC()
{
  return sub_100082C68((void (*)(void))sub_1001EC964);
}

uint64_t sub_1001EC9B8()
{
  return type metadata accessor for NoAqiSevereContent._Storage(0);
}

uint64_t type metadata accessor for NoAqiSevereContent._Storage(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC9370, (uint64_t)&nominal type descriptor for NoAqiSevereContent._Storage);
}

uint64_t sub_1001EC9D4()
{
  char v0;

  sub_1001EC6C4();
  return v0 & 1;
}

void sub_1001ECA04()
{
  uint64_t v0;

  v0 = sub_1000BD2A4();
  type metadata accessor for NoAqiSevereContent._Storage(v0);
  sub_1001FB25C();
  sub_10004A298();
}

void sub_1001ECA38()
{
  sub_1001ECA04();
}

void sub_1001ECA44()
{
  sub_1001F12FC();
}

void sub_1001ECA60()
{
  uint64_t v0;

  sub_10009C0B4();
  sub_100021A14(v0 + OBJC_IVAR____TtCV7Weather22NoAqiSevereNewsContent8_Storage_map, &qword_100BC4A98);
  sub_100079F9C(v0 + OBJC_IVAR____TtCV7Weather22NoAqiSevereNewsContent8_Storage_newsArticle);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather22NoAqiSevereNewsContent8_Storage_severeAlert);
  sub_10004A298();
}

uint64_t sub_1001ECAB8()
{
  return sub_100082C68(sub_1001ECA60);
}

uint64_t sub_1001ECAC4()
{
  return type metadata accessor for NoAqiSevereNewsContent._Storage(0);
}

uint64_t type metadata accessor for NoAqiSevereNewsContent._Storage(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC9430, (uint64_t)&nominal type descriptor for NoAqiSevereNewsContent._Storage);
}

uint64_t sub_1001ECAE0()
{
  char v0;

  sub_1001F12FC();
  return v0 & 1;
}

uint64_t sub_1001ECB18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001F16C8(a1, a2, a3, a4, type metadata accessor for NoAqiSevereNewsContent._Storage, &OBJC_IVAR____TtCV7Weather22NoAqiSevereNewsContent8_Storage_map, &OBJC_IVAR____TtCV7Weather22NoAqiSevereNewsContent8_Storage_newsArticle, &OBJC_IVAR____TtCV7Weather22NoAqiSevereNewsContent8_Storage_severeAlert);
}

void sub_1001ECB3C()
{
  uint64_t v0;

  v0 = sub_1000BD2A4();
  type metadata accessor for NoAqiSevereNewsContent._Storage(v0);
  sub_1001FAF68();
  sub_10004A298();
}

void sub_1001ECB78()
{
  sub_1001ECB3C();
}

void sub_1001ECB84()
{
  sub_1001F12FC();
}

void sub_1001ECBA0()
{
  uint64_t v0;

  sub_10009C0B4();
  sub_100021A14(v0 + OBJC_IVAR____TtCV7Weather21NoAqiSevereNhpContent8_Storage_map, &qword_100BC4A98);
  sub_100079F9C(v0 + OBJC_IVAR____TtCV7Weather21NoAqiSevereNhpContent8_Storage_nextHourPrecipitation);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather21NoAqiSevereNhpContent8_Storage_severeAlert);
  sub_10004A298();
}

uint64_t sub_1001ECBF8()
{
  return sub_100082C68(sub_1001ECBA0);
}

uint64_t sub_1001ECC04()
{
  return type metadata accessor for NoAqiSevereNhpContent._Storage(0);
}

uint64_t type metadata accessor for NoAqiSevereNhpContent._Storage(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC94F8, (uint64_t)&nominal type descriptor for NoAqiSevereNhpContent._Storage);
}

uint64_t sub_1001ECC20()
{
  char v0;

  sub_1001F12FC();
  return v0 & 1;
}

uint64_t sub_1001ECC58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001F16C8(a1, a2, a3, a4, type metadata accessor for NoAqiSevereNhpContent._Storage, &OBJC_IVAR____TtCV7Weather21NoAqiSevereNhpContent8_Storage_map, &OBJC_IVAR____TtCV7Weather21NoAqiSevereNhpContent8_Storage_nextHourPrecipitation, &OBJC_IVAR____TtCV7Weather21NoAqiSevereNhpContent8_Storage_severeAlert);
}

void sub_1001ECC7C()
{
  uint64_t v0;

  v0 = sub_1000BD2A4();
  type metadata accessor for NoAqiSevereNhpContent._Storage(v0);
  sub_1001FAF68();
  sub_10004A298();
}

void sub_1001ECCB8()
{
  sub_1001ECC7C();
}

void sub_1001ECCC4()
{
  sub_1001F1CC8();
}

void sub_1001ECCE8()
{
  uint64_t v0;

  sub_10009C0B4();
  sub_100021A14(v0 + OBJC_IVAR____TtCV7Weather25NoAqiSevereNhpNewsContent8_Storage_map, &qword_100BC4A98);
  sub_100079F9C(v0 + OBJC_IVAR____TtCV7Weather25NoAqiSevereNhpNewsContent8_Storage_newsArticle);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather25NoAqiSevereNhpNewsContent8_Storage_nextHourPrecipitation);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather25NoAqiSevereNhpNewsContent8_Storage_severeAlert);
  sub_10004A298();
}

uint64_t sub_1001ECD4C()
{
  return sub_100082C68(sub_1001ECCE8);
}

uint64_t sub_1001ECD58()
{
  return type metadata accessor for NoAqiSevereNhpNewsContent._Storage(0);
}

uint64_t type metadata accessor for NoAqiSevereNhpNewsContent._Storage(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC95C0, (uint64_t)&nominal type descriptor for NoAqiSevereNhpNewsContent._Storage);
}

uint64_t sub_1001ECD74()
{
  char v0;

  sub_1001F1CC8();
  return v0 & 1;
}

#error "1001ECE84: call analysis failed (funcsize=60)"

void sub_1001ECEC0()
{
  uint64_t v0;

  v0 = sub_1000BD2A4();
  type metadata accessor for NoAqiSevereNhpNewsContent._Storage(v0);
  sub_10011DEF0();
  sub_10004A298();
}

void sub_1001ECF04()
{
  sub_1001ECEC0();
}

uint64_t sub_1001ECF10(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t result;

  if (a1[16] != a2[16])
    return 0;
  v2 = a1[17];
  v3 = a1[18];
  v4 = a1[19];
  v5 = a2[17];
  v6 = a2[19];
  if (v2 == 6)
  {
    result = 0;
    if (v5 != 6)
      return result;
LABEL_7:
    if (((v3 ^ a2[18]) & 1) == 0)
    {
      if (v4 == 2)
      {
        if (v6 != 2)
          return 0;
      }
      else if (v4 == 3)
      {
        if (v6 != 3)
          return 0;
      }
      else if ((v6 & 0xFE) == 2 || ((((v4 & 1) == 0) ^ v6) & 1) == 0)
      {
        return 0;
      }
      return 1;
    }
    return result;
  }
  if (v5 == 6)
    return 0;
  result = 0;
  if (v2 == v5)
    goto LABEL_7;
  return result;
}

uint64_t sub_1001ECFC4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F5858();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001ECFEC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F5858();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001ED014()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 20, 7);
}

uint64_t type metadata accessor for NotificationsOptInViewState._Storage()
{
  return objc_opt_self(_TtCV7Weather27NotificationsOptInViewState8_Storage);
}

void sub_1001ED044()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  __int16 v12;
  char v13;
  char v14;

  sub_1000BE9DC();
  v2 = v0;
  v4 = v3;
  sub_1000BA294(&qword_100BCA030);
  sub_1000BA514();
  __chkstk_darwin(v5);
  sub_1000BE73C(v4);
  v6 = sub_1001F5858();
  sub_1000B44E8((uint64_t)&type metadata for NotificationsOptInViewState._Storage.CodingKeys, v7, v6);
  v8 = *(_BYTE *)(v2 + 18);
  v9 = *(_BYTE *)(v2 + 19);
  v12 = *(_WORD *)(v2 + 16);
  v13 = v8;
  v14 = v9;
  v10 = sub_1001F5894();
  sub_1001FB2C4((uint64_t)&v12, v11, v1, (uint64_t)&unk_100B77338, v10);
  sub_1000BA528();
  sub_10009ECD4();
  sub_100089054();
}

void sub_1001ED104()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v0 = sub_1001FB820();
  sub_100098740(v0, 20);
  v1 = sub_1001FB970();
  sub_1001ED134(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, SWORD2(v10), SBYTE6(v10), SHIBYTE(v10));
  sub_1000C1348();
}

void sub_1001ED134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_100099310();
  sub_1001FBAB0();
  v16 = sub_1000BA294(&qword_100BCA1F8);
  v23 = *(_QWORD *)(v16 - 8);
  sub_10009D98C();
  __chkstk_darwin(v17);
  sub_10011E458(v15);
  v18 = sub_1001F5858();
  sub_100095510((uint64_t)&type metadata for NotificationsOptInViewState._Storage.CodingKeys, v19, v18);
  if (v14)
  {
    v21 = sub_1001FB7E8();
    sub_1001FBD10(v21, v22, 20);
  }
  else
  {
    sub_1001F5D80();
    sub_1000C6570((uint64_t)&unk_100B77338, v20, v16, (uint64_t)&unk_100B77338);
    sub_10009CC44(*(uint64_t (**)(uint64_t, uint64_t))(v23 + 8));
    *(_WORD *)(v13 + 16) = a11;
    *(_BYTE *)(v13 + 18) = a12;
    *(_BYTE *)(v13 + 19) = a13;
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v15);
  sub_10011E690();
  sub_1000B44B0();
}

uint64_t sub_1001ED22C(unsigned __int8 **a1, unsigned __int8 **a2)
{
  return sub_1001ECF10(*a1, *a2) & 1;
}

void sub_1001ED24C(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1001ED104();
  if (!v1)
    *a1 = v3;
}

void sub_1001ED274()
{
  sub_1001ED044();
}

void sub_1001ED294(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  sub_100691550(a1);
  if (!v2)
    *a2 = v4;
}

void sub_1001ED2BC()
{
  sub_1006915AC();
}

void sub_1001ED2DC()
{
  unsigned __int8 *v0;
  unsigned __int8 *v1;

  sub_10009E50C();
  type metadata accessor for NotificationsOptInViewState._Storage();
  v0 = (unsigned __int8 *)sub_1000C1A00();
  sub_1001ECF10(v0, v1);
  sub_10004A298();
}

void sub_1001ED304()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1000BE9DC();
  sub_1001FB800();
  sub_1000BA294(&qword_100BCA860);
  sub_1000BA514();
  __chkstk_darwin(v0);
  sub_1000B44C8();
  v1 = sub_1001F8FCC();
  sub_1000B44E8((uint64_t)&type metadata for NotificationsOptInViewState.CodingKeys, v2, v1);
  type metadata accessor for NotificationsOptInViewState._Storage();
  sub_10005329C(&qword_100BCA868, v3, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsOptInViewState._Storage, (uint64_t)&unk_10098284C);
  sub_100095128(v4, v5);
  sub_1000BA528();
  sub_10009ECD4();
  sub_100089054();
}

void sub_1001ED3AC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1000BE9DC();
  sub_1000C00FC();
  sub_1000BA294(&qword_100BCA838);
  sub_1000BA514();
  __chkstk_darwin(v1);
  sub_1000CD594();
  v2 = sub_1001F8FCC();
  sub_1000C2488((uint64_t)&type metadata for NotificationsOptInViewState.CodingKeys, v3, v2);
  if (!v0)
  {
    type metadata accessor for NotificationsOptInViewState._Storage();
    sub_10005329C(&qword_100BCA848, v4, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsOptInViewState._Storage, (uint64_t)&unk_100982874);
    sub_1000BBCBC(v5, v6);
    sub_1000C35BC();
  }
  sub_1000998EC();
  sub_1000BF0D8();
  sub_100089054();
}

uint64_t sub_1001ED464(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F8FCC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001ED48C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F8FCC();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001ED4B4()
{
  sub_1001ED2DC();
}

void sub_1001ED4C0(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1001ED3AC();
  if (!v1)
    *a1 = v3;
}

void sub_1001ED4E8()
{
  sub_1001ED304();
}

void sub_1001ED500(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  sub_1006915DC(a1);
  if (!v2)
    *a2 = v4;
}

void sub_1001ED528()
{
  sub_10069163C();
}

#error "1001ED68C: call analysis failed (funcsize=82)"

void sub_1001ED69C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  char v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t *v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  uint64_t v110;
  char v111;
  char v112;
  uint64_t v113;
  uint64_t v114;
  void (*v115)(uint64_t, uint64_t, uint64_t);
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void (*v119)(uint64_t);
  uint64_t v120;
  uint64_t v121;
  uint64_t v122[2];
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;

  sub_1000986AC();
  v5 = v4;
  v7 = v6;
  v125 = sub_1000C1340();
  v124 = *(_QWORD *)(v125 - 8);
  sub_10009D98C();
  __chkstk_darwin(v8);
  sub_1000986FC();
  v123 = v9;
  sub_10009D2A4();
  __chkstk_darwin(v10);
  sub_100079F7C();
  v133 = sub_1001FB888(v11);
  sub_1000B42B0();
  __chkstk_darwin(v12);
  sub_100088FDC();
  sub_10009511C(v13);
  v132 = sub_1000BA294(&qword_100BCA048);
  sub_1000B42B0();
  __chkstk_darwin(v14);
  sub_100088FDC();
  sub_10009511C(v15);
  sub_1000BA294(&qword_100BC68A0);
  sub_1000B42B0();
  __chkstk_darwin(v16);
  sub_1000986FC();
  v131 = v17;
  sub_10009D2A4();
  v19 = __chkstk_darwin(v18);
  sub_1001FB430(v19, v20, v21, v22, v23, v24, v25, v26, v122[0]);
  sub_1000B42B0();
  __chkstk_darwin(v27);
  sub_1000986FC();
  v137 = v28;
  sub_10009D2A4();
  __chkstk_darwin(v29);
  sub_100079F7C();
  v136 = v30;
  v31 = sub_10009CBFC();
  sub_1000B42B0();
  __chkstk_darwin(v32);
  sub_1000986FC();
  v130 = v33;
  sub_10009D2A4();
  __chkstk_darwin(v34);
  sub_100079F7C();
  sub_10009511C(v35);
  v36 = sub_1000BA294(&qword_100BCA050);
  sub_1000B42B0();
  __chkstk_darwin(v37);
  sub_1000986FC();
  v128 = v38;
  sub_10009D2A4();
  __chkstk_darwin(v39);
  sub_1001FB600();
  sub_1000BA294(&qword_100BC68B8);
  sub_1000B42B0();
  __chkstk_darwin(v40);
  v126 = (uint64_t)v122 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009D2A4();
  __chkstk_darwin(v42);
  sub_1000860D0();
  v127 = v43;
  sub_10009D2A4();
  __chkstk_darwin(v44);
  sub_1000860D0();
  v138 = v45;
  sub_10009D2A4();
  __chkstk_darwin(v46);
  sub_1001FB6D0();
  sub_1000B42B0();
  __chkstk_darwin(v47);
  sub_1000DB210();
  __chkstk_darwin(v48);
  sub_1000998F4();
  sub_1000BCF30(v7 + OBJC_IVAR____TtCV7Weather36PrecipitationAveragesDetailViewModel8_Storage_heroChart, v0);
  sub_1000BCF30(v5 + OBJC_IVAR____TtCV7Weather36PrecipitationAveragesDetailViewModel8_Storage_heroChart, v3);
  v49 = sub_10056BCF4(v0, v3);
  sub_100079F9C(v3);
  sub_100079F9C(v0);
  if ((v49 & 1) == 0)
    goto LABEL_37;
  sub_1000992EC(v7 + OBJC_IVAR____TtCV7Weather36PrecipitationAveragesDetailViewModel8_Storage_summaryPlatterViewModel, (uint64_t)&v144);
  v50 = sub_1001FB7F4();
  sub_1000C091C(v50, v51);
  v52 = v5 + OBJC_IVAR____TtCV7Weather36PrecipitationAveragesDetailViewModel8_Storage_summaryPlatterViewModel;
  sub_1000992EC(v5 + OBJC_IVAR____TtCV7Weather36PrecipitationAveragesDetailViewModel8_Storage_summaryPlatterViewModel, (uint64_t)&v143);
  v122[0] = v36;
  v53 = v2 + *(int *)(v36 + 48);
  sub_1000C091C(v1, v2);
  sub_1000C091C(v52, v53);
  v54 = sub_100099354();
  v56 = sub_100088FC8(v54, v55, v31);
  v57 = v5;
  v58 = v31;
  if (v61)
  {
    sub_1000988A0(v56, &qword_100BC68B8);
    v59 = sub_100088FC8(v53, 1, v31);
    if (v61)
    {
      sub_1000992DC(v59, &qword_100BC68B8);
      goto LABEL_13;
    }
LABEL_10:
    v63 = &qword_100BCA050;
    v64 = v2;
LABEL_11:
    sub_100021A14(v64, v63);
    goto LABEL_37;
  }
  v60 = v138;
  sub_100037768(v2, v138, &qword_100BC68B8);
  v62 = sub_100088FC8(v53, 1, v31);
  if (v61)
  {
    sub_1000988A0(v62, &qword_100BC68B8);
    sub_1000215BC(v60, type metadata accessor for ConditionDetailPlatterViewModel);
    goto LABEL_10;
  }
  v65 = v135;
  sub_10009C0AC(v53, v135);
  v66 = sub_1001FB898();
  sub_1008B5D2C(v66, v67);
  v69 = v68;
  sub_1000B3B44(v65);
  v70 = sub_1000878C4();
  sub_100021A14(v70, v71);
  sub_1000B3B44(v60);
  sub_1000987A0(v2);
  if ((v69 & 1) == 0)
    goto LABEL_37;
LABEL_13:
  v72 = v136;
  sub_1000BCF30(v7 + OBJC_IVAR____TtCV7Weather36PrecipitationAveragesDetailViewModel8_Storage_averagesChart, v136);
  v73 = v137;
  sub_1000BCF30(v57 + OBJC_IVAR____TtCV7Weather36PrecipitationAveragesDetailViewModel8_Storage_averagesChart, v137);
  v74 = sub_1000F41F0();
  v76 = sub_1002B71F4(v74, v75);
  sub_100079F9C(v73);
  sub_100079F9C(v72);
  if ((v76 & 1) == 0)
    goto LABEL_37;
  sub_1000992EC(v7 + OBJC_IVAR____TtCV7Weather36PrecipitationAveragesDetailViewModel8_Storage_newsViewModel, (uint64_t)&v142);
  v77 = sub_1001FBCFC();
  sub_1000C091C(v77, v78);
  sub_1000992EC(v57 + OBJC_IVAR____TtCV7Weather36PrecipitationAveragesDetailViewModel8_Storage_newsViewModel, (uint64_t)&v141);
  v79 = v134;
  v80 = v134 + *(int *)(v132 + 48);
  sub_1000C091C(v31, v134);
  v81 = sub_1000BCF4C();
  sub_1000C091C(v81, v82);
  v83 = sub_1000BCF40();
  v84 = v133;
  v86 = sub_100088FC8(v83, v85, v133);
  if (v61)
  {
    sub_100094EEC(v86, &qword_100BC68A0);
    v87 = sub_100088FC8(v80, 1, v84);
    if (v61)
    {
      sub_10004A2CC(v87, &qword_100BC68A0);
      goto LABEL_25;
    }
LABEL_22:
    v63 = &qword_100BCA048;
LABEL_23:
    v64 = v79;
    goto LABEL_11;
  }
  v88 = v131;
  sub_100037768(v79, v131, &qword_100BC68A0);
  v90 = sub_100088FC8(v80, 1, v84);
  if (v89)
  {
    sub_100094EEC(v90, &qword_100BC68A0);
    sub_1000998E4(v91, type metadata accessor for DetailComponentContainerViewModel);
    goto LABEL_22;
  }
  v92 = v129;
  sub_1000C0CEC(v80, v129);
  v93 = (uint64_t *)sub_1000E7BB8();
  v95 = sub_10035CD60(v93, v94);
  sub_100079F9C(v92);
  sub_10009E47C(v31);
  sub_100079F9C(v88);
  sub_10009E47C(v79);
  if ((v95 & 1) == 0)
    goto LABEL_37;
LABEL_25:
  v96 = v135;
  sub_1000BCF30(v7 + OBJC_IVAR____TtCV7Weather36PrecipitationAveragesDetailViewModel8_Storage_aboutPlatterViewModel, v135);
  v97 = v130;
  sub_1000BCF30(v57 + OBJC_IVAR____TtCV7Weather36PrecipitationAveragesDetailViewModel8_Storage_aboutPlatterViewModel, v130);
  v98 = sub_1000E7BB8();
  sub_1008B5D2C(v98, v99);
  v101 = v100;
  sub_100079F9C(v97);
  sub_100079F9C(v96);
  if ((v101 & 1) == 0)
    goto LABEL_37;
  v102 = v7 + OBJC_IVAR____TtCV7Weather36PrecipitationAveragesDetailViewModel8_Storage_historicalFactsPlatterViewModel;
  sub_1000992EC(v7 + OBJC_IVAR____TtCV7Weather36PrecipitationAveragesDetailViewModel8_Storage_historicalFactsPlatterViewModel, (uint64_t)&v140);
  v103 = v127;
  sub_1000BCF38(v102, v127);
  v104 = v57 + OBJC_IVAR____TtCV7Weather36PrecipitationAveragesDetailViewModel8_Storage_historicalFactsPlatterViewModel;
  sub_1000992EC(v57 + OBJC_IVAR____TtCV7Weather36PrecipitationAveragesDetailViewModel8_Storage_historicalFactsPlatterViewModel, (uint64_t)&v139);
  v79 = v128;
  v105 = v128 + *(int *)(v122[0] + 48);
  sub_1000BCF38(v103, v128);
  sub_1000BCF38(v104, v105);
  v106 = sub_100088FC8(v79, 1, v31);
  if (v61)
  {
    sub_1000992DC(v106, &qword_100BC68B8);
    v107 = sub_100088FC8(v105, 1, v31);
    if (v61)
    {
      sub_10004A2CC(v107, &qword_100BC68B8);
LABEL_36:
      v113 = v7 + OBJC_IVAR____TtCV7Weather36PrecipitationAveragesDetailViewModel8_Storage_viewEntity;
      v114 = v124;
      v115 = *(void (**)(uint64_t, uint64_t, uint64_t))(v124 + 16);
      v116 = v125;
      v115(v122[1], v113, v125);
      v115(v123, v57 + OBJC_IVAR____TtCV7Weather36PrecipitationAveragesDetailViewModel8_Storage_viewEntity, v116);
      v117 = sub_1000878C4();
      static LocationDetailEntity.== infix(_:_:)(v117, v118);
      v119 = *(void (**)(uint64_t))(v114 + 8);
      v120 = sub_1000F41F0();
      v119(v120);
      v121 = sub_1000E7BB8();
      v119(v121);
      goto LABEL_37;
    }
    goto LABEL_34;
  }
  v108 = v126;
  sub_100037768(v79, v126, &qword_100BC68B8);
  v110 = sub_100088FC8(v105, 1, v58);
  if (v109)
  {
    sub_1000992DC(v110, &qword_100BC68B8);
    sub_1000215BC(v108, type metadata accessor for ConditionDetailPlatterViewModel);
LABEL_34:
    v63 = &qword_100BCA050;
    goto LABEL_23;
  }
  sub_1001FB458(v105);
  sub_1008B5D2C(v108, v96);
  v112 = v111;
  sub_10009EFA8(v96);
  sub_10009E47C(v103);
  sub_10009EFA8(v108);
  sub_10009E47C(v79);
  if ((v112 & 1) != 0)
    goto LABEL_36;
LABEL_37:
  sub_1001FB384();
  sub_100098640();
}

void sub_1001EDE8C()
{
  uint64_t v0;
  uint64_t v1;

  sub_1000215BC(v0 + OBJC_IVAR____TtCV7Weather36PrecipitationAveragesDetailViewModel8_Storage_heroChart, type metadata accessor for PrecipitationAveragesHeroChartViewModel);
  sub_100075DD0(v0 + OBJC_IVAR____TtCV7Weather36PrecipitationAveragesDetailViewModel8_Storage_summaryPlatterViewModel);
  sub_1000215BC(v0 + OBJC_IVAR____TtCV7Weather36PrecipitationAveragesDetailViewModel8_Storage_averagesChart, type metadata accessor for MonthlyAveragesChartModel);
  sub_100021A14(v0 + OBJC_IVAR____TtCV7Weather36PrecipitationAveragesDetailViewModel8_Storage_newsViewModel, &qword_100BC68A0);
  sub_1000215BC(v0 + OBJC_IVAR____TtCV7Weather36PrecipitationAveragesDetailViewModel8_Storage_aboutPlatterViewModel, type metadata accessor for ConditionDetailPlatterViewModel);
  sub_100075DD0(v0 + OBJC_IVAR____TtCV7Weather36PrecipitationAveragesDetailViewModel8_Storage_historicalFactsPlatterViewModel);
  v1 = sub_1000C1340();
  sub_10003BC44(v1);
  sub_10004A298();
}

uint64_t sub_1001EDF40()
{
  return sub_100082C68(sub_1001EDE8C);
}

uint64_t sub_1001EDF4C()
{
  return type metadata accessor for PrecipitationAveragesDetailViewModel._Storage(0);
}

uint64_t type metadata accessor for PrecipitationAveragesDetailViewModel._Storage(uint64_t a1)
{
  return sub_100098190(a1, (uint64_t *)&unk_100BC9738, (uint64_t)&nominal type descriptor for PrecipitationAveragesDetailViewModel._Storage);
}

void sub_1001EDF68(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD v15[7];

  v2 = type metadata accessor for PrecipitationAveragesHeroChartViewModel(319);
  if (v3 <= 0x3F)
  {
    v15[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1001345CC(319, (unint64_t *)&qword_100BC9748, type metadata accessor for ConditionDetailPlatterViewModel);
    if (v5 <= 0x3F)
    {
      v6 = *(_QWORD *)(v4 - 8) + 64;
      v15[1] = v6;
      v7 = type metadata accessor for MonthlyAveragesChartModel(319);
      if (v8 <= 0x3F)
      {
        v15[2] = *(_QWORD *)(v7 - 8) + 64;
        sub_1001345CC(319, (unint64_t *)&qword_100BC9750, type metadata accessor for DetailComponentContainerViewModel);
        if (v10 <= 0x3F)
        {
          v15[3] = *(_QWORD *)(v9 - 8) + 64;
          v11 = type metadata accessor for ConditionDetailPlatterViewModel(319);
          if (v12 <= 0x3F)
          {
            v15[4] = *(_QWORD *)(v11 - 8) + 64;
            v15[5] = v6;
            v13 = type metadata accessor for LocationDetailEntity(319);
            if (v14 <= 0x3F)
            {
              v15[6] = *(_QWORD *)(v13 - 8) + 64;
              swift_updateClassMetadata2(a1, 256, 7, v15, a1 + 80);
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1001EE07C()
{
  char v0;

  sub_1001ED69C();
  return v0 & 1;
}

void sub_1001EE09C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(_QWORD);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  sub_1000986AC();
  v27 = v8;
  v28 = v7;
  v30 = v10;
  v31 = v9;
  v32 = v12;
  v33 = v11;
  v25 = v13;
  v29 = sub_1000C1340();
  v26 = *(_QWORD *)(v29 - 8);
  sub_10009D98C();
  __chkstk_darwin(v14);
  sub_100099864();
  sub_10009CBFC();
  sub_1000B42B0();
  __chkstk_darwin(v15);
  sub_100099234();
  sub_1000BA294(&qword_100BC68A0);
  sub_1000B42B0();
  __chkstk_darwin(v16);
  sub_10004A2E8();
  type metadata accessor for MonthlyAveragesChartModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v17);
  sub_100079FBC();
  sub_1000BF070();
  sub_1000B42B0();
  __chkstk_darwin(v18);
  sub_10003BC68();
  __chkstk_darwin(v19);
  sub_1001FB6D0();
  sub_1000B42B0();
  __chkstk_darwin(v20);
  sub_10009E540();
  v21 = sub_10009C7C4();
  sub_100080C0C(v21, v22, v23);
  sub_1001FBBE4(v33);
  sub_100080C0C(v32, v1, type metadata accessor for MonthlyAveragesChartModel);
  sub_100037768(v31, v5, &qword_100BC68A0);
  sub_100080C0C(v28, v6, type metadata accessor for ConditionDetailPlatterViewModel);
  sub_100037768(v30, v2, &qword_100BC68B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v0, v27, v29);
  v24 = type metadata accessor for PrecipitationAveragesDetailViewModel._Storage(0);
  sub_1000860C4(v24);
  sub_1001ED540(v4, v3, v1, v5, v6, v2, v0);
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v27, v29);
  sub_100075DD0(v30);
  sub_1000215BC(v28, type metadata accessor for ConditionDetailPlatterViewModel);
  sub_100021A14(v31, &qword_100BC68A0);
  sub_1000215BC(v32, type metadata accessor for MonthlyAveragesChartModel);
  sub_100075DD0(v33);
  sub_1000215BC(v25, type metadata accessor for PrecipitationAveragesHeroChartViewModel);
  sub_1001FB8A4();
  sub_100098640();
}

void sub_1001EE2BC()
{
  uint64_t v0;

  v0 = sub_1000BD2A4();
  type metadata accessor for PrecipitationAveragesDetailViewModel._Storage(v0);
  sub_1000C1A00();
  sub_1001ED69C();
  sub_10004A298();
}

void sub_1001EE2E4()
{
  sub_1001EE2BC();
}

void sub_1001EE2F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34,char a35)
{
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  const void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  sub_1001FB8BC();
  v53 = v36;
  v38 = v37;
  v40 = v39;
  v42 = v41;
  v44 = v43;
  v46 = v45;
  v48 = v47;
  *(_QWORD *)(v35 + 280) = 0;
  *(_QWORD *)(v35 + 288) = 0;
  sub_1000B44F8((void *)(v35 + 16), v49);
  *(_QWORD *)(v35 + 216) = v48;
  *(_QWORD *)(v35 + 224) = v46;
  *(_BYTE *)(v35 + 232) = v44;
  *(_QWORD *)(v35 + 240) = v42;
  *(_QWORD *)(v35 + 248) = v40;
  *(_BYTE *)(v35 + 256) = v38;
  *(_QWORD *)(v35 + 264) = v53;
  *(_QWORD *)(v35 + 272) = a27;
  swift_bridgeObjectRelease(0);
  v50 = *(_QWORD *)(v35 + 288);
  *(_QWORD *)(v35 + 280) = a28;
  *(_QWORD *)(v35 + 288) = a29;
  swift_bridgeObjectRelease(v50);
  *(_BYTE *)(v35 + 296) = a30;
  *(_QWORD *)(v35 + 304) = a31;
  *(_QWORD *)(v35 + 312) = a32;
  v51 = v35 + OBJC_IVAR____TtCV7Weather29ReportWeatherContentViewModel8_Storage_onlineFeedbackURL;
  v52 = sub_10009896C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v51, a33, v52);
  *(_BYTE *)(v35 + OBJC_IVAR____TtCV7Weather29ReportWeatherContentViewModel8_Storage_showOnlineFeedbackSafariView) = a34;
  *(_BYTE *)(v35 + OBJC_IVAR____TtCV7Weather29ReportWeatherContentViewModel8_Storage_entrySource) = a35 & 1;
  sub_10009E26C();
}

void sub_1001EE400()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22[5];
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;

  sub_1000986AC();
  v3 = *v1;
  v4 = sub_10009896C();
  sub_1000BD980();
  __chkstk_darwin(v5);
  sub_100079F58();
  sub_1000B44F8(v22, v1 + 2);
  v6 = v1[28];
  v21 = v1[27];
  v19 = v1[30];
  v15 = v1[31];
  v7 = v1[34];
  v20 = v1[33];
  v8 = v1[36];
  v18 = v1[35];
  HIDWORD(v17) = *((unsigned __int8 *)v1 + 296);
  v9 = v1[38];
  v10 = v1[39];
  LODWORD(v17) = *((unsigned __int8 *)v1 + 256);
  HIDWORD(v16) = *((unsigned __int8 *)v1 + 232);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v0, (uint64_t)v1 + OBJC_IVAR____TtCV7Weather29ReportWeatherContentViewModel8_Storage_onlineFeedbackURL, v4);
  LOBYTE(v4) = *((_BYTE *)v1
               + OBJC_IVAR____TtCV7Weather29ReportWeatherContentViewModel8_Storage_showOnlineFeedbackSafariView);
  v11 = *((_BYTE *)v1 + OBJC_IVAR____TtCV7Weather29ReportWeatherContentViewModel8_Storage_entrySource);
  swift_allocObject(v3, *(unsigned int *)(v3 + 48), *(unsigned __int16 *)(v3 + 52));
  sub_1001F5330(v22);
  sub_100094EDC();
  sub_100094EDC();
  sub_10003BCC8();
  sub_100095508();
  sub_10009E3E0();
  swift_bridgeObjectRetain(v10);
  BYTE1(v13) = v11;
  LOBYTE(v13) = v4;
  LOBYTE(v12) = BYTE4(v17);
  sub_1001EE2F0((uint64_t)v22, v21, v6, HIDWORD(v16), v19, v15, v17, v20, v7, v18, v8, v12, v9, v10, v0, v13, v14, v15, v16,
    v17,
    v18,
    v19,
    v20,
    v21,
    v22[0],
    v22[1],
    v22[2],
    v22[3],
    v22[4],
    v23,
    v24,
    v25,
    v26,
    v27,
    v28);
  sub_1001FB8A4();
  sub_100098640();
}

void sub_1001EE598()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  double v38;
  void (*v39)(uint64_t, uint64_t, uint64_t, double);
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t);
  _QWORD v43[25];
  _QWORD v44[26];

  sub_1000986AC();
  v4 = sub_10011DE64();
  v5 = type metadata accessor for URL(v4);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_10003BC68();
  __chkstk_darwin(v7);
  sub_1000B2FD8();
  sub_1000B44F8(v43, (const void *)(v1 + 16));
  sub_1000B44F8(v44, (const void *)(v0 + 16));
  sub_1001F5330(v43);
  sub_1001F5330(v44);
  v8 = sub_1005173A0((uint64_t)v43, (uint64_t)v44);
  sub_1001F53E4(v44);
  sub_1001F53E4(v43);
  if ((v8 & 1) != 0)
  {
    v9 = *(_QWORD *)(v1 + 216);
    v10 = *(_QWORD *)(v1 + 224);
    v11 = *(_QWORD *)(v0 + 216);
    v12 = *(_QWORD *)(v0 + 224);
    v13 = v9 == v11 && v10 == v12;
    if (v13 || (sub_100099264(v9, v10, v11, v12) & 1) != 0)
    {
      sub_10068C318(*(_BYTE *)(v1 + 232), *(unsigned __int8 *)(v0 + 232));
      if ((v14 & 1) != 0)
      {
        v15 = *(_QWORD *)(v1 + 240);
        v16 = *(_QWORD *)(v1 + 248);
        v17 = *(_QWORD *)(v0 + 240);
        v18 = *(_QWORD *)(v0 + 248);
        v19 = v15 == v17 && v16 == v18;
        if (v19 || (sub_100099264(v15, v16, v17, v18) & 1) != 0)
        {
          sub_10068C3F8();
          if ((v20 & 1) != 0)
          {
            v21 = *(_QWORD *)(v1 + 272);
            v22 = *(_QWORD *)(v0 + 272);
            if (v21)
            {
              if (!v22)
                goto LABEL_36;
              v23 = *(_QWORD *)(v1 + 264);
              v24 = *(_QWORD *)(v0 + 264);
              v25 = v23 == v24 && v21 == v22;
              if (!v25 && (sub_100099264(v23, v21, v24, v22) & 1) == 0)
                goto LABEL_36;
            }
            else if (v22)
            {
              goto LABEL_36;
            }
            v26 = *(_QWORD *)(v1 + 288);
            v27 = *(_QWORD *)(v0 + 288);
            if (v26)
            {
              if (!v27)
                goto LABEL_36;
              v28 = *(_QWORD *)(v1 + 280);
              v29 = *(_QWORD *)(v0 + 280);
              v30 = v28 == v29 && v26 == v27;
              if (!v30 && (sub_100099264(v28, v26, v29, v27) & 1) == 0)
                goto LABEL_36;
            }
            else if (v27)
            {
              goto LABEL_36;
            }
            sub_10068C4A4(*(_BYTE *)(v1 + 296), *(_BYTE *)(v0 + 296));
            if ((v31 & 1) != 0)
            {
              sub_10003BCC8();
              sub_100095508();
              v32 = sub_1000878D0();
              v34 = sub_1001EE9D0(v32, v33);
              sub_10009D2E0();
              sub_1000CC8C8();
              if ((v34 & 1) != 0)
              {
                sub_10003BCC8();
                sub_100095508();
                v35 = sub_1000878D0();
                v37 = sub_1001EED80(v35, v36);
                sub_10009D2E0();
                v38 = sub_1000CC8C8();
                if ((v37 & 1) != 0)
                {
                  v39 = *(void (**)(uint64_t, uint64_t, uint64_t, double))(v6 + 16);
                  v39(v3, v1 + OBJC_IVAR____TtCV7Weather29ReportWeatherContentViewModel8_Storage_onlineFeedbackURL, v5, v38);
                  ((void (*)(uint64_t, uint64_t, uint64_t))v39)(v2, v0 + OBJC_IVAR____TtCV7Weather29ReportWeatherContentViewModel8_Storage_onlineFeedbackURL, v5);
                  v40 = sub_1000878C4();
                  static URL.== infix(_:_:)(v40, v41);
                  v42 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
                  v42(v2, v5);
                  v42(v3, v5);
                }
              }
            }
          }
        }
      }
    }
  }
LABEL_36:
  sub_100098640();
}

void sub_1001EE814(uint64_t a1, uint64_t a2)
{
  char v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  Swift::UInt v19;
  Swift::Int v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;

  if (a1 == a2)
    return;
  sub_1001FB110();
  if (!v4)
    return;
  v5 = 0;
  v6 = a1 + 56;
  v7 = 1 << *(_BYTE *)(a1 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a1 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = a2 + 56;
  do
  {
LABEL_8:
    if (v9)
    {
      sub_1001FBBB0();
      v13 = v12 | (v5 << 6);
      goto LABEL_24;
    }
    v14 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
LABEL_33:
      __break(1u);
      return;
    }
    if (v14 >= v10)
      return;
    ++v5;
    if (*(_QWORD *)(v6 + 8 * v14))
      goto LABEL_23;
    v5 = v14 + 1;
    if (v14 + 1 >= v10)
      return;
    if (*(_QWORD *)(v6 + 8 * v5))
      goto LABEL_23;
    v5 = v14 + 2;
    if (v14 + 2 >= v10)
      return;
    if (*(_QWORD *)(v6 + 8 * v5))
      goto LABEL_23;
    v15 = v14 + 3;
    if (v15 >= v10)
      return;
    if (!*(_QWORD *)(v6 + 8 * v15))
    {
      while (1)
      {
        v5 = v15 + 1;
        if (__OFADD__(v15, 1))
          goto LABEL_33;
        if (v5 >= v10)
          return;
        ++v15;
        if (*(_QWORD *)(v6 + 8 * v5))
          goto LABEL_23;
      }
    }
    v5 = v15;
LABEL_23:
    sub_1000DF470();
    v9 = v17 & v16;
    v13 = v18 + (v5 << 6);
LABEL_24:
    v19 = *(unsigned __int8 *)(*(_QWORD *)(a1 + 48) + v13);
    sub_10009E564(*(_QWORD *)(a2 + 40));
    Hasher._combine(_:)(v19);
    v20 = sub_10007A148();
    v21 = -1 << *(_BYTE *)(a2 + 32);
    v22 = v20 & ~v21;
    if (((*(_QWORD *)(v11 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
      return;
    v23 = *(_QWORD *)(a2 + 48);
  }
  while (*(unsigned __int8 *)(v23 + v22) == (_DWORD)v19);
  v24 = ~v21;
  while (1)
  {
    v22 = (v22 + 1) & v24;
    if (((*(_QWORD *)(v11 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
      break;
    if (*(unsigned __int8 *)(v23 + v22) == (_DWORD)v19)
      goto LABEL_8;
  }
}

uint64_t sub_1001EE9D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v16;
  _QWORD v17[9];

  if (a1 != a2)
  {
    if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
      return 0;
    v3 = *(_QWORD *)(a1 + 56);
    v4 = 1 << *(_BYTE *)(a1 + 32);
    if (v4 < 64)
      v5 = ~(-1 << v4);
    else
      v5 = -1;
    v16 = (unint64_t)(v4 + 63) >> 6;
    if ((v5 & v3) != 0)
    {
      v6 = __clz(__rbit64(v5 & v3));
      goto LABEL_21;
    }
    if ((unint64_t)(v4 + 63) >> 6 > 1)
    {
      v7 = *(_QWORD *)(a1 + 64);
      v8 = 1;
      if (v7)
        goto LABEL_20;
      v8 = 2;
      if ((unint64_t)(v4 + 63) >> 6 <= 2)
        return 1;
      v7 = *(_QWORD *)(a1 + 72);
      if (v7)
        goto LABEL_20;
      v8 = 3;
      if ((unint64_t)(v4 + 63) >> 6 <= 3)
        return 1;
      v7 = *(_QWORD *)(a1 + 80);
      if (v7)
      {
LABEL_20:
        v6 = __clz(__rbit64(v7)) + (v8 << 6);
LABEL_21:
        v10 = *(_BYTE *)(*(_QWORD *)(a1 + 48) + v6);
        Hasher.init(_seed:)(v17);
        v11 = sub_1004A8B18(v10);
        v13 = v12;
        String.hash(into:)(v17, v11, v12);
        swift_bridgeObjectRelease(v13);
        v14 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(a2 + 32));
        if (((*(_QWORD *)(a2 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
          __asm { BR              X9 }
        return 0;
      }
      v9 = 4;
      if (v16 > 4)
      {
        v7 = *(_QWORD *)(a1 + 88);
        if (v7)
        {
          v8 = 4;
          goto LABEL_20;
        }
        while (1)
        {
          v8 = v9 + 1;
          if (__OFADD__(v9, 1))
          {
            __break(1u);
            JUMPOUT(0x1001EED50);
          }
          if (v8 >= v16)
            break;
          v7 = *(_QWORD *)(a1 + 56 + 8 * v8);
          ++v9;
          if (v7)
            goto LABEL_20;
        }
      }
    }
  }
  return 1;
}

uint64_t sub_1001EED80(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v16;
  _QWORD v17[9];

  if (a1 != a2)
  {
    if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
      return 0;
    v3 = *(_QWORD *)(a1 + 56);
    v4 = 1 << *(_BYTE *)(a1 + 32);
    if (v4 < 64)
      v5 = ~(-1 << v4);
    else
      v5 = -1;
    v16 = (unint64_t)(v4 + 63) >> 6;
    if ((v5 & v3) != 0)
    {
      v6 = __clz(__rbit64(v5 & v3));
      goto LABEL_21;
    }
    if ((unint64_t)(v4 + 63) >> 6 > 1)
    {
      v7 = *(_QWORD *)(a1 + 64);
      v8 = 1;
      if (v7)
        goto LABEL_20;
      v8 = 2;
      if ((unint64_t)(v4 + 63) >> 6 <= 2)
        return 1;
      v7 = *(_QWORD *)(a1 + 72);
      if (v7)
        goto LABEL_20;
      v8 = 3;
      if ((unint64_t)(v4 + 63) >> 6 <= 3)
        return 1;
      v7 = *(_QWORD *)(a1 + 80);
      if (v7)
      {
LABEL_20:
        v6 = __clz(__rbit64(v7)) + (v8 << 6);
LABEL_21:
        v10 = *(_BYTE *)(*(_QWORD *)(a1 + 48) + v6);
        Hasher.init(_seed:)(v17);
        v11 = sub_1004A8BE0(v10);
        v13 = v12;
        String.hash(into:)(v17, v11, v12);
        swift_bridgeObjectRelease(v13);
        v14 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(a2 + 32));
        if (((*(_QWORD *)(a2 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
          __asm { BR              X9 }
        return 0;
      }
      v9 = 4;
      if (v16 > 4)
      {
        v7 = *(_QWORD *)(a1 + 88);
        if (v7)
        {
          v8 = 4;
          goto LABEL_20;
        }
        while (1)
        {
          v8 = v9 + 1;
          if (__OFADD__(v9, 1))
          {
            __break(1u);
            JUMPOUT(0x1001EF148);
          }
          if (v8 >= v16)
            break;
          v7 = *(_QWORD *)(a1 + 56 + 8 * v8);
          ++v9;
          if (v7)
            goto LABEL_20;
        }
      }
    }
  }
  return 1;
}

uint64_t sub_1001EF188(uint64_t a1, unint64_t a2)
{
  unint64_t v4;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v10;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v16;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char v22;

  if (a1 == 0xD000000000000013)
  {
    v4 = 0x80000001009F3500;
    if (a2 == 0x80000001009F3500)
      goto LABEL_5;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000013, 0x80000001009F3500, a1, a2, 0) & 1) != 0)
  {
    v4 = a2;
LABEL_5:
    swift_bridgeObjectRelease(v4);
    return 0;
  }
  if (a1 == 0xD00000000000001ALL && a2 == 0x80000001009F3520)
  {
    v6 = 0x80000001009F3520;
LABEL_11:
    swift_bridgeObjectRelease(v6);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001ALL, 0x80000001009F3520, a1, a2, 0) & 1) != 0)
  {
    v6 = a2;
    goto LABEL_11;
  }
  if (a1 == 0xD000000000000011)
  {
    v7 = 0x80000001009F3540;
    if (a2 == 0x80000001009F3540)
      goto LABEL_16;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011, 0x80000001009F3540, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
LABEL_16:
    swift_bridgeObjectRelease(v7);
    return 2;
  }
  if (a1 == 0xD000000000000013)
  {
    v8 = 0x80000001009F3560;
    if (a2 == 0x80000001009F3560)
      goto LABEL_21;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000013, 0x80000001009F3560, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
LABEL_21:
    swift_bridgeObjectRelease(v8);
    return 3;
  }
  if (a1 == 0x69746152646E6977 && a2 == 0xEA0000000000676ELL)
  {
    v10 = 0xEA0000000000676ELL;
    goto LABEL_29;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x69746152646E6977, 0xEA0000000000676ELL, a1, a2, 0) & 1) != 0)
  {
    v10 = a2;
LABEL_29:
    swift_bridgeObjectRelease(v10);
    return 4;
  }
  if (a1 == 0x696C617551726961 && a2 == 0xEF656C7469547974)
  {
    v12 = 0xEF656C7469547974;
    goto LABEL_37;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x696C617551726961, 0xEF656C7469547974, a1, a2, 0) & 1) != 0)
  {
    v12 = a2;
LABEL_37:
    swift_bridgeObjectRelease(v12);
    return 5;
  }
  if (a1 == 0xD000000000000019 && a2 == 0x80000001009F3590)
  {
    v13 = 0x80000001009F3590;
LABEL_43:
    swift_bridgeObjectRelease(v13);
    return 6;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000019, 0x80000001009F3590, a1, a2, 0) & 1) != 0)
  {
    v13 = a2;
    goto LABEL_43;
  }
  if (a1 == 0xD000000000000010 && a2 == 0x80000001009F35B0)
  {
    v14 = 0x80000001009F35B0;
LABEL_49:
    swift_bridgeObjectRelease(v14);
    return 7;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x80000001009F35B0, a1, a2, 0) & 1) != 0)
  {
    v14 = a2;
    goto LABEL_49;
  }
  if (a1 == 0x6E6F43726568746FLL && a2 == 0xEF736E6F69746964)
  {
    v16 = 0xEF736E6F69746964;
    goto LABEL_57;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F43726568746FLL, 0xEF736E6F69746964, a1, a2, 0) & 1) != 0)
  {
    v16 = a2;
LABEL_57:
    swift_bridgeObjectRelease(v16);
    return 8;
  }
  if (a1 == 0x7470697263736564 && a2 == 0xEC000000736E6F69)
  {
    v18 = 0xEC000000736E6F69;
    goto LABEL_65;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7470697263736564, 0xEC000000736E6F69, a1, a2, 0) & 1) != 0)
  {
    v18 = a2;
LABEL_65:
    swift_bridgeObjectRelease(v18);
    return 9;
  }
  if (a1 == 0xD000000000000011)
  {
    v19 = 0x80000001009F35D0;
    if (a2 == 0x80000001009F35D0)
      goto LABEL_70;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011, 0x80000001009F35D0, a1, a2, 0) & 1) != 0)
  {
    v19 = a2;
LABEL_70:
    swift_bridgeObjectRelease(v19);
    return 10;
  }
  if (a1 == 0xD00000000000001CLL && a2 == 0x80000001009F35F0)
  {
    v20 = 0x80000001009F35F0;
LABEL_76:
    swift_bridgeObjectRelease(v20);
    return 11;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001CLL, 0x80000001009F35F0, a1, a2, 0) & 1) != 0)
  {
    v20 = a2;
    goto LABEL_76;
  }
  if (a1 == 0x756F537972746E65 && a2 == 0xEB00000000656372)
  {
    swift_bridgeObjectRelease(0xEB00000000656372);
    return 12;
  }
  else
  {
    v22 = _stringCompareWithSmolCheck(_:_:expecting:)(0x756F537972746E65, 0xEB00000000656372, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v22 & 1) != 0)
      return 12;
    else
      return 13;
  }
}

uint64_t sub_1001EF6D4()
{
  return 13;
}

void sub_1001EF6DC(uint64_t a1)
{
  unsigned __int8 v1;

  v1 = a1;
  sub_1000C4480(a1);
  Hasher._combine(_:)(v1);
  sub_10007A148();
  sub_100098918();
}

uint64_t sub_1001EF70C(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1001EF748 + 4 * byte_1009818B1[a1]))(0xD000000000000013, 0x80000001009F3500);
}

uint64_t sub_1001EF748()
{
  uint64_t v0;

  return v0 + 9;
}

uint64_t sub_1001EF84C()
{
  return 0x756F537972746E65;
}

void sub_1001EF86C()
{
  unsigned __int8 *v0;

  sub_1001EF6DC(*v0);
}

void sub_1001EF884(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  char v10;

  v1 = sub_10009E564(a1);
  sub_10004A324(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10);
  sub_10007A148();
  sub_100098918();
}

uint64_t sub_1001EF8AC()
{
  unsigned __int8 *v0;

  return sub_1001EF70C(*v0);
}

uint64_t sub_1001EF8B4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1001EF188(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1001EF8D8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1001EF6D4();
  *a1 = result;
  return result;
}

uint64_t sub_1001EF8FC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F58D0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001EF924(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F58D0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001EF94C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[25];

  sub_1000B44F8(v3, (const void *)(v0 + 16));
  sub_1001F53E4(v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = sub_10009896C();
  sub_10003BC44(v1);
  return v0;
}

uint64_t sub_1001EF9C8()
{
  return sub_100082C68((void (*)(void))sub_1001EF94C);
}

uint64_t sub_1001EF9D4()
{
  return type metadata accessor for ReportWeatherContentViewModel._Storage(0);
}

uint64_t type metadata accessor for ReportWeatherContentViewModel._Storage(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC9828, (uint64_t)&nominal type descriptor for ReportWeatherContentViewModel._Storage);
}

uint64_t sub_1001EF9F0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[13];

  v4[0] = &unk_100981BD0;
  v4[1] = &unk_100981B00;
  v4[2] = &unk_100981A78;
  v4[3] = &unk_100981B00;
  v4[4] = &unk_100981A78;
  v4[5] = &unk_100981BE8;
  v4[6] = &unk_100981BE8;
  v4[7] = &unk_100981A78;
  v4[8] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[9] = (char *)&value witness table for Builtin.BridgeObject + 64;
  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v4[10] = *(_QWORD *)(result - 8) + 64;
    v4[11] = &unk_100981A90;
    v4[12] = &unk_100981A90;
    result = swift_updateClassMetadata2(a1, 256, 13, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

void sub_1001EFAA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  _QWORD v58[26];

  sub_100099310();
  a22 = v27;
  a23 = v28;
  v29 = v23;
  v31 = v30;
  v57 = type metadata accessor for URL(0);
  v32 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  sub_10004A2E8();
  v33 = sub_1000BA294(&qword_100BCA058);
  v34 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  sub_100079FBC();
  v36 = v31[3];
  v35 = v31[4];
  sub_10011E458(v31);
  v37 = sub_1001F58D0();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for ReportWeatherContentViewModel._Storage.CodingKeys, &type metadata for ReportWeatherContentViewModel._Storage.CodingKeys, v37, v36, v35);
  sub_1000B44F8(v58, (const void *)(v29 + 16));
  a13 = 0;
  v38 = sub_1001F590C();
  KeyedEncodingContainer.encode<A>(_:forKey:)(v58, &a13, v33, &type metadata for ReportWeatherConditionsViewModel, v38);
  if (v24)
  {
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v25, v33);
  }
  else
  {
    v39 = *(_QWORD *)(v29 + 216);
    v40 = *(_QWORD *)(v29 + 224);
    sub_1001FB1A4(1);
    sub_1001FBAD8(v39, v40, (uint64_t)v58);
    if (v39)
    {
      v41 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
      v42 = v25;
      v43 = v33;
    }
    else
    {
      sub_100098964();
      sub_10011DDC4(*(_BYTE *)(v29 + 232));
      a13 = 2;
      v44 = sub_1001F5948();
      sub_1001FB404((uint64_t)v58, (uint64_t)&a13, v33, (uint64_t)&unk_100B766D0, v44);
      v45 = *(_QWORD *)(v29 + 240);
      v46 = *(_QWORD *)(v29 + 248);
      sub_1001FB1A4(3);
      sub_1001FBAD8(v45, v46, (uint64_t)v58);
      if (!v45)
      {
        sub_100098964();
        sub_10011DDC4(*(_BYTE *)(v29 + 256));
        a13 = 4;
        v47 = sub_1001F5984();
        sub_1001FB404((uint64_t)v58, (uint64_t)&a13, v33, (uint64_t)&unk_100B76640, v47);
        v48 = *(_QWORD *)(v29 + 264);
        sub_1001FB1A4(5);
        sub_1001FB5B8();
        if (!v48)
        {
          sub_100098964();
          v49 = *(_QWORD *)(v29 + 280);
          sub_1001FB1A4(6);
          sub_1001FB5B8();
          if (!v49)
          {
            sub_100098964();
            sub_10011DDC4(*(_BYTE *)(v29 + 296));
            a13 = 7;
            v50 = sub_1001F59C0();
            sub_1001FB404((uint64_t)v58, (uint64_t)&a13, v33, (uint64_t)&unk_100B765B0, v50);
            v58[0] = *(_QWORD *)(v29 + 304);
            a13 = 8;
            sub_1000BA294(&qword_100BCA088);
            v51 = sub_100121C78(&qword_100BCA090, &qword_100BCA088, (void (*)(void))sub_1001F59FC, (uint64_t)&protocol conformance descriptor for <> Set<A>);
            sub_1001FB3D0(v51);
            v58[0] = *(_QWORD *)(v29 + 312);
            a13 = 9;
            sub_1000BA294(&qword_100BCA0A0);
            v52 = sub_100121C78(&qword_100BCA0A8, &qword_100BCA0A0, (void (*)(void))sub_1001F5A38, (uint64_t)&protocol conformance descriptor for <> Set<A>);
            sub_1001FB3D0(v52);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(v26, v29 + OBJC_IVAR____TtCV7Weather29ReportWeatherContentViewModel8_Storage_onlineFeedbackURL, v57);
            sub_10011DDC4(10);
            sub_1000C0CC8(&qword_100BCA0B8, v53, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
            sub_1001FB404(v26, (uint64_t)v58, v33, v57, v54);
            sub_1001FB73C();
            sub_10011DDC4(11);
            KeyedEncodingContainer.encode(_:forKey:)(v55, v58, v33);
            sub_10011DDC4(*(_BYTE *)(v29 + OBJC_IVAR____TtCV7Weather29ReportWeatherContentViewModel8_Storage_entrySource));
            a13 = 12;
            v56 = sub_1001F5A74();
            sub_1001FB404((uint64_t)v58, (uint64_t)&a13, v33, (uint64_t)&type metadata for ReportWeatherEntrySource, v56);
            (*(void (**)(_QWORD, uint64_t))(v34 + 8))(0, v33);
            goto LABEL_6;
          }
        }
      }
      v42 = sub_1000C1A00();
    }
    v41(v42, v43);
    sub_100098964();
  }
LABEL_6:
  sub_1000B44B0();
}

uint64_t sub_1001EFEE8(uint64_t a1)
{
  return sub_1001DDA20(a1, (void (*)(uint64_t))sub_1001EFF04);
}

void sub_1001EFF04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD v54[25];
  uint64_t v55;

  sub_100099310();
  a22 = v27;
  a23 = v28;
  v29 = v23;
  v31 = v30;
  v53 = *v29;
  v32 = type metadata accessor for URL(0);
  v51 = *(_QWORD *)(v32 - 8);
  v52 = v32;
  sub_10009D98C();
  __chkstk_darwin(v33);
  sub_100098694();
  v50 = sub_1000BA294(&qword_100BCA1A0);
  sub_100099300();
  __chkstk_darwin(v34);
  sub_10007A130();
  *(_OWORD *)(v29 + 33) = 0u;
  *(_OWORD *)(v29 + 35) = 0u;
  v36 = v31[3];
  v35 = v31[4];
  sub_1000BE73C(v31);
  v37 = sub_1001F58D0();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for ReportWeatherContentViewModel._Storage.CodingKeys, &type metadata for ReportWeatherContentViewModel._Storage.CodingKeys, v37, v36, v35);
  if (v24)
  {
    sub_1001FB660();
    swift_bridgeObjectRelease();
    v38 = swift_bridgeObjectRelease();
    if (v26)
    {
      v38 = swift_bridgeObjectRelease();
      if (!(_DWORD)v35)
      {
LABEL_5:
        if (!(_DWORD)v31)
        {
LABEL_7:
          swift_deallocPartialClassInstance(v29, v53, *(unsigned int *)(*v29 + 48), *(unsigned __int16 *)(*v29 + 52));
          goto LABEL_8;
        }
LABEL_6:
        (*(void (**)(uint64_t, uint64_t, __n128))(v51 + 8))((uint64_t)v29 + OBJC_IVAR____TtCV7Weather29ReportWeatherContentViewModel8_Storage_onlineFeedbackURL, v52, v38);
        goto LABEL_7;
      }
    }
    else if (!(_DWORD)v35)
    {
      goto LABEL_5;
    }
    v38 = swift_bridgeObjectRelease();
    if (!(_DWORD)v31)
      goto LABEL_7;
    goto LABEL_6;
  }
  a13 = 0;
  sub_1001F5BDC();
  sub_1001FB014((uint64_t)&type metadata for ReportWeatherConditionsViewModel, (uint64_t)&a13, v50);
  sub_1000B44F8(v29 + 2, &v55);
  v29[27] = sub_1001FB554(1);
  v29[28] = v39;
  a12 = 2;
  sub_1001F5C18();
  KeyedDecodingContainer.decode<A>(_:forKey:)(&unk_100B766D0, &a12, v50, &unk_100B766D0);
  *((_BYTE *)v29 + 232) = v54[0];
  v29[30] = sub_1001FB554(3);
  v29[31] = v40;
  a12 = 4;
  sub_1001F5C54();
  sub_1001FB014((uint64_t)&unk_100B76640, (uint64_t)&a12, v50);
  *((_BYTE *)v29 + 256) = v54[0];
  v41 = sub_1001FB56C(5);
  v42 = v29[34];
  v29[33] = v41;
  v29[34] = v43;
  sub_1001FBC94(v42);
  v44 = sub_1001FB56C(6);
  v45 = v29[36];
  v29[35] = v44;
  v29[36] = v46;
  sub_1001FBC94(v45);
  a12 = 7;
  sub_1001F5C90();
  sub_1001FB014((uint64_t)&unk_100B765B0, (uint64_t)&a12, v50);
  *((_BYTE *)v29 + 296) = v54[0];
  v47 = sub_1000BA294(&qword_100BCA088);
  a12 = 8;
  sub_100121C78(&qword_100BCA1C8, &qword_100BCA088, (void (*)(void))sub_1001F5CCC, (uint64_t)&protocol conformance descriptor for <> Set<A>);
  sub_1001FB048(v47, (uint64_t)&a12, v50, v47);
  v29[38] = v54[0];
  v48 = sub_1000BA294(&qword_100BCA0A0);
  a12 = 9;
  sub_100121C78(&qword_100BCA1D8, &qword_100BCA0A0, (void (*)(void))sub_1001F5D08, (uint64_t)&protocol conformance descriptor for <> Set<A>);
  sub_1001FB048(v48, (uint64_t)&a12, v50, v48);
  v29[39] = v54[0];
  LOBYTE(v54[0]) = 10;
  sub_1000C0CC8(&qword_100BCA1E8, v49, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
  sub_1001FB014(v52, (uint64_t)v54, v50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 32))((uint64_t)v29 + OBJC_IVAR____TtCV7Weather29ReportWeatherContentViewModel8_Storage_onlineFeedbackURL, v25, v52);
  LOBYTE(v54[0]) = 11;
  *((_BYTE *)v29 + OBJC_IVAR____TtCV7Weather29ReportWeatherContentViewModel8_Storage_showOnlineFeedbackSafariView) = KeyedDecodingContainer.decode(_:forKey:)(v54, v50) & 1;
  a12 = 12;
  sub_1001F5D44();
  sub_1001FB014((uint64_t)&type metadata for ReportWeatherEntrySource, (uint64_t)&a12, v50);
  sub_1001FB194();
  *((_BYTE *)v29 + OBJC_IVAR____TtCV7Weather29ReportWeatherContentViewModel8_Storage_entrySource) = v54[0];
LABEL_8:
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v31);
  sub_1000B44B0();
}

uint64_t sub_1001F0438()
{
  char v0;

  sub_1001EE598();
  return v0 & 1;
}

void sub_1001F0458(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_10069166C(a1, a2, a3, a4, a5, a6, a7, a8, v12, v13, SWORD2(v13), SBYTE6(v13), SHIBYTE(v13));
  if (!v9)
    *a9 = v11;
}

void sub_1001F0480()
{
  sub_1006919F4();
}

uint64_t sub_1001F04A0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1001EFEE8(a1);
  if (!v2)
    *a2 = result;
  return result;
}

#error "1001F04D8: call analysis failed (funcsize=8)"

void *sub_1001F04E8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  _QWORD v4[25];

  sub_1000B44F8(v4, (const void *)(a1 + 16));
  sub_1001F5330(v4);
  return sub_1000B44F8(a2, v4);
}

_QWORD *sub_1001F052C()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  const void *v3;
  _QWORD v5[25];

  if ((swift_isUniquelyReferenced_nonNull_native(*v0) & 1) == 0)
  {
    sub_1001EE400();
    sub_1001FB99C(v1);
  }
  sub_1000B44F8(v5, (const void *)(*v0 + 16));
  v2 = (void *)sub_1000C1A00();
  sub_1000B44F8(v2, v3);
  return sub_1001F53E4(v5);
}

uint64_t sub_1001F0598(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 232);
}

void sub_1001F05A0()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  if ((sub_1001FB3C0() & 1) == 0)
  {
    sub_1001FBAC4();
    sub_10009F054(v2);
  }
  *(_BYTE *)(*(_QWORD *)v0 + 232) = v1;
  sub_100079F70();
}

uint64_t sub_1001F05D0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 256);
}

void sub_1001F05D8()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  if ((sub_1001FB3C0() & 1) == 0)
  {
    sub_1001FBAC4();
    sub_10009F054(v2);
  }
  *(_BYTE *)(*(_QWORD *)v0 + 256) = v1;
  sub_100079F70();
}

uint64_t sub_1001F0608(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 296);
}

void sub_1001F0610()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  if ((sub_1001FB3C0() & 1) == 0)
  {
    sub_1001FBAC4();
    sub_10009F054(v2);
  }
  *(_BYTE *)(*(_QWORD *)v0 + 296) = v1;
  sub_100079F70();
}

void sub_1001F0640()
{
  uint64_t v0;

  v0 = sub_1000BD2A4();
  type metadata accessor for ReportWeatherContentViewModel._Storage(v0);
  sub_1000C1A00();
  sub_1001EE598();
  sub_10004A298();
}

void sub_1001F0668()
{
  Hasher._combine(_:)(0);
}

uint64_t sub_1001F068C()
{
  return 0x656761726F74735FLL;
}

void sub_1001F06A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1000BE9DC();
  sub_1001FB810();
  sub_1000BA294(&qword_100BCA7C0);
  sub_1000BA514();
  __chkstk_darwin(v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000B44C8();
  v5 = sub_1001F8EDC();
  sub_1000B44E8((uint64_t)&type metadata for ReportWeatherContentViewModel.CodingKeys, v6, v5);
  v11 = v0;
  type metadata accessor for ReportWeatherContentViewModel._Storage(0);
  sub_1000C0CC8(&qword_100BCA7C8, v7, type metadata accessor for ReportWeatherContentViewModel._Storage, (uint64_t)&unk_10098270C);
  sub_10011DF48(v8, v9);
  sub_100098748((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_10009ECD4();
  sub_100089054();
}

void sub_1001F0758()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1000BE9DC();
  sub_1000C00FC();
  sub_1000BA294(&qword_100BCA7A8);
  sub_1000BA514();
  __chkstk_darwin(v1);
  sub_1000CD594();
  v2 = sub_1001F8EDC();
  sub_1000C2488((uint64_t)&type metadata for ReportWeatherContentViewModel.CodingKeys, v3, v2);
  if (!v0)
  {
    type metadata accessor for ReportWeatherContentViewModel._Storage(0);
    sub_1000C0CC8(&qword_100BCA7B8, v4, type metadata accessor for ReportWeatherContentViewModel._Storage, (uint64_t)&unk_100982734);
    sub_1000BBCBC(v5, v6);
    sub_1000C35BC();
  }
  sub_1000998EC();
  sub_1000BF0D8();
  sub_100089054();
}

void sub_1001F0814(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_1001F0FE8(a1, a2);
  *a3 = v4 & 1;
}

uint64_t sub_1001F083C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F8EDC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001F0864(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F8EDC();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001F088C()
{
  sub_1001F0640();
}

void sub_1001F0898(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_100691C7C();
  if (!v1)
    *a1 = v3;
}

void sub_1001F08C0()
{
  sub_100691CA4();
}

void sub_1001F08D8(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1001F0758();
  if (!v1)
    *a1 = v3;
}

void sub_1001F0900()
{
  sub_1001F06A4();
}

void sub_1001F0918()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74[8];
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86[8];
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;

  sub_1000986AC();
  v1 = v0[2];
  v2 = v0[5];
  v3 = v0[6];
  v70 = v0[3];
  v71 = v0[7];
  v4 = v0[9];
  v72 = v0[4];
  v73 = v0[8];
  v5 = v0[10];
  v6 = v0[11];
  v8 = v0[12];
  v7 = v0[13];
  v11 = v9[2];
  v10 = v9[3];
  v12 = v9[4];
  v13 = v9[5];
  v15 = v9[6];
  v14 = v9[7];
  v17 = v9[8];
  v16 = v9[9];
  v19 = v9[10];
  v18 = v9[11];
  v21 = v9[12];
  v20 = v9[13];
  if (v1 < 0)
  {
    v74[0] = v1 & 1;
    v75 = v70;
    v76 = v72;
    v77 = v2;
    v78 = v3;
    v79 = v71;
    v80 = v73;
    v81 = v4;
    v82 = v5;
    v83 = v6;
    v84 = v8;
    v85 = v7;
    if ((v11 & 0x8000000000000000) == 0)
      goto LABEL_8;
    v86[0] = v11 & 1;
    v87 = v10;
    v88 = v12;
    v89 = v13;
    v90 = v15;
    v91 = v14;
    v92 = v17;
    v93 = v16;
    v94 = v19;
    v95 = v18;
    v96 = v21;
    v97 = v20;
    v50 = v21;
    v48 = v19;
    v64 = v12;
    v65 = v19;
    v56 = v21;
    v57 = v20;
    v59 = v18;
    v60 = v17;
    v62 = v15;
    v63 = v13;
    v36 = v13;
    v55 = v3;
    v37 = v4;
    v66 = v5;
    v38 = v15;
    v39 = v14;
    v31 = v71;
    v40 = v5;
    v61 = v39;
    v33 = v73;
    v41 = v17;
    v27 = v16;
    v42 = v6;
    v43 = v7;
    v58 = v10;
    sub_10019D33C(v11, v10, v12, v36, v38, v39, v41, v16, v48, v18, v50, v20);
    v67 = v43;
    v68 = v8;
    v51 = v8;
    v69 = v42;
    v44 = v1;
    v30 = v72;
    v28 = v2;
    sub_10019D33C(v44, v70, v72, v2, v55, v71, v73, v37, v40, v42, v51, v43);
    sub_100544468((uint64_t)v74, (uint64_t)v86);
    v32 = v55;
  }
  else
  {
    if (v11 < 0)
      goto LABEL_8;
    v68 = v0[12];
    v69 = v0[11];
    v53 = v11;
    v67 = v0[13];
    v22 = v10;
    v23 = v12;
    v52 = v16;
    v24 = v18;
    v25 = v20;
    v54 = v0[6];
    v66 = v0[10];
    type metadata accessor for ReportWeatherContentViewModel._Storage(0);
    v56 = v21;
    v57 = v25;
    v58 = v22;
    v59 = v24;
    v49 = v24;
    v11 = v53;
    v64 = v23;
    v65 = v19;
    v62 = v15;
    v63 = v13;
    v60 = v17;
    v61 = v14;
    v26 = v17;
    v27 = v52;
    sub_10019D33C(v53, v22, v23, v13, v15, v14, v26, v52, v19, v49, v21, v25);
    v28 = v2;
    v29 = sub_1001FB8B0();
    v31 = v71;
    v30 = v72;
    v32 = v54;
    v33 = v73;
    sub_10019D33C(v29, v34, v72, v2, v54, v71, v73, v35, v66, v69, v68, v67);
    sub_1001EE598();
  }
  sub_10019D2B8(v11, v58, v64, v63, v62, v61, v60, v27, v65, v59, v56, v57);
  v45 = sub_1001FB8B0();
  sub_10019D2B8(v45, v46, v30, v28, v32, v31, v33, v47, v66, v69, v68, v67);
LABEL_8:
  sub_100098640();
}

void sub_1001F0BC8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6C65646F6DLL && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1000DC128(0x6C65646F6DLL, 0xE500000000000000, a1);
    sub_1000986E8();
  }
  sub_10004A298();
}

uint64_t sub_1001F0C34()
{
  return 0x6C65646F6DLL;
}

void sub_1001F0C48(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_1001F0BC8(a1, a2);
  *a3 = v4 & 1;
}

uint64_t sub_1001F0C70(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F5AB0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001F0C98(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F5AB0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001F0CC0()
{
  uint64_t *v0;

  sub_10019D2B8(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7], v0[8], v0[9], v0[10], v0[11], v0[12], v0[13]);
  return swift_deallocClassInstance(v0, 112, 7);
}

uint64_t type metadata accessor for ReportWeatherViewState._Storage()
{
  return objc_opt_self(_TtCV7Weather22ReportWeatherViewState8_Storage);
}

void sub_1001F0D28()
{
  _OWORD *v0;
  uint64_t v1;
  _OWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD v13[6];

  sub_1000BE9DC();
  v2 = v0;
  v4 = v3;
  sub_1000BA294(&qword_100BCA0C8);
  sub_1000BA514();
  __chkstk_darwin(v5);
  sub_1000BE73C(v4);
  v6 = sub_1001F5AB0();
  sub_1000B44E8((uint64_t)&type metadata for ReportWeatherViewState._Storage.CodingKeys, v7, v6);
  v8 = v2[2];
  v13[0] = v2[1];
  v13[1] = v8;
  v9 = v2[4];
  v13[2] = v2[3];
  v13[3] = v9;
  v10 = v2[6];
  v13[4] = v2[5];
  v13[5] = v10;
  v11 = sub_1001F5AEC();
  sub_1001FB2C4((uint64_t)v13, v12, v1, (uint64_t)&type metadata for ReportWeatherViewModel, v11);
  sub_1000BA528();
  sub_10009ECD4();
  sub_100089054();
}

void sub_1001F0DE8()
{
  uint64_t v0;

  v0 = sub_1001FB820();
  sub_100098740(v0, 112);
  sub_1001FB970();
  sub_1001F0E18();
  sub_1000C1348();
}

void sub_1001F0E18()
{
  _OWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;

  sub_100099310();
  sub_1001FBAB0();
  v3 = sub_1000BA294(&qword_100BCA190);
  v16 = *(_QWORD *)(v3 - 8);
  sub_10009D98C();
  __chkstk_darwin(v4);
  sub_10011E458(v2);
  v5 = sub_1001F5AB0();
  sub_100095510((uint64_t)&type metadata for ReportWeatherViewState._Storage.CodingKeys, v6, v5);
  if (v1)
  {
    v8 = sub_1001FB7E8();
    sub_1001FBD10(v8, v9, 112);
  }
  else
  {
    sub_1001F5BA0();
    sub_1000C6570((uint64_t)&type metadata for ReportWeatherViewModel, v7, v3, (uint64_t)&type metadata for ReportWeatherViewModel);
    sub_10009CC44(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
    v0[1] = v10;
    v0[2] = v11;
    v0[3] = v12;
    v0[4] = v13;
    v0[5] = v14;
    v0[6] = v15;
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v2);
  sub_10011E690();
  sub_1000B44B0();
}

uint64_t sub_1001F0F10()
{
  char v0;

  sub_1001F0918();
  return v0 & 1;
}

void sub_1001F0F30(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1001F0DE8();
  if (!v1)
    *a1 = v3;
}

void sub_1001F0F58()
{
  sub_1001F0D28();
}

void sub_1001F0F78(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  sub_100691CC0(a1);
  if (!v2)
    *a2 = v4;
}

void sub_1001F0FA0(uint64_t a1)
{
  sub_100691D00(a1);
}

void sub_1001F0FC0()
{
  sub_10009E50C();
  type metadata accessor for ReportWeatherViewState._Storage();
  sub_1000C1A00();
  sub_1001F0918();
  sub_10004A298();
}

void sub_1001F0FE8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x656761726F74735FLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1000DC128(0x656761726F74735FLL, 0xE800000000000000, a1);
    sub_1000986E8();
  }
  sub_10004A298();
}

void sub_1001F105C(uint64_t a1)
{
  sub_1000C4480(a1);
  sub_1000C1CFC();
  sub_10007A148();
  sub_100098918();
}

void sub_1001F1080()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1000BE9DC();
  sub_1001FB800();
  sub_1000BA294(&qword_100BCA850);
  sub_1000BA514();
  __chkstk_darwin(v0);
  sub_1000B44C8();
  v1 = sub_1001F8F90();
  sub_1000B44E8((uint64_t)&type metadata for ReportWeatherViewState.CodingKeys, v2, v1);
  type metadata accessor for ReportWeatherViewState._Storage();
  sub_10005329C(&qword_100BCA858, v3, (uint64_t (*)(uint64_t))type metadata accessor for ReportWeatherViewState._Storage, (uint64_t)&unk_100982694);
  sub_100095128(v4, v5);
  sub_1000BA528();
  sub_10009ECD4();
  sub_100089054();
}

void sub_1001F1128()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1000BE9DC();
  sub_1000C00FC();
  sub_1000BA294(&qword_100BCA820);
  sub_1000BA514();
  __chkstk_darwin(v1);
  sub_1000CD594();
  v2 = sub_1001F8F90();
  sub_1000C2488((uint64_t)&type metadata for ReportWeatherViewState.CodingKeys, v3, v2);
  if (!v0)
  {
    type metadata accessor for ReportWeatherViewState._Storage();
    sub_10005329C(&qword_100BCA830, v4, (uint64_t (*)(uint64_t))type metadata accessor for ReportWeatherViewState._Storage, (uint64_t)&unk_1009826BC);
    sub_1000BBCBC(v5, v6);
    sub_1000C35BC();
  }
  sub_1000998EC();
  sub_1000BF0D8();
  sub_100089054();
}

void sub_1001F11E0(uint64_t a1)
{
  sub_10009E564(a1);
  sub_1000C1CFC();
  sub_10007A148();
  sub_100098918();
}

uint64_t sub_1001F1204(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F8F90();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001F122C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F8F90();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001F1254()
{
  sub_1001F0FC0();
}

void sub_1001F1260(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1001F1128();
  if (!v1)
    *a1 = v3;
}

void sub_1001F1288()
{
  sub_1001F1080();
}

void sub_1001F12A0(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  sub_100691E90(a1);
  if (!v2)
    *a2 = v4;
}

void sub_1001F12C8(uint64_t a1)
{
  sub_100691ED4(a1);
}

void sub_1001F12E0()
{
  sub_1001F12FC();
}

void sub_1001F12FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51[3];

  sub_1000986AC();
  v45 = v5;
  v46 = v4;
  v47 = v6;
  v8 = v7;
  v10 = v9;
  v49 = sub_1000878BC();
  sub_1000B42B0();
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  sub_1000BCEC0();
  v15 = sub_1000BA294(&qword_100BC9F50);
  sub_1000B42B0();
  __chkstk_darwin(v16);
  sub_10004A2E8();
  sub_1000BA294(&qword_100BC4A98);
  sub_1000B42B0();
  __chkstk_darwin(v17);
  sub_1000BEDA4();
  __chkstk_darwin(v18);
  sub_10011DB14();
  v19 = v10;
  v20 = *(_QWORD *)(v10 + 16);
  v48 = v8;
  v21 = *(_QWORD *)(v8 + 16);
  type metadata accessor for LocationCommonViewComponents._Storage(0);
  sub_100094EE4();
  swift_retain();
  sub_1001DD4D4(v20, v21);
  v23 = v22;
  sub_10009880C();
  swift_release(v21);
  if ((v23 & 1) == 0)
    goto LABEL_14;
  v24 = v2;
  v43 = v14;
  v44 = v0;
  v25 = v47;
  sub_1000992EC(v19 + *v47, (uint64_t)v51);
  v26 = sub_1001FB8B0();
  sub_1000C091C(v26, v27);
  v28 = v48;
  v29 = v48 + *v25;
  sub_1000992EC(v29, (uint64_t)&v50);
  v30 = v1 + *(int *)(v15 + 48);
  sub_1000C091C(v3, v1);
  sub_1000C091C(v29, v30);
  v31 = v49;
  v32 = sub_100088FC8(v1, 1, v49);
  if (!v35)
  {
    sub_100037768(v1, v24, &qword_100BC4A98);
    v36 = sub_100088FC8(v30, 1, v31);
    if (!v35)
    {
      v34 = v44;
      sub_1001FB458(v30);
      v38 = sub_100094184(v24, v34);
      sub_10009EFA8(v34);
      sub_10009E47C(v3);
      sub_10009EFA8(v24);
      sub_10009E47C(v1);
      if (!v38)
        goto LABEL_14;
      goto LABEL_12;
    }
    sub_10009ED60(v36, &qword_100BC4A98);
    sub_10003BCC0(v37, type metadata accessor for LocationComponentContainerViewModel);
LABEL_10:
    sub_100094EEC(v33, &qword_100BC9F50);
    goto LABEL_14;
  }
  sub_10009ED60(v32, &qword_100BC4A98);
  v33 = sub_100088FC8(v30, 1, v31);
  if (!v35)
    goto LABEL_10;
  sub_100094EEC(v33, &qword_100BC4A98);
  v34 = v44;
LABEL_12:
  v39 = v46;
  sub_1000BCF30(v19 + *v46, v34);
  v40 = (uint64_t)v43;
  sub_1000BCF30(v28 + *v39, (uint64_t)v43);
  LOBYTE(v39) = sub_10009ECF4();
  sub_100079F9C(v40);
  sub_100079F9C(v34);
  if ((v39 & 1) != 0)
  {
    v41 = v45;
    sub_100086100(v19 + *v45, v34);
    sub_100086100(v28 + *v41, v40);
    sub_10009ECF4();
    sub_10009EFA8(v40);
    sub_10009EFA8(v34);
  }
LABEL_14:
  sub_1001FB384();
  sub_100098640();
}

void sub_1001F15EC()
{
  uint64_t v0;

  sub_10009C0B4();
  sub_100021A14(v0 + OBJC_IVAR____TtCV7Weather13SevereContent8_Storage_map, &qword_100BC4A98);
  sub_100079F9C(v0 + OBJC_IVAR____TtCV7Weather13SevereContent8_Storage_airQuality);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather13SevereContent8_Storage_severeAlert);
  sub_10004A298();
}

uint64_t sub_1001F1644()
{
  return sub_100082C68(sub_1001F15EC);
}

uint64_t sub_1001F1650()
{
  return type metadata accessor for SevereContent._Storage(0);
}

uint64_t type metadata accessor for SevereContent._Storage(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC99E8, (uint64_t)&nominal type descriptor for SevereContent._Storage);
}

uint64_t sub_1001F166C()
{
  char v0;

  sub_1001F12FC();
  return v0 & 1;
}

uint64_t sub_1001F16A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001F16C8(a1, a2, a3, a4, type metadata accessor for SevereContent._Storage, &OBJC_IVAR____TtCV7Weather13SevereContent8_Storage_map, &OBJC_IVAR____TtCV7Weather13SevereContent8_Storage_airQuality, &OBJC_IVAR____TtCV7Weather13SevereContent8_Storage_severeAlert);
}

#error "1001F1794: call analysis failed (funcsize=61)"

void sub_1001F17C4()
{
  uint64_t v0;

  v0 = sub_1000BD2A4();
  type metadata accessor for SevereContent._Storage(v0);
  sub_1001FAF68();
  sub_10004A298();
}

void sub_1001F1800()
{
  sub_1001F17C4();
}

void sub_1001F180C()
{
  sub_1001F1CC8();
}

void sub_1001F1830()
{
  uint64_t v0;

  sub_10009C0B4();
  sub_100021A14(v0 + OBJC_IVAR____TtCV7Weather17SevereNewsContent8_Storage_map, &qword_100BC4A98);
  sub_100079F9C(v0 + OBJC_IVAR____TtCV7Weather17SevereNewsContent8_Storage_airQuality);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather17SevereNewsContent8_Storage_newsArticle);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather17SevereNewsContent8_Storage_severeAlert);
  sub_10004A298();
}

uint64_t sub_1001F1894()
{
  return sub_100082C68(sub_1001F1830);
}

uint64_t sub_1001F18A0()
{
  return type metadata accessor for SevereNewsContent._Storage(0);
}

uint64_t type metadata accessor for SevereNewsContent._Storage(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC9AB0, (uint64_t)&nominal type descriptor for SevereNewsContent._Storage);
}

uint64_t sub_1001F18BC()
{
  char v0;

  sub_1001F1CC8();
  return v0 & 1;
}

#error "1001F19CC: call analysis failed (funcsize=60)"

void sub_1001F1A08()
{
  uint64_t v0;

  v0 = sub_1000BD2A4();
  type metadata accessor for SevereNewsContent._Storage(v0);
  sub_10011DEF0();
  sub_10004A298();
}

void sub_1001F1A4C()
{
  sub_1001F1A08();
}

void sub_1001F1A58()
{
  sub_1001F1CC8();
}

void sub_1001F1A7C()
{
  uint64_t v0;

  sub_10009C0B4();
  sub_100021A14(v0 + OBJC_IVAR____TtCV7Weather19SevereNhpAqiContent8_Storage_map, &qword_100BC4A98);
  sub_100079F9C(v0 + OBJC_IVAR____TtCV7Weather19SevereNhpAqiContent8_Storage_airQuality);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather19SevereNhpAqiContent8_Storage_nextHourPrecipitation);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather19SevereNhpAqiContent8_Storage_severeAlert);
  sub_10004A298();
}

uint64_t sub_1001F1AE0()
{
  return sub_100082C68(sub_1001F1A7C);
}

uint64_t sub_1001F1AEC()
{
  return type metadata accessor for SevereNhpAqiContent._Storage(0);
}

uint64_t type metadata accessor for SevereNhpAqiContent._Storage(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC9B80, (uint64_t)&nominal type descriptor for SevereNhpAqiContent._Storage);
}

uint64_t sub_1001F1B08()
{
  char v0;

  sub_1001F1CC8();
  return v0 & 1;
}

#error "1001F1C18: call analysis failed (funcsize=60)"

void sub_1001F1C54()
{
  uint64_t v0;

  v0 = sub_1000BD2A4();
  type metadata accessor for SevereNhpAqiContent._Storage(v0);
  sub_10011DEF0();
  sub_10004A298();
}

void sub_1001F1C98()
{
  sub_1001F1C54();
}

void sub_1001F1CA4()
{
  sub_1001F1CC8();
}

void sub_1001F1CC8()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  _QWORD *v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  sub_1000986AC();
  v47 = v2;
  v48 = v1;
  v49 = v3;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = sub_1000878BC();
  sub_1000B42B0();
  __chkstk_darwin(v11);
  v50 = (uint64_t)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009D2A4();
  v14 = __chkstk_darwin(v13);
  sub_1001FBB74(v14, v15, v16, v17, v18, v19, v20, v21, (uint64_t)v47);
  v22 = sub_1000BA294(&qword_100BC9F50);
  sub_1000B42B0();
  __chkstk_darwin(v23);
  sub_10004A2E8();
  sub_1000BA294(&qword_100BC4A98);
  sub_1000B42B0();
  __chkstk_darwin(v24);
  v51 = (uint64_t)&v47 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009D2A4();
  __chkstk_darwin(v26);
  v28 = (char *)&v47 - v27;
  type metadata accessor for LocationCommonViewComponents._Storage(0);
  sub_100094EE4();
  swift_retain();
  v29 = sub_1001FB898();
  sub_1001DD4D4(v29, v30);
  v32 = v31;
  sub_10009880C();
  sub_1000C1354();
  if ((v32 & 1) == 0)
    goto LABEL_15;
  v33 = v9 + *v5;
  sub_1000992EC(v33, (uint64_t)&v54);
  sub_1000C091C(v33, (uint64_t)v28);
  v34 = v7 + *v5;
  sub_1000992EC(v34, (uint64_t)&v53);
  v35 = v0 + *(int *)(v22 + 48);
  sub_1000C091C((uint64_t)v28, v0);
  sub_1000C091C(v34, v35);
  sub_100088FC8(v0, 1, v10);
  if (!v39)
  {
    v38 = v51;
    sub_100037768(v0, v51, &qword_100BC4A98);
    sub_100088FC8(v35, 1, v10);
    if (!v39)
    {
      v41 = v35;
      v37 = v52;
      sub_1001FB458(v41);
      v42 = sub_100094184(v38, v37);
      sub_10009EFA8(v37);
      sub_1000987A0((uint64_t)v28);
      sub_10009EFA8(v38);
      sub_1000987A0(v0);
      if (!v42)
        goto LABEL_15;
      goto LABEL_12;
    }
    sub_100021A14((uint64_t)v28, &qword_100BC4A98);
    sub_1000998DC(v40, type metadata accessor for LocationComponentContainerViewModel);
LABEL_10:
    sub_100094EEC(v36, &qword_100BC9F50);
    goto LABEL_15;
  }
  sub_100021A14((uint64_t)v28, &qword_100BC4A98);
  v36 = sub_100088FC8(v35, 1, v10);
  if (!v39)
    goto LABEL_10;
  sub_100094EEC(v36, &qword_100BC4A98);
  v37 = v52;
LABEL_12:
  v43 = v49;
  sub_1000BCF30(v9 + *v49, v37);
  v44 = v50;
  sub_1000BCF30(v7 + *v43, v50);
  LOBYTE(v43) = sub_10009ECF4();
  sub_100079F9C(v44);
  sub_100079F9C(v37);
  if ((v43 & 1) != 0)
  {
    v45 = v48;
    sub_1000BCF30(v9 + *v48, v37);
    sub_1000BCF30(v7 + *v45, v44);
    LOBYTE(v45) = sub_10009ECF4();
    sub_100079F9C(v44);
    sub_100079F9C(v37);
    if ((v45 & 1) != 0)
    {
      v46 = v47;
      sub_100086100(v9 + *v47, v37);
      sub_100086100(v7 + *v46, v44);
      sub_10009ECF4();
      sub_10009EFA8(v44);
      sub_10009EFA8(v37);
    }
  }
LABEL_15:
  sub_1001FB384();
  sub_100098640();
}

void sub_1001F200C()
{
  uint64_t v0;

  sub_10009C0B4();
  sub_100021A14(v0 + OBJC_IVAR____TtCV7Weather16SevereNhpContent8_Storage_map, &qword_100BC4A98);
  sub_100079F9C(v0 + OBJC_IVAR____TtCV7Weather16SevereNhpContent8_Storage_airQuality);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather16SevereNhpContent8_Storage_nextHourPrecipitation);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather16SevereNhpContent8_Storage_severeAlert);
  sub_10004A298();
}

uint64_t sub_1001F2070()
{
  return sub_100082C68(sub_1001F200C);
}

uint64_t sub_1001F207C()
{
  return type metadata accessor for SevereNhpContent._Storage(0);
}

uint64_t type metadata accessor for SevereNhpContent._Storage(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC9C50, (uint64_t)&nominal type descriptor for SevereNhpContent._Storage);
}

uint64_t sub_1001F2098()
{
  char v0;

  sub_1001F1CC8();
  return v0 & 1;
}

#error "1001F21A8: call analysis failed (funcsize=60)"

void sub_1001F21E4()
{
  uint64_t v0;

  v0 = sub_1000BD2A4();
  type metadata accessor for SevereNhpContent._Storage(v0);
  sub_10011DEF0();
  sub_10004A298();
}

void sub_1001F2228()
{
  sub_1001F21E4();
}

void sub_1001F2234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  sub_10009E4F0();
  a23 = v29;
  a24 = v30;
  v32 = v31;
  v34 = v33;
  sub_1001FBC9C();
  v35 = v24 + OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_map;
  v36 = sub_1000878BC();
  _s7Weather24LocationCompositionStateOwst_0(v35, 1, 1, v36);
  *(_QWORD *)(v24 + 16) = v28;
  sub_10009922C(v35, (uint64_t)&a10, 33);
  sub_1001FBB4C(v27, v37, &qword_100BC4A98);
  sub_1000DB75C(v38);
  sub_1000B308C(v26, v24 + OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_airQuality);
  sub_1000B308C(v25, v24 + OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_newsArticle);
  sub_1000B308C(v34, v24 + OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_nextHourPrecipitation);
  sub_1000B308C(v32, v24 + OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_severeAlert);
  sub_10009DE9C();
}

void sub_1001F2304()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  BOOL v27;
  BOOL v28;
  BOOL v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  sub_1000986AC();
  v6 = v5;
  v8 = v7;
  v33 = sub_1000878BC();
  sub_1000B42B0();
  __chkstk_darwin(v9);
  sub_1000BBB38();
  __chkstk_darwin(v10);
  sub_1001FB944();
  v11 = sub_1000BA294(&qword_100BC9F50);
  sub_1000B42B0();
  __chkstk_darwin(v12);
  sub_100094EC4();
  sub_1000BA294(&qword_100BC4A98);
  sub_1000B42B0();
  __chkstk_darwin(v13);
  sub_10009BE6C();
  __chkstk_darwin(v14);
  sub_1000D0024();
  v15 = v8;
  v16 = *(_QWORD *)(v8 + 16);
  v32 = v6;
  v17 = *(_QWORD *)(v6 + 16);
  type metadata accessor for LocationCommonViewComponents._Storage(0);
  sub_100079FA4();
  swift_retain();
  sub_1001DD4D4(v16, v17);
  LOBYTE(v8) = v18;
  sub_100098834();
  swift_release(v17);
  if ((v8 & 1) == 0)
    goto LABEL_16;
  v31 = v1;
  v19 = v15 + OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_map;
  sub_1000992EC(v15 + OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_map, (uint64_t)&v35);
  sub_1000D0580(v19, v4);
  v20 = v32 + OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_map;
  sub_1000992EC(v32 + OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_map, (uint64_t)&v34);
  v21 = v2 + *(int *)(v11 + 48);
  sub_1000D0580(v4, v2);
  sub_1000D0580(v20, v21);
  v22 = sub_100088FC8(v2, 1, v33);
  if (!v25)
  {
    sub_100037768(v2, v0, &qword_100BC4A98);
    v26 = sub_100088FC8(v21, 1, v33);
    if (!v25)
    {
      v24 = v3;
      sub_1000C0CEC(v21, v3);
      v27 = sub_100094184(v0, v3);
      sub_100079F9C(v3);
      sub_1000B3B4C(v4);
      sub_100079F9C(v0);
      sub_1000B3B4C(v2);
      if (!v27)
        goto LABEL_16;
      goto LABEL_12;
    }
    sub_100094EEC(v26, &qword_100BC4A98);
    sub_1000215BC(v0, type metadata accessor for LocationComponentContainerViewModel);
LABEL_10:
    sub_10004A2CC(v23, &qword_100BC9F50);
    goto LABEL_16;
  }
  sub_100094EEC(v22, &qword_100BC4A98);
  v23 = sub_100088FC8(v21, 1, v33);
  if (!v25)
    goto LABEL_10;
  sub_10004A2CC(v23, &qword_100BC4A98);
  v24 = v3;
LABEL_12:
  sub_1000BCF30(v15 + OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_airQuality, v24);
  sub_1000BCF30(v32 + OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_airQuality, v31);
  v28 = sub_1001FB44C();
  sub_100079F9C(v31);
  sub_100079F9C(v24);
  if (v28)
  {
    sub_1000BCF30(v15 + OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_newsArticle, v24);
    sub_1000BCF30(v32 + OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_newsArticle, v31);
    v29 = sub_1001FB44C();
    sub_100079F9C(v31);
    sub_100079F9C(v24);
    if (v29)
    {
      sub_1000BCF30(v15 + OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_nextHourPrecipitation, v24);
      sub_1000BCF30(v32 + OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_nextHourPrecipitation, v31);
      v30 = sub_1001FB44C();
      sub_100079F9C(v31);
      sub_100079F9C(v24);
      if (v30)
      {
        sub_1001FB17C(v15 + OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_severeAlert);
        sub_1000B326C(v32 + OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_severeAlert, v31);
        sub_1001FB44C();
        sub_1000BD95C(v31);
        sub_1000BD95C(v24);
      }
    }
  }
LABEL_16:
  sub_1001FB384();
  sub_100098640();
}

void sub_1001F2674()
{
  uint64_t v0;

  sub_10009C0B4();
  sub_100021A14(v0 + OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_map, &qword_100BC4A98);
  sub_100079F9C(v0 + OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_airQuality);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_newsArticle);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_nextHourPrecipitation);
  sub_1000C247C(OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_severeAlert);
  sub_10004A298();
}

uint64_t sub_1001F26E4()
{
  return sub_100082C68(sub_1001F2674);
}

uint64_t sub_1001F26F0()
{
  return type metadata accessor for SevereNhpNewsContent._Storage(0);
}

uint64_t type metadata accessor for SevereNhpNewsContent._Storage(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC9D20, (uint64_t)&nominal type descriptor for SevereNhpNewsContent._Storage);
}

void sub_1001F270C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[2];
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  sub_1001345CC(319, (unint64_t *)&unk_100BC6DB8, type metadata accessor for LocationComponentContainerViewModel);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for LocationComponentContainerViewModel(319);
    if (v5 <= 0x3F)
    {
      v7 = *(_QWORD *)(v4 - 8) + 64;
      v8 = v7;
      v9 = v7;
      v10 = v7;
      swift_updateClassMetadata2(a1, 256, 6, v6, a1 + 80);
    }
  }
}

uint64_t sub_1001F27B8()
{
  char v0;

  sub_1001F2304();
  return v0 & 1;
}

#error "1001F28F0: call analysis failed (funcsize=83)"

void sub_1001F2930()
{
  uint64_t v0;

  v0 = sub_1000BD2A4();
  type metadata accessor for SevereNhpNewsContent._Storage(v0);
  sub_1000C1A00();
  sub_1001F2304();
  sub_10004A298();
}

void sub_1001F2958()
{
  sub_1001F2930();
}

#error "1001F2AC4: call analysis failed (funcsize=87)"

void sub_1001F2AD4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  char v89;
  uint64_t v90;
  uint64_t *v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  char v100;
  char v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  char v116;
  uint64_t v117;
  uint64_t v118;
  void (*v119)(uint64_t, uint64_t, uint64_t);
  uint64_t v120;
  void (*v121)(uint64_t);
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t *v129;
  uint64_t v130;
  uint64_t *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;

  sub_1000986AC();
  v142 = v6;
  v8 = v7;
  v132 = sub_1000C1340();
  v126 = *(_QWORD *)(v132 - 8);
  sub_10009D98C();
  __chkstk_darwin(v9);
  sub_1000986FC();
  v136 = v10;
  sub_10009D2A4();
  __chkstk_darwin(v11);
  sub_100079F7C();
  v135 = sub_1001FB888(v12);
  sub_1000B42B0();
  __chkstk_darwin(v13);
  sub_100088FDC();
  sub_10009511C(v14);
  v133 = sub_1000BA294(&qword_100BCA048);
  sub_1000B42B0();
  __chkstk_darwin(v15);
  sub_100088FDC();
  sub_10009511C(v16);
  sub_1000BA294(&qword_100BC68A0);
  sub_1000B42B0();
  __chkstk_darwin(v17);
  sub_1000986FC();
  v131 = (uint64_t *)v18;
  sub_10009D2A4();
  v20 = __chkstk_darwin(v19);
  sub_1001FB430(v20, v21, v22, v23, v24, v25, v26, v27, v123);
  sub_1000B42B0();
  __chkstk_darwin(v28);
  sub_1000986FC();
  v139 = v29;
  sub_10009D2A4();
  __chkstk_darwin(v30);
  sub_100079F7C();
  v138 = v31;
  v141 = sub_10009CBFC();
  sub_1000B42B0();
  __chkstk_darwin(v32);
  v130 = (uint64_t)&v123 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009D2A4();
  __chkstk_darwin(v34);
  sub_100079F7C();
  sub_10009511C(v35);
  v140 = sub_1000BA294(&qword_100BCA050);
  sub_1000B42B0();
  __chkstk_darwin(v36);
  sub_1000986FC();
  v128 = v37;
  sub_10009D2A4();
  __chkstk_darwin(v38);
  sub_1001FB600();
  sub_1000BA294(&qword_100BC68B8);
  sub_1000B42B0();
  __chkstk_darwin(v39);
  sub_1000DB210();
  v41 = __chkstk_darwin(v40);
  v43 = (char *)&v123 - v42;
  __chkstk_darwin(v41);
  sub_1000C0CF4();
  __chkstk_darwin(v44);
  sub_10009C838();
  type metadata accessor for TemperatureAveragesHeroChartViewModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v45);
  sub_1000BBB38();
  __chkstk_darwin(v46);
  sub_1001FB944();
  sub_1000BCF30(v8 + OBJC_IVAR____TtCV7Weather34TemperatureAveragesDetailViewModel8_Storage_heroChart, (uint64_t)v2);
  sub_1000BCF30(v142 + OBJC_IVAR____TtCV7Weather34TemperatureAveragesDetailViewModel8_Storage_heroChart, (uint64_t)v0);
  v47 = sub_1001A6AC8(v2, v0);
  sub_100079F9C((uint64_t)v0);
  sub_100079F9C((uint64_t)v2);
  if ((v47 & 1) == 0)
    goto LABEL_37;
  v48 = v3;
  v125 = v43;
  v124 = v5;
  v49 = v8;
  sub_1000992EC(v8 + OBJC_IVAR____TtCV7Weather34TemperatureAveragesDetailViewModel8_Storage_summaryPlatterViewModel, (uint64_t)&v148);
  v50 = sub_1001FB7E8();
  sub_1000BCF38(v50, v51);
  v52 = v142;
  v53 = v142 + OBJC_IVAR____TtCV7Weather34TemperatureAveragesDetailViewModel8_Storage_summaryPlatterViewModel;
  sub_1000992EC(v142 + OBJC_IVAR____TtCV7Weather34TemperatureAveragesDetailViewModel8_Storage_summaryPlatterViewModel, (uint64_t)&v147);
  v54 = v140;
  v55 = v4 + *(int *)(v140 + 48);
  sub_1000BCF38(v1, v4);
  sub_1000BCF38(v53, v55);
  v56 = sub_100099354();
  v57 = v141;
  v59 = sub_100088FC8(v56, v58, v141);
  if (v61)
  {
    sub_10004A2CC(v59, &qword_100BC68B8);
    v60 = sub_100088FC8(v55, 1, v57);
    if (v61)
    {
      sub_1000992DC(v60, &qword_100BC68B8);
      goto LABEL_13;
    }
LABEL_10:
    v64 = &qword_100BCA050;
    v65 = v4;
LABEL_11:
    sub_100021A14(v65, v64);
    goto LABEL_37;
  }
  sub_100037768(v4, v48, &qword_100BC68B8);
  v62 = sub_100088FC8(v55, 1, v57);
  if (v61)
  {
    sub_10004A2CC(v62, &qword_100BC68B8);
    sub_1000998DC(v63, type metadata accessor for ConditionDetailPlatterViewModel);
    goto LABEL_10;
  }
  sub_1001FB878();
  sub_10007802C(v66, v67, type metadata accessor for ConditionDetailPlatterViewModel);
  sub_1008B5D2C(v48, v53);
  v69 = v68;
  sub_10009EFA8(v53);
  sub_10009E47C(v1);
  sub_10009EFA8(v48);
  sub_10009E47C(v4);
  if ((v69 & 1) == 0)
    goto LABEL_37;
LABEL_13:
  v70 = v138;
  sub_1000BCF30(v49 + OBJC_IVAR____TtCV7Weather34TemperatureAveragesDetailViewModel8_Storage_averagesChart, v138);
  v71 = v139;
  sub_1000BCF30(v52 + OBJC_IVAR____TtCV7Weather34TemperatureAveragesDetailViewModel8_Storage_averagesChart, v139);
  v72 = sub_1000987A8();
  v74 = sub_1002B71F4(v72, v73);
  sub_100079F9C(v71);
  sub_100079F9C(v70);
  if ((v74 & 1) == 0)
    goto LABEL_37;
  v75 = v52;
  v76 = v54;
  v77 = v49;
  sub_1000992EC(v49 + OBJC_IVAR____TtCV7Weather34TemperatureAveragesDetailViewModel8_Storage_newsViewModel, (uint64_t)&v146);
  v78 = sub_1001FBCFC();
  sub_1000BCF38(v78, v79);
  v80 = v75 + OBJC_IVAR____TtCV7Weather34TemperatureAveragesDetailViewModel8_Storage_newsViewModel;
  sub_1000992EC(v75 + OBJC_IVAR____TtCV7Weather34TemperatureAveragesDetailViewModel8_Storage_newsViewModel, (uint64_t)&v145);
  v81 = v134;
  v82 = (uint64_t)v134 + *(int *)(v133 + 48);
  sub_1000BCF38(v49, (uint64_t)v134);
  sub_1000BCF38(v80, v82);
  v83 = v135;
  v84 = sub_100088FC8((uint64_t)v81, 1, v135);
  if (v61)
  {
    sub_100094EEC(v84, &qword_100BC68A0);
    sub_100088FC8(v82, 1, v83);
    v85 = v132;
    v86 = v136;
    v87 = (uint64_t)v125;
    if (v61)
    {
      sub_100021A14((uint64_t)v81, &qword_100BC68A0);
      goto LABEL_24;
    }
    goto LABEL_22;
  }
  v88 = v131;
  sub_100037768((uint64_t)v81, (uint64_t)v131, &qword_100BC68A0);
  sub_100088FC8(v82, 1, v83);
  v85 = v132;
  v86 = v136;
  v87 = (uint64_t)v125;
  if (v89)
  {
    sub_100021A14(v137, &qword_100BC68A0);
    sub_1000215BC((uint64_t)v88, type metadata accessor for DetailComponentContainerViewModel);
LABEL_22:
    v64 = &qword_100BCA048;
    v65 = (uint64_t)v81;
    goto LABEL_11;
  }
  v90 = v82;
  v91 = v129;
  sub_1000C0CEC(v90, (uint64_t)v129);
  v92 = sub_10035CD60(v88, v91);
  sub_100079F9C((uint64_t)v91);
  v93 = (uint64_t)v81;
  v81 = &qword_100BC68A0;
  sub_10009E47C(v137);
  sub_100079F9C((uint64_t)v88);
  sub_10009E47C(v93);
  if ((v92 & 1) == 0)
    goto LABEL_37;
LABEL_24:
  v94 = v77;
  sub_1001FB878();
  sub_1000BCF30(v95, v96);
  v97 = v142;
  v98 = v130;
  sub_1000BCF30(v142 + OBJC_IVAR____TtCV7Weather34TemperatureAveragesDetailViewModel8_Storage_aboutNormalRangePlatterViewModel, v130);
  sub_1001FBBD8();
  v100 = v99;
  sub_100079F9C(v98);
  sub_100079F9C((uint64_t)v81);
  if ((v100 & 1) == 0)
    goto LABEL_37;
  sub_1000BCF30(v94 + OBJC_IVAR____TtCV7Weather34TemperatureAveragesDetailViewModel8_Storage_aboutAverageTemperaturePlatterViewModel, (uint64_t)v81);
  sub_1000BCF30(v97 + OBJC_IVAR____TtCV7Weather34TemperatureAveragesDetailViewModel8_Storage_aboutAverageTemperaturePlatterViewModel, v98);
  sub_1001FBBD8();
  v102 = v101;
  sub_100079F9C(v98);
  sub_100079F9C((uint64_t)v81);
  if ((v102 & 1) == 0)
    goto LABEL_37;
  v103 = v94 + OBJC_IVAR____TtCV7Weather34TemperatureAveragesDetailViewModel8_Storage_historicalFactsPlatterViewModel;
  sub_1000992EC(v94 + OBJC_IVAR____TtCV7Weather34TemperatureAveragesDetailViewModel8_Storage_historicalFactsPlatterViewModel, (uint64_t)&v144);
  sub_1000BCF38(v103, v87);
  v104 = v97 + OBJC_IVAR____TtCV7Weather34TemperatureAveragesDetailViewModel8_Storage_historicalFactsPlatterViewModel;
  sub_1000992EC(v97 + OBJC_IVAR____TtCV7Weather34TemperatureAveragesDetailViewModel8_Storage_historicalFactsPlatterViewModel, (uint64_t)&v143);
  v105 = v128;
  v106 = v128 + *(int *)(v76 + 48);
  sub_1000BCF38(v87, v128);
  sub_1000BCF38(v104, v106);
  v107 = v141;
  v108 = sub_100088FC8(v105, 1, v141);
  if (v61)
  {
    sub_100094EEC(v108, &qword_100BC68B8);
    v109 = sub_100088FC8(v106, 1, v107);
    if (v61)
    {
      sub_10009ED60(v109, &qword_100BC68B8);
LABEL_36:
      v117 = v94 + OBJC_IVAR____TtCV7Weather34TemperatureAveragesDetailViewModel8_Storage_viewEntity;
      v118 = v126;
      v119 = *(void (**)(uint64_t, uint64_t, uint64_t))(v126 + 16);
      v120 = v127;
      v119(v127, v117, v85);
      v119(v86, v142 + OBJC_IVAR____TtCV7Weather34TemperatureAveragesDetailViewModel8_Storage_viewEntity, v85);
      static LocationDetailEntity.== infix(_:_:)(v120, v86);
      v121 = *(void (**)(uint64_t))(v118 + 8);
      sub_1000DD7B4(v86);
      v122 = sub_1001FB954();
      v121(v122);
      goto LABEL_37;
    }
    goto LABEL_34;
  }
  v110 = v124;
  sub_100037768(v105, v124, &qword_100BC68B8);
  v112 = sub_100088FC8(v106, 1, v107);
  if (v111)
  {
    sub_100094EEC(v112, &qword_100BC68B8);
    sub_1000215BC(v110, type metadata accessor for ConditionDetailPlatterViewModel);
LABEL_34:
    v64 = &qword_100BCA050;
    v65 = v105;
    goto LABEL_11;
  }
  sub_1001FB878();
  sub_1001FB2A4(v113, v114);
  sub_1008B5D2C(v110, v110);
  v116 = v115;
  sub_100079FB4(v110);
  sub_10009E47C(v87);
  sub_100079FB4(v110);
  sub_10009E47C(v105);
  if ((v116 & 1) != 0)
    goto LABEL_36;
LABEL_37:
  sub_1001FB384();
  sub_100098640();
}

void sub_1001F3370()
{
  uint64_t v0;
  uint64_t v1;

  sub_1000215BC(v0 + OBJC_IVAR____TtCV7Weather34TemperatureAveragesDetailViewModel8_Storage_heroChart, type metadata accessor for TemperatureAveragesHeroChartViewModel);
  sub_100075DD0(v0 + OBJC_IVAR____TtCV7Weather34TemperatureAveragesDetailViewModel8_Storage_summaryPlatterViewModel);
  sub_1000215BC(v0 + OBJC_IVAR____TtCV7Weather34TemperatureAveragesDetailViewModel8_Storage_averagesChart, type metadata accessor for MonthlyAveragesChartModel);
  sub_100021A14(v0 + OBJC_IVAR____TtCV7Weather34TemperatureAveragesDetailViewModel8_Storage_newsViewModel, &qword_100BC68A0);
  sub_1000B3B44(v0 + OBJC_IVAR____TtCV7Weather34TemperatureAveragesDetailViewModel8_Storage_aboutNormalRangePlatterViewModel);
  sub_1000B3B44(v0 + OBJC_IVAR____TtCV7Weather34TemperatureAveragesDetailViewModel8_Storage_aboutAverageTemperaturePlatterViewModel);
  sub_100075DD0(v0 + OBJC_IVAR____TtCV7Weather34TemperatureAveragesDetailViewModel8_Storage_historicalFactsPlatterViewModel);
  v1 = sub_1000C1340();
  sub_10003BC44(v1);
  sub_100079F70();
}

uint64_t sub_1001F3438()
{
  return sub_100082C68(sub_1001F3370);
}

uint64_t sub_1001F3444()
{
  return type metadata accessor for TemperatureAveragesDetailViewModel._Storage(0);
}

uint64_t type metadata accessor for TemperatureAveragesDetailViewModel._Storage(uint64_t a1)
{
  return sub_100098190(a1, qword_100BC9DF8, (uint64_t)&nominal type descriptor for TemperatureAveragesDetailViewModel._Storage);
}

void sub_1001F3460(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD v15[4];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = type metadata accessor for TemperatureAveragesHeroChartViewModel(319);
  if (v3 <= 0x3F)
  {
    v15[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1001345CC(319, (unint64_t *)&qword_100BC9748, type metadata accessor for ConditionDetailPlatterViewModel);
    if (v5 <= 0x3F)
    {
      v6 = *(_QWORD *)(v4 - 8) + 64;
      v15[1] = v6;
      v7 = type metadata accessor for MonthlyAveragesChartModel(319);
      if (v8 <= 0x3F)
      {
        v15[2] = *(_QWORD *)(v7 - 8) + 64;
        sub_1001345CC(319, (unint64_t *)&qword_100BC9750, type metadata accessor for DetailComponentContainerViewModel);
        if (v10 <= 0x3F)
        {
          v15[3] = *(_QWORD *)(v9 - 8) + 64;
          v11 = type metadata accessor for ConditionDetailPlatterViewModel(319);
          if (v12 <= 0x3F)
          {
            v16 = *(_QWORD *)(v11 - 8) + 64;
            v17 = v16;
            v18 = v6;
            v13 = type metadata accessor for LocationDetailEntity(319);
            if (v14 <= 0x3F)
            {
              v19 = *(_QWORD *)(v13 - 8) + 64;
              swift_updateClassMetadata2(a1, 256, 8, v15, a1 + 80);
            }
          }
        }
      }
    }
  }
}

void type metadata accessor for LocationCommonConfigurationComponents()
{
  sub_100098884();
}

void type metadata accessor for LocationCommonViewComponents()
{
  sub_100098884();
}

uint64_t sub_1001F3590()
{
  char v0;

  sub_1001F2AD4();
  return v0 & 1;
}

void sub_1001F35B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t (*v28)(_QWORD);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  sub_1000986AC();
  v45 = v4;
  v46 = v5;
  v48 = v7;
  v49 = v6;
  v50 = v9;
  v51 = v8;
  v52 = v10;
  v12 = v11;
  v42 = v11;
  v47 = sub_1000C1340();
  v44 = *(_QWORD *)(v47 - 8);
  sub_10009D98C();
  __chkstk_darwin(v13);
  v15 = sub_1001FB610(v14, (uint64_t)v37);
  type metadata accessor for ConditionDetailPlatterViewModel(v15);
  sub_1000B42B0();
  __chkstk_darwin(v16);
  v41 = (uint64_t)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009D2A4();
  __chkstk_darwin(v18);
  sub_1001FB944();
  v38 = v2;
  sub_1000BF070();
  sub_1000B42B0();
  __chkstk_darwin(v19);
  sub_100094EC4();
  v39 = v1;
  type metadata accessor for MonthlyAveragesChartModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v20);
  sub_100099864();
  v40 = v0;
  sub_1000BA294(&qword_100BC68B8);
  sub_1000B42B0();
  v22 = __chkstk_darwin(v21);
  v24 = (char *)&v37 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = v24;
  __chkstk_darwin(v22);
  v26 = (char *)&v37 - v25;
  type metadata accessor for TemperatureAveragesHeroChartViewModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v27);
  sub_100099234();
  sub_100080C0C(v12, v3, v28);
  sub_1001098C0(v52, (uint64_t)v26);
  sub_100080C0C(v51, v0, type metadata accessor for MonthlyAveragesChartModel);
  sub_1001FBBE4(v50);
  sub_1000BCF30(v49, v2);
  v29 = v45;
  v30 = v41;
  sub_1000BCF30(v45, v41);
  v31 = v48;
  sub_1001098C0(v48, (uint64_t)v24);
  v32 = v43;
  v33 = v44;
  v35 = v46;
  v34 = v47;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16))(v43, v46, v47);
  v36 = type metadata accessor for TemperatureAveragesDetailViewModel._Storage(0);
  sub_1000860C4(v36);
  sub_1001F2964(v3, v26, v40, v39, v38, v30, v37, v32);
  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v35, v34);
  sub_100075DD0(v31);
  sub_1000B3B44(v29);
  sub_1000B3B44(v49);
  sub_100021A14(v50, &qword_100BC68A0);
  sub_1000215BC(v51, type metadata accessor for MonthlyAveragesChartModel);
  sub_100075DD0(v52);
  sub_1000215BC(v42, type metadata accessor for TemperatureAveragesHeroChartViewModel);
  sub_1001FB8A4();
  sub_100098640();
}

void sub_1001F3834()
{
  uint64_t v0;

  v0 = sub_1000BD2A4();
  type metadata accessor for TemperatureAveragesDetailViewModel._Storage(v0);
  sub_1000C1A00();
  sub_1001F2AD4();
  sub_10004A298();
}

void sub_1001F385C()
{
  sub_1001F3834();
}

void sub_1001F3868()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  void (*v53)(uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  sub_1000986AC();
  v5 = sub_1000BD2A4();
  v6 = type metadata accessor for Elevation(v5);
  sub_1000AE898();
  __chkstk_darwin(v7);
  sub_1000DA474(v8, v57);
  __chkstk_darwin(v9);
  v11 = (char *)&v57 - v10;
  v12 = sub_100098778();
  v69 = *(_QWORD *)(v12 - 8);
  v70 = v12;
  sub_10009D98C();
  __chkstk_darwin(v13);
  sub_1000AE8A8(v14, v57);
  sub_1000BA294(&qword_100BCA150);
  sub_1000B42B0();
  __chkstk_darwin(v15);
  sub_1000C24A0();
  __chkstk_darwin(v16);
  sub_1000B2FD8();
  if (v1 == v0)
  {
    v67 = 1;
LABEL_35:
    sub_100098640();
    return;
  }
  if (*(_QWORD *)(v1 + 16) != *(_QWORD *)(v0 + 16))
  {
LABEL_34:
    v67 = 0;
    goto LABEL_35;
  }
  v62 = v2;
  v63 = v0;
  v66 = 0;
  v61 = v1;
  sub_100075DD8();
  v19 = v18 & v17;
  sub_1001FB2B8();
  v59 = v1 + 64;
  v60 = v20;
  v58 = v20 - 1;
  while (1)
  {
    if (v19)
    {
      sub_1001FBBB0();
      v22 = v21 | (v66 << 6);
LABEL_6:
      v23 = v61;
      sub_1001FBA20();
      v24(v2);
      v25 = *(_QWORD *)(v23 + 56) + *(_QWORD *)(v3 + 72) * v22;
      v26 = sub_1001FB504();
      sub_1000C5B18(v2 + *(int *)(v26 + 48), v25, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
      sub_10009C7F0(v2, 0);
      goto LABEL_25;
    }
    v27 = v66 + 1;
    if (__OFADD__(v66, 1))
    {
      __break(1u);
      goto LABEL_37;
    }
    if (v27 < v60)
    {
      v28 = *(_QWORD *)(v59 + 8 * v27);
      if (v28)
        goto LABEL_10;
      v29 = v66 + 2;
      ++v66;
      if (v27 + 1 < v60)
      {
        v28 = *(_QWORD *)(v59 + 8 * v29);
        if (v28)
          goto LABEL_13;
        v66 = v27 + 1;
        if (v27 + 2 < v60)
        {
          v28 = *(_QWORD *)(v59 + 8 * (v27 + 2));
          if (v28)
          {
            v27 += 2;
            goto LABEL_10;
          }
          v29 = v27 + 3;
          v66 = v27 + 2;
          if (v27 + 3 < v60)
            break;
        }
      }
    }
LABEL_24:
    v30 = sub_1001FB504();
    sub_10009D34C(v2, v31, v32, v30);
    v19 = 0;
LABEL_25:
    sub_1000787D4(v2, v4, &qword_100BCA150);
    v33 = sub_1001FB504();
    sub_100088FC8(v4, 1, v33);
    if (v34)
      v35 = 1;
    else
      v35 = 0;
    v67 = v35;
    if (v34)
      goto LABEL_35;
    v68 = v19;
    v36 = v4 + *(int *)(v33 + 48);
    v38 = v69;
    v37 = v70;
    v39 = v3;
    v40 = v65;
    v41 = v4;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v69 + 32))(v65, v4, v70);
    sub_1000C5B18((uint64_t)v11, v36, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v39 + 32));
    v42 = v63;
    sub_10016C6BC();
    v43 = (uint64_t)v11;
    v45 = v44;
    v47 = v46;
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v40, v37);
    if ((v47 & 1) == 0)
    {
      v55 = sub_100079FDC();
      v56(v55);
      goto LABEL_34;
    }
    v48 = *(_QWORD *)(v42 + 56) + *(_QWORD *)(v39 + 72) * v45;
    v49 = v64;
    sub_1000C5B18(v64, v48, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v39 + 16));
    sub_10005329C(&qword_100BCA160, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Elevation, (uint64_t)&protocol conformance descriptor for Elevation);
    v52 = sub_1001FBB24(v49, v43, v51, v50);
    v53 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
    v53(v49, v6);
    v54 = sub_100079FDC();
    ((void (*)(uint64_t))v53)(v54);
    v11 = (char *)v43;
    v3 = v39;
    v2 = v62;
    v4 = v41;
    v19 = v68;
    if ((v52 & 1) == 0)
      goto LABEL_35;
  }
  v28 = *(_QWORD *)(v59 + 8 * v29);
  if (v28)
  {
LABEL_13:
    v27 = v29;
LABEL_10:
    v19 = (v28 - 1) & v28;
    v22 = __clz(__rbit64(v28)) + (v27 << 6);
    v66 = v27;
    goto LABEL_6;
  }
  while (!__OFADD__(v29, 1))
  {
    if (v29 + 1 >= v60)
    {
      v66 = v58;
      goto LABEL_24;
    }
    sub_1000DE250();
    if (v28)
      goto LABEL_10;
  }
LABEL_37:
  __break(1u);
}

void sub_1001F3C08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t *v24;
  uint64_t v25;
  BOOL v26;

  sub_10008900C();
  if (v2 == v3 || (sub_1001FB0A0(), !v26))
  {
LABEL_27:
    sub_10009D300();
    return;
  }
  v4 = 0;
  v5 = v0 + 64;
  sub_100075DD8();
  v8 = v7 & v6;
  v10 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v12 = v11 | (v4 << 6);
      goto LABEL_21;
    }
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v13 >= v10)
      goto LABEL_27;
    ++v4;
    if (!*(_QWORD *)(v5 + 8 * v13))
    {
      v4 = v13 + 1;
      if (v13 + 1 >= v10)
        goto LABEL_27;
      if (!*(_QWORD *)(v5 + 8 * v4))
      {
        v4 = v13 + 2;
        if (v13 + 2 >= v10)
          goto LABEL_27;
        if (!*(_QWORD *)(v5 + 8 * v4))
          break;
      }
    }
LABEL_20:
    sub_1000DF470();
    v8 = v16 & v15;
    v12 = v17 + (v4 << 6);
LABEL_21:
    v18 = *(double *)(*(_QWORD *)(v0 + 48) + 8 * v12);
    v19 = (uint64_t *)(*(_QWORD *)(v0 + 56) + 16 * v12);
    v20 = *v19;
    v21 = v19[1];
    v22 = sub_10016C720(v18);
    if ((v23 & 1) != 0)
    {
      v24 = (uint64_t *)(*(_QWORD *)(v1 + 56) + 16 * v22);
      v25 = v24[1];
      v26 = *v24 == v20 && v25 == v21;
      if (v26 || (sub_100099264(*v24, v25, v20, v21) & 1) != 0)
        continue;
    }
    goto LABEL_27;
  }
  v14 = v13 + 3;
  if (v14 >= v10)
    goto LABEL_27;
  if (*(_QWORD *)(v5 + 8 * v14))
  {
    v4 = v14;
    goto LABEL_20;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v10)
      goto LABEL_27;
    ++v14;
    if (*(_QWORD *)(v5 + 8 * v4))
      goto LABEL_20;
  }
LABEL_29:
  __break(1u);
}

void sub_1001F3D4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  void (*v17)(uint64_t);
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  void (*v38)(uint64_t);
  uint64_t *v39;
  uint64_t v40;
  BOOL v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  sub_1000986AC();
  v3 = v2;
  v5 = v4;
  v6 = sub_100098778();
  v50 = *(_QWORD *)(v6 - 8);
  v51 = v6;
  sub_10009D98C();
  __chkstk_darwin(v7);
  sub_1000AE8A8(v8, v43);
  sub_1000BA294(&qword_100BCA140);
  sub_1000B42B0();
  __chkstk_darwin(v9);
  sub_1000BBB38();
  __chkstk_darwin(v10);
  sub_10011DB14();
  if (v5 == v3 || (sub_1001FB3F8(), !v41))
  {
LABEL_37:
    sub_100098640();
    return;
  }
  v49 = 0;
  v47 = v5;
  sub_1000951A8();
  v13 = v12 & v11;
  sub_1001FB2B8();
  v45 = v5 + 64;
  v46 = v14;
  v44 = v14 - 1;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v49 << 6);
LABEL_7:
      sub_1001FBA20();
      v17(v0);
      v18 = (uint64_t *)(*(_QWORD *)(v47 + 56) + 16 * v16);
      v19 = *v18;
      v20 = v18[1];
      v21 = sub_1000878AC();
      v22 = (_QWORD *)(v0 + *(int *)(v21 + 48));
      *v22 = v19;
      v22[1] = v20;
      sub_100098974(v0, v23, v24, v21);
      sub_10003BCC8();
      goto LABEL_26;
    }
    v25 = v49 + 1;
    if (__OFADD__(v49, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v25 < v46)
    {
      v26 = *(_QWORD *)(v45 + 8 * v25);
      if (v26)
        goto LABEL_11;
      v27 = v49 + 2;
      ++v49;
      if (v25 + 1 < v46)
      {
        v26 = *(_QWORD *)(v45 + 8 * v27);
        if (v26)
          goto LABEL_14;
        v49 = v25 + 1;
        if (v25 + 2 < v46)
        {
          v26 = *(_QWORD *)(v45 + 8 * (v25 + 2));
          if (v26)
          {
            v25 += 2;
            goto LABEL_11;
          }
          v27 = v25 + 3;
          v49 = v25 + 2;
          if (v25 + 3 < v46)
            break;
        }
      }
    }
LABEL_25:
    v28 = sub_1000878AC();
    _s7Weather24LocationCompositionStateOwst_0(v0, 1, 1, v28);
    v13 = 0;
LABEL_26:
    sub_1000787D4(v0, v1, &qword_100BCA140);
    v29 = sub_1000878AC();
    sub_100088FC8(v1, 1, v29);
    if (v41)
      goto LABEL_37;
    v30 = (uint64_t *)(v1 + *(int *)(v29 + 48));
    v31 = v1;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 32))(v48, v1, v51);
    v32 = *v30;
    v33 = v30[1];
    sub_10016C6BC();
    v35 = v34;
    LOBYTE(v30) = v36;
    v37 = sub_1000E7BB8();
    v38(v37);
    if ((v30 & 1) == 0)
    {
      sub_100098738();
      goto LABEL_37;
    }
    v39 = (uint64_t *)(*(_QWORD *)(v3 + 56) + 16 * v35);
    v40 = v39[1];
    v41 = *v39 == v32 && v40 == v33;
    if (v41)
    {
      sub_100098738();
      v1 = v31;
    }
    else
    {
      v42 = sub_100099264(*v39, v40, v32, v33);
      sub_100098738();
      v1 = v31;
      if ((v42 & 1) == 0)
        goto LABEL_37;
    }
  }
  v26 = *(_QWORD *)(v45 + 8 * v27);
  if (v26)
  {
LABEL_14:
    v25 = v27;
LABEL_11:
    v13 = (v26 - 1) & v26;
    v16 = __clz(__rbit64(v26)) + (v25 << 6);
    v49 = v25;
    goto LABEL_7;
  }
  while (!__OFADD__(v27, 1))
  {
    if (v27 + 1 >= v46)
    {
      v49 = v44;
      goto LABEL_25;
    }
    sub_1000DE250();
    if (v26)
      goto LABEL_11;
  }
LABEL_39:
  __break(1u);
}

void sub_1001F4070()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t *v48;
  char v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  void (*v74)(uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;

  sub_1000986AC();
  v7 = sub_1001FB8E8();
  v8 = type metadata accessor for Locale(v7);
  sub_1000BD980();
  __chkstk_darwin(v9);
  sub_10009D384(v10, v77);
  sub_1000BA294(&qword_100BC3340);
  sub_1000B42B0();
  __chkstk_darwin(v11);
  sub_1000BD964(v12, v78);
  v85 = sub_1000BA294(&qword_100BCA0E0);
  sub_1000B42B0();
  __chkstk_darwin(v13);
  sub_100088FDC();
  v87 = v14;
  v15 = sub_10009876C();
  v88 = type metadata accessor for WeatherData(v15);
  v94 = *(_QWORD *)(v88 - 8);
  sub_10009D98C();
  __chkstk_darwin(v16);
  sub_10003BC68();
  __chkstk_darwin(v17);
  sub_1000B3B34();
  __chkstk_darwin(v18);
  sub_1000C0CF4();
  __chkstk_darwin(v19);
  sub_100079F7C();
  v93 = v20;
  sub_1000BA294(&qword_100BCA0E8);
  sub_1000B42B0();
  __chkstk_darwin(v21);
  sub_1000C0CD0();
  __chkstk_darwin(v22);
  sub_1001FBB88();
  if (v55 || (sub_1001FB3F8(), !v55))
  {
LABEL_47:
    sub_100098640();
    return;
  }
  v80 = v2;
  v92 = 0;
  v89 = v0;
  v90 = v1;
  v81 = v8;
  v82 = v0 + 64;
  sub_10009DFD4();
  v25 = v24 & v23;
  sub_1001FB2B8();
  v86 = v26;
  v79 = v26 - 1;
  v91 = v5;
  v27 = v93;
  while (v25)
  {
    sub_1001FBC80();
    v29 = v28 | (v92 << 6);
LABEL_7:
    v30 = (uint64_t *)(*(_QWORD *)(v89 + 48) + 16 * v29);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(v89 + 56) + *(_QWORD *)(v94 + 72) * v29;
    v34 = sub_100099328();
    sub_100080C0C(v33, (uint64_t)v4 + *(int *)(v34 + 48), type metadata accessor for WeatherData);
    *v4 = v32;
    v4[1] = v31;
    sub_10009ED08((uint64_t)v4, 0, 1, v34);
    v27 = v93;
LABEL_25:
    sub_1000787D4((uint64_t)v4, v6, &qword_100BCA0E8);
    v42 = sub_100099328();
    v43 = sub_100099354();
    sub_100088FC8(v43, v44, v42);
    if (v55)
      goto LABEL_47;
    v45 = v3;
    sub_1001FB980(v6 + *(int *)(v42 + 48), v27);
    v46 = sub_1001FB8B0();
    v47 = sub_1000991C8(v46);
    v48 = (uint64_t *)v27;
    v50 = v49;
    sub_100098738();
    if ((v50 & 1) == 0)
      goto LABEL_46;
    v52 = (uint64_t)v91;
    sub_1000ED244(*(_QWORD *)(v90 + 56) + *(_QWORD *)(v94 + 72) * v47, (uint64_t)v91);
    v53 = v91[1];
    v54 = v48[1];
    v55 = *v91 == *v48 && v53 == v54;
    v27 = (uint64_t)v48;
    if (v55 || (sub_100099264(*v91, v53, *v48, v54) & 1) != 0)
    {
      sub_1000C1CF4((uint64_t)v91);
      sub_1000C1CF4((uint64_t)v48);
      v3 = v45;
    }
    else
    {
      v56 = *(int *)(v88 + 20);
      v57 = (char *)v48 + v56;
      v58 = v87 + *(int *)(v85 + 48);
      sub_1001FB128((uint64_t)v91 + v56, v87);
      v59 = (uint64_t)v57;
      v60 = v87;
      sub_1001FB128(v59, v58);
      v61 = sub_1000BCF40();
      sub_100088FC8(v61, v62, v81);
      if (v55)
      {
        sub_100088FC8(v58, 1, v81);
        if (!v55)
          goto LABEL_44;
        sub_100021A14(v87, &qword_100BC3340);
        v63 = sub_1001FBA10();
        sub_1000ED244(v63, v64);
        v65 = v93;
        v3 = v45;
        sub_1000ED244(v93, v45);
      }
      else
      {
        sub_1001FB128(v87, v84);
        sub_100088FC8(v58, 1, v81);
        if (v66)
        {
          v73 = sub_1001FB954();
          v74(v73);
          v60 = v87;
LABEL_44:
          sub_100021A14(v60, &qword_100BCA0E0);
          v75 = sub_1001FBA10();
          sub_1000BCF30(v75, v76);
          v3 = v45;
          sub_1000BCF30(v93, v45);
LABEL_45:
          sub_100079F9C(v60);
          sub_100079F9C(v3);
          sub_100079F9C(v52);
LABEL_46:
          sub_1000998DC(v51, type metadata accessor for WeatherData);
          goto LABEL_47;
        }
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v80 + 32))(v83, v58, v81);
        sub_10005329C(&qword_100BCA0F8, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Locale, (uint64_t)&protocol conformance descriptor for Locale);
        v69 = sub_1000C6D70(v84, v83, v68, v67);
        v60 = *(_QWORD *)(v80 + 8);
        sub_1000BE8BC(v84);
        v52 = (uint64_t)v91;
        sub_1000BE8BC(v83);
        sub_100021A14(v87, &qword_100BC3340);
        v70 = sub_1001FBA10();
        sub_1000ED244(v70, v71);
        v65 = v93;
        v3 = v45;
        sub_1000ED244(v93, v45);
        if ((v69 & 1) == 0)
          goto LABEL_45;
      }
      v72 = static WeatherDataModel.== infix(_:_:)(v60 + *(int *)(v88 + 24), v3 + *(int *)(v88 + 24));
      sub_1000C1CF4(v60);
      sub_1000C1CF4(v3);
      sub_1000C1CF4(v52);
      sub_1000C1CF4(v65);
      v27 = v65;
      if ((v72 & 1) == 0)
        goto LABEL_47;
    }
  }
  sub_1001FB854();
  if (v36)
  {
    __break(1u);
    goto LABEL_49;
  }
  if (v35 >= v86)
  {
LABEL_24:
    v41 = sub_100099328();
    sub_1001FBC24(v41);
    goto LABEL_25;
  }
  if (*(_QWORD *)(v82 + 8 * v35))
    goto LABEL_11;
  v92 = v35;
  if (v35 + 1 >= v86)
    goto LABEL_24;
  if (*(_QWORD *)(v82 + 8 * (v35 + 1)))
    goto LABEL_11;
  v92 = v35 + 1;
  if (v35 + 2 >= v86)
    goto LABEL_24;
  if (*(_QWORD *)(v82 + 8 * (v35 + 2)))
    goto LABEL_11;
  v39 = v35 + 3;
  v92 = v35 + 2;
  if (v35 + 3 >= v86)
    goto LABEL_24;
  if (*(_QWORD *)(v82 + 8 * v39))
  {
LABEL_11:
    sub_1001FBB04();
    v29 = v38 + (v37 << 6);
    v92 = v37;
    goto LABEL_7;
  }
  while (!__OFADD__(v39, 1))
  {
    if (v39 + 1 >= v86)
    {
      v92 = v79;
      goto LABEL_24;
    }
    sub_1000DE250();
    if (v40)
      goto LABEL_11;
  }
LABEL_49:
  __break(1u);
}

void sub_1001F4638()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unsigned __int8 *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  char v55;
  char v56;
  void (*v57)(uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unsigned __int8 *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void (*v102)(uint64_t, uint64_t, uint64_t);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;

  sub_1000986AC();
  v5 = v4;
  v7 = v6;
  sub_1000BA294((uint64_t *)&unk_100BD35A0);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_100099864();
  v98 = sub_1000BA294(&qword_100BC4978);
  sub_1000B42B0();
  __chkstk_darwin(v9);
  v99 = (uint64_t)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10009876C();
  v97 = type metadata accessor for CalendarMoonPhaseData(v11);
  v12 = *(_QWORD *)(v97 - 8);
  __chkstk_darwin(v97);
  sub_10003BC68();
  __chkstk_darwin(v13);
  v15 = (unsigned __int8 *)&v85 - v14;
  v16 = sub_100098778();
  v104 = *(_QWORD *)(v16 - 8);
  v105 = v16;
  sub_10009D98C();
  __chkstk_darwin(v17);
  sub_1000986FC();
  v90 = v18;
  sub_10009D2A4();
  __chkstk_darwin(v19);
  sub_100079F7C();
  v101 = v20;
  sub_1000BA294(&qword_100BC9F40);
  sub_1000B42B0();
  __chkstk_darwin(v21);
  sub_1000DB210();
  __chkstk_darwin(v22);
  sub_1000B2FD8();
  if (v7 != v5 && *(_QWORD *)(v7 + 16) == *(_QWORD *)(v5 + 16))
  {
    v100 = 0;
    v91 = v7;
    v87 = v7 + 64;
    v88 = v0;
    sub_1001FB0B8();
    v89 = v23;
    v86 = v23 - 1;
    v94 = v5;
    v95 = v15;
    v96 = v1;
    v92 = v2;
    v93 = v3;
    if (!v24)
      goto LABEL_6;
LABEL_4:
    sub_1001FB58C();
    v103 = v25;
    v27 = v26 | (v100 << 6);
LABEL_5:
    v28 = v91;
    sub_1001FBA20();
    v29(v3);
    v30 = *(_QWORD *)(v28 + 56) + *(_QWORD *)(v12 + 72) * v27;
    v31 = sub_100099328();
    sub_1000ED244(v30, v3 + *(int *)(v31 + 48));
    sub_10009C7F0(v3, 0);
    while (1)
    {
      v42 = sub_1001FBA04();
      sub_1000787D4(v42, v43, &qword_100BC9F40);
      v44 = sub_100099328();
      sub_100088FC8(v2, 1, v44);
      if (v65)
        goto LABEL_46;
      v45 = v12;
      v46 = v5;
      v47 = (unsigned __int8 *)v1;
      v48 = v45;
      v49 = v2 + *(int *)(v44 + 48);
      v50 = v104;
      v51 = sub_1001FBA04();
      v102 = v52;
      ((void (*)(uint64_t))v52)(v51);
      sub_1001FB980(v49, (uint64_t)v15);
      sub_10016C6BC();
      v54 = v53;
      v56 = v55;
      v57 = *(void (**)(uint64_t))(v50 + 8);
      v58 = sub_1001FBA04();
      v57(v58);
      if ((v56 & 1) == 0)
        goto LABEL_45;
      v59 = v48;
      sub_1000ED244(*(_QWORD *)(v46 + 56) + *(_QWORD *)(v48 + 72) * v54, (uint64_t)v47);
      v60 = *v15;
      v61 = MoonPhase.rawValue.getter(*v47);
      v63 = v62;
      v65 = v61 == MoonPhase.rawValue.getter(v60) && v63 == v64;
      if (v65)
      {
        swift_bridgeObjectRelease_n(v63, 2);
      }
      else
      {
        v66 = sub_1000C0108();
        v69 = sub_1000DC128(v66, v67, v68);
        sub_1000986C4();
        sub_1000986E8();
        if ((v69 & 1) == 0)
          goto LABEL_44;
      }
      v71 = v99;
      v72 = v99 + *(int *)(v98 + 48);
      sub_10009DD64((uint64_t)&v47[*(int *)(v97 + 20)], v99);
      v73 = sub_1000BCF4C();
      sub_10009DD64(v73, v74);
      v75 = v105;
      sub_100088FC8(v71, 1, v105);
      if (v65)
      {
        sub_100088FC8(v72, 1, v75);
        if (!v65)
          goto LABEL_43;
        sub_1000B3B4C(v71);
        v15 = v95;
        v1 = v96;
        v12 = v59;
      }
      else
      {
        v76 = v88;
        sub_10009DD64(v71, v88);
        sub_100088FC8(v72, 1, v75);
        if (v77)
        {
          ((void (*)(uint64_t, uint64_t))v57)(v76, v75);
LABEL_43:
          sub_100021A14(v71, &qword_100BC4978);
          v15 = v95;
LABEL_44:
          sub_10003BCC0(v70, type metadata accessor for CalendarMoonPhaseData);
LABEL_45:
          sub_1000215BC((uint64_t)v15, type metadata accessor for CalendarMoonPhaseData);
          goto LABEL_46;
        }
        v78 = v90;
        v102(v90, v72, v75);
        sub_10005329C((unint64_t *)&qword_100BC3590, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
        v79 = sub_1001FB954();
        v80 = v75;
        v83 = dispatch thunk of static Equatable.== infix(_:_:)(v79, v81, v75, v82);
        ((void (*)(uint64_t, uint64_t))v57)(v78, v80);
        v84 = sub_1000C0108();
        v57(v84);
        sub_1000B3B4C(v71);
        v15 = v95;
        v1 = v96;
        v12 = v59;
        if ((v83 & 1) == 0)
          goto LABEL_44;
      }
      sub_1000C1CF4(v1);
      sub_1000C1CF4((uint64_t)v15);
      v3 = v93;
      v5 = v94;
      v2 = v92;
      if (v103)
        goto LABEL_4;
LABEL_6:
      v32 = v100 + 1;
      if (__OFADD__(v100, 1))
        break;
      if (v32 < v89)
      {
        if (*(_QWORD *)(v87 + 8 * v32))
          goto LABEL_9;
        v36 = v100 + 2;
        ++v100;
        if (v32 + 1 < v89)
        {
          if (*(_QWORD *)(v87 + 8 * v36))
            goto LABEL_9;
          v100 = v32 + 1;
          if (v32 + 2 < v89)
          {
            if (*(_QWORD *)(v87 + 8 * (v32 + 2)))
              goto LABEL_9;
            v37 = v32 + 3;
            v100 = v32 + 2;
            if (v32 + 3 < v89)
            {
              if (*(_QWORD *)(v87 + 8 * v37))
              {
LABEL_9:
                sub_1001FB5D0();
                v103 = v33;
                v27 = v35 + (v34 << 6);
                v100 = v34;
                goto LABEL_5;
              }
              while (!__OFADD__(v37, 1))
              {
                if (v37 + 1 >= v89)
                {
                  v100 = v86;
                  goto LABEL_22;
                }
                sub_1000DE250();
                if (v38)
                  goto LABEL_9;
              }
              goto LABEL_48;
            }
          }
        }
      }
LABEL_22:
      v39 = sub_100099328();
      sub_10009D34C(v3, v40, v41, v39);
      v103 = 0;
    }
    __break(1u);
LABEL_48:
    __break(1u);
    return;
  }
LABEL_46:
  sub_100098640();
}

void sub_1001F4BB0()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  int v34;
  uint64_t v35;
  uint64_t v36[10];
  uint64_t v37;

  sub_1000986AC();
  v4 = sub_10011DE64();
  type metadata accessor for LocationDisplayContext(v4);
  sub_1001FB210();
  __chkstk_darwin(v5);
  v36[7] = (uint64_t)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009D2A4();
  __chkstk_darwin(v7);
  sub_1000B2FD8();
  sub_1000BA294(&qword_100BC9F00);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_100089068();
  v10 = __chkstk_darwin(v9);
  sub_10009E930(v10, v11, v12, v13, v14, v15, v16, v17, v36[0]);
  if (v33)
  {
    sub_1001FBAE4();
LABEL_40:
    sub_1001FBAA4();
    sub_100098640();
    return;
  }
  sub_1001FB3F8();
  if (!v33)
  {
LABEL_39:
    HIDWORD(v37) = 0;
    goto LABEL_40;
  }
  sub_10009D9E4();
  sub_1001FBACC();
  while (1)
  {
    if (v2)
    {
      sub_1001FAFBC();
LABEL_7:
      v18 = sub_1000B2EB8();
      sub_1001FAF88(v18);
      sub_10011E4F4();
      goto LABEL_30;
    }
    sub_1001FB854();
    if (v19)
    {
      __break(1u);
      goto LABEL_42;
    }
    sub_1001FB224();
    if (v20 != v19)
    {
      sub_1001FB83C();
      if (v22)
        goto LABEL_12;
      sub_1001FB290(v21);
      if (v20 != v19)
      {
        sub_1001FB830();
        if (v24)
          goto LABEL_16;
        sub_1001FB27C();
        if (v20 != v19)
          break;
      }
    }
LABEL_29:
    v29 = sub_100099328();
    sub_1001FB024(v29);
LABEL_30:
    v30 = sub_1001FB5E4();
    sub_1000787D4(v30, v31, &qword_100BC9F00);
    v32 = sub_100099328();
    sub_100088FC8(v0, 1, v32);
    if (v33)
      v34 = 1;
    else
      v34 = 0;
    HIDWORD(v37) = v34;
    if (v33)
      goto LABEL_40;
    sub_10009BC2C();
    sub_1001FB1B4();
    sub_10011DEAC();
    if ((v1 & 1) == 0)
    {
      sub_1000CC8B8();
      goto LABEL_39;
    }
    sub_10009E5FC();
    sub_10005329C(&qword_100BC9F10, 255, (uint64_t (*)(uint64_t))&type metadata accessor for LocationDisplayContext, (uint64_t)&protocol conformance descriptor for LocationDisplayContext);
    sub_10009ED74(v35);
    sub_1001FB054();
    sub_1000BE8BC(v3);
    sub_1001FB1FC();
    if ((v32 & 1) == 0)
      goto LABEL_40;
  }
  sub_1001FB848();
  if (v26)
  {
    v21 = v25;
    goto LABEL_12;
  }
  sub_1001FB268();
  if (v20 == v19)
    goto LABEL_29;
  sub_1001FB938();
  if (v27)
  {
LABEL_16:
    v21 = v23;
LABEL_12:
    sub_1001FAFD8(v21);
    goto LABEL_7;
  }
  while (!__OFADD__(v23, 1))
  {
    sub_1001FB224();
    if (v20 == v19)
    {
      sub_1001FBBF0();
      goto LABEL_29;
    }
    sub_1000DE250();
    if (v28)
      goto LABEL_12;
  }
LABEL_42:
  __break(1u);
}

void sub_1001F4DA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;

  sub_10008900C();
  if (v6 == v7 || (sub_1001FB0A0(), !v8))
  {
LABEL_23:
    sub_10009D300();
    return;
  }
  sub_1001FB068();
  while (1)
  {
    if (v4)
    {
      sub_1001FB910();
      goto LABEL_21;
    }
    v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v10 >= v2)
      goto LABEL_23;
    ++v3;
    if (!*(_QWORD *)(v1 + 8 * v10))
    {
      v3 = v10 + 1;
      if (v10 + 1 >= v2)
        goto LABEL_23;
      if (!*(_QWORD *)(v1 + 8 * v3))
      {
        v3 = v10 + 2;
        if (v10 + 2 >= v2)
          goto LABEL_23;
        if (!*(_QWORD *)(v1 + 8 * v3))
          break;
      }
    }
LABEL_20:
    sub_1000DF470();
    v4 = v13 & v12;
    v9 = v14 + (v3 << 6);
LABEL_21:
    v15 = sub_1001FB9EC(v9);
    if ((v16 & 1) == 0 || *(_QWORD *)(*(_QWORD *)(v0 + 56) + 8 * v15) != v5)
      goto LABEL_23;
  }
  v11 = v10 + 3;
  if (v11 >= v2)
    goto LABEL_23;
  if (*(_QWORD *)(v1 + 8 * v11))
  {
    v3 = v11;
    goto LABEL_20;
  }
  while (1)
  {
    v3 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v3 >= v2)
      goto LABEL_23;
    ++v11;
    if (*(_QWORD *)(v1 + 8 * v3))
      goto LABEL_20;
  }
LABEL_25:
  __break(1u);
}

void sub_1001F4E94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  double *v42;
  double v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v4 = sub_1001FB8E8();
  v5 = type metadata accessor for LocationOfInterestType(v4);
  v55 = *(_QWORD *)(v5 - 8);
  v56 = v5;
  sub_10009D98C();
  __chkstk_darwin(v6);
  sub_100088FDC();
  v53 = v7;
  sub_1000BA294(&qword_100BCA100);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_1000C0CD0();
  __chkstk_darwin(v9);
  sub_10009C838();
  if (v0 == v1)
    return;
  sub_1001FB3F8();
  if (!v10)
    return;
  v54 = 0;
  v52 = v0;
  v50 = v0 + 64;
  sub_100075DD8();
  v13 = v12 & v11;
  sub_1001FB2B8();
  v51 = v14;
  v49 = v14 - 1;
  v15 = &unk_100BCA108;
  while (1)
  {
    if (v13)
    {
      sub_1001FBC80();
      v17 = v16 | (v54 << 6);
LABEL_7:
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 16))(v3, *(_QWORD *)(v52 + 48) + *(_QWORD *)(v55 + 72) * v17, v56);
      v18 = *(_QWORD *)(v52 + 56);
      v19 = sub_1001FBCD8();
      *(_OWORD *)(v3 + *(int *)(v19 + 48)) = *(_OWORD *)(v18 + 16 * v17);
      sub_100098974(v3, v20, v21, v19);
      goto LABEL_28;
    }
    if (__OFADD__(v54, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    sub_1001FB224();
    if (v22 != v23)
    {
      sub_1001FB83C();
      if (v25)
        goto LABEL_12;
      v54 = v24;
      if (v24 + 1 < v51)
      {
        sub_1001FB830();
        if (v30)
          goto LABEL_12;
        v54 = v29;
        if (v28 + 2 < v51)
        {
          sub_1001FB848();
          if (v33)
            goto LABEL_12;
          v54 = v32;
          if (v31 + 3 < v51)
          {
            if (*(_QWORD *)(v50 + 8 * (v31 + 3)))
              goto LABEL_12;
            v54 = v31 + 3;
            if (v31 + 4 < v51)
              break;
          }
        }
      }
    }
LABEL_27:
    v37 = sub_1001FBCD8();
    sub_1001FBC24(v37);
LABEL_28:
    v38 = sub_1000878C4();
    sub_1000787D4(v38, v39, &qword_100BCA100);
    v40 = v15;
    v41 = sub_1001FBCD8();
    sub_100088FC8(v2, 1, v41);
    if (!v10)
    {
      v42 = (double *)(v2 + *(int *)(v41 + 48));
      (*(void (**)(uint64_t))(v55 + 32))(v53);
      v43 = *v42;
      v44 = v42[1];
      sub_10016C828();
      v46 = v45;
      LOBYTE(v42) = v47;
      (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v53, v56);
      if ((v42 & 1) != 0)
      {
        v48 = static CLLocationCoordinate2D.== infix(_:_:)(*(double *)(*(_QWORD *)(v1 + 56) + 16 * v46), *(double *)(*(_QWORD *)(v1 + 56) + 16 * v46 + 8), v43, v44);
        v15 = v40;
        if ((v48 & 1) != 0)
          continue;
      }
    }
    return;
  }
  sub_1001FB938();
  if (v35)
  {
LABEL_12:
    sub_1001FBB04();
    v17 = v27 + (v26 << 6);
    v54 = v26;
    goto LABEL_7;
  }
  while (!__OFADD__(v34, 1))
  {
    sub_1001FB224();
    if (v22 == v23)
    {
      v54 = v49;
      goto LABEL_27;
    }
    sub_1000DE250();
    if (v36)
      goto LABEL_12;
  }
LABEL_34:
  __break(1u);
}

void sub_1001F5194()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64x2_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int64x2_t *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v19;
  int64x2_t *v20;
  int64x2_t *v21;
  int32x2_t v22;

  sub_10008900C();
  if (v6 != v7)
  {
    sub_1001FB0A0();
    if (v16)
    {
      sub_1001FB068();
      while (1)
      {
LABEL_5:
        if (v4)
        {
          sub_1001FB910();
        }
        else
        {
          v9 = v3 + 1;
          if (__OFADD__(v3, 1))
          {
            __break(1u);
LABEL_47:
            __break(1u);
            return;
          }
          if (v9 >= v2)
            break;
          v10 = *(_QWORD *)(v1 + 8 * v9);
          ++v3;
          if (!v10)
          {
            v3 = v9 + 1;
            if (v9 + 1 >= v2)
              break;
            v10 = *(_QWORD *)(v1 + 8 * v3);
            if (!v10)
            {
              v3 = v9 + 2;
              if (v9 + 2 >= v2)
                break;
              v10 = *(_QWORD *)(v1 + 8 * v3);
              if (!v10)
              {
                v3 = v9 + 3;
                if (v9 + 3 >= v2)
                  break;
                v10 = *(_QWORD *)(v1 + 8 * v3);
                if (!v10)
                {
                  v11 = v9 + 4;
                  if (v11 >= v2)
                    break;
                  v10 = *(_QWORD *)(v1 + 8 * v11);
                  if (!v10)
                  {
                    while (1)
                    {
                      v3 = v11 + 1;
                      if (__OFADD__(v11, 1))
                        goto LABEL_47;
                      if (v3 >= v2)
                        goto LABEL_45;
                      v10 = *(_QWORD *)(v1 + 8 * v3);
                      ++v11;
                      if (v10)
                        goto LABEL_22;
                    }
                  }
                  v3 = v11;
                }
              }
            }
          }
LABEL_22:
          v4 = (v10 - 1) & v10;
          v8 = __clz(__rbit64(v10)) + (v3 << 6);
        }
        v12 = sub_1001FB9EC(v8);
        if ((v13 & 1) == 0)
          break;
        v14 = *(int64x2_t **)(*(_QWORD *)(v0 + 56) + 8 * v12);
        v15 = v14[1].i64[0];
        if (v15 != v5[1].i64[0])
          break;
        if (v15)
          v16 = v14 == v5;
        else
          v16 = 1;
        if (!v16)
        {
          if (v14[2].i64[0] != v5[2].i64[0] || v14[2].i64[1] != v5[2].i64[1])
            break;
          if (v15 != 1)
          {
            if (v14[3].i64[0] != v5[3].i64[0] || v14[3].i64[1] != v5[3].i64[1])
              break;
            v19 = v15 - 2;
            if (v19)
            {
              v20 = v14 + 4;
              v21 = v5 + 4;
              while (1)
              {
                v22 = vmovn_s64(vceqq_s64(*v20, *v21));
                if ((v22.i32[0] & v22.i32[1] & 1) == 0)
                  goto LABEL_45;
                ++v20;
                ++v21;
                if (!--v19)
                  goto LABEL_5;
              }
            }
          }
        }
      }
    }
  }
LABEL_45:
  sub_10009D300();
}

_QWORD *sub_1001F5330(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = a1[3];
  v3 = a1[6];
  v4 = a1[8];
  v5 = a1[11];
  v6 = a1[13];
  v7 = a1[16];
  v8 = a1[18];
  v9 = a1[21];
  v10 = a1[23];
  swift_bridgeObjectRetain(a1[1]);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v10);
  return a1;
}

_QWORD *sub_1001F53E4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[6];
  v5 = a1[8];
  v6 = a1[11];
  v7 = a1[13];
  v8 = a1[16];
  v9 = a1[18];
  v10 = a1[21];
  swift_bridgeObjectRelease(a1[23]);
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);
  return a1;
}

unint64_t sub_1001F5498()
{
  unint64_t result;

  result = qword_100BC9F60;
  if (!qword_100BC9F60)
  {
    result = swift_getWitnessTable(&unk_100986940, &type metadata for ListViewState._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BC9F60);
  }
  return result;
}

unint64_t sub_1001F54D4()
{
  unint64_t result;

  result = qword_100BC9F68;
  if (!qword_100BC9F68)
  {
    result = swift_getWitnessTable(&unk_1009AF024, &unk_100B80420);
    atomic_store(result, (unint64_t *)&qword_100BC9F68);
  }
  return result;
}

unint64_t sub_1001F5510()
{
  unint64_t result;

  result = qword_100BC9F70;
  if (!qword_100BC9F70)
  {
    result = swift_getWitnessTable(&unk_1009A4BA0, &unk_100B773D8);
    atomic_store(result, (unint64_t *)&qword_100BC9F70);
  }
  return result;
}

unint64_t sub_1001F554C()
{
  unint64_t result;

  result = qword_100BC9F78;
  if (!qword_100BC9F78)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ExternalSearchQuery, &type metadata for ExternalSearchQuery);
    atomic_store(result, (unint64_t *)&qword_100BC9F78);
  }
  return result;
}

unint64_t sub_1001F5588()
{
  unint64_t result;

  result = qword_100BC9F80;
  if (!qword_100BC9F80)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ListSessionTrigger, &type metadata for ListSessionTrigger);
    atomic_store(result, (unint64_t *)&qword_100BC9F80);
  }
  return result;
}

unint64_t sub_1001F55C4()
{
  unint64_t result;

  result = qword_100BC9F90;
  if (!qword_100BC9F90)
  {
    result = swift_getWitnessTable(&unk_1009868F0, &type metadata for LocationViewerViewState._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BC9F90);
  }
  return result;
}

unint64_t sub_1001F5600()
{
  unint64_t result;

  result = qword_100BC9FA0;
  if (!qword_100BC9FA0)
  {
    result = swift_getWitnessTable(&unk_1009DE5D0, &type metadata for AddLocationAlertState);
    atomic_store(result, (unint64_t *)&qword_100BC9FA0);
  }
  return result;
}

unint64_t sub_1001F563C()
{
  unint64_t result;

  result = qword_100BC9FA8;
  if (!qword_100BC9FA8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for LocationSessionTrigger, &type metadata for LocationSessionTrigger);
    atomic_store(result, (unint64_t *)&qword_100BC9FA8);
  }
  return result;
}

unint64_t sub_1001F5678()
{
  unint64_t result;

  result = qword_100BC9FB0;
  if (!qword_100BC9FB0)
  {
    result = swift_getWitnessTable(&unk_1009CF238, &type metadata for TransitionState);
    atomic_store(result, (unint64_t *)&qword_100BC9FB0);
  }
  return result;
}

unint64_t sub_1001F56B4()
{
  unint64_t result;

  result = qword_100BC9FC0;
  if (!qword_100BC9FC0)
  {
    result = swift_getWitnessTable(&unk_1009868A0, &type metadata for MainState._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BC9FC0);
  }
  return result;
}

unint64_t sub_1001F56F0()
{
  unint64_t result;

  result = qword_100BC9FC8;
  if (!qword_100BC9FC8)
  {
    result = swift_getWitnessTable(&unk_10099EAC4, &type metadata for AutomationState);
    atomic_store(result, (unint64_t *)&qword_100BC9FC8);
  }
  return result;
}

unint64_t sub_1001F572C()
{
  unint64_t result;

  result = qword_100BC9FD0;
  if (!qword_100BC9FD0)
  {
    result = swift_getWitnessTable(&unk_1009C57AC, &type metadata for AppLifecycleState);
    atomic_store(result, (unint64_t *)&qword_100BC9FD0);
  }
  return result;
}

unint64_t sub_1001F5768()
{
  unint64_t result;

  result = qword_100BC9FF0;
  if (!qword_100BC9FF0)
  {
    result = swift_getWitnessTable(&unk_1009A482C, &type metadata for NotificationsState);
    atomic_store(result, (unint64_t *)&qword_100BC9FF0);
  }
  return result;
}

unint64_t sub_1001F57A4()
{
  unint64_t result;

  result = qword_100BCA018;
  if (!qword_100BCA018)
  {
    result = swift_getWitnessTable(&unk_1009BBDC4, &type metadata for WeatherDataState);
    atomic_store(result, (unint64_t *)&qword_100BCA018);
  }
  return result;
}

unint64_t sub_1001F57E0()
{
  unint64_t result;

  result = qword_100BCA020;
  if (!qword_100BCA020)
  {
    result = swift_getWitnessTable(&unk_1009D20E4, &type metadata for DebugState);
    atomic_store(result, (unint64_t *)&qword_100BCA020);
  }
  return result;
}

unint64_t sub_1001F581C()
{
  unint64_t result;

  result = qword_100BCA028;
  if (!qword_100BCA028)
  {
    result = swift_getWitnessTable(&unk_1009BD834, &type metadata for ContentStatusBannerState);
    atomic_store(result, (unint64_t *)&qword_100BCA028);
  }
  return result;
}

unint64_t sub_1001F5858()
{
  unint64_t result;

  result = qword_100BCA038;
  if (!qword_100BCA038)
  {
    result = swift_getWitnessTable(&unk_100986850, &type metadata for NotificationsOptInViewState._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA038);
  }
  return result;
}

unint64_t sub_1001F5894()
{
  unint64_t result;

  result = qword_100BCA040;
  if (!qword_100BCA040)
  {
    result = swift_getWitnessTable(&unk_1009A4A98, &unk_100B77338);
    atomic_store(result, (unint64_t *)&qword_100BCA040);
  }
  return result;
}

unint64_t sub_1001F58D0()
{
  unint64_t result;

  result = qword_100BCA060;
  if (!qword_100BCA060)
  {
    result = swift_getWitnessTable(&unk_100986800, &type metadata for ReportWeatherContentViewModel._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA060);
  }
  return result;
}

unint64_t sub_1001F590C()
{
  unint64_t result;

  result = qword_100BCA068;
  if (!qword_100BCA068)
  {
    result = swift_getWitnessTable(&unk_1009AA644, &type metadata for ReportWeatherConditionsViewModel);
    atomic_store(result, (unint64_t *)&qword_100BCA068);
  }
  return result;
}

unint64_t sub_1001F5948()
{
  unint64_t result;

  result = qword_100BCA070;
  if (!qword_100BCA070)
  {
    result = swift_getWitnessTable(&unk_1009A3AA0, &unk_100B766D0);
    atomic_store(result, (unint64_t *)&qword_100BCA070);
  }
  return result;
}

unint64_t sub_1001F5984()
{
  unint64_t result;

  result = qword_100BCA078;
  if (!qword_100BCA078)
  {
    result = swift_getWitnessTable(&unk_1009A3A50, &unk_100B76640);
    atomic_store(result, (unint64_t *)&qword_100BCA078);
  }
  return result;
}

unint64_t sub_1001F59C0()
{
  unint64_t result;

  result = qword_100BCA080;
  if (!qword_100BCA080)
  {
    result = swift_getWitnessTable(&unk_1009A3A00, &unk_100B765B0);
    atomic_store(result, (unint64_t *)&qword_100BCA080);
  }
  return result;
}

unint64_t sub_1001F59FC()
{
  unint64_t result;

  result = qword_100BCA098;
  if (!qword_100BCA098)
  {
    result = swift_getWitnessTable(&unk_1009A39B0, &unk_100B76520);
    atomic_store(result, (unint64_t *)&qword_100BCA098);
  }
  return result;
}

unint64_t sub_1001F5A38()
{
  unint64_t result;

  result = qword_100BCA0B0;
  if (!qword_100BCA0B0)
  {
    result = swift_getWitnessTable(&unk_1009A3960, &unk_100B76490);
    atomic_store(result, (unint64_t *)&qword_100BCA0B0);
  }
  return result;
}

unint64_t sub_1001F5A74()
{
  unint64_t result;

  result = qword_100BCA0C0;
  if (!qword_100BCA0C0)
  {
    result = swift_getWitnessTable(&unk_1009CD0BC, &type metadata for ReportWeatherEntrySource);
    atomic_store(result, (unint64_t *)&qword_100BCA0C0);
  }
  return result;
}

unint64_t sub_1001F5AB0()
{
  unint64_t result;

  result = qword_100BCA0D0;
  if (!qword_100BCA0D0)
  {
    result = swift_getWitnessTable(&unk_1009867B0, &type metadata for ReportWeatherViewState._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA0D0);
  }
  return result;
}

unint64_t sub_1001F5AEC()
{
  unint64_t result;

  result = qword_100BCA0D8;
  if (!qword_100BCA0D8)
  {
    result = swift_getWitnessTable(&unk_100992818, &type metadata for ReportWeatherViewModel);
    atomic_store(result, (unint64_t *)&qword_100BCA0D8);
  }
  return result;
}

unint64_t sub_1001F5B28()
{
  unint64_t result;

  result = qword_100BCA130;
  if (!qword_100BCA130)
  {
    result = swift_getWitnessTable(&unk_1009865D0, &type metadata for LocationCommonConfigurationComponents.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA130);
  }
  return result;
}

unint64_t sub_1001F5B64()
{
  unint64_t result;

  result = qword_100BCA170;
  if (!qword_100BCA170)
  {
    result = swift_getWitnessTable(&unk_100986580, &type metadata for MainState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA170);
  }
  return result;
}

unint64_t sub_1001F5BA0()
{
  unint64_t result;

  result = qword_100BCA198;
  if (!qword_100BCA198)
  {
    result = swift_getWitnessTable(&unk_100992840, &type metadata for ReportWeatherViewModel);
    atomic_store(result, (unint64_t *)&qword_100BCA198);
  }
  return result;
}

unint64_t sub_1001F5BDC()
{
  unint64_t result;

  result = qword_100BCA1A8;
  if (!qword_100BCA1A8)
  {
    result = swift_getWitnessTable(&unk_1009AA66C, &type metadata for ReportWeatherConditionsViewModel);
    atomic_store(result, (unint64_t *)&qword_100BCA1A8);
  }
  return result;
}

unint64_t sub_1001F5C18()
{
  unint64_t result;

  result = qword_100BCA1B0;
  if (!qword_100BCA1B0)
  {
    result = swift_getWitnessTable(&unk_1009A3AC8, &unk_100B766D0);
    atomic_store(result, (unint64_t *)&qword_100BCA1B0);
  }
  return result;
}

unint64_t sub_1001F5C54()
{
  unint64_t result;

  result = qword_100BCA1B8;
  if (!qword_100BCA1B8)
  {
    result = swift_getWitnessTable(&unk_1009A3A78, &unk_100B76640);
    atomic_store(result, (unint64_t *)&qword_100BCA1B8);
  }
  return result;
}

unint64_t sub_1001F5C90()
{
  unint64_t result;

  result = qword_100BCA1C0;
  if (!qword_100BCA1C0)
  {
    result = swift_getWitnessTable(&unk_1009A3A28, &unk_100B765B0);
    atomic_store(result, (unint64_t *)&qword_100BCA1C0);
  }
  return result;
}

unint64_t sub_1001F5CCC()
{
  unint64_t result;

  result = qword_100BCA1D0;
  if (!qword_100BCA1D0)
  {
    result = swift_getWitnessTable(&unk_1009A39D8, &unk_100B76520);
    atomic_store(result, (unint64_t *)&qword_100BCA1D0);
  }
  return result;
}

unint64_t sub_1001F5D08()
{
  unint64_t result;

  result = qword_100BCA1E0;
  if (!qword_100BCA1E0)
  {
    result = swift_getWitnessTable(&unk_1009A3988, &unk_100B76490);
    atomic_store(result, (unint64_t *)&qword_100BCA1E0);
  }
  return result;
}

unint64_t sub_1001F5D44()
{
  unint64_t result;

  result = qword_100BCA1F0;
  if (!qword_100BCA1F0)
  {
    result = swift_getWitnessTable(&unk_1009CD0E4, &type metadata for ReportWeatherEntrySource);
    atomic_store(result, (unint64_t *)&qword_100BCA1F0);
  }
  return result;
}

unint64_t sub_1001F5D80()
{
  unint64_t result;

  result = qword_100BCA200;
  if (!qword_100BCA200)
  {
    result = swift_getWitnessTable(&unk_1009A4AC0, &unk_100B77338);
    atomic_store(result, (unint64_t *)&qword_100BCA200);
  }
  return result;
}

unint64_t sub_1001F5DBC()
{
  unint64_t result;

  result = qword_100BCA210;
  if (!qword_100BCA210)
  {
    result = swift_getWitnessTable(&unk_10099EAEC, &type metadata for AutomationState);
    atomic_store(result, (unint64_t *)&qword_100BCA210);
  }
  return result;
}

unint64_t sub_1001F5DF8()
{
  unint64_t result;

  result = qword_100BCA218;
  if (!qword_100BCA218)
  {
    result = swift_getWitnessTable(&unk_1009C57D4, &type metadata for AppLifecycleState);
    atomic_store(result, (unint64_t *)&qword_100BCA218);
  }
  return result;
}

unint64_t sub_1001F5E34()
{
  unint64_t result;

  result = qword_100BCA238;
  if (!qword_100BCA238)
  {
    result = swift_getWitnessTable(&unk_1009A4854, &type metadata for NotificationsState);
    atomic_store(result, (unint64_t *)&qword_100BCA238);
  }
  return result;
}

unint64_t sub_1001F5E70()
{
  unint64_t result;

  result = qword_100BCA260;
  if (!qword_100BCA260)
  {
    result = swift_getWitnessTable(&unk_1009BBDEC, &type metadata for WeatherDataState);
    atomic_store(result, (unint64_t *)&qword_100BCA260);
  }
  return result;
}

unint64_t sub_1001F5EAC()
{
  unint64_t result;

  result = qword_100BCA268;
  if (!qword_100BCA268)
  {
    result = swift_getWitnessTable(&unk_1009D210C, &type metadata for DebugState);
    atomic_store(result, (unint64_t *)&qword_100BCA268);
  }
  return result;
}

unint64_t sub_1001F5EE8()
{
  unint64_t result;

  result = qword_100BCA270;
  if (!qword_100BCA270)
  {
    result = swift_getWitnessTable(&unk_1009BD85C, &type metadata for ContentStatusBannerState);
    atomic_store(result, (unint64_t *)&qword_100BCA270);
  }
  return result;
}

unint64_t sub_1001F5F24()
{
  unint64_t result;

  result = qword_100BCA288;
  if (!qword_100BCA288)
  {
    result = swift_getWitnessTable(&unk_1009A4BC8, &unk_100B773D8);
    atomic_store(result, (unint64_t *)&qword_100BCA288);
  }
  return result;
}

unint64_t sub_1001F5F60()
{
  unint64_t result;

  result = qword_100BCA290;
  if (!qword_100BCA290)
  {
    result = swift_getWitnessTable(&unk_1009DE5F8, &type metadata for AddLocationAlertState);
    atomic_store(result, (unint64_t *)&qword_100BCA290);
  }
  return result;
}

unint64_t sub_1001F5F9C()
{
  unint64_t result;

  result = qword_100BCA298;
  if (!qword_100BCA298)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for LocationSessionTrigger, &type metadata for LocationSessionTrigger);
    atomic_store(result, (unint64_t *)&qword_100BCA298);
  }
  return result;
}

unint64_t sub_1001F5FD8()
{
  unint64_t result;

  result = qword_100BCA2A0;
  if (!qword_100BCA2A0)
  {
    result = swift_getWitnessTable(&unk_1009CF260, &type metadata for TransitionState);
    atomic_store(result, (unint64_t *)&qword_100BCA2A0);
  }
  return result;
}

unint64_t sub_1001F6014()
{
  unint64_t result;

  result = qword_100BCA2B0;
  if (!qword_100BCA2B0)
  {
    result = swift_getWitnessTable(&unk_100986530, &type metadata for LocationSevereNhpNewsConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA2B0);
  }
  return result;
}

unint64_t sub_1001F6050()
{
  unint64_t result;

  result = qword_100BCA2B8;
  if (!qword_100BCA2B8)
  {
    result = swift_getWitnessTable(&unk_10098252C, &unk_100B616F0);
    atomic_store(result, (unint64_t *)&qword_100BCA2B8);
  }
  return result;
}

unint64_t sub_1001F608C()
{
  unint64_t result;

  result = qword_100BCA2D0;
  if (!qword_100BCA2D0)
  {
    result = swift_getWitnessTable(&unk_1009864E0, &type metadata for LocationSevereNhpConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA2D0);
  }
  return result;
}

unint64_t sub_1001F60C8()
{
  unint64_t result;

  result = qword_100BCA2E0;
  if (!qword_100BCA2E0)
  {
    result = swift_getWitnessTable(&unk_100986490, &type metadata for LocationSevereNhpAqiConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA2E0);
  }
  return result;
}

unint64_t sub_1001F6104()
{
  unint64_t result;

  result = qword_100BCA2F0;
  if (!qword_100BCA2F0)
  {
    result = swift_getWitnessTable(&unk_100986440, &type metadata for LocationSevereNewsConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA2F0);
  }
  return result;
}

unint64_t sub_1001F6140()
{
  unint64_t result;

  result = qword_100BCA300;
  if (!qword_100BCA300)
  {
    result = swift_getWitnessTable(&unk_1009863F0, &type metadata for LocationSevereConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA300);
  }
  return result;
}

unint64_t sub_1001F617C()
{
  unint64_t result;

  result = qword_100BCA310;
  if (!qword_100BCA310)
  {
    result = swift_getWitnessTable(&unk_1009863A0, &type metadata for LocationNoAqiSevereNhpNewsConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA310);
  }
  return result;
}

unint64_t sub_1001F61B8()
{
  unint64_t result;

  result = qword_100BCA320;
  if (!qword_100BCA320)
  {
    result = swift_getWitnessTable(&unk_100986350, &type metadata for LocationNoAqiSevereNhpConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA320);
  }
  return result;
}

unint64_t sub_1001F61F4()
{
  unint64_t result;

  result = qword_100BCA330;
  if (!qword_100BCA330)
  {
    result = swift_getWitnessTable(&unk_100986300, &type metadata for LocationNoAqiSevereNewsConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA330);
  }
  return result;
}

unint64_t sub_1001F6230()
{
  unint64_t result;

  result = qword_100BCA340;
  if (!qword_100BCA340)
  {
    result = swift_getWitnessTable(&unk_1009862B0, &type metadata for LocationNoAqiSevereConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA340);
  }
  return result;
}

unint64_t sub_1001F626C()
{
  unint64_t result;

  result = qword_100BCA350;
  if (!qword_100BCA350)
  {
    result = swift_getWitnessTable(&unk_100986260, &type metadata for LocationNoAqiNhpNewsConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA350);
  }
  return result;
}

unint64_t sub_1001F62A8()
{
  unint64_t result;

  result = qword_100BCA360;
  if (!qword_100BCA360)
  {
    result = swift_getWitnessTable(&unk_100986210, &type metadata for LocationNoAqiNhpConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA360);
  }
  return result;
}

unint64_t sub_1001F62E4()
{
  unint64_t result;

  result = qword_100BCA370;
  if (!qword_100BCA370)
  {
    result = swift_getWitnessTable(&unk_1009861C0, &type metadata for LocationNoAqiNewsConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA370);
  }
  return result;
}

unint64_t sub_1001F6320()
{
  unint64_t result;

  result = qword_100BCA380;
  if (!qword_100BCA380)
  {
    result = swift_getWitnessTable(&unk_100986170, &type metadata for LocationNoAqiConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA380);
  }
  return result;
}

unint64_t sub_1001F635C()
{
  unint64_t result;

  result = qword_100BCA390;
  if (!qword_100BCA390)
  {
    result = swift_getWitnessTable(&unk_100986120, &type metadata for LocationNhpNewsConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA390);
  }
  return result;
}

unint64_t sub_1001F6398()
{
  unint64_t result;

  result = qword_100BCA3A0;
  if (!qword_100BCA3A0)
  {
    result = swift_getWitnessTable(&unk_1009860D0, &type metadata for LocationNhpMinorAlertConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA3A0);
  }
  return result;
}

unint64_t sub_1001F63D4()
{
  unint64_t result;

  result = qword_100BCA3B0;
  if (!qword_100BCA3B0)
  {
    result = swift_getWitnessTable(&unk_100986080, &type metadata for LocationNhpConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA3B0);
  }
  return result;
}

unint64_t sub_1001F6410()
{
  unint64_t result;

  result = qword_100BCA3C0;
  if (!qword_100BCA3C0)
  {
    result = swift_getWitnessTable(&unk_100986030, &type metadata for LocationMinorAlertConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA3C0);
  }
  return result;
}

unint64_t sub_1001F644C()
{
  unint64_t result;

  result = qword_100BCA3D0;
  if (!qword_100BCA3D0)
  {
    result = swift_getWitnessTable(&unk_100985FE0, &type metadata for LocationElevatedAqiSevereNewsConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA3D0);
  }
  return result;
}

unint64_t sub_1001F6488()
{
  unint64_t result;

  result = qword_100BCA3E0;
  if (!qword_100BCA3E0)
  {
    result = swift_getWitnessTable(&unk_100985F90, &type metadata for LocationElevatedAqiSevereConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA3E0);
  }
  return result;
}

unint64_t sub_1001F64C4()
{
  unint64_t result;

  result = qword_100BCA3F0;
  if (!qword_100BCA3F0)
  {
    result = swift_getWitnessTable(&unk_100985F40, &type metadata for LocationElevatedAqiNewsConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA3F0);
  }
  return result;
}

unint64_t sub_1001F6500()
{
  unint64_t result;

  result = qword_100BCA400;
  if (!qword_100BCA400)
  {
    result = swift_getWitnessTable(&unk_100985EF0, &type metadata for LocationElevatedAqiMinorAlertConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA400);
  }
  return result;
}

unint64_t sub_1001F653C()
{
  unint64_t result;

  result = qword_100BCA410;
  if (!qword_100BCA410)
  {
    result = swift_getWitnessTable(&unk_100985EA0, &type metadata for LocationElevatedAqiConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA410);
  }
  return result;
}

unint64_t sub_1001F6578()
{
  unint64_t result;

  result = qword_100BCA420;
  if (!qword_100BCA420)
  {
    result = swift_getWitnessTable(&unk_100985E50, &type metadata for LocationDefaultTrendNewsConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA420);
  }
  return result;
}

unint64_t sub_1001F65B4()
{
  unint64_t result;

  result = qword_100BCA430;
  if (!qword_100BCA430)
  {
    result = swift_getWitnessTable(&unk_100985E00, &type metadata for LocationDefaultNewsConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA430);
  }
  return result;
}

unint64_t sub_1001F65F0()
{
  unint64_t result;

  result = qword_100BCA440;
  if (!qword_100BCA440)
  {
    result = swift_getWitnessTable(&unk_100985DB0, &type metadata for LocationDefaultConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA440);
  }
  return result;
}

unint64_t sub_1001F662C()
{
  unint64_t result;

  result = qword_100BCA450;
  if (!qword_100BCA450)
  {
    result = swift_getWitnessTable(&unk_100985D60, &type metadata for LocationCommonConfigurationComponents._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA450);
  }
  return result;
}

unint64_t sub_1001F6668()
{
  unint64_t result;

  result = qword_100BCA460;
  if (!qword_100BCA460)
  {
    result = swift_getWitnessTable(&unk_1009AF04C, &unk_100B80420);
    atomic_store(result, (unint64_t *)&qword_100BCA460);
  }
  return result;
}

unint64_t sub_1001F66A4()
{
  unint64_t result;

  result = qword_100BCA468;
  if (!qword_100BCA468)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ExternalSearchQuery, &type metadata for ExternalSearchQuery);
    atomic_store(result, (unint64_t *)&qword_100BCA468);
  }
  return result;
}

unint64_t sub_1001F66E0()
{
  unint64_t result;

  result = qword_100BCA470;
  if (!qword_100BCA470)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ListSessionTrigger, &type metadata for ListSessionTrigger);
    atomic_store(result, (unint64_t *)&qword_100BCA470);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for LocationCommonConfigurationComponents._Storage.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF5)
  {
    if (a2 + 11 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 11) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 12;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xC;
  v5 = v6 - 12;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for LocationCommonConfigurationComponents._Storage.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_1001F67F0 + 4 * byte_1009818C3[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_1001F6824 + 4 * byte_1009818BE[v4]))();
}

uint64_t sub_1001F6824(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001F682C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001F6834);
  return result;
}

uint64_t sub_1001F6840(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001F6848);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_1001F684C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001F6854(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LocationCommonConfigurationComponents._Storage.CodingKeys()
{
  return &type metadata for LocationCommonConfigurationComponents._Storage.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationDefaultConfiguration._Storage.CodingKeys()
{
  return &type metadata for LocationDefaultConfiguration._Storage.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationDefaultNewsConfiguration._Storage.CodingKeys()
{
  return &type metadata for LocationDefaultNewsConfiguration._Storage.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationDefaultTrendNewsConfiguration._Storage.CodingKeys()
{
  return &type metadata for LocationDefaultTrendNewsConfiguration._Storage.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationElevatedAqiConfiguration._Storage.CodingKeys()
{
  return &type metadata for LocationElevatedAqiConfiguration._Storage.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationElevatedAqiMinorAlertConfiguration._Storage.CodingKeys()
{
  return &type metadata for LocationElevatedAqiMinorAlertConfiguration._Storage.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationElevatedAqiNewsConfiguration._Storage.CodingKeys()
{
  return &type metadata for LocationElevatedAqiNewsConfiguration._Storage.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationElevatedAqiSevereConfiguration._Storage.CodingKeys()
{
  return &type metadata for LocationElevatedAqiSevereConfiguration._Storage.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationElevatedAqiSevereNewsConfiguration._Storage.CodingKeys()
{
  return &type metadata for LocationElevatedAqiSevereNewsConfiguration._Storage.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationMinorAlertConfiguration._Storage.CodingKeys()
{
  return &type metadata for LocationMinorAlertConfiguration._Storage.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationNhpConfiguration._Storage.CodingKeys()
{
  return &type metadata for LocationNhpConfiguration._Storage.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationNhpMinorAlertConfiguration._Storage.CodingKeys()
{
  return &type metadata for LocationNhpMinorAlertConfiguration._Storage.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationNhpNewsConfiguration._Storage.CodingKeys()
{
  return &type metadata for LocationNhpNewsConfiguration._Storage.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for LocationNoAqiConfiguration._Storage.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1001F6994 + 4 * byte_1009818CD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1001F69C8 + 4 * byte_1009818C8[v4]))();
}

uint64_t sub_1001F69C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001F69D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001F69D8);
  return result;
}

uint64_t sub_1001F69E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001F69ECLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1001F69F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001F69F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_1001F6A04(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for LocationNoAqiConfiguration._Storage.CodingKeys()
{
  return &type metadata for LocationNoAqiConfiguration._Storage.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationNoAqiNewsConfiguration._Storage.CodingKeys()
{
  return &type metadata for LocationNoAqiNewsConfiguration._Storage.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationNoAqiNhpConfiguration._Storage.CodingKeys()
{
  return &type metadata for LocationNoAqiNhpConfiguration._Storage.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationNoAqiNhpNewsConfiguration._Storage.CodingKeys()
{
  return &type metadata for LocationNoAqiNhpNewsConfiguration._Storage.CodingKeys;
}

uint64_t _s7Weather28LocationDefaultConfigurationV8_StorageC10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return sub_10009C7E0(-1);
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return sub_10009C7E0((*a1 | (v4 << 8)) - 3);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return sub_10009C7E0((*a1 | (v4 << 8)) - 3);
    }
    v4 = a1[1];
    if (a1[1])
      return sub_10009C7E0((*a1 | (v4 << 8)) - 3);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return sub_10009C7E0(v8);
}

uint64_t _s7Weather28LocationDefaultConfigurationV8_StorageC10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1001F6B20 + 4 * byte_1009818D7[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1001F6B54 + 4 * byte_1009818D2[v4]))();
}

uint64_t sub_1001F6B58(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001F6B60);
  return result;
}

_BYTE *sub_1001F6B68(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001F6B70);
  return sub_1000951D4((_BYTE *)a1, a2 + 2);
}

ValueMetadata *type metadata accessor for LocationNoAqiSevereConfiguration._Storage.CodingKeys()
{
  return &type metadata for LocationNoAqiSevereConfiguration._Storage.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationNoAqiSevereNewsConfiguration._Storage.CodingKeys()
{
  return &type metadata for LocationNoAqiSevereNewsConfiguration._Storage.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationNoAqiSevereNhpConfiguration._Storage.CodingKeys()
{
  return &type metadata for LocationNoAqiSevereNhpConfiguration._Storage.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationNoAqiSevereNhpNewsConfiguration._Storage.CodingKeys()
{
  return &type metadata for LocationNoAqiSevereNhpNewsConfiguration._Storage.CodingKeys;
}

uint64_t _s7Weather32LocationDefaultNewsConfigurationV8_StorageC10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return sub_10009C7E0(-1);
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return sub_10009C7E0((*a1 | (v4 << 8)) - 4);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return sub_10009C7E0((*a1 | (v4 << 8)) - 4);
    }
    v4 = a1[1];
    if (a1[1])
      return sub_10009C7E0((*a1 | (v4 << 8)) - 4);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return sub_10009C7E0(v8);
}

uint64_t _s7Weather32LocationDefaultNewsConfigurationV8_StorageC10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1001F6C90 + 4 * byte_1009818E1[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1001F6CC4 + 4 * byte_1009818DC[v4]))();
}

uint64_t sub_1001F6CC8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001F6CD0);
  return result;
}

_BYTE *sub_1001F6CD8(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001F6CE0);
  return sub_1000951D4((_BYTE *)a1, a2 + 3);
}

ValueMetadata *type metadata accessor for LocationSevereConfiguration._Storage.CodingKeys()
{
  return &type metadata for LocationSevereConfiguration._Storage.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationSevereNewsConfiguration._Storage.CodingKeys()
{
  return &type metadata for LocationSevereNewsConfiguration._Storage.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationSevereNhpAqiConfiguration._Storage.CodingKeys()
{
  return &type metadata for LocationSevereNhpAqiConfiguration._Storage.CodingKeys;
}

uint64_t _s7Weather42LocationElevatedAqiSevereNewsConfigurationV8_StorageC10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return sub_10009C7E0(-1);
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return sub_10009C7E0((*a1 | (v4 << 8)) - 5);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return sub_10009C7E0((*a1 | (v4 << 8)) - 5);
    }
    v4 = a1[1];
    if (a1[1])
      return sub_10009C7E0((*a1 | (v4 << 8)) - 5);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return sub_10009C7E0(v8);
}

uint64_t _s7Weather42LocationElevatedAqiSevereNewsConfigurationV8_StorageC10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1001F6DF0 + 4 * byte_1009818EB[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1001F6E24 + 4 * byte_1009818E6[v4]))();
}

uint64_t sub_1001F6E28(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001F6E30);
  return result;
}

_BYTE *sub_1001F6E38(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001F6E40);
  return sub_1000951D4((_BYTE *)a1, a2 + 4);
}

ValueMetadata *type metadata accessor for LocationSevereNhpConfiguration._Storage.CodingKeys()
{
  return &type metadata for LocationSevereNhpConfiguration._Storage.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationSevereNhpNewsConfiguration._Storage.CodingKeys()
{
  return &type metadata for LocationSevereNhpNewsConfiguration._Storage.CodingKeys;
}

ValueMetadata *type metadata accessor for MainState.CodingKeys()
{
  return &type metadata for MainState.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationCommonConfigurationComponents.CodingKeys()
{
  return &type metadata for LocationCommonConfigurationComponents.CodingKeys;
}

ValueMetadata *type metadata accessor for ReportWeatherViewState._Storage.CodingKeys()
{
  return &type metadata for ReportWeatherViewState._Storage.CodingKeys;
}

ValueMetadata *type metadata accessor for ReportWeatherContentViewModel._Storage.CodingKeys()
{
  return &type metadata for ReportWeatherContentViewModel._Storage.CodingKeys;
}

ValueMetadata *type metadata accessor for NotificationsOptInViewState._Storage.CodingKeys()
{
  return &type metadata for NotificationsOptInViewState._Storage.CodingKeys;
}

uint64_t _s7Weather29ReportWeatherContentViewModelV8_StorageC10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return sub_10009C7E0(-1);
  if (a2 < 0xF4)
    goto LABEL_17;
  if (a2 + 12 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 12) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return sub_10009C7E0((*a1 | (v4 << 8)) - 13);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return sub_10009C7E0((*a1 | (v4 << 8)) - 13);
    }
    v4 = a1[1];
    if (a1[1])
      return sub_10009C7E0((*a1 | (v4 << 8)) - 13);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xD;
  v8 = v6 - 13;
  if (!v7)
    v8 = -1;
  return sub_10009C7E0(v8);
}

uint64_t _s7Weather29ReportWeatherContentViewModelV8_StorageC10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_1001F6FAC + 4 * byte_1009818F5[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_1001F6FE0 + 4 * byte_1009818F0[v4]))();
}

uint64_t sub_1001F6FE4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001F6FECLL);
  return result;
}

_BYTE *sub_1001F6FF4(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001F6FFCLL);
  return sub_1000951D4((_BYTE *)a1, a2 + 12);
}

ValueMetadata *type metadata accessor for MainState._Storage.CodingKeys()
{
  return &type metadata for MainState._Storage.CodingKeys;
}

uint64_t _s7Weather34LocationSevereNhpNewsConfigurationV8_StorageC10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return sub_10009C7E0(-1);
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return sub_10009C7E0((*a1 | (v4 << 8)) - 6);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return sub_10009C7E0((*a1 | (v4 << 8)) - 6);
    }
    v4 = a1[1];
    if (a1[1])
      return sub_10009C7E0((*a1 | (v4 << 8)) - 6);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return sub_10009C7E0(v8);
}

uint64_t _s7Weather34LocationSevereNhpNewsConfigurationV8_StorageC10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1001F70EC + 4 * byte_1009818FF[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1001F7120 + 4 * byte_1009818FA[v4]))();
}

uint64_t sub_1001F7124(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001F712CLL);
  return result;
}

_BYTE *sub_1001F7134(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001F713CLL);
  return sub_1000951D4((_BYTE *)a1, a2 + 5);
}

ValueMetadata *type metadata accessor for LocationViewerViewState._Storage.CodingKeys()
{
  return &type metadata for LocationViewerViewState._Storage.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ListViewState._Storage.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF8)
  {
    if (a2 + 8 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 8) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 9;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v5 = v6 - 9;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ListViewState._Storage.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1001F7230 + 4 * byte_100981909[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1001F7264 + 4 * byte_100981904[v4]))();
}

uint64_t sub_1001F7264(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001F726C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001F7274);
  return result;
}

uint64_t sub_1001F7280(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001F7288);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1001F728C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001F7294(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ListViewState._Storage.CodingKeys()
{
  return &type metadata for ListViewState._Storage.CodingKeys;
}

void type metadata accessor for DefaultContent()
{
  sub_100098884();
}

void type metadata accessor for DefaultNewsContent()
{
  sub_100098884();
}

void type metadata accessor for DefaultTrendNewsContent()
{
  sub_100098884();
}

void type metadata accessor for ElevatedAqiContent()
{
  sub_100098884();
}

void type metadata accessor for ElevatedAqiMinorAlertContent()
{
  sub_100098884();
}

void type metadata accessor for ElevatedAqiNewsContent()
{
  sub_100098884();
}

void type metadata accessor for ElevatedAqiSevereContent()
{
  sub_100098884();
}

void type metadata accessor for ElevatedAqiSevereNewsContent()
{
  sub_100098884();
}

void type metadata accessor for ListViewState()
{
  sub_100098884();
}

void type metadata accessor for LocationDefaultConfiguration()
{
  sub_100098884();
}

void type metadata accessor for LocationDefaultNewsConfiguration()
{
  sub_100098884();
}

void type metadata accessor for LocationDefaultTrendNewsConfiguration()
{
  sub_100098884();
}

void type metadata accessor for LocationElevatedAqiConfiguration()
{
  sub_100098884();
}

void type metadata accessor for LocationElevatedAqiMinorAlertConfiguration()
{
  sub_100098884();
}

void type metadata accessor for LocationElevatedAqiNewsConfiguration()
{
  sub_100098884();
}

void type metadata accessor for LocationElevatedAqiSevereConfiguration()
{
  sub_100098884();
}

void type metadata accessor for LocationElevatedAqiSevereNewsConfiguration()
{
  sub_100098884();
}

void type metadata accessor for LocationMinorAlertConfiguration()
{
  sub_100098884();
}

void type metadata accessor for LocationNhpConfiguration()
{
  sub_100098884();
}

void type metadata accessor for LocationNhpMinorAlertConfiguration()
{
  sub_100098884();
}

void type metadata accessor for LocationNhpNewsConfiguration()
{
  sub_100098884();
}

void type metadata accessor for LocationNoAqiConfiguration()
{
  sub_100098884();
}

void type metadata accessor for LocationNoAqiNewsConfiguration()
{
  sub_100098884();
}

void type metadata accessor for LocationNoAqiNhpConfiguration()
{
  sub_100098884();
}

void type metadata accessor for LocationNoAqiNhpNewsConfiguration()
{
  sub_100098884();
}

void type metadata accessor for LocationNoAqiSevereConfiguration()
{
  sub_100098884();
}

void type metadata accessor for LocationNoAqiSevereNewsConfiguration()
{
  sub_100098884();
}

void type metadata accessor for LocationNoAqiSevereNhpConfiguration()
{
  sub_100098884();
}

void type metadata accessor for LocationNoAqiSevereNhpNewsConfiguration()
{
  sub_100098884();
}

void type metadata accessor for LocationSevereConfiguration()
{
  sub_100098884();
}

void type metadata accessor for LocationSevereNewsConfiguration()
{
  sub_100098884();
}

void type metadata accessor for LocationSevereNhpAqiConfiguration()
{
  sub_100098884();
}

void type metadata accessor for LocationSevereNhpConfiguration()
{
  sub_100098884();
}

void type metadata accessor for LocationSevereNhpNewsConfiguration()
{
  sub_100098884();
}

void type metadata accessor for MinorAlertContent()
{
  sub_100098884();
}

void type metadata accessor for NhpContent()
{
  sub_100098884();
}

void type metadata accessor for NhpMinorAlertContent()
{
  sub_100098884();
}

void type metadata accessor for NhpNewsContent()
{
  sub_100098884();
}

void type metadata accessor for NoAqiContent()
{
  sub_100098884();
}

void type metadata accessor for NoAqiNewsContent()
{
  sub_100098884();
}

void type metadata accessor for NoAqiNhpContent()
{
  sub_100098884();
}

void type metadata accessor for NoAqiNhpNewsContent()
{
  sub_100098884();
}

void type metadata accessor for NoAqiSevereContent()
{
  sub_100098884();
}

void type metadata accessor for NoAqiSevereNewsContent()
{
  sub_100098884();
}

void type metadata accessor for NoAqiSevereNhpContent()
{
  sub_100098884();
}

void type metadata accessor for NoAqiSevereNhpNewsContent()
{
  sub_100098884();
}

void type metadata accessor for SevereContent()
{
  sub_100098884();
}

void type metadata accessor for SevereNewsContent()
{
  sub_100098884();
}

void type metadata accessor for SevereNhpAqiContent()
{
  sub_100098884();
}

void type metadata accessor for SevereNhpContent()
{
  sub_100098884();
}

void type metadata accessor for SevereNhpNewsContent()
{
  sub_100098884();
}

void type metadata accessor for LocationViewerViewState()
{
  sub_100098884();
}

void type metadata accessor for TemperatureAveragesDetailViewModel()
{
  sub_100098884();
}

void type metadata accessor for PrecipitationAveragesDetailViewModel()
{
  sub_100098884();
}

void type metadata accessor for ReportWeatherContentViewModel()
{
  sub_100098884();
}

void type metadata accessor for ReportWeatherViewState()
{
  sub_100098884();
}

void type metadata accessor for NotificationsOptInViewState()
{
  sub_100098884();
}

unint64_t sub_1001F7560()
{
  unint64_t result;

  result = qword_100BCA478;
  if (!qword_100BCA478)
  {
    result = swift_getWitnessTable(&unk_100984580, &type metadata for ListViewState._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA478);
  }
  return result;
}

unint64_t sub_1001F75A0()
{
  unint64_t result;

  result = qword_100BCA480;
  if (!qword_100BCA480)
  {
    result = swift_getWitnessTable(&unk_100984638, &type metadata for LocationViewerViewState._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA480);
  }
  return result;
}

unint64_t sub_1001F75E0()
{
  unint64_t result;

  result = qword_100BCA488;
  if (!qword_100BCA488)
  {
    result = swift_getWitnessTable(&unk_1009846F0, &type metadata for MainState._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA488);
  }
  return result;
}

unint64_t sub_1001F7620()
{
  unint64_t result;

  result = qword_100BCA490;
  if (!qword_100BCA490)
  {
    result = swift_getWitnessTable(&unk_1009847A8, &type metadata for NotificationsOptInViewState._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA490);
  }
  return result;
}

unint64_t sub_1001F7660()
{
  unint64_t result;

  result = qword_100BCA498;
  if (!qword_100BCA498)
  {
    result = swift_getWitnessTable(&unk_100984860, &type metadata for ReportWeatherContentViewModel._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA498);
  }
  return result;
}

unint64_t sub_1001F76A0()
{
  unint64_t result;

  result = qword_100BCA4A0;
  if (!qword_100BCA4A0)
  {
    result = swift_getWitnessTable(&unk_100984918, &type metadata for ReportWeatherViewState._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA4A0);
  }
  return result;
}

unint64_t sub_1001F76E0()
{
  unint64_t result;

  result = qword_100BCA4A8;
  if (!qword_100BCA4A8)
  {
    result = swift_getWitnessTable(&unk_1009849D0, &type metadata for LocationCommonConfigurationComponents.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA4A8);
  }
  return result;
}

unint64_t sub_1001F7720()
{
  unint64_t result;

  result = qword_100BCA4B0;
  if (!qword_100BCA4B0)
  {
    result = swift_getWitnessTable(&unk_100984A88, &type metadata for MainState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA4B0);
  }
  return result;
}

unint64_t sub_1001F7760()
{
  unint64_t result;

  result = qword_100BCA4B8;
  if (!qword_100BCA4B8)
  {
    result = swift_getWitnessTable(&unk_100984B40, &type metadata for LocationSevereNhpNewsConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA4B8);
  }
  return result;
}

unint64_t sub_1001F77A0()
{
  unint64_t result;

  result = qword_100BCA4C0;
  if (!qword_100BCA4C0)
  {
    result = swift_getWitnessTable(&unk_100984BF8, &type metadata for LocationSevereNhpConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA4C0);
  }
  return result;
}

unint64_t sub_1001F77E0()
{
  unint64_t result;

  result = qword_100BCA4C8;
  if (!qword_100BCA4C8)
  {
    result = swift_getWitnessTable(&unk_100984CB0, &type metadata for LocationSevereNhpAqiConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA4C8);
  }
  return result;
}

unint64_t sub_1001F7820()
{
  unint64_t result;

  result = qword_100BCA4D0;
  if (!qword_100BCA4D0)
  {
    result = swift_getWitnessTable(&unk_100984D68, &type metadata for LocationSevereNewsConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA4D0);
  }
  return result;
}

unint64_t sub_1001F7860()
{
  unint64_t result;

  result = qword_100BCA4D8;
  if (!qword_100BCA4D8)
  {
    result = swift_getWitnessTable(&unk_100984E20, &type metadata for LocationSevereConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA4D8);
  }
  return result;
}

unint64_t sub_1001F78A0()
{
  unint64_t result;

  result = qword_100BCA4E0;
  if (!qword_100BCA4E0)
  {
    result = swift_getWitnessTable(&unk_100984ED8, &type metadata for LocationNoAqiSevereNhpNewsConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA4E0);
  }
  return result;
}

unint64_t sub_1001F78E0()
{
  unint64_t result;

  result = qword_100BCA4E8;
  if (!qword_100BCA4E8)
  {
    result = swift_getWitnessTable(&unk_100984F90, &type metadata for LocationNoAqiSevereNhpConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA4E8);
  }
  return result;
}

unint64_t sub_1001F7920()
{
  unint64_t result;

  result = qword_100BCA4F0;
  if (!qword_100BCA4F0)
  {
    result = swift_getWitnessTable(&unk_100985048, &type metadata for LocationNoAqiSevereNewsConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA4F0);
  }
  return result;
}

unint64_t sub_1001F7960()
{
  unint64_t result;

  result = qword_100BCA4F8;
  if (!qword_100BCA4F8)
  {
    result = swift_getWitnessTable(&unk_100985100, &type metadata for LocationNoAqiSevereConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA4F8);
  }
  return result;
}

unint64_t sub_1001F79A0()
{
  unint64_t result;

  result = qword_100BCA500;
  if (!qword_100BCA500)
  {
    result = swift_getWitnessTable(&unk_1009851B8, &type metadata for LocationNoAqiNhpNewsConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA500);
  }
  return result;
}

unint64_t sub_1001F79E0()
{
  unint64_t result;

  result = qword_100BCA508;
  if (!qword_100BCA508)
  {
    result = swift_getWitnessTable(&unk_100985270, &type metadata for LocationNoAqiNhpConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA508);
  }
  return result;
}

unint64_t sub_1001F7A20()
{
  unint64_t result;

  result = qword_100BCA510;
  if (!qword_100BCA510)
  {
    result = swift_getWitnessTable(&unk_100985328, &type metadata for LocationNoAqiNewsConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA510);
  }
  return result;
}

unint64_t sub_1001F7A60()
{
  unint64_t result;

  result = qword_100BCA518;
  if (!qword_100BCA518)
  {
    result = swift_getWitnessTable(&unk_1009853E0, &type metadata for LocationNoAqiConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA518);
  }
  return result;
}

unint64_t sub_1001F7AA0()
{
  unint64_t result;

  result = qword_100BCA520;
  if (!qword_100BCA520)
  {
    result = swift_getWitnessTable(&unk_100985498, &type metadata for LocationNhpNewsConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA520);
  }
  return result;
}

unint64_t sub_1001F7AE0()
{
  unint64_t result;

  result = qword_100BCA528;
  if (!qword_100BCA528)
  {
    result = swift_getWitnessTable(&unk_100985550, &type metadata for LocationNhpMinorAlertConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA528);
  }
  return result;
}

unint64_t sub_1001F7B20()
{
  unint64_t result;

  result = qword_100BCA530;
  if (!qword_100BCA530)
  {
    result = swift_getWitnessTable(&unk_100985608, &type metadata for LocationNhpConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA530);
  }
  return result;
}

unint64_t sub_1001F7B60()
{
  unint64_t result;

  result = qword_100BCA538;
  if (!qword_100BCA538)
  {
    result = swift_getWitnessTable(&unk_1009856C0, &type metadata for LocationMinorAlertConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA538);
  }
  return result;
}

unint64_t sub_1001F7BA0()
{
  unint64_t result;

  result = qword_100BCA540;
  if (!qword_100BCA540)
  {
    result = swift_getWitnessTable(&unk_100985778, &type metadata for LocationElevatedAqiSevereNewsConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA540);
  }
  return result;
}

unint64_t sub_1001F7BE0()
{
  unint64_t result;

  result = qword_100BCA548;
  if (!qword_100BCA548)
  {
    result = swift_getWitnessTable(&unk_100985830, &type metadata for LocationElevatedAqiSevereConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA548);
  }
  return result;
}

unint64_t sub_1001F7C20()
{
  unint64_t result;

  result = qword_100BCA550;
  if (!qword_100BCA550)
  {
    result = swift_getWitnessTable(&unk_1009858E8, &type metadata for LocationElevatedAqiNewsConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA550);
  }
  return result;
}

unint64_t sub_1001F7C60()
{
  unint64_t result;

  result = qword_100BCA558;
  if (!qword_100BCA558)
  {
    result = swift_getWitnessTable(&unk_1009859A0, &type metadata for LocationElevatedAqiMinorAlertConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA558);
  }
  return result;
}

unint64_t sub_1001F7CA0()
{
  unint64_t result;

  result = qword_100BCA560;
  if (!qword_100BCA560)
  {
    result = swift_getWitnessTable(&unk_100985A58, &type metadata for LocationElevatedAqiConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA560);
  }
  return result;
}

unint64_t sub_1001F7CE0()
{
  unint64_t result;

  result = qword_100BCA568;
  if (!qword_100BCA568)
  {
    result = swift_getWitnessTable(&unk_100985B10, &type metadata for LocationDefaultTrendNewsConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA568);
  }
  return result;
}

unint64_t sub_1001F7D20()
{
  unint64_t result;

  result = qword_100BCA570;
  if (!qword_100BCA570)
  {
    result = swift_getWitnessTable(&unk_100985BC8, &type metadata for LocationDefaultNewsConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA570);
  }
  return result;
}

unint64_t sub_1001F7D60()
{
  unint64_t result;

  result = qword_100BCA578;
  if (!qword_100BCA578)
  {
    result = swift_getWitnessTable(&unk_100985C80, &type metadata for LocationDefaultConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA578);
  }
  return result;
}

unint64_t sub_1001F7DA0()
{
  unint64_t result;

  result = qword_100BCA580;
  if (!qword_100BCA580)
  {
    result = swift_getWitnessTable(&unk_100985D38, &type metadata for LocationCommonConfigurationComponents._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA580);
  }
  return result;
}

unint64_t sub_1001F7DE0()
{
  unint64_t result;

  result = qword_100BCA588;
  if (!qword_100BCA588)
  {
    result = swift_getWitnessTable(&unk_100985CA8, &type metadata for LocationCommonConfigurationComponents._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA588);
  }
  return result;
}

unint64_t sub_1001F7E20()
{
  unint64_t result;

  result = qword_100BCA590;
  if (!qword_100BCA590)
  {
    result = swift_getWitnessTable(&unk_100985CD0, &type metadata for LocationCommonConfigurationComponents._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA590);
  }
  return result;
}

unint64_t sub_1001F7E60()
{
  unint64_t result;

  result = qword_100BCA598;
  if (!qword_100BCA598)
  {
    result = swift_getWitnessTable(&unk_100985BF0, &type metadata for LocationDefaultConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA598);
  }
  return result;
}

unint64_t sub_1001F7EA0()
{
  unint64_t result;

  result = qword_100BCA5A0;
  if (!qword_100BCA5A0)
  {
    result = swift_getWitnessTable(&unk_100985C18, &type metadata for LocationDefaultConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA5A0);
  }
  return result;
}

unint64_t sub_1001F7EE0()
{
  unint64_t result;

  result = qword_100BCA5A8;
  if (!qword_100BCA5A8)
  {
    result = swift_getWitnessTable(&unk_100985B38, &type metadata for LocationDefaultNewsConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA5A8);
  }
  return result;
}

unint64_t sub_1001F7F20()
{
  unint64_t result;

  result = qword_100BCA5B0;
  if (!qword_100BCA5B0)
  {
    result = swift_getWitnessTable(&unk_100985B60, &type metadata for LocationDefaultNewsConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA5B0);
  }
  return result;
}

unint64_t sub_1001F7F60()
{
  unint64_t result;

  result = qword_100BCA5B8;
  if (!qword_100BCA5B8)
  {
    result = swift_getWitnessTable(&unk_100985A80, &type metadata for LocationDefaultTrendNewsConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA5B8);
  }
  return result;
}

unint64_t sub_1001F7FA0()
{
  unint64_t result;

  result = qword_100BCA5C0;
  if (!qword_100BCA5C0)
  {
    result = swift_getWitnessTable(&unk_100985AA8, &type metadata for LocationDefaultTrendNewsConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA5C0);
  }
  return result;
}

unint64_t sub_1001F7FE0()
{
  unint64_t result;

  result = qword_100BCA5C8;
  if (!qword_100BCA5C8)
  {
    result = swift_getWitnessTable(&unk_1009859C8, &type metadata for LocationElevatedAqiConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA5C8);
  }
  return result;
}

unint64_t sub_1001F8020()
{
  unint64_t result;

  result = qword_100BCA5D0;
  if (!qword_100BCA5D0)
  {
    result = swift_getWitnessTable(&unk_1009859F0, &type metadata for LocationElevatedAqiConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA5D0);
  }
  return result;
}

unint64_t sub_1001F8060()
{
  unint64_t result;

  result = qword_100BCA5D8;
  if (!qword_100BCA5D8)
  {
    result = swift_getWitnessTable(&unk_100985910, &type metadata for LocationElevatedAqiMinorAlertConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA5D8);
  }
  return result;
}

unint64_t sub_1001F80A0()
{
  unint64_t result;

  result = qword_100BCA5E0;
  if (!qword_100BCA5E0)
  {
    result = swift_getWitnessTable(&unk_100985938, &type metadata for LocationElevatedAqiMinorAlertConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA5E0);
  }
  return result;
}

unint64_t sub_1001F80E0()
{
  unint64_t result;

  result = qword_100BCA5E8;
  if (!qword_100BCA5E8)
  {
    result = swift_getWitnessTable(&unk_100985858, &type metadata for LocationElevatedAqiNewsConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA5E8);
  }
  return result;
}

unint64_t sub_1001F8120()
{
  unint64_t result;

  result = qword_100BCA5F0;
  if (!qword_100BCA5F0)
  {
    result = swift_getWitnessTable(&unk_100985880, &type metadata for LocationElevatedAqiNewsConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA5F0);
  }
  return result;
}

unint64_t sub_1001F8160()
{
  unint64_t result;

  result = qword_100BCA5F8;
  if (!qword_100BCA5F8)
  {
    result = swift_getWitnessTable(&unk_1009857A0, &type metadata for LocationElevatedAqiSevereConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA5F8);
  }
  return result;
}

unint64_t sub_1001F81A0()
{
  unint64_t result;

  result = qword_100BCA600;
  if (!qword_100BCA600)
  {
    result = swift_getWitnessTable(&unk_1009857C8, &type metadata for LocationElevatedAqiSevereConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA600);
  }
  return result;
}

unint64_t sub_1001F81E0()
{
  unint64_t result;

  result = qword_100BCA608;
  if (!qword_100BCA608)
  {
    result = swift_getWitnessTable(&unk_1009856E8, &type metadata for LocationElevatedAqiSevereNewsConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA608);
  }
  return result;
}

unint64_t sub_1001F8220()
{
  unint64_t result;

  result = qword_100BCA610;
  if (!qword_100BCA610)
  {
    result = swift_getWitnessTable(&unk_100985710, &type metadata for LocationElevatedAqiSevereNewsConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA610);
  }
  return result;
}

unint64_t sub_1001F8260()
{
  unint64_t result;

  result = qword_100BCA618;
  if (!qword_100BCA618)
  {
    result = swift_getWitnessTable(&unk_100985630, &type metadata for LocationMinorAlertConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA618);
  }
  return result;
}

unint64_t sub_1001F82A0()
{
  unint64_t result;

  result = qword_100BCA620;
  if (!qword_100BCA620)
  {
    result = swift_getWitnessTable(&unk_100985658, &type metadata for LocationMinorAlertConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA620);
  }
  return result;
}

unint64_t sub_1001F82E0()
{
  unint64_t result;

  result = qword_100BCA628;
  if (!qword_100BCA628)
  {
    result = swift_getWitnessTable(&unk_100985578, &type metadata for LocationNhpConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA628);
  }
  return result;
}

unint64_t sub_1001F8320()
{
  unint64_t result;

  result = qword_100BCA630;
  if (!qword_100BCA630)
  {
    result = swift_getWitnessTable(&unk_1009855A0, &type metadata for LocationNhpConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA630);
  }
  return result;
}

unint64_t sub_1001F8360()
{
  unint64_t result;

  result = qword_100BCA638;
  if (!qword_100BCA638)
  {
    result = swift_getWitnessTable(&unk_1009854C0, &type metadata for LocationNhpMinorAlertConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA638);
  }
  return result;
}

unint64_t sub_1001F83A0()
{
  unint64_t result;

  result = qword_100BCA640;
  if (!qword_100BCA640)
  {
    result = swift_getWitnessTable(&unk_1009854E8, &type metadata for LocationNhpMinorAlertConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA640);
  }
  return result;
}

unint64_t sub_1001F83E0()
{
  unint64_t result;

  result = qword_100BCA648;
  if (!qword_100BCA648)
  {
    result = swift_getWitnessTable(&unk_100985408, &type metadata for LocationNhpNewsConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA648);
  }
  return result;
}

unint64_t sub_1001F8420()
{
  unint64_t result;

  result = qword_100BCA650;
  if (!qword_100BCA650)
  {
    result = swift_getWitnessTable(&unk_100985430, &type metadata for LocationNhpNewsConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA650);
  }
  return result;
}

unint64_t sub_1001F8460()
{
  unint64_t result;

  result = qword_100BCA658;
  if (!qword_100BCA658)
  {
    result = swift_getWitnessTable(&unk_100985350, &type metadata for LocationNoAqiConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA658);
  }
  return result;
}

unint64_t sub_1001F84A0()
{
  unint64_t result;

  result = qword_100BCA660;
  if (!qword_100BCA660)
  {
    result = swift_getWitnessTable(&unk_100985378, &type metadata for LocationNoAqiConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA660);
  }
  return result;
}

unint64_t sub_1001F84E0()
{
  unint64_t result;

  result = qword_100BCA668;
  if (!qword_100BCA668)
  {
    result = swift_getWitnessTable(&unk_100985298, &type metadata for LocationNoAqiNewsConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA668);
  }
  return result;
}

unint64_t sub_1001F8520()
{
  unint64_t result;

  result = qword_100BCA670;
  if (!qword_100BCA670)
  {
    result = swift_getWitnessTable(&unk_1009852C0, &type metadata for LocationNoAqiNewsConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA670);
  }
  return result;
}

unint64_t sub_1001F8560()
{
  unint64_t result;

  result = qword_100BCA678;
  if (!qword_100BCA678)
  {
    result = swift_getWitnessTable(&unk_1009851E0, &type metadata for LocationNoAqiNhpConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA678);
  }
  return result;
}

unint64_t sub_1001F85A0()
{
  unint64_t result;

  result = qword_100BCA680;
  if (!qword_100BCA680)
  {
    result = swift_getWitnessTable(&unk_100985208, &type metadata for LocationNoAqiNhpConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA680);
  }
  return result;
}

unint64_t sub_1001F85E0()
{
  unint64_t result;

  result = qword_100BCA688;
  if (!qword_100BCA688)
  {
    result = swift_getWitnessTable(&unk_100985128, &type metadata for LocationNoAqiNhpNewsConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA688);
  }
  return result;
}

unint64_t sub_1001F8620()
{
  unint64_t result;

  result = qword_100BCA690;
  if (!qword_100BCA690)
  {
    result = swift_getWitnessTable(&unk_100985150, &type metadata for LocationNoAqiNhpNewsConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA690);
  }
  return result;
}

unint64_t sub_1001F8660()
{
  unint64_t result;

  result = qword_100BCA698;
  if (!qword_100BCA698)
  {
    result = swift_getWitnessTable(&unk_100985070, &type metadata for LocationNoAqiSevereConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA698);
  }
  return result;
}

unint64_t sub_1001F86A0()
{
  unint64_t result;

  result = qword_100BCA6A0;
  if (!qword_100BCA6A0)
  {
    result = swift_getWitnessTable(&unk_100985098, &type metadata for LocationNoAqiSevereConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA6A0);
  }
  return result;
}

unint64_t sub_1001F86E0()
{
  unint64_t result;

  result = qword_100BCA6A8;
  if (!qword_100BCA6A8)
  {
    result = swift_getWitnessTable(&unk_100984FB8, &type metadata for LocationNoAqiSevereNewsConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA6A8);
  }
  return result;
}

unint64_t sub_1001F8720()
{
  unint64_t result;

  result = qword_100BCA6B0;
  if (!qword_100BCA6B0)
  {
    result = swift_getWitnessTable(&unk_100984FE0, &type metadata for LocationNoAqiSevereNewsConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA6B0);
  }
  return result;
}

unint64_t sub_1001F8760()
{
  unint64_t result;

  result = qword_100BCA6B8;
  if (!qword_100BCA6B8)
  {
    result = swift_getWitnessTable(&unk_100984F00, &type metadata for LocationNoAqiSevereNhpConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA6B8);
  }
  return result;
}

unint64_t sub_1001F87A0()
{
  unint64_t result;

  result = qword_100BCA6C0;
  if (!qword_100BCA6C0)
  {
    result = swift_getWitnessTable(&unk_100984F28, &type metadata for LocationNoAqiSevereNhpConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA6C0);
  }
  return result;
}

unint64_t sub_1001F87E0()
{
  unint64_t result;

  result = qword_100BCA6C8;
  if (!qword_100BCA6C8)
  {
    result = swift_getWitnessTable(&unk_100984E48, &type metadata for LocationNoAqiSevereNhpNewsConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA6C8);
  }
  return result;
}

unint64_t sub_1001F8820()
{
  unint64_t result;

  result = qword_100BCA6D0;
  if (!qword_100BCA6D0)
  {
    result = swift_getWitnessTable(&unk_100984E70, &type metadata for LocationNoAqiSevereNhpNewsConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA6D0);
  }
  return result;
}

unint64_t sub_1001F8860()
{
  unint64_t result;

  result = qword_100BCA6D8;
  if (!qword_100BCA6D8)
  {
    result = swift_getWitnessTable(&unk_100984D90, &type metadata for LocationSevereConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA6D8);
  }
  return result;
}

unint64_t sub_1001F88A0()
{
  unint64_t result;

  result = qword_100BCA6E0;
  if (!qword_100BCA6E0)
  {
    result = swift_getWitnessTable(&unk_100984DB8, &type metadata for LocationSevereConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA6E0);
  }
  return result;
}

unint64_t sub_1001F88E0()
{
  unint64_t result;

  result = qword_100BCA6E8;
  if (!qword_100BCA6E8)
  {
    result = swift_getWitnessTable(&unk_100984CD8, &type metadata for LocationSevereNewsConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA6E8);
  }
  return result;
}

unint64_t sub_1001F8920()
{
  unint64_t result;

  result = qword_100BCA6F0;
  if (!qword_100BCA6F0)
  {
    result = swift_getWitnessTable(&unk_100984D00, &type metadata for LocationSevereNewsConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA6F0);
  }
  return result;
}

unint64_t sub_1001F8960()
{
  unint64_t result;

  result = qword_100BCA6F8;
  if (!qword_100BCA6F8)
  {
    result = swift_getWitnessTable(&unk_100984C20, &type metadata for LocationSevereNhpAqiConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA6F8);
  }
  return result;
}

unint64_t sub_1001F89A0()
{
  unint64_t result;

  result = qword_100BCA700;
  if (!qword_100BCA700)
  {
    result = swift_getWitnessTable(&unk_100984C48, &type metadata for LocationSevereNhpAqiConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA700);
  }
  return result;
}

unint64_t sub_1001F89E0()
{
  unint64_t result;

  result = qword_100BCA708;
  if (!qword_100BCA708)
  {
    result = swift_getWitnessTable(&unk_100984B68, &type metadata for LocationSevereNhpConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA708);
  }
  return result;
}

unint64_t sub_1001F8A20()
{
  unint64_t result;

  result = qword_100BCA710;
  if (!qword_100BCA710)
  {
    result = swift_getWitnessTable(&unk_100984B90, &type metadata for LocationSevereNhpConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA710);
  }
  return result;
}

unint64_t sub_1001F8A60()
{
  unint64_t result;

  result = qword_100BCA718;
  if (!qword_100BCA718)
  {
    result = swift_getWitnessTable(&unk_100984AB0, &type metadata for LocationSevereNhpNewsConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA718);
  }
  return result;
}

unint64_t sub_1001F8AA0()
{
  unint64_t result;

  result = qword_100BCA720;
  if (!qword_100BCA720)
  {
    result = swift_getWitnessTable(&unk_100984AD8, &type metadata for LocationSevereNhpNewsConfiguration._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA720);
  }
  return result;
}

unint64_t sub_1001F8AE0()
{
  unint64_t result;

  result = qword_100BCA728;
  if (!qword_100BCA728)
  {
    result = swift_getWitnessTable(&unk_1009849F8, &type metadata for MainState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA728);
  }
  return result;
}

unint64_t sub_1001F8B20()
{
  unint64_t result;

  result = qword_100BCA730;
  if (!qword_100BCA730)
  {
    result = swift_getWitnessTable(&unk_100984A20, &type metadata for MainState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA730);
  }
  return result;
}

unint64_t sub_1001F8B60()
{
  unint64_t result;

  result = qword_100BCA738;
  if (!qword_100BCA738)
  {
    result = swift_getWitnessTable(&unk_100984940, &type metadata for LocationCommonConfigurationComponents.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA738);
  }
  return result;
}

unint64_t sub_1001F8BA0()
{
  unint64_t result;

  result = qword_100BCA740;
  if (!qword_100BCA740)
  {
    result = swift_getWitnessTable(&unk_100984968, &type metadata for LocationCommonConfigurationComponents.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA740);
  }
  return result;
}

unint64_t sub_1001F8BE0()
{
  unint64_t result;

  result = qword_100BCA748;
  if (!qword_100BCA748)
  {
    result = swift_getWitnessTable(&unk_100984888, &type metadata for ReportWeatherViewState._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA748);
  }
  return result;
}

unint64_t sub_1001F8C20()
{
  unint64_t result;

  result = qword_100BCA750;
  if (!qword_100BCA750)
  {
    result = swift_getWitnessTable(&unk_1009848B0, &type metadata for ReportWeatherViewState._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA750);
  }
  return result;
}

unint64_t sub_1001F8C60()
{
  unint64_t result;

  result = qword_100BCA758;
  if (!qword_100BCA758)
  {
    result = swift_getWitnessTable(&unk_1009847D0, &type metadata for ReportWeatherContentViewModel._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA758);
  }
  return result;
}

unint64_t sub_1001F8CA0()
{
  unint64_t result;

  result = qword_100BCA760;
  if (!qword_100BCA760)
  {
    result = swift_getWitnessTable(&unk_1009847F8, &type metadata for ReportWeatherContentViewModel._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA760);
  }
  return result;
}

unint64_t sub_1001F8CE0()
{
  unint64_t result;

  result = qword_100BCA768;
  if (!qword_100BCA768)
  {
    result = swift_getWitnessTable(&unk_100984718, &type metadata for NotificationsOptInViewState._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA768);
  }
  return result;
}

unint64_t sub_1001F8D20()
{
  unint64_t result;

  result = qword_100BCA770;
  if (!qword_100BCA770)
  {
    result = swift_getWitnessTable(&unk_100984740, &type metadata for NotificationsOptInViewState._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA770);
  }
  return result;
}

unint64_t sub_1001F8D60()
{
  unint64_t result;

  result = qword_100BCA778;
  if (!qword_100BCA778)
  {
    result = swift_getWitnessTable(&unk_100984660, &type metadata for MainState._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA778);
  }
  return result;
}

unint64_t sub_1001F8DA0()
{
  unint64_t result;

  result = qword_100BCA780;
  if (!qword_100BCA780)
  {
    result = swift_getWitnessTable(&unk_100984688, &type metadata for MainState._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA780);
  }
  return result;
}

unint64_t sub_1001F8DE0()
{
  unint64_t result;

  result = qword_100BCA788;
  if (!qword_100BCA788)
  {
    result = swift_getWitnessTable(&unk_1009845A8, &type metadata for LocationViewerViewState._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA788);
  }
  return result;
}

unint64_t sub_1001F8E20()
{
  unint64_t result;

  result = qword_100BCA790;
  if (!qword_100BCA790)
  {
    result = swift_getWitnessTable(&unk_1009845D0, &type metadata for LocationViewerViewState._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA790);
  }
  return result;
}

unint64_t sub_1001F8E60()
{
  unint64_t result;

  result = qword_100BCA798;
  if (!qword_100BCA798)
  {
    result = swift_getWitnessTable(&unk_1009844F0, &type metadata for ListViewState._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA798);
  }
  return result;
}

unint64_t sub_1001F8EA0()
{
  unint64_t result;

  result = qword_100BCA7A0;
  if (!qword_100BCA7A0)
  {
    result = swift_getWitnessTable(&unk_100984518, &type metadata for ListViewState._Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA7A0);
  }
  return result;
}

unint64_t sub_1001F8EDC()
{
  unint64_t result;

  result = qword_100BCA7B0;
  if (!qword_100BCA7B0)
  {
    result = swift_getWitnessTable(&unk_100988830, &type metadata for ReportWeatherContentViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA7B0);
  }
  return result;
}

unint64_t sub_1001F8F18()
{
  unint64_t result;

  result = qword_100BCA7D8;
  if (!qword_100BCA7D8)
  {
    result = swift_getWitnessTable(&unk_1009887E0, &type metadata for ListViewState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA7D8);
  }
  return result;
}

unint64_t sub_1001F8F54()
{
  unint64_t result;

  result = qword_100BCA800;
  if (!qword_100BCA800)
  {
    result = swift_getWitnessTable(&unk_100988790, &type metadata for LocationViewerViewState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA800);
  }
  return result;
}

unint64_t sub_1001F8F90()
{
  unint64_t result;

  result = qword_100BCA828;
  if (!qword_100BCA828)
  {
    result = swift_getWitnessTable(&unk_100988740, &type metadata for ReportWeatherViewState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA828);
  }
  return result;
}

unint64_t sub_1001F8FCC()
{
  unint64_t result;

  result = qword_100BCA840;
  if (!qword_100BCA840)
  {
    result = swift_getWitnessTable(&unk_1009886F0, &type metadata for NotificationsOptInViewState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA840);
  }
  return result;
}

unint64_t sub_1001F9008()
{
  unint64_t result;

  result = qword_100BCA878;
  if (!qword_100BCA878)
  {
    result = swift_getWitnessTable(&unk_1009886A0, &type metadata for LocationDefaultConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA878);
  }
  return result;
}

unint64_t sub_1001F9044()
{
  unint64_t result;

  result = qword_100BCA890;
  if (!qword_100BCA890)
  {
    result = swift_getWitnessTable(&unk_100988650, &type metadata for LocationDefaultNewsConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA890);
  }
  return result;
}

unint64_t sub_1001F9080()
{
  unint64_t result;

  result = qword_100BCA8A8;
  if (!qword_100BCA8A8)
  {
    result = swift_getWitnessTable(&unk_100988600, &type metadata for LocationDefaultTrendNewsConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA8A8);
  }
  return result;
}

unint64_t sub_1001F90BC()
{
  unint64_t result;

  result = qword_100BCA8C0;
  if (!qword_100BCA8C0)
  {
    result = swift_getWitnessTable(&unk_1009885B0, &type metadata for LocationElevatedAqiConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA8C0);
  }
  return result;
}

unint64_t sub_1001F90F8()
{
  unint64_t result;

  result = qword_100BCA8D8;
  if (!qword_100BCA8D8)
  {
    result = swift_getWitnessTable(&unk_100988560, &type metadata for LocationElevatedAqiMinorAlertConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA8D8);
  }
  return result;
}

unint64_t sub_1001F9134()
{
  unint64_t result;

  result = qword_100BCA8F0;
  if (!qword_100BCA8F0)
  {
    result = swift_getWitnessTable(&unk_100988510, &type metadata for LocationElevatedAqiNewsConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BCA8F0);
  }
  return result;
}

