uint64_t sub_1006856E0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  Swift::String v9;
  uint64_t KeyPath;
  unint64_t v11;
  uint64_t v12;
  __n128 v13;
  Swift::String v14;
  uint64_t v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  Swift::String v20;
  Swift::String v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  __n128 v25;
  Swift::String v26;
  void (*v27)(char *, uint64_t);
  Swift::String v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  Swift::String v32;
  uint64_t v33;
  Swift::String v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  __n128 v38;
  Swift::String v39;
  void (*v40)(char *, uint64_t);
  Swift::String v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  Swift::String v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t);

  v61 = sub_100007E8C(&qword_1011C1E28);
  v2 = *(_QWORD *)(v61 - 8);
  __chkstk_darwin(v61);
  v4 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011C1E30);
  __chkstk_darwin(v5);
  v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100078CC0();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(28, 1, &type metadata for CreatePlaylistAppIntent, v8);
  v9._object = (void *)0x8000000100E41D00;
  v9._countAndFlagsBits = 0xD00000000000001CLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  KeyPath = swift_getKeyPath(&unk_100EC96E8);
  v11 = sub_10068B958();
  v60 = v11;
  v12 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v11);
  v13 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v12, v5, v13);
  swift_release();
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CreatePlaylistAppIntent, v8);
  v58 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CreatePlaylistAppIntent, v8);
  v62 = *(void (**)(char *, uint64_t))(v2 + 8);
  v15 = v61;
  v62(v4, v61);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(32, 1, &type metadata for CreatePlaylistAppIntent, v8);
  v16._countAndFlagsBits = 0xD000000000000020;
  v55 = 0xD000000000000020;
  v16._object = (void *)0x8000000100E41D20;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  v17 = swift_getKeyPath(&unk_100EC96E8);
  v59 = a1;
  v18 = _AssistantIntent.IntentProjection.subscript.getter(v17, v11);
  v19 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v18, v5, v19);
  swift_release();
  v20._countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CreatePlaylistAppIntent, v8);
  v57 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CreatePlaylistAppIntent, v8);
  v62(v4, v15);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(30, 1, &type metadata for CreatePlaylistAppIntent, v8);
  v21._object = (void *)0x8000000100E41D50;
  v21._countAndFlagsBits = 0xD00000000000001ELL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  v22 = swift_getKeyPath(&unk_100EC96E8);
  v23 = v60;
  v24 = _AssistantIntent.IntentProjection.subscript.getter(v22, v60);
  v25 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v24, v5, v25);
  swift_release();
  v26._countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CreatePlaylistAppIntent, v8);
  v56 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CreatePlaylistAppIntent, v8);
  v27 = v62;
  v62(v4, v61);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(30, 1, &type metadata for CreatePlaylistAppIntent, v8);
  v28._object = (void *)0x8000000100E41D70;
  v28._countAndFlagsBits = 0xD00000000000001ELL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  v29 = swift_getKeyPath(&unk_100EC96E8);
  v30 = _AssistantIntent.IntentProjection.subscript.getter(v29, v23);
  v31 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v30, v5, v31);
  swift_release();
  v32._countAndFlagsBits = 0;
  v32._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v32);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CreatePlaylistAppIntent, v8);
  v54 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CreatePlaylistAppIntent, v8);
  v33 = v61;
  v27(v4, v61);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(32, 1, &type metadata for CreatePlaylistAppIntent, v8);
  v34._object = (void *)0x8000000100E41D90;
  v34._countAndFlagsBits = v55;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v34);
  v35 = swift_getKeyPath(&unk_100EC96E8);
  v36 = v60;
  v37 = _AssistantIntent.IntentProjection.subscript.getter(v35, v60);
  v38 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v37, v5, v38);
  swift_release();
  v39._countAndFlagsBits = 0;
  v39._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v39);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CreatePlaylistAppIntent, v8);
  v55 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CreatePlaylistAppIntent, v8);
  v40 = v62;
  v62(v4, v33);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(28, 1, &type metadata for CreatePlaylistAppIntent, v8);
  v41._object = (void *)0x8000000100E41DC0;
  v41._countAndFlagsBits = 0xD00000000000001CLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v41);
  v42 = swift_getKeyPath(&unk_100EC96E8);
  v43 = _AssistantIntent.IntentProjection.subscript.getter(v42, v36);
  v44 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v43, v5, v44);
  swift_release();
  v45._countAndFlagsBits = 0;
  v45._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v45);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CreatePlaylistAppIntent, v8);
  v46 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CreatePlaylistAppIntent, v8);
  v40(v4, v33);
  v47 = sub_100007E8C(&qword_1011C1E38);
  v48 = swift_allocObject(v47, 80, 7);
  *(_OWORD *)(v48 + 16) = xmmword_100EB02A0;
  v49 = v57;
  *(_QWORD *)(v48 + 32) = v58;
  *(_QWORD *)(v48 + 40) = v49;
  v50 = v54;
  *(_QWORD *)(v48 + 48) = v56;
  *(_QWORD *)(v48 + 56) = v50;
  *(_QWORD *)(v48 + 64) = v55;
  *(_QWORD *)(v48 + 72) = v46;
  v51 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v51;
}

uint64_t sub_100685CFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t KeyPath;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100EC96E8);
  v5 = sub_10068B958();
  v6 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v5);
  swift_release();
  v7 = sub_100078CC0();
  _AssistantIntent.Value.init<A>(for:builder:)(v6, sub_100685E0C, 0, v7);
  v8 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v9 = sub_100007E8C(&qword_1011C1CE8);
  v10 = swift_allocObject(v9, 40, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v10 + 32) = v8;
  v11 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_100685E0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x7374694820706F50, 0xE800000000000000);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x61462065636E6144, 0xEF73657469726F76);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x6D614A20776F6C53, 0xE900000000000073);
  v3 = sub_100007E8C(&qword_1011C1CA8);
  v4 = swift_allocObject(v3, 56, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100EA7AC0;
  *(_QWORD *)(v4 + 32) = v0;
  *(_QWORD *)(v4 + 40) = v1;
  *(_QWORD *)(v4 + 48) = v2;
  v5 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_100685ED4(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  Swift::String v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  Swift::String v13;
  uint64_t v14;
  Swift::String v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  Swift::String v19;
  void (*v20)(char *, uint64_t);
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  Swift::String v26;
  uint64_t v27;
  Swift::String v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  Swift::String v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v45 = sub_100007E8C(&qword_1011C1E08);
  v43 = *(_QWORD *)(v45 - 8);
  __chkstk_darwin(v45);
  v3 = (char *)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_1011C1E10);
  __chkstk_darwin(v4);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004523F0();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(9, 1, &type metadata for DownloadMusicItemAppIntent, v7);
  v8._countAndFlagsBits = 0x64616F6C6E776F44;
  v8._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  KeyPath = swift_getKeyPath(&unk_100EC96C0);
  v10 = sub_100048748((unint64_t *)&qword_10119ECD8, type metadata accessor for GenericMusicItemEntity, (uint64_t)&unk_100EBED3C);
  v41 = v10;
  v46 = a1;
  v11 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v10);
  v12 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v11, v4, v12);
  swift_release();
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for DownloadMusicItemAppIntent, v7);
  v44 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for DownloadMusicItemAppIntent, v7);
  v40 = *(void (**)(char *, uint64_t))(v43 + 8);
  v14 = v45;
  v40(v3, v45);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(21, 1, &type metadata for DownloadMusicItemAppIntent, v7);
  v15._countAndFlagsBits = 0x64616F6C6E776F44;
  v15._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  v16 = swift_getKeyPath(&unk_100EC96C0);
  v17 = _AssistantIntent.IntentProjection.subscript.getter(v16, v10);
  v18 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v17, v4, v18);
  swift_release();
  v19._object = (void *)0xEC000000656E6F68;
  v19._countAndFlagsBits = 0x7020796D206F7420;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for DownloadMusicItemAppIntent, v7);
  v43 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for DownloadMusicItemAppIntent, v7);
  v20 = v40;
  v40(v3, v14);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(17, 1, &type metadata for DownloadMusicItemAppIntent, v7);
  v21._countAndFlagsBits = 0x2065766153;
  v21._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  v22 = swift_getKeyPath(&unk_100EC96C0);
  v23 = v41;
  v24 = _AssistantIntent.IntentProjection.subscript.getter(v22, v41);
  v25 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v24, v4, v25);
  swift_release();
  v26._countAndFlagsBits = 0x66666F20726F6620;
  v26._object = (void *)0xEC000000656E696CLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for DownloadMusicItemAppIntent, v7);
  v42 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for DownloadMusicItemAppIntent, v7);
  v27 = v45;
  v20(v3, v45);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(26, 1, &type metadata for DownloadMusicItemAppIntent, v7);
  v28._countAndFlagsBits = 0x2065766153;
  v28._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  v29 = swift_getKeyPath(&unk_100EC96C0);
  v30 = _AssistantIntent.IntentProjection.subscript.getter(v29, v23);
  v31 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v30, v4, v31);
  swift_release();
  v32._object = (void *)0x8000000100E41CE0;
  v32._countAndFlagsBits = 0xD000000000000015;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v32);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for DownloadMusicItemAppIntent, v7);
  v33 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for DownloadMusicItemAppIntent, v7);
  v20(v3, v27);
  v34 = sub_100007E8C(&qword_1011C1E18);
  v35 = swift_allocObject(v34, 64, 7);
  *(_OWORD *)(v35 + 16) = xmmword_100EA7BA0;
  v36 = v43;
  *(_QWORD *)(v35 + 32) = v44;
  *(_QWORD *)(v35 + 40) = v36;
  *(_QWORD *)(v35 + 48) = v42;
  *(_QWORD *)(v35 + 56) = v33;
  v37 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v37;
}

uint64_t sub_10068637C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100EC96C0);
  v5 = sub_100048748((unint64_t *)&qword_10119ECD8, type metadata accessor for GenericMusicItemEntity, (uint64_t)&unk_100EBED3C);
  v6 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v5);
  swift_release();
  v7 = sub_1004523F0();
  _AssistantIntent.Value.init<A>(for:builder:)(v6, sub_1006864A4, 0, v7);
  v8 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v9 = sub_100007E8C(&qword_1011C1CE8);
  v10 = swift_allocObject(v9, 40, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v10 + 32) = v8;
  v11 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1006864A8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  Swift::String v12;
  void (*v13)(char *, uint64_t);
  uint64_t v14;
  Swift::String v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;

  v26 = sub_100007E8C(&qword_1011C1DF0);
  v0 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v2 = (char *)&v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100007E8C(&qword_1011C1DF8);
  __chkstk_darwin(v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10037DD08();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(21, 1, &type metadata for RemoveDownloadMusicItemAppIntent, v6);
  v7._countAndFlagsBits = 0x2065766F6D6552;
  v7._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_100EC9698);
  v9 = sub_100048748((unint64_t *)&qword_10119ECD8, type metadata accessor for GenericMusicItemEntity, (uint64_t)&unk_100EBED3C);
  v10 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v9);
  v11 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v10, v3, v11);
  swift_release();
  v12._countAndFlagsBits = 0x796D206D6F726620;
  v12._object = (void *)0xEE00656E6F687020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for RemoveDownloadMusicItemAppIntent, v6);
  v25 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for RemoveDownloadMusicItemAppIntent, v6);
  v13 = *(void (**)(char *, uint64_t))(v0 + 8);
  v14 = v26;
  v13(v2, v26);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(20, 1, &type metadata for RemoveDownloadMusicItemAppIntent, v6);
  v15._countAndFlagsBits = 0x206574656C6544;
  v15._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  v16 = swift_getKeyPath(&unk_100EC9698);
  v17 = _AssistantIntent.IntentProjection.subscript.getter(v16, v9);
  v18 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v17, v3, v18);
  swift_release();
  v19._countAndFlagsBits = 0x796D206D6F726620;
  v19._object = (void *)0xED00006461506920;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for RemoveDownloadMusicItemAppIntent, v6);
  v20 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for RemoveDownloadMusicItemAppIntent, v6);
  v13(v2, v14);
  v21 = sub_100007E8C(&qword_1011C1E00);
  v22 = swift_allocObject(v21, 48, 7);
  *(_OWORD *)(v22 + 16) = xmmword_100EA7A80;
  *(_QWORD *)(v22 + 32) = v25;
  *(_QWORD *)(v22 + 40) = v20;
  v23 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_1006867A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100EC9698);
  v5 = sub_100048748((unint64_t *)&qword_10119ECD8, type metadata accessor for GenericMusicItemEntity, (uint64_t)&unk_100EBED3C);
  v6 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v5);
  swift_release();
  v7 = sub_10037DD08();
  _AssistantIntent.Value.init<A>(for:builder:)(v6, sub_1006864A4, 0, v7);
  v8 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v9 = sub_100007E8C(&qword_1011C1CE8);
  v10 = swift_allocObject(v9, 40, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v10 + 32) = v8;
  v11 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1006868C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  Swift::String v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  Swift::String v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  Swift::String v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  Swift::String v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  Swift::String v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  Swift::String v30;
  Swift::String v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  Swift::String v35;
  Swift::String v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  Swift::String v40;
  uint64_t v41;
  Swift::String v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  Swift::String v46;
  void (*v47)(char *, uint64_t);
  Swift::String v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  Swift::String v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v69 = sub_100007E8C(&qword_1011C1DD8);
  v2 = *(_QWORD *)(v69 - 8);
  __chkstk_darwin(v69);
  v4 = (char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011C1DE0);
  __chkstk_darwin(v5);
  v7 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10068B558();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(9, 1, &type metadata for FavoriteMusicItemAppIntent, v8);
  v9._countAndFlagsBits = 0x657469726F766146;
  v9._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  KeyPath = swift_getKeyPath(&unk_100EC9670);
  v11 = sub_100048748((unint64_t *)&qword_10119ECD8, type metadata accessor for GenericMusicItemEntity, (uint64_t)&unk_100EBED3C);
  v68 = v11;
  v70 = a1;
  v12 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v11);
  v13 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v12, v5, v13);
  swift_release();
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for FavoriteMusicItemAppIntent, v8);
  v15 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for FavoriteMusicItemAppIntent, v8);
  v16 = *(void (**)(char *, uint64_t))(v2 + 8);
  v66 = v15;
  v67 = v16;
  v17 = v69;
  v16(v4, v69);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(20, 1, &type metadata for FavoriteMusicItemAppIntent, v8);
  v18._countAndFlagsBits = 543450177;
  v18._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  v19 = swift_getKeyPath(&unk_100EC9670);
  v20 = _AssistantIntent.IntentProjection.subscript.getter(v19, v11);
  v21 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v20, v5, v21);
  swift_release();
  v22._object = (void *)0x8000000100E41CA0;
  v63 = (void *)0x8000000100E41CA0;
  v22._countAndFlagsBits = 0xD000000000000010;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for FavoriteMusicItemAppIntent, v8);
  v65 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for FavoriteMusicItemAppIntent, v8);
  v23 = v17;
  v24 = v67;
  v67(v4, v17);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(20, 1, &type metadata for FavoriteMusicItemAppIntent, v8);
  v25._countAndFlagsBits = 544503120;
  v25._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  v26 = swift_getKeyPath(&unk_100EC9670);
  v27 = v68;
  v28 = _AssistantIntent.IntentProjection.subscript.getter(v26, v68);
  v29 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v28, v5, v29);
  swift_release();
  v30._object = (void *)0x8000000100E41CC0;
  v30._countAndFlagsBits = 0xD000000000000010;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v30);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for FavoriteMusicItemAppIntent, v8);
  v64 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for FavoriteMusicItemAppIntent, v8);
  v24(v4, v23);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(21, 1, &type metadata for FavoriteMusicItemAppIntent, v8);
  v31._countAndFlagsBits = 0x2065766153;
  v31._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v31);
  v32 = swift_getKeyPath(&unk_100EC9670);
  v33 = _AssistantIntent.IntentProjection.subscript.getter(v32, v27);
  v34 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v33, v5, v34);
  swift_release();
  v35._countAndFlagsBits = 0xD000000000000010;
  v35._object = v63;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v35);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for FavoriteMusicItemAppIntent, v8);
  v63 = (void *)static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for FavoriteMusicItemAppIntent, v8);
  v24(v4, v69);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(6, 1, &type metadata for FavoriteMusicItemAppIntent, v8);
  v36._countAndFlagsBits = 0x207472616548;
  v36._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v36);
  v37 = swift_getKeyPath(&unk_100EC9670);
  v38 = _AssistantIntent.IntentProjection.subscript.getter(v37, v27);
  v39 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v38, v5, v39);
  swift_release();
  v40._countAndFlagsBits = 0;
  v40._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v40);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for FavoriteMusicItemAppIntent, v8);
  v62 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for FavoriteMusicItemAppIntent, v8);
  v41 = v69;
  v24(v4, v69);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(7, 1, &type metadata for FavoriteMusicItemAppIntent, v8);
  v42._countAndFlagsBits = 0x2065766F6C2049;
  v42._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v42);
  v43 = swift_getKeyPath(&unk_100EC9670);
  v44 = _AssistantIntent.IntentProjection.subscript.getter(v43, v68);
  v45 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v44, v5, v45);
  swift_release();
  v46._countAndFlagsBits = 0;
  v46._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v46);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for FavoriteMusicItemAppIntent, v8);
  v61 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for FavoriteMusicItemAppIntent, v8);
  v47 = v67;
  v67(v4, v41);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(7, 1, &type metadata for FavoriteMusicItemAppIntent, v8);
  v48._countAndFlagsBits = 0x20656B696C2049;
  v48._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v48);
  v49 = swift_getKeyPath(&unk_100EC9670);
  v50 = _AssistantIntent.IntentProjection.subscript.getter(v49, v68);
  v51 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v50, v5, v51);
  swift_release();
  v52._countAndFlagsBits = 0;
  v52._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v52);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for FavoriteMusicItemAppIntent, v8);
  v53 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for FavoriteMusicItemAppIntent, v8);
  v47(v4, v41);
  v54 = sub_100007E8C(&qword_1011C1DE8);
  v55 = swift_allocObject(v54, 88, 7);
  *(_OWORD *)(v55 + 16) = xmmword_100EA8160;
  v56 = v65;
  *(_QWORD *)(v55 + 32) = v66;
  *(_QWORD *)(v55 + 40) = v56;
  v57 = v63;
  *(_QWORD *)(v55 + 48) = v64;
  *(_QWORD *)(v55 + 56) = v57;
  v58 = v61;
  *(_QWORD *)(v55 + 64) = v62;
  *(_QWORD *)(v55 + 72) = v58;
  *(_QWORD *)(v55 + 80) = v53;
  v59 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v59;
}

uint64_t sub_100686FB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100EC9670);
  v5 = sub_100048748((unint64_t *)&qword_10119ECD8, type metadata accessor for GenericMusicItemEntity, (uint64_t)&unk_100EBED3C);
  v6 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v5);
  swift_release();
  v7 = sub_10068B558();
  _AssistantIntent.Value.init<A>(for:builder:)(v6, sub_1006864A4, 0, v7);
  v8 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v9 = sub_100007E8C(&qword_1011C1CE8);
  v10 = swift_allocObject(v9, 40, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v10 + 32) = v8;
  v11 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1006870D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  Swift::String v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  Swift::String v14;
  void (*v15)(char *, uint64_t);
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;

  v26 = a1;
  v1 = sub_100007E8C(&qword_1011C1DC0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011C1DC8);
  __chkstk_darwin(v5);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10068B59C();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(25, 1, &type metadata for UnfavoriteMusicItemAppIntent, v8);
  v9._countAndFlagsBits = 0x2065766F6D6552;
  v9._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  KeyPath = swift_getKeyPath(&unk_100EC9648);
  v11 = sub_100048748((unint64_t *)&qword_10119ECD8, type metadata accessor for GenericMusicItemEntity, (uint64_t)&unk_100EBED3C);
  v12 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v11);
  v13 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v12, v5, v13);
  swift_release();
  v14._countAndFlagsBits = 0xD000000000000012;
  v14._object = (void *)0x8000000100E41C80;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for UnfavoriteMusicItemAppIntent, v8);
  v27 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for UnfavoriteMusicItemAppIntent, v8);
  v15 = *(void (**)(char *, uint64_t))(v2 + 8);
  v15(v4, v1);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(25, 1, &type metadata for UnfavoriteMusicItemAppIntent, v8);
  v16._countAndFlagsBits = 0x206574656C6544;
  v16._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  v17 = swift_getKeyPath(&unk_100EC9648);
  v18 = _AssistantIntent.IntentProjection.subscript.getter(v17, v11);
  v19 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v18, v5, v19);
  swift_release();
  v20._countAndFlagsBits = 0xD000000000000012;
  v20._object = (void *)0x8000000100E41C80;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for UnfavoriteMusicItemAppIntent, v8);
  v21 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for UnfavoriteMusicItemAppIntent, v8);
  v15(v4, v1);
  v22 = sub_100007E8C(&qword_1011C1DD0);
  v23 = swift_allocObject(v22, 48, 7);
  *(_OWORD *)(v23 + 16) = xmmword_100EA7A80;
  *(_QWORD *)(v23 + 32) = v27;
  *(_QWORD *)(v23 + 40) = v21;
  v24 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)(v23);
  swift_bridgeObjectRelease();
  return v24;
}

uint64_t sub_1006873B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100EC9648);
  v5 = sub_100048748((unint64_t *)&qword_10119ECD8, type metadata accessor for GenericMusicItemEntity, (uint64_t)&unk_100EBED3C);
  v6 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v5);
  swift_release();
  v7 = sub_10068B59C();
  _AssistantIntent.Value.init<A>(for:builder:)(v6, sub_1006864A4, 0, v7);
  v8 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v9 = sub_100007E8C(&qword_1011C1CE8);
  v10 = swift_allocObject(v9, 40, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v10 + 32) = v8;
  v11 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1006874E0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  Swift::String v12;
  uint64_t v13;
  Swift::String v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  Swift::String v18;
  void (*v19)(char *, uint64_t);
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v0 = sub_100007E8C(&qword_1011C1DA8);
  v32 = *(_QWORD *)(v0 - 8);
  v33 = v0;
  __chkstk_darwin(v0);
  v2 = (char *)&v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100007E8C(&qword_1011C1DB0);
  __chkstk_darwin(v3);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10068B5E0();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(18, 1, &type metadata for SuggestLessMusicItemAppIntent, v6);
  v7._object = (void *)0x8000000100E41C60;
  v7._countAndFlagsBits = 0xD000000000000012;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_100EC9620);
  v9 = sub_100048748((unint64_t *)&qword_10119ECD8, type metadata accessor for GenericMusicItemEntity, (uint64_t)&unk_100EBED3C);
  v10 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v9);
  v11 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v10, v3, v11);
  swift_release();
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for SuggestLessMusicItemAppIntent, v6);
  v34 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for SuggestLessMusicItemAppIntent, v6);
  v13 = v33;
  v31 = *(void (**)(char *, uint64_t))(v32 + 8);
  v31(v2, v33);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(7, 1, &type metadata for SuggestLessMusicItemAppIntent, v6);
  v14._countAndFlagsBits = 0x20657461682049;
  v14._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  v15 = swift_getKeyPath(&unk_100EC9620);
  v16 = _AssistantIntent.IntentProjection.subscript.getter(v15, v9);
  v17 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v16, v3, v17);
  swift_release();
  v18._countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for SuggestLessMusicItemAppIntent, v6);
  v32 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for SuggestLessMusicItemAppIntent, v6);
  v19 = v31;
  v31(v2, v13);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(14, 1, &type metadata for SuggestLessMusicItemAppIntent, v6);
  v20._countAndFlagsBits = 0x746F6E206F642049;
  v20._object = (void *)0xEE0020656B696C20;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  v21 = swift_getKeyPath(&unk_100EC9620);
  v22 = _AssistantIntent.IntentProjection.subscript.getter(v21, v9);
  v23 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v22, v3, v23);
  swift_release();
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for SuggestLessMusicItemAppIntent, v6);
  v25 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for SuggestLessMusicItemAppIntent, v6);
  v19(v2, v13);
  v26 = sub_100007E8C(&qword_1011C1DB8);
  v27 = swift_allocObject(v26, 56, 7);
  *(_OWORD *)(v27 + 16) = xmmword_100EA7AC0;
  v28 = v32;
  *(_QWORD *)(v27 + 32) = v34;
  *(_QWORD *)(v27 + 40) = v28;
  *(_QWORD *)(v27 + 48) = v25;
  v29 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)(v27);
  swift_bridgeObjectRelease();
  return v29;
}

uint64_t sub_10068788C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100EC9620);
  v5 = sub_100048748((unint64_t *)&qword_10119ECD8, type metadata accessor for GenericMusicItemEntity, (uint64_t)&unk_100EBED3C);
  v6 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v5);
  swift_release();
  v7 = sub_10068B5E0();
  _AssistantIntent.Value.init<A>(for:builder:)(v6, sub_1006864A4, 0, v7);
  v8 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v9 = sub_100007E8C(&qword_1011C1CE8);
  v10 = swift_allocObject(v9, 40, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v10 + 32) = v8;
  v11 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1006879B4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  Swift::String v12;
  void (*v13)(char *, uint64_t);
  uint64_t v14;
  Swift::String v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;

  v26 = sub_100007E8C(&qword_1011C1D90);
  v0 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v2 = (char *)&v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100007E8C(&qword_1011C1D98);
  __chkstk_darwin(v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100666D94();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(23, 1, &type metadata for UndoSuggestLessMusicItemAppIntent, v6);
  v7._object = (void *)0x8000000100E41C40;
  v7._countAndFlagsBits = 0xD000000000000017;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_100EC95F8);
  v9 = sub_100048748((unint64_t *)&qword_10119ECD8, type metadata accessor for GenericMusicItemEntity, (uint64_t)&unk_100EBED3C);
  v10 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v9);
  v11 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v10, v3, v11);
  swift_release();
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for UndoSuggestLessMusicItemAppIntent, v6);
  v25 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for UndoSuggestLessMusicItemAppIntent, v6);
  v13 = *(void (**)(char *, uint64_t))(v0 + 8);
  v14 = v26;
  v13(v2, v26);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(22, 1, &type metadata for UndoSuggestLessMusicItemAppIntent, v6);
  v15._countAndFlagsBits = 0x2073706168726550;
  v15._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  v16 = swift_getKeyPath(&unk_100EC95F8);
  v17 = _AssistantIntent.IntentProjection.subscript.getter(v16, v9);
  v18 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v17, v3, v18);
  swift_release();
  v19._countAndFlagsBits = 0x20746F6E20736920;
  v19._object = (void *)0xEE00646162206F73;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for UndoSuggestLessMusicItemAppIntent, v6);
  v20 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for UndoSuggestLessMusicItemAppIntent, v6);
  v13(v2, v14);
  v21 = sub_100007E8C(&qword_1011C1DA0);
  v22 = swift_allocObject(v21, 48, 7);
  *(_OWORD *)(v22 + 16) = xmmword_100EA7A80;
  *(_QWORD *)(v22 + 32) = v25;
  *(_QWORD *)(v22 + 40) = v20;
  v23 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)(v22);
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_100687C98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100EC95F8);
  v5 = sub_100048748((unint64_t *)&qword_10119ECD8, type metadata accessor for GenericMusicItemEntity, (uint64_t)&unk_100EBED3C);
  v6 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v5);
  swift_release();
  v7 = sub_100666D94();
  _AssistantIntent.Value.init<A>(for:builder:)(v6, sub_1006864A4, 0, v7);
  v8 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v9 = sub_100007E8C(&qword_1011C1CE8);
  v10 = swift_allocObject(v9, 40, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v10 + 32) = v8;
  v11 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_100687DC0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  Swift::String v12;
  uint64_t v13;
  Swift::String v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  Swift::String v18;
  void (*v19)(char *, uint64_t);
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v0 = sub_100007E8C(&qword_1011C1D78);
  v32 = *(_QWORD *)(v0 - 8);
  v33 = v0;
  __chkstk_darwin(v0);
  v2 = (char *)&v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100007E8C(&qword_1011C1D80);
  __chkstk_darwin(v3);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1005FC830();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(18, 1, &type metadata for AddMusicItemToLibraryAppIntent, v6);
  v7._countAndFlagsBits = 543450177;
  v7._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_100EC95D0);
  v9 = sub_100048748((unint64_t *)&qword_10119ECD8, type metadata accessor for GenericMusicItemEntity, (uint64_t)&unk_100EBED3C);
  v10 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v9);
  v11 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v10, v3, v11);
  swift_release();
  v12._countAndFlagsBits = 0x6C20796D206F7420;
  v12._object = (void *)0xEE00797261726269;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for AddMusicItemToLibraryAppIntent, v6);
  v34 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for AddMusicItemToLibraryAppIntent, v6);
  v13 = v33;
  v31 = *(void (**)(char *, uint64_t))(v32 + 8);
  v31(v2, v33);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(18, 1, &type metadata for AddMusicItemToLibraryAppIntent, v6);
  v14._countAndFlagsBits = 544503120;
  v14._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  v15 = swift_getKeyPath(&unk_100EC95D0);
  v16 = _AssistantIntent.IntentProjection.subscript.getter(v15, v9);
  v17 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v16, v3, v17);
  swift_release();
  v18._countAndFlagsBits = 0x6C20796D206E6920;
  v18._object = (void *)0xEE00797261726269;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for AddMusicItemToLibraryAppIntent, v6);
  v32 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for AddMusicItemToLibraryAppIntent, v6);
  v19 = v31;
  v31(v2, v13);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(19, 1, &type metadata for AddMusicItemToLibraryAppIntent, v6);
  v20._countAndFlagsBits = 0x2065766153;
  v20._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  v21 = swift_getKeyPath(&unk_100EC95D0);
  v22 = _AssistantIntent.IntentProjection.subscript.getter(v21, v9);
  v23 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v22, v3, v23);
  swift_release();
  v24._countAndFlagsBits = 0x6C20796D206F7420;
  v24._object = (void *)0xEE00797261726269;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for AddMusicItemToLibraryAppIntent, v6);
  v25 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for AddMusicItemToLibraryAppIntent, v6);
  v19(v2, v13);
  v26 = sub_100007E8C(&qword_1011C1D88);
  v27 = swift_allocObject(v26, 56, 7);
  *(_OWORD *)(v27 + 16) = xmmword_100EA7AC0;
  v28 = v32;
  *(_QWORD *)(v27 + 32) = v34;
  *(_QWORD *)(v27 + 40) = v28;
  *(_QWORD *)(v27 + 48) = v25;
  v29 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)(v27);
  swift_bridgeObjectRelease();
  return v29;
}

uint64_t sub_100688190()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100EC95D0);
  v5 = sub_100048748((unint64_t *)&qword_10119ECD8, type metadata accessor for GenericMusicItemEntity, (uint64_t)&unk_100EBED3C);
  v6 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v5);
  swift_release();
  v7 = sub_1005FC830();
  _AssistantIntent.Value.init<A>(for:builder:)(v6, sub_1006864A4, 0, v7);
  v8 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v9 = sub_100007E8C(&qword_1011C1CE8);
  v10 = swift_allocObject(v9, 40, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v10 + 32) = v8;
  v11 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1006882B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  Swift::String v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  Swift::String v14;
  void (*v15)(char *, uint64_t);
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;

  v26 = a1;
  v1 = sub_100007E8C(&qword_1011C1D60);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011C1D68);
  __chkstk_darwin(v5);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1005FDF00();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(23, 1, &type metadata for RemoveMusicItemFromLibraryAppIntent, v8);
  v9._countAndFlagsBits = 0x206574656C6544;
  v9._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  KeyPath = swift_getKeyPath(&unk_100EC95A8);
  v11 = sub_100048748((unint64_t *)&qword_10119ECD8, type metadata accessor for GenericMusicItemEntity, (uint64_t)&unk_100EBED3C);
  v12 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v11);
  v13 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v12, v5, v13);
  swift_release();
  v14._countAndFlagsBits = 0xD000000000000010;
  v14._object = (void *)0x8000000100E41C20;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for RemoveMusicItemFromLibraryAppIntent, v8);
  v27 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for RemoveMusicItemFromLibraryAppIntent, v8);
  v15 = *(void (**)(char *, uint64_t))(v2 + 8);
  v15(v4, v1);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(23, 1, &type metadata for RemoveMusicItemFromLibraryAppIntent, v8);
  v16._countAndFlagsBits = 0x2065766F6D6552;
  v16._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  v17 = swift_getKeyPath(&unk_100EC95A8);
  v18 = _AssistantIntent.IntentProjection.subscript.getter(v17, v11);
  v19 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v18, v5, v19);
  swift_release();
  v20._countAndFlagsBits = 0xD000000000000010;
  v20._object = (void *)0x8000000100E41C20;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for RemoveMusicItemFromLibraryAppIntent, v8);
  v21 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for RemoveMusicItemFromLibraryAppIntent, v8);
  v15(v4, v1);
  v22 = sub_100007E8C(&qword_1011C1D70);
  v23 = swift_allocObject(v22, 48, 7);
  *(_OWORD *)(v23 + 16) = xmmword_100EA7A80;
  *(_QWORD *)(v23 + 32) = v27;
  *(_QWORD *)(v23 + 40) = v21;
  v24 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)(v23);
  swift_bridgeObjectRelease();
  return v24;
}

uint64_t sub_100688598()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100EC95A8);
  v5 = sub_100048748((unint64_t *)&qword_10119ECD8, type metadata accessor for GenericMusicItemEntity, (uint64_t)&unk_100EBED3C);
  v6 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v5);
  swift_release();
  v7 = sub_1005FDF00();
  _AssistantIntent.Value.init<A>(for:builder:)(v6, sub_1006864A4, 0, v7);
  v8 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v9 = sub_100007E8C(&qword_1011C1CE8);
  v10 = swift_allocObject(v9, 40, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v10 + 32) = v8;
  v11 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1006886C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  Swift::String v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  Swift::String v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  Swift::String v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  Swift::String v25;
  void (*v26)(char *, uint64_t);
  Swift::String v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  Swift::String v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  Swift::String v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  Swift::String v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v52 = a1;
  v51 = sub_100007E8C(&qword_1011C1D48);
  v1 = *(_QWORD *)(v51 - 8);
  __chkstk_darwin(v51);
  v3 = (char *)&v46 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_1011C1D58);
  __chkstk_darwin(v4);
  v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10068B624();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(9, 1, &type metadata for OpenNowPlayingAppIntent, v7);
  v8._countAndFlagsBits = 0x656874206E65704FLL;
  v8._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  KeyPath = swift_getKeyPath(&unk_100EC9580);
  v10 = sub_10068B748(&qword_1011C1D38, &qword_1011BD880, (void (*)(void))sub_10068B7AC);
  v53 = v10;
  v11 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v10);
  v12 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v11, v4, v12);
  swift_release();
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for OpenNowPlayingAppIntent, v7);
  v50 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenNowPlayingAppIntent, v7);
  v14 = *(void (**)(char *, uint64_t))(v1 + 8);
  v15 = v51;
  v14(v3, v51);
  v46 = v14;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(12, 1, &type metadata for OpenNowPlayingAppIntent, v7);
  v16._countAndFlagsBits = 0x20656D20776F6853;
  v16._object = (void *)0xEC00000020656874;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  v17 = swift_getKeyPath(&unk_100EC9580);
  v18 = _AssistantIntent.IntentProjection.subscript.getter(v17, v10);
  v19 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v18, v4, v19);
  swift_release();
  v20._countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for OpenNowPlayingAppIntent, v7);
  v49 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenNowPlayingAppIntent, v7);
  v14(v3, v15);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(10, 1, &type metadata for OpenNowPlayingAppIntent, v7);
  v21._countAndFlagsBits = 0x6874206F74206F47;
  v21._object = (void *)0xEA00000000002065;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  v22 = swift_getKeyPath(&unk_100EC9580);
  v23 = _AssistantIntent.IntentProjection.subscript.getter(v22, v53);
  v24 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v23, v4, v24);
  swift_release();
  v25._countAndFlagsBits = 0;
  v25._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for OpenNowPlayingAppIntent, v7);
  v48 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenNowPlayingAppIntent, v7);
  v26 = v46;
  v46(v3, v15);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(12, 1, &type metadata for OpenNowPlayingAppIntent, v7);
  v27._countAndFlagsBits = 0x207075206C6C7550;
  v27._object = (void *)0xEC00000020656874;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v27);
  v28 = swift_getKeyPath(&unk_100EC9580);
  v29 = _AssistantIntent.IntentProjection.subscript.getter(v28, v53);
  v30 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v29, v4, v30);
  swift_release();
  v31._countAndFlagsBits = 0;
  v31._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v31);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for OpenNowPlayingAppIntent, v7);
  v47 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenNowPlayingAppIntent, v7);
  v32 = v51;
  v33 = v26;
  v26(v3, v51);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(15, 1, &type metadata for OpenNowPlayingAppIntent, v7);
  v34._countAndFlagsBits = 0x20656D20656B6154;
  v34._object = (void *)0xEF20656874206F74;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v34);
  v35 = swift_getKeyPath(&unk_100EC9580);
  v36 = _AssistantIntent.IntentProjection.subscript.getter(v35, v53);
  v37 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v36, v4, v37);
  swift_release();
  v38._countAndFlagsBits = 0;
  v38._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v38);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for OpenNowPlayingAppIntent, v7);
  v39 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenNowPlayingAppIntent, v7);
  v33(v3, v32);
  v40 = sub_100007E8C(&qword_1011C1D50);
  v41 = swift_allocObject(v40, 72, 7);
  *(_OWORD *)(v41 + 16) = xmmword_100EC06D0;
  v42 = v49;
  *(_QWORD *)(v41 + 32) = v50;
  *(_QWORD *)(v41 + 40) = v42;
  v43 = v47;
  *(_QWORD *)(v41 + 48) = v48;
  *(_QWORD *)(v41 + 56) = v43;
  *(_QWORD *)(v41 + 64) = v39;
  v44 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)(v41);
  swift_bridgeObjectRelease();
  return v44;
}

uint64_t sub_100688C20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v0 = sub_100007E8C(&qword_1011C1D48);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10068B624();
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000010, 0x8000000100E41B80, &type metadata for OpenNowPlayingAppIntent, v4);
  v5 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenNowPlayingAppIntent, v4);
  v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000013, 0x8000000100E41BA0, &type metadata for OpenNowPlayingAppIntent, v4);
  v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenNowPlayingAppIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000011, 0x8000000100E41BC0, &type metadata for OpenNowPlayingAppIntent, v4);
  v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenNowPlayingAppIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000013, 0x8000000100E41BE0, &type metadata for OpenNowPlayingAppIntent, v4);
  v9 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenNowPlayingAppIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000016, 0x8000000100E41C00, &type metadata for OpenNowPlayingAppIntent, v4);
  v10 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenNowPlayingAppIntent, v4);
  v6(v3, v0);
  v11 = sub_100007E8C(&qword_1011C1D50);
  v12 = swift_allocObject(v11, 72, 7);
  *(_OWORD *)(v12 + 16) = xmmword_100EC06D0;
  *(_QWORD *)(v12 + 32) = v5;
  *(_QWORD *)(v12 + 40) = v7;
  *(_QWORD *)(v12 + 48) = v8;
  *(_QWORD *)(v12 + 56) = v9;
  *(_QWORD *)(v12 + 64) = v10;
  v13 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)(v12);
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_100688E60()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  Swift::String v12;
  uint64_t v13;
  Swift::String v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  Swift::String v18;
  void (*v19)(char *, uint64_t);
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v0 = sub_100007E8C(&qword_1011C1D20);
  v32 = *(_QWORD *)(v0 - 8);
  v33 = v0;
  __chkstk_darwin(v0);
  v2 = (char *)&v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100007E8C(&qword_1011C1D30);
  __chkstk_darwin(v3);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100607AB4();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(10, 1, &type metadata for CloseNowPlayingAppIntent, v6);
  v7._countAndFlagsBits = 0x68742065736F6C43;
  v7._object = (void *)0xEA00000000002065;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_100EC9558);
  v9 = sub_10068B748(&qword_1011C1D38, &qword_1011BD880, (void (*)(void))sub_10068B7AC);
  v10 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v9);
  v11 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v10, v3, v11);
  swift_release();
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for CloseNowPlayingAppIntent, v6);
  v34 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for CloseNowPlayingAppIntent, v6);
  v13 = v33;
  v31 = *(void (**)(char *, uint64_t))(v32 + 8);
  v31(v2, v33);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(9, 1, &type metadata for CloseNowPlayingAppIntent, v6);
  v14._countAndFlagsBits = 0x6568742065646948;
  v14._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  v15 = swift_getKeyPath(&unk_100EC9558);
  v16 = _AssistantIntent.IntentProjection.subscript.getter(v15, v9);
  v17 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v16, v3, v17);
  swift_release();
  v18._countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for CloseNowPlayingAppIntent, v6);
  v32 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for CloseNowPlayingAppIntent, v6);
  v19 = v31;
  v31(v2, v13);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(12, 1, &type metadata for CloseNowPlayingAppIntent, v6);
  v20._countAndFlagsBits = 0x207373696D736944;
  v20._object = (void *)0xEC00000020656874;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  v21 = swift_getKeyPath(&unk_100EC9558);
  v22 = _AssistantIntent.IntentProjection.subscript.getter(v21, v9);
  v23 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v22, v3, v23);
  swift_release();
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for CloseNowPlayingAppIntent, v6);
  v25 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for CloseNowPlayingAppIntent, v6);
  v19(v2, v13);
  v26 = sub_100007E8C(&qword_1011C1D28);
  v27 = swift_allocObject(v26, 56, 7);
  *(_OWORD *)(v27 + 16) = xmmword_100EA7AC0;
  v28 = v32;
  *(_QWORD *)(v27 + 32) = v34;
  *(_QWORD *)(v27 + 40) = v28;
  *(_QWORD *)(v27 + 48) = v25;
  v29 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)(v27);
  swift_bridgeObjectRelease();
  return v29;
}

uint64_t sub_10068920C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v0 = sub_100007E8C(&qword_1011C1D20);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100607AB4();
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000011, 0x8000000100E40AC0, &type metadata for CloseNowPlayingAppIntent, v4);
  v5 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for CloseNowPlayingAppIntent, v4);
  v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000010, 0x8000000100E41B40, &type metadata for CloseNowPlayingAppIntent, v4);
  v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for CloseNowPlayingAppIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000013, 0x8000000100E41B60, &type metadata for CloseNowPlayingAppIntent, v4);
  v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for CloseNowPlayingAppIntent, v4);
  v6(v3, v0);
  v9 = sub_100007E8C(&qword_1011C1D28);
  v10 = swift_allocObject(v9, 56, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100EA7AC0;
  *(_QWORD *)(v10 + 32) = v5;
  *(_QWORD *)(v10 + 40) = v7;
  *(_QWORD *)(v10 + 48) = v8;
  v11 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)(v10);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1006893B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  Swift::String v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  Swift::String v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  Swift::String v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  Swift::String v25;
  void (*v26)(char *, uint64_t);
  Swift::String v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  Swift::String v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  Swift::String v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  Swift::String v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v52 = a1;
  v51 = sub_100007E8C(&qword_1011C1D08);
  v1 = *(_QWORD *)(v51 - 8);
  __chkstk_darwin(v51);
  v3 = (char *)&v46 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_1011C1D10);
  __chkstk_darwin(v4);
  v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100078E54();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(5, 1, &type metadata for OpenMusicItemAppIntent, v7);
  v8._countAndFlagsBits = 0x206E65704FLL;
  v8._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  KeyPath = swift_getKeyPath(&unk_100EC9530);
  v10 = sub_100048748((unint64_t *)&qword_10119ECD8, type metadata accessor for GenericMusicItemEntity, (uint64_t)&unk_100EBED3C);
  v53 = v10;
  v11 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v10);
  v12 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v11, v4, v12);
  swift_release();
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for OpenMusicItemAppIntent, v7);
  v50 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenMusicItemAppIntent, v7);
  v14 = *(void (**)(char *, uint64_t))(v1 + 8);
  v15 = v51;
  v14(v3, v51);
  v46 = v14;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(8, 1, &type metadata for OpenMusicItemAppIntent, v7);
  v16._countAndFlagsBits = 0x20656D20776F6853;
  v16._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  v17 = swift_getKeyPath(&unk_100EC9530);
  v18 = _AssistantIntent.IntentProjection.subscript.getter(v17, v10);
  v19 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v18, v4, v19);
  swift_release();
  v20._countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for OpenMusicItemAppIntent, v7);
  v49 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenMusicItemAppIntent, v7);
  v14(v3, v15);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(6, 1, &type metadata for OpenMusicItemAppIntent, v7);
  v21._countAndFlagsBits = 0x206F74206F47;
  v21._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  v22 = swift_getKeyPath(&unk_100EC9530);
  v23 = _AssistantIntent.IntentProjection.subscript.getter(v22, v53);
  v24 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v23, v4, v24);
  swift_release();
  v25._countAndFlagsBits = 0;
  v25._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for OpenMusicItemAppIntent, v7);
  v48 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenMusicItemAppIntent, v7);
  v26 = v46;
  v46(v3, v15);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(8, 1, &type metadata for OpenMusicItemAppIntent, v7);
  v27._countAndFlagsBits = 0x207075206C6C7550;
  v27._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v27);
  v28 = swift_getKeyPath(&unk_100EC9530);
  v29 = _AssistantIntent.IntentProjection.subscript.getter(v28, v53);
  v30 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v29, v4, v30);
  swift_release();
  v31._countAndFlagsBits = 0;
  v31._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v31);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for OpenMusicItemAppIntent, v7);
  v47 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenMusicItemAppIntent, v7);
  v32 = v51;
  v33 = v26;
  v26(v3, v51);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(11, 1, &type metadata for OpenMusicItemAppIntent, v7);
  v34._countAndFlagsBits = 0x20656D20656B6154;
  v34._object = (void *)0xEB00000000206F74;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v34);
  v35 = swift_getKeyPath(&unk_100EC9530);
  v36 = _AssistantIntent.IntentProjection.subscript.getter(v35, v53);
  v37 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v36, v4, v37);
  swift_release();
  v38._countAndFlagsBits = 0;
  v38._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v38);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for OpenMusicItemAppIntent, v7);
  v39 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenMusicItemAppIntent, v7);
  v33(v3, v32);
  v40 = sub_100007E8C(&qword_1011C1D18);
  v41 = swift_allocObject(v40, 72, 7);
  *(_OWORD *)(v41 + 16) = xmmword_100EC06D0;
  v42 = v49;
  *(_QWORD *)(v41 + 32) = v50;
  *(_QWORD *)(v41 + 40) = v42;
  v43 = v47;
  *(_QWORD *)(v41 + 48) = v48;
  *(_QWORD *)(v41 + 56) = v43;
  *(_QWORD *)(v41 + 64) = v39;
  v44 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)(v41);
  swift_bridgeObjectRelease();
  return v44;
}

uint64_t sub_1006898EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v2 = type metadata accessor for GenericMusicItemEntity(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v9 - v6;
  sub_100078D8C(a1, (uint64_t)&v9 - v6);
  sub_100078D8C((uint64_t)v7, (uint64_t)v4);
  IntentParameter.wrappedValue.setter(v4);
  return sub_100078DD0((uint64_t)v7);
}

uint64_t sub_100689994()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100EC9530);
  v5 = sub_100048748((unint64_t *)&qword_10119ECD8, type metadata accessor for GenericMusicItemEntity, (uint64_t)&unk_100EBED3C);
  v6 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v5);
  swift_release();
  v7 = sub_100078E54();
  _AssistantIntent.Value.init<A>(for:builder:)(v6, sub_1006864A4, 0, v7);
  v8 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v9 = sub_100007E8C(&qword_1011C1CE8);
  v10 = swift_allocObject(v9, 40, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v10 + 32) = v8;
  v11 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_100689ABC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000020, 0x8000000100E41A90);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000020, 0x8000000100E41AC0);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x1000000000000024, 0x8000000100E41AF0);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD00000000000001CLL, 0x8000000100E41B20);
  v4 = sub_100007E8C(&qword_1011C1CA8);
  v5 = swift_allocObject(v4, 64, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100EA7BA0;
  *(_QWORD *)(v5 + 32) = v0;
  *(_QWORD *)(v5 + 40) = v1;
  *(_QWORD *)(v5 + 48) = v2;
  *(_QWORD *)(v5 + 56) = v3;
  v6 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_100689BAC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  Swift::String v12;
  uint64_t v13;
  Swift::String v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  Swift::String v18;
  void (*v19)(char *, uint64_t);
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v0 = sub_100007E8C(&qword_1011C1CF0);
  v32 = *(_QWORD *)(v0 - 8);
  v33 = v0;
  __chkstk_darwin(v0);
  v2 = (char *)&v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100007E8C(&qword_1011C1CF8);
  __chkstk_darwin(v3);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100241B54();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(11, 1, &type metadata for SearchMusicAppIntent, v6);
  v7._countAndFlagsBits = 0x6620686372616553;
  v7._object = (void *)0xEB0000000020726FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_100EC94E0);
  v9 = sub_100048748(&qword_1011C1CD8, (uint64_t (*)(uint64_t))&type metadata accessor for StringSearchCriteria, (uint64_t)&protocol conformance descriptor for StringSearchCriteria);
  v10 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v9);
  v11 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v10, v3, v11);
  swift_release();
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for SearchMusicAppIntent, v6);
  v34 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for SearchMusicAppIntent, v6);
  v13 = v33;
  v31 = *(void (**)(char *, uint64_t))(v32 + 8);
  v31(v2, v33);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(5, 1, &type metadata for SearchMusicAppIntent, v6);
  v14._countAndFlagsBits = 0x20646E6946;
  v14._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  v15 = swift_getKeyPath(&unk_100EC94E0);
  v16 = _AssistantIntent.IntentProjection.subscript.getter(v15, v9);
  v17 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v16, v3, v17);
  swift_release();
  v18._countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for SearchMusicAppIntent, v6);
  v32 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for SearchMusicAppIntent, v6);
  v19 = v31;
  v31(v2, v13);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(9, 1, &type metadata for SearchMusicAppIntent, v6);
  v20._countAndFlagsBits = 0x726F66206B6F6F4CLL;
  v20._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  v21 = swift_getKeyPath(&unk_100EC94E0);
  v22 = _AssistantIntent.IntentProjection.subscript.getter(v21, v9);
  v23 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v22, v3, v23);
  swift_release();
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for SearchMusicAppIntent, v6);
  v25 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for SearchMusicAppIntent, v6);
  v19(v2, v13);
  v26 = sub_100007E8C(&qword_1011C1D00);
  v27 = swift_allocObject(v26, 56, 7);
  *(_OWORD *)(v27 + 16) = xmmword_100EA7AC0;
  v28 = v32;
  *(_QWORD *)(v27 + 32) = v34;
  *(_QWORD *)(v27 + 40) = v28;
  *(_QWORD *)(v27 + 48) = v25;
  v29 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)(v27);
  swift_bridgeObjectRelease();
  return v29;
}

uint64_t sub_100689F50(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, uint64_t, uint64_t);
  uint64_t v11;

  v2 = type metadata accessor for StringSearchCriteria(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v11 - v7;
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v9((char *)&v11 - v7, a1, v2);
  v9(v6, (uint64_t)v8, v2);
  IntentParameter.wrappedValue.setter(v6);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

uint64_t sub_10068A020()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100EC94E0);
  v5 = sub_100048748(&qword_1011C1CD8, (uint64_t (*)(uint64_t))&type metadata accessor for StringSearchCriteria, (uint64_t)&protocol conformance descriptor for StringSearchCriteria);
  v6 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v5);
  swift_release();
  v7 = sub_100241B54();
  _AssistantIntent.Value.init<A>(for:builder:)(v6, sub_10068A148, 0, v7);
  v8 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v9 = sub_100007E8C(&qword_1011C1CE8);
  v10 = swift_allocObject(v9, 40, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v10 + 32) = v8;
  v11 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_10068A14C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  Swift::String v12;
  uint64_t v13;
  Swift::String v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  Swift::String v18;
  void (*v19)(char *, uint64_t);
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v0 = sub_100007E8C(&qword_1011C1CF0);
  v32 = *(_QWORD *)(v0 - 8);
  v33 = v0;
  __chkstk_darwin(v0);
  v2 = (char *)&v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100007E8C(&qword_1011C1CF8);
  __chkstk_darwin(v3);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100241B54();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(26, 1, &type metadata for SearchMusicAppIntent, v6);
  v7._countAndFlagsBits = 0x6620686372616553;
  v7._object = (void *)0xEB0000000020726FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_100EC94E0);
  v9 = sub_100048748(&qword_1011C1CD8, (uint64_t (*)(uint64_t))&type metadata accessor for StringSearchCriteria, (uint64_t)&protocol conformance descriptor for StringSearchCriteria);
  v10 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v9);
  v11 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v10, v3, v11);
  swift_release();
  v12._countAndFlagsBits = 0x6C707041206E6920;
  v12._object = (void *)0xEF636973754D2065;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for SearchMusicAppIntent, v6);
  v34 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for SearchMusicAppIntent, v6);
  v13 = v33;
  v31 = *(void (**)(char *, uint64_t))(v32 + 8);
  v31(v2, v33);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(20, 1, &type metadata for SearchMusicAppIntent, v6);
  v14._countAndFlagsBits = 0x20646E6946;
  v14._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  v15 = swift_getKeyPath(&unk_100EC94E0);
  v16 = _AssistantIntent.IntentProjection.subscript.getter(v15, v9);
  v17 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v16, v3, v17);
  swift_release();
  v18._countAndFlagsBits = 0x6C707041206E6920;
  v18._object = (void *)0xEF636973754D2065;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for SearchMusicAppIntent, v6);
  v32 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for SearchMusicAppIntent, v6);
  v19 = v31;
  v31(v2, v13);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(24, 1, &type metadata for SearchMusicAppIntent, v6);
  v20._countAndFlagsBits = 0x726F66206B6F6F4CLL;
  v20._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  v21 = swift_getKeyPath(&unk_100EC94E0);
  v22 = _AssistantIntent.IntentProjection.subscript.getter(v21, v9);
  v23 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v22, v3, v23);
  swift_release();
  v24._countAndFlagsBits = 0x6C707041206E6920;
  v24._object = (void *)0xEF636973754D2065;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for SearchMusicAppIntent, v6);
  v25 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for SearchMusicAppIntent, v6);
  v19(v2, v13);
  v26 = sub_100007E8C(&qword_1011C1D00);
  v27 = swift_allocObject(v26, 56, 7);
  *(_OWORD *)(v27 + 16) = xmmword_100EA7AC0;
  v28 = v32;
  *(_QWORD *)(v27 + 32) = v34;
  *(_QWORD *)(v27 + 40) = v28;
  *(_QWORD *)(v27 + 48) = v25;
  v29 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)(v27);
  swift_bridgeObjectRelease();
  return v29;
}

uint64_t sub_10068A538(uint64_t a1)
{
  return sub_10068A964(a1, (uint64_t)sub_10068A148, (uint64_t)sub_10068A54C);
}

uint64_t sub_10068A54C()
{
  return sub_10068AC74(0x676F6C61746163, 0xE700000000000000);
}

uint64_t sub_10068A564()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  Swift::String v12;
  uint64_t v13;
  Swift::String v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  Swift::String v18;
  void (*v19)(char *, uint64_t);
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v0 = sub_100007E8C(&qword_1011C1CF0);
  v32 = *(_QWORD *)(v0 - 8);
  v33 = v0;
  __chkstk_darwin(v0);
  v2 = (char *)&v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100007E8C(&qword_1011C1CF8);
  __chkstk_darwin(v3);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100241B54();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(25, 1, &type metadata for SearchMusicAppIntent, v6);
  v7._countAndFlagsBits = 0x6620686372616553;
  v7._object = (void *)0xEB0000000020726FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_100EC94E0);
  v9 = sub_100048748(&qword_1011C1CD8, (uint64_t (*)(uint64_t))&type metadata accessor for StringSearchCriteria, (uint64_t)&protocol conformance descriptor for StringSearchCriteria);
  v10 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v9);
  v11 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v10, v3, v11);
  swift_release();
  v12._countAndFlagsBits = 0x6C20796D206E6920;
  v12._object = (void *)0xEE00797261726269;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for SearchMusicAppIntent, v6);
  v34 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for SearchMusicAppIntent, v6);
  v13 = v33;
  v31 = *(void (**)(char *, uint64_t))(v32 + 8);
  v31(v2, v33);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(19, 1, &type metadata for SearchMusicAppIntent, v6);
  v14._countAndFlagsBits = 0x20646E6946;
  v14._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  v15 = swift_getKeyPath(&unk_100EC94E0);
  v16 = _AssistantIntent.IntentProjection.subscript.getter(v15, v9);
  v17 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v16, v3, v17);
  swift_release();
  v18._countAndFlagsBits = 0x6C20796D206E6920;
  v18._object = (void *)0xEE00797261726269;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for SearchMusicAppIntent, v6);
  v32 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for SearchMusicAppIntent, v6);
  v19 = v31;
  v31(v2, v13);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(23, 1, &type metadata for SearchMusicAppIntent, v6);
  v20._countAndFlagsBits = 0x726F66206B6F6F4CLL;
  v20._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  v21 = swift_getKeyPath(&unk_100EC94E0);
  v22 = _AssistantIntent.IntentProjection.subscript.getter(v21, v9);
  v23 = swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v22, v3, v23);
  swift_release();
  v24._countAndFlagsBits = 0x6C20796D206E6920;
  v24._object = (void *)0xEE00797261726269;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for SearchMusicAppIntent, v6);
  v25 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for SearchMusicAppIntent, v6);
  v19(v2, v13);
  v26 = sub_100007E8C(&qword_1011C1D00);
  v27 = swift_allocObject(v26, 56, 7);
  *(_OWORD *)(v27 + 16) = xmmword_100EA7AC0;
  v28 = v32;
  *(_QWORD *)(v27 + 32) = v34;
  *(_QWORD *)(v27 + 40) = v28;
  *(_QWORD *)(v27 + 48) = v25;
  v29 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)(v27);
  swift_bridgeObjectRelease();
  return v29;
}

uint64_t sub_10068A950(uint64_t a1)
{
  return sub_10068A964(a1, (uint64_t)sub_10068A148, (uint64_t)sub_10068AC40);
}

uint64_t sub_10068A964(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v5 = type metadata accessor for _AssistantIntent.Value(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100EC94E0);
  v10 = sub_100048748(&qword_1011C1CD8, (uint64_t (*)(uint64_t))&type metadata accessor for StringSearchCriteria, (uint64_t)&protocol conformance descriptor for StringSearchCriteria);
  v11 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v10);
  swift_release();
  v12 = sub_100241B54();
  _AssistantIntent.Value.init<A>(for:builder:)(v11, a2, 0, v12);
  v13 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v8);
  v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v8, v5);
  v15 = swift_getKeyPath(&unk_100EC9508);
  v16 = sub_10068B748(&qword_1011C1CE0, &qword_1011A8528, (void (*)(void))sub_100240524);
  v17 = _AssistantIntent.IntentProjection.subscript.getter(v15, v16);
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)(v17, a3, 0, v12);
  v18 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v8);
  v14(v8, v5);
  v19 = sub_100007E8C(&qword_1011C1CE8);
  v20 = swift_allocObject(v19, 48, 7);
  *(_OWORD *)(v20 + 16) = xmmword_100EA7A80;
  *(_QWORD *)(v20 + 32) = v13;
  *(_QWORD *)(v20 + 40) = v18;
  v21 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_10068AB10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000021, 0x8000000100E419A0);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000021, 0x8000000100E419D0);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000025, 0x8000000100E41A00);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000013, 0x8000000100E41A30);
  v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD00000000000001ELL, 0x8000000100E41A50);
  v5 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000010, 0x8000000100E41A70);
  v6 = sub_100007E8C(&qword_1011C1CA8);
  v7 = swift_allocObject(v6, 80, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100EB02A0;
  *(_QWORD *)(v7 + 32) = v0;
  *(_QWORD *)(v7 + 40) = v1;
  *(_QWORD *)(v7 + 48) = v2;
  *(_QWORD *)(v7 + 56) = v3;
  *(_QWORD *)(v7 + 64) = v4;
  *(_QWORD *)(v7 + 72) = v5;
  v8 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_10068AC40()
{
  return sub_10068AC74(0x7972617262696CLL, 0xE700000000000000);
}

uint64_t sub_10068AC58()
{
  return sub_10068AC74(0xD000000000000018, 0x8000000100E41980);
}

uint64_t sub_10068AC74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(a1, a2);
  v3 = sub_100007E8C(&qword_1011C1CA8);
  v4 = swift_allocObject(v3, 40, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v4 + 32) = v2;
  v5 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_10068ACDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v0 = type metadata accessor for _AssistantIntent.NegativeAssistantIntentPhrases(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10068ADCC();
  _AssistantIntent.NegativeAssistantIntentPhrases.init<A>(for:phrases:)(&type metadata for OpenMusicTabAppIntent, sub_10068AC58, 0, &type metadata for OpenMusicTabAppIntent, v4);
  v5 = static _AssistantIntent.NegativeAssistantIntentPhrasesBuilder.buildExpression(_:)(v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v6 = sub_100007E8C(&qword_1011C1CA0);
  v7 = swift_allocObject(v6, 40, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v7 + 32) = v5;
  v8 = static _AssistantIntent.NegativeAssistantIntentPhrasesBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v8;
}

ValueMetadata *type metadata accessor for MusicAssistantIntentsProvider()
{
  return &type metadata for MusicAssistantIntentsProvider;
}

unint64_t sub_10068ADCC()
{
  unint64_t result;

  result = qword_1011C1C98;
  if (!qword_1011C1C98)
  {
    result = swift_getWitnessTable(&unk_100ED6164, &type metadata for OpenMusicTabAppIntent);
    atomic_store(result, (unint64_t *)&qword_1011C1C98);
  }
  return result;
}

uint64_t sub_10068AE10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  void (*v5)(char *, uint64_t);
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v0 = type metadata accessor for _AssistantIntent(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_1008EE9D8();
  v4 = sub_10068ADCC();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v53, sub_10068409C, 0, &j_j___s10AppIntents16_AssistantIntentV21ParameterValueBuilderO10buildBlockSayAC0F0VGyFZ, 0, &type metadata for OpenMusicTabAppIntent, v4);
  v52 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  v53 = sub_10025625C();
  v6 = sub_100255344();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v53, sub_100684B70, 0, &j_j___s10AppIntents16_AssistantIntentV21ParameterValueBuilderO10buildBlockSayAC0F0VGyFZ, 0, &type metadata for OpenLibrarySectionAppIntent, v6);
  v51 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v5(v3, v0);
  v53 = sub_100078A80();
  v7 = sub_100078CC0();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v53, sub_1006856E0, 0, sub_100685CFC, 0, &type metadata for CreatePlaylistAppIntent, v7);
  v50 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v5(v3, v0);
  v53 = sub_100452170();
  v8 = sub_1004523F0();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v53, sub_100685ED4, 0, sub_10068637C, 0, &type metadata for DownloadMusicItemAppIntent, v8);
  v49 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v5(v3, v0);
  v53 = sub_10037DA40();
  v9 = sub_10037DD08();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v53, sub_1006864A8, 0, sub_1006867A0, 0, &type metadata for RemoveDownloadMusicItemAppIntent, v9);
  v48 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v5(v3, v0);
  v53 = sub_10091B8B4();
  v10 = sub_10068B558();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v53, sub_1006868C8, 0, sub_100686FB0, 0, &type metadata for FavoriteMusicItemAppIntent, v10);
  v47 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v5(v3, v0);
  v53 = sub_1008DA604();
  v11 = sub_10068B59C();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v53, sub_1006870D8, 0, sub_1006873B8, 0, &type metadata for UnfavoriteMusicItemAppIntent, v11);
  v46 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v5(v3, v0);
  v53 = sub_1008F2CA0();
  v12 = sub_10068B5E0();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v53, sub_1006874E0, 0, sub_10068788C, 0, &type metadata for SuggestLessMusicItemAppIntent, v12);
  v45 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v5(v3, v0);
  v53 = sub_100666B14();
  v13 = sub_100666D94();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v53, sub_1006879B4, 0, sub_100687C98, 0, &type metadata for UndoSuggestLessMusicItemAppIntent, v13);
  v44 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v5(v3, v0);
  v53 = sub_1005FC5B0();
  v14 = sub_1005FC830();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v53, sub_100687DC0, 0, sub_100688190, 0, &type metadata for AddMusicItemToLibraryAppIntent, v14);
  v43 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v5(v3, v0);
  v53 = sub_10037DA40();
  v15 = sub_1005FDF00();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v53, sub_1006882B8, 0, sub_100688598, 0, &type metadata for RemoveMusicItemFromLibraryAppIntent, v15);
  v42 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v5(v3, v0);
  v53 = sub_100722274();
  v16 = sub_10068B624();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v53, sub_1006886C0, 0, &j___s10AppIntents16_AssistantIntentV21ParameterValueBuilderO10buildBlockSayAC0F0VGyFZ, 0, &type metadata for OpenNowPlayingAppIntent, v16);
  v41 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v5(v3, v0);
  v53 = sub_100722274();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v53, sub_100688C20, 0, &j_j___s10AppIntents16_AssistantIntentV21ParameterValueBuilderO10buildBlockSayAC0F0VGyFZ, 0, &type metadata for OpenNowPlayingAppIntent, v16);
  v40 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v5(v3, v0);
  v53 = sub_100607838();
  v17 = sub_100607AB4();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v53, sub_100688E60, 0, &j_j___s10AppIntents16_AssistantIntentV21ParameterValueBuilderO10buildBlockSayAC0F0VGyFZ, 0, &type metadata for CloseNowPlayingAppIntent, v17);
  v18 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v5(v3, v0);
  v53 = sub_100607838();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v53, sub_10068920C, 0, &j_j___s10AppIntents16_AssistantIntentV21ParameterValueBuilderO10buildBlockSayAC0F0VGyFZ, 0, &type metadata for CloseNowPlayingAppIntent, v17);
  v19 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v5(v3, v0);
  v53 = sub_100725F20();
  v20 = sub_100078E54();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v53, sub_1006893B4, 0, sub_100689994, 0, &type metadata for OpenMusicItemAppIntent, v20);
  v21 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v5(v3, v0);
  v53 = sub_100242128();
  v54 = v22;
  v23 = sub_100241B54();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v53, sub_100689BAC, 0, sub_10068A020, 0, &type metadata for SearchMusicAppIntent, v23);
  v24 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v5(v3, v0);
  v53 = sub_100242128();
  v54 = v25;
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v53, sub_10068A14C, 0, sub_10068A538, 0, &type metadata for SearchMusicAppIntent, v23);
  v26 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v5(v3, v0);
  v53 = sub_100242128();
  v54 = v27;
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v53, sub_10068A564, 0, sub_10068A950, 0, &type metadata for SearchMusicAppIntent, v23);
  v28 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v5(v3, v0);
  v29 = sub_100007E8C(&qword_1011C1CD0);
  v30 = swift_allocObject(v29, 184, 7);
  *(_OWORD *)(v30 + 16) = xmmword_100EC9470;
  v31 = v51;
  *(_QWORD *)(v30 + 32) = v52;
  *(_QWORD *)(v30 + 40) = v31;
  v32 = v49;
  *(_QWORD *)(v30 + 48) = v50;
  *(_QWORD *)(v30 + 56) = v32;
  v33 = v47;
  *(_QWORD *)(v30 + 64) = v48;
  *(_QWORD *)(v30 + 72) = v33;
  v34 = v45;
  *(_QWORD *)(v30 + 80) = v46;
  *(_QWORD *)(v30 + 88) = v34;
  v35 = v43;
  *(_QWORD *)(v30 + 96) = v44;
  *(_QWORD *)(v30 + 104) = v35;
  v36 = v41;
  *(_QWORD *)(v30 + 112) = v42;
  *(_QWORD *)(v30 + 120) = v36;
  *(_QWORD *)(v30 + 128) = v40;
  *(_QWORD *)(v30 + 136) = v18;
  *(_QWORD *)(v30 + 144) = v19;
  *(_QWORD *)(v30 + 152) = v21;
  *(_QWORD *)(v30 + 160) = v24;
  *(_QWORD *)(v30 + 168) = v26;
  *(_QWORD *)(v30 + 176) = v28;
  v37 = static _AssistantIntent.Builder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v37;
}

unint64_t sub_10068B558()
{
  unint64_t result;

  result = qword_1011C1CB0;
  if (!qword_1011C1CB0)
  {
    result = swift_getWitnessTable(&unk_100ED7538, &type metadata for FavoriteMusicItemAppIntent);
    atomic_store(result, (unint64_t *)&qword_1011C1CB0);
  }
  return result;
}

unint64_t sub_10068B59C()
{
  unint64_t result;

  result = qword_1011C1CB8;
  if (!qword_1011C1CB8)
  {
    result = swift_getWitnessTable(&unk_100ED5AE8, &type metadata for UnfavoriteMusicItemAppIntent);
    atomic_store(result, (unint64_t *)&qword_1011C1CB8);
  }
  return result;
}

unint64_t sub_10068B5E0()
{
  unint64_t result;

  result = qword_1011C1CC0;
  if (!qword_1011C1CC0)
  {
    result = swift_getWitnessTable(&unk_100ED64F4, &type metadata for SuggestLessMusicItemAppIntent);
    atomic_store(result, (unint64_t *)&qword_1011C1CC0);
  }
  return result;
}

unint64_t sub_10068B624()
{
  unint64_t result;

  result = qword_1011C1CC8;
  if (!qword_1011C1CC8)
  {
    result = swift_getWitnessTable(&unk_100ECCC84, &type metadata for OpenNowPlayingAppIntent);
    atomic_store(result, (unint64_t *)&qword_1011C1CC8);
  }
  return result;
}

_QWORD *sub_10068B668@<X0>(_QWORD *a1@<X8>)
{
  return IntentParameter.wrappedValue.getter(a1);
}

_QWORD *sub_10068B68C@<X0>(_BYTE *a1@<X8>)
{
  _QWORD *result;
  uint64_t v3;

  result = IntentParameter.wrappedValue.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_10068B6C4(char *a1)
{
  char v2;

  v2 = *a1;
  return IntentParameter.wrappedValue.setter(&v2);
}

uint64_t sub_10068B6F8(uint64_t a1)
{
  return sub_1006898EC(a1);
}

_QWORD *sub_10068B70C@<X0>(_BYTE *a1@<X8>)
{
  _QWORD *result;
  uint64_t v3;

  result = IntentParameter.wrappedValue.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_10068B748(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_100044B54(a2);
    a3();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10068B7AC()
{
  unint64_t result;

  result = qword_1011C1D40;
  if (!qword_1011C1D40)
  {
    result = swift_getWitnessTable(&unk_100ECCB8C, &type metadata for NowPlayingDestinationEntity);
    atomic_store(result, (unint64_t *)&qword_1011C1D40);
  }
  return result;
}

uint64_t sub_10068B7F4(char *a1)
{
  char v2;

  v2 = *a1;
  return IntentParameter.wrappedValue.setter(&v2);
}

_QWORD *sub_10068B828@<X0>(_QWORD *a1@<X8>)
{
  return IntentParameter.wrappedValue.getter(a1);
}

uint64_t sub_10068B848(uint64_t a1)
{
  return sub_1006898EC(a1);
}

uint64_t sub_10068B85C(uint64_t a1)
{
  return sub_1006898EC(a1);
}

uint64_t sub_10068B870(uint64_t a1)
{
  return sub_1006898EC(a1);
}

uint64_t sub_10068B884(uint64_t a1)
{
  return sub_1006898EC(a1);
}

uint64_t sub_10068B898(uint64_t a1)
{
  return sub_1006898EC(a1);
}

uint64_t sub_10068B8AC(uint64_t a1)
{
  return sub_1006898EC(a1);
}

uint64_t sub_10068B8C0(uint64_t a1)
{
  return sub_1006898EC(a1);
}

uint64_t sub_10068B8D4(uint64_t a1)
{
  return sub_1006898EC(a1);
}

_QWORD *sub_10068B8E8@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *result;
  uint64_t v3;
  _QWORD v4[2];

  result = IntentParameter.wrappedValue.getter(v4);
  v3 = v4[1];
  *a1 = v4[0];
  a1[1] = v3;
  return result;
}

uint64_t sub_10068B920(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v2 = *a1;
  v1 = a1[1];
  v4[0] = v2;
  v4[1] = v1;
  swift_bridgeObjectRetain(v1);
  return IntentParameter.wrappedValue.setter(v4);
}

unint64_t sub_10068B958()
{
  unint64_t result;

  result = qword_1011C1E20;
  if (!qword_1011C1E20)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_1011C1E20);
  }
  return result;
}

_QWORD *sub_10068B99C@<X0>(_BYTE *a1@<X8>)
{
  _QWORD *result;
  uint64_t v3;

  result = IntentParameter.wrappedValue.getter(&v3);
  *a1 = v3;
  return result;
}

unint64_t sub_10068B9DC()
{
  unint64_t result;

  result = qword_1011C1E68;
  if (!qword_1011C1E68)
  {
    result = swift_getWitnessTable(&unk_100ED5FF4, &type metadata for MusicTabEntity);
    atomic_store(result, (unint64_t *)&qword_1011C1E68);
  }
  return result;
}

uint64_t sub_10068BA4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, __n128);
  __n128 v25;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[4];

  v3 = v2;
  v35 = a2;
  v5 = type metadata accessor for DynamicTypeSize(0);
  v33 = *(_QWORD *)(v5 - 8);
  v34 = v5;
  __chkstk_darwin(v5);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 16);
  v30 = (uint64_t)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = v8;
  v9 = v7;
  v29 = v7;
  v11 = type metadata accessor for AdaptativeContainerStack._LayoutProvider(0, v8, v7, v10);
  __chkstk_darwin(v11);
  v13 = (char *)&v28 - v12;
  v36[0] = v14;
  v36[1] = v8;
  v36[2] = &off_1010D5F80;
  v36[3] = v9;
  v15 = type metadata accessor for LayoutProviderStack(0, (uint64_t)v36);
  v32 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v28 - v19;
  v21 = *(_QWORD *)(v3 + 48);
  v22 = *(_BYTE *)(v3 + 56);
  sub_10006B3F8(v21, v22);
  LOBYTE(v8) = sub_100824E38(v21, v22);
  sub_10006B604(v21, v22);
  v23 = v30;
  sub_1008237B8(v30);
  *v13 = v8;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v33 + 32))(&v13[*(int *)(v11 + 36)], v23, v34);
  *((_QWORD *)&v27 + 1) = &off_1010D5F80;
  *(_QWORD *)&v27 = v31;
  LayoutProviderStack.init(layoutProvider:alignment:spacing:content:)((uint64_t)v13, *(_QWORD *)v3, *(_QWORD *)(v3 + 8), *(_QWORD *)(v3 + 16), *(_BYTE *)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40), v11, (uint64_t)v17, v27, v29);
  swift_getWitnessTable(&protocol conformance descriptor for LayoutProviderStack<A, B>, v15);
  sub_10081EB14((uint64_t)v17, v15, (uint64_t)v20);
  v24 = *(void (**)(char *, uint64_t, __n128))(v32 + 8);
  v25 = swift_retain();
  v24(v17, v15, v25);
  sub_1000EA744((uint64_t)v20, v15, v35);
  return ((uint64_t (*)(char *, uint64_t))v24)(v20, v15);
}

unint64_t sub_10068BC8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  char *v5;
  char v11;
  uint64_t v12;
  unint64_t result;
  uint64_t v14;

  v11 = *v5;
  v12 = DynamicTypeSize.isAccessibilitySize.getter(a1);
  if ((v11 & 1) != 0)
  {
    if ((v12 & 1) != 0)
    {
      v14 = static VerticalAlignment.top.getter(v12);
      *(_QWORD *)(a5 + 24) = &type metadata for HStackLayout;
      result = sub_10068CA38();
      *(_QWORD *)(a5 + 32) = result;
      *(_QWORD *)a5 = v14;
    }
    else
    {
      *(_QWORD *)(a5 + 24) = &type metadata for HeightConstrainedHStackLayout;
      result = sub_10068C9F4();
      *(_QWORD *)(a5 + 32) = result;
      *(_QWORD *)a5 = a2;
    }
  }
  else
  {
    *(_QWORD *)(a5 + 24) = &type metadata for VStackLayout;
    result = sub_10068C9B0();
    *(_QWORD *)(a5 + 32) = result;
    *(_QWORD *)a5 = a1;
  }
  *(_QWORD *)(a5 + 8) = a3;
  *(_BYTE *)(a5 + 16) = a4 & 1;
  return result;
}

uint64_t sub_10068BD4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;

  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_BYTE *)(a9 + 24) = a4 & 1;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = swift_getKeyPath(&unk_100EC9760);
  *(_BYTE *)(a9 + 56) = 0;
  v13 = (_QWORD *)(a9 + *(int *)(type metadata accessor for AdaptativeContainerStack(0, a7, a8, v12) + 48));
  *v13 = swift_getKeyPath(&unk_100EC9788);
  v14 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  return swift_storeEnumTagMultiPayload(v13, v14, 0);
}

uint64_t type metadata accessor for AdaptativeContainerStack(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AdaptativeContainerStack);
}

void sub_10068BDFC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = &unk_100EC97E0;
  v4[1] = &unk_100EC97F8;
  v4[2] = (char *)&value witness table for () + 64;
  v4[3] = &unk_100EC9810;
  sub_1000559DC(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 0, 5, v4, a1 + 32);
  }
}

uint64_t sub_10068BE90(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = v18 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    v7 = a2[5];
    *(_QWORD *)(v4 + 32) = a2[4];
    *(_QWORD *)(v4 + 40) = v7;
    v8 = a2[6];
    v9 = *((_BYTE *)a2 + 56);
    swift_retain();
    sub_10006B3F8(v8, v9);
    *(_QWORD *)(v4 + 48) = v8;
    *(_BYTE *)(v4 + 56) = v9;
    v10 = *(int *)(a3 + 48);
    v11 = (_QWORD *)(v4 + v10);
    v12 = (uint64_t *)((char *)a2 + v10);
    v13 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
    {
      v14 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v11, v12, v14);
      v15 = v11;
      v16 = v13;
      v17 = 1;
    }
    else
    {
      *v11 = *v12;
      swift_retain();
      v15 = v11;
      v16 = v13;
      v17 = 0;
    }
    swift_storeEnumTagMultiPayload(v15, v16, v17);
  }
  return v4;
}

double sub_10068BFB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  swift_release();
  sub_10006B604(*(_QWORD *)(a1 + 48), *(_BYTE *)(a1 + 56));
  v4 = a1 + *(int *)(a2 + 48);
  v5 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_10068C034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(_QWORD *)(a2 + 48);
  v8 = *(_BYTE *)(a2 + 56);
  swift_retain();
  sub_10006B3F8(v7, v8);
  *(_QWORD *)(a1 + 48) = v7;
  *(_BYTE *)(a1 + 56) = v8;
  v9 = *(int *)(a3 + 48);
  v10 = (_QWORD *)(a1 + v9);
  v11 = (_QWORD *)(a2 + v9);
  v12 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
  {
    v13 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v10, v11, v13);
    v14 = 1;
  }
  else
  {
    *v10 = *v11;
    swift_retain();
    v14 = 0;
  }
  swift_storeEnumTagMultiPayload(v10, v12, v14);
  return a1;
}

uint64_t sub_10068C120(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  swift_retain();
  swift_release();
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_BYTE *)(a2 + 56);
  sub_10006B3F8(v8, v9);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_BYTE *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v8;
  *(_BYTE *)(a1 + 56) = v9;
  sub_10006B604(v10, v11);
  if (a1 != a2)
  {
    v12 = *(int *)(a3 + 48);
    v13 = (_QWORD *)(a1 + v12);
    v14 = (_QWORD *)(a2 + v12);
    sub_10068C23C(a1 + v12);
    v15 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
    {
      v16 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
      v17 = 1;
    }
    else
    {
      *v13 = *v14;
      swift_retain();
      v17 = 0;
    }
    swift_storeEnumTagMultiPayload(v13, v15, v17);
  }
  return a1;
}

uint64_t sub_10068C23C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10068C27C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  const void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v4 = *(int *)(a3 + 48);
  v5 = (const void *)(a2 + v4);
  v6 = (void *)(a1 + v4);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v7 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v5, v7) == 1)
  {
    v8 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v5, v8);
    swift_storeEnumTagMultiPayload(v6, v7, 1);
  }
  else
  {
    memcpy(v6, v5, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t sub_10068C34C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  v6 = *(_BYTE *)(a2 + 56);
  v7 = *(_QWORD *)(a1 + 48);
  v8 = *(_BYTE *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = v6;
  sub_10006B604(v7, v8);
  if (a1 != a2)
  {
    v9 = *(int *)(a3 + 48);
    v10 = (void *)(a1 + v9);
    v11 = (const void *)(a2 + v9);
    sub_10068C23C(a1 + v9);
    v12 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
    {
      v13 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v10, v11, v13);
      swift_storeEnumTagMultiPayload(v10, v12, 1);
    }
    else
    {
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10068C448(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10068C454);
}

uint64_t sub_10068C454(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011C6890);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 48), a2, v8);
  }
}

uint64_t sub_10068C4D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10068C4E0);
}

uint64_t sub_10068C4E0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 32) = (a2 - 1);
  }
  else
  {
    v7 = sub_100007E8C(&qword_1011C6890);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 48), a2, a2, v7);
  }
  return result;
}

uint64_t sub_10068C558(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_100FA91A4, 1);
}

unint64_t sub_10068C58C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  return sub_10068BC8C(a1, a2, a3, a4 & 1, a5);
}

uint64_t type metadata accessor for AdaptativeContainerStack._LayoutProvider(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AdaptativeContainerStack._LayoutProvider);
}

uint64_t sub_10068C5A4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = &unk_100EC9898;
  result = type metadata accessor for DynamicTypeSize(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 0, 2, v4, a1 + 32);
    return 0;
  }
  return result;
}

uint64_t *sub_10068C618(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  _BYTE *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v9);
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v5 = *(int *)(a3 + 36);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_10068C6A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 36);
  v3 = type metadata accessor for DynamicTypeSize(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_BYTE *sub_10068C6D8(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 36);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = type metadata accessor for DynamicTypeSize(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_BYTE *sub_10068C734(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 36);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = type metadata accessor for DynamicTypeSize(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_BYTE *sub_10068C790(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 36);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = type metadata accessor for DynamicTypeSize(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_BYTE *sub_10068C7EC(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 36);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = type metadata accessor for DynamicTypeSize(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_10068C848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10068C854);
}

uint64_t sub_10068C854(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  int v4;
  unsigned int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 253)
  {
    if (*a1 <= 2u)
      v4 = 2;
    else
      v4 = *a1;
    v5 = v4 - 2;
    if (*a1 >= 2u)
      return v5;
    else
      return 0;
  }
  else
  {
    v9 = type metadata accessor for DynamicTypeSize(0);
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(&a1[*(int *)(a3 + 36)], a2, v9);
  }
}

uint64_t sub_10068C8D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10068C8E0);
}

_BYTE *sub_10068C8E0(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 253)
  {
    *result = a2 + 2;
  }
  else
  {
    v7 = type metadata accessor for DynamicTypeSize(0);
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 36)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_10068C950(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[4];

  v4 = *a1;
  v5 = a1[1];
  v8[0] = type metadata accessor for AdaptativeContainerStack._LayoutProvider(255, *a1, v5, a4);
  v8[1] = v4;
  v8[2] = &off_1010D5F80;
  v8[3] = v5;
  v6 = type metadata accessor for LayoutProviderStack(255, (uint64_t)v8);
  return swift_getWitnessTable(&protocol conformance descriptor for LayoutProviderStack<A, B>, v6);
}

unint64_t sub_10068C9B0()
{
  unint64_t result;

  result = qword_1011C1F78;
  if (!qword_1011C1F78)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for VStackLayout, &type metadata for VStackLayout);
    atomic_store(result, (unint64_t *)&qword_1011C1F78);
  }
  return result;
}

unint64_t sub_10068C9F4()
{
  unint64_t result;

  result = qword_1011C1F80;
  if (!qword_1011C1F80)
  {
    result = swift_getWitnessTable(&unk_100EC91F0, &type metadata for HeightConstrainedHStackLayout);
    atomic_store(result, (unint64_t *)&qword_1011C1F80);
  }
  return result;
}

unint64_t sub_10068CA38()
{
  unint64_t result;

  result = qword_1011C1F88[0];
  if (!qword_1011C1F88[0])
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for HStackLayout, &type metadata for HStackLayout);
    atomic_store(result, qword_1011C1F88);
  }
  return result;
}

uint64_t sub_10068CA7C(_QWORD *a1)
{
  uint64_t result;

  swift_bridgeObjectRelease(*a1);
  swift_release(a1[4]);
  result = swift_release(a1[6]);
  if (a1[7])
    return swift_release(a1[8]);
  return result;
}

uint64_t sub_10068CAC8(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  __int128 v11;

  v4 = *a2;
  v5 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  *(_QWORD *)(a1 + 24) = a2[3];
  v6 = a2[6];
  v11 = *((_OWORD *)a2 + 2);
  *(_OWORD *)(a1 + 32) = v11;
  *(_QWORD *)(a1 + 48) = v6;
  v8 = a2 + 7;
  v7 = a2[7];
  swift_bridgeObjectRetain(v4);
  swift_retain(v11);
  swift_retain(v6);
  if (v7)
  {
    v9 = a2[8];
    *(_QWORD *)(a1 + 56) = v7;
    *(_QWORD *)(a1 + 64) = v9;
    swift_retain(v9);
  }
  else
  {
    *(_OWORD *)(a1 + 56) = *v8;
  }
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 11);
  *(_QWORD *)(a1 + 104) = a2[13];
  return a1;
}

uint64_t *sub_10068CB88(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[1] = a2[1];
  *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
  v6 = a2[4];
  v7 = a1[4];
  a1[3] = a2[3];
  a1[4] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[6];
  v9 = a1[6];
  a1[5] = a2[5];
  a1[6] = v8;
  swift_retain(v8);
  swift_release(v9);
  v10 = a2[7];
  if (!a1[7])
  {
    if (v10)
    {
      v13 = a2[8];
      a1[7] = v10;
      a1[8] = v13;
      swift_retain(v13);
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 7) = *(_OWORD *)(a2 + 7);
    goto LABEL_8;
  }
  if (!v10)
  {
    swift_release(a1[8]);
    goto LABEL_7;
  }
  v11 = a2[8];
  v12 = a1[8];
  a1[7] = v10;
  a1[8] = v11;
  swift_retain(v11);
  swift_release(v12);
LABEL_8:
  *((_BYTE *)a1 + 72) = *((_BYTE *)a2 + 72);
  *((_BYTE *)a1 + 73) = *((_BYTE *)a2 + 73);
  a1[10] = a2[10];
  a1[11] = a2[11];
  a1[12] = a2[12];
  a1[13] = a2[13];
  return a1;
}

__n128 sub_10068CC94(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t *sub_10068CCB8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;

  v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v4);
  a1[1] = a2[1];
  *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
  v5 = a1[4];
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
  swift_release(v5);
  v6 = a1[6];
  *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
  swift_release(v6);
  v7 = a2[7];
  if (!a1[7])
  {
    if (v7)
    {
      v10 = a2[8];
      a1[7] = v7;
      a1[8] = v10;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 7) = *(_OWORD *)(a2 + 7);
    goto LABEL_8;
  }
  if (!v7)
  {
    swift_release(a1[8]);
    goto LABEL_7;
  }
  v8 = a2[8];
  v9 = a1[8];
  a1[7] = v7;
  a1[8] = v8;
  swift_release(v9);
LABEL_8:
  *((_BYTE *)a1 + 72) = *((_BYTE *)a2 + 72);
  *((_BYTE *)a1 + 73) = *((_BYTE *)a2 + 73);
  v11 = *((_OWORD *)a2 + 6);
  *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
  *((_OWORD *)a1 + 6) = v11;
  return a1;
}

uint64_t sub_10068CD88(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 112))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_10068CDD0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 112) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for JSVerticalStackView(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for JSVerticalStackView);
}

uint64_t sub_10068CE38(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  _OWORD v4[2];

  v2 = *(_OWORD *)(a2 + 32);
  v4[0] = *(_OWORD *)(a2 + 16);
  v4[1] = v2;
  return swift_getOpaqueTypeConformance2(v4, &unk_100FA9244, 1);
}

uint64_t sub_10068CE6C()
{
  uint64_t v0;
  unint64_t v1;
  int v3;

  v0 = type metadata accessor for PinnedScrollableViews(0);
  v3 = 0;
  v1 = sub_10068E2FC();
  return dispatch thunk of OptionSet.init(rawValue:)(&v3, v0, v1);
}

double sub_10068CEB8()
{
  double result;

  result = 0.0;
  xmmword_10124D6B0 = 0u;
  *(_OWORD *)&qword_10124D6C0 = 0u;
  return result;
}

double sub_10068CECC@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  if (qword_10119C5E0 != -1)
    swift_once(&qword_10119C5E0, sub_10068CEB8);
  result = *(double *)&xmmword_10124D6B0;
  v3 = *(_OWORD *)&qword_10124D6C0;
  *a1 = xmmword_10124D6B0;
  a1[1] = v3;
  return result;
}

_QWORD *sub_10068CF20(CGPoint *a1, void (*a2)(CGPoint *__return_ptr))
{
  CGPoint v4;
  CGSize v5;
  _QWORD *result;
  CGSize v7;
  CGPoint v8;
  CGSize v9;
  CGRect v10;

  a2(&v8);
  v4 = v8;
  v5 = v9;
  if (qword_10119C5E0 != -1)
    swift_once(&qword_10119C5E0, sub_10068CEB8);
  v10.origin = v4;
  v10.size = v5;
  result = (_QWORD *)CGRectEqualToRect(v10, *(CGRect *)ymmword_10124D6B0);
  if ((result & 1) == 0)
  {
    result = ((_QWORD *(*)(CGPoint *__return_ptr))a2)(&v8);
    v7 = v9;
    *a1 = v8;
    a1[1] = (CGPoint)v7;
  }
  return result;
}

__n128 sub_10068CFD4@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 *v2;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  __n128 *v8;
  __n128 result;
  __n128 v10;

  v10 = *v2;
  v5 = v2[1].n128_u64[0];
  v6 = v2[1].n128_u64[1];
  v7 = sub_100007E8C(&qword_1011C2058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a2, a1, v7);
  v8 = (__n128 *)(a2 + *(int *)(sub_100007E8C(&qword_1011C2060) + 36));
  result = v10;
  *v8 = v10;
  v8[1].n128_u64[0] = v5;
  v8[1].n128_u64[1] = v6;
  return result;
}

uint64_t sub_10068D05C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t TupleTypeMetadata2;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t WitnessTable;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  void (*v41)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55[16];
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  uint64_t v59;
  _QWORD v60[10];
  __int128 v61;
  __int128 v62;
  void *v63;

  v3 = v2;
  v50 = a1;
  v54 = a2;
  v53 = type metadata accessor for AccessibilityChildBehavior(0);
  v52 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin(v53);
  v51 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = *(_QWORD *)(a1 + 16);
  v6 = v48;
  v7 = sub_100044B54(&qword_1011C2010);
  v49 = *(_QWORD *)(a1 + 24);
  v8 = type metadata accessor for ModifiedContent(255, v49, &type metadata for _FlexFrameLayout);
  v9 = type metadata accessor for ModifiedContent(255, v8, &type metadata for _PaddingLayout);
  v10 = sub_100049F28(&qword_1011C2018, &qword_1011C2010, (uint64_t)&protocol conformance descriptor for EnumeratedCollection<A>);
  *(_QWORD *)&v61 = v7;
  *((_QWORD *)&v61 + 1) = &type metadata for String;
  *(_QWORD *)&v62 = v9;
  *((_QWORD *)&v62 + 1) = v10;
  v63 = &protocol witness table for String;
  v11 = type metadata accessor for ForEach(255, &v61);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v6, v11, 0, 0);
  v13 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v13);
  v14 = type metadata accessor for LazyVStack(255, v13);
  v15 = type metadata accessor for ModifiedContent(255, v14, &type metadata for _PaddingLayout);
  v16 = type metadata accessor for ModifiedContent(255, v15, &type metadata for _PaddingLayout);
  v17 = sub_100044B54(&qword_1011C2020);
  v18 = type metadata accessor for ModifiedContent(255, v16, v17);
  v60[8] = swift_getWitnessTable(&protocol conformance descriptor for LazyVStack<A>, v14);
  v60[9] = &protocol witness table for _PaddingLayout;
  v60[6] = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v15);
  v60[7] = &protocol witness table for _PaddingLayout;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v16);
  v20 = sub_100049F28(&qword_1011C2028, &qword_1011C2020, (uint64_t)&unk_100EA9B70);
  v60[4] = WitnessTable;
  v60[5] = v20;
  v45 = v18;
  v43 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v18);
  v21 = type metadata accessor for ScrollView(0, v18, v43);
  v47 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v23 = (char *)&v43 - v22;
  v24 = sub_100044B54(&qword_1011C2030);
  v25 = type metadata accessor for ModifiedContent(0, v21, v24);
  v46 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v27 = (char *)&v43 - v26;
  v28 = swift_getWitnessTable(&protocol conformance descriptor for ScrollView<A>, v21);
  v29 = sub_100049F28(&qword_1011C2038, &qword_1011C2030, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  v60[2] = v28;
  v60[3] = v29;
  v30 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v25);
  *(_QWORD *)&v61 = v25;
  *((_QWORD *)&v61 + 1) = v30;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v61, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 0);
  v44 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  v33 = (char *)&v43 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v36 = (char *)&v43 - v35;
  v37 = *(_OWORD *)(v3 + 88);
  v61 = *(_OWORD *)(v3 + 72);
  v62 = v37;
  v63 = *(void **)(v3 + 104);
  v38 = Axis.Set.init(_:)(v61);
  v56 = v48;
  v57 = v49;
  v58 = *(_OWORD *)(v50 + 32);
  v59 = v3;
  ScrollView.init(_:showsIndicators:content:)(v38, BYTE1(v61), sub_10068E28C, v55, v45, v43);
  sub_1000AC9BC((uint64_t)&v61, v21, v28);
  v39 = (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v23, v21);
  v40 = v51;
  static AccessibilityChildBehavior.contain.getter(v39);
  View.accessibilityElement(children:)(v40, v25, v30);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v40, v53);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v27, v25);
  v60[0] = v25;
  v60[1] = v30;
  swift_getOpaqueTypeConformance2(v60, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  sub_10081EB14((uint64_t)v33, OpaqueTypeMetadata2, (uint64_t)v36);
  v41 = *(void (**)(char *, uint64_t))(v44 + 8);
  v41(v33, OpaqueTypeMetadata2);
  sub_1000EA744((uint64_t)v36, OpaqueTypeMetadata2, v54);
  return ((uint64_t (*)(char *, uint64_t))v41)(v36, OpaqueTypeMetadata2);
}

uint64_t sub_10068D568@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t TupleTypeMetadata2;
  uint64_t v17;
  uint64_t WitnessTable;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  double v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t);
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE v67[16];
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  void *v78;
  _QWORD v79[5];

  v64 = a5;
  v63 = a4;
  v65 = a6;
  v66 = a1;
  v8 = type metadata accessor for PinnedScrollableViews(0);
  __chkstk_darwin(v8);
  v61 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100044B54(&qword_1011C2010);
  v11 = a3;
  v12 = type metadata accessor for ModifiedContent(255, a3, &type metadata for _FlexFrameLayout);
  v13 = type metadata accessor for ModifiedContent(255, v12, &type metadata for _PaddingLayout);
  v14 = sub_100049F28(&qword_1011C2018, &qword_1011C2010, (uint64_t)&protocol conformance descriptor for EnumeratedCollection<A>);
  v79[0] = v10;
  v79[1] = &type metadata for String;
  v79[2] = v13;
  v79[3] = v14;
  v79[4] = &protocol witness table for String;
  v15 = type metadata accessor for ForEach(255, v79);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, a2, v15, 0, 0);
  v17 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v17);
  v19 = type metadata accessor for LazyVStack(0, v17);
  v57 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v21 = (char *)&v53 - v20;
  v22 = type metadata accessor for ModifiedContent(0, v19, &type metadata for _PaddingLayout);
  v58 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v54 = (uint64_t *)((char *)&v53 - v23);
  v24 = type metadata accessor for ModifiedContent(0, v22, &type metadata for _PaddingLayout);
  v60 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v55 = (uint64_t *)((char *)&v53 - v25);
  v26 = sub_100044B54(&qword_1011C2020);
  v27 = type metadata accessor for ModifiedContent(0, v24, v26);
  v62 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v56 = (char *)&v53 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v59 = (uint64_t)&v53 - v30;
  v32 = static HorizontalAlignment.leading.getter(v31);
  v68 = a2;
  v69 = v11;
  v70 = v63;
  v71 = v64;
  v33 = v66;
  v72 = v66;
  v34 = v61;
  sub_10068CE6C();
  v35 = LazyVStack.init(alignment:spacing:pinnedViews:content:)(v32, 0, 0, v34, sub_10068E298, v67, v17, WitnessTable);
  v36 = static Edge.Set.top.getter(v35);
  v37 = *(_QWORD *)(v33 + 80);
  v38 = *(_QWORD *)(v33 + 96);
  v39 = swift_getWitnessTable(&protocol conformance descriptor for LazyVStack<A>, v19);
  v40 = v54;
  View.padding(_:_:)(v54, v36, v37, 0, v19, v39);
  v41 = (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v21, v19);
  v42 = static Edge.Set.bottom.getter(v41);
  v77 = v39;
  v78 = &protocol witness table for _PaddingLayout;
  v43 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v22);
  v44 = v55;
  View.padding(_:_:)(v55, v42, v38, 0, v22, v43);
  (*(void (**)(_QWORD *, uint64_t))(v58 + 8))(v40, v22);
  LOBYTE(v42) = *(_BYTE *)(v66 + 16);
  v75 = v43;
  v76 = &protocol witness table for _PaddingLayout;
  v45 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v24);
  v46 = sub_10068E2B8();
  v47 = (uint64_t)v56;
  v48 = sub_1000AD730(v42, (uint64_t)sub_10068E1CC, 0, v24, (uint64_t)&type metadata for ScrollViewBoundsUpdaterModifier, v45, v46);
  (*(void (**)(_QWORD *, uint64_t, double))(v60 + 8))(v44, v24, v48);
  v49 = sub_100049F28(&qword_1011C2028, &qword_1011C2020, (uint64_t)&unk_100EA9B70);
  v73 = v45;
  v74 = v49;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v27);
  v50 = v59;
  sub_10081EB14(v47, v27, v59);
  v51 = *(void (**)(uint64_t, uint64_t))(v62 + 8);
  v51(v47, v27);
  sub_1000EA744(v50, v27, v65);
  return ((uint64_t (*)(uint64_t, uint64_t))v51)(v50, v27);
}

uint64_t sub_10068DA5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t WitnessTable;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  uint64_t (*v40)(char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD v54[7];
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;

  v44 = a5;
  v43 = a3;
  v51 = a6;
  v10 = sub_100044B54(&qword_1011C2010);
  v11 = type metadata accessor for ModifiedContent(255, a3, &type metadata for _FlexFrameLayout);
  v47 = type metadata accessor for ModifiedContent(255, v11, &type metadata for _PaddingLayout);
  v55 = (char *)v10;
  v56 = (char *)&type metadata for String;
  v57 = v47;
  v58 = sub_100049F28(&qword_1011C2018, &qword_1011C2010, (uint64_t)&protocol conformance descriptor for EnumeratedCollection<A>);
  v59 = &protocol witness table for String;
  v12 = type metadata accessor for ForEach(0, &v55);
  v50 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v48 = (uint64_t)&v42 - v16;
  v46 = *(_QWORD *)(a2 - 8);
  v17 = v46;
  __chkstk_darwin(v18);
  v20 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin(v21);
  v24 = (char *)&v42 - v23;
  (*(void (**)(__n128))(a1 + 24))(v22);
  v45 = a4;
  sub_10081EB14((uint64_t)v20, a2, (uint64_t)v24);
  v49 = *(void (**)(char *, uint64_t))(v17 + 8);
  v49(v20, a2);
  v60 = *(_QWORD *)a1;
  v55 = (char *)v60;
  v25 = swift_allocObject(&unk_1010D6040, 160, 7);
  v26 = v43;
  *(_QWORD *)(v25 + 16) = a2;
  *(_QWORD *)(v25 + 24) = v26;
  *(_QWORD *)(v25 + 32) = a4;
  v27 = v44;
  *(_QWORD *)(v25 + 40) = v44;
  v28 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v25 + 112) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v25 + 128) = v28;
  *(_OWORD *)(v25 + 144) = *(_OWORD *)(a1 + 96);
  v29 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v25 + 48) = *(_OWORD *)a1;
  *(_OWORD *)(v25 + 64) = v29;
  v30 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v25 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v25 + 96) = v30;
  sub_100055D0C(&v60);
  sub_10068E398(a1);
  v31 = sub_100007E8C(&qword_1011B6CE8);
  v32 = sub_100049F28(&qword_1011C2048, &qword_1011B6CE8, (uint64_t)&protocol conformance descriptor for [A]);
  v54[5] = v27;
  v54[6] = &protocol witness table for _FlexFrameLayout;
  v54[3] = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v11);
  v54[4] = &protocol witness table for _PaddingLayout;
  v33 = v47;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v47);
  v35 = sub_10068E3F8();
  static ForEach<>.enumerated(_:content:)((uint64_t)&v55, (uint64_t)sub_10068E388, v25, v31, (uint64_t)&type metadata for String, v33, v32, WitnessTable, (uint64_t)v14, v35);
  swift_release();
  swift_bridgeObjectRelease();
  v54[2] = WitnessTable;
  v36 = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v12);
  v37 = v48;
  sub_10081EB14((uint64_t)v14, v12, v48);
  v38 = v50;
  v39 = *(void (**)(char *, uint64_t))(v50 + 8);
  v39(v14, v12);
  (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v20, v24, a2);
  v55 = v20;
  (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v14, v37, v12);
  v56 = v14;
  v54[0] = a2;
  v54[1] = v12;
  v52 = v45;
  v53 = v36;
  sub_1004D49B8((uint64_t *)&v55, 2uLL, (uint64_t)v54);
  v39((char *)v37, v12);
  v40 = (uint64_t (*)(char *, uint64_t))v49;
  v49(v24, a2);
  v39(v14, v12);
  return v40(v20, a2);
}

uint64_t sub_10068DE30@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  uint64_t (*v25)(__n128);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  unint64_t v31;
  unint64_t v32;
  id v33;
  uint64_t v34;
  double v35;
  uint64_t WitnessTable;
  uint64_t (*v37)(char *, uint64_t);
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  void *v52;
  _QWORD v53[5];

  v41 = a4;
  v42 = a6;
  v46 = a8;
  v47 = *(_QWORD *)(a5 - 8);
  v48 = a1;
  __chkstk_darwin(a1);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ModifiedContent(0, v14, &type metadata for _FlexFrameLayout);
  v43 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v17 = (char *)&v40 - v16;
  v18 = type metadata accessor for ModifiedContent(0, v15, &type metadata for _PaddingLayout);
  v44 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v20 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin(v21);
  v24 = (char *)&v40 - v23;
  v25 = (uint64_t (*)(__n128))a3[5];
  v40 = *a2;
  v26 = v25(v22);
  v27 = static Alignment.center.getter(v26);
  v45 = a7;
  v39 = 1;
  v38 = 1;
  View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, v38, 0, v39, v27, v28, a5, a7);
  v29 = (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v13, a5);
  result = static Edge.Set.top.getter(v29);
  v31 = v48 - 1;
  LODWORD(v47) = result;
  if (v48 < 1)
  {
    v32 = 0xF000000000000007;
    goto LABEL_5;
  }
  if (v31 < *(_QWORD *)(*a3 + 16))
  {
    v32 = *(_QWORD *)(*a3 + 8 * v31 + 32);
    v33 = (id)(v32 & 0xFFFFFFFFFFFFFF9);
LABEL_5:
    v53[0] = v41;
    v53[1] = a5;
    v34 = v45;
    v53[2] = v42;
    v53[3] = v45;
    type metadata accessor for JSVerticalStackView(0, (uint64_t)v53);
    v35 = sub_10068E134(v32, v40);
    sub_100231E18(v32);
    v51 = v34;
    v52 = &protocol witness table for _FlexFrameLayout;
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v15);
    View.padding(_:_:)(v20, v47, *(_QWORD *)&v35, 0, v15, WitnessTable);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v17, v15);
    v49 = WitnessTable;
    v50 = &protocol witness table for _PaddingLayout;
    swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v18);
    sub_10081EB14((uint64_t)v20, v18, (uint64_t)v24);
    v37 = *(uint64_t (**)(char *, uint64_t))(v44 + 8);
    v37(v20, v18);
    sub_1000EA744((uint64_t)v24, v18, v46);
    return v37(v24, v18);
  }
  __break(1u);
  return result;
}

double sub_10068E134(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;
  uint64_t (*v4)(unint64_t, uint64_t);
  uint64_t v7;
  double v8;
  char v9;
  char v10;

  result = 0.0;
  if ((~a1 & 0xF000000000000007) != 0)
  {
    v4 = *(uint64_t (**)(unint64_t, uint64_t))(v2 + 56);
    if (v4)
    {
      v7 = *(_QWORD *)(v2 + 64);
      sub_100048AAC((uint64_t)v4, v7);
      sub_100231E34(a1);
      v8 = COERCE_DOUBLE(v4(a1, a2));
      v10 = v9;
      sub_100231E18(a1);
      sub_10004BA30((uint64_t)v4, v7);
      result = v8;
      if ((v10 & 1) != 0)
        return 0.0;
    }
  }
  return result;
}

uint64_t sub_10068E1CC@<X0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double v4;
  double v5;
  double v6;
  double v7;
  uint64_t result;
  double v9;
  BOOL v10;
  double v11;
  double v12;
  double v13;
  _QWORD v14[5];
  _BYTE v15[32];
  char v16;

  sub_10004D580(a1, (uint64_t)v14);
  v4 = *(double *)v14;
  v5 = *(double *)&v14[1];
  v6 = *(double *)&v14[2];
  v7 = *(double *)&v14[3];
  result = sub_10004D580(a1, (uint64_t)v15);
  v9 = 0.0;
  v10 = (v16 & 1) == 0;
  if ((v16 & 1) != 0)
    v11 = 0.0;
  else
    v11 = v6;
  if ((v16 & 1) != 0)
    v12 = 0.0;
  else
    v12 = v4;
  if ((v16 & 1) != 0)
    v13 = 0.0;
  else
    v13 = v5;
  *a2 = v12;
  a2[1] = v13;
  if (v10)
    v9 = v7;
  a2[2] = v11;
  a2[3] = v9;
  return result;
}

uint64_t sub_10068E244@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10068D05C(a1, a2);
}

uint64_t sub_10068E28C()
{
  return sub_10068E2A4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10068D568);
}

uint64_t sub_10068E298()
{
  return sub_10068E2A4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10068DA5C);
}

uint64_t sub_10068E2A4(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[6], v1[2], v1[3], v1[4], v1[5]);
}

unint64_t sub_10068E2B8()
{
  unint64_t result;

  result = qword_1011C2040;
  if (!qword_1011C2040)
  {
    result = swift_getWitnessTable(&unk_100EC9990, &type metadata for ScrollViewBoundsUpdaterModifier);
    atomic_store(result, (unint64_t *)&qword_1011C2040);
  }
  return result;
}

unint64_t sub_10068E2FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A0308;
  if (!qword_1011A0308)
  {
    v1 = type metadata accessor for PinnedScrollableViews(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for PinnedScrollableViews, v1);
    atomic_store(result, (unint64_t *)&qword_1011A0308);
  }
  return result;
}

uint64_t sub_10068E344()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[6]);
  swift_release(v0[10]);
  swift_release(v0[12]);
  if (v0[13])
    swift_release(v0[14]);
  return swift_deallocObject(v0, 160, 7);
}

uint64_t sub_10068E388@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;

  return sub_10068DE30(a1, a2, v3 + 6, v3[2], v3[3], v3[4], v3[5], a3);
}

uint64_t sub_10068E398(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 64);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_100048AAC(v2, v3);
  return a1;
}

unint64_t sub_10068E3F8()
{
  unint64_t result;

  result = qword_1011C2050;
  if (!qword_1011C2050)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for JSViewModelKind, &type metadata for JSViewModelKind);
    atomic_store(result, (unint64_t *)&qword_1011C2050);
  }
  return result;
}

ValueMetadata *type metadata accessor for ScrollViewBoundsUpdaterModifier()
{
  return &type metadata for ScrollViewBoundsUpdaterModifier;
}

uint64_t sub_10068E44C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t TupleTypeMetadata2;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t WitnessTable;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;

  v2 = *a1;
  v1 = a1[1];
  v3 = sub_100044B54(&qword_1011C2010);
  v4 = type metadata accessor for ModifiedContent(255, v1, &type metadata for _FlexFrameLayout);
  v19 = v3;
  v20 = &type metadata for String;
  v21 = type metadata accessor for ModifiedContent(255, v4, &type metadata for _PaddingLayout);
  v22 = sub_100049F28(&qword_1011C2018, &qword_1011C2010, (uint64_t)&protocol conformance descriptor for EnumeratedCollection<A>);
  v23 = &protocol witness table for String;
  v5 = type metadata accessor for ForEach(255, &v19);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v2, v5, 0, 0);
  v7 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v7);
  v8 = type metadata accessor for LazyVStack(255, v7);
  v9 = type metadata accessor for ModifiedContent(255, v8, &type metadata for _PaddingLayout);
  v10 = type metadata accessor for ModifiedContent(255, v9, &type metadata for _PaddingLayout);
  v11 = sub_100044B54(&qword_1011C2020);
  v12 = type metadata accessor for ModifiedContent(255, v10, v11);
  swift_getWitnessTable(&protocol conformance descriptor for LazyVStack<A>, v8);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v9);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v10);
  sub_100049F28(&qword_1011C2028, &qword_1011C2020, (uint64_t)&unk_100EA9B70);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v12);
  v14 = type metadata accessor for ScrollView(255, v12, WitnessTable);
  v15 = sub_100044B54(&qword_1011C2030);
  v16 = type metadata accessor for ModifiedContent(255, v14, v15);
  swift_getWitnessTable(&protocol conformance descriptor for ScrollView<A>, v14);
  sub_100049F28(&qword_1011C2038, &qword_1011C2030, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  v17 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v16);
  v19 = v16;
  v20 = (_QWORD *)v17;
  return swift_getOpaqueTypeConformance2(&v19, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
}

uint64_t sub_10068E6A4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FA92A0, 1);
}

ValueMetadata *type metadata accessor for ScrollViewBoundsPreferenceKey()
{
  return &type metadata for ScrollViewBoundsPreferenceKey;
}

unint64_t sub_10068E6C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C2068;
  if (!qword_1011C2068)
  {
    v1 = sub_100044B54(&qword_1011C2060);
    sub_100049F28(&qword_1011C2070, &qword_1011C2058, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    sub_100049F28(&qword_1011C2078, &qword_1011C2080, (uint64_t)&protocol conformance descriptor for _PreferenceWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C2068);
  }
  return result;
}

uint64_t sub_10068E764(uint64_t a1)
{
  _QWORD v2[3];

  v2[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[1] = "8";
  v2[2] = &unk_100EC9B08;
  return swift_initClassMetadata2(a1, 0, 3, v2, a1 + 96);
}

uint64_t sub_10068E7BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, _OWORD *a4@<X8>)
{
  _QWORD *v4;
  objc_class *v8;
  id v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  unint64_t v16;
  _QWORD v17[4];
  __int128 v18;
  __int128 v19;
  objc_super v20;
  _BYTE v21[32];

  v8 = (objc_class *)type metadata accessor for ShareActivityItemProvider(0, *(_QWORD *)((swift_isaMask & *v4) + 0x50), *(_QWORD *)((swift_isaMask & *v4) + 0x58), a3);
  v20.receiver = v4;
  v20.super_class = v8;
  v9 = objc_msgSendSuper2(&v20, "activityViewController:itemForActivityType:", a1, a2);
  if (v9)
  {
    v10 = v9;
    _bridgeAnyObjectToAny(_:)(&v18, v9);
    swift_unknownObjectRelease(v10);
  }
  else
  {
    v18 = 0u;
    v19 = 0u;
  }
  sub_100065228((uint64_t)&v18, (uint64_t)v21, &qword_10119DCC0);
  sub_10004A160((uint64_t)v21, (uint64_t)&v18, &qword_10119DCC0);
  if (*((_QWORD *)&v19 + 1))
  {
    sub_10004A160((uint64_t)&v18, (uint64_t)v17, &qword_10119DCC0);
    if (swift_dynamicCast(&v15, v17, (char *)&type metadata for Any + 8, &type metadata for String, 0))
    {
      v12 = v15;
      v11 = v16;
      swift_bridgeObjectRelease();
      v13 = HIBYTE(v11) & 0xF;
      if ((v11 & 0x2000000000000000) == 0)
        v13 = v12 & 0xFFFFFFFFFFFFLL;
      if (!v13)
      {
        sub_10004FF60((uint64_t)v21, &qword_10119DCC0);
        *a4 = 0u;
        a4[1] = 0u;
        _s5Music18DragDropToPlaylistV6OriginVwxx_0(v17);
        return sub_10004FF60((uint64_t)&v18, &qword_10119DCC0);
      }
    }
    if (swift_dynamicCast(&v15, v17, (char *)&type metadata for Any + 8, &type metadata for Data, 0))
      __asm { BR              X10 }
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v17);
  }
  sub_100065228((uint64_t)v21, (uint64_t)a4, &qword_10119DCC0);
  return sub_10004FF60((uint64_t)&v18, &qword_10119DCC0);
}

id sub_10068E9E4(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  void *v16;
  __int128 v18;
  uint64_t v19;

  v6 = a3;
  v7 = a4;
  v8 = a1;
  sub_10068E7BC((uint64_t)v6, (uint64_t)a4, v9, &v18);

  v10 = v19;
  if (!v19)
    return 0;
  v11 = sub_100007E68(&v18, v19);
  v12 = *(_QWORD *)(v10 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v12 + 16))(v15, v13);
  v16 = (void *)_bridgeAnythingToObjectiveC<A>(_:)(v15, v10);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v10);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v18);
  return v16;
}

void sub_10068EAE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD v4[4];

  swift_unknownObjectRetain(a3, a2);
  _bridgeAnyObjectToAny(_:)(v4, a3);
  swift_unknownObjectRelease(a3);
  sub_10068F8D0();
}

id sub_10068EB40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for ShareActivityItemProvider(0, *(_QWORD *)((swift_isaMask & *v4) + 0x50), *(_QWORD *)((swift_isaMask & *v4) + 0x58), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, "dealloc");
}

void sub_10068EB8C(uint64_t a1)
{
  swift_release();
  sub_10068F8FC(*(_QWORD *)(a1 + qword_1011C2090), *(_QWORD *)(a1 + qword_1011C2090 + 8), *(_QWORD *)(a1 + qword_1011C2090 + 16), *(_QWORD *)(a1 + qword_1011C2090 + 24), *(_QWORD *)(a1 + qword_1011C2090 + 32), *(_QWORD *)(a1 + qword_1011C2090 + 40), *(_QWORD *)(a1 + qword_1011C2090 + 48));

}

uint64_t type metadata accessor for ShareActivityItemProvider(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ShareActivityItemProvider);
}

id sub_10068EBF0(void *a1)
{
  id v1;
  uint64_t v2;
  _QWORD *v3;
  void *v4;
  _QWORD v6[3];
  uint64_t v7;

  v1 = a1;
  sub_10068EC4C((uint64_t)v6);

  v2 = v7;
  v3 = sub_100007E68(v6, v7);
  v4 = (void *)_bridgeAnythingToObjectiveC<A>(_:)(v3, v2);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v6);
  return v4;
}

_OWORD *sub_10068EC4C@<X0>(uint64_t a1@<X8>)
{
  char *v1;
  NSObject *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  char *v29;
  void *v30;
  uint64_t v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  char *v39;
  id v40;
  id v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  char *v47;
  void *v48;
  dispatch_semaphore_t v49;
  uint64_t v50;
  id v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(_QWORD *, Swift::Int (*)(void *, uint64_t), uint64_t);
  NSObject *v59;
  _QWORD *v60;
  _QWORD *v61;
  NSObject *v62;
  uint64_t v63;
  NSObject *v64;
  Class v65;
  void (*v66)(char *, _QWORD *);
  char *v67;
  _QWORD *v68;
  uint64_t v69;
  _QWORD **v70;
  _QWORD *v71;
  void (*v72)(void);
  char *v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t *v85;
  uint64_t v86;
  void *v87;
  int v88;
  NSURL *v89;
  void *v90;
  void *v91;
  id v92;
  void *v93;
  NSObject *v94;
  uint64_t v95;
  void *v96;
  double v97;
  NSArray v98;
  id v99;
  void *v100;
  uint64_t v101;
  void *v102;
  double v103;
  NSArray v104;
  char *v105;
  NSURL *v106;
  void *v107;
  void *v108;
  NSObject *v109;
  id v110;
  id v111;
  uint64_t v112;
  _QWORD *v114;
  _QWORD v115[2];
  _QWORD **v116;
  uint64_t v117;
  id v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  Class isa;
  NSObject *v127;
  _QWORD *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t (*v132)(char *, uint64_t, uint64_t);
  char v133[24];
  __int128 v134;
  uint64_t v135;
  uint64_t v136;
  char v137;
  __int128 v138;
  __int128 v139;
  uint64_t v140;

  v3 = type metadata accessor for DispatchTimeInterval(0);
  isa = v3[-1].isa;
  v127 = v3;
  __chkstk_darwin(v3);
  v5 = (_QWORD *)((char *)v115 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v128 = (_QWORD *)type metadata accessor for DispatchTime(0);
  v125 = *(v128 - 1);
  __chkstk_darwin(v128);
  v7 = (char *)v115 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)v115 - v9;
  v11 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v11);
  v130 = (uint64_t)v115 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  __chkstk_darwin(v14);
  v122 = (char *)v115 - v15;
  __chkstk_darwin(v16);
  v123 = (char *)v115 - v17;
  __chkstk_darwin(v18);
  v121 = (uint64_t)v115 - v19;
  __chkstk_darwin(v20);
  v22 = (char *)v115 - v21;
  __chkstk_darwin(v23);
  v25 = (char *)v115 - v24;
  *(_QWORD *)&v27 = __chkstk_darwin(v26).n128_u64[0];
  v29 = (char *)v115 - v28;
  v131 = v1;
  v124 = qword_1011C2098;
  v30 = *(void **)&v1[qword_1011C2098];
  v120 = v31;
  if (v30)
  {
    v32 = objc_msgSend(v30, "originalURL", v27);
    if (v32)
    {
      v33 = v32;
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v32);

      v34 = type metadata accessor for URL(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v25, 0, 1, v34);
    }
    else
    {
      v36 = type metadata accessor for URL(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v25, 1, 1, v36);
    }
    sub_100065228((uint64_t)v25, (uint64_t)v29, &qword_10119E460);
  }
  else
  {
    v35 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v29, 1, 1, v35);
  }
  sub_10004A160((uint64_t)v29, (uint64_t)v22, &qword_10119E460);
  v37 = type metadata accessor for URL(0);
  v129 = *(_QWORD *)(v37 - 8);
  v132 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v129 + 48);
  v38 = v132(v22, 1, v37);
  sub_10004FF60((uint64_t)v22, &qword_10119E460);
  v39 = v131;
  if (v38 == 1)
  {
    v40 = objc_msgSend(v131, "activityType");
    if (v40)
    {
      v41 = v40;
      v42 = &v39[qword_1011C2090];
      v43 = *(_QWORD *)&v39[qword_1011C2090];
      if (!v43)
      {
LABEL_42:

        goto LABEL_43;
      }
      v117 = v37;
      v119 = a1;
      v44 = *((_QWORD *)v42 + 6);
      v45 = *((_QWORD *)v42 + 1);
      v136 = v43;
      v137 = v45;
      v46 = *((_OWORD *)v42 + 2);
      v138 = *((_OWORD *)v42 + 1);
      v139 = v46;
      v140 = v44;
      v47 = v39;
      v48 = v41;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v49 = dispatch_semaphore_create(0);
      v50 = swift_allocObject(&unk_1010D62A0, 24, 7);
      *(_QWORD *)(v50 + 16) = 0;
      v116 = (_QWORD **)(v50 + 16);
      v51 = objc_allocWithZone((Class)type metadata accessor for JSShareRequest());
      v118 = v48;
      JSShareRequest.init(requestContent:activityType:)(&v136, v118);
      v53 = v52;
      v54 = *(_QWORD *)&v47[qword_1011C2088];
      v55 = v10;
      v56 = v50;
      v57 = swift_allocObject(&unk_1010D62C8, 32, 7);
      *(_QWORD *)(v57 + 16) = v56;
      *(_QWORD *)(v57 + 24) = v49;
      v58 = *(void (**)(_QWORD *, Swift::Int (*)(void *, uint64_t), uint64_t))(*(_QWORD *)v54 + 152);
      swift_retain();
      v59 = v49;
      v60 = v53;
      v61 = v53;
      v62 = v59;
      v58(v61, sub_10068F8C8, v57);
      swift_release();
      static DispatchTime.now()(v63);
      *v5 = 10;
      v65 = isa;
      v64 = v127;
      (*((void (**)(_QWORD *, _QWORD, NSObject *))isa + 13))(v5, enum case for DispatchTimeInterval.seconds(_:), v127);
      + infix(_:_:)(v7, v5);
      (*((void (**)(_QWORD *, NSObject *))v65 + 1))(v5, v64);
      v66 = *(void (**)(char *, _QWORD *))(v125 + 8);
      v67 = v7;
      v68 = v128;
      v66(v67, v128);
      v69 = OS_dispatch_semaphore.wait(timeout:)(v55) & 1;
      v66(v55, v68);
      if ((static DispatchTimeoutResult.== infix(_:_:)(v69, 0) & 1) != 0)
      {
        v115[1] = v56;
        v128 = v60;
        v70 = v116;
        swift_beginAccess(v116, v133, 0, 0);
        v71 = *v70;
        v37 = v117;
        if (*v70)
        {
          v72 = *(void (**)(void))((swift_isaMask & *v71) + 0x110);
          v73 = v71;
          v74 = (uint64_t)v123;
          v72();
          v75 = v132((char *)v74, 1, v37);
          v41 = v118;
          if (v75 == 1)
          {
            v76 = (*(uint64_t (**)(void))((swift_isaMask & *(_QWORD *)v73) + 0xB0))();
            v77 = v121;
            URL.init(string:)(v76, v78, v121);
            sub_10004FF60((uint64_t)v29, &qword_10119E460);
            sub_10004FF60(v74, &qword_10119E460);
          }
          else
          {
            sub_10004FF60((uint64_t)v29, &qword_10119E460);
            v80 = v129;
            v77 = v121;
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v129 + 32))(v121, v74, v37);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v80 + 56))(v77, 0, 1, v37);
          }
          v81 = (uint64_t)v122;
          v82 = sub_100065228(v77, (uint64_t)v29, &qword_10119E460);
          v83 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *(_QWORD *)v73) + 0xF8))(v82);
          v84 = v131;
          v85 = (uint64_t *)&v131[qword_1011C2120];
          *v85 = v83;
          v85[1] = v86;
          swift_bridgeObjectRelease();
          v87 = *(void **)&v84[v124];
          if (v87)
          {
            v131 = v73;
            sub_10004A160((uint64_t)v29, v81, &qword_10119E460);
            v88 = v132((char *)v81, 1, v37);
            v79 = v87;
            if (v88 == 1)
            {
              v90 = 0;
            }
            else
            {
              URL._bridgeToObjectiveC()(v89);
              v90 = v91;
              (*(void (**)(uint64_t, uint64_t))(v129 + 8))(v81, v37);
            }
            objc_msgSend(v79, "setOriginalURL:", v90);

            v92 = objc_msgSend(v79, "specialization");
            if (v92)
            {
              v93 = v92;
              v94 = v62;
              objc_opt_self(LPiTunesMediaSongMetadata);
              v95 = swift_dynamicCastObjCClass(v93);
              if (v95)
              {
                v96 = (void *)v95;
                v127 = v94;
                if ((*(uint64_t (**)(void))((swift_isaMask & *(_QWORD *)v131) + 0xC8))())
                {
                  v98.super.isa = Array._bridgeToObjectiveC()().super.isa;
                  *(_QWORD *)&v97 = swift_bridgeObjectRelease().n128_u64[0];
                }
                else
                {
                  v98.super.isa = 0;
                }
                v105 = v120;
                objc_msgSend(v96, "setOffers:", v98.super.isa, v97);

                (*(void (**)(void))((swift_isaMask & *(_QWORD *)v131) + 0xE0))();
                if (v132((char *)v105, 1, v37) == 1)
                {
                  v107 = 0;
                }
                else
                {
                  URL._bridgeToObjectiveC()(v106);
                  v107 = v108;
                  (*(void (**)(char *, uint64_t))(v129 + 8))((char *)v105, v37);
                }
                v109 = v127;
                v110 = v128;
                objc_msgSend(v96, "setPreviewURL:", v107);
                swift_release();

                v79 = v131;
                v62 = v109;
                goto LABEL_41;
              }

            }
            v99 = objc_msgSend(v79, "specialization");
            if (v99)
            {
              v100 = v99;
              v127 = v62;
              objc_opt_self(LPiTunesMediaAlbumMetadata);
              v101 = swift_dynamicCastObjCClass(v100);
              if (v101)
              {
                v102 = (void *)v101;
                if ((*(uint64_t (**)(void))((swift_isaMask & *(_QWORD *)v131) + 0xC8))())
                {
                  v104.super.isa = Array._bridgeToObjectiveC()().super.isa;
                  *(_QWORD *)&v103 = swift_bridgeObjectRelease().n128_u64[0];
                }
                else
                {
                  v104.super.isa = 0;
                }
                v111 = v128;
                objc_msgSend(v102, "setOffers:", v104.super.isa, v103);
                swift_release();

                v79 = v131;
                v62 = v127;
                goto LABEL_41;
              }
              swift_release();

            }
            else
            {
              swift_release();

            }
            v62 = v131;
            v41 = v128;
          }
          else
          {
            swift_release();

            v79 = v73;
          }
        }
        else
        {
          swift_release();
          v79 = (char *)v128;
          v41 = v118;
        }
      }
      else
      {
        swift_release();
        v79 = (char *)v60;
        v41 = v118;
        v37 = v117;
      }
LABEL_41:

      a1 = v119;
      goto LABEL_42;
    }
  }
LABEL_43:
  v112 = v130;
  sub_10004A160((uint64_t)v29, v130, &qword_10119E460);
  if (v132((char *)v112, 1, v37) == 1)
  {
    sub_10004FF60(v112, &qword_10119E460);
    *(_QWORD *)(a1 + 24) = &type metadata for String;
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0xE000000000000000;
    return (_OWORD *)sub_10004FF60((uint64_t)v29, &qword_10119E460);
  }
  else
  {
    v135 = v37;
    v114 = sub_100049F68(&v134);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v129 + 32))(v114, v112, v37);
    sub_10004FF60((uint64_t)v29, &qword_10119E460);
    return sub_100048ABC(&v134, (_OWORD *)a1);
  }
}

Swift::Int sub_10068F6C0(void *a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  id v6;
  _BYTE v8[24];

  swift_beginAccess(a3 + 16, v8, 1, 0);
  v5 = *(void **)(a3 + 16);
  *(_QWORD *)(a3 + 16) = a1;
  v6 = a1;

  return OS_dispatch_semaphore.signal()();
}

id sub_10068F71C(uint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  NSString v3;

  v1 = *(_QWORD *)(a1 + qword_1011C2120 + 8);
  if (v1)
    v2 = v1;
  else
    v2 = 0xE000000000000000;
  swift_bridgeObjectRetain(v1);
  v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v2);
  return v3;
}

uint64_t sub_10068F77C()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_1011C2120 + 8));
}

id sub_10068F790()
{
  return sub_10015C40C(type metadata accessor for ShareURLActivityItemProvider);
}

uint64_t sub_10068F79C(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_1011C2120 + 8));
}

uint64_t type metadata accessor for ShareURLActivityItemProvider(uint64_t a1)
{
  return sub_100055934(a1, qword_1011C2150, (uint64_t)&nominal type descriptor for ShareURLActivityItemProvider);
}

uint64_t sub_10068F7C4(uint64_t a1)
{
  void *v2;

  v2 = &unk_100EC9B70;
  return swift_initClassMetadata2(a1, 256, 1, &v2, a1 + 152);
}

uint64_t sub_10068F804()
{
  return type metadata accessor for ShareURLActivityItemProvider(0);
}

id sub_10068F80C(uint64_t a1)
{
  return *(id *)(a1 + qword_1011C2098);
}

id sub_10068F81C()
{
  return sub_10015C40C(type metadata accessor for ShareLinkPresentationItemProvider);
}

uint64_t type metadata accessor for ShareLinkPresentationItemProvider(uint64_t a1)
{
  return sub_100055934(a1, qword_1011C2270, (uint64_t)&nominal type descriptor for ShareLinkPresentationItemProvider);
}

uint64_t sub_10068F83C(uint64_t a1)
{
  _BYTE v2[8];

  return swift_initClassMetadata2(a1, 256, 0, v2, a1 + 152);
}

uint64_t sub_10068F870()
{
  return type metadata accessor for ShareLinkPresentationItemProvider(0);
}

uint64_t sub_10068F878()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10068F89C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

Swift::Int sub_10068F8C8(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10068F6C0(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_10068F8D0()
{
  _swift_stdlib_reportUnimplementedInitializer("Music.ShareActivityItemProvider", 31, "init(placeholderItem:)", 22, 0);
  __break(1u);
}

uint64_t sub_10068F8FC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (result)
  {
    swift_bridgeObjectRelease(result);
    swift_bridgeObjectRelease(a3);
    swift_bridgeObjectRelease(a5);
    return swift_bridgeObjectRelease(a7);
  }
  return result;
}

void sub_10068F948(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(id), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  void **v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __n128 v17;
  double v18;
  id v19;
  double v20;
  id v21;
  double v22;
  id v23;
  double v24;
  id v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char **v31;
  char **v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  void *v39;
  uint64_t v40;
  void *v41;
  _QWORD *v42;
  id v43;
  id v44;
  void *v45;
  int v46;
  NSObject *v47;
  os_log_type_t v48;
  _BOOL4 v49;
  uint8_t *v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  void *v54;
  _QWORD *v55;
  void *v56;
  _QWORD *v57;
  id v58;
  id v59;
  uint8_t *v60;
  void *v61;
  uint64_t v62;
  void *v63;
  _QWORD *v64;
  id v65;
  id v66;
  NSObject *v67;
  os_log_type_t v68;
  uint8_t *v69;
  void *v70;
  uint64_t v71;
  void *v72;
  _QWORD *v73;
  id v74;
  id v75;
  void *v76;
  uint64_t v77;
  void *v78;
  _QWORD *v79;
  id v80;
  void *v81;
  void *v82;
  _QWORD *v83;
  id v84;
  void *v85;
  uint64_t v86;
  void *v87;
  _QWORD *v88;
  id v89;
  id v90;
  void *v91;
  uint64_t v92;
  id v93;
  id v94;
  void *v95;
  uint64_t v96;
  id v97;
  id v98;
  _QWORD *v99;
  uint64_t v100;
  _QWORD *v101;
  _QWORD *v102;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v104;
  unint64_t v105;
  _QWORD *v106;
  void *v112;
  uint64_t v113;
  void **aBlock;
  uint64_t v115;
  void *v116;
  void *v117;
  uint64_t (*v118)();
  _QWORD *v119;

  if (qword_10119C5F0 != -1)
    swift_once(&qword_10119C5F0, sub_100690724);
  v8 = type metadata accessor for Logger(0);
  sub_100048B14(v8, (uint64_t)qword_10124D6E8);
  v9 = swift_retain_n(a1, 10);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter(v10);
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc(52, -1);
    v13 = (void **)swift_slowAlloc(32, -1);
    aBlock = v13;
    *(_DWORD *)v12 = 136447234;
    swift_retain(a1);
    v14 = sub_1006920A4();
    v16 = v15;
    swift_release(a1);
    v113 = sub_100322200(v14, v16, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v113, &aBlock);
    swift_release_n(a1, 2, v17);
    *(_QWORD *)&v18 = swift_bridgeObjectRelease(v16).n128_u64[0];
    *(_WORD *)(v12 + 12) = 2050;
    v19 = objc_msgSend(*(id *)(a1 + 32), "state", v18);
    swift_release(a1);
    v113 = (uint64_t)v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v113, &aBlock);
    *(_QWORD *)&v20 = swift_release(a1).n128_u64[0];
    *(_WORD *)(v12 + 22) = 2048;
    v21 = objc_msgSend(*(id *)(a1 + 40), "state", v20);
    swift_release(a1);
    v113 = (uint64_t)v21;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v113, &aBlock);
    *(_QWORD *)&v22 = swift_release(a1).n128_u64[0];
    *(_WORD *)(v12 + 32) = 2050;
    v23 = objc_msgSend(*(id *)(a1 + 48), "state", v22);
    swift_release(a1);
    v113 = (uint64_t)v23;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v113, &aBlock);
    *(_QWORD *)&v24 = swift_release(a1).n128_u64[0];
    *(_WORD *)(v12 + 42) = 2050;
    v25 = objc_msgSend(*(id *)(a1 + 56), "state", v24);
    swift_release(a1);
    v113 = (uint64_t)v25;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v113, &aBlock);
    swift_release(a1);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Reversing %{public}s, tCVPA=%{public}ld fPOA=%ld sPOA=%{public}ld aA=%{public}ld", (uint8_t *)v12, 0x34u);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);

  }
  else
  {

    swift_release_n(a1, 10, v26);
  }
  v27 = _s13AnimationDataC7ContextCMa();
  v28 = swift_allocObject(v27, 16, 7);
  v29 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 80) = v28;
  swift_retain(v28);
  swift_release(v29);
  v31 = &selRef_handleVolumeDownButton;
  v32 = &selRef_setMetricsOverlay_;
  if (*(_BYTE *)(a1 + 73) != 1)
  {
    v46 = *(unsigned __int8 *)(a1 + 72);
    v47 = Logger.logObject.getter(v30);
    v48 = static os_log_type_t.default.getter(v47);
    v49 = os_log_type_enabled(v47, v48);
    if (v46 != 1)
    {
      if (v49)
      {
        v60 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v60 = 0;
        _os_log_impl((void *)&_mh_execute_header, v47, v48, "reverse path 3", v60, 2u);
        swift_slowDealloc(v60, -1, -1);
      }

      v61 = *(void **)(a1 + 40);
      v62 = swift_allocObject(&unk_1010D6470, 32, 7);
      *(_QWORD *)(v62 + 16) = v28;
      *(_QWORD *)(v62 + 24) = a1;
      v118 = (uint64_t (*)())sub_100693290;
      v119 = (_QWORD *)v62;
      aBlock = _NSConcreteStackBlock;
      v115 = 1107296256;
      v116 = sub_10012F6FC;
      v117 = &unk_1010D6488;
      v63 = _Block_copy(&aBlock);
      v64 = v119;
      swift_retain(a1);
      swift_retain(v28);
      v65 = v61;
      objc_msgSend(v65, "addCompletion:", v63, swift_release(v64).n128_f64[0]);
      _Block_release(v63);

      if (objc_msgSend(*(id *)(a1 + 40), "state") == (id)1)
      {
        v66 = *(id *)(a1 + 40);
        objc_msgSend(v66, "setReversed:", objc_msgSend(v66, "isReversed") ^ 1);

        goto LABEL_36;
      }
      objc_msgSend(*(id *)(a1 + 24), "setAlpha:", 0.0);
      v85 = *(void **)(a1 + 40);
      v86 = swift_allocObject(&unk_1010D64C0, 25, 7);
      *(_QWORD *)(v86 + 16) = a1;
      *(_BYTE *)(v86 + 24) = 0;
      v118 = (uint64_t (*)())sub_1006932BC;
      v119 = (_QWORD *)v86;
      aBlock = _NSConcreteStackBlock;
      v115 = 1107296256;
      v116 = sub_1001DBD98;
      v117 = &unk_1010D64D8;
      v87 = _Block_copy(&aBlock);
      v88 = v119;
      swift_retain(a1);
      v89 = v85;
      objc_msgSend(v89, "addAnimations:", v87, swift_release(v88).n128_f64[0]);
      _Block_release(v87);

      v45 = *(void **)(a1 + 40);
      goto LABEL_35;
    }
    if (v49)
    {
      v50 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v50 = 0;
      _os_log_impl((void *)&_mh_execute_header, v47, v48, "reverse path 2 - secondPhaseStarted", v50, 2u);
      swift_slowDealloc(v50, -1, -1);
    }

    if (objc_msgSend(*(id *)(a1 + 48), "state") == (id)1)
    {
      v51 = Logger.logObject.getter(1);
      v52 = static os_log_type_t.default.getter(v51);
      if (os_log_type_enabled(v51, v52))
      {
        v53 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v53 = 0;
        _os_log_impl((void *)&_mh_execute_header, v51, v52, "reverse path 2 - secondPhaseStarted - active", v53, 2u);
        swift_slowDealloc(v53, -1, -1);
      }

      objc_msgSend(*(id *)(a1 + 48), "stopAnimation:", 0);
    }
    else
    {
      if (objc_msgSend(*(id *)(a1 + 48), "state") != (id)2)
      {
LABEL_31:
        v70 = *(void **)(a1 + 48);
        v71 = swift_allocObject(&unk_1010D65B0, 25, 7);
        *(_QWORD *)(v71 + 16) = v112;
        *(_BYTE *)(v71 + 24) = 0;
        v118 = (uint64_t (*)())sub_100693374;
        v119 = (_QWORD *)v71;
        aBlock = _NSConcreteStackBlock;
        v115 = 1107296256;
        v116 = sub_1001DBD98;
        v117 = &unk_1010D65C8;
        v72 = _Block_copy(&aBlock);
        v73 = v119;
        v74 = v112;
        v32 = &selRef_setMetricsOverlay_;
        v75 = v70;
        objc_msgSend(v75, "addAnimations:", v72, swift_release(v73).n128_f64[0]);
        _Block_release(v72);

        v76 = *(void **)(a1 + 48);
        v77 = swift_allocObject(&unk_1010D6600, 33, 7);
        *(_QWORD *)(v77 + 16) = v28;
        *(_QWORD *)(v77 + 24) = a1;
        *(_BYTE *)(v77 + 32) = 0;
        v118 = (uint64_t (*)())sub_1006933F0;
        v119 = (_QWORD *)v77;
        aBlock = _NSConcreteStackBlock;
        v115 = 1107296256;
        v116 = sub_10012F6FC;
        v117 = &unk_1010D6618;
        v78 = _Block_copy(&aBlock);
        v79 = v119;
        swift_retain(a1);
        swift_retain(v28);
        v80 = v76;
        objc_msgSend(v80, "addCompletion:", v78, swift_release(v79).n128_f64[0]);
        _Block_release(v78);

        objc_msgSend(*(id *)(a1 + 48), "startAnimation");
        v31 = &selRef_handleVolumeDownButton;
        goto LABEL_36;
      }
      v67 = Logger.logObject.getter(2);
      v68 = static os_log_type_t.default.getter(v67);
      if (os_log_type_enabled(v67, v68))
      {
        v69 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v69 = 0;
        _os_log_impl((void *)&_mh_execute_header, v67, v68, "reverse path 2 - secondPhaseStarted - stopped", v69, 2u);
        swift_slowDealloc(v69, -1, -1);
      }

    }
    objc_msgSend(*(id *)(a1 + 48), "finishAnimationAtPosition:", 2);
    goto LABEL_31;
  }
  v33 = Logger.logObject.getter(v30);
  v34 = static os_log_type_t.default.getter(v33);
  if (os_log_type_enabled(v33, v34))
  {
    v35 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v35 = 0;
    _os_log_impl((void *)&_mh_execute_header, v33, v34, "reverse path 1 - isReversed", v35, 2u);
    swift_slowDealloc(v35, -1, -1);
  }

  if (objc_msgSend(*(id *)(a1 + 48), "state") == (id)1)
  {
    v36 = Logger.logObject.getter(1);
    v37 = static os_log_type_t.default.getter(v36);
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v38 = 0;
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "reverse path 1 - reversing second phase", v38, 2u);
      swift_slowDealloc(v38, -1, -1);
    }

    objc_msgSend(*(id *)(a1 + 48), "stopAnimation:", 0);
    objc_msgSend(*(id *)(a1 + 48), "finishAnimationAtPosition:", 2);
    v39 = *(void **)(a1 + 48);
    v40 = swift_allocObject(&unk_1010D66C8, 24, 7);
    *(_QWORD *)(v40 + 16) = v112;
    v118 = sub_10069343C;
    v119 = (_QWORD *)v40;
    aBlock = _NSConcreteStackBlock;
    v115 = 1107296256;
    v116 = sub_1001DBD98;
    v117 = &unk_1010D66E0;
    v41 = _Block_copy(&aBlock);
    v42 = v119;
    v43 = v39;
    v44 = v112;
    objc_msgSend(v43, "addAnimations:", v41, swift_release(v42).n128_f64[0]);
    _Block_release(v41);

    v45 = *(void **)(a1 + 48);
  }
  else
  {
    v54 = *(void **)(a1 + 40);
    v55 = (_QWORD *)swift_allocObject(&unk_1010D6650, 40, 7);
    v55[2] = v28;
    v55[3] = a1;
    v55[4] = v112;
    v118 = (uint64_t (*)())sub_100693430;
    v119 = v55;
    aBlock = _NSConcreteStackBlock;
    v115 = 1107296256;
    v116 = sub_10012F6FC;
    v117 = &unk_1010D6668;
    v56 = _Block_copy(&aBlock);
    v57 = v119;
    swift_retain(a1);
    swift_retain(v28);
    v58 = v112;
    v59 = v54;
    objc_msgSend(v59, "addCompletion:", v56, swift_release(v57).n128_f64[0]);
    _Block_release(v56);

    if (objc_msgSend(*(id *)(a1 + 40), "state") == (id)1)
      objc_msgSend(*(id *)(a1 + 48), "stopAnimation:", 0);
    else
      objc_msgSend(*(id *)(a1 + 24), "setAlpha:", 1.0);
    v81 = *(void **)(a1 + 40);
    v118 = (uint64_t (*)())sub_1005F1374;
    v119 = (_QWORD *)a1;
    aBlock = _NSConcreteStackBlock;
    v115 = 1107296256;
    v116 = sub_1001DBD98;
    v117 = &unk_1010D6690;
    v82 = _Block_copy(&aBlock);
    v83 = v119;
    swift_retain(a1);
    v84 = v81;
    objc_msgSend(v84, "addAnimations:", v82, swift_release(v83).n128_f64[0]);
    _Block_release(v82);

    v45 = *(void **)(a1 + 40);
    v32 = &selRef_setMetricsOverlay_;
  }
LABEL_35:
  objc_msgSend(v45, v32[256]);
LABEL_36:
  v90 = *(id *)(a1 + 32);
  objc_msgSend(v90, "setReversed:", objc_msgSend(v90, "isReversed") ^ 1);

  v91 = *(void **)(a1 + 56);
  v92 = swift_allocObject(&unk_1010D6510, 32, 7);
  *(_QWORD *)(v92 + 16) = a2;
  *(_QWORD *)(v92 + 24) = a3;
  v93 = v91;
  swift_retain(a3);
  UIViewPropertyAnimator.addModifiedAnimations(with:animations:)(1, (uint64_t)sub_10004D5F4, v92);

  v94 = objc_msgSend(*(id *)(a1 + 56), "state", swift_release(v92).n128_f64[0]);
  if (!v94)
    v94 = objc_msgSend(*(id *)(a1 + 56), v32[256]);
  a4(v94);
  objc_msgSend(*(id *)(a1 + 64), v31[85], 0);
  objc_msgSend(*(id *)(a1 + 64), "finishAnimationAtPosition:", 2);
  v95 = *(void **)(a1 + 64);
  v96 = swift_allocObject(&unk_1010D6538, 24, 7);
  *(_QWORD *)(v96 + 16) = v112;
  v97 = v112;
  v98 = v95;
  UIViewPropertyAnimator.addModifiedAnimations(with:animations:)(1, (uint64_t)sub_100693308, v96);

  objc_msgSend(*(id *)(a1 + 64), v32[256], swift_release(v96).n128_f64[0]);
  *(_BYTE *)(a1 + 73) = (*(_BYTE *)(a1 + 73) & 1) == 0;
  *(_BYTE *)(a1 + 72) = 1;
  v99 = (_QWORD *)swift_allocObject(&unk_1010D6560, 48, 7);
  v99[2] = v28;
  v99[3] = a1;
  v99[4] = a6;
  v99[5] = a7;
  v100 = swift_allocObject(&unk_1010D6588, 32, 7);
  *(_QWORD *)(v100 + 16) = sub_100693344;
  *(_QWORD *)(v100 + 24) = v99;
  v101 = (_QWORD *)(a1 + 88);
  swift_beginAccess(a1 + 88, &aBlock, 33, 0);
  v102 = *(_QWORD **)(a1 + 88);
  swift_retain(a1);
  swift_retain(v28);
  swift_retain(a7);
  swift_retain(v99);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v102);
  *(_QWORD *)(a1 + 88) = v102;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v102 = sub_100431F80(0, v102[2] + 1, 1, v102);
    *v101 = v102;
  }
  v105 = v102[2];
  v104 = v102[3];
  if (v105 >= v104 >> 1)
  {
    v102 = sub_100431F80((_QWORD *)(v104 > 1), v105 + 1, 1, v102);
    *v101 = v102;
  }
  v102[2] = v105 + 1;
  v106 = &v102[2 * v105];
  v106[4] = sub_10010942C;
  v106[5] = v100;
  swift_endAccess(&aBlock);
  swift_release(v28);
  swift_release(v99);
}

uint64_t sub_100690700(uint64_t a1)
{
  return sub_10048D81C(a1, qword_10124D6D0, 0xD000000000000015, 0x8000000100E42180);
}

uint64_t sub_100690724(uint64_t a1)
{
  return sub_10048D81C(a1, qword_10124D6E8, 0xD00000000000001DLL, 0x8000000100E421A0);
}

id sub_100690748()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  Class isa;
  NSString v11;
  void *v12;
  id v13;
  uint64_t v15;

  v1 = v0;
  v2 = type metadata accessor for Locale(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OBJC_IVAR____TtCC5Music24NowPlayingViewController9TimeLabel____lazy_storage___dateFormatter;
  v7 = *(void **)(v1 + OBJC_IVAR____TtCC5Music24NowPlayingViewController9TimeLabel____lazy_storage___dateFormatter);
  if (v7)
  {
    v8 = *(id *)(v1 + OBJC_IVAR____TtCC5Music24NowPlayingViewController9TimeLabel____lazy_storage___dateFormatter);
  }
  else
  {
    v9 = objc_msgSend(objc_allocWithZone((Class)NSDateFormatter), "init");
    Locale.init(identifier:)(0x4F505F53555F6E65, 0xEB00000000584953);
    isa = Locale._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    objc_msgSend(v9, "setLocale:", isa);

    v11 = String._bridgeToObjectiveC()();
    objc_msgSend(v9, "setDateFormat:", v11);

    v12 = *(void **)(v1 + v6);
    *(_QWORD *)(v1 + v6) = v9;
    v8 = v9;

    v7 = 0;
  }
  v13 = v7;
  return v8;
}

void sub_1006908A0(double a1, double a2, double a3, double a4)
{
  char *v4;
  id v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  char *v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  objc_super v26;
  CAFrameRateRange v27;

  *(_QWORD *)&v4[OBJC_IVAR____TtCC5Music24NowPlayingViewController9TimeLabel_displayLink] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtCC5Music24NowPlayingViewController9TimeLabel____lazy_storage___dateFormatter] = 0;
  v26.receiver = v4;
  v26.super_class = (Class)_s9TimeLabelCMa();
  v9 = objc_msgSendSuper2(&v26, "initWithFrame:", a1, a2, a3, a4);
  v10 = (void *)objc_opt_self(UIColor);
  v11 = v9;
  v12 = objc_msgSend(v10, "grayColor");
  objc_msgSend(v11, "setBackgroundColor:", v12);

  v13 = (void *)objc_opt_self(UIFont);
  v14 = (char *)v11;
  v15 = objc_msgSend(v13, "monospacedDigitSystemFontOfSize:weight:", 17.0, UIFontWeightRegular);
  objc_msgSend(v14, "setFont:", v15);

  sub_100693220();
  v16 = swift_allocObject(&unk_1010D6448, 24, 7);
  swift_unknownObjectWeakInit(v16 + 16);
  v17 = CADisplayLink.init(handler:)((uint64_t)sub_100693280, v16);
  v18 = OBJC_IVAR____TtCC5Music24NowPlayingViewController9TimeLabel_displayLink;
  v19 = *(void **)&v14[OBJC_IVAR____TtCC5Music24NowPlayingViewController9TimeLabel_displayLink];
  *(_QWORD *)&v14[OBJC_IVAR____TtCC5Music24NowPlayingViewController9TimeLabel_displayLink] = v17;

  v20 = *(void **)&v14[v18];
  if (v20)
  {
    v21 = v20;
    v27 = CAFrameRateRange.init(minimum:maximum:preferred:)(80.0, 120.0, (Swift::Float_optional *)0x42F00000);
    objc_msgSend(v21, "setPreferredFrameRateRange:", *(double *)&v27.minimum, *(double *)&v27.maximum, *(double *)&v27.preferred);

    v22 = *(void **)&v14[v18];
    if (v22)
    {
      v23 = (void *)objc_opt_self(NSRunLoop);
      v24 = v22;
      v25 = objc_msgSend(v23, "mainRunLoop");
      objc_msgSend(v24, "addToRunLoop:forMode:", v25, NSRunLoopCommonModes);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_100690AEC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *Strong;
  id v8;
  id v9;
  Class isa;
  id v11;
  NSString v12;
  _BYTE v14[24];

  v3 = type metadata accessor for Date(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v14, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v8 = Strong;
    v9 = sub_100690748();
    Date.init()(v9);
    isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v11 = objc_msgSend(v9, "stringFromDate:", isa);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v12 = String._bridgeToObjectiveC()();
    objc_msgSend(v8, "setText:", v12, swift_bridgeObjectRelease().n128_f64[0]);

  }
}

id sub_100690CC8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)_s9TimeLabelCMa();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t _s9TimeLabelCMa()
{
  return objc_opt_self(_TtCC5Music24NowPlayingViewController9TimeLabel);
}

id sub_100690D50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v6;
  _QWORD *v7;
  void *v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  void (*v12)(__n128);
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  _QWORD v18[5];
  _QWORD *v19;

  v3 = v2;
  *(_BYTE *)(v3 + 72) = 0;
  v6 = *(void **)(v3 + 16);
  v7 = (_QWORD *)swift_allocObject(&unk_1010D63F8, 40, 7);
  v7[2] = v3;
  v7[3] = a1;
  v7[4] = a2;
  v18[4] = sub_100693154;
  v19 = v7;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 1107296256;
  v18[2] = sub_10012F6FC;
  v18[3] = &unk_1010D6410;
  v8 = _Block_copy(v18);
  v9 = v19;
  v10 = v6;
  swift_retain(v3);
  swift_retain(a2);
  objc_msgSend(v10, "addCompletion:", v8, swift_release(v9).n128_f64[0]);
  _Block_release(v8);

  v12 = *(void (**)(__n128))(v3 + 24);
  v11 = *(_QWORD *)(v3 + 32);
  v13 = swift_retain(v11);
  v12(v13);
  swift_release(v11);
  v14 = *(_QWORD *)(v3 + 40);
  v15 = *(_QWORD *)(v3 + 48);
  v16 = *(id *)(v3 + 16);
  swift_retain(v15);
  UIViewPropertyAnimator.addModifiedAnimations(with:animations:)(1, v14, v15);

  swift_release(v15);
  return objc_msgSend(*(id *)(v3 + 16), "startAnimationAfterDelay:", *(double *)(v3 + 56));
}

id sub_100690E9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v6;
  _QWORD *v7;
  void *v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  void (*v12)(__n128);
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  _QWORD v18[5];
  _QWORD *v19;

  v3 = v2;
  *(_BYTE *)(v3 + 72) = 0;
  v6 = *(void **)(v3 + 16);
  v7 = (_QWORD *)swift_allocObject(&unk_1010D63A8, 40, 7);
  v7[2] = v3;
  v7[3] = a1;
  v7[4] = a2;
  v18[4] = sub_100693154;
  v19 = v7;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 1107296256;
  v18[2] = sub_10012F6FC;
  v18[3] = &unk_1010D63C0;
  v8 = _Block_copy(v18);
  v9 = v19;
  v10 = v6;
  swift_retain(v3);
  swift_retain(a2);
  objc_msgSend(v10, "addCompletion:", v8, swift_release(v9).n128_f64[0]);
  _Block_release(v8);

  v12 = *(void (**)(__n128))(v3 + 40);
  v11 = *(_QWORD *)(v3 + 48);
  v13 = swift_retain(v11);
  v12(v13);
  swift_release(v11);
  v14 = *(_QWORD *)(v3 + 24);
  v15 = *(_QWORD *)(v3 + 32);
  v16 = *(id *)(v3 + 16);
  swift_retain(v15);
  UIViewPropertyAnimator.addModifiedAnimations(with:animations:)(1, v14, v15);

  swift_release(v15);
  return objc_msgSend(*(id *)(v3 + 16), "startAnimationAfterDelay:", *(double *)(v3 + 64));
}

uint64_t sub_100690FE8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocClassInstance(v0, 73, 7);
}

uint64_t sub_10069101C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  uint64_t v15;
  _QWORD v16[2];

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 56);
  if ((~v2 & 0xF000000000000007) != 0)
  {
    if (v2 >> 62)
    {
      if (v2 >> 62 == 1)
      {
        v5 = *(void **)(v0 + 64);
        v6 = *(void **)(v1 + 72);
        v7 = *(void **)(v1 + 80);
        v8 = *(void **)(v1 + 88);
        v9 = (void *)(v2 & 0x3FFFFFFFFFFFFFFFLL);
        sub_100064570(v2, *(void **)(v1 + 64), v6, v7, v8, *(void **)(v1 + 96), *(_QWORD *)(v1 + 104), *(_QWORD *)(v1 + 112));
        swift_bridgeObjectRelease(v6);

        v3 = (void *)0xE600000000000000;
        v4 = 0x73636972796CLL;
      }
      else
      {
        v3 = (void *)0xE700000000000000;
        v4 = 0x72616C75676572;
      }
    }
    else
    {
      v3 = (void *)0xE500000000000000;
      v4 = 0x6575657571;
    }
  }
  else
  {
    v3 = (void *)0xE300000000000000;
    v4 = 7104878;
  }
  v16[0] = 0;
  v16[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(31);
  v10._object = (void *)0x8000000100E42300;
  v10._countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v10);
  v15 = v1;
  _print_unlocked<A, B>(_:_:)(&v15, v16, &type metadata for UnsafeMutableRawPointer, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v11._countAndFlagsBits = 0x3D65646F6D20;
  v11._object = (void *)0xE600000000000000;
  String.append(_:)(v11);
  v12._countAndFlagsBits = v4;
  v12._object = v3;
  String.append(_:)(v12);
  swift_bridgeObjectRelease(v3);
  v13._countAndFlagsBits = 62;
  v13._object = (void *)0xE100000000000000;
  String.append(_:)(v13);
  return v16[0];
}

uint64_t sub_1006911A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  __n128 v8;

  *(_QWORD *)(v2 + 16) = 0;
  *(_QWORD *)(v2 + 24) = _swiftEmptyArrayStorage;
  *(_BYTE *)(v2 + 48) = 0;
  *(_QWORD *)(v2 + 56) = 0xF000000000000007;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_QWORD *)(v2 + 112) = 0;
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  v5 = swift_allocObject(&unk_1010D6380, 24, 7);
  swift_weakInit(v5 + 16, v2);
  swift_retain(a1);
  swift_retain(a2);
  swift_retain(v5);
  sub_100690D50((uint64_t)sub_1006929C0, v5);
  swift_release_n(v5, 2, v6);
  v7 = swift_allocObject(&unk_1010D6380, 24, 7);
  swift_weakInit(v7 + 16, v2);
  swift_retain(v7);
  sub_100690D50((uint64_t)sub_1006929E0, v7);
  swift_release_n(v7, 2, v8);
  swift_release(a1);
  swift_release(a2);
  return v2;
}

void sub_1006912C0(uint64_t a1, const char *a2)
{
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  __n128 v15;
  __n128 v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  void (*v24)(__n128);
  __n128 v25;
  uint64_t v26;
  uint64_t v27[3];
  _BYTE v28[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v28, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    if (qword_10119C5E8 != -1)
      swift_once(&qword_10119C5E8, sub_100690700);
    v6 = type metadata accessor for Logger(0);
    sub_100048B14(v6, (uint64_t)qword_10124D6D0);
    v7 = swift_retain_n(v5, 2);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.default.getter(v8);
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(12, -1);
      v11 = swift_slowAlloc(32, -1);
      v27[0] = v11;
      *(_DWORD *)v10 = 136446210;
      swift_retain(v5);
      v12 = sub_10069101C();
      v14 = v13;
      swift_release(v5);
      v26 = sub_100322200(v12, v14, v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, v27);
      swift_release_n(v5, 2, v15);
      swift_bridgeObjectRelease(v14);
      _os_log_impl((void *)&_mh_execute_header, v8, v9, a2, v10, 0xCu);
      swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v11, -1, -1);
      swift_slowDealloc(v10, -1, -1);

    }
    else
    {

      swift_release_n(v5, 2, v16);
    }
    v17 = *(_QWORD *)(v5 + 16);
    v18 = __OFADD__(v17, 1);
    v19 = v17 + 1;
    if (v18)
    {
      __break(1u);
    }
    else
    {
      *(_QWORD *)(v5 + 16) = v19;
      if (v19 == 2)
      {
        swift_beginAccess(v5 + 24, v27, 1, 0);
        v20 = *(_QWORD *)(v5 + 24);
        v21 = *(_QWORD *)(v20 + 16);
        if (v21)
        {
          swift_bridgeObjectRetain();
          v22 = (_QWORD *)(v20 + 40);
          do
          {
            v24 = (void (*)(__n128))*(v22 - 1);
            v23 = *v22;
            v25 = swift_retain(*v22);
            v24(v25);
            swift_release(v23);
            v22 += 2;
            --v21;
          }
          while (v21);
          swift_bridgeObjectRelease(v20);
          v20 = *(_QWORD *)(v5 + 24);
        }
        *(_QWORD *)(v5 + 24) = _swiftEmptyArrayStorage;
        swift_release(v5);
        swift_bridgeObjectRelease(v20);
      }
      else
      {
        swift_release(v5);
      }
    }
  }
}

void sub_100691548()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  id v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  const char *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  void (*v16)(__n128);
  __n128 v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  unint64_t v22;
  id v23;
  uint64_t v24;
  id v25;
  const char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  void (*v35)(__n128);
  __n128 v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  __n128 v41;
  __n128 v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  __n128 v53;
  __n128 v54;
  uint64_t v55;
  _BYTE v56[24];
  _BYTE v57[24];
  uint64_t v58;
  uint64_t v59;

  v1 = v0;
  v2 = 0xD000000000000012;
  *(_BYTE *)(v0 + 48) = (*(_BYTE *)(v0 + 48) & 1) == 0;
  v3 = objc_msgSend(*(id *)(*(_QWORD *)(v0 + 32) + 16), "state");
  v4 = *(_QWORD *)(v0 + 32);
  if (v3)
  {
    v5 = *(id *)(v4 + 16);
    objc_msgSend(v5, "setReversed:", objc_msgSend(v5, "isReversed") ^ 1);

    v6 = 0xD000000000000013;
    v7 = "Position: reversing";
LABEL_14:
    v22 = (unint64_t)(v7 - 32) | 0x8000000000000000;
    goto LABEL_15;
  }
  if (*(_BYTE *)(v4 + 72) != 1)
  {
    v6 = 0xD000000000000023;
    v7 = "Position: inactive but not complete";
    goto LABEL_14;
  }
  v8 = *(_QWORD *)(v0 + 16);
  v9 = __OFSUB__(v8, 1);
  v10 = v8 - 1;
  if (v9)
  {
    __break(1u);
    goto LABEL_36;
  }
  *(_QWORD *)(v0 + 16) = v10;
  if (v10 == 2)
  {
    v11 = (uint64_t *)(v0 + 24);
    swift_beginAccess(v0 + 24, v56, 1, 0);
    v12 = *(_QWORD *)(v0 + 24);
    v13 = *(_QWORD *)(v12 + 16);
    if (v13)
    {
      swift_bridgeObjectRetain();
      v14 = (_QWORD *)(v12 + 40);
      do
      {
        v16 = (void (*)(__n128))*(v14 - 1);
        v15 = *v14;
        v17 = swift_retain(*v14);
        v16(v17);
        swift_release(v15);
        v14 += 2;
        --v13;
      }
      while (v13);
      swift_bridgeObjectRelease(v12);
      v12 = *v11;
      v2 = 0xD000000000000012;
    }
    *v11 = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRelease(v12);
  }
  v18 = *(_BYTE *)(v1 + 48);
  v19 = *(_QWORD *)(v1 + 32);
  v20 = swift_allocObject(&unk_1010D6380, 24, 7);
  swift_weakInit(v20 + 16, v1);
  swift_retain(v19);
  swift_retain(v20);
  if ((v18 & 1) != 0)
  {
    sub_100690E9C((uint64_t)sub_100693200, v20);
    v21 = swift_release(v19);
    swift_release_n(v20, 2, v21);
    v6 = 0xD00000000000001BLL;
    v7 = "Position: starting reversed";
    goto LABEL_14;
  }
  sub_100690D50((uint64_t)sub_1006931E0, v20);
  v41 = swift_release(v19);
  swift_release_n(v20, 2, v41);
  v22 = 0x8000000100E422C0;
  v6 = 0xD000000000000012;
LABEL_15:
  v23 = objc_msgSend(*(id *)(*(_QWORD *)(v1 + 40) + 16), "state");
  v24 = *(_QWORD *)(v1 + 40);
  if (!v23)
  {
    if (*(_BYTE *)(v24 + 72) != 1)
    {
      v2 = 0xD000000000000022;
      v26 = "Opacity: inactive but not complete";
      goto LABEL_30;
    }
    v27 = *(_QWORD *)(v1 + 16);
    v9 = __OFSUB__(v27, 1);
    v28 = v27 - 1;
    if (!v9)
    {
      *(_QWORD *)(v1 + 16) = v28;
      if (v28 == 2)
      {
        v29 = (uint64_t *)(v1 + 24);
        swift_beginAccess(v1 + 24, v57, 1, 0);
        v30 = *(_QWORD *)(v1 + 24);
        v31 = *(_QWORD *)(v30 + 16);
        if (v31)
        {
          v32 = v22;
          swift_bridgeObjectRetain();
          v33 = (_QWORD *)(v30 + 40);
          do
          {
            v35 = (void (*)(__n128))*(v33 - 1);
            v34 = *v33;
            v36 = swift_retain(*v33);
            v35(v36);
            swift_release(v34);
            v33 += 2;
            --v31;
          }
          while (v31);
          swift_bridgeObjectRelease(v30);
          v30 = *v29;
          v22 = v32;
        }
        *v29 = (uint64_t)_swiftEmptyArrayStorage;
        swift_bridgeObjectRelease(v30);
      }
      v37 = *(_BYTE *)(v1 + 48);
      v38 = *(_QWORD *)(v1 + 40);
      v39 = swift_allocObject(&unk_1010D6380, 24, 7);
      swift_weakInit(v39 + 16, v1);
      swift_retain(v38);
      swift_retain(v39);
      if ((v37 & 1) != 0)
      {
        sub_100690E9C((uint64_t)sub_1006931C0, v39);
        v40 = swift_release(v38);
        swift_release_n(v39, 2, v40);
        v2 = 0xD00000000000001ALL;
        v26 = "Opacity: starting reversed";
      }
      else
      {
        sub_100690D50((uint64_t)sub_1006931A0, v39);
        v42 = swift_release(v38);
        swift_release_n(v39, 2, v42);
        v2 = 0xD000000000000011;
        v26 = "Opacity: starting";
      }
      goto LABEL_30;
    }
LABEL_36:
    __break(1u);
    return;
  }
  v25 = *(id *)(v24 + 16);
  objc_msgSend(v25, "setReversed:", objc_msgSend(v25, "isReversed") ^ 1);

  v26 = "Opacity: reversing";
LABEL_30:
  v43 = (unint64_t)(v26 - 32) | 0x8000000000000000;
  if (qword_10119C5E8 != -1)
    swift_once(&qword_10119C5E8, sub_100690700);
  v44 = type metadata accessor for Logger(0);
  sub_100048B14(v44, (uint64_t)qword_10124D6D0);
  swift_retain_n(v1, 2);
  swift_bridgeObjectRetain();
  v45 = swift_bridgeObjectRetain();
  v46 = Logger.logObject.getter(v45);
  v47 = static os_log_type_t.default.getter(v46);
  if (os_log_type_enabled(v46, v47))
  {
    v48 = swift_slowAlloc(32, -1);
    v55 = v2;
    v49 = swift_slowAlloc(96, -1);
    v59 = v49;
    *(_DWORD *)v48 = 136446722;
    swift_retain(v1);
    v50 = sub_10069101C();
    v52 = v51;
    swift_release(v1);
    v58 = sub_100322200(v50, v52, &v59);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v58, &v59);
    swift_release_n(v1, 2, v53);
    swift_bridgeObjectRelease(v52);
    *(_WORD *)(v48 + 12) = 2082;
    swift_bridgeObjectRetain();
    v58 = sub_100322200(v6, v22, &v59);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v58, &v59);
    swift_bridgeObjectRelease_n(v22, 3);
    *(_WORD *)(v48 + 22) = 2082;
    swift_bridgeObjectRetain();
    v58 = sub_100322200(v55, v43, &v59);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v58, &v59);
    swift_bridgeObjectRelease_n(v43, 3);
    _os_log_impl((void *)&_mh_execute_header, v46, v47, "%{public}s %{public}s %{public}s", (uint8_t *)v48, 0x20u);
    swift_arrayDestroy(v49, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v49, -1, -1);
    swift_slowDealloc(v48, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v43, 2);
    v54 = swift_bridgeObjectRelease_n(v22, 2);
    swift_release_n(v1, 2, v54);
  }
}

void sub_100691B4C(uint64_t a1, const char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  __n128 v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  void (*v26)(__n128);
  __n128 v27;
  _BYTE v28[24];
  uint64_t Strong;
  uint64_t v30;
  uint64_t v31[3];

  v4 = a1 + 16;
  if (qword_10119C5E8 != -1)
    swift_once(&qword_10119C5E8, sub_100690700);
  v5 = type metadata accessor for Logger(0);
  sub_100048B14(v5, (uint64_t)qword_10124D6D0);
  v6 = swift_retain_n(a1, 2);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v31[0] = v10;
    *(_DWORD *)v9 = 136446210;
    swift_beginAccess(v4, v28, 0, 0);
    Strong = swift_weakLoadStrong(v4);
    v11 = sub_100007E8C(&qword_1011BCC30);
    v12 = String.init<A>(describing:)(&Strong, v11);
    v14 = v13;
    Strong = sub_100322200(v12, v13, v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&Strong, &v30);
    swift_release_n(a1, 2, v15);
    swift_bridgeObjectRelease(v14);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, a2, v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);

  }
  else
  {

    swift_release_n(a1, 2, v16);
  }
  swift_beginAccess(v4, v31, 0, 0);
  v17 = swift_weakLoadStrong(v4);
  if (v17)
  {
    v18 = v17;
    v19 = *(_QWORD *)(v17 + 16);
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
    {
      __break(1u);
    }
    else
    {
      *(_QWORD *)(v17 + 16) = v21;
      if (v21 == 2)
      {
        swift_beginAccess(v17 + 24, &Strong, 1, 0);
        v22 = *(_QWORD *)(v18 + 24);
        v23 = *(_QWORD *)(v22 + 16);
        if (v23)
        {
          swift_bridgeObjectRetain();
          v24 = (_QWORD *)(v22 + 40);
          do
          {
            v26 = (void (*)(__n128))*(v24 - 1);
            v25 = *v24;
            v27 = swift_retain(*v24);
            v26(v27);
            swift_release(v25);
            v24 += 2;
            --v23;
          }
          while (v23);
          swift_bridgeObjectRelease(v22);
          v22 = *(_QWORD *)(v18 + 24);
        }
        *(_QWORD *)(v18 + 24) = _swiftEmptyArrayStorage;
        swift_release(v18);
        swift_bridgeObjectRelease(v22);
      }
      else
      {
        swift_release(v17);
      }
    }
  }
}

uint64_t sub_100691DEC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_1005F0EB8(*(_QWORD *)(v0 + 56), *(void **)(v0 + 64), *(void **)(v0 + 72), *(void **)(v0 + 80), *(void **)(v0 + 88), *(void **)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112));
  return swift_deallocClassInstance(v0, 120, 7);
}

uint64_t _s13AnimationDataCMa_0()
{
  return objc_opt_self(_TtCC5Music24NowPlayingViewController13AnimationData);
}

uint64_t _s13AnimationDataC19AnimationDescriptorCMa()
{
  return objc_opt_self(_TtCCC5Music24NowPlayingViewController13AnimationData19AnimationDescriptor);
}

uint64_t sub_100691E74()
{
  return sub_10069101C();
}

uint64_t sub_100691E94(char *a1, char *a2)
{
  return sub_1005D09FC(*a1, *a2);
}

Swift::Int sub_100691EA0()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5, 0);
  if (v1)
    v2 = 0x657370616C6C6F63;
  else
    v2 = 0x72616C75676572;
  if (v1)
    v3 = 0xE900000000000064;
  else
    v3 = 0xE700000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_100691F24(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0x657370616C6C6F63;
  else
    v2 = 0x72616C75676572;
  if (*v1)
    v3 = 0xE900000000000064;
  else
    v3 = 0xE700000000000000;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_100691F84(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD v6[9];

  v2 = *v1;
  Hasher.init(_seed:)(v6, a1);
  if (v2)
    v3 = 0x657370616C6C6F63;
  else
    v3 = 0x72616C75676572;
  if (v2)
    v4 = 0xE900000000000064;
  else
    v4 = 0xE700000000000000;
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

uint64_t sub_100692004@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010AD108, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

void sub_100692060(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x72616C75676572;
  if (*v1)
    v2 = 0x657370616C6C6F63;
  v3 = 0xE700000000000000;
  if (*v1)
    v3 = 0xE900000000000064;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1006920A4()
{
  uint64_t v0;
  Swift::String v1;
  Swift::String v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  Swift::String v6;
  uint64_t v8;
  _QWORD v9[2];

  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(32);
  v1._object = (void *)0x8000000100E421C0;
  v1._countAndFlagsBits = 0xD000000000000015;
  String.append(_:)(v1);
  v8 = v0;
  _print_unlocked<A, B>(_:_:)(&v8, v9, &type metadata for UnsafeMutableRawPointer, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v2._countAndFlagsBits = 0x3D646E696B20;
  v2._object = (void *)0xE600000000000000;
  String.append(_:)(v2);
  if (*(_BYTE *)(v0 + 16))
    v3 = 0x657370616C6C6F63;
  else
    v3 = 0x72616C75676572;
  if (*(_BYTE *)(v0 + 16))
    v4 = 0xE900000000000064;
  else
    v4 = 0xE700000000000000;
  v5 = v4;
  String.append(_:)(*(Swift::String *)&v3);
  swift_bridgeObjectRelease(v4);
  v6._countAndFlagsBits = 62;
  v6._object = (void *)0xE100000000000000;
  String.append(_:)(v6);
  return v9[0];
}

uint64_t sub_1006921A8(char a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7)
{
  uint64_t v7;
  char v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void *v30;
  id v32;
  id v33;
  void **aBlock;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t);
  void *v37;
  double (*v38)(uint64_t);
  uint64_t v39;

  *(_WORD *)(v7 + 72) = 0;
  v14 = a1 & 1;
  v15 = _s13AnimationDataC7ContextCMa();
  *(_QWORD *)(v7 + 80) = swift_allocObject(v15, 16, 7);
  *(_QWORD *)(v7 + 88) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v7 + 96) = 0;
  *(_BYTE *)(v7 + 16) = v14;
  *(_QWORD *)(v7 + 24) = a2;
  *(_QWORD *)(v7 + 32) = a3;
  *(_QWORD *)(v7 + 40) = a4;
  *(_QWORD *)(v7 + 48) = a5;
  *(_QWORD *)(v7 + 56) = a6;
  *(_QWORD *)(v7 + 64) = a7;
  v16 = swift_allocObject(&unk_1010D67B8, 24, 7);
  swift_weakInit(v16 + 16, v7);
  v38 = sub_100693494;
  v39 = v16;
  aBlock = _NSConcreteStackBlock;
  v35 = 1107296256;
  v36 = sub_10012F6FC;
  v37 = &unk_1010D67D0;
  v17 = _Block_copy(&aBlock);
  v18 = v39;
  v33 = a2;
  v32 = a3;
  v19 = a4;
  v20 = a5;
  v21 = a6;
  v22 = a7;
  objc_msgSend(v32, "addCompletion:", v17, swift_release(v18).n128_f64[0]);
  _Block_release(v17);
  v23 = swift_allocObject(&unk_1010D67B8, 24, 7);
  swift_weakInit(v23 + 16, v7);
  v38 = sub_1006934B4;
  v39 = v23;
  aBlock = _NSConcreteStackBlock;
  v35 = 1107296256;
  v36 = sub_10012F6FC;
  v37 = &unk_1010D67F8;
  v24 = _Block_copy(&aBlock);
  objc_msgSend(v19, "addCompletion:", v24, swift_release(v39).n128_f64[0]);
  _Block_release(v24);
  v25 = swift_allocObject(&unk_1010D67B8, 24, 7);
  swift_weakInit(v25 + 16, v7);
  v38 = sub_1006934D4;
  v39 = v25;
  aBlock = _NSConcreteStackBlock;
  v35 = 1107296256;
  v36 = sub_10012F6FC;
  v37 = &unk_1010D6820;
  v26 = _Block_copy(&aBlock);
  objc_msgSend(v20, "addCompletion:", v26, swift_release(v39).n128_f64[0]);
  _Block_release(v26);
  v27 = swift_allocObject(&unk_1010D67B8, 24, 7);
  swift_weakInit(v27 + 16, v7);
  v38 = sub_1006934F4;
  v39 = v27;
  aBlock = _NSConcreteStackBlock;
  v35 = 1107296256;
  v36 = sub_10012F6FC;
  v37 = &unk_1010D6848;
  v28 = _Block_copy(&aBlock);
  objc_msgSend(v21, "addCompletion:", v28, swift_release(v39).n128_f64[0]);
  _Block_release(v28);
  v29 = swift_allocObject(&unk_1010D67B8, 24, 7);
  swift_weakInit(v29 + 16, v7);
  v38 = sub_100693514;
  v39 = v29;
  aBlock = _NSConcreteStackBlock;
  v35 = 1107296256;
  v36 = sub_10012F6FC;
  v37 = &unk_1010D6870;
  v30 = _Block_copy(&aBlock);
  objc_msgSend(v22, "addCompletion:", v30, swift_release(v39).n128_f64[0]);

  _Block_release(v30);
  return v7;
}

double sub_1006924EC(uint64_t a1, uint64_t a2, const char *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  __n128 v16;
  __n128 v17;
  uint64_t v18;
  double result;
  uint64_t v20;
  uint64_t Strong;
  _BYTE v22[24];
  uint64_t v23[3];

  v5 = a2 + 16;
  if (qword_10119C5F0 != -1)
    swift_once(&qword_10119C5F0, sub_100690724);
  v6 = type metadata accessor for Logger(0);
  sub_100048B14(v6, (uint64_t)qword_10124D6E8);
  v7 = swift_retain_n(a2, 2);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    v23[0] = v11;
    *(_DWORD *)v10 = 136446210;
    swift_beginAccess(v5, v22, 0, 0);
    Strong = swift_weakLoadStrong(v5);
    v12 = sub_100007E8C(&qword_1011C2928);
    v13 = String.init<A>(describing:)(&Strong, v12);
    v15 = v14;
    Strong = sub_100322200(v13, v14, v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&Strong, v22);
    swift_release_n(a2, 2, v16);
    swift_bridgeObjectRelease(v15);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, a3, v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

  }
  else
  {

    swift_release_n(a2, 2, v17);
  }
  swift_beginAccess(v5, v23, 0, 0);
  v18 = swift_weakLoadStrong(v5);
  if (v18)
  {
    v20 = v18;
    sub_1006926F4();
    *(_QWORD *)&result = swift_release(v20).n128_u64[0];
  }
  return result;
}

void sub_1006926F4()
{
  uint64_t v0;
  uint64_t v1;
  BOOL v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  _BYTE v11[24];

  v1 = *(_QWORD *)(v0 + 96);
  v2 = __OFADD__(v1, 1);
  v3 = v1 + 1;
  if (v2)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v0 + 96) = v3;
    if (v3 == 5)
    {
      v4 = (uint64_t *)(v0 + 88);
      swift_beginAccess(v0 + 88, v11, 1, 0);
      v5 = *(_QWORD *)(v0 + 88);
      v6 = *(_QWORD *)(v5 + 16);
      if (v6)
      {
        swift_bridgeObjectRetain(*(_QWORD *)(v0 + 88));
        v7 = (_QWORD *)(v5 + 40);
        do
        {
          v9 = (void (*)(uint64_t))*(v7 - 1);
          v8 = *v7;
          v10 = swift_retain(*v7);
          v9(v10);
          swift_release(v8);
          v7 += 2;
          --v6;
        }
        while (v6);
        swift_bridgeObjectRelease(v5);
        v5 = *v4;
      }
      *v4 = (uint64_t)_swiftEmptyArrayStorage;
      swift_bridgeObjectRelease(v5);
    }
  }
}

uint64_t sub_1006927B4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 80));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 88));
  return v0;
}

uint64_t sub_100692808()
{
  uint64_t v0;

  sub_1006927B4();
  return swift_deallocClassInstance(v0, 104, 7);
}

uint64_t _s13AnimationDataCMa()
{
  return objc_opt_self(_TtCC5Music32NowPlayingControlsViewController13AnimationData);
}

uint64_t _s13AnimationDataC7ContextCMa()
{
  return objc_opt_self(_TtCCC5Music32NowPlayingControlsViewController13AnimationData7Context);
}

uint64_t _s13AnimationDataC4KindOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1006928B4 + 4 * byte_100EC9BC5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1006928E8 + 4 * byte_100EC9BC0[v4]))();
}

uint64_t sub_1006928E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1006928F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1006928F8);
  return result;
}

uint64_t sub_100692904(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10069290CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100692910(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100692918(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s13AnimationDataC4KindOMa()
{
  return &_s13AnimationDataC4KindON;
}

unint64_t sub_100692938()
{
  unint64_t result;

  result = qword_1011C2920;
  if (!qword_1011C2920)
  {
    result = swift_getWitnessTable(&unk_100EC9D50, &_s13AnimationDataC4KindON);
    atomic_store(result, (unint64_t *)&qword_1011C2920);
  }
  return result;
}

uint64_t sub_10069297C()
{
  return sub_1006920A4();
}

uint64_t sub_10069299C()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1006929C0()
{
  uint64_t v0;

  sub_1006912C0(v0, "%{public}s Position Animator Completion - init");
}

void sub_1006929E0()
{
  uint64_t v0;

  sub_1006912C0(v0, "%{public}s Opacity Animator Completion - init");
}

void sub_100692A00(uint64_t a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  char *v17;
  _QWORD v18[5];
  uint64_t v19;

  if (*(_QWORD *)(a3 + 80) == a2)
  {
    if (qword_10119C5F0 != -1)
      swift_once(&qword_10119C5F0, sub_100690724);
    v6 = type metadata accessor for Logger(0);
    v7 = sub_100048B14(v6, (uint64_t)qword_10124D6E8);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.default.getter(v8);
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "reverse path 1 - completion", v10, 2u);
      swift_slowDealloc(v10, -1, -1);
    }

    objc_msgSend(*(id *)(a3 + 24), "setAlpha:", 0.0);
    v11 = *(void **)&a4[OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerView];
    if (v11)
    {
      objc_msgSend(v11, "setAlpha:", 0.0);
      if (objc_msgSend(*(id *)(a3 + 48), "state") == (id)2)
        objc_msgSend(*(id *)(a3 + 48), "finishAnimationAtPosition:", 2);
      v12 = *(void **)(a3 + 48);
      v13 = swift_allocObject(&unk_1010D6718, 24, 7);
      *(_QWORD *)(v13 + 16) = a4;
      v18[4] = sub_10069343C;
      v19 = v13;
      v18[0] = _NSConcreteStackBlock;
      v18[1] = 1107296256;
      v18[2] = sub_1001DBD98;
      v18[3] = &unk_1010D6730;
      v14 = _Block_copy(v18);
      v15 = v19;
      v16 = v12;
      v17 = a4;
      objc_msgSend(v16, "addAnimations:", v14, swift_release(v15).n128_f64[0]);
      _Block_release(v14);

      objc_msgSend(*(id *)(a3 + 48), "startAnimation");
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_100692BFC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  double v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  _QWORD v20[5];
  uint64_t v21;

  if (*(_QWORD *)(a3 + 80) == a2)
  {
    if (qword_10119C5F0 != -1)
      swift_once(&qword_10119C5F0, sub_100690724);
    v6 = type metadata accessor for Logger(0);
    v7 = sub_100048B14(v6, (uint64_t)qword_10124D6E8);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.default.getter(v8);
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v10 = 67240192;
      LODWORD(v20[0]) = a4 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v20, (char *)v20 + 4);
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "reverse path 2 - secondPhaseStarted - completion isReversed=%{BOOL,public}d", v10, 8u);
      swift_slowDealloc(v10, -1, -1);
    }

    if (objc_msgSend(*(id *)(a3 + 40), "state") == (id)1)
    {
      v11 = Logger.logObject.getter(1);
      v12 = static os_log_type_t.default.getter(v11);
      if (os_log_type_enabled(v11, v12))
      {
        v13 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v13 = 0;
        _os_log_impl((void *)&_mh_execute_header, v11, v12, "reverse path 2 - secondPhaseStarted - completion stopping first phase", v13, 2u);
        swift_slowDealloc(v13, -1, -1);
      }

      objc_msgSend(*(id *)(a3 + 40), "stopAnimation:", 0);
      objc_msgSend(*(id *)(a3 + 40), "finishAnimationAtPosition:", 2);
    }
    v14 = 0.0;
    if ((a4 & 1) != 0)
      v14 = 1.0;
    objc_msgSend(*(id *)(a3 + 24), "setAlpha:", v14);
    v15 = *(void **)(a3 + 40);
    v16 = swift_allocObject(&unk_1010D6768, 25, 7);
    *(_QWORD *)(v16 + 16) = a3;
    *(_BYTE *)(v16 + 24) = a4 & 1;
    v20[4] = sub_1006932BC;
    v21 = v16;
    v20[0] = _NSConcreteStackBlock;
    v20[1] = 1107296256;
    v20[2] = sub_1001DBD98;
    v20[3] = &unk_1010D6780;
    v17 = _Block_copy(v20);
    v18 = v21;
    v19 = v15;
    swift_retain(a3);
    objc_msgSend(v19, "addAnimations:", v17, swift_release(v18).n128_f64[0]);
    _Block_release(v17);

    objc_msgSend(*(id *)(a3 + 40), "startAnimation");
  }
}

void sub_100692E9C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  _BYTE v14[24];

  if (a3[10] == a2)
  {
    v4 = a3[12];
    v5 = __OFADD__(v4, 1);
    v6 = v4 + 1;
    if (v5)
    {
      __break(1u);
    }
    else
    {
      a3[12] = v6;
      if (v6 == 5)
      {
        v7 = a3 + 11;
        swift_beginAccess(a3 + 11, v14, 1, 0);
        v8 = a3[11];
        v9 = *(_QWORD *)(v8 + 16);
        if (v9)
        {
          swift_bridgeObjectRetain(a3[11]);
          v10 = (_QWORD *)(v8 + 40);
          do
          {
            v12 = (void (*)(uint64_t))*(v10 - 1);
            v11 = *v10;
            v13 = swift_retain(*v10);
            v12(v13);
            swift_release(v11);
            v10 += 2;
            --v9;
          }
          while (v9);
          swift_bridgeObjectRelease(v8);
          v8 = *v7;
        }
        *v7 = (uint64_t)_swiftEmptyArrayStorage;
        swift_bridgeObjectRelease(v8);
      }
    }
  }
}

uint64_t sub_100692F6C(uint64_t result, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  __n128 v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;

  if (*(_QWORD *)(a2 + 80) == result)
  {
    if (qword_10119C5F0 != -1)
      swift_once(&qword_10119C5F0, sub_100690724);
    v5 = type metadata accessor for Logger(0);
    sub_100048B14(v5, (uint64_t)qword_10124D6E8);
    v6 = swift_retain_n(a2, 2);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.default.getter(v7);
    if (os_log_type_enabled(v7, v8))
    {
      v18 = a3;
      v9 = (uint8_t *)swift_slowAlloc(12, -1);
      v10 = swift_slowAlloc(32, -1);
      v20 = v10;
      *(_DWORD *)v9 = 136315138;
      swift_retain(a2);
      v11 = sub_1006920A4();
      v13 = v12;
      swift_release(a2);
      v19 = sub_100322200(v11, v13, &v20);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20);
      swift_release_n(a2, 2, v14);
      swift_bridgeObjectRelease(v13);
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "reverse %s completion", v9, 0xCu);
      swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v10, -1, -1);
      swift_slowDealloc(v9, -1, -1);

      return v18(v15);
    }
    else
    {

      v17 = swift_release_n(a2, 2, v16);
      return a3(v17);
    }
  }
  return result;
}

uint64_t sub_100693158(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100693168(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100693174()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  v1 = *(uint64_t (**)(void))(v0 + 24);
  *(_BYTE *)(*(_QWORD *)(v0 + 16) + 72) = 1;
  return v1();
}

void sub_1006931A0()
{
  uint64_t v0;

  sub_100691B4C(v0, "%{public}s Opacity Animator Completion - reverse() - isReverse=false");
}

void sub_1006931C0()
{
  uint64_t v0;

  sub_100691B4C(v0, "%{public}s Opacity Animator Completion - reverse() - isReverse=true");
}

void sub_1006931E0()
{
  uint64_t v0;

  sub_100691B4C(v0, "%{public}s Position Animator Completion - reverse() - isReverse=false");
}

void sub_100693200()
{
  uint64_t v0;

  sub_100691B4C(v0, "%{public}s Position Animator Completion - reverse() - isReverse=true");
}

unint64_t sub_100693220()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011AAD90;
  if (!qword_1011AAD90)
  {
    v1 = objc_opt_self(CADisplayLink);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1011AAD90);
  }
  return result;
}

uint64_t sub_10069325C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

void sub_100693280(uint64_t a1)
{
  uint64_t v1;

  sub_100690AEC(a1, v1);
}

uint64_t sub_100693288()
{
  return sub_1006933B8(32);
}

void sub_100693290(uint64_t a1)
{
  uint64_t v1;

  sub_100692E9C(a1, *(_QWORD *)(v1 + 16), *(_QWORD **)(v1 + 24));
}

uint64_t sub_100693298()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

uint64_t sub_1006932C0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1006932E4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100693308()
{
  uint64_t v0;

  sub_10012AA0C(*(void **)(v0 + 16));
}

uint64_t sub_100693310()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100693344()
{
  uint64_t v0;

  return sub_100692F6C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(uint64_t (**)(uint64_t))(v0 + 32));
}

uint64_t sub_100693350()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

id sub_100693374()
{
  uint64_t v0;
  id result;
  double v2;

  result = *(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerView);
  if (result)
  {
    v2 = 0.0;
    if (*(_BYTE *)(v0 + 24))
      v2 = 1.0;
    return objc_msgSend(result, "setAlpha:", v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1006933B0()
{
  return sub_1006933B8(33);
}

uint64_t sub_1006933B8(uint64_t a1)
{
  uint64_t v1;

  swift_release(*(_QWORD *)(v1 + 16));
  swift_release(*(_QWORD *)(v1 + 24));
  return swift_deallocObject(v1, a1, 7);
}

void sub_1006933F0(uint64_t a1)
{
  uint64_t v1;

  sub_100692BFC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32));
}

uint64_t sub_1006933FC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

void sub_100693430(uint64_t a1)
{
  uint64_t v1;

  sub_100692A00(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(char **)(v1 + 32));
}

id sub_100693440()
{
  uint64_t v0;
  id result;

  result = *(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerView);
  if (result)
    return objc_msgSend(result, "setAlpha:", 1.0);
  __break(1u);
  return result;
}

id sub_10069346C()
{
  uint64_t v0;
  double v1;

  v1 = 1.0;
  if (*(_BYTE *)(v0 + 24))
    v1 = 0.0;
  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + 24), "setAlpha:", v1);
}

double sub_100693494(uint64_t a1)
{
  uint64_t v1;

  return sub_1006924EC(a1, v1, "%{public}s position completion");
}

double sub_1006934B4(uint64_t a1)
{
  uint64_t v1;

  return sub_1006924EC(a1, v1, "%{public}s first phase completion");
}

double sub_1006934D4(uint64_t a1)
{
  uint64_t v1;

  return sub_1006924EC(a1, v1, "%{public}s second phase completion");
}

double sub_1006934F4(uint64_t a1)
{
  uint64_t v1;

  return sub_1006924EC(a1, v1, "%{public}s artwork completion");
}

double sub_100693514(uint64_t a1)
{
  uint64_t v1;

  return sub_1006924EC(a1, v1, "%{public}s layout completion");
}

double sub_1006935C0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  int *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  double result;
  _QWORD v27[2];
  char v28;
  __int128 v29;
  char v30;
  uint64_t v31;

  v2 = type metadata accessor for Library.Context(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v27[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (_QWORD *)((char *)&v27[-1] - v6);
  *(_QWORD *)a1 = sub_100693998;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 0;
  v8 = (int *)_s8MainViewVMa(0);
  Library.Context.init()(v7);
  sub_10005B704((uint64_t)v7, (uint64_t)v4, type metadata accessor for Library.Context);
  State.init(wrappedValue:)(v4, v2);
  sub_10005B748((uint64_t)v7, type metadata accessor for Library.Context);
  v9 = (_QWORD *)(a1 + v8[6]);
  v27[0] = sub_100042760((uint64_t)_swiftEmptyArrayStorage);
  v10 = sub_100007E8C(&qword_1011C2930);
  State.init(wrappedValue:)(v27, v10);
  v11 = *((_QWORD *)&v29 + 1);
  *v9 = v29;
  v9[1] = v11;
  v12 = a1 + v8[7];
  *(_QWORD *)v12 = sub_1003E228C;
  *(_QWORD *)(v12 + 8) = 0;
  *(_BYTE *)(v12 + 16) = 0;
  v13 = (_QWORD *)(a1 + v8[8]);
  v14 = type metadata accessor for TabSelectionManager(0);
  v15 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
  *v13 = EnvironmentObject.init()(v14, v15);
  v13[1] = v16;
  v17 = (_QWORD *)(a1 + v8[9]);
  v18 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v19 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *v17 = EnvironmentObject.init()(v18, v19);
  v17[1] = v20;
  v21 = a1 + v8[10];
  v27[0] = 0;
  v27[1] = 0;
  v28 = 1;
  v22 = sub_100007E8C(&qword_1011B2580);
  State.init(wrappedValue:)(v27, v22);
  v23 = v30;
  v24 = v31;
  result = *(double *)&v29;
  *(_OWORD *)v21 = v29;
  *(_BYTE *)(v21 + 16) = v23;
  *(_QWORD *)(v21 + 24) = v24;
  return result;
}

void sub_1006937D0(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  sub_100007E8C((uint64_t *)&unk_1011D11C0);
  KeyPath = swift_getKeyPath(&unk_100EC9F90);
  v5 = swift_getKeyPath(&unk_100EC9FC8);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release();
  swift_release();
  *a2 = v6;
}

uint64_t sub_10069386C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  sub_100007E8C((uint64_t *)&unk_1011D11C0);
  KeyPath = swift_getKeyPath(&unk_100EC9F90);
  v5 = swift_getKeyPath(&unk_100EC9FC8);
  v7 = v2;
  swift_bridgeObjectRetain();
  swift_retain();
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

_QWORD *sub_100693904@<X0>(_BYTE *a1@<X8>)
{
  unint64_t v2;
  _QWORD *result;
  uint64_t v4;

  v2 = sub_10069D5DC();
  result = EnvironmentValues.subscript.getter(&v4, &_s17SidebarVisibilityVN, &_s17SidebarVisibilityVN, v2);
  *a1 = v4;
  return result;
}

uint64_t sub_100693950(char *a1)
{
  unint64_t v1;
  char v3;

  v3 = *a1;
  v1 = sub_10069D5DC();
  return EnvironmentValues.subscript.setter(&v3, &_s17SidebarVisibilityVN, &_s17SidebarVisibilityVN, v1);
}

uint64_t sub_100693998()
{
  uint64_t v0;

  v0 = type metadata accessor for MenuDataSource(0);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  return sub_100830BDC();
}

uint64_t _s8MainViewVMa(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011C2998, (uint64_t)&_s8MainViewVMn);
}

uint64_t sub_1006939E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t KeyPath;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t OpaqueTypeConformance2;
  unint64_t v54;
  unint64_t v55;
  char *v56;
  unint64_t v57;
  uint64_t v58;
  __n128 v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t (**v73)();
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t result;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char v141[8];
  uint64_t v142;
  char v143[8];
  uint64_t v144;
  unint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  unint64_t v149;

  v2 = v1;
  v134 = a1;
  v3 = type metadata accessor for Library.Context(0);
  __chkstk_darwin(v3);
  v133 = (uint64_t *)((char *)&v105 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v138 = _s8MainViewVMa(0);
  v5 = *(_QWORD *)(v138 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v138);
  v135 = sub_100007E8C(&qword_1011C2A70);
  v113 = *(_QWORD *)(v135 - 8);
  __chkstk_darwin(v135);
  v8 = (char *)&v105 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = sub_100007E8C(&qword_1011C2A78);
  v116 = *(_QWORD *)(v115 - 8);
  __chkstk_darwin(v115);
  v109 = (char *)&v105 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = sub_100007E8C(&qword_1011C2A80);
  v117 = *(_QWORD *)(v119 - 8);
  __chkstk_darwin(v119);
  v136 = (char *)&v105 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = sub_100007E8C(&qword_1011C2A88);
  v121 = *(_QWORD *)(v122 - 8);
  __chkstk_darwin(v122);
  v120 = (char *)&v105 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = sub_100007E8C(&qword_1011C2A90);
  __chkstk_darwin(v118);
  v123 = (char *)&v105 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = sub_100007E8C(&qword_1011C2A98);
  __chkstk_darwin(v124);
  v126 = (uint64_t)&v105 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = sub_100007E8C(&qword_1011C2AA0);
  __chkstk_darwin(v125);
  v128 = (uint64_t)&v105 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = sub_100007E8C(&qword_1011C2AA8);
  __chkstk_darwin(v127);
  v129 = (uint64_t)&v105 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = sub_100007E8C(&qword_1011C2AB0);
  __chkstk_darwin(v131);
  v132 = (uint64_t)&v105 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C(&qword_1011C2AB8);
  __chkstk_darwin(v17);
  v130 = (char *)&v105 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = v1;
  v142 = v1;
  v19 = sub_100007E8C(&qword_1011C2AC0);
  v20 = sub_100007E8C(&qword_1011C2AC8);
  v21 = sub_10069CB48();
  v22 = sub_10069CC68();
  NavigationSplitView.init<>(sidebar:detail:)(sub_10069CB38, v143, sub_10069CB40, v141, v19, v20, v21, v22);
  v23 = *(_QWORD *)v1;
  v24 = *(_QWORD *)(v1 + 8);
  v25 = *(unsigned __int8 *)(v1 + 16);
  v26 = type metadata accessor for MenuDataSource(0);
  v27 = sub_100048748(&qword_1011C2B08, type metadata accessor for MenuDataSource, (uint64_t)&unk_100ED23B0);
  v114 = v26;
  v111 = v27;
  v28 = StateObject.wrappedValue.getter(v23, v24, v25, v26, v27);
  KeyPath = swift_getKeyPath(&unk_100EC9F48);
  v30 = swift_getKeyPath(&unk_100EC9F70);
  static Published.subscript.getter(&v145, v28, KeyPath, v30);
  swift_release();
  swift_release();
  swift_release();
  v108 = (uint64_t)&v105 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704(v2, v108, _s8MainViewVMa);
  v31 = *(unsigned __int8 *)(v5 + 80);
  v32 = (v31 + 16) & ~v31;
  v137 = v32 + v6;
  v33 = v31 | 7;
  v34 = swift_allocObject(&unk_1010D69C8, v32 + v6, v31 | 7);
  sub_10005B6C0((uint64_t)&v105 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v34 + v32, _s8MainViewVMa);
  v35 = sub_100007E8C(&qword_1011C2B10);
  v107 = v35;
  v36 = sub_100049F28(&qword_1011C2B18, &qword_1011C2A70, (uint64_t)&protocol conformance descriptor for NavigationSplitView<A, B, C>);
  v106 = v36;
  v105 = sub_1000E4570(&qword_1011C2B20, &qword_1011C2B10, (void (*)(void))sub_10069CD1C, (uint64_t)&protocol conformance descriptor for <A> A?);
  v37 = v135;
  View.onChange<A>(of:initial:_:)(&v145, 0, sub_10069CD10, v34, v135, v35, v36, v105);
  swift_release();
  sub_10069CD60(v145);
  (*(void (**)(char *, uint64_t))(v113 + 8))(v8, v37);
  v38 = v2 + *(int *)(v138 + 28);
  v39 = *(_QWORD *)v38;
  v40 = *(_QWORD *)(v38 + 8);
  v112 = v38;
  v41 = *(unsigned __int8 *)(v38 + 16);
  v42 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
  v43 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
  v113 = v42;
  v110 = v43;
  v44 = StateObject.wrappedValue.getter(v39, v40, v41, v42, v43);
  v45 = sub_100007E8C((uint64_t *)&unk_1011D11C0);
  v140 = v45;
  v46 = swift_getKeyPath(&unk_100EC9F90);
  v139 = v45;
  v47 = swift_getKeyPath(&unk_100EC9FC8);
  static Published.subscript.getter(&v145, v44, v46, v47);
  swift_release();
  swift_release();
  v48 = v32;
  v49 = v108;
  swift_release();
  v149 = v145;
  sub_10005B704(v2, v49, _s8MainViewVMa);
  v50 = (char *)v33;
  v51 = swift_allocObject(&unk_1010D69F0, v137, v33);
  v52 = v48;
  sub_10005B6C0(v49, v51 + v48, _s8MainViewVMa);
  v145 = v135;
  v146 = v107;
  v147 = v106;
  v148 = v105;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v145, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v54 = sub_10069D0F0();
  v55 = v115;
  v135 = OpaqueTypeConformance2;
  v56 = v109;
  View.onChange<A>(of:initial:_:)(&v149, 0, sub_10069D088, v51, v115, v45, OpaqueTypeConformance2, v54);
  v57 = v55;
  v58 = v2;
  swift_release();
  v59 = swift_bridgeObjectRelease();
  (*(void (**)(char *, unint64_t, __n128))(v116 + 8))(v56, v57, v59);
  v60 = (_QWORD *)(v2 + *(int *)(v138 + 32));
  if (*v60)
  {
    LOBYTE(v149) = *(_BYTE *)(*v60 + qword_10124D088);
    sub_10005B704(v2, v49, _s8MainViewVMa);
    v61 = v137;
    v62 = swift_allocObject(&unk_1010D6A18, v137, v50);
    sub_10005B6C0(v49, v62 + v52, _s8MainViewVMa);
    v145 = v57;
    v146 = v45;
    v147 = v135;
    v148 = v54;
    v63 = swift_getOpaqueTypeConformance2(&v145, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
    v64 = v120;
    v65 = v119;
    v66 = v136;
    View.onChange<A>(of:initial:_:)(&v149, 0, sub_10069D170, v62, v119, &type metadata for Bool, v63, &protocol witness table for Bool);
    v67 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v117 + 8))(v66, v65, v67);
    sub_10005B704(v58, v49, _s8MainViewVMa);
    v136 = v50;
    v68 = swift_allocObject(&unk_1010D6A40, v61, v50);
    v69 = v52;
    sub_10005B6C0(v49, v68 + v52, _s8MainViewVMa);
    v70 = v121;
    v71 = (uint64_t)v123;
    v72 = v122;
    (*(void (**)(char *, char *, uint64_t))(v121 + 16))(v123, v64, v122);
    v73 = (uint64_t (**)())(v71 + *(int *)(v118 + 36));
    *v73 = sub_10069D1C0;
    v73[1] = (uint64_t (*)())v68;
    v73[2] = 0;
    v73[3] = 0;
    (*(void (**)(char *, uint64_t))(v70 + 8))(v64, v72);
    v74 = StateObject.wrappedValue.getter(*(_QWORD *)v58, *(_QWORD *)(v58 + 8), *(unsigned __int8 *)(v58 + 16), v114, v111);
    v75 = swift_getKeyPath(&unk_100EC9F48);
    v76 = swift_getKeyPath(&unk_100EC9F70);
    static Published.subscript.getter(&v145, v74, v75, v76);
    swift_release();
    swift_release();
    swift_release();
    v77 = 0;
    v78 = 0;
    v79 = v145;
    if (v145 >> 60 != 15)
    {
      v77 = sub_10066DB90(v145);
      v78 = v80;
      sub_10069CD60(v79);
    }
    v81 = swift_getKeyPath(&unk_100EC9FE8);
    v82 = v126;
    sub_10004A160(v71, v126, &qword_1011C2A90);
    v83 = (uint64_t *)(v82 + *(int *)(v124 + 36));
    *v83 = v81;
    v83[1] = v77;
    v83[2] = v78;
    sub_10004FF60(v71, &qword_1011C2A90);
    sub_10005B704(v58, v49, _s8MainViewVMa);
    v84 = swift_allocObject(&unk_1010D6A68, v137, v136);
    sub_10005B6C0(v49, v84 + v69, _s8MainViewVMa);
    v85 = v128;
    sub_10004A160(v82, v128, &qword_1011C2A98);
    v86 = (_QWORD *)(v85 + *(int *)(v125 + 36));
    *v86 = 0;
    v86[1] = 0;
    v86[2] = sub_10069D1D8;
    v86[3] = v84;
    sub_10004FF60(v82, &qword_1011C2A98);
    v87 = v113;
    v88 = v110;
    v89 = StateObject.wrappedValue.getter(*(_QWORD *)v112, *(_QWORD *)(v112 + 8), *(unsigned __int8 *)(v112 + 16), v113, v110);
    v90 = static ObservableObject.environmentStore.getter(v87, v88);
    v91 = v129;
    sub_10004A160(v85, v129, &qword_1011C2AA0);
    v92 = (uint64_t *)(v91 + *(int *)(v127 + 36));
    *v92 = v90;
    v92[1] = v89;
    sub_10004FF60(v85, &qword_1011C2AA0);
    v93 = swift_getKeyPath(&unk_100ECA010);
    v94 = v132;
    sub_10004A160(v91, v132, &qword_1011C2AA8);
    v95 = v131;
    v96 = v94 + *(int *)(v131 + 36);
    *(_QWORD *)v96 = v93;
    *(_BYTE *)(v96 + 8) = 1;
    sub_10004FF60(v91, &qword_1011C2AA8);
    v97 = sub_100007E8C(&qword_1011C2938);
    v98 = v133;
    State.wrappedValue.getter(v133, v97);
    v99 = sub_10069D2B4();
    v100 = (uint64_t)v130;
    View.libraryContext(_:)((uint64_t)v98, v95, v99);
    sub_10005B748((uint64_t)v98, type metadata accessor for Library.Context);
    sub_10004FF60(v94, &qword_1011C2AB0);
    return sub_100065228(v100, v134, &qword_1011C2AB8);
  }
  else
  {
    v102 = v60[1];
    v103 = type metadata accessor for TabSelectionManager(0);
    v104 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
    result = EnvironmentObject.error()(0, v102, v103, v104);
    __break(1u);
  }
  return result;
}

uint64_t sub_100694650(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v27;

  v2 = sub_100007E8C(&qword_1011C2BB8);
  __chkstk_darwin(v2);
  v4 = (uint64_t *)((char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = _s8MenuViewVMa(0);
  __chkstk_darwin(v5);
  v7 = (uint64_t *)((char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_100007E8C(&qword_1011C2AE0);
  __chkstk_darwin(v8);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a1;
  v12 = a1[1];
  v13 = *((unsigned __int8 *)a1 + 16);
  v14 = type metadata accessor for MenuDataSource(0);
  v15 = sub_100048748(&qword_1011C2B08, type metadata accessor for MenuDataSource, (uint64_t)&unk_100ED23B0);
  v16 = StateObject.wrappedValue.getter(v11, v12, v13, v14, v15);
  _s8MainViewVMa(0);
  v17 = sub_100007E8C(&qword_1011C2938);
  State.projectedValue.getter(v4, v17);
  v18 = sub_100825990(v16, (uint64_t)v4, v7);
  static Color.black.getter(v18);
  v19 = Color.opacity(_:)(0.15);
  swift_release();
  LOBYTE(a1) = static Edge.Set.all.getter(v20);
  sub_10005B704((uint64_t)v7, (uint64_t)v10, _s8MenuViewVMa);
  v21 = &v10[*(int *)(v8 + 36)];
  *(_QWORD *)v21 = v19;
  v21[8] = (char)a1;
  sub_10005B748((uint64_t)v7, _s8MenuViewVMa);
  v22 = AccessibilityIdentifier.libraryMenuView.unsafeMutableAddressor();
  v23 = *v22;
  v24 = v22[1];
  v25 = sub_10069CBCC();
  swift_bridgeObjectRetain();
  View.accessibilityIdentifier(_:)(v23, v24, v8, v25);
  swift_bridgeObjectRelease();
  return sub_10004FF60((uint64_t)v10, &qword_1011C2AE0);
}

uint64_t sub_100694868@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;

  v4 = (uint64_t *)(a1 + *(int *)(_s8MainViewVMa(0) + 28));
  v5 = *v4;
  v6 = v4[1];
  v7 = *((unsigned __int8 *)v4 + 16);
  v8 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
  v9 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
  v10 = StateObject.projectedValue.getter(v5, v6, v7, v8, v9);
  KeyPath = swift_getKeyPath(&unk_100ECA090);
  ObservedObject.Wrapper.subscript.getter(&v25, KeyPath, v10, v9);
  swift_release();
  swift_release();
  v23 = v25;
  v24 = v26;
  v22 = a1;
  v12 = sub_100007E8C((uint64_t *)&unk_1011D11C0);
  v13 = sub_100007E8C(&qword_1011C2B80);
  v14 = sub_100049F28(&qword_1011B1040, (uint64_t *)&unk_1011D11C0, (uint64_t)&protocol conformance descriptor for [A]);
  v15 = sub_100049F28(&qword_1011B1048, (uint64_t *)&unk_1011D11C0, (uint64_t)&protocol conformance descriptor for [A]);
  v16 = sub_100049F28(&qword_1011B1050, (uint64_t *)&unk_1011D11C0, (uint64_t)&protocol conformance descriptor for [A]);
  v17 = sub_100049F28(&qword_1011C2B88, &qword_1011C2B80, (uint64_t)&protocol conformance descriptor for IDView<A, B>);
  v18 = sub_100048748(&qword_10119F610, type metadata accessor for NavigationDestinationItem, (uint64_t)&unk_100EA8A68);
  NavigationStack.init<>(path:root:)(&v23, sub_10069D65C, v21, v12, v13, v14, v15, v16, v17, v18);
  v19 = sub_100007E8C(&qword_1011C2AC8);
  return sub_100083D34(a2 + *(int *)(v19 + 36));
}

uint64_t sub_100694A4C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t KeyPath;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  char *v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t OpaqueTypeConformance2;
  uint64_t v70;
  uint64_t v71;
  __n128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  _QWORD *v108;
  unint64_t v109;
  unint64_t v110;

  v104 = a2;
  v3 = type metadata accessor for Playlist(0);
  v90 = *(_QWORD *)(v3 - 8);
  v91 = v3;
  __chkstk_darwin(v3);
  v89 = (uint64_t *)((char *)&v88 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = _s10DetailViewVMa(0);
  __chkstk_darwin(v5);
  v7 = (unint64_t *)((char *)&v88 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v106 = sub_100007E8C(&qword_1011C2B90);
  __chkstk_darwin(v106);
  v105 = (uint64_t)&v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011C2B98);
  v99 = *(_QWORD *)(v9 - 8);
  v100 = v9;
  __chkstk_darwin(v9);
  v98 = (char *)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011C2BA0);
  __chkstk_darwin(v11);
  v103 = (char *)&v88 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = sub_100007E8C(&qword_1011C2B80);
  __chkstk_darwin(v101);
  v102 = (uint64_t)&v88 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = a1;
  v14 = *a1;
  v15 = a1[1];
  v16 = *((unsigned __int8 *)a1 + 16);
  v17 = type metadata accessor for MenuDataSource(0);
  v95 = v17;
  v96 = sub_100048748(&qword_1011C2B08, type metadata accessor for MenuDataSource, (uint64_t)&unk_100ED23B0);
  v18 = StateObject.wrappedValue.getter(v14, v15, v16, v17, v96);
  KeyPath = swift_getKeyPath(&unk_100EC9F48);
  v20 = swift_getKeyPath(&unk_100EC9F70);
  static Published.subscript.getter(&v107, v18, KeyPath, v20);
  swift_release();
  swift_release();
  swift_release();
  v21 = v107;
  v22 = swift_getKeyPath(&unk_100ECA0B8);
  v23 = (uint64_t *)((char *)v7 + *(int *)(v5 + 20));
  *v23 = v22;
  v24 = sub_100007E8C(&qword_10119F030);
  swift_storeEnumTagMultiPayload(v23, v24, 0);
  *v7 = v21;
  v25 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v26 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  v27 = EnvironmentObject.init()(v25, v26);
  v93 = v28;
  v94 = v27;
  v29 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
  v30 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
  v31 = EnvironmentObject.init()(v29, v30);
  v92 = v32;
  v33 = sub_100007E8C(&qword_10119F038);
  v34 = sub_100049F28(&qword_10119F040, &qword_10119F038, (uint64_t)&unk_100EC0A50);
  v35 = EnvironmentObject.init()(v33, v34);
  v37 = v36;
  v38 = sub_100007E8C(&qword_10119F630);
  v39 = sub_100049F28(&qword_10119F638, &qword_10119F630, (uint64_t)&unk_100EC0A50);
  v40 = EnvironmentObject.init()(v38, v39);
  v42 = v41;
  v43 = type metadata accessor for TabSelectionManager(0);
  v44 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
  v45 = EnvironmentObject.init()(v43, v44);
  v47 = v46;
  v48 = v105;
  sub_10005B704((uint64_t)v7, v105, _s10DetailViewVMa);
  v49 = (uint64_t *)(v48 + *(int *)(v106 + 36));
  v50 = v93;
  *v49 = v94;
  v49[1] = v50;
  v49[2] = v31;
  v49[3] = v92;
  v49[4] = v35;
  v49[5] = v37;
  v49[6] = v40;
  v51 = v95;
  v52 = v96;
  v49[7] = v42;
  v49[8] = v45;
  v49[9] = v47;
  v53 = (uint64_t)v7;
  v54 = v97;
  sub_10005B748(v53, _s10DetailViewVMa);
  v55 = StateObject.wrappedValue.getter(*v54, v54[1], *((unsigned __int8 *)v54 + 16), v51, v52);
  v56 = swift_getKeyPath(&unk_100EC9F48);
  v57 = swift_getKeyPath(&unk_100EC9F70);
  static Published.subscript.getter(&v107, v55, v56, v57);
  swift_release();
  swift_release();
  swift_release();
  if (v107 >> 60 != 15)
  {
    if ((v107 & 0x8000000000000000) == 0)
    {
      Library.Menu.Identifier.name(for:)(2, v107);
      v60 = v59;
      goto LABEL_6;
    }
    sub_10069CD60(v107);
  }
  v58 = 0;
  v60 = 0xE000000000000000;
LABEL_6:
  v107 = v58;
  v108 = (_QWORD *)v60;
  v61 = sub_10069D680();
  v62 = sub_100055B68();
  v63 = v98;
  v64 = v105;
  v65 = v106;
  View.navigationTitle<A>(_:)(&v107, v106, &type metadata for String, v61, v62);
  swift_bridgeObjectRelease();
  sub_10004FF60(v64, &qword_1011C2B90);
  v66 = AccessibilityIdentifier.libraryContentView.unsafeMutableAddressor();
  v67 = *v66;
  v68 = v66[1];
  swift_bridgeObjectRetain();
  v107 = v65;
  v108 = &type metadata for String;
  v109 = v61;
  v110 = v62;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v107, &opaque type descriptor for <<opaque return type of View.navigationTitle<A>(_:)>>, 1);
  v70 = (uint64_t)v103;
  v71 = v100;
  View.accessibilityIdentifier(_:)(v67, v68, v100, OpaqueTypeConformance2);
  v72 = swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, __n128))(v99 + 8))(v63, v71, v72);
  v73 = StateObject.wrappedValue.getter(*v54, v54[1], *((unsigned __int8 *)v54 + 16), v51, v52);
  v74 = swift_getKeyPath(&unk_100EC9F48);
  v75 = swift_getKeyPath(&unk_100EC9F70);
  static Published.subscript.getter(&v107, v73, v74, v75);
  swift_release();
  swift_release();
  swift_release();
  v76 = v107;
  if (v107 >> 60 == 15)
  {
    v77 = 0;
    v78 = 0;
  }
  else
  {
    if ((v107 & 0x8000000000000000) == 0)
      __asm { BR              X11 }
    v79 = swift_getKeyPath(&unk_100ECA0E8);
    v80 = swift_getKeyPath(&unk_100ECA110);
    swift_retain();
    v81 = v89;
    static Published.subscript.getter(v89, v82, v79, v80);
    swift_release();
    swift_release();
    v77 = Playlist.id.getter(v83);
    v78 = v84;
    sub_10069CD60(v76);
    (*(void (**)(_QWORD *, uint64_t))(v90 + 8))(v81, v91);
    sub_10069CD60(v76);
  }
  v85 = v102;
  sub_10004A160(v70, v102, &qword_1011C2BA0);
  v86 = (uint64_t *)(v85 + *(int *)(v101 + 52));
  *v86 = v77;
  v86[1] = v78;
  sub_10004FF60(v70, &qword_1011C2BA0);
  return sub_100065228(v85, v104, &qword_1011C2B80);
}

double sub_100695234(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  char v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v34;
  double result;
  unint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;

  v3 = *a2;
  if ((unint64_t)*a2 >> 60 != 15)
  {
    v5 = *a1;
    v6 = _s8MainViewVMa(0);
    v7 = (uint64_t *)(a3 + *(int *)(v6 + 24));
    v8 = *v7;
    v9 = v7[1];
    v38 = (_QWORD *)*v7;
    v39 = v9;
    sub_10004A06C(v3);
    sub_10004A06C(v3);
    v10 = sub_100007E8C(&qword_1011C2B78);
    State.wrappedValue.getter(&v40, v10);
    v11 = v40;
    if (v40[2] && (v12 = sub_10079C5FC(v3), (v13 & 1) != 0))
    {
      v14 = *(_QWORD **)(v11[7] + 8 * v12);
      swift_bridgeObjectRetain();
    }
    else
    {
      v14 = _swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRelease();
    sub_10069CD60(v3);
    v40 = v14;
    if (v5 >> 60 == 15)
    {
      v15 = (uint64_t *)(a3 + *(int *)(v6 + 28));
      v16 = *v15;
      v17 = v15[1];
      v18 = *((unsigned __int8 *)v15 + 16);
      v19 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
      v20 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
      v21 = StateObject.wrappedValue.getter(v16, v17, v18, v19, v20);
      __chkstk_darwin(v21);
      sub_100007E8C((uint64_t *)&unk_1011D11C0);
      KeyPath = swift_getKeyPath(&unk_100EC9F90);
      __chkstk_darwin(KeyPath);
      v23 = swift_getKeyPath(&unk_100EC9FC8);
      static Published.subscript.getter(&v38, v21, KeyPath, v23);
      swift_release();
      swift_release();
      swift_release();
      sub_100807DA4((uint64_t)v38);
      v14 = v40;
    }
    v24 = (uint64_t *)(a3 + *(int *)(v6 + 28));
    v25 = *v24;
    v26 = v24[1];
    v27 = *((unsigned __int8 *)v24 + 16);
    v28 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
    v29 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
    v30 = StateObject.wrappedValue.getter(v25, v26, v27, v28, v29);
    __chkstk_darwin(v30);
    sub_100007E8C((uint64_t *)&unk_1011D11C0);
    v31 = swift_getKeyPath(&unk_100EC9F90);
    __chkstk_darwin(v31);
    v32 = swift_getKeyPath(&unk_100EC9FC8);
    v38 = v14;
    swift_bridgeObjectRetain();
    static Published.subscript.setter(&v38, v30, v31, v32);
    v38 = (_QWORD *)v8;
    v39 = v9;
    sub_10069D640(v3);
    swift_retain();
    swift_bridgeObjectRetain();
    State.wrappedValue.getter(&v37, v10);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v37);
    v34 = v37;
    v37 = 0x8000000000000000;
    v38 = (_QWORD *)v34;
    sub_1005EED74((uint64_t)v14, v3, isUniquelyReferenced_nonNull_native);
    v37 = (unint64_t)v38;
    swift_bridgeObjectRelease();
    sub_10069CD60(v3);
    v38 = (_QWORD *)v8;
    v39 = v9;
    v36 = v37;
    State.wrappedValue.setter(&v36, v10);
    sub_10069CD60(v3);
    swift_release();
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  return result;
}

double sub_1006955D8(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  double result;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;

  v4 = *a2;
  v5 = *a3;
  v6 = a3[1];
  v7 = *((unsigned __int8 *)a3 + 16);
  v8 = type metadata accessor for MenuDataSource(0);
  v9 = sub_100048748(&qword_1011C2B08, type metadata accessor for MenuDataSource, (uint64_t)&unk_100ED23B0);
  v10 = StateObject.wrappedValue.getter(v5, v6, v7, v8, v9);
  KeyPath = swift_getKeyPath(&unk_100EC9F48);
  v12 = swift_getKeyPath(&unk_100EC9F70);
  static Published.subscript.getter(&v21, v10, KeyPath, v12);
  swift_release();
  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  v14 = v21;
  if (v21 >> 60 != 15)
  {
    v15 = (unint64_t *)((char *)a3 + *(int *)(_s8MainViewVMa(0) + 24));
    v17 = v15[1];
    v21 = *v15;
    v16 = v21;
    v22 = v17;
    sub_10069D640(v14);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18 = sub_100007E8C(&qword_1011C2B78);
    State.wrappedValue.getter(&v23, v18);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v23);
    v21 = v23;
    v23 = 0x8000000000000000;
    sub_1005EED74(v4, v14, isUniquelyReferenced_nonNull_native);
    v23 = v21;
    swift_bridgeObjectRelease();
    sub_10069CD60(v14);
    v21 = v16;
    v22 = v17;
    v20 = v23;
    State.wrappedValue.setter(&v20, v18);
    sub_10069CD60(v14);
    swift_release();
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  return result;
}

void sub_100695784(uint64_t a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (*a2 == 1)
  {
    v4 = _s8MainViewVMa(0);
    v5 = (_QWORD *)(a3 + *(int *)(v4 + 32));
    if (*v5)
    {
      __chkstk_darwin(v4);
      sub_1000502A4();
      KeyPath = swift_getKeyPath(&unk_100ECA038);
      __chkstk_darwin(KeyPath);
      v7 = swift_getKeyPath(&unk_100ECA070);
      swift_retain();
      static Published.subscript.getter(&v12, v8, KeyPath, v7);
      swift_release();
      swift_release();
      swift_release();
      __asm { BR              X10 }
    }
    v9 = v5[1];
    v10 = type metadata accessor for TabSelectionManager(0);
    v11 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
    EnvironmentObject.error()(0, v9, v10, v11);
    __break(1u);
  }
}

double sub_100695AA8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double result;

  v1 = *a1;
  v2 = a1[1];
  v3 = *((unsigned __int8 *)a1 + 16);
  v4 = type metadata accessor for MenuDataSource(0);
  v5 = sub_100048748(&qword_1011C2B08, type metadata accessor for MenuDataSource, (uint64_t)&unk_100ED23B0);
  StateObject.wrappedValue.getter(v1, v2, v3, v4, v5);
  swift_retain();
  RequestResponse.Controller.isAutomaticReloadingEnabled.setter(1);
  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

double sub_100695B34(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double result;

  v1 = *a1;
  v2 = a1[1];
  v3 = *((unsigned __int8 *)a1 + 16);
  v4 = type metadata accessor for MenuDataSource(0);
  v5 = sub_100048748(&qword_1011C2B08, type metadata accessor for MenuDataSource, (uint64_t)&unk_100ED23B0);
  StateObject.wrappedValue.getter(v1, v2, v3, v4, v5);
  swift_retain();
  RequestResponse.Controller.isAutomaticReloadingEnabled.setter(0);
  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100695BC4@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  int *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v81;
  uint64_t KeyPath;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  _QWORD v95[12];
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  char *v133;
  _QWORD *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char v155;
  _QWORD v156[2];
  char v157;

  v154 = a1;
  v2 = (int *)_s30SubscriptionBasedNoContentViewVMa(0);
  __chkstk_darwin(v2);
  v4 = (char *)v95 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C((uint64_t *)&unk_1011C5B80);
  __chkstk_darwin(v5);
  v135 = (uint64_t)v95 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Playlist(0);
  __chkstk_darwin(v7);
  v134 = (_QWORD *)((char *)v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v149 = sub_100007E8C(&qword_10119EEB8);
  __chkstk_darwin(v149);
  v136 = (uint64_t)v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = sub_100007E8C(&qword_1011C2C58);
  __chkstk_darwin(v151);
  v153 = (uint64_t)v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v147 = sub_100007E8C(&qword_1011C2C60);
  __chkstk_darwin(v147);
  v148 = (uint64_t)v95 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v152 = sub_100007E8C(&qword_1011C2C68);
  __chkstk_darwin(v152);
  v150 = (char *)v95 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = sub_100007E8C(&qword_1011C2C70);
  __chkstk_darwin(v115);
  v117 = (char *)v95 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = sub_100007E8C(&qword_1011C2C78);
  __chkstk_darwin(v132);
  v118 = (char *)v95 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = _s9SongsViewVMa(0);
  __chkstk_darwin(v116);
  v95[9] = (char *)v95 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v95[11] = (char *)v95 - v17;
  v113 = _s9ShowsViewVMa(0);
  __chkstk_darwin(v113);
  v95[6] = (char *)v95 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v95[10] = (char *)v95 - v20;
  v129 = sub_100007E8C(&qword_1011C2C80);
  __chkstk_darwin(v129);
  v131 = (char *)v95 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = sub_100007E8C(&qword_1011C2C88);
  __chkstk_darwin(v109);
  v112 = (char *)v95 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = sub_100007E8C(&qword_1011C2C90);
  __chkstk_darwin(v130);
  v114 = (char *)v95 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = sub_100007E8C(&qword_1011C2C98);
  __chkstk_darwin(v146);
  v133 = (char *)v95 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = _s17RecentlyAddedViewVMa(0);
  __chkstk_darwin(v110);
  v95[5] = (char *)v95 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v95[7] = (char *)v95 - v27;
  v106 = sub_100007E8C(&qword_1011C2CA0);
  __chkstk_darwin(v106);
  v108 = (char *)v95 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = sub_100007E8C(&qword_1011C2CA8);
  __chkstk_darwin(v127);
  v111 = (char *)v95 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = _s15MusicVideosViewVMa(0);
  __chkstk_darwin(v107);
  v95[8] = (char *)v95 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = sub_100007E8C(&qword_1011C2CB0);
  __chkstk_darwin(v124);
  v126 = (char *)v95 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = sub_100007E8C(&qword_1011C2CB8);
  __chkstk_darwin(v101);
  v103 = (char *)v95 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = sub_100007E8C(&qword_1011C2CC0);
  __chkstk_darwin(v125);
  v105 = (char *)v95 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = sub_100007E8C(&qword_1011C2CC8);
  __chkstk_darwin(v140);
  v128 = (char *)v95 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = _s10GenresViewVMa(0);
  __chkstk_darwin(v100);
  __chkstk_darwin(v35);
  v95[4] = (char *)v95 - v36;
  v102 = _s13ComposersViewVMa(0);
  __chkstk_darwin(v102);
  __chkstk_darwin(v37);
  v95[3] = (char *)v95 - v38;
  v97 = sub_100007E8C(&qword_1011C2CD0);
  __chkstk_darwin(v97);
  v99 = (char *)v95 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = sub_100007E8C(&qword_1011C2CD8);
  __chkstk_darwin(v122);
  v104 = (char *)v95 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = _s16CompilationsViewVMa(0);
  __chkstk_darwin(v98);
  __chkstk_darwin(v41);
  v95[2] = (char *)v95 - v42;
  v96 = _s11ArtistsViewVMa(0);
  __chkstk_darwin(v96);
  v95[1] = (char *)v95 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = sub_100007E8C(&qword_1011C2CE0);
  __chkstk_darwin(v142);
  v144 = (char *)v95 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = sub_100007E8C(&qword_1011C2CE8);
  __chkstk_darwin(v137);
  v139 = (char *)v95 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = sub_100007E8C(&qword_1011C2CF0);
  __chkstk_darwin(v119);
  v121 = (char *)v95 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_100007E8C(&qword_1011C2CF8);
  __chkstk_darwin(v47);
  v120 = sub_100007E8C(&qword_1011C2D00);
  __chkstk_darwin(v120);
  v138 = sub_100007E8C(&qword_1011C2D08);
  __chkstk_darwin(v138);
  v123 = (char *)v95 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = sub_100007E8C(&qword_1011C2D10);
  __chkstk_darwin(v143);
  v141 = (char *)v95 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_100007E8C(&qword_1011C2D18);
  __chkstk_darwin(v50);
  v145 = (char *)v95 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = *v1;
  if ((unint64_t)*v1 >> 60 == 15)
  {
    v155 = 0;
    static Binding.constant(_:)(v156, &v155, &type metadata for Library.ContentFilterOption);
    v55 = v156[0];
    v54 = v156[1];
    v56 = v157;
    v57 = type metadata accessor for TabSelectionManager(0);
    v58 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
    *((_QWORD *)v4 + 3) = EnvironmentObject.init()(v57, v58);
    *((_QWORD *)v4 + 4) = v59;
    v60 = &v4[v2[6]];
    *(_QWORD *)v60 = swift_getKeyPath(&unk_100ECA0B8);
    v61 = sub_100007E8C(&qword_10119F030);
    swift_storeEnumTagMultiPayload(v60, v61, 0);
    v62 = &v4[v2[7]];
    ApplicationCapabilities.Controller.shared.unsafeMutableAddressor();
    v63 = type metadata accessor for ApplicationCapabilities.Controller(0);
    v64 = sub_100048748(&qword_1011B9938, type metadata accessor for ApplicationCapabilities.Controller, (uint64_t)&protocol conformance descriptor for ApplicationCapabilities.Controller);
    swift_retain();
    *(_QWORD *)v62 = ObservedObject.init(wrappedValue:)(v65, v63, v64);
    *((_QWORD *)v62 + 1) = v66;
    v67 = &v4[v2[8]];
    CloudLibrary.StatusObserver.shared.unsafeMutableAddressor();
    v68 = type metadata accessor for CloudLibrary.StatusObserver(0);
    v69 = sub_100048748(&qword_1011B9940, type metadata accessor for CloudLibrary.StatusObserver, (uint64_t)&protocol conformance descriptor for CloudLibrary.StatusObserver);
    swift_retain();
    *(_QWORD *)v67 = ObservedObject.init(wrappedValue:)(v70, v68, v69);
    *((_QWORD *)v67 + 1) = v71;
    v72 = &v4[v2[9]];
    v73 = sub_100007E8C(&qword_10119CBF8);
    v74 = sub_100049F28((unint64_t *)&unk_10119CC00, &qword_10119CBF8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
    *(_QWORD *)v72 = EnvironmentObject.init()(v73, v74);
    *((_QWORD *)v72 + 1) = v75;
    v76 = &v4[v2[10]];
    *(_QWORD *)v76 = 0x636973756DLL;
    *((_QWORD *)v76 + 1) = 0xE500000000000000;
    *(_QWORD *)v4 = v55;
    *((_QWORD *)v4 + 1) = v54;
    v4[16] = v56;
    v77 = v153;
    sub_10005B704((uint64_t)v4, v153, _s30SubscriptionBasedNoContentViewVMa);
    swift_storeEnumTagMultiPayload(v77, v151, 1);
    v78 = sub_10069F188();
    v79 = sub_100048748(&qword_1011B9928, _s30SubscriptionBasedNoContentViewVMa, (uint64_t)&unk_100EC0CB8);
    _ConditionalContent<>.init(storage:)(v77, v152, v2, v78, v79);
    return sub_10005B748((uint64_t)v4, _s30SubscriptionBasedNoContentViewVMa);
  }
  else
  {
    v95[0] = v2;
    if ((v53 & 0x8000000000000000) == 0)
      __asm { BR              X10 }
    v81 = v51;
    KeyPath = swift_getKeyPath(&unk_100ECA0E8);
    v83 = swift_getKeyPath(&unk_100ECA110);
    sub_10004A06C(v53);
    v84 = v134;
    static Published.subscript.getter(v134, v53 & 0x7FFFFFFFFFFFFFFFLL, KeyPath, v83);
    swift_release();
    swift_release();
    _s10DetailViewVMa(0);
    v85 = v135;
    sub_10082460C(v135);
    v86 = type metadata accessor for Library.Context(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 56))(v85, 0, 1, v86);
    v87 = v136;
    sub_100080BF4((uint64_t)v84, v85, 0, 0, v136);
    v88 = v148;
    sub_10004A160(v87, v148, &qword_10119EEB8);
    swift_storeEnumTagMultiPayload(v88, v147, 1);
    v89 = sub_10015FD08(&qword_1011C2D28, &qword_1011C2D18, (void (*)(void))sub_10069F22C, (void (*)(void))sub_10069F548);
    v90 = sub_100049F28(&qword_10119F010, &qword_10119EEB8, (uint64_t)"ٴ ");
    v91 = (uint64_t)v150;
    _ConditionalContent<>.init(storage:)(v88, v81, v149, v89, v90);
    v92 = v153;
    sub_10004A160(v91, v153, &qword_1011C2C68);
    swift_storeEnumTagMultiPayload(v92, v151, 0);
    v93 = sub_10069F188();
    v94 = sub_100048748(&qword_1011B9928, _s30SubscriptionBasedNoContentViewVMa, (uint64_t)&unk_100EC0CB8);
    _ConditionalContent<>.init(storage:)(v92, v152, v95[0], v93, v94);
    sub_10069CD60(v53);
    sub_10004FF60(v91, &qword_1011C2C68);
    return sub_10004FF60(v87, &qword_10119EEB8);
  }
}

uint64_t sub_100697E9C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE v39[7];
  _BYTE v40[7];
  _BYTE v41[7];
  _BYTE v42[7];
  __int128 v43;
  char v44;
  _BYTE v45[7];
  uint64_t v46;
  char v47;
  _BYTE v48[7];
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  _BYTE v54[7];
  char v55;
  _BYTE v56[7];
  double v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  _QWORD v62[17];

  v4 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v4 = a1 & 0xFFFFFFFFFFFFLL;
  if (v4)
  {
    v62[0] = a1;
    v62[1] = a2;
    v5 = sub_100055B68();
    swift_bridgeObjectRetain();
    v6 = Text.init<A>(_:)(v62, &type metadata for String, v5);
    v8 = v7;
    v10 = v9;
    v12 = v11;
    if (qword_10119C8B8 != -1)
      swift_once(&qword_10119C8B8, sub_10085F8C0);
    swift_retain();
    v13 = v10 & 1;
    v15 = Text.font(_:)(v14, v6, v8, v13, v12);
    v17 = v16;
    v19 = v18;
    v21 = v20;
    swift_release();
    sub_100055BAC(v6, v8, v13);
    v22 = swift_bridgeObjectRelease();
    LODWORD(v62[0]) = static HierarchicalShapeStyle.primary.getter(v22);
    v23 = Text.foregroundStyle<A>(_:)(v62, v15, v17, v19 & 1, v21, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
    v25 = v24;
    v27 = v26;
    v29 = v28;
    sub_100055BAC(v15, v17, v19 & 1);
    swift_bridgeObjectRelease();
    *(_QWORD *)&v43 = v23;
    *((_QWORD *)&v43 + 1) = v25;
    v44 = v27 & 1;
    *(_DWORD *)v45 = *(_DWORD *)v42;
    *(_DWORD *)&v45[3] = *(_DWORD *)&v42[3];
    v46 = v29;
    v47 = static Edge.Set.top.getter(v30);
    *(_DWORD *)&v48[3] = *(_DWORD *)&v41[3];
    *(_DWORD *)v48 = *(_DWORD *)v41;
    v49 = EdgeInsets.init(_all:)(28.0);
    v50 = v32;
    v51 = v33;
    v52 = v34;
    v53 = 0;
    *(_DWORD *)&v54[3] = *(_DWORD *)&v40[3];
    *(_DWORD *)v54 = *(_DWORD *)v40;
    v55 = static Edge.Set.bottom.getter(v31);
    *(_DWORD *)&v56[3] = *(_DWORD *)&v39[3];
    *(_DWORD *)v56 = *(_DWORD *)v39;
    v57 = EdgeInsets.init(_all:)(12.0);
    v58 = v35;
    v59 = v36;
    v60 = v37;
    v61 = 0;
    UIScreen.Dimensions.size.getter(&v43);
  }
  else
  {
    sub_10069F744(&v43);
  }
  sub_100065228((uint64_t)&v43, (uint64_t)v62, &qword_1011C2DE0);
  return sub_100065228((uint64_t)v62, a3, &qword_1011C2DE0);
}

uint64_t sub_100698110@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100697E9C(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), a1);
}

uint64_t sub_100698118@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t WitnessTable;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double (*v22)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t OpaqueTypeConformance2;
  uint64_t v36;
  _QWORD *v37;
  char *v38;
  __n128 v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v4 = v3;
  v57 = a3;
  v6 = *(_QWORD *)(a2 - 8);
  v53 = a1;
  v54 = v6;
  v56 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(a1);
  v51 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  WitnessTable = swift_getWitnessTable(&unk_100EC9EF8, v8);
  v10 = type metadata accessor for _ViewModifier_Content(255, a2, WitnessTable);
  v11 = type metadata accessor for Library.Context(255);
  v12 = swift_getWitnessTable(&protocol conformance descriptor for _ViewModifier_Content<A>, v10);
  v47 = sub_100048748(&qword_1011AA390, type metadata accessor for Library.Context, (uint64_t)&protocol conformance descriptor for Library.Context);
  v60 = v10;
  v61 = v11;
  v62 = v12;
  v63 = v47;
  v44 = v12;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v60, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v52 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  v49 = OpaqueTypeMetadata2;
  __chkstk_darwin(OpaqueTypeMetadata2);
  v46 = (char *)&v43 - v14;
  v16 = type metadata accessor for ModifiedContent(0, v15, &type metadata for _AppearanceActionModifier);
  v55 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v48 = (uint64_t *)((char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v18);
  v50 = (uint64_t)&v43 - v19;
  v20 = *(_QWORD *)(a2 + 24);
  v45 = *(_QWORD *)(a2 + 16);
  v22 = sub_100698470(v3, v45, v20, v21);
  v24 = v23;
  v25 = swift_checkMetadataState(0, v10);
  v26 = swift_checkMetadataState(0, v11);
  v27 = v47;
  View.onChange<A>(of:initial:_:)(v4, 0, v22, v24, v25, v26, v12, v47);
  v28 = swift_release();
  v29 = v54;
  v30 = v51;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v54 + 16))(v51, v4, a2, v28);
  v31 = *(unsigned __int8 *)(v29 + 80);
  v32 = v29;
  v33 = (v31 + 32) & ~v31;
  v34 = swift_allocObject(&unk_1010D6978, v33 + v56, v31 | 7);
  *(_QWORD *)(v34 + 16) = v45;
  *(_QWORD *)(v34 + 24) = v20;
  (*(void (**)(uint64_t, char *, uint64_t))(v32 + 32))(v34 + v33, v30, a2);
  v60 = v25;
  v61 = v26;
  v62 = v44;
  v63 = v27;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v60, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v37 = v48;
  v36 = v49;
  v38 = v46;
  View.onAppear(perform:)(v48, sub_10069C814, v34, v49, OpaqueTypeConformance2);
  v39 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v52 + 8))(v38, v36, v39);
  v58 = OpaqueTypeConformance2;
  v59 = &protocol witness table for _AppearanceActionModifier;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v16);
  v40 = v50;
  sub_10081EB14((uint64_t)v37, v16, v50);
  v41 = *(uint64_t (**)(uint64_t, uint64_t))(v55 + 8);
  v41((uint64_t)v37, v16);
  sub_1000EA744(v40, v16, v57);
  return v41(v40, v16);
}

double (*sub_100698470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v7 = _s32AutoupdatingResponseViewModifierVMa(0, a2, a3, a4);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  v10 = __chkstk_darwin(v7);
  v12 = (char *)&v17 - v11;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16))((char *)&v17 - v11, a1, v7, v10);
  v13 = *(unsigned __int8 *)(v8 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = swift_allocObject(&unk_1010D69A0, v14 + v9, v13 | 7);
  *(_QWORD *)(v15 + 16) = a2;
  *(_QWORD *)(v15 + 24) = a3;
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v15 + v14, v12, v7);
  return sub_10069CAE0;
}

double sub_100698544(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 v3;
  double result;
  _OWORD v5[2];
  uint64_t v6;

  v5[1] = *(_OWORD *)(a3 + 16);
  v6 = a2;
  v3 = swift_retain();
  dispatch thunk of MusicAutoupdatingResponse.update(_:)(sub_10069C85C, v5, v3);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_10069859C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, a4, a3, &unk_100FA8130, &unk_100FA8148);
  v11 = swift_getAssociatedTypeWitness(255, a4, a3, &unk_100FA8130, &unk_100FA8150);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(a4, a3, AssociatedTypeWitness, &unk_100FA8130, &unk_100FA8140);
  v13 = swift_getAssociatedConformanceWitness(a4, a3, v11, &unk_100FA8130, &unk_100FA8138);
  v8 = type metadata accessor for MusicLibrarySectionedRequest(0, &AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(a1, v8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 48))(a2, a3, a4);
}

uint64_t *sub_1006986A8(uint64_t *a1, uint64_t a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(const void *, uint64_t, uint64_t, __n128);
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  const void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  const void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  const void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  const void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  const void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  const void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  int *v87;
  uint64_t v88;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *(_QWORD *)a2;
    *a1 = *(_QWORD *)a2;
    v4 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_QWORD *)(a2 + 8);
    v9 = *(_BYTE *)(a2 + 16);
    KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)a2, v8);
    *v4 = v7;
    v4[1] = v8;
    *((_BYTE *)v4 + 16) = v9;
    v87 = a3;
    v88 = a2;
    v10 = a3[5];
    v11 = (char *)v4 + v10;
    v12 = a2 + v10;
    *(uint64_t *)((char *)v4 + v10) = *(_QWORD *)(a2 + v10);
    v13 = (int *)type metadata accessor for Library.Context(0);
    v14 = v13[5];
    v15 = &v11[v14];
    v16 = (const void *)(v12 + v14);
    v17 = type metadata accessor for Album(0);
    v18 = *(_QWORD *)(v17 - 8);
    v19 = *(unsigned int (**)(const void *, uint64_t, uint64_t, __n128))(v18 + 48);
    v20 = swift_retain();
    if (v19(v16, 1, v17, v20))
    {
      v21 = sub_100007E8C(&qword_1011A8FA0);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    v23 = v13[6];
    v24 = &v11[v23];
    v25 = (const void *)(v12 + v23);
    v26 = type metadata accessor for Artist(0);
    v27 = *(_QWORD *)(v26 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    {
      v28 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v27 + 16))(v24, v25, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
    v29 = v13[7];
    v30 = &v11[v29];
    v31 = (const void *)(v12 + v29);
    v32 = type metadata accessor for Composer(0);
    v33 = *(_QWORD *)(v32 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
    {
      v34 = sub_100007E8C((uint64_t *)&unk_1011C7310);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v33 + 16))(v30, v31, v32);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
    }
    v35 = v13[8];
    v36 = &v11[v35];
    v37 = (const void *)(v12 + v35);
    v38 = type metadata accessor for Genre(0);
    v39 = *(_QWORD *)(v38 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
    {
      v40 = sub_100007E8C(&qword_10119ED08);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v39 + 16))(v36, v37, v38);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
    }
    v41 = v13[9];
    v42 = &v11[v41];
    v43 = (const void *)(v12 + v41);
    v44 = type metadata accessor for Playlist(0);
    v45 = *(_QWORD *)(v44 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
    {
      v46 = sub_100007E8C(&qword_1011A30F0);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v45 + 16))(v42, v43, v44);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
    }
    v47 = v13[10];
    v48 = &v11[v47];
    v49 = (const void *)(v12 + v47);
    v50 = type metadata accessor for TVShow(0);
    v51 = *(_QWORD *)(v50 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
    {
      v52 = sub_100007E8C((uint64_t *)&unk_1011D1410);
      memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v51 + 16))(v48, v49, v50);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
    }
    v53 = v13[11];
    v54 = &v11[v53];
    v55 = (const void *)(v12 + v53);
    v56 = type metadata accessor for TVSeason(0);
    v57 = *(_QWORD *)(v56 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
    {
      v58 = sub_100007E8C((uint64_t *)&unk_1011C7320);
      memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v57 + 16))(v54, v55, v56);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
    }
    v11[v13[12]] = *(_BYTE *)(v12 + v13[12]);
    v11[v13[13]] = *(_BYTE *)(v12 + v13[13]);
    v11[v13[14]] = *(_BYTE *)(v12 + v13[14]);
    v59 = v13[15];
    v60 = &v11[v59];
    v61 = (_QWORD *)(v12 + v59);
    v62 = v61[1];
    *(_QWORD *)v60 = *v61;
    *((_QWORD *)v60 + 1) = v62;
    *(_QWORD *)&v11[v13[16]] = *(_QWORD *)(v12 + v13[16]);
    v11[v13[17]] = *(_BYTE *)(v12 + v13[17]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v63 = sub_100007E8C(&qword_1011C2938);
    *(_QWORD *)&v11[*(int *)(v63 + 28)] = *(_QWORD *)(v12 + *(int *)(v63 + 28));
    v64 = v87[6];
    v65 = v87[7];
    v66 = (uint64_t *)((char *)v4 + v64);
    v67 = (_QWORD *)(v88 + v64);
    v68 = v67[1];
    *v66 = *v67;
    v66[1] = v68;
    v69 = (char *)v4 + v65;
    v70 = *(_QWORD *)(v88 + v65);
    v71 = *(_QWORD *)(v88 + v65 + 8);
    v72 = *(_BYTE *)(v88 + v65 + 16);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    KeyValueObservationTrigger.keyPath.getter(v70, v71);
    *(_QWORD *)v69 = v70;
    *((_QWORD *)v69 + 1) = v71;
    v69[16] = v72;
    v73 = v87[8];
    v74 = v87[9];
    v75 = (uint64_t *)((char *)v4 + v73);
    v76 = (uint64_t *)(v88 + v73);
    v77 = *v76;
    v78 = v76[1];
    *v75 = v77;
    v75[1] = v78;
    v79 = (uint64_t *)((char *)v4 + v74);
    v80 = (uint64_t *)(v88 + v74);
    v82 = *v80;
    v81 = v80[1];
    *v79 = v82;
    v79[1] = v81;
    v83 = v87[10];
    v84 = (char *)v4 + v83;
    v85 = v88 + v83;
    v84[16] = *(_BYTE *)(v85 + 16);
    *(_OWORD *)v84 = *(_OWORD *)v85;
    *((_QWORD *)v84 + 3) = *(_QWORD *)(v85 + 24);
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

double sub_100698C2C(uint64_t *a1, uint64_t a2)
{
  char *v4;
  int *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  double result;

  sub_1000A6174(*a1, a1[1]);
  v4 = (char *)a1 + *(int *)(a2 + 20);
  swift_release();
  v5 = (int *)type metadata accessor for Library.Context(0);
  v6 = &v4[v5[5]];
  v7 = type metadata accessor for Album(0);
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
  v9 = &v4[v5[6]];
  v10 = type metadata accessor for Artist(0);
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
  v12 = &v4[v5[7]];
  v13 = type metadata accessor for Composer(0);
  v14 = *(_QWORD *)(v13 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    (*(void (**)(char *, uint64_t))(v14 + 8))(v12, v13);
  v15 = &v4[v5[8]];
  v16 = type metadata accessor for Genre(0);
  v17 = *(_QWORD *)(v16 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    (*(void (**)(char *, uint64_t))(v17 + 8))(v15, v16);
  v18 = &v4[v5[9]];
  v19 = type metadata accessor for Playlist(0);
  v20 = *(_QWORD *)(v19 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    (*(void (**)(char *, uint64_t))(v20 + 8))(v18, v19);
  v21 = &v4[v5[10]];
  v22 = type metadata accessor for TVShow(0);
  v23 = *(_QWORD *)(v22 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    (*(void (**)(char *, uint64_t))(v23 + 8))(v21, v22);
  v24 = &v4[v5[11]];
  v25 = type metadata accessor for TVSeason(0);
  v26 = *(_QWORD *)(v25 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
    (*(void (**)(char *, uint64_t))(v26 + 8))(v24, v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100007E8C(&qword_1011C2938);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1000A6174(*(uint64_t *)((char *)a1 + *(int *)(a2 + 28)), *(uint64_t *)((char *)a1 + *(int *)(a2 + 28) + 8));
  swift_release();
  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100698ED4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(const void *, uint64_t, uint64_t, __n128);
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  const void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  const void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  const void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  const void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  const void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int *v85;
  uint64_t v86;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 16);
  KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)a2, v7);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  v85 = a3;
  v86 = a2;
  v9 = a3[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  v12 = (int *)type metadata accessor for Library.Context(0);
  v13 = v12[5];
  v14 = (void *)(v10 + v13);
  v15 = (const void *)(v11 + v13);
  v16 = type metadata accessor for Album(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned int (**)(const void *, uint64_t, uint64_t, __n128))(v17 + 48);
  v19 = swift_retain();
  if (v18(v15, 1, v16, v19))
  {
    v20 = sub_100007E8C(&qword_1011A8FA0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v17 + 16))(v14, v15, v16);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  v21 = v12[6];
  v22 = (void *)(v10 + v21);
  v23 = (const void *)(v11 + v21);
  v24 = type metadata accessor for Artist(0);
  v25 = *(_QWORD *)(v24 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    v26 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v25 + 16))(v22, v23, v24);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  v27 = v12[7];
  v28 = (void *)(v10 + v27);
  v29 = (const void *)(v11 + v27);
  v30 = type metadata accessor for Composer(0);
  v31 = *(_QWORD *)(v30 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
  {
    v32 = sub_100007E8C((uint64_t *)&unk_1011C7310);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v31 + 16))(v28, v29, v30);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
  }
  v33 = v12[8];
  v34 = (void *)(v10 + v33);
  v35 = (const void *)(v11 + v33);
  v36 = type metadata accessor for Genre(0);
  v37 = *(_QWORD *)(v36 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
  {
    v38 = sub_100007E8C(&qword_10119ED08);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v37 + 16))(v34, v35, v36);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
  }
  v39 = v12[9];
  v40 = (void *)(v10 + v39);
  v41 = (const void *)(v11 + v39);
  v42 = type metadata accessor for Playlist(0);
  v43 = *(_QWORD *)(v42 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
  {
    v44 = sub_100007E8C(&qword_1011A30F0);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v43 + 16))(v40, v41, v42);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
  }
  v45 = v12[10];
  v46 = (void *)(v10 + v45);
  v47 = (const void *)(v11 + v45);
  v48 = type metadata accessor for TVShow(0);
  v49 = *(_QWORD *)(v48 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
  {
    v50 = sub_100007E8C((uint64_t *)&unk_1011D1410);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v49 + 16))(v46, v47, v48);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
  }
  v51 = v12[11];
  v52 = (void *)(v10 + v51);
  v53 = (const void *)(v11 + v51);
  v54 = type metadata accessor for TVSeason(0);
  v55 = *(_QWORD *)(v54 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54))
  {
    v56 = sub_100007E8C((uint64_t *)&unk_1011C7320);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v55 + 16))(v52, v53, v54);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
  }
  *(_BYTE *)(v10 + v12[12]) = *(_BYTE *)(v11 + v12[12]);
  *(_BYTE *)(v10 + v12[13]) = *(_BYTE *)(v11 + v12[13]);
  *(_BYTE *)(v10 + v12[14]) = *(_BYTE *)(v11 + v12[14]);
  v57 = v12[15];
  v58 = (_QWORD *)(v10 + v57);
  v59 = (_QWORD *)(v11 + v57);
  v60 = v59[1];
  *v58 = *v59;
  v58[1] = v60;
  *(_QWORD *)(v10 + v12[16]) = *(_QWORD *)(v11 + v12[16]);
  *(_BYTE *)(v10 + v12[17]) = *(_BYTE *)(v11 + v12[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v61 = sub_100007E8C(&qword_1011C2938);
  *(_QWORD *)(v10 + *(int *)(v61 + 28)) = *(_QWORD *)(v11 + *(int *)(v61 + 28));
  v62 = v85[6];
  v63 = v85[7];
  v64 = (_QWORD *)(a1 + v62);
  v65 = (_QWORD *)(v86 + v62);
  v66 = v65[1];
  *v64 = *v65;
  v64[1] = v66;
  v67 = a1 + v63;
  v68 = *(_QWORD *)(v86 + v63);
  v69 = *(_QWORD *)(v86 + v63 + 8);
  v70 = *(_BYTE *)(v86 + v63 + 16);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  KeyValueObservationTrigger.keyPath.getter(v68, v69);
  *(_QWORD *)v67 = v68;
  *(_QWORD *)(v67 + 8) = v69;
  *(_BYTE *)(v67 + 16) = v70;
  v71 = v85[8];
  v72 = v85[9];
  v73 = (_QWORD *)(a1 + v71);
  v74 = (uint64_t *)(v86 + v71);
  v75 = *v74;
  v76 = v74[1];
  *v73 = v75;
  v73[1] = v76;
  v77 = (_QWORD *)(a1 + v72);
  v78 = (uint64_t *)(v86 + v72);
  v80 = *v78;
  v79 = v78[1];
  *v77 = v80;
  v77[1] = v79;
  v81 = v85[10];
  v82 = a1 + v81;
  v83 = v86 + v81;
  *(_BYTE *)(v82 + 16) = *(_BYTE *)(v83 + 16);
  *(_OWORD *)v82 = *(_OWORD *)v83;
  *(_QWORD *)(v82 + 24) = *(_QWORD *)(v83 + 24);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_100699430(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(void *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(void *, uint64_t, uint64_t);
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(void *, uint64_t, uint64_t);
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(void *, uint64_t, uint64_t);
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(void *, uint64_t, uint64_t);
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(void *, uint64_t, uint64_t);
  int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t (*v74)(void *, uint64_t, uint64_t);
  int v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  __int128 *v101;
  __int128 v102;
  int *v104;
  uint64_t v105;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 16);
  KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)a2, v7);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  sub_1000A6174(v9, v10);
  v104 = a3;
  v105 = a2;
  v11 = a3[5];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  swift_retain();
  swift_release();
  v14 = (int *)type metadata accessor for Library.Context(0);
  v15 = v14[5];
  v16 = (void *)(v12 + v15);
  v17 = (void *)(v13 + v15);
  v18 = type metadata accessor for Album(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v19 + 16))(v16, v17, v18);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v22)
  {
    (*(void (**)(void *, uint64_t))(v19 + 8))(v16, v18);
LABEL_6:
    v23 = sub_100007E8C(&qword_1011A8FA0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v19 + 24))(v16, v17, v18);
LABEL_7:
  v24 = v14[6];
  v25 = (void *)(v12 + v24);
  v26 = (void *)(v13 + v24);
  v27 = type metadata accessor for Artist(0);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v28 + 48);
  v30 = v29(v25, 1, v27);
  v31 = v29(v26, 1, v27);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(void *, void *, uint64_t))(v28 + 16))(v25, v26, v27);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v31)
  {
    (*(void (**)(void *, uint64_t))(v28 + 8))(v25, v27);
LABEL_12:
    v32 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v28 + 24))(v25, v26, v27);
LABEL_13:
  v33 = v14[7];
  v34 = (void *)(v12 + v33);
  v35 = (void *)(v13 + v33);
  v36 = type metadata accessor for Composer(0);
  v37 = *(_QWORD *)(v36 - 8);
  v38 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v37 + 48);
  v39 = v38(v34, 1, v36);
  v40 = v38(v35, 1, v36);
  if (v39)
  {
    if (!v40)
    {
      (*(void (**)(void *, void *, uint64_t))(v37 + 16))(v34, v35, v36);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v40)
  {
    (*(void (**)(void *, uint64_t))(v37 + 8))(v34, v36);
LABEL_18:
    v41 = sub_100007E8C((uint64_t *)&unk_1011C7310);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, void *, uint64_t))(v37 + 24))(v34, v35, v36);
LABEL_19:
  v42 = v14[8];
  v43 = (void *)(v12 + v42);
  v44 = (void *)(v13 + v42);
  v45 = type metadata accessor for Genre(0);
  v46 = *(_QWORD *)(v45 - 8);
  v47 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v46 + 48);
  v48 = v47(v43, 1, v45);
  v49 = v47(v44, 1, v45);
  if (v48)
  {
    if (!v49)
    {
      (*(void (**)(void *, void *, uint64_t))(v46 + 16))(v43, v44, v45);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v49)
  {
    (*(void (**)(void *, uint64_t))(v46 + 8))(v43, v45);
LABEL_24:
    v50 = sub_100007E8C(&qword_10119ED08);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(void *, void *, uint64_t))(v46 + 24))(v43, v44, v45);
LABEL_25:
  v51 = v14[9];
  v52 = (void *)(v12 + v51);
  v53 = (void *)(v13 + v51);
  v54 = type metadata accessor for Playlist(0);
  v55 = *(_QWORD *)(v54 - 8);
  v56 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v55 + 48);
  v57 = v56(v52, 1, v54);
  v58 = v56(v53, 1, v54);
  if (v57)
  {
    if (!v58)
    {
      (*(void (**)(void *, void *, uint64_t))(v55 + 16))(v52, v53, v54);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v58)
  {
    (*(void (**)(void *, uint64_t))(v55 + 8))(v52, v54);
LABEL_30:
    v59 = sub_100007E8C(&qword_1011A30F0);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(void *, void *, uint64_t))(v55 + 24))(v52, v53, v54);
LABEL_31:
  v60 = v14[10];
  v61 = (void *)(v12 + v60);
  v62 = (void *)(v13 + v60);
  v63 = type metadata accessor for TVShow(0);
  v64 = *(_QWORD *)(v63 - 8);
  v65 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v64 + 48);
  v66 = v65(v61, 1, v63);
  v67 = v65(v62, 1, v63);
  if (v66)
  {
    if (!v67)
    {
      (*(void (**)(void *, void *, uint64_t))(v64 + 16))(v61, v62, v63);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v67)
  {
    (*(void (**)(void *, uint64_t))(v64 + 8))(v61, v63);
LABEL_36:
    v68 = sub_100007E8C((uint64_t *)&unk_1011D1410);
    memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(void *, void *, uint64_t))(v64 + 24))(v61, v62, v63);
LABEL_37:
  v69 = v14[11];
  v70 = (void *)(v12 + v69);
  v71 = (void *)(v13 + v69);
  v72 = type metadata accessor for TVSeason(0);
  v73 = *(_QWORD *)(v72 - 8);
  v74 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v73 + 48);
  v75 = v74(v70, 1, v72);
  v76 = v74(v71, 1, v72);
  if (!v75)
  {
    if (!v76)
    {
      (*(void (**)(void *, void *, uint64_t))(v73 + 24))(v70, v71, v72);
      goto LABEL_43;
    }
    (*(void (**)(void *, uint64_t))(v73 + 8))(v70, v72);
    goto LABEL_42;
  }
  if (v76)
  {
LABEL_42:
    v77 = sub_100007E8C((uint64_t *)&unk_1011C7320);
    memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(void *, void *, uint64_t))(v73 + 16))(v70, v71, v72);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v70, 0, 1, v72);
LABEL_43:
  *(_BYTE *)(v12 + v14[12]) = *(_BYTE *)(v13 + v14[12]);
  *(_BYTE *)(v12 + v14[13]) = *(_BYTE *)(v13 + v14[13]);
  *(_BYTE *)(v12 + v14[14]) = *(_BYTE *)(v13 + v14[14]);
  v78 = v14[15];
  v79 = (_QWORD *)(v12 + v78);
  v80 = (_QWORD *)(v13 + v78);
  *v79 = *v80;
  v79[1] = v80[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + v14[16]) = *(_QWORD *)(v13 + v14[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + v14[17]) = *(_BYTE *)(v13 + v14[17]);
  v81 = sub_100007E8C(&qword_1011C2938);
  *(_QWORD *)(v12 + *(int *)(v81 + 28)) = *(_QWORD *)(v13 + *(int *)(v81 + 28));
  swift_retain();
  swift_release();
  v82 = v104[6];
  v83 = a1 + v82;
  v84 = v105 + v82;
  *(_QWORD *)(a1 + v82) = *(_QWORD *)(v105 + v82);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v83 + 8) = *(_QWORD *)(v84 + 8);
  swift_retain();
  swift_release();
  v85 = v104[7];
  v86 = a1 + v85;
  v87 = v105 + v85;
  v88 = *(_QWORD *)v87;
  v89 = *(_QWORD *)(v87 + 8);
  v90 = *(_BYTE *)(v87 + 16);
  KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)v87, v89);
  v91 = *(_QWORD *)v86;
  v92 = *(_QWORD *)(v86 + 8);
  *(_QWORD *)v86 = v88;
  *(_QWORD *)(v86 + 8) = v89;
  *(_BYTE *)(v86 + 16) = v90;
  sub_1000A6174(v91, v92);
  v93 = v104[8];
  v94 = a1 + v93;
  v95 = v105 + v93;
  *(_QWORD *)(a1 + v93) = *(_QWORD *)(v105 + v93);
  swift_retain();
  swift_release();
  *(_QWORD *)(v94 + 8) = *(_QWORD *)(v95 + 8);
  v96 = v104[9];
  v97 = a1 + v96;
  v98 = v105 + v96;
  *(_QWORD *)(a1 + v96) = *(_QWORD *)(v105 + v96);
  swift_retain();
  swift_release();
  *(_QWORD *)(v97 + 8) = *(_QWORD *)(v98 + 8);
  v99 = v104[10];
  v100 = a1 + v99;
  v101 = (__int128 *)(v105 + v99);
  v102 = *v101;
  *(_BYTE *)(v100 + 16) = *((_BYTE *)v101 + 16);
  *(_OWORD *)v100 = v102;
  *(_QWORD *)(v100 + 24) = *((_QWORD *)v101 + 3);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_100699BFC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  const void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  const void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  const void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  const void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _OWORD *v58;
  _OWORD *v59;
  __int128 v60;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = a3[5];
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_QWORD *)(a1 + v6) = *(_QWORD *)(a2 + v6);
  v9 = (int *)type metadata accessor for Library.Context(0);
  v10 = v9[5];
  v11 = (void *)(v7 + v10);
  v12 = (const void *)(v8 + v10);
  v13 = type metadata accessor for Album(0);
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    v15 = sub_100007E8C(&qword_1011A8FA0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  v16 = v9[6];
  v17 = (void *)(v7 + v16);
  v18 = (const void *)(v8 + v16);
  v19 = type metadata accessor for Artist(0);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    v21 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v20 + 32))(v17, v18, v19);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  v22 = v9[7];
  v23 = (void *)(v7 + v22);
  v24 = (const void *)(v8 + v22);
  v25 = type metadata accessor for Composer(0);
  v26 = *(_QWORD *)(v25 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
  {
    v27 = sub_100007E8C((uint64_t *)&unk_1011C7310);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v26 + 32))(v23, v24, v25);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  v28 = v9[8];
  v29 = (void *)(v7 + v28);
  v30 = (const void *)(v8 + v28);
  v31 = type metadata accessor for Genre(0);
  v32 = *(_QWORD *)(v31 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
  {
    v33 = sub_100007E8C(&qword_10119ED08);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v32 + 32))(v29, v30, v31);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
  }
  v34 = v9[9];
  v35 = (void *)(v7 + v34);
  v36 = (const void *)(v8 + v34);
  v37 = type metadata accessor for Playlist(0);
  v38 = *(_QWORD *)(v37 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
  {
    v39 = sub_100007E8C(&qword_1011A30F0);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v38 + 32))(v35, v36, v37);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
  }
  v40 = v9[10];
  v41 = (void *)(v7 + v40);
  v42 = (const void *)(v8 + v40);
  v43 = type metadata accessor for TVShow(0);
  v44 = *(_QWORD *)(v43 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
  {
    v45 = sub_100007E8C((uint64_t *)&unk_1011D1410);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v44 + 32))(v41, v42, v43);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
  }
  v46 = v9[11];
  v47 = (void *)(v7 + v46);
  v48 = (const void *)(v8 + v46);
  v49 = type metadata accessor for TVSeason(0);
  v50 = *(_QWORD *)(v49 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
  {
    v51 = sub_100007E8C((uint64_t *)&unk_1011C7320);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v50 + 32))(v47, v48, v49);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
  }
  *(_BYTE *)(v7 + v9[12]) = *(_BYTE *)(v8 + v9[12]);
  *(_BYTE *)(v7 + v9[13]) = *(_BYTE *)(v8 + v9[13]);
  *(_BYTE *)(v7 + v9[14]) = *(_BYTE *)(v8 + v9[14]);
  *(_OWORD *)(v7 + v9[15]) = *(_OWORD *)(v8 + v9[15]);
  *(_QWORD *)(v7 + v9[16]) = *(_QWORD *)(v8 + v9[16]);
  *(_BYTE *)(v7 + v9[17]) = *(_BYTE *)(v8 + v9[17]);
  v52 = sub_100007E8C(&qword_1011C2938);
  *(_QWORD *)(v7 + *(int *)(v52 + 28)) = *(_QWORD *)(v8 + *(int *)(v52 + 28));
  v53 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  v54 = a1 + v53;
  v55 = a2 + v53;
  *(_BYTE *)(v54 + 16) = *(_BYTE *)(v55 + 16);
  *(_OWORD *)v54 = *(_OWORD *)v55;
  v56 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v56) = *(_OWORD *)(a2 + v56);
  v57 = a3[10];
  v58 = (_OWORD *)(a1 + v57);
  v59 = (_OWORD *)(a2 + v57);
  v60 = v59[1];
  *v58 = *v59;
  v58[1] = v60;
  return a1;
}

uint64_t sub_10069A0BC(uint64_t a1, uint64_t a2, int *a3)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(void *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void *, uint64_t, uint64_t);
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(void *, uint64_t, uint64_t);
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(void *, uint64_t, uint64_t);
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(void *, uint64_t, uint64_t);
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(void *, uint64_t, uint64_t);
  int v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t (*v72)(void *, uint64_t, uint64_t);
  int v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  int *v101;
  uint64_t v102;

  v6 = *(_BYTE *)(a2 + 16);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v6;
  sub_1000A6174(v7, v8);
  v101 = a3;
  v102 = a2;
  v9 = a3[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  swift_release();
  v12 = (int *)type metadata accessor for Library.Context(0);
  v13 = v12[5];
  v14 = (void *)(v10 + v13);
  v15 = (void *)(v11 + v13);
  v16 = type metadata accessor for Album(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v18(v15, 1, v16);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 32))(v14, v15, v16);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v20)
  {
    (*(void (**)(void *, uint64_t))(v17 + 8))(v14, v16);
LABEL_6:
    v21 = sub_100007E8C(&qword_1011A8FA0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v17 + 40))(v14, v15, v16);
LABEL_7:
  v22 = v12[6];
  v23 = (void *)(v10 + v22);
  v24 = (void *)(v11 + v22);
  v25 = type metadata accessor for Artist(0);
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
  v28 = v27(v23, 1, v25);
  v29 = v27(v24, 1, v25);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(void *, void *, uint64_t))(v26 + 32))(v23, v24, v25);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v29)
  {
    (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
LABEL_12:
    v30 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v26 + 40))(v23, v24, v25);
LABEL_13:
  v31 = v12[7];
  v32 = (void *)(v10 + v31);
  v33 = (void *)(v11 + v31);
  v34 = type metadata accessor for Composer(0);
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v35 + 48);
  v37 = v36(v32, 1, v34);
  v38 = v36(v33, 1, v34);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(void *, void *, uint64_t))(v35 + 32))(v32, v33, v34);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v38)
  {
    (*(void (**)(void *, uint64_t))(v35 + 8))(v32, v34);
LABEL_18:
    v39 = sub_100007E8C((uint64_t *)&unk_1011C7310);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, void *, uint64_t))(v35 + 40))(v32, v33, v34);
LABEL_19:
  v40 = v12[8];
  v41 = (void *)(v10 + v40);
  v42 = (void *)(v11 + v40);
  v43 = type metadata accessor for Genre(0);
  v44 = *(_QWORD *)(v43 - 8);
  v45 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v44 + 48);
  v46 = v45(v41, 1, v43);
  v47 = v45(v42, 1, v43);
  if (v46)
  {
    if (!v47)
    {
      (*(void (**)(void *, void *, uint64_t))(v44 + 32))(v41, v42, v43);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v47)
  {
    (*(void (**)(void *, uint64_t))(v44 + 8))(v41, v43);
LABEL_24:
    v48 = sub_100007E8C(&qword_10119ED08);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(void *, void *, uint64_t))(v44 + 40))(v41, v42, v43);
LABEL_25:
  v49 = v12[9];
  v50 = (void *)(v10 + v49);
  v51 = (void *)(v11 + v49);
  v52 = type metadata accessor for Playlist(0);
  v53 = *(_QWORD *)(v52 - 8);
  v54 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v53 + 48);
  v55 = v54(v50, 1, v52);
  v56 = v54(v51, 1, v52);
  if (v55)
  {
    if (!v56)
    {
      (*(void (**)(void *, void *, uint64_t))(v53 + 32))(v50, v51, v52);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v56)
  {
    (*(void (**)(void *, uint64_t))(v53 + 8))(v50, v52);
LABEL_30:
    v57 = sub_100007E8C(&qword_1011A30F0);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(void *, void *, uint64_t))(v53 + 40))(v50, v51, v52);
LABEL_31:
  v58 = v12[10];
  v59 = (void *)(v10 + v58);
  v60 = (void *)(v11 + v58);
  v61 = type metadata accessor for TVShow(0);
  v62 = *(_QWORD *)(v61 - 8);
  v63 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v62 + 48);
  v64 = v63(v59, 1, v61);
  v65 = v63(v60, 1, v61);
  if (v64)
  {
    if (!v65)
    {
      (*(void (**)(void *, void *, uint64_t))(v62 + 32))(v59, v60, v61);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v59, 0, 1, v61);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v65)
  {
    (*(void (**)(void *, uint64_t))(v62 + 8))(v59, v61);
LABEL_36:
    v66 = sub_100007E8C((uint64_t *)&unk_1011D1410);
    memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(void *, void *, uint64_t))(v62 + 40))(v59, v60, v61);
LABEL_37:
  v67 = v12[11];
  v68 = (void *)(v10 + v67);
  v69 = (void *)(v11 + v67);
  v70 = type metadata accessor for TVSeason(0);
  v71 = *(_QWORD *)(v70 - 8);
  v72 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v71 + 48);
  v73 = v72(v68, 1, v70);
  v74 = v72(v69, 1, v70);
  if (!v73)
  {
    if (!v74)
    {
      (*(void (**)(void *, void *, uint64_t))(v71 + 40))(v68, v69, v70);
      goto LABEL_43;
    }
    (*(void (**)(void *, uint64_t))(v71 + 8))(v68, v70);
    goto LABEL_42;
  }
  if (v74)
  {
LABEL_42:
    v75 = sub_100007E8C((uint64_t *)&unk_1011C7320);
    memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(void *, void *, uint64_t))(v71 + 32))(v68, v69, v70);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
LABEL_43:
  *(_BYTE *)(v10 + v12[12]) = *(_BYTE *)(v11 + v12[12]);
  *(_BYTE *)(v10 + v12[13]) = *(_BYTE *)(v11 + v12[13]);
  *(_BYTE *)(v10 + v12[14]) = *(_BYTE *)(v11 + v12[14]);
  v76 = v12[15];
  v77 = (_QWORD *)(v10 + v76);
  v78 = (uint64_t *)(v11 + v76);
  v80 = *v78;
  v79 = v78[1];
  *v77 = v80;
  v77[1] = v79;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v10 + v12[16]) = *(_QWORD *)(v11 + v12[16]);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v10 + v12[17]) = *(_BYTE *)(v11 + v12[17]);
  v81 = sub_100007E8C(&qword_1011C2938);
  *(_QWORD *)(v10 + *(int *)(v81 + 28)) = *(_QWORD *)(v11 + *(int *)(v81 + 28));
  swift_release();
  v82 = v101[6];
  v83 = a1 + v82;
  v84 = v102 + v82;
  *(_QWORD *)(a1 + v82) = *(_QWORD *)(v102 + v82);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v83 + 8) = *(_QWORD *)(v84 + 8);
  swift_release();
  v85 = v101[7];
  v86 = a1 + v85;
  v87 = v102 + v85;
  v88 = *(_BYTE *)(v87 + 16);
  v89 = *(_QWORD *)v86;
  v90 = *(_QWORD *)(v86 + 8);
  *(_OWORD *)v86 = *(_OWORD *)v87;
  *(_BYTE *)(v86 + 16) = v88;
  sub_1000A6174(v89, v90);
  v91 = v101[8];
  v92 = a1 + v91;
  v93 = v102 + v91;
  *(_QWORD *)(a1 + v91) = *(_QWORD *)(v102 + v91);
  swift_release();
  *(_QWORD *)(v92 + 8) = *(_QWORD *)(v93 + 8);
  v94 = v101[9];
  v95 = a1 + v94;
  v96 = v102 + v94;
  *(_QWORD *)(a1 + v94) = *(_QWORD *)(v102 + v94);
  swift_release();
  *(_QWORD *)(v95 + 8) = *(_QWORD *)(v96 + 8);
  v97 = v101[10];
  v98 = a1 + v97;
  v99 = v102 + v97;
  *(_BYTE *)(v98 + 16) = *(_BYTE *)(v99 + 16);
  *(_OWORD *)v98 = *(_OWORD *)v99;
  *(_QWORD *)(v98 + 24) = *(_QWORD *)(v99 + 24);
  swift_release();
  return a1;
}

uint64_t sub_10069A81C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10069A828);
}

uint64_t sub_10069A828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_100007E8C(&qword_1011C2938);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_10069A8AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10069A8B8);
}

uint64_t sub_10069A8B8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_100007E8C(&qword_1011C2938);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

void sub_10069A938(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[7];

  v4[0] = &unk_100EC9E10;
  sub_10069EF7C(319, (unint64_t *)&unk_1011C29A8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for State);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_100EC9E28;
    v4[3] = &unk_100EC9E10;
    v4[4] = &unk_100EC9E40;
    v4[5] = &unk_100EC9E40;
    v4[6] = &unk_100EC9E58;
    swift_initStructMetadata(a1, 256, 7, v4, a1 + 16);
  }
}

uint64_t sub_10069A9DC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for Library.Context(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100EC9E28;
    swift_initStructMetadata(a1, 0, 2, v4, a1 + 32);
    return 0;
  }
  return result;
}

_QWORD *sub_10069AA4C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  _QWORD *v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t, __n128);
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    v7 = a1;
    v8 = (int *)type metadata accessor for Library.Context(0);
    v9 = v8[5];
    v10 = (char *)v7 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for Album(0);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v13 + 48);
    v15 = swift_retain();
    if (v14(v11, 1, v12, v15))
    {
      v16 = sub_100007E8C(&qword_1011A8FA0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v17 = v8[6];
    v18 = (char *)v7 + v17;
    v19 = (char *)a2 + v17;
    v20 = type metadata accessor for Artist(0);
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      v22 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    v23 = v8[7];
    v24 = (char *)v7 + v23;
    v25 = (char *)a2 + v23;
    v26 = type metadata accessor for Composer(0);
    v27 = *(_QWORD *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    {
      v28 = sub_100007E8C((uint64_t *)&unk_1011C7310);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
    v29 = v8[8];
    v30 = (char *)v7 + v29;
    v31 = (char *)a2 + v29;
    v32 = type metadata accessor for Genre(0);
    v33 = *(_QWORD *)(v32 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
    {
      v34 = sub_100007E8C(&qword_10119ED08);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
    }
    v35 = v8[9];
    v36 = (char *)v7 + v35;
    v37 = (char *)a2 + v35;
    v38 = type metadata accessor for Playlist(0);
    v39 = *(_QWORD *)(v38 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
    {
      v40 = sub_100007E8C(&qword_1011A30F0);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v36, v37, v38);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
    }
    v41 = v8[10];
    v42 = (char *)v7 + v41;
    v43 = (char *)a2 + v41;
    v44 = type metadata accessor for TVShow(0);
    v45 = *(_QWORD *)(v44 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
    {
      v46 = sub_100007E8C((uint64_t *)&unk_1011D1410);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v42, v43, v44);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
    }
    v47 = v8[11];
    v48 = (char *)v7 + v47;
    v49 = (char *)a2 + v47;
    v50 = type metadata accessor for TVSeason(0);
    v51 = *(_QWORD *)(v50 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
    {
      v52 = sub_100007E8C((uint64_t *)&unk_1011C7320);
      memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v48, v49, v50);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
    }
    *((_BYTE *)v7 + v8[12]) = *((_BYTE *)a2 + v8[12]);
    *((_BYTE *)v7 + v8[13]) = *((_BYTE *)a2 + v8[13]);
    *((_BYTE *)v7 + v8[14]) = *((_BYTE *)a2 + v8[14]);
    v53 = v8[15];
    v54 = (_QWORD *)((char *)v7 + v53);
    v55 = (_QWORD *)((char *)a2 + v53);
    v56 = v55[1];
    *v54 = *v55;
    v54[1] = v56;
    *(_QWORD *)((char *)v7 + v8[16]) = *(_QWORD *)((char *)a2 + v8[16]);
    *((_BYTE *)v7 + v8[17]) = *((_BYTE *)a2 + v8[17]);
    v57 = *(int *)(a3 + 36);
    v58 = (_QWORD *)((char *)v7 + v57);
    v59 = (_QWORD *)((char *)a2 + v57);
    v60 = v59[1];
    *v58 = *v59;
    v58[1] = v60;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v7;
}

double sub_10069AEE4(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double result;

  swift_release();
  v2 = (int *)type metadata accessor for Library.Context(0);
  v3 = a1 + v2[5];
  v4 = type metadata accessor for Album(0);
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  v6 = a1 + v2[6];
  v7 = type metadata accessor for Artist(0);
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  v9 = a1 + v2[7];
  v10 = type metadata accessor for Composer(0);
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  v12 = a1 + v2[8];
  v13 = type metadata accessor for Genre(0);
  v14 = *(_QWORD *)(v13 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  v15 = a1 + v2[9];
  v16 = type metadata accessor for Playlist(0);
  v17 = *(_QWORD *)(v16 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
  v18 = a1 + v2[10];
  v19 = type metadata accessor for TVShow(0);
  v20 = *(_QWORD *)(v19 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
  v21 = a1 + v2[11];
  v22 = type metadata accessor for TVSeason(0);
  v23 = *(_QWORD *)(v22 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

_QWORD *sub_10069B110(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t, __n128);
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;

  *a1 = *a2;
  v6 = (int *)type metadata accessor for Library.Context(0);
  v7 = v6[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Album(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v11 + 48);
  v13 = swift_retain();
  if (v12(v9, 1, v10, v13))
  {
    v14 = sub_100007E8C(&qword_1011A8FA0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v15 = v6[6];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = type metadata accessor for Artist(0);
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    v20 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  v21 = v6[7];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = type metadata accessor for Composer(0);
  v25 = *(_QWORD *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    v26 = sub_100007E8C((uint64_t *)&unk_1011C7310);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  v27 = v6[8];
  v28 = (char *)a1 + v27;
  v29 = (char *)a2 + v27;
  v30 = type metadata accessor for Genre(0);
  v31 = *(_QWORD *)(v30 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
  {
    v32 = sub_100007E8C(&qword_10119ED08);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v28, v29, v30);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
  }
  v33 = v6[9];
  v34 = (char *)a1 + v33;
  v35 = (char *)a2 + v33;
  v36 = type metadata accessor for Playlist(0);
  v37 = *(_QWORD *)(v36 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
  {
    v38 = sub_100007E8C(&qword_1011A30F0);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
  }
  v39 = v6[10];
  v40 = (char *)a1 + v39;
  v41 = (char *)a2 + v39;
  v42 = type metadata accessor for TVShow(0);
  v43 = *(_QWORD *)(v42 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
  {
    v44 = sub_100007E8C((uint64_t *)&unk_1011D1410);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v40, v41, v42);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
  }
  v45 = v6[11];
  v46 = (char *)a1 + v45;
  v47 = (char *)a2 + v45;
  v48 = type metadata accessor for TVSeason(0);
  v49 = *(_QWORD *)(v48 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
  {
    v50 = sub_100007E8C((uint64_t *)&unk_1011C7320);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v46, v47, v48);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
  }
  *((_BYTE *)a1 + v6[12]) = *((_BYTE *)a2 + v6[12]);
  *((_BYTE *)a1 + v6[13]) = *((_BYTE *)a2 + v6[13]);
  *((_BYTE *)a1 + v6[14]) = *((_BYTE *)a2 + v6[14]);
  v51 = v6[15];
  v52 = (_QWORD *)((char *)a1 + v51);
  v53 = (_QWORD *)((char *)a2 + v51);
  v54 = v53[1];
  *v52 = *v53;
  v52[1] = v54;
  *(_QWORD *)((char *)a1 + v6[16]) = *(_QWORD *)((char *)a2 + v6[16]);
  *((_BYTE *)a1 + v6[17]) = *((_BYTE *)a2 + v6[17]);
  v55 = *(int *)(a3 + 36);
  v56 = (_QWORD *)((char *)a1 + v55);
  v57 = (_QWORD *)((char *)a2 + v55);
  v58 = v57[1];
  *v56 = *v57;
  v56[1] = v58;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

_QWORD *sub_10069B588(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(char *, uint64_t, uint64_t);
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(char *, uint64_t, uint64_t);
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(char *, uint64_t, uint64_t);
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(char *, uint64_t, uint64_t);
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t (*v66)(char *, uint64_t, uint64_t);
  int v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v6 = (int *)type metadata accessor for Library.Context(0);
  v7 = v6[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Album(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    v15 = sub_100007E8C(&qword_1011A8FA0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v8, v9, v10);
LABEL_7:
  v16 = v6[6];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = type metadata accessor for Artist(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  v22 = v21(v17, 1, v19);
  v23 = v21(v18, 1, v19);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v19);
LABEL_12:
    v24 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 24))(v17, v18, v19);
LABEL_13:
  v25 = v6[7];
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = type metadata accessor for Composer(0);
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48);
  v31 = v30(v26, 1, v28);
  v32 = v30(v27, 1, v28);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v29 + 8))(v26, v28);
LABEL_18:
    v33 = sub_100007E8C((uint64_t *)&unk_1011C7310);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v29 + 24))(v26, v27, v28);
LABEL_19:
  v34 = v6[8];
  v35 = (char *)a1 + v34;
  v36 = (char *)a2 + v34;
  v37 = type metadata accessor for Genre(0);
  v38 = *(_QWORD *)(v37 - 8);
  v39 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48);
  v40 = v39(v35, 1, v37);
  v41 = v39(v36, 1, v37);
  if (v40)
  {
    if (!v41)
    {
      (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v35, v36, v37);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v41)
  {
    (*(void (**)(char *, uint64_t))(v38 + 8))(v35, v37);
LABEL_24:
    v42 = sub_100007E8C(&qword_10119ED08);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v38 + 24))(v35, v36, v37);
LABEL_25:
  v43 = v6[9];
  v44 = (char *)a1 + v43;
  v45 = (char *)a2 + v43;
  v46 = type metadata accessor for Playlist(0);
  v47 = *(_QWORD *)(v46 - 8);
  v48 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v47 + 48);
  v49 = v48(v44, 1, v46);
  v50 = v48(v45, 1, v46);
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v44, v45, v46);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v50)
  {
    (*(void (**)(char *, uint64_t))(v47 + 8))(v44, v46);
LABEL_30:
    v51 = sub_100007E8C(&qword_1011A30F0);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v47 + 24))(v44, v45, v46);
LABEL_31:
  v52 = v6[10];
  v53 = (char *)a1 + v52;
  v54 = (char *)a2 + v52;
  v55 = type metadata accessor for TVShow(0);
  v56 = *(_QWORD *)(v55 - 8);
  v57 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v56 + 48);
  v58 = v57(v53, 1, v55);
  v59 = v57(v54, 1, v55);
  if (v58)
  {
    if (!v59)
    {
      (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v53, v54, v55);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v59)
  {
    (*(void (**)(char *, uint64_t))(v56 + 8))(v53, v55);
LABEL_36:
    v60 = sub_100007E8C((uint64_t *)&unk_1011D1410);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v56 + 24))(v53, v54, v55);
LABEL_37:
  v61 = v6[11];
  v62 = (char *)a1 + v61;
  v63 = (char *)a2 + v61;
  v64 = type metadata accessor for TVSeason(0);
  v65 = *(_QWORD *)(v64 - 8);
  v66 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v65 + 48);
  v67 = v66(v62, 1, v64);
  v68 = v66(v63, 1, v64);
  if (!v67)
  {
    if (!v68)
    {
      (*(void (**)(char *, char *, uint64_t))(v65 + 24))(v62, v63, v64);
      goto LABEL_43;
    }
    (*(void (**)(char *, uint64_t))(v65 + 8))(v62, v64);
    goto LABEL_42;
  }
  if (v68)
  {
LABEL_42:
    v69 = sub_100007E8C((uint64_t *)&unk_1011C7320);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v62, v63, v64);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
LABEL_43:
  *((_BYTE *)a1 + v6[12]) = *((_BYTE *)a2 + v6[12]);
  *((_BYTE *)a1 + v6[13]) = *((_BYTE *)a2 + v6[13]);
  *((_BYTE *)a1 + v6[14]) = *((_BYTE *)a2 + v6[14]);
  v70 = v6[15];
  v71 = (_QWORD *)((char *)a1 + v70);
  v72 = (_QWORD *)((char *)a2 + v70);
  *v71 = *v72;
  v71[1] = v72[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v6[16]) = *(_QWORD *)((char *)a2 + v6[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + v6[17]) = *((_BYTE *)a2 + v6[17]);
  v73 = *(int *)(a3 + 36);
  v74 = (_QWORD *)((char *)a1 + v73);
  v75 = (_QWORD *)((char *)a2 + v73);
  *v74 = *v75;
  v74[1] = v75[1];
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *sub_10069BC10(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  *a1 = *a2;
  v6 = (int *)type metadata accessor for Library.Context(0);
  v7 = v6[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Album(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_100007E8C(&qword_1011A8FA0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = v6[6];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = type metadata accessor for Artist(0);
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    v18 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  v19 = v6[7];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = type metadata accessor for Composer(0);
  v23 = *(_QWORD *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    v24 = sub_100007E8C((uint64_t *)&unk_1011C7310);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v20, v21, v22);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  v25 = v6[8];
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = type metadata accessor for Genre(0);
  v29 = *(_QWORD *)(v28 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
  {
    v30 = sub_100007E8C(&qword_10119ED08);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v26, v27, v28);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  }
  v31 = v6[9];
  v32 = (char *)a1 + v31;
  v33 = (char *)a2 + v31;
  v34 = type metadata accessor for Playlist(0);
  v35 = *(_QWORD *)(v34 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
  {
    v36 = sub_100007E8C(&qword_1011A30F0);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v32, v33, v34);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
  }
  v37 = v6[10];
  v38 = (char *)a1 + v37;
  v39 = (char *)a2 + v37;
  v40 = type metadata accessor for TVShow(0);
  v41 = *(_QWORD *)(v40 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
  {
    v42 = sub_100007E8C((uint64_t *)&unk_1011D1410);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v38, v39, v40);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
  }
  v43 = v6[11];
  v44 = (char *)a1 + v43;
  v45 = (char *)a2 + v43;
  v46 = type metadata accessor for TVSeason(0);
  v47 = *(_QWORD *)(v46 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
  {
    v48 = sub_100007E8C((uint64_t *)&unk_1011C7320);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v44, v45, v46);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
  }
  *((_BYTE *)a1 + v6[12]) = *((_BYTE *)a2 + v6[12]);
  *((_BYTE *)a1 + v6[13]) = *((_BYTE *)a2 + v6[13]);
  *((_BYTE *)a1 + v6[14]) = *((_BYTE *)a2 + v6[14]);
  *(_OWORD *)((char *)a1 + v6[15]) = *(_OWORD *)((char *)a2 + v6[15]);
  *(_QWORD *)((char *)a1 + v6[16]) = *(_QWORD *)((char *)a2 + v6[16]);
  *((_BYTE *)a1 + v6[17]) = *((_BYTE *)a2 + v6[17]);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 36)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 36));
  return a1;
}

_QWORD *sub_10069C054(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(char *, uint64_t, uint64_t);
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(char *, uint64_t, uint64_t);
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(char *, uint64_t, uint64_t);
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(char *, uint64_t, uint64_t);
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t (*v66)(char *, uint64_t, uint64_t);
  int v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;

  *a1 = *a2;
  swift_release();
  v6 = (int *)type metadata accessor for Library.Context(0);
  v7 = v6[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Album(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    v15 = sub_100007E8C(&qword_1011A8FA0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  v16 = v6[6];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = type metadata accessor for Artist(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  v22 = v21(v17, 1, v19);
  v23 = v21(v18, 1, v19);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v19);
LABEL_12:
    v24 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 40))(v17, v18, v19);
LABEL_13:
  v25 = v6[7];
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = type metadata accessor for Composer(0);
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48);
  v31 = v30(v26, 1, v28);
  v32 = v30(v27, 1, v28);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v26, v27, v28);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v29 + 8))(v26, v28);
LABEL_18:
    v33 = sub_100007E8C((uint64_t *)&unk_1011C7310);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v29 + 40))(v26, v27, v28);
LABEL_19:
  v34 = v6[8];
  v35 = (char *)a1 + v34;
  v36 = (char *)a2 + v34;
  v37 = type metadata accessor for Genre(0);
  v38 = *(_QWORD *)(v37 - 8);
  v39 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48);
  v40 = v39(v35, 1, v37);
  v41 = v39(v36, 1, v37);
  if (v40)
  {
    if (!v41)
    {
      (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v35, v36, v37);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v41)
  {
    (*(void (**)(char *, uint64_t))(v38 + 8))(v35, v37);
LABEL_24:
    v42 = sub_100007E8C(&qword_10119ED08);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v38 + 40))(v35, v36, v37);
LABEL_25:
  v43 = v6[9];
  v44 = (char *)a1 + v43;
  v45 = (char *)a2 + v43;
  v46 = type metadata accessor for Playlist(0);
  v47 = *(_QWORD *)(v46 - 8);
  v48 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v47 + 48);
  v49 = v48(v44, 1, v46);
  v50 = v48(v45, 1, v46);
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v44, v45, v46);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v50)
  {
    (*(void (**)(char *, uint64_t))(v47 + 8))(v44, v46);
LABEL_30:
    v51 = sub_100007E8C(&qword_1011A30F0);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v47 + 40))(v44, v45, v46);
LABEL_31:
  v52 = v6[10];
  v53 = (char *)a1 + v52;
  v54 = (char *)a2 + v52;
  v55 = type metadata accessor for TVShow(0);
  v56 = *(_QWORD *)(v55 - 8);
  v57 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v56 + 48);
  v58 = v57(v53, 1, v55);
  v59 = v57(v54, 1, v55);
  if (v58)
  {
    if (!v59)
    {
      (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v53, v54, v55);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v59)
  {
    (*(void (**)(char *, uint64_t))(v56 + 8))(v53, v55);
LABEL_36:
    v60 = sub_100007E8C((uint64_t *)&unk_1011D1410);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v56 + 40))(v53, v54, v55);
LABEL_37:
  v61 = v6[11];
  v62 = (char *)a1 + v61;
  v63 = (char *)a2 + v61;
  v64 = type metadata accessor for TVSeason(0);
  v65 = *(_QWORD *)(v64 - 8);
  v66 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v65 + 48);
  v67 = v66(v62, 1, v64);
  v68 = v66(v63, 1, v64);
  if (!v67)
  {
    if (!v68)
    {
      (*(void (**)(char *, char *, uint64_t))(v65 + 40))(v62, v63, v64);
      goto LABEL_43;
    }
    (*(void (**)(char *, uint64_t))(v65 + 8))(v62, v64);
    goto LABEL_42;
  }
  if (v68)
  {
LABEL_42:
    v69 = sub_100007E8C((uint64_t *)&unk_1011C7320);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v62, v63, v64);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
LABEL_43:
  *((_BYTE *)a1 + v6[12]) = *((_BYTE *)a2 + v6[12]);
  *((_BYTE *)a1 + v6[13]) = *((_BYTE *)a2 + v6[13]);
  *((_BYTE *)a1 + v6[14]) = *((_BYTE *)a2 + v6[14]);
  v70 = v6[15];
  v71 = (_QWORD *)((char *)a1 + v70);
  v72 = (_QWORD *)((char *)a2 + v70);
  v74 = *v72;
  v73 = v72[1];
  *v71 = v74;
  v71[1] = v73;
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v6[16]) = *(_QWORD *)((char *)a2 + v6[16]);
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + v6[17]) = *((_BYTE *)a2 + v6[17]);
  v75 = *(int *)(a3 + 36);
  v76 = (_QWORD *)((char *)a1 + v75);
  v77 = (_QWORD *)((char *)a2 + v75);
  v79 = *v77;
  v78 = v77[1];
  *v76 = v79;
  v76[1] = v78;
  swift_release();
  return a1;
}

uint64_t sub_10069C6AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10069C6B8);
}

uint64_t sub_10069C6B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for Library.Context(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 36) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_10069C738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10069C744);
}

uint64_t sub_10069C744(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Library.Context(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 36) + 8) = (a2 - 1);
  return result;
}

uint64_t _s32AutoupdatingResponseViewModifierVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&_s32AutoupdatingResponseViewModifierVMn);
}

uint64_t sub_10069C7CC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FA98FC, 1);
}

uint64_t sub_10069C7DC(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_100FA98C8, 1);
}

double sub_10069C814(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v5 = _s32AutoupdatingResponseViewModifierVMa(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  return sub_100698544(v4 + ((v6 + 32) & ~v6), v4 + ((v6 + 32) & ~v6), v5);
}

uint64_t sub_10069C85C(uint64_t a1)
{
  uint64_t *v1;

  return sub_10069859C(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_10069C86C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v5 = *(_QWORD *)(_s32AutoupdatingResponseViewModifierVMa(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = v4 + v6;
  swift_release();
  v9 = (int *)type metadata accessor for Library.Context(0);
  v10 = v4 + v6 + v9[5];
  v11 = type metadata accessor for Album(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    (*(void (**)(unint64_t, uint64_t))(v12 + 8))(v10, v11);
  v13 = v8 + v9[6];
  v14 = type metadata accessor for Artist(0);
  v15 = *(_QWORD *)(v14 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  v16 = v8 + v9[7];
  v17 = type metadata accessor for Composer(0);
  v18 = *(_QWORD *)(v17 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
  v19 = v8 + v9[8];
  v20 = type metadata accessor for Genre(0);
  v21 = *(_QWORD *)(v20 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
  v22 = v8 + v9[9];
  v23 = type metadata accessor for Playlist(0);
  v24 = *(_QWORD *)(v23 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
  v25 = v8 + v9[10];
  v26 = type metadata accessor for TVShow(0);
  v27 = *(_QWORD *)(v26 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v26);
  v28 = v8 + v9[11];
  v29 = type metadata accessor for TVSeason(0);
  v30 = *(_QWORD *)(v29 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v28, v29);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject(v4, v6 + v7);
}

double sub_10069CAE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;

  v7 = _s32AutoupdatingResponseViewModifierVMa(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  return sub_100698544(a1, a2, v7);
}

uint64_t sub_10069CB38()
{
  uint64_t v0;

  return sub_100694650(*(uint64_t **)(v0 + 16));
}

uint64_t sub_10069CB40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100694868(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_10069CB48()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C2AD0;
  if (!qword_1011C2AD0)
  {
    v1 = sub_100044B54(&qword_1011C2AC0);
    sub_10069CBCC();
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C2AD0);
  }
  return result;
}

unint64_t sub_10069CBCC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C2AD8;
  if (!qword_1011C2AD8)
  {
    v1 = sub_100044B54(&qword_1011C2AE0);
    sub_100048748(&qword_1011C2AE8, _s8MenuViewVMa, (uint64_t)&unk_100ED28A8);
    sub_100049F28(&qword_1011A49A8, &qword_1011A49B0, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C2AD8);
  }
  return result;
}

unint64_t sub_10069CC68()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C2AF0;
  if (!qword_1011C2AF0)
  {
    v1 = sub_100044B54(&qword_1011C2AC8);
    sub_100049F28(&qword_1011C2AF8, &qword_1011C2B00, (uint64_t)&protocol conformance descriptor for NavigationStack<A, B>);
    sub_100048748(&qword_1011B1038, type metadata accessor for PushPendingNavigationItemModifier, (uint64_t)&unk_100EA92E0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C2AF0);
  }
  return result;
}

uint64_t sub_10069CD10(uint64_t a1, uint64_t a2)
{
  return sub_10069D094(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100695234);
}

unint64_t sub_10069CD1C()
{
  unint64_t result;

  result = qword_1011C2B28;
  if (!qword_1011C2B28)
  {
    result = swift_getWitnessTable(&unk_100ED2310, &type metadata for MenuDataSource.Item);
    atomic_store(result, (unint64_t *)&qword_1011C2B28);
  }
  return result;
}

uint64_t sub_10069CD60(uint64_t result)
{
  if ((unint64_t)result >> 60 != 15)
    return sub_1001A7ABC(result);
  return result;
}

uint64_t sub_10069CD7C()
{
  return 8;
}

_QWORD *sub_10069CD88(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_10069CD98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  int *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;

  v1 = _s8MainViewVMa(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v28 = *(_QWORD *)(v2 + 64);
  sub_1000A6174(*(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + v3 + 8));
  v4 = v0 + v3 + *(int *)(v1 + 20);
  swift_release();
  v5 = (int *)type metadata accessor for Library.Context(0);
  v6 = v4 + v5[5];
  v7 = type metadata accessor for Album(0);
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v6, v7);
  v9 = v4 + v5[6];
  v10 = type metadata accessor for Artist(0);
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    (*(void (**)(unint64_t, uint64_t))(v11 + 8))(v9, v10);
  v12 = v4 + v5[7];
  v13 = type metadata accessor for Composer(0);
  v14 = *(_QWORD *)(v13 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    (*(void (**)(unint64_t, uint64_t))(v14 + 8))(v12, v13);
  v15 = v4 + v5[8];
  v16 = type metadata accessor for Genre(0);
  v17 = *(_QWORD *)(v16 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    (*(void (**)(unint64_t, uint64_t))(v17 + 8))(v15, v16);
  v18 = v4 + v5[9];
  v19 = type metadata accessor for Playlist(0);
  v20 = *(_QWORD *)(v19 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    (*(void (**)(unint64_t, uint64_t))(v20 + 8))(v18, v19);
  v21 = v4 + v5[10];
  v22 = type metadata accessor for TVShow(0);
  v23 = *(_QWORD *)(v22 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    (*(void (**)(unint64_t, uint64_t))(v23 + 8))(v21, v22);
  v24 = v4 + v5[11];
  v25 = type metadata accessor for TVSeason(0);
  v26 = *(_QWORD *)(v25 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
    (*(void (**)(unint64_t, uint64_t))(v26 + 8))(v24, v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100007E8C(&qword_1011C2938);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1000A6174(*(_QWORD *)(v0 + v3 + *(int *)(v1 + 28)), *(_QWORD *)(v0 + v3 + *(int *)(v1 + 28) + 8));
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject(v0, v3 + v28);
}

uint64_t sub_10069D088(uint64_t a1, uint64_t a2)
{
  return sub_10069D094(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1006955D8);
}

uint64_t sub_10069D094(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v6;

  v6 = *(unsigned __int8 *)(*(_QWORD *)(_s8MainViewVMa(0) - 8) + 80);
  return a3(a1, a2, v3 + ((v6 + 16) & ~v6));
}

unint64_t sub_10069D0F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C2B30;
  if (!qword_1011C2B30)
  {
    v1 = sub_100044B54((uint64_t *)&unk_1011D11C0);
    sub_100048748(&qword_10119EE08, type metadata accessor for NavigationDestinationItem, (uint64_t)&unk_100EA8A40);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v1);
    atomic_store(result, (unint64_t *)&qword_1011C2B30);
  }
  return result;
}

void sub_10069D170(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(_s8MainViewVMa(0) - 8) + 80);
  sub_100695784(a1, a2, v2 + ((v5 + 16) & ~v5));
}

uint64_t sub_10069D1C0()
{
  return sub_10069D1E4((uint64_t (*)(uint64_t))sub_100695AA8);
}

uint64_t sub_10069D1D8()
{
  return sub_10069D1E4((uint64_t (*)(uint64_t))sub_100695B34);
}

uint64_t sub_10069D1E4(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(_s8MainViewVMa(0) - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

_QWORD *sub_10069D220@<X0>(_BYTE *a1@<X8>)
{
  unint64_t v2;
  _QWORD *result;
  uint64_t v4;

  v2 = sub_10069D5DC();
  result = EnvironmentValues.subscript.getter(&v4, &_s17SidebarVisibilityVN, &_s17SidebarVisibilityVN, v2);
  *a1 = v4;
  return result;
}

uint64_t sub_10069D26C(char *a1)
{
  unint64_t v1;
  char v3;

  v3 = *a1;
  v1 = sub_10069D5DC();
  return EnvironmentValues.subscript.setter(&v3, &_s17SidebarVisibilityVN, &_s17SidebarVisibilityVN, v1);
}

unint64_t sub_10069D2B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C2B38;
  if (!qword_1011C2B38)
  {
    v1 = sub_100044B54(&qword_1011C2AB0);
    sub_10069D338();
    sub_100049F28(&qword_1011C2B60, &qword_1011C2B68, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C2B38);
  }
  return result;
}

unint64_t sub_10069D338()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C2B40;
  if (!qword_1011C2B40)
  {
    v1 = sub_100044B54(&qword_1011C2AA8);
    sub_10005610C(&qword_1011C2B48, &qword_1011C2AA0, (void (*)(void))sub_10069D3DC);
    sub_100049F28((unint64_t *)&unk_1011B6D80, &qword_1011D1220, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C2B40);
  }
  return result;
}

unint64_t sub_10069D3DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C2B50;
  if (!qword_1011C2B50)
  {
    v1 = sub_100044B54(&qword_1011C2A98);
    sub_10069D460();
    sub_100049F28(&qword_1011B0FC0, &qword_1011B0FC8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C2B50);
  }
  return result;
}

unint64_t sub_10069D460()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t OpaqueTypeConformance2;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;

  result = qword_1011C2B58;
  if (!qword_1011C2B58)
  {
    v1 = sub_100044B54(&qword_1011C2A90);
    v2 = sub_100044B54(&qword_1011C2A80);
    v3 = sub_100044B54(&qword_1011C2A78);
    v4 = sub_100044B54((uint64_t *)&unk_1011D11C0);
    v8 = sub_100044B54(&qword_1011C2A70);
    v9 = (void *)sub_100044B54(&qword_1011C2B10);
    v10 = sub_100049F28(&qword_1011C2B18, &qword_1011C2A70, (uint64_t)&protocol conformance descriptor for NavigationSplitView<A, B, C>);
    v11 = (void *)sub_1000E4570(&qword_1011C2B20, &qword_1011C2B10, (void (*)(void))sub_10069CD1C, (uint64_t)&protocol conformance descriptor for <A> A?);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v8, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
    v6 = sub_10069D0F0();
    v8 = v3;
    v9 = (void *)v4;
    v10 = OpaqueTypeConformance2;
    v11 = (void *)v6;
    v7 = swift_getOpaqueTypeConformance2(&v8, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
    v8 = v2;
    v9 = &type metadata for Bool;
    v10 = v7;
    v11 = &protocol witness table for Bool;
    swift_getOpaqueTypeConformance2(&v8, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C2B58);
  }
  return result;
}

unint64_t sub_10069D5DC()
{
  unint64_t result;

  result = qword_1011C2B70;
  if (!qword_1011C2B70)
  {
    result = swift_getWitnessTable(&unk_100ECB604, &_s17SidebarVisibilityVN);
    atomic_store(result, (unint64_t *)&qword_1011C2B70);
  }
  return result;
}

uint64_t sub_10069D628()
{
  return 16;
}

__n128 sub_10069D634(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_10069D640(uint64_t result)
{
  if ((unint64_t)result >> 60 != 15)
    return sub_10004A06C(result);
  return result;
}

uint64_t sub_10069D65C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100694A4C(*(uint64_t **)(v1 + 16), a1);
}

uint64_t _s10DetailViewVMa(uint64_t a1)
{
  return sub_100055934(a1, qword_1011C2C18, (uint64_t)&_s10DetailViewVMn);
}

unint64_t sub_10069D680()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C2BA8;
  if (!qword_1011C2BA8)
  {
    v1 = sub_100044B54(&qword_1011C2B90);
    sub_100048748(&qword_1011C2BB0, _s10DetailViewVMa, (uint64_t)&unk_100ECA158);
    sub_1003E4B30();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C2BA8);
  }
  return result;
}

uint64_t *sub_10069D70C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t, __n128);
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v67;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *a2;
    if ((unint64_t)*a2 >> 60 != 15)
      sub_10004A06C(*a2);
    *a1 = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = sub_100007E8C(&qword_10119F030);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v11);
    *v9 = *v10;
    if (EnumCaseMultiPayload == 1)
    {
      v67 = v11;
      v13 = (int *)type metadata accessor for Library.Context(0);
      v14 = v13[5];
      v15 = (char *)v9 + v14;
      v16 = (char *)v10 + v14;
      v17 = type metadata accessor for Album(0);
      v18 = *(_QWORD *)(v17 - 8);
      v19 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v18 + 48);
      v20 = swift_retain();
      if (v19(v16, 1, v17, v20))
      {
        v21 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
      v26 = v13[6];
      v27 = (char *)v9 + v26;
      v28 = (char *)v10 + v26;
      v29 = type metadata accessor for Artist(0);
      v30 = *(_QWORD *)(v29 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
      {
        v31 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
      }
      v32 = v13[7];
      v33 = (char *)v9 + v32;
      v34 = (char *)v10 + v32;
      v35 = type metadata accessor for Composer(0);
      v36 = *(_QWORD *)(v35 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
      {
        v37 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v33, v34, v35);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
      }
      v38 = v13[8];
      v39 = (char *)v9 + v38;
      v40 = (char *)v10 + v38;
      v41 = type metadata accessor for Genre(0);
      v42 = *(_QWORD *)(v41 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
      {
        v43 = sub_100007E8C(&qword_10119ED08);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v39, v40, v41);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
      }
      v44 = v13[9];
      v45 = (char *)v9 + v44;
      v46 = (char *)v10 + v44;
      v47 = type metadata accessor for Playlist(0);
      v48 = *(_QWORD *)(v47 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
      {
        v49 = sub_100007E8C(&qword_1011A30F0);
        memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v45, v46, v47);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
      }
      v50 = v13[10];
      v51 = (char *)v9 + v50;
      v52 = (char *)v10 + v50;
      v53 = type metadata accessor for TVShow(0);
      v54 = *(_QWORD *)(v53 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
      {
        v55 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v51, v52, v53);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
      }
      v56 = v13[11];
      v57 = (char *)v9 + v56;
      v58 = (char *)v10 + v56;
      v59 = type metadata accessor for TVSeason(0);
      v60 = *(_QWORD *)(v59 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
      {
        v61 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v57, v58, v59);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
      }
      *((_BYTE *)v9 + v13[12]) = *((_BYTE *)v10 + v13[12]);
      *((_BYTE *)v9 + v13[13]) = *((_BYTE *)v10 + v13[13]);
      *((_BYTE *)v9 + v13[14]) = *((_BYTE *)v10 + v13[14]);
      v62 = v13[15];
      v63 = (_QWORD *)((char *)v9 + v62);
      v64 = (_QWORD *)((char *)v10 + v62);
      v65 = v64[1];
      *v63 = *v64;
      v63[1] = v65;
      *(_QWORD *)((char *)v9 + v13[16]) = *(_QWORD *)((char *)v10 + v13[16]);
      *((_BYTE *)v9 + v13[17]) = *((_BYTE *)v10 + v13[17]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v23 = v9;
      v24 = v67;
      v25 = 1;
    }
    else
    {
      swift_retain();
      v23 = v9;
      v24 = v11;
      v25 = 0;
    }
    swift_storeEnumTagMultiPayload(v23, v24, v25);
  }
  return a1;
}

double sub_10069DC18(unint64_t *a1, uint64_t a2)
{
  unint64_t v4;
  char *v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  double result;
  int *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;

  v4 = *a1;
  if (v4 >> 60 != 15)
    sub_1001A7ABC(v4);
  v5 = (char *)a1 + *(int *)(a2 + 20);
  v6 = sub_100007E8C(&qword_10119F030);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v5, v6);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  if (EnumCaseMultiPayload == 1)
  {
    v9 = (int *)type metadata accessor for Library.Context(0);
    v10 = &v5[v9[5]];
    v11 = type metadata accessor for Album(0);
    v12 = *(_QWORD *)(v11 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
    v13 = &v5[v9[6]];
    v14 = type metadata accessor for Artist(0);
    v15 = *(_QWORD *)(v14 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      (*(void (**)(char *, uint64_t))(v15 + 8))(v13, v14);
    v16 = &v5[v9[7]];
    v17 = type metadata accessor for Composer(0);
    v18 = *(_QWORD *)(v17 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      (*(void (**)(char *, uint64_t))(v18 + 8))(v16, v17);
    v19 = &v5[v9[8]];
    v20 = type metadata accessor for Genre(0);
    v21 = *(_QWORD *)(v20 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      (*(void (**)(char *, uint64_t))(v21 + 8))(v19, v20);
    v22 = &v5[v9[9]];
    v23 = type metadata accessor for Playlist(0);
    v24 = *(_QWORD *)(v23 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
      (*(void (**)(char *, uint64_t))(v24 + 8))(v22, v23);
    v25 = &v5[v9[10]];
    v26 = type metadata accessor for TVShow(0);
    v27 = *(_QWORD *)(v26 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
      (*(void (**)(char *, uint64_t))(v27 + 8))(v25, v26);
    v28 = &v5[v9[11]];
    v29 = type metadata accessor for TVSeason(0);
    v30 = *(_QWORD *)(v29 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
      (*(void (**)(char *, uint64_t))(v30 + 8))(v28, v29);
    swift_bridgeObjectRelease();
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  return result;
}

uint64_t *sub_10069DE88(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t, __n128);
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t *v64;

  v6 = *a2;
  if ((unint64_t)*a2 >> 60 != 15)
    sub_10004A06C(*a2);
  *a1 = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (uint64_t *)((char *)a1 + v7);
  v9 = (uint64_t *)((char *)a2 + v7);
  v10 = sub_100007E8C(&qword_10119F030);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9, v10);
  *v8 = *v9;
  if (EnumCaseMultiPayload == 1)
  {
    v64 = a1;
    v12 = v10;
    v13 = (int *)type metadata accessor for Library.Context(0);
    v14 = v13[5];
    v15 = (char *)v8 + v14;
    v16 = (char *)v9 + v14;
    v17 = type metadata accessor for Album(0);
    v18 = *(_QWORD *)(v17 - 8);
    v19 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v18 + 48);
    v20 = swift_retain();
    if (v19(v16, 1, v17, v20))
    {
      v21 = sub_100007E8C(&qword_1011A8FA0);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    v23 = v13[6];
    v24 = (char *)v8 + v23;
    v25 = (char *)v9 + v23;
    v26 = type metadata accessor for Artist(0);
    v27 = *(_QWORD *)(v26 - 8);
    v10 = v12;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    {
      v28 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
    a1 = v64;
    v29 = v13[7];
    v30 = (char *)v8 + v29;
    v31 = (char *)v9 + v29;
    v32 = type metadata accessor for Composer(0);
    v33 = *(_QWORD *)(v32 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
    {
      v34 = sub_100007E8C((uint64_t *)&unk_1011C7310);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
    }
    v35 = v13[8];
    v36 = (char *)v8 + v35;
    v37 = (char *)v9 + v35;
    v38 = type metadata accessor for Genre(0);
    v39 = *(_QWORD *)(v38 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
    {
      v40 = sub_100007E8C(&qword_10119ED08);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v36, v37, v38);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
    }
    v41 = v13[9];
    v42 = (char *)v8 + v41;
    v43 = (char *)v9 + v41;
    v44 = type metadata accessor for Playlist(0);
    v45 = *(_QWORD *)(v44 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
    {
      v46 = sub_100007E8C(&qword_1011A30F0);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v42, v43, v44);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
    }
    v47 = v13[10];
    v48 = (char *)v8 + v47;
    v49 = (char *)v9 + v47;
    v50 = type metadata accessor for TVShow(0);
    v51 = *(_QWORD *)(v50 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
    {
      v52 = sub_100007E8C((uint64_t *)&unk_1011D1410);
      memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v48, v49, v50);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
    }
    v53 = v13[11];
    v54 = (char *)v8 + v53;
    v55 = (char *)v9 + v53;
    v56 = type metadata accessor for TVSeason(0);
    v57 = *(_QWORD *)(v56 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
    {
      v58 = sub_100007E8C((uint64_t *)&unk_1011C7320);
      memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v54, v55, v56);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
    }
    *((_BYTE *)v8 + v13[12]) = *((_BYTE *)v9 + v13[12]);
    *((_BYTE *)v8 + v13[13]) = *((_BYTE *)v9 + v13[13]);
    *((_BYTE *)v8 + v13[14]) = *((_BYTE *)v9 + v13[14]);
    v59 = v13[15];
    v60 = (_QWORD *)((char *)v8 + v59);
    v61 = (_QWORD *)((char *)v9 + v59);
    v62 = v61[1];
    *v60 = *v61;
    v60[1] = v62;
    *(_QWORD *)((char *)v8 + v13[16]) = *(_QWORD *)((char *)v9 + v13[16]);
    *((_BYTE *)v8 + v13[17]) = *((_BYTE *)v9 + v13[17]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v22 = 1;
  }
  else
  {
    swift_retain();
    v22 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v10, v22);
  return a1;
}

uint64_t *sub_10069E368(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t, __n128);
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v63;

  v6 = *a2;
  if ((unint64_t)*a1 >> 60 != 15)
  {
    if (v6 >> 60 == 15)
    {
      sub_10069E8B8(a1);
      *a1 = *a2;
      if (a1 == a2)
        return a1;
    }
    else
    {
      sub_10004A06C(*a2);
      v7 = *a1;
      *a1 = v6;
      sub_1001A7ABC(v7);
      if (a1 == a2)
        return a1;
    }
    goto LABEL_10;
  }
  if (v6 >> 60 != 15)
    sub_10004A06C(*a2);
  *a1 = v6;
  if (a1 != a2)
  {
LABEL_10:
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    sub_10004FF60((uint64_t)a1 + v8, &qword_10119F030);
    v11 = sub_100007E8C(&qword_10119F030);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v11);
    *v9 = *v10;
    if (EnumCaseMultiPayload == 1)
    {
      v63 = v11;
      v13 = (int *)type metadata accessor for Library.Context(0);
      v14 = v13[5];
      v15 = (char *)v9 + v14;
      v16 = (char *)v10 + v14;
      v17 = type metadata accessor for Album(0);
      v18 = *(_QWORD *)(v17 - 8);
      v19 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v18 + 48);
      v20 = swift_retain();
      if (v19(v16, 1, v17, v20))
      {
        v21 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
      v23 = v13[6];
      v24 = (char *)v9 + v23;
      v25 = (char *)v10 + v23;
      v26 = type metadata accessor for Artist(0);
      v27 = *(_QWORD *)(v26 - 8);
      v11 = v63;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
      {
        v28 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
      }
      v29 = v13[7];
      v30 = (char *)v9 + v29;
      v31 = (char *)v10 + v29;
      v32 = type metadata accessor for Composer(0);
      v33 = *(_QWORD *)(v32 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
      {
        v34 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
      }
      v35 = v13[8];
      v36 = (char *)v9 + v35;
      v37 = (char *)v10 + v35;
      v38 = type metadata accessor for Genre(0);
      v39 = *(_QWORD *)(v38 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
      {
        v40 = sub_100007E8C(&qword_10119ED08);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v36, v37, v38);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
      }
      v41 = v13[9];
      v42 = (char *)v9 + v41;
      v43 = (char *)v10 + v41;
      v44 = type metadata accessor for Playlist(0);
      v45 = *(_QWORD *)(v44 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
      {
        v46 = sub_100007E8C(&qword_1011A30F0);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v42, v43, v44);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
      }
      v47 = v13[10];
      v48 = (char *)v9 + v47;
      v49 = (char *)v10 + v47;
      v50 = type metadata accessor for TVShow(0);
      v51 = *(_QWORD *)(v50 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
      {
        v52 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v48, v49, v50);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
      }
      v53 = v13[11];
      v54 = (char *)v9 + v53;
      v55 = (char *)v10 + v53;
      v56 = type metadata accessor for TVSeason(0);
      v57 = *(_QWORD *)(v56 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
      {
        v58 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v54, v55, v56);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
      }
      *((_BYTE *)v9 + v13[12]) = *((_BYTE *)v10 + v13[12]);
      *((_BYTE *)v9 + v13[13]) = *((_BYTE *)v10 + v13[13]);
      *((_BYTE *)v9 + v13[14]) = *((_BYTE *)v10 + v13[14]);
      v59 = v13[15];
      v60 = (_QWORD *)((char *)v9 + v59);
      v61 = (_QWORD *)((char *)v10 + v59);
      *v60 = *v61;
      v60[1] = v61[1];
      *(_QWORD *)((char *)v9 + v13[16]) = *(_QWORD *)((char *)v10 + v13[16]);
      *((_BYTE *)v9 + v13[17]) = *((_BYTE *)v10 + v13[17]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v22 = 1;
    }
    else
    {
      swift_retain();
      v22 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v22);
  }
  return a1;
}

uint64_t *sub_10069E8B8(uint64_t *a1)
{
  destroy for MenuDataSource.Item(a1);
  return a1;
}

uint64_t *sub_10069E8EC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v6 = *a1;
  v7 = *a2;
  if (v6 >> 60 != 15)
  {
    if (v7 >> 60 != 15)
    {
      *a1 = v7;
      sub_1001A7ABC(v6);
      if (a1 == a2)
        return a1;
      goto LABEL_7;
    }
    sub_10069E8B8(a1);
  }
  *a1 = v7;
  if (a1 == a2)
    return a1;
LABEL_7:
  v8 = *(int *)(a3 + 20);
  v9 = (uint64_t *)((char *)a1 + v8);
  v10 = (uint64_t *)((char *)a2 + v8);
  sub_10004FF60((uint64_t)a1 + v8, &qword_10119F030);
  v11 = sub_100007E8C(&qword_10119F030);
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    *v9 = *v10;
    v12 = (int *)type metadata accessor for Library.Context(0);
    v13 = v12[5];
    v14 = (char *)v9 + v13;
    v15 = (char *)v10 + v13;
    v16 = type metadata accessor for Album(0);
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      v18 = sub_100007E8C(&qword_1011A8FA0);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    v19 = v12[6];
    v20 = (char *)v9 + v19;
    v21 = (char *)v10 + v19;
    v22 = type metadata accessor for Artist(0);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    {
      v24 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v20, v21, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    v25 = v12[7];
    v26 = (char *)v9 + v25;
    v27 = (char *)v10 + v25;
    v28 = type metadata accessor for Composer(0);
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      v30 = sub_100007E8C((uint64_t *)&unk_1011C7310);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v26, v27, v28);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
    v31 = v12[8];
    v32 = (char *)v9 + v31;
    v33 = (char *)v10 + v31;
    v34 = type metadata accessor for Genre(0);
    v35 = *(_QWORD *)(v34 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
    {
      v36 = sub_100007E8C(&qword_10119ED08);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v32, v33, v34);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
    }
    v37 = v12[9];
    v38 = (char *)v9 + v37;
    v39 = (char *)v10 + v37;
    v40 = type metadata accessor for Playlist(0);
    v41 = *(_QWORD *)(v40 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
    {
      v42 = sub_100007E8C(&qword_1011A30F0);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v38, v39, v40);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
    }
    v43 = v12[10];
    v44 = (char *)v9 + v43;
    v45 = (char *)v10 + v43;
    v46 = type metadata accessor for TVShow(0);
    v47 = *(_QWORD *)(v46 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
    {
      v48 = sub_100007E8C((uint64_t *)&unk_1011D1410);
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v44, v45, v46);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
    }
    v49 = v12[11];
    v50 = (char *)v9 + v49;
    v51 = (char *)v10 + v49;
    v52 = type metadata accessor for TVSeason(0);
    v53 = *(_QWORD *)(v52 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
    {
      v54 = sub_100007E8C((uint64_t *)&unk_1011C7320);
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v50, v51, v52);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
    }
    *((_BYTE *)v9 + v12[12]) = *((_BYTE *)v10 + v12[12]);
    *((_BYTE *)v9 + v12[13]) = *((_BYTE *)v10 + v12[13]);
    *((_BYTE *)v9 + v12[14]) = *((_BYTE *)v10 + v12[14]);
    *(_OWORD *)((char *)v9 + v12[15]) = *(_OWORD *)((char *)v10 + v12[15]);
    *(_QWORD *)((char *)v9 + v12[16]) = *(_QWORD *)((char *)v10 + v12[16]);
    *((_BYTE *)v9 + v12[17]) = *((_BYTE *)v10 + v12[17]);
    swift_storeEnumTagMultiPayload(v9, v11, 1);
  }
  else
  {
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  return a1;
}

uint64_t sub_10069EDDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10069EDE8);
}

uint64_t sub_10069EDE8(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  BOOL v5;
  unsigned int v6;
  uint64_t v10;

  if ((_DWORD)a2 == 13)
  {
    v4 = *(_QWORD *)a1 >> 60;
    v5 = ((2 * (_DWORD)v4) & 0xE) == 0;
    v6 = ((2 * v4) & 0xE | (v4 >> 3)) ^ 0xF;
    if (v5)
      return 0;
    else
      return v6;
  }
  else
  {
    v10 = sub_100007E8C(&qword_10119EE98);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v10);
  }
}

uint64_t sub_10069EE6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10069EE78);
}

char *sub_10069EE78(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 13)
  {
    *(_QWORD *)result = (unint64_t)((~(_DWORD)a2 >> 1) & 7 | (8 * ~(_DWORD)a2)) << 60;
  }
  else
  {
    v7 = sub_100007E8C(&qword_10119EE98);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

void sub_10069EEF8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = "\b";
  sub_10069EF7C(319, (unint64_t *)&qword_10119F6B0, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
  }
}

void sub_10069EF7C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = type metadata accessor for Library.Context(255);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_10069EFD4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t WitnessTable;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = _s32AutoupdatingResponseViewModifierVMa(255, *a1, a1[1], a4);
  WitnessTable = swift_getWitnessTable(&unk_100EC9EF8, v4);
  v6 = type metadata accessor for _ViewModifier_Content(255, v4, WitnessTable);
  v7 = type metadata accessor for Library.Context(255);
  v8 = swift_getWitnessTable(&protocol conformance descriptor for _ViewModifier_Content<A>, v6);
  v9 = sub_100048748(&qword_1011AA390, type metadata accessor for Library.Context, (uint64_t)&protocol conformance descriptor for Library.Context);
  v13 = v6;
  v14 = v7;
  v15 = v8;
  v16 = v9;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v13, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v11 = type metadata accessor for ModifiedContent(255, OpaqueTypeMetadata2, &type metadata for _AppearanceActionModifier);
  v13 = v6;
  v14 = v7;
  v15 = v8;
  v16 = v9;
  swift_getOpaqueTypeConformance2(&v13, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v11);
}

unint64_t sub_10069F0F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C2C50;
  if (!qword_1011C2C50)
  {
    v1 = sub_100044B54(&qword_1011C2AB8);
    sub_10069D2B4();
    sub_100049F28(&qword_10119EF58, &qword_10119EF60, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C2C50);
  }
  return result;
}

uint64_t sub_10069F178(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FA9940, 1);
}

unint64_t sub_10069F188()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C2D20;
  if (!qword_1011C2D20)
  {
    v1 = sub_100044B54(&qword_1011C2C68);
    sub_10015FD08(&qword_1011C2D28, &qword_1011C2D18, (void (*)(void))sub_10069F22C, (void (*)(void))sub_10069F548);
    sub_100049F28(&qword_10119F010, &qword_10119EEB8, (uint64_t)"ٴ ");
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C2D20);
  }
  return result;
}

uint64_t sub_10069F22C()
{
  return sub_10015FD08(&qword_1011C2D30, &qword_1011C2D10, (void (*)(void))sub_10069F250, (void (*)(void))sub_10069F394);
}

uint64_t sub_10069F250()
{
  return sub_10015FD08(&qword_1011C2D38, &qword_1011C2D08, (void (*)(void))sub_10069F274, (void (*)(void))sub_10069F2F8);
}

unint64_t sub_10069F274()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C2D40;
  if (!qword_1011C2D40)
  {
    v1 = sub_100044B54(&qword_1011C2D00);
    sub_1000A0460();
    sub_100048748(&qword_1011C2D48, _s11ArtistsViewVMa, (uint64_t)"ݷ ");
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C2D40);
  }
  return result;
}

unint64_t sub_10069F2F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C2D50;
  if (!qword_1011C2D50)
  {
    v1 = sub_100044B54(&qword_1011C2CD8);
    sub_100048748(&qword_1011C2D58, _s16CompilationsViewVMa, (uint64_t)&unk_100EB45E4);
    sub_100048748(&qword_1011C2D60, _s13ComposersViewVMa, (uint64_t)&unk_100EBAB30);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C2D50);
  }
  return result;
}

uint64_t sub_10069F394()
{
  return sub_10015FD08(&qword_1011C2D68, &qword_1011C2CC8, (void (*)(void))sub_10069F3B8, (void (*)(void))sub_10069F480);
}

unint64_t sub_10069F3B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C2D70;
  if (!qword_1011C2D70)
  {
    v1 = sub_100044B54(&qword_1011C2CC0);
    sub_100048748(&qword_1011C2D78, _s10GenresViewVMa, (uint64_t)&unk_100ECCE98);
    sub_10069F43C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C2D70);
  }
  return result;
}

unint64_t sub_10069F43C()
{
  unint64_t result;

  result = qword_1011C2D80;
  if (!qword_1011C2D80)
  {
    result = swift_getWitnessTable(&unk_100ED0504, &_s14MadeForYouViewVN);
    atomic_store(result, (unint64_t *)&qword_1011C2D80);
  }
  return result;
}

unint64_t sub_10069F480()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C2D88;
  if (!qword_1011C2D88)
  {
    v1 = sub_100044B54(&qword_1011C2CA8);
    sub_100048748(&qword_1011C2D90, _s15MusicVideosViewVMa, (uint64_t)&unk_100EA93E0);
    sub_10069F504();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C2D88);
  }
  return result;
}

unint64_t sub_10069F504()
{
  unint64_t result;

  result = qword_1011C2D98;
  if (!qword_1011C2D98)
  {
    result = swift_getWitnessTable(&unk_100ED04B4, &_s13PlaylistsViewVN);
    atomic_store(result, (unint64_t *)&qword_1011C2D98);
  }
  return result;
}

uint64_t sub_10069F548()
{
  return sub_10015FD08(&qword_1011C2DA0, &qword_1011C2C98, (void (*)(void))sub_10069F56C, (void (*)(void))sub_10069F608);
}

unint64_t sub_10069F56C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C2DA8;
  if (!qword_1011C2DA8)
  {
    v1 = sub_100044B54(&qword_1011C2C90);
    sub_100048748(&qword_1011C2DB0, _s17RecentlyAddedViewVMa, (uint64_t)&unk_100EBBE50);
    sub_100048748(&qword_1011C2DB8, _s9ShowsViewVMa, (uint64_t)&unk_100ED31A0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C2DA8);
  }
  return result;
}

unint64_t sub_10069F608()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C2DC0;
  if (!qword_1011C2DC0)
  {
    v1 = sub_100044B54(&qword_1011C2C78);
    sub_100048748(&qword_1011C2DC8, _s9SongsViewVMa, (uint64_t)&unk_100ECE848);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C2DC0);
  }
  return result;
}

ValueMetadata *_s6HeaderVMa()
{
  return &_s6HeaderVN;
}

unint64_t sub_10069F6B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C2DD0;
  if (!qword_1011C2DD0)
  {
    v1 = sub_100044B54(&qword_1011C2DD8);
    sub_10069F188();
    sub_100048748(&qword_1011B9928, _s30SubscriptionBasedNoContentViewVMa, (uint64_t)&unk_100EC0CB8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C2DD0);
  }
  return result;
}

uint64_t sub_10069F734(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FA9968, 1);
}

double sub_10069F744(_OWORD *a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)a1 + 105) = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t sub_10069F760()
{
  return sub_1000E4570(&qword_1011C2DE8, &qword_1011C2DE0, (void (*)(void))sub_10069F794, (uint64_t)&protocol conformance descriptor for <A> A?);
}

uint64_t sub_10069F794()
{
  return sub_10005610C(&qword_1011C2DF0, &qword_1011C2DF8, (void (*)(void))sub_1000E45D4);
}

_QWORD *sub_10069F7B8(uint64_t a1)
{
  int64_t v2;
  _QWORD *result;

  v2 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (v2)
  {
    sub_10035C6F8(0, v2, 0);
    __asm { BR              X9 }
  }
  return result;
}

_QWORD *sub_10069FA0C(uint64_t a1)
{
  int64_t v1;
  _QWORD *result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  char v16;
  char v17;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  sub_10035C6F8(0, v1, 0);
  result = (_QWORD *)sub_100837CE0(a1);
  v4 = (uint64_t)result;
  v6 = v5;
  v8 = v7 & 1;
  while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << *(_BYTE *)(a1 + 32))
  {
    if (((*(_QWORD *)(a1 + 56 + (((unint64_t)v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) == 0)
      goto LABEL_13;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v6)
      goto LABEL_14;
    v17 = v8;
    v9 = Library.Menu.Identifier.rawValue.getter(*(_BYTE *)(*(_QWORD *)(a1 + 48) + v4));
    v11 = v10;
    v13 = _swiftEmptyArrayStorage[2];
    v12 = _swiftEmptyArrayStorage[3];
    if (v13 >= v12 >> 1)
      sub_10035C6F8(v12 > 1, v13 + 1, 1);
    _swiftEmptyArrayStorage[2] = v13 + 1;
    v14 = &_swiftEmptyArrayStorage[2 * v13];
    v14[4] = v9;
    v14[5] = v11;
    result = (_QWORD *)sub_100837D84(v4, v6, v17 & 1, a1);
    v4 = (uint64_t)result;
    v6 = v15;
    v8 = v16 & 1;
    if (!--v1)
    {
      sub_10016AE14((uint64_t)result, v15, v8);
      return _swiftEmptyArrayStorage;
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

void sub_10069FB84(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18[3];

  v2 = *(_QWORD *)(a1 + 16);
  v3 = sub_1003F0B70();
  v4 = 0;
  v18[2] = Set.init(minimumCapacity:)(v2, &type metadata for MusicItemID, v3);
  v5 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v4 << 6);
      goto LABEL_5;
    }
    v15 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v15 >= v9)
      goto LABEL_23;
    v16 = *(_QWORD *)(v5 + 8 * v15);
    ++v4;
    if (!v16)
    {
      v4 = v15 + 1;
      if (v15 + 1 >= v9)
        goto LABEL_23;
      v16 = *(_QWORD *)(v5 + 8 * v4);
      if (!v16)
      {
        v4 = v15 + 2;
        if (v15 + 2 >= v9)
          goto LABEL_23;
        v16 = *(_QWORD *)(v5 + 8 * v4);
        if (!v16)
        {
          v4 = v15 + 3;
          if (v15 + 3 >= v9)
            goto LABEL_23;
          v16 = *(_QWORD *)(v5 + 8 * v4);
          if (!v16)
            break;
        }
      }
    }
LABEL_22:
    v8 = (v16 - 1) & v16;
    v11 = __clz(__rbit64(v16)) + (v4 << 6);
LABEL_5:
    v12 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
    v13 = *v12;
    v14 = v12[1];
    swift_bridgeObjectRetain();
    sub_100195838(v18, v13, v14);
    swift_bridgeObjectRelease();
  }
  v17 = v15 + 4;
  if (v17 >= v9)
  {
LABEL_23:
    swift_release();
    return;
  }
  v16 = *(_QWORD *)(v5 + 8 * v17);
  if (v16)
  {
    v4 = v17;
    goto LABEL_22;
  }
  while (1)
  {
    v4 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v4 >= v9)
      goto LABEL_23;
    v16 = *(_QWORD *)(v5 + 8 * v4);
    ++v17;
    if (v16)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

void sub_10069FD1C(uint64_t a1, __n128 a2)
{
  int64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  id v29[2];

  v2 = a1;
  v3 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 >= 0)
      a1 &= 0xFFFFFFFFFFFFFF8uLL;
    v4 = __CocoaDictionary.count.getter(a1, a2);
  }
  else
  {
    v4 = *(_QWORD *)(a1 + 16);
  }
  v5 = sub_10004A07C(0, &qword_1011A3AF8, MPCPlayerPath_ptr);
  v6 = sub_1006A1B64();
  v26 = v5;
  v29[1] = (id)Set.init(minimumCapacity:)(v4, v5, v6);
  if (v3)
  {
    if (v2 < 0)
      v7 = v2;
    else
      v7 = v2 & 0xFFFFFFFFFFFFFF8;
    v8 = __CocoaDictionary.makeIterator()(v7);
    v27 = 0;
    v9 = 0;
    v10 = 0;
    v2 = v8 | 0x8000000000000000;
  }
  else
  {
    v11 = -1 << *(_BYTE *)(v2 + 32);
    v27 = v2 + 64;
    v9 = ~v11;
    v12 = -v11;
    if (v12 < 64)
      v13 = ~(-1 << v12);
    else
      v13 = -1;
    v10 = v13 & *(_QWORD *)(v2 + 64);
  }
  v14 = 0;
  v15 = (unint64_t)(v9 + 64) >> 6;
  while (v2 < 0)
  {
    v23 = __CocoaDictionary.Iterator.nextKey()();
    if (!v23)
      goto LABEL_40;
    v25 = v23;
    v28 = v23;
    swift_unknownObjectRetain(v23, v24);
    swift_dynamicCast(v29, &v28, (char *)&type metadata for Swift.AnyObject + 8, v26, 7);
    v19 = v29[0];
    swift_unknownObjectRelease(v25);
    if (!v19)
      goto LABEL_40;
    v16 = v10;
    v18 = v14;
LABEL_18:
    sub_100196F5C((Swift::Int *)v29, v19);

    v14 = v18;
    v10 = v16;
  }
  if (v10)
  {
    v16 = (v10 - 1) & v10;
    v17 = __clz(__rbit64(v10)) | (v14 << 6);
    v18 = v14;
LABEL_17:
    v19 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v17);
    if (!v19)
      goto LABEL_40;
    goto LABEL_18;
  }
  v20 = v14 + 1;
  if (!__OFADD__(v14, 1))
  {
    if (v20 >= v15)
      goto LABEL_40;
    v21 = *(_QWORD *)(v27 + 8 * v20);
    v18 = v14 + 1;
    if (!v21)
    {
      v18 = v14 + 2;
      if (v14 + 2 >= v15)
        goto LABEL_40;
      v21 = *(_QWORD *)(v27 + 8 * v18);
      if (!v21)
      {
        v18 = v14 + 3;
        if (v14 + 3 >= v15)
          goto LABEL_40;
        v21 = *(_QWORD *)(v27 + 8 * v18);
        if (!v21)
        {
          v18 = v14 + 4;
          if (v14 + 4 >= v15)
            goto LABEL_40;
          v21 = *(_QWORD *)(v27 + 8 * v18);
          if (!v21)
          {
            v18 = v14 + 5;
            if (v14 + 5 >= v15)
              goto LABEL_40;
            v21 = *(_QWORD *)(v27 + 8 * v18);
            if (!v21)
            {
              v22 = v14 + 6;
              while (v15 != v22)
              {
                v21 = *(_QWORD *)(v27 + 8 * v22++);
                if (v21)
                {
                  v18 = v22 - 1;
                  goto LABEL_36;
                }
              }
LABEL_40:
              sub_10004FA7C(v2);
              return;
            }
          }
        }
      }
    }
LABEL_36:
    v16 = (v21 - 1) & v21;
    v17 = __clz(__rbit64(v21)) + (v18 << 6);
    goto LABEL_17;
  }
  __break(1u);
}

id sub_10069FFB4(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  char v11;

  v3 = sub_100007E8C((uint64_t *)&unk_1011B5660);
  __chkstk_darwin(v3);
  v4 = _s9PlaylistsV5ScopeVMa(0);
  __chkstk_darwin(v4);
  __chkstk_darwin(v5);
  v6 = _s6AlbumsV5ScopeOMa(0);
  __chkstk_darwin(v6);
  v11 = 5;
  v7 = sub_10004D63C();
  if ((FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v7) & 1) != 0)
  {
    v8 = sub_10018D478();
    UITraitCollection.subscript.getter(&v10, &type metadata for LibraryFilterTrait, &type metadata for LibraryFilterTrait, v8);
    sub_1007607C4(v10);
    swift_bridgeObjectRelease();
    __asm { BR              X10 }
  }
  return objc_msgSend(objc_allocWithZone((Class)UIViewController), "init");
}

void sub_1006A016C()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v5 = objc_msgSend(v3, "horizontalSizeClass");
  v6 = type metadata accessor for Playlist.Folder(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v1, 1, 1, v6);
  if (qword_10119BE68 != -1)
    swift_once(&qword_10119BE68, sub_10031EF94);
  v7 = qword_10124CD80;
  sub_1006A1CC8(v1, (uint64_t)v4 + *(int *)(v2 + 20));
  *v4 = v7;
  swift_bridgeObjectRetain();
  sub_1006A1D10(v1);
  v8 = objc_allocWithZone((Class)type metadata accessor for LibraryPlaylistsViewController(0));
  sub_1003388A4(v4, v0 & 1, v5 != (id)2);
  JUMPOUT(0x1006A014CLL);
}

void sub_1006A03C0(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  Swift::Int v12;

  v3 = v2;
  v6 = type metadata accessor for UITraitOverrides(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, v3, v6);
  v7 = Library.Menu.Identifier.rawValue.getter(a1);
  v9 = v8;
  if (v7 == 0xD000000000000026 && v8 == 0x8000000100E2B0E0)
  {
    swift_bridgeObjectRelease(0x8000000100E2B0E0);
  }
  else
  {
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, 0xD000000000000026, 0x8000000100E2B0E0, 0);
    swift_bridgeObjectRelease(v9);
    if ((v10 & 1) == 0)
      return;
  }
  v12 = sub_10004729C((uint64_t)&off_1010AA1C0);
  v11 = sub_10018D478();
  dispatch thunk of UIMutableTraits.subscript.setter(&v12, &type metadata for LibraryFilterTrait, &type metadata for LibraryFilterTrait, v11, v6, &protocol witness table for UITraitOverrides);
}

_QWORD *NSUserDefaults.libraryMenuOrderedIdentifiers.getter()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  NSUserDefaults.libraryMenuRevision.getter();
  v1 = v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = sub_10069F7B8(v1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t NSUserDefaults.libraryMenuSelectedIdentifiers.getter()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  NSUserDefaults.libraryMenuRevision.getter();
  v1 = v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = sub_10069FA0C(v1);
  swift_bridgeObjectRelease();
  v3 = sub_1006A14E8((uint64_t)v2);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1006A0704(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  unint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  if (a2)
  {
    sub_100007E8C((uint64_t *)&unk_10119D3D0);
    v4 = static _SetStorage.convert(_:capacity:)(a1, a2);
    v25 = v4;
    v5 = __CocoaSet.makeIterator()(a1);
    v6 = __CocoaSet.Iterator.next()(v5);
    if (v6)
    {
      v7 = v6;
      v8 = type metadata accessor for AnyCancellable(0);
      do
      {
        v23 = v7;
        swift_dynamicCast(&v24, &v23, (char *)&type metadata for Swift.AnyObject + 8, v8, 7);
        v4 = v25;
        v18 = *(_QWORD *)(v25 + 16);
        if (*(_QWORD *)(v25 + 24) <= v18)
        {
          sub_100198B44(v18 + 1);
          v4 = v25;
        }
        v9 = v24;
        v23 = v24;
        v10 = *(_QWORD *)(v4 + 40);
        v11 = sub_100048748(&qword_1011A4010, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
        result = dispatch thunk of Hashable._rawHashValue(seed:)(v10, v8, v11);
        v13 = v4 + 56;
        v14 = -1 << *(_BYTE *)(v4 + 32);
        v15 = result & ~v14;
        v16 = v15 >> 6;
        if (((-1 << v15) & ~*(_QWORD *)(v4 + 56 + 8 * (v15 >> 6))) != 0)
        {
          v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v4 + 56 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v19 = 0;
          v20 = (unint64_t)(63 - v14) >> 6;
          do
          {
            if (++v16 == v20 && (v19 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v21 = v16 == v20;
            if (v16 == v20)
              v16 = 0;
            v19 |= v21;
            v22 = *(_QWORD *)(v13 + 8 * v16);
          }
          while (v22 == -1);
          v17 = __clz(__rbit64(~v22)) + (v16 << 6);
        }
        *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
        *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v17) = v9;
        ++*(_QWORD *)(v4 + 16);
        v7 = __CocoaSet.Iterator.next()(result);
      }
      while (v7);
    }
    swift_release(v5);
  }
  else
  {
    swift_unknownObjectRelease(a1);
    return (uint64_t)&_swiftEmptySetSingleton;
  }
  return v4;
}

Swift::Int sub_1006A0924(uint64_t a1, uint64_t a2)
{
  return sub_1006A0B74(a1, a2, &qword_1011A3CE8, &qword_1011A4630, UIScene_ptr, (void (*)(unint64_t))sub_100199FC4);
}

Swift::Int sub_1006A0948(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::UInt v10;
  Swift::Int result;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[9];
  uint64_t v23;
  uint64_t v24;

  if (a2)
  {
    sub_100007E8C(&qword_10119D430);
    v4 = static _SetStorage.convert(_:capacity:)(a1, a2);
    v24 = v4;
    v5 = __CocoaSet.makeIterator()(a1);
    v6 = __CocoaSet.Iterator.next()(v5);
    if (v6)
    {
      v7 = v6;
      v8 = type metadata accessor for ImpressionTracker();
      do
      {
        v22[0] = v7;
        swift_dynamicCast(&v23, v22, (char *)&type metadata for Swift.AnyObject + 8, v8, 7);
        v4 = v24;
        v17 = *(_QWORD *)(v24 + 16);
        if (*(_QWORD *)(v24 + 24) <= v17)
        {
          sub_100199FD0(v17 + 1);
          v4 = v24;
        }
        v9 = v23;
        Hasher.init(_seed:)(v22, *(_QWORD *)(v4 + 40));
        v10 = sub_10047E924();
        Hasher._combine(_:)(v10);
        result = Hasher._finalize()();
        v12 = v4 + 56;
        v13 = -1 << *(_BYTE *)(v4 + 32);
        v14 = result & ~v13;
        v15 = v14 >> 6;
        if (((-1 << v14) & ~*(_QWORD *)(v4 + 56 + 8 * (v14 >> 6))) != 0)
        {
          v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v4 + 56 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v18 = 0;
          v19 = (unint64_t)(63 - v13) >> 6;
          do
          {
            if (++v15 == v19 && (v18 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v20 = v15 == v19;
            if (v15 == v19)
              v15 = 0;
            v18 |= v20;
            v21 = *(_QWORD *)(v12 + 8 * v15);
          }
          while (v21 == -1);
          v16 = __clz(__rbit64(~v21)) + (v15 << 6);
        }
        *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
        *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v16) = v9;
        ++*(_QWORD *)(v4 + 16);
        v7 = __CocoaSet.Iterator.next()(result);
      }
      while (v7);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease(a1);
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v4;
}

Swift::Int sub_1006A0B50(uint64_t a1, uint64_t a2)
{
  return sub_1006A0B74(a1, a2, &qword_1011A3CD0, (unint64_t *)&qword_10119D470, UIViewController_ptr, (void (*)(unint64_t))sub_10019A27C);
}

Swift::Int sub_1006A0B74(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4, _QWORD *a5, void (*a6)(unint64_t))
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  Swift::Int result;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  if (a2)
  {
    sub_100007E8C(a3);
    v11 = static _SetStorage.convert(_:capacity:)(a1, a2);
    v30 = v11;
    v12 = __CocoaSet.makeIterator()(a1);
    v13 = __CocoaSet.Iterator.next()(v12);
    if (v13)
    {
      v14 = v13;
      v15 = sub_10004A07C(0, a4, a5);
      do
      {
        v28 = v14;
        swift_dynamicCast(&v29, &v28, (char *)&type metadata for Swift.AnyObject + 8, v15, 7);
        v11 = v30;
        v23 = *(_QWORD *)(v30 + 16);
        if (*(_QWORD *)(v30 + 24) <= v23)
        {
          a6(v23 + 1);
          v11 = v30;
        }
        v16 = v29;
        result = NSObject._rawHashValue(seed:)(*(_QWORD *)(v11 + 40));
        v18 = v11 + 56;
        v19 = -1 << *(_BYTE *)(v11 + 32);
        v20 = result & ~v19;
        v21 = v20 >> 6;
        if (((-1 << v20) & ~*(_QWORD *)(v11 + 56 + 8 * (v20 >> 6))) != 0)
        {
          v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 56 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v24 = 0;
          v25 = (unint64_t)(63 - v19) >> 6;
          do
          {
            if (++v21 == v25 && (v24 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v26 = v21 == v25;
            if (v21 == v25)
              v21 = 0;
            v24 |= v26;
            v27 = *(_QWORD *)(v18 + 8 * v21);
          }
          while (v27 == -1);
          v22 = __clz(__rbit64(~v27)) + (v21 << 6);
        }
        *(_QWORD *)(v18 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
        *(_QWORD *)(*(_QWORD *)(v11 + 48) + 8 * v22) = v16;
        ++*(_QWORD *)(v11 + 16);
        v14 = __CocoaSet.Iterator.next()(result);
      }
      while (v14);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease(a1);
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v11;
}

Swift::Int sub_1006A0D70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Swift::Int result;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  BOOL v23;
  uint64_t v24;
  _QWORD v25[9];
  uint64_t v26;
  uint64_t v27;

  if (a2)
  {
    sub_100007E8C(&qword_10119D420);
    v4 = static _SetStorage.convert(_:capacity:)(a1, a2);
    v27 = v4;
    v5 = __CocoaSet.makeIterator()(a1);
    v6 = __CocoaSet.Iterator.next()(v5);
    if (v6)
    {
      v7 = v6;
      v8 = type metadata accessor for TabNavigationController.TabElementStack();
      do
      {
        v25[0] = v7;
        swift_dynamicCast(&v26, v25, (char *)&type metadata for Swift.AnyObject + 8, v8, 7);
        v4 = v27;
        v20 = *(_QWORD *)(v27 + 16);
        if (*(_QWORD *)(v27 + 24) <= v20)
        {
          sub_10019A720(v20 + 1);
          v4 = v27;
        }
        v9 = v26;
        Hasher.init(_seed:)(v25, *(_QWORD *)(v4 + 40));
        v10 = objc_msgSend(*(id *)(v9 + 16), "_identifier");
        v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
        v13 = v12;

        String.hash(into:)(v25, v11, v13);
        swift_bridgeObjectRelease();
        result = Hasher._finalize()();
        v15 = v4 + 56;
        v16 = -1 << *(_BYTE *)(v4 + 32);
        v17 = result & ~v16;
        v18 = v17 >> 6;
        if (((-1 << v17) & ~*(_QWORD *)(v4 + 56 + 8 * (v17 >> 6))) != 0)
        {
          v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v4 + 56 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v21 = 0;
          v22 = (unint64_t)(63 - v16) >> 6;
          do
          {
            if (++v18 == v22 && (v21 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v23 = v18 == v22;
            if (v18 == v22)
              v18 = 0;
            v21 |= v23;
            v24 = *(_QWORD *)(v15 + 8 * v18);
          }
          while (v24 == -1);
          v19 = __clz(__rbit64(~v24)) + (v18 << 6);
        }
        *(_QWORD *)(v15 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
        *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v19) = v9;
        ++*(_QWORD *)(v4 + 16);
        v7 = __CocoaSet.Iterator.next()(result);
      }
      while (v7);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease(a1);
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v4;
}

Swift::Int sub_1006A0FAC(uint64_t a1, uint64_t a2)
{
  return sub_1006A0B74(a1, a2, &qword_1011A3B00, &qword_1011A3AF8, MPCPlayerPath_ptr, (void (*)(unint64_t))sub_10019AF34);
}

unint64_t sub_1006A0FD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;

  v4 = *(_QWORD *)(a2 + 40);
  v5 = type metadata accessor for AnyCancellable(0);
  v6 = sub_100048748(&qword_1011A4010, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
  v7 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, v6);
  result = _HashTable.nextHole(atOrAfter:)(v7 & ~(-1 << *(_BYTE *)(a2 + 32)), a2 + 56, ~(-1 << *(_BYTE *)(a2 + 32)));
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

unint64_t sub_1006A10A0(uint64_t a1, uint64_t a2)
{
  Swift::UInt v4;
  Swift::Int v5;
  unint64_t result;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, *(_QWORD *)(a2 + 40));
  v4 = sub_10047E924();
  Hasher._combine(_:)(v4);
  v5 = Hasher._finalize()();
  result = _HashTable.nextHole(atOrAfter:)(v5 & ~(-1 << *(_BYTE *)(a2 + 32)), a2 + 56, ~(-1 << *(_BYTE *)(a2 + 32)));
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

unint64_t sub_1006A1144(uint64_t a1, uint64_t a2)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Swift::Int v8;
  unint64_t result;
  _QWORD v10[9];

  Hasher.init(_seed:)(v10, *(_QWORD *)(a2 + 40));
  v4 = objc_msgSend(*(id *)(a1 + 16), "_identifier");
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v7 = v6;

  String.hash(into:)(v10, v5, v7);
  swift_bridgeObjectRelease(v7);
  v8 = Hasher._finalize()();
  result = _HashTable.nextHole(atOrAfter:)(v8 & ~(-1 << *(_BYTE *)(a2 + 32)), a2 + 56, ~(-1 << *(_BYTE *)(a2 + 32)));
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

unint64_t sub_1006A1224(uint64_t a1, uint64_t a2)
{
  Swift::Int v4;
  unint64_t result;

  v4 = NSObject._rawHashValue(seed:)(*(_QWORD *)(a2 + 40));
  result = _HashTable.nextHole(atOrAfter:)(v4 & ~(-1 << *(_BYTE *)(a2 + 32)), a2 + 56, ~(-1 << *(_BYTE *)(a2 + 32)));
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

uint64_t sub_1006A12A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;

  v2 = type metadata accessor for AudioVariant(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v16 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  v11 = sub_100048748(&qword_1011A3CF8, v10, (uint64_t)&protocol conformance descriptor for AudioVariant);
  result = Set.init(minimumCapacity:)(v9, v2, v11);
  v17 = result;
  if (v9)
  {
    v13 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v14 = *(_QWORD *)(v3 + 72);
    v15 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    do
    {
      v15(v6, v13, v2);
      sub_100193CCC((uint64_t)v8, (uint64_t)v6);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      v13 += v14;
      --v9;
    }
    while (v9);
    return v17;
  }
  return result;
}

uint64_t sub_1006A13CC(uint64_t a1)
{
  return sub_1006A1404(a1, (uint64_t (*)(void))sub_1004FFA30, (uint64_t)&type metadata for PlaylistEditing.Field, (void (*)(char *, _QWORD))sub_10019539C);
}

uint64_t sub_1006A13E8(uint64_t a1)
{
  return sub_1006A1404(a1, (uint64_t (*)(void))sub_1006A1D50, (uint64_t)&type metadata for TabIdentifier, (void (*)(char *, _QWORD))sub_1001941A4);
}

uint64_t sub_1006A1404(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, void (*a4)(char *, _QWORD))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  unsigned __int8 *v10;
  unsigned int v11;
  char v12;
  uint64_t v13;

  v7 = *(_QWORD *)(a1 + 16);
  v8 = a2();
  result = Set.init(minimumCapacity:)(v7, a3, v8);
  v13 = result;
  if (v7)
  {
    v10 = (unsigned __int8 *)(a1 + 32);
    do
    {
      v11 = *v10++;
      a4(&v12, v11);
      --v7;
    }
    while (v7);
    return v13;
  }
  return result;
}

uint64_t sub_1006A1478(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t result;
  char *v5;
  char v6;
  char v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = sub_1006A1B20();
  result = Set.init(minimumCapacity:)(v2, &type metadata for PlaybackMode, v3);
  v8 = result;
  if (v2)
  {
    v5 = (char *)(a1 + 32);
    do
    {
      v6 = *v5++;
      sub_1001947EC(&v7, v6);
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1006A14E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7[2];
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = Set.init(minimumCapacity:)(v2, &type metadata for String, &protocol witness table for String);
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_100194BF0(v7, v5, v6);
      swift_bridgeObjectRelease(v7[1]);
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1006A157C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t result;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[13];
  uint64_t v13;
  _OWORD v14[6];
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = sub_1002F3D74();
  result = Set.init(minimumCapacity:)(v2, &type metadata for Lyrics.TextLine, v3);
  v13 = result;
  if (v2)
  {
    v5 = a1 + 32;
    do
    {
      v6 = *(_OWORD *)(v5 + 80);
      v14[4] = *(_OWORD *)(v5 + 64);
      v14[5] = v6;
      v15 = *(_QWORD *)(v5 + 96);
      v7 = *(_OWORD *)(v5 + 16);
      v14[0] = *(_OWORD *)v5;
      v14[1] = v7;
      v8 = *(_OWORD *)(v5 + 48);
      v14[2] = *(_OWORD *)(v5 + 32);
      v14[3] = v8;
      sub_1001A8568(v14);
      sub_100195064((uint64_t)v12, (uint64_t)v14);
      v9 = v12[4];
      v10 = v12[8];
      v11 = v12[10];
      swift_release(v12[12]);
      swift_release(v11);
      swift_release(v10);
      swift_bridgeObjectRelease(v9);
      v5 += 104;
      --v2;
    }
    while (v2);
    return v13;
  }
  return result;
}

uint64_t sub_1006A164C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  Swift::Int v17;
  unint64_t v18;
  uint64_t v19;
  Swift::UInt v20;
  Swift::Int v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  int isUniquelyReferenced_nonNull_native;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  Swift::Int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[9];
  uint64_t v39;

  v2 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
LABEL_51:
    if (a1 < 0)
      v36 = a1;
    else
      v36 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v3 = _CocoaArrayWrapper.endIndex.getter(v36);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = type metadata accessor for ImpressionTracker();
  v5 = sub_100048748((unint64_t *)&unk_1011C7C60, (uint64_t (*)(uint64_t))type metadata accessor for ImpressionTracker, (uint64_t)&unk_100EBD34C);
  v37 = v4;
  v6 = Set.init(minimumCapacity:)(v3, v4, v5);
  if (v2)
  {
    if (a1 < 0)
      v7 = a1;
    else
      v7 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v2 = _CocoaArrayWrapper.endIndex.getter(v7);
    swift_bridgeObjectRelease(a1);
    if (!v2)
      return v6;
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v2)
      return v6;
  }
  v8 = 0;
  while (1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v8, a1);
      v11 = __OFADD__(v8++, 1);
      if (v11)
        goto LABEL_47;
    }
    else
    {
      if (v8 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_48;
      v10 = *(_QWORD *)(a1 + 32 + 8 * v8);
      swift_retain();
      v11 = __OFADD__(v8++, 1);
      if (v11)
      {
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
        goto LABEL_51;
      }
    }
    if ((v6 & 0xC000000000000001) != 0)
    {
      if (v6 < 0)
        v12 = v6;
      else
        v12 = v6 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v13 = swift_retain();
      v14 = __CocoaSet.member(for:)(v13);
      v15 = swift_release();
      if (v14)
      {
        swift_bridgeObjectRelease(v6);
        swift_release();
        v39 = v14;
        swift_unknownObjectRetain(v14, v9);
        swift_dynamicCast(v38, &v39, (char *)&type metadata for Swift.AnyObject + 8, v37, 7);
        swift_release();
        swift_unknownObjectRelease(v14);
      }
      else
      {
        v16 = __CocoaSet.count.getter(v12, v15);
        if (__OFADD__(v16, 1))
          goto LABEL_50;
        v17 = sub_1006A0948(v12, v16 + 1);
        v38[0] = v17;
        v18 = *(_QWORD *)(v17 + 16);
        if (*(_QWORD *)(v17 + 24) <= v18)
        {
          v29 = v18 + 1;
          swift_retain();
          sub_100199FD0(v29);
          v19 = v38[0];
        }
        else
        {
          v19 = v17;
          swift_retain();
        }
        sub_1006A10A0(v10, v19);
        swift_release();
        swift_bridgeObjectRelease(v6);
        v6 = v19;
      }
      goto LABEL_12;
    }
    Hasher.init(_seed:)(v38, *(_QWORD *)(v6 + 40));
    v20 = sub_10047E924();
    Hasher._combine(_:)(v20);
    v21 = Hasher._finalize()();
    v22 = -1 << *(_BYTE *)(v6 + 32);
    v23 = v21 & ~v22;
    if (((*(_QWORD *)(v6 + 56 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) != 0)
    {
      v24 = ~v22;
      while (sub_10047E924() != *(_QWORD *)(v10 + 56))
      {
        v23 = (v23 + 1) & v24;
        if (((*(_QWORD *)(v6 + 56 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) == 0)
          goto LABEL_31;
      }
      swift_release();
      goto LABEL_12;
    }
LABEL_31:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v6);
    v39 = v6;
    v26 = *(_QWORD *)(v6 + 16);
    v27 = *(_QWORD *)(v6 + 24);
    swift_retain();
    if (v27 > v26)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_10019EE30();
        v6 = v39;
      }
      goto LABEL_44;
    }
    v28 = v26 + 1;
    if (isUniquelyReferenced_nonNull_native)
      sub_100199FD0(v28);
    else
      sub_1001A1DF8(v28);
    v6 = v39;
    Hasher.init(_seed:)(v38, *(_QWORD *)(v39 + 40));
    Hasher._combine(_:)(*(_QWORD *)(v10 + 56));
    v30 = Hasher._finalize()();
    v31 = -1 << *(_BYTE *)(v6 + 32);
    v23 = v30 & ~v31;
    if (((*(_QWORD *)(v6 + 56 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) != 0)
      break;
LABEL_44:
    *(_QWORD *)(v6 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v23;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v23) = v10;
    v33 = *(_QWORD *)(v6 + 16);
    v11 = __OFADD__(v33, 1);
    v34 = v33 + 1;
    if (v11)
      goto LABEL_49;
    *(_QWORD *)(v6 + 16) = v34;
    swift_release();
    swift_bridgeObjectRelease(0x8000000000000000);
LABEL_12:
    if (v8 == v2)
      return v6;
  }
  v32 = ~v31;
  while (sub_10047E924() != *(_QWORD *)(v10 + 56))
  {
    v23 = (v23 + 1) & v32;
    if (((*(_QWORD *)(v6 + 56 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) == 0)
      goto LABEL_44;
  }
  result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v37);
  __break(1u);
  return result;
}

uint64_t sub_1006A1A8C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t result;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = sub_1003F0B70();
  result = Set.init(minimumCapacity:)(v2, &type metadata for MusicItemID, v3);
  v9 = result;
  if (v2)
  {
    v5 = (uint64_t *)(a1 + 40);
    do
    {
      v6 = *(v5 - 1);
      v7 = *v5;
      swift_bridgeObjectRetain();
      sub_100195838(&v8, v6, v7);
      swift_bridgeObjectRelease();
      v5 += 2;
      --v2;
    }
    while (v2);
    return v9;
  }
  return result;
}

unint64_t sub_1006A1B20()
{
  unint64_t result;

  result = qword_1011C2E00;
  if (!qword_1011C2E00)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PlaybackMode, &type metadata for PlaybackMode);
    atomic_store(result, (unint64_t *)&qword_1011C2E00);
  }
  return result;
}

unint64_t sub_1006A1B64()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CE780;
  if (!qword_1011CE780)
  {
    v1 = sub_10004A07C(255, &qword_1011A3AF8, MPCPlayerPath_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1011CE780);
  }
  return result;
}

uint64_t sub_1006A1BBC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t result;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = sub_1006A1C40();
  result = Set.init(minimumCapacity:)(v2, &type metadata for MenuDataSource.Item, v3);
  v8 = result;
  if (v2)
  {
    v5 = (uint64_t *)(a1 + 32);
    do
    {
      v6 = *v5++;
      sub_10004A06C(v6);
      sub_100196AC4(&v7, v6);
      sub_1001A7ABC(v7);
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

unint64_t sub_1006A1C40()
{
  unint64_t result;

  result = qword_1011C2E08;
  if (!qword_1011C2E08)
  {
    result = swift_getWitnessTable(&unk_100ED2370, &type metadata for MenuDataSource.Item);
    atomic_store(result, (unint64_t *)&qword_1011C2E08);
  }
  return result;
}

uint64_t sub_1006A1C84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s9PlaylistsV5ScopeVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1006A1CC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C((uint64_t *)&unk_1011B5660);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1006A1D10(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100007E8C((uint64_t *)&unk_1011B5660);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1006A1D50()
{
  unint64_t result;

  result = qword_1011C2E10;
  if (!qword_1011C2E10)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TabIdentifier, &type metadata for TabIdentifier);
    atomic_store(result, (unint64_t *)&qword_1011C2E10);
  }
  return result;
}

double sub_1006A1D94@<D0>(_OWORD *a1@<X8>)
{
  unint64_t v2;
  double result;
  __int128 v4;
  _OWORD v5[2];

  v2 = sub_1000AD6A8();
  EnvironmentValues.subscript.getter(v5, &_s15ModuleLayoutKeyVN, &_s15ModuleLayoutKeyVN, v2);
  result = *(double *)v5;
  v4 = v5[1];
  *a1 = v5[0];
  a1[1] = v4;
  return result;
}

uint64_t sub_1006A1DE0(uint64_t *a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;

  v1 = a1[3];
  v4 = *a1;
  v5 = *(_OWORD *)(a1 + 1);
  v6 = v1;
  v2 = sub_1000AD6A8();
  swift_bridgeObjectRetain();
  return EnvironmentValues.subscript.setter(&v4, &_s15ModuleLayoutKeyVN, &_s15ModuleLayoutKeyVN, v2);
}

_QWORD *sub_1006A1E50(uint64_t a1)
{
  uint64_t v2;
  uint64_t i;
  char *v4;
  void *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v10;
  _BYTE v11[24];
  _QWORD *v12;

  v12 = _swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
    goto LABEL_11;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; v2 = _CocoaArrayWrapper.endIndex.getter(v10))
  {
    for (i = 4; ; ++i)
    {
      v4 = (a1 & 0xC000000000000001) != 0
         ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, a1)
         : (char *)*(id *)(a1 + 8 * i);
      v5 = v4;
      v6 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v7 = (uint64_t *)&v4[OBJC_IVAR____TtC11MusicJSCore14JSShelfSection_items];
      swift_beginAccess(&v4[OBJC_IVAR____TtC11MusicJSCore14JSShelfSection_items], v11, 0, 0);
      v8 = *v7;
      swift_bridgeObjectRetain();

      sub_100806050(v8);
      if (v6 == v2)
      {
        swift_bridgeObjectRelease();
        return v12;
      }
    }
    __break(1u);
LABEL_11:
    if (a1 < 0)
      v10 = a1;
    else
      v10 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1006A1F8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void **v22;
  void *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char v64[24];

  v59 = a3;
  v8 = type metadata accessor for EditorialVideoArtworkFlavor(0);
  v62 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v63 = (uint64_t)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v10);
  v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v57 - v14;
  v16 = sub_100007E8C(&qword_1011BCC50);
  __chkstk_darwin(v16);
  v18 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v57 - v20;
  v22 = (void **)(v4 + OBJC_IVAR____TtC11MusicJSCore11JSMediaItem_videoBackgroundArtwork);
  swift_beginAccess(v4 + OBJC_IVAR____TtC11MusicJSCore11JSMediaItem_videoBackgroundArtwork, v64, 0, 0);
  v23 = *v22;
  v60 = v21;
  v61 = a4;
  v58 = a2;
  if (v23 && (v24 = v23, v25 = sub_10079B648(), v24, v25))
  {
    if (*(_QWORD *)(v25 + 16) && (v26 = sub_10079C3DC(a1), (v27 & 1) != 0))
    {
      v28 = v26;
      v29 = a1;
      v30 = *(_QWORD *)(v25 + 56);
      v31 = type metadata accessor for VideoArtwork(0);
      v57 = v8;
      v32 = *(_QWORD *)(v31 - 8);
      (*(void (**)(char *, unint64_t, uint64_t))(v32 + 16))(v18, v30 + *(_QWORD *)(v32 + 72) * v28, v31);
      v33 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56);
      v8 = v57;
      v33(v18, 0, 1, v31);
    }
    else
    {
      v29 = a1;
      v31 = type metadata accessor for VideoArtwork(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v18, 1, 1, v31);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v29 = a1;
    v31 = type metadata accessor for VideoArtwork(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v18, 1, 1, v31);
  }
  v34 = v62;
  v35 = v63;
  sub_10004A160(v59, (uint64_t)v15, (uint64_t *)&unk_1011A20D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16))(v35, v29, v8);
  type metadata accessor for VideoArtwork(0);
  v36 = v8;
  v37 = *(_QWORD *)(v31 - 8);
  v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
  if (v38(v18, 1, v31) != 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v35, v36);
    sub_10004FF60((uint64_t)v15, (uint64_t *)&unk_1011A20D0);
    v41 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
    v42 = (uint64_t)v60;
    v41(v60, v18, v31);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v42, 0, 1, v31);
    v43 = v58;
    v44 = v61;
    goto LABEL_24;
  }
  v57 = v36;
  sub_10004A160((uint64_t)v15, (uint64_t)v12, (uint64_t *)&unk_1011A20D0);
  v39 = type metadata accessor for GenericMusicItem(0);
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v12, 1, v39) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v63, v57);
    sub_10004FF60((uint64_t)v15, (uint64_t *)&unk_1011A20D0);
  }
  else
  {
    v45 = sub_100368C08();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v12, v39);
    if (v45)
    {
      v42 = (uint64_t)v60;
      v44 = v61;
      v46 = v63;
      if (*(_QWORD *)(v45 + 16) && (v47 = sub_10079C3DC(v63), (v48 & 1) != 0))
      {
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v37 + 16))(v42, *(_QWORD *)(v45 + 56) + *(_QWORD *)(v37 + 72) * v47, v31);
        v49 = 0;
      }
      else
      {
        v49 = 1;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56))(v42, v49, 1, v31);
      v50 = swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t, __n128))(v62 + 8))(v46, v57, v50);
      sub_10004FF60((uint64_t)v15, (uint64_t *)&unk_1011A20D0);
      goto LABEL_21;
    }
    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v63, v57);
    v12 = v15;
  }
  v42 = (uint64_t)v60;
  v44 = v61;
  sub_10004FF60((uint64_t)v12, (uint64_t *)&unk_1011A20D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56))(v42, 1, 1, v31);
LABEL_21:
  sub_10004FF60((uint64_t)v18, &qword_1011BCC50);
  if (v38((char *)v42, 1, v31) == 1)
  {
    sub_10004FF60(v42, &qword_1011BCC50);
    v51 = type metadata accessor for MotionViewModel(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v44, 1, 1, v51);
  }
  v41 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
  v43 = v58;
LABEL_24:
  v41(v44, (char *)v42, v31);
  v53 = type metadata accessor for MotionViewModel(0);
  v54 = &v44[*(int *)(v53 + 20)];
  v55 = type metadata accessor for Artwork.CropStyle(0);
  v56 = *(_QWORD *)(v55 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v54, v43, v55);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v54, 0, 1, v55);
  return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v44, 0, 1, v53);
}

uint64_t sub_1006A24BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;

  v60 = a3;
  v8 = type metadata accessor for EditorialVideoArtworkFlavor(0);
  v63 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v64 = (uint64_t)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v10);
  v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v57 - v14;
  v16 = sub_100007E8C(&qword_1011BCC50);
  __chkstk_darwin(v16);
  v18 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v19);
  v22 = (char *)&v57 - v21;
  v23 = (*(uint64_t (**)(__n128))((swift_isaMask & *v4) + 0x1A8))(v20);
  v61 = v22;
  v62 = a4;
  v59 = a2;
  if (v23 && (v24 = (void *)v23, v25 = sub_10079B648(), v24, v25))
  {
    if (*(_QWORD *)(v25 + 16) && (v26 = sub_10079C3DC(a1), (v27 & 1) != 0))
    {
      v28 = v26;
      v29 = a1;
      v30 = *(_QWORD *)(v25 + 56);
      v31 = type metadata accessor for VideoArtwork(0);
      v58 = v8;
      v32 = *(_QWORD *)(v31 - 8);
      (*(void (**)(char *, unint64_t, uint64_t))(v32 + 16))(v18, v30 + *(_QWORD *)(v32 + 72) * v28, v31);
      v33 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56);
      v8 = v58;
      v33(v18, 0, 1, v31);
    }
    else
    {
      v29 = a1;
      v31 = type metadata accessor for VideoArtwork(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v18, 1, 1, v31);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v29 = a1;
    v31 = type metadata accessor for VideoArtwork(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v18, 1, 1, v31);
  }
  v34 = v63;
  v35 = v64;
  sub_10004A160(v60, (uint64_t)v15, (uint64_t *)&unk_1011A20D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16))(v35, v29, v8);
  type metadata accessor for VideoArtwork(0);
  v36 = v8;
  v37 = *(_QWORD *)(v31 - 8);
  v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
  if (v38(v18, 1, v31) != 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v35, v36);
    sub_10004FF60((uint64_t)v15, (uint64_t *)&unk_1011A20D0);
    v41 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
    v42 = (uint64_t)v61;
    v41(v61, v18, v31);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v42, 0, 1, v31);
    v43 = v59;
    v44 = v62;
    goto LABEL_24;
  }
  v58 = v36;
  sub_10004A160((uint64_t)v15, (uint64_t)v12, (uint64_t *)&unk_1011A20D0);
  v39 = type metadata accessor for GenericMusicItem(0);
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v12, 1, v39) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v64, v58);
    sub_10004FF60((uint64_t)v15, (uint64_t *)&unk_1011A20D0);
  }
  else
  {
    v45 = sub_100368C08();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v12, v39);
    if (v45)
    {
      v42 = (uint64_t)v61;
      v44 = v62;
      v46 = v64;
      if (*(_QWORD *)(v45 + 16) && (v47 = sub_10079C3DC(v64), (v48 & 1) != 0))
      {
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v37 + 16))(v42, *(_QWORD *)(v45 + 56) + *(_QWORD *)(v37 + 72) * v47, v31);
        v49 = 0;
      }
      else
      {
        v49 = 1;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56))(v42, v49, 1, v31);
      v50 = swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t, __n128))(v63 + 8))(v46, v58, v50);
      sub_10004FF60((uint64_t)v15, (uint64_t *)&unk_1011A20D0);
      goto LABEL_21;
    }
    (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v64, v58);
    v12 = v15;
  }
  v42 = (uint64_t)v61;
  v44 = v62;
  sub_10004FF60((uint64_t)v12, (uint64_t *)&unk_1011A20D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56))(v42, 1, 1, v31);
LABEL_21:
  sub_10004FF60((uint64_t)v18, &qword_1011BCC50);
  if (v38((char *)v42, 1, v31) == 1)
  {
    sub_10004FF60(v42, &qword_1011BCC50);
    v51 = type metadata accessor for MotionViewModel(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v44, 1, 1, v51);
  }
  v41 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
  v43 = v59;
LABEL_24:
  v41(v44, (char *)v42, v31);
  v53 = type metadata accessor for MotionViewModel(0);
  v54 = &v44[*(int *)(v53 + 20)];
  v55 = type metadata accessor for Artwork.CropStyle(0);
  v56 = *(_QWORD *)(v55 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v54, v43, v55);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v54, 0, 1, v55);
  return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v44, 0, 1, v53);
}

uint64_t sub_1006A29DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;

  v60 = a3;
  v8 = type metadata accessor for EditorialVideoArtworkFlavor(0);
  v63 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v64 = (uint64_t)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v10);
  v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v57 - v14;
  v16 = sub_100007E8C(&qword_1011BCC50);
  __chkstk_darwin(v16);
  v18 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v19);
  v22 = (char *)&v57 - v21;
  v23 = (*(uint64_t (**)(__n128))((swift_isaMask & *v4) + 0x1F0))(v20);
  v61 = v22;
  v62 = a4;
  v59 = a2;
  if (v23 && (v24 = (void *)v23, v25 = sub_10079B648(), v24, v25))
  {
    if (*(_QWORD *)(v25 + 16) && (v26 = sub_10079C3DC(a1), (v27 & 1) != 0))
    {
      v28 = v26;
      v29 = a1;
      v30 = *(_QWORD *)(v25 + 56);
      v31 = type metadata accessor for VideoArtwork(0);
      v58 = v8;
      v32 = *(_QWORD *)(v31 - 8);
      (*(void (**)(char *, unint64_t, uint64_t))(v32 + 16))(v18, v30 + *(_QWORD *)(v32 + 72) * v28, v31);
      v33 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56);
      v8 = v58;
      v33(v18, 0, 1, v31);
    }
    else
    {
      v29 = a1;
      v31 = type metadata accessor for VideoArtwork(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v18, 1, 1, v31);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v29 = a1;
    v31 = type metadata accessor for VideoArtwork(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v18, 1, 1, v31);
  }
  v34 = v63;
  v35 = v64;
  sub_10004A160(v60, (uint64_t)v15, (uint64_t *)&unk_1011A20D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16))(v35, v29, v8);
  type metadata accessor for VideoArtwork(0);
  v36 = v8;
  v37 = *(_QWORD *)(v31 - 8);
  v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
  if (v38(v18, 1, v31) != 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v35, v36);
    sub_10004FF60((uint64_t)v15, (uint64_t *)&unk_1011A20D0);
    v41 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
    v42 = (uint64_t)v61;
    v41(v61, v18, v31);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v42, 0, 1, v31);
    v43 = v59;
    v44 = v62;
    goto LABEL_24;
  }
  v58 = v36;
  sub_10004A160((uint64_t)v15, (uint64_t)v12, (uint64_t *)&unk_1011A20D0);
  v39 = type metadata accessor for GenericMusicItem(0);
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v12, 1, v39) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v64, v58);
    sub_10004FF60((uint64_t)v15, (uint64_t *)&unk_1011A20D0);
  }
  else
  {
    v45 = sub_100368C08();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v12, v39);
    if (v45)
    {
      v42 = (uint64_t)v61;
      v44 = v62;
      v46 = v64;
      if (*(_QWORD *)(v45 + 16) && (v47 = sub_10079C3DC(v64), (v48 & 1) != 0))
      {
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v37 + 16))(v42, *(_QWORD *)(v45 + 56) + *(_QWORD *)(v37 + 72) * v47, v31);
        v49 = 0;
      }
      else
      {
        v49 = 1;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56))(v42, v49, 1, v31);
      v50 = swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t, __n128))(v63 + 8))(v46, v58, v50);
      sub_10004FF60((uint64_t)v15, (uint64_t *)&unk_1011A20D0);
      goto LABEL_21;
    }
    (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v64, v58);
    v12 = v15;
  }
  v42 = (uint64_t)v61;
  v44 = v62;
  sub_10004FF60((uint64_t)v12, (uint64_t *)&unk_1011A20D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56))(v42, 1, 1, v31);
LABEL_21:
  sub_10004FF60((uint64_t)v18, &qword_1011BCC50);
  if (v38((char *)v42, 1, v31) == 1)
  {
    sub_10004FF60(v42, &qword_1011BCC50);
    v51 = type metadata accessor for MotionViewModel(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v44, 1, 1, v51);
  }
  v41 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
  v43 = v59;
LABEL_24:
  v41(v44, (char *)v42, v31);
  v53 = type metadata accessor for MotionViewModel(0);
  v54 = &v44[*(int *)(v53 + 20)];
  v55 = type metadata accessor for Artwork.CropStyle(0);
  v56 = *(_QWORD *)(v55 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v54, v43, v55);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v54, 0, 1, v55);
  return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v44, 0, 1, v53);
}

uint64_t sub_1006A2EFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  BOOL v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  uint64_t *v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  _QWORD *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  unint64_t v162;
  unint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  unint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  _QWORD *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  unint64_t v190;
  unint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  unint64_t v199;
  char *v200;
  uint64_t v201;
  _QWORD *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  unint64_t v216;
  unint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  unint64_t v225;
  uint64_t v226;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  _QWORD *v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t *v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  unint64_t v244;
  unint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  unint64_t v252;
  uint64_t v253;
  char *v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  _QWORD *v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t *v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  unint64_t v272;
  unint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  unint64_t v280;
  uint64_t v281;
  char *v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  _QWORD *v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t *v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  unint64_t v300;
  unint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  unint64_t v308;
  uint64_t v310;
  char *v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  _QWORD *v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  void (*v321)(uint64_t, uint64_t);
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t *v325;
  uint64_t v326;
  unint64_t v327;
  uint64_t v328;
  uint64_t v329;
  unint64_t v330;
  uint64_t v331;
  char *v332;
  char *v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  char *v337;
  uint64_t v338;
  char *v339;
  uint64_t v340;
  char *v341;
  uint64_t v342;
  uint64_t v343;
  char *v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  char *v350;
  char *v351;
  uint64_t v352;
  uint64_t v353;
  char *v354;
  uint64_t v355;
  uint64_t v356;
  char *v357;
  uint64_t v358;
  char *v359;
  uint64_t v360;
  char *v361;
  uint64_t v362;
  uint64_t v363;
  char *v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  char *v369;
  uint64_t v370;
  char *v371;
  uint64_t v372;
  uint64_t v373;
  char *v374;
  uint64_t v375;
  uint64_t v376;
  char *v377;
  char *v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  char *v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  char *v391;
  uint64_t v392;
  char *v393;
  uint64_t v394;
  char *v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  char *v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  char *v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  char *v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  void (*v418)(char *, uint64_t);
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;

  v420 = a2;
  v417 = sub_100007E8C(&qword_1011B7968);
  __chkstk_darwin(v417);
  v413 = (uint64_t)&v331 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v414 = sub_100007E8C(&qword_1011C3288);
  __chkstk_darwin(v414);
  v416 = (uint64_t)&v331 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v419 = sub_100007E8C(&qword_1011B7AB8);
  __chkstk_darwin(v419);
  v418 = (void (*)(char *, uint64_t))((char *)&v331 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v415 = sub_100007E8C(&qword_1011B7AC8);
  __chkstk_darwin(v415);
  v336 = (uint64_t)&v331 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v335 = type metadata accessor for UploadedVideo(0);
  v334 = *(_QWORD *)(v335 - 8);
  __chkstk_darwin(v335);
  v333 = (char *)&v331 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v339 = (char *)&v331 - v9;
  v349 = sub_100007E8C(&qword_1011B7AA8);
  __chkstk_darwin(v349);
  v340 = (uint64_t)&v331 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v345 = type metadata accessor for UploadedAudio(0);
  v338 = *(_QWORD *)(v345 - 8);
  __chkstk_darwin(v345);
  v337 = (char *)&v331 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v344 = (char *)&v331 - v13;
  v346 = sub_100007E8C(&qword_1011C3290);
  __chkstk_darwin(v346);
  v348 = (uint64_t)&v331 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v390 = sub_100007E8C(&qword_1011B7A88);
  __chkstk_darwin(v390);
  v350 = (char *)&v331 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v347 = sub_100007E8C(&qword_1011B7A98);
  __chkstk_darwin(v347);
  v343 = (uint64_t)&v331 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v355 = type metadata accessor for TVEpisode(0);
  v342 = *(_QWORD *)(v355 - 8);
  __chkstk_darwin(v355);
  v341 = (char *)&v331 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v354 = (char *)&v331 - v19;
  v386 = sub_100007E8C(&qword_1011B7A78);
  __chkstk_darwin(v386);
  v381 = (uint64_t)&v331 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v396 = type metadata accessor for MusicMovie(0);
  v379 = *(_QWORD *)(v396 - 8);
  __chkstk_darwin(v396);
  v378 = (char *)&v331 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v395 = (char *)&v331 - v23;
  v387 = sub_100007E8C(&qword_1011C3298);
  __chkstk_darwin(v387);
  v389 = (uint64_t)&v331 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v382 = sub_100007E8C(&qword_1011C32A0);
  __chkstk_darwin(v382);
  v384 = (uint64_t)&v331 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v388 = sub_100007E8C(&qword_1011B7A58);
  __chkstk_darwin(v388);
  v385 = (char *)&v331 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v410 = sub_100007E8C(&qword_1011B7A48);
  __chkstk_darwin(v410);
  v391 = (char *)&v331 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v383 = sub_100007E8C(&qword_1011B7A68);
  __chkstk_darwin(v383);
  v353 = (uint64_t)&v331 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v360 = type metadata accessor for Station(0);
  v352 = *(_QWORD *)(v360 - 8);
  __chkstk_darwin(v360);
  v351 = (char *)&v331 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v359 = (char *)&v331 - v31;
  v400 = sub_100007E8C(&qword_1011B7A38);
  __chkstk_darwin(v400);
  v375 = (uint64_t)&v331 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v380 = type metadata accessor for MusicVideo(0);
  v372 = *(_QWORD *)(v380 - 8);
  __chkstk_darwin(v380);
  v371 = (char *)&v331 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v374 = (char *)&v331 - v35;
  v397 = sub_100007E8C(&qword_1011C32A8);
  __chkstk_darwin(v397);
  v399 = (uint64_t)&v331 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v406 = sub_100007E8C(&qword_1011B7A18);
  __chkstk_darwin(v406);
  v401 = (char *)&v331 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v398 = sub_100007E8C(&qword_1011B7A28);
  __chkstk_darwin(v398);
  v394 = (uint64_t)&v331 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v412 = type metadata accessor for Album(0);
  v392 = *(_QWORD *)(v412 - 8);
  __chkstk_darwin(v412);
  v40 = (char *)&v331 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41);
  v393 = (char *)&v331 - v42;
  v370 = sub_100007E8C(&qword_1011B7A08);
  __chkstk_darwin(v370);
  v365 = (uint64_t)&v331 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v373 = type metadata accessor for Playlist(0);
  v362 = *(_QWORD *)(v373 - 8);
  __chkstk_darwin(v373);
  v361 = (char *)&v331 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v45);
  v364 = (char *)&v331 - v46;
  v47 = sub_100007E8C(&qword_1011C32B0);
  __chkstk_darwin(v47);
  v49 = (char *)&v331 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v407 = sub_100007E8C(&qword_1011C32B8);
  __chkstk_darwin(v407);
  v409 = (uint64_t)&v331 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v402 = sub_100007E8C(&qword_1011C32C0);
  __chkstk_darwin(v402);
  v404 = (uint64_t)&v331 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v367 = sub_100007E8C(&qword_1011C32C8);
  __chkstk_darwin(v367);
  v368 = (uint64_t)&v331 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v403 = sub_100007E8C(&qword_1011B79D8);
  __chkstk_darwin(v403);
  v369 = (char *)&v331 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  v408 = sub_100007E8C(&qword_1011B79C8);
  __chkstk_darwin(v408);
  v405 = (char *)&v331 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = sub_100007E8C(&qword_1011B79B8);
  __chkstk_darwin(v55);
  v411 = (char *)&v331 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  v366 = sub_100007E8C(&qword_1011B79E8);
  __chkstk_darwin(v366);
  v358 = (uint64_t)&v331 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  v363 = type metadata accessor for Song(0);
  v58 = *(_QWORD *)(v363 - 8);
  __chkstk_darwin(v363);
  v60 = (char *)&v331 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v61);
  v357 = (char *)&v331 - v62;
  v63 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v63);
  v65 = (char *)&v331 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v66);
  v68 = (char *)&v331 - v67;
  sub_10004A160(a1, (uint64_t)&v331 - v67, (uint64_t *)&unk_1011A20D0);
  v69 = type metadata accessor for GenericMusicItem(0);
  v70 = *(_QWORD *)(v69 - 8);
  v71 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v68, 1, v69) == 1;
  v72 = v421;
  if (!v71)
  {
    v376 = v47;
    v356 = v55;
    v377 = v49;
    v332 = v68;
    sub_10004A160((uint64_t)v68, (uint64_t)v65, (uint64_t *)&unk_1011A20D0);
    v81 = (*(uint64_t (**)(char *, uint64_t))(v70 + 88))(v65, v69);
    if (v81 == enum case for GenericMusicItem.album(_:))
    {
      (*(void (**)(char *, uint64_t))(v70 + 96))(v65, v69);
      v82 = v392;
      v83 = v393;
      v84 = v412;
      (*(void (**)(char *, char *, uint64_t))(v392 + 32))(v393, v65, v412);
      (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v40, v83, v84);
      v85 = v421;
      if (qword_10119B8B0 != -1)
        swift_once(&qword_10119B8B0, sub_1000E948C);
      v86 = Player.state<A>(for:)((uint64_t)v40, v84, (uint64_t)&protocol witness table for Album);
      v87 = sub_100007E8C(&qword_1011B9638);
      v88 = sub_100049F28(&qword_1011B9640, &qword_1011B9638, (uint64_t)&protocol conformance descriptor for MusicItemState<A>);
      v89 = ObservedObject.init(wrappedValue:)(v86, v87, v88);
      v91 = v90;
      v418 = *(void (**)(char *, uint64_t))(v82 + 8);
      v418(v40, v84);
      v92 = v394;
      sub_10004A160(v85, v394, &qword_1011B7968);
      v93 = v398;
      v94 = (uint64_t *)(v92 + *(int *)(v398 + 36));
      *v94 = v89;
      v94[1] = v91;
      v95 = v399;
      sub_10004A160(v92, v399, &qword_1011B7A28);
      swift_storeEnumTagMultiPayload(v95, v397, 0);
      v96 = sub_1004F4A74(&qword_1011B7A20, &qword_1011B7A28, &qword_1011B70F0, &qword_1011B70A8);
      v97 = sub_1004F4A74(&qword_1011B7A30, &qword_1011B7A38, &qword_1011B70F8, &qword_1011B70B0);
      v98 = (uint64_t)v401;
      _ConditionalContent<>.init(storage:)(v95, v93, v400, v96, v97);
      v99 = v404;
      sub_10004A160(v98, v404, &qword_1011B7A18);
      swift_storeEnumTagMultiPayload(v99, v402, 1);
      v100 = sub_1004F49C8();
      v101 = sub_1004F4B80();
      v102 = (uint64_t)v405;
      _ConditionalContent<>.init(storage:)(v99, v403, v406, v100, v101);
      sub_10004FF60(v98, &qword_1011B7A18);
      v103 = v409;
      sub_10004A160(v102, v409, &qword_1011B79C8);
      swift_storeEnumTagMultiPayload(v103, v407, 0);
      v104 = sub_1004F49A4();
      v105 = sub_1004F4C2C();
      v106 = (uint64_t)v411;
      _ConditionalContent<>.init(storage:)(v103, v408, v410, v104, v105);
      sub_10004FF60(v102, &qword_1011B79C8);
      v107 = (uint64_t)v377;
      sub_10004A160(v106, (uint64_t)v377, &qword_1011B79B8);
      swift_storeEnumTagMultiPayload(v107, v376, 0);
      v108 = sub_10015FD08(&qword_1011B79B0, &qword_1011B79B8, (void (*)(void))sub_1004F49A4, (void (*)(void))sub_1004F4C2C);
      v109 = sub_1004F4DA8();
      _ConditionalContent<>.init(storage:)(v107, v356, v419, v108, v109);
      sub_10004FF60(v106, &qword_1011B79B8);
      sub_10004FF60(v92, &qword_1011B7A28);
      v110 = v83;
      v111 = v412;
      goto LABEL_37;
    }
    if (v81 == enum case for GenericMusicItem.musicMovie(_:))
    {
      (*(void (**)(char *, uint64_t))(v70 + 96))(v65, v69);
      v112 = v379;
      v113 = v395;
      v114 = v396;
      (*(void (**)(char *, char *, uint64_t))(v379 + 32))(v395, v65, v396);
      v115 = (uint64_t)v378;
      (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v378, v113, v114);
      v116 = (uint64_t)v377;
      v117 = v421;
      if (qword_10119B8B0 != -1)
        swift_once(&qword_10119B8B0, sub_1000E948C);
      v118 = sub_100048748(&qword_10119D3A8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie, (uint64_t)&protocol conformance descriptor for MusicMovie);
      v119 = Player.state<A>(for:)(v115, v114, v118);
      v120 = sub_100007E8C(&qword_1011B9618);
      v121 = sub_100049F28(&qword_1011B9620, &qword_1011B9618, (uint64_t)&protocol conformance descriptor for MusicItemState<A>);
      v122 = ObservedObject.init(wrappedValue:)(v119, v120, v121);
      v124 = v123;
      v418 = *(void (**)(char *, uint64_t))(v112 + 8);
      v418((char *)v115, v114);
      v125 = v381;
      sub_10004A160(v117, v381, &qword_1011B7968);
      v126 = v386;
      v127 = (uint64_t *)(v125 + *(int *)(v386 + 36));
      *v127 = v122;
      v127[1] = v124;
      v128 = v384;
      sub_10004A160(v125, v384, &qword_1011B7A78);
      swift_storeEnumTagMultiPayload(v128, v382, 1);
      v129 = sub_1004F4A74(&qword_1011B7A60, &qword_1011B7A68, &qword_1011B7100, &qword_1011B70B8);
      v130 = sub_1004F4A74(&qword_1011B7A70, &qword_1011B7A78, &qword_1011B7108, &qword_1011B70C0);
      v131 = (uint64_t)v385;
      _ConditionalContent<>.init(storage:)(v128, v383, v126, v129, v130);
      v132 = v389;
      sub_10004A160(v131, v389, &qword_1011B7A58);
      swift_storeEnumTagMultiPayload(v132, v387, 0);
      v133 = sub_1004F4C50();
      v134 = sub_1004F4CFC();
      v135 = (uint64_t)v391;
      _ConditionalContent<>.init(storage:)(v132, v388, v390, v133, v134);
      sub_10004FF60(v131, &qword_1011B7A58);
      v136 = v409;
      sub_10004A160(v135, v409, &qword_1011B7A48);
      swift_storeEnumTagMultiPayload(v136, v407, 1);
      v137 = sub_1004F49A4();
      v138 = sub_1004F4C2C();
      v139 = (uint64_t)v411;
      _ConditionalContent<>.init(storage:)(v136, v408, v410, v137, v138);
      sub_10004FF60(v135, &qword_1011B7A48);
      sub_10004A160(v139, v116, &qword_1011B79B8);
      swift_storeEnumTagMultiPayload(v116, v376, 0);
      v140 = sub_10015FD08(&qword_1011B79B0, &qword_1011B79B8, (void (*)(void))sub_1004F49A4, (void (*)(void))sub_1004F4C2C);
      v141 = sub_1004F4DA8();
      _ConditionalContent<>.init(storage:)(v116, v356, v419, v140, v141);
      sub_10004FF60(v139, &qword_1011B79B8);
      sub_10004FF60(v125, &qword_1011B7A78);
      v110 = v395;
      v142 = &v422;
LABEL_36:
      v111 = *(v142 - 32);
LABEL_37:
      v418(v110, v111);
LABEL_38:
      v80 = (uint64_t)v332;
      return sub_10004FF60(v80, (uint64_t *)&unk_1011A20D0);
    }
    v49 = v377;
    v47 = v376;
    if (v81 == enum case for GenericMusicItem.musicVideo(_:))
    {
      (*(void (**)(char *, uint64_t))(v70 + 96))(v65, v69);
      v143 = v372;
      v144 = v374;
      v145 = v380;
      (*(void (**)(char *, char *, uint64_t))(v372 + 32))(v374, v65, v380);
      v146 = (uint64_t)v371;
      (*(void (**)(char *, char *, uint64_t))(v143 + 16))(v371, v144, v145);
      if (qword_10119B8B0 != -1)
        swift_once(&qword_10119B8B0, sub_1000E948C);
      v147 = sub_100048748((unint64_t *)&unk_1011B8C10, (uint64_t (*)(uint64_t))&type metadata accessor for MusicVideo, (uint64_t)&protocol conformance descriptor for MusicVideo);
      v148 = Player.state<A>(for:)(v146, v145, v147);
      v149 = sub_100007E8C((uint64_t *)&unk_1011A3EC0);
      v150 = sub_100049F28((unint64_t *)&unk_1011B8C30, (uint64_t *)&unk_1011A3EC0, (uint64_t)&protocol conformance descriptor for MusicItemState<A>);
      v151 = ObservedObject.init(wrappedValue:)(v148, v149, v150);
      v153 = v152;
      v418 = *(void (**)(char *, uint64_t))(v143 + 8);
      v418((char *)v146, v145);
      v154 = v375;
      sub_10004A160(v421, v375, &qword_1011B7968);
      v155 = v400;
      v156 = (uint64_t *)(v154 + *(int *)(v400 + 36));
      *v156 = v151;
      v156[1] = v153;
      v157 = v399;
      sub_10004A160(v154, v399, &qword_1011B7A38);
      swift_storeEnumTagMultiPayload(v157, v397, 1);
      v158 = sub_1004F4A74(&qword_1011B7A20, &qword_1011B7A28, &qword_1011B70F0, &qword_1011B70A8);
      v159 = sub_1004F4A74(&qword_1011B7A30, &qword_1011B7A38, &qword_1011B70F8, &qword_1011B70B0);
      v160 = (uint64_t)v401;
      _ConditionalContent<>.init(storage:)(v157, v398, v155, v158, v159);
      v161 = v404;
      sub_10004A160(v160, v404, &qword_1011B7A18);
      swift_storeEnumTagMultiPayload(v161, v402, 1);
      v162 = sub_1004F49C8();
      v163 = sub_1004F4B80();
      v164 = (uint64_t)v405;
      _ConditionalContent<>.init(storage:)(v161, v403, v406, v162, v163);
      sub_10004FF60(v160, &qword_1011B7A18);
      v165 = v409;
      sub_10004A160(v164, v409, &qword_1011B79C8);
      swift_storeEnumTagMultiPayload(v165, v407, 0);
      v166 = sub_1004F49A4();
      v167 = sub_1004F4C2C();
      v168 = (uint64_t)v411;
      _ConditionalContent<>.init(storage:)(v165, v408, v410, v166, v167);
      sub_10004FF60(v164, &qword_1011B79C8);
      v169 = (uint64_t)v377;
      sub_10004A160(v168, (uint64_t)v377, &qword_1011B79B8);
      swift_storeEnumTagMultiPayload(v169, v376, 0);
      v170 = sub_10015FD08(&qword_1011B79B0, &qword_1011B79B8, (void (*)(void))sub_1004F49A4, (void (*)(void))sub_1004F4C2C);
      v171 = sub_1004F4DA8();
      _ConditionalContent<>.init(storage:)(v169, v356, v419, v170, v171);
      sub_10004FF60(v168, &qword_1011B79B8);
      sub_10004FF60(v154, &qword_1011B7A38);
      v110 = v144;
      v142 = &v412;
      goto LABEL_36;
    }
    if (v81 == enum case for GenericMusicItem.playlist(_:))
    {
      (*(void (**)(char *, uint64_t))(v70 + 96))(v65, v69);
      v172 = v362;
      v173 = v364;
      v174 = v373;
      (*(void (**)(char *, char *, uint64_t))(v362 + 32))(v364, v65, v373);
      v175 = (uint64_t)v361;
      (*(void (**)(char *, char *, uint64_t))(v172 + 16))(v361, v173, v174);
      if (qword_10119B8B0 != -1)
        swift_once(&qword_10119B8B0, sub_1000E948C);
      v176 = Player.state<A>(for:)(v175, v174, (uint64_t)&protocol witness table for Playlist);
      v177 = sub_100007E8C(&qword_1011B9648);
      v178 = sub_100049F28(&qword_1011B9650, &qword_1011B9648, (uint64_t)&protocol conformance descriptor for MusicItemState<A>);
      v179 = ObservedObject.init(wrappedValue:)(v176, v177, v178);
      v181 = v180;
      v418 = *(void (**)(char *, uint64_t))(v172 + 8);
      v418((char *)v175, v174);
      v182 = v365;
      sub_10004A160(v421, v365, &qword_1011B7968);
      v183 = v370;
      v184 = (uint64_t *)(v182 + *(int *)(v370 + 36));
      *v184 = v179;
      v184[1] = v181;
      v185 = v368;
      sub_10004A160(v182, v368, &qword_1011B7A08);
      swift_storeEnumTagMultiPayload(v185, v367, 1);
      v186 = sub_1004F4A74(&qword_1011B79E0, &qword_1011B79E8, &qword_1011B70E0, &qword_1011C7290);
      v187 = sub_1004F4A74(&qword_1011B7A00, &qword_1011B7A08, &qword_1011B70E8, &qword_1011B70A0);
      v188 = (uint64_t)v369;
      _ConditionalContent<>.init(storage:)(v185, v366, v183, v186, v187);
      v189 = v404;
      sub_10004A160(v188, v404, &qword_1011B79D8);
      swift_storeEnumTagMultiPayload(v189, v402, 0);
      v190 = sub_1004F49C8();
      v191 = sub_1004F4B80();
      v192 = (uint64_t)v405;
      _ConditionalContent<>.init(storage:)(v189, v403, v406, v190, v191);
      sub_10004FF60(v188, &qword_1011B79D8);
      v193 = v409;
      sub_10004A160(v192, v409, &qword_1011B79C8);
      swift_storeEnumTagMultiPayload(v193, v407, 0);
      v194 = sub_1004F49A4();
      v195 = sub_1004F4C2C();
      v196 = (uint64_t)v411;
      _ConditionalContent<>.init(storage:)(v193, v408, v410, v194, v195);
      sub_10004FF60(v192, &qword_1011B79C8);
      v197 = (uint64_t)v377;
      sub_10004A160(v196, (uint64_t)v377, &qword_1011B79B8);
      swift_storeEnumTagMultiPayload(v197, v376, 0);
      v198 = sub_10015FD08(&qword_1011B79B0, &qword_1011B79B8, (void (*)(void))sub_1004F49A4, (void (*)(void))sub_1004F4C2C);
      v199 = sub_1004F4DA8();
      _ConditionalContent<>.init(storage:)(v197, v356, v419, v198, v199);
      sub_10004FF60(v196, &qword_1011B79B8);
      sub_10004FF60(v182, &qword_1011B7A08);
      v110 = v173;
      v142 = (uint64_t *)&v405;
      goto LABEL_36;
    }
    if (v81 == enum case for GenericMusicItem.song(_:))
    {
      (*(void (**)(char *, uint64_t))(v70 + 96))(v65, v69);
      v200 = v357;
      v201 = v363;
      (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v357, v65, v363);
      (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v60, v200, v201);
      if (qword_10119B8B0 != -1)
        swift_once(&qword_10119B8B0, sub_1000E948C);
      v202 = Player.state<A>(for:)((uint64_t)v60, v201, (uint64_t)&protocol witness table for Song);
      v203 = sub_100007E8C((uint64_t *)&unk_1011B8D60);
      v204 = sub_100049F28((unint64_t *)&unk_1011C72E0, (uint64_t *)&unk_1011B8D60, (uint64_t)&protocol conformance descriptor for MusicItemState<A>);
      v205 = ObservedObject.init(wrappedValue:)(v202, v203, v204);
      v207 = v206;
      v418 = *(void (**)(char *, uint64_t))(v58 + 8);
      v418(v60, v201);
      v208 = v358;
      sub_10004A160(v421, v358, &qword_1011B7968);
      v209 = v366;
      v210 = (uint64_t *)(v208 + *(int *)(v366 + 36));
      *v210 = v205;
      v210[1] = v207;
      v211 = v368;
      sub_10004A160(v208, v368, &qword_1011B79E8);
      swift_storeEnumTagMultiPayload(v211, v367, 0);
      v212 = sub_1004F4A74(&qword_1011B79E0, &qword_1011B79E8, &qword_1011B70E0, &qword_1011C7290);
      v213 = sub_1004F4A74(&qword_1011B7A00, &qword_1011B7A08, &qword_1011B70E8, &qword_1011B70A0);
      v214 = (uint64_t)v369;
      _ConditionalContent<>.init(storage:)(v211, v209, v370, v212, v213);
      v215 = v404;
      sub_10004A160(v214, v404, &qword_1011B79D8);
      swift_storeEnumTagMultiPayload(v215, v402, 0);
      v216 = sub_1004F49C8();
      v217 = sub_1004F4B80();
      v218 = (uint64_t)v405;
      _ConditionalContent<>.init(storage:)(v215, v403, v406, v216, v217);
      sub_10004FF60(v214, &qword_1011B79D8);
      v219 = v409;
      sub_10004A160(v218, v409, &qword_1011B79C8);
      swift_storeEnumTagMultiPayload(v219, v407, 0);
      v220 = sub_1004F49A4();
      v221 = sub_1004F4C2C();
      v222 = (uint64_t)v411;
      _ConditionalContent<>.init(storage:)(v219, v408, v410, v220, v221);
      sub_10004FF60(v218, &qword_1011B79C8);
      v223 = (uint64_t)v377;
      sub_10004A160(v222, (uint64_t)v377, &qword_1011B79B8);
      swift_storeEnumTagMultiPayload(v223, v376, 0);
      v224 = sub_10015FD08(&qword_1011B79B0, &qword_1011B79B8, (void (*)(void))sub_1004F49A4, (void (*)(void))sub_1004F4C2C);
      v225 = sub_1004F4DA8();
      _ConditionalContent<>.init(storage:)(v223, v356, v419, v224, v225);
      sub_10004FF60(v222, &qword_1011B79B8);
      sub_10004FF60(v208, &qword_1011B79E8);
      v110 = v200;
      v142 = (uint64_t *)&v395;
      goto LABEL_36;
    }
    v55 = v356;
    if (v81 == enum case for GenericMusicItem.station(_:))
    {
      (*(void (**)(char *, uint64_t))(v70 + 96))(v65, v69);
      v226 = v352;
      v227 = v359;
      v228 = v360;
      (*(void (**)(char *, char *, uint64_t))(v352 + 32))(v359, v65, v360);
      v229 = (uint64_t)v351;
      (*(void (**)(char *, char *, uint64_t))(v226 + 16))(v351, v227, v228);
      if (qword_10119B8B0 != -1)
        swift_once(&qword_10119B8B0, sub_1000E948C);
      v230 = Player.state<A>(for:)(v229, v228, (uint64_t)&protocol witness table for Station);
      v231 = sub_100007E8C(&qword_1011B9628);
      v232 = sub_100049F28(&qword_1011B9630, &qword_1011B9628, (uint64_t)&protocol conformance descriptor for MusicItemState<A>);
      v233 = ObservedObject.init(wrappedValue:)(v230, v231, v232);
      v235 = v234;
      v418 = *(void (**)(char *, uint64_t))(v226 + 8);
      v418((char *)v229, v228);
      v236 = v353;
      sub_10004A160(v421, v353, &qword_1011B7968);
      v237 = v383;
      v238 = (uint64_t *)(v236 + *(int *)(v383 + 36));
      *v238 = v233;
      v238[1] = v235;
      v239 = v384;
      sub_10004A160(v236, v384, &qword_1011B7A68);
      swift_storeEnumTagMultiPayload(v239, v382, 0);
      v240 = sub_1004F4A74(&qword_1011B7A60, &qword_1011B7A68, &qword_1011B7100, &qword_1011B70B8);
      v241 = sub_1004F4A74(&qword_1011B7A70, &qword_1011B7A78, &qword_1011B7108, &qword_1011B70C0);
      v242 = (uint64_t)v385;
      _ConditionalContent<>.init(storage:)(v239, v237, v386, v240, v241);
      v243 = v389;
      sub_10004A160(v242, v389, &qword_1011B7A58);
      swift_storeEnumTagMultiPayload(v243, v387, 0);
      v244 = sub_1004F4C50();
      v245 = sub_1004F4CFC();
      v246 = (uint64_t)v391;
      _ConditionalContent<>.init(storage:)(v243, v388, v390, v244, v245);
      sub_10004FF60(v242, &qword_1011B7A58);
      v247 = v409;
      sub_10004A160(v246, v409, &qword_1011B7A48);
      swift_storeEnumTagMultiPayload(v247, v407, 1);
      v248 = sub_1004F49A4();
      v249 = sub_1004F4C2C();
      v250 = (uint64_t)v411;
      _ConditionalContent<>.init(storage:)(v247, v408, v410, v248, v249);
      sub_10004FF60(v246, &qword_1011B7A48);
      sub_10004A160(v250, (uint64_t)v49, &qword_1011B79B8);
      swift_storeEnumTagMultiPayload(v49, v47, 0);
      v251 = sub_10015FD08(&qword_1011B79B0, &qword_1011B79B8, (void (*)(void))sub_1004F49A4, (void (*)(void))sub_1004F4C2C);
      v252 = sub_1004F4DA8();
      _ConditionalContent<>.init(storage:)(v49, v356, v419, v251, v252);
      sub_10004FF60(v250, &qword_1011B79B8);
      sub_10004FF60(v236, &qword_1011B7A68);
      v110 = v359;
      v142 = &v392;
      goto LABEL_36;
    }
    if (v81 == enum case for GenericMusicItem.tvEpisode(_:))
    {
      (*(void (**)(char *, uint64_t))(v70 + 96))(v65, v69);
      v253 = v342;
      v254 = v354;
      v255 = v355;
      (*(void (**)(char *, char *, uint64_t))(v342 + 32))(v354, v65, v355);
      v256 = (uint64_t)v341;
      (*(void (**)(char *, char *, uint64_t))(v253 + 16))(v341, v254, v255);
      if (qword_10119B8B0 != -1)
        swift_once(&qword_10119B8B0, sub_1000E948C);
      v257 = sub_100048748(&qword_1011A0388, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&protocol conformance descriptor for TVEpisode);
      v258 = Player.state<A>(for:)(v256, v255, v257);
      v259 = sub_100007E8C(&qword_1011A0390);
      v260 = sub_100049F28(&qword_1011A0398, &qword_1011A0390, (uint64_t)&protocol conformance descriptor for MusicItemState<A>);
      v261 = ObservedObject.init(wrappedValue:)(v258, v259, v260);
      v263 = v262;
      v418 = *(void (**)(char *, uint64_t))(v253 + 8);
      v418((char *)v256, v255);
      v264 = v343;
      sub_10004A160(v421, v343, &qword_1011B7968);
      v265 = v347;
      v266 = (uint64_t *)(v264 + *(int *)(v347 + 36));
      *v266 = v261;
      v266[1] = v263;
      v267 = v348;
      sub_10004A160(v264, v348, &qword_1011B7A98);
      swift_storeEnumTagMultiPayload(v267, v346, 0);
      v268 = sub_1004F4A74(&qword_1011B7A90, &qword_1011B7A98, &qword_1011B7110, &qword_1011B70C8);
      v269 = sub_1004F4A74(&qword_1011B7AA0, &qword_1011B7AA8, &qword_1011B7118, &qword_1011B70D0);
      v270 = (uint64_t)v350;
      _ConditionalContent<>.init(storage:)(v267, v265, v349, v268, v269);
      v271 = v389;
      sub_10004A160(v270, v389, &qword_1011B7A88);
      swift_storeEnumTagMultiPayload(v271, v387, 1);
      v272 = sub_1004F4C50();
      v273 = sub_1004F4CFC();
      v274 = (uint64_t)v391;
      _ConditionalContent<>.init(storage:)(v271, v388, v390, v272, v273);
      sub_10004FF60(v270, &qword_1011B7A88);
      v275 = v409;
      sub_10004A160(v274, v409, &qword_1011B7A48);
      swift_storeEnumTagMultiPayload(v275, v407, 1);
      v276 = sub_1004F49A4();
      v277 = sub_1004F4C2C();
      v278 = (uint64_t)v411;
      _ConditionalContent<>.init(storage:)(v275, v408, v410, v276, v277);
      sub_10004FF60(v274, &qword_1011B7A48);
      sub_10004A160(v278, (uint64_t)v49, &qword_1011B79B8);
      swift_storeEnumTagMultiPayload(v49, v47, 0);
      v279 = sub_10015FD08(&qword_1011B79B0, &qword_1011B79B8, (void (*)(void))sub_1004F49A4, (void (*)(void))sub_1004F4C2C);
      v280 = sub_1004F4DA8();
      _ConditionalContent<>.init(storage:)(v49, v356, v419, v279, v280);
      sub_10004FF60(v278, &qword_1011B79B8);
      sub_10004FF60(v264, &qword_1011B7A98);
      v110 = v354;
      v142 = &v387;
      goto LABEL_36;
    }
    if (v81 == enum case for GenericMusicItem.uploadedAudio(_:))
    {
      (*(void (**)(char *, uint64_t))(v70 + 96))(v65, v69);
      v281 = v338;
      v282 = v344;
      v283 = v345;
      (*(void (**)(char *, char *, uint64_t))(v338 + 32))(v344, v65, v345);
      v284 = (uint64_t)v337;
      (*(void (**)(char *, char *, uint64_t))(v281 + 16))(v337, v282, v283);
      if (qword_10119B8B0 != -1)
        swift_once(&qword_10119B8B0, sub_1000E948C);
      v285 = sub_100048748(&qword_1011B9600, (uint64_t (*)(uint64_t))&type metadata accessor for UploadedAudio, (uint64_t)&protocol conformance descriptor for UploadedAudio);
      v286 = Player.state<A>(for:)(v284, v283, v285);
      v287 = sub_100007E8C(&qword_1011B9608);
      v288 = sub_100049F28(&qword_1011B9610, &qword_1011B9608, (uint64_t)&protocol conformance descriptor for MusicItemState<A>);
      v289 = ObservedObject.init(wrappedValue:)(v286, v287, v288);
      v291 = v290;
      v418 = *(void (**)(char *, uint64_t))(v281 + 8);
      v418((char *)v284, v283);
      v292 = v340;
      sub_10004A160(v421, v340, &qword_1011B7968);
      v293 = v349;
      v294 = (uint64_t *)(v292 + *(int *)(v349 + 36));
      *v294 = v289;
      v294[1] = v291;
      v295 = v348;
      sub_10004A160(v292, v348, &qword_1011B7AA8);
      swift_storeEnumTagMultiPayload(v295, v346, 1);
      v296 = sub_1004F4A74(&qword_1011B7A90, &qword_1011B7A98, &qword_1011B7110, &qword_1011B70C8);
      v297 = sub_1004F4A74(&qword_1011B7AA0, &qword_1011B7AA8, &qword_1011B7118, &qword_1011B70D0);
      v298 = (uint64_t)v350;
      _ConditionalContent<>.init(storage:)(v295, v347, v293, v296, v297);
      v299 = v389;
      sub_10004A160(v298, v389, &qword_1011B7A88);
      swift_storeEnumTagMultiPayload(v299, v387, 1);
      v300 = sub_1004F4C50();
      v301 = sub_1004F4CFC();
      v302 = (uint64_t)v391;
      _ConditionalContent<>.init(storage:)(v299, v388, v390, v300, v301);
      sub_10004FF60(v298, &qword_1011B7A88);
      v303 = v409;
      sub_10004A160(v302, v409, &qword_1011B7A48);
      swift_storeEnumTagMultiPayload(v303, v407, 1);
      v304 = sub_1004F49A4();
      v305 = sub_1004F4C2C();
      v306 = (uint64_t)v411;
      _ConditionalContent<>.init(storage:)(v303, v408, v410, v304, v305);
      sub_10004FF60(v302, &qword_1011B7A48);
      sub_10004A160(v306, (uint64_t)v49, &qword_1011B79B8);
      swift_storeEnumTagMultiPayload(v49, v47, 0);
      v307 = sub_10015FD08(&qword_1011B79B0, &qword_1011B79B8, (void (*)(void))sub_1004F49A4, (void (*)(void))sub_1004F4C2C);
      v308 = sub_1004F4DA8();
      _ConditionalContent<>.init(storage:)(v49, v356, v419, v307, v308);
      sub_10004FF60(v306, &qword_1011B79B8);
      sub_10004FF60(v292, &qword_1011B7AA8);
      v110 = v344;
      v142 = (uint64_t *)&v377;
      goto LABEL_36;
    }
    if (v81 == enum case for GenericMusicItem.uploadedVideo(_:))
    {
      (*(void (**)(char *, uint64_t))(v70 + 96))(v65, v69);
      v310 = v334;
      v311 = v339;
      v312 = v335;
      (*(void (**)(char *, char *, uint64_t))(v334 + 32))(v339, v65, v335);
      v313 = (uint64_t)v333;
      (*(void (**)(char *, char *, uint64_t))(v310 + 16))(v333, v311, v312);
      if (qword_10119B8B0 != -1)
        swift_once(&qword_10119B8B0, sub_1000E948C);
      v314 = sub_100048748(&qword_10119E0A0, (uint64_t (*)(uint64_t))&type metadata accessor for UploadedVideo, (uint64_t)&protocol conformance descriptor for UploadedVideo);
      v315 = Player.state<A>(for:)(v313, v312, v314);
      v316 = sub_100007E8C(&qword_1011B95F0);
      v317 = sub_100049F28(&qword_1011B95F8, &qword_1011B95F0, (uint64_t)&protocol conformance descriptor for MusicItemState<A>);
      v318 = ObservedObject.init(wrappedValue:)(v315, v316, v317);
      v320 = v319;
      v321 = *(void (**)(uint64_t, uint64_t))(v310 + 8);
      v321(v313, v312);
      v322 = v336;
      sub_10004A160(v421, v336, &qword_1011B7968);
      v324 = v415;
      v323 = v416;
      v325 = (uint64_t *)(v322 + *(int *)(v415 + 36));
      *v325 = v318;
      v325[1] = v320;
      sub_10004A160(v322, v323, &qword_1011B7AC8);
      swift_storeEnumTagMultiPayload(v323, v414, 0);
      v326 = sub_1004F4A74(&qword_1011B7AC0, &qword_1011B7AC8, &qword_1011B7120, &qword_1011B70D8);
      v327 = sub_1004F4AFC();
      v328 = (uint64_t)v418;
      _ConditionalContent<>.init(storage:)(v323, v324, v417, v326, v327);
      sub_10004A160(v328, (uint64_t)v49, &qword_1011B7AB8);
      swift_storeEnumTagMultiPayload(v49, v47, 1);
      v329 = sub_10015FD08(&qword_1011B79B0, &qword_1011B79B8, (void (*)(void))sub_1004F49A4, (void (*)(void))sub_1004F4C2C);
      v330 = sub_1004F4DA8();
      _ConditionalContent<>.init(storage:)(v49, v356, v419, v329, v330);
      sub_10004FF60(v328, &qword_1011B7AB8);
      sub_10004FF60(v322, &qword_1011B7AC8);
      v321((uint64_t)v339, v312);
      goto LABEL_38;
    }
    (*(void (**)(char *, uint64_t))(v70 + 8))(v65, v69);
    v68 = v332;
    v72 = v421;
  }
  v73 = v413;
  sub_10004A160(v72, v413, &qword_1011B7968);
  v74 = v416;
  sub_10004A160(v73, v416, &qword_1011B7968);
  swift_storeEnumTagMultiPayload(v74, v414, 1);
  v75 = sub_1004F4A74(&qword_1011B7AC0, &qword_1011B7AC8, &qword_1011B7120, &qword_1011B70D8);
  v76 = sub_1004F4AFC();
  v77 = (uint64_t)v418;
  _ConditionalContent<>.init(storage:)(v74, v415, v417, v75, v76);
  sub_10004A160(v77, (uint64_t)v49, &qword_1011B7AB8);
  swift_storeEnumTagMultiPayload(v49, v47, 1);
  v78 = sub_10015FD08(&qword_1011B79B0, &qword_1011B79B8, (void (*)(void))sub_1004F49A4, (void (*)(void))sub_1004F4C2C);
  v79 = sub_1004F4DA8();
  _ConditionalContent<>.init(storage:)(v49, v55, v419, v78, v79);
  sub_10004FF60(v77, &qword_1011B7AB8);
  sub_10004FF60(v73, &qword_1011B7968);
  v80 = (uint64_t)v68;
  return sub_10004FF60(v80, (uint64_t *)&unk_1011A20D0);
}

uint64_t sub_1006A59A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  BOOL v71;
  uint64_t v72;
  void (*v73)(uint64_t, uint64_t);
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(char *, uint64_t);
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  void (*v122)(uint64_t, uint64_t);
  uint64_t v123;
  uint64_t v124;
  uint64_t *v125;
  uint64_t v126;
  unint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  _QWORD *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  void (*v152)(uint64_t, uint64_t);
  uint64_t v153;
  uint64_t v154;
  uint64_t *v155;
  uint64_t *v156;
  uint64_t v157;
  unint64_t v158;
  unint64_t v159;
  uint64_t v160;
  uint64_t *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  _QWORD *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t *v175;
  uint64_t v176;
  unint64_t v177;
  unint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  unint64_t v188;
  uint64_t v189;
  _QWORD *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t *v198;
  uint64_t v199;
  unint64_t v200;
  unint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  unint64_t v213;
  uint64_t v214;
  char *v215;
  uint64_t v216;
  uint64_t v217;
  _QWORD *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t *v226;
  uint64_t v227;
  unint64_t v228;
  unint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  unint64_t v241;
  char *v242;
  uint64_t *v243;
  uint64_t v244;
  char *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  _QWORD *v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t *v257;
  uint64_t v258;
  unint64_t v259;
  unint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  unint64_t v271;
  uint64_t v272;
  char *v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  _QWORD *v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t *v285;
  uint64_t v286;
  unint64_t v287;
  unint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  unint64_t v299;
  uint64_t v300;
  char *v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  _QWORD *v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t *v314;
  unint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  unint64_t v319;
  uint64_t v320;
  uint64_t v321;
  char *v322;
  char *v323;
  uint64_t v324;
  uint64_t v325;
  char *v326;
  uint64_t v327;
  char *v328;
  uint64_t v329;
  uint64_t v330;
  char *v331;
  uint64_t v332;
  uint64_t v333;
  char *v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  char *v340;
  char *v341;
  uint64_t v342;
  char *v343;
  uint64_t v344;
  char *v345;
  uint64_t v346;
  char *v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  char *v351;
  char *v352;
  uint64_t v353;
  char *v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  char *v360;
  uint64_t v361;
  char *v362;
  uint64_t v363;
  char *v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  char *v368;
  uint64_t v369;
  char *v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  char *v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  char *v382;
  uint64_t v383;
  char *v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  char *v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  char *v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  char *v401;
  void (*v402)(uint64_t, uint64_t);
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  void (*v407)(uint64_t, uint64_t);
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;

  v409 = a2;
  v406 = type metadata accessor for PlayableView(0);
  __chkstk_darwin(v406);
  v402 = (void (*)(uint64_t, uint64_t))((char *)&v320 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v403 = sub_100007E8C(&qword_1011C31A0);
  __chkstk_darwin(v403);
  v405 = (uint64_t)&v320 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v408 = sub_100007E8C(&qword_1011C3178);
  __chkstk_darwin(v408);
  v407 = (void (*)(uint64_t, uint64_t))((char *)&v320 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v404 = sub_100007E8C(&qword_1011C3188);
  __chkstk_darwin(v404);
  v325 = (uint64_t)&v320 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v329 = type metadata accessor for UploadedVideo(0);
  v324 = *(_QWORD *)(v329 - 8);
  __chkstk_darwin(v329);
  v323 = (char *)&v320 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v328 = (char *)&v320 - v9;
  v339 = sub_100007E8C(&qword_1011C3168);
  __chkstk_darwin(v339);
  v330 = (uint64_t)&v320 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v335 = type metadata accessor for UploadedAudio(0);
  v327 = *(_QWORD *)(v335 - 8);
  __chkstk_darwin(v335);
  v326 = (char *)&v320 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v334 = (char *)&v320 - v13;
  v337 = sub_100007E8C(&qword_1011C31A8);
  __chkstk_darwin(v337);
  v338 = (uint64_t)&v320 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v381 = sub_100007E8C(&qword_1011C3148);
  __chkstk_darwin(v381);
  v340 = (char *)&v320 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v336 = sub_100007E8C(&qword_1011C3158);
  __chkstk_darwin(v336);
  v333 = (uint64_t)&v320 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v346 = type metadata accessor for TVEpisode(0);
  v332 = *(_QWORD *)(v346 - 8);
  __chkstk_darwin(v346);
  v331 = (char *)&v320 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v345 = (char *)&v320 - v19;
  v377 = sub_100007E8C(&qword_1011C3138);
  __chkstk_darwin(v377);
  v372 = (uint64_t)&v320 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v371 = type metadata accessor for MusicMovie(0);
  v369 = *(_QWORD *)(v371 - 8);
  __chkstk_darwin(v371);
  v368 = (char *)&v320 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v370 = (char *)&v320 - v23;
  v378 = sub_100007E8C(&qword_1011C31B0);
  __chkstk_darwin(v378);
  v380 = (uint64_t)&v320 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v374 = sub_100007E8C(&qword_1011C31B8);
  __chkstk_darwin(v374);
  v375 = (uint64_t)&v320 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v379 = sub_100007E8C(&qword_1011C3118);
  __chkstk_darwin(v379);
  v376 = (char *)&v320 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v400 = sub_100007E8C(&qword_1011C3108);
  __chkstk_darwin(v400);
  v382 = (char *)&v320 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v373 = sub_100007E8C(&qword_1011C3128);
  __chkstk_darwin(v373);
  v344 = (uint64_t)&v320 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v350 = type metadata accessor for Station(0);
  v342 = *(_QWORD *)(v350 - 8);
  __chkstk_darwin(v350);
  v341 = (char *)&v320 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v343 = (char *)&v320 - v31;
  v390 = sub_100007E8C(&qword_1011C30F8);
  __chkstk_darwin(v390);
  v366 = (uint64_t)&v320 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v365 = type metadata accessor for MusicVideo(0);
  v363 = *(_QWORD *)(v365 - 8);
  __chkstk_darwin(v365);
  v362 = (char *)&v320 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v364 = (char *)&v320 - v35;
  v388 = sub_100007E8C(&qword_1011C31C0);
  __chkstk_darwin(v388);
  v389 = (uint64_t)&v320 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v396 = sub_100007E8C(&qword_1011C30D8);
  __chkstk_darwin(v396);
  v391 = (char *)&v320 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v387 = sub_100007E8C(&qword_1011C30E8);
  __chkstk_darwin(v387);
  v386 = (uint64_t)&v320 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v385 = type metadata accessor for Album(0);
  v383 = *(_QWORD *)(v385 - 8);
  __chkstk_darwin(v385);
  v40 = (char *)&v320 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41);
  v384 = (char *)&v320 - v42;
  v361 = sub_100007E8C(&qword_1011C30C8);
  __chkstk_darwin(v361);
  v356 = (uint64_t)&v320 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v355 = type metadata accessor for Playlist(0);
  v353 = *(_QWORD *)(v355 - 8);
  __chkstk_darwin(v355);
  v352 = (char *)&v320 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v45);
  v354 = (char *)&v320 - v46;
  v47 = sub_100007E8C(&qword_1011C31C8);
  __chkstk_darwin(v47);
  v49 = (char *)&v320 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v397 = sub_100007E8C(&qword_1011C31D0);
  __chkstk_darwin(v397);
  v399 = (uint64_t)&v320 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v392 = sub_100007E8C(&qword_1011C31D8);
  __chkstk_darwin(v392);
  v394 = (uint64_t)&v320 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v358 = sub_100007E8C(&qword_1011C31E0);
  __chkstk_darwin(v358);
  v359 = (uint64_t)&v320 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v393 = sub_100007E8C(&qword_1011C30A0);
  __chkstk_darwin(v393);
  v360 = (char *)&v320 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  v398 = sub_100007E8C(&qword_1011C3090);
  __chkstk_darwin(v398);
  v395 = (char *)&v320 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = sub_100007E8C(&qword_1011C3080);
  __chkstk_darwin(v55);
  v401 = (char *)&v320 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  v357 = sub_100007E8C(&qword_1011C30B0);
  __chkstk_darwin(v357);
  v349 = (uint64_t)&v320 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  v348 = type metadata accessor for Song(0);
  v58 = *(_QWORD *)(v348 - 8);
  __chkstk_darwin(v348);
  v60 = (char *)&v320 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v61);
  v347 = (char *)&v320 - v62;
  v63 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v63);
  v65 = (char *)&v320 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v66);
  v68 = (char *)&v320 - v67;
  sub_10004A160(a1, (uint64_t)&v320 - v67, (uint64_t *)&unk_1011A20D0);
  v69 = type metadata accessor for GenericMusicItem(0);
  v70 = *(_QWORD *)(v69 - 8);
  v71 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v68, 1, v69) == 1;
  v72 = v410;
  if (!v71)
  {
    v321 = v47;
    v367 = v55;
    v351 = v49;
    v322 = v68;
    sub_10004A160((uint64_t)v68, (uint64_t)v65, (uint64_t *)&unk_1011A20D0);
    v81 = (*(uint64_t (**)(char *, uint64_t))(v70 + 88))(v65, v69);
    if (v81 == enum case for GenericMusicItem.album(_:))
    {
      (*(void (**)(char *, uint64_t))(v70 + 96))(v65, v69);
      v82 = v383;
      v83 = v384;
      v84 = v385;
      (*(void (**)(char *, char *, uint64_t))(v383 + 32))(v384, v65, v385);
      (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v40, v83, v84);
      v85 = v410;
      if (qword_10119B8B0 != -1)
        swift_once(&qword_10119B8B0, sub_1000E948C);
      v86 = Player.state<A>(for:)((uint64_t)v40, v84, (uint64_t)&protocol witness table for Album);
      v87 = sub_100007E8C(&qword_1011B9638);
      v88 = sub_100049F28(&qword_1011B9640, &qword_1011B9638, (uint64_t)&protocol conformance descriptor for MusicItemState<A>);
      v89 = ObservedObject.init(wrappedValue:)(v86, v87, v88);
      v91 = v90;
      v92 = *(void (**)(char *, uint64_t))(v82 + 8);
      v92(v40, v84);
      v93 = v386;
      sub_10005B704(v85, v386, type metadata accessor for PlayableView);
      v94 = v387;
      v95 = (uint64_t *)(v93 + *(int *)(v387 + 36));
      *v95 = v89;
      v95[1] = v91;
      v96 = v389;
      sub_10004A160(v93, v389, &qword_1011C30E8);
      swift_storeEnumTagMultiPayload(v96, v388, 0);
      v97 = sub_1006B596C();
      v98 = sub_1006B5A08();
      v99 = (uint64_t)v391;
      _ConditionalContent<>.init(storage:)(v96, v94, v390, v97, v98);
      v100 = v394;
      sub_10004A160(v99, v394, &qword_1011C30D8);
      swift_storeEnumTagMultiPayload(v100, v392, 1);
      v101 = sub_1006B57EC();
      v102 = sub_1006B5948();
      v103 = (uint64_t)v395;
      _ConditionalContent<>.init(storage:)(v100, v393, v396, v101, v102);
      sub_10004FF60(v99, &qword_1011C30D8);
      v104 = v399;
      sub_10004A160(v103, v399, &qword_1011C3090);
      swift_storeEnumTagMultiPayload(v104, v397, 0);
      v105 = sub_1006B57C8();
      v106 = sub_1006B5AA4();
      v107 = (uint64_t)v401;
      _ConditionalContent<>.init(storage:)(v104, v398, v400, v105, v106);
      sub_10004FF60(v103, &qword_1011C3090);
      v108 = (uint64_t)v351;
      sub_10004A160(v107, (uint64_t)v351, &qword_1011C3080);
      swift_storeEnumTagMultiPayload(v108, v321, 0);
      v109 = sub_1006B57A4();
      v110 = sub_1006B5D80();
      _ConditionalContent<>.init(storage:)(v108, v367, v408, v109, v110);
      sub_10004FF60(v107, &qword_1011C3080);
      sub_10004FF60(v93, &qword_1011C30E8);
      v92(v83, v84);
      goto LABEL_22;
    }
    if (v81 == enum case for GenericMusicItem.musicMovie(_:))
    {
      (*(void (**)(char *, uint64_t))(v70 + 96))(v65, v69);
      v111 = v369;
      v112 = v370;
      v113 = v371;
      (*(void (**)(char *, char *, uint64_t))(v369 + 32))(v370, v65, v371);
      v114 = (uint64_t)v368;
      (*(void (**)(char *, char *, uint64_t))(v111 + 16))(v368, v112, v113);
      if (qword_10119B8B0 != -1)
        swift_once(&qword_10119B8B0, sub_1000E948C);
      v115 = sub_100048748(&qword_10119D3A8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie, (uint64_t)&protocol conformance descriptor for MusicMovie);
      v116 = Player.state<A>(for:)(v114, v113, v115);
      v117 = sub_100007E8C(&qword_1011B9618);
      v118 = sub_100049F28(&qword_1011B9620, &qword_1011B9618, (uint64_t)&protocol conformance descriptor for MusicItemState<A>);
      v119 = ObservedObject.init(wrappedValue:)(v116, v117, v118);
      v121 = v120;
      v122 = *(void (**)(uint64_t, uint64_t))(v111 + 8);
      v122(v114, v113);
      v123 = v372;
      sub_10005B704(v410, v372, type metadata accessor for PlayableView);
      v124 = v377;
      v125 = (uint64_t *)(v123 + *(int *)(v377 + 36));
      *v125 = v119;
      v125[1] = v121;
      v126 = v375;
      sub_10004A160(v123, v375, &qword_1011C3138);
      swift_storeEnumTagMultiPayload(v126, v374, 1);
      v127 = sub_1006B5AEC();
      v128 = sub_1006B5B88();
      v129 = (uint64_t)v376;
      _ConditionalContent<>.init(storage:)(v126, v373, v124, v127, v128);
      v130 = v380;
      sub_10004A160(v129, v380, &qword_1011C3118);
      swift_storeEnumTagMultiPayload(v130, v378, 0);
      v131 = sub_1006B5AC8();
      v132 = sub_1006B5C24();
      v133 = (uint64_t)v382;
      _ConditionalContent<>.init(storage:)(v130, v379, v381, v131, v132);
      sub_10004FF60(v129, &qword_1011C3118);
      v134 = v399;
      sub_10004A160(v133, v399, &qword_1011C3108);
      swift_storeEnumTagMultiPayload(v134, v397, 1);
      v135 = sub_1006B57C8();
      v136 = sub_1006B5AA4();
      v137 = (uint64_t)v401;
      _ConditionalContent<>.init(storage:)(v134, v398, v400, v135, v136);
      sub_10004FF60(v133, &qword_1011C3108);
      v138 = (uint64_t)v351;
      sub_10004A160(v137, (uint64_t)v351, &qword_1011C3080);
      swift_storeEnumTagMultiPayload(v138, v321, 0);
      v139 = sub_1006B57A4();
      v140 = sub_1006B5D80();
      _ConditionalContent<>.init(storage:)(v138, v367, v408, v139, v140);
      sub_10004FF60(v137, &qword_1011C3080);
      sub_10004FF60(v123, &qword_1011C3138);
      v122((uint64_t)v112, v113);
      goto LABEL_22;
    }
    v55 = v367;
    if (v81 == enum case for GenericMusicItem.musicVideo(_:))
    {
      (*(void (**)(char *, uint64_t))(v70 + 96))(v65, v69);
      v141 = v363;
      v142 = v364;
      v143 = v365;
      (*(void (**)(char *, char *, uint64_t))(v363 + 32))(v364, v65, v365);
      v144 = (uint64_t)v362;
      (*(void (**)(char *, char *, uint64_t))(v141 + 16))(v362, v142, v143);
      if (qword_10119B8B0 != -1)
        swift_once(&qword_10119B8B0, sub_1000E948C);
      v145 = sub_100048748((unint64_t *)&unk_1011B8C10, (uint64_t (*)(uint64_t))&type metadata accessor for MusicVideo, (uint64_t)&protocol conformance descriptor for MusicVideo);
      v146 = Player.state<A>(for:)(v144, v143, v145);
      v147 = sub_100007E8C((uint64_t *)&unk_1011A3EC0);
      v148 = sub_100049F28((unint64_t *)&unk_1011B8C30, (uint64_t *)&unk_1011A3EC0, (uint64_t)&protocol conformance descriptor for MusicItemState<A>);
      v149 = ObservedObject.init(wrappedValue:)(v146, v147, v148);
      v151 = v150;
      v152 = *(void (**)(uint64_t, uint64_t))(v141 + 8);
      v152(v144, v143);
      v153 = v366;
      sub_10005B704(v410, v366, type metadata accessor for PlayableView);
      v154 = v390;
      v155 = (uint64_t *)(v153 + *(int *)(v390 + 36));
      *v155 = v149;
      v155[1] = v151;
      v156 = &qword_1011C30F8;
      v157 = v389;
      sub_10004A160(v153, v389, &qword_1011C30F8);
      swift_storeEnumTagMultiPayload(v157, v388, 1);
      v158 = sub_1006B596C();
      v159 = sub_1006B5A08();
      v160 = (uint64_t)v391;
      _ConditionalContent<>.init(storage:)(v157, v387, v154, v158, v159);
      v161 = &qword_1011C30D8;
      v162 = v394;
      sub_10004A160(v160, v394, &qword_1011C30D8);
      v163 = v162;
      v164 = v392;
      v165 = 1;
LABEL_20:
      swift_storeEnumTagMultiPayload(v163, v164, v165);
      v179 = sub_1006B57EC();
      v180 = sub_1006B5948();
      v181 = (uint64_t)v395;
      _ConditionalContent<>.init(storage:)(v162, v393, v396, v179, v180);
      sub_10004FF60(v160, v161);
      v182 = v399;
      sub_10004A160(v181, v399, &qword_1011C3090);
      swift_storeEnumTagMultiPayload(v182, v397, 0);
      v183 = sub_1006B57C8();
      v184 = sub_1006B5AA4();
      v185 = (uint64_t)v401;
      _ConditionalContent<>.init(storage:)(v182, v398, v400, v183, v184);
      sub_10004FF60(v181, &qword_1011C3090);
      v186 = (uint64_t)v351;
      sub_10004A160(v185, (uint64_t)v351, &qword_1011C3080);
      swift_storeEnumTagMultiPayload(v186, v321, 0);
      v187 = sub_1006B57A4();
      v188 = sub_1006B5D80();
      _ConditionalContent<>.init(storage:)(v186, v367, v408, v187, v188);
      v189 = v185;
LABEL_21:
      sub_10004FF60(v189, &qword_1011C3080);
      sub_10004FF60(v153, v156);
      v152((uint64_t)v142, v143);
LABEL_22:
      v80 = (uint64_t)v322;
      return sub_10004FF60(v80, (uint64_t *)&unk_1011A20D0);
    }
    if (v81 == enum case for GenericMusicItem.playlist(_:))
    {
      (*(void (**)(char *, uint64_t))(v70 + 96))(v65, v69);
      v166 = v353;
      v142 = v354;
      v143 = v355;
      (*(void (**)(char *, char *, uint64_t))(v353 + 32))(v354, v65, v355);
      v167 = (uint64_t)v352;
      (*(void (**)(char *, char *, uint64_t))(v166 + 16))(v352, v142, v143);
      if (qword_10119B8B0 != -1)
        swift_once(&qword_10119B8B0, sub_1000E948C);
      v168 = Player.state<A>(for:)(v167, v143, (uint64_t)&protocol witness table for Playlist);
      v169 = sub_100007E8C(&qword_1011B9648);
      v170 = sub_100049F28(&qword_1011B9650, &qword_1011B9648, (uint64_t)&protocol conformance descriptor for MusicItemState<A>);
      v171 = ObservedObject.init(wrappedValue:)(v168, v169, v170);
      v173 = v172;
      v152 = *(void (**)(uint64_t, uint64_t))(v166 + 8);
      v152(v167, v143);
      v153 = v356;
      sub_10005B704(v410, v356, type metadata accessor for PlayableView);
      v174 = v361;
      v175 = (uint64_t *)(v153 + *(int *)(v361 + 36));
      *v175 = v171;
      v175[1] = v173;
      v156 = &qword_1011C30C8;
      v176 = v359;
      sub_10004A160(v153, v359, &qword_1011C30C8);
      swift_storeEnumTagMultiPayload(v176, v358, 1);
      v177 = sub_1006B5810();
      v178 = sub_1006B58AC();
      v160 = (uint64_t)v360;
      _ConditionalContent<>.init(storage:)(v176, v357, v174, v177, v178);
      v161 = &qword_1011C30A0;
      v162 = v394;
      sub_10004A160(v160, v394, &qword_1011C30A0);
      v163 = v162;
      v164 = v392;
      v165 = 0;
      goto LABEL_20;
    }
    v49 = v351;
    if (v81 == enum case for GenericMusicItem.song(_:))
    {
      (*(void (**)(char *, uint64_t))(v70 + 96))(v65, v69);
      v142 = v347;
      v143 = v348;
      (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v347, v65, v348);
      (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v60, v142, v143);
      if (qword_10119B8B0 != -1)
        swift_once(&qword_10119B8B0, sub_1000E948C);
      v191 = Player.state<A>(for:)((uint64_t)v60, v143, (uint64_t)&protocol witness table for Song);
      v192 = sub_100007E8C((uint64_t *)&unk_1011B8D60);
      v193 = sub_100049F28((unint64_t *)&unk_1011C72E0, (uint64_t *)&unk_1011B8D60, (uint64_t)&protocol conformance descriptor for MusicItemState<A>);
      v194 = ObservedObject.init(wrappedValue:)(v191, v192, v193);
      v196 = v195;
      v152 = *(void (**)(uint64_t, uint64_t))(v58 + 8);
      v152((uint64_t)v60, v143);
      v153 = v349;
      sub_10005B704(v410, v349, type metadata accessor for PlayableView);
      v197 = v357;
      v198 = (uint64_t *)(v153 + *(int *)(v357 + 36));
      *v198 = v194;
      v198[1] = v196;
      v156 = &qword_1011C30B0;
      v199 = v359;
      sub_10004A160(v153, v359, &qword_1011C30B0);
      swift_storeEnumTagMultiPayload(v199, v358, 0);
      v200 = sub_1006B5810();
      v201 = sub_1006B58AC();
      v202 = (uint64_t)v360;
      _ConditionalContent<>.init(storage:)(v199, v197, v361, v200, v201);
      v203 = v394;
      sub_10004A160(v202, v394, &qword_1011C30A0);
      swift_storeEnumTagMultiPayload(v203, v392, 0);
      v204 = sub_1006B57EC();
      v205 = sub_1006B5948();
      v206 = (uint64_t)v395;
      _ConditionalContent<>.init(storage:)(v203, v393, v396, v204, v205);
      sub_10004FF60(v202, &qword_1011C30A0);
      v207 = v399;
      sub_10004A160(v206, v399, &qword_1011C3090);
      swift_storeEnumTagMultiPayload(v207, v397, 0);
      v208 = sub_1006B57C8();
      v209 = sub_1006B5AA4();
      v210 = (uint64_t)v401;
      _ConditionalContent<>.init(storage:)(v207, v398, v400, v208, v209);
      sub_10004FF60(v206, &qword_1011C3090);
      v211 = (uint64_t)v351;
      sub_10004A160(v210, (uint64_t)v351, &qword_1011C3080);
      swift_storeEnumTagMultiPayload(v211, v321, 0);
      v212 = sub_1006B57A4();
      v213 = sub_1006B5D80();
      _ConditionalContent<>.init(storage:)(v211, v367, v408, v212, v213);
      v189 = v210;
      goto LABEL_21;
    }
    if (v81 == enum case for GenericMusicItem.station(_:))
    {
      (*(void (**)(char *, uint64_t))(v70 + 96))(v65, v69);
      v214 = v342;
      v215 = v343;
      v216 = v350;
      (*(void (**)(char *, char *, uint64_t))(v342 + 32))(v343, v65, v350);
      v217 = (uint64_t)v341;
      (*(void (**)(char *, char *, uint64_t))(v214 + 16))(v341, v215, v216);
      if (qword_10119B8B0 != -1)
        swift_once(&qword_10119B8B0, sub_1000E948C);
      v218 = Player.state<A>(for:)(v217, v216, (uint64_t)&protocol witness table for Station);
      v219 = sub_100007E8C(&qword_1011B9628);
      v220 = sub_100049F28(&qword_1011B9630, &qword_1011B9628, (uint64_t)&protocol conformance descriptor for MusicItemState<A>);
      v221 = ObservedObject.init(wrappedValue:)(v218, v219, v220);
      v223 = v222;
      v407 = *(void (**)(uint64_t, uint64_t))(v214 + 8);
      v407(v217, v216);
      v224 = v344;
      sub_10005B704(v410, v344, type metadata accessor for PlayableView);
      v225 = v373;
      v226 = (uint64_t *)(v224 + *(int *)(v373 + 36));
      *v226 = v221;
      v226[1] = v223;
      v227 = v375;
      sub_10004A160(v224, v375, &qword_1011C3128);
      swift_storeEnumTagMultiPayload(v227, v374, 0);
      v228 = sub_1006B5AEC();
      v229 = sub_1006B5B88();
      v230 = (uint64_t)v376;
      _ConditionalContent<>.init(storage:)(v227, v225, v377, v228, v229);
      v231 = v380;
      sub_10004A160(v230, v380, &qword_1011C3118);
      swift_storeEnumTagMultiPayload(v231, v378, 0);
      v232 = sub_1006B5AC8();
      v233 = sub_1006B5C24();
      v234 = (uint64_t)v382;
      _ConditionalContent<>.init(storage:)(v231, v379, v381, v232, v233);
      sub_10004FF60(v230, &qword_1011C3118);
      v235 = v399;
      sub_10004A160(v234, v399, &qword_1011C3108);
      swift_storeEnumTagMultiPayload(v235, v397, 1);
      v236 = sub_1006B57C8();
      v237 = sub_1006B5AA4();
      v238 = (uint64_t)v401;
      _ConditionalContent<>.init(storage:)(v235, v398, v400, v236, v237);
      sub_10004FF60(v234, &qword_1011C3108);
      v239 = (uint64_t)v351;
      sub_10004A160(v238, (uint64_t)v351, &qword_1011C3080);
      swift_storeEnumTagMultiPayload(v239, v321, 0);
      v240 = sub_1006B57A4();
      v241 = sub_1006B5D80();
      _ConditionalContent<>.init(storage:)(v239, v55, v408, v240, v241);
      sub_10004FF60(v238, &qword_1011C3080);
      sub_10004FF60(v224, &qword_1011C3128);
      v242 = v215;
      v243 = (uint64_t *)&v382;
LABEL_40:
      v407((uint64_t)v242, *(v243 - 32));
      goto LABEL_22;
    }
    if (v81 == enum case for GenericMusicItem.tvEpisode(_:))
    {
      (*(void (**)(char *, uint64_t))(v70 + 96))(v65, v69);
      v244 = v332;
      v245 = v345;
      v246 = v346;
      (*(void (**)(char *, char *, uint64_t))(v332 + 32))(v345, v65, v346);
      v247 = (uint64_t)v331;
      (*(void (**)(char *, char *, uint64_t))(v244 + 16))(v331, v245, v246);
      if (qword_10119B8B0 != -1)
        swift_once(&qword_10119B8B0, sub_1000E948C);
      v248 = sub_100048748(&qword_1011A0388, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&protocol conformance descriptor for TVEpisode);
      v249 = Player.state<A>(for:)(v247, v246, v248);
      v250 = sub_100007E8C(&qword_1011A0390);
      v251 = sub_100049F28(&qword_1011A0398, &qword_1011A0390, (uint64_t)&protocol conformance descriptor for MusicItemState<A>);
      v252 = ObservedObject.init(wrappedValue:)(v249, v250, v251);
      v254 = v253;
      v407 = *(void (**)(uint64_t, uint64_t))(v244 + 8);
      v407(v247, v246);
      v255 = v333;
      sub_10005B704(v410, v333, type metadata accessor for PlayableView);
      v256 = v336;
      v257 = (uint64_t *)(v255 + *(int *)(v336 + 36));
      *v257 = v252;
      v257[1] = v254;
      v258 = v338;
      sub_10004A160(v255, v338, &qword_1011C3158);
      swift_storeEnumTagMultiPayload(v258, v337, 0);
      v259 = sub_1006B5C48();
      v260 = sub_1006B5CE4();
      v261 = (uint64_t)v340;
      _ConditionalContent<>.init(storage:)(v258, v256, v339, v259, v260);
      v262 = v380;
      sub_10004A160(v261, v380, &qword_1011C3148);
      swift_storeEnumTagMultiPayload(v262, v378, 1);
      v263 = sub_1006B5AC8();
      v264 = sub_1006B5C24();
      v265 = (uint64_t)v382;
      _ConditionalContent<>.init(storage:)(v262, v379, v381, v263, v264);
      sub_10004FF60(v261, &qword_1011C3148);
      v266 = v399;
      sub_10004A160(v265, v399, &qword_1011C3108);
      swift_storeEnumTagMultiPayload(v266, v397, 1);
      v267 = sub_1006B57C8();
      v268 = sub_1006B5AA4();
      v269 = (uint64_t)v401;
      _ConditionalContent<>.init(storage:)(v266, v398, v400, v267, v268);
      sub_10004FF60(v265, &qword_1011C3108);
      sub_10004A160(v269, (uint64_t)v49, &qword_1011C3080);
      swift_storeEnumTagMultiPayload(v49, v321, 0);
      v270 = sub_1006B57A4();
      v271 = sub_1006B5D80();
      _ConditionalContent<>.init(storage:)(v49, v55, v408, v270, v271);
      sub_10004FF60(v269, &qword_1011C3080);
      sub_10004FF60(v255, &qword_1011C3158);
      v242 = v345;
      v243 = &v378;
      goto LABEL_40;
    }
    if (v81 == enum case for GenericMusicItem.uploadedAudio(_:))
    {
      (*(void (**)(char *, uint64_t))(v70 + 96))(v65, v69);
      v272 = v327;
      v273 = v334;
      v274 = v335;
      (*(void (**)(char *, char *, uint64_t))(v327 + 32))(v334, v65, v335);
      v275 = (uint64_t)v326;
      (*(void (**)(char *, char *, uint64_t))(v272 + 16))(v326, v273, v274);
      if (qword_10119B8B0 != -1)
        swift_once(&qword_10119B8B0, sub_1000E948C);
      v276 = sub_100048748(&qword_1011B9600, (uint64_t (*)(uint64_t))&type metadata accessor for UploadedAudio, (uint64_t)&protocol conformance descriptor for UploadedAudio);
      v277 = Player.state<A>(for:)(v275, v274, v276);
      v278 = sub_100007E8C(&qword_1011B9608);
      v279 = sub_100049F28(&qword_1011B9610, &qword_1011B9608, (uint64_t)&protocol conformance descriptor for MusicItemState<A>);
      v280 = ObservedObject.init(wrappedValue:)(v277, v278, v279);
      v282 = v281;
      v407 = *(void (**)(uint64_t, uint64_t))(v272 + 8);
      v407(v275, v274);
      v283 = v330;
      sub_10005B704(v410, v330, type metadata accessor for PlayableView);
      v284 = v339;
      v285 = (uint64_t *)(v283 + *(int *)(v339 + 36));
      *v285 = v280;
      v285[1] = v282;
      v286 = v338;
      sub_10004A160(v283, v338, &qword_1011C3168);
      swift_storeEnumTagMultiPayload(v286, v337, 1);
      v287 = sub_1006B5C48();
      v288 = sub_1006B5CE4();
      v289 = (uint64_t)v340;
      _ConditionalContent<>.init(storage:)(v286, v336, v284, v287, v288);
      v290 = v380;
      sub_10004A160(v289, v380, &qword_1011C3148);
      swift_storeEnumTagMultiPayload(v290, v378, 1);
      v291 = sub_1006B5AC8();
      v292 = sub_1006B5C24();
      v293 = (uint64_t)v382;
      _ConditionalContent<>.init(storage:)(v290, v379, v381, v291, v292);
      sub_10004FF60(v289, &qword_1011C3148);
      v294 = v399;
      sub_10004A160(v293, v399, &qword_1011C3108);
      swift_storeEnumTagMultiPayload(v294, v397, 1);
      v295 = sub_1006B57C8();
      v296 = sub_1006B5AA4();
      v297 = (uint64_t)v401;
      _ConditionalContent<>.init(storage:)(v294, v398, v400, v295, v296);
      sub_10004FF60(v293, &qword_1011C3108);
      sub_10004A160(v297, (uint64_t)v49, &qword_1011C3080);
      swift_storeEnumTagMultiPayload(v49, v321, 0);
      v298 = sub_1006B57A4();
      v299 = sub_1006B5D80();
      _ConditionalContent<>.init(storage:)(v49, v55, v408, v298, v299);
      sub_10004FF60(v297, &qword_1011C3080);
      sub_10004FF60(v283, &qword_1011C3168);
      v242 = v334;
      v243 = &v367;
      goto LABEL_40;
    }
    if (v81 == enum case for GenericMusicItem.uploadedVideo(_:))
    {
      (*(void (**)(char *, uint64_t))(v70 + 96))(v65, v69);
      v300 = v324;
      v301 = v328;
      v302 = v329;
      (*(void (**)(char *, char *, uint64_t))(v324 + 32))(v328, v65, v329);
      v303 = (uint64_t)v323;
      (*(void (**)(char *, char *, uint64_t))(v300 + 16))(v323, v301, v302);
      if (qword_10119B8B0 != -1)
        swift_once(&qword_10119B8B0, sub_1000E948C);
      v304 = sub_100048748(&qword_10119E0A0, (uint64_t (*)(uint64_t))&type metadata accessor for UploadedVideo, (uint64_t)&protocol conformance descriptor for UploadedVideo);
      v305 = Player.state<A>(for:)(v303, v302, v304);
      v306 = sub_100007E8C(&qword_1011B95F0);
      v307 = sub_100049F28(&qword_1011B95F8, &qword_1011B95F0, (uint64_t)&protocol conformance descriptor for MusicItemState<A>);
      v308 = ObservedObject.init(wrappedValue:)(v305, v306, v307);
      v310 = v309;
      v402 = *(void (**)(uint64_t, uint64_t))(v300 + 8);
      v402(v303, v302);
      v311 = v325;
      sub_10005B704(v410, v325, type metadata accessor for PlayableView);
      v313 = v404;
      v312 = v405;
      v314 = (uint64_t *)(v311 + *(int *)(v404 + 36));
      *v314 = v308;
      v314[1] = v310;
      sub_10004A160(v311, v312, &qword_1011C3188);
      swift_storeEnumTagMultiPayload(v312, v403, 0);
      v315 = sub_1006B5E04();
      v316 = sub_100048748(&qword_1011C30B8, type metadata accessor for PlayableView, (uint64_t)&unk_100EB8990);
      v317 = (uint64_t)v407;
      _ConditionalContent<>.init(storage:)(v312, v313, v406, v315, v316);
      sub_10004A160(v317, (uint64_t)v49, &qword_1011C3178);
      swift_storeEnumTagMultiPayload(v49, v321, 1);
      v318 = sub_1006B57A4();
      v319 = sub_1006B5D80();
      _ConditionalContent<>.init(storage:)(v49, v55, v408, v318, v319);
      sub_10004FF60(v317, &qword_1011C3178);
      sub_10004FF60(v311, &qword_1011C3188);
      v402((uint64_t)v328, v329);
      goto LABEL_22;
    }
    (*(void (**)(char *, uint64_t))(v70 + 8))(v65, v69);
    v68 = v322;
    v47 = v321;
    v72 = v410;
  }
  v73 = v402;
  sub_10005B704(v72, (uint64_t)v402, type metadata accessor for PlayableView);
  v74 = v405;
  sub_10005B704((uint64_t)v73, v405, type metadata accessor for PlayableView);
  swift_storeEnumTagMultiPayload(v74, v403, 1);
  v75 = sub_1006B5E04();
  v76 = sub_100048748(&qword_1011C30B8, type metadata accessor for PlayableView, (uint64_t)&unk_100EB8990);
  v77 = (uint64_t)v407;
  _ConditionalContent<>.init(storage:)(v74, v404, v406, v75, v76);
  sub_10004A160(v77, (uint64_t)v49, &qword_1011C3178);
  swift_storeEnumTagMultiPayload(v49, v47, 1);
  v78 = sub_1006B57A4();
  v79 = sub_1006B5D80();
  _ConditionalContent<>.init(storage:)(v49, v55, v408, v78, v79);
  sub_10004FF60(v77, &qword_1011C3178);
  sub_10005B748((uint64_t)v73, type metadata accessor for PlayableView);
  v80 = (uint64_t)v68;
  return sub_10004FF60(v80, (uint64_t *)&unk_1011A20D0);
}

uint64_t sub_1006A7FC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *);
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int v90;
  char *v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void (*v99)(char *, uint64_t);
  uint64_t v100;
  uint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  void (*v129)(char *, uint64_t, uint64_t);
  uint64_t v130;
  uint64_t v131;
  uint64_t *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  unint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  char *v148;
  uint64_t *v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  _QWORD *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  unint64_t v170;
  unint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  unint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  _QWORD *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  unint64_t v199;
  unint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  unint64_t v208;
  uint64_t v209;
  uint64_t v210;
  void (*v211)(char *, char *, uint64_t);
  uint64_t v212;
  _QWORD *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  unint64_t v227;
  unint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  unint64_t v235;
  uint64_t v236;
  char *v237;
  uint64_t v238;
  uint64_t v239;
  _QWORD *v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t *v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  unint64_t v254;
  unint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  unint64_t v263;
  uint64_t v264;
  char *v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  _QWORD *v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t *v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  unint64_t v283;
  unint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  unint64_t v292;
  uint64_t v293;
  char *v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  _QWORD *v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t *v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  unint64_t v312;
  unint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  unint64_t v321;
  uint64_t v322;
  char *v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  _QWORD *v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t *v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  unint64_t v344;
  uint64_t v345;
  uint64_t OpaqueTypeConformance2;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  unint64_t v351;
  uint64_t v353;
  char *v354;
  char *v355;
  uint64_t v356;
  char *v357;
  char *v358;
  uint64_t v359;
  char *v360;
  char *v361;
  uint64_t v362;
  char *v363;
  uint64_t v364;
  char *v365;
  char *v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  char *v372;
  char *v373;
  uint64_t v374;
  char *v375;
  char *v376;
  char *v377;
  uint64_t v378;
  char *v379;
  uint64_t v380;
  char *v381;
  uint64_t v382;
  uint64_t v383;
  char *v384;
  char *v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  char *v389;
  uint64_t v390;
  char *v391;
  uint64_t v392;
  uint64_t v393;
  char *v394;
  char *v395;
  char *v396;
  uint64_t v397;
  uint64_t v398;
  char *v399;
  char *v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  char *v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  char *v410;
  char *v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  char *v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  char *v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  char *v427;
  char *v428;
  uint64_t v429;
  uint64_t v430;
  char *v431;
  void (*v432)(char *, uint64_t);
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  char *v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  ValueMetadata *v443;
  uint64_t v444;
  uint64_t v445;
  unint64_t v446;
  uint64_t v447;

  v437 = a2;
  v434 = sub_100007E8C(&qword_1011C3318);
  v441 = *(_QWORD *)(v434 - 8);
  __chkstk_darwin(v434);
  v438 = (char *)&v353 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_1011C3320);
  __chkstk_darwin(v4);
  v431 = (char *)&v353 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v439 = sub_100007E8C(&qword_1011C3328);
  __chkstk_darwin(v439);
  v432 = (void (*)(char *, uint64_t))((char *)&v353 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v430 = sub_100007E8C(&qword_1011C3330);
  __chkstk_darwin(v430);
  v357 = (char *)&v353 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v362 = type metadata accessor for UploadedVideo(0);
  v356 = *(_QWORD *)(v362 - 8);
  __chkstk_darwin(v362);
  v355 = (char *)&v353 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v361 = (char *)&v353 - v10;
  v371 = sub_100007E8C(&qword_1011C3338);
  __chkstk_darwin(v371);
  v360 = (char *)&v353 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v367 = type metadata accessor for UploadedAudio(0);
  v359 = *(_QWORD *)(v367 - 8);
  __chkstk_darwin(v367);
  v358 = (char *)&v353 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v366 = (char *)&v353 - v14;
  v368 = sub_100007E8C(&qword_1011C3340);
  __chkstk_darwin(v368);
  v370 = (uint64_t)&v353 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v409 = sub_100007E8C(&qword_1011C3348);
  __chkstk_darwin(v409);
  v372 = (char *)&v353 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v369 = sub_100007E8C(&qword_1011C3350);
  __chkstk_darwin(v369);
  v365 = (char *)&v353 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v378 = type metadata accessor for TVEpisode(0);
  v364 = *(_QWORD *)(v378 - 8);
  __chkstk_darwin(v378);
  v363 = (char *)&v353 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v377 = (char *)&v353 - v20;
  v405 = sub_100007E8C(&qword_1011C3358);
  __chkstk_darwin(v405);
  v400 = (char *)&v353 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v412 = type metadata accessor for MusicMovie(0);
  v397 = *(_QWORD *)(v412 - 8);
  __chkstk_darwin(v412);
  v396 = (char *)&v353 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v399 = (char *)&v353 - v24;
  v406 = sub_100007E8C(&qword_1011C3360);
  __chkstk_darwin(v406);
  v408 = (uint64_t)&v353 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v401 = sub_100007E8C(&qword_1011C3368);
  __chkstk_darwin(v401);
  v403 = (uint64_t)&v353 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v407 = sub_100007E8C(&qword_1011C3370);
  __chkstk_darwin(v407);
  v404 = (char *)&v353 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v426 = sub_100007E8C(&qword_1011C3378);
  __chkstk_darwin(v426);
  v410 = (char *)&v353 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v402 = sub_100007E8C(&qword_1011C3380);
  __chkstk_darwin(v402);
  v376 = (char *)&v353 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v380 = type metadata accessor for Station(0);
  v374 = *(_QWORD *)(v380 - 8);
  __chkstk_darwin(v380);
  v373 = (char *)&v353 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v375 = (char *)&v353 - v32;
  v416 = sub_100007E8C(&qword_1011C3388);
  __chkstk_darwin(v416);
  v395 = (char *)&v353 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v398 = type metadata accessor for MusicVideo(0);
  v392 = *(_QWORD *)(v398 - 8);
  __chkstk_darwin(v398);
  v391 = (char *)&v353 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  v394 = (char *)&v353 - v36;
  v413 = sub_100007E8C(&qword_1011C3390);
  __chkstk_darwin(v413);
  v415 = (uint64_t)&v353 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v422 = sub_100007E8C(&qword_1011C3398);
  __chkstk_darwin(v422);
  v417 = (char *)&v353 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v414 = sub_100007E8C(&qword_1011C33A0);
  __chkstk_darwin(v414);
  v411 = (char *)&v353 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v429 = type metadata accessor for Album(0);
  v40 = *(_QWORD *)(v429 - 8);
  __chkstk_darwin(v429);
  v42 = (char *)&v353 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v43);
  v428 = (char *)&v353 - v44;
  v390 = sub_100007E8C(&qword_1011C33A8);
  __chkstk_darwin(v390);
  v385 = (char *)&v353 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v393 = type metadata accessor for Playlist(0);
  v382 = *(_QWORD *)(v393 - 8);
  __chkstk_darwin(v393);
  v381 = (char *)&v353 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v47);
  v384 = (char *)&v353 - v48;
  v435 = sub_100007E8C(&qword_1011C33B0);
  __chkstk_darwin(v435);
  v433 = (uint64_t)&v353 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v423 = sub_100007E8C(&qword_1011C33B8);
  __chkstk_darwin(v423);
  v425 = (uint64_t)&v353 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v418 = sub_100007E8C(&qword_1011C33C0);
  __chkstk_darwin(v418);
  v420 = (uint64_t)&v353 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v387 = sub_100007E8C(&qword_1011C33C8);
  __chkstk_darwin(v387);
  v388 = (uint64_t)&v353 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v419 = sub_100007E8C(&qword_1011C33D0);
  __chkstk_darwin(v419);
  v389 = (char *)&v353 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  v424 = sub_100007E8C(&qword_1011C33D8);
  __chkstk_darwin(v424);
  v421 = (char *)&v353 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  v436 = sub_100007E8C(&qword_1011C33E0);
  __chkstk_darwin(v436);
  v427 = (char *)&v353 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  v386 = sub_100007E8C(&qword_1011C33E8);
  __chkstk_darwin(v386);
  v379 = (char *)&v353 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  v383 = type metadata accessor for Song(0);
  v57 = *(_QWORD *)(v383 - 8);
  __chkstk_darwin(v383);
  v59 = (char *)&v353 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v60);
  v62 = (char *)&v353 - v61;
  v63 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v63);
  v65 = (char *)&v353 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v66);
  v68 = (char *)&v353 - v67;
  sub_10004A160(a1, (uint64_t)&v353 - v67, (uint64_t *)&unk_1011A20D0);
  v69 = type metadata accessor for GenericMusicItem(0);
  v70 = *(_QWORD *)(v69 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v68, 1, v69) == 1)
    goto LABEL_2;
  v353 = v4;
  v89 = v441;
  v354 = v68;
  sub_10004A160((uint64_t)v68, (uint64_t)v65, (uint64_t *)&unk_1011A20D0);
  v90 = (*(uint64_t (**)(char *, uint64_t))(v70 + 88))(v65, v69);
  if (v90 == enum case for GenericMusicItem.album(_:))
  {
    (*(void (**)(char *, uint64_t))(v70 + 96))(v65, v69);
    v91 = v428;
    v92 = v429;
    (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v428, v65, v429);
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v42, v91, v92);
    if (qword_10119B8B0 != -1)
      swift_once(&qword_10119B8B0, sub_1000E948C);
    v93 = Player.state<A>(for:)((uint64_t)v42, v92, (uint64_t)&protocol witness table for Album);
    v94 = sub_100007E8C(&qword_1011B9638);
    v95 = sub_100049F28(&qword_1011B9640, &qword_1011B9638, (uint64_t)&protocol conformance descriptor for MusicItemState<A>);
    v96 = ObservedObject.init(wrappedValue:)(v93, v94, v95);
    v98 = v97;
    v99 = *(void (**)(char *, uint64_t))(v40 + 8);
    v99(v42, v92);
    v100 = (uint64_t)v411;
    (*(void (**)(char *, uint64_t, uint64_t))(v89 + 16))(v411, v440, v434);
    v101 = v414;
    v102 = (uint64_t *)(v100 + *(int *)(v414 + 36));
    *v102 = v96;
    v102[1] = v98;
    v103 = v415;
    sub_10004A160(v100, v415, &qword_1011C33A0);
    swift_storeEnumTagMultiPayload(v103, v413, 0);
    v104 = sub_1006B63B0(&qword_1011C3440, &qword_1011C33A0, &qword_1011B70F0, &qword_1011B70A8);
    v105 = sub_1006B63B0(&qword_1011C3448, &qword_1011C3388, &qword_1011B70F8, &qword_1011B70B0);
    v106 = (uint64_t)v417;
    _ConditionalContent<>.init(storage:)(v103, v101, v416, v104, v105);
    v107 = v420;
    sub_10004A160(v106, v420, &qword_1011C3398);
    swift_storeEnumTagMultiPayload(v107, v418, 1);
    v108 = sub_1006B6304();
    v109 = sub_1006B64F8();
    v110 = (uint64_t)v421;
    _ConditionalContent<>.init(storage:)(v107, v419, v422, v108, v109);
    sub_10004FF60(v106, &qword_1011C3398);
    v111 = v425;
    sub_10004A160(v110, v425, &qword_1011C33D8);
    swift_storeEnumTagMultiPayload(v111, v423, 0);
    v112 = sub_1006B62E0();
    v113 = sub_1006B65A4();
    v114 = (uint64_t)v427;
    _ConditionalContent<>.init(storage:)(v111, v424, v426, v112, v113);
    sub_10004FF60(v110, &qword_1011C33D8);
    v115 = v433;
    sub_10004A160(v114, v433, &qword_1011C33E0);
    swift_storeEnumTagMultiPayload(v115, v435, 0);
    v116 = sub_10015FD08(&qword_1011C3410, &qword_1011C33E0, (void (*)(void))sub_1006B62E0, (void (*)(void))sub_1006B65A4);
    v117 = sub_1006B6720();
    _ConditionalContent<>.init(storage:)(v115, v436, v439, v116, v117);
    sub_10004FF60(v114, &qword_1011C33E0);
    sub_10004FF60(v100, &qword_1011C33A0);
    v99(v428, v429);
    goto LABEL_40;
  }
  if (v90 == enum case for GenericMusicItem.musicMovie(_:))
  {
    (*(void (**)(char *, uint64_t))(v70 + 96))(v65, v69);
    v118 = v397;
    v119 = v399;
    v120 = v412;
    (*(void (**)(char *, char *, uint64_t))(v397 + 32))(v399, v65, v412);
    v121 = (uint64_t)v396;
    (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v396, v119, v120);
    if (qword_10119B8B0 != -1)
      swift_once(&qword_10119B8B0, sub_1000E948C);
    v122 = sub_100048748(&qword_10119D3A8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie, (uint64_t)&protocol conformance descriptor for MusicMovie);
    v123 = Player.state<A>(for:)(v121, v120, v122);
    v124 = sub_100007E8C(&qword_1011B9618);
    v125 = sub_100049F28(&qword_1011B9620, &qword_1011B9618, (uint64_t)&protocol conformance descriptor for MusicItemState<A>);
    v126 = ObservedObject.init(wrappedValue:)(v123, v124, v125);
    v128 = v127;
    v438 = *(char **)(v118 + 8);
    ((void (*)(uint64_t, uint64_t))v438)(v121, v120);
    v129 = *(void (**)(char *, uint64_t, uint64_t))(v89 + 16);
    v130 = (uint64_t)v400;
    v129(v400, v440, v434);
    v131 = v405;
    v132 = (uint64_t *)(v130 + *(int *)(v405 + 36));
    *v132 = v126;
    v132[1] = v128;
    v133 = v403;
    sub_10004A160(v130, v403, &qword_1011C3358);
    swift_storeEnumTagMultiPayload(v133, v401, 1);
    v134 = sub_1006B63B0(&qword_1011C3460, &qword_1011C3380, &qword_1011B7100, &qword_1011B70B8);
    v135 = sub_1006B63B0(&qword_1011C3468, &qword_1011C3358, &qword_1011B7108, &qword_1011B70C0);
    v136 = (uint64_t)v404;
    _ConditionalContent<>.init(storage:)(v133, v402, v131, v134, v135);
    v137 = v408;
    sub_10004A160(v136, v408, &qword_1011C3370);
    swift_storeEnumTagMultiPayload(v137, v406, 0);
    v138 = sub_1006B65C8();
    v139 = sub_1006B6674();
    v140 = (uint64_t)v410;
    _ConditionalContent<>.init(storage:)(v137, v407, v409, v138, v139);
    sub_10004FF60(v136, &qword_1011C3370);
    v141 = v425;
    sub_10004A160(v140, v425, &qword_1011C3378);
    swift_storeEnumTagMultiPayload(v141, v423, 1);
    v142 = sub_1006B62E0();
    v143 = sub_1006B65A4();
    v144 = (uint64_t)v427;
    _ConditionalContent<>.init(storage:)(v141, v424, v426, v142, v143);
    sub_10004FF60(v140, &qword_1011C3378);
    v145 = v433;
    sub_10004A160(v144, v433, &qword_1011C33E0);
    swift_storeEnumTagMultiPayload(v145, v435, 0);
    v146 = sub_10015FD08(&qword_1011C3410, &qword_1011C33E0, (void (*)(void))sub_1006B62E0, (void (*)(void))sub_1006B65A4);
    v147 = sub_1006B6720();
    _ConditionalContent<>.init(storage:)(v145, v436, v439, v146, v147);
    sub_10004FF60(v144, &qword_1011C33E0);
    sub_10004FF60(v130, &qword_1011C3358);
    v148 = v119;
    v149 = &v444;
LABEL_39:
    ((void (*)(char *, _QWORD))v438)(v148, *(v149 - 32));
LABEL_40:
    v88 = (uint64_t)v354;
    return sub_10004FF60(v88, (uint64_t *)&unk_1011A20D0);
  }
  if (v90 == enum case for GenericMusicItem.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v70 + 96))(v65, v69);
    v150 = v392;
    v151 = v394;
    v152 = v398;
    (*(void (**)(char *, char *, uint64_t))(v392 + 32))(v394, v65, v398);
    v153 = (uint64_t)v391;
    (*(void (**)(char *, char *, uint64_t))(v150 + 16))(v391, v151, v152);
    v154 = v440;
    if (qword_10119B8B0 != -1)
      swift_once(&qword_10119B8B0, sub_1000E948C);
    v155 = sub_100048748((unint64_t *)&unk_1011B8C10, (uint64_t (*)(uint64_t))&type metadata accessor for MusicVideo, (uint64_t)&protocol conformance descriptor for MusicVideo);
    v156 = Player.state<A>(for:)(v153, v152, v155);
    v157 = sub_100007E8C((uint64_t *)&unk_1011A3EC0);
    v158 = sub_100049F28((unint64_t *)&unk_1011B8C30, (uint64_t *)&unk_1011A3EC0, (uint64_t)&protocol conformance descriptor for MusicItemState<A>);
    v159 = ObservedObject.init(wrappedValue:)(v156, v157, v158);
    v161 = v160;
    v438 = *(char **)(v150 + 8);
    ((void (*)(uint64_t, uint64_t))v438)(v153, v152);
    v162 = (uint64_t)v395;
    (*(void (**)(char *, uint64_t, uint64_t))(v441 + 16))(v395, v154, v434);
    v163 = v416;
    v164 = (uint64_t *)(v162 + *(int *)(v416 + 36));
    *v164 = v159;
    v164[1] = v161;
    v165 = v415;
    sub_10004A160(v162, v415, &qword_1011C3388);
    swift_storeEnumTagMultiPayload(v165, v413, 1);
    v166 = sub_1006B63B0(&qword_1011C3440, &qword_1011C33A0, &qword_1011B70F0, &qword_1011B70A8);
    v167 = sub_1006B63B0(&qword_1011C3448, &qword_1011C3388, &qword_1011B70F8, &qword_1011B70B0);
    v168 = (uint64_t)v417;
    _ConditionalContent<>.init(storage:)(v165, v414, v163, v166, v167);
    v169 = v420;
    sub_10004A160(v168, v420, &qword_1011C3398);
    swift_storeEnumTagMultiPayload(v169, v418, 1);
    v170 = sub_1006B6304();
    v171 = sub_1006B64F8();
    v172 = (uint64_t)v421;
    _ConditionalContent<>.init(storage:)(v169, v419, v422, v170, v171);
    sub_10004FF60(v168, &qword_1011C3398);
    v173 = v425;
    sub_10004A160(v172, v425, &qword_1011C33D8);
    swift_storeEnumTagMultiPayload(v173, v423, 0);
    v174 = sub_1006B62E0();
    v175 = sub_1006B65A4();
    v176 = (uint64_t)v427;
    _ConditionalContent<>.init(storage:)(v173, v424, v426, v174, v175);
    sub_10004FF60(v172, &qword_1011C33D8);
    v177 = v433;
    sub_10004A160(v176, v433, &qword_1011C33E0);
    swift_storeEnumTagMultiPayload(v177, v435, 0);
    v178 = sub_10015FD08(&qword_1011C3410, &qword_1011C33E0, (void (*)(void))sub_1006B62E0, (void (*)(void))sub_1006B65A4);
    v179 = sub_1006B6720();
    _ConditionalContent<>.init(storage:)(v177, v436, v439, v178, v179);
    sub_10004FF60(v176, &qword_1011C33E0);
    sub_10004FF60(v162, &qword_1011C3388);
    v148 = v151;
    v149 = &v430;
    goto LABEL_39;
  }
  v180 = v440;
  if (v90 == enum case for GenericMusicItem.playlist(_:))
  {
    (*(void (**)(char *, uint64_t))(v70 + 96))(v65, v69);
    v181 = v382;
    v182 = v384;
    v183 = v393;
    (*(void (**)(char *, char *, uint64_t))(v382 + 32))(v384, v65, v393);
    v184 = (uint64_t)v381;
    (*(void (**)(char *, char *, uint64_t))(v181 + 16))(v381, v182, v183);
    if (qword_10119B8B0 != -1)
      swift_once(&qword_10119B8B0, sub_1000E948C);
    v185 = Player.state<A>(for:)(v184, v183, (uint64_t)&protocol witness table for Playlist);
    v186 = sub_100007E8C(&qword_1011B9648);
    v187 = sub_100049F28(&qword_1011B9650, &qword_1011B9648, (uint64_t)&protocol conformance descriptor for MusicItemState<A>);
    v188 = ObservedObject.init(wrappedValue:)(v185, v186, v187);
    v190 = v189;
    v438 = *(char **)(v181 + 8);
    ((void (*)(uint64_t, uint64_t))v438)(v184, v183);
    v191 = (uint64_t)v385;
    (*(void (**)(char *, uint64_t, uint64_t))(v441 + 16))(v385, v180, v434);
    v192 = v390;
    v193 = (uint64_t *)(v191 + *(int *)(v390 + 36));
    *v193 = v188;
    v193[1] = v190;
    v194 = v388;
    sub_10004A160(v191, v388, &qword_1011C33A8);
    swift_storeEnumTagMultiPayload(v194, v387, 1);
    v195 = sub_1006B63B0(&qword_1011C3428, &qword_1011C33E8, &qword_1011B70E0, &qword_1011C7290);
    v196 = sub_1006B63B0(&qword_1011C3430, &qword_1011C33A8, &qword_1011B70E8, &qword_1011B70A0);
    v197 = (uint64_t)v389;
    _ConditionalContent<>.init(storage:)(v194, v386, v192, v195, v196);
    v198 = v420;
    sub_10004A160(v197, v420, &qword_1011C33D0);
    swift_storeEnumTagMultiPayload(v198, v418, 0);
    v199 = sub_1006B6304();
    v200 = sub_1006B64F8();
    v201 = (uint64_t)v421;
    _ConditionalContent<>.init(storage:)(v198, v419, v422, v199, v200);
    sub_10004FF60(v197, &qword_1011C33D0);
    v202 = v425;
    sub_10004A160(v201, v425, &qword_1011C33D8);
    swift_storeEnumTagMultiPayload(v202, v423, 0);
    v203 = sub_1006B62E0();
    v204 = sub_1006B65A4();
    v205 = (uint64_t)v427;
    _ConditionalContent<>.init(storage:)(v202, v424, v426, v203, v204);
    sub_10004FF60(v201, &qword_1011C33D8);
    v206 = v433;
    sub_10004A160(v205, v433, &qword_1011C33E0);
    swift_storeEnumTagMultiPayload(v206, v435, 0);
    v207 = sub_10015FD08(&qword_1011C3410, &qword_1011C33E0, (void (*)(void))sub_1006B62E0, (void (*)(void))sub_1006B65A4);
    v208 = sub_1006B6720();
    _ConditionalContent<>.init(storage:)(v206, v436, v439, v207, v208);
    sub_10004FF60(v205, &qword_1011C33E0);
    sub_10004FF60(v191, &qword_1011C33A8);
    v148 = v182;
    v149 = &v425;
    goto LABEL_39;
  }
  v209 = v439;
  if (v90 == enum case for GenericMusicItem.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v70 + 96))(v65, v69);
    v210 = v383;
    (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v62, v65, v383);
    v211 = *(void (**)(char *, char *, uint64_t))(v57 + 16);
    v438 = v62;
    v211(v59, v62, v210);
    v212 = v433;
    if (qword_10119B8B0 != -1)
      swift_once(&qword_10119B8B0, sub_1000E948C);
    v213 = Player.state<A>(for:)((uint64_t)v59, v210, (uint64_t)&protocol witness table for Song);
    v214 = sub_100007E8C((uint64_t *)&unk_1011B8D60);
    v215 = sub_100049F28((unint64_t *)&unk_1011C72E0, (uint64_t *)&unk_1011B8D60, (uint64_t)&protocol conformance descriptor for MusicItemState<A>);
    v216 = ObservedObject.init(wrappedValue:)(v213, v214, v215);
    v218 = v217;
    v432 = *(void (**)(char *, uint64_t))(v57 + 8);
    v432(v59, v210);
    v219 = (uint64_t)v379;
    (*(void (**)(char *, uint64_t, uint64_t))(v441 + 16))(v379, v180, v434);
    v220 = v386;
    v221 = (uint64_t *)(v219 + *(int *)(v386 + 36));
    *v221 = v216;
    v221[1] = v218;
    v222 = v388;
    sub_10004A160(v219, v388, &qword_1011C33E8);
    swift_storeEnumTagMultiPayload(v222, v387, 0);
    v223 = sub_1006B63B0(&qword_1011C3428, &qword_1011C33E8, &qword_1011B70E0, &qword_1011C7290);
    v224 = sub_1006B63B0(&qword_1011C3430, &qword_1011C33A8, &qword_1011B70E8, &qword_1011B70A0);
    v225 = (uint64_t)v389;
    _ConditionalContent<>.init(storage:)(v222, v220, v390, v223, v224);
    v226 = v420;
    sub_10004A160(v225, v420, &qword_1011C33D0);
    swift_storeEnumTagMultiPayload(v226, v418, 0);
    v227 = sub_1006B6304();
    v228 = sub_1006B64F8();
    v229 = (uint64_t)v421;
    _ConditionalContent<>.init(storage:)(v226, v419, v422, v227, v228);
    sub_10004FF60(v225, &qword_1011C33D0);
    v230 = v425;
    sub_10004A160(v229, v425, &qword_1011C33D8);
    swift_storeEnumTagMultiPayload(v230, v423, 0);
    v231 = sub_1006B62E0();
    v232 = sub_1006B65A4();
    v233 = (uint64_t)v427;
    _ConditionalContent<>.init(storage:)(v230, v424, v426, v231, v232);
    sub_10004FF60(v229, &qword_1011C33D8);
    sub_10004A160(v233, v212, &qword_1011C33E0);
    swift_storeEnumTagMultiPayload(v212, v435, 0);
    v234 = sub_10015FD08(&qword_1011C3410, &qword_1011C33E0, (void (*)(void))sub_1006B62E0, (void (*)(void))sub_1006B65A4);
    v235 = sub_1006B6720();
    _ConditionalContent<>.init(storage:)(v212, v436, v439, v234, v235);
    sub_10004FF60(v233, &qword_1011C33E0);
    sub_10004FF60(v219, &qword_1011C33E8);
    v432(v438, v383);
    goto LABEL_40;
  }
  if (v90 == enum case for GenericMusicItem.station(_:))
  {
    (*(void (**)(char *, uint64_t))(v70 + 96))(v65, v69);
    v236 = v374;
    v237 = v375;
    v238 = v380;
    (*(void (**)(char *, char *, uint64_t))(v374 + 32))(v375, v65, v380);
    v239 = (uint64_t)v373;
    (*(void (**)(char *, char *, uint64_t))(v236 + 16))(v373, v237, v238);
    if (qword_10119B8B0 != -1)
      swift_once(&qword_10119B8B0, sub_1000E948C);
    v240 = Player.state<A>(for:)(v239, v238, (uint64_t)&protocol witness table for Station);
    v241 = sub_100007E8C(&qword_1011B9628);
    v242 = sub_100049F28(&qword_1011B9630, &qword_1011B9628, (uint64_t)&protocol conformance descriptor for MusicItemState<A>);
    v243 = ObservedObject.init(wrappedValue:)(v240, v241, v242);
    v245 = v244;
    v438 = *(char **)(v236 + 8);
    ((void (*)(uint64_t, uint64_t))v438)(v239, v238);
    v246 = (uint64_t)v376;
    (*(void (**)(char *, uint64_t, uint64_t))(v441 + 16))(v376, v180, v434);
    v247 = v402;
    v248 = (uint64_t *)(v246 + *(int *)(v402 + 36));
    *v248 = v243;
    v248[1] = v245;
    v249 = v403;
    sub_10004A160(v246, v403, &qword_1011C3380);
    swift_storeEnumTagMultiPayload(v249, v401, 0);
    v250 = sub_1006B63B0(&qword_1011C3460, &qword_1011C3380, &qword_1011B7100, &qword_1011B70B8);
    v251 = sub_1006B63B0(&qword_1011C3468, &qword_1011C3358, &qword_1011B7108, &qword_1011B70C0);
    v252 = (uint64_t)v404;
    _ConditionalContent<>.init(storage:)(v249, v247, v405, v250, v251);
    v253 = v408;
    sub_10004A160(v252, v408, &qword_1011C3370);
    swift_storeEnumTagMultiPayload(v253, v406, 0);
    v254 = sub_1006B65C8();
    v255 = sub_1006B6674();
    v256 = (uint64_t)v410;
    _ConditionalContent<>.init(storage:)(v253, v407, v409, v254, v255);
    sub_10004FF60(v252, &qword_1011C3370);
    v257 = v425;
    sub_10004A160(v256, v425, &qword_1011C3378);
    swift_storeEnumTagMultiPayload(v257, v423, 1);
    v258 = sub_1006B62E0();
    v259 = sub_1006B65A4();
    v260 = (uint64_t)v427;
    _ConditionalContent<>.init(storage:)(v257, v424, v426, v258, v259);
    sub_10004FF60(v256, &qword_1011C3378);
    v261 = v433;
    sub_10004A160(v260, v433, &qword_1011C33E0);
    swift_storeEnumTagMultiPayload(v261, v435, 0);
    v262 = sub_10015FD08(&qword_1011C3410, &qword_1011C33E0, (void (*)(void))sub_1006B62E0, (void (*)(void))sub_1006B65A4);
    v263 = sub_1006B6720();
    _ConditionalContent<>.init(storage:)(v261, v436, v439, v262, v263);
    sub_10004FF60(v260, &qword_1011C33E0);
    sub_10004FF60(v246, &qword_1011C3380);
    v148 = v237;
    v149 = &v412;
    goto LABEL_39;
  }
  if (v90 == enum case for GenericMusicItem.tvEpisode(_:))
  {
    (*(void (**)(char *, uint64_t))(v70 + 96))(v65, v69);
    v264 = v364;
    v265 = v377;
    v266 = v378;
    (*(void (**)(char *, char *, uint64_t))(v364 + 32))(v377, v65, v378);
    v267 = (uint64_t)v363;
    (*(void (**)(char *, char *, uint64_t))(v264 + 16))(v363, v265, v266);
    if (qword_10119B8B0 != -1)
      swift_once(&qword_10119B8B0, sub_1000E948C);
    v268 = sub_100048748(&qword_1011A0388, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&protocol conformance descriptor for TVEpisode);
    v269 = Player.state<A>(for:)(v267, v266, v268);
    v270 = sub_100007E8C(&qword_1011A0390);
    v271 = sub_100049F28(&qword_1011A0398, &qword_1011A0390, (uint64_t)&protocol conformance descriptor for MusicItemState<A>);
    v272 = ObservedObject.init(wrappedValue:)(v269, v270, v271);
    v274 = v273;
    v438 = *(char **)(v264 + 8);
    ((void (*)(uint64_t, uint64_t))v438)(v267, v266);
    v275 = (uint64_t)v365;
    (*(void (**)(char *, uint64_t, uint64_t))(v441 + 16))(v365, v180, v434);
    v276 = v369;
    v277 = (uint64_t *)(v275 + *(int *)(v369 + 36));
    *v277 = v272;
    v277[1] = v274;
    v278 = v370;
    sub_10004A160(v275, v370, &qword_1011C3350);
    swift_storeEnumTagMultiPayload(v278, v368, 0);
    v279 = sub_1006B63B0(&qword_1011C3478, &qword_1011C3350, &qword_1011B7110, &qword_1011B70C8);
    v280 = sub_1006B63B0(&qword_1011C3480, &qword_1011C3338, &qword_1011B7118, &qword_1011B70D0);
    v281 = (uint64_t)v372;
    _ConditionalContent<>.init(storage:)(v278, v276, v371, v279, v280);
    v282 = v408;
    sub_10004A160(v281, v408, &qword_1011C3348);
    swift_storeEnumTagMultiPayload(v282, v406, 1);
    v283 = sub_1006B65C8();
    v284 = sub_1006B6674();
    v285 = (uint64_t)v410;
    _ConditionalContent<>.init(storage:)(v282, v407, v409, v283, v284);
    sub_10004FF60(v281, &qword_1011C3348);
    v286 = v425;
    sub_10004A160(v285, v425, &qword_1011C3378);
    swift_storeEnumTagMultiPayload(v286, v423, 1);
    v287 = sub_1006B62E0();
    v288 = sub_1006B65A4();
    v289 = (uint64_t)v427;
    _ConditionalContent<>.init(storage:)(v286, v424, v426, v287, v288);
    sub_10004FF60(v285, &qword_1011C3378);
    v290 = v433;
    sub_10004A160(v289, v433, &qword_1011C33E0);
    swift_storeEnumTagMultiPayload(v290, v435, 0);
    v291 = sub_10015FD08(&qword_1011C3410, &qword_1011C33E0, (void (*)(void))sub_1006B62E0, (void (*)(void))sub_1006B65A4);
    v292 = sub_1006B6720();
    _ConditionalContent<>.init(storage:)(v290, v436, v209, v291, v292);
    sub_10004FF60(v289, &qword_1011C33E0);
    sub_10004FF60(v275, &qword_1011C3350);
    v148 = v377;
    v149 = (uint64_t *)&v410;
    goto LABEL_39;
  }
  if (v90 == enum case for GenericMusicItem.uploadedAudio(_:))
  {
    (*(void (**)(char *, uint64_t))(v70 + 96))(v65, v69);
    v293 = v359;
    v294 = v366;
    v295 = v367;
    (*(void (**)(char *, char *, uint64_t))(v359 + 32))(v366, v65, v367);
    v296 = (uint64_t)v358;
    (*(void (**)(char *, char *, uint64_t))(v293 + 16))(v358, v294, v295);
    if (qword_10119B8B0 != -1)
      swift_once(&qword_10119B8B0, sub_1000E948C);
    v297 = sub_100048748(&qword_1011B9600, (uint64_t (*)(uint64_t))&type metadata accessor for UploadedAudio, (uint64_t)&protocol conformance descriptor for UploadedAudio);
    v298 = Player.state<A>(for:)(v296, v295, v297);
    v299 = sub_100007E8C(&qword_1011B9608);
    v300 = sub_100049F28(&qword_1011B9610, &qword_1011B9608, (uint64_t)&protocol conformance descriptor for MusicItemState<A>);
    v301 = ObservedObject.init(wrappedValue:)(v298, v299, v300);
    v303 = v302;
    v438 = *(char **)(v293 + 8);
    ((void (*)(uint64_t, uint64_t))v438)(v296, v295);
    v304 = (uint64_t)v360;
    (*(void (**)(char *, uint64_t, uint64_t))(v441 + 16))(v360, v180, v434);
    v305 = v371;
    v306 = (uint64_t *)(v304 + *(int *)(v371 + 36));
    *v306 = v301;
    v306[1] = v303;
    v307 = v370;
    sub_10004A160(v304, v370, &qword_1011C3338);
    swift_storeEnumTagMultiPayload(v307, v368, 1);
    v308 = sub_1006B63B0(&qword_1011C3478, &qword_1011C3350, &qword_1011B7110, &qword_1011B70C8);
    v309 = sub_1006B63B0(&qword_1011C3480, &qword_1011C3338, &qword_1011B7118, &qword_1011B70D0);
    v310 = (uint64_t)v372;
    _ConditionalContent<>.init(storage:)(v307, v369, v305, v308, v309);
    v311 = v408;
    sub_10004A160(v310, v408, &qword_1011C3348);
    swift_storeEnumTagMultiPayload(v311, v406, 1);
    v312 = sub_1006B65C8();
    v313 = sub_1006B6674();
    v314 = (uint64_t)v410;
    _ConditionalContent<>.init(storage:)(v311, v407, v409, v312, v313);
    sub_10004FF60(v310, &qword_1011C3348);
    v315 = v425;
    sub_10004A160(v314, v425, &qword_1011C3378);
    swift_storeEnumTagMultiPayload(v315, v423, 1);
    v316 = sub_1006B62E0();
    v317 = sub_1006B65A4();
    v318 = (uint64_t)v427;
    _ConditionalContent<>.init(storage:)(v315, v424, v426, v316, v317);
    sub_10004FF60(v314, &qword_1011C3378);
    v319 = v433;
    sub_10004A160(v318, v433, &qword_1011C33E0);
    swift_storeEnumTagMultiPayload(v319, v435, 0);
    v320 = sub_10015FD08(&qword_1011C3410, &qword_1011C33E0, (void (*)(void))sub_1006B62E0, (void (*)(void))sub_1006B65A4);
    v321 = sub_1006B6720();
    _ConditionalContent<>.init(storage:)(v319, v436, v209, v320, v321);
    sub_10004FF60(v318, &qword_1011C33E0);
    sub_10004FF60(v304, &qword_1011C3338);
    v148 = v366;
    v149 = (uint64_t *)&v399;
    goto LABEL_39;
  }
  if (v90 == enum case for GenericMusicItem.uploadedVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v70 + 96))(v65, v69);
    v322 = v356;
    v323 = v361;
    v324 = v362;
    (*(void (**)(char *, char *, uint64_t))(v356 + 32))(v361, v65, v362);
    v325 = (uint64_t)v355;
    (*(void (**)(char *, char *, uint64_t))(v322 + 16))(v355, v323, v324);
    v326 = v434;
    v327 = (uint64_t)v431;
    if (qword_10119B8B0 != -1)
      swift_once(&qword_10119B8B0, sub_1000E948C);
    v328 = sub_100048748(&qword_10119E0A0, (uint64_t (*)(uint64_t))&type metadata accessor for UploadedVideo, (uint64_t)&protocol conformance descriptor for UploadedVideo);
    v329 = Player.state<A>(for:)(v325, v324, v328);
    v330 = sub_100007E8C(&qword_1011B95F0);
    v331 = sub_100049F28(&qword_1011B95F8, &qword_1011B95F0, (uint64_t)&protocol conformance descriptor for MusicItemState<A>);
    v332 = ObservedObject.init(wrappedValue:)(v329, v330, v331);
    v334 = v333;
    v438 = *(char **)(v322 + 8);
    ((void (*)(uint64_t, uint64_t))v438)(v325, v324);
    v335 = (uint64_t)v357;
    (*(void (**)(char *, uint64_t, uint64_t))(v441 + 16))(v357, v180, v326);
    v336 = v430;
    v337 = (uint64_t *)(v335 + *(int *)(v430 + 36));
    *v337 = v332;
    v337[1] = v334;
    sub_10004A160(v335, v327, &qword_1011C3330);
    swift_storeEnumTagMultiPayload(v327, v353, 0);
    v441 = sub_1006B63B0(&qword_1011C33F0, &qword_1011C3330, &qword_1011B7120, &qword_1011B70D8);
    v338 = sub_100044B54(&qword_1011C33F8);
    v339 = v327;
    v340 = sub_100044B54(&qword_1011C3400);
    v341 = v326;
    v342 = type metadata accessor for ContextualPreview(255);
    v343 = sub_100049F28(&qword_1011C3408, &qword_1011C3400, (uint64_t)&protocol conformance descriptor for VStack<A>);
    v344 = sub_1000E3EE4();
    v345 = sub_100048748(&qword_1011A0578, type metadata accessor for ContextualPreview, (uint64_t)"mu ");
    v442 = v340;
    v443 = &type metadata for ActionType;
    v444 = v342;
    v445 = v343;
    v446 = v344;
    v447 = v345;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v442, &opaque type descriptor for <<opaque return type of View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)>>, 1);
    v442 = v338;
    v443 = (ValueMetadata *)OpaqueTypeConformance2;
    v347 = swift_getOpaqueTypeConformance2(&v442, &opaque type descriptor for <<opaque return type of View.shareSheetPresenting(_:)>>, 1);
    v348 = (uint64_t)v432;
    _ConditionalContent<>.init(storage:)(v339, v336, v341, v441, v347);
    v349 = v433;
    sub_10004A160(v348, v433, &qword_1011C3328);
    swift_storeEnumTagMultiPayload(v349, v435, 1);
    v350 = sub_10015FD08(&qword_1011C3410, &qword_1011C33E0, (void (*)(void))sub_1006B62E0, (void (*)(void))sub_1006B65A4);
    v351 = sub_1006B6720();
    _ConditionalContent<>.init(storage:)(v349, v436, v439, v350, v351);
    sub_10004FF60(v348, &qword_1011C3328);
    sub_10004FF60(v335, &qword_1011C3330);
    v148 = v361;
    v149 = (uint64_t *)&v394;
    goto LABEL_39;
  }
  (*(void (**)(char *, uint64_t))(v70 + 8))(v65, v69);
  v68 = v354;
  v4 = v353;
LABEL_2:
  v71 = *(void (**)(char *))(v441 + 16);
  v72 = v438;
  v73 = v434;
  v71(v438);
  v74 = v431;
  ((void (*)(char *, char *, uint64_t))v71)(v431, v72, v73);
  swift_storeEnumTagMultiPayload(v74, v4, 1);
  v75 = sub_1006B63B0(&qword_1011C33F0, &qword_1011C3330, &qword_1011B7120, &qword_1011B70D8);
  v76 = sub_100044B54(&qword_1011C33F8);
  v77 = sub_100044B54(&qword_1011C3400);
  v78 = type metadata accessor for ContextualPreview(255);
  v79 = sub_100049F28(&qword_1011C3408, &qword_1011C3400, (uint64_t)&protocol conformance descriptor for VStack<A>);
  v80 = sub_1000E3EE4();
  v81 = sub_100048748(&qword_1011A0578, type metadata accessor for ContextualPreview, (uint64_t)"mu ");
  v442 = v77;
  v443 = &type metadata for ActionType;
  v444 = v78;
  v445 = v79;
  v446 = v80;
  v447 = v81;
  v82 = swift_getOpaqueTypeConformance2(&v442, &opaque type descriptor for <<opaque return type of View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)>>, 1);
  v442 = v76;
  v443 = (ValueMetadata *)v82;
  v83 = swift_getOpaqueTypeConformance2(&v442, &opaque type descriptor for <<opaque return type of View.shareSheetPresenting(_:)>>, 1);
  v84 = (uint64_t)v432;
  _ConditionalContent<>.init(storage:)(v74, v430, v73, v75, v83);
  v85 = v433;
  sub_10004A160(v84, v433, &qword_1011C3328);
  swift_storeEnumTagMultiPayload(v85, v435, 1);
  v86 = sub_10015FD08(&qword_1011C3410, &qword_1011C33E0, (void (*)(void))sub_1006B62E0, (void (*)(void))sub_1006B65A4);
  v87 = sub_1006B6720();
  _ConditionalContent<>.init(storage:)(v85, v436, v439, v86, v87);
  sub_10004FF60(v84, &qword_1011C3328);
  (*(void (**)(char *, uint64_t))(v441 + 8))(v438, v73);
  v88 = (uint64_t)v68;
  return sub_10004FF60(v88, (uint64_t *)&unk_1011A20D0);
}

double sub_1006AACD0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  double result;
  __int128 v11;
  int v12;
  char v13;
  _BYTE v14[35];
  char v15;
  __int128 v16;
  __int128 v17;
  unsigned __int16 v18;
  unsigned __int8 v19;
  char v20;

  v2 = JSShelf.sections.getter();
  v3 = v2;
  if ((unint64_t)v2 >> 62)
  {
    if (v2 >= 0)
      v2 &= 0xFFFFFFFFFFFFFF8uLL;
    if (_CocoaArrayWrapper.endIndex.getter(v2))
    {
LABEL_3:
      if ((v3 & 0xC000000000000001) != 0)
      {
        v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v3);
      }
      else
      {
        if (!*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          JUMPOUT(0x1006AB894);
        }
        v4 = *(id *)(v3 + 32);
      }
      v5 = v4;
      swift_bridgeObjectRelease(v3);
      sub_10022A288();
      v7 = v6;

      __asm { BR              X10 }
    }
  }
  else if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  swift_bridgeObjectRelease(v3);
  memset(v14, 0, sizeof(v14));
  v15 = 1;
  v8 = sub_100007E8C(&qword_1011AA098);
  v9 = sub_10015FD08(&qword_1011AA090, &qword_1011AA098, (void (*)(void))sub_1002BD688, (void (*)(void))sub_1002BD7F4);
  _ConditionalContent<>.init(storage:)(v14, v8, &type metadata for EmptyView, v9, &protocol witness table for EmptyView);
  result = *(double *)&v16;
  v11 = v17;
  v12 = v18 | (v19 << 16);
  v13 = v20;
  *(_OWORD *)a1 = v16;
  *(_OWORD *)(a1 + 16) = v11;
  *(_WORD *)(a1 + 32) = v12;
  *(_BYTE *)(a1 + 34) = BYTE2(v12);
  *(_BYTE *)(a1 + 35) = v13;
  return result;
}

_QWORD *JSShelf.items.getter()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  char *v4;
  void *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v0 = JSShelf.sections.getter();
  v1 = v0;
  v12 = _swiftEmptyArrayStorage;
  if (v0 >> 62)
    goto LABEL_11;
  v2 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; v2 = _CocoaArrayWrapper.endIndex.getter(v10))
  {
    for (i = 4; ; ++i)
    {
      v4 = (v1 & 0xC000000000000001) != 0
         ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, v1)
         : (char *)*(id *)(v1 + 8 * i);
      v5 = v4;
      v6 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v7 = (uint64_t *)&v4[OBJC_IVAR____TtC11MusicJSCore14JSShelfSection_items];
      swift_beginAccess(&v4[OBJC_IVAR____TtC11MusicJSCore14JSShelfSection_items], &v11, 0, 0);
      v8 = *v7;
      swift_bridgeObjectRetain();

      sub_100806050(v8);
      if (v6 == v2)
      {
        swift_bridgeObjectRelease_n(v1, 2);
        return v12;
      }
    }
    __break(1u);
LABEL_11:
    if (v1 < 0)
      v10 = v1;
    else
      v10 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease_n(v1, 2);
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1006AB9F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  int v19;
  int v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  double *v36;
  uint64_t (**v37)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t (**v39)@<X0>(uint64_t@<X8>);
  char *v40;
  uint64_t (**v41)@<X0>(uint64_t@<X8>);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v46 = a2;
  v4 = sub_100007E8C(&qword_1011C3208);
  __chkstk_darwin(v4);
  v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)sub_100007E8C(&qword_1011C2F70);
  __chkstk_darwin(v7);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = swift_allocObject(&unk_1010D6E10, 24, 7);
  *(_QWORD *)(v10 + 16) = v2;
  sub_10004A160(a1, (uint64_t)v6, &qword_1011C3208);
  v11 = v2;
  v45 = static HorizontalAlignment.leading.getter(v11);
  v44 = swift_allocObject(&unk_1010D6E38, 24, 7);
  *(_QWORD *)(v44 + 16) = v11;
  v12 = swift_allocObject(&unk_1010D6E60, 24, 7);
  *(_QWORD *)(v12 + 16) = v11;
  v13 = swift_allocObject(&unk_1010D6E88, 24, 7);
  *(_QWORD *)(v13 + 16) = v11;
  v14 = swift_allocObject(&unk_1010D6EB0, 24, 7);
  *(_QWORD *)(v14 + 16) = v11;
  v15 = static Edge.Set.top.getter(v11);
  v16 = v15;
  v17 = static Edge.Set.bottom.getter(v15);
  v18 = Edge.Set.init(rawValue:)(0);
  v19 = Edge.Set.init(rawValue:)(v18);
  if (Edge.Set.init(rawValue:)(v19 & v16) != v16)
    v18 = Edge.Set.init(rawValue:)(v18 | v16);
  v20 = Edge.Set.init(rawValue:)(v18);
  if (Edge.Set.init(rawValue:)(v20 & v17) != v17)
    v18 = Edge.Set.init(rawValue:)(v18 | v17);
  v21 = EdgeInsets.init(_:length:)(v18, 12.0);
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v29 = static VerticalAlignment.top.getter(v28);
  v30 = &v9[v7[32]];
  *(_QWORD *)v30 = swift_getKeyPath(&unk_100ECA630);
  *((_QWORD *)v30 + 1) = 0;
  v30[16] = 0;
  v31 = &v9[v7[33]];
  *(_QWORD *)v31 = swift_getKeyPath(&unk_100ECA658);
  v31[8] = 0;
  v32 = &v9[v7[34]];
  *(_QWORD *)v32 = swift_getKeyPath(&unk_100ECA680);
  v33 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  swift_storeEnumTagMultiPayload(v32, v33, 0);
  v34 = &v9[v7[35]];
  *(_QWORD *)v34 = swift_getKeyPath(&unk_100ECA6B0);
  *(_OWORD *)(v34 + 8) = 0u;
  *(_OWORD *)(v34 + 24) = 0u;
  v34[40] = 0;
  v35 = &v9[v7[36]];
  *(_QWORD *)v35 = swift_getKeyPath(&unk_100ECA608);
  *((_QWORD *)v35 + 1) = 0;
  *((_QWORD *)v35 + 2) = 0;
  *((_QWORD *)v35 + 3) = 0;
  v35[32] = 0;
  *(_QWORD *)v9 = sub_1006B5FB4;
  *((_QWORD *)v9 + 1) = v10;
  v9[16] = 0;
  sub_100065228((uint64_t)v6, (uint64_t)&v9[v7[24]], &qword_1011C3208);
  v36 = (double *)&v9[v7[25]];
  *v36 = v21;
  *((_QWORD *)v36 + 1) = v23;
  *((_QWORD *)v36 + 2) = v25;
  *((_QWORD *)v36 + 3) = v27;
  *(_QWORD *)&v9[v7[26]] = v45;
  *(_QWORD *)&v9[v7[27]] = v29;
  v37 = (uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&v9[v7[28]];
  v38 = v44;
  *v37 = sub_1006B5FBC;
  v37[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v38;
  v39 = (uint64_t (**)@<X0>(uint64_t@<X8>))&v9[v7[29]];
  *v39 = sub_1006B5FC4;
  v39[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v12;
  v40 = &v9[v7[30]];
  *(_QWORD *)v40 = sub_1006B5FE4;
  *((_QWORD *)v40 + 1) = v13;
  v41 = (uint64_t (**)@<X0>(uint64_t@<X8>))&v9[v7[31]];
  *v41 = sub_1006B5FEC;
  v41[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v14;
  return sub_100065228((uint64_t)v9, v46, &qword_1011C2F70);
}

uint64_t sub_1006ABD74(uint64_t a1)
{
  Swift::String v2;
  uint64_t ObjectType;
  Swift::String v4;
  void *object;
  Swift::String v6;
  uint64_t *v7;
  void *v8;
  uint64_t v9;
  Swift::String v10;
  Swift::String v11;
  _BYTE v13[24];
  uint64_t v14;
  unint64_t v15;

  v14 = 0;
  v15 = 0xE000000000000000;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  String.append(_:)(v2);
  ObjectType = swift_getObjectType();
  v4._countAndFlagsBits = _typeName(_:qualified:)(ObjectType, 0);
  object = v4._object;
  String.append(_:)(v4);
  swift_bridgeObjectRelease(object);
  v6._countAndFlagsBits = 0xA0C29480E220;
  v6._object = (void *)0xA600000000000000;
  String.append(_:)(v6);
  v7 = (uint64_t *)(a1 + OBJC_IVAR____TtC11MusicJSCore7JSShelf_title);
  swift_beginAccess(v7, v13, 0, 0);
  v9 = *v7;
  v8 = (void *)v7[1];
  swift_bridgeObjectRetain(v8);
  v10._countAndFlagsBits = v9;
  v10._object = v8;
  String.append(_:)(v10);
  swift_bridgeObjectRelease(v8);
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  String.append(_:)(v11);
  return v14;
}

uint64_t sub_1006ABE50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v6;
  double v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;

  v6 = *(double *)(a5 + 8);
  v7 = *(double *)(a5 + 16);
  v8 = *(_BYTE *)a5;
  v9 = JSShelf.sections.getter();
  v10 = v9;
  if (!((unint64_t)v9 >> 62))
  {
    result = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (result)
      goto LABEL_3;
LABEL_10:
    swift_bridgeObjectRelease();
    v15 = 9;
    goto LABEL_11;
  }
  if (v9 >= 0)
    v9 &= 0xFFFFFFFFFFFFFF8uLL;
  result = _CocoaArrayWrapper.endIndex.getter(v9);
  if (!result)
    goto LABEL_10;
LABEL_3:
  if ((v10 & 0xC000000000000001) != 0)
  {
    v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v10);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v12 = *(id *)(v10 + 32);
LABEL_6:
    v13 = v12;
    swift_bridgeObjectRelease();
    sub_10022A288();
    v15 = v14;

LABEL_11:
    v16 = *(_BYTE *)(a5 + 24);
    v17 = type metadata accessor for ModuleLayout.Context(0);
    sub_1004F3EE8(v8, v15, v16, a5 + *(int *)(v17 + 28), v6, v7);
    return v18 & 1;
  }
  __break(1u);
  return result;
}

uint64_t JSShelf.headerView()@<X0>(uint64_t a1@<X8>)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id *v18;
  id v19;
  id v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  int v31;
  char *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  void *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t OpaqueTypeConformance2;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD v76[2];
  _QWORD v77[2];
  char v78;
  id v79;
  char *v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  char v87[24];
  char v88[24];
  char v89[24];

  v3 = type metadata accessor for AccessibilityTraits(0);
  v75 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v65 - v7;
  v68 = type metadata accessor for AccessibilityChildBehavior(0);
  v9 = *(_QWORD *)(v68 - 8);
  __chkstk_darwin(v68);
  v11 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_100007E8C(&qword_1011C2E18);
  v69 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v13 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_100007E8C(&qword_1011C2E20);
  __chkstk_darwin(v72);
  v73 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v71 = (char *)&v65 - v16;
  v67 = static VerticalAlignment.center.getter(v17);
  v18 = (id *)&v1[OBJC_IVAR____TtC11MusicJSCore7JSShelf_contentArtwork];
  swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicJSCore7JSShelf_contentArtwork], v89, 0, 0);
  v19 = *v18;
  v20 = *v18;
  v21 = v1;
  v22 = JSShelf.sections.getter();
  v23 = v22;
  if ((unint64_t)v22 >> 62)
  {
    if (v22 >= 0)
      v22 &= 0xFFFFFFFFFFFFFF8uLL;
    result = _CocoaArrayWrapper.endIndex.getter(v22);
  }
  else
  {
    result = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v74 = a1;
  v66 = v5;
  if (!result)
  {
    swift_bridgeObjectRelease();
LABEL_12:
    v31 = 1;
    goto LABEL_13;
  }
  if ((v23 & 0xC000000000000001) != 0)
  {
    v25 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v23);
  }
  else
  {
    if (!*(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    v25 = (char *)*(id *)(v23 + 32);
  }
  v26 = v25;
  swift_bridgeObjectRelease();
  v27 = &v26[OBJC_IVAR____TtC11MusicJSCore14JSShelfSection_title];
  swift_beginAccess(&v26[OBJC_IVAR____TtC11MusicJSCore14JSShelfSection_title], v88, 0, 0);
  v28 = *(_QWORD *)v27;
  v29 = *((_QWORD *)v27 + 1);

  v30 = HIBYTE(v29) & 0xF;
  if ((v29 & 0x2000000000000000) == 0)
    v30 = v28 & 0xFFFFFFFFFFFFLL;
  if (v30)
    goto LABEL_12;
  v31 = 0;
LABEL_13:
  v32 = &v21[OBJC_IVAR____TtC11MusicJSCore7JSShelf_subtitle];
  swift_beginAccess(&v21[OBJC_IVAR____TtC11MusicJSCore7JSShelf_subtitle], v87, 0, 0);
  v34 = *((_QWORD *)v32 + 1);
  v35 = *(_QWORD *)v32 & 0xFFFFFFFFFFFFLL;
  if ((v34 & 0x2000000000000000) != 0)
    v35 = HIBYTE(v34) & 0xF;
  v36 = v35 == 0;
  v37 = 0x402C000000000000;
  if (v36)
    v37 = 0x4028000000000000;
  if (v31)
    v37 = 0x3FF0000000000000;
  if (v19)
    v38 = 0x4037000000000000;
  else
    v38 = 0x4032000000000000;
  if (v19)
    v39 = 0x4028000000000000;
  else
    v39 = v37;
  v40 = static Edge.Set.all.getter(v33);
  v77[0] = v67;
  v77[1] = 0;
  v78 = 1;
  v79 = v19;
  v80 = v21;
  v81 = v40;
  v82 = v38;
  v83 = 0;
  v84 = v39;
  v85 = 0;
  v86 = 0;
  static AccessibilityChildBehavior.combine.getter(v40);
  v41 = sub_100007E8C(&qword_1011C2E28);
  v42 = sub_1006AC558();
  View.accessibilityElement(children:)(v11, v41, v42);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v68);
  v43 = v79;

  v44 = &v21[OBJC_IVAR____TtC11MusicJSCore7JSShelf_containerDetailLink];
  swift_beginAccess(&v21[OBJC_IVAR____TtC11MusicJSCore7JSShelf_containerDetailLink], v77, 0, 0);
  v45 = *(_QWORD *)v44;
  v46 = sub_100007E8C(&qword_1011C2E48);
  v47 = *(_QWORD *)(v75 + 72);
  v48 = *(unsigned __int8 *)(v75 + 80);
  v49 = (v48 + 32) & ~v48;
  if (v45)
  {
    v50 = swift_allocObject(v46, v49 + 2 * v47, v48 | 7);
    *(_OWORD *)(v50 + 16) = xmmword_100EA7A80;
    static AccessibilityTraits.isButton.getter(v50);
  }
  else
  {
    v50 = swift_allocObject(v46, v49 + v47, v48 | 7);
    v51 = (__n128)xmmword_100EA7AA0;
    *(_OWORD *)(v50 + 16) = xmmword_100EA7AA0;
  }
  static AccessibilityTraits.isHeader.getter(v51);
  v76[0] = v50;
  v52 = sub_100048748(&qword_1011C2E50, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityTraits, (uint64_t)&protocol conformance descriptor for AccessibilityTraits);
  v53 = sub_100007E8C(&qword_1011C2E58);
  v54 = sub_100049F28(&qword_1011C2E60, &qword_1011C2E58, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(v76, v53, v54, v3, v52);
  v76[0] = v41;
  v76[1] = v42;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v76, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v56 = (uint64_t)v73;
  v57 = v70;
  View.accessibilityAddTraits(_:)(v8, v70, OpaqueTypeConformance2);
  v58 = *(void (**)(char *, uint64_t))(v75 + 8);
  v58(v8, v3);
  v59 = (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v13, v57);
  if (*(_QWORD *)v44)
  {
    v60 = v66;
    static AccessibilityTraits.isStaticText.getter(v59);
  }
  else
  {
    v76[0] = _swiftEmptyArrayStorage;
    v61 = sub_100048748(&qword_1011C2E50, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityTraits, (uint64_t)&protocol conformance descriptor for AccessibilityTraits);
    v62 = sub_100007E8C(&qword_1011C2E58);
    v63 = sub_100049F28(&qword_1011C2E60, &qword_1011C2E58, (uint64_t)&protocol conformance descriptor for [A]);
    v60 = v66;
    dispatch thunk of SetAlgebra.init<A>(_:)(v76, v62, v63, v3, v61);
  }
  v64 = (uint64_t)v71;
  ModifiedContent<>.accessibilityRemoveTraits(_:)(v60, v72);
  v58(v60, v3);
  sub_10004FF60(v56, &qword_1011C2E20);
  return sub_100065228(v64, v74, &qword_1011C2E20);
}

unint64_t sub_1006AC558()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C2E30;
  if (!qword_1011C2E30)
  {
    v1 = sub_100044B54(&qword_1011C2E28);
    sub_100049F28(&qword_1011C2E38, &qword_1011C2E40, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C2E30);
  }
  return result;
}

uint64_t sub_1006AC5DC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FA9B44, 1);
}

id sub_1006AC5EC@<X0>(uint64_t a1@<X0>, id *a2@<X1>, void *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v11;

  v11 = *a2;
  v7 = (uint64_t)a2 + *(int *)(sub_100007E8C(&qword_1011C3280) + 28);
  v8 = _s8ItemViewVMa(0);
  sub_10004A160(v7, (uint64_t)a4 + *(int *)(v8 + 28), (uint64_t *)&unk_1011A20D0);
  *a4 = a3;
  a4[1] = a1;
  a4[2] = v11;
  v9 = a3;
  return v11;
}

uint64_t sub_1006AC674@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v4 = JSShelf.sections.getter();
  v5 = v4;
  if (!((unint64_t)v4 >> 62))
  {
    if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_12:
    swift_bridgeObjectRelease();
    v10 = sub_100007E8C(&qword_1011C3218);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
    v12 = a1;
    v13 = 1;
    return v11(v12, v13, 1, v10);
  }
  if (v4 >= 0)
    v4 &= 0xFFFFFFFFFFFFFF8uLL;
  if (!_CocoaArrayWrapper.endIndex.getter(v4))
    goto LABEL_12;
LABEL_3:
  if ((v5 & 0xC000000000000001) != 0)
  {
    v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v5);
  }
  else
  {
    if (!*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_16;
    }
    v6 = *(id *)(v5 + 32);
  }
  v2 = v6;
  swift_bridgeObjectRelease();
  v1 = JSShelf.sections.getter();
  if ((unint64_t)v1 >> 62)
  {
LABEL_16:
    if (v1 < 0)
      v15 = v1;
    else
      v15 = v1 & 0xFFFFFFFFFFFFFF8;
    v7 = _CocoaArrayWrapper.endIndex.getter(v15);
    goto LABEL_8;
  }
  v7 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_8:
  swift_bridgeObjectRelease();
  *(_QWORD *)a1 = static HorizontalAlignment.leading.getter(v8);
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  v9 = sub_100007E8C(&qword_1011C3210);
  sub_1006AE018(v7 > 1, (uint64_t)v2, 0xD0000000000000DELL, 0x8000000100E32630, a1 + *(int *)(v9 + 44));

  v10 = sub_100007E8C(&qword_1011C3218);
  v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  v12 = a1;
  v13 = 0;
  return v11(v12, v13, 1, v10);
}

_QWORD *sub_1006AC7E0()
{
  uint64_t v0;
  _QWORD *v1;

  v0 = JSShelf.sections.getter();
  v1 = sub_1006A1E50(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1006AC82C(uint64_t a1)
{
  uint64_t result;

  result = sub_100048748(&qword_1011C2EA0, type metadata accessor for JSShelf, (uint64_t)&protocol conformance descriptor for JSShelf);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1006AC868(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FA9B1C, 1);
}

double sub_1006AC878@<D0>(uint64_t a1@<X8>)
{
  return sub_1006AACD0(a1);
}

unint64_t sub_1006AC89C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011C2EC8;
  if (!qword_1011C2EC8)
  {
    v1 = sub_100044B54(&qword_1011C2E20);
    v2[0] = sub_100044B54(&qword_1011C2E28);
    v2[1] = sub_1006AC558();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C2EC8);
  }
  return result;
}

ValueMetadata *type metadata accessor for PlayableReuseType()
{
  return &type metadata for PlayableReuseType;
}

ValueMetadata *type metadata accessor for VideoCoverReuseType()
{
  return &type metadata for VideoCoverReuseType;
}

uint64_t _s21SectionItemHeaderViewVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return sub_10006B61C(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_BYTE *)(a1 + 56));
}

uint64_t _s21SectionItemHeaderViewVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 48);
  v8 = *(_BYTE *)(a2 + 56);
  swift_bridgeObjectRetain();
  sub_10006B410(v4, v5, v6, v7, v8);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v7;
  *(_BYTE *)(a1 + 56) = v8;
  return a1;
}

uint64_t _s21SectionItemHeaderViewVwca(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *((_BYTE *)v2 + 16);
  v4 = v2[3];
  v5 = v2[4];
  v6 = v2[5];
  v7 = v2[6];
  LOBYTE(v2) = *((_BYTE *)v2 + 56);
  sub_10006B410(v4, v5, v6, v7, (char)v2);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 48);
  v12 = *(_BYTE *)(a1 + 56);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v7;
  *(_BYTE *)(a1 + 56) = (_BYTE)v2;
  sub_10006B61C(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t _s21SectionItemHeaderViewVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 56);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  v9 = *(_QWORD *)(a1 + 48);
  v10 = *(_BYTE *)(a1 + 56);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = v5;
  sub_10006B61C(v6, v7, v8, v9, v10);
  return a1;
}

uint64_t _s21SectionItemHeaderViewVwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 57))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s21SectionItemHeaderViewVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 57) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *_s21SectionItemHeaderViewVMa()
{
  return &_s21SectionItemHeaderViewVN;
}

char *sub_1006ACBDC(char *a1, char **a2, uint64_t a3)
{
  int v3;
  char *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  char *v13;
  char *v14;
  uint64_t v15;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = a2[2];
    *((_QWORD *)a1 + 1) = a2[1];
    *((_QWORD *)a1 + 2) = v6;
    v7 = *(int *)(a3 + 28);
    v8 = &a1[v7];
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for GenericMusicItem(0);
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    v13 = v4;
    v14 = v6;
    if (v12(v9, 1, v10))
    {
      v15 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  return v5;
}

uint64_t sub_1006ACCD8(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v4 = (char *)a1 + *(int *)(a2 + 28);
  v5 = type metadata accessor for GenericMusicItem(0);
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

_QWORD *sub_1006ACD5C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  char *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  id v13;
  id v14;
  uint64_t v15;

  v5 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v6 = *(void **)(a2 + 16);
  a1[2] = v6;
  v7 = *(int *)(a3 + 28);
  v8 = (char *)a1 + v7;
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for GenericMusicItem(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v5;
  v14 = v6;
  if (v12(v9, 1, v10))
  {
    v15 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  return a1;
}

uint64_t sub_1006ACE30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v9 = *(void **)(a2 + 16);
  v10 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v9;
  v11 = v9;

  v12 = *(int *)(a3 + 28);
  v13 = (void *)(a1 + v12);
  v14 = (void *)(a2 + v12);
  v15 = type metadata accessor for GenericMusicItem(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 24))(v13, v14, v15);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    v20 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v13, v14, v15);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t sub_1006ACF68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 28);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = type metadata accessor for GenericMusicItem(0);
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_1006AD02C(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v7 = a2[2];
  v8 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 8) = a2[1];
  *(_QWORD *)(a1 + 16) = v7;

  v9 = *(int *)(a3 + 28);
  v10 = (void *)(a1 + v9);
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for GenericMusicItem(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

uint64_t sub_1006AD154(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006AD160);
}

uint64_t sub_1006AD160(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 28)], a2, v8);
  }
}

uint64_t sub_1006AD1E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006AD1EC);
}

char *sub_1006AD1EC(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 28)], a2, a2, v7);
  }
  return result;
}

uint64_t _s8ItemViewVMa(uint64_t a1)
{
  uint64_t result;

  result = qword_1011C2F28;
  if (!qword_1011C2F28)
    return swift_getSingletonMetadata(a1, &_s8ItemViewVMn);
  return result;
}

void sub_1006AD2A0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_1000E4F78(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
  }
}

ValueMetadata *type metadata accessor for PosterReuseType()
{
  return &type metadata for PosterReuseType;
}

ValueMetadata *type metadata accessor for DetailedGridReuseType()
{
  return &type metadata for DetailedGridReuseType;
}

ValueMetadata *type metadata accessor for CircleReuseType()
{
  return &type metadata for CircleReuseType;
}

ValueMetadata *type metadata accessor for CoverReuseType()
{
  return &type metadata for CoverReuseType;
}

ValueMetadata *type metadata accessor for ShowcaseReuseType()
{
  return &type metadata for ShowcaseReuseType;
}

ValueMetadata *_s9TextStackVMa()
{
  return &_s9TextStackVN;
}

ValueMetadata *_s11ArtworkViewVMa()
{
  return &_s11ArtworkViewVN;
}

uint64_t sub_1006AD39C()
{
  return sub_100049F28(&qword_1011C2F68, &qword_1011C2F70, (uint64_t)&unk_100EA8520);
}

uint64_t sub_1006AD3C8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FA9BE4, 1);
}

uint64_t sub_1006AD3D8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  char *v29;
  uint64_t v30;
  char v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  uint64_t OpaqueTypeConformance2;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  double v46;
  char v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _OWORD *v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  char v86[24];
  _BYTE v87[48];
  _OWORD v88[3];

  v85 = a2;
  v3 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Artwork.CropStyle(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v14);
  v16 = (char *)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = sub_100007E8C((uint64_t *)&unk_1011C4FE0);
  v76 = *(_QWORD *)(v78 - 8);
  __chkstk_darwin(v78);
  v18 = (char *)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = sub_100007E8C((uint64_t *)&unk_1011C9250);
  v80 = *(_QWORD *)(v82 - 8);
  __chkstk_darwin(v82);
  v75 = (char *)&v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = sub_100007E8C((uint64_t *)&unk_1011C6960);
  v81 = *(_QWORD *)(v83 - 8);
  __chkstk_darwin(v83);
  v79 = (char *)&v70 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = sub_100007E8C(&qword_1011A0628);
  __chkstk_darwin(v77);
  v84 = (char *)&v70 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100007E8C(&qword_1011A0630);
  __chkstk_darwin(v22);
  v28 = __chkstk_darwin(v23);
  if (!a1)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v26 + 56))(v85, 1, 1, v28);
  v71 = (uint64_t)&v70 - v25;
  v72 = v27;
  v73 = v26;
  v74 = v24;
  v29 = a1;
  static Artwork.CropStyle.boundedBox.getter(v29);
  sub_100882874((uint64_t)v13, (uint64_t)v16);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v30 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v31 = 1;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v9, 1, 10, v30);
  ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(0, 1, 0, 1, 0, 1, 2, (uint64_t)v87);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v3);
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)((uint64_t)v16, (uint64_t)v9, (uint64_t)v87, (uint64_t)v6, (uint64_t)v18);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_10005B748((uint64_t)v9, type metadata accessor for ArtworkImage.Placeholder);
  sub_10004FF60((uint64_t)v16, (uint64_t *)&unk_1011A3E10);
  v70 = v29;
  v32 = &v29[OBJC_IVAR____TtC11MusicJSCore9JSArtwork_treatment];
  swift_beginAccess(&v29[OBJC_IVAR____TtC11MusicJSCore9JSArtwork_treatment], v86, 0, 0);
  if (*v32 == 1)
  {
    v33 = 0;
    v34 = 0;
  }
  else
  {
    v36 = Corner.medium.unsafeMutableAddressor();
    v33 = *v36;
    v34 = v36[1];
    v31 = *((_BYTE *)v36 + 16);
  }
  v37 = v75;
  v38 = sub_100044B54((uint64_t *)&unk_1011C5080);
  v39 = sub_1000E4264();
  *(_QWORD *)&v88[0] = v38;
  *((_QWORD *)&v88[0] + 1) = v39;
  v40 = 1;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v88, &opaque type descriptor for <<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>, 1);
  v42 = v34;
  v43 = v78;
  View.corner(_:)(v33, v42, v31, v78, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v76 + 8))(v18, v43);
  v44 = Border.artwork.unsafeMutableAddressor();
  v45 = *v44;
  v46 = *((double *)v44 + 1);
  v47 = *((_BYTE *)v44 + 16);
  v48 = *v32;
  swift_retain();
  if ((v48 & 1) != 0)
  {
    v49 = 0;
    v50 = 0;
  }
  else
  {
    v51 = Corner.medium.unsafeMutableAddressor();
    v49 = *v51;
    v50 = v51[1];
    v40 = *((_BYTE *)v51 + 16);
  }
  *(_QWORD *)&v88[0] = v43;
  *((_QWORD *)&v88[0] + 1) = OpaqueTypeConformance2;
  v52 = swift_getOpaqueTypeConformance2(v88, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
  v53 = v79;
  v54 = v82;
  View.border(_:corner:)(v45, v47, v49, v50, v40, v82, v52, v46);
  v55 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v80 + 8))(v37, v54, v55);
  v56 = v81;
  v57 = v83;
  v58 = (uint64_t)v84;
  (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v84, v53, v83);
  v59 = v58 + *(int *)(v77 + 36);
  *(_QWORD *)v59 = 0x3FF0000000000000;
  *(_WORD *)(v59 + 8) = 0;
  v60 = (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v53, v57);
  v61 = static Alignment.center.getter(v60);
  _FrameLayout.init(width:height:alignment:)(v88, 0x4048000000000000, 0, 0x4048000000000000, 0, v61, v62);
  v63 = v72;
  sub_10004A160(v58, v72, &qword_1011A0628);

  v64 = v74;
  v65 = (_OWORD *)(v63 + *(int *)(v74 + 36));
  v66 = v88[1];
  *v65 = v88[0];
  v65[1] = v66;
  v65[2] = v88[2];
  sub_10004FF60(v58, &qword_1011A0628);
  v67 = v71;
  sub_100065228(v63, v71, &qword_1011A0630);
  v68 = v67;
  v69 = v85;
  sub_100065228(v68, v85, &qword_1011A0630);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v73 + 56))(v69, 0, 1, v64);
}

uint64_t sub_1006ADA4C@<X0>(uint64_t a1@<X8>)
{
  void **v1;

  return sub_1006AD3D8(*v1, a1);
}

uint64_t sub_1006ADA54(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FA9BBC, 1);
}

uint64_t sub_1006ADA64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t *v23;
  __n128 v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  __n128 v35;
  void (*v36)(char *, uint64_t, uint64_t, uint64_t, __n128);
  _QWORD *v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v45;
  char v46;
  char v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  __n128 v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD v82[2];
  _QWORD v83[4];
  _QWORD v84[4];
  _BYTE v85[32];

  v81 = a2;
  v3 = sub_100007E8C(&qword_10119EBA0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011C31F0);
  v76 = *(_QWORD *)(v7 - 8);
  v77 = v7;
  __chkstk_darwin(v7);
  v73 = (uint64_t)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011C31F8);
  __chkstk_darwin(v9);
  v80 = (uint64_t)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v75 = (uint64_t)&v73 - v12;
  v13 = sub_100007E8C(&qword_1011B2920);
  __chkstk_darwin(v13);
  v78 = (uint64_t)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v79 = (uint64_t)&v73 - v16;
  __chkstk_darwin(v17);
  v19 = (char *)&v73 - v18;
  __chkstk_darwin(v20);
  v22 = (char *)&v73 - v21;
  v23 = (uint64_t *)(a1 + OBJC_IVAR____TtC11MusicJSCore7JSShelf_supertitle);
  v24 = swift_beginAccess(a1 + OBJC_IVAR____TtC11MusicJSCore7JSShelf_supertitle, v85, 0, 0);
  v25 = *v23;
  v26 = v23[1];
  v27 = HIBYTE(v26) & 0xF;
  if ((v26 & 0x2000000000000000) == 0)
    v27 = v25 & 0xFFFFFFFFFFFFLL;
  if (v27)
  {
    v84[0] = v25;
    v84[1] = v26;
    v28 = sub_100055B68();
    swift_bridgeObjectRetain();
    v29 = Text.init<A>(_:)(v84, &type metadata for String, v28);
    v31 = v30;
    v33 = v32 & 1;
    Text.with(style:)(4, v29, v30, v32 & 1, v34, (uint64_t)v22);
    sub_100055BAC(v29, v31, v33);
    v35 = swift_bridgeObjectRelease();
    v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v4 + 56);
    v36(v22, 0, 1, v3, v35);
  }
  else
  {
    v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v4 + 56);
    v36(v22, 1, 1, v3, v24);
  }
  v74 = v22;
  v37 = (_QWORD *)(a1 + OBJC_IVAR____TtC11MusicJSCore7JSShelf_title);
  swift_beginAccess(a1 + OBJC_IVAR____TtC11MusicJSCore7JSShelf_title, v84, 0, 0);
  v38 = v37[1];
  v39 = HIBYTE(v38) & 0xF;
  if ((v38 & 0x2000000000000000) == 0)
    v39 = *v37 & 0xFFFFFFFFFFFFLL;
  if (v39)
  {
    v83[0] = *v37;
    v83[1] = v38;
    v40 = sub_100055B68();
    swift_bridgeObjectRetain();
    v41 = Text.init<A>(_:)(v83, &type metadata for String, v40);
    v43 = v42;
    v44 = v36;
    v45 = v3;
    v47 = v46 & 1;
    Text.with(style:)(0, v41, v42, v46 & 1, v48, (uint64_t)v6);
    v49 = v47;
    v3 = v45;
    v36 = v44;
    sub_100055BAC(v41, v43, v49);
    swift_bridgeObjectRelease();
    v50 = v73;
    sub_100485DC0((uint64_t)v6, v73);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v51 = v75;
    sub_100065228(v50, v75, &qword_1011C31F0);
    v52 = 0;
  }
  else
  {
    v52 = 1;
    v51 = v75;
  }
  v53 = 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v76 + 56))(v51, v52, 1, v77);
  v54 = (uint64_t *)(a1 + OBJC_IVAR____TtC11MusicJSCore7JSShelf_subtitle);
  v55 = swift_beginAccess(v54, v83, 0, 0);
  v56 = *v54;
  v57 = v54[1];
  v58 = HIBYTE(v57) & 0xF;
  if ((v57 & 0x2000000000000000) == 0)
    v58 = v56 & 0xFFFFFFFFFFFFLL;
  if (v58)
  {
    v82[0] = v56;
    v82[1] = v57;
    v59 = sub_100055B68();
    swift_bridgeObjectRetain();
    v60 = Text.init<A>(_:)(v82, &type metadata for String, v59);
    v62 = v61;
    v64 = v63 & 1;
    Text.with(style:)(6, v60, v61, v63 & 1, v65, (uint64_t)v19);
    sub_100055BAC(v60, v62, v64);
    v55 = swift_bridgeObjectRelease();
    v53 = 0;
  }
  v36(v19, v53, 1, v3, v55);
  v66 = (uint64_t)v74;
  v67 = v79;
  sub_10004A160((uint64_t)v74, v79, &qword_1011B2920);
  v68 = v80;
  sub_10004A160(v51, v80, &qword_1011C31F8);
  v69 = v78;
  sub_10004A160((uint64_t)v19, v78, &qword_1011B2920);
  v70 = v81;
  sub_10004A160(v67, v81, &qword_1011B2920);
  v71 = sub_100007E8C(&qword_1011C3200);
  sub_10004A160(v68, v70 + *(int *)(v71 + 48), &qword_1011C31F8);
  sub_10004A160(v69, v70 + *(int *)(v71 + 64), &qword_1011B2920);
  sub_10004FF60((uint64_t)v19, &qword_1011B2920);
  sub_10004FF60(v51, &qword_1011C31F8);
  sub_10004FF60(v66, &qword_1011B2920);
  sub_10004FF60(v69, &qword_1011B2920);
  sub_10004FF60(v68, &qword_1011C31F8);
  return sub_10004FF60(v67, &qword_1011B2920);
}

uint64_t sub_1006ADFC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  *(_QWORD *)a2 = static HorizontalAlignment.leading.getter(a1);
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 0;
  v5 = sub_100007E8C(&qword_1011C31E8);
  return sub_1006ADA64(v4, a2 + *(int *)(v5 + 44));
}

uint64_t sub_1006AE008(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FA9B94, 1);
}

void sub_1006AE018(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  char v70;
  uint64_t KeyPath;
  _QWORD v73[11];
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  char *v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  _BYTE v135[8];

  v119 = a4;
  v118 = a3;
  v134 = a5;
  v7 = sub_100007E8C(&qword_1011AA8D0);
  __chkstk_darwin(v7);
  v73[6] = (char *)v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v9);
  v73[5] = (char *)v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Poster(0);
  __chkstk_darwin(v11);
  v73[4] = (char *)v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = type metadata accessor for PosterView(0);
  v73[10] = *(_QWORD *)(v74 - 8);
  __chkstk_darwin(v74);
  v73[3] = (char *)v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = sub_100007E8C(&qword_1011B7890);
  __chkstk_darwin(v94);
  v77 = (char *)v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = sub_100007E8C(&qword_1011C3220);
  __chkstk_darwin(v92);
  v93 = (char *)v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = sub_100007E8C(&qword_1011C3228);
  __chkstk_darwin(v110);
  v95 = (char *)v73 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = type metadata accessor for Playable(0);
  __chkstk_darwin(v82);
  v84 = (char *)v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = type metadata accessor for PlayableView(0);
  __chkstk_darwin(v91);
  v88 = (char *)v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = type metadata accessor for DetailedGridView(0);
  __chkstk_darwin(v101);
  v85 = (char *)v73 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v87 = (char *)v73 - v21;
  v107 = sub_100007E8C(&qword_1011C3230);
  __chkstk_darwin(v107);
  v109 = (char *)v73 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = sub_100007E8C(&qword_1011C2FE8);
  __chkstk_darwin(v99);
  v100 = (char *)v73 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = sub_100007E8C(&qword_1011C2FF0);
  __chkstk_darwin(v108);
  v102 = (char *)v73 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = sub_100007E8C(&qword_1011C3238);
  __chkstk_darwin(v124);
  v111 = (char *)v73 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = type metadata accessor for CircleView.Model(0);
  __chkstk_darwin(v81);
  v80 = (char *)v73 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v79 = (char *)v73 - v28;
  v98 = type metadata accessor for CircleView(0);
  __chkstk_darwin(v98);
  v83 = (char *)v73 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v86 = (char *)v73 - v31;
  v104 = sub_100007E8C(&qword_1011C3000);
  __chkstk_darwin(v104);
  v105 = (char *)v73 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = sub_100007E8C(&qword_1011C3008);
  __chkstk_darwin(v116);
  v106 = (char *)v73 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = type metadata accessor for SegueContext(0);
  __chkstk_darwin(v117);
  v76 = (char *)v73 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  v97 = (char *)v73 - v36;
  v37 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v37);
  v73[1] = (char *)v73 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  v73[2] = (char *)v73 - v40;
  __chkstk_darwin(v41);
  v75 = (char *)v73 - v42;
  __chkstk_darwin(v43);
  v96 = (char *)v73 - v44;
  v45 = type metadata accessor for Cover(0);
  __chkstk_darwin(v45);
  v73[8] = (char *)v73 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v47);
  v89 = (char *)v73 - v48;
  v103 = type metadata accessor for CoverView(0);
  __chkstk_darwin(v103);
  v73[7] = (char *)v73 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v50);
  v73[9] = (char *)v73 - v51;
  __chkstk_darwin(v52);
  __chkstk_darwin(v53);
  v90 = (char *)v73 - v54;
  v55 = type metadata accessor for Showcase(0);
  __chkstk_darwin(v55);
  v56 = type metadata accessor for ShowcaseView(0);
  __chkstk_darwin(v56);
  v78 = (char *)v73 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = sub_100007E8C(&qword_1011C3240);
  __chkstk_darwin(v125);
  v127 = (char *)v73 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = sub_100007E8C(&qword_1011C3248);
  __chkstk_darwin(v120);
  v122 = (char *)v73 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = sub_100007E8C(&qword_1011C3020);
  __chkstk_darwin(v112);
  v114 = (char *)v73 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_100007E8C(&qword_1011B78D8);
  __chkstk_darwin(v61);
  v113 = sub_100007E8C(&qword_1011B78E0);
  __chkstk_darwin(v113);
  v121 = sub_100007E8C(&qword_1011C3028);
  __chkstk_darwin(v121);
  v115 = (char *)v73 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = sub_100007E8C(&qword_1011C3250);
  __chkstk_darwin(v126);
  v123 = (char *)v73 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_100007E8C(&qword_1011C3258);
  __chkstk_darwin(v64);
  v133 = (char *)v73 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v66);
  v128 = (char *)v73 - v67;
  if ((a1 & 1) != 0)
  {
    v68 = (uint64_t *)(a2 + OBJC_IVAR____TtC11MusicJSCore14JSShelfSection_title);
    swift_beginAccess(a2 + OBJC_IVAR____TtC11MusicJSCore14JSShelfSection_title, v135, 0, 0);
    v69 = *v68;
    v131 = v68[1];
    v132 = v69;
    swift_bridgeObjectRetain();
    sub_10022A288();
    LOBYTE(v68) = v70;
    KeyPath = swift_getKeyPath(&unk_100ECA608);
    v129 = v68;
    v130 = KeyPath;
  }
  else
  {
    v129 = 0;
    v130 = 0;
    v131 = 1;
    v132 = 0;
  }
  sub_10022A288();
  __asm { BR              X10 }
}

uint64_t sub_1006AEAF8()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  int v13;
  int *v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;

  v3 = (uint64_t *)&v1[OBJC_IVAR____TtC11MusicJSCore14JSShelfSection_items];
  swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicJSCore14JSShelfSection_items], v2 - 128, 0, 0);
  v4 = *v3;
  if ((unint64_t)*v3 >> 62)
  {
    if (v4 < 0)
      v71 = *v3;
    else
      v71 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v5 = _CocoaArrayWrapper.endIndex.getter(v71);
  }
  else
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v6 = *(_QWORD **)(v2 - 480);
  v7 = *(_QWORD *)(v2 - 488);
  if (v5)
  {
    if ((v4 & 0xC000000000000001) != 0)
    {
      v8 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v4);
    }
    else
    {
      if (!*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        JUMPOUT(0x1006B0DA8);
      }
      v8 = *(id *)(v4 + 32);
    }
    v9 = v8;
    v10 = swift_bridgeObjectRelease();
    (*(void (**)(__n128))((swift_isaMask & *v9) + 0x250))(v10);

  }
  else
  {
    swift_bridgeObjectRelease();
    v11 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v7, 1, 1, v11);
  }
  v12 = &v1[OBJC_IVAR____TtC11MusicJSCore14JSShelfSection_isRankedList];
  swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicJSCore14JSShelfSection_isRankedList], v2 - 152, 0, 0);
  v13 = *v12;
  v14 = *(int **)(v2 - 320);
  v15 = (char *)v6 + v14[5];
  v16 = type metadata accessor for GenericMusicItem(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  *v6 = v1;
  *((_BYTE *)v6 + v14[6]) = 0;
  v17 = (_QWORD *)((char *)v6 + v14[7]);
  *v17 = 0;
  v17[1] = 0;
  v18 = *v3;
  if ((unint64_t)v18 >> 62)
  {
    if (v18 < 0)
      v72 = v18;
    else
      v72 = v18 & 0xFFFFFFFFFFFFFF8;
    v73 = type metadata accessor for JSGridItem(0);
    v74 = v1;
    swift_bridgeObjectRetain();
    v19 = _bridgeCocoaArray<A>(_:)(v72, v73);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain_n(v18, 2);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v1);
    type metadata accessor for JSGridItem(0);
    swift_bridgeObjectRelease();
    v19 = v18;
  }
  v20 = *(_QWORD *)(v2 - 544);
  v21 = *(_QWORD *)(v2 - 304);
  swift_bridgeObjectRetain();
  sub_10097C388(*(_QWORD *)(v2 - 312), v21, v7, v13, (uint64_t)v6, v19, v20);
  sub_10005B6C0(v20, v0, type metadata accessor for Cover);
  v22 = *(int **)(v2 - 432);
  v23 = v0 + v22[5];
  *(_QWORD *)v23 = 0;
  *(_BYTE *)(v23 + 8) = 1;
  v24 = v0 + v22[6];
  *(_QWORD *)v24 = swift_getKeyPath(&unk_100ECA590);
  *(_BYTE *)(v24 + 8) = 0;
  v25 = (_QWORD *)(v0 + v22[7]);
  v26 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v27 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *v25 = EnvironmentObject.init()(v26, v27);
  v25[1] = v28;
  v29 = (_QWORD *)(v0 + v22[8]);
  v30 = type metadata accessor for NoticePresenter(0);
  v31 = sub_100048748((unint64_t *)&unk_1011C72F0, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
  *v29 = EnvironmentObject.init()(v30, v31);
  v29[1] = v32;
  v33 = v0 + v22[9];
  *(_QWORD *)v33 = sub_1000DEC04;
  *(_QWORD *)(v33 + 8) = 0;
  *(_BYTE *)(v33 + 16) = 0;
  v34 = (_QWORD *)(v0 + v22[10]);
  v35 = type metadata accessor for NavigationPusher();
  v36 = sub_100048748(&qword_10119F060, (uint64_t (*)(uint64_t))type metadata accessor for NavigationPusher, (uint64_t)&unk_100EC8D64);
  *v34 = EnvironmentObject.init()(v35, v36);
  v34[1] = v37;
  v38 = (_QWORD *)(v0 + v22[11]);
  v39 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
  v40 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
  *v38 = EnvironmentObject.init()(v39, v40);
  v38[1] = v41;
  v42 = (_QWORD *)(v0 + v22[12]);
  v43 = type metadata accessor for TabSelectionManager(0);
  v44 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
  *v42 = EnvironmentObject.init()(v43, v44);
  v42[1] = v45;
  v46 = v0 + v22[13];
  *(_QWORD *)v46 = swift_getKeyPath(&unk_100ECA5B8);
  *(_QWORD *)(v46 + 8) = 0;
  *(_BYTE *)(v46 + 16) = 0;
  v47 = v0 + v22[14];
  *(_QWORD *)v47 = swift_getKeyPath(&unk_100ECA5E0);
  *(_QWORD *)(v47 + 8) = 0;
  *(_BYTE *)(v47 + 16) = 0;
  v48 = *(_QWORD *)(v2 - 536);
  sub_10005B6C0(v0, v48, type metadata accessor for CoverView);
  v49 = *(_QWORD *)(v2 - 416);
  sub_10005B704(v48, v49, type metadata accessor for CoverView);
  swift_storeEnumTagMultiPayload(v49, *(_QWORD *)(v2 - 424), 0);
  v50 = sub_100048748(&qword_1011B7940, type metadata accessor for CoverView, (uint64_t)&unk_100ED82A0);
  v51 = *(_QWORD *)(v2 - 408);
  _ConditionalContent<>.init(storage:)(v49, v22, v22, v50, v50);
  v52 = *(_QWORD *)(v2 - 344);
  sub_10004A160(v51, v52, &qword_1011C3008);
  swift_storeEnumTagMultiPayload(v52, *(_QWORD *)(v2 - 360), 1);
  v53 = sub_1004F4778();
  v54 = sub_1006B5620();
  v55 = *(_QWORD *)(v2 - 336);
  _ConditionalContent<>.init(storage:)(v52, *(_QWORD *)(v2 - 352), *(_QWORD *)(v2 - 328), v53, v54);
  sub_10004FF60(v51, &qword_1011C3008);
  v56 = *(_QWORD *)(v2 - 280);
  sub_10004A160(v55, v56, &qword_1011C3028);
  swift_storeEnumTagMultiPayload(v56, *(_QWORD *)(v2 - 296), 0);
  v57 = sub_1006B55FC();
  v58 = sub_1006B602C();
  v59 = *(_QWORD *)(v2 - 272);
  _ConditionalContent<>.init(storage:)(v56, *(_QWORD *)(v2 - 288), *(_QWORD *)(v2 - 264), v57, v58);
  sub_10004FF60(v55, &qword_1011C3028);
  v60 = *(_QWORD *)(v2 - 240);
  sub_10004A160(v59, v60, &qword_1011C3250);
  swift_storeEnumTagMultiPayload(v60, *(_QWORD *)(v2 - 256), 0);
  v61 = sub_10015FD08(&qword_1011C3260, &qword_1011C3250, (void (*)(void))sub_1006B55FC, (void (*)(void))sub_1006B602C);
  v62 = *(_QWORD *)(v2 - 232);
  _ConditionalContent<>.init(storage:)(v60, *(_QWORD *)(v2 - 248), &type metadata for EmptyView, v61, &protocol witness table for EmptyView);
  sub_10004FF60(v59, &qword_1011C3250);
  sub_10005B748(v48, type metadata accessor for CoverView);
  v63 = *(_QWORD *)(v2 - 192);
  sub_10004A160(v62, v63, &qword_1011C3258);
  v64 = *(_QWORD *)(v2 - 184);
  v66 = *(_QWORD *)(v2 - 208);
  v65 = *(_QWORD *)(v2 - 200);
  *(_QWORD *)v64 = v65;
  *(_QWORD *)(v64 + 8) = v66;
  v68 = *(_QWORD *)(v2 - 224);
  v67 = *(_QWORD *)(v2 - 216);
  *(_QWORD *)(v64 + 16) = v68;
  *(_QWORD *)(v64 + 24) = v67;
  *(_QWORD *)(v64 + 40) = 0;
  *(_QWORD *)(v64 + 48) = 0;
  *(_QWORD *)(v64 + 32) = 0;
  *(_BYTE *)(v64 + 56) = 0;
  v69 = sub_100007E8C(&qword_1011C3278);
  sub_10004A160(v63, v64 + *(int *)(v69 + 48), &qword_1011C3258);
  sub_1006B5EA0(v65, v66, v68, v67, 0, 0, 0, 0);
  sub_10004FF60(v62, &qword_1011C3258);
  sub_10004FF60(v63, &qword_1011C3258);
  return sub_1006B5F04(v65, v66, v68, v67, 0, 0, 0, 0);
}

uint64_t sub_1006B0E80@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t KeyPath;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  double v50;
  double v51;
  uint64_t v52;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  __n128 v77;
  __int128 v78;
  uint64_t v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  _OWORD v98[10];
  uint64_t v99;
  _OWORD v100[2];
  char v101;
  _BYTE v102[40];
  uint64_t v103;
  uint64_t v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char v109;

  v97 = a1;
  v92 = sub_100007E8C(&qword_10119EBA0);
  v2 = *(_QWORD *)(v92 - 8);
  __chkstk_darwin(v92);
  v4 = (char *)&v88 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011C2F78);
  __chkstk_darwin(v5);
  v7 = (char *)&v88 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011C2F80);
  __chkstk_darwin(v8);
  v10 = (char *)&v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v93 = (uint64_t)&v88 - v12;
  v94 = sub_100007E8C(&qword_1011C2F88);
  __chkstk_darwin(v94);
  v95 = (uint64_t)&v88 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C(&qword_1011C2F90);
  v17 = __chkstk_darwin(v14);
  v96 = (char *)&v88 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = v1[1];
  if (!v19)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v16 + 56))(v97, 1, 1, v17);
  v20 = *v1;
  v21 = HIBYTE(v19) & 0xF;
  if ((v19 & 0x2000000000000000) == 0)
    v21 = *v1 & 0xFFFFFFFFFFFFLL;
  if (!v21)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v16 + 56))(v97, 1, 1, v17);
  v89 = v16;
  v90 = v15;
  v22 = *((unsigned __int8 *)v1 + 16);
  v91 = v8;
  if (v22 == 5)
  {
    *(_QWORD *)&v98[0] = v20;
    *((_QWORD *)&v98[0] + 1) = v19;
    v23 = sub_100055B68();
    swift_bridgeObjectRetain();
    v24 = Text.init<A>(_:)(v98, &type metadata for String, v23);
    v26 = v25;
    v28 = v27;
    v30 = v29;
    if (qword_10119C8C0 != -1)
      swift_once(&qword_10119C8C0, sub_10085F9A8);
    swift_retain();
    v31 = v28 & 1;
    v33 = Text.font(_:)(v32, v24, v26, v31, v30);
    v35 = v34;
    v37 = v36;
    v88 = v38;
    swift_release();
    sub_100055BAC(v24, v26, v31);
    swift_bridgeObjectRelease();
    v40 = static Color.secondary.getter(v39);
    v41 = Text.foregroundColor(_:)(v40, v33, v35, v37 & 1, v88);
    v43 = v42;
    LODWORD(v92) = v44;
    v93 = v45;
    swift_release();
    sub_100055BAC(v33, v35, v37 & 1);
    swift_bridgeObjectRelease();
    KeyPath = swift_getKeyPath(&unk_100ECA538);
    v47 = *(_OWORD *)(v1 + 5);
    v100[0] = *(_OWORD *)(v1 + 3);
    v100[1] = v47;
    v101 = *((_BYTE *)v1 + 56);
    sub_100065228((uint64_t)v100, (uint64_t)v102, &qword_10119EAE0);
    sub_10006FDA8((uint64_t)v102, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10006B410);
    sub_100823BC4();
    v49 = v48;
    v51 = v50;
    v52 = sub_10006FDA8((uint64_t)v100, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10006B61C);
    if (v49)
      swift_bridgeObjectRelease();
    else
      v51 = INFINITY;
    v103 = v41;
    v104 = v43;
    v74 = v92 & 1;
    v105 = v92 & 1;
    v106 = v93;
    v107 = KeyPath;
    v108 = 1;
    v109 = 0;
    v75 = static Alignment.leading.getter(v52);
    sub_10014A880(0, 1, 0.0, 1, v51, 0, 0, 1, (uint64_t)v98, v77, 0.0, 1, 0.0, 1, v75, v76);
    sub_100055BAC(v41, v43, v74);
    swift_release();
    swift_bridgeObjectRelease();
    v78 = v98[9];
    v79 = v95;
    *(_OWORD *)(v95 + 128) = v98[8];
    *(_OWORD *)(v79 + 144) = v78;
    *(_QWORD *)(v79 + 160) = v99;
    v80 = v98[5];
    *(_OWORD *)(v79 + 64) = v98[4];
    *(_OWORD *)(v79 + 80) = v80;
    v81 = v98[7];
    *(_OWORD *)(v79 + 96) = v98[6];
    *(_OWORD *)(v79 + 112) = v81;
    v82 = v98[1];
    *(_OWORD *)v79 = v98[0];
    *(_OWORD *)(v79 + 16) = v82;
    v83 = v98[3];
    *(_OWORD *)(v79 + 32) = v98[2];
    *(_OWORD *)(v79 + 48) = v83;
    swift_storeEnumTagMultiPayload(v79, v94, 0);
    v84 = sub_100007E8C(&qword_1011B3600);
    v85 = sub_1006B5430();
    v86 = sub_1006B5454();
    v73 = (uint64_t)v96;
    _ConditionalContent<>.init(storage:)(v79, v84, v91, v85, v86);
  }
  else
  {
    *(_QWORD *)&v98[0] = v20;
    *((_QWORD *)&v98[0] + 1) = v19;
    v54 = sub_100055B68();
    swift_bridgeObjectRetain();
    v55 = Text.init<A>(_:)(v98, &type metadata for String, v54);
    v57 = v56;
    v59 = v58 & 1;
    Text.with(style:)(4, v55, v56, v58 & 1, v60, (uint64_t)v4);
    sub_100055BAC(v55, v57, v59);
    swift_bridgeObjectRelease();
    v61 = swift_getKeyPath(&unk_100ECA538);
    v62 = v92;
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v7, v4, v92);
    v63 = &v7[*(int *)(v5 + 36)];
    *(_QWORD *)v63 = v61;
    *((_QWORD *)v63 + 1) = 1;
    v63[16] = 0;
    v64 = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v62);
    LOBYTE(v61) = static Edge.Set.all.getter(v64);
    sub_10004A160((uint64_t)v7, (uint64_t)v10, &qword_1011C2F78);
    v65 = v91;
    v66 = &v10[*(int *)(v91 + 36)];
    *v66 = v61;
    *((_QWORD *)v66 + 1) = 0;
    *((_QWORD *)v66 + 2) = 0;
    *(_OWORD *)(v66 + 24) = xmmword_100EC2D60;
    v66[40] = 0;
    sub_10004FF60((uint64_t)v7, &qword_1011C2F78);
    v67 = (uint64_t)v10;
    v68 = v93;
    sub_100065228(v67, v93, &qword_1011C2F80);
    v69 = v95;
    sub_10004A160(v68, v95, &qword_1011C2F80);
    swift_storeEnumTagMultiPayload(v69, v94, 1);
    v70 = sub_100007E8C(&qword_1011B3600);
    v71 = sub_1006B5430();
    v72 = sub_1006B5454();
    v73 = (uint64_t)v96;
    _ConditionalContent<>.init(storage:)(v69, v70, v65, v71, v72);
    sub_10004FF60(v68, &qword_1011C2F80);
  }
  v87 = v97;
  sub_100065228(v73, v97, &qword_1011C2F90);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v89 + 56))(v87, 0, 1, v90);
}

uint64_t sub_1006B14DC@<X0>(uint64_t a1@<X8>)
{
  return sub_1006B0E80(a1);
}

uint64_t sub_1006B151C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t OpaqueTypeConformance2;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[2];

  v2 = v1;
  v44 = a1;
  v3 = type metadata accessor for AccessibilityTraits(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v45 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for AccessibilityChildBehavior(0);
  v40 = *(_QWORD *)(v6 - 8);
  v41 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_100007E8C(&qword_1011C2FA8);
  __chkstk_darwin(v39);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011C2FB0);
  v42 = *(_QWORD *)(v11 - 8);
  v43 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = _s8ItemViewVMa(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  __chkstk_darwin(v14);
  v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = JSShelf.sections.getter();
  v19 = v18;
  if (!((unint64_t)v18 >> 62))
  {
    result = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
    v46 = v4;
    v47 = v3;
    if (result)
      goto LABEL_3;
LABEL_10:
    swift_bridgeObjectRelease();
    v24 = 9;
    goto LABEL_11;
  }
  if (v18 >= 0)
    v18 &= 0xFFFFFFFFFFFFFF8uLL;
  result = _CocoaArrayWrapper.endIndex.getter(v18);
  v46 = v4;
  v47 = v3;
  if (!result)
    goto LABEL_10;
LABEL_3:
  if ((v19 & 0xC000000000000001) != 0)
  {
    v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v19);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v21 = *(id *)(v19 + 32);
LABEL_6:
    v22 = v21;
    swift_bridgeObjectRelease();
    sub_10022A288();
    v24 = v23;

LABEL_11:
    v25 = (char *)(*(uint64_t (**)(void))((swift_isaMask & **(_QWORD **)(v2 + 16)) + 0x460))();
    sub_10005B704(v2, (uint64_t)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), _s8ItemViewVMa);
    v26 = *(unsigned __int8 *)(v15 + 80);
    v27 = (v26 + 16) & ~v26;
    v28 = swift_allocObject(&unk_1010D6DE8, v27 + v16, v26 | 7);
    v29 = sub_10005B6C0((uint64_t)v17, v28 + v27, _s8ItemViewVMa);
    *(_QWORD *)v10 = static HorizontalAlignment.leading.getter(v29);
    *((_QWORD *)v10 + 1) = 0;
    v10[16] = 1;
    v30 = sub_100007E8C(&qword_1011C2FB8);
    sub_1006B1E70(v25, v2, v24, (uint64_t)sub_1006B55D0, v28, (uint64_t)&v10[*(int *)(v30 + 44)]);
    static AccessibilityChildBehavior.contain.getter(v31);
    v32 = sub_100049F28(&qword_1011C2FC0, &qword_1011C2FA8, (uint64_t)&protocol conformance descriptor for VStack<A>);
    v33 = v39;
    View.accessibilityElement(children:)(v8, v39, v32);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v8, v41);
    v34 = sub_10004FF60((uint64_t)v10, &qword_1011C2FA8);
    v35 = v45;
    static AccessibilityTraits.isButton.getter(v34);
    v48[0] = v33;
    v48[1] = v32;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v48, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    v37 = v43;
    View.accessibilityAddTraits(_:)(v35, v43, OpaqueTypeConformance2);
    swift_release();

    (*(void (**)(char *, uint64_t))(v46 + 8))(v35, v47);
    return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v13, v37);
  }
  __break(1u);
  return result;
}

uint64_t sub_1006B189C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  char *v26;
  char *v27;
  _QWORD *v28;
  void *v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  char *v33;
  char *v34;
  int v35;
  void (*v36)(char *, uint64_t);
  char *v37;
  void (*v38)(char *, char *, uint64_t);
  char *v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  unint64_t v57;
  char *v58;
  char v59[24];
  unint64_t v60;

  v0 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v0);
  v52 = (char *)&v44 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v4 = (char *)&v44 - v3;
  v5 = type metadata accessor for GenericMusicItem(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (uint64_t)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v55 = (char *)&v44 - v10;
  __chkstk_darwin(v11);
  v13 = (char *)&v44 - v12;
  __chkstk_darwin(v14);
  v53 = (char *)&v44 - v15;
  v16 = JSShelf.sections.getter();
  v17 = v16;
  v60 = (unint64_t)_swiftEmptyArrayStorage;
  if (v16 >> 62)
  {
LABEL_44:
    if (v17 < 0)
      v43 = v17;
    else
      v43 = v17 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v18 = _CocoaArrayWrapper.endIndex.getter(v43);
  }
  else
  {
    v18 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v51 = v8;
  v54 = v13;
  if (v18)
  {
    v58 = v4;
    v8 = 4;
    v13 = v52;
    do
    {
      if ((v17 & 0xC000000000000001) != 0)
        v19 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v8 - 4, v17);
      else
        v19 = (char *)*(id *)(v17 + 8 * v8);
      v20 = v19;
      v4 = (char *)(v8 - 3);
      if (__OFADD__(v8 - 4, 1))
      {
        __break(1u);
        goto LABEL_44;
      }
      v21 = (uint64_t *)&v19[OBJC_IVAR____TtC11MusicJSCore14JSShelfSection_items];
      swift_beginAccess(&v19[OBJC_IVAR____TtC11MusicJSCore14JSShelfSection_items], v59, 0, 0);
      v22 = *v21;
      swift_bridgeObjectRetain();

      sub_100806050(v22);
      ++v8;
    }
    while (v4 != (char *)v18);
    swift_bridgeObjectRelease_n(v17, 2);
    v23 = v60;
    v4 = v58;
    v8 = v51;
    if (v60 >> 62)
      goto LABEL_37;
LABEL_11:
    v24 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v24)
      goto LABEL_12;
LABEL_41:
    v27 = (char *)_swiftEmptyArrayStorage;
LABEL_42:
    swift_bridgeObjectRelease_n(v23, 2);
    return (uint64_t)v27;
  }
  swift_bridgeObjectRelease_n(v17, 2);
  v23 = (uint64_t)_swiftEmptyArrayStorage;
  v13 = v52;
  if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
    goto LABEL_11;
LABEL_37:
  if (v23 < 0)
    v42 = v23;
  else
    v42 = v23 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  result = _CocoaArrayWrapper.endIndex.getter(v42);
  v24 = result;
  if (!result)
    goto LABEL_41;
LABEL_12:
  if (v24 >= 1)
  {
    v26 = 0;
    v57 = v23 & 0xC000000000000001;
    v50 = enum case for GenericMusicItem.musicMovie(_:);
    v49 = enum case for GenericMusicItem.musicVideo(_:);
    v48 = enum case for GenericMusicItem.song(_:);
    v47 = enum case for GenericMusicItem.tvEpisode(_:);
    v46 = enum case for GenericMusicItem.uploadedAudio(_:);
    v45 = enum case for GenericMusicItem.uploadedVideo(_:);
    v27 = (char *)_swiftEmptyArrayStorage;
    v56 = v23;
    v58 = (char *)v24;
    do
    {
      if (v57)
        v28 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v26, v23);
      else
        v28 = *(id *)(v23 + 8 * (_QWORD)v26 + 32);
      v29 = v28;
      (*(void (**)(void))((swift_isaMask & *v28) + 0x250))();
      v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
      if (v30(v13, 1, v5))
      {
        sub_10004FF60((uint64_t)v13, (uint64_t *)&unk_1011A20D0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
      }
      else
      {
        v31 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
        v32 = (uint64_t)v13;
        v33 = v54;
        v31(v54, v32, v5);
        sub_10004FF60(v32, (uint64_t *)&unk_1011A20D0);
        v34 = v55;
        v31(v55, (uint64_t)v33, v5);
        v35 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v34, v5);
        if (v35 == v50 || v35 == v49 || v35 == v48 || v35 == v47 || v35 == v46 || v35 == v45)
        {
          v36 = *(void (**)(char *, uint64_t))(v6 + 8);
          v36(v55, v5);
          v37 = v54;
          v31(v4, (uint64_t)v54, v5);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
          v8 = v51;
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
          v36 = *(void (**)(char *, uint64_t))(v6 + 8);
          v36(v55, v5);
          v8 = v51;
          v37 = v54;
        }
        v36(v37, v5);
        v13 = v52;
        v23 = v56;
      }

      if (v30(v4, 1, v5) == 1)
      {
        sub_10004FF60((uint64_t)v4, (uint64_t *)&unk_1011A20D0);
      }
      else
      {
        v38 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
        v39 = v53;
        v38(v53, v4, v5);
        v38((char *)v8, v39, v5);
        if ((swift_isUniquelyReferenced_nonNull_native(v27) & 1) == 0)
          v27 = (char *)sub_1004329BC(0, *((_QWORD *)v27 + 2) + 1, 1, (unint64_t)v27);
        v41 = *((_QWORD *)v27 + 2);
        v40 = *((_QWORD *)v27 + 3);
        if (v41 >= v40 >> 1)
          v27 = (char *)sub_1004329BC(v40 > 1, v41 + 1, 1, (unint64_t)v27);
        *((_QWORD *)v27 + 2) = v41 + 1;
        v38(&v27[((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v41], (char *)v8, v5);
        v23 = v56;
      }
      ++v26;
    }
    while (v58 != v26);
    goto LABEL_42;
  }
  __break(1u);
  return result;
}

void sub_1006B1E70(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  id v105;
  void *v106;
  void *v107;
  id v108;
  id v109;
  char v110;
  uint64_t v111;
  char v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  _QWORD v116[5];
  uint64_t v117;
  char *v118;
  char *v119;
  char *v120;
  char *v121;
  char *v122;
  char *v123;
  char *v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  char *v131;
  char *v132;
  char *v133;
  char *v134;
  char *v135;
  char *v136;
  char *v137;
  char *v138;
  char *v139;
  char *v140;
  uint64_t v141;
  char *v142;
  char *v143;
  char *v144;
  char *v145;
  char *v146;
  char *v147;
  char *v148;
  char *v149;
  uint64_t v150;
  char *v151;
  char *v152;
  char *v153;
  char *v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  char *v170;
  char *v171;
  char *v172;
  uint64_t v173;
  char *v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  char v203[8];
  char v204[8];

  v177 = a5;
  v176 = a4;
  v201 = a3;
  v202 = a2;
  v196 = a6;
  v7 = sub_100007E8C(&qword_1011AA8D0);
  __chkstk_darwin(v7);
  v123 = (char *)v116 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Poster(0);
  __chkstk_darwin(v9);
  v122 = (char *)v116 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PosterView(0);
  __chkstk_darwin(v11);
  v121 = (char *)v116 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v120 = (char *)v116 - v14;
  v160 = sub_100007E8C(&qword_1011B7890);
  __chkstk_darwin(v160);
  v171 = (char *)v116 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v158 = sub_100007E8C(&qword_1011C2FC8);
  __chkstk_darwin(v158);
  v159 = (char *)v116 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v183 = sub_100007E8C(&qword_1011C2FD0);
  __chkstk_darwin(v183);
  v161 = (char *)v116 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = type metadata accessor for Song(0);
  v116[4] = *(_QWORD *)(v117 - 8);
  __chkstk_darwin(v117);
  v116[3] = (char *)v116 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = type metadata accessor for GenericMusicItem(0);
  v150 = *(_QWORD *)(v127 - 8);
  __chkstk_darwin(v127);
  v118 = (char *)v116 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for Playable(0);
  __chkstk_darwin(v20);
  v151 = (char *)v116 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = type metadata accessor for PlayableView(0);
  __chkstk_darwin(v128);
  v130 = (char *)v116 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v157 = sub_100007E8C(&qword_1011C2FD8);
  __chkstk_darwin(v157);
  v129 = (char *)v116 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v131 = (char *)v116 - v25;
  v26 = type metadata accessor for DetailedGrid(0);
  __chkstk_darwin(v26);
  v142 = (char *)v116 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v169 = type metadata accessor for DetailedGridView(0);
  __chkstk_darwin(v169);
  v144 = (char *)v116 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v179 = sub_100007E8C(&qword_1011C2FE0);
  __chkstk_darwin(v179);
  v181 = (char *)v116 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v167 = sub_100007E8C(&qword_1011C2FE8);
  __chkstk_darwin(v167);
  v168 = (char *)v116 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v180 = sub_100007E8C(&qword_1011C2FF0);
  __chkstk_darwin(v180);
  v170 = (char *)v116 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v193 = sub_100007E8C(&qword_1011C2FF8);
  __chkstk_darwin(v193);
  v182 = (char *)v116 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = type metadata accessor for CircleView.Model(0);
  __chkstk_darwin(v141);
  v140 = (char *)v116 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  v139 = (char *)v116 - v36;
  v166 = type metadata accessor for CircleView(0);
  __chkstk_darwin(v166);
  v143 = (char *)v116 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38);
  v165 = (char *)v116 - v39;
  v173 = sub_100007E8C(&qword_1011C3000);
  __chkstk_darwin(v173);
  v174 = (char *)v116 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v188 = sub_100007E8C(&qword_1011C3008);
  __chkstk_darwin(v188);
  v175 = (char *)v116 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = type metadata accessor for Cover(0);
  __chkstk_darwin(v42);
  v124 = (char *)v116 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v44);
  v154 = (char *)v116 - v45;
  v46 = type metadata accessor for CoverView(0);
  __chkstk_darwin(v46);
  v125 = (char *)v116 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v48);
  v126 = (char *)v116 - v49;
  __chkstk_darwin(v50);
  __chkstk_darwin(v51);
  v155 = (char *)v116 - v52;
  v53 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v53);
  v119 = (char *)v116 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v55);
  v149 = (char *)v116 - v56;
  __chkstk_darwin(v57);
  v147 = (char *)v116 - v58;
  __chkstk_darwin(v59);
  v146 = (char *)v116 - v60;
  __chkstk_darwin(v61);
  v148 = (char *)v116 - v62;
  __chkstk_darwin(v63);
  v172 = (char *)v116 - v64;
  __chkstk_darwin(v65);
  v145 = (char *)v116 - v66;
  v67 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v67);
  v153 = (char *)v116 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v69);
  v152 = (char *)v116 - v70;
  __chkstk_darwin(v71);
  v156 = (char *)v116 - v72;
  __chkstk_darwin(v73);
  v136 = (char *)v116 - v74;
  __chkstk_darwin(v75);
  v135 = (char *)v116 - v76;
  __chkstk_darwin(v77);
  v137 = (char *)v116 - v78;
  __chkstk_darwin(v79);
  v178 = (char *)v116 - v80;
  __chkstk_darwin(v81);
  v134 = (char *)v116 - v82;
  v83 = type metadata accessor for Showcase(0);
  __chkstk_darwin(v83);
  v133 = (char *)v116 - ((v84 + 15) & 0xFFFFFFFFFFFFFFF0);
  v164 = type metadata accessor for ShowcaseView(0);
  __chkstk_darwin(v164);
  v132 = (char *)v116 - ((v85 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v86);
  v138 = (char *)v116 - v87;
  v88 = sub_100007E8C(&qword_1011C3010);
  __chkstk_darwin(v88);
  v199 = (char *)v116 - ((v89 + 15) & 0xFFFFFFFFFFFFFFF0);
  v189 = sub_100007E8C(&qword_1011C3018);
  __chkstk_darwin(v189);
  v91 = (char *)v116 - ((v90 + 15) & 0xFFFFFFFFFFFFFFF0);
  v184 = sub_100007E8C(&qword_1011C3020);
  __chkstk_darwin(v184);
  v186 = (char *)v116 - ((v92 + 15) & 0xFFFFFFFFFFFFFFF0);
  v162 = sub_100007E8C(&qword_1011B78D8);
  __chkstk_darwin(v162);
  v185 = sub_100007E8C(&qword_1011B78E0);
  __chkstk_darwin(v185);
  v163 = (char *)v116 - ((v93 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = sub_100007E8C(&qword_1011C3028);
  __chkstk_darwin(v94);
  v187 = (char *)v116 - ((v95 + 15) & 0xFFFFFFFFFFFFFFF0);
  v198 = sub_100007E8C(&qword_1011C3030);
  __chkstk_darwin(v198);
  v192 = (char *)v116 - ((v96 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = sub_100007E8C(&qword_1011C3038);
  __chkstk_darwin(v97);
  v195 = (char *)v116 - ((v98 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v99);
  v200 = (char *)v116 - v100;
  v197 = v88;
  v191 = v91;
  v190 = v94;
  if (a1)
  {
    v101 = (uint64_t *)&a1[OBJC_IVAR____TtC11MusicJSCore14JSShelfSection_items];
    swift_beginAccess(&a1[OBJC_IVAR____TtC11MusicJSCore14JSShelfSection_items], v204, 0, 0);
    v102 = *v101;
    if ((unint64_t)v102 >> 62)
    {
      if (v102 < 0)
        v113 = v102;
      else
        v113 = v102 & 0xFFFFFFFFFFFFFF8;
      v114 = a1;
      swift_bridgeObjectRetain();
      if (_CocoaArrayWrapper.endIndex.getter(v113))
      {
LABEL_4:
        v116[2] = v46;
        if ((v102 & 0xC000000000000001) != 0)
        {
          v105 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v102);
        }
        else
        {
          if (!*(_QWORD *)((v102 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_24;
          }
          v105 = *(id *)(v102 + 32);
        }
        v106 = v105;
        swift_bridgeObjectRelease();
        v107 = *(void **)(v202 + 16);
        type metadata accessor for JSShelfItem(0);
        v108 = v107;
        v109 = v106;
        v110 = static NSObject.== infix(_:_:)(v109, v108);

        if ((v110 & 1) == 0)
        {
LABEL_13:

          v194 = 0;
LABEL_20:
          v112 = v201;
LABEL_21:
          __asm { BR              X10 }
        }
        v102 = JSShelf.sections.getter();
        if (!((unint64_t)v102 >> 62))
        {
          v111 = *(_QWORD *)((v102 & 0xFFFFFFFFFFFFF8) + 0x10);
          goto LABEL_10;
        }
LABEL_24:
        if (v102 < 0)
          v115 = v102;
        else
          v115 = v102 & 0xFFFFFFFFFFFFFF8;
        v111 = _CocoaArrayWrapper.endIndex.getter(v115);
LABEL_10:
        swift_bridgeObjectRelease();
        if (v111 >= 2)
        {
          swift_beginAccess(&a1[OBJC_IVAR____TtC11MusicJSCore14JSShelfSection_title], v203, 0, 0);
          swift_bridgeObjectRetain();

          swift_getKeyPath(&unk_100ECA608);
          v112 = v201;
          v194 = v201;
          goto LABEL_21;
        }
        goto LABEL_13;
      }
    }
    else
    {
      v103 = *(_QWORD *)((v102 & 0xFFFFFFFFFFFFF8) + 0x10);
      v104 = a1;
      swift_bridgeObjectRetain();
      if (v103)
        goto LABEL_4;
    }

    swift_bridgeObjectRelease();
  }
  v194 = 0;
  goto LABEL_20;
}

uint64_t sub_1006B527C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v6 = type metadata accessor for Artwork.CropStyle(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for EditorialVideoArtworkFlavor(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10022A288();
  if (v14 == 5)
  {
    v15 = type metadata accessor for JSPosterItem(0);
    v16 = swift_dynamicCastClass(a1, v15);
    if (v16 && (v16 = (*(uint64_t (**)(void))((swift_isaMask & *(_QWORD *)v16) + 0x4C8))(), (v16 & 1) != 0))
      v17 = static EditorialVideoArtworkFlavor.motionSquareVideo1x1.getter();
    else
      v17 = static EditorialVideoArtworkFlavor.motionDetailTall.getter(v16);
    static Artwork.CropStyle.specificRectangle.getter(v17);
    sub_1006A24BC((uint64_t)v13, (uint64_t)v9, a2, a3);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  else
  {
    v18 = type metadata accessor for MotionViewModel(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a3, 1, 1, v18);
  }
}

uint64_t sub_1006B5418(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FA9B6C, 1);
}

uint64_t sub_1006B5430()
{
  return sub_10005610C(&qword_1011B3608, &qword_1011B3600, (void (*)(void))sub_1001C9648);
}

uint64_t sub_1006B5454()
{
  return sub_10005610C(&qword_1011C2F98, &qword_1011C2F80, (void (*)(void))sub_1006B5478);
}

unint64_t sub_1006B5478()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011C2FA0;
  if (!qword_1011C2FA0)
  {
    v1 = sub_100044B54(&qword_1011C2F78);
    v2[0] = &type metadata for Text;
    v2[1] = &protocol witness table for Text;
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of Text.with<A>(style:configurator:)>>, 1);
    sub_100049F28(&qword_1011A0FA8, (uint64_t *)&unk_1011BF930, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C2FA0);
  }
  return result;
}

uint64_t sub_1006B5520()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = _s8ItemViewVMa(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);

  v5 = v0 + v3 + *(int *)(v1 + 28);
  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v5, v6);
  return swift_deallocObject(v0, v3 + v4);
}

uint64_t sub_1006B55D0()
{
  _s8ItemViewVMa(0);
  return sub_1006B189C();
}

uint64_t sub_1006B55FC()
{
  return sub_10015FD08(&qword_1011C3048, &qword_1011C3028, (void (*)(void))sub_1004F4778, (void (*)(void))sub_1006B5620);
}

unint64_t sub_1006B5620()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C3050;
  if (!qword_1011C3050)
  {
    v1 = sub_100044B54(&qword_1011C3008);
    sub_100048748(&qword_1011B7940, type metadata accessor for CoverView, (uint64_t)&unk_100ED82A0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C3050);
  }
  return result;
}

uint64_t sub_1006B569C()
{
  return sub_10015FD08(&qword_1011C3058, &qword_1011C2FF8, (void (*)(void))sub_1006B56C0, (void (*)(void))sub_1006B575C);
}

unint64_t sub_1006B56C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C3060;
  if (!qword_1011C3060)
  {
    v1 = sub_100044B54(&qword_1011C2FF0);
    sub_100048748(&qword_1011B7948, type metadata accessor for CircleView, (uint64_t)&unk_100EC2E00);
    sub_100048748(&qword_1011B78F8, type metadata accessor for DetailedGridView, (uint64_t)&unk_100EC1BB0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C3060);
  }
  return result;
}

uint64_t sub_1006B575C()
{
  return sub_10015FD08(&qword_1011C3068, &qword_1011C2FD0, (void (*)(void))sub_1006B5780, (void (*)(void))sub_1004F4680);
}

uint64_t sub_1006B5780()
{
  return sub_10015FD08(&qword_1011C3070, &qword_1011C2FD8, (void (*)(void))sub_1006B57A4, (void (*)(void))sub_1006B5D80);
}

uint64_t sub_1006B57A4()
{
  return sub_10015FD08(&qword_1011C3078, &qword_1011C3080, (void (*)(void))sub_1006B57C8, (void (*)(void))sub_1006B5AA4);
}

uint64_t sub_1006B57C8()
{
  return sub_10015FD08(&qword_1011C3088, &qword_1011C3090, (void (*)(void))sub_1006B57EC, (void (*)(void))sub_1006B5948);
}

uint64_t sub_1006B57EC()
{
  return sub_10015FD08(&qword_1011C3098, &qword_1011C30A0, (void (*)(void))sub_1006B5810, (void (*)(void))sub_1006B58AC);
}

unint64_t sub_1006B5810()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C30A8;
  if (!qword_1011C30A8)
  {
    v1 = sub_100044B54(&qword_1011C30B0);
    sub_100048748(&qword_1011C30B8, type metadata accessor for PlayableView, (uint64_t)&unk_100EB8990);
    sub_100049F28(&qword_1011B70E0, &qword_1011C7290, (uint64_t)&unk_100EC08A0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C30A8);
  }
  return result;
}

unint64_t sub_1006B58AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C30C0;
  if (!qword_1011C30C0)
  {
    v1 = sub_100044B54(&qword_1011C30C8);
    sub_100048748(&qword_1011C30B8, type metadata accessor for PlayableView, (uint64_t)&unk_100EB8990);
    sub_100049F28(&qword_1011B70E8, &qword_1011B70A0, (uint64_t)&unk_100EC08A0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C30C0);
  }
  return result;
}

uint64_t sub_1006B5948()
{
  return sub_10015FD08(&qword_1011C30D0, &qword_1011C30D8, (void (*)(void))sub_1006B596C, (void (*)(void))sub_1006B5A08);
}

unint64_t sub_1006B596C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C30E0;
  if (!qword_1011C30E0)
  {
    v1 = sub_100044B54(&qword_1011C30E8);
    sub_100048748(&qword_1011C30B8, type metadata accessor for PlayableView, (uint64_t)&unk_100EB8990);
    sub_100049F28(&qword_1011B70F0, &qword_1011B70A8, (uint64_t)&unk_100EC08A0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C30E0);
  }
  return result;
}

unint64_t sub_1006B5A08()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C30F0;
  if (!qword_1011C30F0)
  {
    v1 = sub_100044B54(&qword_1011C30F8);
    sub_100048748(&qword_1011C30B8, type metadata accessor for PlayableView, (uint64_t)&unk_100EB8990);
    sub_100049F28(&qword_1011B70F8, &qword_1011B70B0, (uint64_t)&unk_100EC08A0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C30F0);
  }
  return result;
}

uint64_t sub_1006B5AA4()
{
  return sub_10015FD08(&qword_1011C3100, &qword_1011C3108, (void (*)(void))sub_1006B5AC8, (void (*)(void))sub_1006B5C24);
}

uint64_t sub_1006B5AC8()
{
  return sub_10015FD08(&qword_1011C3110, &qword_1011C3118, (void (*)(void))sub_1006B5AEC, (void (*)(void))sub_1006B5B88);
}

unint64_t sub_1006B5AEC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C3120;
  if (!qword_1011C3120)
  {
    v1 = sub_100044B54(&qword_1011C3128);
    sub_100048748(&qword_1011C30B8, type metadata accessor for PlayableView, (uint64_t)&unk_100EB8990);
    sub_100049F28(&qword_1011B7100, &qword_1011B70B8, (uint64_t)&unk_100EC08A0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C3120);
  }
  return result;
}

unint64_t sub_1006B5B88()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C3130;
  if (!qword_1011C3130)
  {
    v1 = sub_100044B54(&qword_1011C3138);
    sub_100048748(&qword_1011C30B8, type metadata accessor for PlayableView, (uint64_t)&unk_100EB8990);
    sub_100049F28(&qword_1011B7108, &qword_1011B70C0, (uint64_t)&unk_100EC08A0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C3130);
  }
  return result;
}

uint64_t sub_1006B5C24()
{
  return sub_10015FD08(&qword_1011C3140, &qword_1011C3148, (void (*)(void))sub_1006B5C48, (void (*)(void))sub_1006B5CE4);
}

unint64_t sub_1006B5C48()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C3150;
  if (!qword_1011C3150)
  {
    v1 = sub_100044B54(&qword_1011C3158);
    sub_100048748(&qword_1011C30B8, type metadata accessor for PlayableView, (uint64_t)&unk_100EB8990);
    sub_100049F28(&qword_1011B7110, &qword_1011B70C8, (uint64_t)&unk_100EC08A0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C3150);
  }
  return result;
}

unint64_t sub_1006B5CE4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C3160;
  if (!qword_1011C3160)
  {
    v1 = sub_100044B54(&qword_1011C3168);
    sub_100048748(&qword_1011C30B8, type metadata accessor for PlayableView, (uint64_t)&unk_100EB8990);
    sub_100049F28(&qword_1011B7118, &qword_1011B70D0, (uint64_t)&unk_100EC08A0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C3160);
  }
  return result;
}

unint64_t sub_1006B5D80()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C3170;
  if (!qword_1011C3170)
  {
    v1 = sub_100044B54(&qword_1011C3178);
    sub_1006B5E04();
    sub_100048748(&qword_1011C30B8, type metadata accessor for PlayableView, (uint64_t)&unk_100EB8990);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C3170);
  }
  return result;
}

unint64_t sub_1006B5E04()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C3180;
  if (!qword_1011C3180)
  {
    v1 = sub_100044B54(&qword_1011C3188);
    sub_100048748(&qword_1011C30B8, type metadata accessor for PlayableView, (uint64_t)&unk_100EB8990);
    sub_100049F28(&qword_1011B7120, &qword_1011B70D8, (uint64_t)&unk_100EC08A0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C3180);
  }
  return result;
}

uint64_t sub_1006B5EA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    return sub_10006B410(a4, a5, a6, a7, a8 & 1);
  }
  return result;
}

uint64_t sub_1006B5F04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    return sub_10006B61C(a4, a5, a6, a7, a8 & 1);
  }
  return result;
}

uint64_t sub_1006B5F90()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1006B5FB4()
{
  uint64_t v0;

  return sub_1006ABD74(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1006B5FBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1006ABE50(a1, a2, a3, a4, a5);
}

uint64_t sub_1006B5FC4@<X0>(uint64_t a1@<X8>)
{
  return JSShelf.headerView()(a1);
}

id sub_1006B5FE4@<X0>(uint64_t a1@<X0>, id *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  return sub_1006AC5EC(a1, a2, *(void **)(v3 + 16), a3);
}

uint64_t sub_1006B5FEC@<X0>(uint64_t a1@<X8>)
{
  return sub_1006AC674(a1);
}

uint64_t sub_1006B602C()
{
  return sub_10015FD08(&qword_1011C3268, &qword_1011C3238, (void (*)(void))sub_1006B56C0, (void (*)(void))sub_1006B6050);
}

unint64_t sub_1006B6050()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C3270;
  if (!qword_1011C3270)
  {
    v1 = sub_100044B54(&qword_1011C3228);
    sub_100048748(&qword_1011C30B8, type metadata accessor for PlayableView, (uint64_t)&unk_100EB8990);
    sub_1004F4680();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C3270);
  }
  return result;
}

unint64_t sub_1006B60D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C32D0;
  if (!qword_1011C32D0)
  {
    v1 = sub_100044B54(&qword_1011C32D8);
    sub_10015FD08(&qword_1011C32E0, &qword_1011C2F90, (void (*)(void))sub_1006B5430, (void (*)(void))sub_1006B5454);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1011C32D0);
  }
  return result;
}

unint64_t sub_1006B6160()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011C32E8;
  if (!qword_1011C32E8)
  {
    v1 = sub_100044B54(&qword_1011C32F0);
    v2[0] = sub_100044B54(&qword_1011C2FA8);
    v2[1] = sub_100049F28(&qword_1011C2FC0, &qword_1011C2FA8, (uint64_t)&protocol conformance descriptor for VStack<A>);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C32E8);
  }
  return result;
}

uint64_t sub_1006B622C()
{
  return sub_100049F28(&qword_1011C32F8, &qword_1011C3300, (uint64_t)&protocol conformance descriptor for VStack<A>);
}

unint64_t sub_1006B625C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C3308;
  if (!qword_1011C3308)
  {
    v1 = sub_100044B54(&qword_1011C3310);
    sub_10005610C(&qword_1011B3FE8, &qword_1011A0630, (void (*)(void))sub_100238A3C);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1011C3308);
  }
  return result;
}

uint64_t sub_1006B62E0()
{
  return sub_10015FD08(&qword_1011C3418, &qword_1011C33D8, (void (*)(void))sub_1006B6304, (void (*)(void))sub_1006B64F8);
}

unint64_t sub_1006B6304()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C3420;
  if (!qword_1011C3420)
  {
    v1 = sub_100044B54(&qword_1011C33D0);
    sub_1006B63B0(&qword_1011C3428, &qword_1011C33E8, &qword_1011B70E0, &qword_1011C7290);
    sub_1006B63B0(&qword_1011C3430, &qword_1011C33A8, &qword_1011B70E8, &qword_1011B70A0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C3420);
  }
  return result;
}

uint64_t sub_1006B63B0(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t OpaqueTypeConformance2;
  uint64_t v11;
  ValueMetadata *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;

  result = *a1;
  if (!result)
  {
    v8 = sub_100044B54(a2);
    v9 = sub_100044B54(&qword_1011C33F8);
    v11 = sub_100044B54(&qword_1011C3400);
    v12 = &type metadata for ActionType;
    v13 = type metadata accessor for ContextualPreview(255);
    v14 = sub_100049F28(&qword_1011C3408, &qword_1011C3400, (uint64_t)&protocol conformance descriptor for VStack<A>);
    v15 = sub_1000E3EE4();
    v16 = sub_100048748(&qword_1011A0578, type metadata accessor for ContextualPreview, (uint64_t)"mu ");
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v11, &opaque type descriptor for <<opaque return type of View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)>>, 1);
    v11 = v9;
    v12 = (ValueMetadata *)OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2(&v11, &opaque type descriptor for <<opaque return type of View.shareSheetPresenting(_:)>>, 1);
    sub_100049F28(a3, a4, (uint64_t)&unk_100EC08A0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1006B64F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C3438;
  if (!qword_1011C3438)
  {
    v1 = sub_100044B54(&qword_1011C3398);
    sub_1006B63B0(&qword_1011C3440, &qword_1011C33A0, &qword_1011B70F0, &qword_1011B70A8);
    sub_1006B63B0(&qword_1011C3448, &qword_1011C3388, &qword_1011B70F8, &qword_1011B70B0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C3438);
  }
  return result;
}

uint64_t sub_1006B65A4()
{
  return sub_10015FD08(&qword_1011C3450, &qword_1011C3378, (void (*)(void))sub_1006B65C8, (void (*)(void))sub_1006B6674);
}

unint64_t sub_1006B65C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C3458;
  if (!qword_1011C3458)
  {
    v1 = sub_100044B54(&qword_1011C3370);
    sub_1006B63B0(&qword_1011C3460, &qword_1011C3380, &qword_1011B7100, &qword_1011B70B8);
    sub_1006B63B0(&qword_1011C3468, &qword_1011C3358, &qword_1011B7108, &qword_1011B70C0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C3458);
  }
  return result;
}

unint64_t sub_1006B6674()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C3470;
  if (!qword_1011C3470)
  {
    v1 = sub_100044B54(&qword_1011C3348);
    sub_1006B63B0(&qword_1011C3478, &qword_1011C3350, &qword_1011B7110, &qword_1011B70C8);
    sub_1006B63B0(&qword_1011C3480, &qword_1011C3338, &qword_1011B7118, &qword_1011B70D0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C3470);
  }
  return result;
}

unint64_t sub_1006B6720()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  ValueMetadata *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  result = qword_1011C3488;
  if (!qword_1011C3488)
  {
    v1 = sub_100044B54(&qword_1011C3328);
    sub_1006B63B0(&qword_1011C33F0, &qword_1011C3330, &qword_1011B7120, &qword_1011B70D8);
    v2 = sub_100044B54(&qword_1011C33F8);
    v4 = sub_100044B54(&qword_1011C3400);
    v5 = &type metadata for ActionType;
    v6 = type metadata accessor for ContextualPreview(255);
    v7 = sub_100049F28(&qword_1011C3408, &qword_1011C3400, (uint64_t)&protocol conformance descriptor for VStack<A>);
    v8 = sub_1000E3EE4();
    v9 = sub_100048748(&qword_1011A0578, type metadata accessor for ContextualPreview, (uint64_t)"mu ");
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)>>, 1);
    v4 = v2;
    v5 = (ValueMetadata *)OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.shareSheetPresenting(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C3488);
  }
  return result;
}

id sub_1006B6884(double a1, double a2, double a3, double a4)
{
  char *v4;
  id v9;
  id v10;
  id v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  objc_super v16;

  *(_QWORD *)&v4[OBJC_IVAR____TtC5Music23NowPlayingShuffleButton_shuffleType] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Music23NowPlayingShuffleButton_defaultColor] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Music23NowPlayingShuffleButton_selectedColor] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Music23NowPlayingShuffleButton_selectedBackgroundColor] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Music23NowPlayingShuffleButton_dimmedBackgroundColor] = 0;
  v16.receiver = v4;
  v16.super_class = (Class)type metadata accessor for NowPlayingShuffleButton();
  v9 = objc_msgSendSuper2(&v16, "initWithFrame:", a1, a2, a3, a4);
  sub_1005BE204();
  v10 = v9;
  v11 = UIImage.init(systemName:pointSize:weight:)(15.0, 0x656C6666756873, 0xE700000000000000, 7);
  objc_msgSend(v10, "setImage:forState:", v11, 0);

  objc_msgSend(v10, "setAdjustsImageSizeForAccessibilityContentSizeCategory:", 1);
  v12 = AccessibilityIdentifier.nowPlayingShuffleButton.unsafeMutableAddressor();
  v13 = *v12;
  v14 = v12[1];
  swift_bridgeObjectRetain();
  UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(v13, v14);

  return v10;
}

void sub_1006B6A9C(uint64_t a1)
{
  void *v1;
  void *v2;
  unint64_t v4;
  int v5;
  id v6;
  unint64_t v7;
  int v8;
  objc_super v9;

  v2 = v1;
  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for NowPlayingShuffleButton();
  objc_msgSendSuper2(&v9, "traitCollectionDidChange:", a1);
  if (a1)
  {
    v4 = sub_10013B23C();
    v5 = UITraitCollection.subscript.getter(&type metadata for HasAnimatedBackgroundTrait, &type metadata for HasAnimatedBackgroundTrait, v4) & 1;
  }
  else
  {
    v5 = 2;
  }
  v6 = objc_msgSend(v2, "traitCollection");
  v7 = sub_10013B23C();
  v8 = UITraitCollection.subscript.getter(&type metadata for HasAnimatedBackgroundTrait, &type metadata for HasAnimatedBackgroundTrait, v7);

  if (v5 == 2 || ((v8 ^ (v5 != 0)) & 1) != 0)
    sub_1006B6C1C();
}

void sub_1006B6C1C()
{
  char *v0;
  void *v1;
  char *v2;
  unint64_t v3;
  id v4;
  unint64_t v5;
  char v6;
  void *v7;
  NSString v8;
  id v9;
  id v10;
  id v11;
  unsigned int v12;
  uint64_t *v13;
  id v14;
  unsigned int v15;
  void *v16;
  uint64_t v17;
  id v18;
  Swift::String v19;
  Swift::String v20;
  Swift::String v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;

  v1 = v0;
  v2 = (char *)OBJC_IVAR____TtC5Music23NowPlayingShuffleButton_shuffleType;
  v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Music23NowPlayingShuffleButton_shuffleType];
  if (v3 >= 3)
    goto LABEL_24;
  objc_msgSend(v0, "setSelected:", (6u >> (v3 & 7)) & 1);
  v4 = objc_msgSend(v0, "traitCollection");
  v5 = sub_10013B23C();
  v6 = UITraitCollection.subscript.getter(&type metadata for HasAnimatedBackgroundTrait, &type metadata for HasAnimatedBackgroundTrait, v5);

  if ((v6 & 1) == 0)
  {
    v10 = objc_msgSend(v1, "layer");
    objc_msgSend(v10, "setCornerCurve:", kCACornerCurveContinuous);

    v11 = objc_msgSend(v1, "layer");
    objc_msgSend(v11, "setCornerRadius:", 7.0);

    objc_msgSend(v1, "setImage:forState:", 0, 4);
    v12 = objc_msgSend(v1, "isSelected");
    v13 = &OBJC_IVAR____TtC5Music23NowPlayingShuffleButton_selectedColor;
    if (!v12)
      v13 = &OBJC_IVAR____TtC5Music23NowPlayingShuffleButton_defaultColor;
    objc_msgSend(v1, "setTintColor:", *(_QWORD *)((char *)v1 + *v13));
    v14 = objc_msgSend(v1, "tintAdjustmentMode");
    v15 = objc_msgSend(v1, "isSelected");
    if (v14 == (id)2)
    {
      if (v15)
      {
        v16 = *(void **)((char *)v1 + OBJC_IVAR____TtC5Music23NowPlayingShuffleButton_dimmedBackgroundColor);
        if (!v16)
        {
          v17 = OBJC_IVAR____TtC5Music23NowPlayingShuffleButton_selectedBackgroundColor;
LABEL_20:
          v18 = *(id *)((char *)v1 + v17);
          goto LABEL_21;
        }
LABEL_17:
        v18 = v16;
LABEL_21:
        v23 = v18;
        objc_msgSend(v1, "setBackgroundColor:");
LABEL_22:

        return;
      }
    }
    else if (v15)
    {
      v16 = *(void **)((char *)v1 + OBJC_IVAR____TtC5Music23NowPlayingShuffleButton_selectedBackgroundColor);
      if (!v16)
      {
        v17 = OBJC_IVAR____TtC5Music23NowPlayingShuffleButton_defaultColor;
        goto LABEL_20;
      }
      goto LABEL_17;
    }
    v18 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    goto LABEL_21;
  }
  v7 = (void *)objc_opt_self(UIImage);
  v8 = String._bridgeToObjectiveC()();
  if (qword_10119C1E0 != -1)
    swift_once(&qword_10119C1E0, sub_100565C7C);
  v2 = (char *)objc_msgSend(v7, "imageNamed:inBundle:compatibleWithTraitCollection:", v8, qword_10124D260, 0);

  if (v2)
  {
    objc_msgSend(v1, "setImage:forState:", v2, 4);

    if (qword_10119C318 != -1)
      swift_once(&qword_10119C318, sub_1005D2F9C);
    objc_msgSend(v1, "setTintColor:", qword_10124D3F8);
    v9 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    objc_msgSend(v1, "setBackgroundColor:", v9);

    v23 = objc_msgSend(v1, "layer");
    objc_msgSend(v23, "setCornerRadius:", 0.0);
    goto LABEL_22;
  }
  __break(1u);
LABEL_24:
  v25 = 0;
  v26 = 0xE000000000000000;
  _StringGuts.grow(_:)(24);
  v19._object = (void *)0x8000000100E3CCE0;
  v19._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v19);
  v20._countAndFlagsBits = 0x6C6666756853504DLL;
  v20._object = (void *)0xED00006570795465;
  String.append(_:)(v20);
  v21._countAndFlagsBits = 32;
  v21._object = (void *)0xE100000000000000;
  String.append(_:)(v21);
  v24 = *(_QWORD *)&v2[(_QWORD)v1];
  type metadata accessor for MPShuffleType(0);
  _print_unlocked<A, B>(_:_:)(&v24, &v25, v22, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v25, v26, "Music/NowPlayingShuffleButton.swift", 35, 2, 78, 0);
  __break(1u);
}

id sub_1006B7090()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NowPlayingShuffleButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for NowPlayingShuffleButton()
{
  return objc_opt_self(_TtC5Music23NowPlayingShuffleButton);
}

uint64_t sub_1006B7138()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v6;

  v0 = _s16PlaylistsManagerCMa(0);
  v1 = swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  v6 = _swiftEmptyArrayStorage;
  v2 = sub_100007E8C(&qword_1011B87E8);
  Published.init(initialValue:)(&v6, v2);
  v3 = OBJC_IVAR____TtCO5Music14ClarityUIMusic16PlaylistsManager_preferences;
  if (qword_10119C4C8 != -1)
    swift_once(&qword_10119C4C8, sub_1006530AC);
  *(_QWORD *)(v1 + v3) = qword_10124D528;
  v4 = type metadata accessor for Playlist(0);
  swift_retain();
  MusicLibraryRequest.init()(v4, &protocol witness table for Playlist);
  return v1;
}

uint64_t *sub_1006B7220(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_100007E8C(&qword_1011B5018);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for MultimodalListStyle.Layout(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
      v9 = a1;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v13 = *(int *)(a3 + 20);
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = *(_QWORD *)v15;
    v17 = *((_QWORD *)v15 + 1);
    v18 = v15[16];
    KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)v15, v17);
    *(_QWORD *)v14 = v16;
    *((_QWORD *)v14 + 1) = v17;
    v14[16] = v18;
    v19 = *(int *)(a3 + 24);
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    v22 = *(_QWORD *)v21;
    v23 = *((_QWORD *)v21 + 1);
    LOBYTE(v16) = v21[16];
    KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)v21, v23);
    *(_QWORD *)v20 = v22;
    *((_QWORD *)v20 + 1) = v23;
    v20[16] = v16;
  }
  return a1;
}

uint64_t sub_1006B7354(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_100007E8C(&qword_1011B5018);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for MultimodalListStyle.Layout(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  else
  {
    swift_release();
  }
  sub_1000A6174(*(_QWORD *)(a1 + *(int *)(a2 + 20)), *(_QWORD *)(a1 + *(int *)(a2 + 20) + 8));
  return sub_1000A6174(*(_QWORD *)(a1 + *(int *)(a2 + 24)), *(_QWORD *)(a1 + *(int *)(a2 + 24) + 8));
}

_QWORD *sub_1006B73E0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_100007E8C(&qword_1011B5018);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for MultimodalListStyle.Layout(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    *a1 = *a2;
    swift_retain();
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v11 = *(int *)(a3 + 20);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = *(_QWORD *)v13;
  v15 = *((_QWORD *)v13 + 1);
  v16 = v13[16];
  KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)v13, v15);
  *(_QWORD *)v12 = v14;
  *((_QWORD *)v12 + 1) = v15;
  v12[16] = v16;
  v17 = *(int *)(a3 + 24);
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = *(_QWORD *)v19;
  v21 = *((_QWORD *)v19 + 1);
  LOBYTE(v14) = v19[16];
  KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)v19, v21);
  *(_QWORD *)v18 = v20;
  *((_QWORD *)v18 + 1) = v21;
  v18[16] = v14;
  return a1;
}

_QWORD *sub_1006B74E8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  if (a1 != a2)
  {
    sub_10004FF60((uint64_t)a1, &qword_1011B5018);
    v6 = sub_100007E8C(&qword_1011B5018);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for MultimodalListStyle.Layout(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  v11 = *(int *)(a3 + 20);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = *(_QWORD *)v13;
  v15 = *((_QWORD *)v13 + 1);
  v16 = v13[16];
  KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)v13, v15);
  v17 = *(_QWORD *)v12;
  v18 = *((_QWORD *)v12 + 1);
  *(_QWORD *)v12 = v14;
  *((_QWORD *)v12 + 1) = v15;
  v12[16] = v16;
  sub_1000A6174(v17, v18);
  v19 = *(int *)(a3 + 24);
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = *(_QWORD *)v21;
  v23 = *((_QWORD *)v21 + 1);
  LOBYTE(v14) = v21[16];
  KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)v21, v23);
  v24 = *(_QWORD *)v20;
  v25 = *((_QWORD *)v20 + 1);
  *(_QWORD *)v20 = v22;
  *((_QWORD *)v20 + 1) = v23;
  v20[16] = v14;
  sub_1000A6174(v24, v25);
  return a1;
}

char *sub_1006B7620(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;

  v6 = sub_100007E8C(&qword_1011B5018);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for MultimodalListStyle.Layout(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = *(int *)(a3 + 20);
  v9 = *(int *)(a3 + 24);
  v10 = &a1[v8];
  v11 = &a2[v8];
  *(_OWORD *)v10 = *(_OWORD *)v11;
  v10[16] = v11[16];
  v12 = &a1[v9];
  v13 = &a2[v9];
  *(_OWORD *)v12 = *(_OWORD *)v13;
  v12[16] = v13[16];
  return a1;
}

char *sub_1006B76F0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;

  if (a1 != a2)
  {
    sub_10004FF60((uint64_t)a1, &qword_1011B5018);
    v6 = sub_100007E8C(&qword_1011B5018);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for MultimodalListStyle.Layout(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = v10[16];
  v12 = *(_QWORD *)v9;
  v13 = *((_QWORD *)v9 + 1);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  v9[16] = v11;
  sub_1000A6174(v12, v13);
  v14 = *(int *)(a3 + 24);
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = v16[16];
  v18 = *(_QWORD *)v15;
  v19 = *((_QWORD *)v15 + 1);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  v15[16] = v17;
  sub_1000A6174(v18, v19);
  return a1;
}

uint64_t sub_1006B77F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006B7800);
}

uint64_t sub_1006B7800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_100007E8C(&qword_1011B5020);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 16);
  if (v9 > 1)
    return (v9 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t sub_1006B7880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006B788C);
}

uint64_t sub_1006B788C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_100007E8C(&qword_1011B5020);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20) + 16) = -(char)a2;
  return result;
}

uint64_t _s17RootPlaylistsViewVMa(uint64_t a1)
{
  uint64_t result;

  result = qword_1011C3538;
  if (!qword_1011C3538)
    return swift_getSingletonMetadata(a1, &_s17RootPlaylistsViewVMn);
  return result;
}

void sub_1006B7948(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  sub_10046B2B4(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = &unk_100ECA718;
    v4[2] = &unk_100ECA718;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
  }
}

uint64_t sub_1006B79BC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FA9CF0, 1);
}

uint64_t sub_1006B79CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t OpaqueTypeConformance2;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t *v14;
  _BYTE v16[16];
  uint64_t v17;
  _QWORD v18[4];

  v3 = sub_100007E8C(&qword_1011C3578);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = v1;
  v7 = sub_100007E8C(&qword_1011C3580);
  v8 = sub_100044B54(&qword_1011C3588);
  v9 = sub_1006B9F4C();
  v18[0] = v8;
  v18[1] = &type metadata for Int;
  v18[2] = v9;
  v18[3] = &protocol witness table for Int;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v18, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  NavigationStack.init<>(root:)(sub_1006B9F44, v16, v7, OpaqueTypeConformance2);
  v11 = *Color.MusicTint.normal.unsafeMutableAddressor();
  KeyPath = swift_getKeyPath(&unk_100ECA780);
  v18[0] = v11;
  swift_retain_n(v11, 2);
  v13 = AnyShapeStyle.init<A>(_:)(v18, &type metadata for Color, &protocol witness table for Color);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v4 + 16))(a1, v6, v3);
  swift_release();
  v14 = (uint64_t *)(a1 + *(int *)(sub_100007E8C(&qword_1011C35A8) + 36));
  *v14 = KeyPath;
  v14[1] = v13;
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1006B7B3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double (**v19)();
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t KeyPath;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v35 = a2;
  v33 = _s17RootPlaylistsViewVMa(0);
  v3 = *(_QWORD *)(v33 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v33);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011C35A0);
  __chkstk_darwin(v6);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011C3588);
  v34 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v8 = static HorizontalAlignment.center.getter(v12);
  *((_QWORD *)v8 + 1) = 0;
  v8[16] = 1;
  v13 = sub_100007E8C(&qword_1011C35B0);
  sub_1006B7E20((uint64_t)&v8[*(int *)(v13 + 44)]);
  sub_10005B704(a1, (uint64_t)v5, _s17RootPlaylistsViewVMa);
  v14 = *(unsigned __int8 *)(v3 + 80);
  v15 = (v14 + 16) & ~v14;
  v16 = v15 + v4;
  v17 = v14 | 7;
  v18 = swift_allocObject(&unk_1010D6F38, v16, v14 | 7);
  sub_1006BA230((uint64_t)v5, v18 + v15);
  sub_10004A160((uint64_t)v8, (uint64_t)v11, &qword_1011C35A0);
  v19 = (double (**)())&v11[*(int *)(v9 + 36)];
  *v19 = sub_1006BA274;
  v19[1] = (double (*)())v18;
  v19[2] = 0;
  v19[3] = 0;
  sub_10004FF60((uint64_t)v8, &qword_1011C35A0);
  v20 = a1 + *(int *)(v33 + 24);
  v21 = *(_QWORD *)v20;
  v22 = *(_QWORD *)(v20 + 8);
  v23 = *(unsigned __int8 *)(v20 + 16);
  v24 = _s16PlaylistsManagerCMa(0);
  v25 = sub_100048748(&qword_1011C35B8, _s16PlaylistsManagerCMa, (uint64_t)&unk_100EBFD24);
  v26 = StateObject.wrappedValue.getter(v21, v22, v23, v24, v25);
  KeyPath = swift_getKeyPath(&unk_100ECA7B0);
  v28 = swift_getKeyPath(&unk_100ECA7D8);
  static Published.subscript.getter(&v36, v26, KeyPath, v28);
  swift_release();
  swift_release();
  swift_release();
  v29 = *(_QWORD *)(v36 + 16);
  swift_bridgeObjectRelease();
  v36 = v29;
  sub_10005B704(a1, (uint64_t)v5, _s17RootPlaylistsViewVMa);
  v30 = swift_allocObject(&unk_1010D6F60, v16, v17);
  sub_1006BA230((uint64_t)v5, v30 + v15);
  v31 = sub_1006B9F4C();
  View.onChange<A>(of:initial:_:)(&v36, 0, sub_1006BA2AC, v30, v34, &type metadata for Int, v31, &protocol witness table for Int);
  swift_release();
  return sub_10004FF60((uint64_t)v11, &qword_1011C3588);
}

uint64_t sub_1006B7E20@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  void (**v3)(char *, char *, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t KeyPath;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  char *v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  void (**v55)(char *, char *, uint64_t);
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v66;
  int *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __n128 v75;
  uint64_t v76;
  uint64_t v77;
  NSObject *v78;
  os_log_type_t v79;
  uint8_t *v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(void);
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t OpaqueTypeConformance2;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  void (**v112)(char *, char *, uint64_t);
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  void *v128;
  char v129[9];

  v123 = a1;
  v122 = _s19PlaylistDetailsViewVMa(0);
  __chkstk_darwin(v122);
  v3 = (void (**)(char *, char *, uint64_t))((char *)&v99 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_100007E8C(&qword_1011A30F0);
  __chkstk_darwin(v4);
  v111 = (char *)&v99 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = type metadata accessor for Playlist(0);
  v116 = *(_QWORD *)(v113 - 8);
  __chkstk_darwin(v113);
  v100 = (char *)&v99 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v101 = (char *)&v99 - v8;
  v120 = sub_100007E8C(&qword_1011C35C8);
  __chkstk_darwin(v120);
  v121 = (uint64_t)&v99 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = sub_100007E8C(&qword_1011C35D0);
  __chkstk_darwin(v114);
  v118 = (char *)&v99 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = sub_100007E8C(&qword_1011C35D8);
  v11 = __chkstk_darwin(v124);
  v119 = (char *)&v99 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = type metadata accessor for MultimodalListStyle.IconStyle(0, v11);
  v108 = *(_QWORD *)(v109 - 8);
  __chkstk_darwin(v109);
  v107 = (char *)&v99 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v106 = (char *)&v99 - v15;
  v16 = sub_100007E8C(&qword_1011B50D0);
  __chkstk_darwin(v16);
  v18 = (char *)&v99 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v19);
  v22 = (char *)&v99 - v21;
  v115 = type metadata accessor for MultimodalListStyle(0, v20);
  v105 = *(_QWORD *)(v115 - 8);
  __chkstk_darwin(v115);
  v104 = (char *)&v99 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_100007E8C(&qword_1011C35E0);
  v103 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v26 = (char *)&v99 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = sub_100007E8C(&qword_1011C35E8);
  v112 = *(void (***)(char *, char *, uint64_t))(v117 - 8);
  __chkstk_darwin(v117);
  v102 = (char *)&v99 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v110 = (char *)&v99 - v29;
  v30 = v1;
  v31 = (uint64_t *)(v1 + *(int *)(_s17RootPlaylistsViewVMa(0) + 24));
  v32 = *v31;
  v33 = v31[1];
  v34 = *((unsigned __int8 *)v31 + 16);
  v35 = _s16PlaylistsManagerCMa(0);
  v36 = sub_100048748(&qword_1011C35B8, _s16PlaylistsManagerCMa, (uint64_t)&unk_100EBFD24);
  v37 = StateObject.wrappedValue.getter(v32, v33, v34, v35, v36);
  KeyPath = swift_getKeyPath(&unk_100ECA7B0);
  v39 = swift_getKeyPath(&unk_100ECA7D8);
  static Published.subscript.getter(&v125, v37, KeyPath, v39);
  swift_release();
  swift_release();
  v41 = swift_release();
  v42 = v125;
  v43 = *((_QWORD *)v125 + 2);
  if (v43 < 2)
  {
    v110 = (char *)v24;
    v112 = v3;
    v66 = (uint64_t)v119;
    v68 = v121;
    v67 = (int *)v122;
    v69 = v124;
    if (v43)
    {
      v70 = v116;
      v71 = (uint64_t)v111;
      v72 = v113;
      (*(void (**)(char *, char *, uint64_t, __n128))(v116 + 16))(v111, &v125[(*(unsigned __int8 *)(v116 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v116 + 80)], v113, v41);
      v73 = 0;
      v74 = (uint64_t)v118;
    }
    else
    {
      v73 = 1;
      v74 = (uint64_t)v118;
      v72 = v113;
      v70 = v116;
      v71 = (uint64_t)v111;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v70 + 56))(v71, v73, 1, v72);
    v75 = swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v70 + 48))(v71, 1, v72, v75) == 1)
    {
      sub_10004FF60(v71, &qword_1011A30F0);
      if (qword_10119B870 != -1)
        swift_once(&qword_10119B870, sub_100065384);
      v76 = type metadata accessor for Logger(0);
      v77 = sub_100048B14(v76, (uint64_t)qword_10124C6F0);
      v78 = Logger.logObject.getter(v77);
      v79 = static os_log_type_t.default.getter(v78);
      if (os_log_type_enabled(v78, v79))
      {
        v80 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v80 = 0;
        _os_log_impl((void *)&_mh_execute_header, v78, v79, "No Content", v80, 2u);
        swift_slowDealloc(v80, -1, -1);
      }

      *(_QWORD *)v68 = 0;
      *(_BYTE *)(v68 + 8) = 1;
      swift_storeEnumTagMultiPayload(v68, v120, 1);
      v81 = sub_1006BA398();
      return _ConditionalContent<>.init(storage:)(v68, v69, &type metadata for Spacer, v81, &protocol witness table for Spacer);
    }
    else
    {
      v82 = v70;
      v83 = v72;
      v84 = *(void (**)(void))(v82 + 32);
      v85 = v101;
      v84();
      v86 = v100;
      (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v100, v85, v83);
      v87 = swift_getKeyPath(&unk_100ECA840);
      v88 = (uint64_t)v112;
      *v112 = (void (*)(char *, char *, uint64_t))v87;
      v89 = sub_100007E8C(&qword_1011B5018);
      swift_storeEnumTagMultiPayload(v88, v89, 0);
      v90 = v88 + v67[5];
      *(_QWORD *)v90 = sub_100468680;
      *(_QWORD *)(v90 + 8) = 0;
      *(_BYTE *)(v90 + 16) = 0;
      v91 = v88 + v67[6];
      *(_QWORD *)v91 = sub_1001DB528;
      *(_QWORD *)(v91 + 8) = 0;
      *(_BYTE *)(v91 + 16) = 0;
      v92 = v88 + v67[7];
      *(_QWORD *)v92 = sub_1004686C0;
      *(_QWORD *)(v92 + 8) = 0;
      *(_BYTE *)(v92 + 16) = 0;
      v93 = v88 + v67[8];
      v129[0] = 0;
      State.init(wrappedValue:)(v129, &type metadata for Bool);
      v94 = v126;
      *(_BYTE *)v93 = (_BYTE)v125;
      *(_QWORD *)(v93 + 8) = v94;
      ((void (*)(uint64_t, char *, uint64_t))v84)(v88 + v67[9], v86, v83);
      sub_10005B704(v88, v74, _s19PlaylistDetailsViewVMa);
      swift_storeEnumTagMultiPayload(v74, v114, 1);
      v95 = sub_100049F28(&qword_1011C35F8, &qword_1011C35E0, (uint64_t)&protocol conformance descriptor for List<A, B>);
      v125 = v110;
      v126 = v115;
      v127 = v95;
      v128 = &protocol witness table for MultimodalListStyle;
      OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v125, &opaque type descriptor for <<opaque return type of View.listStyle<A>(_:)>>, 1);
      v97 = sub_100048748(&qword_1011C3600, _s19PlaylistDetailsViewVMa, (uint64_t)&unk_100EBC628);
      _ConditionalContent<>.init(storage:)(v74, v117, v67, OpaqueTypeConformance2, v97);
      sub_10004A160(v66, v68, &qword_1011C35D8);
      swift_storeEnumTagMultiPayload(v68, v120, 0);
      v98 = sub_1006BA398();
      _ConditionalContent<>.init(storage:)(v68, v124, &type metadata for Spacer, v98, &protocol witness table for Spacer);
      sub_10004FF60(v66, &qword_1011C35D8);
      sub_10005B748(v88, _s19PlaylistDetailsViewVMa);
      return (*(uint64_t (**)(char *, uint64_t))(v116 + 8))(v85, v83);
    }
  }
  else
  {
    __chkstk_darwin(v40);
    *(&v99 - 2) = v30;
    *(&v99 - 1) = (uint64_t)v42;
    v44 = sub_100007E8C(&qword_1011C3608);
    v45 = sub_100049F28(&qword_1011C3610, &qword_1011C3608, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    List<>.init(content:)(sub_1006BA480, &v99 - 4, v44, v45);
    swift_bridgeObjectRelease();
    sub_100825290((uint64_t)v22);
    v46 = type metadata accessor for MultimodalListStyle.Layout(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v22, 0, 1, v46);
    v47 = v108;
    v48 = v106;
    v49 = v109;
    (*(void (**)(char *, _QWORD, uint64_t))(v108 + 104))(v106, enum case for MultimodalListStyle.IconStyle.square(_:), v109);
    sub_10004A160((uint64_t)v22, (uint64_t)v18, &qword_1011B50D0);
    v50 = v107;
    (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v107, v48, v49);
    v51 = v104;
    MultimodalListStyle.init(layout:iconStyle:)(v18, v50);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v48, v49);
    sub_10004FF60((uint64_t)v22, &qword_1011B50D0);
    v52 = sub_100049F28(&qword_1011C35F8, &qword_1011C35E0, (uint64_t)&protocol conformance descriptor for List<A, B>);
    v53 = v102;
    v54 = v115;
    View.listStyle<A>(_:)(v51, v24, v115, v52, &protocol witness table for MultimodalListStyle);
    (*(void (**)(char *, uint64_t))(v105 + 8))(v51, v54);
    (*(void (**)(char *, uint64_t))(v103 + 8))(v26, v24);
    v55 = v112;
    v56 = v110;
    v57 = v53;
    v58 = v117;
    v112[4](v110, v57, v117);
    v59 = v118;
    v55[2](v118, v56, v58);
    swift_storeEnumTagMultiPayload(v59, v114, 0);
    v125 = (char *)v24;
    v126 = v54;
    v127 = v52;
    v128 = &protocol witness table for MultimodalListStyle;
    v60 = swift_getOpaqueTypeConformance2(&v125, &opaque type descriptor for <<opaque return type of View.listStyle<A>(_:)>>, 1);
    v61 = sub_100048748(&qword_1011C3600, _s19PlaylistDetailsViewVMa, (uint64_t)&unk_100EBC628);
    v62 = (uint64_t)v119;
    _ConditionalContent<>.init(storage:)(v59, v58, v122, v60, v61);
    v63 = v121;
    sub_10004A160(v62, v121, &qword_1011C35D8);
    swift_storeEnumTagMultiPayload(v63, v120, 0);
    v64 = sub_1006BA398();
    _ConditionalContent<>.init(storage:)(v63, v124, &type metadata for Spacer, v64, &protocol witness table for Spacer);
    sub_10004FF60(v62, &qword_1011C35D8);
    return ((uint64_t (*)(char *, uint64_t))v55[1])(v56, v58);
  }
}

double sub_1006B8904(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  _QWORD *v15;
  double result;
  uint64_t v17;

  v2 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v2);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t *)(a1 + *(int *)(_s17RootPlaylistsViewVMa(0) + 24));
  v6 = *v5;
  v7 = v5[1];
  v8 = *((unsigned __int8 *)v5 + 16);
  v9 = _s16PlaylistsManagerCMa(0);
  v10 = sub_100048748(&qword_1011C35B8, _s16PlaylistsManagerCMa, (uint64_t)&unk_100EBFD24);
  v11 = StateObject.wrappedValue.getter(v6, v7, v8, v9, v10);
  v12 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v4, 1, 1, v12);
  type metadata accessor for MainActor(0);
  v13 = swift_retain();
  v14 = static MainActor.shared.getter(v13);
  v15 = (_QWORD *)swift_allocObject(&unk_1010D6F88, 40, 7);
  v15[2] = v14;
  v15[3] = &protocol witness table for MainActor;
  v15[4] = v11;
  sub_100166D14((uint64_t)v4, (uint64_t)&unk_1011C35C0, (uint64_t)v15);
  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_1006B8A54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t KeyPath;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  __n128 v46;
  os_log_type_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD v58[2];
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v4 = _s17RootPlaylistsViewVMa(0);
  __chkstk_darwin(v4);
  v6 = (char *)v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)v58 - v8;
  if (qword_10119B870 != -1)
    swift_once(&qword_10119B870, sub_100065384);
  v10 = type metadata accessor for Logger(0);
  v11 = sub_100048B14(v10, (uint64_t)qword_10124C6F0);
  v61 = a3;
  v12 = sub_10005B704(a3, (uint64_t)v9, _s17RootPlaylistsViewVMa);
  v60 = v11;
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter(v13);
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc(12, -1);
    v59 = v6;
    *(_DWORD *)v15 = 134217984;
    v58[1] = v15 + 4;
    v16 = v4;
    v17 = &v9[*(int *)(v4 + 24)];
    v18 = *(_QWORD *)v17;
    v19 = *((_QWORD *)v17 + 1);
    v20 = v17[16];
    v21 = _s16PlaylistsManagerCMa(0);
    v22 = sub_100048748(&qword_1011C35B8, _s16PlaylistsManagerCMa, (uint64_t)&unk_100EBFD24);
    v23 = StateObject.wrappedValue.getter(v18, v19, v20, v21, v22);
    KeyPath = swift_getKeyPath(&unk_100ECA7B0);
    v25 = swift_getKeyPath(&unk_100ECA7D8);
    static Published.subscript.getter(&v62, v23, KeyPath, v25);
    swift_release();
    swift_release();
    swift_release();
    v26 = *(_QWORD *)(v62 + 16);
    swift_bridgeObjectRelease();
    sub_10005B748((uint64_t)v9, _s17RootPlaylistsViewVMa);
    v62 = v26;
    v6 = v59;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, &v63);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Playlists loaded: %ld", v15, 0xCu);
    swift_slowDealloc(v15, -1, -1);
  }
  else
  {
    v16 = v4;
    sub_10005B748((uint64_t)v9, _s17RootPlaylistsViewVMa);
  }

  if (qword_10119C4C8 != -1)
    swift_once(&qword_10119C4C8, sub_1006530AC);
  v27 = qword_10124D528;
  v28 = swift_getKeyPath(&unk_100ECA7F8);
  v29 = swift_getKeyPath(&unk_100ECA820);
  static Published.subscript.getter(&v62, v27, v28, v29);
  swift_release();
  swift_release();
  v30 = *(_QWORD *)(v62 + 16);
  swift_bridgeObjectRelease();
  v31 = v16;
  v32 = *(int *)(v16 + 24);
  v33 = v61;
  v34 = (uint64_t *)(v61 + v32);
  v35 = *v34;
  v36 = v34[1];
  v37 = *((unsigned __int8 *)v34 + 16);
  v38 = _s16PlaylistsManagerCMa(0);
  v39 = sub_100048748(&qword_1011C35B8, _s16PlaylistsManagerCMa, (uint64_t)&unk_100EBFD24);
  v40 = StateObject.wrappedValue.getter(v35, v36, v37, v38, v39);
  v41 = swift_getKeyPath(&unk_100ECA7B0);
  v42 = swift_getKeyPath(&unk_100ECA7D8);
  static Published.subscript.getter(&v62, v40, v41, v42);
  swift_release();
  swift_release();
  swift_release();
  v43 = *(_QWORD *)(v62 + 16);
  swift_bridgeObjectRelease();
  if (v30 != v43)
  {
    v44 = sub_10005B704(v33, (uint64_t)v6, _s17RootPlaylistsViewVMa);
    v45 = Logger.logObject.getter(v44);
    v47 = static os_log_type_t.fault.getter(v46);
    v48 = v47;
    if (os_log_type_enabled(v45, v47))
    {
      v49 = swift_slowAlloc(22, -1);
      *(_DWORD *)v49 = 134218240;
      LODWORD(v61) = v48;
      v50 = qword_10124D528;
      v51 = swift_getKeyPath(&unk_100ECA7F8);
      v52 = swift_getKeyPath(&unk_100ECA820);
      static Published.subscript.getter(&v62, v50, v51, v52);
      swift_release();
      swift_release();
      v53 = *(_QWORD *)(v62 + 16);
      swift_bridgeObjectRelease();
      v62 = v53;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, &v63);
      *(_WORD *)(v49 + 12) = 2048;
      v54 = StateObject.wrappedValue.getter(*(_QWORD *)&v6[*(int *)(v31 + 24)], *(_QWORD *)&v6[*(int *)(v31 + 24) + 8], v6[*(int *)(v31 + 24) + 16], v38, v39);
      v55 = swift_getKeyPath(&unk_100ECA7B0);
      v56 = swift_getKeyPath(&unk_100ECA7D8);
      static Published.subscript.getter(&v62, v54, v55, v56);
      swift_release();
      swift_release();
      swift_release();
      v57 = *(_QWORD *)(v62 + 16);
      swift_bridgeObjectRelease();
      sub_10005B748((uint64_t)v6, _s17RootPlaylistsViewVMa);
      v62 = v57;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, &v63);
      _os_log_impl((void *)&_mh_execute_header, v45, (os_log_type_t)v61, "Playlists mismatch between Preferences.shared.selectedPlaylists count (%ld) and playlistsManager.playlists.count (%ld)", (uint8_t *)v49, 0x16u);
      swift_slowDealloc(v49, -1, -1);
    }
    else
    {
      sub_10005B748((uint64_t)v6, _s17RootPlaylistsViewVMa);
    }

  }
}

double sub_1006B8FD0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(_QWORD);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  void (*v27)(char *, uint64_t, __n128);
  __n128 v28;
  double result;
  uint64_t v30;
  uint64_t v31;

  v6 = sub_100007E8C(&qword_1011C3618);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v30 - v11;
  v13 = _s17RootPlaylistsViewVMa(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  __chkstk_darwin(v13);
  sub_10005B704(a1, (uint64_t)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v16);
  v17 = *(unsigned __int8 *)(v14 + 80);
  v18 = (v17 + 16) & ~v17;
  v19 = swift_allocObject(&unk_1010D6FB0, v18 + v15, v17 | 7);
  sub_1006BA230((uint64_t)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v19 + v18);
  v31 = a2;
  swift_bridgeObjectRetain();
  v20 = sub_100007E8C(&qword_1011B87E8);
  v21 = sub_100007E8C(&qword_1011C3620);
  v22 = sub_100049F28(&qword_1011C3628, &qword_1011B87E8, (uint64_t)&protocol conformance descriptor for [A]);
  v23 = sub_100049F28(&qword_1011C3630, &qword_1011C3620, (uint64_t)&protocol conformance descriptor for NavigationLink<A, B>);
  v24 = sub_100048748((unint64_t *)&unk_1011D1510, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&protocol conformance descriptor for Playlist);
  ForEach<>.init(_:content:)(&v31, sub_1006B97F4, 0, v20, &type metadata for MusicItemID, v21, v22, v23, v24);
  v25 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v25(v9, v12, v6);
  *(_QWORD *)a3 = sub_1001DB528;
  *(_QWORD *)(a3 + 8) = 0;
  *(_BYTE *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = sub_1006BA55C;
  *(_QWORD *)(a3 + 32) = v19;
  v26 = sub_100007E8C(&qword_1011C3638);
  v25((char *)(a3 + *(int *)(v26 + 48)), v9, v6);
  KeyValueObservationTrigger.keyPath.getter((uint64_t)sub_1001DB528, 0);
  v27 = *(void (**)(char *, uint64_t, __n128))(v7 + 8);
  v28 = swift_retain();
  v27(v12, v6, v28);
  ((void (*)(char *, uint64_t))v27)(v9, v6);
  sub_1000A6174((uint64_t)sub_1001DB528, 0);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_1006B9248()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t KeyPath;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  unsigned int (*v29)(char *, uint64_t, uint64_t, __n128);
  uint64_t *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  char *v41;
  id v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  __n128 v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;

  v1 = sub_100007E8C((uint64_t *)&unk_1011B59A0);
  __chkstk_darwin(v1);
  v63 = (char *)&v62 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v3);
  v5 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = sub_100007E8C(&qword_1011C3660);
  __chkstk_darwin(v67);
  v65 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011A30F0);
  __chkstk_darwin(v7);
  v66 = (char **)((char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  v11 = (char *)&v62 - v10;
  v12 = type metadata accessor for Playlist(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v68 = (uint64_t)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = _s17RootPlaylistsViewVMa(0);
  v16 = (uint64_t *)(v0 + *(int *)(v15 + 24));
  v17 = *v16;
  v18 = v16[1];
  v19 = *((unsigned __int8 *)v16 + 16);
  v20 = _s16PlaylistsManagerCMa(0);
  v21 = sub_100048748(&qword_1011C35B8, _s16PlaylistsManagerCMa, (uint64_t)&unk_100EBFD24);
  v22 = StateObject.wrappedValue.getter(v17, v18, v19, v20, v21);
  KeyPath = swift_getKeyPath(&unk_100ECA7B0);
  v24 = swift_getKeyPath(&unk_100ECA7D8);
  static Published.subscript.getter(&v69, v22, KeyPath, v24);
  swift_release();
  swift_release();
  v25 = swift_release();
  v26 = *((_QWORD *)v69 + 2);
  v62 = v5;
  if (v26)
  {
    (*(void (**)(char *, char *, uint64_t, __n128))(v13 + 16))(v11, &v69[(*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)], v12, v25);
    v27 = 0;
  }
  else
  {
    v27 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, v27, 1, v12);
  v28 = swift_bridgeObjectRelease();
  v29 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v13 + 48);
  if (v29(v11, 1, v12, v28) == 1)
  {
    v30 = &qword_1011A30F0;
    v31 = (uint64_t)v11;
    return sub_10004FF60(v31, v30);
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v68, v11, v12);
  v32 = (_QWORD *)(v0 + *(int *)(v15 + 20));
  v33 = *v32;
  v34 = v32[1];
  v35 = *((unsigned __int8 *)v32 + 16);
  v36 = _s20PlaybackStateManagerCMa(0);
  v64 = sub_100048748((unint64_t *)&qword_1011B5128, _s20PlaybackStateManagerCMa, (uint64_t)&unk_100EB7DE8);
  StateObject.wrappedValue.getter(v33, v34, v35, v36, v64);
  v37 = swift_getKeyPath(&unk_100ECA870);
  v38 = swift_getKeyPath(&unk_100ECA898);
  swift_retain();
  static Published.subscript.getter(&v69, v39, v37, v38);
  swift_release();
  swift_release();
  *(_QWORD *)&v40 = swift_release().n128_u64[0];
  v41 = v69;
  if (v69)
  {
    v42 = objc_msgSend(v69, "state", v40);
    swift_release();

  }
  else
  {
    swift_release();
    v42 = 0;
  }
  v43 = v65;
  v44 = *v32;
  v45 = v32[1];
  v46 = *((unsigned __int8 *)v32 + 16);
  v65 = (char *)v36;
  v47 = StateObject.wrappedValue.getter(v44, v45, v46, v36, v64);
  v48 = swift_getKeyPath(&unk_100ECA8B8);
  v49 = swift_getKeyPath(&unk_100ECA8E0);
  v50 = v66;
  static Published.subscript.getter(v66, v47, v48, v49);
  swift_release();
  swift_release();
  swift_release();
  v51 = (uint64_t)v43 + *(int *)(v67 + 48);
  *v43 = v42;
  sub_1006BA630((uint64_t)v50, v51);
  if (v42 != (id)4 && v42 != (id)2 || ((unsigned int (*)(uint64_t, uint64_t, uint64_t))v29)(v51, 1, v12) == 1)
  {
    StateObject.wrappedValue.getter(*v32, v32[1], *((unsigned __int8 *)v32 + 16), v65, v64);
    v52 = type metadata accessor for Playlist.Entry(0);
    v53 = (uint64_t)v63;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v63, 1, 1, v52);
    v54 = v68;
    sub_1003B5AFC(v68, v53);
    swift_release();
    sub_10004FF60(v53, (uint64_t *)&unk_1011B59A0);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v54, v12);
    v30 = &qword_1011C3660;
    v31 = (uint64_t)v43;
    return sub_10004FF60(v31, v30);
  }
  sub_10004FF60(v51, &qword_1011A30F0);
  StateObject.wrappedValue.getter(*v32, v32[1], *((unsigned __int8 *)v32 + 16), v65, v64);
  v56 = type metadata accessor for TaskPriority(0);
  v57 = (uint64_t)v62;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v62, 1, 1, v56);
  type metadata accessor for MainActor(0);
  v59 = static MainActor.shared.getter(v58);
  v60 = swift_allocObject(&unk_1010D6FD8, 32, 7);
  *(_QWORD *)(v60 + 16) = v59;
  *(_QWORD *)(v60 + 24) = &protocol witness table for MainActor;
  sub_100166D50(v57, (uint64_t)&unk_1011B5188, v60);
  swift_release();
  v61 = swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v13 + 8))(v68, v12, v61);
}

uint64_t sub_1006B97F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t OpaqueTypeConformance2;
  _BYTE v14[16];
  uint64_t v15;
  _QWORD v16[6];

  v2 = sub_100007E8C(&qword_1011C3640);
  __chkstk_darwin(v2);
  v4 = &v14[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = a1;
  sub_1006B9950(a1, (uint64_t)v4);
  v5 = _s16PlaylistCellViewVMa(0);
  v6 = sub_100048748(&qword_1011C3648, _s16PlaylistCellViewVMa, (uint64_t)&unk_100EC2F40);
  v7 = _s19PlaylistDetailsViewVMa(255);
  v8 = sub_100044B54(&qword_1011C3650);
  v9 = sub_100048748(&qword_1011C3600, _s19PlaylistDetailsViewVMa, (uint64_t)&unk_100EBC628);
  v10 = sub_100055B68();
  v11 = sub_1006BA59C();
  v16[0] = v7;
  v16[1] = &type metadata for String;
  v16[2] = v8;
  v16[3] = v9;
  v16[4] = v10;
  v16[5] = v11;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v16, &opaque type descriptor for <<opaque return type of View.navigationTitle<A, B>(_:icon:)>>, 1);
  return NavigationLink.init(destination:label:)(v4, sub_1006BA594, v14, v5, v2, v6, OpaqueTypeConformance2);
}

uint64_t sub_1006B9950@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int *v20;
  __n128 v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  _OWORD *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD v70[2];
  char v71[8];
  uint64_t v72;

  v69 = a2;
  v68 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v68);
  v67 = (char *)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v65 = *(_QWORD *)(v4 - 8);
  v66 = v4;
  __chkstk_darwin(v4);
  v64 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v9);
  v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_100007E8C((uint64_t *)&unk_1011C4FE0);
  v61 = *(_QWORD *)(v63 - 8);
  __chkstk_darwin(v63);
  v58 = (uint64_t)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_100007E8C(&qword_1011A0D80);
  __chkstk_darwin(v59);
  v14 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_100007E8C(&qword_1011C3650);
  __chkstk_darwin(v62);
  v60 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Playlist(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (int *)_s19PlaylistDetailsViewVMa(0);
  v21 = __chkstk_darwin(v20);
  v23 = (char *)&v57 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v17 + 16))(v19, a1, v16, v21);
  *(_QWORD *)v23 = swift_getKeyPath(&unk_100ECA840);
  v24 = sub_100007E8C(&qword_1011B5018);
  swift_storeEnumTagMultiPayload(v23, v24, 0);
  v25 = &v23[v20[5]];
  *(_QWORD *)v25 = sub_100468680;
  *((_QWORD *)v25 + 1) = 0;
  v25[16] = 0;
  v26 = &v23[v20[6]];
  *(_QWORD *)v26 = sub_1001DB528;
  *((_QWORD *)v26 + 1) = 0;
  v26[16] = 0;
  v27 = &v23[v20[7]];
  *(_QWORD *)v27 = sub_1004686C0;
  *((_QWORD *)v27 + 1) = 0;
  v27[16] = 0;
  v28 = &v23[v20[8]];
  LOBYTE(v70[0]) = 0;
  State.init(wrappedValue:)(v70, &type metadata for Bool);
  v29 = v72;
  *v28 = v71[0];
  *((_QWORD *)v28 + 1) = v29;
  v30.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v17 + 32))(&v23[v20[9]], v19, v16);
  v70[0] = Playlist.name.getter(v30);
  v70[1] = v31;
  v32 = Playlist.artworkViewModel.getter((uint64_t)v11);
  Playlist.variant.getter(v32);
  v33 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v8, 0, 10, v33);
  ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(0, 1, 0, 1, 0, 1, 2, (uint64_t)v71);
  v35 = (uint64_t)v64;
  v34 = v65;
  v36 = v66;
  (*(void (**)(char *, _QWORD, uint64_t))(v65 + 104))(v64, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v66);
  v37 = v58;
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)((uint64_t)v11, (uint64_t)v8, (uint64_t)v71, v35, v58);
  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v35, v36);
  sub_10005B748((uint64_t)v8, type metadata accessor for ArtworkImage.Placeholder);
  sub_10004FF60((uint64_t)v11, (uint64_t *)&unk_1011A3E10);
  v38 = v61;
  v39 = v63;
  (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v14, v37, v63);
  v40 = &v14[*(int *)(v59 + 36)];
  *(_QWORD *)v40 = 0;
  *((_WORD *)v40 + 4) = 257;
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v39);
  v41 = v67;
  v42 = &v67[*(int *)(v68 + 20)];
  v43 = enum case for RoundedCornerStyle.continuous(_:);
  v44 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 104))(v42, v43, v44);
  __asm { FMOV            V0.2D, #10.0 }
  *v41 = _Q0;
  v50 = v62;
  v51 = (uint64_t)v60;
  v52 = (uint64_t)&v60[*(int *)(v62 + 36)];
  sub_10005B704((uint64_t)v41, v52, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v52 + *(int *)(sub_100007E8C((uint64_t *)&unk_1011C9530) + 36)) = 256;
  sub_10004A160((uint64_t)v14, v51, &qword_1011A0D80);
  sub_10005B748((uint64_t)v41, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  sub_10004FF60((uint64_t)v14, &qword_1011A0D80);
  v53 = sub_100048748(&qword_1011C3600, _s19PlaylistDetailsViewVMa, (uint64_t)&unk_100EBC628);
  v54 = sub_100055B68();
  v55 = sub_1006BA59C();
  View.navigationTitle<A, B>(_:icon:)(v70, v51, v20, &type metadata for String, v50, v53, v54, v55);
  sub_10004FF60(v51, &qword_1011C3650);
  swift_bridgeObjectRelease();
  return sub_10005B748((uint64_t)v23, _s19PlaylistDetailsViewVMa);
}

uint64_t sub_1006B9EC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = a2 + *(int *)(_s16PlaylistCellViewVMa(0) + 24);
  v5 = type metadata accessor for Playlist(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v4, a1, v5);
  *(_QWORD *)a2 = sub_100468680;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = sub_1001DB528;
  *(_QWORD *)(a2 + 32) = 0;
  *(_BYTE *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1006B9F44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1006B7B3C(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1006B9F4C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C3590;
  if (!qword_1011C3590)
  {
    v1 = sub_100044B54(&qword_1011C3588);
    sub_100049F28(&qword_1011C3598, &qword_1011C35A0, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C3590);
  }
  return result;
}

uint64_t sub_1006B9FD0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100ECA8B8);
  v5 = swift_getKeyPath(&unk_100ECA8E0);
  static Published.subscript.getter(a2, v3, KeyPath, v5);
  swift_release(KeyPath);
  return swift_release(v5);
}

uint64_t sub_1006BA038(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v14;

  v4 = sub_100007E8C(&qword_1011A30F0);
  __chkstk_darwin(v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v14 - v8;
  sub_10004A160(a1, (uint64_t)&v14 - v8, &qword_1011A30F0);
  v10 = *a2;
  KeyPath = swift_getKeyPath(&unk_100ECA8B8);
  v12 = swift_getKeyPath(&unk_100ECA8E0);
  sub_10004A160((uint64_t)v9, (uint64_t)v6, &qword_1011A30F0);
  swift_retain();
  static Published.subscript.setter(v6, v10, KeyPath, v12);
  return sub_10004FF60((uint64_t)v9, &qword_1011A30F0);
}

uint64_t sub_1006BA130@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100ECA7B0);
  v5 = swift_getKeyPath(&unk_100ECA7D8);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_1006BA1AC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100ECA7B0);
  v5 = swift_getKeyPath(&unk_100ECA7D8);
  v7 = v2;
  swift_bridgeObjectRetain(v2);
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_1006BA230(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s17RootPlaylistsViewVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double sub_1006BA274()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(_s17RootPlaylistsViewVMa(0) - 8) + 80);
  return sub_1006B8904(v0 + ((v1 + 16) & ~v1));
}

void sub_1006BA2AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(_s17RootPlaylistsViewVMa(0) - 8) + 80);
  sub_1006B8A54(a1, a2, v2 + ((v5 + 16) & ~v5));
}

uint64_t sub_1006BA300()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1006BA32C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1011B888C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10005AEE4;
  return sub_10050E2FC(a1, v4, v5, v6);
}

unint64_t sub_1006BA398()
{
  unint64_t result;
  uint64_t v1;
  __n128 v2;
  _QWORD v3[4];

  result = qword_1011C35F0;
  if (!qword_1011C35F0)
  {
    v1 = sub_100044B54(&qword_1011C35D8);
    v3[0] = sub_100044B54(&qword_1011C35E0);
    v3[1] = type metadata accessor for MultimodalListStyle(255, v2);
    v3[2] = sub_100049F28(&qword_1011C35F8, &qword_1011C35E0, (uint64_t)&protocol conformance descriptor for List<A, B>);
    v3[3] = &protocol witness table for MultimodalListStyle;
    swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of View.listStyle<A>(_:)>>, 1);
    sub_100048748(&qword_1011C3600, _s19PlaylistDetailsViewVMa, (uint64_t)&unk_100EBC628);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C35F0);
  }
  return result;
}

double sub_1006BA480@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1006B8FD0(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_1006BA48C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = _s17RootPlaylistsViewVMa(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = v0 + v3;
  v6 = sub_100007E8C(&qword_1011B5018);
  if (swift_getEnumCaseMultiPayload(v0 + v3, v6) == 1)
  {
    v7 = type metadata accessor for MultimodalListStyle.Layout(0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v0 + v3, v7);
  }
  else
  {
    swift_release();
  }
  sub_1000A6174(*(_QWORD *)(v5 + *(int *)(v1 + 20)), *(_QWORD *)(v5 + *(int *)(v1 + 20) + 8));
  sub_1000A6174(*(_QWORD *)(v5 + *(int *)(v1 + 24)), *(_QWORD *)(v5 + *(int *)(v1 + 24) + 8));
  return swift_deallocObject(v0, v3 + v4);
}

uint64_t sub_1006BA55C()
{
  _s17RootPlaylistsViewVMa(0);
  return sub_1006B9248();
}

uint64_t sub_1006BA594@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1006B9EC8(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1006BA59C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C3658;
  if (!qword_1011C3658)
  {
    v1 = sub_100044B54(&qword_1011C3650);
    sub_1000F3E9C();
    sub_100049F28(&qword_1011A49B8, (uint64_t *)&unk_1011C9530, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C3658);
  }
  return result;
}

uint64_t sub_1006BA630(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011A30F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1006BA678()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_1006BA6A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C3668;
  if (!qword_1011C3668)
  {
    v1 = sub_100044B54(&qword_1011C35A8);
    sub_100049F28(&qword_1011C3670, &qword_1011C3578, (uint64_t)&protocol conformance descriptor for NavigationStack<A, B>);
    sub_100049F28(&qword_1011C3678, &qword_1011C3680, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C3668);
  }
  return result;
}

uint64_t sub_1006BA73C()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  _BYTE v9[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v9[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v3);
  v5 = &v9[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = String.LocalizationValue.init(stringLiteral:)(0x6E656D6D6F636552, 0xEF736E6F69746164);
  static Locale.current.getter(v6);
  result = String.init(localized:table:bundle:locale:comment:)(v5, 0, 0, 0, v2, "Recommendations Widget Default Title", 36, 2);
  qword_10124D700 = result;
  *(_QWORD *)algn_10124D708 = v8;
  return result;
}

char *sub_1006BA828(char *a1)
{
  void *v1;
  uint64_t v3;
  void *v4;
  id v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *result;
  char *v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  void (*v16)(uint64_t (*)(uint64_t), uint64_t, __n128);
  _QWORD *v17;
  __n128 v18;
  __n128 v19;
  objc_super v20;

  v3 = OBJC_IVAR____TtC5Music29MCDSharePlayTogetherViewModel_session;
  v4 = *(void **)&a1[OBJC_IVAR____TtC5Music29MCDSharePlayTogetherViewModel_session];
  v5 = objc_allocWithZone((Class)type metadata accessor for SharePlayTogetherSessionManagementViewController(0));
  v6 = v1;
  *(_QWORD *)&v6[OBJC_IVAR____TtC5Music41MCDSharePlayTogetherSessionViewController_contentViewController] = sub_1007B2CC4((uint64_t)v4);

  v20.receiver = v6;
  v20.super_class = (Class)type metadata accessor for MCDSharePlayTogetherSessionViewController();
  v7 = (char *)objc_msgSendSuper2(&v20, "initWithNibName:bundle:", 0, 0);
  v8 = OBJC_IVAR____TtC5Music41MCDSharePlayTogetherSessionViewController_contentViewController;
  v9 = *(_QWORD *)&v7[OBJC_IVAR____TtC5Music41MCDSharePlayTogetherSessionViewController_contentViewController];
  v10 = v7;
  objc_msgSend(v10, "addChildViewController:", v9);
  result = (char *)objc_msgSend(v10, "view");
  if (result)
  {
    v12 = result;
    result = (char *)objc_msgSend(*(id *)&v7[v8], "view");
    if (result)
    {
      v13 = result;
      objc_msgSend(v12, "addSubview:", result);

      sub_1006BAE00();
      v14 = *(_QWORD **)&a1[v3];
      v15 = swift_allocObject(&unk_1010D7070, 24, 7);
      swift_unknownObjectWeakInit(v15 + 16);
      v16 = *(void (**)(uint64_t (*)(uint64_t), uint64_t, __n128))((swift_isaMask & *v14) + 0x360);
      v17 = v14;
      v18 = swift_retain();
      v16(sub_1006BB38C, v15, v18);

      swift_release_n(v15, 2, v19);
      return v10;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1006BA9D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  __n128 v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD aBlock[6];

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
  v19 = (void *)static OS_dispatch_queue.main.getter(v11, v12, v13, v14, v15, v16, v17, v18);
  aBlock[4] = sub_1006BB394;
  aBlock[5] = a2;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001DBD98;
  aBlock[3] = &unk_1010D7088;
  v20 = _Block_copy(aBlock);
  swift_retain();
  v21 = swift_release();
  static DispatchQoS.unspecified.getter(v21);
  aBlock[0] = _swiftEmptyArrayStorage;
  v22 = sub_10015E7E0();
  v23 = sub_100007E8C((uint64_t *)&unk_1011A2120);
  v24 = sub_10015E828();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v23, v24, v3, v22);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v6, v20);
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_1006BAB94(uint64_t a1)
{
  uint64_t v1;
  void *Strong;
  void *v3;
  id v4;
  id v5;
  _BYTE v6[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    v4 = objc_msgSend(Strong, "navigationController");

    if (v4)
    {
      v5 = objc_msgSend(v4, "popViewControllerAnimated:", 1);

    }
  }
}

void sub_1006BACA0()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  objc_super v13;

  v13.receiver = v0;
  v13.super_class = (Class)type metadata accessor for MCDSharePlayTogetherSessionViewController();
  objc_msgSendSuper2(&v13, "viewDidLayoutSubviews");
  v1 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Music41MCDSharePlayTogetherSessionViewController_contentViewController], "view");
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v0, "view");
    if (v3)
    {
      v4 = v3;
      objc_msgSend(v3, "bounds");
      v6 = v5;
      v8 = v7;
      v10 = v9;
      v12 = v11;

      objc_msgSend(v2, "setFrame:", v6, v8, v10, v12);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1006BAE00()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  NSString v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  Class isa;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  NSString v24;
  void *v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  Class v30;
  id v31;
  id v32;
  __int128 v33;
  uint64_t v34;
  id v35;
  uint64_t v36;

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v33 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v6);

  v8 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v7);
  v9 = UIView.forAutolayout.getter();

  v34 = sub_10004A07C(0, (unint64_t *)&qword_1011A8E90, UIFont_ptr);
  v10 = (void *)static UIFont.preferredFont(forTextStyle:weight:)(UIFontTextStyleBody, UIFontWeightBold);
  v11 = (void *)objc_opt_self(UIImageSymbolConfiguration);
  v12 = objc_msgSend(v11, "configurationWithFont:", v10);

  v13 = objc_msgSend(v11, "configurationWithScale:", 3);
  v14 = objc_msgSend(v12, "configurationByApplyingConfiguration:", v13);

  v15 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  v16 = swift_allocObject(v15, 48, 7);
  v33 = xmmword_100EA7DB0;
  *(_OWORD *)(v16 + 16) = xmmword_100EA7DB0;
  v17 = (void *)objc_opt_self(UIColor);
  *(_QWORD *)(v16 + 32) = objc_msgSend(v17, "labelColor");
  v18 = objc_msgSend(v17, "_carSystemFocusColor");
  *(_QWORD *)(v16 + 40) = v18;
  v36 = v16;
  specialized Array._endMutation()(v18);
  sub_10004A07C(0, (unint64_t *)&qword_1011BCD10, UIColor_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v20 = objc_msgSend(v11, "configurationWithPaletteColors:", isa, swift_bridgeObjectRelease().n128_f64[0]);

  v21 = objc_msgSend(v14, "configurationByApplyingConfiguration:", v20);
  objc_msgSend(v9, "setSymbolConfiguration:", v21);

  objc_msgSend(v9, "setContentMode:", 1);
  v22 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v23 = String.LocalizationValue.init(stringLiteral:)(0x616C506572616853, 0xE900000000000079);
  static Locale.current.getter(v23);
  String.init(localized:table:bundle:locale:comment:)(v5, 0, 0, 0, v2, 0, 0, 256);
  v24 = String._bridgeToObjectiveC()();
  objc_msgSend(v22, "setText:", v24, swift_bridgeObjectRelease().n128_f64[0]);

  v25 = (void *)static UIFont.preferredFont(forTextStyle:weight:)(UIFontTextStyleFootnote, UIFontWeightSemibold);
  objc_msgSend(v22, "setFont:", v25);

  v26 = swift_allocObject(v15, 48, 7);
  *(_OWORD *)(v26 + 16) = v33;
  *(_QWORD *)(v26 + 32) = v9;
  *(_QWORD *)(v26 + 40) = v22;
  v36 = v26;
  specialized Array._endMutation()(v26);
  v27 = objc_allocWithZone((Class)UIStackView);
  sub_10004A07C(0, (unint64_t *)&qword_1011A20A0, UIView_ptr);
  v28 = v9;
  v29 = v22;
  v30 = Array._bridgeToObjectiveC()().super.isa;
  v31 = objc_msgSend(v27, "initWithArrangedSubviews:", v30, swift_bridgeObjectRelease().n128_f64[0]);

  objc_msgSend(v31, "setAxis:", 0);
  objc_msgSend(v31, "setSpacing:", 3.0);
  v32 = objc_msgSend(v35, "navigationItem");
  objc_msgSend(v32, "setTitleView:", v31);

}

id sub_1006BB308()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MCDSharePlayTogetherSessionViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for MCDSharePlayTogetherSessionViewController()
{
  return objc_opt_self(_TtC5Music41MCDSharePlayTogetherSessionViewController);
}

uint64_t sub_1006BB368(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

uint64_t sub_1006BB38C(uint64_t a1)
{
  uint64_t v1;

  return sub_1006BA9D0(a1, v1);
}

void sub_1006BB394()
{
  uint64_t v0;

  sub_1006BAB94(v0);
}

uint64_t sub_1006BB39C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1006BB3AC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1006BB3B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;

  v6 = v5;
  v12 = type metadata accessor for PreviewOverlay.ArtworkVariant(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = qword_10119B878;
  swift_bridgeObjectRetain();
  if (v15 != -1)
    swift_once(&qword_10119B878, sub_10006585C);
  v16 = qword_10124C708;
  *(_QWORD *)v14 = a1;
  *((_QWORD *)v14 + 1) = a2;
  v14[16] = a3;
  v14[17] = a4 & 1;
  v17 = qword_10119B8B0;
  swift_retain(v16);
  if (v17 != -1)
    swift_once(&qword_10119B8B0, sub_1000E948C);
  *((_QWORD *)v14 + 3) = (*(uint64_t (**)(void))(*(_QWORD *)qword_10124C788 + 408))();
  v18 = type metadata accessor for PreviewPlaybackController(0);
  v19 = sub_100048748(&qword_1011A4BB0, type metadata accessor for PreviewPlaybackController, (uint64_t)&unk_100EA82F8);
  *((_QWORD *)v14 + 4) = ObservedObject.init(wrappedValue:)(v16, v18, v19);
  *((_QWORD *)v14 + 5) = v20;
  v21 = &v14[*(int *)(v12 + 36)];
  *(_QWORD *)v21 = swift_getKeyPath("\b^4");
  v22 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  swift_storeEnumTagMultiPayload(v21, v22, 0);
  v23 = sub_100007E8C((uint64_t *)&unk_1011C4FE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(a5, v6, v23);
  v24 = sub_100007E8C(&qword_1011A5420);
  return sub_10005B6C0((uint64_t)v14, a5 + *(int *)(v24 + 36), type metadata accessor for PreviewOverlay.ArtworkVariant);
}

id sub_1006BB660()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)_s13TracklistCellCMa();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t _s13TracklistCellCMa()
{
  return objc_opt_self(_TtCV5Music15ContainerDetail13TracklistCell);
}

uint64_t *_s13TracklistCellC8DataTypeOwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  sub_1004C8A14(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

void _s13TracklistCellC8DataTypeOwxx(uint64_t *a1)
{
  sub_1004C8A34(*a1, a1[1]);
}

uint64_t *_s13TracklistCellC8DataTypeOwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  sub_1004C8A14(*a2, v4);
  v5 = *a1;
  v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_1004C8A34(v5, v6);
  return a1;
}

uint64_t *_s13TracklistCellC8DataTypeOwta(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_1004C8A34(v3, v4);
  return a1;
}

uint64_t _s13TracklistCellC8DataTypeOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7F && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 127);
  v3 = (((*(_QWORD *)(a1 + 8) >> 57) >> 6) | (2
                                                          * ((*(_QWORD *)(a1 + 8) >> 57) & 0x38 | *(_QWORD *)(a1 + 8) & 7))) ^ 0x7F;
  if (v3 >= 0x7E)
    v3 = -1;
  return v3 + 1;
}

uint64_t _s13TracklistCellC8DataTypeOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7E)
  {
    *(_QWORD *)result = a2 - 127;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
    {
      v3 = (-a2 >> 1) & 0x3F | ((-a2 & 0x7F) << 6);
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1006BB834(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8) >> 63;
}

uint64_t sub_1006BB840(uint64_t result)
{
  *(_QWORD *)(result + 8) &= ~0x8000000000000000;
  return result;
}

uint64_t sub_1006BB850(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 8) = *(_QWORD *)(result + 8) & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  return result;
}

ValueMetadata *_s13TracklistCellC8DataTypeOMa()
{
  return &_s13TracklistCellC8DataTypeON;
}

_QWORD *sub_1006BB874(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  void **v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void **, uint64_t, uint64_t);
  int v12;
  int v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  int v33;
  int v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  void *v39;
  id v40;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v6 = *(int *)(a3 + 20);
  v7 = (void **)((char *)a1 + v6);
  v8 = (void **)((char *)a2 + v6);
  v9 = _s7ContextV6SourceOMa(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
      {
        v14 = *v8;
        *v7 = *v8;
        v15 = v8[1];
        v7[1] = v15;
        v16 = v14;
        v17 = v15;
        v18 = 1;
      }
      else
      {
        v24 = type metadata accessor for Playlist.Entry(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v7, v8, v24);
        v25 = *(int *)(sub_100007E8C(&qword_1011A22A0) + 48);
        v26 = (char *)v7 + v25;
        v27 = (char *)v8 + v25;
        v28 = type metadata accessor for Playlist(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
        v18 = 0;
      }
      swift_storeEnumTagMultiPayload(v7, v9, v18);
      (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_13;
    }
LABEL_7:
    v19 = sub_100007E8C(&qword_1011A5EA0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_13;
  }
  if (v13)
  {
    sub_10005B748((uint64_t)v7, _s7ContextV6SourceOMa);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_10005B748((uint64_t)v7, _s7ContextV6SourceOMa);
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v20 = *v8;
      *v7 = *v8;
      v21 = v8[1];
      v7[1] = v21;
      v22 = v20;
      v23 = v21;
      swift_storeEnumTagMultiPayload(v7, v9, 1);
    }
    else
    {
      v42 = type metadata accessor for Playlist.Entry(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v7, v8, v42);
      v43 = *(int *)(sub_100007E8C(&qword_1011A22A0) + 48);
      v44 = (char *)v7 + v43;
      v45 = (char *)v8 + v43;
      v46 = type metadata accessor for Playlist(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
      swift_storeEnumTagMultiPayload(v7, v9, 0);
    }
  }
LABEL_13:
  v29 = (int *)_s7ContextVMa_1(0);
  v30 = v29[5];
  v31 = (char *)v7 + v30;
  v32 = (char *)v8 + v30;
  v33 = *((unsigned __int8 *)v7 + v30 + 8);
  v34 = *((unsigned __int8 *)v8 + v30 + 8);
  if (v33 == 255)
  {
    if (v34 == 255)
    {
      v36 = *(_QWORD *)v32;
      v31[8] = v32[8];
      *(_QWORD *)v31 = v36;
    }
    else
    {
      *(_QWORD *)v31 = *(_QWORD *)v32;
      v31[8] = v34 & 1;
      swift_bridgeObjectRetain();
    }
  }
  else if (v34 == 255)
  {
    sub_1001E3E14(v31);
    v35 = v32[8];
    *(_QWORD *)v31 = *(_QWORD *)v32;
    v31[8] = v35;
  }
  else
  {
    *(_QWORD *)v31 = *(_QWORD *)v32;
    v31[8] = v34 & 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v37 = v29[6];
  v38 = *(void **)((char *)v7 + v37);
  v39 = *(void **)((char *)v8 + v37);
  *(void **)((char *)v7 + v37) = v39;
  v40 = v39;

  *((_BYTE *)v7 + v29[7]) = *((_BYTE *)v8 + v29[7]);
  *((_BYTE *)v7 + v29[8]) = *((_BYTE *)v8 + v29[8]);
  return a1;
}

_QWORD *sub_1006BBB98(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  size_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  int v24;
  uint64_t v25;
  void *v26;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;

  *a1 = *a2;
  swift_release();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = _s7ContextV6SourceOMa(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      if (a1 == a2)
        goto LABEL_14;
      sub_10005B748((uint64_t)v7, _s7ContextV6SourceOMa);
      if (!swift_getEnumCaseMultiPayload(v8, v9))
      {
        v28 = type metadata accessor for Playlist.Entry(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v7, v8, v28);
        v29 = *(int *)(sub_100007E8C(&qword_1011A22A0) + 48);
        v30 = &v7[v29];
        v31 = &v8[v29];
        v32 = type metadata accessor for Playlist(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
        swift_storeEnumTagMultiPayload(v7, v9, 0);
        goto LABEL_14;
      }
      v14 = *(_QWORD *)(v10 + 64);
LABEL_8:
      memcpy(v7, v8, v14);
      goto LABEL_14;
    }
    sub_10005B748((uint64_t)v7, _s7ContextV6SourceOMa);
LABEL_7:
    v14 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011A5EA0) - 8) + 64);
    goto LABEL_8;
  }
  if (v13)
    goto LABEL_7;
  if (swift_getEnumCaseMultiPayload(v8, v9))
  {
    memcpy(v7, v8, *(_QWORD *)(v10 + 64));
  }
  else
  {
    v15 = type metadata accessor for Playlist.Entry(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v7, v8, v15);
    v16 = *(int *)(sub_100007E8C(&qword_1011A22A0) + 48);
    v17 = &v7[v16];
    v18 = &v8[v16];
    v19 = type metadata accessor for Playlist(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
    swift_storeEnumTagMultiPayload(v7, v9, 0);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_14:
  v20 = (int *)_s7ContextVMa_1(0);
  v21 = v20[5];
  v22 = &v7[v21];
  v23 = &v8[v21];
  if (v7[v21 + 8] != 255)
  {
    v24 = v23[8];
    if (v24 != 255)
    {
      *(_QWORD *)v22 = *(_QWORD *)v23;
      v22[8] = v24 & 1;
      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
    sub_1001E3E14(v22);
  }
  *(_QWORD *)v22 = *(_QWORD *)v23;
  v22[8] = v23[8];
LABEL_19:
  v25 = v20[6];
  v26 = *(void **)&v7[v25];
  *(_QWORD *)&v7[v25] = *(_QWORD *)&v8[v25];

  v7[v20[7]] = v8[v20[7]];
  v7[v20[8]] = v8[v20[8]];
  return a1;
}

uint64_t sub_1006BBE3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006BBE48);
}

uint64_t sub_1006BBE48(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = _s7ContextVMa_1(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_1006BBEC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006BBED0);
}

char *sub_1006BBED0(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = _s7ContextVMa_1(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for Tracklist.ReactionsConfiguration(uint64_t a1)
{
  return sub_100055934(a1, qword_1011C3748, (uint64_t)&nominal type descriptor for Tracklist.ReactionsConfiguration);
}

ValueMetadata *type metadata accessor for Tracklist()
{
  return &type metadata for Tracklist;
}

uint64_t getEnumTagSinglePayload for Tracklist.LeadingNumberState(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7F && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 127);
  v3 = (*(_BYTE *)(a1 + 8) & 0x7E | (*(unsigned __int8 *)(a1 + 8) >> 7)) ^ 0x7F;
  if (v3 >= 0x7E)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for Tracklist.LeadingNumberState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 127;
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_BYTE *)(result + 8) = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
    }
  }
  return result;
}

uint64_t sub_1006BC00C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8) >> 7;
}

uint64_t sub_1006BC018(uint64_t result)
{
  *(_BYTE *)(result + 8) &= ~0x80u;
  return result;
}

uint64_t sub_1006BC028(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = *(_BYTE *)(result + 8) & 1 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for Tracklist.LeadingNumberState()
{
  return &type metadata for Tracklist.LeadingNumberState;
}

uint64_t sub_1006BC04C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t TupleTypeMetadata;
  uint64_t v19;
  uint64_t WitnessTable;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t TupleTypeMetadata2;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t OpaqueTypeConformance2;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __n128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  double v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(uint64_t, uint64_t);
  uint64_t v87;
  char *v88;
  uint64_t v89;
  unsigned int (*v90)(char *, uint64_t, uint64_t);
  uint64_t v91;
  _BOOL8 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  __n128 v104;
  int v105;
  uint64_t v106;
  double v107;
  double v108;
  double v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  double v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  __n128 v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  void (*v150)(uint64_t, uint64_t);
  uint64_t v152;
  int v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  _QWORD *v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  uint64_t v202;
  char *v203;
  uint64_t v204;
  uint64_t v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  _QWORD *v211;
  _QWORD *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  _QWORD v218[24];
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  void *v228;
  uint64_t v229;

  v209 = a2;
  v3 = type metadata accessor for AccessibilityTraits(0);
  v207 = *(_QWORD *)(v3 - 8);
  v208 = v3;
  __chkstk_darwin(v3);
  v206 = (char *)&v160 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for AccessibilityChildBehavior(0);
  v204 = *(_QWORD *)(v5 - 8);
  v205 = v5;
  __chkstk_darwin(v5);
  v203 = (char *)&v160 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v202 = type metadata accessor for DynamicTypeSize(0);
  v200 = *(_QWORD *)(v202 - 8);
  __chkstk_darwin(v202);
  v199 = (uint64_t)&v160 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C((uint64_t *)&unk_1011C6790);
  __chkstk_darwin(v8);
  v201 = (char *)&v160 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v198 = (char *)&v160 - v11;
  v12 = type metadata accessor for Tracklist.LeadingIcon(255);
  v224 = v12;
  v225 = sub_100044B54(&qword_1011C39F8);
  v226 = sub_100044B54(&qword_1011C3A00);
  v227 = sub_100044B54(&qword_1011C3A08);
  v228 = &type metadata for Spacer;
  v197 = a1;
  v14 = a1[2];
  v13 = a1[3];
  v16 = a1[4];
  v15 = a1[5];
  v216 = a1[6];
  v217 = v13;
  v219 = v14;
  v220 = v13;
  v221 = v16;
  v222 = v15;
  v17 = v15;
  v214 = v15;
  v223 = v216;
  v229 = type metadata accessor for Tracklist.TrailingIcons(255, (uint64_t)&v219);
  TupleTypeMetadata = swift_getTupleTypeMetadata(255, 6);
  v19 = type metadata accessor for TupleView(255, TupleTypeMetadata);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v19);
  v21 = type metadata accessor for HStack(255, v19, WitnessTable);
  v22 = type metadata accessor for ModifiedContent(255, v21, &type metadata for _FrameLayout);
  v23 = type metadata accessor for ModifiedContent(255, v22, &type metadata for _PaddingLayout);
  v25 = type metadata accessor for Tracklist.VerticalTextStack(255, v14, v16, v24);
  v26 = type metadata accessor for ModifiedContent(255, v25, &type metadata for _PaddingLayout);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v23, v26, 0, 0);
  v28 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v28);
  v29 = type metadata accessor for VStack(255, v28);
  v224 = v12;
  v225 = sub_100044B54(&qword_1011C3A10);
  v226 = sub_100044B54(&qword_1011C3A18);
  v30 = sub_100044B54(&qword_1011C3A20);
  v215 = v14;
  v210 = v16;
  v32 = type metadata accessor for Tracklist.HorizontalTextStack(255, v14, v16, v31);
  v33 = type metadata accessor for _ConditionalContent(255, v25, v32);
  v34 = type metadata accessor for Group(255, v33);
  v35 = type metadata accessor for ModifiedContent(255, v34, &type metadata for _FlexFrameLayout);
  v36 = swift_getTupleTypeMetadata2(255, v30, v35, 0, 0);
  v37 = type metadata accessor for TupleView(255, v36);
  v38 = type metadata accessor for Group(255, v37);
  v39 = type metadata accessor for ModifiedContent(255, v38, &type metadata for SeparatorAlignmentModifier);
  v40 = sub_100044B54(&qword_1011B5800);
  v227 = type metadata accessor for ModifiedContent(255, v39, v40);
  v228 = (void *)sub_100044B54(&qword_1011B7088);
  v219 = v14;
  v220 = v217;
  v221 = v16;
  v222 = v17;
  v223 = v216;
  v229 = type metadata accessor for Tracklist.TrailingIcons(255, (uint64_t)&v219);
  v41 = swift_getTupleTypeMetadata(255, 6);
  v42 = type metadata accessor for TupleView(255, v41);
  v43 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v42);
  v44 = type metadata accessor for HStack(255, v42, v43);
  v45 = type metadata accessor for _ConditionalContent(255, v29, v44);
  v161 = v45;
  v46 = type metadata accessor for Group(0, v45);
  v169 = *(_QWORD *)(v46 - 8);
  __chkstk_darwin(v46);
  v165 = (char *)&v160 - v47;
  v48 = type metadata accessor for ModifiedContent(0, v46, &type metadata for _PaddingLayout);
  v179 = *(_QWORD *)(v48 - 8);
  __chkstk_darwin(v48);
  v211 = (uint64_t *)((char *)&v160 - v49);
  v164 = v48;
  v50 = type metadata accessor for ModifiedContent(0, v48, &type metadata for _PaddingLayout);
  v189 = *(_QWORD *)(v50 - 8);
  __chkstk_darwin(v50);
  v212 = (uint64_t *)((char *)&v160 - v51);
  v52 = type metadata accessor for ModifiedContent(0, v50, &type metadata for _FlexFrameLayout);
  v194 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v192 = (char *)&v160 - v53;
  v54 = sub_100044B54(&qword_1011C3A28);
  v55 = type metadata accessor for ModifiedContent(0, v52, v54);
  v193 = *(_QWORD *)(v55 - 8);
  __chkstk_darwin(v55);
  v191 = (char *)&v160 - v56;
  v57 = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v29);
  v58 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v44);
  v218[22] = v57;
  v218[23] = v58;
  v160 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v45);
  v218[21] = v160;
  v162 = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v46);
  v218[19] = v162;
  v218[20] = &protocol witness table for _PaddingLayout;
  v163 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v48);
  v218[17] = v163;
  v218[18] = &protocol witness table for _PaddingLayout;
  v190 = v50;
  v168 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v50);
  v218[15] = v168;
  v218[16] = &protocol witness table for _FlexFrameLayout;
  v196 = v52;
  v59 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v52);
  v60 = sub_100049F28(&qword_1011C3A30, &qword_1011C3A28, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
  v177 = v59;
  v218[13] = v59;
  v218[14] = v60;
  v61 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v55);
  v224 = v55;
  v225 = v61;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v224, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 0);
  v182 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  v180 = (char *)&v160 - v63;
  v64 = type metadata accessor for AccessibilityAttachmentModifier(255);
  v184 = OpaqueTypeMetadata2;
  v65 = type metadata accessor for ModifiedContent(0, OpaqueTypeMetadata2, v64);
  v183 = *(_QWORD *)(v65 - 8);
  __chkstk_darwin(v65);
  v181 = (char *)&v160 - v66;
  v67 = type metadata accessor for ModifiedContent(0, v65, v64);
  v187 = *(_QWORD *)(v67 - 8);
  __chkstk_darwin(v67);
  v186 = (char *)&v160 - v68;
  v69 = _s17ContextMenuButtonVMa(255);
  v195 = v55;
  v224 = v55;
  v225 = v61;
  v176 = v61;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v224, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v71 = sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
  v166 = OpaqueTypeConformance2;
  v218[11] = OpaqueTypeConformance2;
  v218[12] = v71;
  v185 = v65;
  v167 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v65);
  v218[9] = v167;
  v218[10] = v71;
  v72 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v67);
  v73 = sub_100048748(&qword_1011BE1B0, _s17ContextMenuButtonVMa, (uint64_t)&unk_100EC5958);
  v188 = v67;
  v224 = v67;
  v225 = v69;
  v178 = v69;
  v174 = v72;
  v226 = v72;
  v227 = v73;
  v172 = v73;
  v175 = swift_getOpaqueTypeMetadata2(0, &v224, &opaque type descriptor for <<opaque return type of View.accessibilityActions<A>(_:)>>, 0);
  v173 = *(_QWORD *)(v175 - 8);
  __chkstk_darwin(v175);
  v170 = (char *)&v160 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = __chkstk_darwin(v75);
  v171 = (uint64_t)&v160 - v77;
  v78 = v215;
  v218[2] = v215;
  v218[3] = v217;
  v79 = v210;
  v80 = v213;
  v218[4] = v210;
  v218[5] = v214;
  v218[6] = v216;
  v218[7] = v213;
  v81 = v165;
  Group<A>.init(content:)(sub_1006D047C, v218, v161, v160, v76);
  v83 = static Edge.Set.trailing.getter(v82);
  View.padding(_:_:)(v211, v83, *(_QWORD *)(v80 + 80), 0, v46, v162);
  v84 = (*(uint64_t (**)(char *, uint64_t))(v169 + 8))(v81, v46);
  LODWORD(v169) = static Edge.Set.vertical.getter(v84);
  v85 = *(_QWORD *)(v80 + 8);
  v86 = *(void (**)(uint64_t, uint64_t))(v79 + 24);
  swift_unknownObjectRetain(v85, v87);
  v88 = v198;
  v86(v78, v79);
  swift_unknownObjectRelease(v85);
  v89 = type metadata accessor for ArtworkImage.Info(0);
  v90 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 48);
  v91 = (uint64_t)v88;
  v92 = v90(v88, 1, v89) != 1;
  sub_10004FF60(v91, (uint64_t *)&unk_1011C6790);
  v93 = v199;
  sub_1008237B8(v199);
  v94 = v92;
  v95 = v80;
  sub_1006CDA18(v94);
  v97 = v96;
  (*(void (**)(uint64_t, uint64_t))(v200 + 8))(v93, v202);
  v98 = v211;
  v99 = v164;
  View.padding(_:_:)(v212, v169, v97, 0, v164, v163);
  v100 = v215;
  (*(void (**)(_QWORD *, uint64_t))(v179 + 8))(v98, v99);
  v101 = *(_QWORD *)(v95 + 8);
  swift_unknownObjectRetain(v101, v102);
  v103 = (uint64_t)v201;
  v86(v100, v79);
  v104 = swift_unknownObjectRelease(v101);
  v105 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128))v90)(v103, 1, v89, v104);
  v106 = sub_10004FF60(v103, (uint64_t *)&unk_1011C6790);
  if (qword_10119C600 != -1)
    v106 = swift_once(&qword_10119C600, sub_1006CA11C);
  v107 = 68.0;
  if (v105 == 1)
    v107 = 58.0;
  v108 = 56.0;
  if (v105 == 1)
    v108 = 48.0;
  if (!byte_1011C36B8)
    v107 = v108;
  v109 = v107;
  v110 = static Alignment.center.getter(v106);
  v111 = v190;
  LOBYTE(v155) = 1;
  LOBYTE(v153) = 1;
  v112 = v192;
  v113 = v109;
  v114 = v212;
  View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0, 1, 0, 1, 0, 1, *(_QWORD *)&v113, 0, 0, v153, 0, v155, v110, v115, v190, v168);
  v116 = (*(uint64_t (**)(_QWORD *, uint64_t))(v189 + 8))(v114, v111);
  __chkstk_darwin(v116);
  v117 = v216;
  v154 = v100;
  v155 = v217;
  v118 = v214;
  v156 = v79;
  v157 = v214;
  v158 = v216;
  v159 = v95;
  v120 = static Alignment.center.getter(v119);
  v122 = v121;
  v123 = sub_100007E8C(&qword_1011BC520);
  v124 = sub_1005BE098();
  v125 = v191;
  v126 = v120;
  v127 = v196;
  View.background<A>(alignment:content:)(v126, v122, sub_1006D0488, &v152, v196, v123, v177, v124);
  v128 = (*(uint64_t (**)(char *, uint64_t))(v194 + 8))(v112, v127);
  v129 = v203;
  static AccessibilityChildBehavior.combine.getter(v128);
  v130 = v180;
  v131 = v195;
  View.accessibilityElement(children:)(v129, v195, v176);
  (*(void (**)(char *, uint64_t))(v204 + 8))(v129, v205);
  v132 = (*(uint64_t (**)(char *, uint64_t))(v193 + 8))(v125, v131);
  v133 = v206;
  static AccessibilityTraits.isButton.getter(v132);
  v134 = v181;
  v135 = v184;
  View.accessibilityAddTraits(_:)(v133, v184, v166);
  (*(void (**)(char *, uint64_t))(v207 + 8))(v133, v208);
  (*(void (**)(char *, uint64_t))(v182 + 8))(v130, v135);
  v136 = AccessibilityIdentifier.trackListCell.unsafeMutableAddressor();
  v137 = *v136;
  v138 = v136[1];
  swift_bridgeObjectRetain();
  v139 = v185;
  v140 = v186;
  View.accessibilityIdentifier(_:)(v137, v138, v185, v167);
  v141 = swift_bridgeObjectRelease();
  v142 = (*(uint64_t (**)(char *, uint64_t, __n128))(v183 + 8))(v134, v139, v141);
  __chkstk_darwin(v142);
  v154 = v215;
  v155 = v217;
  v156 = v210;
  v157 = v118;
  v158 = v117;
  v159 = v213;
  v143 = swift_checkMetadataState(0, v178);
  v144 = (uint64_t)v170;
  v145 = v188;
  v146 = v174;
  v147 = v172;
  View.accessibilityActions<A>(_:)(sub_1006D0498, &v152, v188, v143, v174, v172);
  (*(void (**)(char *, uint64_t))(v187 + 8))(v140, v145);
  v224 = v145;
  v225 = v143;
  v226 = v146;
  v227 = v147;
  swift_getOpaqueTypeConformance2(&v224, &opaque type descriptor for <<opaque return type of View.accessibilityActions<A>(_:)>>, 1);
  v148 = v171;
  v149 = v175;
  sub_10081EB14(v144, v175, v171);
  v150 = *(void (**)(uint64_t, uint64_t))(v173 + 8);
  v150(v144, v149);
  sub_1000EA744(v148, v149, v209);
  return ((uint64_t (*)(uint64_t, uint64_t))v150)(v148, v149);
}

uint64_t sub_1006BCE4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t TupleTypeMetadata2;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t TupleTypeMetadata;
  uint64_t v30;
  uint64_t WitnessTable;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD v95[3];
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void *v124;
  uint64_t v125;

  v109 = a1;
  v112 = a7;
  v12 = sub_100007E8C((uint64_t *)&unk_1011C6790);
  __chkstk_darwin(v12);
  v104 = (char *)v95 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Tracklist.LeadingIcon(255);
  v120 = v14;
  v121 = sub_100044B54(&qword_1011C3A10);
  v122 = sub_100044B54(&qword_1011C3A18);
  v15 = sub_100044B54(&qword_1011C3A20);
  v17 = type metadata accessor for Tracklist.VerticalTextStack(255, a2, a4, v16);
  v19 = type metadata accessor for Tracklist.HorizontalTextStack(255, a2, a4, v18);
  v20 = type metadata accessor for _ConditionalContent(255, v17, v19);
  v21 = type metadata accessor for Group(255, v20);
  v22 = type metadata accessor for ModifiedContent(255, v21, &type metadata for _FlexFrameLayout);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v15, v22, 0, 0);
  v24 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  v25 = type metadata accessor for Group(255, v24);
  v26 = type metadata accessor for ModifiedContent(255, v25, &type metadata for SeparatorAlignmentModifier);
  v27 = sub_100044B54(&qword_1011B5800);
  v123 = type metadata accessor for ModifiedContent(255, v26, v27);
  v124 = (void *)sub_100044B54(&qword_1011B7088);
  v115 = a2;
  v116 = a3;
  v117 = a4;
  v118 = a5;
  v28 = a5;
  v105 = a5;
  v119 = a6;
  v125 = type metadata accessor for Tracklist.TrailingIcons(255, (uint64_t)&v115);
  TupleTypeMetadata = swift_getTupleTypeMetadata(255, 6);
  v30 = type metadata accessor for TupleView(255, TupleTypeMetadata);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v30);
  v100 = v30;
  v99 = WitnessTable;
  v32 = type metadata accessor for HStack(0, v30, WitnessTable);
  v101 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(v32);
  v103 = (uint64_t)v95 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v98 = (char *)v95 - v35;
  __chkstk_darwin(v36);
  v102 = (uint64_t)v95 - v37;
  v120 = v14;
  v121 = sub_100044B54(&qword_1011C39F8);
  v122 = sub_100044B54(&qword_1011C3A00);
  v123 = sub_100044B54(&qword_1011C3A08);
  v124 = &type metadata for Spacer;
  v115 = a2;
  v116 = a3;
  v117 = a4;
  v118 = v28;
  v119 = a6;
  v38 = a6;
  v125 = type metadata accessor for Tracklist.TrailingIcons(255, (uint64_t)&v115);
  v39 = swift_getTupleTypeMetadata(255, 6);
  v40 = type metadata accessor for TupleView(255, v39);
  v41 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v40);
  v42 = type metadata accessor for HStack(255, v40, v41);
  v43 = type metadata accessor for ModifiedContent(255, v42, &type metadata for _FrameLayout);
  v44 = type metadata accessor for ModifiedContent(255, v43, &type metadata for _PaddingLayout);
  v45 = type metadata accessor for ModifiedContent(255, v17, &type metadata for _PaddingLayout);
  v46 = swift_getTupleTypeMetadata2(255, v44, v45, 0, 0);
  v47 = type metadata accessor for TupleView(255, v46);
  v48 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v47);
  v95[2] = v47;
  v95[1] = v48;
  v49 = type metadata accessor for VStack(0, v47);
  v96 = *(_QWORD *)(v49 - 8);
  __chkstk_darwin(v49);
  v51 = (char *)v95 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v52);
  v97 = (uint64_t)v95 - v53;
  v111 = v32;
  v54 = type metadata accessor for _ConditionalContent(0, v49, v32);
  v107 = *(_QWORD *)(v54 - 8);
  v108 = v54;
  __chkstk_darwin(v54);
  v106 = (char *)v95 - v55;
  v110 = a2;
  v120 = a2;
  v121 = a3;
  v56 = a3;
  v57 = a4;
  v122 = a4;
  v58 = v105;
  v123 = v105;
  v124 = v38;
  v59 = v38;
  type metadata accessor for Tracklist.Cell(0, (uint64_t)&v120);
  v60 = v109;
  swift_retain();
  v61 = sub_1006BD694();
  swift_release();
  v62 = sub_1006BD8C4();
  if ((v62 & 1) != 0)
  {
    v64 = static HorizontalAlignment.leading.getter(v62);
    __chkstk_darwin(v64);
    v95[-8] = v110;
    v95[-7] = v56;
    v95[-6] = v57;
    v95[-5] = v58;
    v95[-4] = v38;
    v95[-3] = v60;
    LOBYTE(v95[-2]) = v61 & 1;
    VStack.init(alignment:spacing:content:)(v65, 0, 0, sub_1006D04B0);
    v66 = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v49);
    v67 = v97;
    sub_10081EB14((uint64_t)v51, v49, v97);
    v68 = *(void (**)(char *, uint64_t))(v96 + 8);
    v68(v51, v49);
    sub_1000EA744(v67, v49, (uint64_t)v51);
    v69 = v111;
    v70 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v111);
    v71 = (uint64_t)v106;
    sub_100817130((uint64_t)v51, v49, v69, v66, v70);
    v68(v51, v49);
    v72 = v67;
    v73 = v49;
  }
  else
  {
    v97 = v49;
    v74 = v56;
    v75 = v60;
    v76 = *(_QWORD *)(v60 + 8);
    v77 = v57;
    v78 = *(void (**)(uint64_t, uint64_t))(v57 + 24);
    swift_unknownObjectRetain(v76, v63);
    v79 = (uint64_t)v104;
    v80 = v110;
    v78(v110, v77);
    swift_unknownObjectRelease(v76);
    v81 = type metadata accessor for ArtworkImage.Info(0);
    v82 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 48))(v79, 1, v81);
    v83 = sub_10004FF60(v79, (uint64_t *)&unk_1011C6790);
    if (qword_10119C600 != -1)
      v83 = swift_once(&qword_10119C600, sub_1006CA11C);
    if (byte_1011C36B8 == 1 || v82 != 1)
      v84 = static VerticalAlignment.center.getter(v83);
    else
      v84 = static VerticalAlignment.firstTextLineCenter.getter(v83);
    __chkstk_darwin(v84);
    v95[-8] = v80;
    v95[-7] = v74;
    v95[-6] = v77;
    v95[-5] = v58;
    v95[-4] = v59;
    v95[-3] = v75;
    LOBYTE(v95[-2]) = v61 & 1;
    v85 = (uint64_t)v98;
    HStack.init(alignment:spacing:content:)(v86, 0, 0, sub_1006D04A4, &v95[-10], v100, v99);
    v69 = v111;
    v87 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v111);
    v88 = v102;
    sub_10081EB14(v85, v69, v102);
    v68 = *(void (**)(char *, uint64_t))(v101 + 8);
    v68((char *)v85, v69);
    v89 = v103;
    sub_1000EA744(v88, v69, v103);
    v49 = v97;
    v90 = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v97);
    v71 = (uint64_t)v106;
    sub_1008171F4(v89, v49, v69, v90, v87);
    v68((char *)v89, v69);
    v72 = v88;
    v73 = v69;
  }
  v68((char *)v72, v73);
  v91 = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v49);
  v92 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v69);
  v113 = v91;
  v114 = v92;
  v93 = v108;
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v108);
  sub_1000EA744(v71, v93, v112);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v107 + 8))(v71, v93);
}

uint64_t sub_1006BD694()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(uint64_t);
  char v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char v25;
  void (*v26)(char *, uint64_t);
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;

  v1 = type metadata accessor for MusicPlayer.PlayabilityStatus.UnplayableReason(0);
  v30 = *(_QWORD *)(v1 - 8);
  v31 = v1;
  v2 = __chkstk_darwin(v1);
  v29 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v5 = (char *)&v28 - v4;
  v6 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v28 - v12;
  v14 = __chkstk_darwin(v11);
  v16 = (char *)&v28 - v15;
  v17 = *(void (**)(uint64_t))(*(_QWORD *)v0 + 256);
  v17(v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v13, enum case for MusicPlayer.PlayabilityStatus.playable(_:), v6);
  v18 = static MusicPlayer.PlayabilityStatus.== infix(_:_:)(v16, v13);
  v19 = *(void (**)(char *, uint64_t))(v7 + 8);
  v19(v13, v6);
  v20 = ((uint64_t (*)(char *, uint64_t))v19)(v16, v6);
  if ((v18 & 1) != 0)
    return 1;
  v21 = v5;
  v23 = v29;
  v22 = v30;
  v24 = v31;
  v17(v20);
  if ((*(unsigned int (**)(char *, uint64_t))(v7 + 88))(v10, v6) == enum case for MusicPlayer.PlayabilityStatus.unplayable(_:))
  {
    (*(void (**)(char *, uint64_t))(v7 + 96))(v10, v6);
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v21, v10, v24);
    (*(void (**)(char *, _QWORD, uint64_t))(v22 + 104))(v23, enum case for MusicPlayer.PlayabilityStatus.UnplayableReason.subscriptionRequired(_:), v24);
    v25 = static MusicPlayer.PlayabilityStatus.UnplayableReason.== infix(_:_:)(v21, v23);
    v26 = *(void (**)(char *, uint64_t))(v22 + 8);
    v26(v23, v24);
    v26(v21, v24);
    if ((v25 & 1) != 0)
      return 1;
  }
  else
  {
    v19(v10, v6);
  }
  return 0;
}

uint64_t sub_1006BD8C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  uint64_t v9;

  v0 = type metadata accessor for DynamicTypeSize(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
  __chkstk_darwin(v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100824BE4((uint64_t)v6);
  sub_1008237B8((uint64_t)v3);
  v7 = sub_1006CDAB0((uint64_t)v6, (uint64_t)v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_10004FF60((uint64_t)v6, (uint64_t *)&unk_1011A33B8);
  return v7 & 1;
}

uint64_t sub_1006BD9C4@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t TupleTypeMetadata;
  uint64_t v24;
  uint64_t WitnessTable;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, _QWORD *);
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  char *v45;
  char v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(_QWORD *, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t (*v81)(uint64_t, uint64_t);
  char *v83;
  char *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  _QWORD *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  uint64_t v107;
  int v108;
  char v109[16];
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void *v114;
  uint64_t v115;
  char v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  void *v120;
  uint64_t v121;
  void *v122;
  uint64_t v123;
  void *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  void *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  void *v134;
  uint64_t v135;

  v108 = a2;
  v107 = a8;
  v14 = type metadata accessor for Tracklist.VerticalTextStack(0, a3, a5, a4);
  v101 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v100 = (uint64_t)&v83 - v15;
  v102 = v16;
  v106 = type metadata accessor for ModifiedContent(0, v16, &type metadata for _PaddingLayout);
  v103 = *(_QWORD *)(v106 - 8);
  __chkstk_darwin(v106);
  v105 = (char **)((char *)&v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v18);
  v104 = (uint64_t)&v83 - v19;
  v93 = (_QWORD *)type metadata accessor for DynamicTypeSize(0);
  v90 = *(v93 - 1);
  __chkstk_darwin(v93);
  v83 = (char *)&v83 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v84 = (char *)&v83 - v22;
  v130 = type metadata accessor for Tracklist.LeadingIcon(255);
  v131 = sub_100044B54(&qword_1011C39F8);
  v132 = sub_100044B54(&qword_1011C3A00);
  v133 = sub_100044B54(&qword_1011C3A08);
  v134 = &type metadata for Spacer;
  v125 = a3;
  v126 = a4;
  v127 = a5;
  v128 = a6;
  v129 = a7;
  v135 = type metadata accessor for Tracklist.TrailingIcons(255, (uint64_t)&v125);
  TupleTypeMetadata = swift_getTupleTypeMetadata(255, 6);
  v24 = type metadata accessor for TupleView(255, TupleTypeMetadata);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v24);
  v26 = type metadata accessor for HStack(0, v24, WitnessTable);
  v87 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v28 = (char *)&v83 - v27;
  v29 = type metadata accessor for ModifiedContent(0, v26, &type metadata for _FrameLayout);
  v91 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  v89 = (char *)&v83 - v30;
  v85 = v31;
  v95 = type metadata accessor for ModifiedContent(0, v31, &type metadata for _PaddingLayout);
  v94 = *(_QWORD *)(v95 - 8);
  __chkstk_darwin(v95);
  v96 = (char *)&v83 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v88 = (char **)((char *)&v83 - v34);
  __chkstk_darwin(v35);
  v92 = (uint64_t)&v83 - v36;
  v38 = static VerticalAlignment.center.getter(v37);
  v110 = a3;
  v111 = a4;
  v112 = a5;
  v113 = a6;
  v114 = a7;
  v115 = a1;
  v116 = v108;
  v86 = v28;
  v39 = WitnessTable;
  v40 = (uint64_t)v84;
  HStack.init(alignment:spacing:content:)(v38, 0, 0, sub_1006D04BC, v109, v24, v39);
  v97 = a3;
  v130 = a3;
  v131 = a4;
  v98 = a5;
  v132 = a5;
  v133 = a6;
  v134 = a7;
  type metadata accessor for Tracklist.Cell(0, (uint64_t)&v130);
  v99 = a1;
  sub_1008237B8(v40);
  if (qword_10119C600 != -1)
    swift_once(&qword_10119C600, sub_1006CA11C);
  if (byte_1011C36B8 == 1)
  {
    v41 = *(void (**)(char *, _QWORD *))(v90 + 8);
    v42 = 0x4048000000000000;
    v43 = v93;
  }
  else
  {
    v44 = v90;
    v45 = v83;
    v43 = v93;
    (*(void (**)(char *, _QWORD, _QWORD *))(v90 + 104))(v83, enum case for DynamicTypeSize.accessibility3(_:), v93);
    v46 = static DynamicTypeSize.< infix(_:_:)(v40, v45);
    v41 = *(void (**)(char *, _QWORD *))(v44 + 8);
    v41(v45, v43);
    if ((v46 & 1) != 0)
      v42 = 0x4048000000000000;
    else
      v42 = 0x4052000000000000;
  }
  v47 = v89;
  v48 = ((uint64_t (*)(uint64_t, _QWORD *))v41)(v40, v43);
  v49 = static Alignment.center.getter(v48);
  v51 = v50;
  v52 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v26);
  v53 = v42;
  v54 = v86;
  View.frame(width:height:alignment:)(0, 1, v53, 0, v49, v51, v26, v52);
  v55 = (*(uint64_t (**)(char *, uint64_t))(v87 + 8))(v54, v26);
  v56 = static Edge.Set.bottom.getter(v55);
  if (qword_10119C680 != -1)
    swift_once(&qword_10119C680, sub_1006CA5C0);
  v57 = qword_10124D788;
  v123 = v52;
  v124 = &protocol witness table for _FrameLayout;
  v58 = v85;
  v59 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v85);
  v60 = v88;
  View.padding(_:_:)(v88, v56, v57, 0, v58, v59);
  (*(void (**)(char *, uint64_t))(v91 + 8))(v47, v58);
  v121 = v59;
  v122 = &protocol witness table for _PaddingLayout;
  v61 = v95;
  v91 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v95);
  v62 = v92;
  sub_10081EB14((uint64_t)v60, v61, v92);
  v63 = v94;
  v93 = *(_QWORD **)(v94 + 8);
  ((void (*)(_QWORD *, uint64_t))v93)(v60, v61);
  v64 = v99;
  v66 = swift_unknownObjectRetain(*(_QWORD *)(v99 + 8), v65);
  v67 = v100;
  v68 = sub_1006BF350(v66, v108 & 1, v97, v98, v100);
  v69 = static Edge.Set.leading.getter(v68);
  v70 = *(_QWORD *)(v64 + 80);
  v71 = v102;
  v72 = swift_getWitnessTable(&unk_100ECAF50, v102);
  v73 = v105;
  View.padding(_:_:)(v105, v69, v70, 0, v71, v72);
  (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v67, v71);
  v119 = v72;
  v120 = &protocol witness table for _PaddingLayout;
  v74 = v106;
  v75 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v106);
  v76 = v104;
  sub_10081EB14((uint64_t)v73, v74, v104);
  v77 = v103;
  v78 = *(void (**)(_QWORD *, uint64_t))(v103 + 8);
  v78(v73, v74);
  v79 = (uint64_t)v96;
  (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v96, v62, v61);
  v130 = v79;
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v77 + 16))(v73, v76, v74);
  v131 = (uint64_t)v73;
  v125 = v61;
  v126 = v74;
  v117 = v91;
  v118 = v75;
  sub_1004D49B8(&v130, 2uLL, (uint64_t)&v125);
  v78((_QWORD *)v76, v74);
  v80 = v62;
  v81 = (uint64_t (*)(uint64_t, uint64_t))v93;
  ((void (*)(uint64_t, uint64_t))v93)(v80, v61);
  v78(v73, v74);
  return v81(v79, v61);
}

uint64_t sub_1006BE1D0@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, _QWORD *);
  uint64_t v48;
  __n128 v49;
  unsigned int (*v50)(char *, uint64_t, uint64_t, __n128);
  uint64_t v51;
  unsigned int v52;
  unsigned int (*v53)(char *, uint64_t, uint64_t, __n128);
  uint64_t v54;
  void (*v55)(uint64_t, _QWORD *);
  uint64_t v56;
  __n128 v57;
  __int128 *v58;
  __int128 v59;
  uint64_t v60;
  __int16 v61;
  char v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t, uint64_t);
  char *v68;
  uint64_t v69;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t (*v87)(uint64_t, _QWORD *);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  int *v95;
  uint64_t *v96;
  _QWORD *v97;
  uint64_t v98;
  int v99;
  uint64_t v100;
  uint64_t (*v101)(uint64_t, _QWORD *);
  uint64_t v102;
  unsigned __int8 v103;
  unsigned __int8 v104;
  unsigned int v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t (*v108)(uint64_t, _QWORD *);
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  _QWORD *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t (*v120)(uint64_t, _QWORD *);
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  BOOL v124;
  uint64_t v125;
  int v126;
  _QWORD *v127;
  uint64_t v128;
  char v129;
  __int128 v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t WitnessTable;
  uint64_t v134;
  uint64_t v135;
  void (*v136)(uint64_t, uint64_t);
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v142;
  void (*v143)(uint64_t, _QWORD *);
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t *v148;
  _BOOL4 v149;
  _QWORD *v150;
  unsigned int (*v151)(uint64_t, uint64_t, uint64_t, __n128);
  char *v152;
  void (*v153)(uint64_t, _QWORD *);
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  int v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  unint64_t v181;
  unint64_t v182;
  uint64_t v183;
  void *v184;
  uint64_t v185;
  _QWORD v186[6];
  uint64_t v187;
  char v188;
  char v189;
  uint64_t v190[6];
  __int128 v191;
  __int128 v192;
  _BYTE v193[25];

  v157 = a6;
  v174 = a2;
  v173 = a1;
  v168 = a8;
  *(_QWORD *)&v191 = a3;
  *((_QWORD *)&v191 + 1) = a4;
  *(_QWORD *)&v192 = a5;
  *((_QWORD *)&v192 + 1) = a6;
  *(_QWORD *)v193 = a7;
  v170 = type metadata accessor for Tracklist.TrailingIcons(0, (uint64_t)&v191);
  v165 = *(_QWORD *)(v170 - 8);
  __chkstk_darwin(v170);
  v169 = (uint64_t)&v142 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v167 = (uint64_t)&v142 - v14;
  v171 = type metadata accessor for Tracklist.LeadingNumber(0);
  v160 = *(_QWORD *)(v171 - 8);
  __chkstk_darwin(v171);
  v148 = (uint64_t *)((char *)&v142 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v163 = sub_100007E8C(&qword_1011C3A00);
  __chkstk_darwin(v163);
  v166 = (uint64_t)&v142 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v176 = (uint64_t)&v142 - v18;
  v159 = type metadata accessor for Tracklist.Artwork(0);
  v158 = *(_QWORD *)(v159 - 8);
  __chkstk_darwin(v159);
  v147 = (uint64_t)&v142 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v172 = type metadata accessor for ArtworkImage.Info(0);
  v20 = *(_QWORD *)(v172 - 8);
  __chkstk_darwin(v172);
  v146 = (uint64_t)&v142 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v145 = (uint64_t)&v142 - v23;
  v161 = sub_100007E8C(&qword_1011C39F8);
  __chkstk_darwin(v161);
  v164 = (uint64_t)&v142 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v178 = (uint64_t)&v142 - v26;
  v155 = type metadata accessor for Font.TextStyle(0);
  v154 = *(_QWORD *)(v155 - 8);
  __chkstk_darwin(v155);
  v152 = (char *)&v142 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_100007E8C((uint64_t *)&unk_1011C6790);
  __chkstk_darwin(v28);
  v144 = (char *)&v142 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v156 = (char *)&v142 - v31;
  __chkstk_darwin(v32);
  v34 = (char *)&v142 - v33;
  __chkstk_darwin(v35);
  v37 = (char *)&v142 - v36;
  v175 = type metadata accessor for Tracklist.LeadingIcon(0);
  __chkstk_darwin(v175);
  v162 = (uint64_t)&v142 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  v41 = (char *)&v142 - v40;
  __chkstk_darwin(v42);
  v177 = (uint64_t)&v142 - v43;
  *(_QWORD *)&v191 = a3;
  *((_QWORD *)&v191 + 1) = a4;
  *(_QWORD *)&v192 = a5;
  *((_QWORD *)&v192 + 1) = v157;
  *(_QWORD *)v193 = a7;
  v44 = type metadata accessor for Tracklist.Cell(0, (uint64_t)&v191);
  v45 = v173;
  LODWORD(v157) = sub_1006BEF48(v44);
  v46 = *(_QWORD *)(v45 + 8);
  v153 = (void (*)(uint64_t, _QWORD *))a5[3];
  v47 = v153;
  swift_unknownObjectRetain(v46, v48);
  v179 = a3;
  v47(a3, a5);
  v49 = swift_unknownObjectRelease(v46);
  v50 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v20 + 48);
  v51 = v172;
  v52 = v50(v37, 1, v172, v49);
  v53 = v50;
  v151 = (unsigned int (*)(uint64_t, uint64_t, uint64_t, __n128))v50;
  v149 = v52 != 1;
  sub_10004FF60((uint64_t)v37, (uint64_t *)&unk_1011C6790);
  v54 = *(_QWORD *)(v45 + 8);
  v150 = a5;
  v55 = (void (*)(uint64_t, _QWORD *))a5[12];
  swift_unknownObjectRetain(v54, v56);
  v143 = v55;
  v55(a3, a5);
  v57 = swift_unknownObjectRelease(v54);
  LOBYTE(v54) = v53(v34, 1, v51, v57) != 1;
  sub_10004FF60((uint64_t)v34, (uint64_t *)&unk_1011C6790);
  v58 = (__int128 *)(v45 + 64);
  v59 = *(_OWORD *)(v45 + 64);
  v60 = *(_QWORD *)(v45 + 80);
  v61 = *(_WORD *)(v45 + 88);
  v62 = *(_BYTE *)(v45 + 90);
  v63 = *(_QWORD *)(v45 + 112);
  v64 = *(_BYTE *)(v45 + 120);
  *v41 = v157;
  v41[1] = v149;
  v41[2] = v54;
  v41[3] = v174;
  *(_OWORD *)(v41 + 8) = v59;
  *((_QWORD *)v41 + 3) = v60;
  *((_WORD *)v41 + 16) = v61;
  v41[34] = v62;
  *(_OWORD *)(v41 + 40) = *(_OWORD *)(v45 + 96);
  *((_QWORD *)v41 + 7) = v63;
  v41[64] = v64;
  v65 = v175;
  *(_QWORD *)&v191 = 0x4020000000000000;
  v66 = enum case for Font.TextStyle.largeTitle(_:);
  v67 = *(void (**)(char *, uint64_t, uint64_t))(v154 + 104);
  v68 = v152;
  v69 = v155;
  v67(v152, enum case for Font.TextStyle.largeTitle(_:), v155);
  v70 = sub_1000E4360();
  ScaledMetric.init(wrappedValue:relativeTo:)(&v191, v68, &type metadata for CGFloat, v70);
  *(_QWORD *)&v191 = 0x4018000000000000;
  v67(v68, v66, v69);
  v155 = v70;
  ScaledMetric.init(wrappedValue:relativeTo:)(&v191, v68, &type metadata for CGFloat, v70);
  v71 = &v41[*(int *)(v65 + 44)];
  *(_QWORD *)v71 = swift_getKeyPath("\b^4");
  v157 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  swift_storeEnumTagMultiPayload(v71, v157, 0);
  v72 = (uint64_t)v41;
  v73 = v173;
  v74 = v150;
  v75 = (uint64_t)v156;
  sub_10005B6C0(v72, v177, type metadata accessor for Tracklist.LeadingIcon);
  v76 = *(_QWORD *)(v73 + 8);
  swift_unknownObjectRetain(v76, v77);
  v153(v179, v74);
  v78 = swift_unknownObjectRelease(v76);
  if (v151(v75, 1, v172, v78) == 1)
  {
    sub_10004FF60(v75, (uint64_t *)&unk_1011C6790);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v158 + 56))(v178, 1, 1, v159);
  }
  else
  {
    v80 = v145;
    sub_10005B6C0(v75, v145, type metadata accessor for ArtworkImage.Info);
    v81 = v146;
    sub_10005B704(v80, v146, type metadata accessor for ArtworkImage.Info);
    v82 = *(_QWORD *)(v73 + 8);
    swift_unknownObjectRetain(v82, v83);
    v84 = (uint64_t)v144;
    v85 = v179;
    v143(v179, v74);
    swift_unknownObjectRelease(v82);
    v86 = *(_QWORD *)(v73 + 8);
    v87 = (uint64_t (*)(uint64_t, _QWORD *))v74[11];
    swift_unknownObjectRetain(v86, v88);
    v89 = v87(v85, v74);
    v91 = v90;
    swift_unknownObjectRelease(v86);
    sub_10005B748(v80, type metadata accessor for ArtworkImage.Info);
    v92 = *(_QWORD *)(v73 + 56);
    v93 = v81;
    v94 = v147;
    sub_10005B6C0(v93, v147, type metadata accessor for ArtworkImage.Info);
    v95 = (int *)v159;
    sub_100065228(v84, v94 + *(int *)(v159 + 20), (uint64_t *)&unk_1011C6790);
    v96 = (uint64_t *)(v94 + v95[6]);
    *v96 = v89;
    v96[1] = v91;
    *(_QWORD *)(v94 + v95[7]) = v92;
    v97 = (_QWORD *)(v94 + v95[8]);
    *v97 = swift_getKeyPath("\b^4");
    swift_storeEnumTagMultiPayload(v97, v157, 0);
    v98 = v178;
    sub_10005B6C0(v94, v178, type metadata accessor for Tracklist.Artwork);
    (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v158 + 56))(v98, 0, 1, v95);
    swift_retain();
  }
  v99 = v174 & 1;
  v100 = *(_QWORD *)(v73 + 8);
  v101 = (uint64_t (*)(uint64_t, _QWORD *))v74[4];
  swift_unknownObjectRetain(v100, v79);
  v102 = v101(v179, v74);
  v104 = v103;
  v105 = v103;
  swift_unknownObjectRelease(v100);
  v106 = 1;
  if (v105 <= 0xFD)
  {
    v107 = *(_QWORD *)(v73 + 8);
    v108 = (uint64_t (*)(uint64_t, _QWORD *))v74[11];
    swift_unknownObjectRetain(v107, 1);
    v109 = v108(v179, v74);
    v111 = v110;
    swift_unknownObjectRelease(v107);
    v112 = *(_BYTE *)(v73 + 16);
    v113 = (uint64_t)v148;
    *v148 = v102;
    *(_BYTE *)(v113 + 8) = v104;
    *(_BYTE *)(v113 + 9) = v99;
    *(_QWORD *)(v113 + 16) = v109;
    *(_QWORD *)(v113 + 24) = v111;
    *(_BYTE *)(v113 + 32) = v112;
    *(_QWORD *)(v113 + 40) = 0;
    v114 = v171;
    *(_QWORD *)&v191 = 0x4044000000000000;
    v115 = v155;
    ScaledMetric.init(wrappedValue:)(&v191, &type metadata for CGFloat, v155);
    *(_QWORD *)&v191 = 0x4036000000000000;
    ScaledMetric.init(wrappedValue:)(&v191, &type metadata for CGFloat, v115);
    v116 = (_QWORD *)(v113 + *(int *)(v114 + 44));
    *v116 = swift_getKeyPath("\b^4");
    swift_storeEnumTagMultiPayload(v116, v157, 0);
    v117 = (_QWORD *)(v113 + *(int *)(v114 + 48));
    *v117 = swift_getKeyPath(&unk_100ECAA28);
    v118 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
    swift_storeEnumTagMultiPayload(v117, v118, 0);
    sub_10005B6C0(v113, v176, type metadata accessor for Tracklist.LeadingNumber);
    v106 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v160 + 56))(v176, v106, 1, v171);
  v119 = *(_QWORD *)(v73 + 8);
  v120 = (uint64_t (*)(uint64_t, _QWORD *))v74[5];
  swift_unknownObjectRetain(v119, v121);
  v122 = v179;
  LOBYTE(v120) = v120(v179, v74);
  swift_unknownObjectRelease(v119);
  v124 = (v120 & 1) == 0;
  v125 = *(_QWORD *)(v73 + 8);
  if (v124)
    v126 = 2;
  else
    v126 = v99;
  v174 = v126;
  v127 = *(_QWORD **)(v73 + 32);
  v128 = *(_QWORD *)(v73 + 48);
  v129 = *(_BYTE *)(v73 + 16);
  v130 = v58[1];
  v191 = *v58;
  v192 = v130;
  *(_OWORD *)v193 = v58[2];
  *(_OWORD *)&v193[9] = *(__int128 *)((char *)v58 + 41);
  swift_unknownObjectRetain(v125, v123);
  swift_retain();
  swift_retain();
  v131 = v169;
  sub_1006BF198(v125, v127, v128, v129, &v191, v122, (uint64_t)v74, v169);
  v132 = v170;
  WitnessTable = swift_getWitnessTable(&unk_100ECAF00, v170);
  v134 = v167;
  sub_10081EB14(v131, v132, v167);
  v135 = v165;
  v136 = *(void (**)(uint64_t, uint64_t))(v165 + 8);
  v136(v131, v132);
  v137 = v162;
  sub_10005B704(v177, v162, type metadata accessor for Tracklist.LeadingIcon);
  v190[0] = v137;
  v138 = v164;
  sub_10004A160(v178, v164, &qword_1011C39F8);
  v190[1] = v138;
  v139 = v176;
  v140 = v166;
  sub_10004A160(v176, v166, &qword_1011C3A00);
  v189 = v174;
  v190[2] = v140;
  v190[3] = (uint64_t)&v189;
  v187 = 0;
  v188 = 1;
  v190[4] = (uint64_t)&v187;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v135 + 16))(v131, v134, v132);
  v190[5] = v131;
  v186[0] = v175;
  v186[1] = v161;
  v186[2] = v163;
  v186[3] = sub_100007E8C(&qword_1011C3A08);
  v186[4] = &type metadata for Spacer;
  v186[5] = v132;
  v180 = sub_100048748(&qword_1011C3A38, type metadata accessor for Tracklist.LeadingIcon, (uint64_t)&unk_100ECAEB0);
  v181 = sub_1006D04F0();
  v182 = sub_1006D056C();
  v183 = sub_1000E4570(&qword_1011C3A60, &qword_1011C3A08, (void (*)(void))sub_1006D05E8, (uint64_t)&protocol conformance descriptor for <A> A?);
  v184 = &protocol witness table for Spacer;
  v185 = WitnessTable;
  sub_1004D49B8(v190, 6uLL, (uint64_t)v186);
  v136(v134, v132);
  sub_10004FF60(v139, &qword_1011C3A00);
  sub_10004FF60(v178, &qword_1011C39F8);
  sub_10005B748(v177, type metadata accessor for Tracklist.LeadingIcon);
  v136(v131, v132);
  sub_10004FF60(v140, &qword_1011C3A00);
  sub_10004FF60(v138, &qword_1011C39F8);
  return sub_10005B748(v137, type metadata accessor for Tracklist.LeadingIcon);
}

uint64_t sub_1006BEF48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t);
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;

  v2 = v1;
  v4 = type metadata accessor for MusicFavoriteStatus(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v20 - v9;
  v11 = *(_QWORD *)(v1 + 32);
  v12 = swift_retain(v11);
  dispatch thunk of MusicLibrary.ItemState.favoriteStatus.getter(v12);
  swift_release(v11);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v8, enum case for MusicFavoriteStatus.favorited(_:), v4);
  LOBYTE(v11) = static MusicFavoriteStatus.== infix(_:_:)(v10, v8);
  v13 = *(void (**)(char *, uint64_t))(v5 + 8);
  v13(v8, v4);
  v13(v10, v4);
  if ((v11 & 1) != 0)
    return 0;
  v16 = *(_QWORD *)(v2 + 8);
  v17 = *(_QWORD *)(a1 + 32);
  v18 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 16);
  v19 = *(_QWORD *)(a1 + 16);
  swift_unknownObjectRetain(v16, v14);
  LOBYTE(v19) = v18(v19, v17);
  swift_unknownObjectRelease(v16);
  if ((v19 & 1) != 0)
    return 1;
  else
    return 2;
}

uint64_t sub_1006BF084@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v16;

  *(_QWORD *)a8 = a1;
  *(_BYTE *)(a8 + 8) = a2;
  *(_BYTE *)(a8 + 9) = a3;
  *(_QWORD *)(a8 + 16) = a4;
  *(_QWORD *)(a8 + 24) = a5;
  *(_BYTE *)(a8 + 32) = a6;
  *(_QWORD *)(a8 + 40) = a7;
  v9 = type metadata accessor for Tracklist.LeadingNumber(0);
  v16 = 0x4044000000000000;
  v10 = sub_1000E4360();
  ScaledMetric.init(wrappedValue:)(&v16, &type metadata for CGFloat, v10);
  v16 = 0x4036000000000000;
  ScaledMetric.init(wrappedValue:)(&v16, &type metadata for CGFloat, v10);
  v11 = (_QWORD *)(a8 + *(int *)(v9 + 44));
  *v11 = swift_getKeyPath("\b^4");
  v12 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  swift_storeEnumTagMultiPayload(v11, v12, 0);
  v13 = (_QWORD *)(a8 + *(int *)(v9 + 48));
  *v13 = swift_getKeyPath(&unk_100ECAA28);
  v14 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  return swift_storeEnumTagMultiPayload(v13, v14, 0);
}

uint64_t sub_1006BF198@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, _OWORD *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  unint64_t v29;
  _QWORD v31[5];

  v15 = (uint64_t *)(*a2 + class metadata base offset for MusicLibrary.ItemState);
  v16 = *(_QWORD *)(*(_QWORD *)a3 + 88);
  v18 = *v15;
  v17 = v15[1];
  *(_QWORD *)a8 = ObservedObject.init(wrappedValue:)(a1, a6, *(_QWORD *)(a7 + 8));
  *(_QWORD *)(a8 + 8) = v19;
  *(_QWORD *)(a8 + 16) = sub_10061BA24(a2);
  *(_QWORD *)(a8 + 24) = v20;
  v21 = sub_10061B9D8(a3, a6, a7, v17);
  v22 = a5[1];
  *(_OWORD *)(a8 + 56) = *a5;
  *(_QWORD *)(a8 + 32) = v21;
  *(_QWORD *)(a8 + 40) = v23;
  *(_BYTE *)(a8 + 48) = a4;
  *(_OWORD *)(a8 + 72) = v22;
  *(_OWORD *)(a8 + 88) = a5[2];
  *(_OWORD *)(a8 + 97) = *(_OWORD *)((char *)a5 + 41);
  v31[0] = a6;
  v31[1] = v18;
  v31[2] = a7;
  v31[3] = v16;
  v31[4] = v17;
  v24 = type metadata accessor for Tracklist.TrailingIcons(0, (uint64_t)v31);
  v25 = (_QWORD *)(a8 + *(int *)(v24 + 76));
  *v25 = swift_getKeyPath("\b^4");
  v26 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  swift_storeEnumTagMultiPayload(v25, v26, 0);
  v27 = (_QWORD *)(a8 + *(int *)(v24 + 80));
  *v27 = swift_getKeyPath(&unk_100ECAA28);
  v28 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  swift_storeEnumTagMultiPayload(v27, v28, 0);
  if (qword_10119C6C8 != -1)
    swift_once(&qword_10119C6C8, sub_1006CA874);
  v31[0] = qword_10124D7E0;
  v29 = sub_1000E4360();
  return ScaledMetric.init(wrappedValue:)(v31, &type metadata for CGFloat, v29);
}

uint64_t sub_1006BF350@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;

  *(_QWORD *)a5 = ObservedObject.init(wrappedValue:)(a1, a3, *(_QWORD *)(a4 + 8));
  *(_QWORD *)(a5 + 8) = v9;
  *(_BYTE *)(a5 + 16) = a2;
  v11 = (_QWORD *)(a5 + *(int *)(type metadata accessor for Tracklist.VerticalTextStack(0, a3, a4, v10) + 40));
  *v11 = swift_getKeyPath("\b^4");
  v12 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  return swift_storeEnumTagMultiPayload(v11, v12, 0);
}

uint64_t sub_1006BF3D4@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X4>, uint64_t a6@<X5>, uint64_t (*a7)(_QWORD, _QWORD)@<X6>, uint64_t a8@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t TupleTypeMetadata2;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, _QWORD *);
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(_BYTE *, uint64_t, uint64_t);
  uint64_t v62;
  void (*v63)(uint64_t, _QWORD *);
  uint64_t v64;
  __n128 v65;
  int v66;
  uint64_t v67;
  __int128 v68;
  uint64_t v69;
  __int16 v70;
  char v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  _BYTE *v76;
  void (*v77)(_BYTE *, uint64_t, uint64_t);
  uint64_t v78;
  unint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  _BYTE *v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  char v86;
  _BYTE *v87;
  _BYTE *v88;
  uint64_t v89;
  uint64_t (*v90)(uint64_t, _QWORD *);
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  _BYTE *v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  double v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t WitnessTable;
  _BYTE *v106;
  __n128 v107;
  uint64_t v108;
  char v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  _BYTE *v120;
  __n128 v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  uint64_t v130;
  char v131;
  __int128 v132;
  uint64_t v133;
  _BYTE *v134;
  uint64_t v135;
  _BYTE *v136;
  uint64_t v137;
  void (*v138)(_BYTE *, uint64_t);
  _BYTE *v139;
  _BYTE *v140;
  void (*v141)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v142;
  uint64_t v143;
  _BYTE *v144;
  void (*v145)(uint64_t, uint64_t);
  _BYTE v147[12];
  int v148;
  uint64_t v149;
  uint64_t v150;
  _BYTE *v151;
  uint64_t v152;
  uint64_t v153;
  _BYTE *v154;
  _BYTE *v155;
  _OWORD *v156;
  uint64_t v157;
  _BYTE *v158;
  uint64_t v159;
  uint64_t v160;
  _BYTE *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  _BYTE *v165;
  _BYTE *v166;
  uint64_t v167;
  _BYTE *v168;
  uint64_t v169;
  _BYTE *v170;
  uint64_t v171;
  uint64_t v172;
  int v173;
  _BYTE *v174;
  uint64_t v175;
  uint64_t v176;
  _BYTE *v177;
  _BYTE *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t (*v181)(_QWORD, _QWORD);
  _BYTE *v182;
  _QWORD *v183;
  _BYTE *v184;
  _BYTE *v185;
  uint64_t v186;
  uint64_t v187;
  unint64_t v188;
  unint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  _QWORD v193[6];
  uint64_t v194;
  char v195;
  uint64_t v196;
  char v197;
  uint64_t v198;
  char v199;
  uint64_t v200;
  _BYTE *v201;
  uint64_t v202;
  _BYTE *v203;
  _BYTE *v204;
  uint64_t v205;
  uint64_t (*v206)(_QWORD, _QWORD);
  _BYTE *v207;
  uint64_t v208;
  uint64_t v209;
  char v210;
  uint64_t v211[11];
  _BYTE *v212;
  unsigned __int8 v213;
  uint64_t v214;
  unsigned __int8 v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  unsigned __int8 v219;
  uint64_t v220;
  unsigned __int8 v221;
  uint64_t v222;
  _BYTE *v223;
  _OWORD v224[2];
  _OWORD v225[3];

  v181 = a7;
  v182 = (_BYTE *)a4;
  v173 = a2;
  v169 = a8;
  v202 = a3;
  v203 = (_BYTE *)a4;
  v204 = a5;
  v205 = a6;
  v172 = a6;
  v206 = a7;
  v171 = type metadata accessor for Tracklist.TrailingIcons(0, (uint64_t)&v202);
  v167 = *(_QWORD *)(v171 - 8);
  __chkstk_darwin(v171);
  v170 = &v147[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  v168 = &v147[-v14];
  v15 = sub_100044B54(&qword_1011C3A20);
  v17 = type metadata accessor for Tracklist.VerticalTextStack(255, a3, (uint64_t)a5, v16);
  v19 = type metadata accessor for Tracklist.HorizontalTextStack(255, a3, (uint64_t)a5, v18);
  v20 = type metadata accessor for _ConditionalContent(255, v17, v19);
  v21 = type metadata accessor for Group(255, v20);
  v22 = type metadata accessor for ModifiedContent(255, v21, &type metadata for _FlexFrameLayout);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v15, v22, 0, 0);
  v157 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  v24 = type metadata accessor for Group(0, v157);
  v159 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v158 = &v147[-v25];
  v160 = v26;
  v27 = type metadata accessor for ModifiedContent(0, v26, &type metadata for SeparatorAlignmentModifier);
  v162 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v174 = &v147[-v28];
  v29 = sub_100044B54(&qword_1011B5800);
  v163 = v27;
  v179 = type metadata accessor for ModifiedContent(0, v27, v29);
  v164 = *(_QWORD *)(v179 - 8);
  __chkstk_darwin(v179);
  v166 = &v147[-((v30 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v31);
  v161 = &v147[-v32];
  __chkstk_darwin(v33);
  v178 = &v147[-v34];
  v35 = sub_100007E8C(&qword_1011C3A70);
  __chkstk_darwin(v35);
  v155 = &v147[-((v36 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v176 = sub_100007E8C(&qword_1011C3A10);
  __chkstk_darwin(v176);
  v165 = &v147[-((v37 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v38);
  v154 = &v147[-v39];
  __chkstk_darwin(v40);
  v185 = &v147[-v41];
  v42 = type metadata accessor for Font.TextStyle(0);
  v152 = *(_QWORD *)(v42 - 8);
  v153 = v42;
  __chkstk_darwin(v42);
  v151 = &v147[-((v43 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v44 = sub_100007E8C((uint64_t *)&unk_1011C6790);
  __chkstk_darwin(v44);
  v46 = &v147[-((v45 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v47);
  v49 = &v147[-v48];
  v175 = type metadata accessor for Tracklist.LeadingIcon(0);
  __chkstk_darwin(v175);
  v177 = &v147[-((v50 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v51);
  v53 = &v147[-v52];
  __chkstk_darwin(v54);
  v184 = &v147[-v55];
  v202 = a3;
  v203 = v182;
  v204 = a5;
  v205 = a6;
  v206 = v181;
  v180 = type metadata accessor for Tracklist.Cell(0, (uint64_t)&v202);
  v56 = a1;
  LODWORD(v150) = sub_1006BEF48(v180);
  v57 = *(_QWORD *)(a1 + 8);
  v58 = (void (*)(uint64_t, _QWORD *))a5[3];
  swift_unknownObjectRetain(v57, v59);
  v186 = a3;
  v183 = a5;
  v58(a3, a5);
  swift_unknownObjectRelease(v57);
  v60 = type metadata accessor for ArtworkImage.Info(0);
  v61 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 48);
  LODWORD(v149) = v61(v49, 1, v60) != 1;
  sub_10004FF60((uint64_t)v49, (uint64_t *)&unk_1011C6790);
  v62 = *(_QWORD *)(v56 + 8);
  v63 = (void (*)(uint64_t, _QWORD *))a5[12];
  swift_unknownObjectRetain(v62, v64);
  v63(a3, a5);
  v65 = swift_unknownObjectRelease(v62);
  v66 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t, __n128))v61)(v46, 1, v60, v65);
  v67 = v56;
  LOBYTE(v62) = v66 != 1;
  sub_10004FF60((uint64_t)v46, (uint64_t *)&unk_1011C6790);
  v68 = *(_OWORD *)(v56 + 64);
  v156 = (_OWORD *)(v56 + 64);
  v69 = *(_QWORD *)(v56 + 80);
  v70 = *(_WORD *)(v56 + 88);
  v71 = *(_BYTE *)(v56 + 90);
  v72 = *(_QWORD *)(v56 + 112);
  v73 = *(_BYTE *)(v56 + 120);
  *v53 = v150;
  v53[1] = v149;
  v53[2] = v62;
  v148 = v173 & 1;
  v53[3] = v173;
  *(_OWORD *)(v53 + 8) = v68;
  *((_QWORD *)v53 + 3) = v69;
  *((_WORD *)v53 + 16) = v70;
  v53[34] = v71;
  *(_OWORD *)(v53 + 40) = *(_OWORD *)(v56 + 96);
  *((_QWORD *)v53 + 7) = v72;
  v53[64] = v73;
  v74 = v175;
  v202 = 0x4020000000000000;
  v75 = enum case for Font.TextStyle.largeTitle(_:);
  v76 = v151;
  v77 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v152 + 104);
  v78 = v153;
  v77(v151, enum case for Font.TextStyle.largeTitle(_:), v153);
  v79 = sub_1000E4360();
  ScaledMetric.init(wrappedValue:relativeTo:)(&v202, v76, &type metadata for CGFloat, v79);
  v202 = 0x4018000000000000;
  v77(v76, v75, v78);
  ScaledMetric.init(wrappedValue:relativeTo:)(&v202, v76, &type metadata for CGFloat, v79);
  v80 = &v53[*(int *)(v74 + 44)];
  *v80 = swift_getKeyPath("\b^4");
  v81 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  swift_storeEnumTagMultiPayload(v80, v81, 0);
  sub_10005B6C0((uint64_t)v53, (uint64_t)v184, type metadata accessor for Tracklist.LeadingIcon);
  v82 = v155;
  v83 = v186;
  v84 = v183;
  sub_1006C0108(v67, v173, v186, (uint64_t)v182, v183, v172, (uint64_t)v181, (uint64_t)v155);
  LOBYTE(v78) = *(_BYTE *)(v67 + 17);
  v85 = sub_1006C091C(v180);
  LOBYTE(v75) = v86;
  v87 = v154;
  sub_10004A160((uint64_t)v82, (uint64_t)v154, &qword_1011C3A70);
  v88 = &v87[*(int *)(v176 + 36)];
  *v88 = v78;
  v88[1] = 1;
  *((_QWORD *)v88 + 1) = v85;
  v88[16] = v75 & 1;
  sub_10004FF60((uint64_t)v82, &qword_1011C3A70);
  sub_100065228((uint64_t)v87, (uint64_t)v185, &qword_1011C3A10);
  v89 = *(_QWORD *)(v67 + 8);
  v90 = (uint64_t (*)(uint64_t, _QWORD *))v84[5];
  swift_unknownObjectRetain(v89, v91);
  LODWORD(v90) = v90(v83, v84);
  swift_unknownObjectRelease(v89);
  v93 = 0;
  v94 = 0;
  v95 = 0;
  v96 = 0;
  v97 = 0;
  v98 = 0;
  v99 = 0;
  v173 = (int)v90;
  if ((v90 & 1) == 0)
  {
    v100 = sub_1006C0B30(v180);
    v102 = static Alignment.center.getter(v101);
    v93 = 1;
    v92 = _FrameLayout.init(width:height:alignment:)(&v212, *(_QWORD *)&v100, 0, 0, 1, v102, v103);
    v94 = v212;
    v95 = v213;
    v96 = v214;
    v97 = v215;
    v98 = v216;
    v99 = v217;
  }
  v149 = v99;
  v150 = v98;
  v151 = (_BYTE *)v97;
  v152 = v96;
  v153 = v95;
  v154 = v94;
  v155 = (_BYTE *)v93;
  __chkstk_darwin(v92);
  *(_QWORD *)&v147[-64] = v186;
  *(_QWORD *)&v147[-56] = v182;
  *(_QWORD *)&v147[-48] = v183;
  *(_QWORD *)&v147[-40] = v172;
  *(_QWORD *)&v147[-32] = v181;
  *(_QWORD *)&v147[-24] = v67;
  v147[-16] = v148;
  v104 = v157;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v157);
  v106 = v158;
  Group<A>.init(content:)(sub_1006D062C, &v147[-80], v104, WitnessTable, v107);
  LOBYTE(v104) = *(_BYTE *)(v67 + 17);
  v108 = sub_1006C176C(v180);
  v110 = v109;
  v211[10] = WitnessTable;
  v111 = v160;
  v112 = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v160);
  LOWORD(v202) = v104;
  v203 = (_BYTE *)v108;
  LOBYTE(v204) = v110 & 1;
  View.modifier<A>(_:)(&v202, v111, &type metadata for SeparatorAlignmentModifier, v112);
  (*(void (**)(_BYTE *, uint64_t))(v159 + 8))(v106, v111);
  v113 = (uint64_t)v178;
  v114 = v179;
  if (*(_BYTE *)(v67 + 16) == 1)
  {
    if (qword_10119C6C0 != -1)
      swift_once(&qword_10119C6C0, sub_1006CA810);
    v115 = qword_10124D7D8;
    swift_retain();
  }
  else
  {
    v115 = 0;
  }
  v116 = sub_1006D0638();
  v211[8] = v112;
  v211[9] = v116;
  v117 = v163;
  v118 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v163);
  v119 = (uint64_t)v161;
  v120 = v174;
  View.foregroundColor(_:)(v115, v117, v118);
  v121 = swift_release();
  (*(void (**)(_BYTE *, uint64_t, __n128))(v162 + 8))(v120, v117, v121);
  v122 = sub_100049F28((unint64_t *)&qword_1011A4620, &qword_1011B5800, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  v211[6] = v118;
  v211[7] = v122;
  v182 = (_BYTE *)swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v114);
  sub_10081EB14(v119, v114, v113);
  v123 = v164;
  v181 = *(uint64_t (**)(_QWORD, _QWORD))(v164 + 8);
  v124 = v181(v119, v114);
  if (qword_10119C6A0 != -1)
    v124 = swift_once(&qword_10119C6A0, sub_1006CA6A8);
  v125 = qword_10124D7B8;
  v126 = static Alignment.center.getter(v124);
  _FrameLayout.init(width:height:alignment:)(&v218, v125, 0, 0, 1, v126, v127);
  v180 = v218;
  LODWORD(v174) = v219;
  v172 = v220;
  LODWORD(v163) = v221;
  v161 = v223;
  v162 = v222;
  v128 = *(_QWORD *)(v67 + 8);
  v129 = *(_QWORD **)(v67 + 32);
  v130 = *(_QWORD *)(v67 + 48);
  v131 = *(_BYTE *)(v67 + 16);
  v132 = v156[1];
  v224[0] = *v156;
  v224[1] = v132;
  v225[0] = v156[2];
  *(_OWORD *)((char *)v225 + 9) = *(_OWORD *)((char *)v156 + 41);
  swift_unknownObjectRetain(v128, v133);
  swift_retain();
  swift_retain();
  v134 = v170;
  sub_1006BF198(v128, v129, v130, v131, v224, v186, (uint64_t)v183, (uint64_t)v170);
  v135 = v171;
  v186 = swift_getWitnessTable(&unk_100ECAF00, v171);
  v136 = v168;
  sub_10081EB14((uint64_t)v134, v135, (uint64_t)v168);
  v137 = v167;
  v138 = *(void (**)(_BYTE *, uint64_t))(v167 + 8);
  v138(v134, v135);
  v139 = v177;
  sub_10005B704((uint64_t)v184, (uint64_t)v177, type metadata accessor for Tracklist.LeadingIcon);
  v211[0] = (uint64_t)v139;
  v140 = v165;
  sub_10004A160((uint64_t)v185, (uint64_t)v165, &qword_1011C3A10);
  v202 = 0;
  v203 = v155;
  v204 = v154;
  v205 = v153;
  v206 = (uint64_t (*)(_QWORD, _QWORD))v152;
  v207 = v151;
  v208 = v150;
  v209 = v149;
  v210 = v173 & 1;
  v211[1] = (uint64_t)v140;
  v211[2] = (uint64_t)&v202;
  v141 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v123 + 16);
  v142 = (uint64_t)v166;
  v144 = v178;
  v143 = v179;
  v141(v166, v178, v179);
  v194 = 0;
  v195 = 1;
  v196 = v180;
  v197 = (char)v174;
  v198 = v172;
  v199 = v163;
  v200 = v162;
  v201 = v161;
  v211[3] = v142;
  v211[4] = (uint64_t)&v194;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v137 + 16))(v134, v136, v135);
  v211[5] = (uint64_t)v134;
  v193[0] = v175;
  v193[1] = v176;
  v193[2] = sub_100007E8C(&qword_1011C3A18);
  v193[3] = v143;
  v193[4] = sub_100007E8C(&qword_1011B7088);
  v193[5] = v135;
  v187 = sub_100048748(&qword_1011C3A38, type metadata accessor for Tracklist.LeadingIcon, (uint64_t)&unk_100ECAEB0);
  v188 = sub_1006D067C();
  v189 = sub_1006D0764();
  v190 = (uint64_t)v182;
  v191 = sub_1004D9D80(&qword_1011B7170, &qword_1011B7088);
  v192 = v186;
  sub_1004D49B8(v211, 6uLL, (uint64_t)v193);
  v138(v136, v135);
  v145 = (void (*)(uint64_t, uint64_t))v181;
  v181(v144, v143);
  sub_10004FF60((uint64_t)v185, &qword_1011C3A10);
  sub_10005B748((uint64_t)v184, type metadata accessor for Tracklist.LeadingIcon);
  v138(v134, v135);
  v145(v142, v143);
  sub_10004FF60((uint64_t)v140, &qword_1011C3A10);
  return sub_10005B748((uint64_t)v177, type metadata accessor for Tracklist.LeadingIcon);
}

uint64_t sub_1006C0108@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, _QWORD *);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned __int8 v41;
  unsigned __int8 v42;
  __n128 v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  void (*v49)(uint64_t, _QWORD *);
  __n128 v50;
  int v51;
  uint64_t v52;
  _BYTE *v53;
  uint64_t v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE *v59;
  uint64_t v60;
  void (*v61)(uint64_t, _QWORD *);
  int *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(uint64_t, _QWORD *);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  double v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _BYTE *v83;
  double *v84;
  uint64_t v85;
  _BYTE *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _BYTE *v90;
  _BYTE *v91;
  _BYTE *v92;
  uint64_t v93;
  uint64_t v94;
  _BYTE v96[4];
  int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _BYTE *v101;
  _BYTE *v102;
  _BYTE *v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  _BYTE *v107;
  _BYTE *v108;
  uint64_t v109;
  _BYTE *v110;
  _BYTE *v111;
  uint64_t v112;
  _BYTE *v113;
  _BYTE *v114;
  _BYTE *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  _QWORD *v120;
  uint64_t v121;
  uint64_t v122;

  v97 = a2;
  v116 = a8;
  v117 = type metadata accessor for Tracklist.LeadingNumber(0);
  v106 = *(_QWORD **)(v117 - 8);
  __chkstk_darwin(v117);
  v103 = &v96[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v100 = type metadata accessor for Tracklist.Artwork(0);
  __chkstk_darwin(v100);
  v102 = &v96[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v112 = sub_100007E8C(&qword_1011C3AC0);
  v109 = *(_QWORD *)(v112 - 8);
  __chkstk_darwin(v112);
  v101 = &v96[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = sub_100007E8C((uint64_t *)&unk_1011C6790);
  __chkstk_darwin(v17);
  v19 = &v96[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v105 = type metadata accessor for ArtworkImage.Info(0);
  v104 = *(_QWORD *)(v105 - 8);
  __chkstk_darwin(v105);
  v107 = &v96[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = sub_100007E8C(&qword_1011C3AC8);
  __chkstk_darwin(v21);
  v115 = &v96[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v23);
  v114 = &v96[-v24];
  v25 = sub_100007E8C(&qword_1011C3A00);
  __chkstk_darwin(v25);
  v113 = &v96[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v27);
  v108 = &v96[-v28];
  __chkstk_darwin(v29);
  v110 = &v96[-v30];
  __chkstk_darwin(v31);
  v33 = &v96[-v32];
  v118 = a3;
  v119 = a4;
  v98 = a4;
  v120 = a5;
  v121 = a6;
  v99 = a6;
  v34 = a7;
  v122 = a7;
  type metadata accessor for Tracklist.Cell(0, (uint64_t)&v118);
  v35 = a1;
  v36 = *(_QWORD *)(a1 + 8);
  v37 = (uint64_t (*)(uint64_t, _QWORD *))a5[4];
  swift_unknownObjectRetain(v36, v38);
  v39 = a3;
  v40 = v37(a3, a5);
  v42 = v41;
  LODWORD(a4) = v41;
  v43 = swift_unknownObjectRelease(v36);
  v111 = v33;
  if (a4 <= 0xFD)
  {
    v118 = v40;
    LOBYTE(v119) = v42;
    sub_1006C0844((uint64_t)&v118, v97 & 1, v35, v39, v98, (uint64_t)a5, v99, v34, (uint64_t)v33);
    v44 = v106;
    v45 = (_QWORD *)v106[7];
    ((void (*)(_BYTE *, _QWORD, uint64_t, uint64_t, __n128))v45)(v33, 0, 1, v117, v47);
  }
  else
  {
    v44 = v106;
    v45 = (_QWORD *)v106[7];
    ((void (*)(_BYTE *, uint64_t, uint64_t, uint64_t, __n128))v45)(v33, 1, 1, v117, v43);
  }
  v48 = *(_QWORD *)(v35 + 8);
  v49 = (void (*)(uint64_t, _QWORD *))a5[3];
  swift_unknownObjectRetain(v48, v46);
  v49(v39, a5);
  v50 = swift_unknownObjectRelease(v48);
  v51 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, __n128))(v104 + 48))(v19, 1, v105, v50);
  v52 = v35;
  v53 = v107;
  if (v51 == 1)
  {
    sub_10004FF60((uint64_t)v19, (uint64_t *)&unk_1011C6790);
    v54 = 1;
    v55 = v114;
    v57 = (uint64_t)v111;
    v56 = v112;
    v58 = (uint64_t)v110;
  }
  else
  {
    v106 = v45;
    sub_10005B6C0((uint64_t)v19, (uint64_t)v107, type metadata accessor for ArtworkImage.Info);
    v59 = v102;
    sub_10005B704((uint64_t)v53, (uint64_t)v102, type metadata accessor for ArtworkImage.Info);
    v60 = *(_QWORD *)(v52 + 8);
    v61 = (void (*)(uint64_t, _QWORD *))a5[12];
    v62 = (int *)v100;
    swift_unknownObjectRetain(v60, v63);
    v61(v39, a5);
    swift_unknownObjectRelease(v60);
    v64 = *(_QWORD *)(v52 + 8);
    v65 = (uint64_t (*)(uint64_t, _QWORD *))a5[11];
    swift_unknownObjectRetain(v64, v66);
    v67 = v65(v39, a5);
    v69 = v68;
    swift_unknownObjectRelease(v64);
    v70 = *(_QWORD *)(v52 + 56);
    v71 = (uint64_t *)&v59[v62[6]];
    *v71 = v67;
    v71[1] = v69;
    *(_QWORD *)&v59[v62[7]] = v70;
    v72 = &v59[v62[8]];
    *v72 = swift_getKeyPath("\b^4");
    v73 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    swift_storeEnumTagMultiPayload(v72, v73, 0);
    swift_retain();
    v75 = static Edge.Set.leading.getter(v74);
    if (qword_10119C670 != -1)
      swift_once(&qword_10119C670, sub_1006CA558);
    v76 = EdgeInsets.init(_all:)(*(double *)&qword_10124D778);
    v78 = v77;
    v80 = v79;
    v82 = v81;
    v83 = v101;
    sub_10005B704((uint64_t)v59, (uint64_t)v101, type metadata accessor for Tracklist.Artwork);
    v56 = v112;
    v84 = (double *)&v83[*(int *)(v112 + 36)];
    *(_BYTE *)v84 = v75;
    v84[1] = v76;
    *((_QWORD *)v84 + 2) = v78;
    *((_QWORD *)v84 + 3) = v80;
    *((_QWORD *)v84 + 4) = v82;
    *((_BYTE *)v84 + 40) = 0;
    sub_10005B748((uint64_t)v59, type metadata accessor for Tracklist.Artwork);
    sub_10005B748((uint64_t)v53, type metadata accessor for ArtworkImage.Info);
    v85 = (uint64_t)v83;
    v55 = v114;
    sub_100065228(v85, (uint64_t)v114, &qword_1011C3AC0);
    v54 = 0;
    v58 = (uint64_t)v110;
    v57 = (uint64_t)v111;
    v45 = v106;
  }
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v109 + 56))(v55, v54, 1, v56);
  v86 = v108;
  sub_10004A160(v57, (uint64_t)v108, &qword_1011C3A00);
  v87 = v117;
  if (((unsigned int (*)(_BYTE *, uint64_t, uint64_t))v44[6])(v86, 1, v117) == 1)
  {
    sub_10004FF60((uint64_t)v86, &qword_1011C3A00);
    v88 = 1;
  }
  else
  {
    v89 = (uint64_t)v86;
    v90 = v103;
    sub_10005B6C0(v89, (uint64_t)v103, type metadata accessor for Tracklist.LeadingNumber);
    sub_10005B6C0((uint64_t)v90, v58, type metadata accessor for Tracklist.LeadingNumber);
    v88 = 0;
  }
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v45)(v58, v88, 1, v87);
  v91 = v115;
  sub_10004A160((uint64_t)v55, (uint64_t)v115, &qword_1011C3AC8);
  v92 = v113;
  sub_10004A160(v58, (uint64_t)v113, &qword_1011C3A00);
  v93 = v116;
  sub_10004A160((uint64_t)v91, v116, &qword_1011C3AC8);
  v94 = sub_100007E8C(qword_1011C3AD0);
  sub_10004A160((uint64_t)v92, v93 + *(int *)(v94 + 48), &qword_1011C3A00);
  sub_10004FF60(v58, &qword_1011C3A00);
  sub_10004FF60((uint64_t)v55, &qword_1011C3AC8);
  sub_10004FF60(v57, &qword_1011C3A00);
  sub_10004FF60((uint64_t)v92, &qword_1011C3A00);
  return sub_10004FF60((uint64_t)v91, &qword_1011C3AC8);
}

uint64_t sub_1006C0844@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[5];

  v24[4] = a8;
  v14 = *(_QWORD *)a1;
  v15 = *(_BYTE *)(a1 + 8);
  v24[0] = a4;
  v24[1] = a5;
  v24[2] = a6;
  v24[3] = a7;
  type metadata accessor for Tracklist.Cell(0, (uint64_t)v24);
  v16 = *(_QWORD *)(a3 + 8);
  v17 = *(uint64_t (**)(uint64_t, uint64_t))(a6 + 88);
  swift_unknownObjectRetain(v16, v18);
  v19 = v17(a4, a6);
  v21 = v20;
  swift_unknownObjectRelease(v16);
  LOBYTE(v17) = *(_BYTE *)(a3 + 16);
  v22 = *(_QWORD *)(a3 + 56);
  swift_retain();
  return sub_1006BF084(v14, v15, a2, v19, v21, (char)v17, v22, a9);
}

uint64_t sub_1006C091C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  BOOL v15;
  char v16;
  double v17;
  double v18;
  uint64_t result;
  char v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;

  v3 = type metadata accessor for DynamicTypeSize(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v22 - v8;
  v10 = *(_QWORD *)(a1 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1006C19E4(a1, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v1, a1);
  if (!v15)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, a1);
    goto LABEL_10;
  }
  v16 = v13[17];
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, a1);
  if ((v16 & 1) != 0)
  {
LABEL_10:
    *(double *)&result = 0.0;
    return result;
  }
  if (qword_10119C6F0 != -1)
    swift_once(&qword_10119C6F0, sub_1006CAA04);
  v17 = *(double *)&qword_10124D808;
  sub_1008237B8((uint64_t)v9);
  if (qword_10119C600 != -1)
    swift_once(&qword_10119C600, sub_1006CA11C);
  if (byte_1011C36B8 == 1)
  {
    v18 = 48.0;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }
  else
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for DynamicTypeSize.accessibility3(_:), v3);
    v20 = static DynamicTypeSize.< infix(_:_:)(v9, v6);
    v21 = *(void (**)(char *, uint64_t))(v4 + 8);
    v21(v6, v3);
    if ((v20 & 1) != 0)
      v18 = 48.0;
    else
      v18 = 72.0;
    v21(v9, v3);
  }
  *(double *)&result = v17 + v18;
  return result;
}

double sub_1006C0B30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  void (*v8)(uint64_t, _QWORD *);
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  double result;
  uint64_t (*v14)(uint64_t, _QWORD *);
  uint64_t v15;
  void (*v16)(uint64_t, _QWORD *);
  uint64_t v17;
  int v18;
  uint64_t v19;

  v3 = sub_100007E8C((uint64_t *)&unk_1011C6790);
  __chkstk_darwin(v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + 8);
  v7 = *(_QWORD **)(a1 + 32);
  v8 = (void (*)(uint64_t, _QWORD *))v7[4];
  v9 = *(_QWORD *)(a1 + 16);
  swift_unknownObjectRetain(v6, v10);
  v8(v9, v7);
  LOBYTE(v8) = v11;
  swift_unknownObjectRelease(v6);
  result = 0.0;
  if ((char)v8 >= -2)
  {
    v14 = (uint64_t (*)(uint64_t, _QWORD *))v7[5];
    swift_unknownObjectRetain(v6, v12);
    LOBYTE(v14) = v14(v9, v7);
    swift_unknownObjectRelease(v6);
    if ((v14 & 1) != 0)
    {
      if (qword_10119C648 != -1)
        swift_once(&qword_10119C648, sub_1006CA3B8);
      return *(double *)&qword_10124D750;
    }
    else
    {
      v16 = (void (*)(uint64_t, _QWORD *))v7[3];
      swift_unknownObjectRetain(v6, v15);
      v16(v9, v7);
      swift_unknownObjectRelease(v6);
      v17 = type metadata accessor for ArtworkImage.Info(0);
      v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v5, 1, v17);
      sub_10004FF60((uint64_t)v5, (uint64_t *)&unk_1011C6790);
      if (v18 == 1)
      {
        if (qword_10119C690 != -1)
          swift_once(&qword_10119C690, sub_1006CA5F8);
        return *(double *)&qword_10124D7A8;
      }
      else
      {
        if (qword_10119C678 != -1)
          swift_once(&qword_10119C678, sub_1006CA5B0);
        return *(double *)&qword_10124D780;
      }
    }
  }
  return result;
}

uint64_t sub_1006C0CF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  _QWORD *v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t WitnessTable;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  _QWORD v71[2];
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81[7];
  uint64_t v82;
  unsigned __int8 v83;
  uint64_t v84;
  unsigned __int8 v85;
  uint64_t v86;
  uint64_t v87;

  v55 = a2;
  v67 = a8;
  v59 = type metadata accessor for Tracklist.VerticalTextStack(255, a3, a5, a4);
  v58 = type metadata accessor for Tracklist.HorizontalTextStack(255, a3, a5, v14);
  v61 = type metadata accessor for _ConditionalContent(255, v59, v58);
  v15 = type metadata accessor for Group(0, v61);
  v64 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v17 = (char *)&v50 - v16;
  v18 = type metadata accessor for ModifiedContent(0, v15, &type metadata for _FlexFrameLayout);
  v65 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v20 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v66 = (uint64_t)&v50 - v22;
  v72 = a3;
  v60 = a4;
  v73 = a4;
  v74 = a5;
  v62 = a6;
  v75 = a6;
  v76 = a7;
  v63 = a7;
  v23 = type metadata accessor for Tracklist.Cell(0, (uint64_t)&v72);
  v68 = a1;
  v24 = *(_QWORD *)(a1 + 8);
  v25 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 40);
  swift_unknownObjectRetain(v24, v26);
  LOBYTE(v25) = v25(a3, a5);
  swift_unknownObjectRelease(v24);
  if ((v25 & 1) != 0)
  {
    v28 = sub_1006C0B30(v23);
    v30 = static Alignment.center.getter(v29);
    v57 = 1;
    v27 = _FrameLayout.init(width:height:alignment:)(&v82, *(_QWORD *)&v28, 0, 0, 1, v30, v31);
    v56 = v82;
    v54 = v83;
    v53 = v84;
    v52 = v85;
    v32 = v55 & 1;
    v50 = v86;
    v51 = v87;
  }
  else
  {
    v57 = 0;
    v56 = 0;
    v54 = 0;
    v53 = 0;
    v52 = 0;
    v50 = 0;
    v51 = 0;
    v32 = 2;
  }
  __chkstk_darwin(v27);
  v48 = v60;
  v49 = v62;
  WitnessTable = swift_getWitnessTable(&unk_100ECAF50, v59);
  v34 = swift_getWitnessTable(&unk_100ECAD20, v58);
  v81[5] = WitnessTable;
  v81[6] = v34;
  v35 = v61;
  v36 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v61);
  v38 = Group<A>.init(content:)(sub_1006D07E8, &v50 - 10, v35, v36, v37);
  v39 = static Alignment.center.getter(v38);
  v41 = v40;
  v81[4] = v36;
  v42 = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v15);
  LOBYTE(v49) = 1;
  LOBYTE(v48) = 1;
  View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, v48, 0, v49, v39, v41, v15, v42);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v17, v15);
  v81[2] = v42;
  v81[3] = (uint64_t)&protocol witness table for _FlexFrameLayout;
  v43 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v18);
  v44 = v66;
  sub_10081EB14((uint64_t)v20, v18, v66);
  v45 = v65;
  v46 = *(void (**)(char *, uint64_t))(v65 + 8);
  v46(v20, v18);
  v72 = v32;
  v73 = 0;
  v74 = v57;
  v75 = v56;
  v76 = v54;
  v77 = v53;
  v78 = v52;
  v79 = v50;
  v80 = v51;
  v81[0] = (uint64_t)&v72;
  (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v20, v44, v18);
  v81[1] = (uint64_t)v20;
  v71[0] = sub_100007E8C(&qword_1011C3A20);
  v71[1] = v18;
  v69 = sub_1006D080C();
  v70 = v43;
  sub_1004D49B8(v81, 2uLL, (uint64_t)v71);
  v46((char *)v44, v18);
  return ((uint64_t (*)(char *, uint64_t))v46)(v20, v18);
}

uint64_t sub_1006C1228@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t WitnessTable;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  _OWORD v68[3];

  v56 = a7;
  v55 = a6;
  v59 = a4;
  v9 = a3;
  v57 = a2;
  v63 = a8;
  v11 = type metadata accessor for Tracklist.HorizontalTextStack(0, a3, a5, a4);
  v52 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v54 = (uint64_t)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v53 = (uint64_t)&v50 - v14;
  v16 = type metadata accessor for Tracklist.VerticalTextStack(0, v9, a5, v15);
  v50 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v18 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v51 = (uint64_t)&v50 - v20;
  v21 = type metadata accessor for DynamicTypeSize(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v50 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
  __chkstk_darwin(v25);
  v27 = (char *)&v50 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for _ConditionalContent(0, v16, v11);
  v61 = *(_QWORD *)(v28 - 8);
  v62 = v28;
  __chkstk_darwin(v28);
  v60 = (char *)&v50 - v29;
  v30 = *(double *)(a1 + 96);
  *(_QWORD *)&v66 = v9;
  *((_QWORD *)&v66 + 1) = v59;
  v58 = v9;
  v59 = a5;
  *(_QWORD *)&v67 = a5;
  *((_QWORD *)&v67 + 1) = v55;
  *(_QWORD *)&v68[0] = v56;
  type metadata accessor for Tracklist.Cell(0, (uint64_t)&v66);
  sub_100824BE4((uint64_t)v27);
  sub_1008237B8((uint64_t)v24);
  LOBYTE(v9) = sub_1006CFD38((uint64_t)v27, (uint64_t)v24, v30);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  sub_10004FF60((uint64_t)v27, (uint64_t *)&unk_1011A33B8);
  if ((v9 & 1) != 0)
  {
    v32 = swift_unknownObjectRetain(*(_QWORD *)(a1 + 8), v31);
    sub_1006BF350(v32, v57 & 1, v58, v59, (uint64_t)v18);
    WitnessTable = swift_getWitnessTable(&unk_100ECAF50, v16);
    v34 = v51;
    sub_10081EB14((uint64_t)v18, v16, v51);
    v35 = *(void (**)(char *, uint64_t))(v50 + 8);
    v35(v18, v16);
    sub_1000EA744(v34, v16, (uint64_t)v18);
    v36 = swift_getWitnessTable(&unk_100ECAD20, v11);
    v37 = (uint64_t)v60;
    sub_100817130((uint64_t)v18, v16, v11, WitnessTable, v36);
    v35(v18, v16);
    v35((char *)v34, v16);
  }
  else
  {
    v38 = *(_QWORD *)(a1 + 8);
    v39 = *(_OWORD *)(a1 + 80);
    v66 = *(_OWORD *)(a1 + 64);
    v67 = v39;
    v68[0] = *(_OWORD *)(a1 + 96);
    *(_OWORD *)((char *)v68 + 9) = *(_OWORD *)(a1 + 105);
    v40 = swift_unknownObjectRetain(v38, v31);
    v41 = v54;
    sub_1006C16C0(v40, v57 & 1, &v66, v58, v59, v54);
    v42 = swift_getWitnessTable(&unk_100ECAD20, v11);
    v43 = v53;
    sub_10081EB14(v41, v11, v53);
    v44 = *(void (**)(uint64_t, uint64_t))(v52 + 8);
    v44(v41, v11);
    sub_1000EA744(v43, v11, v41);
    v45 = swift_getWitnessTable(&unk_100ECAF50, v16);
    v37 = (uint64_t)v60;
    sub_1008171F4(v41, v16, v11, v45, v42);
    v44(v41, v11);
    v44(v43, v11);
  }
  v46 = swift_getWitnessTable(&unk_100ECAF50, v16);
  v47 = swift_getWitnessTable(&unk_100ECAD20, v11);
  v64 = v46;
  v65 = v47;
  v48 = v62;
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v62);
  sub_1000EA744(v37, v48, v63);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v61 + 8))(v37, v48);
}

uint64_t sub_1006C16C0@<X0>(uint64_t a1@<X0>, char a2@<W1>, _OWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;

  *(_QWORD *)a6 = ObservedObject.init(wrappedValue:)(a1, a4, *(_QWORD *)(a5 + 8));
  *(_QWORD *)(a6 + 8) = v11;
  *(_BYTE *)(a6 + 16) = a2;
  v12 = a3[1];
  *(_OWORD *)(a6 + 24) = *a3;
  *(_OWORD *)(a6 + 40) = v12;
  *(_OWORD *)(a6 + 56) = a3[2];
  *(_OWORD *)(a6 + 65) = *(_OWORD *)((char *)a3 + 41);
  v14 = (_QWORD *)(a6 + *(int *)(type metadata accessor for Tracklist.HorizontalTextStack(0, a4, a5, v13) + 44));
  *v14 = swift_getKeyPath("\b^4");
  v15 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  return swift_storeEnumTagMultiPayload(v14, v15, 0);
}

uint64_t sub_1006C176C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  char v14;
  uint64_t v16;

  v2 = v1;
  v4 = *(_QWORD *)(a1 - 8);
  __chkstk_darwin(a1);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 8);
  v9 = *(_QWORD *)(v8 + 32);
  v10 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 40);
  v11 = *(_QWORD *)(v8 + 16);
  swift_unknownObjectRetain(v7, v12);
  LOBYTE(v9) = v10(v11, v9);
  v13 = swift_unknownObjectRelease(v7);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))(v6, v2, a1, v13);
  if ((v9 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, a1);
LABEL_7:
    if ((sub_1006BD8C4() & 1) != 0)
      return *(_QWORD *)(v2 + 80);
    else
      return 0;
  }
  v14 = v6[17];
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, a1);
  if ((v14 & 1) != 0)
    goto LABEL_7;
  if (qword_10119C6F8 != -1)
    swift_once(&qword_10119C6F8, sub_1006CAA24);
  return qword_10124D810;
}

uint64_t sub_1006C18A0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t result;

  if (*(_BYTE *)(a1 + 16) == 1)
  {
    v3 = objc_msgSend((id)*HI.Color.prominentBackgroundColor.unsafeMutableAddressor(), "colorWithAlphaComponent:", 0.22);
    result = Color.init(_:)(v3);
  }
  else
  {
    result = 0;
  }
  *a2 = result;
  return result;
}

uint64_t sub_1006C18FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD v19[5];

  v19[0] = a2;
  v19[1] = a3;
  v19[2] = a4;
  v19[3] = a5;
  v19[4] = a6;
  type metadata accessor for Tracklist.Cell(0, (uint64_t)v19);
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 104);
  swift_unknownObjectRetain(v11, v13);
  v14 = v12(a2, a4);
  v16 = v15;
  swift_unknownObjectRelease(v11);
  *a7 = v14;
  a7[1] = v16;
  _s17ContextMenuButtonVMa(0);
  v19[0] = 0x4046000000000000;
  v17 = sub_1000E4360();
  ScaledMetric.init(wrappedValue:)(v19, &type metadata for CGFloat, v17);
  v19[0] = 0x403C000000000000;
  return ScaledMetric.init(wrappedValue:)(v19, &type metadata for CGFloat, v17);
}

BOOL sub_1006C19E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  char v7;

  v3 = *(_QWORD *)(v2 + 8);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(void (**)(uint64_t, uint64_t))(v4 + 32);
  v6 = *(_QWORD *)(a1 + 16);
  swift_unknownObjectRetain(v3, a2);
  v5(v6, v4);
  LOBYTE(v4) = v7;
  swift_unknownObjectRelease(v3);
  return (char)v4 < -2;
}

uint64_t sub_1006C1A44@<X0>(uint64_t a1@<X8>)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  double v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  _OWORD *v44;
  __int128 v45;
  uint64_t v46;
  char v47;
  double v48;
  uint64_t v49;
  double v50;
  double v51;
  uint64_t v52;
  int v53;
  double v54;
  double v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  double *v62;
  uint64_t v63;
  int v64;
  char v65;
  uint64_t v66;
  _BYTE *v67;
  void (*v68)(_BYTE *, uint64_t);
  double v69;
  uint64_t v70;
  uint64_t v71;
  _BYTE *v72;
  char v73;
  _BYTE *v74;
  BOOL v75;
  _BYTE *v76;
  uint64_t v77;
  double v78;
  _BYTE *v79;
  char v80;
  double v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  double *v88;
  double v89;
  uint64_t v90;
  _BYTE *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _BYTE v95[12];
  int v96;
  uint64_t v97;
  _BYTE *v98;
  uint64_t v99;
  _BYTE *v100;
  _BYTE *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _BYTE *v105;
  uint64_t v106;
  uint64_t v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;

  v2 = v1;
  v107 = a1;
  v3 = sub_100007E8C(&qword_1011C3F10);
  __chkstk_darwin(v3);
  v5 = &v95[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v102 = type metadata accessor for DynamicTypeSize(0);
  v104 = *(_QWORD *)(v102 - 8);
  __chkstk_darwin(v102);
  v101 = &v95[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v100 = &v95[-v8];
  __chkstk_darwin(v9);
  v105 = &v95[-v10];
  v11 = sub_100007E8C(&qword_1011C3F18);
  __chkstk_darwin(v11);
  v13 = &v95[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = sub_100007E8C(&qword_1011C3F20);
  __chkstk_darwin(v14);
  v16 = &v95[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = sub_100007E8C(&qword_1011C3F28);
  __chkstk_darwin(v17);
  v19 = &v95[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v106 = sub_100007E8C(&qword_1011C3F30);
  __chkstk_darwin(v106);
  v21 = &v95[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v22 = sub_100007E8C(&qword_1011C3F38);
  __chkstk_darwin(v22);
  __chkstk_darwin(v23);
  v27 = *v2;
  if (v27 == 2)
  {
    v28 = *((_QWORD *)v2 + 3);
    v29 = static Alignment.center.getter(v24);
    _FrameLayout.init(width:height:alignment:)(&v108, v28, 0, 0, 1, v29, v30);
    v31 = v108;
    v32 = BYTE8(v108);
    v33 = v109;
    v34 = BYTE8(v109);
    *(_QWORD *)v5 = 0;
    v5[8] = 1;
    *((_QWORD *)v5 + 2) = v31;
    v5[24] = v32;
    *((_QWORD *)v5 + 4) = v33;
    v5[40] = v34;
    *((_OWORD *)v5 + 3) = v110;
    swift_storeEnumTagMultiPayload(v5, v3, 1);
    v35 = sub_100007E8C(&qword_1011B7088);
    v36 = sub_1006D7A98();
    v37 = sub_1004D9D80(&qword_1011B7170, &qword_1011B7088);
    return _ConditionalContent<>.init(storage:)(v5, v22, v35, v36, v37);
  }
  else
  {
    v97 = v26;
    v98 = &v95[-v25];
    v103 = v22;
    v99 = v3;
    v39 = sub_1006C223C(v27 & 1, (uint64_t)v13);
    v40 = *((double *)v2 + 3);
    if (qword_10119C618 != -1)
      v39 = swift_once(&qword_10119C618, sub_1006CA1BC);
    if (v40 >= *(double *)&qword_10124D720)
    {
      v41 = v2[1];
      if (qword_10119C600 != -1)
        v39 = swift_once(&qword_10119C600, sub_1006CA11C);
      if ((byte_1011C36B8 & 1) != 0)
      {
        v40 = *(double *)&qword_10124D720;
      }
      else if (v41)
      {
        v40 = 19.0;
      }
      else
      {
        v40 = 17.0;
      }
    }
    v42 = static Alignment.center.getter(v39);
    _FrameLayout.init(width:height:alignment:)(&v108, *(_QWORD *)&v40, 0, 0, 1, v42, v43);
    sub_10004A160((uint64_t)v13, (uint64_t)v16, &qword_1011C3F18);
    v44 = &v16[*(int *)(v14 + 36)];
    v45 = v109;
    *v44 = v108;
    v44[1] = v45;
    v44[2] = v110;
    v46 = sub_10004FF60((uint64_t)v13, &qword_1011C3F18);
    v47 = static Edge.Set.leading.getter(v46);
    v48 = *((double *)v2 + 3);
    v49 = qword_10124D720;
    v50 = 0.0;
    v51 = 0.0;
    v52 = v103;
    if (v48 >= *(double *)&qword_10124D720)
    {
      v53 = v2[1];
      if (qword_10119C600 != -1)
      {
        swift_once(&qword_10119C600, sub_1006CA11C);
        v49 = qword_10124D720;
      }
      v54 = 17.0;
      if (v53)
        v54 = 19.0;
      if (byte_1011C36B8)
        v54 = *(double *)&v49;
      v51 = v48 - v54;
    }
    v55 = EdgeInsets.init(_all:)(v51);
    v57 = v56;
    v59 = v58;
    v61 = v60;
    sub_10004A160((uint64_t)v16, (uint64_t)v19, &qword_1011C3F20);
    v62 = (double *)&v19[*(int *)(v17 + 36)];
    *(_BYTE *)v62 = v47;
    v62[1] = v55;
    *((_QWORD *)v62 + 2) = v57;
    *((_QWORD *)v62 + 3) = v59;
    *((_QWORD *)v62 + 4) = v61;
    *((_BYTE *)v62 + 40) = 0;
    v63 = sub_10004FF60((uint64_t)v16, &qword_1011C3F20);
    v64 = static Edge.Set.bottom.getter(v63);
    v65 = v64;
    v66 = v99;
    if (v2[2] == 1)
    {
      v96 = v64;
      type metadata accessor for Tracklist.LeadingIcon(0);
      v67 = v105;
      sub_1008237B8((uint64_t)v105);
      if (qword_10119C600 != -1)
        swift_once(&qword_10119C600, sub_1006CA11C);
      if (byte_1011C36B8 == 1)
      {
        v68 = *(void (**)(_BYTE *, uint64_t))(v104 + 8);
        v69 = 48.0;
        v70 = v102;
        v68(v67, v102);
      }
      else
      {
        v71 = v104;
        v72 = v100;
        v70 = v102;
        (*(void (**)(_BYTE *, _QWORD, uint64_t))(v104 + 104))(v100, enum case for DynamicTypeSize.accessibility3(_:), v102);
        v73 = static DynamicTypeSize.< infix(_:_:)(v105, v72);
        v68 = *(void (**)(_BYTE *, uint64_t))(v71 + 8);
        v74 = v105;
        v68(v72, v70);
        v75 = (v73 & 1) == 0;
        v66 = v99;
        if (v75)
          v69 = 72.0;
        else
          v69 = 48.0;
        v68(v74, v70);
      }
      v76 = v101;
      sub_1008237B8((uint64_t)v101);
      v77 = v70;
      if ((byte_1011C36B8 & 1) != 0)
      {
        v78 = 32.0;
      }
      else
      {
        v79 = v100;
        (*(void (**)(_BYTE *, _QWORD, uint64_t))(v104 + 104))(v100, enum case for DynamicTypeSize.accessibility3(_:), v77);
        v80 = static DynamicTypeSize.< infix(_:_:)(v76, v79);
        v68(v79, v77);
        if ((v80 & 1) != 0)
          v78 = 32.0;
        else
          v78 = 48.0;
      }
      v52 = v103;
      v68(v76, v77);
      v50 = v69 - v78;
      v65 = v96;
    }
    v81 = EdgeInsets.init(_all:)(v50);
    v83 = v82;
    v85 = v84;
    v87 = v86;
    sub_10004A160((uint64_t)v19, (uint64_t)v21, &qword_1011C3F28);
    v88 = (double *)&v21[*(int *)(v106 + 36)];
    *(_BYTE *)v88 = v65;
    v88[1] = v81;
    *((_QWORD *)v88 + 2) = v83;
    *((_QWORD *)v88 + 3) = v85;
    *((_QWORD *)v88 + 4) = v87;
    *((_BYTE *)v88 + 40) = 0;
    sub_10004FF60((uint64_t)v19, &qword_1011C3F28);
    if (v2[3])
      v89 = 1.0;
    else
      v89 = 0.5;
    v90 = v97;
    sub_10004A160((uint64_t)v21, v97, &qword_1011C3F30);
    *(double *)(v90 + *(int *)(v52 + 36)) = v89;
    sub_10004FF60((uint64_t)v21, &qword_1011C3F30);
    v91 = v98;
    sub_100065228(v90, (uint64_t)v98, &qword_1011C3F38);
    sub_10004A160((uint64_t)v91, (uint64_t)v5, &qword_1011C3F38);
    swift_storeEnumTagMultiPayload(v5, v66, 0);
    v92 = sub_100007E8C(&qword_1011B7088);
    v93 = sub_1006D7A98();
    v94 = sub_1004D9D80(&qword_1011B7170, &qword_1011B7088);
    _ConditionalContent<>.init(storage:)(v5, v52, v92, v93, v94);
    return sub_10004FF60((uint64_t)v91, &qword_1011C3F38);
  }
}

uint64_t sub_1006C223C@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  double v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  double v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t KeyPath;
  uint64_t *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  double v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v60 = a2;
  v58 = sub_100007E8C(&qword_1011C3FA8);
  __chkstk_darwin(v58);
  v59 = (uint64_t)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_1011C4F30);
  __chkstk_darwin(v4);
  v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_100007E8C(&qword_1011C3F90);
  __chkstk_darwin(v56);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_100007E8C(&qword_1011C3F80);
  __chkstk_darwin(v57);
  v10 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v55 - v12;
  if ((a1 & 1) != 0)
  {
    v55 = (char *)&v55 - v12;
    v36 = Image.init(systemName:)(0x662E656C63726963, 0xEB000000006C6C69);
    type metadata accessor for Tracklist.LeadingIcon(0);
    v37 = sub_100007E8C(qword_1011C9550);
    v38 = ScaledMetric.wrappedValue.getter(&v61, v37);
    v39 = v61;
    v40 = static Font.Weight.bold.getter(v38);
    v41 = type metadata accessor for Font.Design(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v6, 1, 1, v41);
    v42 = static Font.system(size:weight:design:)(*(_QWORD *)&v40, 0, v6, v39);
    sub_10004FF60((uint64_t)v6, &qword_1011C4F30);
    KeyPath = swift_getKeyPath(&unk_100ECABB0);
    if (qword_10119C628 != -1)
      swift_once(&qword_10119C628, sub_1006CA2AC);
    v61 = *(double *)&v36;
    v62 = KeyPath;
    v63 = v42;
    v64 = qword_10124D730;
    swift_retain();
    v44 = AccessibilityString.popularBadgeLabel.unsafeMutableAddressor();
    v45 = *v44;
    v46 = v44[1];
    swift_bridgeObjectRetain();
    v47 = sub_100007E8C(&qword_1011C3FA0);
    v48 = sub_1006D7CFC();
    View.accessibilityLabel(_:)(v45, v46, v47, v48);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    v49 = AccessibilityIdentifier.trackListCellPopularBadge.unsafeMutableAddressor();
    v50 = *v49;
    v51 = v49[1];
    v52 = sub_1006D7C78();
    swift_bridgeObjectRetain();
    View.accessibilityIdentifier(_:)(v50, v51, v56, v52);
    swift_bridgeObjectRelease();
    sub_10004FF60((uint64_t)v8, &qword_1011C3F90);
    v13 = v55;
    sub_100065228((uint64_t)v10, (uint64_t)v55, &qword_1011C3F80);
    v32 = v59;
    sub_10004A160((uint64_t)v13, v59, &qword_1011C3F80);
    v33 = v32;
    v34 = v58;
    v35 = 1;
  }
  else
  {
    v55 = v10;
    v14 = Image.init(systemName:)(0x6C69662E72617473, 0xE90000000000006CLL);
    type metadata accessor for Tracklist.LeadingIcon(0);
    v15 = sub_100007E8C(qword_1011C9550);
    v16 = ScaledMetric.wrappedValue.getter(&v61, v15);
    v17 = v61;
    v18 = static Font.Weight.bold.getter(v16);
    v19 = type metadata accessor for Font.Design(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v6, 1, 1, v19);
    v20 = static Font.system(size:weight:design:)(*(_QWORD *)&v18, 0, v6, v17);
    sub_10004FF60((uint64_t)v6, &qword_1011C4F30);
    v21 = swift_getKeyPath(&unk_100ECABB0);
    if (qword_10119C620 != -1)
      swift_once(&qword_10119C620, sub_1006CA214);
    v61 = *(double *)&v14;
    v62 = v21;
    v63 = v20;
    v64 = qword_10124D728;
    swift_retain();
    v22 = AccessibilityString.favoriteBadgeLabel.unsafeMutableAddressor();
    v24 = *v22;
    v23 = v22[1];
    swift_bridgeObjectRetain();
    v25 = sub_100007E8C(&qword_1011C3FA0);
    v26 = sub_1006D7CFC();
    View.accessibilityLabel(_:)(v24, v23, v25, v26);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    v27 = AccessibilityIdentifier.trackListCellFavoriteBadge.unsafeMutableAddressor();
    v28 = *v27;
    v29 = v27[1];
    v30 = sub_1006D7C78();
    swift_bridgeObjectRetain();
    v31 = (uint64_t)v55;
    View.accessibilityIdentifier(_:)(v28, v29, v56, v30);
    swift_bridgeObjectRelease();
    sub_10004FF60((uint64_t)v8, &qword_1011C3F90);
    sub_100065228(v31, (uint64_t)v13, &qword_1011C3F80);
    v32 = v59;
    sub_10004A160((uint64_t)v13, v59, &qword_1011C3F80);
    v33 = v32;
    v34 = v58;
    v35 = 0;
  }
  swift_storeEnumTagMultiPayload(v33, v34, v35);
  v53 = sub_1006D7BF4();
  _ConditionalContent<>.init(storage:)(v32, v57, v57, v53, v53);
  return sub_10004FF60((uint64_t)v13, &qword_1011C3F80);
}

uint64_t sub_1006C279C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  int *v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  double v46;
  char v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  double v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t KeyPath;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __n128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  unint64_t v77;
  char *v78;
  uint64_t *v79;
  uint64_t v80;
  double v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t OpaqueTypeConformance2;
  char *v85;
  char v86;
  uint64_t v87;
  __n128 v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  __n128 v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v125;
  uint64_t v126;
  uint64_t *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  unint64_t v177;
  char v178[8];

  v173 = a1;
  v169 = sub_100007E8C(&qword_1011C3FB8);
  __chkstk_darwin(v169);
  v172 = (uint64_t)&v125 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v171 = sub_100007E8C(&qword_1011C3FC0);
  __chkstk_darwin(v171);
  v127 = (uint64_t *)((char *)&v125 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v174 = type metadata accessor for ArtworkImage.Info(0);
  v142 = *(_QWORD *)(v174 - 8);
  __chkstk_darwin(v174);
  v126 = (uint64_t)&v125 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011C3FC8);
  __chkstk_darwin(v5);
  v170 = (char *)&v125 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v167 = type metadata accessor for AccessibilityTraits(0);
  v166 = *(_QWORD *)(v167 - 8);
  __chkstk_darwin(v167);
  v165 = (char *)&v125 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v162 = type metadata accessor for AccessibilityChildBehavior(0);
  v161 = *(_QWORD *)(v162 - 8);
  __chkstk_darwin(v162);
  v160 = (char *)&v125 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v150 = type metadata accessor for WaveformState(0);
  v149 = *(_QWORD *)(v150 - 8);
  __chkstk_darwin(v150);
  v147 = (char *)&v125 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = sub_100007E8C(&qword_1011BE390);
  __chkstk_darwin(v143);
  v146 = (char *)&v125 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011A6AD8);
  __chkstk_darwin(v11);
  v134 = (uint64_t)&v125 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v139 = (char *)&v125 - v14;
  v132 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v130 = *(_QWORD *)(v132 - 8);
  __chkstk_darwin(v132);
  v128 = (char *)&v125 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = sub_100007E8C((uint64_t *)&unk_1011C4FE0);
  v131 = *(_QWORD *)(v133 - 8);
  __chkstk_darwin(v133);
  v129 = (uint64_t)&v125 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C(&qword_1011A5420);
  __chkstk_darwin(v17);
  v135 = (uint64_t)&v125 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = sub_100007E8C(&qword_1011C3FD0);
  __chkstk_darwin(v137);
  v136 = (uint64_t)&v125 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = sub_100007E8C(&qword_1011C3FD8);
  v141 = *(_QWORD *)(v144 - 8);
  __chkstk_darwin(v144);
  v138 = (char *)&v125 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v152 = sub_100007E8C(&qword_1011C3FE0);
  v148 = *(_QWORD *)(v152 - 8);
  __chkstk_darwin(v152);
  v145 = (char *)&v125 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = sub_100007E8C(&qword_1011C3FE8);
  v153 = *(_QWORD *)(v154 - 8);
  __chkstk_darwin(v154);
  v151 = (char *)&v125 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v155 = sub_100007E8C(&qword_1011C3FF0);
  __chkstk_darwin(v155);
  v156 = (char *)&v125 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v157 = sub_100007E8C(&qword_1011C3FF8);
  __chkstk_darwin(v157);
  v159 = (char *)&v125 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v163 = sub_100007E8C(&qword_1011C4000);
  __chkstk_darwin(v163);
  v164 = (char *)&v125 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_100007E8C((uint64_t *)&unk_1011C6790);
  __chkstk_darwin(v26);
  v158 = (uint64_t)&v125 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v30 = (char *)&v125 - v29;
  v31 = type metadata accessor for DynamicTypeSize(0);
  v32 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v34 = (char *)&v125 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  v37 = (char *)&v125 - v36;
  __chkstk_darwin(v38);
  v40 = (char *)&v125 - v39;
  v41 = (int *)type metadata accessor for Tracklist.Artwork(0);
  sub_1008237B8((uint64_t)v40);
  v42 = v41[5];
  v168 = v1;
  v140 = v1 + v42;
  sub_10004A160(v1 + v42, (uint64_t)v30, (uint64_t *)&unk_1011C6790);
  v142 = *(_QWORD *)(v142 + 48);
  v43 = ((unsigned int (*)(char *, uint64_t, uint64_t))v142)(v30, 1, v174) != 1;
  sub_10004FF60((uint64_t)v30, (uint64_t *)&unk_1011C6790);
  v44 = sub_1006CDEB8((uint64_t)v40, v43);
  v45 = *(void (**)(char *, uint64_t))(v32 + 8);
  v45(v40, v31);
  sub_1008237B8((uint64_t)v37);
  if (qword_10119C600 != -1)
    swift_once(&qword_10119C600, sub_1006CA11C);
  if ((byte_1011C36B8 & 1) != 0)
  {
    v46 = 48.0;
  }
  else
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v32 + 104))(v34, enum case for DynamicTypeSize.accessibility3(_:), v31);
    v47 = static DynamicTypeSize.< infix(_:_:)(v37, v34);
    v45(v34, v31);
    if ((v47 & 1) != 0)
      v46 = 48.0;
    else
      v46 = 72.0;
  }
  v48 = v174;
  v49 = v147;
  v50 = (uint64_t)v139;
  v45(v37, v31);
  v51 = v168;
  v52 = v168 + *(int *)(v48 + 24);
  v53 = *(double *)v52;
  if (*(_BYTE *)(v52 + 8))
    v53 = 1.0;
  v54 = v168 + *(int *)(v48 + 20);
  ArtworkImage.Size.init(height:aspectRatio:fittingAspectRatio:)(v44, 0, 0.0, 1, (uint64_t)v178, v53);
  v55 = v130;
  v56 = (uint64_t)v128;
  v57 = v132;
  (*(void (**)(char *, _QWORD, uint64_t))(v130 + 104))(v128, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v132);
  v58 = v129;
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)(v51, v54, (uint64_t)v178, v56, v129);
  (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v56, v57);
  v59 = v135;
  sub_1006BB3B4(*(_QWORD *)(v51 + v41[6]), *(_QWORD *)(v51 + v41[6] + 8), 2, 0, v135);
  (*(void (**)(uint64_t, uint64_t))(v131 + 8))(v58, v133);
  v147 = (char *)v41[7];
  v60 = *(_QWORD *)&v147[v51];
  if (v60)
  {
    KeyPath = swift_getKeyPath(&unk_100ECB000);
    v175 = v60;
    v62 = sub_100048748(&qword_1011A6AE0, type metadata accessor for WaveformPlayer.ListenerToken, (uint64_t)&unk_100EAEB1C);
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v175, KeyPath, v62);
    swift_release();
    v63 = v60 + OBJC_IVAR____TtCC5Music14WaveformPlayer13ListenerToken__displayState;
    swift_beginAccess(v60 + OBJC_IVAR____TtCC5Music14WaveformPlayer13ListenerToken__displayState, &v175, 0, 0);
    sub_10004A160(v63, v50, &qword_1011A6AD8);
    v64 = v150;
    v65 = v149;
  }
  else
  {
    v65 = v149;
    v64 = v150;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v149 + 56))(v50, 1, 1, v150);
  }
  v66 = v134;
  sub_10004A160(v50, v134, &qword_1011A6AD8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48))(v66, 1, v64) == 1)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v65 + 104))(v49, enum case for WaveformState.hidden(_:), v64);
    v67 = sub_10004FF60(v66, &qword_1011A6AD8);
  }
  else
  {
    v67 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v65 + 32))(v49, v66, v64);
  }
  static Color.black.getter(v67);
  v68 = Color.opacity(_:)(0.32);
  v69 = swift_release();
  v70 = (uint64_t)v146;
  *(_QWORD *)&v146[*(int *)(v143 + 36)] = v68;
  (*(void (**)(uint64_t, char *, uint64_t, __n128))(v65 + 32))(v70, v49, v64, v69);
  v71 = v136;
  sub_10004A160(v59, v136, &qword_1011A5420);
  v72 = v137;
  sub_100065228(v70, v71 + *(int *)(v137 + 36), &qword_1011BE390);
  sub_10004FF60(v50, &qword_1011A6AD8);
  sub_10004FF60(v59, &qword_1011A5420);
  v73 = v51 + *(int *)(v174 + 32);
  v74 = *(_QWORD *)v73;
  v75 = *(_QWORD *)(v73 + 8);
  v76 = *(_BYTE *)(v73 + 16);
  v77 = sub_1006D7DE4();
  v78 = v138;
  View.corner(_:)(v74, v75, v76, v72, v77);
  sub_10004FF60(v71, &qword_1011C3FD0);
  v79 = Border.artwork.unsafeMutableAddressor();
  v80 = *v79;
  v81 = *((double *)v79 + 1);
  v82 = *(_QWORD *)v73;
  v83 = *(_QWORD *)(v73 + 8);
  LOBYTE(v73) = *(_BYTE *)(v73 + 16);
  LOBYTE(v75) = *((_BYTE *)v79 + 16);
  swift_retain();
  v176 = v72;
  v177 = v77;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v176, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
  v85 = v145;
  v86 = v73;
  v87 = v144;
  View.border(_:corner:)(v80, v75, v82, v83, v86, v144, OpaqueTypeConformance2, v81);
  v88 = swift_release();
  v89 = (*(uint64_t (**)(char *, uint64_t, __n128))(v141 + 8))(v78, v87, v88);
  v90 = v160;
  static AccessibilityChildBehavior.ignore.getter(v89);
  v176 = v87;
  v177 = OpaqueTypeConformance2;
  v91 = swift_getOpaqueTypeConformance2(&v176, &opaque type descriptor for <<opaque return type of View.border(_:corner:)>>, 1);
  v92 = v151;
  v93 = v152;
  View.accessibilityElement(children:)(v90, v152, v91);
  (*(void (**)(char *, uint64_t))(v161 + 8))(v90, v162);
  (*(void (**)(char *, uint64_t))(v148 + 8))(v85, v93);
  v94 = AccessibilityIdentifier.trackListCellArtwork.unsafeMutableAddressor();
  v95 = *v94;
  v96 = v94[1];
  swift_bridgeObjectRetain();
  v176 = v93;
  v177 = v91;
  v97 = swift_getOpaqueTypeConformance2(&v176, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v98 = (uint64_t)v156;
  v99 = v154;
  View.accessibilityIdentifier(_:)(v95, v96, v154, v97);
  v100 = swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, __n128))(v153 + 8))(v92, v99, v100);
  v101 = *(_QWORD *)&v147[v51];
  if (v101)
  {
    v101 = sub_1001F4A98();
    v103 = v102;
  }
  else
  {
    v103 = 0;
  }
  v104 = (uint64_t)v170;
  v105 = (uint64_t)v164;
  v106 = sub_1006D7E68();
  v107 = (uint64_t)v159;
  View.accessibilityLabel(_:)(v101, v103, v155, v106);
  swift_bridgeObjectRelease();
  v108 = sub_10004FF60(v98, &qword_1011C3FF0);
  v109 = v165;
  static AccessibilityTraits.updatesFrequently.getter(v108);
  v110 = sub_1006D7F6C();
  View.accessibilityAddTraits(_:)(v109, v157, v110);
  (*(void (**)(char *, uint64_t))(v166 + 8))(v109, v167);
  sub_10004FF60(v107, &qword_1011C3FF8);
  v111 = v158;
  sub_10004A160(v140, v158, (uint64_t *)&unk_1011C6790);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v142)(v111, 1, v174) == 1)
  {
    sub_10004FF60(v111, (uint64_t *)&unk_1011C6790);
    v112 = v172;
    sub_10004A160(v105, v172, &qword_1011C4000);
    swift_storeEnumTagMultiPayload(v112, v169, 1);
    v113 = sub_100049F28(&qword_1011C4020, &qword_1011C3FC0, (uint64_t)&protocol conformance descriptor for ZStack<A>);
    v114 = sub_1006D7FF0();
    _ConditionalContent<>.init(storage:)(v112, v171, v163, v113, v114);
  }
  else
  {
    v115 = v126;
    v116 = sub_10005B6C0(v111, v126, type metadata accessor for ArtworkImage.Info);
    v117 = static Alignment.center.getter(v116);
    v118 = (uint64_t)v127;
    *v127 = v117;
    *(_QWORD *)(v118 + 8) = v119;
    v120 = sub_100007E8C(&qword_1011C4030);
    sub_1006C36F4(v105, v51, v115, v118 + *(int *)(v120 + 44), v46, v44);
    v121 = v172;
    sub_10004A160(v118, v172, &qword_1011C3FC0);
    swift_storeEnumTagMultiPayload(v121, v169, 0);
    v122 = sub_100049F28(&qword_1011C4020, &qword_1011C3FC0, (uint64_t)&protocol conformance descriptor for ZStack<A>);
    v123 = sub_1006D7FF0();
    _ConditionalContent<>.init(storage:)(v121, v171, v163, v122, v123);
    sub_10004FF60(v118, &qword_1011C3FC0);
    sub_10005B748(v115, type metadata accessor for ArtworkImage.Info);
  }
  sub_100065228(v104, v173, &qword_1011C3FC8);
  return sub_10004FF60(v105, &qword_1011C4000);
}

uint64_t sub_1006C36F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, uint64_t a6@<D1>)
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  __int128 v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t OpaqueTypeConformance2;
  char *v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  __n128 v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _OWORD *v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v79[2];
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _OWORD v99[3];
  _BYTE v100[40];
  _OWORD v101[3];

  v98 = a3;
  v79[1] = a2;
  v79[0] = a1;
  v97 = a4;
  v82 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v81 = *(_QWORD *)(v82 - 8);
  __chkstk_darwin(v82);
  v9 = (char *)v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = sub_100007E8C((uint64_t *)&unk_1011C4FE0);
  v86 = *(_QWORD *)(v85 - 8);
  __chkstk_darwin(v85);
  v11 = (char *)v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = sub_100007E8C((uint64_t *)&unk_1011C9250);
  v94 = *(_QWORD *)(v90 - 8);
  __chkstk_darwin(v90);
  v83 = (char *)v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = sub_100007E8C((uint64_t *)&unk_1011C6960);
  v92 = *(_QWORD *)(v93 - 8);
  __chkstk_darwin(v93);
  v84 = (char *)v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = sub_100007E8C(&qword_1011A0628);
  __chkstk_darwin(v89);
  v87 = (char *)v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(&qword_1011C4038);
  __chkstk_darwin(v15);
  v88 = (char *)v79 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = sub_100007E8C(&qword_1011C4040);
  __chkstk_darwin(v96);
  v91 = (uint64_t)v79 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v95 = (uint64_t)v79 - v19;
  v20 = sub_100007E8C(&qword_1011C4048);
  __chkstk_darwin(v20);
  v22 = (char *)v79 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100007E8C(&qword_1011C4050);
  __chkstk_darwin(v23);
  v25 = (char *)v79 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v28 = (char *)v79 - v27;
  v80 = (uint64_t)v79 - v27;
  sub_10004A160(v79[0], (uint64_t)v22, &qword_1011C4000);
  *(_WORD *)&v22[*(int *)(v20 + 36)] = 256;
  v29 = sub_1006C3E60();
  *(double *)v79 = a5;
  v31 = static Alignment.topLeading.getter(v30);
  _FrameLayout.init(width:height:alignment:)(v99, *(_QWORD *)&v29, 0, *(_QWORD *)&a5, 0, v31, v32);
  sub_10004A160((uint64_t)v22, (uint64_t)v25, &qword_1011C4048);
  v33 = &v25[*(int *)(v23 + 36)];
  v34 = v99[1];
  *(_OWORD *)v33 = v99[0];
  *((_OWORD *)v33 + 1) = v34;
  *((_OWORD *)v33 + 2) = v99[2];
  sub_10004FF60((uint64_t)v22, &qword_1011C4048);
  sub_100065228((uint64_t)v25, (uint64_t)v28, &qword_1011C4050);
  v35 = (int *)type metadata accessor for ArtworkImage.Info(0);
  v36 = v98;
  v37 = v98 + v35[5];
  ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(a6, 0, a6, 0, 0, 1, 2, (uint64_t)v100);
  v38 = v81;
  v39 = v82;
  (*(void (**)(char *, _QWORD, uint64_t))(v81 + 104))(v9, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v82);
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)(v36, v37, (uint64_t)v100, (uint64_t)v9, (uint64_t)v11);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v9, v39);
  v40 = v36 + v35[8];
  v41 = *(_QWORD *)v40;
  v42 = *(_QWORD *)(v40 + 8);
  LOBYTE(v23) = *(_BYTE *)(v40 + 16);
  v43 = sub_100044B54((uint64_t *)&unk_1011C5080);
  v44 = sub_1000E4264();
  *(_QWORD *)&v101[0] = v43;
  *((_QWORD *)&v101[0] + 1) = v44;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v101, &opaque type descriptor for <<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>, 1);
  v46 = v83;
  v47 = v85;
  View.corner(_:)(v41, v42, v23, v85, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v86 + 8))(v11, v47);
  v48 = Border.artwork.unsafeMutableAddressor();
  v49 = *v48;
  v50 = *((double *)v48 + 1);
  v51 = *(_QWORD *)v40;
  v52 = *(_QWORD *)(v40 + 8);
  LOBYTE(v23) = *(_BYTE *)(v40 + 16);
  LOBYTE(v40) = *((_BYTE *)v48 + 16);
  swift_retain();
  *(_QWORD *)&v101[0] = v47;
  *((_QWORD *)&v101[0] + 1) = OpaqueTypeConformance2;
  v53 = swift_getOpaqueTypeConformance2(v101, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
  v54 = v84;
  v55 = v40;
  v56 = v90;
  View.border(_:corner:)(v49, v55, v51, v52, v23, v90, v53, v50);
  v57 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v94 + 8))(v46, v56, v57);
  v58 = v98 + v35[6];
  v59 = *(_QWORD *)v58;
  LOBYTE(v51) = *(_BYTE *)(v58 + 8);
  v60 = v92;
  v61 = (uint64_t)v87;
  v62 = v93;
  (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v87, v54, v93);
  v63 = v89;
  v64 = v61 + *(int *)(v89 + 36);
  *(_QWORD *)v64 = v59;
  *(_BYTE *)(v64 + 8) = v51;
  *(_BYTE *)(v64 + 9) = 0;
  (*(void (**)(char *, uint64_t))(v60 + 8))(v54, v62);
  v65 = sub_100238A3C();
  v66 = (uint64_t)v88;
  View.accessibilityHidden(_:)(1, v63, v65);
  sub_10004FF60(v61, &qword_1011A0628);
  v67.n128_f64[0] = sub_1006C3E60();
  v68 = v67.n128_u64[0];
  v69 = static Alignment.bottomTrailing.getter(v67);
  _FrameLayout.init(width:height:alignment:)(v101, v68, 0, v79[0], 0, v69, v70);
  v71 = v91;
  sub_10004A160(v66, v91, &qword_1011C4038);
  v72 = (_OWORD *)(v71 + *(int *)(v96 + 36));
  v73 = v101[1];
  *v72 = v101[0];
  v72[1] = v73;
  v72[2] = v101[2];
  sub_10004FF60(v66, &qword_1011C4038);
  v74 = v95;
  sub_100065228(v71, v95, &qword_1011C4040);
  v75 = v80;
  sub_10004A160(v80, (uint64_t)v25, &qword_1011C4050);
  sub_10004A160(v74, v71, &qword_1011C4040);
  v76 = v97;
  sub_10004A160((uint64_t)v25, v97, &qword_1011C4050);
  v77 = sub_100007E8C(&qword_1011C4058);
  sub_10004A160(v71, v76 + *(int *)(v77 + 48), &qword_1011C4040);
  sub_10004FF60(v74, &qword_1011C4040);
  sub_10004FF60(v75, &qword_1011C4050);
  sub_10004FF60(v71, &qword_1011C4040);
  return sub_10004FF60((uint64_t)v25, &qword_1011C4050);
}

double sub_1006C3E60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  int v10;
  void (*v11)(char *, uint64_t);
  double v12;
  char v13;
  double v14;
  double v15;
  uint64_t v17;

  v1 = type metadata accessor for DynamicTypeSize(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v17 - v6;
  v8 = v0 + *(int *)(type metadata accessor for ArtworkImage.Info(0) + 24);
  v9 = *(double *)v8;
  v10 = *(unsigned __int8 *)(v8 + 8);
  type metadata accessor for Tracklist.Artwork(0);
  sub_1008237B8((uint64_t)v7);
  if (qword_10119C600 != -1)
    swift_once(&qword_10119C600, sub_1006CA11C);
  if (byte_1011C36B8 == 1)
  {
    v11 = *(void (**)(char *, uint64_t))(v2 + 8);
    v12 = 32.0;
  }
  else
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for DynamicTypeSize.accessibility3(_:), v1);
    v13 = static DynamicTypeSize.< infix(_:_:)(v7, v4);
    v11 = *(void (**)(char *, uint64_t))(v2 + 8);
    v11(v4, v1);
    v12 = 48.0;
    if ((v13 & 1) != 0)
      v12 = 32.0;
  }
  v14 = 1.0;
  if (!v10)
    v14 = v9;
  v15 = v14 * v12 + v12 * 0.5;
  v11(v7, v1);
  return v15;
}

uint64_t sub_1006C3FE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t KeyPath;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  void *v67;
  char v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t countAndFlagsBits;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  double v81;
  char v82;
  double v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  char *v98;
  void (*v99)(char *, char *, uint64_t);
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  Swift::String v130;
  char v131;
  uint64_t v132;
  uint64_t v133;
  char v134;
  uint64_t v135;
  char v136;
  uint64_t v137;
  char v138;
  uint64_t v139;
  char v140;
  char *v141;
  char v142;
  uint64_t v143;
  char v144;
  uint64_t v145;
  char *v146;
  char v147;
  double v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char v152;
  char v153;
  char v154;
  char v155;
  char v156;
  char v157;
  char v158;
  char v159;
  char v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char v164;
  uint64_t v165;
  char v166;
  uint64_t v167;
  char v168;
  char *v169;
  char v170;
  uint64_t v171;
  char v172;
  uint64_t v173;
  char *v174;

  v128 = a2;
  v3 = sub_100007E8C(&qword_1011AFAD8);
  __chkstk_darwin(v3);
  v5 = (char *)&v114 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = sub_100007E8C(&qword_1011C4070);
  __chkstk_darwin(v126);
  v127 = (uint64_t)&v114 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AccessibilityTraits(0);
  v122 = *(_QWORD *)(v7 - 8);
  v123 = (char *)v7;
  __chkstk_darwin(v7);
  v121 = (char *)&v114 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = type metadata accessor for WaveformState(0);
  v117 = *(_QWORD *)(v120 - 8);
  __chkstk_darwin(v120);
  v119 = (char *)&v114 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DancingPlaybackBarsConditionalModifier(0);
  __chkstk_darwin(v10);
  v118 = (char *)&v114 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011A6AD8);
  __chkstk_darwin(v12);
  v14 = (char *)&v114 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v114 - v16;
  v18 = sub_100007E8C(&qword_1011C4078);
  __chkstk_darwin(v18);
  v20 = (char *)&v114 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100007E8C(&qword_1011C4080);
  __chkstk_darwin(v21);
  v23 = (char *)&v114 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = sub_100007E8C(&qword_1011C4088);
  __chkstk_darwin(v116);
  v25 = (char *)&v114 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = sub_100007E8C(&qword_1011C4090);
  __chkstk_darwin(v125);
  v27 = (char *)&v114 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  __chkstk_darwin(v29);
  v32 = *(_QWORD *)a1;
  v33 = *(char *)(a1 + 8);
  v129 = v3;
  v124 = a1;
  if (v33 < 0)
  {
    v123 = v5;
    v130._countAndFlagsBits = v32;
    sub_1001AA49C();
    v130 = BinaryInteger.formatted()();
    v40 = sub_100055B68();
    v41 = a1;
    v42 = Text.init<A>(_:)(&v130, &type metadata for String, v40);
    v44 = v43;
    v46 = v45;
    v48 = v47 & 1;
    LODWORD(v130._countAndFlagsBits) = static HierarchicalShapeStyle.primary.getter(v49);
    v50 = Text.playableForegroundStyle<A>(_:isPlayable:)((int *)&v130, *(_BYTE *)(v41 + 9), v42, v44, v48, v46, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
    v52 = v51;
    v54 = v53;
    v56 = v55;
    sub_100055BAC(v42, v44, v48);
    swift_bridgeObjectRelease();
    if (qword_10119C638 != -1)
      swift_once(&qword_10119C638, sub_1006CA390);
    v57 = v54 & 1;
    v58 = Text.font(_:)(qword_10124D740, v50, v52, v54 & 1, v56);
    v60 = v59;
    v62 = v61;
    v64 = v63;
    sub_100055BAC(v50, v52, v57);
    swift_bridgeObjectRelease();
    if (qword_10119C640 != -1)
      swift_once(&qword_10119C640, sub_1006CA3AC);
    v65 = Text.fontWeight(_:)(qword_10124D748, 0, v58, v60, v62 & 1, v64);
    v67 = v66;
    v69 = v68;
    v122 = v70;
    sub_100055BAC(v58, v60, v62 & 1);
    swift_bridgeObjectRelease();
    type metadata accessor for Tracklist.LeadingNumber(0);
    v71 = sub_100007E8C(qword_1011C9550);
    v72 = ScaledMetric.wrappedValue.getter(&v130, v71);
    countAndFlagsBits = v130._countAndFlagsBits;
    v74 = static Alignment.center.getter(v72);
    _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(&v161, countAndFlagsBits, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, v74, v75);
    v76 = v161;
    v77 = v163;
    v78 = v165;
    v124 = v167;
    v120 = v171;
    v121 = v169;
    v79 = v173;
    v119 = v174;
    v80 = v69 & 1;
    v159 = v80;
    v158 = v162;
    v157 = v164;
    v156 = v166;
    v155 = v168;
    v154 = v170;
    v153 = v172;
    v82 = static Edge.Set.trailing.getter(v81);
    if (qword_10119C630 != -1)
      swift_once(&qword_10119C630, sub_1006CA338);
    v83 = EdgeInsets.init(_all:)(*(double *)&qword_10124D738);
    v160 = 0;
    v130._countAndFlagsBits = v65;
    v130._object = v67;
    v131 = v159;
    v132 = v122;
    v133 = v76;
    v134 = v158;
    v135 = v77;
    v136 = v157;
    v137 = v78;
    v138 = v156;
    v139 = v124;
    v140 = v155;
    v141 = v121;
    v142 = v154;
    v143 = v120;
    v144 = v153;
    v145 = v79;
    v146 = v119;
    v147 = v82;
    v148 = v83;
    v149 = v84;
    v150 = v85;
    v151 = v86;
    v152 = 0;
    v87 = AccessibilityIdentifier.trackListCellChartNumber.unsafeMutableAddressor();
    v88 = *v87;
    v89 = v87[1];
    swift_bridgeObjectRetain();
    v90 = sub_100007E8C(&qword_1011AFB88);
    v91 = sub_1003AC7CC();
    v92 = (uint64_t)v123;
    View.accessibilityIdentifier(_:)(v88, v89, v90, v91);
    swift_bridgeObjectRelease();
    sub_100055BAC(v65, (uint64_t)v67, v80);
    swift_bridgeObjectRelease();
    v93 = &qword_1011AFAD8;
    v94 = v127;
    sub_10004A160(v92, v127, &qword_1011AFAD8);
    swift_storeEnumTagMultiPayload(v94, v126, 1);
    v95 = sub_1006D807C();
    v96 = sub_10062A6F8();
    _ConditionalContent<>.init(storage:)(v94, v125, v129, v95, v96);
    v97 = v92;
  }
  else
  {
    v114 = v31;
    v115 = (uint64_t)&v114 - v30;
    sub_1006C4A10(v32, v33 & 1, a1, (uint64_t)v20);
    sub_1006C4FFC(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), 2, (uint64_t)v23);
    sub_10004FF60((uint64_t)v20, &qword_1011C4078);
    v34 = *(_QWORD *)(a1 + 40);
    if (v34)
    {
      KeyPath = swift_getKeyPath(&unk_100ECB000);
      v130._countAndFlagsBits = v34;
      v36 = sub_100048748(&qword_1011A6AE0, type metadata accessor for WaveformPlayer.ListenerToken, (uint64_t)&unk_100EAEB1C);
      ObservationRegistrar.access<A, B>(_:keyPath:)(&v130, KeyPath, v36);
      swift_release();
      v37 = v34 + OBJC_IVAR____TtCC5Music14WaveformPlayer13ListenerToken__displayState;
      swift_beginAccess(v34 + OBJC_IVAR____TtCC5Music14WaveformPlayer13ListenerToken__displayState, &v130, 0, 0);
      sub_10004A160(v37, (uint64_t)v17, &qword_1011A6AD8);
      v38 = v120;
      v39 = v117;
    }
    else
    {
      v39 = v117;
      v38 = v120;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v117 + 56))(v17, 1, 1, v120);
    }
    sub_10004A160((uint64_t)v17, (uint64_t)v14, &qword_1011A6AD8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v14, 1, v38) == 1)
    {
      v98 = v119;
      (*(void (**)(char *, _QWORD, uint64_t))(v39 + 104))(v119, enum case for WaveformState.hidden(_:), v38);
      sub_10004FF60((uint64_t)v14, &qword_1011A6AD8);
      v99 = *(void (**)(char *, char *, uint64_t))(v39 + 32);
    }
    else
    {
      v99 = *(void (**)(char *, char *, uint64_t))(v39 + 32);
      v98 = v119;
      v99(v119, v14, v38);
    }
    v100 = (uint64_t)v118;
    v99(v118, v98, v38);
    sub_10004A160((uint64_t)v23, (uint64_t)v25, &qword_1011C4080);
    v101 = v116;
    sub_10005B6C0(v100, (uint64_t)&v25[*(int *)(v116 + 36)], type metadata accessor for DancingPlaybackBarsConditionalModifier);
    sub_10004FF60((uint64_t)v17, &qword_1011A6AD8);
    sub_10004FF60((uint64_t)v23, &qword_1011C4080);
    v161 = sub_1006C51AC();
    v162 = v102;
    v103 = sub_1006D8100();
    v104 = sub_100055B68();
    View.accessibilityLabel<A>(_:)(&v161, v101, &type metadata for String, v103, v104);
    swift_bridgeObjectRelease();
    v105 = sub_10004FF60((uint64_t)v25, &qword_1011C4088);
    v106 = v121;
    static AccessibilityTraits.updatesFrequently.getter(v105);
    v107 = v114;
    v108 = v125;
    ModifiedContent<>.accessibilityAddTraits(_:)(v106, v125);
    (*(void (**)(char *, char *))(v122 + 8))(v106, v123);
    v93 = &qword_1011C4090;
    sub_10004FF60((uint64_t)v27, &qword_1011C4090);
    v109 = v115;
    sub_100065228(v107, v115, &qword_1011C4090);
    v110 = v127;
    sub_10004A160(v109, v127, &qword_1011C4090);
    swift_storeEnumTagMultiPayload(v110, v126, 0);
    v111 = sub_1006D807C();
    v112 = sub_10062A6F8();
    _ConditionalContent<>.init(storage:)(v110, v108, v129, v111, v112);
    v97 = v109;
  }
  return sub_10004FF60(v97, v93);
}

uint64_t sub_1006C4A10@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  void *v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t countAndFlagsBits;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char object;
  uint64_t v44;
  char v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE *v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  _BYTE v63[12];
  int v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _BYTE *v71;
  _BYTE *v72;
  uint64_t v73;
  Swift::String v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  char v87;
  __int128 v88;
  char v89;
  char v90;
  char v91;
  char v92;
  char v93;
  char v94;
  char v95;
  uint64_t v96;
  char v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  char v101;
  uint64_t v102;
  char v103;
  uint64_t v104;
  char v105;
  uint64_t v106;
  char v107;
  __int128 v108;

  v73 = a4;
  v69 = type metadata accessor for DynamicTypeSize(0);
  v7 = *(_QWORD *)(v69 - 8);
  __chkstk_darwin(v69);
  v9 = &v63[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
  __chkstk_darwin(v10);
  v12 = &v63[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = sub_100007E8C(&qword_1011C40D0);
  __chkstk_darwin(v13);
  v71 = &v63[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  v72 = &v63[-v16];
  v17 = sub_100007E8C(&qword_1011C40E8);
  __chkstk_darwin(v17);
  v19 = &v63[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((a2 & 1) != 0)
  {
    type metadata accessor for Tracklist.LeadingNumber(0);
    v37 = sub_100007E8C(qword_1011C9550);
    v38 = ScaledMetric.wrappedValue.getter(&v74, v37);
    countAndFlagsBits = v74._countAndFlagsBits;
    v40 = static Alignment.center.getter(v38);
    _FrameLayout.init(width:height:alignment:)(&v74, countAndFlagsBits, 0, 0, 1, v40, v41);
    v42 = v74._countAndFlagsBits;
    object = (char)v74._object;
    v44 = v75;
    v45 = v76;
    *(_QWORD *)v19 = 0;
    v19[8] = 1;
    *((_QWORD *)v19 + 2) = v42;
    v19[24] = object;
    *((_QWORD *)v19 + 4) = v44;
    v19[40] = v45;
    *((_OWORD *)v19 + 3) = v77;
    swift_storeEnumTagMultiPayload(v19, v17, 1);
    v46 = sub_100007E8C(&qword_1011B7088);
    v47 = sub_1006D8310();
    v48 = sub_1004D9D80(&qword_1011B7170, &qword_1011B7088);
    return _ConditionalContent<>.init(storage:)(v19, v13, v46, v47, v48);
  }
  else
  {
    v67 = v17;
    v68 = v13;
    v74._countAndFlagsBits = a1;
    sub_1001AA49C();
    v74 = BinaryInteger.formatted()();
    v20 = sub_100055B68();
    v21 = Text.init<A>(_:)(&v74, &type metadata for String, v20);
    v23 = v22;
    v25 = v24;
    v27 = v26 & 1;
    LODWORD(v74._countAndFlagsBits) = static HierarchicalShapeStyle.secondary.getter(v21);
    v28 = Text.playableForegroundStyle<A>(_:isPlayable:)((int *)&v74, *(_BYTE *)(a3 + 9), v21, v23, v27, v25, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
    v65 = v29;
    v66 = v28;
    v64 = v30;
    v70 = v31;
    sub_100055BAC(v21, v23, v27);
    swift_bridgeObjectRelease();
    type metadata accessor for Tracklist.LeadingNumber(0);
    v32 = sub_100007E8C(qword_1011C9550);
    ScaledMetric.wrappedValue.getter(&v74, v32);
    v33 = v74._countAndFlagsBits;
    sub_100824BE4((uint64_t)v12);
    sub_1008237B8((uint64_t)v9);
    LOBYTE(v21) = sub_1006CDAB0((uint64_t)v12, (uint64_t)v9);
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v69);
    v34 = sub_10004FF60((uint64_t)v12, (uint64_t *)&unk_1011A33B8);
    if ((v21 & 1) != 0)
      v35 = static Alignment.leading.getter(v34);
    else
      v35 = static Alignment.center.getter(v34);
    _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(&v96, v33, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, v35, v36);
    v50 = v64 & 1;
    v95 = v64 & 1;
    v94 = v97;
    v93 = v99;
    v92 = v101;
    v91 = v103;
    v90 = v105;
    v89 = v107;
    v51 = (uint64_t)v65;
    v52 = v66;
    v74._countAndFlagsBits = v66;
    v74._object = v65;
    LOBYTE(v75) = v64 & 1;
    v76 = v70;
    *(_QWORD *)&v77 = v96;
    BYTE8(v77) = v97;
    v78 = v98;
    v79 = v99;
    v80 = v100;
    v81 = v101;
    v82 = v102;
    v83 = v103;
    v84 = v104;
    v85 = v105;
    v86 = v106;
    v87 = v107;
    v88 = v108;
    v53 = AccessibilityIdentifier.trackListCellTrackNumber.unsafeMutableAddressor();
    v54 = *v53;
    v55 = v53[1];
    swift_bridgeObjectRetain();
    v56 = sub_100007E8C(&qword_1011A5400);
    v57 = sub_1004D9D80((unint64_t *)&qword_1011A53F8, &qword_1011A5400);
    v58 = (uint64_t)v71;
    View.accessibilityIdentifier(_:)(v54, v55, v56, v57);
    swift_bridgeObjectRelease();
    sub_100055BAC(v52, v51, v50);
    swift_bridgeObjectRelease();
    v59 = v72;
    sub_100065228(v58, (uint64_t)v72, &qword_1011C40D0);
    sub_10004A160((uint64_t)v59, (uint64_t)v19, &qword_1011C40D0);
    swift_storeEnumTagMultiPayload(v19, v67, 0);
    v60 = sub_100007E8C(&qword_1011B7088);
    v61 = sub_1006D8310();
    v62 = sub_1004D9D80(&qword_1011B7170, &qword_1011B7088);
    _ConditionalContent<>.init(storage:)(v19, v68, v60, v61, v62);
    return sub_10004FF60((uint64_t)v59, &qword_1011C40D0);
  }
}

uint64_t sub_1006C4FFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v5 = v4;
  v10 = type metadata accessor for PreviewOverlay.TrackNumberVariant(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = qword_10119B878;
  swift_bridgeObjectRetain();
  if (v13 != -1)
    swift_once(&qword_10119B878, sub_10006585C);
  v14 = qword_10124C708;
  *(_QWORD *)v12 = a1;
  *((_QWORD *)v12 + 1) = a2;
  v12[16] = a3;
  v15 = qword_10119B8B0;
  swift_retain();
  if (v15 != -1)
    swift_once(&qword_10119B8B0, sub_1000E948C);
  *((_QWORD *)v12 + 3) = (*(uint64_t (**)(void))(*(_QWORD *)qword_10124C788 + 408))();
  v16 = type metadata accessor for PreviewPlaybackController(0);
  v17 = sub_100048748(&qword_1011A4BB0, type metadata accessor for PreviewPlaybackController, (uint64_t)&unk_100EA82F8);
  *((_QWORD *)v12 + 4) = ObservedObject.init(wrappedValue:)(v14, v16, v17);
  *((_QWORD *)v12 + 5) = v18;
  v19 = &v12[*(int *)(v10 + 32)];
  *(_QWORD *)v19 = swift_getKeyPath("\b^4");
  v20 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  swift_storeEnumTagMultiPayload(v19, v20, 0);
  sub_10004A160(v5, a4, &qword_1011C4078);
  v21 = sub_100007E8C(&qword_1011C4080);
  return sub_10005B6C0((uint64_t)v12, a4 + *(int *)(v21 + 36), type metadata accessor for PreviewOverlay.TrackNumberVariant);
}

uint64_t sub_1006C51AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  Swift::String v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (*(_QWORD *)(v0 + 40))
  {
    swift_retain();
    v1 = sub_1001F4A98();
    if (v2)
    {
      v3 = v1;
      v4 = v2;
      v5 = sub_100431480(0, 1, 1, _swiftEmptyArrayStorage);
      v7 = v5[2];
      v6 = v5[3];
      if (v7 >= v6 >> 1)
        v5 = sub_100431480((_QWORD *)(v6 > 1), v7 + 1, 1, v5);
      v5[2] = v7 + 1;
      v8 = &v5[2 * v7];
      v8[4] = v3;
      v8[5] = v4;
    }
    else
    {
      v5 = _swiftEmptyArrayStorage;
    }
    swift_release();
  }
  else
  {
    v5 = _swiftEmptyArrayStorage;
  }
  if ((*(_BYTE *)(v0 + 8) & 0x81) == 0)
  {
    sub_1001AA49C();
    v9 = BinaryInteger.formatted()();
    if ((swift_isUniquelyReferenced_nonNull_native(v5) & 1) == 0)
      v5 = sub_100431480(0, v5[2] + 1, 1, v5);
    v11 = v5[2];
    v10 = v5[3];
    if (v11 >= v10 >> 1)
      v5 = sub_100431480((_QWORD *)(v10 > 1), v11 + 1, 1, v5);
    v5[2] = v11 + 1;
    *(Swift::String *)&v5[2 * v11 + 4] = v9;
  }
  v12 = sub_100007E8C((uint64_t *)&unk_1011AD420);
  v13 = sub_100049F28((unint64_t *)&qword_1011A2420, (uint64_t *)&unk_1011AD420, (uint64_t)&protocol conformance descriptor for [A]);
  v14 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v12, v13);
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1006C537C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t *v9;
  uint64_t v11;

  v2 = v1;
  v4 = sub_100007E8C(&qword_1011C4060);
  __chkstk_darwin(v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1006C3FE4(v2, (uint64_t)v6);
  if (*(_BYTE *)(v2 + 32) == 1)
  {
    if (qword_10119C6C0 != -1)
      swift_once(&qword_10119C6C0, sub_1006CA810);
    v7 = qword_10124D7D8;
    swift_retain();
  }
  else
  {
    v7 = 0;
  }
  KeyPath = swift_getKeyPath(&unk_100ECAB80);
  sub_10004A160((uint64_t)v6, a1, &qword_1011C4060);
  v9 = (uint64_t *)(a1 + *(int *)(sub_100007E8C(&qword_1011C4068) + 36));
  *v9 = KeyPath;
  v9[1] = v7;
  return sub_10004FF60((uint64_t)v6, &qword_1011C4060);
}

uint64_t sub_1006C548C@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t *v19;
  void (*v20)(_BYTE *, uint64_t, __n128);
  __n128 v21;
  uint64_t v22;
  unint64_t v23;
  double v24;
  char v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _OWORD *v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE v51[12];
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _BYTE *v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  _OWORD v60[7];

  v52 = a1;
  v58 = a2;
  v2 = sub_100007E8C(&qword_1011AFB30);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v51[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_100007E8C(&qword_1011AFB38);
  __chkstk_darwin(v6);
  v8 = &v51[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v55 = sub_100007E8C(&qword_1011AFB40);
  v54 = *(_QWORD *)(v55 - 8);
  __chkstk_darwin(v55);
  v10 = &v51[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v53 = sub_100007E8C(&qword_1011C40F0);
  __chkstk_darwin(v53);
  v12 = &v51[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v57 = sub_100007E8C(&qword_1011C40F8);
  __chkstk_darwin(v57);
  v14 = &v51[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = sub_100007E8C(&qword_1011C4100);
  __chkstk_darwin(v15);
  v56 = &v51[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)&v60[0] = Image.init(systemName:)(0x6F6E2E636973756DLL, 0xED000076742E6574);
  v59 = static HierarchicalShapeStyle.secondary.getter(*(_QWORD *)&v60[0]);
  View.playableForegroundStyle<A>(_:isPlayable:)((uint64_t)&v59, v52, (uint64_t)&type metadata for Image, (uint64_t)&type metadata for HierarchicalShapeStyle, (uint64_t)&protocol witness table for Image);
  swift_release();
  if (qword_10119C660 != -1)
    swift_once(&qword_10119C660, sub_1006CA4CC);
  v17 = qword_10124D768;
  KeyPath = swift_getKeyPath(&unk_100ECABB0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v3 + 16))(v8, v5, v2);
  v19 = (uint64_t *)&v8[*(int *)(v6 + 36)];
  *v19 = KeyPath;
  v19[1] = v17;
  v20 = *(void (**)(_BYTE *, uint64_t, __n128))(v3 + 8);
  v21 = swift_retain();
  v20(v5, v2, v21);
  if (qword_10119C668 != -1)
    swift_once(&qword_10119C668, sub_1006CA4E8);
  v22 = qword_10124D770;
  v23 = sub_1003AC850();
  View.fontWeight(_:)(v22, 0, v6, v23);
  sub_10004FF60((uint64_t)v8, &qword_1011AFB38);
  v25 = static Edge.Set.trailing.getter(v24);
  if (qword_10119C650 != -1)
    swift_once(&qword_10119C650, sub_1006CA410);
  v26 = EdgeInsets.init(_all:)(*(double *)&qword_10124D758);
  v28 = v27;
  v30 = v29;
  v32 = v31;
  v33 = v54;
  v34 = v55;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v54 + 16))(v12, v10, v55);
  v35 = (double *)&v12[*(int *)(v53 + 36)];
  *(_BYTE *)v35 = v25;
  v35[1] = v26;
  *((_QWORD *)v35 + 2) = v28;
  *((_QWORD *)v35 + 3) = v30;
  *((_QWORD *)v35 + 4) = v32;
  *((_BYTE *)v35 + 40) = 0;
  v36 = (*(uint64_t (**)(_BYTE *, uint64_t))(v33 + 8))(v10, v34);
  if (qword_10119C658 != -1)
    v36 = swift_once(&qword_10119C658, sub_1006CA468);
  v37 = qword_10124D760;
  v38 = static Alignment.center.getter(v36);
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v60, v37, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, v38, v39);
  sub_10004A160((uint64_t)v12, (uint64_t)v14, &qword_1011C40F0);
  v40 = v57;
  v41 = &v14[*(int *)(v57 + 36)];
  v42 = v60[5];
  v41[4] = v60[4];
  v41[5] = v42;
  v41[6] = v60[6];
  v43 = v60[1];
  *v41 = v60[0];
  v41[1] = v43;
  v44 = v60[3];
  v41[2] = v60[2];
  v41[3] = v44;
  sub_10004FF60((uint64_t)v12, &qword_1011C40F0);
  v45 = AccessibilityIdentifier.trackListCellVideoIcon.unsafeMutableAddressor();
  v46 = *v45;
  v47 = v45[1];
  v48 = sub_10005610C(&qword_1011C4108, &qword_1011C40F8, (void (*)(void))sub_1006D83B4);
  swift_bridgeObjectRetain();
  v49 = (uint64_t)v56;
  View.accessibilityIdentifier(_:)(v46, v47, v40, v48);
  swift_bridgeObjectRelease();
  sub_10004FF60((uint64_t)v14, &qword_1011C40F8);
  return sub_100065228(v49, v58, &qword_1011C4100);
}

uint64_t sub_1006C5A04@<X0>(uint64_t a1@<X8>)
{
  unsigned __int8 *v1;

  return sub_1006C548C(*v1, a1);
}

uint64_t sub_1006C5A0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v3 = v2;
  v6 = sub_100007E8C(&qword_1011A2E60);
  __chkstk_darwin(v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v8 = static HorizontalAlignment.leading.getter(v9);
  *((_QWORD *)v8 + 1) = 0;
  v8[16] = 0;
  v10 = sub_100007E8C(&qword_1011C3E58);
  v11 = sub_1006C5B08(v3, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), (uint64_t)&v8[*(int *)(v10 + 44)]);
  v12 = static Alignment.leading.getter(v11);
  sub_10014B898(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, a2, 0.0, 1, 0.0, 1, v12, v13);
  return sub_10004FF60((uint64_t)v8, &qword_1011A2E60);
}

uint64_t sub_1006C5B08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t KeyPath;
  uint64_t *v42;
  __n128 v43;
  char v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  double v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(uint64_t, uint64_t);
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  int v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  double v114;
  uint64_t v115;
  unint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  __n128 v122;
  double v123;
  uint64_t *v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char v168;

  v157 = a4;
  v138 = type metadata accessor for DynamicTypeSize(0);
  v137 = *(_QWORD *)(v138 - 8);
  __chkstk_darwin(v138);
  v136 = (uint64_t)&v135 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = type metadata accessor for Tracklist.VerticalTextStack(0, a2, a3, v8);
  v141 = *(_QWORD *)(v142 - 8);
  __chkstk_darwin(v142);
  v140 = (char *)&v135 - v9;
  v10 = sub_100007E8C((uint64_t *)&unk_1011C6790);
  __chkstk_darwin(v10);
  v139 = (char *)&v135 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v147 = sub_100007E8C(&qword_1011A2E70);
  v146 = *(_QWORD *)(v147 - 8);
  __chkstk_darwin(v147);
  v143 = (char *)&v135 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = sub_100007E8C(&qword_1011A2E78);
  __chkstk_darwin(v148);
  v149 = (uint64_t)&v135 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C(&qword_1011C3E60);
  v154 = *(_QWORD *)(v14 - 8);
  v155 = v14;
  __chkstk_darwin(v14);
  v145 = (char *)&v135 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v144 = (uint64_t)&v135 - v17;
  v18 = sub_100007E8C(&qword_1011C3E68);
  __chkstk_darwin(v18);
  v156 = (uint64_t)&v135 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v158 = (uint64_t)&v135 - v21;
  v22 = sub_100007E8C(&qword_1011C3E70);
  __chkstk_darwin(v22);
  v24 = (char *)&v135 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_100007E8C(&qword_1011C3E78);
  __chkstk_darwin(v25);
  v27 = (char *)&v135 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = sub_100007E8C(&qword_1011A2E80);
  v150 = *(_QWORD *)(v151 - 8);
  __chkstk_darwin(v151);
  v29 = (char *)&v135 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v152 = sub_100007E8C(&qword_1011A2E88);
  __chkstk_darwin(v152);
  v31 = (char *)&v135 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_100007E8C(&qword_1011C3E80);
  __chkstk_darwin(v32);
  v153 = (uint64_t)&v135 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v36 = (char *)&v135 - v35;
  v38 = __chkstk_darwin(v37);
  v159 = (uint64_t)&v135 - v39;
  v160 = a2;
  v161 = a3;
  sub_1006C65E4(a1, a2, a3, (uint64_t)v24, v38);
  if (qword_10119C6B0 != -1)
    swift_once(&qword_10119C6B0, sub_1006CA76C);
  v40 = qword_10124D7C8;
  KeyPath = swift_getKeyPath(&unk_100ECABB0);
  sub_10004A160((uint64_t)v24, (uint64_t)v27, &qword_1011C3E70);
  v42 = (uint64_t *)&v27[*(int *)(v25 + 36)];
  *v42 = KeyPath;
  v42[1] = v40;
  swift_retain();
  sub_10004FF60((uint64_t)v24, &qword_1011C3E70);
  LODWORD(v162) = static HierarchicalShapeStyle.primary.getter(v43);
  v44 = *(_BYTE *)(a1 + 16);
  v45 = sub_1006D7784();
  View.playableForegroundStyle<A>(_:isPlayable:)((uint64_t)&v162, v44, v25, (uint64_t)&type metadata for HierarchicalShapeStyle, v45);
  v46 = sub_10004FF60((uint64_t)v27, &qword_1011C3E78);
  v47 = static Alignment.leading.getter(v46);
  v48 = 1;
  v51 = sub_10014B8FC(0, 1, 0.0, 1, INFINITY, 0, 0, 1, (uint64_t)v31, v50, 0.0, 1, 0.0, 1, v47, v49);
  (*(void (**)(char *, uint64_t, double))(v150 + 8))(v29, v151, v51);
  v52 = AccessibilityIdentifier.trackListCellTitle.unsafeMutableAddressor();
  v53 = *v52;
  v54 = v52[1];
  v55 = sub_1006D868C(&qword_1011C3EA8, &qword_1011A2E88, &qword_1011C3E78, (uint64_t (*)(void))sub_1006D7784);
  swift_bridgeObjectRetain();
  View.accessibilityIdentifier(_:)(v53, v54, v152, v55);
  swift_bridgeObjectRelease();
  sub_10004FF60((uint64_t)v31, &qword_1011A2E88);
  v56 = v159;
  sub_100065228((uint64_t)v36, v159, &qword_1011C3E80);
  v57 = *(_QWORD *)(a1 + 8);
  v58 = v161;
  v59 = *(uint64_t (**)(uint64_t, uint64_t))(v161 + 56);
  swift_unknownObjectRetain(v57, v60);
  v61 = v59(v160, v58);
  v63 = v62;
  v64 = swift_unknownObjectRelease(v57);
  if (v63)
  {
    v65 = a1;
    v162 = v61;
    v163 = v63;
    v66 = sub_100055B68();
    v67 = Text.init<A>(_:)(&v162, &type metadata for String, v66);
    v69 = v68;
    v71 = v70;
    v73 = v72 & 1;
    LODWORD(v162) = static HierarchicalShapeStyle.secondary.getter(v67);
    v74 = Text.playableForegroundStyle<A>(_:isPlayable:)((int *)&v162, *(_BYTE *)(a1 + 16), v67, v69, v73, v71, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
    v76 = v75;
    v78 = v77;
    v80 = v79;
    sub_100055BAC(v67, v69, v73);
    swift_bridgeObjectRelease();
    if (qword_10119C6B8 != -1)
      swift_once(&qword_10119C6B8, sub_1006CA788);
    v81 = v78 & 1;
    v82 = Text.font(_:)(qword_10124D7D0, v74, v76, v81, v80);
    v84 = v83;
    v86 = v85;
    v88 = v87 & 1;
    sub_100055BAC(v74, v76, v81);
    swift_bridgeObjectRelease();
    v90 = static Font.footnote.getter(v89);
    v91 = Text.font(_:)(v90, v82, v84, v88, v86);
    v93 = v92;
    v95 = v94;
    v97 = v96;
    swift_release();
    sub_100055BAC(v82, v84, v88);
    swift_bridgeObjectRelease();
    v98 = *(_QWORD *)(v65 + 8);
    v99 = v161;
    v100 = *(void (**)(uint64_t, uint64_t))(v161 + 24);
    swift_unknownObjectRetain(v98, v101);
    v102 = (uint64_t)v139;
    v100(v160, v99);
    swift_unknownObjectRelease(v98);
    v103 = type metadata accessor for ArtworkImage.Info(0);
    v104 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 48))(v102, 1, v103);
    sub_10004FF60(v102, (uint64_t *)&unk_1011C6790);
    v105 = v141;
    v106 = v140;
    v107 = v142;
    (*(void (**)(char *, uint64_t, uint64_t))(v141 + 16))(v140, v65, v142);
    if (v104 == 1)
    {
      (*(void (**)(char *, uint64_t))(v105 + 8))(v106, v107);
      v108 = 0;
    }
    else
    {
      v110 = v136;
      v111 = sub_1008237B8(v136);
      v104 = DynamicTypeSize.isAccessibilitySize.getter(v111);
      (*(void (**)(uint64_t, uint64_t))(v137 + 8))(v110, v138);
      (*(void (**)(char *, uint64_t))(v105 + 8))(v106, v107);
      v108 = ~v104 & 1;
    }
    v112 = swift_getKeyPath(&unk_100ECAFA0);
    v162 = v91;
    v163 = v93;
    v113 = v95 & 1;
    v164 = v113;
    v165 = v97;
    v166 = v112;
    v167 = v108;
    v168 = v104 & 1;
    if (qword_10119C6A8 != -1)
      swift_once(&qword_10119C6A8, sub_1006CA714);
    v114 = *(double *)&qword_10124D7C0;
    v115 = sub_100007E8C(&qword_1011A5388);
    v116 = sub_1001C9648();
    v117 = v143;
    View.minimumLineHeight(_:)(v115, v116, v114);
    sub_100055BAC(v91, v93, v113);
    swift_release();
    swift_bridgeObjectRelease();
    v119 = static Alignment.leading.getter(v118);
    v120 = v149;
    v123 = sub_10014B954(0, 1, 0.0, 1, INFINITY, 0, 0, 1, v149, v122, 0.0, 1, 0.0, 1, v119, v121);
    (*(void (**)(char *, uint64_t, double))(v146 + 8))(v117, v147, v123);
    v124 = AccessibilityIdentifier.trackListCellArtist.unsafeMutableAddressor();
    v125 = *v124;
    v126 = v124[1];
    v127 = sub_1006D79EC();
    swift_bridgeObjectRetain();
    v128 = (uint64_t)v145;
    View.accessibilityIdentifier(_:)(v125, v126, v148, v127);
    swift_bridgeObjectRelease();
    sub_10004FF60(v120, &qword_1011A2E78);
    v129 = v144;
    sub_100065228(v128, v144, &qword_1011C3E60);
    v109 = v158;
    sub_100065228(v129, v158, &qword_1011C3E60);
    v48 = 0;
    v56 = v159;
  }
  else
  {
    v109 = v158;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v154 + 56))(v109, v48, 1, v155, v64);
  v130 = v153;
  sub_10004A160(v56, v153, &qword_1011C3E80);
  v131 = v156;
  sub_10004A160(v109, v156, &qword_1011C3E68);
  v132 = v157;
  sub_10004A160(v130, v157, &qword_1011C3E80);
  v133 = sub_100007E8C(&qword_1011C3EB0);
  sub_10004A160(v131, v132 + *(int *)(v133 + 48), &qword_1011C3E68);
  sub_10004FF60(v109, &qword_1011C3E68);
  sub_10004FF60(v56, &qword_1011C3E80);
  sub_10004FF60(v131, &qword_1011C3E68);
  return sub_10004FF60(v130, &qword_1011C3E80);
}

uint64_t sub_1006C65E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, __n128 a5@<Q0>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  unint64_t v68;
  uint64_t v70;
  uint64_t v71;
  uint64_t (*v72)(uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t (*v82)(uint64_t, uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t KeyPath;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t *v97;
  unint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  uint64_t v118;

  v114 = a4;
  v8 = type metadata accessor for Text.Suffix(0, a5);
  v101 = *(_QWORD *)(v8 - 8);
  v102 = v8;
  __chkstk_darwin(v8);
  v100 = (char *)&v99 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011A5320);
  v105 = *(_QWORD *)(v10 - 8);
  v106 = v10;
  __chkstk_darwin(v10);
  v104 = (char *)&v99 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = sub_100007E8C(&qword_1011A5328);
  __chkstk_darwin(v113);
  v103 = (char *)&v99 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v107 = (uint64_t)&v99 - v14;
  v111 = sub_100007E8C(&qword_1011C3EC0);
  __chkstk_darwin(v111);
  v112 = (uint64_t *)((char *)&v99 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = type metadata accessor for DynamicTypeSize(0);
  v108 = *(_QWORD *)(v16 - 8);
  v109 = v16;
  __chkstk_darwin(v16);
  v18 = (char *)&v99 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for Tracklist.VerticalTextStack(0, a2, a3, v19);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)&v99 - v22;
  v24 = sub_100007E8C((uint64_t *)&unk_1011C6790);
  __chkstk_darwin(v24);
  v26 = (char *)&v99 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = *(_QWORD *)(a1 + 8);
  v28 = *(void (**)(uint64_t, uint64_t))(a3 + 24);
  swift_unknownObjectRetain(v27, v29);
  v110 = a2;
  v30 = a2;
  v31 = a3;
  v28(v30, a3);
  swift_unknownObjectRelease(v27);
  v32 = type metadata accessor for ArtworkImage.Info(0);
  LODWORD(v27) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(v26, 1, v32);
  v33 = a1;
  sub_10004FF60((uint64_t)v26, (uint64_t *)&unk_1011C6790);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v23, a1, v20);
  if ((_DWORD)v27 == 1)
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
LABEL_4:
    v37 = *(_QWORD *)(a1 + 8);
    v38 = v31;
    v39 = *(uint64_t (**)(uint64_t, uint64_t))(v31 + 48);
    swift_unknownObjectRetain(v37, v34);
    v40 = v110;
    v41 = v39(v110, v38);
    v43 = v42;
    swift_unknownObjectRelease(v37);
    v115 = v41;
    v116 = v43;
    v44 = sub_100055B68();
    v45 = Text.init<A>(_:)(&v115, &type metadata for String, v44);
    v47 = v46;
    v49 = v48;
    v109 = v48;
    v51 = v50 & 1;
    LODWORD(v108) = v50 & 1;
    v52 = *(_QWORD *)(v33 + 8);
    v53 = *(uint64_t (**)(uint64_t, uint64_t))(v38 + 80);
    swift_unknownObjectRetain(v52, v46);
    LOBYTE(v38) = v53(v40, v38);
    swift_unknownObjectRelease(v52);
    v54 = TextBadge.view.getter(v38);
    v56 = v55;
    v58 = v57 & 1;
    v60 = static Text.+ infix(_:_:)(v45, v47, v51, v49, v54, v55, v58, v59);
    v62 = v61;
    LOBYTE(v53) = v63;
    v65 = v64;
    sub_100055BAC(v54, v56, v58);
    swift_bridgeObjectRelease();
    sub_100055BAC(v45, v47, v108);
    swift_bridgeObjectRelease();
    v66 = v111;
    v67 = v112;
    *v112 = v60;
    v67[1] = v62;
    *((_BYTE *)v67 + 16) = v53 & 1;
    v67[3] = v65;
    swift_storeEnumTagMultiPayload(v67, v66, 0);
    v68 = sub_1001C951C();
    return _ConditionalContent<>.init(storage:)(v67, &type metadata for Text, v113, &protocol witness table for Text, v68);
  }
  v35 = sub_1008237B8((uint64_t)v18);
  v36 = DynamicTypeSize.isAccessibilitySize.getter(v35);
  (*(void (**)(char *, uint64_t))(v108 + 8))(v18, v109);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  if ((v36 & 1) != 0)
    goto LABEL_4;
  v70 = *(_QWORD *)(a1 + 8);
  v71 = v31;
  v72 = *(uint64_t (**)(uint64_t, uint64_t))(v31 + 48);
  swift_unknownObjectRetain(v70, v34);
  v73 = v110;
  v74 = v72(v110, v71);
  v76 = v75;
  swift_unknownObjectRelease(v70);
  v115 = v74;
  v116 = v76;
  v77 = sub_100055B68();
  v115 = Text.init<A>(_:)(&v115, &type metadata for String, v77);
  v116 = v78;
  v117 = v79 & 1;
  v118 = v80;
  v81 = *(_QWORD *)(v33 + 8);
  v82 = *(uint64_t (**)(uint64_t, uint64_t))(v71 + 80);
  swift_unknownObjectRetain(v81, v78);
  LOBYTE(v82) = v82(v73, v71);
  swift_unknownObjectRelease(v81);
  v83 = TextBadge.view.getter((char)v82);
  v85 = v84;
  LOBYTE(v73) = v86 & 1;
  v87 = v100;
  static Text.Suffix.alwaysVisible(_:)(v83, v84, v86 & 1, v88);
  sub_100055BAC(v83, v85, v73);
  swift_bridgeObjectRelease();
  v89 = v104;
  View.textSuffix(_:)(v87, &type metadata for Text, &protocol witness table for Text);
  (*(void (**)(char *, uint64_t))(v101 + 8))(v87, v102);
  sub_100055BAC(v115, v116, v117);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath(&unk_100ECAFA0);
  v92 = v105;
  v91 = v106;
  v93 = (uint64_t)v103;
  (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v103, v89, v106);
  v94 = v113;
  v95 = v93 + *(int *)(v113 + 36);
  *(_QWORD *)v95 = KeyPath;
  *(_QWORD *)(v95 + 8) = 1;
  *(_BYTE *)(v95 + 16) = 0;
  (*(void (**)(char *, uint64_t))(v92 + 8))(v89, v91);
  v96 = v107;
  sub_100065228(v93, v107, &qword_1011A5328);
  v97 = v112;
  sub_10004A160(v96, (uint64_t)v112, &qword_1011A5328);
  swift_storeEnumTagMultiPayload(v97, v111, 1);
  v98 = sub_1001C951C();
  _ConditionalContent<>.init(storage:)(v97, &type metadata for Text, v94, &protocol witness table for Text, v98);
  return sub_10004FF60(v96, &qword_1011A5328);
}

uint64_t sub_1006C6C0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  double v35;
  double v36;
  char v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, _QWORD *);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  int v73;

  v3 = v2;
  v72 = a2;
  v5 = sub_100007E8C((uint64_t *)&unk_1011C6790);
  __chkstk_darwin(v5);
  v68 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011C4158);
  __chkstk_darwin(v7);
  v71 = (uint64_t *)((char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  v70 = (uint64_t)&v66 - v10;
  v11 = sub_100007E8C(&qword_1011C3E70);
  __chkstk_darwin(v11);
  v13 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C(&qword_1011A2EB0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100007E8C(&qword_1011A2EB8);
  __chkstk_darwin(v18);
  v20 = (char *)&v66 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100007E8C(&qword_1011C4160);
  __chkstk_darwin(v21);
  v23 = (char *)&v66 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_100007E8C(&qword_1011A2EA0);
  v25 = __chkstk_darwin(v24);
  v67 = (char *)&v66 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = *(_QWORD *)(a1 + 16);
  v28 = *(_QWORD **)(a1 + 24);
  v66 = v27;
  sub_1006C70EC(v3, v27, v28, (uint64_t)v13, v25);
  v73 = static HierarchicalShapeStyle.primary.getter(v29);
  v69 = v3;
  LOBYTE(v3) = *(_BYTE *)(v3 + 16);
  v30 = sub_1006D7808();
  View.playableForegroundStyle<A>(_:isPlayable:)((uint64_t)&v73, v3, v11, (uint64_t)&type metadata for HierarchicalShapeStyle, v30);
  v31 = sub_10004FF60((uint64_t)v13, &qword_1011C3E70);
  v32 = static Alignment.leading.getter(v31);
  v35 = sub_10014B9AC(0, 1, 0.0, 1, INFINITY, 0, 0, 1, (uint64_t)v20, v34, 0.0, 1, 0.0, 1, v32, v33);
  v36 = (*(double (**)(char *, uint64_t, double))(v15 + 8))(v17, v14, v35);
  v37 = static Edge.Set.trailing.getter(v36);
  if (qword_10119C698 != -1)
    swift_once(&qword_10119C698, sub_1006CA650);
  v38 = EdgeInsets.init(_all:)(*(double *)&qword_10124D7B0);
  v40 = v39;
  v42 = v41;
  v44 = v43;
  sub_10004A160((uint64_t)v20, (uint64_t)v23, &qword_1011A2EB8);
  v45 = &v23[*(int *)(v21 + 36)];
  *v45 = v37;
  *((double *)v45 + 1) = v38;
  *((_QWORD *)v45 + 2) = v40;
  *((_QWORD *)v45 + 3) = v42;
  *((_QWORD *)v45 + 4) = v44;
  v45[40] = 0;
  sub_10004FF60((uint64_t)v20, &qword_1011A2EB8);
  v46 = AccessibilityIdentifier.trackListCellTitle.unsafeMutableAddressor();
  v47 = *v46;
  v48 = v46[1];
  v49 = sub_1006D8600();
  swift_bridgeObjectRetain();
  v50 = (uint64_t)v67;
  View.accessibilityIdentifier(_:)(v47, v48, v21, v49);
  swift_bridgeObjectRelease();
  sub_10004FF60((uint64_t)v23, &qword_1011C4160);
  v51 = v69;
  v52 = *(_QWORD *)(v69 + 8);
  v53 = (void (*)(uint64_t, _QWORD *))v28[3];
  swift_unknownObjectRetain(v52, v54);
  v55 = (uint64_t)v68;
  v56 = v66;
  v53(v66, v28);
  swift_unknownObjectRelease(v52);
  v57 = type metadata accessor for ArtworkImage.Info(0);
  v58 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 48))(v55, 1, v57);
  v59 = sub_10004FF60(v55, (uint64_t *)&unk_1011C6790);
  v60 = v51;
  if (qword_10119C600 != -1)
    v59 = swift_once(&qword_10119C600, sub_1006CA11C);
  if (byte_1011C36B8 == 1 || v58 != 1)
    v61 = static VerticalAlignment.center.getter(v59);
  else
    v61 = static VerticalAlignment.firstTextLineCenter.getter(v59);
  v62 = (uint64_t)v71;
  *v71 = v61;
  *(_QWORD *)(v62 + 8) = 0;
  *(_BYTE *)(v62 + 16) = 0;
  v63 = sub_100007E8C(&qword_1011C4178);
  sub_1006C75D0(v60, v50, v56, (uint64_t)v28, v62 + *(int *)(v63 + 44));
  v64 = v70;
  sub_100065228(v62, v70, &qword_1011C4158);
  sub_100065228(v64, v72, &qword_1011C4158);
  return sub_10004FF60(v50, &qword_1011A2EA0);
}

uint64_t sub_1006C70EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>, __n128 a5@<Q0>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, _QWORD *);
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t (*v28)(uint64_t, _QWORD *);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t, _QWORD *);
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  unint64_t v56;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t (*v61)(uint64_t, _QWORD *);
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  char v67;
  uint64_t v68;
  uint64_t KeyPath;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t *v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;

  v85 = a4;
  v8 = type metadata accessor for Text.Suffix(0, a5);
  v77 = *(_QWORD *)(v8 - 8);
  v78 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011A5320);
  v79 = *(_QWORD *)(v11 - 8);
  v80 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = sub_100007E8C(&qword_1011A5328);
  __chkstk_darwin(v84);
  v15 = (char *)&v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v81 = (uint64_t)&v77 - v17;
  v82 = sub_100007E8C(&qword_1011C3EC0);
  __chkstk_darwin(v82);
  v83 = (uint64_t *)((char *)&v77 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = sub_100007E8C((uint64_t *)&unk_1011C6790);
  __chkstk_darwin(v19);
  v21 = (char *)&v77 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Tracklist.HorizontalTextStack(0, a2, (uint64_t)a3, v22);
  v23 = *(_QWORD *)(a1 + 8);
  v24 = (void (*)(uint64_t, _QWORD *))a3[3];
  swift_unknownObjectRetain(v23, v25);
  v24(a2, a3);
  swift_unknownObjectRelease(v23);
  v26 = type metadata accessor for ArtworkImage.Info(0);
  v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v21, 1, v26);
  sub_10004FF60((uint64_t)v21, (uint64_t *)&unk_1011C6790);
  v28 = (uint64_t (*)(uint64_t, _QWORD *))a3[6];
  swift_unknownObjectRetain(v23, v29);
  v30 = v28(a2, a3);
  v32 = v31;
  swift_unknownObjectRelease(v23);
  v86 = v30;
  v87 = v32;
  v33 = sub_100055B68();
  if (v27 == 1)
  {
    v34 = Text.init<A>(_:)(&v86, &type metadata for String, v33);
    v36 = v35;
    v38 = v37;
    v81 = v37;
    v40 = v39 & 1;
    v41 = (uint64_t (*)(uint64_t, _QWORD *))a3[10];
    swift_unknownObjectRetain(v23, v35);
    v42 = v41(a2, a3);
    swift_unknownObjectRelease(v23);
    v43 = TextBadge.view.getter(v42);
    v45 = v44;
    v47 = v46 & 1;
    v49 = static Text.+ infix(_:_:)(v34, v36, v40, v38, v43, v44, v47, v48);
    v51 = v50;
    LOBYTE(v41) = v52;
    v80 = v53;
    sub_100055BAC(v43, v45, v47);
    swift_bridgeObjectRelease();
    sub_100055BAC(v34, v36, v40);
    swift_bridgeObjectRelease();
    v54 = v82;
    v55 = v83;
    *v83 = v49;
    v55[1] = v51;
    *((_BYTE *)v55 + 16) = v41 & 1;
    v55[3] = v80;
    swift_storeEnumTagMultiPayload(v55, v54, 0);
    v56 = sub_1001C951C();
    return _ConditionalContent<>.init(storage:)(v55, &type metadata for Text, v84, &protocol witness table for Text, v56);
  }
  else
  {
    v86 = Text.init<A>(_:)(&v86, &type metadata for String, v33);
    v87 = v58;
    v88 = v59 & 1;
    v89 = v60;
    v61 = (uint64_t (*)(uint64_t, _QWORD *))a3[10];
    swift_unknownObjectRetain(v23, v58);
    v62 = v61(a2, a3);
    swift_unknownObjectRelease(v23);
    v63 = TextBadge.view.getter(v62);
    v65 = v64;
    v67 = v66 & 1;
    static Text.Suffix.alwaysVisible(_:)(v63, v64, v66 & 1, v68);
    sub_100055BAC(v63, v65, v67);
    swift_bridgeObjectRelease();
    View.textSuffix(_:)(v10, &type metadata for Text, &protocol witness table for Text);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v10, v78);
    sub_100055BAC(v86, v87, v88);
    swift_bridgeObjectRelease();
    KeyPath = swift_getKeyPath(&unk_100ECAFA0);
    v71 = v79;
    v70 = v80;
    (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v15, v13, v80);
    v72 = v84;
    v73 = &v15[*(int *)(v84 + 36)];
    *(_QWORD *)v73 = KeyPath;
    *((_QWORD *)v73 + 1) = 1;
    v73[16] = 0;
    (*(void (**)(char *, uint64_t))(v71 + 8))(v13, v70);
    v74 = v81;
    sub_100065228((uint64_t)v15, v81, &qword_1011A5328);
    v75 = v83;
    sub_10004A160(v74, (uint64_t)v83, &qword_1011A5328);
    swift_storeEnumTagMultiPayload(v75, v82, 1);
    v76 = sub_1001C951C();
    _ConditionalContent<>.init(storage:)(v75, &type metadata for Text, v72, &protocol witness table for Text, v76);
    return sub_10004FF60(v74, &qword_1011A5328);
  }
}

uint64_t sub_1006C75D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  _BOOL8 v70;
  uint64_t KeyPath;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  double v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t (*v84)(uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  double v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _OWORD *v93;
  __int128 v94;
  double v95;
  char v96;
  char *v97;
  double v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  double v109;
  double v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _OWORD *v114;
  __int128 v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char v121;
  char v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char v128;
  char v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  __n128 v133;
  uint64_t *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  double v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  _OWORD *v159;
  __int128 v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  uint64_t v174;
  uint64_t *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  unint64_t v179;
  uint64_t v180;
  unint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  int v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  __int128 v218;
  __int128 v219;
  __int128 v220;
  __int128 v221;
  __int128 v222;
  __int128 v223;
  __int128 v224;
  __int128 v225;
  __int128 v226;
  __int128 v227;
  uint64_t v228;
  __int128 v229;
  __int128 v230;
  __int128 v231;
  __int128 v232;
  __int128 v233;
  __int128 v234;
  __int128 v235;
  __int128 v236;
  __int128 v237;
  __int128 v238;
  uint64_t v239;
  __int128 v240;
  __int128 v241;
  __int128 v242;
  __int128 v243;
  __int128 v244;
  __int128 v245;
  __int128 v246;
  __int128 v247;
  __int128 v248;
  __int128 v249;
  uint64_t v250;
  _OWORD v251[2];
  __int128 v252;
  _OWORD v253[3];
  uint64_t v254;
  uint64_t v255;
  char v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  char v260;

  v214 = a2;
  v216 = a5;
  v210 = sub_100007E8C(&qword_1011C4180);
  __chkstk_darwin(v210);
  v200 = (uint64_t)&v182 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011A2E98);
  __chkstk_darwin(v9);
  v198 = (uint64_t)&v182 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v199 = (uint64_t)&v182 - v12;
  v207 = sub_100007E8C(&qword_1011C4188);
  __chkstk_darwin(v207);
  v209 = (uint64_t)&v182 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v208 = sub_100007E8C(&qword_1011C4190);
  __chkstk_darwin(v208);
  v189 = (uint64_t)&v182 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(&qword_1011C4198);
  __chkstk_darwin(v15);
  v188 = (uint64_t)&v182 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v196 = (uint64_t)&v182 - v18;
  v183 = sub_100007E8C(&qword_1011C41A0);
  __chkstk_darwin(v183);
  v186 = (uint64_t)&v182 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v185 = sub_100007E8C(&qword_1011C41A8);
  __chkstk_darwin(v185);
  v187 = (uint64_t)&v182 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v184 = (uint64_t)&v182 - v22;
  __chkstk_darwin(v23);
  v195 = (uint64_t)&v182 - v24;
  v205 = sub_100007E8C(&qword_1011C41B0);
  __chkstk_darwin(v205);
  v197 = (uint64_t)&v182 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v206 = (uint64_t)&v182 - v27;
  __chkstk_darwin(v28);
  v201 = (uint64_t)&v182 - v29;
  v215 = sub_100007E8C(&qword_1011C41B8);
  __chkstk_darwin(v215);
  v211 = (char *)&v182 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_100007E8C((uint64_t *)&unk_1011C6790);
  __chkstk_darwin(v31);
  v202 = (char *)&v182 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_100007E8C(&qword_1011A2E90);
  __chkstk_darwin(v33);
  v217 = (char *)&v182 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_100007E8C(&qword_1011C41C0);
  __chkstk_darwin(v35);
  v37 = (char *)&v182 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_100007E8C(&qword_1011A2EA8);
  __chkstk_darwin(v38);
  v40 = (char *)&v182 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v203 = type metadata accessor for Tracklist.HorizontalTextStack(0, a3, a4, v41);
  v204 = a1;
  v42 = *(_QWORD *)(a1 + 8);
  v43 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 56);
  swift_unknownObjectRetain(v42, v44);
  v212 = a3;
  v213 = a4;
  v45 = v43(a3, a4);
  v47 = v46;
  swift_unknownObjectRelease(v42);
  if (v47)
  {
    v192 = v35;
    v193 = v38;
    v194 = v37;
    *(_QWORD *)&v240 = v45;
    *((_QWORD *)&v240 + 1) = v47;
    v182 = sub_100055B68();
    v49 = Text.init<A>(_:)(&v240, &type metadata for String, v182);
    v51 = v50;
    v53 = v52;
    v55 = v54 & 1;
    LODWORD(v240) = static HierarchicalShapeStyle.secondary.getter(v49);
    v56 = v204;
    v57 = Text.playableForegroundStyle<A>(_:isPlayable:)((int *)&v240, *(_BYTE *)(v204 + 16), v49, v51, v55, v53, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
    v59 = v58;
    v190 = v58;
    v61 = v60;
    v191 = v62 & 1;
    sub_100055BAC(v49, v51, v55);
    swift_bridgeObjectRelease();
    v63 = *(_QWORD *)(v56 + 8);
    v64 = v213;
    v65 = *(void (**)(uint64_t, uint64_t))(v213 + 24);
    swift_unknownObjectRetain(v63, v66);
    v67 = (uint64_t)v202;
    v65(v212, v64);
    swift_unknownObjectRelease(v63);
    v68 = type metadata accessor for ArtworkImage.Info(0);
    v69 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 48))(v67, 1, v68);
    LOBYTE(v63) = v69 == 1;
    v70 = v69 != 1;
    sub_10004FF60(v67, (uint64_t *)&unk_1011C6790);
    KeyPath = swift_getKeyPath(&unk_100ECAFA0);
    *(_QWORD *)&v240 = v57;
    *((_QWORD *)&v240 + 1) = v59;
    LOBYTE(v59) = v191;
    LOBYTE(v241) = v191;
    *((_QWORD *)&v241 + 1) = v61;
    *(_QWORD *)&v242 = KeyPath;
    *((_QWORD *)&v242 + 1) = v70;
    LOBYTE(v243) = v63;
    v72 = AccessibilityIdentifier.trackListCellArtist.unsafeMutableAddressor();
    v73 = *v72;
    v74 = v72[1];
    swift_bridgeObjectRetain();
    v75 = sub_100007E8C(&qword_1011A5388);
    v76 = sub_1001C9648();
    View.accessibilityIdentifier(_:)(v73, v74, v75, v76);
    swift_bridgeObjectRelease();
    sub_100055BAC(v57, v190, v59);
    swift_release();
    swift_bridgeObjectRelease();
    v78 = *(double *)(v56 + 56);
    v79 = v56;
    if (qword_10119C610 != -1)
      swift_once(&qword_10119C610, sub_1006CA19C);
    v80 = (uint64_t)v211;
    v81 = v214;
    if (*(double *)&qword_10124D718 <= v78
      && (v82 = *(_QWORD *)(v79 + 8),
          v83 = v213,
          v84 = *(uint64_t (**)(uint64_t, uint64_t))(v213 + 64),
          swift_unknownObjectRetain(v82, v77),
          v85 = v84(v212, v83),
          v87 = v86,
          swift_unknownObjectRelease(v82),
          v87))
    {
      v88 = sub_1006C8528(1, v203);
      v90 = static Alignment.leading.getter(v89);
      _FrameLayout.init(width:height:alignment:)(v251, *(_QWORD *)&v88, 0, 0, 1, v90, v91);
      v92 = v201;
      sub_10004A160(v81, v201, &qword_1011A2EA0);
      v93 = (_OWORD *)(v92 + *(int *)(v205 + 36));
      v94 = v251[1];
      *v93 = v251[0];
      v93[1] = v94;
      v95 = *(double *)&v252;
      v93[2] = v252;
      v96 = static Edge.Set.trailing.getter(v95);
      v97 = v217;
      if (qword_10119C698 != -1)
        swift_once(&qword_10119C698, sub_1006CA650);
      v98 = EdgeInsets.init(_all:)(*(double *)&qword_10124D7B0);
      v100 = v99;
      v102 = v101;
      v104 = v103;
      v105 = (uint64_t)v97;
      v106 = v186;
      v107 = sub_10004A160(v105, v186, &qword_1011A2E90);
      v108 = v106 + *(int *)(v183 + 36);
      *(_BYTE *)v108 = v96;
      *(double *)(v108 + 8) = v98;
      *(_QWORD *)(v108 + 16) = v100;
      *(_QWORD *)(v108 + 24) = v102;
      *(_QWORD *)(v108 + 32) = v104;
      *(_BYTE *)(v108 + 40) = 0;
      if (qword_10119C600 != -1)
        v107 = swift_once(&qword_10119C600, sub_1006CA11C);
      v109 = v78 * 0.25;
      if (byte_1011C36B8)
        v109 = v78;
      v110 = v109;
      v111 = static Alignment.leading.getter(v107);
      _FrameLayout.init(width:height:alignment:)(v253, *(_QWORD *)&v110, 0, 0, 1, v111, v112);
      v113 = v184;
      sub_10004A160(v106, v184, &qword_1011C41A0);
      v114 = (_OWORD *)(v113 + *(int *)(v185 + 36));
      v115 = v253[1];
      *v114 = v253[0];
      v114[1] = v115;
      v114[2] = v253[2];
      sub_10004FF60(v106, &qword_1011C41A0);
      sub_100065228(v113, v195, &qword_1011C41A8);
      *(_QWORD *)&v240 = v85;
      *((_QWORD *)&v240 + 1) = v87;
      v116 = Text.init<A>(_:)(&v240, &type metadata for String, v182);
      v118 = v117;
      v120 = v119;
      v122 = v121 & 1;
      LODWORD(v240) = static HierarchicalShapeStyle.secondary.getter(v116);
      v123 = Text.playableForegroundStyle<A>(_:isPlayable:)((int *)&v240, *(_BYTE *)(v79 + 16), v116, v118, v122, v120, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
      v125 = v124;
      v127 = v126;
      v129 = v128 & 1;
      sub_100055BAC(v116, v118, v122);
      swift_bridgeObjectRelease();
      v130 = swift_getKeyPath(&unk_100ECAFA0);
      v254 = v123;
      v255 = v125;
      v256 = v129;
      v257 = v127;
      v258 = v130;
      v259 = 1;
      v260 = 0;
      v131 = static Alignment.leading.getter(v130);
      sub_10014A880(0, 1, 0.0, 1, INFINITY, 0, 0, 1, (uint64_t)&v229, v133, 0.0, 1, 0.0, 1, v131, v132);
      sub_100055BAC(v123, v125, v129);
      swift_release();
      swift_bridgeObjectRelease();
      v248 = v237;
      v249 = v238;
      v244 = v233;
      v245 = v234;
      v246 = v235;
      v247 = v236;
      v240 = v229;
      v241 = v230;
      v242 = v231;
      v243 = v232;
      v226 = v237;
      v227 = v238;
      v222 = v233;
      v223 = v234;
      v224 = v235;
      v225 = v236;
      v218 = v229;
      v219 = v230;
      v250 = v239;
      v228 = v239;
      v220 = v231;
      v221 = v232;
      v134 = AccessibilityIdentifier.trackListCellAlbum.unsafeMutableAddressor();
      v135 = *v134;
      v136 = v134[1];
      swift_bridgeObjectRetain();
      v137 = sub_100007E8C(&qword_1011B3600);
      v138 = sub_10005610C(&qword_1011B3608, &qword_1011B3600, (void (*)(void))sub_1001C9648);
      v139 = v196;
      View.accessibilityIdentifier(_:)(v135, v136, v137, v138);
      swift_bridgeObjectRelease();
      sub_1004886B4((uint64_t)&v240);
      v140 = v206;
      sub_10004A160(v201, v206, &qword_1011C41B0);
      v141 = v195;
      v142 = v187;
      sub_10004A160(v195, v187, &qword_1011C41A8);
      v143 = v188;
      sub_10004A160(v139, v188, &qword_1011C4198);
      v144 = v189;
      sub_10004A160(v140, v189, &qword_1011C41B0);
      v145 = sub_100007E8C(&qword_1011C41F8);
      sub_10004A160(v142, v144 + *(int *)(v145 + 48), &qword_1011C41A8);
      sub_10004A160(v143, v144 + *(int *)(v145 + 64), &qword_1011C4198);
      sub_10004FF60(v143, &qword_1011C4198);
      sub_10004FF60(v142, &qword_1011C41A8);
      sub_10004FF60(v140, &qword_1011C41B0);
      v146 = v209;
      sub_10004A160(v144, v209, &qword_1011C4190);
      swift_storeEnumTagMultiPayload(v146, v207, 0);
      v147 = sub_100049F28(&qword_1011C41D0, &qword_1011C4190, (uint64_t)&protocol conformance descriptor for TupleView<A>);
      v148 = sub_100049F28(&qword_1011C41D8, &qword_1011C4180, (uint64_t)&protocol conformance descriptor for TupleView<A>);
      v80 = (uint64_t)v211;
      _ConditionalContent<>.init(storage:)(v146, v208, v210, v147, v148);
      sub_10004FF60(v144, &qword_1011C4190);
      sub_10004FF60(v196, &qword_1011C4198);
      sub_10004FF60(v141, &qword_1011C41A8);
      sub_10004FF60(v201, &qword_1011C41B0);
      v149 = v215;
      v151 = v193;
      v150 = (uint64_t)v194;
      v152 = v217;
    }
    else
    {
      v153 = sub_1006C8528(0, v203);
      v155 = static Alignment.leading.getter(v154);
      _FrameLayout.init(width:height:alignment:)(&v240, *(_QWORD *)&v153, 0, 0, 1, v155, v156);
      v157 = v206;
      v158 = sub_10004A160(v81, v206, &qword_1011A2EA0);
      v159 = (_OWORD *)(v157 + *(int *)(v205 + 36));
      v160 = v241;
      *v159 = v240;
      v159[1] = v160;
      v159[2] = v242;
      v161 = static Alignment.leading.getter(v158);
      v162 = v199;
      v163 = v217;
      sub_10014BA68(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v199, 0.0, 1, 0.0, 1, v161, v164);
      v165 = v197;
      sub_10004A160(v157, v197, &qword_1011C41B0);
      v166 = v198;
      sub_10004A160(v162, v198, &qword_1011A2E98);
      v167 = v200;
      sub_10004A160(v165, v200, &qword_1011C41B0);
      v168 = sub_100007E8C(&qword_1011C41F0);
      sub_10004A160(v166, v167 + *(int *)(v168 + 48), &qword_1011A2E98);
      sub_10004FF60(v166, &qword_1011A2E98);
      sub_10004FF60(v165, &qword_1011C41B0);
      v169 = v209;
      sub_10004A160(v167, v209, &qword_1011C4180);
      swift_storeEnumTagMultiPayload(v169, v207, 1);
      v170 = sub_100049F28(&qword_1011C41D0, &qword_1011C4190, (uint64_t)&protocol conformance descriptor for TupleView<A>);
      v171 = sub_100049F28(&qword_1011C41D8, &qword_1011C4180, (uint64_t)&protocol conformance descriptor for TupleView<A>);
      _ConditionalContent<>.init(storage:)(v169, v208, v210, v170, v171);
      sub_10004FF60(v167, &qword_1011C4180);
      v172 = v162;
      v152 = v163;
      v151 = v193;
      sub_10004FF60(v172, &qword_1011A2E98);
      sub_10004FF60(v157, &qword_1011C41B0);
      v149 = v215;
      v150 = (uint64_t)v194;
    }
    sub_10004A160(v80, v150, &qword_1011C41B8);
    swift_storeEnumTagMultiPayload(v150, v192, 0);
    v173 = sub_1006D8734();
    v174 = sub_10005610C(&qword_1011C41E0, &qword_1011A2EA8, (void (*)(void))sub_1006D87D8);
    _ConditionalContent<>.init(storage:)(v150, v149, v151, v173, v174);
    sub_10004FF60(v80, &qword_1011C41B8);
    v175 = &qword_1011A2E90;
    v176 = (uint64_t)v152;
  }
  else
  {
    v177 = static Alignment.leading.getter(v48);
    sub_10014BA04(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v40, 0.0, 1, 0.0, 1, v177, v178);
    sub_10004A160((uint64_t)v40, (uint64_t)v37, &qword_1011A2EA8);
    swift_storeEnumTagMultiPayload(v37, v35, 1);
    v179 = sub_1006D8734();
    v180 = sub_10005610C(&qword_1011C41E0, &qword_1011A2EA8, (void (*)(void))sub_1006D87D8);
    _ConditionalContent<>.init(storage:)(v37, v215, v38, v179, v180);
    v176 = (uint64_t)v40;
    v175 = &qword_1011A2EA8;
  }
  return sub_10004FF60(v176, v175);
}

double sub_1006C8528(int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(_BYTE *, uint64_t, uint64_t);
  uint64_t v23;
  double v24;
  double *v25;
  int v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  __n128 v29;
  int v30;
  char v31;
  double v32;
  double v33;
  double v34;
  _BYTE v36[4];
  int v37;
  uint64_t v38;

  v3 = v2;
  v37 = a1;
  v5 = sub_100007E8C((uint64_t *)&unk_1011C6790);
  __chkstk_darwin(v5);
  v7 = &v36[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v10 = &v36[-v9];
  v38 = type metadata accessor for DynamicTypeSize(0);
  v11 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v13 = &v36[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = *(double *)(v2 + 56);
  sub_1008237B8((uint64_t)v13);
  v15 = *(_QWORD *)(v2 + 8);
  v18 = a2 + 16;
  v17 = *(_QWORD *)(a2 + 16);
  v16 = *(_QWORD *)(v18 + 8);
  v19 = *(void (**)(uint64_t, uint64_t))(v16 + 24);
  swift_unknownObjectRetain(v15, v20);
  v19(v17, v16);
  swift_unknownObjectRelease(v15);
  v21 = type metadata accessor for ArtworkImage.Info(0);
  v22 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48);
  if (v22(v10, 1, v21) == 1)
  {
    sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_1011C6790);
    v24 = 1.0;
  }
  else
  {
    v25 = (double *)&v10[*(int *)(v21 + 24)];
    v24 = *v25;
    v26 = *((unsigned __int8 *)v25 + 8);
    sub_10005B748((uint64_t)v10, type metadata accessor for ArtworkImage.Info);
    if (v26)
      v24 = 1.0;
  }
  v27 = *(_QWORD *)(v3 + 8);
  v28 = *(void (**)(uint64_t, uint64_t))(v16 + 96);
  swift_unknownObjectRetain(v27, v23);
  v28(v17, v16);
  v29 = swift_unknownObjectRelease(v27);
  v30 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t, __n128))v22)(v7, 1, v21, v29);
  sub_10004FF60((uint64_t)v7, (uint64_t *)&unk_1011C6790);
  if (qword_10119C600 != -1)
    swift_once(&qword_10119C600, sub_1006CA11C);
  if ((byte_1011C36B8 & 1) == 0)
  {
    v31 = v30 != 1;
    v32 = 0.45;
    if ((v37 & 1) != 0)
      v32 = 0.3;
    v33 = v32 * v14;
    v34 = sub_1006D7898(v31, (uint64_t)v13, v24);
    v14 = v33 - (v34 - sub_1006D7898(v31, (uint64_t)v13, 1.0));
  }
  (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v13, v38);
  return v14;
}

uint64_t sub_1006C87B0@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, uint64_t);
  char *v63;
  uint64_t v64;
  uint64_t v65;
  __n128 v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  _QWORD *v78;
  char *v79;
  uint64_t v80;
  double v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _OWORD *v86;
  __int128 v87;
  char *v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  double v92;
  uint64_t v93;
  double v94;
  char v95;
  double v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void (*v106)(__n128);
  __n128 v107;
  __n128 v108;
  uint64_t v109;
  uint64_t v110;
  int v111;
  char *v112;
  uint64_t v113;
  char *v114;
  char v115;
  void (*v116)(char *, uint64_t);
  char *v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  __n128 v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  double v131;
  uint64_t v132;
  char v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t (*v136)(uint64_t, uint64_t);
  double v137;
  char v138;
  double v139;
  id v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char v149;
  char v150;
  char v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char v157;
  uint64_t v158;
  __n128 v159;
  uint64_t v160;
  uint64_t v161;
  int v162;
  uint64_t v163;
  _QWORD *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  double v176;
  char v177;
  double v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  void *v196;
  uint64_t v197;
  char *v198;
  uint64_t v199;
  char *v200;
  uint64_t v201;
  char *v202;
  char *v203;
  __n128 v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  char v213;
  uint64_t v214;
  uint64_t v215;
  unint64_t v216;
  uint64_t v217;
  uint64_t *v218;
  uint64_t v219;
  uint64_t v220;
  unint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t KeyPath;
  uint64_t v225;
  uint64_t v226;
  uint64_t *v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t (*v234)(uint64_t, uint64_t);
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  unint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  BOOL v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t *v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  int *v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  _QWORD *v270;
  char *v271;
  uint64_t v272;
  char *v273;
  uint64_t v274;
  char *v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  char *v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  char *v284;
  uint64_t v285;
  uint64_t v286;
  char *v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  char *v296;
  uint64_t v297;
  char *v298;
  char *v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  char *v303;
  uint64_t v304;
  char *v305;
  uint64_t v306;
  uint64_t v307;
  char *v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t *v324;
  uint64_t v325;
  unint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  __int128 v332;
  __int128 v333;
  __int128 v334;
  __int128 v335;
  __int128 v336;
  __int128 v337;
  __int128 v338;
  __int128 v339;
  __int128 v340;
  __int128 v341;
  __int128 v342;
  _OWORD v343[2];
  char v344;
  char v345;
  char v346;
  char v347;
  char v348;
  char v349;
  char v350;
  char v351;
  __int128 v352;
  __int128 v353;
  __int128 v354;
  __int128 v355;
  __int128 v356;
  __int128 v357;
  __int128 v358;
  __int128 v359;
  __int128 v360;
  __int128 v361;
  _OWORD v362[3];
  _OWORD v363[3];
  uint64_t v364;
  char v365;
  uint64_t v366;
  char v367;
  uint64_t v368;
  char v369;
  uint64_t v370;
  char v371;
  uint64_t v372;
  char v373;
  uint64_t v374;
  char v375;
  uint64_t v376;
  uint64_t v377;

  v322 = a2;
  v316 = _s17ContextMenuButtonVMa(0);
  __chkstk_darwin(v316);
  v324 = (uint64_t *)((char *)&v269 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v319 = sub_100007E8C(&qword_1011C3EC8);
  __chkstk_darwin(v319);
  v321 = (uint64_t)&v269 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v318 = (uint64_t)&v269 - v7;
  __chkstk_darwin(v8);
  v320 = (uint64_t)&v269 - v9;
  v10 = type metadata accessor for Duration.UnitsFormatStyle.FractionalPartDisplayStrategy(0);
  v281 = *(_QWORD *)(v10 - 8);
  v282 = v10;
  __chkstk_darwin(v10);
  v280 = (char *)&v269 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v279 = type metadata accessor for Duration.UnitsFormatStyle.ZeroValueUnitsDisplayStrategy(0);
  v277 = *(_QWORD *)(v279 - 8);
  __chkstk_darwin(v279);
  v275 = (char *)&v269 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v274 = type metadata accessor for Duration.UnitsFormatStyle.UnitWidth(0);
  v272 = *(_QWORD *)(v274 - 8);
  __chkstk_darwin(v274);
  v271 = (char *)&v269 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v278 = type metadata accessor for Duration.UnitsFormatStyle(0);
  v276 = *(_QWORD *)(v278 - 8);
  __chkstk_darwin(v278);
  v273 = (char *)&v269 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v283 = sub_100007E8C(&qword_1011AFAD8);
  __chkstk_darwin(v283);
  v284 = (char *)&v269 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C(&qword_1011C3ED0);
  __chkstk_darwin(v16);
  v287 = (char *)&v269 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100007E8C(&qword_1011C3ED8);
  v313 = *(_QWORD *)(v18 - 8);
  v314 = v18;
  __chkstk_darwin(v18);
  v286 = (uint64_t)&v269 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v285 = (uint64_t)&v269 - v21;
  v22 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
  __chkstk_darwin(v22);
  v311 = (uint64_t)&v269 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_100007E8C(&qword_1011C3EE0);
  __chkstk_darwin(v24);
  v317 = (uint64_t)&v269 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v330 = (uint64_t)&v269 - v27;
  v310 = _s27DownloadStatusIndicatorViewVMa(0);
  __chkstk_darwin(v310);
  v298 = (char *)&v269 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v307 = sub_100007E8C(&qword_1011BE868);
  __chkstk_darwin(v307);
  v309 = (uint64_t)&v269 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v304 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v302 = *(_QWORD *)(v304 - 8);
  __chkstk_darwin(v304);
  v303 = (char *)&v269 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v306 = type metadata accessor for MusicPlayer.PlayabilityStatus.UnplayableReason(0);
  v297 = *(_QWORD *)(v306 - 8);
  __chkstk_darwin(v306);
  v296 = (char *)&v269 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v305 = (char *)&v269 - v33;
  v34 = sub_100007E8C(&qword_1011BE870);
  __chkstk_darwin(v34);
  v315 = (uint64_t)&v269 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  v329 = (uint64_t)&v269 - v37;
  v38 = type metadata accessor for DynamicTypeSize(0);
  v325 = *(_QWORD *)(v38 - 8);
  v326 = v38;
  __chkstk_darwin(v38);
  v308 = (char *)&v269 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v40);
  v289 = (uint64_t)&v269 - v41;
  v288 = _s6ButtonVMa(0);
  __chkstk_darwin(v288);
  v299 = (char *)&v269 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v290 = sub_100007E8C(&qword_1011C3EE8);
  __chkstk_darwin(v290);
  v291 = (uint64_t)&v269 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v292 = sub_100007E8C(&qword_1011C3EF0);
  __chkstk_darwin(v292);
  v295 = (uint64_t)&v269 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_100007E8C(&qword_1011C3EF8);
  v300 = *(_QWORD *)(v45 - 8);
  v301 = v45;
  __chkstk_darwin(v45);
  v294 = (uint64_t)&v269 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v47);
  v293 = (uint64_t)&v269 - v48;
  v49 = sub_100007E8C((uint64_t *)&unk_1011A64E8);
  __chkstk_darwin(v49);
  v51 = (char *)&v269 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for Tracklist.ReactionsConfiguration(0);
  v53 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v55 = (uint64_t *)((char *)&v269 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0));
  v56 = sub_100007E8C(&qword_1011C3F00);
  __chkstk_darwin(v56);
  v312 = (uint64_t)&v269 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v58);
  v331 = (uint64_t)&v269 - v59;
  v323 = v2;
  v60 = *(_QWORD *)(v2 + 8);
  v61 = *((_QWORD *)a1 + 4);
  v62 = *(void (**)(uint64_t, uint64_t))(v61 + 112);
  v63 = a1;
  v64 = *((_QWORD *)a1 + 2);
  swift_unknownObjectRetain(v60, v65);
  v327 = v64;
  v328 = v61;
  v62(v64, v61);
  v66 = swift_unknownObjectRelease(v60);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v53 + 48))(v51, 1, v52, v66) == 1)
  {
    sub_10004FF60((uint64_t)v51, (uint64_t *)&unk_1011A64E8);
    v67 = 1;
    v69 = v323;
    v68 = v324;
    v70 = v331;
    v71 = v63;
    v72 = v306;
    v73 = v303;
    v74 = v301;
    goto LABEL_13;
  }
  sub_10005B6C0((uint64_t)v51, (uint64_t)v55, type metadata accessor for Tracklist.ReactionsConfiguration);
  v75 = *v55;
  v76 = *(int *)(v52 + 20);
  v270 = v55;
  v77 = (char *)v55 + v76;
  v78 = v299;
  sub_10005B704((uint64_t)v55 + v76, (uint64_t)&v299[*(int *)(v288 + 20)], _s7ContextVMa_1);
  *v78 = v75;
  v79 = v63;
  v69 = v323;
  swift_retain();
  v80 = v289;
  sub_1008237B8(v289);
  v81 = static Reactions.StackView.Specs.width(for:)(v80);
  v82 = (*(uint64_t (**)(uint64_t, unint64_t))(v325 + 8))(v80, v326);
  v83 = static Alignment.center.getter(v82);
  _FrameLayout.init(width:height:alignment:)(v363, *(_QWORD *)&v81, 0, 0, 1, v83, v84);
  v85 = v291;
  sub_10005B704((uint64_t)v78, v291, _s6ButtonVMa);
  v86 = (_OWORD *)(v85 + *(int *)(v290 + 36));
  v87 = v363[1];
  *v86 = v363[0];
  v86[1] = v87;
  v86[2] = v363[2];
  sub_10005B748((uint64_t)v78, _s6ButtonVMa);
  v88 = &v77[*(int *)(_s7ContextVMa_1(0) + 20)];
  v89 = v88[8];
  v68 = v324;
  v70 = v331;
  v72 = v306;
  v90 = v85;
  if (v89 == 255)
    goto LABEL_9;
  v91 = *(_QWORD *)v88;
  if ((v89 & 1) != 0)
  {
    if ((unint64_t)v91 >> 62)
    {
      if (v91 >= 0)
        v267 = v91 & 0xFFFFFFFFFFFFFF8;
      else
        v267 = *(_QWORD *)v88;
      swift_bridgeObjectRetain();
      v268 = _CocoaArrayWrapper.endIndex.getter(v267);
      sub_10013BC80(v91, v89);
      v92 = 1.0;
      if (v268)
        goto LABEL_10;
      goto LABEL_9;
    }
    v92 = 1.0;
    if (!*(_QWORD *)((v91 & 0xFFFFFFFFFFFFF8) + 0x10))
LABEL_9:
      v92 = 0.0;
  }
  else
  {
    v92 = 1.0;
    if (!*(_QWORD *)(v91 + 16))
      goto LABEL_9;
  }
LABEL_10:
  v299 = v79;
  v93 = v295;
  sub_10004A160(v90, v295, &qword_1011C3EE8);
  *(double *)(v93 + *(int *)(v292 + 36)) = v92;
  sub_10004FF60(v90, &qword_1011C3EE8);
  v95 = static Edge.Set.trailing.getter(v94);
  if (qword_10119C6D8 != -1)
    swift_once(&qword_10119C6D8, sub_1006CA930);
  v96 = EdgeInsets.init(_all:)(*(double *)&qword_10124D7F0);
  v98 = v97;
  v100 = v99;
  v102 = v101;
  v103 = v294;
  sub_10004A160(v93, v294, &qword_1011C3EF0);
  v74 = v301;
  v104 = v103 + *(int *)(v301 + 36);
  *(_BYTE *)v104 = v95;
  *(double *)(v104 + 8) = v96;
  *(_QWORD *)(v104 + 16) = v98;
  *(_QWORD *)(v104 + 24) = v100;
  *(_QWORD *)(v104 + 32) = v102;
  *(_BYTE *)(v104 + 40) = 0;
  sub_10004FF60(v93, &qword_1011C3EF0);
  sub_10005B748((uint64_t)v270, type metadata accessor for Tracklist.ReactionsConfiguration);
  v105 = v293;
  sub_100065228(v103, v293, &qword_1011C3EF8);
  sub_100065228(v105, v70, &qword_1011C3EF8);
  v67 = 0;
  v73 = v303;
  v71 = v299;
LABEL_13:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v300 + 56))(v70, v67, 1, v74);
  v106 = *(void (**)(__n128))(**(_QWORD **)(v69 + 40) + 256);
  v107 = swift_retain();
  v106(v107);
  v108 = swift_release();
  v109 = v302;
  v110 = v304;
  v111 = (*(uint64_t (**)(char *, uint64_t, __n128))(v302 + 88))(v73, v304, v108);
  v112 = v305;
  if (v111 == enum case for MusicPlayer.PlayabilityStatus.unplayable(_:))
  {
    (*(void (**)(char *, uint64_t))(v109 + 96))(v73, v110);
    v113 = v297;
    (*(void (**)(char *, char *, uint64_t))(v297 + 32))(v112, v73, v72);
    v114 = v296;
    (*(void (**)(char *, _QWORD, uint64_t))(v113 + 104))(v296, enum case for MusicPlayer.PlayabilityStatus.UnplayableReason.userUploadRequired(_:), v72);
    v115 = static MusicPlayer.PlayabilityStatus.UnplayableReason.== infix(_:_:)(v112, v114);
    v116 = *(void (**)(char *, uint64_t))(v113 + 8);
    v116(v114, v72);
    if ((v115 & 1) != 0)
    {
      v117 = v112;
      v118 = v309;
      swift_storeEnumTagMultiPayload(v309, v307, 0);
      v119 = sub_10062D0C4();
      v120 = sub_100048748(&qword_1011BE880, _s27DownloadStatusIndicatorViewVMa, (uint64_t)&unk_100EC555C);
      _ConditionalContent<>.init(storage:)(v118, &_s19UploadRequiredImageVN, v310, v119, v120);
      v116(v117, v72);
      goto LABEL_19;
    }
    v116(v112, v72);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v109 + 8))(v73, v110);
  }
  v121 = swift_retain();
  v122 = (uint64_t)v298;
  dispatch thunk of MusicLibrary.ItemState.downloadStatus.getter(v121);
  swift_release();
  v123 = type metadata accessor for MusicLibrary.DownloadStatus(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v123 - 8) + 56))(v122, 0, 1, v123);
  v124 = v310;
  *(_QWORD *)&v352 = 0x4000000000000000;
  v125 = sub_1000E4360();
  ScaledMetric.init(wrappedValue:)(&v352, &type metadata for CGFloat, v125);
  *(_QWORD *)&v352 = 0x3FF0000000000000;
  ScaledMetric.init(wrappedValue:)(&v352, &type metadata for CGFloat, v125);
  v126 = v309;
  sub_10005B704(v122, v309, _s27DownloadStatusIndicatorViewVMa);
  swift_storeEnumTagMultiPayload(v126, v307, 1);
  v127 = sub_10062D0C4();
  v128 = sub_100048748(&qword_1011BE880, _s27DownloadStatusIndicatorViewVMa, (uint64_t)&unk_100EC555C);
  _ConditionalContent<>.init(storage:)(v126, &_s19UploadRequiredImageVN, v124, v127, v128);
  sub_10005B748(v122, _s27DownloadStatusIndicatorViewVMa);
LABEL_19:
  v129 = v311;
  v130 = (uint64_t)v308;
  v131 = *(double *)(v69 + 88);
  sub_100824BE4(v311);
  sub_1008237B8(v130);
  if (qword_10119C600 != -1)
    swift_once(&qword_10119C600, sub_1006CA11C);
  if ((byte_1011C36B8 & 1) != 0)
  {
    (*(void (**)(uint64_t, unint64_t))(v325 + 8))(v130, v326);
    sub_10004FF60(v129, (uint64_t *)&unk_1011A33B8);
  }
  else
  {
    v133 = sub_1006CFD38(v129, v130, v131);
    (*(void (**)(uint64_t, unint64_t))(v325 + 8))(v130, v326);
    sub_10004FF60(v129, (uint64_t *)&unk_1011A33B8);
    if ((v133 & 1) != 0)
    {
LABEL_34:
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v313 + 56))(v330, 1, 1, v314);
      goto LABEL_35;
    }
  }
  v134 = *(_QWORD *)(v69 + 8);
  v135 = v328;
  v136 = *(uint64_t (**)(uint64_t, uint64_t))(v328 + 72);
  swift_unknownObjectRetain(v134, v132);
  v137 = COERCE_DOUBLE(v136(v327, v135));
  LOBYTE(v136) = v138;
  swift_unknownObjectRelease(v134);
  if ((v136 & 1) != 0)
    goto LABEL_34;
  v299 = v71;
  v139 = v137;
  if (qword_10119BFD0 != -1)
    swift_once(&qword_10119BFD0, sub_10040FE08);
  v140 = objc_msgSend((id)qword_10124CF88, "stringFromSeconds:", v137);
  v141 = static String._unconditionallyBridgeFromObjectiveC(_:)(v140);
  v143 = v142;

  *(_QWORD *)&v352 = v141;
  *((_QWORD *)&v352 + 1) = v143;
  v326 = sub_100055B68();
  v144 = Text.init<A>(_:)(&v352, &type metadata for String, v326);
  v146 = v145;
  v148 = v147;
  v150 = v149 & 1;
  LODWORD(v352) = static HierarchicalShapeStyle.secondary.getter(v144);
  swift_retain();
  v151 = sub_1006BD694();
  swift_release();
  v152 = Text.playableForegroundStyle<A>(_:isPlayable:)((int *)&v352, v151 & 1, v144, v146, v150, v148, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v154 = v153;
  v156 = v155;
  v158 = v157 & 1;
  sub_100055BAC(v144, v146, v150);
  v159 = swift_bridgeObjectRelease();
  v325 = Text.monospacedDigit()(v152, v154, v158, v156, v159);
  v310 = v161;
  v311 = v160;
  LODWORD(v309) = v162;
  sub_100055BAC(v152, v154, v158);
  swift_bridgeObjectRelease();
  v163 = sub_100007E8C(qword_1011C9550);
  v164 = ScaledMetric.wrappedValue.getter(&v352, v163);
  v165 = v352;
  v166 = static Alignment.trailing.getter(v164);
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(&v364, v165, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, v166, v167);
  v168 = v364;
  v169 = v366;
  v170 = v368;
  v171 = v370;
  v172 = v372;
  v173 = v374;
  v175 = v376;
  v174 = v377;
  v350 = v309 & 1;
  v349 = v365;
  v348 = v367;
  v347 = v369;
  v346 = v371;
  v345 = v373;
  v344 = v375;
  v177 = static Edge.Set.trailing.getter(v176);
  if (qword_10119C6D0 != -1)
    swift_once(&qword_10119C6D0, sub_1006CA8D8);
  v178 = EdgeInsets.init(_all:)(*(double *)&qword_10124D7E8);
  v351 = 0;
  *(_QWORD *)&v333 = v325;
  *((_QWORD *)&v333 + 1) = v311;
  LOBYTE(v334) = v350;
  *((_QWORD *)&v334 + 1) = v310;
  *(_QWORD *)&v335 = v168;
  BYTE8(v335) = v349;
  *(_QWORD *)&v336 = v169;
  BYTE8(v336) = v348;
  *(_QWORD *)&v337 = v170;
  BYTE8(v337) = v347;
  *(_QWORD *)&v338 = v171;
  BYTE8(v338) = v346;
  *(_QWORD *)&v339 = v172;
  BYTE8(v339) = v345;
  *(_QWORD *)&v340 = v173;
  BYTE8(v340) = v344;
  *(_QWORD *)&v341 = v175;
  *((_QWORD *)&v341 + 1) = v174;
  LOBYTE(v342) = v177;
  *((double *)&v342 + 1) = v178;
  *(_QWORD *)&v343[0] = v179;
  *((_QWORD *)&v343[0] + 1) = v180;
  *(_QWORD *)&v343[1] = v181;
  BYTE8(v343[1]) = 0;
  v184 = static Duration.seconds(_:)(v182, v183, v139);
  v186 = v185;
  v187 = sub_100007E8C(&qword_1011A0640);
  v188 = type metadata accessor for Duration.UnitsFormatStyle.Unit(0);
  v189 = *(_QWORD *)(v188 - 8);
  v190 = *(_QWORD *)(v189 + 72);
  v191 = *(unsigned __int8 *)(v189 + 80);
  v192 = (v191 + 32) & ~v191;
  v193 = swift_allocObject(v187, v192 + 3 * v190, v191 | 7);
  *(_OWORD *)(v193 + 16) = xmmword_100EA7AC0;
  v194 = static Duration.UnitsFormatStyle.Unit.hours.getter();
  v195 = static Duration.UnitsFormatStyle.Unit.minutes.getter(v194);
  static Duration.UnitsFormatStyle.Unit.seconds.getter(v195);
  v196 = sub_1000476D0(v193);
  swift_setDeallocating(v193);
  swift_arrayDestroy(v193 + v192, 3, v188);
  v197 = swift_deallocClassInstance(v193, 32, 7);
  v198 = v271;
  v199 = static Duration.UnitsFormatStyle.UnitWidth.wide.getter(v197);
  v200 = v275;
  v201 = static Duration.UnitsFormatStyle.ZeroValueUnitsDisplayStrategy.hide.getter(v199);
  v202 = v280;
  static Duration.UnitsFormatStyle.FractionalPartDisplayStrategy.hide.getter(v201);
  v203 = v273;
  static FormatStyle<>.units(allowed:width:maximumUnitCount:zeroValueUnits:valueLength:fractionalPart:)(v196, v198, 0, 1, v200, 0, 1, v202);
  v204 = swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, __n128))(v281 + 8))(v202, v282, v204);
  (*(void (**)(char *, uint64_t))(v277 + 8))(v200, v279);
  (*(void (**)(char *, uint64_t))(v272 + 8))(v198, v274);
  v205 = sub_100048748((unint64_t *)&unk_1011CEA50, (uint64_t (*)(uint64_t))&type metadata accessor for Duration.UnitsFormatStyle, (uint64_t)&protocol conformance descriptor for Duration.UnitsFormatStyle);
  v206 = v184;
  v207 = v278;
  Duration.formatted<A>(_:)(&v352, v203, v206, v186, v278, v205);
  (*(void (**)(char *, uint64_t))(v276 + 8))(v203, v207);
  v332 = v352;
  v208 = Text.init<A>(_:)(&v332, &type metadata for String, v326);
  v210 = v209;
  v212 = v211;
  v214 = v213 & 1;
  v215 = sub_100007E8C(&qword_1011AFB88);
  v216 = sub_1003AC7CC();
  v217 = (uint64_t)v284;
  View.accessibility(label:)(v208, v210, v214, v212, v215, v216);
  sub_100055BAC(v208, v210, v214);
  swift_bridgeObjectRelease();
  v360 = v341;
  v361 = v342;
  v362[0] = v343[0];
  *(_OWORD *)((char *)v362 + 9) = *(_OWORD *)((char *)v343 + 9);
  v356 = v337;
  v357 = v338;
  v358 = v339;
  v359 = v340;
  v352 = v333;
  v353 = v334;
  v354 = v335;
  v355 = v336;
  sub_1003630A4((uint64_t)&v352);
  v218 = AccessibilityIdentifier.trackListCellDuration.unsafeMutableAddressor();
  v219 = *v218;
  v220 = v218[1];
  v221 = sub_10062A6F8();
  swift_bridgeObjectRetain();
  v222 = (uint64_t)v287;
  View.accessibilityIdentifier(_:)(v219, v220, v283, v221);
  swift_bridgeObjectRelease();
  sub_10004FF60(v217, &qword_1011AFAD8);
  v223 = 0;
  v69 = v323;
  v68 = v324;
  if ((*(_BYTE *)(v323 + 48) & 1) != 0)
  {
    if (qword_10119C6C0 != -1)
      swift_once(&qword_10119C6C0, sub_1006CA810);
    v223 = qword_10124D7D8;
    swift_retain();
  }
  KeyPath = swift_getKeyPath(&unk_100ECAB80);
  v225 = v286;
  sub_10004A160(v222, v286, &qword_1011C3ED0);
  v226 = v314;
  v227 = (uint64_t *)(v225 + *(int *)(v314 + 36));
  *v227 = KeyPath;
  v227[1] = v223;
  sub_10004FF60(v222, &qword_1011C3ED0);
  v228 = v285;
  sub_100065228(v225, v285, &qword_1011C3ED8);
  v229 = v228;
  v230 = v330;
  sub_100065228(v229, v330, &qword_1011C3ED8);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v313 + 56))(v230, 0, 1, v226);
LABEL_35:
  v232 = *(_QWORD *)(v69 + 8);
  v233 = v328;
  v234 = *(uint64_t (**)(uint64_t, uint64_t))(v328 + 104);
  swift_unknownObjectRetain(v232, v231);
  v235 = v327;
  v236 = v234(v327, v233);
  v238 = v237;
  swift_unknownObjectRelease(v232);
  *v68 = v236;
  v68[1] = v238;
  *(_QWORD *)&v352 = 0x4046000000000000;
  v239 = sub_1000E4360();
  ScaledMetric.init(wrappedValue:)(&v352, &type metadata for CGFloat, v239);
  *(_QWORD *)&v352 = 0x403C000000000000;
  ScaledMetric.init(wrappedValue:)(&v352, &type metadata for CGFloat, v239);
  v240 = *(_QWORD *)(v69 + 8);
  swift_unknownObjectRetain(v240, v241);
  v242 = v234(v235, v233);
  v244 = v243;
  swift_unknownObjectRelease(v240);
  if (v242)
    sub_10004BA30(v242, v244);
  v245 = v242 == 0;
  v246 = swift_getKeyPath(&unk_100ECAFD0);
  v247 = swift_allocObject(&unk_1010D7490, 17, 7);
  *(_BYTE *)(v247 + 16) = v245;
  v248 = v318;
  sub_10005B704((uint64_t)v68, v318, _s17ContextMenuButtonVMa);
  v249 = (uint64_t *)(v248 + *(int *)(v319 + 36));
  *v249 = v246;
  v249[1] = (uint64_t)sub_100447DFC;
  v249[2] = v247;
  sub_10005B748((uint64_t)v68, _s17ContextMenuButtonVMa);
  v250 = v320;
  v251 = sub_100065228(v248, v320, &qword_1011C3EC8);
  v252 = v331;
  if (qword_10119C6E8 != -1)
    v251 = swift_once(&qword_10119C6E8, sub_1006CA9AC);
  v253 = qword_10124D800;
  v254 = static Alignment.center.getter(v251);
  _FrameLayout.init(width:height:alignment:)(&v352, v253, 0, 0, 1, v254, v255);
  v328 = v352;
  LODWORD(v327) = BYTE8(v352);
  v326 = v353;
  LODWORD(v325) = BYTE8(v353);
  v323 = *((_QWORD *)&v354 + 1);
  v324 = (uint64_t *)v354;
  v256 = v312;
  sub_10004A160(v252, v312, &qword_1011C3F00);
  v257 = v329;
  v258 = v315;
  sub_10004A160(v329, v315, &qword_1011BE870);
  v259 = v330;
  v260 = v317;
  sub_10004A160(v330, v317, &qword_1011C3EE0);
  v261 = v321;
  sub_10004A160(v250, v321, &qword_1011C3EC8);
  v262 = v322;
  sub_10004A160(v256, v322, &qword_1011C3F00);
  v263 = (int *)sub_100007E8C(&qword_1011C3F08);
  sub_10004A160(v258, v262 + v263[12], &qword_1011BE870);
  sub_10004A160(v260, v262 + v263[16], &qword_1011C3EE0);
  sub_10004A160(v261, v262 + v263[20], &qword_1011C3EC8);
  v264 = v262 + v263[24];
  *(_QWORD *)v264 = 0;
  *(_BYTE *)(v264 + 8) = 1;
  *(_QWORD *)(v264 + 16) = v328;
  *(_BYTE *)(v264 + 24) = v327;
  *(_QWORD *)(v264 + 32) = v326;
  *(_BYTE *)(v264 + 40) = v325;
  v265 = v323;
  *(_QWORD *)(v264 + 48) = v324;
  *(_QWORD *)(v264 + 56) = v265;
  sub_10004FF60(v250, &qword_1011C3EC8);
  sub_10004FF60(v259, &qword_1011C3EE0);
  sub_10004FF60(v257, &qword_1011BE870);
  sub_10004FF60(v331, &qword_1011C3F00);
  sub_10004FF60(v261, &qword_1011C3EC8);
  sub_10004FF60(v260, &qword_1011C3EE0);
  sub_10004FF60(v258, &qword_1011BE870);
  return sub_10004FF60(v256, &qword_1011C3F00);
}

double sub_1006C9FE4@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  double result;
  __int128 v7;
  _OWORD v8[2];
  char v9;

  sub_1006D8D84((uint64_t)v8, a2, a3, a4, a5);
  result = *(double *)v8;
  v7 = v8[1];
  *(_OWORD *)a1 = v8[0];
  *(_OWORD *)(a1 + 16) = v7;
  *(_BYTE *)(a1 + 32) = v9;
  return result;
}

uint64_t sub_1006CA02C()
{
  return Shape.sizeThatFits(_:)();
}

uint64_t sub_1006CA044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1006D8F90();
  return static Shape._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1006CA094(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1006D8F90();
  return static Shape._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1006CA0E4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1006D8F90();
  return Shape.body.getter(a1, v2);
}

void sub_1006CA11C()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v1 = objc_msgSend(v0, "userInterfaceIdiom");

  byte_1011C36B8 = v1 == (id)6;
}

void sub_1006CA17C()
{
  qword_10124D710 = Int.seconds.getter(465);
}

void sub_1006CA19C()
{
  qword_10124D718 = Int.seconds.getter(800);
}

uint64_t sub_1006CA1BC()
{
  double v0;
  uint64_t result;

  if (qword_10119C600 != -1)
    result = swift_once(&qword_10119C600, sub_1006CA11C);
  v0 = 20.0;
  if (byte_1011C36B8)
    v0 = 28.0;
  qword_10124D720 = *(_QWORD *)&v0;
  return result;
}

uint64_t sub_1006CA214(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t *v4;
  uint64_t result;
  int v6;
  uint64_t v7;

  if (qword_10119C600 != -1)
    a1 = swift_once(&qword_10119C600, sub_1006CA11C);
  if (byte_1011C36B8 == 1)
  {
    v6 = static HierarchicalShapeStyle.secondary.getter(a1);
    v2 = &type metadata for HierarchicalShapeStyle;
    v3 = &protocol witness table for HierarchicalShapeStyle;
    v4 = (uint64_t *)&v6;
  }
  else
  {
    v7 = static Color.accentColor.getter(a1, a2);
    v2 = &type metadata for Color;
    v3 = &protocol witness table for Color;
    v4 = &v7;
  }
  result = AnyShapeStyle.init<A>(_:)(v4, v2, v3);
  qword_10124D728 = result;
  return result;
}

uint64_t sub_1006CA2AC(uint64_t a1)
{
  ValueMetadata *v1;
  int *v2;
  int *v3;
  uint64_t result;
  int v5;

  if (qword_10119C600 != -1)
    a1 = swift_once(&qword_10119C600, sub_1006CA11C);
  if (byte_1011C36B8 == 1)
  {
    v5 = static HierarchicalShapeStyle.secondary.getter(a1);
    v1 = (ValueMetadata *)&type metadata for HierarchicalShapeStyle;
    v2 = (int *)&protocol witness table for HierarchicalShapeStyle;
    v3 = &v5;
  }
  else
  {
    v3 = (int *)sub_1006D7DA0();
    v1 = &type metadata for PopularIconShapeStyle;
    v2 = v3;
  }
  result = AnyShapeStyle.init<A>(_:)(v3, v1, v2);
  qword_10124D730 = result;
  return result;
}

uint64_t sub_1006CA338()
{
  double v0;
  uint64_t result;

  if (qword_10119C600 != -1)
    result = swift_once(&qword_10119C600, sub_1006CA11C);
  v0 = 0.0;
  if (byte_1011C36B8)
    v0 = 4.0;
  qword_10124D738 = *(_QWORD *)&v0;
  return result;
}

uint64_t sub_1006CA390(uint64_t a1)
{
  return sub_1006CA7A4(a1, (uint64_t (*)(void))&static Font.title3.getter, (uint64_t (*)(void))&static Font.body.getter, &qword_10124D740);
}

void sub_1006CA3AC(uint64_t a1)
{
  sub_1006CA4F4(a1, (double *)&qword_10124D748);
}

uint64_t sub_1006CA3B8()
{
  double v0;
  uint64_t result;

  if (qword_10119C600 != -1)
    result = swift_once(&qword_10119C600, sub_1006CA11C);
  v0 = 0.0;
  if (byte_1011C36B8)
    v0 = 12.0;
  qword_10124D750 = *(_QWORD *)&v0;
  return result;
}

uint64_t sub_1006CA410()
{
  double v0;
  uint64_t result;

  if (qword_10119C600 != -1)
    result = swift_once(&qword_10119C600, sub_1006CA11C);
  v0 = 2.0;
  if (byte_1011C36B8)
    v0 = 0.0;
  qword_10124D758 = *(_QWORD *)&v0;
  return result;
}

uint64_t sub_1006CA468()
{
  double v0;
  uint64_t result;

  if (qword_10119C600 != -1)
    result = swift_once(&qword_10119C600, sub_1006CA11C);
  v0 = 39.0;
  if (byte_1011C36B8)
    v0 = 34.0;
  qword_10124D760 = *(_QWORD *)&v0;
  return result;
}

uint64_t sub_1006CA4CC(uint64_t a1)
{
  return sub_1006CA7A4(a1, (uint64_t (*)(void))&static Font.body.getter, (uint64_t (*)(void))&static Font.footnote.getter, &qword_10124D768);
}

void sub_1006CA4E8(uint64_t a1)
{
  sub_1006CA4F4(a1, (double *)&qword_10124D770);
}

void sub_1006CA4F4(uint64_t a1, double *a2)
{
  double v3;

  if (qword_10119C600 != -1)
    a1 = swift_once(&qword_10119C600, sub_1006CA11C);
  if (byte_1011C36B8 == 1)
    v3 = static Font.Weight.regular.getter(a1);
  else
    v3 = static Font.Weight.semibold.getter(a1);
  *a2 = v3;
}

uint64_t sub_1006CA558()
{
  double v0;
  uint64_t result;

  if (qword_10119C600 != -1)
    result = swift_once(&qword_10119C600, sub_1006CA11C);
  v0 = 0.0;
  if (byte_1011C36B8)
    v0 = 10.0;
  qword_10124D778 = *(_QWORD *)&v0;
  return result;
}

void sub_1006CA5B0()
{
  qword_10124D780 = 0x4028000000000000;
}

uint64_t sub_1006CA5C0(uint64_t a1)
{
  return sub_1006CA6B4(a1, (double *)&qword_10124D788);
}

__n128 sub_1006CA5CC()
{
  __n128 *v0;
  char v1;
  __n128 result;

  v0 = (__n128 *)Corner.small.unsafeMutableAddressor();
  v1 = v0[1].n128_i8[0];
  result = *v0;
  xmmword_10124D790 = (__int128)*v0;
  byte_10124D7A0 = v1;
  return result;
}

uint64_t sub_1006CA5F8()
{
  double v0;
  uint64_t result;

  if (qword_10119C600 != -1)
    result = swift_once(&qword_10119C600, sub_1006CA11C);
  v0 = 9.0;
  if (byte_1011C36B8)
    v0 = 0.0;
  qword_10124D7A8 = *(_QWORD *)&v0;
  return result;
}

uint64_t sub_1006CA650()
{
  double v0;
  uint64_t result;

  if (qword_10119C600 != -1)
    result = swift_once(&qword_10119C600, sub_1006CA11C);
  v0 = 12.0;
  if (byte_1011C36B8)
    v0 = 0.0;
  qword_10124D7B0 = *(_QWORD *)&v0;
  return result;
}

uint64_t sub_1006CA6A8(uint64_t a1)
{
  return sub_1006CA6B4(a1, (double *)&qword_10124D7B8);
}

uint64_t sub_1006CA6B4(uint64_t a1, double *a2)
{
  double v3;
  uint64_t result;

  if (qword_10119C600 != -1)
    result = swift_once(&qword_10119C600, sub_1006CA11C);
  v3 = 10.0;
  if (byte_1011C36B8)
    v3 = 0.0;
  *a2 = v3;
  return result;
}

uint64_t sub_1006CA714()
{
  double v0;
  uint64_t result;

  if (qword_10119C600 != -1)
    result = swift_once(&qword_10119C600, sub_1006CA11C);
  v0 = 17.0;
  if (byte_1011C36B8)
    v0 = 20.0;
  qword_10124D7C0 = *(_QWORD *)&v0;
  return result;
}

uint64_t sub_1006CA76C(uint64_t a1)
{
  return sub_1006CA7A4(a1, (uint64_t (*)(void))&static Font.body.getter, (uint64_t (*)(void))&static Font.callout.getter, &qword_10124D7C8);
}

uint64_t sub_1006CA788(uint64_t a1)
{
  return sub_1006CA7A4(a1, (uint64_t (*)(void))&static Font.callout.getter, (uint64_t (*)(void))&static Font.footnote.getter, &qword_10124D7D0);
}

uint64_t sub_1006CA7A4(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void), uint64_t *a4)
{
  uint64_t (*v7)(void);
  uint64_t result;

  if (qword_10119C600 != -1)
    swift_once(&qword_10119C600, sub_1006CA11C);
  if (byte_1011C36B8)
    v7 = a2;
  else
    v7 = a3;
  result = v7();
  *a4 = result;
  return result;
}

uint64_t sub_1006CA810()
{
  uint64_t result;
  id v1;

  if (qword_10119C600 != -1)
    swift_once(&qword_10119C600, sub_1006CA11C);
  if ((byte_1011C36B8 & 1) != 0)
  {
    result = 0;
  }
  else
  {
    v1 = (id)*HI.Color.prominentTextColor.unsafeMutableAddressor();
    result = Color.init(_:)(v1);
  }
  qword_10124D7D8 = result;
  return result;
}

uint64_t sub_1006CA874()
{
  double v0;
  uint64_t result;

  if (qword_10119C600 != -1)
    result = swift_once(&qword_10119C600, sub_1006CA11C);
  v0 = 44.0;
  if (byte_1011C36B8)
    v0 = 57.0;
  qword_10124D7E0 = *(_QWORD *)&v0;
  return result;
}

uint64_t sub_1006CA8D8()
{
  double v0;
  uint64_t result;

  if (qword_10119C600 != -1)
    result = swift_once(&qword_10119C600, sub_1006CA11C);
  v0 = 16.0;
  if (byte_1011C36B8)
    v0 = 9.0;
  qword_10124D7E8 = *(_QWORD *)&v0;
  return result;
}

void sub_1006CA930()
{
  qword_10124D7F0 = Int.seconds.getter(4);
}

uint64_t sub_1006CA950()
{
  double v0;
  uint64_t result;

  if (qword_10119C600 != -1)
    result = swift_once(&qword_10119C600, sub_1006CA11C);
  v0 = 44.0;
  if (!byte_1011C36B8)
    v0 = 28.0;
  qword_10124D7F8 = *(_QWORD *)&v0;
  return result;
}

uint64_t sub_1006CA9AC()
{
  double v0;
  uint64_t result;

  if (qword_10119C600 != -1)
    result = swift_once(&qword_10119C600, sub_1006CA11C);
  v0 = 0.0;
  if (byte_1011C36B8)
    v0 = 8.0;
  qword_10124D800 = *(_QWORD *)&v0;
  return result;
}

void sub_1006CAA04()
{
  qword_10124D808 = Int.seconds.getter(12);
}

uint64_t sub_1006CAA24()
{
  double v0;
  uint64_t result;

  if (qword_10119C600 != -1)
    result = swift_once(&qword_10119C600, sub_1006CA11C);
  v0 = 6.0;
  if (byte_1011C36B8)
    v0 = 0.0;
  qword_10124D810 = *(_QWORD *)&v0;
  return result;
}

uint64_t sub_1006CAA7C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  double v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v49 = a1;
  v2 = type metadata accessor for DynamicTypeSize(0);
  v47 = *(_QWORD *)(v2 - 8);
  v48 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011C38B0);
  __chkstk_darwin(v5);
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011C38B8);
  __chkstk_darwin(v8);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011C38C0);
  __chkstk_darwin(v11);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C(&qword_1011C38C8);
  __chkstk_darwin(v14);
  v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v7 = static VerticalAlignment.center.getter(v17);
  *((_QWORD *)v7 + 1) = 0;
  v7[16] = 0;
  v18 = sub_100007E8C(&qword_1011C38D0);
  v19 = sub_1006CADC4(v1, (uint64_t)&v7[*(int *)(v18 + 44)]);
  v20 = static Edge.Set.horizontal.getter(v19);
  v21 = EdgeInsets.init(_all:)(*(double *)(v1 + 32));
  v23 = v22;
  v25 = v24;
  v27 = v26;
  sub_10004A160((uint64_t)v7, (uint64_t)v10, &qword_1011C38B0);
  v28 = &v10[*(int *)(v8 + 36)];
  *v28 = v20;
  *((double *)v28 + 1) = v21;
  *((_QWORD *)v28 + 2) = v23;
  *((_QWORD *)v28 + 3) = v25;
  *((_QWORD *)v28 + 4) = v27;
  v28[40] = 0;
  v29 = sub_10004FF60((uint64_t)v7, &qword_1011C38B0);
  v30 = static Edge.Set.vertical.getter(v29);
  type metadata accessor for Tracklist.EmptyCell(0);
  v31 = sub_1008237B8((uint64_t)v4);
  if (qword_10119C600 != -1)
    v31 = swift_once(&qword_10119C600, sub_1006CA11C);
  v32 = 10.0;
  if ((byte_1011C36B8 & 1) == 0)
  {
    if ((DynamicTypeSize.isAccessibilitySize.getter(v31) & 1) != 0)
      v32 = 14.0;
    else
      v32 = 4.0;
  }
  (*(void (**)(char *, uint64_t))(v47 + 8))(v4, v48);
  v33 = EdgeInsets.init(_all:)(v32);
  v35 = v34;
  v37 = v36;
  v39 = v38;
  sub_10004A160((uint64_t)v10, (uint64_t)v13, &qword_1011C38B8);
  v40 = &v13[*(int *)(v11 + 36)];
  *v40 = v30;
  *((double *)v40 + 1) = v33;
  *((_QWORD *)v40 + 2) = v35;
  *((_QWORD *)v40 + 3) = v37;
  *((_QWORD *)v40 + 4) = v39;
  v40[40] = 0;
  sub_10004FF60((uint64_t)v10, &qword_1011C38B8);
  v41 = AccessibilityIdentifier.trackListEmptyCell.unsafeMutableAddressor();
  v42 = *v41;
  v43 = v41[1];
  v44 = sub_10005610C(&qword_1011C38D8, &qword_1011C38C0, (void (*)(void))sub_1006D0100);
  swift_bridgeObjectRetain();
  View.accessibilityIdentifier(_:)(v42, v43, v11, v44);
  swift_bridgeObjectRelease();
  sub_10004FF60((uint64_t)v13, &qword_1011C38C0);
  return sub_100065228((uint64_t)v16, v49, &qword_1011C38C8);
}

uint64_t sub_1006CADC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  char v64;
  unint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  double v68;
  char v69;
  uint64_t OpaqueTypeConformance2;
  char *v71;
  char v72;
  uint64_t v73;
  __n128 v74;
  uint64_t v75;
  uint64_t (*v76)(char *, uint64_t);
  uint64_t v77;
  uint64_t KeyPath;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(uint64_t, uint64_t);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  BOOL v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _OWORD *v99;
  __int128 v100;
  uint64_t v101;
  char v102;
  double v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  double *v111;
  double v112;
  char v113;
  double v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t *v136;
  id v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  __n128 v145;
  uint64_t v146;
  uint64_t v147;
  double v148;
  uint64_t v149;
  unint64_t v150;
  char *v151;
  __n128 v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  _OWORD *v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  double v175;
  char v176;
  uint64_t v177;
  double v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  char v187;
  uint64_t v188;
  uint64_t v189;
  double v190;
  char v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  void (*v205)(uint64_t, uint64_t);
  double v206;
  uint64_t v207;
  uint64_t v208;
  _QWORD *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  _OWORD *v214;
  __int128 v215;
  uint64_t v216;
  uint64_t v217;
  void (*v218)(uint64_t, uint64_t, uint64_t);
  char v219;
  double v220;
  double v221;
  char v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  _OWORD *v229;
  __int128 v230;
  uint64_t v231;
  double v232;
  _QWORD *v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  _OWORD *v239;
  __int128 v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  char v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v262;
  uint64_t v263;
  uint64_t *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  char *v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  char *v283;
  char *v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  char *v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  char *v292;
  uint64_t v293;
  uint64_t v294;
  char *v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  char *v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  char *v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  char *v312;
  uint64_t v313;
  uint64_t v314;
  id v315;
  uint64_t (*v316)(char *, uint64_t);
  unint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  void (*v332)(uint64_t, uint64_t);
  _OWORD v333[3];
  __int128 v334;
  __int128 v335;
  __int128 v336;
  __int128 v337;
  __int128 v338;
  __int128 v339;
  __int128 v340;
  _OWORD v341[3];
  _OWORD v342[3];
  _OWORD v343[3];

  v328 = a1;
  v310 = a2;
  v2 = sub_100007E8C(&qword_1011C38F0);
  __chkstk_darwin(v2);
  v311 = (uint64_t)&v262 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v309 = (uint64_t)&v262 - v5;
  v307 = sub_100007E8C(&qword_1011C38F8);
  __chkstk_darwin(v307);
  v273 = (uint64_t)&v262 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011A2D80);
  __chkstk_darwin(v7);
  v269 = (uint64_t)&v262 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011A2D88);
  __chkstk_darwin(v9);
  v270 = (uint64_t)&v262 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v272 = (uint64_t)&v262 - v12;
  v13 = sub_100007E8C(&qword_1011C3900);
  __chkstk_darwin(v13);
  v300 = (uint64_t)&v262 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v267 = sub_100007E8C(&qword_1011C3908);
  __chkstk_darwin(v267);
  v268 = (uint64_t)&v262 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v266 = (uint64_t)&v262 - v17;
  __chkstk_darwin(v18);
  v271 = (uint64_t)&v262 - v19;
  v302 = sub_100007E8C(&qword_1011C3910);
  __chkstk_darwin(v302);
  v305 = (uint64_t)&v262 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100007E8C(&qword_1011A2D70);
  __chkstk_darwin(v21);
  v264 = (uint64_t *)((char *)&v262 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v303 = sub_100007E8C(&qword_1011A2D78);
  __chkstk_darwin(v303);
  v263 = (uint64_t)&v262 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v265 = (uint64_t)&v262 - v25;
  v26 = sub_100007E8C(&qword_1011C3918);
  __chkstk_darwin(v26);
  v308 = (uint64_t)&v262 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v321 = (uint64_t)&v262 - v29;
  v30 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
  __chkstk_darwin(v30);
  v304 = (char *)&v262 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_100007E8C(&qword_1011C3920);
  __chkstk_darwin(v32);
  v306 = (uint64_t)&v262 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v331 = (uint64_t)&v262 - v35;
  v36 = type metadata accessor for Image.Scale(0);
  v296 = *(_QWORD *)(v36 - 8);
  v297 = v36;
  __chkstk_darwin(v36);
  v295 = (char *)&v262 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_100007E8C(&qword_1011A4CB0);
  v293 = *(_QWORD *)(v38 - 8);
  v294 = v38;
  __chkstk_darwin(v38);
  v292 = (char *)&v262 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v290 = sub_100007E8C(&qword_1011C3928);
  __chkstk_darwin(v290);
  v299 = (char *)&v262 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v298 = sub_100007E8C(&qword_1011C3930);
  __chkstk_darwin(v298);
  v312 = (char *)&v262 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v320 = sub_100007E8C(&qword_1011C3938);
  v301 = *(_QWORD *)(v320 - 8);
  __chkstk_darwin(v320);
  v325 = (uint64_t)&v262 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v322 = type metadata accessor for Tracklist.EmptyCell(0);
  v286 = *(_QWORD *)(v322 - 8);
  __chkstk_darwin(v322);
  v287 = v43;
  v289 = (uint64_t)&v262 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v318 = sub_100007E8C(&qword_1011C3940);
  __chkstk_darwin(v318);
  v330 = (uint64_t)&v262 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v45);
  v288 = (char *)&v262 - v46;
  v285 = sub_100007E8C(&qword_1011C3948);
  __chkstk_darwin(v285);
  v329 = (uint64_t)&v262 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v324 = type metadata accessor for DynamicTypeSize(0);
  v313 = *(_QWORD *)(v324 - 8);
  __chkstk_darwin(v324);
  v274 = (uint64_t)&v262 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v49);
  v332 = (void (*)(uint64_t, uint64_t))((char *)&v262 - v50);
  __chkstk_darwin(v51);
  v323 = (uint64_t)&v262 - v52;
  __chkstk_darwin(v53);
  v279 = (uint64_t)&v262 - v54;
  v314 = sub_100007E8C(&qword_1011C3950);
  v278 = *(_QWORD *)(v314 - 8);
  __chkstk_darwin(v314);
  v56 = (char *)&v262 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  v326 = sub_100007E8C(&qword_1011C3958);
  v277 = *(_QWORD *)(v326 - 8);
  __chkstk_darwin(v326);
  v276 = (char *)&v262 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  v275 = sub_100007E8C(&qword_1011C3960);
  __chkstk_darwin(v275);
  v59 = (char *)&v262 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  v280 = sub_100007E8C(&qword_1011C3968);
  __chkstk_darwin(v280);
  v282 = (uint64_t)&v262 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  v281 = sub_100007E8C(&qword_1011C3970);
  __chkstk_darwin(v281);
  v283 = (char *)&v262 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  v319 = sub_100007E8C(&qword_1011C3978);
  v291 = *(_QWORD *)(v319 - 8);
  __chkstk_darwin(v319);
  v327 = (uint64_t)&v262 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10119C688 != -1)
    swift_once(&qword_10119C688, sub_1006CA5CC);
  v63 = xmmword_10124D790;
  v64 = byte_10124D7A0;
  v65 = sub_1006D0184();
  View.corner(_:)(v63, *((uint64_t *)&v63 + 1), v64, (uint64_t)&type metadata for Rectangle, v65);
  v66 = Border.artwork.unsafeMutableAddressor();
  v67 = *v66;
  v68 = *((double *)v66 + 1);
  v69 = *((_BYTE *)v66 + 16);
  swift_retain();
  *(_QWORD *)&v334 = &type metadata for Rectangle;
  v317 = v65;
  *((_QWORD *)&v334 + 1) = v65;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v334, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
  v71 = v276;
  v72 = v69;
  v73 = v314;
  View.border(_:corner:)(v67, v72, v63, *((uint64_t *)&v63 + 1), v64, v314, OpaqueTypeConformance2, v68);
  v74 = swift_release();
  v75 = v278;
  v76 = *(uint64_t (**)(char *, uint64_t))(v278 + 8);
  v284 = v56;
  v316 = v76;
  ((void (*)(char *, uint64_t, __n128))v76)(v56, v73, v74);
  v315 = (id)objc_opt_self(UIColor);
  v77 = Color.init(_:)(objc_msgSend(v315, "tertiarySystemFillColor"));
  KeyPath = swift_getKeyPath(&unk_100ECAB80);
  v79 = v277;
  v80 = v326;
  (*(void (**)(char *, char *, uint64_t))(v277 + 16))(v59, v71, v326);
  v81 = (uint64_t *)&v59[*(int *)(v275 + 36)];
  *v81 = KeyPath;
  v81[1] = v77;
  (*(void (**)(char *, uint64_t))(v79 + 8))(v71, v80);
  v82 = v279;
  v326 = v328 + *(int *)(v322 + 44);
  sub_1008237B8(v279);
  v83 = (uint64_t)v59;
  if (qword_10119C600 != -1)
    swift_once(&qword_10119C600, sub_1006CA11C);
  v84 = v324;
  if (byte_1011C36B8 == 1)
  {
    v85 = *(void (**)(uint64_t, uint64_t))(v313 + 8);
    v86 = 0x4048000000000000;
  }
  else
  {
    v87 = v313;
    v88 = v323;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v313 + 104))(v323, enum case for DynamicTypeSize.accessibility3(_:), v324);
    v89 = static DynamicTypeSize.< infix(_:_:)(v82, v88);
    v85 = *(void (**)(uint64_t, uint64_t))(v87 + 8);
    v85(v88, v84);
    if ((v89 & 1) != 0)
      v86 = 0x4048000000000000;
    else
      v86 = 0x4052000000000000;
  }
  v90 = (uint64_t)v332;
  v85(v82, v84);
  sub_1008237B8(v90);
  v91 = 0x4048000000000000;
  if ((byte_1011C36B8 & 1) == 0)
  {
    v92 = v323;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v313 + 104))(v323, enum case for DynamicTypeSize.accessibility3(_:), v84);
    v93 = static DynamicTypeSize.< infix(_:_:)(v90, v92);
    v85(v92, v84);
    v94 = (v93 & 1) == 0;
    v90 = (uint64_t)v332;
    if (v94)
      v91 = 0x4052000000000000;
  }
  v95 = ((uint64_t (*)(uint64_t, uint64_t))v85)(v90, v84);
  v96 = static Alignment.center.getter(v95);
  _FrameLayout.init(width:height:alignment:)(v333, v86, 0, v91, 0, v96, v97);
  v98 = v282;
  sub_10004A160(v83, v282, &qword_1011C3960);
  v99 = (_OWORD *)(v98 + *(int *)(v280 + 36));
  v100 = v333[1];
  *v99 = v333[0];
  v99[1] = v100;
  v99[2] = v333[2];
  v101 = sub_10004FF60(v83, &qword_1011C3960);
  v102 = static Edge.Set.leading.getter(v101);
  if (qword_10119C670 != -1)
    swift_once(&qword_10119C670, sub_1006CA558);
  v332 = v85;
  v103 = EdgeInsets.init(_all:)(*(double *)&qword_10124D778);
  v105 = v104;
  v107 = v106;
  v109 = v108;
  v110 = v283;
  sub_10004A160(v98, (uint64_t)v283, &qword_1011C3968);
  v111 = (double *)&v110[*(int *)(v281 + 36)];
  *(_BYTE *)v111 = v102;
  v111[1] = v103;
  *((_QWORD *)v111 + 2) = v105;
  *((_QWORD *)v111 + 3) = v107;
  *((_QWORD *)v111 + 4) = v109;
  *((_BYTE *)v111 + 40) = 0;
  sub_10004FF60(v98, &qword_1011C3968);
  v113 = static Edge.Set.trailing.getter(v112);
  if (qword_10119C678 != -1)
    swift_once(&qword_10119C678, sub_1006CA5B0);
  v114 = EdgeInsets.init(_all:)(*(double *)&qword_10124D780);
  v116 = v115;
  v118 = v117;
  v120 = v119;
  v121 = v327;
  sub_10004A160((uint64_t)v110, v327, &qword_1011C3970);
  v122 = v121 + *(int *)(v319 + 36);
  *(_BYTE *)v122 = v113;
  *(double *)(v122 + 8) = v114;
  *(_QWORD *)(v122 + 16) = v116;
  *(_QWORD *)(v122 + 24) = v118;
  *(_QWORD *)(v122 + 32) = v120;
  *(_BYTE *)(v122 + 40) = 0;
  sub_10004FF60((uint64_t)v110, &qword_1011C3970);
  v123 = v284;
  View.corner(_:)(xmmword_10124D790, *((uint64_t *)&xmmword_10124D790 + 1), byte_10124D7A0, (uint64_t)&type metadata for Rectangle, v317);
  v124 = Color.init(_:)(objc_msgSend(v315, "tertiarySystemFillColor"));
  v125 = swift_getKeyPath(&unk_100ECAB80);
  v283 = *(char **)(v75 + 16);
  v126 = (uint64_t)v288;
  v127 = v314;
  ((void (*)(char *, char *, uint64_t))v283)(v288, v123, v314);
  v128 = (uint64_t *)(v126 + *(int *)(v318 + 36));
  *v128 = v125;
  v128[1] = v124;
  v129 = v316(v123, v127);
  v130 = static HorizontalAlignment.listRowSeparatorLeading.getter(v129);
  v131 = v289;
  sub_10005B704(v328, v289, type metadata accessor for Tracklist.EmptyCell);
  v132 = *(unsigned __int8 *)(v286 + 80);
  v133 = (v132 + 16) & ~v132;
  v134 = swift_allocObject(&unk_1010D7258, v133 + v287, v132 | 7);
  sub_10005B6C0(v131, v134 + v133, type metadata accessor for Tracklist.EmptyCell);
  v135 = v329;
  sub_10004A160(v126, v329, &qword_1011C3940);
  v136 = (uint64_t *)(v135 + *(int *)(v285 + 36));
  *v136 = v130;
  v136[1] = (uint64_t)sub_1006D0350;
  v136[2] = v134;
  sub_10004FF60(v126, &qword_1011C3940);
  View.corner(_:)(xmmword_10124D790, *((uint64_t *)&xmmword_10124D790 + 1), byte_10124D7A0, (uint64_t)&type metadata for Rectangle, v317);
  v137 = v315;
  v138 = Color.init(_:)(objc_msgSend(v315, "tertiarySystemFillColor"));
  v139 = swift_getKeyPath(&unk_100ECAB80);
  v140 = v330;
  ((void (*)(uint64_t, char *, uint64_t))v283)(v330, v123, v127);
  v141 = (uint64_t *)(v140 + *(int *)(v318 + 36));
  *v141 = v139;
  v141[1] = v138;
  v316(v123, v127);
  v142 = Image.init(systemName:)(0x73697370696C6C65, 0xE800000000000000);
  v143 = Color.init(_:)(objc_msgSend(v137, "tertiarySystemFillColor"));
  v144 = swift_getKeyPath(&unk_100ECAB80);
  v146 = static Font.callout.getter(v145);
  v147 = swift_getKeyPath(&unk_100ECABB0);
  *(_QWORD *)&v334 = v142;
  *((_QWORD *)&v334 + 1) = v144;
  *(_QWORD *)&v335 = v143;
  *((_QWORD *)&v335 + 1) = v147;
  *(_QWORD *)&v336 = v146;
  v148 = static Font.Weight.semibold.getter(v147);
  v149 = sub_100007E8C(&qword_1011A4CB8);
  v150 = sub_1001C3E78();
  v151 = v292;
  View.fontWeight(_:)(*(_QWORD *)&v148, 0, v149, v150);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v152 = swift_release();
  v154 = v295;
  v153 = v296;
  v155 = v297;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v296 + 104))(v295, enum case for Image.Scale.medium(_:), v297, v152);
  v156 = swift_getKeyPath(&unk_100ECABE0);
  v157 = (uint64_t)v299;
  v158 = (uint64_t *)&v299[*(int *)(v290 + 36)];
  v159 = sub_100007E8C((uint64_t *)&unk_1011C94A0);
  (*(void (**)(char *, char *, uint64_t))(v153 + 16))((char *)v158 + *(int *)(v159 + 28), v154, v155);
  *v158 = v156;
  v161 = v293;
  v160 = v294;
  (*(void (**)(uint64_t, char *, uint64_t))(v293 + 16))(v157, v151, v294);
  (*(void (**)(char *, uint64_t))(v153 + 8))(v154, v155);
  v162 = (*(uint64_t (**)(char *, uint64_t))(v161 + 8))(v151, v160);
  if (qword_10119C6E0 != -1)
    v162 = swift_once(&qword_10119C6E0, sub_1006CA950);
  v163 = qword_10124D7F8;
  v164 = static Alignment.center.getter(v162);
  v165 = (uint64_t)v304;
  v167 = v324;
  v166 = v325;
  v168 = v322;
  v169 = (uint64_t)v312;
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(&v334, v163, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, v164, v170);
  sub_10004A160(v157, v169, &qword_1011C3928);
  v171 = (_OWORD *)(v169 + *(int *)(v298 + 36));
  v172 = v339;
  v171[4] = v338;
  v171[5] = v172;
  v171[6] = v340;
  v173 = v335;
  *v171 = v334;
  v171[1] = v173;
  v174 = v337;
  v171[2] = v336;
  v171[3] = v174;
  sub_10004FF60(v157, &qword_1011C3928);
  v176 = static Edge.Set.trailing.getter(v175);
  v177 = v328;
  if (qword_10119C6E8 != -1)
    swift_once(&qword_10119C6E8, sub_1006CA9AC);
  v178 = EdgeInsets.init(_all:)(*(double *)&qword_10124D800);
  v180 = v179;
  v182 = v181;
  v184 = v183;
  sub_10004A160(v169, v166, &qword_1011C3930);
  v185 = v166 + *(int *)(v320 + 36);
  *(_BYTE *)v185 = v176;
  *(double *)(v185 + 8) = v178;
  *(_QWORD *)(v185 + 16) = v180;
  *(_QWORD *)(v185 + 24) = v182;
  *(_QWORD *)(v185 + 32) = v184;
  *(_BYTE *)(v185 + 40) = 0;
  sub_10004FF60(v169, &qword_1011C3930);
  v322 = v177 + *(int *)(v168 + 48);
  sub_100824BE4(v165);
  v186 = v323;
  sub_1008237B8(v323);
  v187 = sub_1006CDAB0(v165, v186);
  v332(v186, v167);
  sub_10004FF60(v165, (uint64_t *)&unk_1011A33B8);
  if ((v187 & 1) != 0)
  {
    v188 = 1;
    v189 = v331;
  }
  else
  {
    v189 = v331;
    sub_10004A160(v327, v331, &qword_1011C3978);
    v188 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v291 + 56))(v189, v188, 1, v319);
  v190 = *(double *)(v177 + 48);
  sub_100824BE4(v165);
  sub_1008237B8(v186);
  v191 = sub_1006CFD38(v165, v186, v190);
  v332(v186, v167);
  v192 = sub_10004FF60(v165, (uint64_t *)&unk_1011A33B8);
  if ((v191 & 1) != 0)
  {
    v193 = static HorizontalAlignment.leading.getter(v192);
    v194 = (uint64_t)v264;
    *v264 = v193;
    *(_QWORD *)(v194 + 8) = 0;
    *(_BYTE *)(v194 + 16) = 0;
    v195 = sub_100007E8C(&qword_1011C39C0);
    v196 = sub_1006CCA30(v177, v327, v166, v329, v330, v194 + *(int *)(v195 + 44));
    v197 = static Alignment.leading.getter(v196);
    v198 = v263;
    sub_10014BACC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v263, 0.0, 1, 0.0, 1, v197, v199);
    sub_10004FF60(v194, &qword_1011A2D70);
    v200 = v198;
    v201 = v265;
    sub_100065228(v200, v265, &qword_1011A2D78);
    v202 = v305;
    sub_10004A160(v201, v305, &qword_1011A2D78);
    swift_storeEnumTagMultiPayload(v202, v302, 0);
    v203 = sub_1006D03C4(&qword_1011C39A0, &qword_1011A2D78, &qword_1011C39A8, &qword_1011A2D70);
    v204 = sub_100049F28(&qword_1011C39B0, &qword_1011C38F8, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    _ConditionalContent<>.init(storage:)(v202, v303, v307, v203, v204);
    sub_10004FF60(v201, &qword_1011A2D78);
    v205 = v332;
  }
  else
  {
    v206 = *(double *)(v177 + 48);
    v207 = v177 + *(int *)(v168 + 36);
    v208 = sub_100007E8C(qword_1011C9550);
    v319 = v207;
    v209 = ScaledMetric.wrappedValue.getter(v343, v208);
    v210 = *(_QWORD *)&v343[0];
    v211 = static Alignment.center.getter(v209);
    ((void (*)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))_FrameLayout.init(width:height:alignment:))(v341, v206 * 0.35, 0, v210, 0, v211, v212);
    v213 = v300;
    sub_10004A160(v329, v300, &qword_1011C3948);
    v214 = (_OWORD *)(v213 + *(int *)(sub_100007E8C(&qword_1011C3988) + 36));
    v215 = v341[1];
    *v214 = v341[0];
    v214[1] = v215;
    v214[2] = v341[2];
    v216 = v274;
    sub_1008237B8(v274);
    if (byte_1011C36B8 != 1)
    {
      v217 = enum case for DynamicTypeSize.accessibility3(_:);
      v218 = *(void (**)(uint64_t, uint64_t, uint64_t))(v313 + 104);
      v218(v186, enum case for DynamicTypeSize.accessibility3(_:), v167);
      v219 = static DynamicTypeSize.< infix(_:_:)(v216, v186);
      v332(v186, v167);
      v94 = (v219 & 1) == 0;
      v216 = v274;
      v220 = 48.0;
      if (v94)
        v221 = 72.0;
      else
        v221 = 48.0;
      if ((byte_1011C36B8 & 1) == 0)
      {
        v218(v186, v217, v167);
        v222 = static DynamicTypeSize.< infix(_:_:)(v216, v186);
        v332(v186, v167);
        v220 = 72.0;
        if ((v222 & 1) != 0)
          v220 = 48.0;
      }
      v206 = v206 * 0.45 - (v221 - v220);
    }
    v223 = v216;
    v205 = v332;
    v224 = ((uint64_t (*)(uint64_t, uint64_t))v332)(v223, v167);
    v225 = static Alignment.leading.getter(v224);
    _FrameLayout.init(width:height:alignment:)(v342, *(_QWORD *)&v206, 0, 0, 1, v225, v226);
    v227 = v300;
    v228 = v266;
    sub_10004A160(v300, v266, &qword_1011C3900);
    v229 = (_OWORD *)(v228 + *(int *)(v267 + 36));
    v230 = v342[1];
    *v229 = v342[0];
    v229[1] = v230;
    v229[2] = v342[2];
    sub_10004FF60(v227, &qword_1011C3900);
    v231 = v271;
    sub_100065228(v228, v271, &qword_1011C3908);
    v232 = *(double *)(v177 + 48) * 0.25;
    v233 = ScaledMetric.wrappedValue.getter(v343, v208);
    v234 = *(_QWORD *)&v343[0];
    v235 = static Alignment.center.getter(v233);
    _FrameLayout.init(width:height:alignment:)(v343, *(_QWORD *)&v232, 0, v234, 0, v235, v236);
    v237 = v269;
    sub_10004A160(v330, v269, &qword_1011C3940);
    v238 = sub_100007E8C(&qword_1011C3990);
    v239 = (_OWORD *)(v237 + *(int *)(v238 + 36));
    v240 = v343[1];
    *v239 = v343[0];
    v239[1] = v240;
    v239[2] = v343[2];
    v241 = static Alignment.leading.getter(v238);
    v242 = v270;
    sub_10014BB30(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v270, 0.0, 1, 0.0, 1, v241, v243);
    sub_10004FF60(v237, &qword_1011A2D80);
    v244 = v272;
    sub_100065228(v242, v272, &qword_1011A2D88);
    v245 = v268;
    sub_10004A160(v231, v268, &qword_1011C3908);
    sub_10004A160(v244, v242, &qword_1011A2D88);
    v246 = v273;
    sub_10004A160(v245, v273, &qword_1011C3908);
    v247 = sub_100007E8C(&qword_1011C3998);
    sub_10004A160(v242, v246 + *(int *)(v247 + 48), &qword_1011A2D88);
    sub_10004FF60(v242, &qword_1011A2D88);
    sub_10004FF60(v245, &qword_1011C3908);
    v248 = v305;
    sub_10004A160(v246, v305, &qword_1011C38F8);
    swift_storeEnumTagMultiPayload(v248, v302, 1);
    v249 = sub_1006D03C4(&qword_1011C39A0, &qword_1011A2D78, &qword_1011C39A8, &qword_1011A2D70);
    v250 = sub_100049F28(&qword_1011C39B0, &qword_1011C38F8, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    v251 = v248;
    v167 = v324;
    _ConditionalContent<>.init(storage:)(v251, v303, v307, v249, v250);
    sub_10004FF60(v246, &qword_1011C38F8);
    sub_10004FF60(v244, &qword_1011A2D88);
    sub_10004FF60(v231, &qword_1011C3908);
    v166 = v325;
    v186 = v323;
  }
  sub_100824BE4(v165);
  sub_1008237B8(v186);
  v252 = sub_1006CDAB0(v165, v186);
  v205(v186, v167);
  sub_10004FF60(v165, (uint64_t *)&unk_1011A33B8);
  if ((v252 & 1) != 0)
  {
    v253 = 1;
    v254 = v309;
  }
  else
  {
    v254 = v309;
    sub_10004A160(v166, v309, &qword_1011C3938);
    v253 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v301 + 56))(v254, v253, 1, v320);
  v255 = v306;
  sub_10004A160(v331, v306, &qword_1011C3920);
  v256 = v321;
  v257 = v308;
  sub_10004A160(v321, v308, &qword_1011C3918);
  v258 = v311;
  sub_10004A160(v254, v311, &qword_1011C38F0);
  v259 = v310;
  sub_10004A160(v255, v310, &qword_1011C3920);
  v260 = sub_100007E8C(&qword_1011C39B8);
  sub_10004A160(v257, v259 + *(int *)(v260 + 48), &qword_1011C3918);
  sub_10004A160(v258, v259 + *(int *)(v260 + 64), &qword_1011C38F0);
  sub_10004FF60(v254, &qword_1011C38F0);
  sub_10004FF60(v256, &qword_1011C3918);
  sub_10004FF60(v331, &qword_1011C3920);
  sub_10004FF60(v325, &qword_1011C3938);
  sub_10004FF60(v330, &qword_1011C3940);
  sub_10004FF60(v329, &qword_1011C3948);
  sub_10004FF60(v327, &qword_1011C3978);
  sub_10004FF60(v258, &qword_1011C38F0);
  sub_10004FF60(v257, &qword_1011C3918);
  return sub_10004FF60(v255, &qword_1011C3920);
}

double sub_1006CC814()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  double v11;
  char v12;
  void (*v13)(char *, uint64_t);
  double v14;
  char v15;
  double v16;
  uint64_t v18;

  v1 = type metadata accessor for DynamicTypeSize(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v18 - v6;
  v8 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
  __chkstk_darwin(v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = 0.0;
  if (*v0 == 1)
  {
    type metadata accessor for Tracklist.EmptyCell(0);
    sub_100824BE4((uint64_t)v10);
    sub_1008237B8((uint64_t)v7);
    v12 = sub_1006CDAB0((uint64_t)v10, (uint64_t)v7);
    v13 = *(void (**)(char *, uint64_t))(v2 + 8);
    v13(v7, v1);
    sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_1011A33B8);
    if ((v12 & 1) == 0)
    {
      sub_1008237B8((uint64_t)v4);
      if (qword_10119C600 != -1)
        swift_once(&qword_10119C600, sub_1006CA11C);
      if ((byte_1011C36B8 & 1) != 0)
      {
        v14 = 48.0;
      }
      else
      {
        (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v7, enum case for DynamicTypeSize.accessibility3(_:), v1);
        v15 = static DynamicTypeSize.< infix(_:_:)(v4, v7);
        v13(v7, v1);
        if ((v15 & 1) != 0)
          v14 = 48.0;
        else
          v14 = 72.0;
      }
      v13(v4, v1);
      v16 = -v14;
      if (qword_10119C678 != -1)
        swift_once(&qword_10119C678, sub_1006CA5B0);
      return v16 - *(double *)&qword_10124D780;
    }
  }
  return v11;
}

uint64_t sub_1006CCA30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  double v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _OWORD *v54;
  __int128 v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _OWORD *v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _OWORD v91[3];
  uint64_t v92;
  unsigned __int8 v93;
  uint64_t v94;
  unsigned __int8 v95;
  uint64_t v96;
  uint64_t v97;
  _OWORD v98[3];

  v85 = a5;
  v82 = a4;
  v79 = a3;
  v78 = a2;
  v89 = a6;
  v84 = sub_100007E8C(&qword_1011C3990);
  __chkstk_darwin(v84);
  v90 = (uint64_t)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v87 = (uint64_t)&v76 - v9;
  v81 = sub_100007E8C(&qword_1011C3988);
  __chkstk_darwin(v81);
  v88 = (uint64_t)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v86 = (uint64_t)&v76 - v12;
  v13 = sub_100007E8C(&qword_1011C39C8);
  __chkstk_darwin(v13);
  v15 = (char *)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C(&qword_1011C39D0);
  v80 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v77 = (uint64_t)&v76 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for DynamicTypeSize(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v76 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
  __chkstk_darwin(v22);
  v24 = (char *)&v76 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_100007E8C(&qword_1011C39D8);
  __chkstk_darwin(v25);
  v83 = (uint64_t)&v76 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v29 = (char *)&v76 - v28;
  type metadata accessor for Tracklist.EmptyCell(0);
  sub_100824BE4((uint64_t)v24);
  sub_1008237B8((uint64_t)v21);
  v30 = sub_1006CDAB0((uint64_t)v24, (uint64_t)v21);
  v31 = v21;
  v32 = v16;
  (*(void (**)(char *, uint64_t))(v19 + 8))(v31, v18);
  v33 = sub_10004FF60((uint64_t)v24, (uint64_t *)&unk_1011A33B8);
  v34 = 1;
  if ((v30 & 1) != 0)
  {
    *(_QWORD *)v15 = static VerticalAlignment.center.getter(v33);
    *((_QWORD *)v15 + 1) = 0;
    v15[16] = 0;
    v35 = sub_100007E8C(&qword_1011C39E8);
    v36 = sub_1006CD148(v78, v79, (uint64_t)&v15[*(int *)(v35 + 44)]);
    v37 = static Edge.Set.bottom.getter(v36);
    if (qword_10119C680 != -1)
      swift_once(&qword_10119C680, sub_1006CA5C0);
    v38 = EdgeInsets.init(_all:)(*(double *)&qword_10124D788);
    v40 = v39;
    v42 = v41;
    v44 = v43;
    v45 = v77;
    sub_10004A160((uint64_t)v15, v77, &qword_1011C39C8);
    v46 = v45 + *(int *)(v32 + 36);
    *(_BYTE *)v46 = v37;
    *(double *)(v46 + 8) = v38;
    *(_QWORD *)(v46 + 16) = v40;
    *(_QWORD *)(v46 + 24) = v42;
    *(_QWORD *)(v46 + 32) = v44;
    *(_BYTE *)(v46 + 40) = 0;
    sub_10004FF60((uint64_t)v15, &qword_1011C39C8);
    sub_100065228(v45, (uint64_t)v29, &qword_1011C39D0);
    v34 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v80 + 56))(v29, v34, 1, v32);
  v47 = *(double *)(a1 + 48);
  v48 = sub_100007E8C(qword_1011C9550);
  v49 = ScaledMetric.wrappedValue.getter(v98, v48);
  v50 = *(_QWORD *)&v98[0];
  v51 = static Alignment.center.getter(v49);
  ((void (*)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))_FrameLayout.init(width:height:alignment:))(v91, v47 * 0.6, 0, v50, 0, v51, v52);
  v53 = v86;
  sub_10004A160(v82, v86, &qword_1011C3948);
  v54 = (_OWORD *)(v53 + *(int *)(v81 + 36));
  v55 = v91[1];
  *v54 = v91[0];
  v54[1] = v55;
  v54[2] = v91[2];
  v56 = ScaledMetric.wrappedValue.getter(v98, v48);
  v57 = *(_QWORD *)&v98[0];
  v58 = static Alignment.center.getter(v56);
  _FrameLayout.init(width:height:alignment:)(&v92, 0, 1, v57, 0, v58, v59);
  v82 = v92;
  LODWORD(v81) = v93;
  v80 = v94;
  LODWORD(v79) = v95;
  v78 = v96;
  v77 = v97;
  v60 = ScaledMetric.wrappedValue.getter(v98, v48);
  v61 = *(_QWORD *)&v98[0];
  v62 = static Alignment.center.getter(v60);
  ((void (*)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))_FrameLayout.init(width:height:alignment:))(v98, v47 * 0.5, 0, v61, 0, v62, v63);
  v64 = (uint64_t)v29;
  v65 = v87;
  sub_10004A160(v85, v87, &qword_1011C3940);
  v66 = (_OWORD *)(v65 + *(int *)(v84 + 36));
  v67 = v98[1];
  *v66 = v98[0];
  v66[1] = v67;
  v66[2] = v98[2];
  v68 = v83;
  sub_10004A160(v64, v83, &qword_1011C39D8);
  v69 = v88;
  sub_10004A160(v53, v88, &qword_1011C3988);
  v70 = v90;
  sub_10004A160(v65, v90, &qword_1011C3990);
  v71 = v89;
  sub_10004A160(v68, v89, &qword_1011C39D8);
  v72 = (int *)sub_100007E8C(&qword_1011C39E0);
  sub_10004A160(v69, v71 + v72[12], &qword_1011C3988);
  v73 = v71 + v72[16];
  *(_QWORD *)v73 = 0;
  *(_BYTE *)(v73 + 8) = 1;
  *(_QWORD *)(v73 + 16) = v82;
  *(_BYTE *)(v73 + 24) = v81;
  *(_QWORD *)(v73 + 32) = v80;
  *(_BYTE *)(v73 + 40) = v79;
  v74 = v77;
  *(_QWORD *)(v73 + 48) = v78;
  *(_QWORD *)(v73 + 56) = v74;
  sub_10004A160(v70, v71 + v72[20], &qword_1011C3990);
  sub_10004FF60(v65, &qword_1011C3990);
  sub_10004FF60(v53, &qword_1011C3988);
  sub_10004FF60(v64, &qword_1011C39D8);
  sub_10004FF60(v70, &qword_1011C3990);
  sub_10004FF60(v69, &qword_1011C3988);
  return sub_10004FF60(v68, &qword_1011C39D8);
}

uint64_t sub_1006CD148@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v6 = sub_100007E8C(&qword_1011C3938);
  __chkstk_darwin(v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v21 - v10;
  v12 = sub_100007E8C(&qword_1011C3978);
  __chkstk_darwin(v12);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v21 - v16;
  sub_10004A160(a1, (uint64_t)&v21 - v16, &qword_1011C3978);
  sub_10004A160(a2, (uint64_t)v11, &qword_1011C3938);
  sub_10004A160((uint64_t)v17, (uint64_t)v14, &qword_1011C3978);
  sub_10004A160((uint64_t)v11, (uint64_t)v8, &qword_1011C3938);
  sub_10004A160((uint64_t)v14, a3, &qword_1011C3978);
  v18 = sub_100007E8C(&qword_1011C39F0);
  v19 = a3 + *(int *)(v18 + 48);
  *(_QWORD *)v19 = 0;
  *(_BYTE *)(v19 + 8) = 1;
  sub_10004A160((uint64_t)v8, a3 + *(int *)(v18 + 64), &qword_1011C3938);
  sub_10004FF60((uint64_t)v11, &qword_1011C3938);
  sub_10004FF60((uint64_t)v17, &qword_1011C3978);
  sub_10004FF60((uint64_t)v8, &qword_1011C3938);
  return sub_10004FF60((uint64_t)v14, &qword_1011C3978);
}

uint64_t sub_1006CD2F4@<X0>(char a1@<W0>, uint64_t a2@<X1>, _OWORD *a3@<X2>, uint64_t a4@<X8>)
{
  __int128 v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v13;

  *(_BYTE *)a4 = a1;
  *(_QWORD *)(a4 + 8) = a2;
  v5 = a3[1];
  *(_OWORD *)(a4 + 16) = *a3;
  *(_OWORD *)(a4 + 32) = v5;
  *(_OWORD *)(a4 + 48) = a3[2];
  *(_OWORD *)(a4 + 57) = *(_OWORD *)((char *)a3 + 41);
  v6 = type metadata accessor for Tracklist.EmptyCell(0);
  v13 = 0x4030000000000000;
  v7 = sub_1000E4360();
  ScaledMetric.init(wrappedValue:)(&v13, &type metadata for CGFloat, v7);
  v13 = 0x402E000000000000;
  ScaledMetric.init(wrappedValue:)(&v13, &type metadata for CGFloat, v7);
  v13 = 0x4033000000000000;
  ScaledMetric.init(wrappedValue:)(&v13, &type metadata for CGFloat, v7);
  v13 = 0x4008000000000000;
  ScaledMetric.init(wrappedValue:)(&v13, &type metadata for CGFloat, v7);
  v8 = (_QWORD *)(a4 + *(int *)(v6 + 44));
  *v8 = swift_getKeyPath("\b^4");
  v9 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  swift_storeEnumTagMultiPayload(v8, v9, 0);
  v10 = (_QWORD *)(a4 + *(int *)(v6 + 48));
  *v10 = swift_getKeyPath(&unk_100ECAA28);
  v11 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  return swift_storeEnumTagMultiPayload(v10, v11, 0);
}

uint64_t sub_1006CD454@<X0>(uint64_t a1@<X0>, __int16 a2@<W1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  char v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, uint64_t, uint64_t, __n128);
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v44 = a4;
  v43 = a3;
  v5 = a2;
  v45 = a1;
  v48 = a5;
  v6 = a2 & 0x100;
  v7 = sub_100007E8C(&qword_1011C4118);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011C4120);
  __chkstk_darwin(v11);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_100007E8C(&qword_1011C4128);
  __chkstk_darwin(v47);
  v42 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_100007E8C(&qword_1011C4130);
  __chkstk_darwin(v46);
  v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C(&qword_1011C4138);
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((v5 & 1) != 0)
  {
    if (!v6)
      goto LABEL_3;
LABEL_6:
    v26 = static HorizontalAlignment.listRowSeparatorLeading.getter(v18);
    v27 = swift_allocObject(&unk_1010D74B8, 33, 7);
    *(_BYTE *)(v27 + 16) = v5 & 1;
    *(_BYTE *)(v27 + 17) = BYTE1(v6);
    *(_QWORD *)(v27 + 24) = v43;
    *(_BYTE *)(v27 + 32) = v44 & 1;
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v21, v45, v7);
    v28 = (uint64_t *)&v21[*(int *)(v17 + 36)];
    *v28 = v26;
    v28[1] = (uint64_t)sub_1006D8458;
    v28[2] = v27;
    v29 = &qword_1011C4138;
    sub_10004A160((uint64_t)v21, (uint64_t)v16, &qword_1011C4138);
    swift_storeEnumTagMultiPayload(v16, v46, 0);
    v30 = sub_1006D84B0();
    v31 = sub_1006D8534();
    _ConditionalContent<>.init(storage:)(v16, v17, v47, v30, v31);
    v32 = (uint64_t)v21;
    return sub_10004FF60(v32, v29);
  }
  if (!v6)
    goto LABEL_6;
LABEL_3:
  if ((v44 & 1) != 0)
  {
    v22 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16);
    v22(v10, v45, v7, v19);
    ((void (*)(char *, char *, uint64_t))v22)(v13, v10, v7);
    swift_storeEnumTagMultiPayload(v13, v11, 1);
    v23 = sub_1006D84B0();
    v24 = sub_100049F28(&qword_1011C4148, &qword_1011C4118, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    v25 = (uint64_t)v42;
    _ConditionalContent<>.init(storage:)(v13, v17, v7, v23, v24);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  else
  {
    v33 = static HorizontalAlignment.listRowSeparatorLeading.getter(v18);
    v34 = swift_allocObject(&unk_1010D74E0, 24, 7);
    *(_QWORD *)(v34 + 16) = v43;
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v21, v45, v7);
    v35 = (uint64_t *)&v21[*(int *)(v17 + 36)];
    *v35 = v33;
    v35[1] = (uint64_t)sub_1006D85C8;
    v35[2] = v34;
    sub_10004A160((uint64_t)v21, (uint64_t)v13, &qword_1011C4138);
    swift_storeEnumTagMultiPayload(v13, v11, 0);
    v36 = sub_1006D84B0();
    v37 = sub_100049F28(&qword_1011C4148, &qword_1011C4118, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    v25 = (uint64_t)v42;
    _ConditionalContent<>.init(storage:)(v13, v17, v7, v36, v37);
    sub_10004FF60((uint64_t)v21, &qword_1011C4138);
  }
  v29 = &qword_1011C4128;
  sub_10004A160(v25, (uint64_t)v16, &qword_1011C4128);
  swift_storeEnumTagMultiPayload(v16, v46, 1);
  v38 = sub_1006D84B0();
  v39 = sub_1006D8534();
  _ConditionalContent<>.init(storage:)(v16, v17, v47, v38, v39);
  v32 = v25;
  return sub_10004FF60(v32, v29);
}

uint64_t sub_1006CD864@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned __int8 *v2;
  __int16 v3;

  if (v2[1])
    v3 = 256;
  else
    v3 = 0;
  return sub_1006CD454(a1, v3 | *v2, *((_QWORD *)v2 + 1), v2[16], a2);
}

uint64_t sub_1006CD890@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char v14;
  void (*v15)(char *, uint64_t);
  __n128 v16;
  __n128 v17;
  uint64_t result;
  uint64_t v19;

  v2 = type metadata accessor for Color.RGBColorSpace(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ColorScheme(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v19 - v12;
  EnvironmentValues.colorScheme.getter(v11);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v10, enum case for ColorScheme.light(_:), v6);
  v14 = static ColorScheme.== infix(_:_:)(v13, v10);
  v15 = *(void (**)(char *, uint64_t))(v7 + 8);
  v15(v10, v6);
  v15(v13, v6);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for Color.RGBColorSpace.sRGB(_:), v2);
  if ((v14 & 1) != 0)
  {
    v16.n128_u64[0] = 0x3FCE1E1E1E1E1E1ELL;
    v17.n128_u64[0] = 0x3FD0D0D0D0D0D0D1;
  }
  else
  {
    v16.n128_u64[0] = 0x3FED7D7D7D7D7D7DLL;
    v17.n128_u64[0] = 0x3FEEBEBEBEBEBEBFLL;
  }
  result = Color.init(_:red:green:blue:opacity:)(v5, v16, v16.n128_f64[0], v17, 0.5);
  *a1 = result;
  return result;
}

uint64_t sub_1006CDA18(uint64_t result)
{
  if (qword_10119C600 != -1)
    result = swift_once(&qword_10119C600, sub_1006CA11C);
  if (byte_1011C36B8 != 1)
    return DynamicTypeSize.isAccessibilitySize.getter(result);
  return result;
}

uint64_t sub_1006CDAB0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  char v27;
  uint64_t v28;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;

  v36 = a1;
  v3 = type metadata accessor for UserInterfaceSizeClass(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v34 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011A49C0);
  __chkstk_darwin(v6);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
  __chkstk_darwin(v9);
  v35 = (uint64_t)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v33 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v33 - v15;
  v17 = type metadata accessor for DynamicTypeSize(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10119C600 != -1)
    swift_once(&qword_10119C600, sub_1006CA11C);
  if ((byte_1011C36B8 & 1) != 0)
    goto LABEL_13;
  (*(void (**)(char *, _QWORD, uint64_t))(v18 + 104))(v20, enum case for DynamicTypeSize.accessibility3(_:), v17);
  v21 = sub_100048748(&qword_1011A4FF0, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  v22 = dispatch thunk of static Comparable.< infix(_:_:)(a2, v20, v17, v21);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  sub_10004A160(v36, (uint64_t)v16, (uint64_t *)&unk_1011A33B8);
  if ((v22 & 1) != 0)
  {
    v23 = (uint64_t *)&unk_1011A33B8;
    v24 = (uint64_t)v16;
LABEL_12:
    sub_10004FF60(v24, v23);
LABEL_13:
    v27 = 0;
    return v27 & 1;
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v13, enum case for UserInterfaceSizeClass.compact(_:), v3);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v13, 0, 1, v3);
  v25 = (uint64_t)&v8[*(int *)(v6 + 48)];
  sub_10004A160((uint64_t)v16, (uint64_t)v8, (uint64_t *)&unk_1011A33B8);
  sub_10004A160((uint64_t)v13, v25, (uint64_t *)&unk_1011A33B8);
  v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v26((uint64_t)v8, 1, v3) != 1)
  {
    v28 = v35;
    sub_10004A160((uint64_t)v8, v35, (uint64_t *)&unk_1011A33B8);
    if (v26(v25, 1, v3) != 1)
    {
      v30 = v34;
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v34, v25, v3);
      v31 = sub_100048748(&qword_1011A49C8, (uint64_t (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass, (uint64_t)&protocol conformance descriptor for UserInterfaceSizeClass);
      v27 = dispatch thunk of static Equatable.== infix(_:_:)(v28, v30, v3, v31);
      v32 = *(void (**)(char *, uint64_t))(v4 + 8);
      v32(v30, v3);
      sub_10004FF60((uint64_t)v13, (uint64_t *)&unk_1011A33B8);
      sub_10004FF60((uint64_t)v16, (uint64_t *)&unk_1011A33B8);
      v32((char *)v28, v3);
      sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011A33B8);
      return v27 & 1;
    }
    sub_10004FF60((uint64_t)v13, (uint64_t *)&unk_1011A33B8);
    sub_10004FF60((uint64_t)v16, (uint64_t *)&unk_1011A33B8);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v28, v3);
    goto LABEL_11;
  }
  sub_10004FF60((uint64_t)v13, (uint64_t *)&unk_1011A33B8);
  sub_10004FF60((uint64_t)v16, (uint64_t *)&unk_1011A33B8);
  if (v26(v25, 1, v3) != 1)
  {
LABEL_11:
    v23 = &qword_1011A49C0;
    v24 = (uint64_t)v8;
    goto LABEL_12;
  }
  sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011A33B8);
  v27 = 1;
  return v27 & 1;
}

double sub_1006CDEB8(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  double result;
  char v9;
  uint64_t v11;

  v4 = type metadata accessor for DynamicTypeSize(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10119C600 != -1)
    swift_once(&qword_10119C600, sub_1006CA11C);
  if (byte_1011C36B8 != 1)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for DynamicTypeSize.accessibility3(_:), v4);
    v9 = static DynamicTypeSize.< infix(_:_:)(a1, v7);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if ((v9 & 1) != 0)
    {
      if ((a2 & 1) != 0)
        return 32.0;
    }
    else if ((a2 & 1) == 0)
    {
      return 72.0;
    }
    return 48.0;
  }
  result = 48.0;
  if ((a2 & 1) != 0)
    return 32.0;
  return result;
}

uint64_t type metadata accessor for Tracklist.EmptyCell(uint64_t a1)
{
  return sub_100055934(a1, qword_1011C3858, (uint64_t)&nominal type descriptor for Tracklist.EmptyCell);
}

void sub_1006CDFFC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[9];

  v6[0] = &unk_100ECAA60;
  v6[1] = &unk_100ECAA78;
  v6[2] = &unk_100ECAA78;
  v6[3] = &unk_100ECAA60;
  v6[4] = &unk_100ECAA60;
  v6[5] = &unk_100ECAA90;
  v6[6] = &unk_100ECAAA8;
  sub_1000E3A44(319, (unint64_t *)&qword_1011C6900, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v3 <= 0x3F)
  {
    v6[7] = *(_QWORD *)(v2 - 8) + 64;
    sub_1001C17C8(319);
    if (v5 <= 0x3F)
    {
      v6[8] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 0, 9, v6, a1 + 56);
    }
  }
}

uint64_t sub_1006CE0C8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v19 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 8);
    v8 = a2[4];
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = v8;
    v9 = a2[6];
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = v9;
    *(_QWORD *)(a1 + 56) = a2[7];
    v10 = *((_OWORD *)a2 + 4);
    v11 = *((_OWORD *)a2 + 5);
    v12 = *((_OWORD *)a2 + 6);
    *(_OWORD *)(a1 + 105) = *(_OWORD *)((char *)a2 + 105);
    *(_OWORD *)(a1 + 80) = v11;
    *(_OWORD *)(a1 + 96) = v12;
    v13 = *(int *)(a3 + 84);
    v14 = (_QWORD *)(a1 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    *(_OWORD *)(a1 + 64) = v10;
    swift_unknownObjectRetain(v7, a2);
    swift_retain();
    swift_retain();
    swift_retain();
    v16 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
    {
      v17 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v14, v15, v17);
      v18 = 1;
    }
    else
    {
      *v14 = *v15;
      swift_retain();
      v18 = 0;
    }
    swift_storeEnumTagMultiPayload(v14, v16, v18);
    v20 = *(int *)(a3 + 88);
    v21 = (_QWORD *)(a1 + v20);
    v22 = (uint64_t *)((char *)a2 + v20);
    v23 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
    if (swift_getEnumCaseMultiPayload(v22, v23) == 1)
    {
      v24 = type metadata accessor for UserInterfaceSizeClass(0);
      v25 = *(_QWORD *)(v24 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v25 + 48))(v22, 1, v24))
      {
        v26 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v25 + 16))(v21, v22, v24);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v21, 0, 1, v24);
      }
      v27 = v21;
      v28 = v23;
      v29 = 1;
    }
    else
    {
      *v21 = *v22;
      swift_retain();
      v27 = v21;
      v28 = v23;
      v29 = 0;
    }
    swift_storeEnumTagMultiPayload(v27, v28, v29);
  }
  return a1;
}

void sub_1006CE2D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_unknownObjectRelease(*(_QWORD *)(a1 + 8));
  swift_release();
  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 84);
  v5 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    swift_release();
  }
  v7 = a1 + *(int *)(a2 + 88);
  v8 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for UserInterfaceSizeClass(0);
    v10 = *(_QWORD *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9))
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v7, v9);
  }
  else
  {
    swift_release();
  }
}

uint64_t sub_1006CE3F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  v8 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v9 = *(_OWORD *)(a2 + 64);
  v10 = *(_OWORD *)(a2 + 80);
  v11 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 105) = *(_OWORD *)(a2 + 105);
  *(_OWORD *)(a1 + 80) = v10;
  *(_OWORD *)(a1 + 96) = v11;
  v12 = *(int *)(a3 + 84);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  *(_OWORD *)(a1 + 64) = v9;
  swift_unknownObjectRetain(v6, a2);
  swift_retain();
  swift_retain();
  swift_retain();
  v15 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
  {
    v16 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
    v17 = 1;
  }
  else
  {
    *v13 = *v14;
    swift_retain();
    v17 = 0;
  }
  swift_storeEnumTagMultiPayload(v13, v15, v17);
  v18 = *(int *)(a3 + 88);
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  v21 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v20, v21) == 1)
  {
    v22 = type metadata accessor for UserInterfaceSizeClass(0);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v23 + 48))(v20, 1, v22))
    {
      v24 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      v25 = 1;
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v23 + 16))(v19, v20, v22);
      v25 = 1;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v19, 0, 1, v22);
    }
  }
  else
  {
    *v19 = *v20;
    swift_retain();
    v25 = 0;
  }
  swift_storeEnumTagMultiPayload(v19, v21, v25);
  return a1;
}

uint64_t sub_1006CE5D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  swift_unknownObjectRetain(v6, a2);
  swift_unknownObjectRelease(v7);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_BYTE *)(a1 + 89) = *(_BYTE *)(a2 + 89);
  *(_BYTE *)(a1 + 90) = *(_BYTE *)(a2 + 90);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  if (a1 != a2)
  {
    v8 = *(int *)(a3 + 84);
    v9 = (_QWORD *)(a1 + v8);
    v10 = (_QWORD *)(a2 + v8);
    sub_10004FF60(a1 + v8, (uint64_t *)&unk_1011ACE40);
    v11 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
      v13 = 1;
    }
    else
    {
      *v9 = *v10;
      swift_retain();
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v13);
    v14 = *(int *)(a3 + 88);
    v15 = (_QWORD *)(a1 + v14);
    v16 = (_QWORD *)(a2 + v14);
    sub_10004FF60(a1 + v14, (uint64_t *)&unk_1011A3ED0);
    v17 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
    if (swift_getEnumCaseMultiPayload(v16, v17) == 1)
    {
      v18 = type metadata accessor for UserInterfaceSizeClass(0);
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18))
      {
        v20 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
        v21 = 1;
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v19 + 16))(v15, v16, v18);
        v21 = 1;
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v15, 0, 1, v18);
      }
    }
    else
    {
      *v15 = *v16;
      swift_retain();
      v21 = 0;
    }
    swift_storeEnumTagMultiPayload(v15, v17, v21);
  }
  return a1;
}

uint64_t sub_1006CE854(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 105) = *(_OWORD *)(a2 + 105);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 64);
  v8 = *(int *)(a3 + 84);
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 64) = v7;
  v11 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v12 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload(v9, v11, 1);
  }
  else
  {
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  v13 = *(int *)(a3 + 88);
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  v16 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
  {
    v17 = type metadata accessor for UserInterfaceSizeClass(0);
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v15, 1, v17))
    {
      v19 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(v14, v15, v17);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v14, 0, 1, v17);
    }
    swift_storeEnumTagMultiPayload(v14, v16, 1);
  }
  else
  {
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1006CEA14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_unknownObjectRelease(v7);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  v8 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v8;
  swift_release();
  v9 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v9;
  swift_release();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_release();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  *(_BYTE *)(a1 + 90) = *(_BYTE *)(a2 + 90);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  if (a1 != a2)
  {
    v10 = *(int *)(a3 + 84);
    v11 = (void *)(a1 + v10);
    v12 = (const void *)(a2 + v10);
    sub_10004FF60(a1 + v10, (uint64_t *)&unk_1011ACE40);
    v13 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
    {
      v14 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v11, v12, v14);
      swift_storeEnumTagMultiPayload(v11, v13, 1);
    }
    else
    {
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    v15 = *(int *)(a3 + 88);
    v16 = (void *)(a1 + v15);
    v17 = (const void *)(a2 + v15);
    sub_10004FF60(a1 + v15, (uint64_t *)&unk_1011A3ED0);
    v18 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
    if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
    {
      v19 = type metadata accessor for UserInterfaceSizeClass(0);
      v20 = *(_QWORD *)(v19 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v17, 1, v19))
      {
        v21 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v20 + 32))(v16, v17, v19);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v16, 0, 1, v19);
      }
      swift_storeEnumTagMultiPayload(v16, v18, 1);
    }
    else
    {
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1006CEC44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006CEC50);
}

uint64_t sub_1006CEC50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011C6890);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 84);
    }
    else
    {
      v10 = sub_100007E8C(&qword_1011A48A0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 88);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1006CECF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006CED04);
}

uint64_t sub_1006CED04(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011C6890);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 84);
    }
    else
    {
      v10 = sub_100007E8C(&qword_1011A48A0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 88);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for Tracklist.Cell(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for Tracklist.Cell);
}

_QWORD *sub_1006CEDB4(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    *(_QWORD *)(a1 + 8) = a2[1];
    v7 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    *(_OWORD *)(a1 + 32) = v7;
    *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
    v8 = a3[7];
    v9 = a1 + v8;
    v10 = (uint64_t)a2 + v8;
    *(_OWORD *)(a1 + 57) = *(_OWORD *)((char *)a2 + 57);
    v11 = sub_100007E8C(qword_1011C9550);
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    v12((uint64_t)v4 + a3[8], (uint64_t)a2 + a3[8], v11);
    v12((uint64_t)v4 + a3[9], (uint64_t)a2 + a3[9], v11);
    v12((uint64_t)v4 + a3[10], (uint64_t)a2 + a3[10], v11);
    v13 = a3[11];
    v14 = (_QWORD *)((char *)v4 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    v16 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
    {
      v17 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v14, v15, v17);
      v18 = 1;
    }
    else
    {
      *v14 = *v15;
      swift_retain();
      v18 = 0;
    }
    swift_storeEnumTagMultiPayload(v14, v16, v18);
    v20 = a3[12];
    v21 = (_QWORD *)((char *)v4 + v20);
    v22 = (uint64_t *)((char *)a2 + v20);
    v23 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
    if (swift_getEnumCaseMultiPayload(v22, v23) == 1)
    {
      v24 = type metadata accessor for UserInterfaceSizeClass(0);
      v25 = *(_QWORD *)(v24 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v25 + 48))(v22, 1, v24))
      {
        v26 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v25 + 16))(v21, v22, v24);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v21, 0, 1, v24);
      }
      v27 = v21;
      v28 = v23;
      v29 = 1;
    }
    else
    {
      *v21 = *v22;
      swift_retain();
      v27 = v21;
      v28 = v23;
      v29 = 0;
    }
    swift_storeEnumTagMultiPayload(v27, v28, v29);
  }
  return v4;
}

void sub_1006CF000(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = a1 + a2[7];
  v5 = sub_100007E8C(qword_1011C9550);
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(a1 + a2[8], v5);
  v6(a1 + a2[9], v5);
  v6(a1 + a2[10], v5);
  v7 = a1 + a2[11];
  v8 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  else
  {
    swift_release();
  }
  v10 = a1 + a2[12];
  v11 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v12 = type metadata accessor for UserInterfaceSizeClass(0);
    v13 = *(_QWORD *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v10, v12);
  }
  else
  {
    swift_release();
  }
}

uint64_t sub_1006CF164(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  v7 = a3[7];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  v10 = sub_100007E8C(qword_1011C9550);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  v11(a1 + a3[8], a2 + a3[8], v10);
  v11(a1 + a3[9], a2 + a3[9], v10);
  v11(a1 + a3[10], a2 + a3[10], v10);
  v12 = a3[11];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  v15 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
  {
    v16 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
    v17 = 1;
  }
  else
  {
    *v13 = *v14;
    swift_retain();
    v17 = 0;
  }
  swift_storeEnumTagMultiPayload(v13, v15, v17);
  v18 = a3[12];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  v21 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v20, v21) == 1)
  {
    v22 = type metadata accessor for UserInterfaceSizeClass(0);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v23 + 48))(v20, 1, v22))
    {
      v24 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      v25 = 1;
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v23 + 16))(v19, v20, v22);
      v25 = 1;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v19, 0, 1, v22);
    }
  }
  else
  {
    *v19 = *v20;
    swift_retain();
    v25 = 0;
  }
  swift_storeEnumTagMultiPayload(v19, v21, v25);
  return a1;
}

uint64_t sub_1006CF384(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  *(_BYTE *)(a1 + 42) = *(_BYTE *)(a2 + 42);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v6 = a3[7];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_100007E8C(qword_1011C9550);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(a1 + a3[8], a2 + a3[8], v9);
  v10(a1 + a3[9], a2 + a3[9], v9);
  v10(a1 + a3[10], a2 + a3[10], v9);
  if (a1 != a2)
  {
    v11 = a3[11];
    v12 = (_QWORD *)(a1 + v11);
    v13 = (_QWORD *)(a2 + v11);
    sub_10004FF60(a1 + v11, (uint64_t *)&unk_1011ACE40);
    v14 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
    {
      v15 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v12, v13, v15);
      v16 = 1;
    }
    else
    {
      *v12 = *v13;
      swift_retain();
      v16 = 0;
    }
    swift_storeEnumTagMultiPayload(v12, v14, v16);
    v17 = a3[12];
    v18 = (_QWORD *)(a1 + v17);
    v19 = (_QWORD *)(a2 + v17);
    sub_10004FF60(a1 + v17, (uint64_t *)&unk_1011A3ED0);
    v20 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
    if (swift_getEnumCaseMultiPayload(v19, v20) == 1)
    {
      v21 = type metadata accessor for UserInterfaceSizeClass(0);
      v22 = *(_QWORD *)(v21 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v22 + 48))(v19, 1, v21))
      {
        v23 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        v24 = 1;
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v22 + 16))(v18, v19, v21);
        v24 = 1;
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v18, 0, 1, v21);
      }
    }
    else
    {
      *v18 = *v19;
      swift_retain();
      v24 = 0;
    }
    swift_storeEnumTagMultiPayload(v18, v20, v24);
  }
  return a1;
}

uint64_t sub_1006CF604(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  v7 = a3[7];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  v10 = sub_100007E8C(qword_1011C9550);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v11(a1 + a3[8], a2 + a3[8], v10);
  v11(a1 + a3[9], a2 + a3[9], v10);
  v11(a1 + a3[10], a2 + a3[10], v10);
  v12 = a3[11];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
  {
    v16 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v13, v14, v16);
    swift_storeEnumTagMultiPayload(v13, v15, 1);
  }
  else
  {
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  v17 = a3[12];
  v18 = (void *)(a1 + v17);
  v19 = (const void *)(a2 + v17);
  v20 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v19, v20) == 1)
  {
    v21 = type metadata accessor for UserInterfaceSizeClass(0);
    v22 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v19, 1, v21))
    {
      v23 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v22 + 32))(v18, v19, v21);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v18, 0, 1, v21);
    }
    swift_storeEnumTagMultiPayload(v18, v20, 1);
  }
  else
  {
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1006CF824(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  *(_BYTE *)(a1 + 42) = *(_BYTE *)(a2 + 42);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v7 = a3[7];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)(a1 + 64) = v6;
  v10 = sub_100007E8C(qword_1011C9550);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(a1 + a3[8], a2 + a3[8], v10);
  v11(a1 + a3[9], a2 + a3[9], v10);
  v11(a1 + a3[10], a2 + a3[10], v10);
  if (a1 != a2)
  {
    v12 = a3[11];
    v13 = (void *)(a1 + v12);
    v14 = (const void *)(a2 + v12);
    sub_10004FF60(a1 + v12, (uint64_t *)&unk_1011ACE40);
    v15 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
    {
      v16 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v13, v14, v16);
      swift_storeEnumTagMultiPayload(v13, v15, 1);
    }
    else
    {
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    v17 = a3[12];
    v18 = (void *)(a1 + v17);
    v19 = (const void *)(a2 + v17);
    sub_10004FF60(a1 + v17, (uint64_t *)&unk_1011A3ED0);
    v20 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
    if (swift_getEnumCaseMultiPayload(v19, v20) == 1)
    {
      v21 = type metadata accessor for UserInterfaceSizeClass(0);
      v22 = *(_QWORD *)(v21 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v19, 1, v21))
      {
        v23 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v22 + 32))(v18, v19, v21);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v18, 0, 1, v21);
      }
      swift_storeEnumTagMultiPayload(v18, v20, 1);
    }
    else
    {
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1006CFA8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006CFA98);
}

uint64_t sub_1006CFA98(unsigned __int8 *a1, uint64_t a2, int *a3)
{
  unsigned int v4;
  BOOL v5;
  int v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if ((_DWORD)a2 == 254)
  {
    v4 = *a1;
    v5 = v4 >= 2;
    v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5)
      return (v6 + 1);
    else
      return 0;
  }
  else
  {
    v10 = sub_100007E8C(qword_1011C9550);
    v11 = *(_QWORD *)(v10 - 8);
    if (*(_DWORD *)(v11 + 84) == (_DWORD)a2)
    {
      v12 = v10;
      v13 = a3[7];
    }
    else
    {
      v14 = sub_100007E8C(&qword_1011C6890);
      v11 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v11 + 84) == (_DWORD)a2)
      {
        v12 = v14;
        v13 = a3[11];
      }
      else
      {
        v12 = sub_100007E8C(&qword_1011A48A0);
        v11 = *(_QWORD *)(v12 - 8);
        v13 = a3[12];
      }
    }
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v11 + 48))(&a1[v13], a2, v12);
  }
}

uint64_t sub_1006CFB68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006CFB74);
}

_BYTE *sub_1006CFB74(_BYTE *result, uint64_t a2, int a3, int *a4)
{
  _BYTE *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 254)
  {
    *result = a2 + 1;
  }
  else
  {
    v8 = sub_100007E8C(qword_1011C9550);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[7];
    }
    else
    {
      v12 = sub_100007E8C(&qword_1011C6890);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[11];
      }
      else
      {
        v10 = sub_100007E8C(&qword_1011A48A0);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[12];
      }
    }
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_1006CFC3C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v8[0] = &unk_100ECAA78;
  v8[1] = (char *)&value witness table for Builtin.Int64 + 64;
  v8[2] = &unk_100ECAAA8;
  sub_1000F6458(319);
  if (v3 <= 0x3F)
  {
    v9 = *(_QWORD *)(v2 - 8) + 64;
    v10 = v9;
    v11 = v9;
    v12 = v9;
    sub_1000E3A44(319, (unint64_t *)&qword_1011C6900, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v5 <= 0x3F)
    {
      v13 = *(_QWORD *)(v4 - 8) + 64;
      sub_1001C17C8(319);
      if (v7 <= 0x3F)
      {
        v14 = *(_QWORD *)(v6 - 8) + 64;
        swift_initStructMetadata(a1, 256, 9, v8, a1 + 16);
      }
    }
  }
}

uint64_t sub_1006CFD1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1004DF980(a1, a2, a3, (uint64_t)&unk_100FAA198);
}

uint64_t sub_1006CFD28(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAA170, 1);
}

uint64_t sub_1006CFD38(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  void (*v30)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v34 = a2;
  v5 = type metadata accessor for DynamicTypeSize(0);
  v35 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UserInterfaceSizeClass(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011A49C0);
  __chkstk_darwin(v12);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
  __chkstk_darwin(v15);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v32 - v19;
  if (qword_10119C600 != -1)
    swift_once(&qword_10119C600, sub_1006CA11C);
  if ((byte_1011C36B8 & 1) == 0)
  {
    v33 = v5;
    (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v20, enum case for UserInterfaceSizeClass.compact(_:), v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v20, 0, 1, v8);
    v22 = (uint64_t)&v14[*(int *)(v12 + 48)];
    sub_10004A160(a1, (uint64_t)v14, (uint64_t *)&unk_1011A33B8);
    sub_10004A160((uint64_t)v20, v22, (uint64_t *)&unk_1011A33B8);
    v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (v23((uint64_t)v14, 1, v8) == 1)
    {
      sub_10004FF60((uint64_t)v20, (uint64_t *)&unk_1011A33B8);
      if (v23(v22, 1, v8) == 1)
      {
        sub_10004FF60((uint64_t)v14, (uint64_t *)&unk_1011A33B8);
LABEL_16:
        v25 = v35;
        v26 = v33;
        (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v7, v34, v33);
        goto LABEL_17;
      }
    }
    else
    {
      sub_10004A160((uint64_t)v14, (uint64_t)v17, (uint64_t *)&unk_1011A33B8);
      if (v23(v22, 1, v8) != 1)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))(v11, v22, v8);
        v28 = sub_100048748(&qword_1011A49C8, (uint64_t (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass, (uint64_t)&protocol conformance descriptor for UserInterfaceSizeClass);
        v29 = dispatch thunk of static Equatable.== infix(_:_:)(v17, v11, v8, v28);
        v30 = *(void (**)(char *, uint64_t))(v9 + 8);
        v30(v11, v8);
        sub_10004FF60((uint64_t)v20, (uint64_t *)&unk_1011A33B8);
        v30(v17, v8);
        sub_10004FF60((uint64_t)v14, (uint64_t *)&unk_1011A33B8);
        if ((v29 & 1) != 0)
          goto LABEL_16;
LABEL_11:
        if (qword_10119C608 != -1)
          swift_once(&qword_10119C608, sub_1006CA17C);
        v24 = *(double *)&qword_10124D710;
        v25 = v35;
        v26 = v33;
        v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 16))(v7, v34, v33);
        if (v24 <= a3)
        {
          v21 = DynamicTypeSize.isAccessibilitySize.getter(v27);
LABEL_18:
          (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v26);
          return v21 & 1;
        }
LABEL_17:
        v21 = 1;
        goto LABEL_18;
      }
      sub_10004FF60((uint64_t)v20, (uint64_t *)&unk_1011A33B8);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v8);
    }
    sub_10004FF60((uint64_t)v14, &qword_1011A49C0);
    goto LABEL_11;
  }
  v21 = 1;
  return v21 & 1;
}

unint64_t sub_1006D0100()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C38E0;
  if (!qword_1011C38E0)
  {
    v1 = sub_100044B54(&qword_1011C38B8);
    sub_100049F28(&qword_1011C38E8, &qword_1011C38B0, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C38E0);
  }
  return result;
}

unint64_t sub_1006D0184()
{
  unint64_t result;

  result = qword_1011C3980;
  if (!qword_1011C3980)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Rectangle, &type metadata for Rectangle);
    atomic_store(result, (unint64_t *)&qword_1011C3980);
  }
  return result;
}

uint64_t sub_1006D01D0()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, uint64_t);
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = (int *)type metadata accessor for Tracklist.EmptyCell(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = v0 + v3 + v1[7];
  v6 = sub_100007E8C(qword_1011C9550);
  v7 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v5, v6);
  v7(v0 + v3 + v1[8], v6);
  v7(v0 + v3 + v1[9], v6);
  v7(v0 + v3 + v1[10], v6);
  v8 = v0 + v3 + v1[11];
  v9 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
  }
  else
  {
    swift_release();
  }
  v11 = v0 + v3 + v1[12];
  v12 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
  {
    v13 = type metadata accessor for UserInterfaceSizeClass(0);
    v14 = *(_QWORD *)(v13 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13))
      (*(void (**)(unint64_t, uint64_t))(v14 + 8))(v11, v13);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject(v0, v3 + v4);
}

double sub_1006D0350()
{
  uint64_t v0;
  uint64_t v1;
  double v2;

  v0 = type metadata accessor for Tracklist.EmptyCell(0);
  v1 = static HorizontalAlignment.leading.getter(v0);
  v2 = ViewDimensions.subscript.getter(v1);
  return v2 + sub_1006CC814();
}

uint64_t sub_1006D03C4(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v8 = sub_100044B54(a2);
    sub_100049F28(a3, a4, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for Tracklist.LeadingIcon(uint64_t a1)
{
  return sub_100055934(a1, qword_1011C3E00, (uint64_t)&nominal type descriptor for Tracklist.LeadingIcon);
}

uint64_t type metadata accessor for Tracklist.TrailingIcons(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for Tracklist.TrailingIcons);
}

uint64_t type metadata accessor for Tracklist.VerticalTextStack(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Tracklist.VerticalTextStack);
}

uint64_t type metadata accessor for Tracklist.HorizontalTextStack(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Tracklist.HorizontalTextStack);
}

uint64_t sub_1006D047C()
{
  return sub_1004D9A80((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1006BCE4C);
}

uint64_t sub_1006D0488@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1006C18A0(*(_QWORD *)(v1 + 56), a1);
}

uint64_t sub_1006D0498()
{
  return sub_1004D9A80((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1006C18FC);
}

uint64_t sub_1006D04A4()
{
  return sub_1006D07F4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1006BF3D4);
}

uint64_t sub_1006D04B0()
{
  return sub_1006D07F4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1006BD9C4);
}

uint64_t sub_1006D04BC()
{
  return sub_1006D07F4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1006BE1D0);
}

uint64_t type metadata accessor for Tracklist.LeadingNumber(uint64_t a1)
{
  return sub_100055934(a1, qword_1011C3CB0, (uint64_t)&nominal type descriptor for Tracklist.LeadingNumber);
}

uint64_t type metadata accessor for Tracklist.Artwork(uint64_t a1)
{
  return sub_100055934(a1, qword_1011C3D60, (uint64_t)&nominal type descriptor for Tracklist.Artwork);
}

unint64_t sub_1006D04F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C3A40;
  if (!qword_1011C3A40)
  {
    v1 = sub_100044B54(&qword_1011C39F8);
    sub_100048748(&qword_1011C3A48, type metadata accessor for Tracklist.Artwork, (uint64_t)&unk_100ECAE60);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1011C3A40);
  }
  return result;
}

unint64_t sub_1006D056C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C3A50;
  if (!qword_1011C3A50)
  {
    v1 = sub_100044B54(&qword_1011C3A00);
    sub_100048748(&qword_1011C3A58, type metadata accessor for Tracklist.LeadingNumber, (uint64_t)&unk_100ECAE10);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1011C3A50);
  }
  return result;
}

unint64_t sub_1006D05E8()
{
  unint64_t result;

  result = qword_1011C3A68;
  if (!qword_1011C3A68)
  {
    result = swift_getWitnessTable(&unk_100ECADC0, &type metadata for Tracklist.VideoIcon);
    atomic_store(result, (unint64_t *)&qword_1011C3A68);
  }
  return result;
}

uint64_t sub_1006D062C()
{
  return sub_1006D07F4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1006C0CF8);
}

unint64_t sub_1006D0638()
{
  unint64_t result;

  result = qword_1011C3A78;
  if (!qword_1011C3A78)
  {
    result = swift_getWitnessTable(&unk_100ECAD70, &type metadata for SeparatorAlignmentModifier);
    atomic_store(result, (unint64_t *)&qword_1011C3A78);
  }
  return result;
}

unint64_t sub_1006D067C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C3A80;
  if (!qword_1011C3A80)
  {
    v1 = sub_100044B54(&qword_1011C3A10);
    sub_1006D06E8();
    sub_1006D0638();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C3A80);
  }
  return result;
}

unint64_t sub_1006D06E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C3A88;
  if (!qword_1011C3A88)
  {
    v1 = sub_100044B54(&qword_1011C3A70);
    sub_100049F28(&qword_1011C3A90, &qword_1011C3A98, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C3A88);
  }
  return result;
}

unint64_t sub_1006D0764()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C3AA0;
  if (!qword_1011C3AA0)
  {
    v1 = sub_100044B54(&qword_1011C3A18);
    sub_1004D9D80(&qword_1011B7170, &qword_1011B7088);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1011C3AA0);
  }
  return result;
}

uint64_t sub_1006D07E8()
{
  return sub_1006D07F4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1006C1228);
}

uint64_t sub_1006D07F4(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v1;

  return a1(*(_QWORD *)(v1 + 56), *(unsigned __int8 *)(v1 + 64), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

unint64_t sub_1006D080C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C3AA8;
  if (!qword_1011C3AA8)
  {
    v1 = sub_100044B54(&qword_1011C3A20);
    sub_100049F28(&qword_1011C3AB0, &qword_1011C3AB8, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1011C3AA8);
  }
  return result;
}

void sub_1006D0888(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_100ECAA60;
  v4[1] = &unk_100ECAA78;
  v4[2] = &unk_100ECAAA8;
  sub_1000E3A44(319, (unint64_t *)&qword_1011C6900, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 0, 4, v4, a1 + 32);
  }
}

uint64_t sub_1006D0928(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v14 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v14 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
    v6 = *(int *)(a3 + 44);
    v7 = (_QWORD *)(a1 + v6);
    v8 = (uint64_t *)((char *)a2 + v6);
    *(_OWORD *)(a1 + 65) = *(_OWORD *)((char *)a2 + 65);
    swift_unknownObjectRetain(v5, a2);
    v9 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v10 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v7, v8, v10);
      v11 = v7;
      v12 = v9;
      v13 = 1;
    }
    else
    {
      *v7 = *v8;
      swift_retain();
      v11 = v7;
      v12 = v9;
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v11, v12, v13);
  }
  return a1;
}

double sub_1006D0A2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  swift_unknownObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = a1 + *(int *)(a2 + 44);
  v5 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_1006D0AA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v5 = *(int *)(a3 + 44);
  v6 = (_QWORD *)(a1 + v5);
  v7 = (_QWORD *)(a2 + v5);
  *(_OWORD *)(a1 + 65) = *(_OWORD *)(a2 + 65);
  swift_unknownObjectRetain(v4, a2);
  v8 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v6, v7, v9);
    v10 = 1;
  }
  else
  {
    *v6 = *v7;
    swift_retain();
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v6, v8, v10);
  return a1;
}

uint64_t sub_1006D0B74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  swift_unknownObjectRetain(v6, a2);
  swift_unknownObjectRelease(v7);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_BYTE *)(a1 + 50) = *(_BYTE *)(a2 + 50);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  if (a1 != a2)
  {
    v8 = *(int *)(a3 + 44);
    v9 = (_QWORD *)(a1 + v8);
    v10 = (_QWORD *)(a2 + v8);
    sub_10004FF60(a1 + v8, (uint64_t *)&unk_1011ACE40);
    v11 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
      v13 = 1;
    }
    else
    {
      *v9 = *v10;
      swift_retain();
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v13);
  }
  return a1;
}

uint64_t sub_1006D0CA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v4 = *(int *)(a3 + 44);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  *(_OWORD *)(a1 + 65) = *(_OWORD *)(a2 + 65);
  v7 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload(v5, v7, 1);
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1006D0D78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_unknownObjectRelease(v7);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_BYTE *)(a1 + 50) = *(_BYTE *)(a2 + 50);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  if (a1 != a2)
  {
    v8 = *(int *)(a3 + 44);
    v9 = (void *)(a1 + v8);
    v10 = (const void *)(a2 + v8);
    sub_10004FF60(a1 + v8, (uint64_t *)&unk_1011ACE40);
    v11 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload(v9, v11, 1);
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1006D0E88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006D0E94);
}

uint64_t sub_1006D0E94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011C6890);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 44), a2, v8);
  }
}

uint64_t sub_1006D0F14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006D0F20);
}

uint64_t sub_1006D0F20(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_100007E8C(&qword_1011C6890);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 44), a2, a2, v7);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SeparatorAlignmentModifier(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[17])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for SeparatorAlignmentModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for SeparatorAlignmentModifier()
{
  return &type metadata for SeparatorAlignmentModifier;
}

void sub_1006D1040(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = &unk_100ECAA60;
  v4[1] = &unk_100ECAA78;
  sub_1000E3A44(319, (unint64_t *)&qword_1011C6900, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 0, 3, v4, a1 + 32);
  }
}

uint64_t sub_1006D10D4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v14 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v14 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v6 = *(int *)(a3 + 40);
    v7 = (_QWORD *)(a1 + v6);
    v8 = (uint64_t *)((char *)a2 + v6);
    swift_unknownObjectRetain(v5, a2);
    v9 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v10 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v7, v8, v10);
      v11 = v7;
      v12 = v9;
      v13 = 1;
    }
    else
    {
      *v7 = *v8;
      swift_retain();
      v11 = v7;
      v12 = v9;
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v11, v12, v13);
  }
  return a1;
}

double sub_1006D11B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  swift_unknownObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = a1 + *(int *)(a2 + 40);
  v5 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_1006D1230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(int *)(a3 + 40);
  v6 = (_QWORD *)(a1 + v5);
  v7 = (_QWORD *)(a2 + v5);
  swift_unknownObjectRetain(v4, a2);
  v8 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v6, v7, v9);
    v10 = 1;
  }
  else
  {
    *v6 = *v7;
    swift_retain();
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v6, v8, v10);
  return a1;
}

uint64_t sub_1006D12E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  swift_unknownObjectRetain(v6, a2);
  swift_unknownObjectRelease(v7);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  if (a1 != a2)
  {
    v8 = *(int *)(a3 + 40);
    v9 = (_QWORD *)(a1 + v8);
    v10 = (_QWORD *)(a2 + v8);
    sub_10004FF60(a1 + v8, (uint64_t *)&unk_1011ACE40);
    v11 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
      v13 = 1;
    }
    else
    {
      *v9 = *v10;
      swift_retain();
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v13);
  }
  return a1;
}

uint64_t sub_1006D13C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(int *)(a3 + 40);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload(v5, v7, 1);
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1006D1474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_unknownObjectRelease(v7);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  if (a1 != a2)
  {
    v8 = *(int *)(a3 + 40);
    v9 = (void *)(a1 + v8);
    v10 = (const void *)(a2 + v8);
    sub_10004FF60(a1 + v8, (uint64_t *)&unk_1011ACE40);
    v11 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload(v9, v11, 1);
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1006D154C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006D1558);
}

uint64_t sub_1006D1558(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011C6890);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 40), a2, v8);
  }
}

uint64_t sub_1006D15D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006D15E4);
}

uint64_t sub_1006D15E4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_100007E8C(&qword_1011C6890);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 40), a2, a2, v7);
  }
  return result;
}

void sub_1006D165C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[8];

  v8[0] = &unk_100ECAA60;
  v8[1] = &unk_100ECAA60;
  v8[2] = &unk_100ECAA60;
  v8[3] = &unk_100ECAA78;
  v8[4] = &unk_100ECAAA8;
  sub_1000E3A44(319, (unint64_t *)&qword_1011C6900, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v3 <= 0x3F)
  {
    v8[5] = *(_QWORD *)(v2 - 8) + 64;
    sub_1001C17C8(319);
    if (v5 <= 0x3F)
    {
      v8[6] = *(_QWORD *)(v4 - 8) + 64;
      sub_1000F6458(319);
      if (v7 <= 0x3F)
      {
        v8[7] = *(_QWORD *)(v6 - 8) + 64;
        swift_initStructMetadata(a1, 0, 8, v8, a1 + 56);
      }
    }
  }
}

uint64_t sub_1006D1738(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v19 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    v9 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v9;
    *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
    v10 = *(_OWORD *)(a2 + 7);
    v11 = *(_OWORD *)(a2 + 9);
    v12 = *(_OWORD *)(a2 + 11);
    *(_OWORD *)(a1 + 97) = *(_OWORD *)((char *)a2 + 97);
    *(_OWORD *)(a1 + 88) = v12;
    *(_OWORD *)(a1 + 72) = v11;
    v13 = a3[19];
    v14 = (_QWORD *)(a1 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    *(_OWORD *)(a1 + 56) = v10;
    swift_unknownObjectRetain(v7, a2);
    swift_retain();
    swift_retain();
    v16 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
    {
      v17 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v14, v15, v17);
      v18 = 1;
    }
    else
    {
      *v14 = *v15;
      swift_retain();
      v18 = 0;
    }
    swift_storeEnumTagMultiPayload(v14, v16, v18);
    v20 = a3[20];
    v21 = (_QWORD *)(a1 + v20);
    v22 = (uint64_t *)((char *)a2 + v20);
    v23 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
    if (swift_getEnumCaseMultiPayload(v22, v23) == 1)
    {
      v24 = type metadata accessor for UserInterfaceSizeClass(0);
      v25 = *(_QWORD *)(v24 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v25 + 48))(v22, 1, v24))
      {
        v26 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
        v27 = 1;
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v25 + 16))(v21, v22, v24);
        v27 = 1;
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v21, 0, 1, v24);
      }
    }
    else
    {
      *v21 = *v22;
      swift_retain();
      v27 = 0;
    }
    swift_storeEnumTagMultiPayload(v21, v23, v27);
    v28 = a3[21];
    v29 = a1 + v28;
    v30 = (uint64_t)a2 + v28;
    v31 = sub_100007E8C(qword_1011C9550);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
  }
  return a1;
}

uint64_t sub_1006D1970(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  swift_unknownObjectRelease(*(_QWORD *)(a1 + 8));
  swift_release();
  swift_release();
  v4 = a1 + a2[19];
  v5 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    swift_release();
  }
  v7 = a1 + a2[20];
  v8 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for UserInterfaceSizeClass(0);
    v10 = *(_QWORD *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9))
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v7, v9);
  }
  else
  {
    swift_release();
  }
  v11 = a1 + a2[21];
  v12 = sub_100007E8C(qword_1011C9550);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
}

uint64_t sub_1006D1A98(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v9 = *(_OWORD *)(a2 + 56);
  v10 = *(_OWORD *)(a2 + 72);
  v11 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 97) = *(_OWORD *)(a2 + 97);
  *(_OWORD *)(a1 + 88) = v11;
  *(_OWORD *)(a1 + 72) = v10;
  v12 = a3[19];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  *(_OWORD *)(a1 + 56) = v9;
  swift_unknownObjectRetain(v6, a2);
  swift_retain();
  swift_retain();
  v15 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
  {
    v16 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
    v17 = 1;
  }
  else
  {
    *v13 = *v14;
    swift_retain();
    v17 = 0;
  }
  swift_storeEnumTagMultiPayload(v13, v15, v17);
  v18 = a3[20];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  v21 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v20, v21) == 1)
  {
    v22 = type metadata accessor for UserInterfaceSizeClass(0);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v23 + 48))(v20, 1, v22))
    {
      v24 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      v25 = 1;
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v23 + 16))(v19, v20, v22);
      v25 = 1;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v19, 0, 1, v22);
    }
  }
  else
  {
    *v19 = *v20;
    swift_retain();
    v25 = 0;
  }
  swift_storeEnumTagMultiPayload(v19, v21, v25);
  v26 = a3[21];
  v27 = a1 + v26;
  v28 = a2 + v26;
  v29 = sub_100007E8C(qword_1011C9550);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
  return a1;
}

uint64_t sub_1006D1CA4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  swift_unknownObjectRetain(v6, a2);
  swift_unknownObjectRelease(v7);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_BYTE *)(a1 + 81) = *(_BYTE *)(a2 + 81);
  *(_BYTE *)(a1 + 82) = *(_BYTE *)(a2 + 82);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  if (a1 != a2)
  {
    v8 = a3[19];
    v9 = (_QWORD *)(a1 + v8);
    v10 = (_QWORD *)(a2 + v8);
    sub_10004FF60(a1 + v8, (uint64_t *)&unk_1011ACE40);
    v11 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
      v13 = 1;
    }
    else
    {
      *v9 = *v10;
      swift_retain();
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v13);
    v14 = a3[20];
    v15 = (_QWORD *)(a1 + v14);
    v16 = (_QWORD *)(a2 + v14);
    sub_10004FF60(a1 + v14, (uint64_t *)&unk_1011A3ED0);
    v17 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
    if (swift_getEnumCaseMultiPayload(v16, v17) == 1)
    {
      v18 = type metadata accessor for UserInterfaceSizeClass(0);
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18))
      {
        v20 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
        v21 = 1;
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v19 + 16))(v15, v16, v18);
        v21 = 1;
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v15, 0, 1, v18);
      }
    }
    else
    {
      *v15 = *v16;
      swift_retain();
      v21 = 0;
    }
    swift_storeEnumTagMultiPayload(v15, v17, v21);
  }
  v22 = a3[21];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = sub_100007E8C(qword_1011C9550);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 24))(v23, v24, v25);
  return a1;
}

uint64_t sub_1006D1F3C(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  v7 = a3[19];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  *(_OWORD *)(a1 + 97) = *(_OWORD *)(a2 + 97);
  v10 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload(v8, v10, 1);
  }
  else
  {
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  v12 = a3[20];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
  {
    v16 = type metadata accessor for UserInterfaceSizeClass(0);
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16))
    {
      v18 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v17 + 32))(v13, v14, v16);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
    }
    swift_storeEnumTagMultiPayload(v13, v15, 1);
  }
  else
  {
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  v19 = a3[21];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = sub_100007E8C(qword_1011C9550);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

uint64_t sub_1006D212C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_unknownObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v8;
  swift_release();
  v9 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v9;
  swift_release();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  *(_BYTE *)(a1 + 82) = *(_BYTE *)(a2 + 82);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  if (a1 != a2)
  {
    v10 = a3[19];
    v11 = (void *)(a1 + v10);
    v12 = (const void *)(a2 + v10);
    sub_10004FF60(a1 + v10, (uint64_t *)&unk_1011ACE40);
    v13 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
    {
      v14 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v11, v12, v14);
      swift_storeEnumTagMultiPayload(v11, v13, 1);
    }
    else
    {
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    v15 = a3[20];
    v16 = (void *)(a1 + v15);
    v17 = (const void *)(a2 + v15);
    sub_10004FF60(a1 + v15, (uint64_t *)&unk_1011A3ED0);
    v18 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
    if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
    {
      v19 = type metadata accessor for UserInterfaceSizeClass(0);
      v20 = *(_QWORD *)(v19 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v17, 1, v19))
      {
        v21 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v20 + 32))(v16, v17, v19);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v16, 0, 1, v19);
      }
      swift_storeEnumTagMultiPayload(v16, v18, 1);
    }
    else
    {
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
  }
  v22 = a3[21];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = sub_100007E8C(qword_1011C9550);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 40))(v23, v24, v25);
  return a1;
}

uint64_t sub_1006D237C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006D2388);
}

uint64_t sub_1006D2388(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011C6890);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[19];
    }
    else
    {
      v12 = sub_100007E8C(&qword_1011A48A0);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[20];
      }
      else
      {
        v10 = sub_100007E8C(qword_1011C9550);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a3[21];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1006D2458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006D2464);
}

uint64_t sub_1006D2464(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011C6890);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[19];
    }
    else
    {
      v12 = sub_100007E8C(&qword_1011A48A0);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[20];
      }
      else
      {
        v10 = sub_100007E8C(qword_1011C9550);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[21];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Library.Context.SortOption(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for Tracklist.VideoIcon(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1006D261C + 4 * byte_100ECA965[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1006D2650 + 4 * byte_100ECA960[v4]))();
}

uint64_t sub_1006D2650(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1006D2658(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1006D2660);
  return result;
}

uint64_t sub_1006D266C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1006D2674);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1006D2678(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1006D2680(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Tracklist.VideoIcon()
{
  return &type metadata for Tracklist.VideoIcon;
}

uint64_t sub_1006D269C(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = v19 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_WORD *)(a1 + 8) = *((_WORD *)a2 + 4);
    v7 = a2[3];
    *(_QWORD *)(v4 + 16) = a2[2];
    *(_QWORD *)(v4 + 24) = v7;
    *(_BYTE *)(v4 + 32) = *((_BYTE *)a2 + 32);
    v8 = a3[9];
    v9 = v4 + v8;
    v10 = (uint64_t)a2 + v8;
    *(_QWORD *)(v4 + 40) = a2[5];
    swift_bridgeObjectRetain();
    swift_retain();
    v11 = sub_100007E8C(qword_1011C9550);
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    v12(v4 + a3[10], (uint64_t)a2 + a3[10], v11);
    v13 = a3[11];
    v14 = (_QWORD *)(v4 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    v16 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
    {
      v17 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v14, v15, v17);
      v18 = 1;
    }
    else
    {
      *v14 = *v15;
      swift_retain();
      v18 = 0;
    }
    swift_storeEnumTagMultiPayload(v14, v16, v18);
    v20 = a3[12];
    v21 = (_QWORD *)(v4 + v20);
    v22 = (uint64_t *)((char *)a2 + v20);
    v23 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
    if (swift_getEnumCaseMultiPayload(v22, v23) == 1)
    {
      v24 = type metadata accessor for UserInterfaceSizeClass(0);
      v25 = *(_QWORD *)(v24 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v25 + 48))(v22, 1, v24))
      {
        v26 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v25 + 16))(v21, v22, v24);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v21, 0, 1, v24);
      }
      v27 = v21;
      v28 = v23;
      v29 = 1;
    }
    else
    {
      *v21 = *v22;
      swift_retain();
      v27 = v21;
      v28 = v23;
      v29 = 0;
    }
    swift_storeEnumTagMultiPayload(v27, v28, v29);
  }
  return v4;
}

void sub_1006D28CC(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  swift_bridgeObjectRelease();
  swift_release();
  v4 = a1 + a2[9];
  v5 = sub_100007E8C(qword_1011C9550);
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(a1 + a2[10], v5);
  v7 = a1 + a2[11];
  v8 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  else
  {
    swift_release();
  }
  v10 = a1 + a2[12];
  v11 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v12 = type metadata accessor for UserInterfaceSizeClass(0);
    v13 = *(_QWORD *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v10, v12);
  }
  else
  {
    swift_release();
  }
}

uint64_t sub_1006D2A20(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = a3[9];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_retain();
  v10 = sub_100007E8C(qword_1011C9550);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  v11(a1 + a3[10], a2 + a3[10], v10);
  v12 = a3[11];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  v15 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
  {
    v16 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
    v17 = 1;
  }
  else
  {
    *v13 = *v14;
    swift_retain();
    v17 = 0;
  }
  swift_storeEnumTagMultiPayload(v13, v15, v17);
  v18 = a3[12];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  v21 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v20, v21) == 1)
  {
    v22 = type metadata accessor for UserInterfaceSizeClass(0);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v23 + 48))(v20, 1, v22))
    {
      v24 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v23 + 16))(v19, v20, v22);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v19, 0, 1, v22);
    }
    v25 = v19;
    v26 = v21;
    v27 = 1;
  }
  else
  {
    *v19 = *v20;
    swift_retain();
    v25 = v19;
    v26 = v21;
    v27 = 0;
  }
  swift_storeEnumTagMultiPayload(v25, v26, v27);
  return a1;
}

uint64_t sub_1006D2C24(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;

  v6 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 9) = *((_BYTE *)a2 + 9);
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
  *(_QWORD *)(a1 + 40) = a2[5];
  swift_retain();
  swift_release();
  v7 = a3[9];
  v8 = a1 + v7;
  v9 = (uint64_t)a2 + v7;
  v10 = sub_100007E8C(qword_1011C9550);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24);
  v11(v8, v9, v10);
  v11(a1 + a3[10], (uint64_t)a2 + a3[10], v10);
  if ((uint64_t *)a1 != a2)
  {
    v12 = a3[11];
    v13 = (_QWORD *)(a1 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    sub_10004FF60(a1 + v12, (uint64_t *)&unk_1011ACE40);
    v15 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
    {
      v16 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
      v17 = 1;
    }
    else
    {
      *v13 = *v14;
      swift_retain();
      v17 = 0;
    }
    swift_storeEnumTagMultiPayload(v13, v15, v17);
    v18 = a3[12];
    v19 = (_QWORD *)(a1 + v18);
    v20 = (uint64_t *)((char *)a2 + v18);
    sub_10004FF60(a1 + v18, (uint64_t *)&unk_1011A3ED0);
    v21 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
    if (swift_getEnumCaseMultiPayload(v20, v21) == 1)
    {
      v22 = type metadata accessor for UserInterfaceSizeClass(0);
      v23 = *(_QWORD *)(v22 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v23 + 48))(v20, 1, v22))
      {
        v24 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v23 + 16))(v19, v20, v22);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v19, 0, 1, v22);
      }
      v25 = v19;
      v26 = v21;
      v27 = 1;
    }
    else
    {
      *v19 = *v20;
      swift_retain();
      v25 = v19;
      v26 = v21;
      v27 = 0;
    }
    swift_storeEnumTagMultiPayload(v25, v26, v27);
  }
  return a1;
}

uint64_t sub_1006D2E74(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v6 = a3[9];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_100007E8C(qword_1011C9550);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(a1 + a3[10], a2 + a3[10], v9);
  v11 = a3[11];
  v12 = (void *)(a1 + v11);
  v13 = (const void *)(a2 + v11);
  v14 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
  {
    v15 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v12, v13, v15);
    swift_storeEnumTagMultiPayload(v12, v14, 1);
  }
  else
  {
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  v16 = a3[12];
  v17 = (void *)(a1 + v16);
  v18 = (const void *)(a2 + v16);
  v19 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  if (swift_getEnumCaseMultiPayload(v18, v19) == 1)
  {
    v20 = type metadata accessor for UserInterfaceSizeClass(0);
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v18, 1, v20))
    {
      v22 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v21 + 32))(v17, v18, v20);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v17, 0, 1, v20);
    }
    swift_storeEnumTagMultiPayload(v17, v19, 1);
  }
  else
  {
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1006D306C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release();
  v7 = a3[9];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_100007E8C(qword_1011C9550);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(a1 + a3[10], a2 + a3[10], v10);
  if (a1 != a2)
  {
    v12 = a3[11];
    v13 = (void *)(a1 + v12);
    v14 = (const void *)(a2 + v12);
    sub_10004FF60(a1 + v12, (uint64_t *)&unk_1011ACE40);
    v15 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
    {
      v16 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v13, v14, v16);
      swift_storeEnumTagMultiPayload(v13, v15, 1);
    }
    else
    {
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    v17 = a3[12];
    v18 = (void *)(a1 + v17);
    v19 = (const void *)(a2 + v17);
    sub_10004FF60(a1 + v17, (uint64_t *)&unk_1011A3ED0);
    v20 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
    if (swift_getEnumCaseMultiPayload(v19, v20) == 1)
    {
      v21 = type metadata accessor for UserInterfaceSizeClass(0);
      v22 = *(_QWORD *)(v21 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v19, 1, v21))
      {
        v23 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v22 + 32))(v18, v19, v21);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v18, 0, 1, v21);
      }
      swift_storeEnumTagMultiPayload(v18, v20, 1);
    }
    else
    {
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1006D32A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006D32B0);
}

uint64_t sub_1006D32B0(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = sub_100007E8C(qword_1011C9550);
    v10 = *(_QWORD *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
    {
      v11 = v9;
      v12 = a3[9];
    }
    else
    {
      v13 = sub_100007E8C(&qword_1011C6890);
      v10 = *(_QWORD *)(v13 - 8);
      if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
      {
        v11 = v13;
        v12 = a3[11];
      }
      else
      {
        v11 = sub_100007E8C(&qword_1011A48A0);
        v10 = *(_QWORD *)(v11 - 8);
        v12 = a3[12];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
}

uint64_t sub_1006D338C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006D3398);
}

uint64_t sub_1006D3398(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 24) = a2;
  }
  else
  {
    v8 = sub_100007E8C(qword_1011C9550);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[9];
    }
    else
    {
      v12 = sub_100007E8C(&qword_1011C6890);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[11];
      }
      else
      {
        v10 = sub_100007E8C(&qword_1011A48A0);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[12];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_1006D3464(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[5];
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v8[0] = "\t";
  v8[1] = &unk_100ECAA78;
  v8[2] = &unk_100ECACD8;
  v8[3] = &unk_100ECAA78;
  v8[4] = &unk_100ECAA90;
  sub_1000F6458(319);
  if (v3 <= 0x3F)
  {
    v9 = *(_QWORD *)(v2 - 8) + 64;
    v10 = v9;
    sub_1000E3A44(319, (unint64_t *)&qword_1011C6900, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v5 <= 0x3F)
    {
      v11 = *(_QWORD *)(v4 - 8) + 64;
      sub_1001C17C8(319);
      if (v7 <= 0x3F)
      {
        v12 = *(_QWORD *)(v6 - 8) + 64;
        swift_initStructMetadata(a1, 256, 9, v8, a1 + 16);
      }
    }
  }
}

uint64_t *sub_1006D3548(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  _OWORD *v32;
  _OWORD *v33;
  __int128 v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  __int128 v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  char *__src;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unsigned int (*v92)(char *, uint64_t, uint64_t);
  unsigned int (*__dst)(uint64_t *, uint64_t, uint64_t);
  char *__dsta;
  void (**__dstb)(void *, const void *, uint64_t);

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for ArtworkImage.ViewModel(0);
    v8 = *(_QWORD *)(v7 - 8);
    __dst = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    if (__dst(a2, 1, v7))
    {
      v9 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      v12 = *(int *)(v7 + 20);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = type metadata accessor for Artwork.CropStyle(0);
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        v17 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v18 = (int *)type metadata accessor for ArtworkImage.Info(0);
    v19 = v18[5];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    v22 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    v23 = *(_QWORD *)(v22 - 8);
    v92 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
    v91 = v22;
    if (v92(v21, 10, v22))
    {
      v24 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      v86 = v8;
      v88 = v23;
      v25 = type metadata accessor for Playlist.Variant(0);
      v26 = *(_QWORD *)(v25 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v21, 1, v25))
      {
        v27 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v20, v21, v25);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v20, 0, 1, v25);
      }
      v23 = v88;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v20, 0, 10, v22);
      v8 = v86;
    }
    v28 = v18[6];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    *(_QWORD *)v29 = *(_QWORD *)v30;
    v29[8] = v30[8];
    v31 = v18[7];
    v32 = (_OWORD *)((char *)a1 + v31);
    v33 = (_OWORD *)((char *)a2 + v31);
    *(_OWORD *)((char *)v32 + 26) = *(_OWORD *)((char *)v33 + 26);
    v34 = v33[1];
    *v32 = *v33;
    v32[1] = v34;
    v35 = v18[8];
    v36 = (char *)a1 + v35;
    v37 = (char *)a2 + v35;
    *(_OWORD *)v36 = *(_OWORD *)v37;
    v36[16] = v37[16];
    v38 = a3[5];
    v39 = (char *)a1 + v38;
    v40 = (char *)a2 + v38;
    v41 = *((_QWORD *)v18 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v41 + 48))((char *)a2 + v38, 1, v18))
    {
      v42 = sub_100007E8C((uint64_t *)&unk_1011C6790);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      v85 = v41;
      if (__dst((uint64_t *)v40, 1, v7))
      {
        v43 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
        v44 = v91;
      }
      else
      {
        v87 = v8;
        v89 = v23;
        v45 = type metadata accessor for Artwork(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v39, v40, v45);
        v46 = *(int *)(v7 + 20);
        __dsta = &v39[v46];
        v47 = &v40[v46];
        v48 = type metadata accessor for Artwork.CropStyle(0);
        v49 = *(_QWORD *)(v48 - 8);
        __src = v47;
        v50 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48);
        v44 = v91;
        if (v50)
        {
          v51 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
          memcpy(__dsta, __src, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v49 + 16))(__dsta, __src, v48);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(__dsta, 0, 1, v48);
        }
        v23 = v89;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v87 + 56))(v39, 0, 1, v7);
      }
      v52 = v18[5];
      v53 = &v39[v52];
      v54 = &v40[v52];
      if (v92(&v40[v52], 10, v44))
      {
        v55 = type metadata accessor for ArtworkImage.Placeholder(0);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
        v56 = v85;
      }
      else
      {
        v90 = v23;
        v57 = type metadata accessor for Playlist.Variant(0);
        __dstb = *(void (***)(void *, const void *, uint64_t))(v57 - 8);
        if (((unsigned int (*)(char *, uint64_t, uint64_t))__dstb[6])(v54, 1, v57))
        {
          v58 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
          memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
        }
        else
        {
          __dstb[2](v53, v54, v57);
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))__dstb[7])(v53, 0, 1, v57);
        }
        v56 = v85;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v53, 0, 10, v44);
      }
      v59 = v18[6];
      v60 = &v39[v59];
      v61 = &v40[v59];
      *(_QWORD *)v60 = *(_QWORD *)v61;
      v60[8] = v61[8];
      v62 = v18[7];
      v63 = &v39[v62];
      v64 = &v40[v62];
      *(_OWORD *)(v63 + 26) = *(_OWORD *)(v64 + 26);
      v65 = *((_OWORD *)v64 + 1);
      *(_OWORD *)v63 = *(_OWORD *)v64;
      *((_OWORD *)v63 + 1) = v65;
      v66 = v18[8];
      v67 = &v39[v66];
      v68 = &v40[v66];
      *(_OWORD *)v67 = *(_OWORD *)v68;
      v67[16] = v68[16];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v56 + 56))(v39, 0, 1, v18);
    }
    v69 = a3[6];
    v70 = a3[7];
    v71 = (uint64_t *)((char *)a1 + v69);
    v72 = (uint64_t *)((char *)a2 + v69);
    v73 = v72[1];
    v74 = *(uint64_t *)((char *)a2 + v70);
    *v71 = *v72;
    v71[1] = v73;
    *(uint64_t *)((char *)a1 + v70) = v74;
    v75 = a3[8];
    v76 = (uint64_t *)((char *)a1 + v75);
    v77 = (uint64_t *)((char *)a2 + v75);
    swift_bridgeObjectRetain();
    swift_retain();
    v78 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v77, v78) == 1)
    {
      v79 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v79 - 8) + 16))(v76, v77, v79);
      v80 = v76;
      v81 = v78;
      v82 = 1;
    }
    else
    {
      *v76 = *v77;
      swift_retain();
      v80 = v76;
      v81 = v78;
      v82 = 0;
    }
    swift_storeEnumTagMultiPayload(v80, v81, v82);
  }
  return a1;
}

double sub_1006D3B8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double result;

  v4 = type metadata accessor for ArtworkImage.ViewModel(0);
  v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48);
  if (!v5(a1, 1, v4))
  {
    v6 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
    v7 = a1 + *(int *)(v4 + 20);
    v8 = type metadata accessor for Artwork.CropStyle(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  v10 = type metadata accessor for ArtworkImage.Info(0);
  v11 = a1 + *(int *)(v10 + 20);
  v12 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48);
  if (!v13(v11, 10, v12))
  {
    v14 = type metadata accessor for Playlist.Variant(0);
    v15 = *(_QWORD *)(v14 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v11, 1, v14))
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v11, v14);
  }
  v16 = a1 + *(int *)(a2 + 20);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v16, 1, v10))
  {
    if (!v5(v16, 1, v4))
    {
      v17 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
      v18 = v16 + *(int *)(v4 + 20);
      v19 = type metadata accessor for Artwork.CropStyle(0);
      v20 = *(_QWORD *)(v19 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
        (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    }
    v21 = v16 + *(int *)(v10 + 20);
    if (!v13(v21, 10, v12))
    {
      v22 = type metadata accessor for Playlist.Variant(0);
      v23 = *(_QWORD *)(v22 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
        (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
    }
  }
  swift_bridgeObjectRelease();
  swift_release();
  v24 = a1 + *(int *)(a2 + 32);
  v25 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v24, v25) == 1)
  {
    v26 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v24, v26);
  }
  else
  {
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

char *sub_1006D3E2C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  __int128 v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  __int128 v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v80;
  char *v81;
  int *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unsigned int (*v87)(char *, uint64_t, uint64_t);
  uint64_t v88;
  unsigned int (*v89)(char *, uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  v89 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v89(a2, 1, v6))
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    v10 = *(int *)(v6 + 20);
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = type metadata accessor for Artwork.CropStyle(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v16 = (int *)type metadata accessor for ArtworkImage.Info(0);
  v17 = v16[5];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v21 = *(_QWORD *)(v20 - 8);
  v87 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  v86 = v20;
  if (v87(v19, 10, v20))
  {
    v22 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v82 = a3;
    v84 = v7;
    v23 = v21;
    v24 = type metadata accessor for Playlist.Variant(0);
    v25 = *(_QWORD *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v19, 1, v24))
    {
      v26 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v18, v19, v24);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v18, 0, 1, v24);
    }
    v21 = v23;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v18, 0, 10, v20);
    a3 = v82;
    v7 = v84;
  }
  v27 = v16[6];
  v28 = &a1[v27];
  v29 = &a2[v27];
  *(_QWORD *)v28 = *(_QWORD *)v29;
  v28[8] = v29[8];
  v30 = v16[7];
  v31 = &a1[v30];
  v32 = &a2[v30];
  *(_OWORD *)(v31 + 26) = *(_OWORD *)(v32 + 26);
  v33 = *((_OWORD *)v32 + 1);
  *(_OWORD *)v31 = *(_OWORD *)v32;
  *((_OWORD *)v31 + 1) = v33;
  v34 = v16[8];
  v35 = &a1[v34];
  v36 = &a2[v34];
  *(_OWORD *)v35 = *(_OWORD *)v36;
  v35[16] = v36[16];
  v37 = a3[5];
  v38 = &a1[v37];
  v39 = &a2[v37];
  v40 = *((_QWORD *)v16 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v40 + 48))(&a2[v37], 1, v16))
  {
    v41 = sub_100007E8C((uint64_t *)&unk_1011C6790);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    v83 = v40;
    if (v89(v39, 1, v6))
    {
      v42 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      v43 = v86;
    }
    else
    {
      v90 = v21;
      v85 = v7;
      v44 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v38, v39, v44);
      v45 = *(int *)(v6 + 20);
      v81 = &v38[v45];
      v46 = &v39[v45];
      v47 = type metadata accessor for Artwork.CropStyle(0);
      v48 = *(_QWORD *)(v47 - 8);
      v80 = v46;
      v49 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47);
      v43 = v86;
      if (v49)
      {
        v50 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v81, v80, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v81, v80, v47);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v81, 0, 1, v47);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v38, 0, 1, v6);
      v21 = v90;
    }
    v51 = v16[5];
    v52 = &v38[v51];
    v53 = &v39[v51];
    if (v87(&v39[v51], 10, v43))
    {
      v54 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    }
    else
    {
      v91 = v21;
      v55 = type metadata accessor for Playlist.Variant(0);
      v88 = *(_QWORD *)(v55 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v88 + 48))(v53, 1, v55))
      {
        v56 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
        memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v52, v53, v55);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v52, 0, 1, v55);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v52, 0, 10, v43);
    }
    v57 = v16[6];
    v58 = &v38[v57];
    v59 = &v39[v57];
    *(_QWORD *)v58 = *(_QWORD *)v59;
    v58[8] = v59[8];
    v60 = v16[7];
    v61 = &v38[v60];
    v62 = &v39[v60];
    *(_OWORD *)(v61 + 26) = *(_OWORD *)(v62 + 26);
    v63 = *((_OWORD *)v62 + 1);
    *(_OWORD *)v61 = *(_OWORD *)v62;
    *((_OWORD *)v61 + 1) = v63;
    v64 = v16[8];
    v65 = &v38[v64];
    v66 = &v39[v64];
    *(_OWORD *)v65 = *(_OWORD *)v66;
    v65[16] = v66[16];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v83 + 56))(v38, 0, 1, v16);
  }
  v67 = a3[6];
  v68 = a3[7];
  v69 = &a1[v67];
  v70 = &a2[v67];
  v71 = *((_QWORD *)v70 + 1);
  v72 = *(_QWORD *)&a2[v68];
  *(_QWORD *)v69 = *(_QWORD *)v70;
  *((_QWORD *)v69 + 1) = v71;
  *(_QWORD *)&a1[v68] = v72;
  v73 = a3[8];
  v74 = &a1[v73];
  v75 = &a2[v73];
  swift_bridgeObjectRetain();
  swift_retain();
  v76 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v75, v76) == 1)
  {
    v77 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 16))(v74, v75, v77);
    v78 = 1;
  }
  else
  {
    *(_QWORD *)v74 = *(_QWORD *)v75;
    swift_retain();
    v78 = 0;
  }
  swift_storeEnumTagMultiPayload(v74, v76, v78);
  return a1;
}

uint64_t sub_1006D443C(uint64_t a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void *, uint64_t, uint64_t);
  int v28;
  int v29;
  int *v30;
  uint64_t v31;
  void *v32;
  char *v33;
  uint64_t v34;
  unsigned int (*v35)(void *, uint64_t, uint64_t);
  unsigned int v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(void *, uint64_t, uint64_t);
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  __int128 v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t (*v65)(uint64_t, uint64_t, int *);
  int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int v70;
  unsigned int v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t (*v86)(char *, uint64_t, uint64_t);
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  __int128 v101;
  __int128 v102;
  uint64_t v103;
  char *v104;
  char *v105;
  __int128 v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t (*v113)(char *, uint64_t, uint64_t);
  int v114;
  size_t v115;
  char *v116;
  uint64_t v117;
  char *v118;
  char *v119;
  int v120;
  int v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t (*v127)(char *, uint64_t, uint64_t);
  int v128;
  int v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  __int128 v144;
  uint64_t v145;
  _QWORD *v146;
  char *v147;
  uint64_t v148;
  _QWORD *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  int *v155;
  int *v156;
  int *v157;
  int *v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  unsigned int (*v162)(char *, uint64_t, uint64_t);
  unsigned int (*__dst)(char *, uint64_t, uint64_t);
  char *__dsta;
  char *__dstb;
  uint64_t v166;
  uint64_t v167;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8((uint64_t)a2, 1, v6);
  v159 = v7;
  __dst = (unsigned int (*)(char *, uint64_t, uint64_t))v8;
  if (!v9)
  {
    if (!v10)
    {
      v21 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(a1, a2, v21);
      v22 = *(int *)(v6 + 20);
      v23 = (void *)(a1 + v22);
      v24 = &a2[v22];
      v25 = type metadata accessor for Artwork.CropStyle(0);
      v26 = *(_QWORD *)(v25 - 8);
      v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
      v28 = v27(v23, 1, v25);
      v29 = v27(v24, 1, v25);
      if (v28)
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 24))(v23, v24, v25);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v19 = v23;
      v20 = v24;
LABEL_8:
      memcpy(v19, v20, v18);
      goto LABEL_14;
    }
    sub_10005B748(a1, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v19 = (void *)a1;
    v20 = a2;
    goto LABEL_8;
  }
  if (v10)
    goto LABEL_7;
  v11 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
  v12 = *(int *)(v6 + 20);
  v13 = (void *)(a1 + v12);
  v14 = &a2[v12];
  v15 = type metadata accessor for Artwork.CropStyle(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  v30 = (int *)type metadata accessor for ArtworkImage.Info(0);
  v31 = v30[5];
  v32 = (void *)(a1 + v31);
  v33 = &a2[v31];
  v34 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v161 = *(_QWORD *)(v34 - 8);
  v35 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v161 + 48);
  v36 = v35(v32, 10, v34);
  v37 = v35(v33, 10, v34);
  v166 = v34;
  v162 = (unsigned int (*)(char *, uint64_t, uint64_t))v35;
  if (!v36)
  {
    if (!v37)
    {
      v155 = a3;
      v42 = type metadata accessor for Playlist.Variant(0);
      v43 = *(_QWORD *)(v42 - 8);
      v44 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v43 + 48);
      v45 = v44(v32, 1, v42);
      v46 = v44(v33, 1, v42);
      if (v45)
      {
        a3 = v155;
        if (!v46)
        {
          (*(void (**)(void *, char *, uint64_t))(v43 + 16))(v32, v33, v42);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v32, 0, 1, v42);
          goto LABEL_27;
        }
      }
      else
      {
        a3 = v155;
        if (!v46)
        {
          (*(void (**)(void *, char *, uint64_t))(v43 + 24))(v32, v33, v42);
          goto LABEL_27;
        }
        (*(void (**)(void *, uint64_t))(v43 + 8))(v32, v42);
      }
      v41 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
LABEL_21:
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      goto LABEL_27;
    }
    sub_10004FF60((uint64_t)v32, (uint64_t *)&unk_1011A3DB0);
LABEL_20:
    v41 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_21;
  }
  if (v37)
    goto LABEL_20;
  v38 = type metadata accessor for Playlist.Variant(0);
  v39 = *(_QWORD *)(v38 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v33, 1, v38))
  {
    v40 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v39 + 16))(v32, v33, v38);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v32, 0, 1, v38);
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v161 + 56))(v32, 0, 10, v34);
LABEL_27:
  v47 = v30[6];
  v48 = a1 + v47;
  v49 = &a2[v47];
  v50 = *(_QWORD *)v49;
  *(_BYTE *)(v48 + 8) = v49[8];
  *(_QWORD *)v48 = v50;
  v51 = v30[7];
  v52 = a1 + v51;
  v53 = &a2[v51];
  v54 = *(_QWORD *)v53;
  *(_BYTE *)(v52 + 8) = v53[8];
  *(_QWORD *)v52 = v54;
  v55 = *((_QWORD *)v53 + 2);
  *(_BYTE *)(v52 + 24) = v53[24];
  *(_QWORD *)(v52 + 16) = v55;
  v56 = *((_QWORD *)v53 + 4);
  *(_BYTE *)(v52 + 40) = v53[40];
  *(_QWORD *)(v52 + 32) = v56;
  *(_BYTE *)(v52 + 41) = v53[41];
  v57 = v30[8];
  v58 = a1 + v57;
  v59 = &a2[v57];
  v60 = *(_OWORD *)v59;
  *(_BYTE *)(v58 + 16) = v59[16];
  *(_OWORD *)v58 = v60;
  v61 = a3[5];
  v62 = (char *)(a1 + v61);
  v63 = &a2[v61];
  v64 = *((_QWORD *)v30 - 1);
  v65 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v64 + 48);
  v66 = v65(a1 + v61, 1, v30);
  v67 = v65((uint64_t)v63, 1, v30);
  if (v66)
  {
    if (!v67)
    {
      if (__dst(v63, 1, v6))
      {
        v68 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
        memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
      }
      else
      {
        v157 = a3;
        v79 = type metadata accessor for Artwork(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 16))(v62, v63, v79);
        v80 = *(int *)(v6 + 20);
        __dstb = &v62[v80];
        v81 = &v63[v80];
        v82 = type metadata accessor for Artwork.CropStyle(0);
        v83 = *(_QWORD *)(v82 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48))(v81, 1, v82))
        {
          v84 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
          memcpy(__dstb, v81, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v83 + 16))(__dstb, v81, v82);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56))(__dstb, 0, 1, v82);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v159 + 56))(v62, 0, 1, v6);
        a3 = v157;
      }
      v87 = v30[5];
      v88 = &v62[v87];
      v89 = &v63[v87];
      if (v162(&v63[v87], 10, v166))
      {
        v90 = type metadata accessor for ArtworkImage.Placeholder(0);
        memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
      }
      else
      {
        v158 = a3;
        v91 = type metadata accessor for Playlist.Variant(0);
        v92 = *(_QWORD *)(v91 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v92 + 48))(v89, 1, v91))
        {
          v93 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
          memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v88, v89, v91);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v92 + 56))(v88, 0, 1, v91);
        }
        a3 = v158;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v161 + 56))(v88, 0, 10, v166);
      }
      v94 = v30[6];
      v95 = &v62[v94];
      v96 = &v63[v94];
      v97 = *(_QWORD *)v96;
      v95[8] = v96[8];
      *(_QWORD *)v95 = v97;
      v98 = v30[7];
      v99 = &v62[v98];
      v100 = &v63[v98];
      v101 = *(_OWORD *)v100;
      v102 = *((_OWORD *)v100 + 1);
      *(_OWORD *)(v99 + 26) = *(_OWORD *)(v100 + 26);
      *(_OWORD *)v99 = v101;
      *((_OWORD *)v99 + 1) = v102;
      v103 = v30[8];
      v104 = &v62[v103];
      v105 = &v63[v103];
      v106 = *(_OWORD *)v105;
      v104[16] = v105[16];
      *(_OWORD *)v104 = v106;
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v64 + 56))(v62, 0, 1, v30);
      goto LABEL_86;
    }
    goto LABEL_33;
  }
  if (v67)
  {
    sub_10005B748((uint64_t)v62, type metadata accessor for ArtworkImage.Info);
LABEL_33:
    v69 = sub_100007E8C((uint64_t *)&unk_1011C6790);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
    goto LABEL_86;
  }
  v70 = __dst(v62, 1, v6);
  v71 = __dst(v63, 1, v6);
  v156 = a3;
  if (!v70)
  {
    if (!v71)
    {
      v107 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 24))(v62, v63, v107);
      v108 = *(int *)(v6 + 20);
      v109 = &v62[v108];
      v110 = &v63[v108];
      v111 = type metadata accessor for Artwork.CropStyle(0);
      v112 = *(_QWORD *)(v111 - 8);
      v113 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v112 + 48);
      v160 = v109;
      LODWORD(v109) = v113(v109, 1, v111);
      v114 = v113(v110, 1, v111);
      if ((_DWORD)v109)
      {
        v77 = v166;
        if (!v114)
        {
          (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v160, v110, v111);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v112 + 56))(v160, 0, 1, v111);
          goto LABEL_49;
        }
        v115 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
        v116 = v160;
      }
      else
      {
        v77 = v166;
        if (!v114)
        {
          (*(void (**)(char *, char *, uint64_t))(v112 + 24))(v160, v110, v111);
          goto LABEL_49;
        }
        (*(void (**)(char *, uint64_t))(v112 + 8))(v160, v111);
        v115 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
        v116 = v160;
      }
      memcpy(v116, v110, v115);
LABEL_49:
      v86 = (uint64_t (*)(char *, uint64_t, uint64_t))v162;
      goto LABEL_66;
    }
    sub_10005B748((uint64_t)v62, type metadata accessor for ArtworkImage.ViewModel);
LABEL_48:
    v85 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
    v77 = v166;
    goto LABEL_49;
  }
  if (v71)
    goto LABEL_48;
  v72 = type metadata accessor for Artwork(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 16))(v62, v63, v72);
  v73 = *(int *)(v6 + 20);
  __dsta = &v62[v73];
  v74 = &v63[v73];
  v75 = type metadata accessor for Artwork.CropStyle(0);
  v76 = *(_QWORD *)(v75 - 8);
  v77 = v166;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(v74, 1, v75))
  {
    v78 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(__dsta, v74, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v76 + 16))(__dsta, v74, v75);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(__dsta, 0, 1, v75);
  }
  v86 = (uint64_t (*)(char *, uint64_t, uint64_t))v162;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v159 + 56))(v62, 0, 1, v6);
LABEL_66:
  v117 = v30[5];
  v118 = &v62[v117];
  v119 = &v63[v117];
  v120 = v86(&v62[v117], 10, v77);
  v121 = v86(v119, 10, v77);
  if (v120)
  {
    if (!v121)
    {
      v122 = type metadata accessor for Playlist.Variant(0);
      v123 = *(_QWORD *)(v122 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v123 + 48))(v119, 1, v122))
      {
        v124 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
        memcpy(v118, v119, *(_QWORD *)(*(_QWORD *)(v124 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v123 + 16))(v118, v119, v122);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v123 + 56))(v118, 0, 1, v122);
      }
      a3 = v156;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v161 + 56))(v118, 0, 10, v77);
      goto LABEL_85;
    }
  }
  else
  {
    if (!v121)
    {
      v126 = type metadata accessor for Playlist.Variant(0);
      v167 = *(_QWORD *)(v126 - 8);
      v127 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v167 + 48);
      v128 = v127(v118, 1, v126);
      v129 = v127(v119, 1, v126);
      if (v128)
      {
        a3 = v156;
        if (!v129)
        {
          (*(void (**)(char *, char *, uint64_t))(v167 + 16))(v118, v119, v126);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v167 + 56))(v118, 0, 1, v126);
          goto LABEL_85;
        }
      }
      else
      {
        a3 = v156;
        if (!v129)
        {
          (*(void (**)(char *, char *, uint64_t))(v167 + 24))(v118, v119, v126);
          goto LABEL_85;
        }
        (*(void (**)(char *, uint64_t))(v167 + 8))(v118, v126);
      }
      v130 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v118, v119, *(_QWORD *)(*(_QWORD *)(v130 - 8) + 64));
      goto LABEL_85;
    }
    sub_10004FF60((uint64_t)v118, (uint64_t *)&unk_1011A3DB0);
  }
  v125 = type metadata accessor for ArtworkImage.Placeholder(0);
  memcpy(v118, v119, *(_QWORD *)(*(_QWORD *)(v125 - 8) + 64));
  a3 = v156;
LABEL_85:
  v131 = v30[6];
  v132 = &v62[v131];
  v133 = &v63[v131];
  v134 = *(_QWORD *)v133;
  v132[8] = v133[8];
  *(_QWORD *)v132 = v134;
  v135 = v30[7];
  v136 = &v62[v135];
  v137 = &v63[v135];
  v138 = *(_QWORD *)v137;
  v136[8] = v137[8];
  *(_QWORD *)v136 = v138;
  v139 = *((_QWORD *)v137 + 2);
  v136[24] = v137[24];
  *((_QWORD *)v136 + 2) = v139;
  v140 = *((_QWORD *)v137 + 4);
  v136[40] = v137[40];
  *((_QWORD *)v136 + 4) = v140;
  v136[41] = v137[41];
  v141 = v30[8];
  v142 = &v62[v141];
  v143 = &v63[v141];
  v144 = *(_OWORD *)v143;
  v142[16] = v143[16];
  *(_OWORD *)v142 = v144;
LABEL_86:
  v145 = a3[6];
  v146 = (_QWORD *)(a1 + v145);
  v147 = &a2[v145];
  *v146 = *(_QWORD *)v147;
  v146[1] = *((_QWORD *)v147 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)&a2[a3[7]];
  swift_retain();
  swift_release();
  if ((char *)a1 != a2)
  {
    v148 = a3[8];
    v149 = (_QWORD *)(a1 + v148);
    v150 = &a2[v148];
    sub_10004FF60(a1 + v148, (uint64_t *)&unk_1011ACE40);
    v151 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v150, v151) == 1)
    {
      v152 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v152 - 8) + 16))(v149, v150, v152);
      v153 = 1;
    }
    else
    {
      *v149 = *(_QWORD *)v150;
      swift_retain();
      v153 = 0;
    }
    swift_storeEnumTagMultiPayload(v149, v151, v153);
  }
  return a1;
}

char *sub_1006D5170(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  __int128 v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  __int128 v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v74;
  char *v75;
  int *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unsigned int (*v81)(char *, uint64_t, uint64_t);
  uint64_t v82;
  unsigned int (*v83)(char *, uint64_t, uint64_t);
  uint64_t v84;
  uint64_t v85;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  v83 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v83(a2, 1, v6))
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
    v10 = *(int *)(v6 + 20);
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = type metadata accessor for Artwork.CropStyle(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v16 = (int *)type metadata accessor for ArtworkImage.Info(0);
  v17 = v16[5];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v21 = *(_QWORD *)(v20 - 8);
  v81 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  v80 = v20;
  if (v81(v19, 10, v20))
  {
    v22 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v76 = a3;
    v78 = v7;
    v23 = v21;
    v24 = type metadata accessor for Playlist.Variant(0);
    v25 = *(_QWORD *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v19, 1, v24))
    {
      v26 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v18, v19, v24);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v18, 0, 1, v24);
    }
    v21 = v23;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v18, 0, 10, v20);
    a3 = v76;
    v7 = v78;
  }
  v27 = v16[6];
  v28 = &a1[v27];
  v29 = &a2[v27];
  *(_QWORD *)v28 = *(_QWORD *)v29;
  v28[8] = v29[8];
  v30 = v16[7];
  v31 = &a1[v30];
  v32 = &a2[v30];
  *(_OWORD *)(v31 + 26) = *(_OWORD *)(v32 + 26);
  v33 = *((_OWORD *)v32 + 1);
  *(_OWORD *)v31 = *(_OWORD *)v32;
  *((_OWORD *)v31 + 1) = v33;
  v34 = v16[8];
  v35 = &a1[v34];
  v36 = &a2[v34];
  *(_OWORD *)v35 = *(_OWORD *)v36;
  v35[16] = v36[16];
  v37 = a3[5];
  v38 = &a1[v37];
  v39 = &a2[v37];
  v40 = *((_QWORD *)v16 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v40 + 48))(&a2[v37], 1, v16))
  {
    v41 = sub_100007E8C((uint64_t *)&unk_1011C6790);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    v77 = v40;
    if (v83(v39, 1, v6))
    {
      v42 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      v43 = v80;
    }
    else
    {
      v84 = v21;
      v79 = v7;
      v44 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v38, v39, v44);
      v45 = *(int *)(v6 + 20);
      v75 = &v38[v45];
      v46 = &v39[v45];
      v47 = type metadata accessor for Artwork.CropStyle(0);
      v48 = *(_QWORD *)(v47 - 8);
      v74 = v46;
      v49 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47);
      v43 = v80;
      if (v49)
      {
        v50 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v75, v74, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v75, v74, v47);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v75, 0, 1, v47);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v38, 0, 1, v6);
      v21 = v84;
    }
    v51 = v16[5];
    v52 = &v38[v51];
    v53 = &v39[v51];
    if (v81(&v39[v51], 10, v43))
    {
      v54 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    }
    else
    {
      v85 = v21;
      v55 = type metadata accessor for Playlist.Variant(0);
      v82 = *(_QWORD *)(v55 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v53, 1, v55))
      {
        v56 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
        memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v82 + 32))(v52, v53, v55);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v52, 0, 1, v55);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v52, 0, 10, v43);
    }
    v57 = v16[6];
    v58 = &v38[v57];
    v59 = &v39[v57];
    *(_QWORD *)v58 = *(_QWORD *)v59;
    v58[8] = v59[8];
    v60 = v16[7];
    v61 = &v38[v60];
    v62 = &v39[v60];
    *(_OWORD *)(v61 + 26) = *(_OWORD *)(v62 + 26);
    v63 = *((_OWORD *)v62 + 1);
    *(_OWORD *)v61 = *(_OWORD *)v62;
    *((_OWORD *)v61 + 1) = v63;
    v64 = v16[8];
    v65 = &v38[v64];
    v66 = &v39[v64];
    *(_OWORD *)v65 = *(_OWORD *)v66;
    v65[16] = v66[16];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v77 + 56))(v38, 0, 1, v16);
  }
  v67 = a3[7];
  *(_OWORD *)&a1[a3[6]] = *(_OWORD *)&a2[a3[6]];
  *(_QWORD *)&a1[v67] = *(_QWORD *)&a2[v67];
  v68 = a3[8];
  v69 = &a1[v68];
  v70 = &a2[v68];
  v71 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v70, v71) == 1)
  {
    v72 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 32))(v69, v70, v72);
    swift_storeEnumTagMultiPayload(v69, v71, 1);
  }
  else
  {
    memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1006D5770(uint64_t a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void *, uint64_t, uint64_t);
  int v28;
  int v29;
  int *v30;
  uint64_t v31;
  void *v32;
  char *v33;
  uint64_t v34;
  unsigned int (*v35)(void *, uint64_t, uint64_t);
  unsigned int v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(void *, uint64_t, uint64_t);
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t (*v60)(uint64_t, uint64_t, int *);
  int v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t (*v81)(char *, uint64_t, uint64_t);
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  char *v93;
  char *v94;
  __int128 v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t (*v105)(char *, uint64_t, uint64_t);
  int v106;
  size_t v107;
  char *v108;
  uint64_t v109;
  char *v110;
  char *v111;
  int v112;
  int v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t (*v119)(char *, uint64_t, uint64_t);
  int v120;
  int v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  _QWORD *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  void *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  int *v143;
  int *v144;
  int *v145;
  int *v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t (*v150)(char *, uint64_t, uint64_t);
  uint64_t (*__dst)(char *, uint64_t, uint64_t);
  char *__dsta;
  char *__dstb;
  uint64_t v154;
  uint64_t v155;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8((uint64_t)a2, 1, v6);
  v147 = v7;
  __dst = (uint64_t (*)(char *, uint64_t, uint64_t))v8;
  if (!v9)
  {
    if (!v10)
    {
      v21 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(a1, a2, v21);
      v22 = *(int *)(v6 + 20);
      v23 = (void *)(a1 + v22);
      v24 = &a2[v22];
      v25 = type metadata accessor for Artwork.CropStyle(0);
      v26 = *(_QWORD *)(v25 - 8);
      v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
      v28 = v27(v23, 1, v25);
      v29 = v27(v24, 1, v25);
      if (v28)
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 40))(v23, v24, v25);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v19 = v23;
      v20 = v24;
LABEL_8:
      memcpy(v19, v20, v18);
      goto LABEL_14;
    }
    sub_10005B748(a1, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v19 = (void *)a1;
    v20 = a2;
    goto LABEL_8;
  }
  if (v10)
    goto LABEL_7;
  v11 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
  v12 = *(int *)(v6 + 20);
  v13 = (void *)(a1 + v12);
  v14 = &a2[v12];
  v15 = type metadata accessor for Artwork.CropStyle(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  v30 = (int *)type metadata accessor for ArtworkImage.Info(0);
  v31 = v30[5];
  v32 = (void *)(a1 + v31);
  v33 = &a2[v31];
  v34 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v149 = *(_QWORD *)(v34 - 8);
  v35 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v149 + 48);
  v36 = v35(v32, 10, v34);
  v37 = v35(v33, 10, v34);
  v154 = v34;
  v150 = (uint64_t (*)(char *, uint64_t, uint64_t))v35;
  if (!v36)
  {
    if (!v37)
    {
      v143 = a3;
      v42 = type metadata accessor for Playlist.Variant(0);
      v43 = *(_QWORD *)(v42 - 8);
      v44 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v43 + 48);
      v45 = v44(v32, 1, v42);
      v46 = v44(v33, 1, v42);
      if (v45)
      {
        a3 = v143;
        if (!v46)
        {
          (*(void (**)(void *, char *, uint64_t))(v43 + 32))(v32, v33, v42);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v32, 0, 1, v42);
          goto LABEL_27;
        }
      }
      else
      {
        a3 = v143;
        if (!v46)
        {
          (*(void (**)(void *, char *, uint64_t))(v43 + 40))(v32, v33, v42);
          goto LABEL_27;
        }
        (*(void (**)(void *, uint64_t))(v43 + 8))(v32, v42);
      }
      v41 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
LABEL_21:
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      goto LABEL_27;
    }
    sub_10004FF60((uint64_t)v32, (uint64_t *)&unk_1011A3DB0);
LABEL_20:
    v41 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_21;
  }
  if (v37)
    goto LABEL_20;
  v38 = type metadata accessor for Playlist.Variant(0);
  v39 = *(_QWORD *)(v38 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v33, 1, v38))
  {
    v40 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v39 + 32))(v32, v33, v38);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v32, 0, 1, v38);
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v149 + 56))(v32, 0, 10, v34);
LABEL_27:
  v47 = v30[6];
  v48 = a1 + v47;
  v49 = &a2[v47];
  *(_QWORD *)v48 = *(_QWORD *)v49;
  *(_BYTE *)(v48 + 8) = v49[8];
  v50 = v30[7];
  v51 = a1 + v50;
  v52 = &a2[v50];
  *(_QWORD *)v51 = *(_QWORD *)v52;
  *(_BYTE *)(v51 + 8) = v52[8];
  *(_QWORD *)(v51 + 16) = *((_QWORD *)v52 + 2);
  *(_BYTE *)(v51 + 24) = v52[24];
  *(_QWORD *)(v51 + 32) = *((_QWORD *)v52 + 4);
  *(_BYTE *)(v51 + 40) = v52[40];
  *(_BYTE *)(v51 + 41) = v52[41];
  v53 = v30[8];
  v54 = a1 + v53;
  v55 = &a2[v53];
  *(_BYTE *)(v54 + 16) = v55[16];
  *(_OWORD *)v54 = *(_OWORD *)v55;
  v56 = a3[5];
  v57 = (char *)(a1 + v56);
  v58 = &a2[v56];
  v59 = *((_QWORD *)v30 - 1);
  v60 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v59 + 48);
  v61 = v60(a1 + v56, 1, v30);
  v62 = v60((uint64_t)v58, 1, v30);
  if (!v61)
  {
    if (v62)
    {
      sub_10005B748((uint64_t)v57, type metadata accessor for ArtworkImage.Info);
      goto LABEL_33;
    }
    v65 = __dst(v57, 1, v6);
    v66 = __dst(v58, 1, v6);
    v144 = a3;
    if (v65)
    {
      if (!v66)
      {
        v67 = type metadata accessor for Artwork(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(v57, v58, v67);
        v68 = *(int *)(v6 + 20);
        __dsta = &v57[v68];
        v69 = &v58[v68];
        v70 = type metadata accessor for Artwork.CropStyle(0);
        v71 = *(_QWORD *)(v70 - 8);
        v72 = v154;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v69, 1, v70))
        {
          v73 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
          memcpy(__dsta, v69, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v71 + 32))(__dsta, v69, v70);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v71 + 56))(__dsta, 0, 1, v70);
        }
        v81 = v150;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v147 + 56))(v57, 0, 1, v6);
LABEL_66:
        v109 = v30[5];
        v110 = &v57[v109];
        v111 = &v58[v109];
        v112 = v81(&v57[v109], 10, v72);
        v113 = v81(v111, 10, v72);
        if (v112)
        {
          if (!v113)
          {
            v114 = type metadata accessor for Playlist.Variant(0);
            v115 = *(_QWORD *)(v114 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v115 + 48))(v111, 1, v114))
            {
              v116 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
              memcpy(v110, v111, *(_QWORD *)(*(_QWORD *)(v116 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v115 + 32))(v110, v111, v114);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v115 + 56))(v110, 0, 1, v114);
            }
            a3 = v144;
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v149 + 56))(v110, 0, 10, v72);
            goto LABEL_85;
          }
        }
        else
        {
          if (!v113)
          {
            v118 = type metadata accessor for Playlist.Variant(0);
            v155 = *(_QWORD *)(v118 - 8);
            v119 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v155 + 48);
            v120 = v119(v110, 1, v118);
            v121 = v119(v111, 1, v118);
            if (v120)
            {
              a3 = v144;
              if (!v121)
              {
                (*(void (**)(char *, char *, uint64_t))(v155 + 32))(v110, v111, v118);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v155 + 56))(v110, 0, 1, v118);
                goto LABEL_85;
              }
            }
            else
            {
              a3 = v144;
              if (!v121)
              {
                (*(void (**)(char *, char *, uint64_t))(v155 + 40))(v110, v111, v118);
                goto LABEL_85;
              }
              (*(void (**)(char *, uint64_t))(v155 + 8))(v110, v118);
            }
            v122 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
            memcpy(v110, v111, *(_QWORD *)(*(_QWORD *)(v122 - 8) + 64));
            goto LABEL_85;
          }
          sub_10004FF60((uint64_t)v110, (uint64_t *)&unk_1011A3DB0);
        }
        v117 = type metadata accessor for ArtworkImage.Placeholder(0);
        memcpy(v110, v111, *(_QWORD *)(*(_QWORD *)(v117 - 8) + 64));
        a3 = v144;
LABEL_85:
        v123 = v30[6];
        v124 = &v57[v123];
        v125 = &v58[v123];
        *(_QWORD *)v124 = *(_QWORD *)v125;
        v124[8] = v125[8];
        v126 = v30[7];
        v127 = &v57[v126];
        v128 = &v58[v126];
        *(_QWORD *)v127 = *(_QWORD *)v128;
        v127[8] = v128[8];
        *((_QWORD *)v127 + 2) = *((_QWORD *)v128 + 2);
        v127[24] = v128[24];
        *((_QWORD *)v127 + 4) = *((_QWORD *)v128 + 4);
        v127[40] = v128[40];
        v127[41] = v128[41];
        v129 = v30[8];
        v130 = &v57[v129];
        v131 = &v58[v129];
        v130[16] = v131[16];
        *(_OWORD *)v130 = *(_OWORD *)v131;
        goto LABEL_86;
      }
    }
    else
    {
      if (!v66)
      {
        v99 = type metadata accessor for Artwork(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 40))(v57, v58, v99);
        v100 = *(int *)(v6 + 20);
        v101 = &v57[v100];
        v102 = &v58[v100];
        v103 = type metadata accessor for Artwork.CropStyle(0);
        v104 = *(_QWORD *)(v103 - 8);
        v105 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v104 + 48);
        v148 = v101;
        LODWORD(v101) = v105(v101, 1, v103);
        v106 = v105(v102, 1, v103);
        if ((_DWORD)v101)
        {
          v72 = v154;
          if (!v106)
          {
            (*(void (**)(char *, char *, uint64_t))(v104 + 32))(v148, v102, v103);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v104 + 56))(v148, 0, 1, v103);
            goto LABEL_49;
          }
          v107 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
          v108 = v148;
        }
        else
        {
          v72 = v154;
          if (!v106)
          {
            (*(void (**)(char *, char *, uint64_t))(v104 + 40))(v148, v102, v103);
            goto LABEL_49;
          }
          (*(void (**)(char *, uint64_t))(v104 + 8))(v148, v103);
          v107 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
          v108 = v148;
        }
        memcpy(v108, v102, v107);
LABEL_49:
        v81 = v150;
        goto LABEL_66;
      }
      sub_10005B748((uint64_t)v57, type metadata accessor for ArtworkImage.ViewModel);
    }
    v80 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
    v72 = v154;
    goto LABEL_49;
  }
  if (v62)
  {
LABEL_33:
    v64 = sub_100007E8C((uint64_t *)&unk_1011C6790);
    memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
    goto LABEL_86;
  }
  if (__dst(v58, 1, v6))
  {
    v63 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
  }
  else
  {
    v145 = a3;
    v74 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 32))(v57, v58, v74);
    v75 = *(int *)(v6 + 20);
    __dstb = &v57[v75];
    v76 = &v58[v75];
    v77 = type metadata accessor for Artwork.CropStyle(0);
    v78 = *(_QWORD *)(v77 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48))(v76, 1, v77))
    {
      v79 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(__dstb, v76, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v78 + 32))(__dstb, v76, v77);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(__dstb, 0, 1, v77);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v147 + 56))(v57, 0, 1, v6);
    a3 = v145;
  }
  v82 = v30[5];
  v83 = &v57[v82];
  v84 = &v58[v82];
  if (v150(&v58[v82], 10, v154))
  {
    v85 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
  }
  else
  {
    v146 = a3;
    v86 = type metadata accessor for Playlist.Variant(0);
    v87 = *(_QWORD *)(v86 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48))(v84, 1, v86))
    {
      v88 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v83, v84, v86);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v87 + 56))(v83, 0, 1, v86);
    }
    a3 = v146;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v149 + 56))(v83, 0, 10, v154);
  }
  v89 = v30[6];
  v90 = &v57[v89];
  v91 = &v58[v89];
  *(_QWORD *)v90 = *(_QWORD *)v91;
  v90[8] = v91[8];
  v92 = v30[7];
  v93 = &v57[v92];
  v94 = &v58[v92];
  *(_OWORD *)(v93 + 26) = *(_OWORD *)(v94 + 26);
  v95 = *((_OWORD *)v94 + 1);
  *(_OWORD *)v93 = *(_OWORD *)v94;
  *((_OWORD *)v93 + 1) = v95;
  v96 = v30[8];
  v97 = &v57[v96];
  v98 = &v58[v96];
  *(_OWORD *)v97 = *(_OWORD *)v98;
  v97[16] = v98[16];
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v59 + 56))(v57, 0, 1, v30);
LABEL_86:
  v132 = a3[6];
  v133 = (_QWORD *)(a1 + v132);
  v134 = &a2[v132];
  v136 = *(_QWORD *)v134;
  v135 = *((_QWORD *)v134 + 1);
  *v133 = v136;
  v133[1] = v135;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)&a2[a3[7]];
  swift_release();
  if ((char *)a1 != a2)
  {
    v137 = a3[8];
    v138 = (void *)(a1 + v137);
    v139 = &a2[v137];
    sub_10004FF60(a1 + v137, (uint64_t *)&unk_1011ACE40);
    v140 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v139, v140) == 1)
    {
      v141 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v141 - 8) + 32))(v138, v139, v141);
      swift_storeEnumTagMultiPayload(v138, v140, 1);
    }
    else
    {
      memcpy(v138, v139, *(_QWORD *)(*(_QWORD *)(v140 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1006D6490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006D649C);
}

uint64_t sub_1006D649C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int v14;

  v6 = type metadata accessor for ArtworkImage.Info(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = sub_100007E8C((uint64_t *)&unk_1011C6790);
  v10 = *(_QWORD *)(v9 - 8);
  if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
  {
    v11 = v9;
    v12 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
  if ((_DWORD)a2 != 2147483646)
  {
    v11 = sub_100007E8C(&qword_1011C6890);
    v10 = *(_QWORD *)(v11 - 8);
    v12 = a3[8];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
  v13 = *(_QWORD *)(a1 + a3[6] + 8);
  if (v13 >= 0xFFFFFFFF)
    LODWORD(v13) = -1;
  v14 = v13 - 1;
  if (v14 < 0)
    v14 = -1;
  return (v14 + 1);
}

uint64_t sub_1006D6580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006D658C);
}

uint64_t sub_1006D658C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;

  v8 = type metadata accessor for ArtworkImage.Info(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    result = sub_100007E8C((uint64_t *)&unk_1011C6790);
    v14 = *(_QWORD *)(result - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = result;
      v15 = a4[5];
    }
    else
    {
      if (a3 == 2147483646)
      {
        *(_QWORD *)(a1 + a4[6] + 8) = a2;
        return result;
      }
      v10 = sub_100007E8C(&qword_1011C6890);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = a4[8];
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1006D6660(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[5];

  v2 = type metadata accessor for ArtworkImage.Info(319);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1000E3A44(319, &qword_1011BB1C0, type metadata accessor for ArtworkImage.Info, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    if (v5 <= 0x3F)
    {
      v8[1] = *(_QWORD *)(v4 - 8) + 64;
      v8[2] = &unk_100ECACD8;
      v8[3] = &unk_100ECAA90;
      sub_1000E3A44(319, (unint64_t *)&qword_1011C6900, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
      if (v7 <= 0x3F)
      {
        v8[4] = *(_QWORD *)(v6 - 8) + 64;
        swift_initStructMetadata(a1, 256, 5, v8, a1 + 16);
      }
    }
  }
}

_QWORD *sub_1006D6744(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
    v7 = a3[9];
    v8 = a1 + v7;
    v9 = (uint64_t)a2 + v7;
    *(_OWORD *)(a1 + 49) = *(_OWORD *)((char *)a2 + 49);
    v10 = sub_100007E8C(qword_1011C9550);
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    v11((uint64_t)v4 + a3[10], (uint64_t)a2 + a3[10], v10);
    v12 = a3[11];
    v13 = (_QWORD *)((char *)v4 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    v15 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
    {
      v16 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
      v17 = v13;
      v18 = v15;
      v19 = 1;
    }
    else
    {
      *v13 = *v14;
      swift_retain();
      v17 = v13;
      v18 = v15;
      v19 = 0;
    }
    swift_storeEnumTagMultiPayload(v17, v18, v19);
  }
  return v4;
}

double sub_1006D689C(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;

  v4 = a1 + a2[9];
  v5 = sub_100007E8C(qword_1011C9550);
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(a1 + a2[10], v5);
  v7 = a1 + a2[11];
  v8 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  else
  {
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_1006D6960(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 49) = *(_OWORD *)(a2 + 49);
  v6 = a3[9];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_100007E8C(qword_1011C9550);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  v10(a1 + a3[10], a2 + a3[10], v9);
  v11 = a3[11];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  v14 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
  {
    v15 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v12, v13, v15);
    v16 = 1;
  }
  else
  {
    *v12 = *v13;
    swift_retain();
    v16 = 0;
  }
  swift_storeEnumTagMultiPayload(v12, v14, v16);
  return a1;
}

uint64_t sub_1006D6A84(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_BYTE *)(a1 + 3) = *(_BYTE *)(a2 + 3);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v6 = a3[9];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_100007E8C(qword_1011C9550);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(a1 + a3[10], a2 + a3[10], v9);
  if (a1 != a2)
  {
    v11 = a3[11];
    v12 = (_QWORD *)(a1 + v11);
    v13 = (_QWORD *)(a2 + v11);
    sub_10004FF60(a1 + v11, (uint64_t *)&unk_1011ACE40);
    v14 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
    {
      v15 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v12, v13, v15);
      v16 = 1;
    }
    else
    {
      *v12 = *v13;
      swift_retain();
      v16 = 0;
    }
    swift_storeEnumTagMultiPayload(v12, v14, v16);
  }
  return a1;
}

uint64_t sub_1006D6C08(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 49) = *(_OWORD *)(a2 + 49);
  v6 = a3[9];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_100007E8C(qword_1011C9550);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(a1 + a3[10], a2 + a3[10], v9);
  v11 = a3[11];
  v12 = (void *)(a1 + v11);
  v13 = (const void *)(a2 + v11);
  v14 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
  {
    v15 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v12, v13, v15);
    swift_storeEnumTagMultiPayload(v12, v14, 1);
  }
  else
  {
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1006D6D30(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_BYTE *)(a1 + 3) = *(_BYTE *)(a2 + 3);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v7 = a3[9];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)(a1 + 56) = v6;
  v10 = sub_100007E8C(qword_1011C9550);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(a1 + a3[10], a2 + a3[10], v10);
  if (a1 != a2)
  {
    v12 = a3[11];
    v13 = (void *)(a1 + v12);
    v14 = (const void *)(a2 + v12);
    sub_10004FF60(a1 + v12, (uint64_t *)&unk_1011ACE40);
    v15 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
    {
      v16 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v13, v14, v16);
      swift_storeEnumTagMultiPayload(v13, v15, 1);
    }
    else
    {
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1006D6EA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006D6EAC);
}

uint64_t sub_1006D6EAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  BOOL v5;
  int v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 1);
    v5 = v4 >= 2;
    v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5)
      return (v6 + 1);
    else
      return 0;
  }
  else
  {
    v10 = sub_100007E8C(qword_1011C9550);
    v11 = *(_QWORD *)(v10 - 8);
    if (*(_DWORD *)(v11 + 84) == (_DWORD)a2)
    {
      v12 = v10;
      v13 = *(int *)(a3 + 36);
    }
    else
    {
      v12 = sub_100007E8C(&qword_1011C6890);
      v11 = *(_QWORD *)(v12 - 8);
      v13 = *(int *)(a3 + 44);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a1 + v13, a2, v12);
  }
}

uint64_t sub_1006D6F54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006D6F60);
}

uint64_t sub_1006D6F60(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 1) = a2 + 1;
  }
  else
  {
    v8 = sub_100007E8C(qword_1011C9550);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 36);
    }
    else
    {
      v10 = sub_100007E8C(&qword_1011C6890);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 44);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_1006D7000(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[5];
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[0] = &unk_100ECAD08;
  v6[1] = &unk_100ECAA78;
  v6[2] = &unk_100ECAA78;
  v6[3] = &unk_100ECAA78;
  v6[4] = &unk_100ECAAA8;
  sub_1000F6458(319);
  if (v3 <= 0x3F)
  {
    v7 = *(_QWORD *)(v2 - 8) + 64;
    v8 = v7;
    sub_1000E3A44(319, (unint64_t *)&qword_1011C6900, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v5 <= 0x3F)
    {
      v9 = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 8, v6, a1 + 16);
    }
  }
}

unint64_t sub_1006D70C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C3E50;
  if (!qword_1011C3E50)
  {
    v1 = sub_100044B54(&qword_1011C38C8);
    sub_10005610C(&qword_1011C38D8, &qword_1011C38C0, (void (*)(void))sub_1006D0100);
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C3E50);
  }
  return result;
}

uint64_t sub_1006D7168(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t TupleTypeMetadata;
  uint64_t v8;
  uint64_t WitnessTable;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t TupleTypeMetadata2;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;

  v1 = *a1;
  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  v5 = a1[4];
  v6 = type metadata accessor for Tracklist.LeadingIcon(255);
  v55 = v6;
  v56 = sub_100044B54(&qword_1011C39F8);
  v57 = sub_100044B54(&qword_1011C3A00);
  v58 = sub_100044B54(&qword_1011C3A08);
  v59 = &type metadata for Spacer;
  v50 = v1;
  v51 = v2;
  v52 = v3;
  v53 = v4;
  v54 = v5;
  v60 = type metadata accessor for Tracklist.TrailingIcons(255, (uint64_t)&v50);
  TupleTypeMetadata = swift_getTupleTypeMetadata(255, 6);
  v8 = type metadata accessor for TupleView(255, TupleTypeMetadata);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v8);
  v10 = type metadata accessor for HStack(255, v8, WitnessTable);
  v11 = type metadata accessor for ModifiedContent(255, v10, &type metadata for _FrameLayout);
  v12 = type metadata accessor for ModifiedContent(255, v11, &type metadata for _PaddingLayout);
  v14 = type metadata accessor for Tracklist.VerticalTextStack(255, v1, v3, v13);
  v15 = type metadata accessor for ModifiedContent(255, v14, &type metadata for _PaddingLayout);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v12, v15, 0, 0);
  v17 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v17);
  v18 = type metadata accessor for VStack(255, v17);
  v55 = v6;
  v56 = sub_100044B54(&qword_1011C3A10);
  v57 = sub_100044B54(&qword_1011C3A18);
  v19 = sub_100044B54(&qword_1011C3A20);
  v21 = type metadata accessor for Tracklist.HorizontalTextStack(255, v1, v3, v20);
  v22 = type metadata accessor for _ConditionalContent(255, v14, v21);
  v23 = type metadata accessor for Group(255, v22);
  v24 = type metadata accessor for ModifiedContent(255, v23, &type metadata for _FlexFrameLayout);
  v25 = swift_getTupleTypeMetadata2(255, v19, v24, 0, 0);
  v26 = type metadata accessor for TupleView(255, v25);
  v27 = type metadata accessor for Group(255, v26);
  v28 = type metadata accessor for ModifiedContent(255, v27, &type metadata for SeparatorAlignmentModifier);
  v29 = sub_100044B54(&qword_1011B5800);
  v58 = type metadata accessor for ModifiedContent(255, v28, v29);
  v59 = (void *)sub_100044B54(&qword_1011B7088);
  v50 = v1;
  v51 = v2;
  v52 = v3;
  v53 = v4;
  v54 = v5;
  v60 = type metadata accessor for Tracklist.TrailingIcons(255, (uint64_t)&v50);
  v30 = swift_getTupleTypeMetadata(255, 6);
  v31 = type metadata accessor for TupleView(255, v30);
  v32 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v31);
  v33 = type metadata accessor for HStack(255, v31, v32);
  v34 = type metadata accessor for _ConditionalContent(255, v18, v33);
  v35 = type metadata accessor for Group(255, v34);
  v36 = type metadata accessor for ModifiedContent(255, v35, &type metadata for _PaddingLayout);
  v37 = type metadata accessor for ModifiedContent(255, v36, &type metadata for _PaddingLayout);
  v38 = type metadata accessor for ModifiedContent(255, v37, &type metadata for _FlexFrameLayout);
  v39 = sub_100044B54(&qword_1011C3A28);
  v40 = type metadata accessor for ModifiedContent(255, v38, v39);
  swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v18);
  swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v33);
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v34);
  swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v35);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v36);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v37);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v38);
  sub_100049F28(&qword_1011C3A30, &qword_1011C3A28, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
  v41 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v40);
  v55 = v40;
  v56 = v41;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v55, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 0);
  v43 = type metadata accessor for AccessibilityAttachmentModifier(255);
  v44 = type metadata accessor for ModifiedContent(255, OpaqueTypeMetadata2, v43);
  v45 = type metadata accessor for ModifiedContent(255, v44, v43);
  v46 = _s17ContextMenuButtonVMa(255);
  v55 = v40;
  v56 = v41;
  swift_getOpaqueTypeConformance2(&v55, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v44);
  v47 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v45);
  v48 = sub_100048748(&qword_1011BE1B0, _s17ContextMenuButtonVMa, (uint64_t)&unk_100EC5958);
  v55 = v45;
  v56 = v46;
  v57 = v47;
  v58 = v48;
  return swift_getOpaqueTypeConformance2(&v55, &opaque type descriptor for <<opaque return type of View.accessibilityActions<A>(_:)>>, 1);
}

uint64_t sub_1006D76C0(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_100FAA388, 1);
}

uint64_t sub_1006D76F4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAA360, 1);
}

uint64_t sub_1006D7704(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAA338, 1);
}

uint64_t sub_1006D7714(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAA310, 1);
}

uint64_t sub_1006D7724(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAA2E8, 1);
}

uint64_t sub_1006D7734(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAA2C0, 1);
}

uint64_t sub_1006D7744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1004DF980(a1, a2, a3, (uint64_t)&unk_100FAA274);
}

uint64_t sub_1006D7750(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_100FAA240, 1);
}

unint64_t sub_1006D7784()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C3E88;
  if (!qword_1011C3E88)
  {
    v1 = sub_100044B54(&qword_1011C3E78);
    sub_1006D7808();
    sub_100049F28(&qword_1011A0FB0, &qword_1011A43F0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C3E88);
  }
  return result;
}

uint64_t sub_1006D7808()
{
  return sub_1000E4570(&qword_1011C3E90, &qword_1011C3E70, (void (*)(void))sub_1006D782C, (uint64_t)&protocol conformance descriptor for <A> Group<A>);
}

unint64_t sub_1006D782C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C3E98;
  if (!qword_1011C3E98)
  {
    v1 = sub_100044B54(&qword_1011C3EA0);
    sub_1001C951C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C3E98);
  }
  return result;
}

double sub_1006D7898(char a1, uint64_t a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  double v10;
  char v11;
  uint64_t v12;
  double v13;
  double v14;
  uint64_t v16;

  v6 = type metadata accessor for DynamicTypeSize(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10119C600 != -1)
    swift_once(&qword_10119C600, sub_1006CA11C);
  if (byte_1011C36B8 != 1)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for DynamicTypeSize.accessibility3(_:), v6);
    v11 = static DynamicTypeSize.< infix(_:_:)(a2, v9);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    if ((v11 & 1) != 0)
    {
      if ((a1 & 1) != 0)
      {
        v12 = 0x4040000000000000;
LABEL_13:
        v10 = *(double *)&v12;
        goto LABEL_14;
      }
    }
    else if ((a1 & 1) == 0)
    {
      v12 = 0x4052000000000000;
      goto LABEL_13;
    }
    v12 = 0x4048000000000000;
    goto LABEL_13;
  }
  v10 = 48.0;
  if ((a1 & 1) != 0)
    v10 = 32.0;
LABEL_14:
  v13 = v10 * a3;
  v14 = v10 * 0.5;
  if ((a1 & 1) == 0)
    v14 = -0.0;
  return v13 + v14;
}

unint64_t sub_1006D79EC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011C3EB8;
  if (!qword_1011C3EB8)
  {
    v1 = sub_100044B54(&qword_1011A2E78);
    v2[0] = sub_100044B54(&qword_1011A5388);
    v2[1] = sub_1001C9648();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.minimumLineHeight(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C3EB8);
  }
  return result;
}

uint64_t sub_1006D7A88()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1006D7A98()
{
  return sub_10005610C(&qword_1011C3F40, &qword_1011C3F38, (void (*)(void))sub_1006D7ABC);
}

uint64_t sub_1006D7ABC()
{
  return sub_10005610C(&qword_1011C3F48, &qword_1011C3F30, (void (*)(void))sub_1006D7AE0);
}

uint64_t sub_1006D7AE0()
{
  return sub_10005610C(&qword_1011C3F50, &qword_1011C3F28, (void (*)(void))sub_1006D7B04);
}

unint64_t sub_1006D7B04()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C3F58;
  if (!qword_1011C3F58)
  {
    v1 = sub_100044B54(&qword_1011C3F20);
    sub_1000E4570(&qword_1011C3F60, &qword_1011C3F18, (void (*)(void))sub_1006D7B90, (uint64_t)&protocol conformance descriptor for <A> Group<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C3F58);
  }
  return result;
}

unint64_t sub_1006D7B90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C3F68;
  if (!qword_1011C3F68)
  {
    v1 = sub_100044B54(&qword_1011C3F70);
    sub_1006D7BF4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C3F68);
  }
  return result;
}

unint64_t sub_1006D7BF4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C3F78;
  if (!qword_1011C3F78)
  {
    v1 = sub_100044B54(&qword_1011C3F80);
    sub_1006D7C78();
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C3F78);
  }
  return result;
}

unint64_t sub_1006D7C78()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C3F88;
  if (!qword_1011C3F88)
  {
    v1 = sub_100044B54(&qword_1011C3F90);
    sub_1006D7CFC();
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C3F88);
  }
  return result;
}

unint64_t sub_1006D7CFC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C3F98;
  if (!qword_1011C3F98)
  {
    v1 = sub_100044B54(&qword_1011C3FA0);
    sub_100629E14((unint64_t *)&qword_1011BF7F0, &qword_1011AC700, &qword_1011A0FB0, &qword_1011A43F0);
    sub_100049F28(&qword_1011BE258, &qword_1011BE260, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C3F98);
  }
  return result;
}

unint64_t sub_1006D7DA0()
{
  unint64_t result;

  result = qword_1011C3FB0;
  if (!qword_1011C3FB0)
  {
    result = swift_getWitnessTable(&unk_100ECB1CC, &type metadata for PopularIconShapeStyle);
    atomic_store(result, (unint64_t *)&qword_1011C3FB0);
  }
  return result;
}

unint64_t sub_1006D7DE4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C4008;
  if (!qword_1011C4008)
  {
    v1 = sub_100044B54(&qword_1011C3FD0);
    sub_1001C9C90();
    sub_100049F28(&qword_1011BE3D8, &qword_1011BE390, (uint64_t)&unk_100EB7188);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C4008);
  }
  return result;
}

unint64_t sub_1006D7E68()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  result = qword_1011C4010;
  if (!qword_1011C4010)
  {
    v1 = sub_100044B54(&qword_1011C3FF0);
    v2 = sub_100044B54(&qword_1011C3FE0);
    v3 = sub_100044B54(&qword_1011C3FD8);
    v6 = sub_100044B54(&qword_1011C3FD0);
    v7 = sub_1006D7DE4();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
    v6 = v3;
    v7 = OpaqueTypeConformance2;
    v5 = swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.border(_:corner:)>>, 1);
    v6 = v2;
    v7 = v5;
    swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C4010);
  }
  return result;
}

unint64_t sub_1006D7F6C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C4018;
  if (!qword_1011C4018)
  {
    v1 = sub_100044B54(&qword_1011C3FF8);
    sub_1006D7E68();
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C4018);
  }
  return result;
}

unint64_t sub_1006D7FF0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C4028;
  if (!qword_1011C4028)
  {
    v1 = sub_100044B54(&qword_1011C4000);
    sub_1006D7F6C();
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C4028);
  }
  return result;
}

unint64_t sub_1006D807C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C4098;
  if (!qword_1011C4098)
  {
    v1 = sub_100044B54(&qword_1011C4090);
    sub_1006D8100();
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C4098);
  }
  return result;
}

unint64_t sub_1006D8100()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C40A0;
  if (!qword_1011C40A0)
  {
    v1 = sub_100044B54(&qword_1011C4088);
    sub_1006D8184();
    sub_100048748(&qword_1011C40E0, type metadata accessor for DancingPlaybackBarsConditionalModifier, (uint64_t)&unk_100EB7208);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C40A0);
  }
  return result;
}

unint64_t sub_1006D8184()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C40A8;
  if (!qword_1011C40A8)
  {
    v1 = sub_100044B54(&qword_1011C4080);
    sub_1006D8208();
    sub_100048748(&qword_1011C40D8, type metadata accessor for PreviewOverlay.TrackNumberVariant, (uint64_t)&unk_100ED1674);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C40A8);
  }
  return result;
}

unint64_t sub_1006D8208()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C40B0;
  if (!qword_1011C40B0)
  {
    v1 = sub_100044B54(&qword_1011C4078);
    sub_1006D8284(&qword_1011C40B8, &qword_1011C40C0, (void (*)(void))sub_1006D8310);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C40B0);
  }
  return result;
}

uint64_t sub_1006D8284(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_100044B54(a2);
    a3();
    sub_1004D9D80(&qword_1011B7170, &qword_1011B7088);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1006D8310()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C40C8;
  if (!qword_1011C40C8)
  {
    v1 = sub_100044B54(&qword_1011C40D0);
    sub_1004D9D80((unint64_t *)&qword_1011A53F8, &qword_1011A5400);
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C40C8);
  }
  return result;
}

unint64_t sub_1006D83B4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011C4110;
  if (!qword_1011C4110)
  {
    v1 = sub_100044B54(&qword_1011C40F0);
    v2[0] = sub_100044B54(&qword_1011AFB38);
    v2[1] = sub_1003AC850();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C4110);
  }
  return result;
}

uint64_t sub_1006D8448()
{
  uint64_t v0;

  return swift_deallocObject(v0, 33, 7);
}

double sub_1006D8458()
{
  uint64_t v0;
  double v1;
  char v2;
  uint64_t v3;
  double v4;
  double v5;

  v1 = *(double *)(v0 + 24);
  v2 = *(_BYTE *)(v0 + 32);
  v3 = static HorizontalAlignment.leading.getter();
  ViewDimensions.subscript.getter(v3);
  v5 = 0.0;
  if ((v2 & 1) == 0)
    v5 = v1;
  return v5 + v4;
}

unint64_t sub_1006D84B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C4140;
  if (!qword_1011C4140)
  {
    v1 = sub_100044B54(&qword_1011C4138);
    sub_100049F28(&qword_1011C4148, &qword_1011C4118, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    sub_100283478();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C4140);
  }
  return result;
}

unint64_t sub_1006D8534()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C4150;
  if (!qword_1011C4150)
  {
    v1 = sub_100044B54(&qword_1011C4128);
    sub_1006D84B0();
    sub_100049F28(&qword_1011C4148, &qword_1011C4118, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C4150);
  }
  return result;
}

uint64_t sub_1006D85B8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

double sub_1006D85C8()
{
  uint64_t v0;
  double v1;
  uint64_t v2;

  v1 = *(double *)(v0 + 16);
  v2 = static HorizontalAlignment.leading.getter();
  return v1 + ViewDimensions.subscript.getter(v2);
}

unint64_t sub_1006D8600()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C4168;
  if (!qword_1011C4168)
  {
    v1 = sub_100044B54(&qword_1011C4160);
    sub_1006D868C(&qword_1011C4170, &qword_1011A2EB8, &qword_1011C3E70, sub_1006D7808);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C4168);
  }
  return result;
}

uint64_t sub_1006D868C(unint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[4];

  result = *a1;
  if (!result)
  {
    v8 = sub_100044B54(a2);
    v9[0] = sub_100044B54(a3);
    v9[1] = &type metadata for HierarchicalShapeStyle;
    v9[2] = a4();
    v9[3] = &protocol witness table for HierarchicalShapeStyle;
    swift_getOpaqueTypeConformance2(v9, &opaque type descriptor for <<opaque return type of View.playableForegroundStyle<A>(_:isPlayable:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1006D8734()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C41C8;
  if (!qword_1011C41C8)
  {
    v1 = sub_100044B54(&qword_1011C41B8);
    sub_100049F28(&qword_1011C41D0, &qword_1011C4190, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    sub_100049F28(&qword_1011C41D8, &qword_1011C4180, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C41C8);
  }
  return result;
}

unint64_t sub_1006D87D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C41E8;
  if (!qword_1011C41E8)
  {
    v1 = sub_100044B54(&qword_1011A2EA0);
    sub_1006D8600();
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C41E8);
  }
  return result;
}

ValueMetadata *type metadata accessor for PopularIconShapeStyle()
{
  return &type metadata for PopularIconShapeStyle;
}

ValueMetadata *type metadata accessor for Tracklist.BadgedPunchOut()
{
  return &type metadata for Tracklist.BadgedPunchOut;
}

uint64_t storeEnumTagSinglePayload for Tracklist.LeadingIconState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1006D88C8 + 4 * byte_100ECA96F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1006D88FC + 4 * byte_100ECA96A[v4]))();
}

uint64_t sub_1006D88FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1006D8904(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1006D890CLL);
  return result;
}

uint64_t sub_1006D8918(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1006D8920);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1006D8924(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1006D892C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Tracklist.LeadingIconState()
{
  return &type metadata for Tracklist.LeadingIconState;
}

uint64_t sub_1006D8948()
{
  return sub_1006D03C4(&qword_1011C4200, &qword_1011A2E68, &qword_1011C4208, &qword_1011A2E60);
}

uint64_t sub_1006D897C()
{
  return sub_100049F28(&qword_1011C4210, &qword_1011C4218, (uint64_t)&protocol conformance descriptor for TupleView<A>);
}

uint64_t sub_1006D89A8()
{
  return sub_1006D8284(&qword_1011C4220, &qword_1011C4228, (void (*)(void))sub_1006D7A98);
}

unint64_t sub_1006D89D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C4230;
  if (!qword_1011C4230)
  {
    v1 = sub_100044B54(&qword_1011C3FC8);
    sub_100049F28(&qword_1011C4020, &qword_1011C3FC0, (uint64_t)&protocol conformance descriptor for ZStack<A>);
    sub_1006D7FF0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C4230);
  }
  return result;
}

unint64_t sub_1006D8A60()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C4238;
  if (!qword_1011C4238)
  {
    v1 = sub_100044B54(&qword_1011C4068);
    sub_1006D8AE4();
    sub_100049F28((unint64_t *)&qword_1011A4620, &qword_1011B5800, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C4238);
  }
  return result;
}

unint64_t sub_1006D8AE4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C4240;
  if (!qword_1011C4240)
  {
    v1 = sub_100044B54(&qword_1011C4060);
    sub_10015FD08(&qword_1011C4248, &qword_1011C4250, (void (*)(void))sub_1006D807C, (void (*)(void))sub_10062A6F8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C4240);
  }
  return result;
}

unint64_t sub_1006D8B6C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C4258;
  if (!qword_1011C4258)
  {
    v1 = sub_100044B54(&qword_1011C4100);
    sub_10005610C(&qword_1011C4108, &qword_1011C40F8, (void (*)(void))sub_1006D83B4);
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C4258);
  }
  return result;
}

uint64_t sub_1006D8C10()
{
  return sub_10015FD08(&qword_1011C4260, &qword_1011C4268, (void (*)(void))sub_1006D84B0, (void (*)(void))sub_1006D8534);
}

uint64_t sub_1006D8C44()
{
  return sub_100049F28(&qword_1011C4270, &qword_1011C4158, (uint64_t)&protocol conformance descriptor for HStack<A>);
}

unint64_t sub_1006D8C74()
{
  unint64_t result;

  result = qword_1011C4278;
  if (!qword_1011C4278)
  {
    result = swift_getWitnessTable(&unk_100ECB0B4, &type metadata for Tracklist.LeadingIconState);
    atomic_store(result, (unint64_t *)&qword_1011C4278);
  }
  return result;
}

uint64_t sub_1006D8CB8()
{
  return sub_100049F28(&qword_1011C4280, &qword_1011C4288, (uint64_t)&protocol conformance descriptor for _ShapeView<A, B>);
}

unint64_t sub_1006D8CE8()
{
  unint64_t result;

  result = qword_1011C4290;
  if (!qword_1011C4290)
  {
    result = swift_getWitnessTable(&unk_100ECB12C, &type metadata for Tracklist.BadgedPunchOut);
    atomic_store(result, (unint64_t *)&qword_1011C4290);
  }
  return result;
}

unint64_t sub_1006D8D30()
{
  unint64_t result;

  result = qword_1011C4298;
  if (!qword_1011C4298)
  {
    result = swift_getWitnessTable(&unk_100ECB0DC, &type metadata for Tracklist.BadgedPunchOut);
    atomic_store(result, (unint64_t *)&qword_1011C4298);
  }
  return result;
}

uint64_t sub_1006D8D74(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAA3BC, 1);
}

double sub_1006D8D84@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  double v10;
  double v11;
  double v12;
  double MinX;
  double MaxY;
  double v15;
  double MinY;
  double MaxX;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  char v23;
  double result;
  __int128 v25;
  _OWORD v26[2];
  char v27;
  _QWORD v28[6];
  CGRect v29;
  CGRect v30;
  CGRect v31;
  CGRect v32;
  CGRect v33;
  CGRect v34;
  CGRect v35;
  CGRect v36;
  CGRect v37;
  CGRect v38;
  CGRect v39;
  CGRect v40;
  CGRect v41;

  Path.init()(v26);
  v29.origin.x = a2;
  v29.origin.y = a3;
  v29.size.width = a4;
  v29.size.height = a5;
  v10 = CGRectGetHeight(v29) * 0.5625;
  v30.origin.x = a2;
  v30.origin.y = a3;
  v30.size.width = a4;
  v30.size.height = a5;
  v11 = CGRectGetHeight(v30) - v10;
  v31.origin.x = a2;
  v31.origin.y = a3;
  v31.size.width = a4;
  v31.size.height = a5;
  v12 = CGRectGetWidth(v31) - v10;
  v32.origin.x = a2;
  v32.origin.y = a3;
  v32.size.width = a4;
  v32.size.height = a5;
  MinX = CGRectGetMinX(v32);
  v33.origin.x = a2;
  v33.origin.y = a3;
  v33.size.width = a4;
  v33.size.height = a5;
  MaxY = CGRectGetMaxY(v33);
  Path.move(to:)(MinX, MaxY);
  v34.origin.x = a2;
  v34.origin.y = a3;
  v34.size.width = a4;
  v34.size.height = a5;
  v15 = CGRectGetMinX(v34);
  v35.origin.x = a2;
  v35.origin.y = a3;
  v35.size.width = a4;
  v35.size.height = a5;
  MinY = CGRectGetMinY(v35);
  Path.addLine(to:)(v15, MinY);
  v36.origin.x = a2;
  v36.origin.y = a3;
  v36.size.width = a4;
  v36.size.height = a5;
  MaxX = CGRectGetMaxX(v36);
  v37.origin.x = a2;
  v37.origin.y = a3;
  v37.size.width = a4;
  v37.size.height = a5;
  v18 = CGRectGetMinY(v37);
  Path.addLine(to:)(MaxX, v18);
  v38.origin.x = a2;
  v38.origin.y = a3;
  v38.size.width = a4;
  v38.size.height = a5;
  v19 = CGRectGetMaxX(v38);
  Path.addLine(to:)(v19, v11);
  v39.origin.x = a2;
  v39.origin.y = a3;
  v39.size.width = a4;
  v39.size.height = a5;
  v20 = CGRectGetMaxY(v39);
  v28[0] = 0x3FF0000000000000;
  v28[1] = 0;
  v28[2] = 0;
  v28[3] = 0x3FF0000000000000;
  v28[4] = 0;
  v28[5] = 0;
  Path.addArc(tangent1End:tangent2End:radius:transform:)(v28, v12, v11, v12, v20, v10);
  v40.origin.x = a2;
  v40.origin.y = a3;
  v40.size.width = a4;
  v40.size.height = a5;
  v21 = CGRectGetMinX(v40);
  v41.origin.x = a2;
  v41.origin.y = a3;
  v41.size.width = a4;
  v41.size.height = a5;
  v22 = CGRectGetMaxY(v41);
  Path.addLine(to:)(v21, v22);
  v23 = v27;
  result = *(double *)v26;
  v25 = v26[1];
  *(_OWORD *)a1 = v26[0];
  *(_OWORD *)(a1 + 16) = v25;
  *(_BYTE *)(a1 + 32) = v23;
  return result;
}

unint64_t sub_1006D8F90()
{
  unint64_t result;

  result = qword_1011C42A0;
  if (!qword_1011C42A0)
  {
    result = swift_getWitnessTable(&unk_100ECB17C, &type metadata for Tracklist.BadgedPunchOut);
    atomic_store(result, (unint64_t *)&qword_1011C42A0);
  }
  return result;
}

void *sub_1006D8FD4()
{
  return &protocol witness table for Color;
}

uint64_t sub_1006D8FE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch(sub_1006D8FFC, 0, 0);
}

uint64_t sub_1006D8FFC()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 24) = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1006D9064, v3, v4);
}

uint64_t sub_1006D9064()
{
  uint64_t v0;
  double v1;

  swift_release();
  v1 = sub_1006D9610();
  return (*(uint64_t (**)(double))(v0 + 8))(v1);
}

double sub_1006D9098()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  double result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011C4420);
  v26 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011C4428);
  v25 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011C4430);
  v9 = type metadata accessor for MusicMovie(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = *(unsigned __int8 *)(v10 + 80);
  v13 = (v12 + 32) & ~v12;
  v14 = swift_allocObject(v8, v13 + v11, v12 | 7);
  *(_OWORD *)(v14 + 16) = xmmword_100EA7AA0;
  v29 = v9;
  v15 = sub_100048748(&qword_1011C4438, (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie, (uint64_t)&unk_100EAA708);
  v30 = v15;
  KeyPath = swift_getKeyPath(&unk_100ECB400);
  v27 = v9;
  v28 = v15;
  v17 = swift_getKeyPath(&unk_100ECB438);
  static Published.subscript.getter((_QWORD *)(v14 + v13), v1, KeyPath, v17);
  swift_release();
  swift_release();
  v18 = sub_100048748(&qword_1011A0BE0, (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie, (uint64_t)&protocol conformance descriptor for MusicMovie);
  MusicLibraryMapping.Request.init(mappingItems:)(v14, v9, v18);
  MusicLibraryMapping.Request.shouldResolveUnfetchedItems.setter(1, v5);
  v19 = sub_100049F28(&qword_1011C4440, &qword_1011C4428, (uint64_t)&protocol conformance descriptor for MusicLibraryMapping.Request<A>);
  *(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 176)) = MusicAutoupdatableRequest.autoupdatingResponse.getter(v5, v19);
  swift_retain();
  v20 = swift_release();
  dispatch thunk of MusicAutoupdatingResponse.$response.getter(v20);
  v21 = sub_100049F28(&qword_1011C4448, &qword_1011C4420, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  swift_retain();
  v22 = Publisher<>.sink(receiveValue:)(sub_1006DB778, v1, v2, v21);
  swift_release();
  v23 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v26 + 8))(v4, v2, v23);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v5);
  *(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 184)) = v22;
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

double sub_1006D9354()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  double result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011C43C0);
  v26 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011C43C8);
  v25 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011C43D0);
  v9 = type metadata accessor for TVEpisode(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = *(unsigned __int8 *)(v10 + 80);
  v13 = (v12 + 32) & ~v12;
  v14 = swift_allocObject(v8, v13 + v11, v12 | 7);
  *(_OWORD *)(v14 + 16) = xmmword_100EA7AA0;
  v29 = v9;
  v15 = sub_100048748(&qword_1011C43D8, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&unk_100EAA698);
  v30 = v15;
  KeyPath = swift_getKeyPath(&unk_100ECB400);
  v27 = v9;
  v28 = v15;
  v17 = swift_getKeyPath(&unk_100ECB438);
  static Published.subscript.getter((_QWORD *)(v14 + v13), v1, KeyPath, v17);
  swift_release();
  swift_release();
  v18 = sub_100048748(&qword_1011A0BC0, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&protocol conformance descriptor for TVEpisode);
  MusicLibraryMapping.Request.init(mappingItems:)(v14, v9, v18);
  MusicLibraryMapping.Request.shouldResolveUnfetchedItems.setter(1, v5);
  v19 = sub_100049F28(&qword_1011C43E0, &qword_1011C43C8, (uint64_t)&protocol conformance descriptor for MusicLibraryMapping.Request<A>);
  *(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 176)) = MusicAutoupdatableRequest.autoupdatingResponse.getter(v5, v19);
  swift_retain();
  v20 = swift_release();
  dispatch thunk of MusicAutoupdatingResponse.$response.getter(v20);
  v21 = sub_100049F28(&qword_1011C43E8, &qword_1011C43C0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  swift_retain();
  v22 = Publisher<>.sink(receiveValue:)(sub_1006DB770, v1, v2, v21);
  swift_release();
  v23 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v26 + 8))(v4, v2, v23);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v5);
  *(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 184)) = v22;
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

double sub_1006D9610()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  double result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011C4368);
  v26 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011C4370);
  v25 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011B8E60);
  v9 = type metadata accessor for MusicVideo(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = *(unsigned __int8 *)(v10 + 80);
  v13 = (v12 + 32) & ~v12;
  v14 = swift_allocObject(v8, v13 + v11, v12 | 7);
  *(_OWORD *)(v14 + 16) = xmmword_100EA7AA0;
  v29 = v9;
  v15 = sub_100048748(&qword_1011C4378, (uint64_t (*)(uint64_t))&type metadata accessor for MusicVideo, (uint64_t)&unk_100EAA628);
  v30 = v15;
  KeyPath = swift_getKeyPath(&unk_100ECB400);
  v27 = v9;
  v28 = v15;
  v17 = swift_getKeyPath(&unk_100ECB438);
  static Published.subscript.getter((_QWORD *)(v14 + v13), v1, KeyPath, v17);
  swift_release();
  swift_release();
  v18 = sub_100048748(&qword_1011A0BA8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicVideo, (uint64_t)&protocol conformance descriptor for MusicVideo);
  MusicLibraryMapping.Request.init(mappingItems:)(v14, v9, v18);
  MusicLibraryMapping.Request.shouldResolveUnfetchedItems.setter(1, v5);
  v19 = sub_100049F28(&qword_1011C4380, &qword_1011C4370, (uint64_t)&protocol conformance descriptor for MusicLibraryMapping.Request<A>);
  *(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 176)) = MusicAutoupdatableRequest.autoupdatingResponse.getter(v5, v19);
  swift_retain();
  v20 = swift_release();
  dispatch thunk of MusicAutoupdatingResponse.$response.getter(v20);
  v21 = sub_100049F28(&qword_1011C4388, &qword_1011C4368, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  swift_retain();
  v22 = Publisher<>.sink(receiveValue:)(sub_1006DB768, v1, v2, v21);
  swift_release();
  v23 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v26 + 8))(v4, v2, v23);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v5);
  *(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 184)) = v22;
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_1006D98CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t KeyPath;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t (*v51)(char *, char *, uint64_t);
  uint64_t v52;

  v50 = a2;
  v3 = sub_100007E8C(&qword_1011C4450);
  __chkstk_darwin(v3);
  v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = (uint64_t (*)(char *, char *, uint64_t))sub_100007E8C(&qword_10119D3A0);
  __chkstk_darwin(v51);
  v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v45 - v9;
  v11 = type metadata accessor for MusicMovie(0);
  v52 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v48 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v49 = (char *)&v45 - v14;
  __chkstk_darwin(v15);
  v47 = (char *)&v45 - v16;
  v17 = sub_100007E8C(&qword_1011C4458);
  __chkstk_darwin(v17);
  v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100007E8C(&qword_1011C4460);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)&v45 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(a1, (uint64_t)v19, &qword_1011C4458);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
  {
    v24 = &qword_1011C4458;
    v25 = (uint64_t)v19;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v23, v19, v20);
    v46 = v23;
    v26 = MusicLibraryMapping.Response.mappedItems.getter(v20);
    v27 = *(_QWORD *)(v26 + 16);
    v28 = sub_100007E8C(&qword_1011C4468);
    v29 = *(_QWORD *)(v28 - 8);
    if (v27)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v29 + 16))(v5, v26 + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80)), v28);
      v30 = 0;
    }
    else
    {
      v30 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56))(v5, v30, 1, v28);
    swift_bridgeObjectRelease(v26);
    v31 = sub_100007E8C(&qword_1011C4468);
    v32 = *(_QWORD *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v5, 1, v31) == 1)
    {
      sub_10004FF60((uint64_t)v5, &qword_1011C4450);
      v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v52 + 56);
      v33(v10, 1, 1, v11);
    }
    else
    {
      MusicLibraryMapping.MappedItem.item.getter(v31);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v31);
      v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v52 + 56);
      v33(v10, 0, 1, v11);
    }
    if (swift_dynamicCast(v7, v10, v51, v11, 6))
    {
      v33(v7, 0, 1, v11);
      v34 = v52;
      v35 = v47;
      (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v47, v7, v11);
      v51 = *(uint64_t (**)(char *, char *, uint64_t))(v34 + 16);
      v36 = v49;
      v37 = v51(v49, v35, v11);
      __chkstk_darwin(v37);
      *(&v45 - 2) = v11;
      v38 = sub_100048748(&qword_1011C4438, (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie, (uint64_t)&unk_100EAA708);
      *(&v45 - 1) = v38;
      KeyPath = swift_getKeyPath(&unk_100ECB400);
      __chkstk_darwin(KeyPath);
      *(&v45 - 2) = v11;
      *(&v45 - 1) = v38;
      v40 = swift_getKeyPath(&unk_100ECB438);
      v41 = v48;
      v51(v48, v36, v11);
      v42 = v50;
      swift_retain();
      static Published.subscript.setter(v41, v42, KeyPath, v40);
      v43 = *(void (**)(char *, uint64_t))(v34 + 8);
      v43(v36, v11);
      v43(v35, v11);
      return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v46, v20);
    }
    v33(v7, 1, 1, v11);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v46, v20);
    v24 = &qword_10119D3A0;
    v25 = (uint64_t)v7;
  }
  return sub_10004FF60(v25, v24);
}

uint64_t sub_1006D9D8C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t KeyPath;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t (*v51)(char *, char *, uint64_t);
  uint64_t v52;

  v50 = a2;
  v3 = sub_100007E8C(&qword_1011C43F0);
  __chkstk_darwin(v3);
  v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = (uint64_t (*)(char *, char *, uint64_t))sub_100007E8C(&qword_10119FD80);
  __chkstk_darwin(v51);
  v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v45 - v9;
  v11 = type metadata accessor for TVEpisode(0);
  v52 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v48 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v49 = (char *)&v45 - v14;
  __chkstk_darwin(v15);
  v47 = (char *)&v45 - v16;
  v17 = sub_100007E8C(&qword_1011C43F8);
  __chkstk_darwin(v17);
  v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100007E8C(&qword_1011C4400);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)&v45 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(a1, (uint64_t)v19, &qword_1011C43F8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
  {
    v24 = &qword_1011C43F8;
    v25 = (uint64_t)v19;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v23, v19, v20);
    v46 = v23;
    v26 = MusicLibraryMapping.Response.mappedItems.getter(v20);
    v27 = *(_QWORD *)(v26 + 16);
    v28 = sub_100007E8C(&qword_1011C4408);
    v29 = *(_QWORD *)(v28 - 8);
    if (v27)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v29 + 16))(v5, v26 + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80)), v28);
      v30 = 0;
    }
    else
    {
      v30 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56))(v5, v30, 1, v28);
    swift_bridgeObjectRelease(v26);
    v31 = sub_100007E8C(&qword_1011C4408);
    v32 = *(_QWORD *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v5, 1, v31) == 1)
    {
      sub_10004FF60((uint64_t)v5, &qword_1011C43F0);
      v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v52 + 56);
      v33(v10, 1, 1, v11);
    }
    else
    {
      MusicLibraryMapping.MappedItem.item.getter(v31);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v31);
      v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v52 + 56);
      v33(v10, 0, 1, v11);
    }
    if (swift_dynamicCast(v7, v10, v51, v11, 6))
    {
      v33(v7, 0, 1, v11);
      v34 = v52;
      v35 = v47;
      (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v47, v7, v11);
      v51 = *(uint64_t (**)(char *, char *, uint64_t))(v34 + 16);
      v36 = v49;
      v37 = v51(v49, v35, v11);
      __chkstk_darwin(v37);
      *(&v45 - 2) = v11;
      v38 = sub_100048748(&qword_1011C43D8, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&unk_100EAA698);
      *(&v45 - 1) = v38;
      KeyPath = swift_getKeyPath(&unk_100ECB400);
      __chkstk_darwin(KeyPath);
      *(&v45 - 2) = v11;
      *(&v45 - 1) = v38;
      v40 = swift_getKeyPath(&unk_100ECB438);
      v41 = v48;
      v51(v48, v36, v11);
      v42 = v50;
      swift_retain();
      static Published.subscript.setter(v41, v42, KeyPath, v40);
      v43 = *(void (**)(char *, uint64_t))(v34 + 8);
      v43(v36, v11);
      v43(v35, v11);
      return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v46, v20);
    }
    v33(v7, 1, 1, v11);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v46, v20);
    v24 = &qword_10119FD80;
    v25 = (uint64_t)v7;
  }
  return sub_10004FF60(v25, v24);
}

uint64_t sub_1006DA24C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t KeyPath;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t (*v51)(char *, char *, uint64_t);
  uint64_t v52;

  v50 = a2;
  v3 = sub_100007E8C(&qword_1011C4390);
  __chkstk_darwin(v3);
  v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = (uint64_t (*)(char *, char *, uint64_t))sub_100007E8C(&qword_1011B59B0);
  __chkstk_darwin(v51);
  v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v45 - v9;
  v11 = type metadata accessor for MusicVideo(0);
  v52 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v48 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v49 = (char *)&v45 - v14;
  __chkstk_darwin(v15);
  v47 = (char *)&v45 - v16;
  v17 = sub_100007E8C(&qword_1011C4398);
  __chkstk_darwin(v17);
  v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100007E8C(&qword_1011C43A0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)&v45 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(a1, (uint64_t)v19, &qword_1011C4398);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
  {
    v24 = &qword_1011C4398;
    v25 = (uint64_t)v19;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v23, v19, v20);
    v46 = v23;
    v26 = MusicLibraryMapping.Response.mappedItems.getter(v20);
    v27 = *(_QWORD *)(v26 + 16);
    v28 = sub_100007E8C(&qword_1011C43A8);
    v29 = *(_QWORD *)(v28 - 8);
    if (v27)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v29 + 16))(v5, v26 + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80)), v28);
      v30 = 0;
    }
    else
    {
      v30 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56))(v5, v30, 1, v28);
    swift_bridgeObjectRelease();
    v31 = sub_100007E8C(&qword_1011C43A8);
    v32 = *(_QWORD *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v5, 1, v31) == 1)
    {
      sub_10004FF60((uint64_t)v5, &qword_1011C4390);
      v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v52 + 56);
      v33(v10, 1, 1, v11);
    }
    else
    {
      MusicLibraryMapping.MappedItem.item.getter(v31);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v31);
      v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v52 + 56);
      v33(v10, 0, 1, v11);
    }
    if (swift_dynamicCast(v7, v10, v51, v11, 6))
    {
      v33(v7, 0, 1, v11);
      v34 = v52;
      v35 = v47;
      (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v47, v7, v11);
      v51 = *(uint64_t (**)(char *, char *, uint64_t))(v34 + 16);
      v36 = v49;
      v37 = v51(v49, v35, v11);
      __chkstk_darwin(v37);
      *(&v45 - 2) = v11;
      v38 = sub_100048748(&qword_1011C4378, (uint64_t (*)(uint64_t))&type metadata accessor for MusicVideo, (uint64_t)&unk_100EAA628);
      *(&v45 - 1) = v38;
      KeyPath = swift_getKeyPath(&unk_100ECB400);
      __chkstk_darwin(KeyPath);
      *(&v45 - 2) = v11;
      *(&v45 - 1) = v38;
      v40 = swift_getKeyPath(&unk_100ECB438);
      v41 = v48;
      v51(v48, v36, v11);
      v42 = v50;
      swift_retain();
      static Published.subscript.setter(v41, v42, KeyPath, v40);
      v43 = *(void (**)(char *, uint64_t))(v34 + 8);
      v43(v36, v11);
      v43(v35, v11);
      return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v46, v20);
    }
    v33(v7, 1, 1, v11);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v46, v20);
    v24 = &qword_1011B59B0;
    v25 = (uint64_t)v7;
  }
  return sub_10004FF60(v25, v24);
}

uint64_t sub_1006DA70C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  return sub_1006DA794(a1, a2, a3, a4, a5, a6, a7, a8, a9, &qword_1011AF3A8, &qword_1011C43B0, &qword_1011C43B8, &qword_1011AF380);
}

uint64_t sub_1006DA750@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  return sub_1006DA794(a1, a2, a3, a4, a5, a6, a7, a8, a9, &qword_1011AF3A0, &qword_1011C4410, &qword_1011C4418, &qword_1011AF360);
}

uint64_t sub_1006DA794@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t *a10, unint64_t *a11, uint64_t *a12, uint64_t *a13)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v38;
  __int128 v39;

  v19 = sub_100007E8C(a10);
  v20 = sub_100049F28(a11, a10, (uint64_t)&unk_100EAA8E0);
  *(_QWORD *)a9 = ObservedObject.init(wrappedValue:)(a1, v19, v20);
  *(_QWORD *)(a9 + 8) = v21;
  v38 = a2;
  v22 = sub_100007E8C(a12);
  State.init(wrappedValue:)(&v38, v22);
  *(_OWORD *)(a9 + 16) = v39;
  *(_QWORD *)(a9 + 32) = a3;
  *(_QWORD *)(a9 + 40) = a4;
  *(_QWORD *)(a9 + 48) = a5;
  *(_QWORD *)(a9 + 56) = a6;
  *(_QWORD *)(a9 + 64) = sub_1000DEC04;
  *(_QWORD *)(a9 + 72) = 0;
  *(_BYTE *)(a9 + 80) = 0;
  v23 = type metadata accessor for NavigationPusher();
  v24 = sub_100048748(&qword_10119F060, (uint64_t (*)(uint64_t))type metadata accessor for NavigationPusher, (uint64_t)&unk_100EC8D64);
  *(_QWORD *)(a9 + 88) = EnvironmentObject.init()(v23, v24);
  *(_QWORD *)(a9 + 96) = v25;
  *(_QWORD *)(a9 + 104) = a7;
  *(_QWORD *)(a9 + 112) = a8;
  *(_QWORD *)(a9 + 120) = swift_getKeyPath(&unk_100ECB358);
  *(_BYTE *)(a9 + 128) = 0;
  *(_QWORD *)(a9 + 136) = swift_getKeyPath(&unk_100ECB380);
  *(_QWORD *)(a9 + 144) = 0;
  *(_BYTE *)(a9 + 152) = 0;
  *(_QWORD *)(a9 + 160) = swift_getKeyPath(&unk_100ECB3A8);
  *(_QWORD *)(a9 + 168) = 0;
  *(_BYTE *)(a9 + 176) = 0;
  v26 = type metadata accessor for TabSelectionManager(0);
  v27 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
  *(_QWORD *)(a9 + 184) = EnvironmentObject.init()(v26, v27);
  *(_QWORD *)(a9 + 192) = v28;
  v29 = sub_100007E8C(&qword_10119F4E8);
  v30 = sub_100049F28(&qword_1011B4E50, &qword_10119F4E8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *(_QWORD *)(a9 + 200) = EnvironmentObject.init()(v29, v30);
  *(_QWORD *)(a9 + 208) = v31;
  v32 = (_QWORD *)(a9 + *(int *)(sub_100007E8C(a13) + 80));
  *v32 = swift_getKeyPath(&unk_100ECB3D0);
  v33 = sub_100007E8C(&qword_10119F4E0);
  return swift_storeEnumTagMultiPayload(v32, v33, 0);
}

uint64_t sub_1006DA9A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  int v19;
  int v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  double *v36;
  double (**v37)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  char *v38;
  char *v39;
  char *v40;
  uint64_t v42;
  uint64_t v43;

  v43 = a2;
  v4 = sub_100007E8C(&qword_1011C4318);
  __chkstk_darwin(v4);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)sub_100007E8C(&qword_1011C4310);
  __chkstk_darwin(v7);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = swift_allocObject(&unk_1010D77A8, 24, 7);
  *(_QWORD *)(v10 + 16) = v2;
  sub_10004A160(a1, (uint64_t)v6, &qword_1011C4318);
  v11 = v2;
  v42 = static HorizontalAlignment.leading.getter(v11);
  v12 = swift_allocObject(&unk_1010D77D0, 24, 7);
  *(_QWORD *)(v12 + 16) = v11;
  v13 = swift_allocObject(&unk_1010D77F8, 24, 7);
  *(_QWORD *)(v13 + 16) = v11;
  v14 = swift_allocObject(&unk_1010D7820, 24, 7);
  *(_QWORD *)(v14 + 16) = v11;
  v15 = static Edge.Set.top.getter(v11);
  v16 = v15;
  v17 = static Edge.Set.bottom.getter(v15);
  v18 = Edge.Set.init(rawValue:)(0);
  v19 = Edge.Set.init(rawValue:)(v18);
  if (Edge.Set.init(rawValue:)(v19 & v16) != v16)
    v18 = Edge.Set.init(rawValue:)(v18 | v16);
  v20 = Edge.Set.init(rawValue:)(v18);
  if (Edge.Set.init(rawValue:)(v20 & v17) != v17)
    v18 = Edge.Set.init(rawValue:)(v18 | v17);
  v21 = EdgeInsets.init(_:length:)(v18, 12.0);
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v29 = static VerticalAlignment.top.getter(v28);
  v30 = &v9[v7[32]];
  *(_QWORD *)v30 = swift_getKeyPath(&unk_100ECB288);
  *((_QWORD *)v30 + 1) = 0;
  v30[16] = 0;
  v31 = &v9[v7[33]];
  *(_QWORD *)v31 = swift_getKeyPath(&unk_100ECB2B0);
  v31[8] = 0;
  v32 = &v9[v7[34]];
  *(_QWORD *)v32 = swift_getKeyPath(&unk_100ECB2D8);
  v33 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  swift_storeEnumTagMultiPayload(v32, v33, 0);
  v34 = &v9[v7[35]];
  *(_QWORD *)v34 = swift_getKeyPath(&unk_100ECB308);
  *(_OWORD *)(v34 + 8) = 0u;
  *(_OWORD *)(v34 + 24) = 0u;
  v34[40] = 0;
  v35 = &v9[v7[36]];
  *(_QWORD *)v35 = swift_getKeyPath(&unk_100ECB330);
  *((_QWORD *)v35 + 1) = 0;
  *((_QWORD *)v35 + 2) = 0;
  *((_QWORD *)v35 + 3) = 0;
  v35[32] = 0;
  *(_QWORD *)v9 = sub_1000779D8;
  *((_QWORD *)v9 + 1) = v10;
  v9[16] = 2;
  sub_100065228((uint64_t)v6, (uint64_t)&v9[v7[24]], &qword_1011C4318);
  v36 = (double *)&v9[v7[25]];
  *v36 = v21;
  *((_QWORD *)v36 + 1) = v23;
  *((_QWORD *)v36 + 2) = v25;
  *((_QWORD *)v36 + 3) = v27;
  *(_QWORD *)&v9[v7[26]] = v42;
  *(_QWORD *)&v9[v7[27]] = v29;
  v37 = (double (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&v9[v7[28]];
  *v37 = sub_100385F3C;
  v37[1] = 0;
  v38 = &v9[v7[29]];
  *(_QWORD *)v38 = UIScreen.Dimensions.size.getter;
  *((_QWORD *)v38 + 1) = v12;
  v39 = &v9[v7[30]];
  *(_QWORD *)v39 = sub_1006DB334;
  *((_QWORD *)v39 + 1) = v13;
  v40 = &v9[v7[31]];
  *(_QWORD *)v40 = UIScreen.Dimensions.size.getter;
  *((_QWORD *)v40 + 1) = v14;
  return sub_100065228((uint64_t)v9, v43, &qword_1011C4310);
}

uint64_t sub_1006DAD08(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAA450, 1);
}

uint64_t sub_1006DAD18@<X0>(_QWORD *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v45 = a1;
  v49 = a3;
  v47 = sub_100007E8C(&qword_1011C4328);
  __chkstk_darwin(v47);
  v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v6);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_100007E8C(&qword_1011C4330);
  __chkstk_darwin(v48);
  v46 = (uint64_t)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v10);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for MusicVideo(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v42 - v18;
  sub_10004A160(a2, (uint64_t)v12, (uint64_t *)&unk_1011A20D0);
  v20 = type metadata accessor for GenericMusicItem(0);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v12, 1, v20) == 1)
  {
    sub_10004FF60((uint64_t)v12, (uint64_t *)&unk_1011A20D0);
  }
  else
  {
    if ((*(unsigned int (**)(char *, uint64_t))(v21 + 88))(v12, v20) == enum case for GenericMusicItem.musicVideo(_:))
    {
      (*(void (**)(char *, uint64_t))(v21 + 96))(v12, v20);
      v43 = v14;
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v12, v13);
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v16, v19, v13);
      v22 = v44;
      sub_100886654(a2, v8);
      v23 = sub_100007E8C(&qword_1011C4340);
      swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
      v45 = sub_1006DB3AC((uint64_t)v22, v16, (uint64_t)v8);

      v24 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
      v25 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
      v26 = EnvironmentObject.init()(v24, v25);
      v28 = v27;
      v29 = type metadata accessor for NoticePresenter(0);
      v30 = sub_100048748((unint64_t *)&unk_1011C72F0, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
      v31 = EnvironmentObject.init()(v29, v30);
      v33 = v32;
      v34 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
      v35 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
      v36 = EnvironmentObject.init()(v34, v35);
      v37 = v46;
      sub_1006DA794((uint64_t)v45, 0, v26, v28, v31, v33, v36, v38, v46, &qword_1011C4340, &qword_1011C4348, &qword_1011C4350, &qword_1011C4330);
      sub_10004A160(v37, (uint64_t)v5, &qword_1011C4330);
      swift_storeEnumTagMultiPayload(v5, v47, 0);
      v39 = sub_100049F28(&qword_1011C4338, &qword_1011C4330, (uint64_t)&unk_100EAA890);
      _ConditionalContent<>.init(storage:)(v5, v48, &type metadata for EmptyView, v39, &protocol witness table for EmptyView);
      sub_10004FF60(v37, &qword_1011C4330);
      return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v19, v13);
    }
    (*(void (**)(char *, uint64_t))(v21 + 8))(v12, v20);
  }
  swift_storeEnumTagMultiPayload(v5, v47, 1);
  v41 = sub_100049F28(&qword_1011C4338, &qword_1011C4330, (uint64_t)&unk_100EAA890);
  return _ConditionalContent<>.init(storage:)(v5, v48, &type metadata for EmptyView, v41, &protocol witness table for EmptyView);
}

_QWORD *sub_1006DB190()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v0 = JSMusicVideoViewModel.item.getter();
  if (!v0)
    return _swiftEmptyArrayStorage;
  v1 = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  v3 = swift_allocObject(v2, 40, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100EA7A90;
  *(_QWORD *)(v3 + 32) = v1;
  v5 = v3;
  specialized Array._endMutation()(v3);
  return (_QWORD *)v5;
}

uint64_t sub_1006DB204(uint64_t a1)
{
  uint64_t result;

  result = sub_100048748(&qword_1011C42E0, type metadata accessor for JSMusicVideoViewModel, (uint64_t)&protocol conformance descriptor for JSMusicVideoViewModel);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1006DB240(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAA428, 1);
}

void sub_1006DB250(uint64_t *a1@<X8>)
{
  id *v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *v1;
  v4 = sub_100815600(v3);
  v6 = v5;
  v8 = v7;
  v10 = v9;

  *a1 = v4;
  a1[1] = v6;
  a1[2] = v8;
  a1[3] = v10;
}

ValueMetadata *type metadata accessor for VideoDetailReuseType()
{
  return &type metadata for VideoDetailReuseType;
}

uint64_t sub_1006DB2B8()
{
  return sub_100049F28(&qword_1011AA290, &qword_1011AA298, (uint64_t)&unk_100ED58E0);
}

uint64_t sub_1006DB2E4()
{
  return sub_100049F28(&qword_1011C4308, &qword_1011C4310, (uint64_t)&unk_100EA8520);
}

uint64_t sub_1006DB310()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1006DB334@<X0>(_QWORD **a1@<X1>, uint64_t a2@<X8>)
{
  _QWORD *v4;
  uint64_t v5;

  v4 = *a1;
  v5 = sub_100007E8C(&qword_1011C4320);
  return sub_1006DAD18(v4, (uint64_t)a1 + *(int *)(v5 + 28), a2);
}

_QWORD *sub_1006DB3AC(uint64_t a1, char *a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void **v24;
  void *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  __n128 v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  _QWORD *v34;
  uint64_t v36;
  uint64_t v37;
  _BYTE v38[24];
  char v39[24];

  v4 = v3;
  v37 = a3;
  v8 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v8);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MusicVideo(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v36 - v16;
  v18 = sub_100007E8C(&qword_10119E460);
  v19 = __chkstk_darwin(v18);
  v21 = (char *)&v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)((char *)v4 + *(_QWORD *)(*v4 + 176)) = 0;
  *(_QWORD *)((char *)v4 + *(_QWORD *)(*v4 + 184)) = 0;
  v4[2] = MusicVideo.title.getter(v19);
  v4[3] = v22;
  v4[4] = sub_1000F1E70();
  v4[5] = v23;
  v24 = (void **)(a1 + OBJC_IVAR____TtC11MusicJSCore21JSMusicVideoViewModel_containerDetailLink);
  swift_beginAccess(v24, v39, 0, 0);
  v25 = *v24;
  v4[6] = *v24;
  v4[7] = MusicVideo.artistName.getter(v25);
  v4[8] = v26;
  v4[10] = 0;
  v4[11] = 0;
  v4[9] = 0;
  sub_10004A160(a3, (uint64_t)v4 + qword_10124C7D8, (uint64_t *)&unk_1011A3E10);
  v27 = (char *)v4 + qword_10124C7E0;
  v28 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v27, 4, 10, v28);
  MusicVideo.immersiveURL.getter(v29);
  sub_100065228((uint64_t)v21, (uint64_t)v4 + qword_10124C7E8, &qword_10119E460);
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v30(v17, (uint64_t)a2, v11);
  v31 = swift_beginAccess((char *)v4 + *(_QWORD *)(*v4 + 168), v38, 33, 0);
  ((void (*)(char *, char *, uint64_t, __n128))v30)(v14, v17, v11, v31);
  Published.init(initialValue:)(v14, v11);
  v32 = *(void (**)(char *, uint64_t))(v12 + 8);
  v32(v17, v11);
  swift_endAccess(v38);
  v33 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v10, 1, 1, v33);
  v34 = (_QWORD *)swift_allocObject(&unk_1010D7848, 40, 7);
  v34[2] = 0;
  v34[3] = 0;
  v34[4] = v4;
  swift_retain();
  sub_100166D14((uint64_t)v10, (uint64_t)&unk_1011C4360, (uint64_t)v34);
  swift_release();
  sub_10004FF60(v37, (uint64_t *)&unk_1011A3E10);
  v32(a2, v11);
  return v4;
}

uint64_t sub_1006DB6BC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1006DB6E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_1011C435C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10005AEE4;
  v3[2] = v2;
  return swift_task_switch(sub_1006D8FFC, 0, 0);
}

uint64_t sub_1006DB750()
{
  return 16;
}

__n128 sub_1006DB75C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1006DB768(uint64_t a1)
{
  uint64_t v1;

  return sub_1006DA24C(a1, v1);
}

uint64_t sub_1006DB770(uint64_t a1)
{
  uint64_t v1;

  return sub_1006D9D8C(a1, v1);
}

uint64_t sub_1006DB778(uint64_t a1)
{
  uint64_t v1;

  return sub_1006D98CC(a1, v1);
}

NSString sub_1006DB78C()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_10124D818 = (uint64_t)result;
  return result;
}

NSString sub_1006DB7C0()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_10124D820 = (uint64_t)result;
  return result;
}

NSString sub_1006DB7F4()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_10124D828 = (uint64_t)result;
  return result;
}

id sub_1006DB92C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)_s8ActivityCMa();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t _s8ActivityCMa()
{
  return objc_opt_self(_TtCC5Music35LyricsSharingActivityViewController8Activity);
}

void sub_1006DB9DC(char a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v3);
  __asm { BR              X10 }
}

uint64_t sub_1006DBA78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = String.LocalizationValue.init(stringLiteral:)(0x7972617262694CLL, 0xE700000000000000);
  static Locale.current.getter(v2);
  return String.init(localized:table:bundle:locale:comment:)(v1, 0, 0, 0, v0, "Tab name for 'Library'", 22, 2);
}

void sub_1006DBC58(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1006DBC94()
{
  unint64_t v0;
  uint64_t v1;

  v0 = sub_100055B68();
  v1 = ((uint64_t (*)(_QWORD *, unint64_t))StringProtocol.capitalized.getter)(&type metadata for String, v0);
  swift_bridgeObjectRelease(0xE700000000000000);
  return v1;
}

void sub_1006DBD40(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  id v7;
  id v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  void *v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;

  v2 = sub_100007E8C((uint64_t *)&unk_1011C44C0);
  __chkstk_darwin(v2);
  v3 = sub_100007E8C((uint64_t *)&unk_1011CEF30);
  __chkstk_darwin(v3);
  v4 = sub_100007E8C(&qword_1011C44D0);
  __chkstk_darwin(v4);
  LOBYTE(v42) = 6;
  v5 = sub_10004D63C();
  if ((FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v5) & 1) == 0)
    __asm { BR              X10 }
  v6 = a1;
  v40 = (void *)objc_opt_self(UIApplication);
  v7 = objc_msgSend(v40, "sharedApplication");
  v8 = objc_msgSend(v7, "connectedScenes");
  v9 = sub_1001B10A4();
  v10 = sub_1000A569C();
  v11 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v8, v9, v10);

  sub_10079470C(v11);
  v13 = v12;
  swift_bridgeObjectRelease(v11);
  if ((unint64_t)v13 >> 62)
  {
    if (v13 < 0)
      v20 = v13;
    else
      v20 = v13 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v21 = _CocoaArrayWrapper.endIndex.getter(v20);
    swift_bridgeObjectRelease(v13);
    if (v21)
    {
LABEL_4:
      if ((v13 & 0xC000000000000001) != 0)
      {
        v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v13);
      }
      else
      {
        if (!*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          JUMPOUT(0x1006DC424);
        }
        v14 = *(id *)(v13 + 32);
      }
      v15 = v14;

      v16 = objc_msgSend(v15, "delegate", swift_bridgeObjectRelease(v13).n128_f64[0]);
      if (v16
        && (v41 = (uint64_t)v16,
            v17 = sub_100007E8C(&qword_1011A9300),
            v18 = sub_100007E8C(&qword_1011A3120),
            (swift_dynamicCast(&v42, &v41, v17, v18, 6) & 1) != 0))
      {
        if (*((_QWORD *)&v43 + 1))
        {
          v19 = *(_QWORD *)(*sub_100007E68(&v42, *((uint64_t *)&v43 + 1))
                          + OBJC_IVAR____TtC5Music17MainSceneDelegate_interfaceContext);
          swift_retain();
          _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v42);

          if (v19)
          {
            if (*(_QWORD *)(v19 + 16))
            {
              swift_retain();
              sub_10076F638(v6);
              __asm { BR              X10 }
            }
            swift_release();
          }
LABEL_24:
          if (qword_10119C4F8 != -1)
            goto LABEL_31;
          while (1)
          {
            v22 = type metadata accessor for Logger(0);
            v23 = sub_100048B14(v22, (uint64_t)qword_10124D548);
            v24 = Logger.logObject.getter(v23);
            v25 = static os_log_type_t.error.getter(v24);
            if (!os_log_type_enabled(v24, v25))
              goto LABEL_41;
            v26 = (uint8_t *)swift_slowAlloc(12, -1);
            v27 = swift_slowAlloc(32, -1);
            *(_QWORD *)&v42 = v27;
            *(_DWORD *)v26 = 136446210;
            v28 = objc_msgSend(v40, "sharedApplication");
            v29 = objc_msgSend(v28, "connectedScenes");
            v30 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v29, v9, v10);

            sub_10079470C(v30);
            v32 = v31;
            swift_bridgeObjectRelease(v30);
            if ((unint64_t)v32 >> 62)
            {
              if (v32 < 0)
                v34 = v32;
              else
                v34 = v32 & 0xFFFFFFFFFFFFFF8;
              swift_bridgeObjectRetain();
              v33 = _CocoaArrayWrapper.endIndex.getter(v34);
              swift_bridgeObjectRelease(v32);
              if (!v33)
                goto LABEL_40;
            }
            else
            {
              v33 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
              if (!v33)
                goto LABEL_40;
            }
            if ((v32 & 0xC000000000000001) != 0)
              break;
            if (*(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              v35 = *(id *)(v32 + 32);
LABEL_39:
              v33 = (uint64_t)v35;
LABEL_40:

              swift_bridgeObjectRelease(v32);
              v41 = v33;
              v36 = sub_100007E8C(&qword_1011BF718);
              v37 = String.init<A>(describing:)(&v41, v36);
              v39 = v38;
              v41 = sub_100322200(v37, v38, (uint64_t *)&v42);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42);
              swift_bridgeObjectRelease(v39);
              _os_log_impl((void *)&_mh_execute_header, v24, v25, "Failed to retrieve page provider on mainScene=%{public}s", v26, 0xCu);
              swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v27, -1, -1);
              swift_slowDealloc(v26, -1, -1);
LABEL_41:

              _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001FLL, 0x8000000100E42810, "Music/ApplicationTabs.swift", 27, 2, 82, 0);
              __break(1u);
              JUMPOUT(0x1006DC900);
            }
            __break(1u);
LABEL_31:
            swift_once(&qword_10119C4F8, sub_10066DE80);
          }
          v35 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v32);
          goto LABEL_39;
        }
      }
      else
      {
        v44 = 0;
        v42 = 0u;
        v43 = 0u;
      }
      sub_1006DCBC4((uint64_t)&v42);

      goto LABEL_24;
    }
  }
  else if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_4;
  }

  swift_bridgeObjectRelease(v13);
  goto LABEL_24;
}

void TabIdentifier.musicTabID.getter(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1006DC990()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = enum case for MusicTabID.library(_:);
  v2 = ((uint64_t (*)(_QWORD))type metadata accessor for MusicTabID)(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v0, v1, v2);
}

uint64_t sub_1006DCA00@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = _s9MusicCore13TabIdentifierO0A0E05musicC2IDACSg0A2UI0acF0O_tcfC_0(a1);
  *a2 = result;
  return result;
}

void sub_1006DCA24()
{
  __asm { BR              X10 }
}

uint64_t sub_1006DCA50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = enum case for MusicTabID.library(_:);
  v2 = ((uint64_t (*)(_QWORD))type metadata accessor for MusicTabID)(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v0, v1, v2);
}

uint64_t _s9MusicCore13TabIdentifierO0A0E05musicC2IDACSg0A2UI0acF0O_tcfC_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  int v4;

  v2 = type metadata accessor for MusicTabID(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(a1, v2);
  if (v4 == enum case for MusicTabID.listenNow(_:))
    return 1;
  if (v4 == enum case for MusicTabID.browse(_:))
    return 2;
  if (v4 == enum case for MusicTabID.videos(_:))
    return 5;
  if (v4 == enum case for MusicTabID.radio(_:))
    return 3;
  if (v4 == enum case for MusicTabID.library(_:))
    return 0;
  if (v4 == enum case for MusicTabID.search(_:))
    return 4;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return 6;
}

uint64_t sub_1006DCBC4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100007E8C((uint64_t *)&unk_1011A3110);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

double sub_1006DCC04()
{
  unint64_t v0;
  double v2;

  v0 = sub_1004EABE8();
  EnvironmentValues.subscript.getter(&v2, &_s16ContainerSizeKeyVN, &_s16ContainerSizeKeyVN, v0);
  return v2;
}

double sub_1006DCC3C()
{
  unint64_t v0;
  double v2;

  v0 = sub_1006DD910();
  EnvironmentValues.subscript.getter(&v2, &_s29EnvironmentContainerInsetsKeyVN, &_s29EnvironmentContainerInsetsKeyVN, v0);
  return v2;
}

uint64_t sub_1006DCC78()
{
  unint64_t v0;
  uint64_t var1;

  v0 = sub_10069D5DC();
  EnvironmentValues.subscript.getter(&var1, &_s17SidebarVisibilityVN, &_s17SidebarVisibilityVN, v0);
  return var1;
}

void sub_1006DCCB0(uint64_t a1)
{
  id *v2;
  void (*v3)(uint64_t);
  id v4;

  v2 = (id *)MetricsReportingController.shared.unsafeMutableAddressor();
  v3 = *(void (**)(uint64_t))((swift_isaMask & *(_QWORD *)*v2) + 0x98);
  v4 = *v2;
  v3(a1);

}

uint64_t sub_1006DCD18()
{
  return swift_task_switch(sub_1006DCD2C, 0, 0);
}

uint64_t sub_1006DCD2C()
{
  uint64_t v0;

  sub_10004A07C(0, &qword_1011C45D8, CAPackage_ptr);
  static CAPackageDefinition.play.getter((_QWORD *)(v0 + 176));

  static CAPackageDefinition.skipForward.getter((_QWORD *)(v0 + 96));
  static CAPackageDefinition.favorite.getter((_QWORD *)(v0 + 16));

  objc_msgSend((id)objc_opt_self(MPCloudController), "migrateCellularDataPreferencesIfNeeded");
  sub_100591C34();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1006DD0AC()
{
  void *v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  char *v13;
  char *v14;
  void *v15;
  void *v16;
  unsigned __int8 v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  objc_super v21;

  v1 = v0;
  v2 = (void *)objc_opt_self(UIApplication);
  v3 = objc_msgSend(v2, "sharedApplication");
  v4 = objc_msgSend(v3, "connectedScenes");
  v5 = sub_10004A07C(0, &qword_1011A4630, UIScene_ptr);
  v6 = sub_1000A569C();
  v7 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v4, v5, v6);

  sub_10079470C(v7);
  v9 = v8;
  swift_bridgeObjectRelease();
  if (!((unint64_t)v9 >> 62))
  {
    if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_17:

    swift_bridgeObjectRelease();
LABEL_18:
    v21.receiver = v1;
    v21.super_class = (Class)type metadata accessor for ApplicationDelegate();
    objc_msgSendSuper2(&v21, "nextResponder");
    return;
  }
  if (v9 < 0)
    v19 = v9;
  else
    v19 = v9 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v20 = _CocoaArrayWrapper.endIndex.getter(v19);
  swift_bridgeObjectRelease();
  if (!v20)
    goto LABEL_17;
LABEL_3:
  if ((v9 & 0xC000000000000001) != 0)
  {
    v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v9);
LABEL_6:
    v11 = v10;

    v12 = objc_msgSend(v2, "sharedApplication", swift_bridgeObjectRelease().n128_f64[0]);
    sub_10076EB44();
    v14 = v13;

    if (v14)
    {
      UIWindowScene.mainWindow.getter();
      if (v15)
      {
        v16 = v15;
        v17 = objc_msgSend(v15, "isKeyWindow");

        if ((v17 & 1) != 0)
        {
          v18 = *(id *)&v14[OBJC_IVAR____TtC5Music17MainSceneDelegate_keyboardShortcutsManager];

          return;
        }
      }
      else
      {

      }
    }
    else
    {

    }
    goto LABEL_18;
  }
  if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v10 = *(id *)(v9 + 32);
    goto LABEL_6;
  }
  __break(1u);
}

id sub_1006DD3DC()
{
  char *v0;
  uint64_t v1;
  id v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  objc_super v11;

  v1 = OBJC_IVAR____TtC5Music19ApplicationDelegate_remoteRadioController;
  v2 = objc_allocWithZone((Class)MPRemoteRadioController);
  v3 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v2, "init");
  v4 = OBJC_IVAR____TtC5Music19ApplicationDelegate_carMetricsObserver;
  v5 = _s8ObserverCMa();
  v6 = swift_allocObject(v5, 24, 7);
  *(_QWORD *)(v6 + 16) = 0;
  v7 = (void *)MPCPlayActivityUtilitiesPlayEndNotification;
  v8 = type metadata accessor for NotificationObserver();
  swift_allocObject(v8, 64, 7);
  v9 = v7;
  swift_retain();
  *(_QWORD *)(v6 + 16) = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v9, 0, 1, 1, (uint64_t)sub_1006DD954, v6);
  swift_release();
  *(_QWORD *)&v3[v4] = v6;

  v11.receiver = v3;
  v11.super_class = (Class)type metadata accessor for ApplicationDelegate();
  return objc_msgSendSuper2(&v11, "init");
}

id sub_1006DD504()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ApplicationDelegate();
  return objc_msgSendSuper2(&v2, "dealloc");
}

double sub_1006DD56C()
{
  double result;

  result = 0.0;
  xmmword_1011C44E0 = 0u;
  *(_OWORD *)algn_1011C44F0 = 0u;
  return result;
}

double sub_1006DD580@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  if (qword_10119C718 != -1)
    swift_once(&qword_10119C718, sub_1006DD56C);
  result = *(double *)&xmmword_1011C44E0;
  v3 = *(_OWORD *)algn_1011C44F0;
  *a1 = xmmword_1011C44E0;
  a1[1] = v3;
  return result;
}

uint64_t sub_1006DD5D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8;

  v8 = sub_1006DE544();
  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

void sub_1006DD624()
{
  xmmword_1011C4500 = 0uLL;
}

double sub_1006DD634@<D0>(_OWORD *a1@<X8>)
{
  double result;

  if (qword_10119C720 != -1)
    swift_once(&qword_10119C720, sub_1006DD624);
  result = *(double *)&xmmword_1011C4500;
  *a1 = xmmword_1011C4500;
  return result;
}

uint64_t sub_1006DD688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  v8 = sub_100048748(&qword_1011C45E8, (uint64_t (*)(uint64_t))type metadata accessor for CGSize, (uint64_t)&protocol conformance descriptor for CGSize);
  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

uint64_t sub_1006DD6F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8;

  v8 = sub_1006DE598();
  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

uint64_t sub_1006DD740@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char *v4;
  char *v5;

  *a1 = swift_getKeyPath(&unk_100ECB510);
  v2 = sub_100007E8C(&qword_1011B5018);
  swift_storeEnumTagMultiPayload(a1, v2, 0);
  result = _s17RootPlaylistsViewVMa(0);
  v4 = (char *)a1 + *(int *)(result + 20);
  *(_QWORD *)v4 = sub_100468680;
  *((_QWORD *)v4 + 1) = 0;
  v4[16] = 0;
  v5 = (char *)a1 + *(int *)(result + 24);
  *(_QWORD *)v5 = sub_1006B7138;
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 0;
  return result;
}

uint64_t sub_1006DD7C0()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10004FACC(v0, qword_10124D830);
  sub_100048B14(v0, (uint64_t)qword_10124D830);
  return static Logger.music(_:)(0x73656E656353, 0xE600000000000000);
}

int main(int argc, const char **argv, const char **envp)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  objc_class *ObjCClassFromMetadata;
  NSString *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  type metadata accessor for ApplicationDelegate();
  v3 = static CommandLine.unsafeArgv.getter();
  v4 = ((uint64_t (*)(void))static CommandLine.argc.getter)();
  v5 = static CommandLine.argc.getter(v4);
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  v7 = NSStringFromClass(ObjCClassFromMetadata);
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v10 = v9;

  LODWORD(v7) = UIApplicationMain(_:_:_:_:)(v5, v3, 0, 0, v8, v10);
  swift_bridgeObjectRelease();
  exit((int)v7);
}

uint64_t type metadata accessor for ApplicationDelegate()
{
  return objc_opt_self(_TtC5Music19ApplicationDelegate);
}

uint64_t sub_1006DD8C0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAA5C0, 1);
}

uint64_t sub_1006DD8D0()
{
  return EnvironmentValues.multimodalListLayout.getter();
}

uint64_t sub_1006DD8F0()
{
  return EnvironmentValues.multimodalListLayout.getter();
}

unint64_t sub_1006DD910()
{
  unint64_t result;

  result = qword_1011C45B8;
  if (!qword_1011C45B8)
  {
    result = swift_getWitnessTable(&unk_100ECB574, &_s29EnvironmentContainerInsetsKeyVN);
    atomic_store(result, (unint64_t *)&qword_1011C45B8);
  }
  return result;
}

uint64_t sub_1006DD954(uint64_t a1)
{
  uint64_t v1;

  return sub_10062DE48(a1, v1);
}

uint64_t sub_1006DD95C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t *refreshed;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  _BYTE v18[24];

  v1 = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v2);
  v4 = &v18[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (qword_10119BEC8 != -1)
    swift_once(&qword_10119BEC8, sub_10034624C);
  refreshed = BackgroundRefreshController.shared.unsafeMutableAddressor();
  swift_retain();
  BackgroundRefreshController.registerAllTasks()();
  swift_release();
  v6 = *refreshed;
  UIScreen.Dimensions.size.getter(sub_1006DCCB0);
  v8 = v7;
  v10 = v9;
  swift_beginAccess(v6 + 16, v18, 1, 0);
  v11 = *(_QWORD *)(v6 + 16);
  v12 = *(_QWORD *)(v6 + 24);
  *(_QWORD *)(v6 + 16) = v8;
  *(_QWORD *)(v6 + 24) = v10;
  sub_10004BA30(v11, v12);
  if (qword_10119BEF0 != -1)
    swift_once(&qword_10119BEF0, sub_10034A560);
  sub_10034A59C();
  if (qword_10119B918 != -1)
    swift_once(&qword_10119B918, sub_1000FE7D4);
  TaskPriority.init(rawValue:)(21);
  v13 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v4, 0, 1, v13);
  v14 = swift_allocObject(&unk_1010D78C8, 32, 7);
  *(_QWORD *)(v14 + 16) = 0;
  *(_QWORD *)(v14 + 24) = 0;
  sub_1000E8908((uint64_t)v4, (uint64_t)&unk_1011C45D0, v14);
  swift_release();
  sub_10004FF60((uint64_t)v4, (uint64_t *)&unk_1011A13B0);
  v15 = objc_msgSend((id)objc_opt_self(UNUserNotificationCenter), "currentNotificationCenter");
  objc_msgSend(v15, "setDelegate:", v1);

  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5Music19ApplicationDelegate_remoteRadioController), "start");
  return 1;
}

id sub_1006DDB6C(void *a1, void *a2)
{
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  char **v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  id v42;
  uint64_t v43;

  if (qword_10119C728 != -1)
    swift_once(&qword_10119C728, sub_1006DD7C0);
  v4 = type metadata accessor for Logger(0);
  sub_100048B14(v4, (uint64_t)qword_10124D830);
  v5 = a1;
  v6 = a2;
  v7 = v5;
  v8 = v6;
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.default.getter();
  v11 = &selRef_setMetricsOverlay_;
  if (os_log_type_enabled(v9, v10))
  {
    v12 = swift_slowAlloc(22, -1);
    v13 = (_QWORD *)swift_slowAlloc(8, -1);
    v41 = swift_slowAlloc(32, -1);
    v43 = v41;
    *(_DWORD *)v12 = 136446466;
    v42 = objc_msgSend(v7, "role");
    type metadata accessor for Role(0);
    v15 = String.init<A>(describing:)(&v42, v14);
    v42 = (id)sub_100322200(v15, v16, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, &v43);

    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2114;
    v42 = v8;
    v17 = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, &v43);
    *v13 = v8;

    v11 = &selRef_setMetricsOverlay_;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Configuring scene for role=%{public}s, options: %{public}@", (uint8_t *)v12, 0x16u);
    v18 = sub_100007E8C((uint64_t *)&unk_1011A33E0);
    swift_arrayDestroy(v13, 1, v18);
    swift_slowDealloc(v13, -1, -1);
    swift_arrayDestroy(v41, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v41, -1, -1);
    swift_slowDealloc(v12, -1, -1);

  }
  else
  {

  }
  v19 = objc_msgSend(v7, v11[231]);
  v20 = objc_msgSend(objc_allocWithZone((Class)UISceneConfiguration), "initWithName:sessionRole:", 0, v19);

  v21 = objc_msgSend(v7, v11[231]);
  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIWindowSceneSessionRoleApplication);
  v24 = v23;
  v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  if (v22 == v26 && v24 == v25)
  {
    swift_bridgeObjectRelease_n(v24, 2);
LABEL_10:

    type metadata accessor for MainSceneDelegate();
    goto LABEL_11;
  }
  v27 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v24, v26, v25, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v27 & 1) != 0)
    goto LABEL_10;
  v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(_UIWindowSceneSessionRoleCarPlay);
  v31 = v30;
  v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  if (v29 == v33 && v31 == v32)
  {
    swift_bridgeObjectRelease_n(v31, 2);
LABEL_17:

    type metadata accessor for CarPlaySceneDelegate();
    goto LABEL_11;
  }
  v34 = _stringCompareWithSmolCheck(_:_:expecting:)(v29, v31, v33, v32, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v34 & 1) != 0)
    goto LABEL_17;
  v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(_UIWindowSceneSessionRoleSimplifiedApplication);
  v37 = v36;
  v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  if (v35 == v39 && v37 == v38)
  {

    swift_bridgeObjectRelease_n(v37, 2);
  }
  else
  {
    v40 = _stringCompareWithSmolCheck(_:_:expecting:)(v35, v37, v39, v38, 0);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v40 & 1) == 0)
      return v20;
  }
  type metadata accessor for ClarityUISceneDelegate();
LABEL_11:
  objc_msgSend(v20, "setDelegateClass:", swift_getObjCClassFromMetadata());
  return v20;
}

void sub_1006DDFD0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)&v8 = __chkstk_darwin(v6).n128_u64[0];
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(a1, "connectedScenes", v8);
  v12 = sub_10004A07C(0, &qword_1011A4630, UIScene_ptr);
  v13 = sub_1000A569C();
  v14 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v11, v12, v13);

  sub_10079470C(v14);
  v16 = v15;
  swift_bridgeObjectRelease();
  if ((unint64_t)v16 >> 62)
  {
    if (v16 < 0)
      v24 = v16;
    else
      v24 = v16 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v25 = _CocoaArrayWrapper.endIndex.getter(v24);
    swift_bridgeObjectRelease();
    if (v25)
      goto LABEL_3;
LABEL_11:
    swift_bridgeObjectRelease();
    return;
  }
  if (!*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_11;
LABEL_3:
  if ((v16 & 0xC000000000000001) != 0)
  {
    v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v16);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v17 = *(id *)(v16 + 32);
LABEL_6:
    v18 = v17;
    v19 = swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))(v10, a2, v6, v19);
    sub_100328A8C(a3);
    v21 = v20;
    v22 = type metadata accessor for LaunchOptions(0);
    swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
    v23 = v18;
    sub_100267918((uint64_t)v10, v21, v23);
    sub_100275D54();

    swift_release();
    return;
  }
  __break(1u);
}

uint64_t sub_1006DE47C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1006DE4A0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1011C45CC);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10005AEE4;
  return swift_task_switch(sub_1006DCD2C, 0, 0);
}

ValueMetadata *_s29EnvironmentContainerInsetsKeyVMa()
{
  return &_s29EnvironmentContainerInsetsKeyVN;
}

ValueMetadata *_s16ContainerSizeKeyVMa()
{
  return &_s16ContainerSizeKeyVN;
}

uint64_t sub_1006DE518()
{
  return sub_100048748(&qword_1011C45E0, _s17RootPlaylistsViewVMa, (uint64_t)&unk_100ECA730);
}

unint64_t sub_1006DE544()
{
  unint64_t result;

  result = qword_1011C45F0;
  if (!qword_1011C45F0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for EdgeInsets, &type metadata for EdgeInsets);
    atomic_store(result, (unint64_t *)&qword_1011C45F0);
  }
  return result;
}

ValueMetadata *_s17SidebarVisibilityVMa()
{
  return &_s17SidebarVisibilityVN;
}

unint64_t sub_1006DE598()
{
  unint64_t result;

  result = qword_1011C4600;
  if (!qword_1011C4600)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Visibility, &type metadata for Visibility);
    atomic_store(result, (unint64_t *)&qword_1011C4600);
  }
  return result;
}

void sub_1006DE5DC(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  Swift::String v31;
  char v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  unint64_t v37;
  unint64_t v38;
  _QWORD v39[5];
  uint64_t v40;

  v2 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v3 = a1;
    else
      v3 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v4 = __CocoaSet.makeIterator()(v3);
    v5 = sub_10004A07C(0, &qword_10119D458, _UITab_ptr);
    v6 = sub_1000EA1BC((unint64_t *)&qword_1011A0090, &qword_10119D458, _UITab_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    v7 = Set.Iterator.init(_cocoa:)(v39, v4, v5, v6);
    v2 = v39[0];
    v35 = v39[1];
    v8 = v39[2];
    v9 = v39[3];
    v10 = v39[4];
  }
  else
  {
    v11 = -1 << *(_BYTE *)(a1 + 32);
    v35 = a1 + 56;
    v12 = ~v11;
    v13 = -v11;
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v10 = v14 & *(_QWORD *)(a1 + 56);
    v7 = (_QWORD *)swift_bridgeObjectRetain();
    v8 = v12;
    v9 = 0;
  }
  v33 = v8;
  v34 = (unint64_t)(v8 + 64) >> 6;
  if ((v2 & 0x8000000000000000) == 0)
    goto LABEL_14;
LABEL_11:
  v15 = __CocoaSet.Iterator.next()(v7);
  if (!v15)
    goto LABEL_39;
  v16 = v15;
  v40 = v15;
  v17 = sub_10004A07C(0, &qword_10119D458, _UITab_ptr);
  swift_unknownObjectRetain(v16, v18);
  swift_dynamicCast(&v37, &v40, (char *)&type metadata for Swift.AnyObject + 8, v17, 7);
  v19 = (id)v37;
  *(_QWORD *)&v20 = swift_unknownObjectRelease(v16).n128_u64[0];
  v21 = v9;
  v22 = v10;
  if (!v19)
    goto LABEL_39;
  while (1)
  {
    v27 = objc_msgSend(v19, "_identifier", v20, v33);
    v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
    v30 = v29;

    v31._countAndFlagsBits = Library.Menu.Identifier.rawValue.getter(a2);
    v37 = 0xD00000000000001BLL;
    v38 = 0x8000000100E3BC20;
    String.append(_:)(v31);
    swift_bridgeObjectRelease();
    if (v28 == v37 && v30 == v38)
    {
      swift_bridgeObjectRelease_n(v30, 2);
      goto LABEL_39;
    }
    v32 = _stringCompareWithSmolCheck(_:_:expecting:)(v28, v30, v37, v38, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v32 & 1) != 0)
      goto LABEL_39;

    v9 = v21;
    v10 = v22;
    if (v2 < 0)
      goto LABEL_11;
LABEL_14:
    if (!v10)
      break;
    v22 = (v10 - 1) & v10;
    v23 = __clz(__rbit64(v10)) | (v9 << 6);
    v21 = v9;
LABEL_32:
    v19 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v23);
    if (!v19)
      goto LABEL_39;
  }
  v24 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
    return;
  }
  if (v24 >= v34)
    goto LABEL_39;
  v25 = *(_QWORD *)(v35 + 8 * v24);
  v21 = v9 + 1;
  if (v25)
    goto LABEL_31;
  v21 = v9 + 2;
  if (v9 + 2 >= v34)
    goto LABEL_39;
  v25 = *(_QWORD *)(v35 + 8 * v21);
  if (v25)
    goto LABEL_31;
  v21 = v9 + 3;
  if (v9 + 3 >= v34)
    goto LABEL_39;
  v25 = *(_QWORD *)(v35 + 8 * v21);
  if (v25)
    goto LABEL_31;
  v21 = v9 + 4;
  if (v9 + 4 >= v34)
    goto LABEL_39;
  v25 = *(_QWORD *)(v35 + 8 * v21);
  if (v25)
    goto LABEL_31;
  v21 = v9 + 5;
  if (v9 + 5 >= v34)
    goto LABEL_39;
  v25 = *(_QWORD *)(v35 + 8 * v21);
  if (v25)
  {
LABEL_31:
    v22 = (v25 - 1) & v25;
    v23 = __clz(__rbit64(v25)) + (v21 << 6);
    goto LABEL_32;
  }
  v26 = v9 + 6;
  while (v34 != v26)
  {
    v25 = *(_QWORD *)(v35 + 8 * v26++);
    if (v25)
    {
      v21 = v26 - 1;
      goto LABEL_31;
    }
  }
LABEL_39:
  sub_10004FA7C(v2);
}

char *sub_1006DE9A0(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  NSString v25;
  objc_class *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  _QWORD *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t KeyPath;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __n128 v70;
  uint64_t v71;
  id v72;
  void *v73;
  void *v74;
  id v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(char *, _UNKNOWN **, __n128);
  char *v88;
  __n128 v89;
  uint64_t v91;
  uint64_t inited;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  id v104;
  char *v105;
  char v106[24];
  id v107[3];
  char v108[48];
  objc_super v109;

  v3 = sub_100007E8C(&qword_1011CEEC0);
  v4 = *(_QWORD *)(v3 - 8);
  v100 = v3;
  v101 = v4;
  __chkstk_darwin(v3);
  v98 = (char *)&v91 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011C4770);
  v7 = *(_QWORD *)(v6 - 8);
  v102 = v6;
  v103 = v7;
  __chkstk_darwin(v6);
  v99 = (char *)&v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011A08F0);
  __chkstk_darwin(v9);
  v105 = (char *)&v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = sub_100007E8C((uint64_t *)&unk_1011C4780);
  v95 = *(_QWORD *)(v94 - 8);
  __chkstk_darwin(v94);
  v12 = (char *)&v91 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = sub_100007E8C((uint64_t *)&unk_1011BC990);
  v97 = *(_QWORD *)(v96 - 8);
  __chkstk_darwin(v96);
  v93 = (char *)&v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = &v1[OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource_onSelection];
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;
  v15 = OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource_selectedLibrary;
  type metadata accessor for MusicLibrary(0);
  v16 = v1;
  *(_QWORD *)&v1[v15] = static MusicLibrary.shared.getter(v16);
  v16[OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource_needsTabElementsUpdate] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource____lazy_storage___menuTabElementsController] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource____lazy_storage___editableMenuController] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource____lazy_storage___playlistsTabsController] = 0;
  v17 = &v16[OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource_createdPlaylist];
  v18 = type metadata accessor for Playlist(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  v19 = OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource_artworkCache;
  v20 = type metadata accessor for ArtworkPrefetchingController.CacheReference();
  v21 = swift_allocObject(v20, 41, 7);
  *(_QWORD *)(v21 + 16) = 0xD000000000000017;
  *(_QWORD *)(v21 + 24) = 0x8000000100E42BF0;
  *(_QWORD *)(v21 + 32) = 0;
  *(_BYTE *)(v21 + 40) = 1;
  *(_QWORD *)&v16[v19] = v21;
  *(_QWORD *)&v16[OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource____lazy_storage___cloudLibraryStatusView] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource_cloudLibraryStatus] = 0x80000000;
  *(_QWORD *)&v16[OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource____lazy_storage___playlistSortButton] = 0;
  v22 = OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource_sharedLibrariesController;
  v23 = type metadata accessor for SharedLibrariesController(0);
  swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
  *(_QWORD *)&v16[v22] = sub_10043046C();
  *(_QWORD *)&v16[OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource_sharedLibraryObservers] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource____lazy_storage___homeSharingButton] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource_rootTab] = a1;
  v24 = a1;

  v25 = String._bridgeToObjectiveC()();
  objc_msgSend(v24, "_setDefaultChildIdentifier:", v25);

  objc_msgSend(v24, "_setTabBarPlacement:", 4);
  objc_msgSend(v24, "_setAllowsReordering:", 1);
  v26 = (objc_class *)_s20LibraryTabDataSourceCMa(0);
  v109.receiver = v16;
  v109.super_class = v26;
  v27 = (char *)objc_msgSendSuper2(&v109, "init");
  v104 = v24;
  objc_msgSend(v24, "_setDelegate:", v27);
  sub_1006E06B4();
  v28 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  inited = swift_initStackObject(v28, v108);
  *(_OWORD *)(inited + 16) = xmmword_100EA7DB0;
  v91 = OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource_sharedLibrariesController;
  swift_beginAccess(*(_QWORD *)&v27[OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource_sharedLibrariesController]+ OBJC_IVAR____TtC5Music25SharedLibrariesController__availableSharedLibraries, v107, 33, 0);
  v29 = sub_100007E8C((uint64_t *)&unk_1011BC9A0);
  v30 = v12;
  Published.projectedValue.getter(v29);
  swift_endAccess(v107);
  v31 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
  v107[0] = (id)static OS_dispatch_queue.main.getter(v31, v32, v33, v34, v35, v36, v37, v38);
  v39 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56);
  v41 = (uint64_t)v105;
  v40(v105, 1, 1, v39);
  v42 = sub_100049F28((unint64_t *)&unk_1011BC9B0, (uint64_t *)&unk_1011C4780, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v43 = sub_1000EA1BC((unint64_t *)&qword_1011A89B0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
  v44 = v93;
  v45 = v94;
  Publisher.receive<A>(on:options:)(v107, v41, v94, v31, v42, v43);
  sub_10004FF60(v41, &qword_1011A08F0);

  (*(void (**)(char *, uint64_t))(v95 + 8))(v30, v45);
  v46 = swift_allocObject(&unk_1010D7B50, 24, 7);
  swift_unknownObjectWeakInit(v46 + 16);
  v47 = sub_100049F28((unint64_t *)&unk_1011BC9C0, (uint64_t *)&unk_1011BC990, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v48 = v96;
  v49 = Publisher<>.sink(receiveValue:)(sub_1006E7720, v46, v96, v47);
  v50 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v97 + 8))(v44, v48, v50);
  v51 = (_QWORD *)inited;
  *(_QWORD *)(inited + 32) = v49;
  swift_beginAccess(*(_QWORD *)&v27[v91] + OBJC_IVAR____TtC5Music25SharedLibrariesController__selectedLibrary, v107, 33, 0);
  v52 = sub_100007E8C((uint64_t *)&unk_1011C4790);
  v53 = v98;
  Published.projectedValue.getter(v52);
  v54 = swift_endAccess(v107);
  v107[0] = (id)static OS_dispatch_queue.main.getter(v54, v55, v56, v57, v58, v59, v60, v61);
  v62 = (uint64_t)v105;
  v40(v105, 1, 1, v39);
  v63 = sub_100049F28(&qword_1011BC9D0, &qword_1011CEEC0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v64 = v99;
  v65 = v100;
  Publisher.receive<A>(on:options:)(v107, v62, v100, v31, v63, v43);
  sub_10004FF60(v62, &qword_1011A08F0);

  (*(void (**)(char *, uint64_t))(v101 + 8))(v53, v65);
  KeyPath = swift_getKeyPath(&unk_100ECB7B8);
  v107[0] = v27;
  v67 = sub_100049F28(&qword_1011C47A0, (uint64_t *)&unk_1011C4770, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v68 = v102;
  v69 = Publisher<>.assign<A>(to:on:)(KeyPath, v107, v102, v67);
  v70 = swift_release();
  v71 = (*(uint64_t (**)(char *, uint64_t, __n128))(v103 + 8))(v64, v68, v70);
  v51[5] = v69;
  v107[0] = v51;
  specialized Array._endMutation()(v71);
  v72 = v107[0];
  if ((unint64_t)v107[0] >> 62)
  {
    if ((uint64_t)v107[0] < 0)
      v75 = v107[0];
    else
      v75 = (id)((unint64_t)v107[0] & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
    v76 = _CocoaArrayWrapper.endIndex.getter(v75);
    swift_bridgeObjectRelease();
    if (v76)
      goto LABEL_3;
LABEL_8:
    v74 = &_swiftEmptySetSingleton;
    goto LABEL_9;
  }
  if (!*(_QWORD *)(((unint64_t)v107[0] & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_8;
LABEL_3:
  sub_100047938((uint64_t)v72);
  v74 = v73;
LABEL_9:
  swift_bridgeObjectRelease();
  *(_QWORD *)&v27[OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource_sharedLibraryObservers] = v74;
  swift_bridgeObjectRelease();
  v77 = sub_1006E1994();
  v78 = swift_allocObject(&unk_1010D7B50, 24, 7);
  swift_unknownObjectWeakInit(v78 + 16);
  v79 = (uint64_t *)((char *)v77 + *(_QWORD *)(*v77 + 120));
  swift_beginAccess(v79, v107, 1, 0);
  v80 = *v79;
  v81 = v79[1];
  *v79 = (uint64_t)sub_1006E7744;
  v79[1] = v78;
  sub_10004BA30(v80, v81);
  swift_release();
  v82 = sub_1006E2D4C();
  v83 = swift_allocObject(&unk_1010D7B50, 24, 7);
  swift_unknownObjectWeakInit(v83 + 16);
  v84 = (uint64_t *)((char *)v82 + *(_QWORD *)(*v82 + 120));
  swift_beginAccess(v84, v106, 1, 0);
  v85 = *v84;
  v86 = v84[1];
  *v84 = (uint64_t)sub_1006E7764;
  v84[1] = v83;
  sub_10004BA30(v85, v86);
  swift_release();
  sub_1006E1994();
  RequestResponse.Controller.isAutomaticReloadingEnabled.setter(1);
  swift_release();
  sub_1006E2D4C();
  RequestResponse.Controller.isAutomaticReloadingEnabled.setter(1);
  swift_release();
  sub_1006E08D4();
  v87 = *(void (**)(char *, _UNKNOWN **, __n128))(*(_QWORD *)*CloudLibrary.StatusObserver.shared.unsafeMutableAddressor()
                                                           + 224);
  v88 = v27;
  v89 = swift_retain();
  v87(v88, &off_1010D7A48, v89);
  swift_release();

  return v88;
}

void sub_1006DF28C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t Strong;
  void *v9;
  _BYTE v10[24];

  v2 = a2 + 16;
  if (qword_10119C0B8 != -1)
    swift_once(&qword_10119C0B8, sub_10048D7D0);
  v3 = type metadata accessor for Logger(0);
  v4 = sub_100048B14(v3, (uint64_t)qword_10124D100);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Available shared libraries changed, updating tabElements…", v7, 2u);
    swift_slowDealloc(v7, -1, -1);
  }

  swift_beginAccess(v2, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v9 = (void *)Strong;
    sub_1006E06B4();

  }
}

double sub_1006DF390(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = *a1;
  v3 = *(_QWORD *)(*a2 + OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource_selectedLibrary);
  *(_QWORD *)(*a2 + OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource_selectedLibrary) = *a1;
  swift_retain_n(v2, 2);
  sub_1006DF70C(v3);
  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_1006DF3E8(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t Strong;
  void *v12;
  _BYTE v13[24];

  v5 = a3 + 16;
  if (qword_10119C0B8 != -1)
    swift_once(&qword_10119C0B8, sub_10048D7D0);
  v6 = type metadata accessor for Logger(0);
  v7 = sub_100048B14(v6, (uint64_t)qword_10124D100);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, a4, v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  swift_beginAccess(v5, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v12 = (void *)Strong;
    sub_1006E06B4();

  }
}

id sub_1006DF4F4()
{
  void *v0;
  void (*v1)(void);
  id v2;
  objc_super v4;

  v1 = *(void (**)(void))(*(_QWORD *)*CloudLibrary.StatusObserver.shared.unsafeMutableAddressor() + 232);
  swift_retain();
  v2 = v0;
  v1();
  swift_release();

  v4.receiver = v2;
  v4.super_class = (Class)_s20LibraryTabDataSourceCMa(0);
  return objc_msgSendSuper2(&v4, "dealloc");
}

uint64_t sub_1006DF6F0()
{
  return _s20LibraryTabDataSourceCMa(0);
}

uint64_t _s20LibraryTabDataSourceCMa(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011C46B0, (uint64_t)&_s20LibraryTabDataSourceCMn);
}

void sub_1006DF70C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  unint64_t v27;
  __n128 v28;
  __n128 v29;
  uint64_t v30;
  unint64_t v31;
  __n128 v32;
  __n128 v33;
  uint64_t *v34;
  uint64_t v35;
  int v36;
  void *v37;
  char v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  char v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  char *v50;
  uint64_t v51;
  uint64_t *v52;
  unsigned __int8 *v53;
  __int16 v54;
  __int16 v55;
  __int16 v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  __n128 v61;
  char *v62;
  uint64_t v63;
  char *v64;
  NSString v65;
  id v66;
  void *v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  void *v73;
  uint64_t v74;
  void *v75;
  id v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  void *v91;
  uint64_t v92;
  char v93;
  char v94;
  char v95;
  uint64_t v96;
  _BYTE v97[16];

  v2 = v1;
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011C47A8);
  __chkstk_darwin(v10);
  v12 = (char *)&v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource_selectedLibrary;
  v88 = *(_QWORD *)(v1 + OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource_selectedLibrary);
  v96 = a1;
  v14 = type metadata accessor for MusicLibrary(0);
  v15 = sub_100048748((unint64_t *)&qword_1011A3820, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary, (uint64_t)&protocol conformance descriptor for MusicLibrary);
  if ((dispatch thunk of static Equatable.== infix(_:_:)(&v88, &v96, v14, v15) & 1) != 0)
    return;
  v86 = (uint64_t *)v12;
  v16 = *(_QWORD *)(v1 + v13);
  v17 = qword_10119C0B8;
  swift_retain();
  if (v17 != -1)
    swift_once(&qword_10119C0B8, sub_10048D7D0);
  v18 = type metadata accessor for Logger(0);
  sub_100048B14(v18, (uint64_t)qword_10124D100);
  v19 = swift_retain_n(v16, 4);
  v20 = Logger.logObject.getter(v19);
  v21 = static os_log_type_t.default.getter();
  v22 = os_log_type_enabled(v20, v21);
  v81 = v9;
  v82 = v6;
  v87 = v14;
  if (v22)
  {
    v23 = swift_slowAlloc(22, -1);
    v24 = swift_slowAlloc(64, -1);
    v88 = v24;
    v25.n128_u64[0] = 136446466;
    *(_DWORD *)v23 = 136446466;
    v26 = MusicLibrary.name.getter(v25);
    v96 = sub_100322200(v26, v27, &v88);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v96, v97);
    swift_release_n(v16, 2, v28);
    v29 = swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2082;
    v30 = MusicLibrary.id.getter(v29);
    v96 = sub_100322200(v30, v31, &v88);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v96, v97);
    swift_release_n(v16, 2, v32);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Selected music library changed to %{public}s (%{public}s)", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy(v24, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v23, -1, -1);

  }
  else
  {

    swift_release_n(v16, 4, v33);
  }
  v34 = sub_1006E23DC();
  Library.Menu.Request.MediaLibrarySource.init(_:)();
  v84 = v35;
  v83 = v36;
  swift_beginAccess(v34 + 2, &v96, 0, 0);
  v37 = (void *)v34[2];
  v38 = *((_BYTE *)v34 + 24);
  v39 = v34[4];
  v40 = (void *)v34[5];
  v41 = v34[6];
  v85 = v2;
  v42 = v16;
  v43 = *((_BYTE *)v34 + 56);
  v44 = *((_BYTE *)v34 + 57);
  v45 = *((_BYTE *)v34 + 58);
  swift_retain();
  sub_1002F558C(v37, v38);
  v46 = v40;
  swift_bridgeObjectRetain();
  sub_1002F5684(v37, v38);
  v88 = v84;
  v89 = v83 & 1;
  v90 = v39;
  v91 = v40;
  v92 = v41;
  v93 = v43;
  v94 = v44;
  v95 = v45;
  RequestResponse.Controller.request.setter((uint64_t)&v88);
  swift_release();
  v47 = v85;
  sub_1006E1994();
  v88 = v42;
  swift_retain();
  RequestResponse.Controller.request.setter((uint64_t)&v88);
  swift_release();
  v48 = v47;
  v49 = sub_1006E2D4C();
  v50 = (char *)v49 + *(_QWORD *)(*v49 + 96);
  swift_beginAccess(v50, &v88, 0, 0);
  v51 = (uint64_t)v50;
  v52 = v86;
  sub_10004A160(v51, (uint64_t)v86, &qword_1011C47A8);
  swift_retain_n(v42, 2);
  swift_release();
  *v52 = v42;
  v53 = (unsigned __int8 *)v52 + *(int *)(_s9PlaylistsVMa(0) + 36);
  if (v53[1])
    v54 = 256;
  else
    v54 = 0;
  v55 = v54 | *v53;
  v56 = sub_10016B228();
  *v53 = v56;
  v53[1] = HIBYTE(v56) & 1;
  sub_10010B8F4(v55);
  swift_release();
  RequestResponse.Controller.request.setter((uint64_t)v52);
  swift_release();
  v57 = *(void **)(v48 + OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource_rootTab);
  v59 = static MusicLibrary.shared.getter(v58);
  v60 = static MusicLibrary.== infix(_:_:)(v42, v59);
  v61 = swift_release();
  if ((v60 & 1) != 0)
  {
    v62 = v81;
    v63 = String.LocalizationValue.init(stringLiteral:)(0x7972617262694CLL, 0xE700000000000000);
    v64 = v82;
    static Locale.current.getter(v63);
    String.init(localized:table:bundle:locale:comment:)(v62, 0, 0, 0, v64, "Tab name for 'Library'", 22, 2);
  }
  else
  {
    MusicLibrary.name.getter(v61);
  }
  v65 = String._bridgeToObjectiveC()();
  objc_msgSend(v57, "setTitle:", v65, swift_bridgeObjectRelease().n128_f64[0]);

  v66 = objc_msgSend(v57, "_viewController");
  if (v66)
  {
    v67 = v66;
    v68 = type metadata accessor for TabNavigationController();
    swift_dynamicCastClass(v67, v68);

  }
  v69 = objc_msgSend(v57, "_children", v81);
  v70 = sub_10004A07C(0, &qword_10119D458, _UITab_ptr);
  v71 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v69, v70);

  if ((unint64_t)v71 >> 62)
  {
    if (v71 < 0)
      v79 = v71;
    else
      v79 = v71 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v80 = _CocoaArrayWrapper.endIndex.getter(v79);
    swift_bridgeObjectRelease();
    if (v80)
      goto LABEL_17;
LABEL_30:
    swift_release();
    swift_bridgeObjectRelease();
    return;
  }
  if (!*(_QWORD *)((v71 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_30;
LABEL_17:
  if ((v71 & 0xC000000000000001) != 0)
  {
    v72 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v71);
  }
  else
  {
    if (!*(_QWORD *)((v71 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v72 = *(id *)(v71 + 32);
  }
  v73 = v72;
  swift_bridgeObjectRelease();
  objc_opt_self(_UITabElement);
  v74 = swift_dynamicCastObjCClass(v73);
  if (!v74)
    goto LABEL_24;
  v75 = (void *)v74;
  v76 = objc_msgSend(v57, "_viewController");
  if (!v76)
    goto LABEL_24;
  v77 = v76;
  v78 = type metadata accessor for TabNavigationController();
  if (swift_dynamicCastClass(v77, v78))
  {
    sub_100917A48(v75, 1);

LABEL_24:
    swift_release();
    return;
  }

  swift_release();
}

uint64_t sub_1006DFE24()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource_selectedLibrary));
}

void sub_1006DFE34(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  char v10;
  uint64_t v11;
  void (*v12)(void *, uint64_t, __n128);
  uint64_t v13;
  __n128 v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34[4];

  v3 = v2;
  v6 = sub_10048CCF0();
  if (v6
    && (v7 = (void *)v6,
        v8 = *(void **)(v2 + OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource_rootTab),
        sub_10004A07C(0, &qword_1011C47E0, _UITabElementGroup_ptr),
        v9 = v8,
        v10 = static NSObject.== infix(_:_:)(v7, v9),
        v7,
        v9,
        (v10 & 1) != 0))
  {
    v11 = v3 + OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource_onSelection;
    v12 = *(void (**)(void *, uint64_t, __n128))(v3
                                                         + OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource_onSelection);
    if (v12)
    {
      v13 = *(_QWORD *)(v11 + 8);
      v14 = swift_retain();
      v12(a2, a1, v14);
      sub_10004BA30((uint64_t)v12, v13);
    }
    v15 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v16 = objc_msgSend(a2, "_identifier");
    v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
    v19 = v18;

    v34[3] = (uint64_t)&type metadata for String;
    v34[0] = v17;
    v34[1] = v19;
    v32 = 0xD000000000000020;
    v33 = 0x8000000100E42CA0;
    v20 = sub_100055B68();
    NSUserDefaults.subscript.setter((uint64_t)v34, (uint64_t)&v32, (uint64_t)&type metadata for String, v20);

  }
  else
  {
    if (qword_10119C0B8 != -1)
      swift_once(&qword_10119C0B8, sub_10048D7D0);
    v21 = type metadata accessor for Logger(0);
    sub_100048B14(v21, (uint64_t)qword_10124D100);
    v31 = a2;
    v22 = Logger.logObject.getter(v31);
    v23 = static os_log_type_t.error.getter(v22);
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc(12, -1);
      v25 = swift_slowAlloc(32, -1);
      v34[0] = v25;
      *(_DWORD *)v24 = 136446210;
      v26 = v31;
      v27 = objc_msgSend(v26, "description");
      v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
      v30 = v29;

      v32 = sub_100322200(v28, v30, v34);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33);

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Attempted to select element=%{public}s that isn't a descendant of library tab element", v24, 0xCu);
      swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v25, -1, -1);
      swift_slowDealloc(v24, -1, -1);

    }
    else
    {

    }
  }
}

double sub_1006E01C4(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void **v10;
  _QWORD *v11;
  void *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  id v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  double result;
  void *v33;
  void *v34;
  _QWORD v35[3];
  void (*v36)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD v37[2];
  uint64_t countAndFlagsBits;
  void *v39;
  Swift::String v40;

  v5 = sub_100007E8C(&qword_1011BC170);
  __chkstk_darwin(v5);
  v7 = (char *)v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A07C(0, (unint64_t *)&qword_1011A8960, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(a1, *(_QWORD *)(v2 + OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource_rootTab)) & 1) != 0)
  {
    v8 = *(_QWORD *)(a2 + 16);
    if (v8)
    {
      v35[2] = v2;
      v9 = type metadata accessor for Locale(0);
      v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56);
      swift_bridgeObjectRetain();
      v35[1] = a2;
      v10 = (void **)(a2 + 40);
      v11 = _swiftEmptyArrayStorage;
      do
      {
        v12 = *v10;
        v40._countAndFlagsBits = (uint64_t)*(v10 - 1);
        v40._object = v12;
        countAndFlagsBits = v40._countAndFlagsBits;
        v39 = v12;
        v37[0] = 0xD00000000000001BLL;
        v37[1] = 0x8000000100E3BC20;
        v36(v7, 1, 1, v9);
        v13 = sub_100055B68();
        swift_bridgeObjectRetain_n(v12, 2);
        v14 = StringProtocol.range<A>(of:options:range:locale:)(v37, 0, 0, 0, 1, v7, &type metadata for String, &type metadata for String, v13, v13);
        v16 = v15;
        LOBYTE(v12) = v17;
        sub_10004FF60((uint64_t)v7, &qword_1011BC170);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v12 & 1) != 0)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          String.removeSubrange(_:)(v14, v16);
          v18 = sub_100838A84(v40);
          if (v18 != 13)
          {
            v19 = v18;
            if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
              v11 = sub_100433630(0, v11[2] + 1, 1, v11);
            v21 = v11[2];
            v20 = v11[3];
            if (v21 >= v20 >> 1)
              v11 = sub_100433630((_QWORD *)(v20 > 1), v21 + 1, 1, v11);
            v11[2] = v21 + 1;
            *((_BYTE *)v11 + v21 + 32) = v19;
          }
        }
        v10 += 2;
        --v8;
      }
      while (v8);
      swift_bridgeObjectRelease();
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0)
        goto LABEL_21;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0)
        goto LABEL_21;
    }
    if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
    {
      sub_10004982C((uint64_t)_swiftEmptyArrayStorage);
      v33 = v34;
      goto LABEL_22;
    }
LABEL_21:
    v33 = &_swiftEmptySetSingleton;
LABEL_22:
    sub_1006E24F4((uint64_t)v11, (uint64_t)v33);
    swift_bridgeObjectRelease();
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
    return result;
  }
  if (qword_10119C0C0 != -1)
    swift_once(&qword_10119C0C0, sub_10048D7F8);
  v22 = type metadata accessor for Logger(0);
  sub_100048B14(v22, (uint64_t)qword_10124D118);
  v36 = a1;
  v23 = Logger.logObject.getter(v36);
  v24 = static os_log_type_t.error.getter(v23);
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc(12, -1);
    v26 = swift_slowAlloc(32, -1);
    v40._countAndFlagsBits = v26;
    *(_DWORD *)v25 = 136446210;
    v27 = v36;
    v28 = objc_msgSend(v27, "description");
    v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
    v31 = v30;

    countAndFlagsBits = sub_100322200(v29, v31, &v40._countAndFlagsBits);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&countAndFlagsBits, &v39);

    swift_bridgeObjectRelease();
    swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v25, -1, -1);

  }
  else
  {

  }
  return result;
}

void sub_1006E06B4()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  _BYTE *v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[6];

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((v0[OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource_needsTabElementsUpdate] & 1) == 0)
  {
    v0[OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource_needsTabElementsUpdate] = 1;
    v9 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
    v26 = static OS_dispatch_queue.main.getter(v9, v10, v11, v12, v13, v14, v15, v16);
    v17 = swift_allocObject(&unk_1010D7D08, 24, 7);
    *(_QWORD *)(v17 + 16) = v0;
    aBlock[4] = sub_1006EA284;
    aBlock[5] = v17;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001DBD98;
    aBlock[3] = &unk_1010D7D20;
    v18 = _Block_copy(aBlock);
    v19 = v0;
    v20 = swift_release();
    static DispatchQoS.unspecified.getter(v20);
    aBlock[0] = _swiftEmptyArrayStorage;
    v21 = sub_100048748((unint64_t *)&qword_1011A30C0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v22 = sub_100007E8C((uint64_t *)&unk_1011A2120);
    v23 = sub_100049F28(&qword_1011A30D0, (uint64_t *)&unk_1011A2120, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v22, v23, v1, v21);
    v24 = (void *)v26;
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v4, v18);
    _Block_release(v18);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

void sub_1006E08D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  NSObject *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  double v20;
  id v21;
  _QWORD *v22;
  id v23;
  uint64_t v24;
  id v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  Class isa;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  int v40;
  uint64_t v41;
  uint8_t *v42;
  id v43;
  id v44;
  unint64_t v45;
  unint64_t v46;
  os_log_t v47;
  uint8_t *v48;
  uint64_t v49;
  double v50;
  __n128 v51;
  _QWORD *v52;
  id v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  Class v60;
  uint64_t v61;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  uint8_t *v65;
  NSObject *v66;
  void *v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  os_log_t v72;
  uint8_t *v73;
  uint8_t *v74;
  int v75;
  uint64_t v76;
  id v77;
  id v78;
  char *v79;
  uint64_t v80;
  id v81;
  NSObject *v82;
  uint64_t v83;
  uint64_t v84[4];
  uint64_t v85;
  id v86[4];
  uint64_t v87;

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011A30F0);
  __chkstk_darwin(v2);
  v4 = (char *)&v71 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v71 - v6;
  v8 = type metadata accessor for Playlist(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource_needsTabElementsUpdate) != 1)
    return;
  v79 = v4;
  v83 = OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource_needsTabElementsUpdate;
  sub_10004A07C(0, &qword_1011C47E0, _UITabElementGroup_ptr);
  v12 = sub_1006E6090(0);
  v87 = (uint64_t)_swiftEmptyArrayStorage;
  v13 = sub_1006E6220(1);
  v86[3] = &type metadata for Library.Menu.Identifier;
  LOBYTE(v86[0]) = 1;
  sub_10048CF54((uint64_t)v86);
  v14 = swift_allocObject(&unk_1010D7B50, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16);
  v15 = sub_1006E69FC(2, (uint64_t)sub_1006EA234, v14);
  objc_msgSend(v15, "_setTabBarPlacement:", 4);
  v16 = v13;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v16);
  v18 = *(_QWORD *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v17 = *(_QWORD *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v18 >= v17 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v17 > 1, v18 + 1, 1);
  v82 = v16;
  v19 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v16);
  specialized Array._endMutation()(v19);
  sub_1006E2D4C();
  RequestResponse.Controller.revision.getter();
  swift_release();
  RequestResponse.Revision.content.getter((uint64_t)v86);
  *(_QWORD *)&v20 = swift_release().n128_u64[0];
  v21 = v86[0];
  v22 = _swiftEmptyArrayStorage;
  if (v86[0])
  {
    v23 = objc_msgSend(v86[0], "_children", v20);

    v24 = sub_10004A07C(0, &qword_10119D458, _UITab_ptr);
    v22 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v23, v24);

  }
  sub_100806584((uint64_t)v22);
  v25 = v15;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v25);
  v27 = *(_QWORD *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v26 = *(_QWORD *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v27 >= v26 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v26 > 1, v27 + 1, 1);
  v81 = v25;
  v28 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v27, v25);
  specialized Array._endMutation()(v28);
  v29 = sub_10004A07C(0, &qword_10119D458, _UITab_ptr);
  swift_bridgeObjectRetain();
  v80 = v29;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v12, "_setChildren:", isa, swift_bridgeObjectRelease().n128_f64[0]);

  objc_msgSend(v12, "_setSidebarAppearance:", 2);
  objc_msgSend(v12, "_setAllowsReordering:", 0);
  objc_msgSend(v12, "_setAllowsHiding:", 1);
  objc_msgSend(v12, "_setTabBarPlacement:", 4);
  objc_msgSend(v12, "_setDelegate:", v1);
  v31 = v1 + OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource_createdPlaylist;
  swift_beginAccess(v1 + OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource_createdPlaylist, v86, 0, 0);
  sub_10004A160(v31, (uint64_t)v7, &qword_1011A30F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    swift_bridgeObjectRelease();
    sub_10004FF60((uint64_t)v7, &qword_1011A30F0);
  }
  else
  {
    v32 = (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    v33 = v87;
    __chkstk_darwin(v32);
    *(&v71 - 2) = (uint64_t)v11;
    swift_bridgeObjectRetain();
    v34 = sub_1005D2550(sub_1006EA23C, (uint64_t)(&v71 - 4), v33);
    swift_bridgeObjectRelease();
    if (v34)
    {
      objc_opt_self(_UITabElement);
      v35 = swift_dynamicCastObjCClass(v34);
      if (v35)
      {
        v36 = (id)v35;
        if (qword_10119C0B8 != -1)
          swift_once(&qword_10119C0B8, sub_10048D7D0);
        v37 = type metadata accessor for Logger(0);
        sub_100048B14(v37, (uint64_t)qword_10124D100);
        v78 = v34;
        v38 = Logger.logObject.getter(v78);
        v39 = static os_log_type_t.default.getter();
        v40 = v39;
        if (os_log_type_enabled(v38, v39))
        {
          v41 = swift_slowAlloc(12, -1);
          v75 = v40;
          v42 = (uint8_t *)v41;
          v76 = swift_slowAlloc(32, -1);
          v84[0] = v76;
          v77 = v36;
          *(_DWORD *)v42 = 136446210;
          v73 = v42 + 4;
          v74 = v42;
          v43 = v78;
          v44 = objc_msgSend(v77, "description");
          v71 = static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
          v72 = v38;
          v46 = v45;

          v85 = sub_100322200(v71, v46, v84);
          v36 = v77;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v85, v86);
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          v47 = v72;
          v48 = v74;
          _os_log_impl((void *)&_mh_execute_header, v72, (os_log_type_t)v75, "Selecting newly created playlist tabElement=%{public}s", v74, 0xCu);
          v49 = v76;
          swift_arrayDestroy(v76, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v49, -1, -1);
          swift_slowDealloc(v48, -1, -1);

        }
        else
        {
          v68 = v78;

          *(_QWORD *)&v50 = swift_bridgeObjectRelease().n128_u64[0];
        }
        v69 = (uint64_t)v79;
        objc_msgSend(v12, "_setSelectedElement:", v36, v50);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v69, 1, 1, v8);
        swift_beginAccess(v31, v84, 33, 0);
        sub_10049B684(v69, v31);
        swift_endAccess(v84);

        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
        goto LABEL_18;
      }

    }
    v51 = swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v11, v8, v51);
  }
LABEL_18:
  v84[0] = (uint64_t)_swiftEmptyArrayStorage;
  sub_1006E1994();
  RequestResponse.Controller.revision.getter();
  swift_release();
  RequestResponse.Revision.content.getter((uint64_t)&v85);
  swift_release();
  if (v85)
    v52 = (_QWORD *)v85;
  else
    v52 = _swiftEmptyArrayStorage;
  sub_100806590((uint64_t)v52);
  v53 = v12;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v53);
  v55 = *(_QWORD *)((v84[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
  v54 = *(_QWORD *)((v84[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v55 >= v54 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v54 > 1, v55 + 1, 1);
  v56 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v55, v53);
  specialized Array._endMutation()(v56);
  v57 = *(void **)(v1 + OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource_rootTab);
  v58 = v80;
  if ((unint64_t)v84[0] >> 62)
  {
    if (v84[0] < 0)
      v70 = v84[0];
    else
      v70 = v84[0] & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    _bridgeCocoaArray<A>(_:)(v70, v58);
    swift_bridgeObjectRelease();
  }
  else
  {
    v59 = swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v59);
  }
  swift_bridgeObjectRelease();
  v60 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v57, "_setChildren:", v60, swift_bridgeObjectRelease().n128_f64[0]);

  if (qword_10119C0B8 != -1)
    swift_once(&qword_10119C0B8, sub_10048D7D0);
  v61 = type metadata accessor for Logger(0);
  v62 = sub_100048B14(v61, (uint64_t)qword_10124D100);
  v63 = Logger.logObject.getter(v62);
  v64 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v63, v64))
  {
    v65 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v65 = 0;
    _os_log_impl((void *)&_mh_execute_header, v63, v64, "Did update library tab elements", v65, 2u);
    swift_slowDealloc(v65, -1, -1);
    v67 = v81;
    v66 = v82;
  }
  else
  {
    v66 = v63;
    v67 = v53;
    v53 = v81;
    v63 = v82;
  }

  *(_BYTE *)(v1 + v83) = 0;
}

void sub_1006E11CC(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t Strong;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  char *v25;
  uint64_t (**v26)(uint64_t);
  uint64_t v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  id v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v39[3];
  uint64_t v40;
  _BYTE v41[24];

  v4 = type metadata accessor for AppInterfaceContext.Activity(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v39[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011B1F10);
  __chkstk_darwin(v7);
  v9 = (char *)&v39[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C((uint64_t *)&unk_1011B5660);
  __chkstk_darwin(v10);
  v12 = (char *)&v39[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (int *)type metadata accessor for PlaylistCreation.Context(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v39[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a2 + 16;
  swift_beginAccess(a2 + 16, v41, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2 + 16);
  if (Strong
    && (v18 = (void *)Strong, v19 = (void *)sub_1006E160C(), v18, v19)
    && (v20 = sub_10076BBD4(), v19, v20))
  {
    v21 = type metadata accessor for Playlist.Folder(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v12, 1, 1, v21);
    v22 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v9, 1, 1, v22);
    v23 = swift_allocObject(&unk_1010D7B50, 24, 7);
    swift_beginAccess(v16, v39, 0, 0);
    v24 = (void *)swift_unknownObjectWeakLoadStrong(v16);
    swift_unknownObjectWeakInit(v23 + 16);

    sub_100065228((uint64_t)v12, (uint64_t)v15, (uint64_t *)&unk_1011B5660);
    v25 = &v15[v13[5]];
    *(_QWORD *)v25 = 0;
    *((_QWORD *)v25 + 1) = 0;
    sub_100065228((uint64_t)v9, (uint64_t)&v15[v13[6]], &qword_1011B1F10);
    v26 = (uint64_t (**)(uint64_t))&v15[v13[7]];
    *v26 = sub_1006EA258;
    v26[1] = (uint64_t (*)(uint64_t))v23;
    sub_10005B704((uint64_t)v15, (uint64_t)v6, type metadata accessor for PlaylistCreation.Context);
    swift_storeEnumTagMultiPayload(v6, v4, 3);
    sub_100770824((uint64_t)v6, 0, 0);
    swift_release();
    sub_10005B748((uint64_t)v6, type metadata accessor for AppInterfaceContext.Activity);
    sub_10005B748((uint64_t)v15, type metadata accessor for PlaylistCreation.Context);
  }
  else
  {
    if (qword_10119C0B8 != -1)
      swift_once(&qword_10119C0B8, sub_10048D7D0);
    v27 = type metadata accessor for Logger(0);
    sub_100048B14(v27, (uint64_t)qword_10124D100);
    v28 = a1;
    v29 = Logger.logObject.getter(v28);
    v30 = static os_log_type_t.error.getter(v29);
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc(12, -1);
      v32 = swift_slowAlloc(32, -1);
      v39[0] = v32;
      *(_DWORD *)v31 = 136446210;
      v33 = v28;
      v34 = objc_msgSend(v33, "description");
      v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
      v37 = v36;

      v40 = sub_100322200(v35, v37, v39);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, v41);

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "Unable to perform addToPlaylist: No interface context for tab=%{public}s", v31, 0xCu);
      swift_arrayDestroy(v32, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v32, -1, -1);
      swift_slowDealloc(v31, -1, -1);

    }
    else
    {

    }
  }
}

uint64_t sub_1006E160C()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v5;
  _OWORD v6[2];
  _BYTE v7[24];
  uint64_t v8;

  if (qword_10119CA40 != -1)
    swift_once(&qword_10119CA40, sub_1009175CC);
  v1 = objc_getAssociatedObject(v0, (const void *)qword_1011D02B0);
  if (v1)
  {
    v2 = v1;
    _bridgeAnyObjectToAny(_:)(v6, v1);
    swift_unknownObjectRelease(v2);
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_100065228((uint64_t)v6, (uint64_t)v7, &qword_10119DCC0);
  if (v8)
  {
    v3 = type metadata accessor for TabBarController();
    if (swift_dynamicCast(&v5, v7, (char *)&type metadata for Any + 8, v3, 6))
      return v5;
    else
      return 0;
  }
  else
  {
    sub_10004FF60((uint64_t)v7, &qword_10119DCC0);
    return 0;
  }
}

uint64_t sub_1006E16F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t result;
  char *v15;
  uint64_t v16;
  _BYTE v17[24];
  _BYTE v18[24];

  v4 = sub_100007E8C(&qword_1011A30F0);
  __chkstk_darwin(v4);
  v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for PlaylistCreation.FlowResult(0);
  __chkstk_darwin(v7);
  v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for Playlist(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = &v17[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a2 += 16;
  swift_beginAccess(a2, v18, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a2);
  if (result)
  {
    v15 = (char *)result;
    sub_10005B704(a1, (uint64_t)v9, type metadata accessor for PlaylistCreation.FlowResult);
    if (swift_getEnumCaseMultiPayload(v9, v7))
    {

      return sub_10005B748((uint64_t)v9, type metadata accessor for PlaylistCreation.FlowResult);
    }
    else
    {

      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 32))(v13, v9, v10);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 16))(v6, v13, v10);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
      v16 = (uint64_t)&v15[OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource_createdPlaylist];
      swift_beginAccess(&v15[OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource_createdPlaylist], v17, 33, 0);
      sub_10049B684((uint64_t)v6, v16);
      swift_endAccess(v17);

      return (*(uint64_t (**)(_BYTE *, uint64_t))(v11 + 8))(v13, v10);
    }
  }
  return result;
}

uint64_t sub_1006E18E4(id *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;

  v1 = objc_msgSend(*a1, "_identifier");
  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  v4 = v3;

  v6 = Playlist.id.getter(v5);
  if (v2 == v6 && v4 == v7)
  {
    v10 = 1;
    v9 = v4;
  }
  else
  {
    v9 = v7;
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v2, v4, v6, v7, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v9);
  return v10 & 1;
}

uint64_t *sub_1006E1994()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v1 = OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource____lazy_storage___menuTabElementsController;
  if (*(_QWORD *)(v0
                 + OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource____lazy_storage___menuTabElementsController))
  {
    v2 = *(uint64_t **)(v0
                     + OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource____lazy_storage___menuTabElementsController);
  }
  else
  {
    v3 = v0;
    v4 = type metadata accessor for MusicLibrary(0);
    v10 = static MusicLibrary.shared.getter(v4);
    v5 = sub_100007E8C((uint64_t *)&unk_1011C4800);
    swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
    v2 = RequestResponse.Controller.init(request:)((uint64_t)&v10, v6, v7, v8);
    *(_QWORD *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_1006E1A30@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  __int128 v7;
  __int128 v9;
  _OWORD v10[2];
  _BYTE v11[48];

  sub_1000491D8((uint64_t)&off_1010AD180);
  static Library.Menu.Request.with(_:)((uint64_t (*)(id *))sub_1006E6C00, (uint64_t)&v9);
  swift_bridgeObjectRelease();
  sub_1000491D8((uint64_t)&off_1010AD1A8);
  static Library.Menu.Request.with(_:)((uint64_t (*)(id *))sub_1006EA914, (uint64_t)v11);
  swift_bridgeObjectRelease();
  v6 = swift_allocObject(&unk_1010D7B00, 80, 7);
  v7 = v10[0];
  *(_OWORD *)(v6 + 16) = v9;
  *(_OWORD *)(v6 + 32) = v7;
  *(_OWORD *)(v6 + 43) = *(_OWORD *)((char *)v10 + 11);
  *(_QWORD *)(v6 + 64) = a1;
  *(_QWORD *)(v6 + 72) = a2;
  sub_100300C00((uint64_t)&v9);
  swift_retain();
  Library.Menu.Request.perform(_:_:)(sub_1006E6C4C, v6, a3);
  swift_release();
  sub_100300C44((uint64_t)v11);
  return sub_100300C44((uint64_t)&v9);
}

uint64_t sub_1006E1B4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  __n128 v16;
  os_log_type_t v17;
  uint8_t *v18;
  void *v20;
  uint64_t v21;
  id v22;
  char *v23;
  char v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  id v29;
  _QWORD *v30;
  uint64_t v31[5];
  _QWORD v32[7];
  _QWORD v33[6];
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[2];

  sub_100065228(a1, (uint64_t)v32, (uint64_t *)&unk_1011C4750);
  v11 = v32[0];
  sub_100065228(a1, (uint64_t)v33, (uint64_t *)&unk_1011C4750);
  v12 = v33[0];
  if ((v34 & 1) != 0)
  {
    swift_errorRetain(v11);
    if (qword_10119C0B8 != -1)
      swift_once(&qword_10119C0B8, sub_10048D7D0);
    v13 = type metadata accessor for Logger(0);
    v14 = sub_100048B14(v13, (uint64_t)qword_10124D100);
    v15 = Logger.logObject.getter(v14);
    v17 = static os_log_type_t.fault.getter(v16);
    if (os_log_type_enabled(v15, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v17, "Failed to compute facets in the library.", v18, 2u);
      swift_slowDealloc(v18, -1, -1);
    }

    swift_errorRetain(v11);
    a5(v12, 1, a2, a3);
    sub_100300D6C(a1);
    return sub_100300D6C(a1);
  }
  else
  {
    v20 = (void *)v33[1];
    v35 = v33[0];
    v36 = v33[5];
    v38 = v33[3];
    v39[0] = v33[2];
    v37 = v33[4];
    v21 = *(_QWORD *)(v33[0] + 16);
    if (v21)
    {
      v31[0] = (uint64_t)_swiftEmptyArrayStorage;
      sub_100055D0C(&v35);
      v22 = v20;
      sub_100055D0C(v39);
      sub_100055D0C(&v38);
      sub_100055D0C(&v37);
      sub_100055D0C(&v36);
      specialized ContiguousArray.reserveCapacity(_:)(v21);
      v23 = (char *)(v12 + 32);
      do
      {
        v24 = *v23++;
        v25 = sub_1006E66C0(v24);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(objc_msgSend(v25, "_setAllowsHiding:", 1));
        v26 = *(_QWORD *)(v31[0] + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v26);
        v27 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v26, v25);
        specialized ContiguousArray._endMutation()(v27);
        --v21;
      }
      while (v21);
      v28 = (_QWORD *)v31[0];
    }
    else
    {
      sub_100055D0C(&v35);
      v29 = v20;
      sub_100055D0C(v39);
      sub_100055D0C(&v38);
      sub_100055D0C(&v37);
      sub_100055D0C(&v36);
      v28 = _swiftEmptyArrayStorage;
    }
    v30 = (_QWORD *)swift_allocObject(&unk_1010D7B28, 40, 7);
    v30[2] = v28;
    v30[3] = a5;
    v30[4] = a6;
    swift_retain();
    Library.Menu.Request.perform(_:_:)(sub_1006E6C84, (uint64_t)v30, v31);
    swift_release();
    sub_1001E3E14(&v35);

    sub_1001E3E14(v39);
    sub_1001E3E14(&v38);
    sub_1001E3E14(&v37);
    sub_1001E3E14(&v36);
    return sub_10004FF60((uint64_t)v31, (uint64_t *)&unk_1011CEEB0);
  }
}

uint64_t sub_1006E1E44(uint64_t a1, char *a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  os_log_type_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  NSObject *v25;
  uint64_t v26;
  NSObject *v27;
  uint64_t v28;
  id i;
  id v30;
  id v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  NSObject *v35;
  unint64_t v36;
  NSObject *log;
  os_log_t loga;
  char *v39;
  uint64_t (*v40)(uint64_t, _QWORD, char *, unint64_t);
  uint64_t (*v41)(_QWORD, _QWORD, _QWORD, _QWORD);
  _OWORD v42[2];
  uint64_t v43[4];
  void *v44;
  uint64_t v45;
  NSObject *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD v55[2];

  v9 = (uint64_t *)a1;
  sub_100065228(a1, (uint64_t)&v44, (uint64_t *)&unk_1011C4750);
  v10 = v44;
  sub_100065228((uint64_t)v9, (uint64_t)&v45, (uint64_t *)&unk_1011C4750);
  v11 = v45;
  v12 = a4;
  if ((v51 & 1) == 0)
  {
    v25 = v46;
    v54 = v48;
    v55[0] = v47;
    v52 = v50;
    v53 = v49;
    v41 = a5;
    v36 = a3;
    loga = v46;
    v39 = a2;
    if ((unint64_t)a4 >> 62)
    {
      if (a4 < 0)
        v34 = a4;
      else
        v34 = a4 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v35 = v25;
      sub_100055D0C(v55);
      sub_100055D0C(&v54);
      sub_100055D0C(&v53);
      sub_100055D0C(&v52);
      swift_bridgeObjectRetain();
      v26 = _CocoaArrayWrapper.endIndex.getter(v34);
      if (v26)
      {
LABEL_7:
        a3 = a4 & 0xC000000000000001;
        v28 = 4;
        v9 = &qword_10119DCC0;
        a2 = (char *)&type metadata for Any + 8;
        a5 = 0;
        if ((a4 & 0xC000000000000001) == 0)
          goto LABEL_9;
LABEL_8:
        for (i = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a5, a4); ; i = *(id *)(a4 + 8 * v28))
        {
          v10 = i;
          a4 = (uint64_t)a5 + 1;
          if (__OFADD__(a5, 1))
            break;
          if (qword_10119C0B0 != -1)
            swift_once(&qword_10119C0B0, sub_10048D2A4);
          v30 = objc_getAssociatedObject(v10, (const void *)qword_1011B6130);
          if (v30)
          {
            v31 = v30;
            _bridgeAnyObjectToAny(_:)(v42, v30);
            swift_unknownObjectRelease(v31);
          }
          else
          {
            memset(v42, 0, sizeof(v42));
          }
          sub_100065228((uint64_t)v42, (uint64_t)v43, &qword_10119DCC0);
          if (v43[3])
          {
            if ((swift_dynamicCast(v42, v43, (char *)&type metadata for Any + 8, &type metadata for Library.Menu.Identifier, 6) & 1) != 0)
            {
              v32 = LOBYTE(v42[0]);
              swift_bridgeObjectRetain();
              LOBYTE(v32) = sub_100414A84(v32, v11);
              objc_msgSend(v10, "_setVisible:", v32 & 1, swift_bridgeObjectRelease().n128_f64[0]);
            }
          }
          else
          {
            sub_10004FF60((uint64_t)v43, &qword_10119DCC0);
          }

          v33 = a4 == v26;
          a4 = v12;
          if (v33)
            goto LABEL_30;
          a5 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))(++v28 - 4);
          if (a3)
            goto LABEL_8;
LABEL_9:
          ;
        }
        __break(1u);
        goto LABEL_25;
      }
    }
    else
    {
      v26 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      v27 = v25;
      sub_100055D0C(v55);
      sub_100055D0C(&v54);
      sub_100055D0C(&v53);
      sub_100055D0C(&v52);
      swift_bridgeObjectRetain();
      if (v26)
        goto LABEL_7;
    }
LABEL_30:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    sub_1001E3E14(v55);
    sub_1001E3E14(&v54);
    sub_1001E3E14(&v53);
    sub_1001E3E14(&v52);
    a5 = v41;
    a3 = v36;
    a2 = v39;
    return a5(a4, 0, a2, a3);
  }
  swift_errorRetain(v10);
  if (qword_10119C0B8 != -1)
LABEL_25:
    swift_once(&qword_10119C0B8, sub_10048D7D0);
  v13 = type metadata accessor for Logger(0);
  sub_100048B14(v13, (uint64_t)qword_10124D100);
  swift_errorRetain(v10);
  v14 = swift_errorRetain(v10);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.error.getter(v15);
  log = v15;
  v17 = v15;
  v18 = v16;
  if (os_log_type_enabled(v17, v16))
  {
    v40 = (uint64_t (*)(uint64_t, _QWORD, char *, unint64_t))a5;
    v19 = (uint8_t *)swift_slowAlloc(12, -1);
    v20 = swift_slowAlloc(32, -1);
    v43[0] = v20;
    *(_DWORD *)v19 = 136446210;
    *(_QWORD *)&v42[0] = v11;
    swift_errorRetain(v10);
    v21 = sub_100007E8C(&qword_1011A14B0);
    v22 = String.init<A>(describing:)(v42, v21);
    *(_QWORD *)&v42[0] = sub_100322200(v22, v23, v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v42, (char *)v42 + 8);
    swift_bridgeObjectRelease();
    sub_100300D6C((uint64_t)v9);
    sub_100300D6C((uint64_t)v9);
    _os_log_impl((void *)&_mh_execute_header, log, v18, "Failed to compute available facets in the library. Defaulting all tabs to be visible. Error=%{public}s", v19, 0xCu);
    swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v19, -1, -1);

    sub_100300D6C((uint64_t)v9);
    return v40(v12, 0, a2, a3);
  }
  sub_100300D6C((uint64_t)v9);
  sub_100300D6C((uint64_t)v9);
  swift_errorRelease(v10);

  return a5(a4, 0, a2, a3);
}

unint64_t sub_1006E2308()
{
  return 0xD00000000000001ALL;
}

double sub_1006E2324@<D0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  double result;

  v6 = swift_allocObject(&unk_1010D7AD8, 32, 7);
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  swift_retain();
  sub_1006E1A30((uint64_t)sub_1002FB7A4, v6, a3);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_1006E239C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  type metadata accessor for MusicLibrary(0);
  return static MusicLibrary.== infix(_:_:)(v2, v3) & 1;
}

uint64_t *sub_1006E23DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  _OWORD v11[2];
  __int128 v12;
  _OWORD v13[2];

  v1 = OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource____lazy_storage___editableMenuController;
  if (*(_QWORD *)(v0
                 + OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource____lazy_storage___editableMenuController))
  {
    v2 = *(uint64_t **)(v0
                     + OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource____lazy_storage___editableMenuController);
  }
  else
  {
    v3 = v0;
    swift_retain();
    v4 = sub_1000491D8((uint64_t)&off_1010AD158);
    __chkstk_darwin(v4);
    static Library.Menu.Request.with(_:)((uint64_t (*)(id *))sub_1006EA914, (uint64_t)&v12);
    swift_release();
    swift_bridgeObjectRelease();
    v10 = v12;
    v11[0] = v13[0];
    *(_OWORD *)((char *)v11 + 11) = *(_OWORD *)((char *)v13 + 11);
    v5 = sub_100007E8C(&qword_1011BC798);
    swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
    v2 = RequestResponse.Controller.init(request:)((uint64_t)&v10, v6, v7, v8);
    *(_QWORD *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

double sub_1006E24F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  double result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  if (qword_10119C0C0 != -1)
    swift_once(&qword_10119C0C0, sub_10048D7F8);
  v4 = type metadata accessor for Logger(0);
  sub_100048B14(v4, (uint64_t)qword_10124D118);
  swift_bridgeObjectRetain_n(a1, 2);
  v5 = swift_bridgeObjectRetain_n(a2, 2);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc(22, -1);
    v20 = swift_slowAlloc(64, -1);
    v21 = a1;
    v22 = v20;
    *(_DWORD *)v8 = 136446466;
    swift_bridgeObjectRetain();
    v9 = sub_100007E8C(&qword_1011C47E8);
    v10 = String.init<A>(describing:)(&v21, v9);
    v21 = sub_100322200(v10, v11, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22);
    swift_bridgeObjectRelease_n(a1, 2);
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2082;
    v12 = sub_10004A07C(0, &qword_10119D458, _UITab_ptr);
    v13 = sub_1000EA1BC((unint64_t *)&qword_1011A0090, &qword_10119D458, _UITab_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    v14 = swift_bridgeObjectRetain();
    v15 = Set.description.getter(v14, v12, v13);
    v17 = v16;
    swift_bridgeObjectRelease();
    v21 = sub_100322200(v15, v17, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22);
    swift_bridgeObjectRelease_n(a2, 2);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Updating editable library menu with ordered identifiers=%{public}s, updated visibility for tabs=%{public}s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy(v20, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
    swift_bridgeObjectRelease_n(a1, 2);
  }
  sub_1006E23DC();
  v18 = swift_allocObject(&unk_1010D7CB8, 32, 7);
  *(_QWORD *)(v18 + 16) = a1;
  *(_QWORD *)(v18 + 24) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  RequestResponse.Controller.setNeedsReload(_:)((uint64_t)sub_1006EA1E8, v18);
  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

double sub_1006E27E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  double result;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  _BYTE v29[24];
  uint64_t v30;
  _BYTE v31[48];
  _BYTE v32[48];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[3];

  RequestResponse.Revision.content.getter((uint64_t)v32);
  if (*(_QWORD *)v32)
  {
    *(_QWORD *)v31 = *(_QWORD *)v32;
    *(_OWORD *)&v31[8] = *(_OWORD *)&v32[8];
    *(_OWORD *)&v31[24] = *(_OWORD *)&v32[24];
    *(_QWORD *)&v31[40] = *(_QWORD *)&v32[40];
    v6 = a3;
    if (!a3)
      v6 = swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1006E7A34(v6, (uint64_t *)v31, a4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_OWORD *)v32 = *(_OWORD *)v31;
    *(_OWORD *)&v32[16] = *(_OWORD *)&v31[16];
    *(_OWORD *)&v32[32] = *(_OWORD *)&v31[32];
    v13 = *(void **)&v31[8];
    v33 = *(_QWORD *)v31;
    v36 = *(_QWORD *)&v31[24];
    v37[0] = *(_QWORD *)&v31[16];
    v34 = *(_QWORD *)&v31[40];
    v35 = *(_QWORD *)&v31[32];
    sub_100055D0C(&v33);
    v14 = v13;
    sub_100055D0C(v37);
    sub_100055D0C(&v36);
    sub_100055D0C(&v35);
    sub_100055D0C(&v34);
    Library.Menu.persist()();
    sub_1001E3E14(&v33);

    sub_1001E3E14(v37);
    sub_1001E3E14(&v36);
    sub_1001E3E14(&v35);
    sub_1001E3E14(&v34);
    if (qword_10119C0C0 != -1)
      swift_once(&qword_10119C0C0, sub_10048D7F8);
    v15 = type metadata accessor for Logger(0);
    v16 = sub_100048B14(v15, (uint64_t)qword_10124D118);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(12, -1);
      v20 = swift_slowAlloc(32, -1);
      v30 = v20;
      *(_DWORD *)v19 = 136446210;
      swift_beginAccess(v31, v29, 0, 0);
      v21 = *(void **)&v31[8];
      v25 = *(_OWORD *)v31;
      v26 = *(_QWORD *)&v31[16];
      v27 = *(_OWORD *)&v31[24];
      v28 = *(_QWORD *)&v31[40];
      swift_bridgeObjectRetain();
      v22 = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v23 = String.init<A>(describing:)(&v25, &type metadata for Library.Menu);
      *(_QWORD *)&v25 = sub_100322200(v23, v24, &v30);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, (char *)&v25 + 8);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Successfully saved library menu edits %{public}s", v19, 0xCu);
      swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v20, -1, -1);
      swift_slowDealloc(v19, -1, -1);
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  else
  {
    if (qword_10119C0C0 != -1)
      swift_once(&qword_10119C0C0, sub_10048D7F8);
    v7 = type metadata accessor for Logger(0);
    v8 = sub_100048B14(v7, (uint64_t)qword_10124D118);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Failed to load editable Library Menu", v11, 2u);
      swift_slowDealloc(v11, -1, -1);
    }

  }
  return result;
}

uint64_t *sub_1006E2D4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;

  v1 = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011B5660);
  __chkstk_darwin(v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = _s9PlaylistsV5ScopeVMa(0);
  __chkstk_darwin(v5);
  v7 = (uint64_t *)((char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = _s9PlaylistsVMa(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011C47A8);
  __chkstk_darwin(v11);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource____lazy_storage___playlistsTabsController;
  if (*(_QWORD *)(v1
                 + OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource____lazy_storage___playlistsTabsController))
  {
    v15 = *(uint64_t **)(v1
                      + OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource____lazy_storage___playlistsTabsController);
  }
  else
  {
    v16 = type metadata accessor for Playlist.Folder(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v4, 1, 1, v16);
    if (qword_10119BE68 != -1)
      swift_once(&qword_10119BE68, sub_10031EF94);
    v17 = qword_10124CD80;
    sub_10004A160((uint64_t)v4, (uint64_t)v7 + *(int *)(v5 + 20), (uint64_t *)&unk_1011B5660);
    *v7 = v17;
    swift_bridgeObjectRetain();
    sub_10004FF60((uint64_t)v4, (uint64_t *)&unk_1011B5660);
    sub_10010B13C(v7, 0, (uint64_t)v10);
    v18 = swift_allocObject(&unk_1010D7B50, 24, 7);
    swift_unknownObjectWeakInit(v18 + 16);
    v19 = sub_100007E8C(&qword_1011C47C8);
    v20 = (_QWORD *)swift_allocObject(v19, 64, 7);
    v20[2] = sub_1006EA148;
    v20[3] = v18;
    v20[4] = sub_1006E3204;
    v20[5] = 0;
    v20[6] = sub_1006E33D4;
    v20[7] = 0;
    sub_1006EA150((uint64_t)v10, (uint64_t)v13);
    *(_QWORD *)&v13[*(int *)(v11 + 28)] = v20;
    v21 = sub_100007E8C((uint64_t *)&unk_1011C47D0);
    v22 = swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
    v15 = RequestResponse.Controller.init(request:)((uint64_t)v13, v22, v23, v24);
    *(_QWORD *)(v1 + v14) = v15;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v15;
}

void sub_1006E2FDC(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  ValueMetadata *v11;
  _UNKNOWN **v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  id v21;
  void *Strong;
  __int128 v23;
  uint64_t v24;
  _UNKNOWN **v25;
  _QWORD v26[3];
  ValueMetadata *v27;
  _UNKNOWN **v28;

  v6 = sub_100007E8C((uint64_t *)&unk_1011AD730);
  __chkstk_darwin(v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(a1, (uint64_t)v8, (uint64_t *)&unk_1011AD730);
  v9 = type metadata accessor for Playlist.Folder.Item(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011AD730);
    v11 = &_s20LibraryTabDataSourceC29PlaylistsTabElementIdentifierON;
    v12 = &off_1010D7E68;
    v27 = &_s20LibraryTabDataSourceC29PlaylistsTabElementIdentifierON;
    v28 = &off_1010D7E68;
    LOBYTE(v26[0]) = 0;
  }
  else
  {
    v24 = v9;
    v25 = &off_1010C8738;
    v13 = sub_100049F68(&v23);
    (*(void (**)(_QWORD *, char *, uint64_t))(v10 + 32))(v13, v8, v9);
    sub_100064C48(&v23, (uint64_t)v26);
    v11 = v27;
    v12 = v28;
  }
  v14 = a2 + 16;
  v15 = sub_10004A07C(0, &qword_1011C47E0, _UITabElementGroup_ptr);
  v16 = sub_1006EA194((uint64_t)v26, (uint64_t)v11);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v20 + 16))(v19, v17);
  v21 = sub_10048D920((uint64_t)v19, v15, (uint64_t)v11, (uint64_t)v12);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v26);
  objc_msgSend(v21, "_setAllowsReordering:", 0);
  objc_msgSend(v21, "_setAllowsHiding:", 1);
  objc_msgSend(v21, "_setTabBarPlacement:", 4);
  swift_beginAccess(v14, v26, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v14);
  objc_msgSend(v21, "_setDelegate:", Strong);

  *a3 = v21;
}

void sub_1006E3204(uint64_t a1, uint64_t a2, void **a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t, __n128);
  int v14;
  int v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  Class isa;
  uint64_t v26;
  uint64_t v27;

  v5 = type metadata accessor for Playlist.Folder.Item(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v26 - v11;
  v13 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16);
  v13((char *)&v26 - v11, a1, v5, v10);
  v14 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v12, v5);
  v15 = enum case for Playlist.Folder.Item.folder(_:);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  if (v14 != v15)
  {
    v16 = *a3;
    ((void (*)(char *, uint64_t, uint64_t))v13)(v8, a1, v5);
    v17 = sub_1006E6858((uint64_t)v8);
    v18 = objc_msgSend(v16, "_children");
    v19 = sub_10004A07C(0, &qword_10119D458, _UITab_ptr);
    v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v18, v19);

    v27 = v20;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v21);
    v23 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v22 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v23 >= v22 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v22 > 1, v23 + 1, 1);
    v24 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v23, v17);
    specialized Array._endMutation()(v24);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v16, "_setChildren:", isa, swift_bridgeObjectRelease().n128_f64[0]);

  }
}

void sub_1006E33D4(uint64_t a1, id *a2, uint64_t a3, void **a4)
{
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  Class isa;
  uint64_t v14;

  v4 = *a4;
  v5 = *a2;
  v6 = objc_msgSend(v4, "_children");
  v7 = sub_10004A07C(0, &qword_10119D458, _UITab_ptr);
  v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

  v14 = v8;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v9);
  v11 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v10 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v11 >= v10 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v10 > 1, v11 + 1, 1);
  v12 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, v5);
  specialized Array._endMutation()(v12);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v4, "_setChildren:", isa, swift_bridgeObjectRelease().n128_f64[0]);

}

uint64_t sub_1006E34E8(char a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BYTE v12[16];

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = &v12[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a1)
  {
    if (a1 == 1)
    {
      v8 = 0x79616C50206C6C41;
      v9 = 0xED0000737473696CLL;
    }
    else
    {
      v8 = 0x79616C502077654ELL;
      v9 = 0xEC0000007473696CLL;
    }
  }
  else
  {
    v8 = 0x7473696C79616C50;
    v9 = 0xE900000000000073;
  }
  v10 = String.LocalizationValue.init(stringLiteral:)(v8, v9);
  static Locale.current.getter(v10);
  return String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, 0, 0, 256);
}

id sub_1006E3628()
{
  NSString v0;
  id v1;

  v0 = String._bridgeToObjectiveC()();
  v1 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v0);

  return v1;
}

uint64_t sub_1006E36E8(char *a1, unsigned __int8 *a2)
{
  return sub_1005D1804(*a1, *a2);
}

Swift::Int sub_1006E36F4()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5, 0);
  v2 = 0xED00006C6C412E73;
  if (v1 != 1)
    v2 = 0xED000077654E2E73;
  if (v1)
    v3 = v2;
  else
    v3 = 0xEF70756F72472E73;
  String.hash(into:)(v5, 0x7473696C79616C50, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_1006E3790(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  v2 = 0xED00006C6C412E73;
  if (*v1 != 1)
    v2 = 0xED000077654E2E73;
  if (*v1)
    v3 = v2;
  else
    v3 = 0xEF70756F72472E73;
  String.hash(into:)(a1, 0x7473696C79616C50, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_1006E3808(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  _QWORD v6[9];

  v2 = *v1;
  Hasher.init(_seed:)(v6, a1);
  v3 = 0xED00006C6C412E73;
  if (v2 != 1)
    v3 = 0xED000077654E2E73;
  if (v2)
    v4 = v3;
  else
    v4 = 0xEF70756F72472E73;
  String.hash(into:)(v6, 0x7473696C79616C50, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

unint64_t sub_1006E38A0@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1006E7F34(*a1);
  *a2 = result;
  return result;
}

void sub_1006E38CC(_QWORD *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  v2 = 0xED00006C6C412E73;
  if (*v1 != 1)
    v2 = 0xED000077654E2E73;
  if (*v1)
    v3 = v2;
  else
    v3 = 0xEF70756F72472E73;
  *a1 = 0x7473696C79616C50;
  a1[1] = v3;
}

uint64_t sub_1006E3928()
{
  char *v0;

  return sub_1006E34E8(*v0);
}

id sub_1006E3930()
{
  return sub_1006E3628();
}

id sub_1006E3938(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  char *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  objc_super v16;

  v3 = &v2[OBJC_IVAR____TtCCC5Music16TabBarController20LibraryTabDataSourceP33_61F3902418D201A6CCACC7808D69420322CloudLibraryStatusView_state];
  *((_WORD *)v3 + 2) = 0;
  *(_DWORD *)v3 = 0;
  v3[6] = 1;
  __asm { FMOV            V0.2D, #24.0 }
  *(_OWORD *)&v2[OBJC_IVAR____TtCCC5Music16TabBarController20LibraryTabDataSourceP33_61F3902418D201A6CCACC7808D69420322CloudLibraryStatusView_defaultIntrinsicContentSize] = _Q0;
  *(_QWORD *)&v2[OBJC_IVAR____TtCCC5Music16TabBarController20LibraryTabDataSourceP33_61F3902418D201A6CCACC7808D69420322CloudLibraryStatusView_spinner] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtCCC5Music16TabBarController20LibraryTabDataSourceP33_61F3902418D201A6CCACC7808D69420322CloudLibraryStatusView_enablementButton] = 0;
  v9 = &v2[OBJC_IVAR____TtCCC5Music16TabBarController20LibraryTabDataSourceP33_61F3902418D201A6CCACC7808D69420322CloudLibraryStatusView_enablementHandler];
  *(_QWORD *)v9 = a1;
  *((_QWORD *)v9 + 1) = a2;
  v16.receiver = v2;
  v16.super_class = (Class)_s20LibraryTabDataSourceC22CloudLibraryStatusViewCMa();
  swift_retain();
  v10 = objc_msgSendSuper2(&v16, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v11 = (void *)objc_opt_self(UIColor);
  v12 = v10;
  v13 = objc_msgSend(v11, "clearColor", v16.receiver, v16.super_class);
  objc_msgSend(v12, "setBackgroundColor:", v13);

  v14 = v12;
  objc_msgSend(v14, "sizeToFit");

  swift_release();
  return v14;
}

uint64_t sub_1006E3B1C(unsigned int *a1, unsigned int *a2)
{
  unint64_t v2;
  unint64_t v3;

  v2 = *a1 | ((unint64_t)*((unsigned __int8 *)a1 + 4) << 32);
  v3 = *a2 | ((unint64_t)*((unsigned __int8 *)a2 + 4) << 32);
  if (*((_BYTE *)a1 + 5) != 1)
  {
    if ((*((_BYTE *)a2 + 5) & 1) != 0)
      return 0;
    if ((v2 & 0x100000000) != 0)
    {
      if ((v3 & 0x100000000) == 0)
        return 0;
    }
    else if ((v3 & 0x100000000) != 0 || *(float *)a1 != *(float *)a2)
    {
      return 0;
    }
    return 1;
  }
  if ((v2 & 0xFFFFFFFFFFLL) != 0)
  {
    if ((v3 & 0xFFFFFFFFFFLL) != 0)
      return *((unsigned __int8 *)a2 + 5);
    else
      return 0;
  }
  else if ((v3 & 0xFFFFFFFFFFLL) != 0)
  {
    return 0;
  }
  else
  {
    return *((unsigned __int8 *)a2 + 5);
  }
}

void sub_1006E3B98(uint64_t a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  id v15;
  double v16;
  uint64_t v17;
  int v18;
  id v19;
  id v20;
  char *v21;
  uint64_t v22;
  NSString v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  _BYTE v28[16];

  v2 = v1;
  v4 = type metadata accessor for UIButton.Configuration(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v28[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v10 = &v28[-v9];
  if ((v2[OBJC_IVAR____TtCCC5Music16TabBarController20LibraryTabDataSourceP33_61F3902418D201A6CCACC7808D69420322CloudLibraryStatusView_state
         + 6] & 1) != 0)
  {
    if ((a1 & 0x1000000000000) != 0)
      return;
    goto LABEL_20;
  }
  v11 = *(unsigned int *)&v2[OBJC_IVAR____TtCCC5Music16TabBarController20LibraryTabDataSourceP33_61F3902418D201A6CCACC7808D69420322CloudLibraryStatusView_state] | ((unint64_t)*(unsigned __int16 *)&v2[OBJC_IVAR____TtCCC5Music16TabBarController20LibraryTabDataSourceP33_61F3902418D201A6CCACC7808D69420322CloudLibraryStatusView_state + 4] << 32);
  if ((a1 & 0x1000000000000) != 0)
  {
    if ((v11 & 0x10000000000) == 0)
      goto LABEL_12;
    if ((v11 & 0xFFFFFFFFFFLL) != 0)
      goto LABEL_20;
    goto LABEL_28;
  }
  v12 = a1 & 0xFFFFFFFFFFLL;
  if ((v11 & 0x10000000000) != 0)
  {
    if ((v11 & 0xFFFFFFFFFFLL) != 0)
    {
      if ((a1 & 0x10000000000) != 0 && v12)
        return;
LABEL_20:
      sub_1006E4224(0);
      sub_1006E42F4(0);
LABEL_24:
      objc_msgSend(v2, "invalidateIntrinsicContentSize");
      return;
    }
    if ((a1 & 0x10000000000) != 0 && !v12)
      return;
LABEL_28:
    sub_1006E4224(0);
    if (!*(_QWORD *)&v2[OBJC_IVAR____TtCCC5Music16TabBarController20LibraryTabDataSourceP33_61F3902418D201A6CCACC7808D69420322CloudLibraryStatusView_enablementButton])
    {
      static UIButton.Configuration.plain()(v22);
      v23 = String._bridgeToObjectiveC()();
      v24 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v23);

      UIButton.Configuration.image.setter(v24);
      sub_10004A07C(0, (unint64_t *)&unk_1011AD710, UIButton_ptr);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 16))(v7, v10, v4);
      sub_10004A07C(0, &qword_1011A3440, UIAction_ptr);
      v25 = swift_allocObject(&unk_1010D7AB0, 24, 7);
      swift_unknownObjectWeakInit(v25 + 16);
      v26 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_1006E6064, v25);
      v27 = (void *)UIButton.init(configuration:primaryAction:)(v7, v26);
      sub_1006E42F4(v27);
      (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v10, v4);
    }
    goto LABEL_24;
  }
  if ((a1 & 0x10000000000) != 0)
    goto LABEL_12;
  if ((v11 & 0x100000000) != 0)
  {
    if ((a1 & 0x100000000) != 0)
      return;
LABEL_12:
    sub_1006E42F4(0);
    v13 = *(void **)&v2[OBJC_IVAR____TtCCC5Music16TabBarController20LibraryTabDataSourceP33_61F3902418D201A6CCACC7808D69420322CloudLibraryStatusView_spinner];
    if (v13)
    {
      v14 = *(char **)&v2[OBJC_IVAR____TtCCC5Music16TabBarController20LibraryTabDataSourceP33_61F3902418D201A6CCACC7808D69420322CloudLibraryStatusView_spinner];
      if ((v11 & 0x100000000) == 0)
      {
LABEL_14:
        v15 = v13;
        *(double *)&v17 = *(float *)&v11;
        v18 = 0;
LABEL_23:
        CircularProgressView.setState(_:animated:)(v17, v18, 0, v16);
        v21 = v14;
        sub_1006E4224(v14);

        goto LABEL_24;
      }
    }
    else
    {
      v19 = objc_allocWithZone((Class)type metadata accessor for CircularProgressView());
      v14 = CircularProgressView.init(size:)(24.0, 24.0);
      if ((v11 & 0x100000000) == 0)
        goto LABEL_14;
    }
    v20 = v13;
    v17 = 1;
    v18 = 256;
    goto LABEL_23;
  }
  if ((a1 & 0x100000000) != 0
    || *(float *)&v2[OBJC_IVAR____TtCCC5Music16TabBarController20LibraryTabDataSourceP33_61F3902418D201A6CCACC7808D69420322CloudLibraryStatusView_state] != *(float *)&a1)
  {
    goto LABEL_12;
  }
}

uint64_t sub_1006E3EC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  void *v4;
  uint64_t v5;
  void (*v6)(void *);
  _BYTE v7[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v2);
  if (result)
  {
    v4 = (void *)result;
    v6 = *(void (**)(void *))(result
                                       + OBJC_IVAR____TtCCC5Music16TabBarController20LibraryTabDataSourceP33_61F3902418D201A6CCACC7808D69420322CloudLibraryStatusView_enablementHandler);
    v5 = *(_QWORD *)(result
                   + OBJC_IVAR____TtCCC5Music16TabBarController20LibraryTabDataSourceP33_61F3902418D201A6CCACC7808D69420322CloudLibraryStatusView_enablementHandler
                   + 8);
    swift_retain(v5);
    v6(v4);

    return swift_release(v5);
  }
  return result;
}

void sub_1006E3F3C()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  objc_super v5;

  v5.receiver = v0;
  v5.super_class = (Class)_s20LibraryTabDataSourceC22CloudLibraryStatusViewCMa();
  objc_msgSendSuper2(&v5, "layoutSubviews");
  v1 = *(void **)&v0[OBJC_IVAR____TtCCC5Music16TabBarController20LibraryTabDataSourceP33_61F3902418D201A6CCACC7808D69420322CloudLibraryStatusView_enablementButton];
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v0, "bounds");
    objc_msgSend(v2, "setFrame:");

  }
  v3 = *(void **)&v0[OBJC_IVAR____TtCCC5Music16TabBarController20LibraryTabDataSourceP33_61F3902418D201A6CCACC7808D69420322CloudLibraryStatusView_spinner];
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v0, "bounds");
    objc_msgSend(v4, "setFrame:");

  }
}

double sub_1006E4064()
{
  uint64_t v0;
  unint64_t v1;
  double result;
  double v3;
  void *v4;

  if ((*(_BYTE *)(v0
                 + OBJC_IVAR____TtCCC5Music16TabBarController20LibraryTabDataSourceP33_61F3902418D201A6CCACC7808D69420322CloudLibraryStatusView_state
                 + 6) & 1) != 0)
    goto LABEL_6;
  v1 = *(unsigned int *)(v0
                       + OBJC_IVAR____TtCCC5Music16TabBarController20LibraryTabDataSourceP33_61F3902418D201A6CCACC7808D69420322CloudLibraryStatusView_state) | ((unint64_t)*(unsigned __int16 *)(v0 + OBJC_IVAR____TtCCC5Music16TabBarController20LibraryTabDataSourceP33_61F3902418D201A6CCACC7808D69420322CloudLibraryStatusView_state + 4) << 32);
  if ((v1 & 0x10000000000) != 0)
  {
    if ((v1 & 0xFFFFFFFFFFLL) == 0)
    {
      v4 = *(void **)(v0
                    + OBJC_IVAR____TtCCC5Music16TabBarController20LibraryTabDataSourceP33_61F3902418D201A6CCACC7808D69420322CloudLibraryStatusView_enablementButton);
      if (v4)
      {
        objc_msgSend(v4, "intrinsicContentSize");
        goto LABEL_9;
      }
    }
LABEL_6:
    v3 = *(double *)(v0
                   + OBJC_IVAR____TtCCC5Music16TabBarController20LibraryTabDataSourceP33_61F3902418D201A6CCACC7808D69420322CloudLibraryStatusView_defaultIntrinsicContentSize);
    result = v3;
    goto LABEL_10;
  }
  if (!*(_QWORD *)(v0
                  + OBJC_IVAR____TtCCC5Music16TabBarController20LibraryTabDataSourceP33_61F3902418D201A6CCACC7808D69420322CloudLibraryStatusView_spinner))
    goto LABEL_6;
  CircularProgressView.intrinsicContentSize.getter();
LABEL_9:
  v3 = *(double *)(v0
                 + OBJC_IVAR____TtCCC5Music16TabBarController20LibraryTabDataSourceP33_61F3902418D201A6CCACC7808D69420322CloudLibraryStatusView_defaultIntrinsicContentSize);
LABEL_10:
  if (result <= v3)
    return v3;
  return result;
}

double sub_1006E411C()
{
  uint64_t v0;
  unint64_t v1;
  double result;
  double v3;
  void *v4;

  if ((*(_BYTE *)(v0
                 + OBJC_IVAR____TtCCC5Music16TabBarController20LibraryTabDataSourceP33_61F3902418D201A6CCACC7808D69420322CloudLibraryStatusView_state
                 + 6) & 1) != 0)
    goto LABEL_6;
  v1 = *(unsigned int *)(v0
                       + OBJC_IVAR____TtCCC5Music16TabBarController20LibraryTabDataSourceP33_61F3902418D201A6CCACC7808D69420322CloudLibraryStatusView_state) | ((unint64_t)*(unsigned __int16 *)(v0 + OBJC_IVAR____TtCCC5Music16TabBarController20LibraryTabDataSourceP33_61F3902418D201A6CCACC7808D69420322CloudLibraryStatusView_state + 4) << 32);
  if ((v1 & 0x10000000000) != 0)
  {
    if ((v1 & 0xFFFFFFFFFFLL) == 0)
    {
      v4 = *(void **)(v0
                    + OBJC_IVAR____TtCCC5Music16TabBarController20LibraryTabDataSourceP33_61F3902418D201A6CCACC7808D69420322CloudLibraryStatusView_enablementButton);
      if (v4)
      {
        objc_msgSend(v4, "sizeThatFits:");
        goto LABEL_9;
      }
    }
LABEL_6:
    v3 = *(double *)(v0
                   + OBJC_IVAR____TtCCC5Music16TabBarController20LibraryTabDataSourceP33_61F3902418D201A6CCACC7808D69420322CloudLibraryStatusView_defaultIntrinsicContentSize);
    result = v3;
    goto LABEL_10;
  }
  if (!*(_QWORD *)(v0
                  + OBJC_IVAR____TtCCC5Music16TabBarController20LibraryTabDataSourceP33_61F3902418D201A6CCACC7808D69420322CloudLibraryStatusView_spinner))
    goto LABEL_6;
  result = CircularProgressView.sizeThatFits(_:)();
LABEL_9:
  v3 = *(double *)(v0
                 + OBJC_IVAR____TtCCC5Music16TabBarController20LibraryTabDataSourceP33_61F3902418D201A6CCACC7808D69420322CloudLibraryStatusView_defaultIntrinsicContentSize);
LABEL_10:
  if (result <= v3)
    return v3;
  return result;
}

void sub_1006E4224(void *a1)
{
  char *v1;
  char *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  char v8;
  id v9;

  v2 = v1;
  v3 = a1;
  v4 = OBJC_IVAR____TtCCC5Music16TabBarController20LibraryTabDataSourceP33_61F3902418D201A6CCACC7808D69420322CloudLibraryStatusView_spinner;
  v5 = *(void **)&v2[OBJC_IVAR____TtCCC5Music16TabBarController20LibraryTabDataSourceP33_61F3902418D201A6CCACC7808D69420322CloudLibraryStatusView_spinner];
  *(_QWORD *)&v2[OBJC_IVAR____TtCCC5Music16TabBarController20LibraryTabDataSourceP33_61F3902418D201A6CCACC7808D69420322CloudLibraryStatusView_spinner] = a1;
  v9 = a1;
  if (v3)
  {
    if (!v5)
    {
LABEL_7:
      objc_msgSend(v2, "addSubview:", v3);
      goto LABEL_8;
    }
    type metadata accessor for CircularProgressView();
    v6 = v5;
    v7 = v9;
    v8 = static NSObject.== infix(_:_:)(v7, v6);

    if ((v8 & 1) != 0)
      goto LABEL_9;
  }
  else if (!v5)
  {
    goto LABEL_8;
  }
  objc_msgSend(v5, "removeFromSuperview");
  v3 = *(void **)&v2[v4];
  if (v3)
    goto LABEL_7;
LABEL_8:
  v6 = v5;
LABEL_9:

}

void sub_1006E42F4(void *a1)
{
  char *v1;
  char *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  char v8;
  id v9;

  v2 = v1;
  v3 = a1;
  v4 = OBJC_IVAR____TtCCC5Music16TabBarController20LibraryTabDataSourceP33_61F3902418D201A6CCACC7808D69420322CloudLibraryStatusView_enablementButton;
  v5 = *(void **)&v2[OBJC_IVAR____TtCCC5Music16TabBarController20LibraryTabDataSourceP33_61F3902418D201A6CCACC7808D69420322CloudLibraryStatusView_enablementButton];
  *(_QWORD *)&v2[OBJC_IVAR____TtCCC5Music16TabBarController20LibraryTabDataSourceP33_61F3902418D201A6CCACC7808D69420322CloudLibraryStatusView_enablementButton] = a1;
  v9 = a1;
  if (v3)
  {
    if (!v5)
    {
LABEL_7:
      objc_msgSend(v2, "addSubview:", v3);
      goto LABEL_8;
    }
    sub_10004A07C(0, (unint64_t *)&unk_1011AD710, UIButton_ptr);
    v6 = v5;
    v7 = v9;
    v8 = static NSObject.== infix(_:_:)(v7, v6);

    if ((v8 & 1) != 0)
      goto LABEL_9;
  }
  else if (!v5)
  {
    goto LABEL_8;
  }
  objc_msgSend(v5, "removeFromSuperview");
  v3 = *(void **)&v2[v4];
  if (v3)
    goto LABEL_7;
LABEL_8:
  v6 = v5;
LABEL_9:

}

id sub_1006E4400()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)_s20LibraryTabDataSourceC22CloudLibraryStatusViewCMa();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id sub_1006E4480()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  void *v8;
  id v9;

  v1 = OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource____lazy_storage___cloudLibraryStatusView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource____lazy_storage___cloudLibraryStatusView);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource____lazy_storage___cloudLibraryStatusView);
  }
  else
  {
    v4 = v0;
    v5 = swift_allocObject(&unk_1010D7B50, 24, 7);
    swift_unknownObjectWeakInit(v5 + 16);
    v6 = objc_allocWithZone((Class)_s20LibraryTabDataSourceC22CloudLibraryStatusViewCMa());
    v7 = sub_1006E3938((uint64_t)sub_1006EA140, v5);
    v8 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v7;
    v3 = v7;

    v2 = 0;
  }
  v9 = v2;
  return v3;
}

void sub_1006E4524(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  _BYTE v15[72];
  _BYTE v16[24];
  _QWORD v17[5];
  char v18;

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = objc_msgSend(*(id *)(Strong + OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource_rootTab), "tabBarController");
    if (v6)
    {
      v7 = v6;
      v8 = a1;
      v9 = v7;
      objc_msgSend(v8, "bounds");
      v17[0] = a1;
      v17[1] = v10;
      v17[2] = v11;
      v17[3] = v12;
      v17[4] = v13;
      v18 = 0;
      v14 = v8;
      PresentationSource.init(viewController:position:)(v9, (uint64_t)v17, (uint64_t)v15);
      static CloudLibrary.presentCloudLibraryEnabler(context:presentationSource:style:completion:)(0, (uint64_t)v15, a1, 0, 0);

      sub_100064B4C((uint64_t)v15);
    }
    else
    {

    }
  }
}

void sub_1006E461C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  _BYTE *v7;
  char *v8;
  unint64_t v9;
  unsigned __int8 v10;
  char *v11;
  const mach_header_64 *v12;
  char *v13;
  unint64_t v14;
  unsigned __int8 v15;
  unint64_t v16;
  char *v17;
  _BOOL4 v18;
  uint64_t v19;
  unsigned int v20;

  v2 = v1;
  v4 = OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource_cloudLibraryStatus;
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource_cloudLibraryStatus);
  if ((static CloudLibrary.Status.__derived_enum_equals(_:_:)(a1, v5) & 1) != 0)
    return;
  v6 = v5 >> 30;
  if (!(v5 >> 30))
    goto LABEL_7;
  if (v6 == 1)
    goto LABEL_8;
  if (v6 != 2)
  {
LABEL_11:
    v7 = sub_1006E4480();
    v17 = &v7[OBJC_IVAR____TtCCC5Music16TabBarController20LibraryTabDataSourceP33_61F3902418D201A6CCACC7808D69420322CloudLibraryStatusView_state];
    v9 = *(unsigned int *)&v7[OBJC_IVAR____TtCCC5Music16TabBarController20LibraryTabDataSourceP33_61F3902418D201A6CCACC7808D69420322CloudLibraryStatusView_state] | ((unint64_t)*(unsigned __int16 *)&v7[OBJC_IVAR____TtCCC5Music16TabBarController20LibraryTabDataSourceP33_61F3902418D201A6CCACC7808D69420322CloudLibraryStatusView_state + 4] << 32);
    v10 = v7[OBJC_IVAR____TtCCC5Music16TabBarController20LibraryTabDataSourceP33_61F3902418D201A6CCACC7808D69420322CloudLibraryStatusView_state
           + 6];
    *(_DWORD *)v17 = 1;
    *((_WORD *)v17 + 2) = 256;
    v17[6] = 0;
    goto LABEL_12;
  }
  if (v5 == 2147483652)
  {
LABEL_8:
    v11 = (char *)sub_1006E4480();
    v7 = v11;
    v12 = (const mach_header_64 *)HIDWORD(*(_QWORD *)(v2 + v4));
    if ((*(_QWORD *)(v2 + v4) & 0xC0000000) != 0x40000000)
      v12 = &_mh_execute_header;
    v13 = &v11[OBJC_IVAR____TtCCC5Music16TabBarController20LibraryTabDataSourceP33_61F3902418D201A6CCACC7808D69420322CloudLibraryStatusView_state];
    v14 = *(unsigned int *)&v11[OBJC_IVAR____TtCCC5Music16TabBarController20LibraryTabDataSourceP33_61F3902418D201A6CCACC7808D69420322CloudLibraryStatusView_state] | ((unint64_t)*(unsigned __int16 *)&v11[OBJC_IVAR____TtCCC5Music16TabBarController20LibraryTabDataSourceP33_61F3902418D201A6CCACC7808D69420322CloudLibraryStatusView_state + 4] << 32);
    v15 = v11[OBJC_IVAR____TtCCC5Music16TabBarController20LibraryTabDataSourceP33_61F3902418D201A6CCACC7808D69420322CloudLibraryStatusView_state
            + 6];
    *(_DWORD *)v13 = (_DWORD)v12;
    *((_WORD *)v13 + 2) = WORD2(v12);
    v13[6] = 0;
    v16 = v14 | ((unint64_t)v15 << 48);
    goto LABEL_13;
  }
  if (v5 != 2147483651)
    goto LABEL_11;
LABEL_7:
  v7 = sub_1006E4480();
  v8 = &v7[OBJC_IVAR____TtCCC5Music16TabBarController20LibraryTabDataSourceP33_61F3902418D201A6CCACC7808D69420322CloudLibraryStatusView_state];
  v9 = *(unsigned int *)&v7[OBJC_IVAR____TtCCC5Music16TabBarController20LibraryTabDataSourceP33_61F3902418D201A6CCACC7808D69420322CloudLibraryStatusView_state] | ((unint64_t)*(unsigned __int16 *)&v7[OBJC_IVAR____TtCCC5Music16TabBarController20LibraryTabDataSourceP33_61F3902418D201A6CCACC7808D69420322CloudLibraryStatusView_state + 4] << 32);
  v10 = v7[OBJC_IVAR____TtCCC5Music16TabBarController20LibraryTabDataSourceP33_61F3902418D201A6CCACC7808D69420322CloudLibraryStatusView_state
         + 6];
  *(_DWORD *)v8 = 0;
  *((_WORD *)v8 + 2) = 256;
  v8[6] = 0;
LABEL_12:
  v16 = v9 | ((unint64_t)v10 << 48);
LABEL_13:
  sub_1006E3B98(v16);

  v18 = a1 >> 30 < 2 || a1 >> 30 == 2 && (unint64_t)(a1 - 2147483651) < 2;
  v19 = *(_QWORD *)(v2 + v4);
  v20 = v19 >> 30;
  if (!(v19 >> 30) || v20 == 1 || v20 == 2 && (v19 == 2147483651 || v19 == 2147483652))
  {
    if (v18)
      return;
LABEL_26:
    sub_1006E06B4();
    return;
  }
  if (v18)
    goto LABEL_26;
}

id sub_1006E4810()
{
  return sub_10012CF24(&OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource____lazy_storage___playlistSortButton, (uint64_t (*)(uint64_t))sub_1006E4824);
}

id sub_1006E4824()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  NSString v14;
  id v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  NSString v21;
  _BYTE v23[16];
  _QWORD aBlock[6];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v23[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v3);
  v5 = &v23[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for UIButton.Configuration(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v12 = &v23[-v11];
  static UIButton.Configuration.plain()(v13);
  v14 = String._bridgeToObjectiveC()();
  v15 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v14);

  UIButton.Configuration.image.setter(v15);
  sub_10004A07C(0, (unint64_t *)&unk_1011AD710, UIButton_ptr);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 16))(v9, v12, v6);
  v16 = (void *)UIButton.init(configuration:primaryAction:)(v9, 0);
  v17 = swift_allocObject(&unk_1010D7B50, 24, 7);
  swift_unknownObjectWeakInit(v17 + 16);
  aBlock[4] = sub_1006EA12C;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100170D48;
  aBlock[3] = &unk_1010D7C80;
  v18 = _Block_copy(aBlock);
  objc_msgSend(v16, "_setMenuProvider:", v18, swift_release().n128_f64[0]);
  _Block_release(v18);
  objc_msgSend(v16, "setShowsMenuAsPrimaryAction:", 1);
  objc_msgSend(v16, "setPointerInteractionEnabled:", 1);
  v19 = v16;
  v20 = String.LocalizationValue.init(stringLiteral:)(0x79422074726F53, 0xE700000000000000);
  static Locale.current.getter(v20);
  String.init(localized:table:bundle:locale:comment:)(v5, 0, 0, 0, v2, 0, 0, 256);
  v21 = String._bridgeToObjectiveC()();
  objc_msgSend(v19, "setAccessibilityLabel:", v21, swift_bridgeObjectRelease().n128_f64[0]);

  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v12, v6);
  return v19;
}

Class sub_1006E4B0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  Class Strong;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  _BYTE v15[24];
  _BYTE v16[24];
  _BYTE v17[24];

  v4 = _s9PlaylistsVMa(0);
  __chkstk_darwin(v4);
  v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = a3 + 16;
  swift_beginAccess(a3 + 16, v17, 0, 0);
  Strong = (Class)swift_unknownObjectWeakLoadStrong(a3 + 16);
  if (Strong)
  {
    v9 = sub_1006E2D4C();

    v10 = (uint64_t)v9 + *(_QWORD *)(*v9 + 96);
    swift_beginAccess(v10, v16, 0, 0);
    sub_10005B704(v10, (uint64_t)v6, _s9PlaylistsVMa);
    swift_release();
    v11 = swift_allocObject(&unk_1010D7B50, 24, 7);
    swift_beginAccess(v7, v15, 0, 0);
    v12 = (void *)swift_unknownObjectWeakLoadStrong(v7);
    swift_unknownObjectWeakInit(v11 + 16);

    swift_retain();
    Strong = sub_1008BA6D0((uint64_t)sub_1006EA134, v11).super.super.isa;
    swift_release();
    sub_10005B748((uint64_t)v6, _s9PlaylistsVMa);
    swift_release();
  }
  return Strong;
}

double sub_1006E4C74(__int16 a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t Strong;
  double result;
  void *v9;
  uint64_t *v10;
  uint64_t v11;
  unsigned __int8 *v12;
  __int16 v13;
  int v14;
  __int16 v15;
  _BYTE v16[24];
  _BYTE v17[24];

  v4 = sub_100007E8C(&qword_1011C47A8);
  __chkstk_darwin(v4);
  v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a2 += 16;
  swift_beginAccess(a2, v17, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v9 = (void *)Strong;
    v10 = sub_1006E2D4C();

    v11 = (uint64_t)v10 + *(_QWORD *)(*v10 + 96);
    swift_beginAccess(v11, v16, 0, 0);
    sub_10004A160(v11, (uint64_t)v6, &qword_1011C47A8);
    v12 = &v6[*(int *)(_s9PlaylistsVMa(0) + 36)];
    v13 = *v12;
    v14 = v12[1];
    *v12 = a1;
    v12[1] = HIBYTE(a1) & 1;
    if (v14)
      v15 = 256;
    else
      v15 = 0;
    sub_10010B8F4(v15 | v13);
    RequestResponse.Controller.request.setter((uint64_t)v6);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

id sub_1006E4D94()
{
  return sub_10012CF24(&OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource____lazy_storage___homeSharingButton, (uint64_t (*)(uint64_t))sub_1006E4DA8);
}

void *sub_1006E4DA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  NSString v8;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  _QWORD aBlock[6];

  v0 = type metadata accessor for UIButton.Configuration(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)aBlock - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)aBlock - v5;
  static UIButton.Configuration.plain()(v7);
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v8);

  UIButton.Configuration.image.setter(v9);
  sub_10004A07C(0, (unint64_t *)&unk_1011AD710, UIButton_ptr);
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v3, v6, v0);
  v10 = (void *)UIButton.init(configuration:primaryAction:)(v3, 0);
  v11 = swift_allocObject(&unk_1010D7B50, 24, 7);
  swift_unknownObjectWeakInit(v11 + 16);
  aBlock[4] = sub_1006EA124;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100170D48;
  aBlock[3] = &unk_1010D7C58;
  v12 = _Block_copy(aBlock);
  objc_msgSend(v10, "_setMenuProvider:", v12, swift_release().n128_f64[0]);
  _Block_release(v12);
  objc_msgSend(v10, "setShowsMenuAsPrimaryAction:", 1);
  objc_msgSend(v10, "setPointerInteractionEnabled:", 1);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  return v10;
}

Class sub_1006E4FA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  Class Strong;
  _BYTE v6[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v6, 0, 0);
  Strong = (Class)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    swift_retain();

    Strong = sub_10042F288().super.super.isa;
    swift_release();
  }
  return Strong;
}

void sub_1006E5040(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[15];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = &unk_100ECB678;
  v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[3] = &unk_100ECB690;
  v4[4] = &unk_100ECB6A8;
  v4[5] = &unk_100ECB6A8;
  v4[6] = &unk_100ECB6A8;
  sub_1000EA5DC(319);
  if (v3 <= 0x3F)
  {
    v4[7] = *(_QWORD *)(v2 - 8) + 64;
    v4[8] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[9] = &unk_100ECB6A8;
    v4[10] = &unk_100ECB6C0;
    v4[11] = &unk_100ECB6A8;
    v4[12] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[13] = &unk_100ECB6A8;
    v4[14] = &unk_100ECB6A8;
    swift_updateClassMetadata2(a1, 256, 15, v4, a1 + 80);
  }
}

uint64_t _s20LibraryTabDataSourceC22CloudLibraryStatusViewCMa()
{
  return objc_opt_self(_TtCCC5Music16TabBarController20LibraryTabDataSourceP33_61F3902418D201A6CCACC7808D69420322CloudLibraryStatusView);
}

void sub_1006E5124(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource_cloudLibraryStatus);
  *(_QWORD *)(v1 + OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource_cloudLibraryStatus) = a1;
  sub_1006E461C(v2);
}

void sub_1006E513C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  void *v11;
  char v12;
  BOOL v13;
  unsigned __int8 v14;

  Library.Menu.Request.MediaLibrarySource.init(_:)();
  v8 = v7;
  v10 = v9;
  v11 = *(void **)a1;
  v12 = *(_BYTE *)(a1 + 8);
  swift_retain();
  sub_1002F5684(v11, v12);
  *(_QWORD *)a1 = v8;
  *(_BYTE *)(a1 + 8) = v10 & 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = a3;
  if ((a4 & 1) != 0)
    sub_10019636C(&v14, 0xCu);
  v13 = (a4 & 1) == 0;
  *(_BYTE *)(a1 + 40) = v13;
  *(_BYTE *)(a1 + 41) = v13;
}

void sub_1006E52C4(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  double v20;
  double v21;
  double v22;
  __n128 v23;
  void *v24;
  void (*v25)(_BYTE *, _QWORD);
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  id v29;
  double v30;
  double v31;
  double v32;
  double v33;
  uint64_t v34;
  double v35;
  __n128 v36;
  void (*v37)(_BYTE *, _QWORD);
  NSString v38;
  double v39;
  id v40;
  void *v41;
  id v42;
  uint64_t v43;
  id v44;
  id v45;
  _BYTE v46[32];
  _BYTE v47[24];

  v9 = type metadata accessor for UIView.Corner.Radius(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for UIView.Corner(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for UIListContentConfiguration(0);
  if (a1)
  {
    v17 = swift_projectBox(a3);
    v44 = a5;
    v18 = v17;
    swift_beginAccess(v17, v46, 33, 0);
    v45 = a1;
    UIListContentConfiguration.image.setter(a1);
    swift_endAccess(v46);
    v19 = objc_msgSend(a4, "traitCollection");
    objc_msgSend(v19, "displayScale");
    v21 = v20;

    if (v21 < 1.0)
      v22 = 1.0;
    else
      v22 = 1.0 / v21;
    v23 = swift_beginAccess(v18, v47, 33, 0);
    v24 = a4;
    v25 = (void (*)(_BYTE *, _QWORD))UIListContentConfiguration.imageProperties.modify(v46, v23);
    UIListContentConfiguration.ImageProperties.strokeWidth.setter(v22);
    v25(v46, 0);
    swift_endAccess(v47);
    v26 = UIView.Corner.extraSmall.unsafeMutableAddressor();
    v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v26, v13);
    v28 = UIView.Corner.radius.getter(v27);
    (*(void (**)(char *, uint64_t, __n128))(v14 + 8))(v16, v13, v28);
    v29 = objc_msgSend((id)objc_opt_self(UIFontMetrics), "defaultMetrics");
    objc_msgSend(v29, "scaledValueForValue:", 28.0);
    v31 = v30;
    objc_msgSend(v29, "scaledValueForValue:", 28.0);
    v33 = v32;

    v35 = UIView.Corner.Radius.value(in:)(v34, v31, v33);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v36 = swift_beginAccess(v18, v47, 33, 0);
    v37 = (void (*)(_BYTE *, _QWORD))UIListContentConfiguration.imageProperties.modify(v46, v36);
    UIListContentConfiguration.ImageProperties.cornerRadius.setter(v35);
    v37(v46, 0);
    swift_endAccess(v47);
    v38 = objc_msgSend(v44, "_identifier");
    if (!v38)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v38 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v39 = swift_bridgeObjectRelease().n128_u64[0];
    }
    v40 = objc_msgSend(v24, "_uip_tabForIdentifier:", v38, v39);

    v41 = v45;
    if (v40)
    {
      v42 = v40;
      objc_msgSend(v42, "setImage:", v41);

    }
  }
}

unint64_t sub_1006E5654(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t Strong;
  char *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t inited;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t KeyPath;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  id v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  void *v66;
  char *v67;
  _QWORD *v68;
  uint64_t v69;
  void *v70;
  _BYTE v71[72];
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD v76[10];
  _OWORD v77[10];
  _QWORD v78[10];
  _BYTE v79[32];
  uint64_t v80;
  char v81;

  v8 = sub_100007E8C((uint64_t *)&unk_1011A8780);
  __chkstk_darwin(v8);
  v10 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v62 - v12;
  v14 = sub_100007E8C((uint64_t *)&unk_1011A9990);
  __chkstk_darwin(v14);
  v16 = (uint64_t *)((char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = sub_100007E8C((uint64_t *)&unk_1011A20C0);
  __chkstk_darwin(v17);
  v19 = (char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100007E8C((uint64_t *)&unk_1011A3D60);
  __chkstk_darwin(v20);
  v22 = (char *)&v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, &v75, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (!Strong)
    return 0;
  v24 = (char *)Strong;
  v25 = a3 + 16;
  swift_beginAccess(v25, &v74, 0, 0);
  v26 = (void *)swift_unknownObjectWeakLoadStrong(v25);
  if (v26)
  {
    v64 = v26;
    v68 = v16;
    v27 = sub_100007E8C((uint64_t *)&unk_1011A20E0);
    inited = swift_initStackObject(v27, &v73);
    *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
    v65 = inited;
    sub_10048DDF0((_QWORD *)(inited + 32));
    sub_10004A160(a5, (uint64_t)v22, (uint64_t *)&unk_1011A3D60);
    v29 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
    v30 = *(_QWORD *)(v29 - 8);
    v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48))(v22, 1, v29);
    if ((_DWORD)v31 == 1)
    {
      sub_10004FF60((uint64_t)v22, (uint64_t *)&unk_1011A3D60);
      v70 = 0;
    }
    else
    {
      v70 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v31);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v22, v29);
    }
    v33 = type metadata accessor for PlaylistContext(0);
    v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56);
    v67 = v19;
    v34(v19, 1, 1, v33);
    v66 = v24;
    v35 = *(_QWORD *)&v24[OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource_sharedLibrariesController];
    KeyPath = swift_getKeyPath(&unk_100ECB7E0);
    v37 = swift_getKeyPath(&unk_100ECB808);
    static Published.subscript.getter(v78, v35, KeyPath, v37);
    swift_release();
    swift_release();
    v69 = v78[0];
    v38 = type metadata accessor for MetricsEvent.Page(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v13, 1, 1, v38);
    sub_10004A160((uint64_t)v13, (uint64_t)v10, (uint64_t *)&unk_1011A8780);
    v39 = MetricsReportingController.shared.unsafeMutableAddressor();
    sub_100540B34();
    v63 = v40;
    v42 = v41;
    v43 = (void *)*v39;
    v44 = qword_10119B8B8;
    v45 = v43;
    if (v44 != -1)
      swift_once(&qword_10119B8B8, sub_1000E968C);
    v46 = qword_10124C790;
    swift_retain();
    v47 = GroupActivitiesManager.hasJoined.getter();
    v48 = GroupActivitiesManager.participantsCount.getter();
    v49 = (uint64_t *)(v46 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
    swift_beginAccess(v46 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, &v72, 0, 0);
    v50 = *v49;

    swift_release();
    v61 = v50;
    v51 = v68;
    Actions.MetricsReportingContext.init(actionContext:page:pageContext:locations:impressions:sharedListeningContext:)(0, 5, (uint64_t)v10, v63, v42, 0, 0, v47 & 1, v68, v48, v61);
    sub_10004FF60((uint64_t)v13, (uint64_t *)&unk_1011A8780);
    v52 = type metadata accessor for Actions.MetricsReportingContext(0);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v51, 0, 1, v52);
    memset(v78, 0, sizeof(v78));
    memset(v79, 0, sizeof(v79));
    v80 = 0;
    v81 = -1;
    v53 = v64;
    PresentationSource.init(viewController:position:)(v53, (uint64_t)v79, (uint64_t)v71);
    if (qword_10119B8C0 != -1)
      swift_once(&qword_10119B8C0, sub_1000E9774);
    v54 = qword_10119B8C8;
    v55 = (id)qword_10124C798;
    v56 = (unint64_t)v67;
    v57 = v65;
    if (v54 != -1)
      swift_once(&qword_10119B8C8, sub_1000E97E8);
    v58 = qword_10124C7A0;
    swift_retain();
    sub_100495120(v57, v70, v56, v69, v55, v58, (unint64_t)v51, (uint64_t)v78, v76, (uint64_t)v71, 1);
    sub_100065228((uint64_t)v76, (uint64_t)v77, (uint64_t *)&unk_1011A3DC0);
    v59 = v66;
    if (*((_QWORD *)&v77[0] + 1))
    {
      v77[7] = v77[2];
      v77[8] = v77[3];
      v77[9] = v77[4];
      v77[5] = v77[0];
      v77[6] = v77[1];
      sub_100007E8C((uint64_t *)&unk_1011A20B0);
      v32 = (unint64_t)ActionMenu.uiMenu(excluding:)((Swift::OpaquePointer)_swiftEmptyArrayStorage);
      sub_1000E411C((uint64_t)v76);
    }
    else
    {
      v32 = 0;
    }

    swift_release();
    swift_bridgeObjectRelease();
    swift_release();

    sub_10004FF60((uint64_t)v71, (uint64_t *)&unk_1011A20F0);
    sub_10004FF60((uint64_t)v51, (uint64_t *)&unk_1011A9990);
    sub_10004FF60(v56, (uint64_t *)&unk_1011A20C0);
  }
  else
  {

    return 0;
  }
  return v32;
}

uint64_t _s20LibraryTabDataSourceC22CloudLibraryStatusViewC5StateOwCP(uint64_t result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_WORD *)(result + 4) = *((_WORD *)a2 + 2);
  *(_DWORD *)result = v2;
  return result;
}

uint64_t _s13VocalsCommandOwet(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 6))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t _s13VocalsCommandOwst(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_WORD *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 6) = v3;
  return result;
}

uint64_t sub_1006E5D0C(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 5))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1006E5D28(uint64_t result, int a2)
{
  if (a2)
  {
    *(_BYTE *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 1;
    *(_BYTE *)(result + 5) = 1;
  }
  else
  {
    *(_BYTE *)(result + 5) = 0;
  }
  return result;
}

ValueMetadata *_s20LibraryTabDataSourceC22CloudLibraryStatusViewC5StateOMa()
{
  return &_s20LibraryTabDataSourceC22CloudLibraryStatusViewC5StateON;
}

ValueMetadata *_s20LibraryTabDataSourceC23FacetTabElementsRequestVMa()
{
  return &_s20LibraryTabDataSourceC23FacetTabElementsRequestVN;
}

unint64_t sub_1006E5D6C(uint64_t a1)
{
  unint64_t result;

  result = sub_1006E5D90();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1006E5D90()
{
  unint64_t result;

  result = qword_1011C4748;
  if (!qword_1011C4748)
  {
    result = swift_getWitnessTable(&unk_100ECB728, &_s20LibraryTabDataSourceC23FacetTabElementsRequestVN);
    atomic_store(result, (unint64_t *)&qword_1011C4748);
  }
  return result;
}

unint64_t sub_1006E5DD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t (*v9)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v11;
  Swift::String v12;
  Swift::String v13;
  uint64_t v14;
  Swift::String v15;
  Swift::String v16;
  _QWORD v18[2];
  _OWORD v19[2];

  v1 = v0;
  v2 = type metadata accessor for Playlist.Folder.Item(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = _s20LibraryTabDataSourceC5ErrorOMa(0);
  __chkstk_darwin(v6);
  v8 = (_OWORD *)((char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10005B704(v1, (uint64_t)v8, v9);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v8, v6);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      (*(void (**)(char *, _OWORD *, uint64_t))(v3 + 32))(v5, v8, v2);
      *(_QWORD *)&v19[0] = 0;
      *((_QWORD *)&v19[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(49);
      swift_bridgeObjectRelease();
      *(_QWORD *)&v19[0] = 0xD000000000000016;
      *((_QWORD *)&v19[0] + 1) = 0x8000000100E42D20;
      v11 = sub_100048748(&qword_1011A58E0, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Folder.Item, (uint64_t)&protocol conformance descriptor for Playlist.Folder.Item);
      v12._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v2, v11);
      String.append(_:)(v12);
      swift_bridgeObjectRelease();
      v13._object = (void *)0x8000000100E42D40;
      v13._countAndFlagsBits = 0xD000000000000019;
      String.append(_:)(v13);
      v14 = *(_QWORD *)&v19[0];
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
    else
    {
      return 0xD00000000000002CLL;
    }
  }
  else
  {
    sub_100048ABC(v8, v19);
    v18[0] = 0;
    v18[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(43);
    v15._countAndFlagsBits = 0xD000000000000010;
    v15._object = (void *)0x8000000100E42D60;
    String.append(_:)(v15);
    _print_unlocked<A, B>(_:_:)(v19, v18, (char *)&type metadata for Any + 8, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v16._object = (void *)0x8000000100E42D40;
    v16._countAndFlagsBits = 0xD000000000000019;
    String.append(_:)(v16);
    v14 = v18[0];
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v19);
  }
  return v14;
}

unint64_t sub_1006E6024()
{
  return 0xD000000000000020;
}

uint64_t sub_1006E6040(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

uint64_t sub_1006E6064(uint64_t a1)
{
  uint64_t v1;

  return sub_1006E3EC0(a1, v1);
}

uint64_t sub_1006E606C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

id sub_1006E6090(char a1)
{
  void *v2;
  id v3;
  Swift::String v4;
  NSString v5;
  NSString v6;
  id v7;
  id v8;
  _QWORD *v9;
  id v10;
  _QWORD v12[4];
  _QWORD v13[5];

  v13[3] = &_s20LibraryTabDataSourceC29PlaylistsTabElementIdentifierON;
  v13[4] = &off_1010D7E68;
  LOBYTE(v13[0]) = a1;
  if (a1)
  {
    if (a1 == 1)
      v2 = (void *)0xED00006C6C412E73;
    else
      v2 = (void *)0xED000077654E2E73;
  }
  else
  {
    v2 = (void *)0xEF70756F72472E73;
  }
  v3 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v12[0] = 0xD00000000000001BLL;
  v12[1] = 0x8000000100E3BC20;
  v4._countAndFlagsBits = 0x7473696C79616C50;
  v4._object = v2;
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_1006E34E8(a1);
  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v7 = sub_1006E3628();
  v8 = objc_msgSend(v3, "initWithIdentifier:title:image:", v5, v6, v7);

  v9 = sub_100007E68(v13, (uint64_t)&_s20LibraryTabDataSourceC29PlaylistsTabElementIdentifierON);
  v12[3] = &_s20LibraryTabDataSourceC29PlaylistsTabElementIdentifierON;
  *(_BYTE *)sub_100049F68(v12) = *(_BYTE *)v9;
  v10 = v8;
  sub_10048CF54((uint64_t)v12);

  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v13);
  return v10;
}

id sub_1006E6220(char a1)
{
  void *v2;
  id v3;
  Swift::String v4;
  NSString v5;
  NSString v6;
  id v7;
  id v8;
  _QWORD *v9;
  id v10;
  _QWORD v12[4];
  _QWORD v13[5];

  v13[3] = &_s20LibraryTabDataSourceC29PlaylistsTabElementIdentifierON;
  v13[4] = &off_1010D7E68;
  LOBYTE(v13[0]) = a1;
  if (a1)
  {
    if (a1 == 1)
      v2 = (void *)0xED00006C6C412E73;
    else
      v2 = (void *)0xED000077654E2E73;
  }
  else
  {
    v2 = (void *)0xEF70756F72472E73;
  }
  v3 = objc_allocWithZone((Class)_UITabElement);
  v12[0] = 0xD00000000000001BLL;
  v12[1] = 0x8000000100E3BC20;
  v4._countAndFlagsBits = 0x7473696C79616C50;
  v4._object = v2;
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_1006E34E8(a1);
  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v7 = sub_1006E3628();
  v8 = objc_msgSend(v3, "initWithIdentifier:title:image:", v5, v6, v7);

  v9 = sub_100007E68(v13, (uint64_t)&_s20LibraryTabDataSourceC29PlaylistsTabElementIdentifierON);
  v12[3] = &_s20LibraryTabDataSourceC29PlaylistsTabElementIdentifierON;
  *(_BYTE *)sub_100049F68(v12) = *(_BYTE *)v9;
  v10 = v8;
  sub_10048CF54((uint64_t)v12);

  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v13);
  return v10;
}

void sub_1006E63B0(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1006E6418()
{
  unsigned __int8 v0;
  Swift::String v1;
  __n128 v2;

  v1._countAndFlagsBits = 0x6F4E6E657473696CLL;
  v1._object = (void *)0xE900000000000077;
  String.append(_:)(v1);
  swift_bridgeObjectRelease();
  String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_1006DB9DC(v0);
  String._bridgeToObjectiveC()();
  v2 = swift_bridgeObjectRelease();
  return ((uint64_t (*)(__n128))((char *)&loc_1006E6508 + *((int *)qword_1006E66A8 + v0)))(v2);
}

id sub_1006E6518()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  NSString v4;
  id v5;
  id v6;
  _QWORD *v7;
  _QWORD *v8;
  id v9;
  _QWORD v11[3];
  uint64_t v12;
  _QWORD v13[13];

  v3 = objc_allocWithZone((Class)_UITabElement);
  v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v4);

  v6 = objc_msgSend(v3, "initWithIdentifier:title:image:", v1, v2, v5);
  v7 = sub_100007E68(v13, v0);
  v12 = v0;
  v8 = sub_100049F68(v11);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v8, v7, v0);
  v9 = v6;
  sub_10048CF54((uint64_t)v11);

  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v13);
  return v9;
}

id sub_1006E66C0(char a1)
{
  id v2;
  Swift::String v3;
  NSString v4;
  NSString v5;
  NSString v6;
  id v7;
  id v8;
  _QWORD *v9;
  _QWORD *v10;
  id v11;
  _QWORD v13[4];
  _QWORD v14[5];

  v14[3] = &type metadata for Library.Menu.Identifier;
  v14[4] = &off_1010C8710;
  LOBYTE(v14[0]) = a1;
  v2 = objc_allocWithZone((Class)_UITabElement);
  v3._countAndFlagsBits = Library.Menu.Identifier.rawValue.getter(a1);
  v13[0] = 0xD00000000000001BLL;
  v13[1] = 0x8000000100E3BC20;
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  Library.Menu.Identifier.name(for:)(2, a1);
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  Library.Menu.Identifier.symbolName(for:)(2, a1);
  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v6);

  v8 = objc_msgSend(v2, "initWithIdentifier:title:image:", v4, v5, v7);
  v9 = sub_100007E68(v14, (uint64_t)&type metadata for Library.Menu.Identifier);
  v13[3] = &type metadata for Library.Menu.Identifier;
  v10 = sub_100049F68(v13);
  ((void (*)(_QWORD *, _QWORD *, ValueMetadata *))initializeBufferWithCopyOfBuffer for Library.ContentFilterOption)(v10, v9, &type metadata for Library.Menu.Identifier);
  v11 = v8;
  sub_10048CF54((uint64_t)v13);

  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v14);
  return v11;
}

id sub_1006E6858(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  id v4;
  uint64_t v5;
  NSString v6;
  __n128 v7;
  NSString v8;
  void *v9;
  id v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  id v14;
  Swift::String v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD v20[3];
  uint64_t v21;
  _UNKNOWN **v22;

  v2 = type metadata accessor for Playlist.Folder.Item(0);
  v21 = v2;
  v22 = &off_1010C8738;
  v3 = sub_100049F68(v20);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v3, a1, v2);
  v4 = objc_allocWithZone((Class)_UITabElement);
  v5 = sub_100048748((unint64_t *)&qword_1011B6140, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Folder.Item, (uint64_t)&protocol conformance descriptor for Playlist.Folder.Item);
  dispatch thunk of Identifiable.id.getter(v2, v5);
  v18 = 0xD00000000000001BLL;
  v19 = 0x8000000100E3BC20;
  String.append(_:)(v16);
  swift_bridgeObjectRelease();
  v6 = String._bridgeToObjectiveC()();
  v7 = swift_bridgeObjectRelease();
  Playlist.Folder.Item.name.getter(v7);
  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v9 = (void *)sub_10037E2A0();
  v10 = objc_msgSend(v4, "initWithIdentifier:title:image:", v6, v8, v9);

  v11 = v21;
  v12 = sub_100007E68(v20, v21);
  v17 = v11;
  v13 = sub_100049F68(&v16);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v13, v12, v11);
  v14 = v10;
  sub_10048CF54((uint64_t)&v16);

  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v20);
  return v14;
}

id sub_1006E69FC(char a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  id v7;
  Swift::String v8;
  NSString v9;
  NSString v10;
  id v11;
  void *v12;
  id v13;
  _QWORD *v14;
  id v15;
  _QWORD aBlock[3];
  ValueMetadata *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[5];

  v21[3] = &_s20LibraryTabDataSourceC29PlaylistsTabElementIdentifierON;
  v21[4] = &off_1010D7E68;
  LOBYTE(v21[0]) = a1;
  if (a1)
  {
    if (a1 == 1)
      v6 = (void *)0xED00006C6C412E73;
    else
      v6 = (void *)0xED000077654E2E73;
  }
  else
  {
    v6 = (void *)0xEF70756F72472E73;
  }
  v7 = objc_allocWithZone((Class)_UITabAction);
  v8._countAndFlagsBits = 0x7473696C79616C50;
  v8._object = v6;
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_1006E34E8(a1);
  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v11 = sub_1006E3628();
  v19 = a2;
  v20 = a3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100223938;
  v18 = (ValueMetadata *)&unk_1010D7CD0;
  v12 = _Block_copy(aBlock);
  swift_retain();
  v13 = objc_msgSend(v7, "initWithIdentifier:title:image:handler:", v9, v10, v11, v12, swift_release().n128_f64[0]);
  _Block_release(v12);

  v14 = sub_100007E68(v21, (uint64_t)&_s20LibraryTabDataSourceC29PlaylistsTabElementIdentifierON);
  v18 = &_s20LibraryTabDataSourceC29PlaylistsTabElementIdentifierON;
  *(_BYTE *)sub_100049F68(aBlock) = *(_BYTE *)v14;
  v15 = v13;
  sub_10048CF54((uint64_t)aBlock);
  swift_release();

  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v21);
  return v15;
}

void sub_1006E6C00(uint64_t a1)
{
  uint64_t v1;

  sub_1006E513C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32));
}

uint64_t sub_1006E6C0C()
{
  uint64_t v0;

  sub_1002F5684(*(void **)(v0 + 16), *(_BYTE *)(v0 + 24));

  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject(v0, 80);
}

uint64_t sub_1006E6C4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1006E1B4C(a1, a2, a3, v3 + 16, *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 64), *(_QWORD *)(v3 + 72));
}

uint64_t sub_1006E6C58()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1006E6C84(uint64_t a1, char *a2, unint64_t a3)
{
  uint64_t v3;

  return sub_1006E1E44(a1, a2, a3, *(_QWORD *)(v3 + 16), *(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v3 + 24));
}

_BYTE *sub_1006E6C90(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  id v32;
  id v33;
  _BYTE *v34;
  unint64_t v35;
  __n128 v36;
  void (*v37)(uint64_t, _BYTE *, uint64_t);
  int v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  void (*v51)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE *v58;
  _BYTE *v59;
  _BYTE *v60;
  char *v61;
  _BYTE *v62;
  void (*v63)(_BYTE *, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _BYTE *v72;
  __n128 v73;
  void (*v74)(_BYTE *, uint64_t);
  _BYTE v76[4];
  int v77;
  uint64_t v78;
  _BYTE *v79;
  _BYTE *v80;
  uint64_t v81;
  _BYTE *v82;
  _BYTE *v83;
  _BYTE *v84;
  uint64_t v85;
  uint64_t v86;
  _BYTE *v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  id v91;
  _OWORD v92[2];
  __int128 v93;
  uint64_t v94;
  _OWORD v95[2];
  _BYTE *v96;

  v4 = sub_100007E8C((uint64_t *)&unk_1011B5660);
  __chkstk_darwin(v4);
  v6 = &v76[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v85 = _s9PlaylistsV5ScopeVMa(0);
  __chkstk_darwin(v85);
  v89 = (uint64_t *)&v76[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v90 = type metadata accessor for Playlist.Folder(0);
  v88 = *(_QWORD *)(v90 - 8);
  __chkstk_darwin(v90);
  v87 = &v76[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v9);
  v80 = &v76[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v82 = &v76[-v12];
  v78 = type metadata accessor for ContainerDetail.Source(0);
  __chkstk_darwin(v78);
  v79 = &v76[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v14);
  v16 = &v76[-v15];
  v81 = type metadata accessor for Playlist(0);
  v86 = *(_QWORD *)(v81 - 8);
  __chkstk_darwin(v81);
  v18 = &v76[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v19);
  v84 = &v76[-v20];
  __chkstk_darwin(v21);
  v83 = &v76[-v22];
  v23 = type metadata accessor for Playlist.Folder.Item(0);
  v24 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v26 = &v76[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v27);
  v96 = &v76[-v28];
  __chkstk_darwin(v29);
  v31 = &v76[-v30];
  if (qword_10119C0B0 != -1)
    swift_once(&qword_10119C0B0, sub_10048D2A4);
  v32 = objc_getAssociatedObject(a1, (const void *)qword_1011B6130);
  if (v32)
  {
    v33 = v32;
    _bridgeAnyObjectToAny(_:)(v92, v32);
    swift_unknownObjectRelease(v33);
  }
  else
  {
    memset(v92, 0, sizeof(v92));
  }
  sub_100065228((uint64_t)v92, (uint64_t)&v93, &qword_10119DCC0);
  if (v94)
  {
    v91 = a2;
    sub_100048ABC(&v93, v95);
    sub_10004FA40((uint64_t)v95, (uint64_t)&v93);
    if (swift_dynamicCast(v31, &v93, (char *)&type metadata for Any + 8, v23, 0))
    {
      v34 = v96;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v24 + 32))(v96, v31, v23);
      v35 = sub_10018D478();
      UITraitCollection.subscript.getter(v92, &type metadata for LibraryFilterTrait, &type metadata for LibraryFilterTrait, v35);
      v77 = sub_1007607C4(*(uint64_t *)&v92[0]);
      v36 = swift_bridgeObjectRelease();
      v37 = *(void (**)(uint64_t, _BYTE *, uint64_t))(v24 + 16);
      ((void (*)(_BYTE *, _BYTE *, uint64_t, __n128))v37)(v26, v34, v23, v36);
      v38 = (*(uint64_t (**)(_BYTE *, uint64_t))(v24 + 88))(v26, v23);
      if (v38 == enum case for Playlist.Folder.Item.folder(_:))
      {
        (*(void (**)(_BYTE *, uint64_t))(v24 + 96))(v26, v23);
        v40 = v87;
        v39 = v88;
        v41 = v90;
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v88 + 32))(v87, v26, v90);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v39 + 16))(v6, v40, v41);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v6, 0, 1, v41);
        if (qword_10119BE68 != -1)
          swift_once(&qword_10119BE68, sub_10031EF94);
        v42 = qword_10124CD80;
        v43 = v89;
        sub_10004A160((uint64_t)v6, (uint64_t)v89 + *(int *)(v85 + 20), (uint64_t *)&unk_1011B5660);
        *v43 = v42;
        swift_bridgeObjectRetain();
        sub_10004FF60((uint64_t)v6, (uint64_t *)&unk_1011B5660);
        LODWORD(v42) = objc_msgSend(v91, "horizontalSizeClass") != (id)2;
        v44 = objc_allocWithZone((Class)type metadata accessor for LibraryPlaylistsViewController(0));
        v26 = sub_1003388A4(v43, v77 & 1, v42);
        (*(void (**)(_BYTE *, uint64_t))(v39 + 8))(v40, v41);
        goto LABEL_17;
      }
      if (v38 == enum case for Playlist.Folder.Item.playlist(_:))
      {
        (*(void (**)(_BYTE *, uint64_t))(v24 + 96))(v26, v23);
        v48 = v86;
        v49 = v83;
        v50 = v81;
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v86 + 32))(v83, v26, v81);
        v51 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v48 + 16);
        v51(v84, v49, v50);
        v52 = sub_100007E8C((uint64_t *)&unk_1011AD760);
        v53 = *(int *)(v52 + 48);
        v54 = *(int *)(v52 + 64);
        v55 = _s6AlbumsV5ScopeOMa(0);
        (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v16, 1, 1, v55);
        v16[v53] = v77 & 1;
        v16[v54] = 0;
        swift_storeEnumTagMultiPayload(v16, v78, 0);
        v56 = type metadata accessor for URL(0);
        v57 = (uint64_t)v82;
        (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v82, 1, 1, v56);
        v58 = v84;
        v51(v18, v84, v50);
        v59 = v79;
        sub_10005B704((uint64_t)v16, (uint64_t)v79, type metadata accessor for ContainerDetail.Source);
        v60 = v80;
        sub_10004A160(v57, (uint64_t)v80, &qword_10119E460);
        v61 = sub_10096EE44((uint64_t)v18, (uint64_t)v59, 0, 0, (uint64_t)v60);
        v62 = objc_allocWithZone((Class)type metadata accessor for ContainerDetail.ViewController(0));
        v26 = sub_1003728E0(v61, 0, v62);
        sub_10004FF60(v57, &qword_10119E460);
        sub_10005B748((uint64_t)v16, type metadata accessor for ContainerDetail.Source);
        v63 = *(void (**)(_BYTE *, uint64_t))(v86 + 8);
        v63(v58, v50);
        v63(v83, v50);
LABEL_17:
        (*(void (**)(_BYTE *, uint64_t))(v24 + 8))(v96, v23);
        goto LABEL_18;
      }
      v68 = _s20LibraryTabDataSourceC5ErrorOMa(0);
      v69 = sub_100048748((unint64_t *)&unk_1011C4760, _s20LibraryTabDataSourceC5ErrorOMa, (uint64_t)&unk_100ECBA78);
      swift_allocError(v68, v69, 0, 0);
      v71 = v70;
      v72 = v96;
      v37(v70, v96, v23);
      swift_storeEnumTagMultiPayload(v71, v68, 1);
      swift_willThrow(v73);
      v74 = *(void (**)(_BYTE *, uint64_t))(v24 + 8);
      v74(v72, v23);
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(v95);
      v74(v26, v23);
    }
    else
    {
      if (swift_dynamicCast(v92, &v93, (char *)&type metadata for Any + 8, &type metadata for Library.Menu.Identifier, 0))
      {
        v26 = sub_10069FFB4((uint64_t)v91, v92[0]);
LABEL_18:
        _s5Music18DragDropToPlaylistV6OriginVwxx_0(v95);
        _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v93);
        return v26;
      }
      v26 = (_BYTE *)_s20LibraryTabDataSourceC5ErrorOMa(0);
      v64 = sub_100048748((unint64_t *)&unk_1011C4760, _s20LibraryTabDataSourceC5ErrorOMa, (uint64_t)&unk_100ECBA78);
      swift_allocError(v26, v64, 0, 0);
      v66 = v65;
      sub_10004FA40((uint64_t)v95, v65);
      swift_storeEnumTagMultiPayload(v66, v26, 0);
      swift_willThrow(v67);
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(v95);
    }
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v93);
    return v26;
  }
  sub_10004FF60((uint64_t)&v93, &qword_10119DCC0);
  v26 = (_BYTE *)_s20LibraryTabDataSourceC5ErrorOMa(0);
  v45 = sub_100048748((unint64_t *)&unk_1011C4760, _s20LibraryTabDataSourceC5ErrorOMa, (uint64_t)&unk_100ECBA78);
  swift_allocError(v26, v45, 0, 0);
  swift_storeEnumTagMultiPayload(v46, v26, 2);
  swift_willThrow(v47);
  return v26;
}

uint64_t _s20LibraryTabDataSourceC5ErrorOMa(uint64_t a1)
{
  return sub_100055934(a1, qword_1011C4880, (uint64_t)&_s20LibraryTabDataSourceC5ErrorOMn);
}

BOOL sub_1006E756C(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  int v13;
  int v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v5 = type metadata accessor for Playlist.Folder.Item(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C((uint64_t *)&unk_1011AD730);
  *(_QWORD *)&v10 = __chkstk_darwin(v9).n128_u64[0];
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a2, "userInterfaceIdiom", v10) != (id)1 || objc_msgSend(a2, "horizontalSizeClass") != (id)2)
    return 1;
  sub_10004A07C(0, (unint64_t *)&qword_1011A8960, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(a1, *(_QWORD *)(v2 + OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource_rootTab)) & 1) != 0)return 0;
  sub_10048D6B8((uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v12, 1, v5) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v12, v5);
    v13 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v8, v5);
    v14 = enum case for Playlist.Folder.Item.folder(_:);
    v15 = *(void (**)(char *, uint64_t))(v6 + 8);
    v15(v8, v5);
    v15(v12, v5);
    return v13 != v14;
  }
  sub_10004FF60((uint64_t)v12, (uint64_t *)&unk_1011AD730);
  return 1;
}

void sub_1006E7720(uint64_t a1)
{
  uint64_t v1;

  sub_1006DF28C(a1, v1);
}

uint64_t sub_1006E7728@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*a1 + OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource_selectedLibrary);
  *a2 = v2;
  return swift_retain(v2);
}

void sub_1006E7744(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1006DF3E8(a1, a2, v2, "Library menu has (re)loaded — Updating tabElements…");
}

void sub_1006E7764(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1006DF3E8(a1, a2, v2, "Playlists have (re)loaded — Updating tabElements…");
}

void sub_1006E7784(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  void *v8;
  uint64_t v9;
  void *v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unsigned __int8 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1006DE5DC(a4, a2);
  v9 = v4;
  if (v8)
  {
    v10 = v8;
    v11 = objc_msgSend(v8, "_isVisible");

  }
  else
  {
    v12 = *(_QWORD *)(a3 + 40);
    swift_bridgeObjectRetain();
    v11 = sub_10075D15C(a2, v12);
    swift_bridgeObjectRelease();
  }
  if (qword_10119C0C0 != -1)
    swift_once(&qword_10119C0C0, sub_10048D7F8);
  v13 = type metadata accessor for Logger(0);
  v14 = sub_100048B14(v13, (uint64_t)qword_10124D118);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter();
  v23 = v11;
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc(32, -1);
    v18 = swift_slowAlloc(64, -1);
    v26 = v18;
    *(_DWORD *)v17 = 136315650;
    if ((v11 & 1) != 0)
      v19 = 0x64657463656C6573;
    else
      v19 = 0x7463656C65736564;
    if ((v11 & 1) != 0)
      v20 = 0xE800000000000000;
    else
      v20 = 0xEA00000000006465;
    v24 = sub_100322200(v19, v20, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25);
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2082;
    v21 = Library.Menu.Identifier.description.getter(a2);
    v24 = sub_100322200(v21, v22, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25);
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 22) = 2050;
    v24 = a1;
    v9 = v4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Moving %s identifier=%{public}s to index=%{public}ld", (uint8_t *)v17, 0x20u);
    swift_arrayDestroy(v18, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v17, -1, -1);
  }

  Library.Menu.move(_:to:)(a2, a1);
  if (!v9)
    Library.Menu.setSelectionState(_:for:)((v23 & 1) == 0, a2);
}

void sub_1006E7A34(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  __n128 v31;
  id v32;
  NSObject *log;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[5];
  uint64_t v41;

  v4 = v3;
  v7 = *a2;
  v8 = (void *)a2[1];
  v10 = a2[2];
  v9 = a2[3];
  v12 = a2[4];
  v11 = a2[5];
  v13 = qword_10119C0C0;
  swift_bridgeObjectRetain();
  v36 = v7;
  swift_bridgeObjectRetain();
  v14 = v8;
  v38 = v10;
  swift_bridgeObjectRetain();
  v37 = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13 != -1)
    swift_once(&qword_10119C0C0, sub_10048D7F8);
  v15 = type metadata accessor for Logger(0);
  sub_100048B14(v15, (uint64_t)qword_10124D118);
  swift_bridgeObjectRetain_n(v36, 2);
  v16 = v14;
  swift_bridgeObjectRetain_n(v10, 2);
  swift_bridgeObjectRetain_n(v9, 2);
  swift_bridgeObjectRetain_n(v12, 2);
  swift_bridgeObjectRetain_n(v11, 2);
  swift_bridgeObjectRetain_n(a1, 2);
  v17 = v16;
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc(22, -1);
    v34 = swift_slowAlloc(64, -1);
    v41 = v34;
    *(_DWORD *)v20 = 136446466;
    v39 = v36;
    v40[0] = v17;
    v40[1] = v38;
    v40[2] = v37;
    v40[3] = v12;
    v40[4] = v11;
    swift_bridgeObjectRetain();
    log = v18;
    v32 = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21 = String.init<A>(describing:)(&v39, &type metadata for Library.Menu);
    v39 = sub_100322200(v21, v22, &v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, v40);
    swift_bridgeObjectRelease_n(v11, 2);
    swift_bridgeObjectRelease_n(v12, 2);
    swift_bridgeObjectRelease_n(v37, 2);
    swift_bridgeObjectRelease_n(v38, 2);

    swift_bridgeObjectRelease_n(v36, 2);
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2082;
    v23 = swift_bridgeObjectRetain();
    v24 = Array.description.getter(v23, &type metadata for Library.Menu.Identifier);
    v26 = v25;
    swift_bridgeObjectRelease();
    v39 = sub_100322200(v24, v26, &v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, v40);
    swift_bridgeObjectRelease_n(a1, 2);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v19, "Applying edits to %{public}s with ordered identifiers=%{public}s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy(v34, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v34, -1, -1);
    swift_slowDealloc(v20, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a1, 2);
    swift_bridgeObjectRelease_n(v11, 2);
    swift_bridgeObjectRelease_n(v12, 2);
    swift_bridgeObjectRelease_n(v9, 2);
    swift_bridgeObjectRelease_n(v38, 2);

    swift_bridgeObjectRelease_n(v36, 2);
  }
  v27 = *(_QWORD *)(a1 + 16);
  if (v27 == *(_QWORD *)(*a2 + 16))
  {
    if (v27)
    {
      swift_bridgeObjectRetain();
      v28 = 0;
      while (1)
      {
        v29 = *(unsigned __int8 *)(a1 + v28 + 32);
        swift_bridgeObjectRetain();
        sub_1006E7784(v28, v29, (uint64_t)a2, a3);
        if (v4)
          break;
        ++v28;
        swift_bridgeObjectRelease();
        if (v27 == v28)
          goto LABEL_14;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
LABEL_14:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    v30 = sub_1006EA1F0();
    swift_allocError(&_s19TabElementEditErrorON, v30, 0, 0);
    swift_willThrow(v31);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
  swift_bridgeObjectRelease();
}

unint64_t sub_1006E7F34(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010AD1D0, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3)
    return 3;
  else
    return v3;
}

void sub_1006E7F7C(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  double v53;
  uint64_t v54;
  char *v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  id v60;
  uint64_t v61;
  char *v62;
  uint64_t (**v63)();
  uint64_t v64;
  char *v65;
  _QWORD *v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t KeyPath;
  uint64_t v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  char *v75;
  uint64_t (**v76)();
  uint64_t v77;
  void (*v78)(char *, uint64_t, uint64_t);
  uint64_t v79;
  char *v80;
  unint64_t v81;
  unint64_t v82;
  char *v83;
  void (*v84)(char *, uint64_t);
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  unint64_t v94;
  unint64_t v95;
  _QWORD *v96;
  id v97;
  id v98;
  uint64_t v99;
  void *v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  Swift::Int v109;
  double v110;
  char *v111;
  uint64_t v112;
  id v113;
  id v114;
  id v115;
  uint64_t v116;
  int v117;
  char *v118;
  void (*v119)(char *, uint64_t);
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  int v126;
  uint64_t v127;
  void (*v128)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v129;
  double v130;
  uint64_t v131;
  __n128 v132;
  double v133;
  void (*v134)(Swift::String *, _QWORD);
  void *v135;
  id v136;
  uint64_t v137;
  uint64_t v138;
  __n128 v139;
  void (*v140)(Swift::String *, _QWORD);
  void (*v141)(_OWORD *, _QWORD);
  _QWORD *v142;
  id v143;
  double v144;
  double v145;
  double v146;
  double v147;
  __n128 v148;
  void (*v149)(Swift::String *, _QWORD);
  void *v150;
  id v151;
  __n128 v152;
  double (*v153)(Swift::String *, _QWORD);
  __n128 v154;
  double (*v155)(Swift::String *, _QWORD);
  __n128 v156;
  void (*v157)(Swift::String *, _QWORD);
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  id v163;
  void (*v164)(char *, uint64_t);
  id v165;
  uint64_t v166;
  char *v167;
  uint64_t (**v168)();
  void (*v169)(char *, _QWORD, uint64_t);
  uint64_t v170;
  char *v171;
  char *v172;
  char *v173;
  unint64_t v174;
  unint64_t v175;
  unint64_t v176;
  char *v177;
  unint64_t v178;
  uint64_t v179;
  void (*v180)(unint64_t, char *, uint64_t);
  char *v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  char *v185;
  unint64_t v186;
  unint64_t v187;
  unint64_t v188;
  char *v189;
  id v190;
  double v191;
  double v192;
  id v193;
  double v194;
  double v195;
  id v196;
  id v197;
  double v198;
  double v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  _QWORD *v205;
  uint64_t v206;
  id v207;
  id v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  _QWORD *v212;
  uint64_t countAndFlagsBits;
  uint64_t v214;
  uint64_t ObjectType;
  id v216;
  char *v217;
  char *v218;
  char *v219;
  char *v220;
  uint64_t v221;
  uint64_t v222;
  char *v223;
  char *v224;
  char *v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  char *v229;
  void *v230;
  char *v231;
  char *v232;
  char *v233;
  char *v234;
  char *v235;
  char *v236;
  char *v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  void (*v242)(char *, uint64_t, uint64_t, uint64_t);
  char *v243;
  char *v244;
  uint64_t v245;
  uint64_t v246;
  id v247;
  char *v248;
  char *v249;
  uint64_t v250;
  char *v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  Swift::String v255;
  uint64_t v256;
  void *v257;
  _OWORD v258[2];
  _QWORD v259[2];

  v216 = a1;
  ObjectType = swift_getObjectType();
  v4 = sub_100007E8C((uint64_t *)&unk_1011A63A0);
  __chkstk_darwin(v4);
  v217 = (char *)&v214 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
  __chkstk_darwin(v6);
  v220 = (char *)&v214 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011A1440);
  __chkstk_darwin(v8);
  v218 = (char *)&v214 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v222 = type metadata accessor for Artwork(0);
  v221 = *(_QWORD *)(v222 - 8);
  __chkstk_darwin(v222);
  v219 = (char *)&v214 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C((uint64_t *)&unk_1011C47B0);
  __chkstk_darwin(v11);
  v223 = (char *)&v214 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v228 = type metadata accessor for Playlist(0);
  v227 = *(_QWORD *)(v228 - 8);
  __chkstk_darwin(v228);
  v231 = (char *)&v214 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C((uint64_t *)&unk_1011AD730);
  __chkstk_darwin(v14);
  v249 = (char *)&v214 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Playlist.Folder.Item(0);
  v250 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v229 = (char *)&v214 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v251 = (char *)&v214 - v19;
  v20 = sub_100007E8C(&qword_1011BC170);
  __chkstk_darwin(v20);
  v248 = (char *)&v214 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100007E8C(&qword_1011C47C0);
  v23 = __chkstk_darwin(v22);
  v237 = (char *)&v214 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v239 = type metadata accessor for UICellAccessory.OutlineDisclosureOptions(0, v23);
  v238 = *(_QWORD *)(v239 - 8);
  v25 = __chkstk_darwin(v239);
  v236 = (char *)&v214 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for UICellAccessory.DisplayedState(0, v25);
  v252 = *(_QWORD *)(v27 - 8);
  v253 = v27;
  __chkstk_darwin(v27);
  v235 = (char *)&v214 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_100007E8C((uint64_t *)&unk_1011A1760);
  v30 = __chkstk_darwin(v29);
  v234 = (char *)&v214 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v242 = (void (*)(char *, uint64_t, uint64_t, uint64_t))type metadata accessor for UICellAccessory.Placement(0, v30);
  v241 = *((_QWORD *)v242 - 1);
  v32 = __chkstk_darwin(v242);
  v244 = (char *)&v214 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v246 = type metadata accessor for UICellAccessory.CustomViewConfiguration(0, v32);
  v245 = *(_QWORD *)(v246 - 8);
  __chkstk_darwin(v246);
  v243 = (char *)&v214 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = type metadata accessor for UICellAccessory(0);
  v36 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v226 = (char *)&v214 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38);
  v224 = (char *)&v214 - v39;
  __chkstk_darwin(v40);
  v225 = (char *)&v214 - v41;
  __chkstk_darwin(v42);
  v232 = (char *)&v214 - v43;
  __chkstk_darwin(v44);
  v233 = (char *)&v214 - v45;
  __chkstk_darwin(v46);
  v48 = (char *)&v214 - v47;
  __chkstk_darwin(v49);
  v51 = (char *)&v214 - v50;
  *(_QWORD *)&v53 = __chkstk_darwin(v52).n128_u64[0];
  v55 = (char *)&v214 - v54;
  v56 = objc_msgSend(a2, "_tab", v53);
  sub_10004A07C(0, (unint64_t *)&qword_1011A8960, NSObject_ptr);
  v254 = v2;
  v57 = *(_QWORD *)(v2 + OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource_rootTab);
  v247 = v56;
  if ((static NSObject.== infix(_:_:)(v56, v57) & 1) != 0)
  {
    v58 = *(_QWORD *)(v254 + OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource_cloudLibraryStatus);
    v59 = v234;
    v230 = a2;
    v240 = v16;
    if (v58 >> 30 < 2 || v58 >> 30 == 2 && (unint64_t)(v58 - 2147483651) <= 1)
    {
      v60 = sub_1006E4480();
      v61 = sub_100007E8C((uint64_t *)&unk_1011BC840);
      v62 = v244;
      v63 = (uint64_t (**)())&v244[*(int *)(v61 + 48)];
      (*(void (**)(char *, _QWORD, uint64_t))(v252 + 104))(v244, enum case for UICellAccessory.DisplayedState.always(_:), v253);
      *v63 = static MPMediaLibraryFilteringOptions.none.getter;
      v63[1] = 0;
      (*(void (**)(char *, _QWORD, void (*)(char *, uint64_t, uint64_t, uint64_t)))(v241 + 104))(v62, enum case for UICellAccessory.Placement.trailing(_:), v242);
      v64 = type metadata accessor for UICellAccessory.LayoutDimension(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v59, 1, 1, v64);
      v65 = v243;
      UICellAccessory.CustomViewConfiguration.init(customView:placement:isHidden:reservedLayoutWidth:tintColor:maintainsFixedSize:)(v60, v62, 2, v59, 0, 2);
      static UICellAccessory.customView(configuration:)(v65);
      (*(void (**)(char *, uint64_t))(v245 + 8))(v65, v246);
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v51, v55, v35);
      v66 = (_QWORD *)sub_1004333B0(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
      v68 = v66[2];
      v67 = v66[3];
      if (v68 >= v67 >> 1)
        v66 = (_QWORD *)sub_1004333B0(v67 > 1, v68 + 1, 1, (unint64_t)v66);
      v66[2] = v68 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v36 + 32))((unint64_t)v66+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(_QWORD *)(v36 + 72) * v68, v51, v35);
      (*(void (**)(char *, uint64_t))(v36 + 8))(v55, v35);
      v16 = v240;
    }
    else
    {
      v66 = _swiftEmptyArrayStorage;
    }
    v69 = *(_QWORD *)(v254 + OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource_sharedLibrariesController);
    KeyPath = swift_getKeyPath(&unk_100ECB828);
    v71 = swift_getKeyPath(&unk_100ECB850);
    static Published.subscript.getter(&v255, v69, KeyPath, v71);
    swift_release();
    swift_release();
    if ((unint64_t)v255._countAndFlagsBits >> 62)
    {
      if (v255._countAndFlagsBits < 0)
        countAndFlagsBits = v255._countAndFlagsBits;
      else
        countAndFlagsBits = v255._countAndFlagsBits & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v72 = _CocoaArrayWrapper.endIndex.getter(countAndFlagsBits);
      swift_bridgeObjectRelease();
    }
    else
    {
      v72 = *(_QWORD *)((v255._countAndFlagsBits & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    v214 = v36;
    if (v72)
    {
      v73 = sub_1006E4D94();
      v74 = sub_100007E8C((uint64_t *)&unk_1011BC840);
      v75 = v244;
      v76 = (uint64_t (**)())&v244[*(int *)(v74 + 48)];
      v77 = enum case for UICellAccessory.DisplayedState.always(_:);
      v78 = *(void (**)(char *, uint64_t, uint64_t))(v252 + 104);
      v78(v244, enum case for UICellAccessory.DisplayedState.always(_:), v253);
      *v76 = static MPMediaLibraryFilteringOptions.none.getter;
      v76[1] = 0;
      (*(void (**)(char *, _QWORD, void (*)(char *, uint64_t, uint64_t, uint64_t)))(v241 + 104))(v75, enum case for UICellAccessory.Placement.trailing(_:), v242);
      v79 = type metadata accessor for UICellAccessory.LayoutDimension(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 56))(v59, 1, 1, v79);
      v80 = v243;
      UICellAccessory.CustomViewConfiguration.init(customView:placement:isHidden:reservedLayoutWidth:tintColor:maintainsFixedSize:)(v73, v75, 2, v59, 0, 2);
      static UICellAccessory.customView(configuration:)(v80);
      (*(void (**)(char *, uint64_t))(v245 + 8))(v80, v246);
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v233, v48, v35);
      if ((swift_isUniquelyReferenced_nonNull_native(v66) & 1) == 0)
        v66 = (_QWORD *)sub_1004333B0(0, v66[2] + 1, 1, (unint64_t)v66);
      v82 = v66[2];
      v81 = v66[3];
      v83 = v59;
      if (v82 >= v81 >> 1)
        v66 = (_QWORD *)sub_1004333B0(v81 > 1, v82 + 1, 1, (unint64_t)v66);
      v66[2] = v82 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v36 + 32))((unint64_t)v66+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(_QWORD *)(v36 + 72) * v82, v233, v35);
      v84 = *(void (**)(char *, uint64_t))(v36 + 8);
      v85 = v35;
      v84(v48, v35);
      v16 = v240;
      v86 = v252;
    }
    else
    {
      v83 = v59;
      v85 = v35;
      v77 = enum case for UICellAccessory.DisplayedState.always(_:);
      v86 = v252;
      v78 = *(void (**)(char *, uint64_t, uint64_t))(v252 + 104);
    }
    v87 = v235;
    v88 = v253;
    v78(v235, v77, v253);
    v89 = type metadata accessor for UICellAccessory.OutlineDisclosureOptions.Style(0);
    v90 = v237;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 56))(v237, 1, 1, v89);
    v91 = type metadata accessor for UICellAccessory.LayoutDimension(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 56))(v83, 1, 1, v91);
    v92 = v236;
    UICellAccessory.OutlineDisclosureOptions.init(style:isHidden:reservedLayoutWidth:tintColor:)(v90, 2, v83, 0);
    v93 = v232;
    static UICellAccessory.outlineDisclosure(displayed:options:actionHandler:)(v87, v92, 0, 0);
    (*(void (**)(char *, uint64_t))(v238 + 8))(v92, v239);
    (*(void (**)(char *, uint64_t))(v86 + 8))(v87, v88);
    if ((swift_isUniquelyReferenced_nonNull_native(v66) & 1) == 0)
      v66 = (_QWORD *)sub_1004333B0(0, v66[2] + 1, 1, (unint64_t)v66);
    v95 = v66[2];
    v94 = v66[3];
    v35 = v85;
    if (v95 >= v94 >> 1)
      v66 = (_QWORD *)sub_1004333B0(v94 > 1, v95 + 1, 1, (unint64_t)v66);
    v36 = v214;
    v66[2] = v95 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v36 + 32))((unint64_t)v66+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(_QWORD *)(v36 + 72) * v95, v93, v35);
    v96 = v66;
    a2 = v230;
    _UITabSidebarItem._accessories.setter(v96);
  }
  v97 = v247;
  v98 = objc_msgSend(v97, "_identifier");
  v99 = static String._unconditionallyBridgeFromObjectiveC(_:)(v98);
  v101 = v100;

  v255._countAndFlagsBits = v99;
  v255._object = v101;
  *(_QWORD *)&v258[0] = v99;
  *((_QWORD *)&v258[0] + 1) = v101;
  v259[0] = 0xD00000000000001BLL;
  v259[1] = 0x8000000100E3BC20;
  v102 = type metadata accessor for Locale(0);
  v103 = (uint64_t)v248;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 56))(v248, 1, 1, v102);
  v104 = sub_100055B68();
  swift_bridgeObjectRetain();
  v105 = StringProtocol.range<A>(of:options:range:locale:)(v259, 0, 0, 0, 1, v103, &type metadata for String, &type metadata for String, v104, v104);
  v107 = v106;
  LOBYTE(v99) = v108;
  sub_10004FF60(v103, &qword_1011BC170);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v99 & 1) != 0)
  {

    *(_QWORD *)&v110 = swift_bridgeObjectRelease().n128_u64[0];
LABEL_27:
    v112 = v250;
    v111 = v251;
    goto LABEL_28;
  }
  String.removeSubrange(_:)(v105, v107);
  v109 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010AD1D0, v255);

  *(_QWORD *)&v110 = swift_bridgeObjectRelease().n128_u64[0];
  if (v109)
    goto LABEL_27;
  v240 = v16;
  v230 = a2;
  v165 = sub_1006E4810();
  v166 = sub_100007E8C((uint64_t *)&unk_1011BC840);
  v167 = v244;
  v168 = (uint64_t (**)())&v244[*(int *)(v166 + 48)];
  v169 = *(void (**)(char *, _QWORD, uint64_t))(v252 + 104);
  v169(v244, enum case for UICellAccessory.DisplayedState.whenEditing(_:), v253);
  *v168 = static MPMediaLibraryFilteringOptions.none.getter;
  v168[1] = 0;
  (*(void (**)(char *, _QWORD, void (*)(char *, uint64_t, uint64_t, uint64_t)))(v241 + 104))(v167, enum case for UICellAccessory.Placement.trailing(_:), v242);
  v170 = type metadata accessor for UICellAccessory.LayoutDimension(0);
  v171 = v234;
  v242 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v170 - 8) + 56);
  v242(v234, 1, 1, v170);
  v172 = v243;
  UICellAccessory.CustomViewConfiguration.init(customView:placement:isHidden:reservedLayoutWidth:tintColor:maintainsFixedSize:)(v165, v167, 2, v171, 0, 2);
  v173 = v225;
  static UICellAccessory.customView(configuration:)(v172);
  (*(void (**)(char *, uint64_t))(v245 + 8))(v172, v246);
  (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v224, v173, v35);
  v174 = sub_1004333B0(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
  v176 = *(_QWORD *)(v174 + 16);
  v175 = *(_QWORD *)(v174 + 24);
  v247 = v97;
  v177 = v171;
  if (v176 >= v175 >> 1)
    v174 = sub_1004333B0(v175 > 1, v176 + 1, 1, v174);
  *(_QWORD *)(v174 + 16) = v176 + 1;
  v178 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  v179 = *(_QWORD *)(v36 + 72);
  v180 = *(void (**)(unint64_t, char *, uint64_t))(v36 + 32);
  v248 = (char *)v35;
  v180(v174 + v178 + v179 * v176, v224, v35);
  v181 = v235;
  v182 = v253;
  v169(v235, enum case for UICellAccessory.DisplayedState.always(_:), v253);
  v183 = type metadata accessor for UICellAccessory.OutlineDisclosureOptions.Style(0);
  v184 = v237;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v183 - 8) + 56))(v237, 1, 1, v183);
  v242(v177, 1, 1, v170);
  v185 = v236;
  UICellAccessory.OutlineDisclosureOptions.init(style:isHidden:reservedLayoutWidth:tintColor:)(v184, 2, v177, 0);
  static UICellAccessory.outlineDisclosure(displayed:options:actionHandler:)(v181, v185, 0, 0);
  (*(void (**)(char *, uint64_t))(v238 + 8))(v185, v239);
  (*(void (**)(char *, uint64_t))(v252 + 8))(v181, v182);
  v187 = *(_QWORD *)(v174 + 16);
  v186 = *(_QWORD *)(v174 + 24);
  v111 = v251;
  if (v187 >= v186 >> 1)
    v174 = sub_1004333B0(v186 > 1, v187 + 1, 1, v174);
  a2 = v230;
  *(_QWORD *)(v174 + 16) = v187 + 1;
  v188 = v174 + v178 + v187 * v179;
  v189 = v248;
  v180(v188, v226, (uint64_t)v248);
  _UITabSidebarItem._accessories.setter(v174);
  (*(void (**)(char *, char *))(v36 + 8))(v225, v189);
  v16 = v240;
  v112 = v250;
  v97 = v247;
LABEL_28:
  v113 = objc_msgSend(a2, "_tab", v110, v214);
  if (qword_10119C0B0 != -1)
    swift_once(&qword_10119C0B0, sub_10048D2A4);
  v114 = objc_getAssociatedObject(v113, (const void *)qword_1011B6130);
  if (v114)
  {
    v115 = v114;
    _bridgeAnyObjectToAny(_:)(v258, v114);
    swift_unknownObjectRelease(v115);
  }
  else
  {
    memset(v258, 0, sizeof(v258));
  }
  sub_100065228((uint64_t)v258, (uint64_t)&v255, &qword_10119DCC0);

  if (!v256)
  {
    sub_10004FF60((uint64_t)&v255, &qword_10119DCC0);
    v116 = (uint64_t)v249;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v112 + 56))(v249, 1, 1, v16);
    goto LABEL_41;
  }
  v116 = (uint64_t)v249;
  v117 = swift_dynamicCast(v249, &v255, (char *)&type metadata for Any + 8, v16, 6);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v112 + 56))(v116, v117 ^ 1u, 1, v16);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v112 + 48))(v116, 1, v16) == 1)
  {
LABEL_41:

    sub_10004FF60(v116, (uint64_t *)&unk_1011AD730);
    return;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v112 + 32))(v111, v116, v16);
  v118 = v229;
  (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v229, v111, v16);
  if ((*(unsigned int (**)(char *, uint64_t))(v112 + 88))(v118, v16) != enum case for Playlist.Folder.Item.playlist(_:))
  {
    v164 = *(void (**)(char *, uint64_t))(v112 + 8);
    v164(v111, v16);

    v164(v118, v16);
    return;
  }
  v119 = *(void (**)(char *, uint64_t))(v112 + 96);
  v240 = v16;
  v119(v118, v16);
  (*(void (**)(char *, char *, uint64_t))(v227 + 32))(v231, v118, v228);
  v120 = type metadata accessor for UIListContentConfiguration(0);
  v121 = swift_allocBox(v120);
  v123 = v122;
  _UITabSidebarItem._contentConfiguration.getter(&v255);
  v124 = sub_100007E8C((uint64_t *)&unk_1011BC810);
  v125 = (uint64_t)v223;
  v126 = swift_dynamicCast(v223, &v255, v124, v120, 6);
  v127 = *(_QWORD *)(v120 - 8);
  v128 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v127 + 56);
  if (!v126)
  {
    v128(v125, 1, 1, v120);
    goto LABEL_49;
  }
  v128(v125, 0, 1, v120);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v127 + 48))(v125, 1, v120) == 1)
  {
LABEL_49:

    (*(void (**)(char *, uint64_t))(v227 + 8))(v231, v228);
    (*(void (**)(char *, uint64_t))(v112 + 8))(v111, v240);
    sub_10004FF60(v125, (uint64_t *)&unk_1011C47B0);
    swift_deallocBox(v121);
    return;
  }
  v247 = v97;
  v230 = a2;
  v129 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v127 + 32))(v123, v125, v120);
  v130 = static UIListContentConfiguration.ImageProperties.standardDimension.getter(v129);
  v132.n128_f64[0] = static UIListContentConfiguration.ImageProperties.standardDimension.getter(v131);
  v133 = v132.n128_f64[0];
  v134 = (void (*)(Swift::String *, _QWORD))UIListContentConfiguration.imageProperties.modify(&v255, v132);
  UIListContentConfiguration.ImageProperties.reservedLayoutSize.setter(v130, v133);
  v134(&v255, 0);
  v135 = (void *)objc_opt_self(UIFontMetrics);
  v136 = objc_msgSend(v135, "defaultMetrics");
  objc_msgSend(v136, "scaledValueForValue:", 28.0);
  v138 = v137;
  objc_msgSend(v136, "scaledValueForValue:", 28.0);

  v140 = (void (*)(Swift::String *, _QWORD))UIListContentConfiguration.imageProperties.modify(&v255, v139);
  v141 = (void (*)(_OWORD *, _QWORD))UIListContentConfiguration.ImageProperties.reservedLayoutSize.modify(v258);
  *v142 = v138;
  v141(v258, 0);
  v140(&v255, 0);
  v143 = objc_msgSend(v135, "defaultMetrics");
  objc_msgSend(v143, "scaledValueForValue:", 28.0);
  v145 = v144;
  objc_msgSend(v143, "scaledValueForValue:", 28.0);
  v147 = v146;

  v149 = (void (*)(Swift::String *, _QWORD))UIListContentConfiguration.imageProperties.modify(&v255, v148);
  UIListContentConfiguration.ImageProperties.maximumSize.setter(v145, v147);
  v149(&v255, 0);
  v150 = (void *)UIView.Border.artwork.unsafeMutableAddressor()[2];
  v151 = v150;
  v153 = (double (*)(Swift::String *, _QWORD))UIListContentConfiguration.imageProperties.modify(&v255, v152);
  UIListContentConfiguration.ImageProperties.strokeColor.setter(v150);
  v154.n128_f64[0] = v153(&v255, 0);
  v155 = (double (*)(Swift::String *, _QWORD))UIListContentConfiguration.imageProperties.modify(&v255, v154);
  UIListContentConfiguration.ImageProperties.strokeWidth.setter(0.0);
  v156.n128_f64[0] = v155(&v255, 0);
  v157 = (void (*)(Swift::String *, _QWORD))UIListContentConfiguration.imageProperties.modify(&v255, v156);
  UIListContentConfiguration.ImageProperties.cornerRadius.setter(0.0);
  v157(&v255, 0);
  v158 = sub_10037E2A0();
  v159 = UIListContentConfiguration.image.setter(v158);
  v160 = (uint64_t)v218;
  Playlist.artwork.getter(v159);
  v161 = v221;
  v162 = v222;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v221 + 48))(v160, 1, v222) == 1)
  {
    sub_10004FF60(v160, &qword_1011A1440);
    v163 = v247;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v161 + 32))(v219, v160, v162);
    v190 = objc_msgSend(v135, "defaultMetrics");
    objc_msgSend(v190, "scaledValueForValue:", 28.0);
    v192 = v191;
    objc_msgSend(v190, "scaledValueForValue:", 28.0);

    v193 = objc_msgSend(v135, "defaultMetrics");
    objc_msgSend(v193, "scaledValueForValue:", 28.0);
    objc_msgSend(v193, "scaledValueForValue:", 28.0);
    v195 = v194;

    v196 = v216;
    v197 = objc_msgSend(v216, "traitCollection");
    objc_msgSend(v197, "displayScale");
    v199 = v198;

    v200 = type metadata accessor for Artwork.CropStyle(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v200 - 8) + 56))(v220, 1, 1, v200);
    v201 = type metadata accessor for Artwork.ImageFormat(0);
    v202 = (uint64_t)v217;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v201 - 8) + 56))(v217, 1, 1, v201);
    v203 = *(_QWORD *)(v254 + OBJC_IVAR____TtCC5Music16TabBarController20LibraryTabDataSource_artworkCache);
    v204 = sub_100048748((unint64_t *)&qword_1011A3E20, (uint64_t (*)(uint64_t))type metadata accessor for ArtworkPrefetchingController.CacheReference, (uint64_t)&unk_100EAE5B0);
    v205 = (_QWORD *)swift_allocObject(&unk_1010D7C40, 48, 7);
    v205[2] = v121;
    v205[3] = v196;
    v163 = v247;
    v206 = ObjectType;
    v205[4] = v247;
    v205[5] = v206;
    v207 = v163;
    swift_retain();
    swift_retain();
    v208 = v196;
    v209 = (uint64_t)v220;
    v210 = v204;
    v211 = v219;
    Artwork.loadImage(width:height:pixelLength:cropStyle:format:cacheOwner:completion:)(v220, v202, v203, v210, sub_1006EA110, v205, v192, v195, 1.0 / v199);
    swift_release();
    swift_release();
    sub_10004FF60(v202, (uint64_t *)&unk_1011A63A0);
    v112 = v250;
    sub_10004FF60(v209, (uint64_t *)&unk_1011A14A0);
    (*(void (**)(char *, uint64_t))(v221 + 8))(v211, v222);
  }
  swift_beginAccess(v123, v258, 0, 0);
  v256 = v120;
  v257 = &protocol witness table for UIListContentConfiguration;
  v212 = sub_100049F68(&v255);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v127 + 16))(v212, v123, v120);
  _UITabSidebarItem._contentConfiguration.setter(&v255);

  (*(void (**)(char *, uint64_t))(v227 + 8))(v231, v228);
  (*(void (**)(char *, uint64_t))(v112 + 8))(v251, v240);
  swift_release();
}

id sub_1006E97F0(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  id v27;
  id v28;
  int v29;
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, char *, uint64_t);
  char *v40;
  id result;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  void *v56;
  void *v57;
  double v58;
  id v59;
  id v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, char *, uint64_t);
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  char *v74;
  uint64_t v75;
  void **aBlock;
  uint64_t v77;
  void *v78;
  void *v79;
  void *v80;
  uint64_t v81;
  _OWORD v82[3];

  v70 = a1;
  v3 = sub_100007E8C((uint64_t *)&unk_1011A3D60);
  v71 = *(_QWORD *)(v3 - 8);
  v4 = *(_QWORD *)(v71 + 64);
  __chkstk_darwin(v3);
  v72 = (uint64_t)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v61 - v6;
  v8 = sub_100007E8C(&qword_1011C47A8);
  __chkstk_darwin(v8);
  v10 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = _s9PlaylistsVMa(0);
  __chkstk_darwin(v11);
  v75 = (uint64_t)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C((uint64_t *)&unk_1011AD730);
  __chkstk_darwin(v13);
  v15 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v61 - v17;
  v19 = type metadata accessor for Playlist.Folder.Item(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(_QWORD *)(v20 + 64);
  __chkstk_darwin(v19);
  v69 = (char *)&v61 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v68 = (char *)&v61 - v23;
  __chkstk_darwin(v24);
  v26 = (char *)&v61 - v25;
  if (qword_10119C0B0 != -1)
    swift_once(&qword_10119C0B0, sub_10048D2A4);
  v73 = a2;
  v27 = objc_getAssociatedObject(a2, (const void *)qword_1011B6130);
  if (v27)
  {
    v28 = v27;
    _bridgeAnyObjectToAny(_:)(v82, v27);
    swift_unknownObjectRelease(v28);
  }
  else
  {
    memset(v82, 0, 32);
  }
  sub_100065228((uint64_t)v82, (uint64_t)&aBlock, &qword_10119DCC0);
  if (!v79)
  {
    sub_10004FF60((uint64_t)&aBlock, &qword_10119DCC0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v18, 1, 1, v19);
    goto LABEL_11;
  }
  v74 = v7;
  v29 = swift_dynamicCast(v18, &aBlock, (char *)&type metadata for Any + 8, v19, 6);
  v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
  v30(v18, v29 ^ 1u, 1, v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
LABEL_11:
    sub_10004FF60((uint64_t)v18, (uint64_t *)&unk_1011AD730);
    return 0;
  }
  v66 = v4;
  v67 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
  v67(v26, v18, v19);
  sub_1006E2D4C();
  v31 = v26;
  v32 = RequestResponse.Controller.revision.getter();
  swift_release();
  sub_10004A160(v32 + *(_QWORD *)(*(_QWORD *)v32 + 96), (uint64_t)v10, &qword_1011C47A8);
  swift_release();
  sub_10005B704((uint64_t)v10, v75, _s9PlaylistsVMa);
  sub_10004FF60((uint64_t)v10, &qword_1011C47A8);
  v33 = sub_100007E8C((uint64_t *)&unk_1011AD770);
  v34 = *(unsigned __int8 *)(v20 + 80);
  v35 = (v34 + 32) & ~v34;
  v36 = v35 + *(_QWORD *)(v20 + 72);
  v64 = v34 | 7;
  v37 = swift_allocObject(v33, v36, v34 | 7);
  *(_OWORD *)(v37 + 16) = xmmword_100EA7AA0;
  v65 = v35;
  v38 = v37 + v35;
  v63 = v20;
  v39 = *(void (**)(uint64_t, char *, uint64_t))(v20 + 16);
  v40 = v31;
  v39(v38, v31, v19);
  v30(v15, 1, 1, v19);
  sub_10010C264(v37, (uint64_t)v15, (uint64_t)v74);
  swift_bridgeObjectRelease();
  sub_10004FF60((uint64_t)v15, (uint64_t *)&unk_1011AD730);
  result = objc_msgSend(v73, "_identifier");
  v73 = result;
  if (result)
  {
    v42 = v68;
    v39((uint64_t)v68, v31, v19);
    v43 = (v34 + 16) & ~v34;
    v44 = v64;
    v61 = swift_allocObject(&unk_1010D7B78, v43 + v21, v64);
    v67((char *)(v61 + v43), v42, v19);
    v45 = swift_allocObject(&unk_1010D7B50, 24, 7);
    v46 = v40;
    v62 = v40;
    v47 = v45;
    swift_unknownObjectWeakInit(v45 + 16);
    v48 = swift_allocObject(&unk_1010D7BA0, 24, 7);
    swift_unknownObjectWeakInit(v48 + 16);
    v49 = v69;
    v39((uint64_t)v69, v46, v19);
    v50 = v72;
    sub_10004A160((uint64_t)v74, v72, (uint64_t *)&unk_1011A3D60);
    v51 = v65;
    v52 = *(unsigned __int8 *)(v71 + 80);
    v53 = (v65 + v21 + v52) & ~v52;
    v54 = swift_allocObject(&unk_1010D7BC8, v53 + v66, v44 | v52);
    *(_QWORD *)(v54 + 16) = v47;
    *(_QWORD *)(v54 + 24) = v48;
    v67((char *)(v54 + v51), v49, v19);
    sub_100065228(v50, v54 + v53, (uint64_t *)&unk_1011A3D60);
    v55 = (void *)objc_opt_self(UIContextMenuConfiguration);
    v80 = sub_100345E44;
    v81 = v61;
    aBlock = _NSConcreteStackBlock;
    v77 = 1107296256;
    v78 = sub_1000FA900;
    v79 = &unk_1010D7BE0;
    v56 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_release();
    v80 = sub_1006EA04C;
    v81 = v54;
    aBlock = _NSConcreteStackBlock;
    v77 = 1107296256;
    v78 = sub_100968BE4;
    v79 = &unk_1010D7C08;
    v57 = _Block_copy(&aBlock);
    swift_retain();
    *(_QWORD *)&v58 = swift_release().n128_u64[0];
    v59 = v73;
    v60 = objc_msgSend(v55, "configurationWithIdentifier:previewProvider:actionProvider:", v73, v56, v57, v58);

    swift_release();
    swift_release();
    _Block_release(v57);
    _Block_release(v56);
    sub_10004FF60((uint64_t)v74, (uint64_t *)&unk_1011A3D60);
    sub_10005B748(v75, _s9PlaylistsVMa);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v62, v19);
    swift_release();
    swift_release();
    return v60;
  }
  __break(1u);
  return result;
}

uint64_t sub_1006E9F0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for Playlist.Folder.Item(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1006E9F6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;

  v1 = type metadata accessor for Playlist.Folder.Item(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  v5 = *(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3D60) - 8);
  v6 = (v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  swift_release();
  v8 = swift_release();
  (*(void (**)(unint64_t, uint64_t, __n128))(v2 + 8))(v0 + v3, v1, v8);
  v9 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v10 = *(_QWORD *)(v9 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(v0 + v6, 1, v9))
    (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v0 + v6, v9);
  return swift_deallocObject(v0, v6 + v7);
}

unint64_t sub_1006EA04C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(type metadata accessor for Playlist.Folder.Item(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v4 + *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3D60) - 8) + 80);
  return sub_1006E5654(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + v4, v1 + ((v5 + v6) & ~v6));
}

uint64_t sub_1006EA0BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1006EA0CC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1006EA0DC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 48, 7);
}

void sub_1006EA110(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_1006E52C4(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), *(void **)(v2 + 32));
}

Class sub_1006EA124(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1006E4FA0(a1, a2, v2);
}

Class sub_1006EA12C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1006E4B0C(a1, a2, v2);
}

double sub_1006EA134(__int16 a1)
{
  uint64_t v1;

  return sub_1006E4C74(a1 & 0x1FF, v1);
}

void sub_1006EA140(void *a1)
{
  uint64_t v1;

  sub_1006E4524(a1, v1);
}

void sub_1006EA148(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_1006E2FDC(a1, v2, a2);
}

uint64_t sub_1006EA150(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s9PlaylistsVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1006EA194(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_1006EA1BC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_1006EA1E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1006E27E0(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

unint64_t sub_1006EA1F0()
{
  unint64_t result;

  result = qword_1011C47F0;
  if (!qword_1011C47F0)
  {
    result = swift_getWitnessTable(&unk_100ECBA28, &_s19TabElementEditErrorON);
    atomic_store(result, (unint64_t *)&qword_1011C47F0);
  }
  return result;
}

void sub_1006EA234(void *a1)
{
  uint64_t v1;

  sub_1006E11CC(a1, v1);
}

uint64_t sub_1006EA23C(id *a1)
{
  return sub_1006E18E4(a1) & 1;
}

uint64_t sub_1006EA258(uint64_t a1)
{
  uint64_t v1;

  return sub_1006E16F8(a1, v1);
}

uint64_t sub_1006EA260()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1006EA284()
{
  sub_1006E08D4();
}

uint64_t _s19TabElementEditErrorOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1006EA2E4 + 4 * byte_100ECB640[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1006EA304 + 4 * byte_100ECB645[v4]))();
}

_BYTE *sub_1006EA2E4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1006EA304(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1006EA30C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1006EA314(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1006EA31C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1006EA324(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s19TabElementEditErrorOMa()
{
  return &_s19TabElementEditErrorON;
}

uint64_t _s20LibraryTabDataSourceC29PlaylistsTabElementIdentifierOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1006EA38C + 4 * byte_100ECB64F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1006EA3C0 + 4 * byte_100ECB64A[v4]))();
}

uint64_t sub_1006EA3C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1006EA3C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1006EA3D0);
  return result;
}

uint64_t sub_1006EA3DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1006EA3E4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1006EA3E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1006EA3F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s20LibraryTabDataSourceC29PlaylistsTabElementIdentifierOMa()
{
  return &_s20LibraryTabDataSourceC29PlaylistsTabElementIdentifierON;
}

uint64_t *sub_1006EA40C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v10);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v11 = type metadata accessor for Playlist.Folder.Item(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = a2[3];
      a1[3] = v9;
      (**(void (***)(uint64_t *, uint64_t *))(v9 - 8))(a1, a2);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t sub_1006EA4F4(_QWORD *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload(a1, a2);
  if ((_DWORD)result == 1)
  {
    v4 = type metadata accessor for Playlist.Folder.Item(0);
    return (*(uint64_t (**)(_QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  else if (!(_DWORD)result)
  {
    return _s5Music18DragDropToPlaylistV6OriginVwxx_0(a1);
  }
  return result;
}

_QWORD *sub_1006EA54C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 1)
  {
    v8 = type metadata accessor for Playlist.Folder.Item(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = a2[3];
    a1[3] = v7;
    (**(void (***)(_QWORD *, _QWORD *))(v7 - 8))(a1, a2);
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

_QWORD *sub_1006EA60C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, _s20LibraryTabDataSourceC5ErrorOMa);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v8 = type metadata accessor for Playlist.Folder.Item(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = a2[3];
      a1[3] = v7;
      (**(void (***)(_QWORD *, _QWORD *))(v7 - 8))(a1, a2);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

void *sub_1006EA6E4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for Playlist.Folder.Item(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_1006EA770(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, _s20LibraryTabDataSourceC5ErrorOMa);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for Playlist.Folder.Item(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1006EA814(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = " ";
  result = type metadata accessor for Playlist.Folder.Item(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v4);
    return 0;
  }
  return result;
}

unint64_t sub_1006EA888()
{
  unint64_t result;

  result = qword_1011C48B8;
  if (!qword_1011C48B8)
  {
    result = swift_getWitnessTable(&unk_100ECB970, &_s20LibraryTabDataSourceC29PlaylistsTabElementIdentifierON);
    atomic_store(result, (unint64_t *)&qword_1011C48B8);
  }
  return result;
}

unint64_t sub_1006EA8D0()
{
  unint64_t result;

  result = qword_1011C48C0;
  if (!qword_1011C48C0)
  {
    result = swift_getWitnessTable(&unk_100ECBA00, &_s19TabElementEditErrorON);
    atomic_store(result, (unint64_t *)&qword_1011C48C0);
  }
  return result;
}

uint64_t sub_1006EA948()
{
  return EnvironmentValues.openURL.getter();
}

uint64_t sub_1006EA968(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for OpenURLAction(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return EnvironmentValues.openURL.setter(v4);
}

uint64_t sub_1006EA9E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned __int8 a12, unsigned __int8 a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  void *v51;
  id v52;
  uint64_t v53;
  unint64_t v54;
  __n128 v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  NSString *v60;
  id v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  Class isa;
  double v68;
  id v69;
  id v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  __n128 v74;
  id v75;
  id v76;
  void *v77;
  uint64_t v78;
  id v79;
  void *v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  id v84;
  uint64_t v85;
  Class v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  id v124;
  uint64_t v125;
  uint64_t v126;
  int v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  id v134;
  uint64_t *v135;
  char *v136;
  uint64_t v137;
  uint64_t *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  id v150;
  uint64_t v151;

  v133 = a8;
  v132 = a7;
  v131 = a6;
  v130 = a5;
  v129 = a4;
  v128 = a3;
  v126 = a2;
  v147 = a1;
  v143 = a16;
  v144 = a17;
  v145 = a15;
  v140 = a14;
  v127 = a13;
  LODWORD(v134) = a12;
  v148 = a10;
  v149 = a11;
  v125 = a9;
  v139 = type metadata accessor for SharePlayProxCard(0);
  v18 = __chkstk_darwin(v139);
  v141 = (uint64_t)&v121 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v142 = (uint64_t)&v121 - v20;
  v21 = (int *)type metadata accessor for SharePlayProxCard.ViewModel(0);
  v22 = __chkstk_darwin(v21);
  v137 = (uint64_t)&v121 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v123 = (char *)&v121 - v24;
  v25 = sub_100007E8C(&qword_1011A1440);
  v26 = __chkstk_darwin(v25);
  v28 = (char *)&v121 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __chkstk_darwin(v26);
  v31 = (char *)&v121 - v30;
  v32 = __chkstk_darwin(v29);
  v34 = (char *)&v121 - v33;
  __chkstk_darwin(v32);
  v36 = (char *)&v121 - v35;
  v37 = (uint64_t *)&v17[qword_1011C48E0];
  *v37 = 0;
  v37[1] = 0;
  v135 = v37;
  v38 = (uint64_t *)&v17[qword_1011C48E8];
  v39 = type metadata accessor for Artwork(0);
  *v38 = 0;
  v38[1] = 0;
  v138 = v38;
  v40 = *(_QWORD *)(v39 - 8);
  v41 = (uint64_t)v36;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v40 + 56))(v36, 1, 1, v39);
  v42 = (void *)objc_opt_self(ICMediaUserStateCenter);
  v136 = v17;
  v43 = objc_msgSend(v42, "shared");
  v44 = objc_msgSend(v43, "activeUserState");

  v45 = objc_msgSend(v44, "music");
  v46 = objc_msgSend(v45, "userProfile");

  v124 = v46;
  if (v46)
  {
    v47 = objc_msgSend(v46, "name");
    v146 = static String._unconditionallyBridgeFromObjectiveC(_:)(v47);
    v49 = v48;

    v50 = objc_msgSend(v46, "artworkInfo");
    if (v50)
    {
      v51 = v50;
      v52 = objc_msgSend(v50, "responseDictionary");

      if (v52)
      {
        v53 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v52, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

        v54 = sub_100050AA8(v53);
        v55 = swift_bridgeObjectRelease(v53);
        if (v54)
        {
          Artwork.init(_:)(v54, v55);
          sub_1003764B8((uint64_t)v34, v41);
        }
      }
    }
    sub_10004A160(v41, (uint64_t)v31, &qword_1011A1440);
    v56 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v40 + 48))(v31, 1, v39);
    sub_10004FF60((uint64_t)v31, &qword_1011A1440);
    if (v56 != 1)
      goto LABEL_15;
  }
  else
  {
    v146 = 0;
    v49 = 0;
  }
  v57 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  v58 = swift_allocObject(v57, 40, 7);
  *(_OWORD *)(v58 + 16) = xmmword_100EA7A90;
  *(_QWORD *)(v58 + 32) = CNContactThumbnailImageDataKey;
  v151 = v58;
  specialized Array._endMutation()(v58);
  v59 = (void *)objc_opt_self(CNContactFormatter);
  v60 = CNContactThumbnailImageDataKey;
  v61 = objc_msgSend(v59, "descriptorForRequiredKeysForStyle:", 0);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v61);
  v63 = *(_QWORD *)((v151 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v62 = *(_QWORD *)((v151 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v63 >= v62 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v62 > 1, v63 + 1, 1);
  v64 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v63, v61);
  specialized Array._endMutation()(v64);
  v65 = objc_msgSend(objc_allocWithZone((Class)CNContactStore), "init");
  v66 = v151;
  sub_100007E8C(&qword_1011C51B8);
  isa = Array._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)&v68 = swift_bridgeObjectRelease(v66).n128_u64[0];
  v150 = 0;
  v69 = objc_msgSend(v65, "_ios_meContactWithKeysToFetch:error:", isa, &v150, v68);

  v70 = v150;
  if (v69)
  {
    if (v49)
    {
      v71 = v49;
    }
    else
    {
      v76 = objc_msgSend(v59, "stringFromContact:style:", v69, 0);
      if (v76)
      {
        v77 = v76;
        v146 = static String._unconditionallyBridgeFromObjectiveC(_:)(v76);
        v71 = v78;

      }
      else
      {
        v71 = 0;
      }
    }
    sub_10004A160(v41, (uint64_t)v28, &qword_1011A1440);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v28, 1, v39) == 1)
    {
      sub_10004FF60((uint64_t)v28, &qword_1011A1440);
      v79 = objc_msgSend(v69, "thumbnailImageData");
      if (v79)
      {
        v80 = v79;
        v81 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v79);
        v83 = v82;

        v84 = objc_allocWithZone((Class)UIImage);
        v85 = v71;
        v86 = Data._bridgeToObjectiveC()().super.isa;
        v75 = objc_msgSend(v84, "initWithData:", v86);
        sub_1000652DC(v81, v83);

        v71 = v85;
        goto LABEL_25;
      }

    }
    else
    {

      sub_10004FF60((uint64_t)v28, &qword_1011A1440);
    }
    v75 = 0;
    goto LABEL_25;
  }
  v72 = v70;
  v73 = _convertNSErrorToError(_:)(v70);

  swift_willThrow(v74);
  swift_errorRelease(v73);
LABEL_15:
  v75 = 0;
  v71 = v49;
LABEL_25:
  v87 = (uint64_t)v123;
  v88 = (uint64_t)&v123[v21[10]];
  v122 = v41;
  sub_10004A160(v41, v88, &qword_1011A1440);
  v89 = v147;
  v90 = v126;
  *(_QWORD *)v87 = v147;
  *(_QWORD *)(v87 + 8) = v90;
  v91 = v129;
  *(_QWORD *)(v87 + 16) = v128;
  *(_QWORD *)(v87 + 24) = v91;
  v92 = v131;
  *(_QWORD *)(v87 + 32) = v130;
  *(_QWORD *)(v87 + 40) = v92;
  v93 = v133;
  *(_QWORD *)(v87 + 48) = v132;
  *(_QWORD *)(v87 + 56) = v93;
  *(_QWORD *)(v87 + 64) = v125;
  *(_BYTE *)(v87 + 72) = v127 & 1;
  *(_QWORD *)(v87 + v21[11]) = v75;
  v94 = (uint64_t *)(v87 + v21[12]);
  *v94 = v146;
  v94[1] = v71;
  v95 = v87 + v21[13];
  v97 = v148;
  v96 = v149;
  *(_QWORD *)v95 = v148;
  *(_QWORD *)(v95 + 8) = v96;
  v98 = v134 & 1;
  *(_BYTE *)(v95 + 16) = v134 & 1;
  LODWORD(v133) = v98;
  v99 = type metadata accessor for SharePlayProxCard.CardState(0);
  v100 = swift_allocObject(v99, *(unsigned int *)(v99 + 48), *(unsigned __int16 *)(v99 + 52));
  v134 = v75;
  swift_retain(v89);
  sub_1006EC874(v97, v96, v98);
  sub_1006EE298();
  v101 = swift_allocObject(&unk_1010D80F8, 24, 7);
  v146 = v101 + 16;
  v132 = v101;
  swift_unknownObjectWeakInit(v101 + 16, 0);
  v102 = v137;
  sub_10005B704(v87, v137, type metadata accessor for SharePlayProxCard.ViewModel);
  swift_retain(v100);
  v103 = v141;
  sub_1006EB3EC(v102, v100, v141);
  v104 = v142;
  sub_10005B704(v103, v142, type metadata accessor for SharePlayProxCard);
  v105 = (uint64_t *)(v104 + *(int *)(v139 + 24));
  v107 = *v105;
  v106 = v105[1];
  swift_retain(v101);
  sub_10004BA30(v107, v106);
  *v105 = (uint64_t)sub_1006F5BD0;
  v105[1] = v101;
  sub_10005B748(v103, type metadata accessor for SharePlayProxCard);
  v108 = v136;
  *(_QWORD *)&v136[qword_1011C48D0] = v100;
  sub_10005B704(v87, (uint64_t)&v108[qword_1011C48D8], type metadata accessor for SharePlayProxCard.ViewModel);
  v109 = v135;
  v110 = *v135;
  v111 = v135[1];
  v112 = v145;
  *v135 = v140;
  v109[1] = v112;
  swift_retain(v100);
  swift_retain(v112);
  sub_10004BA30(v110, v111);
  v113 = v138;
  v114 = *v138;
  v115 = v138[1];
  v117 = v143;
  v116 = v144;
  *v138 = v143;
  v113[1] = v116;
  sub_100048AAC(v117, v116);
  sub_10004BA30(v114, v115);

  sub_10005B704(v104, v103, type metadata accessor for SharePlayProxCard);
  v118 = Card.ViewController.init(content:)(v103);
  sub_10004BA30(v117, v116);
  swift_release(v112);
  sub_1006EC948(v148, v149, v133);

  swift_release(v100);
  swift_release(v147);
  sub_10005B748(v104, type metadata accessor for SharePlayProxCard);
  sub_10005B748(v87, type metadata accessor for SharePlayProxCard.ViewModel);
  sub_10004FF60(v122, &qword_1011A1440);
  v119 = v146;
  swift_beginAccess(v146, &v151, 1, 0);
  swift_unknownObjectWeakAssign(v119, v118);
  swift_release(v132);
  return v118;
}

uint64_t sub_1006EB3EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  __int128 v23;
  __int128 v24;
  uint64_t v25;

  v6 = (int *)type metadata accessor for SharePlayProxCard(0);
  v7 = (_QWORD *)(a3 + v6[6]);
  *v7 = 0;
  v7[1] = 0;
  v8 = a3 + v6[7];
  LOBYTE(v23) = 0;
  State.init(wrappedValue:)(&v23, &type metadata for Bool);
  v9 = *((_QWORD *)&v24 + 1);
  *(_BYTE *)v8 = v24;
  *(_QWORD *)(v8 + 8) = v9;
  v10 = a3 + v6[8];
  LOBYTE(v23) = 0;
  State.init(wrappedValue:)(&v23, &type metadata for Bool);
  v11 = *((_QWORD *)&v24 + 1);
  *(_BYTE *)v10 = v24;
  *(_QWORD *)(v10 + 8) = v11;
  v12 = a3 + v6[9];
  LOBYTE(v23) = 0;
  State.init(wrappedValue:)(&v23, &type metadata for Bool);
  v13 = *((_QWORD *)&v24 + 1);
  *(_BYTE *)v12 = v24;
  *(_QWORD *)(v12 + 8) = v13;
  v14 = a3 + v6[10];
  v23 = xmmword_100EA93A0;
  State.init(wrappedValue:)(&v23, &type metadata for ImagePicker.SourceType);
  v15 = v25;
  *(_OWORD *)v14 = v24;
  *(_QWORD *)(v14 + 16) = v15;
  sub_10005B704(a1, a3, type metadata accessor for SharePlayProxCard.ViewModel);
  v16 = (uint64_t *)(a3 + v6[5]);
  v17 = type metadata accessor for SharePlayProxCard.CardState(0);
  v18 = sub_1006F4BB4();
  v19 = ObservedObject.init(wrappedValue:)(a2, v17, v18);
  v21 = v20;
  result = sub_10005B748(a1, type metadata accessor for SharePlayProxCard.ViewModel);
  *v16 = v19;
  v16[1] = v21;
  return result;
}

void sub_1006EB55C(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    sub_1006EB6C4();

  }
}

void sub_1006EB5AC(char *a1, uint64_t a2, void *a3)
{
  char *v4;
  char *v5;
  id v6;

  v4 = &a1[qword_1011C48E0];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  v5 = &a1[qword_1011C48E8];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  v6 = a3;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E2B820, "Music/IdentityCardViewController.swift", 38, 2, 101, 0);
  __break(1u);
}

void sub_1006EB634(void *a1, uint64_t a2, uint64_t a3)
{
  char *v4;
  void (*v5)(__n128);
  uint64_t v6;
  __n128 v7;
  objc_super v8;

  v8.receiver = a1;
  v8.super_class = (Class)type metadata accessor for SharePlayProxCardViewController(0);
  v4 = (char *)v8.receiver;
  objc_msgSendSuper2(&v8, "viewDidDisappear:", a3);
  v5 = *(void (**)(__n128))&v4[qword_1011C48E8];
  if (v5)
  {
    v6 = *(_QWORD *)&v4[qword_1011C48E8 + 8];
    v7 = swift_retain();
    v5(v7);
    sub_10004BA30((uint64_t)v5, v6);
  }

}

double sub_1006EB6C4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  double result;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void (*v21)(char *, __n128);
  uint64_t v22;
  __n128 v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  char *v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;

  v1 = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v2);
  v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = &v0[qword_1011C48D8];
  if (v0[qword_1011C48D8 + 72] == 1)
  {
    v7 = qword_1011C48D0;
    v8 = *(_QWORD *)&v0[qword_1011C48D0];
    KeyPath = swift_getKeyPath(&unk_100ECBC38);
    v10 = swift_getKeyPath(&unk_100ECBC60);
    swift_retain(v8);
    static Published.subscript.getter(&v45, v11, KeyPath, v10);
    swift_release(v10);
    swift_release(KeyPath);
    swift_release(v8);
    v13 = v45;
    v12 = v46;
    swift_bridgeObjectRelease(v46);
    v14 = HIBYTE(v12) & 0xF;
    if ((v12 & 0x2000000000000000) == 0)
      v14 = v13 & 0xFFFFFFFFFFFFLL;
    if (v14)
    {
      v15 = *(_QWORD *)&v1[v7];
      v16 = swift_getKeyPath(&unk_100ECBC38);
      v17 = swift_getKeyPath(&unk_100ECBC60);
      swift_retain(v15);
      static Published.subscript.getter(&v45, v18, v16, v17);
      swift_release(v17);
      swift_release(v16);
      swift_release(v15);
      v20 = v45;
      v19 = v46;
    }
    else
    {
      v24 = (uint64_t *)&v6[*(int *)(type metadata accessor for SharePlayProxCard.ViewModel(0) + 48)];
      v19 = v24[1];
      if (v19)
      {
        v20 = *v24;
        swift_bridgeObjectRetain();
      }
      else
      {
        v20 = 0;
        v19 = 0xE000000000000000;
      }
    }
    v25 = *(_QWORD *)&v1[v7];
    v26 = swift_getKeyPath(&unk_100ECBD58);
    v27 = swift_getKeyPath(&unk_100ECBD80);
    LOBYTE(v45) = 1;
    swift_retain(v25);
    static Published.subscript.setter(&v45, v25, v26, v27);
    v28 = *(_QWORD *)&v1[v7];
    if ((*(_BYTE *)(v28 + OBJC_IVAR____TtCV5Music17SharePlayProxCard9CardState_removedImage) & 1) != 0)
    {
      v29 = 0;
    }
    else
    {
      v30 = swift_getKeyPath(&unk_100ECBC80);
      v31 = swift_getKeyPath(&unk_100ECBCA8);
      swift_retain(v28);
      static Published.subscript.getter(&v45, v32, v30, v31);
      swift_release(v31);
      swift_release(v30);
      swift_release(v28);
      v29 = v45;
      if (!v45)
      {
        v29 = *(_QWORD *)&v6[*(int *)(type metadata accessor for SharePlayProxCard.ViewModel(0) + 44)];
        if (v29)
          v33 = (id)v29;
        else
          v29 = 1;
      }
    }
    sub_1003B2554((id)v29);
    if (qword_10119BF80 != -1)
      swift_once(&qword_10119BF80, sub_1003AEAB8);
    v34 = type metadata accessor for Logger(0);
    v35 = sub_100048B14(v34, (uint64_t)qword_10124CE78);
    v36 = Logger.logObject.getter(v35);
    v37 = static os_log_type_t.default.getter(v36);
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v38 = 0;
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "Updating user profile", v38, 2u);
      swift_slowDealloc(v38, -1, -1);
    }

    v39 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v5, 1, 1, v39);
    type metadata accessor for MainActor(0);
    swift_bridgeObjectRetain();
    sub_1003B2554((id)v29);
    v40 = v1;
    v42 = static MainActor.shared.getter(v41);
    v43 = swift_allocObject(&unk_1010D80A8, 88, 7);
    *(_QWORD *)(v43 + 16) = v42;
    *(_QWORD *)(v43 + 24) = &protocol witness table for MainActor;
    *(_QWORD *)(v43 + 32) = v20;
    *(_QWORD *)(v43 + 40) = v19;
    *(_QWORD *)(v43 + 48) = 0;
    *(_QWORD *)(v43 + 56) = 0;
    *(_QWORD *)(v43 + 64) = v29;
    *(_WORD *)(v43 + 72) = 513;
    *(_QWORD *)(v43 + 80) = v40;
    v44 = sub_100166D14((uint64_t)v5, (uint64_t)&unk_1011C5190, v43);
    sub_1003B25A8((id)v29);
    swift_bridgeObjectRelease(v19);
    swift_bridgeObjectRelease(0);
    sub_1003B25A8((id)v29);
    *(_QWORD *)&result = swift_release(v44).n128_u64[0];
  }
  else
  {
    v21 = *(void (**)(char *, __n128))&v0[qword_1011C48E0];
    if (v21)
    {
      v22 = *(_QWORD *)&v0[qword_1011C48E0 + 8];
      v23 = swift_retain(v22);
      v21(v1, v23);
      sub_10004BA30((uint64_t)v21, v22);
    }
  }
  return result;
}

uint64_t sub_1006EBB08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t);

  v5[3] = a5;
  v7 = type metadata accessor for Locale(0);
  v5[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for String.LocalizationValue(0);
  v5[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  v5[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5[7] = type metadata accessor for MainActor(0);
  v5[8] = static MainActor.shared.getter(v10);
  v13 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1011AFDA0 + dword_1011AFDA0);
  v11 = (_QWORD *)swift_task_alloc(unk_1011AFDA4);
  v5[9] = v11;
  *v11 = v5;
  v11[1] = sub_1006EBBF0;
  return v13(a4, 1);
}

uint64_t sub_1006EBBF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc(v2);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  if (v0)
    v6 = sub_1006EBD44;
  else
    v6 = sub_1006EBC78;
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_1006EBC78()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  __n128 v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(void **)(v0 + 24);
  swift_release();
  v3 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v1, 1, 1, v3);
  v4 = v2;
  v6 = static MainActor.shared.getter(v5);
  v7 = (_QWORD *)swift_allocObject(&unk_1010D80D0, 40, 7);
  v7[2] = v6;
  v7[3] = &protocol witness table for MainActor;
  v7[4] = v4;
  sub_100166D34(v1, (uint64_t)&unk_1011C51A8, (uint64_t)v7);
  swift_release();
  v8 = *(_QWORD *)(v0 + 40);
  v9 = *(_QWORD *)(v0 + 32);
  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1006EBD44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t v19;
  NSString v20;
  id v21;
  NSString v22;
  id v23;
  uint64_t v24;
  uint64_t v25;

  swift_release();
  if (qword_10119BF80 != -1)
    swift_once(&qword_10119BF80, sub_1003AEAB8);
  v1 = *(_QWORD *)(v0 + 80);
  v2 = type metadata accessor for Logger(0);
  sub_100048B14(v2, (uint64_t)qword_10124CE78);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 80);
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 138543362;
    swift_errorRetain(v7);
    v10 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(_QWORD *)(v0 + 16) = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24);
    *v9 = v10;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to update user profile %{public}@", v8, 0xCu);
    v11 = sub_100007E8C((uint64_t *)&unk_1011A33E0);
    swift_arrayDestroy(v9, 1, v11);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 80));
    swift_errorRelease(v7);
  }

  v12 = *(_QWORD *)(v0 + 80);
  v14 = *(_QWORD *)(v0 + 32);
  v13 = *(_QWORD *)(v0 + 40);
  v15 = *(char **)(v0 + 24);
  v16 = *(_QWORD *)&v15[qword_1011C48D0];
  KeyPath = swift_getKeyPath(&unk_100ECBD58);
  v18 = swift_getKeyPath(&unk_100ECBD80);
  *(_BYTE *)(v0 + 88) = 0;
  swift_retain();
  static Published.subscript.setter(v0 + 88, v16, KeyPath, v18);
  v19 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000002DLL, 0x8000000100E42E70);
  static Locale.current.getter(v19);
  String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, 0, v14, 0, 0, 256);
  v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v21 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v20, 0, 1);

  String.okButtonTitle.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v23 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v22, 0, 0);

  objc_msgSend(v21, "addAction:", v23);
  objc_msgSend(v15, "presentViewController:animated:completion:", v21, 1, 0);

  swift_errorRelease(v12);
  v24 = *(_QWORD *)(v0 + 40);
  v25 = *(_QWORD *)(v0 + 32);
  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1006EC0AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  v4[2] = a1;
  v4[3] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[4] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_1006EC118, v7, v8);
}

uint64_t sub_1006EC118()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  void (*v4)(uint64_t, __n128);
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = swift_release();
  v3 = v1 + qword_1011C48E0;
  v4 = *(void (**)(uint64_t, __n128))(v1 + qword_1011C48E0);
  if (v4)
  {
    v5 = *(_QWORD *)(v0 + 24);
    v6 = *(_QWORD *)(v3 + 8);
    v7 = swift_retain();
    v4(v5, v7);
    sub_10004BA30((uint64_t)v4, v6);
  }
  **(_BYTE **)(v0 + 16) = v4 == 0;
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

void sub_1006EC19C()
{
  _swift_stdlib_reportUnimplementedInitializer("Music.SharePlayProxCardViewController", 37, "init(content:)", 14, 0);
  __break(1u);
}

uint64_t sub_1006EC1C8()
{
  uint64_t v0;

  swift_release();
  sub_10005B748(v0 + qword_1011C48D8, type metadata accessor for SharePlayProxCard.ViewModel);
  sub_10004BA30(*(_QWORD *)(v0 + qword_1011C48E0), *(_QWORD *)(v0 + qword_1011C48E0 + 8));
  return sub_10004BA30(*(_QWORD *)(v0 + qword_1011C48E8), *(_QWORD *)(v0 + qword_1011C48E8 + 8));
}

id sub_1006EC224()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SharePlayProxCardViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1006EC258(uint64_t a1)
{
  swift_release();
  sub_10005B748(a1 + qword_1011C48D8, type metadata accessor for SharePlayProxCard.ViewModel);
  sub_10004BA30(*(_QWORD *)(a1 + qword_1011C48E0), *(_QWORD *)(a1 + qword_1011C48E0 + 8));
  return sub_10004BA30(*(_QWORD *)(a1 + qword_1011C48E8), *(_QWORD *)(a1 + qword_1011C48E8 + 8));
}

uint64_t type metadata accessor for SharePlayProxCardViewController(uint64_t a1)
{
  return sub_100055934(a1, qword_1011C4918, (uint64_t)&nominal type descriptor for SharePlayProxCardViewController);
}

uint64_t sub_1006EC2D4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  result = type metadata accessor for SharePlayProxCard.ViewModel(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = &unk_100ECBAE0;
    v4[3] = &unk_100ECBAE0;
    result = swift_initClassMetadata2(a1, 256, 4, v4, a1 + 152);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for SharePlayProxCard.ViewModel(uint64_t a1)
{
  return sub_100055934(a1, qword_1011C4CA0, (uint64_t)&nominal type descriptor for SharePlayProxCard.ViewModel);
}

uint64_t sub_1006EC370()
{
  return type metadata accessor for SharePlayProxCardViewController(0);
}

uint64_t sub_1006EC378()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100ECBC38);
  v2 = swift_getKeyPath(&unk_100ECBC60);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_1006EC3E8()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100ECBC80);
  v2 = swift_getKeyPath(&unk_100ECBCA8);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_1006EC458()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100ECBD58);
  v2 = swift_getKeyPath(&unk_100ECBD80);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_1006EC4C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0 + OBJC_IVAR____TtCV5Music17SharePlayProxCard9CardState__name;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A3370);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtCV5Music17SharePlayProxCard9CardState__image;
  v4 = sub_100007E8C(&qword_1011C5180);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtCV5Music17SharePlayProxCard9CardState__isLoading;
  v6 = sub_100007E8C((uint64_t *)&unk_1011A3380);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1006EC574()
{
  return type metadata accessor for SharePlayProxCard.CardState(0);
}

uint64_t type metadata accessor for SharePlayProxCard.CardState(uint64_t a1)
{
  return sub_100055934(a1, qword_1011C4AD8, (uint64_t)&nominal type descriptor for SharePlayProxCard.CardState);
}

void sub_1006EC590(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[4];

  sub_1000EA598(319, (unint64_t *)&qword_1011A0A58, (uint64_t)&type metadata for String);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1006EC658(319);
    if (v5 <= 0x3F)
    {
      v8[1] = *(_QWORD *)(v4 - 8) + 64;
      sub_1000EA598(319, (unint64_t *)&qword_1011C4B00, (uint64_t)&type metadata for Bool);
      if (v7 <= 0x3F)
      {
        v8[2] = *(_QWORD *)(v6 - 8) + 64;
        v8[3] = &unk_100ECBB08;
        swift_updateClassMetadata2(a1, 256, 4, v8, a1 + 80);
      }
    }
  }
}

void sub_1006EC658(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1011C4AF0)
  {
    v2 = sub_100044B54(&qword_10119E588);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1011C4AF0);
  }
}

uint64_t sub_1006EC6B0(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  id v29;
  uint64_t v31;
  unsigned int (*v32)(const void *, uint64_t, uint64_t);
  void *__dst;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = v8;
    v9 = a2[4];
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = v9;
    v10 = a2[6];
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = v10;
    v11 = a2[7];
    v12 = a2[8];
    *(_BYTE *)(a1 + 72) = *((_BYTE *)a2 + 72);
    v13 = a3[10];
    __dst = (void *)(a1 + v13);
    v14 = (char *)a2 + v13;
    *(_QWORD *)(a1 + 56) = v11;
    *(_QWORD *)(a1 + 64) = v12;
    v15 = type metadata accessor for Artwork(0);
    v31 = *(_QWORD *)(v15 - 8);
    v32 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v31 + 48);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v32(v14, 1, v15))
    {
      v16 = sub_100007E8C(&qword_1011A1440);
      memcpy(__dst, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v31 + 16))(__dst, v14, v15);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v31 + 56))(__dst, 0, 1, v15);
    }
    v17 = a3[11];
    v18 = a3[12];
    v19 = *(void **)((char *)a2 + v17);
    *(_QWORD *)(v7 + v17) = v19;
    v20 = (_QWORD *)(v7 + v18);
    v21 = (uint64_t *)((char *)a2 + v18);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = a3[13];
    v24 = v7 + v23;
    v25 = (uint64_t)a2 + v23;
    v26 = *(_QWORD *)v25;
    v27 = *(_QWORD *)(v25 + 8);
    v28 = *(_BYTE *)(v25 + 16);
    v29 = v19;
    swift_bridgeObjectRetain();
    sub_1006EC874(v26, v27, v28);
    *(_QWORD *)v24 = v26;
    *(_QWORD *)(v24 + 8) = v27;
    *(_BYTE *)(v24 + 16) = v28;
  }
  return v7;
}

uint64_t sub_1006EC874(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_bridgeObjectRetain(a2);
  else
    return swift_retain(a2);
}

uint64_t sub_1006EC884(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[10];
  v5 = type metadata accessor for Artwork(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);

  swift_bridgeObjectRelease();
  return sub_1006EC948(*(_QWORD *)(a1 + a2[13]), *(_QWORD *)(a1 + a2[13] + 8), *(_BYTE *)(a1 + a2[13] + 16));
}

uint64_t sub_1006EC948(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease(a2);
  else
    return swift_release(a2);
}

uint64_t sub_1006EC958(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  id v27;
  unsigned int (*v29)(const void *, uint64_t, uint64_t);
  void *__dst;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  v8 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v8;
  v9 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v10 = a3[10];
  __dst = (void *)(a1 + v10);
  v11 = (const void *)(a2 + v10);
  *(_QWORD *)(a1 + 64) = v9;
  v12 = type metadata accessor for Artwork(0);
  v13 = *(_QWORD *)(v12 - 8);
  v29 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v29(v11, 1, v12))
  {
    v14 = sub_100007E8C(&qword_1011A1440);
    memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(__dst, v11, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
  }
  v15 = a3[11];
  v16 = a3[12];
  v17 = *(void **)(a2 + v15);
  *(_QWORD *)(a1 + v15) = v17;
  v18 = (_QWORD *)(a1 + v16);
  v19 = (_QWORD *)(a2 + v16);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  v21 = a3[13];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = *(_QWORD *)v23;
  v25 = *(_QWORD *)(v23 + 8);
  v26 = *(_BYTE *)(v23 + 16);
  v27 = v17;
  swift_bridgeObjectRetain();
  sub_1006EC874(v24, v25, v26);
  *(_QWORD *)v22 = v24;
  *(_QWORD *)(v22 + 8) = v25;
  *(_BYTE *)(v22 + 16) = v26;
  return a1;
}

uint64_t sub_1006ECAE8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v6 = a3[10];
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = type metadata accessor for Artwork(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = sub_100007E8C(&qword_1011A1440);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = a3[11];
  v16 = *(void **)(a1 + v15);
  v17 = *(void **)(a2 + v15);
  *(_QWORD *)(a1 + v15) = v17;
  v18 = v17;

  v19 = a3[12];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (_QWORD *)(a2 + v19);
  *v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = a3[13];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = *(_QWORD *)v24;
  v26 = *(_QWORD *)(v24 + 8);
  LOBYTE(v16) = *(_BYTE *)(v24 + 16);
  sub_1006EC874(*(_QWORD *)v24, v26, (char)v16);
  v27 = *(_QWORD *)v23;
  v28 = *(_QWORD *)(v23 + 8);
  v29 = *(_BYTE *)(v23 + 16);
  *(_QWORD *)v23 = v25;
  *(_QWORD *)(v23 + 8) = v26;
  *(_BYTE *)(v23 + 16) = (_BYTE)v16;
  sub_1006EC948(v27, v28, v29);
  return a1;
}

uint64_t sub_1006ECD14(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v6 = *(_OWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v7 = a3[10];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  *(_OWORD *)(a1 + 56) = v6;
  v10 = type metadata accessor for Artwork(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_100007E8C(&qword_1011A1440);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  v14 = a3[13];
  v15 = a1 + v14;
  v16 = a2 + v14;
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *(_BYTE *)(v15 + 16) = *(_BYTE *)(v16 + 16);
  return a1;
}

uint64_t sub_1006ECE38(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v10 = a3[10];
  v11 = (void *)(a1 + v10);
  v12 = (void *)(a2 + v10);
  v13 = type metadata accessor for Artwork(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 40))(v11, v12, v13);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    v18 = sub_100007E8C(&qword_1011A1440);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 32))(v11, v12, v13);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_7:
  v19 = a3[11];
  v20 = *(void **)(a1 + v19);
  *(_QWORD *)(a1 + v19) = *(_QWORD *)(a2 + v19);

  v21 = a3[12];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (uint64_t *)(a2 + v21);
  v25 = *v23;
  v24 = v23[1];
  *v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  v26 = a3[13];
  v27 = a1 + v26;
  v28 = a2 + v26;
  v29 = *(_BYTE *)(v28 + 16);
  v30 = *(_QWORD *)v27;
  v31 = *(_QWORD *)(v27 + 8);
  v32 = *(_BYTE *)(v27 + 16);
  *(_OWORD *)v27 = *(_OWORD *)v28;
  *(_BYTE *)(v27 + 16) = v29;
  sub_1006EC948(v30, v31, v32);
  return a1;
}

uint64_t sub_1006ECFF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006ED004);
}

uint64_t sub_1006ED004(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011A1440);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 40)], a2, v8);
  }
}

uint64_t sub_1006ED084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006ED090);
}

char *sub_1006ED090(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_100007E8C(&qword_1011A1440);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 40)], a2, a2, v7);
  }
  return result;
}

void sub_1006ED108(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[10];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = &unk_100ECBB30;
  v4[2] = &unk_100ECBB30;
  v4[3] = &unk_100ECBB30;
  v4[4] = &unk_100ECBB30;
  v4[5] = &unk_100ECBB08;
  sub_10013D11C(319);
  if (v3 <= 0x3F)
  {
    v4[6] = *(_QWORD *)(v2 - 8) + 64;
    v4[7] = &unk_100ECBB48;
    v4[8] = &unk_100ECBAE0;
    v4[9] = &unk_100ECBB60;
    swift_initStructMetadata(a1, 256, 10, v4, a1 + 16);
  }
}

uint64_t sub_1006ED1B4(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t *v49;
  uint64_t v50;
  unint64_t v51;
  void *v52;
  id v53;
  uint64_t v55;
  unsigned int (*v56)(const void *, uint64_t, uint64_t);
  int *v57;
  void *__dst;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
  }
  else
  {
    v7 = a1;
    v8 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = v8;
    v9 = a2[4];
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = v9;
    v10 = a2[6];
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = v10;
    v11 = a2[8];
    *(_QWORD *)(a1 + 56) = a2[7];
    *(_QWORD *)(a1 + 64) = v11;
    *(_BYTE *)(a1 + 72) = *((_BYTE *)a2 + 72);
    v12 = type metadata accessor for SharePlayProxCard.ViewModel(0);
    v13 = *(int *)(v12 + 40);
    v57 = (int *)v12;
    __dst = (void *)(v7 + v13);
    v14 = (char *)a2 + v13;
    v15 = type metadata accessor for Artwork(0);
    v55 = *(_QWORD *)(v15 - 8);
    v56 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v55 + 48);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v56(v14, 1, v15))
    {
      v16 = sub_100007E8C(&qword_1011A1440);
      memcpy(__dst, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v55 + 16))(__dst, v14, v15);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v55 + 56))(__dst, 0, 1, v15);
    }
    v17 = v57[11];
    v18 = *(void **)((char *)a2 + v17);
    *(_QWORD *)(v7 + v17) = v18;
    v19 = v57[12];
    v20 = (_QWORD *)(v7 + v19);
    v21 = (uint64_t *)((char *)a2 + v19);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = v57[13];
    v24 = v7 + v23;
    v25 = (uint64_t)a2 + v23;
    v26 = *(_QWORD *)v25;
    v27 = *(_QWORD *)(v25 + 8);
    v28 = *(_BYTE *)(v25 + 16);
    v29 = v18;
    swift_bridgeObjectRetain();
    sub_1006EC874(v26, v27, v28);
    *(_QWORD *)v24 = v26;
    *(_QWORD *)(v24 + 8) = v27;
    *(_BYTE *)(v24 + 16) = v28;
    v30 = a3[5];
    v31 = a3[6];
    v32 = (_QWORD *)(v7 + v30);
    v33 = (uint64_t *)((char *)a2 + v30);
    v34 = v33[1];
    *v32 = *v33;
    v32[1] = v34;
    v35 = (_QWORD *)(v7 + v31);
    v36 = (uint64_t)a2 + v31;
    v37 = *(uint64_t *)((char *)a2 + v31);
    swift_retain();
    if (v37)
    {
      v38 = *(_QWORD *)(v36 + 8);
      *v35 = v37;
      v35[1] = v38;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v35 = *(_OWORD *)v36;
    }
    v39 = a3[7];
    v40 = a3[8];
    v41 = v7 + v39;
    v42 = (uint64_t)a2 + v39;
    *(_BYTE *)v41 = *(_BYTE *)v42;
    *(_QWORD *)(v41 + 8) = *(_QWORD *)(v42 + 8);
    v43 = v7 + v40;
    v44 = (uint64_t)a2 + v40;
    *(_BYTE *)v43 = *(_BYTE *)v44;
    *(_QWORD *)(v43 + 8) = *(_QWORD *)(v44 + 8);
    v45 = a3[9];
    v46 = a3[10];
    v47 = v7 + v45;
    v48 = (uint64_t)a2 + v45;
    *(_BYTE *)v47 = *(_BYTE *)v48;
    *(_QWORD *)(v47 + 8) = *(_QWORD *)(v48 + 8);
    v49 = (unint64_t *)(v7 + v46);
    v50 = (uint64_t)a2 + v46;
    v51 = *(uint64_t *)((char *)a2 + v46);
    swift_retain();
    swift_retain();
    swift_retain();
    if (v51 >= 3)
    {
      v52 = *(void **)(v50 + 8);
      *v49 = v51;
      v49[1] = (unint64_t)v52;
      swift_bridgeObjectRetain();
      v53 = v52;
    }
    else
    {
      *(_OWORD *)v49 = *(_OWORD *)v50;
    }
    v49[2] = *(_QWORD *)(v50 + 16);
  }
  swift_retain();
  return v7;
}

double sub_1006ED468(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double result;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = (int *)type metadata accessor for SharePlayProxCard.ViewModel(0);
  v5 = a1 + v4[10];
  v6 = type metadata accessor for Artwork(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);

  swift_bridgeObjectRelease();
  sub_1006EC948(*(_QWORD *)(a1 + v4[13]), *(_QWORD *)(a1 + v4[13] + 8), *(_BYTE *)(a1 + v4[13] + 16));
  swift_release();
  if (*(_QWORD *)(a1 + *(int *)(a2 + 24)))
    swift_release();
  swift_release();
  swift_release();
  swift_release();
  v8 = a1 + *(int *)(a2 + 40);
  if (*(_QWORD *)v8 >= 3uLL)
  {
    swift_bridgeObjectRelease();

  }
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_1006ED5B8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t *v46;
  uint64_t v47;
  unint64_t v48;
  void *v49;
  id v50;
  uint64_t v52;
  unsigned int (*v53)(const void *, uint64_t, uint64_t);
  void *__dst;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  v8 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v9 = (int *)type metadata accessor for SharePlayProxCard.ViewModel(0);
  v10 = v9[10];
  __dst = (void *)(a1 + v10);
  v11 = (const void *)(a2 + v10);
  v12 = type metadata accessor for Artwork(0);
  v52 = *(_QWORD *)(v12 - 8);
  v53 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v52 + 48);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v53(v11, 1, v12))
  {
    v13 = sub_100007E8C(&qword_1011A1440);
    memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v52 + 16))(__dst, v11, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v52 + 56))(__dst, 0, 1, v12);
  }
  v14 = v9[11];
  v15 = *(void **)(a2 + v14);
  *(_QWORD *)(a1 + v14) = v15;
  v16 = v9[12];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = v9[13];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = *(_QWORD *)v22;
  v24 = *(_QWORD *)(v22 + 8);
  v25 = *(_BYTE *)(v22 + 16);
  v26 = v15;
  swift_bridgeObjectRetain();
  sub_1006EC874(v23, v24, v25);
  *(_QWORD *)v21 = v23;
  *(_QWORD *)(v21 + 8) = v24;
  *(_BYTE *)(v21 + 16) = v25;
  v27 = a3[5];
  v28 = a3[6];
  v29 = (_QWORD *)(a1 + v27);
  v30 = (_QWORD *)(a2 + v27);
  v31 = v30[1];
  *v29 = *v30;
  v29[1] = v31;
  v32 = (_QWORD *)(a1 + v28);
  v33 = a2 + v28;
  v34 = *(_QWORD *)(a2 + v28);
  swift_retain();
  if (v34)
  {
    v35 = *(_QWORD *)(v33 + 8);
    *v32 = v34;
    v32[1] = v35;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v32 = *(_OWORD *)v33;
  }
  v36 = a3[7];
  v37 = a3[8];
  v38 = a1 + v36;
  v39 = a2 + v36;
  *(_BYTE *)v38 = *(_BYTE *)v39;
  *(_QWORD *)(v38 + 8) = *(_QWORD *)(v39 + 8);
  v40 = a1 + v37;
  v41 = a2 + v37;
  *(_BYTE *)v40 = *(_BYTE *)v41;
  *(_QWORD *)(v40 + 8) = *(_QWORD *)(v41 + 8);
  v42 = a3[9];
  v43 = a3[10];
  v44 = a1 + v42;
  v45 = a2 + v42;
  *(_BYTE *)v44 = *(_BYTE *)v45;
  *(_QWORD *)(v44 + 8) = *(_QWORD *)(v45 + 8);
  v46 = (unint64_t *)(a1 + v43);
  v47 = a2 + v43;
  v48 = *(_QWORD *)(a2 + v43);
  swift_retain();
  swift_retain();
  swift_retain();
  if (v48 >= 3)
  {
    v49 = *(void **)(v47 + 8);
    *v46 = v48;
    v46[1] = (unint64_t)v49;
    swift_bridgeObjectRetain();
    v50 = v49;
  }
  else
  {
    *(_OWORD *)v46 = *(_OWORD *)v47;
  }
  v46[2] = *(_QWORD *)(v47 + 16);
  swift_retain();
  return a1;
}

uint64_t sub_1006ED84C(uint64_t a1, uint64_t a2, int *a3)
{
  int *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t *v52;
  uint64_t v53;
  unint64_t v54;
  void *v55;
  id v56;
  void *v57;
  void *v58;
  id v59;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v6 = (int *)type metadata accessor for SharePlayProxCard.ViewModel(0);
  v7 = v6[10];
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = type metadata accessor for Artwork(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    v15 = sub_100007E8C(&qword_1011A1440);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
LABEL_7:
  v16 = v6[11];
  v17 = *(void **)(a1 + v16);
  v18 = *(void **)(a2 + v16);
  *(_QWORD *)(a1 + v16) = v18;
  v19 = v18;

  v20 = v6[12];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (_QWORD *)(a2 + v20);
  *v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23 = v6[13];
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = *(_QWORD *)v25;
  v27 = *(_QWORD *)(v25 + 8);
  v28 = *(_BYTE *)(v25 + 16);
  sub_1006EC874(*(_QWORD *)v25, v27, v28);
  v29 = *(_QWORD *)v24;
  v30 = *(_QWORD *)(v24 + 8);
  v31 = *(_BYTE *)(v24 + 16);
  *(_QWORD *)v24 = v26;
  *(_QWORD *)(v24 + 8) = v27;
  *(_BYTE *)(v24 + 16) = v28;
  sub_1006EC948(v29, v30, v31);
  v32 = a3[5];
  v33 = (_QWORD *)(a1 + v32);
  v34 = (_QWORD *)(a2 + v32);
  *v33 = *v34;
  v33[1] = v34[1];
  swift_retain();
  swift_release();
  v35 = a3[6];
  v36 = (_QWORD *)(a1 + v35);
  v37 = a2 + v35;
  v38 = *(_QWORD *)(a1 + v35);
  v39 = *(_QWORD *)(a2 + v35);
  if (v38)
  {
    if (v39)
    {
      v40 = *(_QWORD *)(v37 + 8);
      *v36 = v39;
      v36[1] = v40;
      swift_retain();
      swift_release();
      goto LABEL_14;
    }
    swift_release();
  }
  else if (v39)
  {
    v41 = *(_QWORD *)(v37 + 8);
    *v36 = v39;
    v36[1] = v41;
    swift_retain();
    goto LABEL_14;
  }
  *(_OWORD *)v36 = *(_OWORD *)v37;
LABEL_14:
  v42 = a3[7];
  v43 = a1 + v42;
  v44 = a2 + v42;
  *(_BYTE *)v43 = *(_BYTE *)v44;
  *(_QWORD *)(v43 + 8) = *(_QWORD *)(v44 + 8);
  swift_retain();
  swift_release();
  v45 = a3[8];
  v46 = a1 + v45;
  v47 = a2 + v45;
  *(_BYTE *)v46 = *(_BYTE *)v47;
  *(_QWORD *)(v46 + 8) = *(_QWORD *)(v47 + 8);
  swift_retain();
  swift_release();
  v48 = a3[9];
  v49 = a1 + v48;
  v50 = a2 + v48;
  *(_BYTE *)v49 = *(_BYTE *)v50;
  *(_QWORD *)(v49 + 8) = *(_QWORD *)(v50 + 8);
  swift_retain();
  swift_release();
  v51 = a3[10];
  v52 = (unint64_t *)(a1 + v51);
  v53 = a2 + v51;
  v54 = *(_QWORD *)(a2 + v51);
  if (*(_QWORD *)(a1 + v51) >= 3uLL)
  {
    if (v54 >= 3)
    {
      *v52 = v54;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v57 = (void *)v52[1];
      v58 = *(void **)(v53 + 8);
      v52[1] = (unint64_t)v58;
      v59 = v58;

      goto LABEL_21;
    }
    sub_10004FF60(a1 + v51, &qword_1011C4D00);
    goto LABEL_19;
  }
  if (v54 < 3)
  {
LABEL_19:
    *(_OWORD *)v52 = *(_OWORD *)v53;
    goto LABEL_21;
  }
  *v52 = v54;
  v55 = *(void **)(v53 + 8);
  v52[1] = (unint64_t)v55;
  swift_bridgeObjectRetain();
  v56 = v55;
LABEL_21:
  v52[2] = *(_QWORD *)(v53 + 16);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1006EDC2C(uint64_t a1, uint64_t a2, int *a3)
{
  int *v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v6 = (int *)type metadata accessor for SharePlayProxCard.ViewModel(0);
  v7 = v6[10];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for Artwork(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_100007E8C(&qword_1011A1440);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(_QWORD *)(a1 + v6[11]) = *(_QWORD *)(a2 + v6[11]);
  *(_OWORD *)(a1 + v6[12]) = *(_OWORD *)(a2 + v6[12]);
  v13 = v6[13];
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_OWORD *)v14 = *(_OWORD *)v15;
  v16 = a3[5];
  v17 = a3[6];
  v18 = *(_OWORD *)(a2 + v16);
  *(_BYTE *)(v14 + 16) = *(_BYTE *)(v15 + 16);
  *(_OWORD *)(a1 + v16) = v18;
  v19 = (_QWORD *)(a1 + v17);
  v20 = a2 + v17;
  v21 = *(_QWORD *)(a2 + v17);
  if (v21)
  {
    v22 = *(_QWORD *)(v20 + 8);
    *v19 = v21;
    v19[1] = v22;
  }
  else
  {
    *(_OWORD *)v19 = *(_OWORD *)v20;
  }
  v23 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v23) = *(_OWORD *)(a2 + v23);
  v24 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  v25 = a1 + v24;
  v26 = a2 + v24;
  *(_OWORD *)v25 = *(_OWORD *)v26;
  *(_QWORD *)(v25 + 16) = *(_QWORD *)(v26 + 16);
  return a1;
}

uint64_t sub_1006EDDC8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  void *v58;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v10 = (int *)type metadata accessor for SharePlayProxCard.ViewModel(0);
  v11 = v10[10];
  v12 = (void *)(a1 + v11);
  v13 = (void *)(a2 + v11);
  v14 = type metadata accessor for Artwork(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
LABEL_6:
    v19 = sub_100007E8C(&qword_1011A1440);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 40))(v12, v13, v14);
LABEL_7:
  v20 = v10[11];
  v21 = *(void **)(a1 + v20);
  *(_QWORD *)(a1 + v20) = *(_QWORD *)(a2 + v20);

  v22 = v10[12];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (uint64_t *)(a2 + v22);
  v26 = *v24;
  v25 = v24[1];
  *v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  v27 = v10[13];
  v28 = a1 + v27;
  v29 = a2 + v27;
  v30 = *(_BYTE *)(v29 + 16);
  v31 = *(_QWORD *)v28;
  v32 = *(_QWORD *)(v28 + 8);
  v33 = *(_BYTE *)(v28 + 16);
  *(_OWORD *)v28 = *(_OWORD *)v29;
  *(_BYTE *)(v28 + 16) = v30;
  sub_1006EC948(v31, v32, v33);
  v34 = a3[5];
  v35 = (_QWORD *)(a1 + v34);
  v36 = (uint64_t *)(a2 + v34);
  v38 = *v36;
  v37 = v36[1];
  *v35 = v38;
  v35[1] = v37;
  swift_release();
  v39 = a3[6];
  v40 = (_QWORD *)(a1 + v39);
  v41 = a2 + v39;
  v42 = *(_QWORD *)(a1 + v39);
  v43 = *(_QWORD *)(a2 + v39);
  if (v42)
  {
    if (v43)
    {
      v44 = *(_QWORD *)(v41 + 8);
      *v40 = v43;
      v40[1] = v44;
      swift_release();
      goto LABEL_14;
    }
    swift_release();
  }
  else if (v43)
  {
    v45 = *(_QWORD *)(v41 + 8);
    *v40 = v43;
    v40[1] = v45;
    goto LABEL_14;
  }
  *(_OWORD *)v40 = *(_OWORD *)v41;
LABEL_14:
  v46 = a3[7];
  v47 = a1 + v46;
  v48 = a2 + v46;
  *(_BYTE *)v47 = *(_BYTE *)v48;
  *(_QWORD *)(v47 + 8) = *(_QWORD *)(v48 + 8);
  swift_release();
  v49 = a3[8];
  v50 = a1 + v49;
  v51 = a2 + v49;
  *(_BYTE *)v50 = *(_BYTE *)v51;
  *(_QWORD *)(v50 + 8) = *(_QWORD *)(v51 + 8);
  swift_release();
  v52 = a3[9];
  v53 = a1 + v52;
  v54 = a2 + v52;
  *(_BYTE *)v53 = *(_BYTE *)v54;
  *(_QWORD *)(v53 + 8) = *(_QWORD *)(v54 + 8);
  swift_release();
  v55 = a3[10];
  v56 = (_QWORD *)(a1 + v55);
  v57 = (_QWORD *)(a2 + v55);
  if (*(_QWORD *)(a1 + v55) >= 3uLL)
  {
    if (*v57 >= 3uLL)
    {
      *v56 = *v57;
      swift_bridgeObjectRelease();
      v58 = (void *)v56[1];
      v56[1] = v57[1];

      goto LABEL_19;
    }
    sub_10004FF60((uint64_t)v56, &qword_1011C4D00);
  }
  *(_OWORD *)v56 = *(_OWORD *)v57;
LABEL_19:
  v56[2] = v57[2];
  swift_release();
  return a1;
}

uint64_t sub_1006EE0D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006EE0E0);
}

uint64_t sub_1006EE0E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for SharePlayProxCard.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1006EE160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006EE16C);
}

uint64_t sub_1006EE16C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for SharePlayProxCard.ViewModel(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for SharePlayProxCard(uint64_t a1)
{
  return sub_100055934(a1, qword_1011C4D60, (uint64_t)&nominal type descriptor for SharePlayProxCard);
}

uint64_t sub_1006EE1FC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[7];

  result = type metadata accessor for SharePlayProxCard.ViewModel(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100ECBB30;
    v4[2] = &unk_100ECBAE0;
    v4[3] = &unk_100ECBAE0;
    v4[4] = &unk_100ECBAE0;
    v4[5] = &unk_100ECBAE0;
    v4[6] = &unk_100ECBB98;
    swift_initStructMetadata(a1, 256, 7, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1006EE288(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAAB70, 1);
}

uint64_t sub_1006EE298()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[2];

  v18 = sub_100007E8C((uint64_t *)&unk_1011A3380);
  v1 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_1011C5180);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C((uint64_t *)&unk_1011A3370);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v0 + OBJC_IVAR____TtCV5Music17SharePlayProxCard9CardState__name;
  v19[0] = 0;
  v19[1] = 0xE000000000000000;
  Published.init(initialValue:)(v19, &type metadata for String);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v12, v11, v8);
  v13 = v0 + OBJC_IVAR____TtCV5Music17SharePlayProxCard9CardState__image;
  v19[0] = 0;
  v14 = sub_100007E8C(&qword_10119E588);
  Published.init(initialValue:)(v19, v14);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v13, v7, v4);
  v15 = v0 + OBJC_IVAR____TtCV5Music17SharePlayProxCard9CardState__isLoading;
  LOBYTE(v19[0]) = 0;
  Published.init(initialValue:)(v19, &type metadata for Bool);
  (*(void (**)(uint64_t, char *, uint64_t))(v1 + 32))(v15, v3, v18);
  *(_BYTE *)(v0 + OBJC_IVAR____TtCV5Music17SharePlayProxCard9CardState_removedImage) = 0;
  return v0;
}

uint64_t sub_1006EE450@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for SharePlayProxCard.CardState(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

uint64_t sub_1006EE48C()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  uint64_t countAndFlagsBits;
  unint64_t v6;
  uint64_t v8;

  type metadata accessor for SharePlayProxCard(0);
  KeyPath = swift_getKeyPath(&unk_100ECBC38);
  v2 = swift_getKeyPath(&unk_100ECBC60);
  swift_retain();
  static Published.subscript.getter(&v8, v3, KeyPath, v2);
  swift_release();
  swift_release();
  swift_release();
  v4 = String.trim()();
  countAndFlagsBits = v4._countAndFlagsBits;
  swift_bridgeObjectRelease();
  v6 = ((unint64_t)v4._object >> 56) & 0xF;
  if (((uint64_t)v4._object & 0x2000000000000000) == 0)
    v6 = v4._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  if (!v6)
  {
    swift_bridgeObjectRelease();
    countAndFlagsBits = *(_QWORD *)(v0 + *(int *)(type metadata accessor for SharePlayProxCard.ViewModel(0) + 48));
    swift_bridgeObjectRetain();
  }
  return countAndFlagsBits;
}

void sub_1006EE574(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = type metadata accessor for SharePlayProxCard(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011A1440);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(*(_QWORD *)(v1 + *(int *)(v3 + 20) + 8)
                + OBJC_IVAR____TtCV5Music17SharePlayProxCard9CardState_removedImage) == 1)
  {
    v9 = sub_1006EE48C();
    static Artwork.monogramArtwork(for:layoutDirection:)(v9, v10, 0, 1, a1);
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = type metadata accessor for SharePlayProxCard.ViewModel(0);
    sub_10004A160(v1 + *(int *)(v11 + 40), (uint64_t)v8, &qword_1011A1440);
    sub_10005B704(v1, (uint64_t)v5, type metadata accessor for SharePlayProxCard);
    v12 = type metadata accessor for Artwork(0);
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12) == 1)
    {
      v14 = sub_1006EE48C();
      static Artwork.monogramArtwork(for:layoutDirection:)(v14, v15, 0, 1, a1);
      swift_bridgeObjectRelease();
      sub_10005B748((uint64_t)v5, type metadata accessor for SharePlayProxCard);
      sub_10004FF60((uint64_t)v8, &qword_1011A1440);
    }
    else
    {
      sub_10005B748((uint64_t)v5, type metadata accessor for SharePlayProxCard);
      (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(a1, v8, v12);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v12);
    }
  }
}

uint64_t sub_1006EE74C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  _BYTE *v37;
  uint64_t v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  _BYTE v52[12];
  int v53;
  uint64_t v54;
  _BYTE *v55;
  uint64_t v56;
  _BYTE *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE *v63;
  _BYTE *v64;
  uint64_t v65;
  char v66[16];
  uint64_t v67;
  char v68[16];
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unsigned __int8 v76;

  v2 = (uint64_t)v1;
  v65 = a1;
  v3 = type metadata accessor for Locale(0);
  __chkstk_darwin(v3);
  v64 = &v52[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v63 = &v52[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v56 = sub_100007E8C(&qword_1011C4DB0);
  __chkstk_darwin(v56);
  v8 = &v52[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_100007E8C(&qword_1011C4DB8);
  v61 = *(_QWORD *)(v9 - 8);
  v62 = v9;
  __chkstk_darwin(v9);
  v55 = &v52[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v59 = sub_100007E8C(&qword_1011C4DC0);
  __chkstk_darwin(v59);
  v57 = &v52[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)v8 = static HorizontalAlignment.center.getter(v12);
  *((_QWORD *)v8 + 1) = 0;
  v8[16] = 0;
  v13 = sub_100007E8C(&qword_1011C4DC8);
  sub_1006EEBEC(v1, (uint64_t)&v8[*(int *)(v13 + 44)]);
  v54 = LocalizedStringKey.init(stringLiteral:)(0, 0xE000000000000000);
  v15 = v14;
  v53 = v16;
  v18 = v17;
  v60 = type metadata accessor for SharePlayProxCard(0);
  v19 = (char *)v1 + *(int *)(v60 + 28);
  v20 = *v19;
  v21 = *((_QWORD *)v19 + 1);
  LOBYTE(v72) = v20;
  v73 = v21;
  v58 = sub_100007E8C(&qword_1011C4DD0);
  State.projectedValue.getter(&v74, v58);
  v23 = v74;
  v22 = v75;
  v24 = v76;
  v69 = v2;
  v25 = sub_100007E8C(&qword_1011C4DD8);
  v26 = sub_100049F28(&qword_1011C4DE0, &qword_1011C4DB0, (uint64_t)&protocol conformance descriptor for VStack<A>);
  v27 = sub_100049F28(&qword_1011C4DE8, &qword_1011C4DD8, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  v28 = v55;
  View.confirmationDialog<A>(_:isPresented:titleVisibility:actions:)(v54, v15, v53 & 1, v18, v23, v22, v24, 2, sub_1006F4A9C, v68, v56, v25, v26, v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v29 = sub_10004FF60((uint64_t)v8, &qword_1011C4DB0);
  v30 = static Alignment.center.getter(v29);
  v32 = v31;
  v33 = v59;
  v34 = (uint64_t)v57;
  v35 = (uint64_t)&v57[*(int *)(v59 + 36)];
  sub_1006F4190(v2, v35);
  v36 = (uint64_t *)(v35 + *(int *)(sub_100007E8C(&qword_1011C4DF0) + 36));
  *v36 = v30;
  v36[1] = v32;
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v61 + 32))(v34, v28, v62);
  v37 = v63;
  v38 = String.LocalizationValue.init(stringLiteral:)(0x6D614E2074696445, 0xE900000000000065);
  v39 = v64;
  static Locale.current.getter(v38);
  v72 = String.init(localized:table:bundle:locale:comment:)(v37, 0, 0, 0, v39, 0, 0, 256);
  v73 = v40;
  v41 = v2 + *(int *)(v60 + 36);
  v42 = *(_BYTE *)v41;
  v43 = *(_QWORD *)(v41 + 8);
  v70 = v42;
  v71 = v43;
  State.projectedValue.getter(&v74, v58);
  v44 = v74;
  v45 = v75;
  v46 = v76;
  v67 = v2;
  v47 = sub_100007E8C(&qword_1011C4DF8);
  v48 = sub_1006F4AAC();
  v49 = sub_100055B68();
  v50 = sub_100049F28(&qword_1011C4E18, &qword_1011C4DF8, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  View.alert<A, B>(_:isPresented:actions:)(&v72, v44, v45, v46, sub_1006F4AA4, v66, v33, &type metadata for String, v47, v48, v49, v50);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return sub_10004FF60(v34, &qword_1011C4DC0);
}

uint64_t sub_1006EEBEC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __n128 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t KeyPath;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  __n128 v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char v124;
  uint64_t v125;
  uint64_t v126;
  __n128 v127;
  uint64_t v128;
  int v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  double v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  _QWORD *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  _QWORD *v159;
  __n128 v160;
  uint64_t v161;
  int v162;
  uint64_t v163;
  char v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  double v169;
  int v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char v180;
  char v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  double v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  double v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  double v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  _QWORD *v238;
  id v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  _OWORD *v247;
  __int128 v248;
  __int128 v249;
  __int128 v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  _OWORD *v255;
  char *v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  double v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  unint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  __n128 v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  unint64_t v294;
  uint64_t v295;
  unint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  char *v301;
  char *v302;
  char *v303;
  char *v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  void (*v308)(uint64_t, _QWORD, uint64_t, uint64_t);
  int v309;
  uint64_t v310;
  uint64_t v311;
  char *v312;
  char *v313;
  uint64_t v314;
  uint64_t v315;
  __n128 v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  char v322;
  char v323;
  uint64_t v324;
  uint64_t v325;
  __n128 v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  __n128 v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  double v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  char *v339;
  uint64_t *v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  _OWORD *v344;
  __int128 v345;
  __int128 v346;
  __int128 v347;
  __int128 v348;
  __int128 v349;
  __int128 v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  _QWORD *v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  char v364;
  char v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  _QWORD *v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  _QWORD *v379;
  uint64_t v380;
  uint64_t v381;
  char *v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t *v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  char v398;
  double v399;
  double v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  unsigned __int8 v411;
  char v412;
  uint64_t v413;
  int *v414;
  _OWORD *v415;
  double v416;
  double v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  __int128 v421;
  __int128 v422;
  __int128 v423;
  __int128 v424;
  __int128 v425;
  __int128 v426;
  __int128 v427;
  __int128 v428;
  __int128 v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  int v441;
  uint64_t v442;
  uint64_t v443;
  _QWORD *v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  char *v448;
  char *v449;
  uint64_t v450;
  char *v451;
  char *v452;
  char *v453;
  uint64_t v454;
  char *v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  char *v460;
  char *v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t *v464;
  char *v465;
  uint64_t v466;
  char *v467;
  uint64_t v468;
  uint64_t v469;
  char *v470;
  uint64_t v471;
  uint64_t *v472;
  uint64_t v473;
  char *v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t *v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  char *v493;
  uint64_t v494;
  char *v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  char *v503;
  char *v504;
  uint64_t v505;
  uint64_t v506;
  uint64_t v507;
  int v508;
  char *v509;
  uint64_t v510;
  uint64_t v511;
  uint64_t v512;
  double v513;
  int v514;
  uint64_t v515;
  uint64_t v516;
  int v517;
  double v518;
  uint64_t v519;
  uint64_t v520;
  uint64_t v521;
  double v522;
  uint64_t v523;
  uint64_t v524;
  char *v525;
  uint64_t v526;
  uint64_t v527;
  char *v528;
  uint64_t v529;
  uint64_t v530;
  uint64_t v531;
  uint64_t v532;
  char *v533;
  char *v534;
  uint64_t v535;
  void (*v536)(char *, uint64_t, __n128);
  unsigned int v537;
  void (*v538)(char *);
  unint64_t v539;
  uint64_t v540;
  uint64_t v541;
  uint64_t v542;
  int v543;
  int v544;
  int v545;
  uint64_t v546;
  uint64_t v547;
  uint64_t v548;
  double v549;
  int v550;
  int v551;
  int v552;
  uint64_t v553;
  char *v554;
  char *v555;
  uint64_t v556;
  char *v557;
  uint64_t v558;
  uint64_t v559;
  uint64_t v560;
  uint64_t v561;
  uint64_t v562;
  uint64_t v563;
  uint64_t v564;
  uint64_t v565;
  _QWORD *v566;
  __int128 v567;
  __int128 v568;
  __int128 v569;
  __int128 v570;
  __int128 v571;
  __int128 v572;
  __int128 v573;
  __int128 v574;
  __int128 v575;
  __int128 v576;
  __int128 v577;
  __int128 v578;
  __int128 v579;
  __int128 v580;
  __int128 v581;
  __int128 v582;
  __int128 v583;
  __int128 v584;
  __int128 v585;
  __int128 v586;
  __int128 v587;
  _OWORD v588[2];
  _OWORD v589[9];
  char v590;
  _DWORD v591[2];
  _DWORD v592[2];
  _DWORD v593[2];
  _DWORD v594[2];
  _DWORD v595[2];
  _DWORD v596[2];
  _DWORD v597[2];
  __int128 v598;
  __int128 v599;
  __int128 v600;
  __int128 v601;
  __int128 v602;
  __int128 v603;
  __int128 v604;
  __int128 v605;
  __int128 v606;
  __int128 v607;
  _OWORD v608[4];
  _OWORD v609[7];
  unsigned __int8 v610;
  _BYTE v611[7];
  _BYTE v612[7];
  unsigned __int8 v613;
  _BYTE v614[7];
  _BYTE v615[7];
  _BYTE v616[7];
  unsigned __int8 v617;
  unsigned __int8 v618;
  _DWORD v619[2];
  _DWORD v620[2];
  _DWORD v621[2];
  _DWORD v622[2];
  _DWORD v623[6];

  v566 = a1;
  v535 = a2;
  v3 = type metadata accessor for Capsule(0);
  __chkstk_darwin(v3);
  v534 = (char *)&v446 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v529 = sub_100007E8C(&qword_1011C4E60);
  v527 = *(_QWORD *)(v529 - 8);
  __chkstk_darwin(v529);
  v525 = (char *)&v446 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v523 = sub_100007E8C(&qword_1011C4E68);
  __chkstk_darwin(v523);
  v528 = (char *)&v446 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v524 = sub_100007E8C(&qword_1011C4E70);
  __chkstk_darwin(v524);
  v530 = (uint64_t)&v446 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v526 = sub_100007E8C(&qword_1011C4E78);
  __chkstk_darwin(v526);
  v533 = (char *)&v446 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v532 = sub_100007E8C(&qword_1011C4E80);
  __chkstk_darwin(v532);
  v563 = (uint64_t)&v446 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v531 = (uint64_t)&v446 - v11;
  __chkstk_darwin(v12);
  v556 = (uint64_t)&v446 - v13;
  v458 = sub_100007E8C(&qword_1011C4E88);
  __chkstk_darwin(v458);
  v464 = (uint64_t *)((char *)&v446 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = type metadata accessor for OpenURLAction(0);
  v462 = *(_QWORD *)(v15 - 8);
  v463 = v15;
  __chkstk_darwin(v15);
  v461 = (char *)&v446 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for AttributedString(0);
  v446 = *(_QWORD *)(v17 - 8);
  v447 = v17;
  __chkstk_darwin(v17);
  v448 = (char *)&v446 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100007E8C((uint64_t *)&unk_1011C4E90);
  v498 = *(_QWORD *)(v19 - 8);
  v499 = v19;
  __chkstk_darwin(v19);
  v460 = (char *)&v446 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin(v21);
  v459 = (uint64_t)&v446 - v23;
  v456 = type metadata accessor for AttributedString.MarkdownParsingOptions.FailurePolicy(0, v22);
  v454 = *(_QWORD *)(v456 - 8);
  v24 = __chkstk_darwin(v456);
  v455 = (char *)&v446 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v497 = type metadata accessor for AttributedString.MarkdownParsingOptions.InterpretedSyntax(0, v24);
  v450 = *(_QWORD *)(v497 - 8);
  v26 = __chkstk_darwin(v497);
  v452 = (char *)&v446 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for AttributedString.MarkdownParsingOptions(0, v26);
  __chkstk_darwin(v28);
  v451 = (char *)&v446 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v30);
  v449 = (char *)&v446 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_100007E8C(&qword_1011C4EA0);
  __chkstk_darwin(v32);
  v457 = (uint64_t)&v446 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v453 = (char *)&v446 - v35;
  __chkstk_darwin(v36);
  v500 = (uint64_t)&v446 - v37;
  v38 = type metadata accessor for SharePlayProxCard(0);
  v39 = *(_QWORD *)(v38 - 8);
  v505 = v38;
  v506 = v39;
  __chkstk_darwin(v38);
  v509 = (char *)&v446 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41);
  v504 = (char *)&v446 - v42;
  __chkstk_darwin(v43);
  v503 = (char *)&v446 - v44;
  v507 = v45;
  __chkstk_darwin(v46);
  v496 = (uint64_t)&v446 - v47;
  v48 = sub_100007E8C(&qword_1011C4EA8);
  __chkstk_darwin(v48);
  v467 = (char *)&v446 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v50);
  v466 = (uint64_t)&v446 - v51;
  v494 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v494);
  v495 = (char *)&v446 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_100007E8C(&qword_1011C4EB0);
  __chkstk_darwin(v53);
  v485 = (uint64_t *)((char *)&v446 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0));
  v484 = sub_100007E8C(&qword_1011C4EB8);
  __chkstk_darwin(v484);
  v487 = (uint64_t)&v446 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  v486 = sub_100007E8C((uint64_t *)&unk_1011C4EC0);
  __chkstk_darwin(v486);
  v489 = (uint64_t)&v446 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_100007E8C(&qword_1011A2C08);
  __chkstk_darwin(v57);
  v492 = (uint64_t)&v446 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  v488 = sub_100007E8C(&qword_1011C4ED0);
  __chkstk_darwin(v488);
  v493 = (char *)&v446 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  v491 = sub_100007E8C(&qword_1011C4ED8);
  __chkstk_darwin(v491);
  v465 = (char *)&v446 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v61);
  v490 = (uint64_t)&v446 - v62;
  __chkstk_darwin(v63);
  v501 = (uint64_t)&v446 - v64;
  v469 = sub_100007E8C((uint64_t *)&unk_1011C4EE0);
  __chkstk_darwin(v469);
  v472 = (uint64_t *)((char *)&v446 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0));
  v66 = sub_100007E8C((uint64_t *)&unk_1011A4380);
  __chkstk_darwin(v66);
  v470 = (char *)&v446 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  v468 = sub_100007E8C((uint64_t *)&unk_1011C4EF0);
  __chkstk_darwin(v468);
  v474 = (char *)&v446 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  v471 = sub_100007E8C(&qword_1011A4390);
  __chkstk_darwin(v471);
  v475 = (uint64_t)&v446 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  v473 = sub_100007E8C((uint64_t *)&unk_1011C4F00);
  __chkstk_darwin(v473);
  v477 = (uint64_t)&v446 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_100007E8C(&qword_1011A2C10);
  __chkstk_darwin(v71);
  v479 = (uint64_t)&v446 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
  v476 = sub_100007E8C(&qword_1011C4F10);
  __chkstk_darwin(v476);
  v481 = (uint64_t)&v446 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
  v478 = sub_100007E8C(&qword_1011C4F18);
  __chkstk_darwin(v478);
  v482 = (uint64_t)&v446 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0);
  v480 = sub_100007E8C(&qword_1011C4F20);
  __chkstk_darwin(v480);
  v502 = (uint64_t)&v446 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v76);
  v483 = (uint64_t)&v446 - v77;
  v78 = sub_100007E8C(&qword_1011C4F28);
  __chkstk_darwin(v78);
  v565 = (uint64_t)&v446 - ((v79 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = __chkstk_darwin(v80);
  v564 = (uint64_t)&v446 - v82;
  v558 = type metadata accessor for Font.Leading(0, v81);
  v562 = *(_QWORD *)(v558 - 8);
  __chkstk_darwin(v558);
  v557 = (char *)&v446 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = sub_100007E8C(&qword_1011C4F30);
  __chkstk_darwin(v84);
  v86 = (char *)&v446 - ((v85 + 15) & 0xFFFFFFFFFFFFFFF0);
  v561 = sub_100007E8C(&qword_1011C4F38);
  v87 = *(_QWORD *)(v561 - 8);
  __chkstk_darwin(v561);
  v89 = (char *)&v446 - ((v88 + 15) & 0xFFFFFFFFFFFFFFF0);
  v560 = sub_100007E8C(&qword_1011C4F40);
  __chkstk_darwin(v560);
  v91 = (char *)&v446 - ((v90 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v92);
  v94 = (char *)&v446 - v93;
  v95 = *a1;
  v96 = type metadata accessor for Font.Design(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v96 - 8) + 56))(v86, 1, 1, v96);
  swift_retain();
  v97 = static Font.system(size:weight:design:)(0, 1, v86, 58.0);
  sub_10004FF60((uint64_t)v86, &qword_1011C4F30);
  KeyPath = swift_getKeyPath(&unk_100ECBCC8);
  *(_QWORD *)&v576 = v95;
  *((_QWORD *)&v576 + 1) = KeyPath;
  *(_QWORD *)&v577 = v97;
  v99 = sub_100007E8C(&qword_1011AC700);
  v100 = sub_100318590();
  View.bold(_:)(1, v99, v100);
  swift_release();
  swift_release();
  swift_release();
  v102 = static Color.secondary.getter(v101);
  v103 = swift_getKeyPath(&unk_100ECBCF8);
  v104 = v561;
  (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v91, v89, v561);
  v105 = (uint64_t *)&v91[*(int *)(v560 + 36)];
  *v105 = v103;
  v105[1] = v102;
  (*(void (**)(char *, uint64_t))(v87 + 8))(v89, v104);
  v555 = v91;
  v554 = v94;
  sub_100065228((uint64_t)v91, (uint64_t)v94, &qword_1011C4F40);
  v106 = v566[2];
  *(_QWORD *)&v576 = v566[1];
  *((_QWORD *)&v576 + 1) = v106;
  v107 = sub_100055B68();
  v539 = v107;
  swift_bridgeObjectRetain();
  v108 = Text.init<A>(_:)(&v576, &type metadata for String, v107);
  v110 = v109;
  v112 = v111;
  v114 = v113 & 1;
  v115 = static Font.title.getter(v108);
  v537 = enum case for Font.Leading.tight(_:);
  v116 = v562;
  v538 = *(void (**)(char *))(v562 + 104);
  v117 = v557;
  v118 = v558;
  v538(v557);
  v119 = Font.leading(_:)(v117, v115);
  v120 = swift_release();
  v536 = *(void (**)(char *, uint64_t, __n128))(v116 + 8);
  v536(v117, v118, v120);
  v121 = Text.font(_:)(v119, v108, v110, v114, v112);
  v123 = v122;
  LOBYTE(v117) = v124;
  v126 = v125;
  swift_release();
  sub_100055BAC(v108, v110, v114);
  v127 = swift_bridgeObjectRelease();
  v553 = Text.bold()(v121, v123, v117 & 1, v126, v127);
  v561 = v128;
  LODWORD(v108) = v129;
  v562 = v130;
  sub_100055BAC(v121, v123, v117 & 1);
  swift_bridgeObjectRelease();
  v560 = swift_getKeyPath(&unk_100ECBD28);
  v551 = static Edge.Set.horizontal.getter(v560);
  v518 = EdgeInsets.init(_all:)(10.0);
  v132 = v131;
  v134 = v133;
  v136 = v135;
  v552 = static Edge.Set.top.getter(v137);
  v522 = EdgeInsets.init(_all:)(10.0);
  v521 = v138;
  v520 = v139;
  v519 = v140;
  v517 = v108;
  v617 = v108 & 1;
  v613 = 0;
  v610 = 0;
  v550 = static Edge.Set.bottom.getter(v141);
  v142 = EdgeInsets.init(_all:)(10.0);
  v548 = v143;
  v547 = v144;
  v546 = v145;
  v543 = v617;
  v623[0] = *(_DWORD *)v616;
  *(_DWORD *)((char *)v623 + 3) = *(_DWORD *)&v616[3];
  v622[0] = *(_DWORD *)v615;
  *(_DWORD *)((char *)v622 + 3) = *(_DWORD *)&v615[3];
  v621[0] = *(_DWORD *)v614;
  *(_DWORD *)((char *)v621 + 3) = *(_DWORD *)&v614[3];
  v544 = v613;
  *(_DWORD *)((char *)v620 + 3) = *(_DWORD *)&v612[3];
  v620[0] = *(_DWORD *)v612;
  v619[0] = *(_DWORD *)v611;
  *(_DWORD *)((char *)v619 + 3) = *(_DWORD *)&v611[3];
  v545 = v610;
  v618 = 0;
  v146 = v566;
  v147 = v566[4];
  *(_QWORD *)&v576 = v566[3];
  *((_QWORD *)&v576 + 1) = v147;
  swift_bridgeObjectRetain();
  v148 = Text.init<A>(_:)(&v576, &type metadata for String, v539);
  v150 = v149;
  v152 = v151;
  v154 = v153 & 1;
  v155 = static Font.body.getter(v148);
  v156 = v557;
  v157 = v558;
  ((void (*)(char *, _QWORD, uint64_t))v538)(v557, v537, v558);
  v158 = Font.leading(_:)(v156, v155);
  v159 = v146;
  v160 = swift_release();
  v536(v156, v157, v160);
  v516 = Text.font(_:)(v158, v148, v150, v154, v152);
  v515 = v161;
  v508 = v162;
  v542 = v163;
  swift_release();
  v164 = v154;
  v165 = v564;
  sub_100055BAC(v148, v150, v164);
  swift_bridgeObjectRelease();
  v166 = swift_getKeyPath(&unk_100ECBD28);
  v167 = static Color.secondary.getter(v166);
  v168 = swift_getKeyPath(&unk_100ECBCF8);
  LODWORD(v152) = static Edge.Set.horizontal.getter(v168);
  v169 = EdgeInsets.init(_all:)(10.0);
  v170 = *((unsigned __int8 *)v159 + 72);
  v559 = v166;
  v541 = v167;
  v540 = v168;
  v514 = v152;
  v513 = v169;
  v512 = v171;
  v511 = v172;
  v510 = v173;
  if (v170 != 1)
  {
    v287 = sub_100007E8C(&qword_1011C4F48);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v287 - 8) + 56))(v165, 1, 1, v287);
    v289 = v506;
    v288 = v507;
    v290 = (uint64_t)v504;
    v291 = (uint64_t)v503;
    goto LABEL_21;
  }
  v174 = v566[6];
  *(_QWORD *)&v576 = v566[5];
  *((_QWORD *)&v576 + 1) = v174;
  swift_bridgeObjectRetain();
  v175 = Text.init<A>(_:)(&v576, &type metadata for String, v539);
  v177 = v176;
  v179 = v178;
  v181 = v180 & 1;
  v182 = enum case for Text.Case.uppercase(_:);
  v183 = type metadata accessor for Text.Case(0);
  v184 = *(_QWORD *)(v183 - 8);
  v185 = (uint64_t)v470;
  (*(void (**)(char *, uint64_t, uint64_t))(v184 + 104))(v470, v182, v183);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v184 + 56))(v185, 0, 1, v183);
  v186 = swift_getKeyPath(&unk_100ECBDD0);
  v187 = v472;
  sub_10004A160(v185, (uint64_t)v472 + *(int *)(v469 + 28), (uint64_t *)&unk_1011A4380);
  *v187 = v186;
  v188 = (uint64_t)v474;
  sub_10004A160((uint64_t)v187, (uint64_t)&v474[*(int *)(v468 + 36)], (uint64_t *)&unk_1011C4EE0);
  *(_QWORD *)v188 = v175;
  *(_QWORD *)(v188 + 8) = v177;
  *(_BYTE *)(v188 + 16) = v181;
  *(_QWORD *)(v188 + 24) = v179;
  sub_100055BBC(v175, v177, v181);
  swift_bridgeObjectRetain();
  sub_10004FF60((uint64_t)v187, (uint64_t *)&unk_1011C4EE0);
  sub_10004FF60(v185, (uint64_t *)&unk_1011A4380);
  sub_100055BAC(v175, v177, v181);
  swift_bridgeObjectRelease();
  v190 = static Font.footnote.getter(v189);
  v191 = swift_getKeyPath(&unk_100ECBCC8);
  v192 = v475;
  sub_10004A160(v188, v475, (uint64_t *)&unk_1011C4EF0);
  v193 = (uint64_t *)(v192 + *(int *)(v471 + 36));
  *v193 = v191;
  v193[1] = v190;
  v194 = sub_10004FF60(v188, (uint64_t *)&unk_1011C4EF0);
  v195 = static Color.secondary.getter(v194);
  v196 = swift_getKeyPath(&unk_100ECBCF8);
  v197 = v477;
  sub_10004A160(v192, v477, &qword_1011A4390);
  v198 = (uint64_t *)(v197 + *(int *)(v473 + 36));
  *v198 = v196;
  v198[1] = v195;
  v199 = sub_10004FF60(v192, &qword_1011A4390);
  v200 = static Alignment.leading.getter(v199);
  v201 = v479;
  sub_10014BB94(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v479, 0.0, 1, 0.0, 1, v200, v202);
  v203 = sub_10004FF60(v197, (uint64_t *)&unk_1011C4F00);
  LOBYTE(v195) = static Edge.Set.horizontal.getter(v203);
  v204 = EdgeInsets.init(_all:)(12.0);
  v206 = v205;
  v208 = v207;
  v210 = v209;
  v211 = v481;
  sub_10004A160(v201, v481, &qword_1011A2C10);
  v212 = v211 + *(int *)(v476 + 36);
  *(_BYTE *)v212 = v195;
  *(double *)(v212 + 8) = v204;
  *(_QWORD *)(v212 + 16) = v206;
  *(_QWORD *)(v212 + 24) = v208;
  *(_QWORD *)(v212 + 32) = v210;
  *(_BYTE *)(v212 + 40) = 0;
  v213 = sub_10004FF60(v201, &qword_1011A2C10);
  LOBYTE(v195) = static Edge.Set.bottom.getter(v213);
  v214 = EdgeInsets.init(_all:)(6.0);
  v216 = v215;
  v218 = v217;
  v220 = v219;
  v221 = v482;
  sub_10004A160(v211, v482, &qword_1011C4F10);
  v222 = v221 + *(int *)(v478 + 36);
  *(_BYTE *)v222 = v195;
  *(double *)(v222 + 8) = v214;
  *(_QWORD *)(v222 + 16) = v216;
  *(_QWORD *)(v222 + 24) = v218;
  *(_QWORD *)(v222 + 32) = v220;
  *(_BYTE *)(v222 + 40) = 0;
  v223 = sub_10004FF60(v211, &qword_1011C4F10);
  LOBYTE(v195) = static Edge.Set.top.getter(v223);
  v224 = EdgeInsets.init(_all:)(36.0);
  v226 = v225;
  v228 = v227;
  v230 = v229;
  v231 = v502;
  sub_10004A160(v221, v502, &qword_1011C4F18);
  v232 = v231 + *(int *)(v480 + 36);
  *(_BYTE *)v232 = v195;
  *(double *)(v232 + 8) = v224;
  *(_QWORD *)(v232 + 16) = v226;
  *(_QWORD *)(v232 + 24) = v228;
  *(_QWORD *)(v232 + 32) = v230;
  *(_BYTE *)(v232 + 40) = 0;
  sub_10004FF60(v221, &qword_1011C4F18);
  v233 = v483;
  v234 = sub_100065228(v231, v483, &qword_1011C4F20);
  v235 = static VerticalAlignment.center.getter(v234);
  v236 = (uint64_t)v485;
  *v485 = v235;
  *(_QWORD *)(v236 + 8) = 0;
  *(_BYTE *)(v236 + 16) = 1;
  v237 = sub_100007E8C((uint64_t *)&unk_1011C4FB0);
  v238 = v566;
  sub_1006F1480((uint64_t)v566, v236 + *(int *)(v237 + 44));
  v239 = objc_msgSend((id)objc_opt_self(UIColor), "quaternarySystemFillColor");
  v240 = Color.init(_:)(v239);
  LOBYTE(v196) = static Edge.Set.all.getter(v240);
  v241 = v487;
  sub_10004A160(v236, v487, &qword_1011C4EB0);
  v242 = v241 + *(int *)(v484 + 36);
  *(_QWORD *)v242 = v240;
  *(_BYTE *)(v242 + 8) = v196;
  v243 = sub_10004FF60(v236, &qword_1011C4EB0);
  v244 = static Alignment.center.getter(v243);
  LOBYTE(v443) = 1;
  LOBYTE(v441) = 1;
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v609, 0, 1, 0, 1, 0, 1, 0x4052800000000000, 0, 0, v441, 0, v443, v244, v245);
  v246 = v489;
  sub_10004A160(v241, v489, &qword_1011C4EB8);
  v247 = (_OWORD *)(v246 + *(int *)(v486 + 36));
  v248 = v609[5];
  v247[4] = v609[4];
  v247[5] = v248;
  v247[6] = v609[6];
  v249 = v609[1];
  *v247 = v609[0];
  v247[1] = v249;
  v250 = v609[3];
  v247[2] = v609[2];
  v247[3] = v250;
  v251 = sub_10004FF60(v241, &qword_1011C4EB8);
  v252 = static Alignment.center.getter(v251);
  v253 = v492;
  sub_10014BBF8(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v492, 0.0, 1, 0.0, 1, v252, v254);
  sub_10004FF60(v246, (uint64_t *)&unk_1011C4EC0);
  v255 = v495;
  v256 = &v495[*(int *)(v494 + 20)];
  v257 = enum case for RoundedCornerStyle.continuous(_:);
  v258 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v258 - 8) + 104))(v256, v257, v258);
  __asm { FMOV            V0.2D, #16.0 }
  *v255 = _Q0;
  v264 = (uint64_t)v493;
  v265 = (uint64_t)&v493[*(int *)(v488 + 36)];
  sub_10005B704((uint64_t)v255, v265, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v265 + *(int *)(sub_100007E8C((uint64_t *)&unk_1011C9530) + 36)) = 256;
  sub_10004A160(v253, v264, &qword_1011A2C08);
  sub_10005B748((uint64_t)v255, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v266 = sub_10004FF60(v253, &qword_1011A2C08);
  LOBYTE(v265) = static Edge.Set.bottom.getter(v266);
  v267 = EdgeInsets.init(_all:)(6.0);
  v269 = v268;
  v271 = v270;
  v273 = v272;
  v274 = v490;
  sub_10004A160(v264, v490, &qword_1011C4ED0);
  v275 = v274 + *(int *)(v491 + 36);
  *(_BYTE *)v275 = v265;
  *(double *)(v275 + 8) = v267;
  *(_QWORD *)(v275 + 16) = v269;
  *(_QWORD *)(v275 + 24) = v271;
  *(_QWORD *)(v275 + 32) = v273;
  *(_BYTE *)(v275 + 40) = 0;
  sub_10004FF60(v264, &qword_1011C4ED0);
  sub_100065228(v274, v501, &qword_1011C4ED8);
  v276 = v238[8];
  *(_QWORD *)&v576 = v238[7];
  *((_QWORD *)&v576 + 1) = v276;
  strcpy((char *)&v598, "{{userName}}");
  BYTE13(v598) = 0;
  HIWORD(v598) = -5120;
  v277 = v539;
  LOBYTE(v265) = StringProtocol.contains<A>(_:)(&v598, &type metadata for String, &type metadata for String, v539, v539);
  v278 = v496;
  sub_10005B704((uint64_t)v238, v496, type metadata accessor for SharePlayProxCard);
  v279 = v233;
  if ((v265 & 1) == 0)
  {
    sub_10005B748(v278, type metadata accessor for SharePlayProxCard);
    v283 = v497;
    goto LABEL_7;
  }
  sub_1006EE48C();
  v281 = v280;
  sub_10005B748(v278, type metadata accessor for SharePlayProxCard);
  v282 = swift_bridgeObjectRelease();
  v283 = v497;
  if (v281)
  {
LABEL_7:
    v292 = v566[8];
    *(_QWORD *)&v576 = v566[7];
    *((_QWORD *)&v576 + 1) = v292;
    strcpy((char *)&v598, "{{userName}}");
    BYTE13(v598) = 0;
    HIWORD(v598) = -5120;
    swift_bridgeObjectRetain();
    v293 = sub_1006EE48C();
    if (v294)
      v295 = v293;
    else
      v295 = 0;
    if (v294)
      v296 = v294;
    else
      v296 = 0xE000000000000000;
    *(_QWORD *)&v589[0] = v295;
    *((_QWORD *)&v589[0] + 1) = v296;
    v297 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(&v598, v589, 0, 0, 0, 1, &type metadata for String, &type metadata for String, &type metadata for String, v277, v277, v277);
    v299 = v298;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v300 = type metadata accessor for URL(0);
    v301 = v449;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v300 - 8) + 56))(v449, 1, 1, v300);
    v302 = v452;
    (*(void (**)(char *, _QWORD, uint64_t))(v450 + 104))(v452, enum case for AttributedString.MarkdownParsingOptions.InterpretedSyntax.full(_:), v283);
    v303 = v455;
    (*(void (**)(char *, _QWORD, uint64_t))(v454 + 104))(v455, enum case for AttributedString.MarkdownParsingOptions.FailurePolicy.throwError(_:), v456);
    v304 = v451;
    AttributedString.MarkdownParsingOptions.init(allowsExtendedAttributes:interpretedSyntax:failurePolicy:languageCode:)(0, v302, v303, 0, 0);
    v305 = (uint64_t)v453;
    AttributedString.init(markdown:options:baseURL:)(v297, v299, v304, v301);
    v307 = v446;
    v306 = v447;
    v308 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v446 + 56);
    v308(v305, 0, 1, v447);
    v309 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v307 + 48))(v305, 1, v306);
    v310 = v500;
    v311 = v558;
    v312 = v557;
    if (v309 == 1)
    {
      AttributedString.init(stringLiteral:)(0, 0xE000000000000000);
      sub_10004FF60(v305, &qword_1011C4EA0);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v307 + 32))(v500, v305, v306);
    }
    v308(v310, 0, 1, v306);
    v313 = v448;
    v314 = v310;
    v315 = v457;
    sub_10004A160(v314, v457, &qword_1011C4EA0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v307 + 48))(v315, 1, v306) == 1)
    {
      AttributedString.init(stringLiteral:)(0, 0xE000000000000000);
      sub_10004FF60(v315, &qword_1011C4EA0);
    }
    else
    {
      v316.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t))(v307 + 32))(v313, v315, v306);
    }
    v317 = Text.init(_:)(v313, v316);
    v319 = v318;
    v321 = v320;
    v323 = v322 & 1;
    v324 = static Alignment.leading.getter(v317);
    sub_100149C8C(0, 1, 0.0, 1, INFINITY, 0, 0, 1, (uint64_t)v589, v326, 0.0, 1, 0.0, 1, v324, v325, v317, v319, v323,
      v321);
    sub_100055BAC(v317, v319, v323);
    swift_bridgeObjectRelease();
    v573 = v589[6];
    v574 = v589[7];
    v575 = v589[8];
    v569 = v589[2];
    v570 = v589[3];
    v572 = v589[5];
    v571 = v589[4];
    v567 = v589[0];
    v568 = v589[1];
    v328 = static Font.footnote.getter(v327);
    ((void (*)(char *, _QWORD, uint64_t))v538)(v312, v537, v311);
    v329 = Font.leading(_:)(v312, v328);
    v330 = swift_release();
    v536(v312, v311, v330);
    v331 = swift_getKeyPath(&unk_100ECBCC8);
    v332 = static Color.secondary.getter(v331);
    v333 = swift_getKeyPath(&unk_100ECBCF8);
    v603 = v572;
    v604 = v573;
    v605 = v574;
    v606 = v575;
    v599 = v568;
    v600 = v569;
    v601 = v570;
    v602 = v571;
    v598 = v567;
    *(_QWORD *)&v607 = v331;
    *((_QWORD *)&v607 + 1) = v329;
    *(_QWORD *)&v608[0] = v333;
    *((_QWORD *)&v608[0] + 1) = v332;
    LOBYTE(v331) = static Edge.Set.horizontal.getter(v333);
    v334 = EdgeInsets.init(_all:)(12.0);
    v584 = v606;
    v585 = v607;
    v586 = v608[0];
    v580 = v602;
    v581 = v603;
    v582 = v604;
    v583 = v605;
    v576 = v598;
    v577 = v599;
    v578 = v600;
    v579 = v601;
    LOBYTE(v587) = v331;
    *((double *)&v587 + 1) = v334;
    *(_QWORD *)&v588[0] = v335;
    *((_QWORD *)&v588[0] + 1) = v336;
    *(_QWORD *)&v588[1] = v337;
    BYTE8(v588[1]) = 0;
    v338 = swift_getKeyPath(&unk_100ECBE00);
    v339 = v461;
    OpenURLAction.init(handler:)(sub_1006F308C, 0);
    v341 = v463;
    v340 = v464;
    v342 = v462;
    (*(void (**)(char *, char *, uint64_t))(v462 + 16))((char *)v464 + *(int *)(v458 + 28), v339, v463);
    *v340 = v338;
    v343 = v499;
    v344 = v460;
    sub_10004A160((uint64_t)v340, (uint64_t)&v460[*(int *)(v499 + 36)], &qword_1011C4E88);
    v345 = v587;
    v344[10] = v586;
    v344[11] = v345;
    v344[12] = v588[0];
    *(_OWORD *)((char *)v344 + 201) = *(_OWORD *)((char *)v588 + 9);
    v346 = v583;
    v344[6] = v582;
    v344[7] = v346;
    v347 = v585;
    v344[8] = v584;
    v344[9] = v347;
    v348 = v579;
    v344[2] = v578;
    v344[3] = v348;
    v349 = v581;
    v344[4] = v580;
    v344[5] = v349;
    v350 = v577;
    *v344 = v576;
    v344[1] = v350;
    sub_1006F55E4((uint64_t)&v576);
    sub_10004FF60((uint64_t)v340, &qword_1011C4E88);
    (*(void (**)(char *, uint64_t))(v342 + 8))(v339, v341);
    sub_1006F5658((uint64_t)&v598);
    sub_10004FF60(v500, &qword_1011C4EA0);
    v351 = v459;
    sub_100065228((uint64_t)v344, v459, (uint64_t *)&unk_1011C4E90);
    v284 = v466;
    sub_100065228(v351, v466, (uint64_t *)&unk_1011C4E90);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v498 + 56))(v284, 0, 1, v343);
    v285 = (uint64_t)v467;
    v286 = (uint64_t)v465;
    goto LABEL_20;
  }
  v284 = v466;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v498 + 56))(v466, 1, 1, v499, v282);
  v285 = (uint64_t)v467;
  v286 = (uint64_t)v465;
LABEL_20:
  v352 = v502;
  sub_10004A160(v279, v502, &qword_1011C4F20);
  v353 = v501;
  sub_10004A160(v501, v286, &qword_1011C4ED8);
  sub_10004A160(v284, v285, &qword_1011C4EA8);
  v354 = v279;
  v355 = v565;
  sub_10004A160(v352, v565, &qword_1011C4F20);
  v356 = sub_100007E8C(&qword_1011C4FC0);
  sub_10004A160(v286, v355 + *(int *)(v356 + 48), &qword_1011C4ED8);
  sub_10004A160(v285, v355 + *(int *)(v356 + 64), &qword_1011C4EA8);
  sub_10004FF60(v284, &qword_1011C4EA8);
  sub_10004FF60(v353, &qword_1011C4ED8);
  sub_10004FF60(v354, &qword_1011C4F20);
  sub_10004FF60(v285, &qword_1011C4EA8);
  sub_10004FF60(v286, &qword_1011C4ED8);
  sub_10004FF60(v352, &qword_1011C4F20);
  v357 = sub_100007E8C(&qword_1011C4F48);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v357 - 8) + 56))(v355, 0, 1, v357);
  sub_100065228(v355, v564, &qword_1011C4F28);
  v290 = (uint64_t)v504;
  v291 = (uint64_t)v503;
  v289 = v506;
  v288 = v507;
LABEL_21:
  v358 = v566;
  sub_1006EE48C();
  v360 = v359;
  swift_bridgeObjectRelease();
  sub_10005B704((uint64_t)v358, v291, type metadata accessor for SharePlayProxCard);
  v549 = v142;
  v361 = v136;
  v362 = v134;
  v363 = v132;
  if (v360)
  {
    sub_10005B748(v291, type metadata accessor for SharePlayProxCard);
    sub_10005B704((uint64_t)v566, v290, type metadata accessor for SharePlayProxCard);
  }
  else
  {
    v364 = *(_BYTE *)(v291 + 72);
    sub_10005B748(v291, type metadata accessor for SharePlayProxCard);
    sub_10005B704((uint64_t)v566, v290, type metadata accessor for SharePlayProxCard);
    if ((v364 & 1) != 0)
    {
      v365 = 1;
      goto LABEL_26;
    }
  }
  v366 = swift_getKeyPath(&unk_100ECBD58);
  v367 = swift_getKeyPath(&unk_100ECBD80);
  swift_retain();
  static Published.subscript.getter(&v576, v368, v366, v367);
  swift_release();
  swift_release();
  swift_release();
  v365 = v576;
LABEL_26:
  v369 = (uint64_t)v509;
  LODWORD(v557) = v508 & 1;
  sub_10005B748(v290, type metadata accessor for SharePlayProxCard);
  v370 = v566;
  v371 = swift_getKeyPath(&unk_100ECBD58);
  v372 = swift_getKeyPath(&unk_100ECBD80);
  swift_retain();
  static Published.subscript.getter(&v576, v373, v371, v372);
  swift_release();
  swift_release();
  swift_release();
  LOBYTE(v372) = v576;
  v374 = sub_1006F30E0((uint64_t)v370);
  sub_10005B704((uint64_t)v370, v369, type metadata accessor for SharePlayProxCard);
  v375 = *(unsigned __int8 *)(v289 + 80);
  v376 = (v375 + 16) & ~v375;
  v377 = swift_allocObject(&unk_1010D8008, v376 + v288, v375 | 7);
  v378 = sub_1006F4FF8(v369, v377 + v376);
  __chkstk_darwin(v378);
  v444 = v370;
  LOBYTE(v445) = v372;
  v379 = v370;
  v380 = sub_100007E8C(&qword_1011C4F50);
  v381 = sub_1006F5370(&qword_1011C4F58, &qword_1011C4F50, (void (*)(void))sub_1006F5354);
  v382 = v525;
  Button.init(action:label:)(sub_1006F52FC, v377, sub_1006F5348, &v442, v380, v381);
  v383 = swift_getKeyPath(&unk_100ECBDA0);
  v384 = swift_allocObject(&unk_1010D8030, 17, 7);
  *(_BYTE *)(v384 + 16) = v365;
  v385 = v527;
  v386 = (uint64_t)v528;
  v387 = v529;
  (*(void (**)(char *, char *, uint64_t))(v527 + 16))(v528, v382, v529);
  v388 = (uint64_t *)(v386 + *(int *)(v523 + 36));
  *v388 = v383;
  v388[1] = (uint64_t)sub_1006F5584;
  v388[2] = v384;
  v389 = (*(uint64_t (**)(char *, uint64_t))(v385 + 8))(v382, v387);
  LOBYTE(v383) = static Edge.Set.all.getter(v389);
  v390 = v530;
  sub_10004A160(v386, v530, &qword_1011C4E68);
  v391 = v390 + *(int *)(v524 + 36);
  v558 = v374;
  *(_QWORD *)v391 = v374;
  *(_BYTE *)(v391 + 8) = v383;
  swift_retain();
  sub_10004FF60(v386, &qword_1011C4E68);
  v392 = enum case for RoundedCornerStyle.continuous(_:);
  v393 = type metadata accessor for RoundedCornerStyle(0);
  v394 = (uint64_t)v534;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v393 - 8) + 104))(v534, v392, v393);
  v395 = (uint64_t)v533;
  v396 = (uint64_t)&v533[*(int *)(v526 + 36)];
  sub_10005B704(v394, v396, (uint64_t (*)(_QWORD))&type metadata accessor for Capsule);
  *(_WORD *)(v396 + *(int *)(sub_100007E8C(&qword_1011C4FA0) + 36)) = 256;
  sub_10004A160(v390, v395, &qword_1011C4E70);
  sub_10005B748(v394, (uint64_t (*)(_QWORD))&type metadata accessor for Capsule);
  v397 = sub_10004FF60(v390, &qword_1011C4E70);
  v398 = static Edge.Set.top.getter(v397);
  v399 = 33.0;
  if (*((_BYTE *)v379 + 72))
    v399 = 25.0;
  v400 = EdgeInsets.init(_all:)(v399);
  v402 = v401;
  v404 = v403;
  v406 = v405;
  v407 = v531;
  sub_10004A160(v395, v531, &qword_1011C4E78);
  v408 = v407 + *(int *)(v532 + 36);
  *(_BYTE *)v408 = v398;
  *(double *)(v408 + 8) = v400;
  *(_QWORD *)(v408 + 16) = v402;
  *(_QWORD *)(v408 + 24) = v404;
  *(_QWORD *)(v408 + 32) = v406;
  *(_BYTE *)(v408 + 40) = 0;
  sub_10004FF60(v395, &qword_1011C4E78);
  v409 = v556;
  sub_100065228(v407, v556, &qword_1011C4E80);
  v410 = (uint64_t)v555;
  sub_10004A160((uint64_t)v554, (uint64_t)v555, &qword_1011C4F40);
  v597[0] = v623[0];
  *(_DWORD *)((char *)v597 + 3) = *(_DWORD *)((char *)v623 + 3);
  v596[0] = v622[0];
  *(_DWORD *)((char *)v596 + 3) = *(_DWORD *)((char *)v622 + 3);
  v595[0] = v621[0];
  *(_DWORD *)((char *)v595 + 3) = *(_DWORD *)((char *)v621 + 3);
  *(_DWORD *)((char *)v594 + 3) = *(_DWORD *)((char *)v620 + 3);
  v594[0] = v620[0];
  *(_DWORD *)((char *)v593 + 3) = *(_DWORD *)((char *)v619 + 3);
  v593[0] = v619[0];
  *(_DWORD *)((char *)v592 + 3) = *(_DWORD *)((char *)v589 + 3);
  v592[0] = v589[0];
  *(_DWORD *)((char *)v591 + 3) = *(_DWORD *)((char *)&v567 + 3);
  v591[0] = v567;
  v411 = v618;
  LODWORD(v566) = v618;
  v412 = (char)v557;
  v590 = (char)v557;
  sub_10004A160(v564, v565, &qword_1011C4F28);
  sub_10004A160(v409, v563, &qword_1011C4E80);
  v413 = v535;
  sub_10004A160(v410, v535, &qword_1011C4F40);
  v414 = (int *)sub_100007E8C(&qword_1011C4FA8);
  v415 = (_OWORD *)(v413 + v414[12]);
  *(_QWORD *)&v598 = v553;
  *((_QWORD *)&v598 + 1) = v561;
  LOBYTE(v599) = v543;
  *(_DWORD *)((char *)&v599 + 1) = v623[0];
  DWORD1(v599) = *(_DWORD *)((char *)v623 + 3);
  *((_QWORD *)&v599 + 1) = v562;
  *(_QWORD *)&v600 = v560;
  BYTE8(v600) = 1;
  *(_DWORD *)((char *)&v600 + 9) = v622[0];
  HIDWORD(v600) = *(_DWORD *)((char *)v622 + 3);
  LOBYTE(v601) = v551;
  *(_DWORD *)((char *)&v601 + 1) = v621[0];
  DWORD1(v601) = *(_DWORD *)((char *)v621 + 3);
  v416 = v518;
  *((double *)&v601 + 1) = v518;
  *(_QWORD *)&v602 = v363;
  *((_QWORD *)&v602 + 1) = v362;
  *(_QWORD *)&v603 = v361;
  BYTE8(v603) = v544;
  HIDWORD(v603) = *(_DWORD *)((char *)v620 + 3);
  *(_DWORD *)((char *)&v603 + 9) = v620[0];
  LOBYTE(v604) = v552;
  DWORD1(v604) = *(_DWORD *)((char *)v619 + 3);
  *(_DWORD *)((char *)&v604 + 1) = v619[0];
  v417 = v522;
  *((double *)&v604 + 1) = v522;
  v418 = v521;
  *(_QWORD *)&v605 = v521;
  v419 = v520;
  *((_QWORD *)&v605 + 1) = v520;
  v420 = v519;
  *(_QWORD *)&v606 = v519;
  BYTE8(v606) = v545;
  *(_DWORD *)((char *)&v606 + 9) = v589[0];
  HIDWORD(v606) = *(_DWORD *)((char *)v589 + 3);
  LOBYTE(v607) = v550;
  DWORD1(v607) = *(_DWORD *)((char *)&v567 + 3);
  *(_DWORD *)((char *)&v607 + 1) = v567;
  *((double *)&v607 + 1) = v549;
  *(_QWORD *)&v608[0] = v548;
  *((_QWORD *)&v608[0] + 1) = v547;
  *(_QWORD *)&v608[1] = v546;
  BYTE8(v608[1]) = v411;
  v421 = v598;
  v422 = v599;
  v423 = v601;
  v415[2] = v600;
  v415[3] = v423;
  *v415 = v421;
  v415[1] = v422;
  v424 = v602;
  v425 = v603;
  v426 = v605;
  v415[6] = v604;
  v415[7] = v426;
  v415[4] = v424;
  v415[5] = v425;
  v427 = v606;
  v428 = v607;
  v429 = v608[0];
  *(_OWORD *)((char *)v415 + 169) = *(_OWORD *)((char *)v608 + 9);
  v415[9] = v428;
  v415[10] = v429;
  v415[8] = v427;
  v430 = v413 + v414[16];
  v431 = v516;
  v432 = v515;
  *(_QWORD *)v430 = v516;
  *(_QWORD *)(v430 + 8) = v432;
  *(_BYTE *)(v430 + 16) = v412;
  v433 = v559;
  *(_QWORD *)(v430 + 24) = v542;
  *(_QWORD *)(v430 + 32) = v433;
  *(_BYTE *)(v430 + 40) = 1;
  v434 = v541;
  *(_QWORD *)(v430 + 48) = v540;
  *(_QWORD *)(v430 + 56) = v434;
  *(_BYTE *)(v430 + 64) = v514;
  *(_QWORD *)&v427 = v512;
  *(double *)(v430 + 72) = v513;
  *(_QWORD *)(v430 + 80) = v427;
  *(_QWORD *)&v427 = v510;
  *(_QWORD *)(v430 + 88) = v511;
  *(_QWORD *)(v430 + 96) = v427;
  *(_BYTE *)(v430 + 104) = 0;
  sub_10004A160(v565, v413 + v414[20], &qword_1011C4F28);
  sub_10004A160(v563, v413 + v414[24], &qword_1011C4E80);
  sub_100488668((uint64_t)&v598);
  sub_100055BBC(v431, v432, v412);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  LODWORD(v539) = v517 & 1;
  v435 = v553;
  sub_100055BBC(v553, v561, v517 & 1);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100055BBC(v431, v432, v412);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  sub_10004FF60(v556, &qword_1011C4E80);
  sub_10004FF60(v564, &qword_1011C4F28);
  sub_100055BAC(v431, v432, v412);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v436 = v435;
  v437 = v435;
  v438 = v561;
  sub_100055BAC(v436, v561, v539);
  swift_release();
  v439 = v562;
  swift_bridgeObjectRelease();
  sub_10004FF60((uint64_t)v554, &qword_1011C4F40);
  sub_10004FF60(v563, &qword_1011C4E80);
  sub_10004FF60(v565, &qword_1011C4F28);
  sub_100055BAC(v431, v432, v590);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v576 = v437;
  *((_QWORD *)&v576 + 1) = v438;
  LOBYTE(v577) = v543;
  *(_DWORD *)((char *)&v577 + 1) = v597[0];
  DWORD1(v577) = *(_DWORD *)((char *)v597 + 3);
  *((_QWORD *)&v577 + 1) = v439;
  *(_QWORD *)&v578 = v560;
  BYTE8(v578) = 1;
  *(_DWORD *)((char *)&v578 + 9) = v596[0];
  HIDWORD(v578) = *(_DWORD *)((char *)v596 + 3);
  LOBYTE(v579) = v551;
  DWORD1(v579) = *(_DWORD *)((char *)v595 + 3);
  *(_DWORD *)((char *)&v579 + 1) = v595[0];
  *((double *)&v579 + 1) = v416;
  *(_QWORD *)&v580 = v363;
  *((_QWORD *)&v580 + 1) = v362;
  *(_QWORD *)&v581 = v361;
  BYTE8(v581) = v544;
  HIDWORD(v581) = *(_DWORD *)((char *)v594 + 3);
  *(_DWORD *)((char *)&v581 + 9) = v594[0];
  LOBYTE(v582) = v552;
  DWORD1(v582) = *(_DWORD *)((char *)v593 + 3);
  *(_DWORD *)((char *)&v582 + 1) = v593[0];
  *((double *)&v582 + 1) = v417;
  *(_QWORD *)&v583 = v418;
  *((_QWORD *)&v583 + 1) = v419;
  *(_QWORD *)&v584 = v420;
  BYTE8(v584) = v545;
  HIDWORD(v584) = *(_DWORD *)((char *)v592 + 3);
  *(_DWORD *)((char *)&v584 + 9) = v592[0];
  LOBYTE(v585) = v550;
  DWORD1(v585) = *(_DWORD *)((char *)v591 + 3);
  *(_DWORD *)((char *)&v585 + 1) = v591[0];
  *((double *)&v585 + 1) = v549;
  *(_QWORD *)&v586 = v548;
  *((_QWORD *)&v586 + 1) = v547;
  *(_QWORD *)&v587 = v546;
  BYTE8(v587) = (_BYTE)v566;
  sub_1004886B4((uint64_t)&v576);
  return sub_10004FF60((uint64_t)v555, &qword_1011C4F40);
}

uint64_t sub_1006F1480@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t KeyPath;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unsigned __int8 v63;
  double v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  __int128 v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _BYTE *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  __n128 v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unsigned __int8 v107;
  double v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  __int128 v115;
  __int128 v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  uint64_t v125;
  unint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  void (**v149)(uint64_t, _QWORD);
  uint64_t v150;
  uint64_t v151;
  _OWORD *v152;
  __int128 v153;
  uint64_t v154;
  uint64_t v155;
  double v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  _QWORD *v168;
  uint64_t v169;
  unint64_t v170;
  unint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char v174;
  double v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  double v183;
  char v184;
  double v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v197;
  char *v198;
  char *v199;
  _QWORD *v200;
  char *v201;
  char *v202;
  char *v203;
  uint64_t v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  id v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  char *v218;
  char *v219;
  char *v220;
  char *v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  double v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  __int16 v245;
  __int128 v246;
  __int128 v247;
  __int128 v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  char v256;
  char v257;
  uint64_t v258;
  unsigned __int8 v259;
  uint64_t v260;
  unsigned __int8 v261;
  uint64_t v262;
  uint64_t v263;

  v228 = a2;
  v3 = sub_100007E8C(&qword_1011C4FC8);
  __chkstk_darwin(v3);
  v220 = (char *)&v197 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v225 = sub_100007E8C(&qword_1011C4FD0);
  __chkstk_darwin(v225);
  v221 = (char *)&v197 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v226 = sub_100007E8C(&qword_1011C4FD8);
  __chkstk_darwin(v226);
  v222 = (char *)&v197 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v227 = (char *)&v197 - v8;
  v206 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v216 = *(_QWORD *)(v206 - 8);
  __chkstk_darwin(v206);
  v217 = (char *)&v197 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v10);
  v205 = (char *)&v197 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
  __chkstk_darwin(v12);
  v203 = (char *)&v197 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Artwork(0);
  v207 = *(_QWORD *)(v14 - 8);
  v208 = v14;
  __chkstk_darwin(v14);
  v202 = (char *)&v197 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v201 = (char *)&v197 - v17;
  v18 = sub_100007E8C(&qword_1011A1440);
  __chkstk_darwin(v18);
  v219 = (char *)&v197 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v218 = (char *)&v197 - v21;
  v22 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v22);
  v204 = (uint64_t)&v197 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_100007E8C((uint64_t *)&unk_1011C4FE0);
  v213 = *(id *)(v24 - 8);
  v214 = v24;
  __chkstk_darwin(v24);
  v209 = (uint64_t)&v197 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v210 = sub_100007E8C(&qword_1011ADA38);
  __chkstk_darwin(v210);
  v212 = (char *)&v197 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v211 = sub_100007E8C(&qword_1011C4FF0);
  __chkstk_darwin(v211);
  v215 = (uint64_t)&v197 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v224 = sub_100007E8C(&qword_1011C4FF8);
  __chkstk_darwin(v224);
  v29 = (char *)&v197 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v32 = (char *)&v197 - v31;
  v223 = sub_100007E8C(&qword_1011C5000);
  __chkstk_darwin(v223);
  v34 = (char *)&v197 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = type metadata accessor for Image.ResizingMode(0);
  v36 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v38 = (char *)&v197 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_100007E8C((uint64_t *)&unk_1011C5008);
  __chkstk_darwin(v39);
  v229 = (uint64_t)&v197 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41);
  v231 = (uint64_t)&v197 - v42;
  v43 = Int.seconds.getter(54);
  v44 = Int.seconds.getter(10);
  v45 = *(int *)(type metadata accessor for SharePlayProxCard(0) + 20);
  v230 = a1;
  v46 = *(_QWORD *)(a1 + v45 + 8);
  KeyPath = swift_getKeyPath(&unk_100ECBC80);
  v48 = swift_getKeyPath(&unk_100ECBCA8);
  swift_retain();
  static Published.subscript.getter(&v246, v49, KeyPath, v48);
  swift_release();
  swift_release();
  swift_release();
  if ((_QWORD)v246)
  {
    v213 = (id)v246;
    v50 = Image.init(uiImage:)(v213);
    (*(void (**)(char *, _QWORD, uint64_t))(v36 + 104))(v38, enum case for Image.ResizingMode.stretch(_:), v35);
    v51 = Image.resizable(capInsets:resizingMode:)(v38, v50, 0.0, 0.0, 0.0, 0.0);
    v52 = swift_release();
    v53 = (*(uint64_t (**)(char *, uint64_t, __n128))(v36 + 8))(v38, v35, v52);
    v54 = static Alignment.center.getter(v53);
    v56 = _FrameLayout.init(width:height:alignment:)(&v258, *(_QWORD *)&v43, 0, *(_QWORD *)&v43, 0, v54, v55);
    v57 = v258;
    v58 = v259;
    v59 = v260;
    v60 = v261;
    v61 = v262;
    v62 = v263;
    v63 = static Edge.Set.all.getter(v56);
    v64 = EdgeInsets.init(_all:)(v44);
    v212 = (char *)v51;
    v232 = v51;
    v233 = v57;
    v234 = v58;
    v235 = v59;
    v236 = v60;
    v237 = v61;
    v238 = v62;
    v239 = 256;
    v240 = v63;
    v241 = v64;
    v242 = v65;
    v243 = v66;
    v244 = v67;
    v245 = 0;
    swift_retain();
    v68 = sub_100007E8C(&qword_1011C5030);
    v69 = sub_1006F5730();
    _ConditionalContent<>.init(storage:)(&v232, v68, v68, v69, v69);
    v70 = *((_QWORD *)&v246 + 1);
    v71 = v247;
    v218 = (char *)v247;
    v219 = (char *)v246;
    v72 = v248;
    v216 = v248;
    v217 = (char *)*((_QWORD *)&v247 + 1);
    v73 = v249;
    v74 = v250;
    v214 = v249;
    v215 = *((_QWORD *)&v248 + 1);
    v208 = v250;
    v76 = v251;
    v75 = v252;
    v77 = v253;
    v78 = v254;
    v79 = v255;
    LOBYTE(v61) = v256;
    LOBYTE(v62) = v257;
    *(_QWORD *)v34 = v246;
    *((_QWORD *)v34 + 1) = v70;
    v210 = v75;
    v211 = v70;
    *((_OWORD *)v34 + 1) = v71;
    *((_OWORD *)v34 + 2) = v72;
    *((_QWORD *)v34 + 6) = v73;
    *((_QWORD *)v34 + 7) = v74;
    *((_QWORD *)v34 + 8) = v76;
    *((_QWORD *)v34 + 9) = v75;
    *((_QWORD *)v34 + 10) = v77;
    *((_QWORD *)v34 + 11) = v78;
    v209 = v77;
    *((_QWORD *)v34 + 12) = v79;
    v34[104] = v61;
    v34[105] = v62;
    swift_storeEnumTagMultiPayload(v34, v223, 0);
    j__swift_retain_0();
    v80 = sub_100007E8C(&qword_1011C5018);
    v81 = sub_1006F56CC();
    v82 = sub_1006F5818();
    _ConditionalContent<>.init(storage:)(v34, v80, v224, v81, v82);

LABEL_3:
    j__swift_release_0();
    swift_release();
    v84 = (uint64_t)v227;
    v85 = v228;
    v87 = (uint64_t)v221;
    v86 = (uint64_t)v222;
    v88 = v220;
    v89 = v225;
    v90 = v226;
    goto LABEL_11;
  }
  v92 = (uint64_t)v218;
  v91 = (uint64_t)v219;
  v198 = v29;
  v199 = v32;
  v200 = v34;
  if ((*(_BYTE *)(v46 + OBJC_IVAR____TtCV5Music17SharePlayProxCard9CardState_removedImage) & 1) == 0)
  {
    v93 = *(void **)(v230 + *(int *)(type metadata accessor for SharePlayProxCard.ViewModel(0) + 44));
    if (v93)
    {
      v213 = v93;
      v94 = Image.init(uiImage:)(v213);
      (*(void (**)(char *, _QWORD, uint64_t))(v36 + 104))(v38, enum case for Image.ResizingMode.stretch(_:), v35);
      v95 = Image.resizable(capInsets:resizingMode:)(v38, v94, 0.0, 0.0, 0.0, 0.0);
      v96 = swift_release();
      v97 = (*(uint64_t (**)(char *, uint64_t, __n128))(v36 + 8))(v38, v35, v96);
      v98 = static Alignment.center.getter(v97);
      v100 = _FrameLayout.init(width:height:alignment:)(&v258, *(_QWORD *)&v43, 0, *(_QWORD *)&v43, 0, v98, v99);
      v101 = v258;
      v102 = v259;
      v103 = v260;
      v104 = v261;
      v105 = v262;
      v106 = v263;
      v107 = static Edge.Set.all.getter(v100);
      v108 = EdgeInsets.init(_all:)(v44);
      v212 = (char *)v95;
      v232 = v95;
      v233 = v101;
      v234 = v102;
      v235 = v103;
      v236 = v104;
      v237 = v105;
      v238 = v106;
      v239 = 256;
      v240 = v107;
      v241 = v108;
      v242 = v109;
      v243 = v110;
      v244 = v111;
      v245 = 256;
      swift_retain();
      v112 = sub_100007E8C(&qword_1011C5030);
      v113 = sub_1006F5730();
      _ConditionalContent<>.init(storage:)(&v232, v112, v112, v113, v113);
      v114 = *((_QWORD *)&v246 + 1);
      v115 = v247;
      v218 = (char *)v247;
      v219 = (char *)v246;
      v116 = v248;
      v216 = v248;
      v217 = (char *)*((_QWORD *)&v247 + 1);
      v117 = v249;
      v118 = v250;
      v214 = v249;
      v215 = *((_QWORD *)&v248 + 1);
      v208 = v250;
      v120 = v251;
      v119 = v252;
      v121 = v253;
      v122 = v254;
      v123 = v255;
      LOBYTE(v105) = v256;
      LOBYTE(v106) = v257;
      v124 = v200;
      *v200 = v246;
      v124[1] = v114;
      v210 = v119;
      v211 = v114;
      *((_OWORD *)v124 + 1) = v115;
      *((_OWORD *)v124 + 2) = v116;
      v124[6] = v117;
      v124[7] = v118;
      v124[8] = v120;
      v124[9] = v119;
      v124[10] = v121;
      v124[11] = v122;
      v209 = v121;
      v124[12] = v123;
      *((_BYTE *)v124 + 104) = v105;
      *((_BYTE *)v124 + 105) = v106;
      swift_storeEnumTagMultiPayload(v124, v223, 0);
      j__swift_retain_0();
      v125 = sub_100007E8C(&qword_1011C5018);
      v126 = sub_1006F56CC();
      v127 = sub_1006F5818();
      _ConditionalContent<>.init(storage:)(v124, v125, v224, v126, v127);

      goto LABEL_3;
    }
  }
  v128 = v92;
  sub_1006EE574(v92);
  v129 = v91;
  sub_10004A160(v92, v91, &qword_1011A1440);
  v131 = v207;
  v130 = v208;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v207 + 48))(v91, 1, v208) == 1)
  {
    v132 = type metadata accessor for ArtworkImage.ViewModel(0);
    v133 = v204;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v132 - 8) + 56))(v204, 1, 1, v132);
  }
  else
  {
    v134 = v201;
    (*(void (**)(char *, uint64_t, uint64_t))(v131 + 32))(v201, v129, v130);
    v135 = (uint64_t)v202;
    (*(void (**)(char *, char *, uint64_t))(v131 + 16))(v202, v134, v130);
    v136 = type metadata accessor for Artwork.CropStyle(0);
    v137 = (uint64_t)v203;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v136 - 8) + 56))(v203, 1, 1, v136);
    v133 = v204;
    ArtworkImage.ViewModel.init(artwork:cropStyle:)(v135, v137, v204);
    (*(void (**)(char *, uint64_t))(v131 + 8))(v134, v130);
    v138 = type metadata accessor for ArtworkImage.ViewModel(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v138 - 8) + 56))(v133, 0, 1, v138);
  }
  v87 = (uint64_t)v221;
  v86 = (uint64_t)v222;
  v88 = v220;
  v140 = v205;
  v139 = v206;
  sub_10004FF60(v128, &qword_1011A1440);
  v141 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v141 - 8) + 56))(v140, 7, 10, v141);
  ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(0, 1, 0, 1, 0, 1, 2, (uint64_t)&v232);
  v142 = v216;
  v143 = (uint64_t)v140;
  v144 = (uint64_t)v217;
  (*(void (**)(char *, _QWORD, uint64_t))(v216 + 104))(v217, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v139);
  v145 = v209;
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)(v133, v143, (uint64_t)&v232, v144, v209);
  (*(void (**)(uint64_t, uint64_t))(v142 + 8))(v144, v139);
  sub_10005B748(v143, type metadata accessor for ArtworkImage.Placeholder);
  v146 = sub_10004FF60(v133, (uint64_t *)&unk_1011A3E10);
  v147 = static Alignment.center.getter(v146);
  _FrameLayout.init(width:height:alignment:)(&v246, *(_QWORD *)&v43, 0, *(_QWORD *)&v43, 0, v147, v148);
  v150 = (uint64_t)v212;
  v149 = (void (**)(uint64_t, _QWORD))v213;
  v151 = v214;
  (*((void (**)(char *, uint64_t, uint64_t))v213 + 2))(v212, v145, v214);
  v152 = (_OWORD *)(v150 + *(int *)(v210 + 36));
  v153 = v247;
  *v152 = v246;
  v152[1] = v153;
  v152[2] = v248;
  v149[1](v145, v151);
  v154 = v215;
  sub_10004A160(v150, v215, &qword_1011ADA38);
  *(_WORD *)(v154 + *(int *)(v211 + 36)) = 256;
  v155 = sub_10004FF60(v150, &qword_1011ADA38);
  LOBYTE(v151) = static Edge.Set.all.getter(v155);
  v156 = EdgeInsets.init(_all:)(v44);
  v158 = v157;
  v160 = v159;
  v162 = v161;
  v163 = (uint64_t)v198;
  sub_10004A160(v154, (uint64_t)v198, &qword_1011C4FF0);
  v164 = v224;
  v165 = v163 + *(int *)(v224 + 36);
  *(_BYTE *)v165 = v151;
  *(double *)(v165 + 8) = v156;
  *(_QWORD *)(v165 + 16) = v158;
  *(_QWORD *)(v165 + 24) = v160;
  *(_QWORD *)(v165 + 32) = v162;
  *(_BYTE *)(v165 + 40) = 0;
  sub_10004FF60(v154, &qword_1011C4FF0);
  v166 = v163;
  v167 = (uint64_t)v199;
  sub_100065228(v166, (uint64_t)v199, &qword_1011C4FF8);
  v168 = v200;
  sub_10004A160(v167, (uint64_t)v200, &qword_1011C4FF8);
  swift_storeEnumTagMultiPayload(v168, v223, 1);
  v169 = sub_100007E8C(&qword_1011C5018);
  v170 = sub_1006F56CC();
  v171 = sub_1006F5818();
  _ConditionalContent<>.init(storage:)(v168, v169, v164, v170, v171);
  v83 = sub_10004FF60(v167, &qword_1011C4FF8);
  v89 = v225;
  v90 = v226;
  v84 = (uint64_t)v227;
  v85 = v228;
LABEL_11:
  *v88 = static Axis.Set.horizontal.getter(v83);
  v172 = sub_100007E8C(&qword_1011C50B0);
  v173 = sub_1006F23A8((uint64_t)&v88[*(int *)(v172 + 44)]);
  v174 = static Edge.Set.vertical.getter(v173);
  v175 = EdgeInsets.init(_all:)(16.0);
  v177 = v176;
  v179 = v178;
  v181 = v180;
  sub_10004A160((uint64_t)v88, v87, &qword_1011C4FC8);
  v182 = v87 + *(int *)(v89 + 36);
  *(_BYTE *)v182 = v174;
  *(double *)(v182 + 8) = v175;
  *(_QWORD *)(v182 + 16) = v177;
  *(_QWORD *)(v182 + 24) = v179;
  *(_QWORD *)(v182 + 32) = v181;
  *(_BYTE *)(v182 + 40) = 0;
  sub_10004FF60((uint64_t)v88, &qword_1011C4FC8);
  v184 = static Edge.Set.trailing.getter(v183);
  v185 = EdgeInsets.init(_all:)(24.0);
  v187 = v186;
  v189 = v188;
  v191 = v190;
  sub_10004A160(v87, v86, &qword_1011C4FD0);
  v192 = v86 + *(int *)(v90 + 36);
  *(_BYTE *)v192 = v184;
  *(double *)(v192 + 8) = v185;
  *(_QWORD *)(v192 + 16) = v187;
  *(_QWORD *)(v192 + 24) = v189;
  *(_QWORD *)(v192 + 32) = v191;
  *(_BYTE *)(v192 + 40) = 0;
  sub_10004FF60(v87, &qword_1011C4FD0);
  sub_100065228(v86, v84, &qword_1011C4FD8);
  v193 = v231;
  v194 = v229;
  sub_10004A160(v231, v229, (uint64_t *)&unk_1011C5008);
  sub_10004A160(v84, v86, &qword_1011C4FD8);
  sub_10004A160(v194, v85, (uint64_t *)&unk_1011C5008);
  v195 = sub_100007E8C(&qword_1011C50B8);
  sub_10004A160(v86, v85 + *(int *)(v195 + 48), &qword_1011C4FD8);
  sub_10004FF60(v84, &qword_1011C4FD8);
  sub_10004FF60(v193, (uint64_t *)&unk_1011C5008);
  sub_10004FF60(v86, &qword_1011C4FD8);
  return sub_10004FF60(v194, (uint64_t *)&unk_1011C5008);
}

uint64_t sub_1006F23A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;

  v30 = a1;
  v1 = sub_100007E8C(&qword_1011C50C0);
  __chkstk_darwin(v1);
  v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v29 - v5;
  v7 = sub_100007E8C(&qword_1011C50C8);
  __chkstk_darwin(v7);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v29 - v11;
  v13 = sub_100007E8C(&qword_1011C50D0);
  __chkstk_darwin(v13);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v29 - v17;
  *(_QWORD *)v18 = static VerticalAlignment.center.getter(v19);
  *((_QWORD *)v18 + 1) = 0;
  v18[16] = 1;
  v20 = sub_100007E8C(&qword_1011C50D8);
  v21 = sub_1006F264C((uint64_t)&v18[*(int *)(v20 + 44)]);
  *(_QWORD *)v12 = static VerticalAlignment.center.getter(v21);
  *((_QWORD *)v12 + 1) = 0;
  v12[16] = 1;
  v22 = sub_100007E8C(&qword_1011C50E0);
  v23 = (uint64_t)&v12[*(int *)(v22 + 44)];
  *(_QWORD *)v6 = static HorizontalAlignment.leading.getter(v22);
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 1;
  v24 = sub_100007E8C(&qword_1011C50E8);
  sub_1006F2F10((uint64_t)&v6[*(int *)(v24 + 44)]);
  sub_10004A160((uint64_t)v6, (uint64_t)v3, &qword_1011C50C0);
  sub_10004A160((uint64_t)v3, v23, &qword_1011C50C0);
  v25 = v23 + *(int *)(sub_100007E8C(&qword_1011C50F0) + 48);
  *(_QWORD *)v25 = 0;
  *(_BYTE *)(v25 + 8) = 1;
  sub_10004FF60((uint64_t)v6, &qword_1011C50C0);
  sub_10004FF60((uint64_t)v3, &qword_1011C50C0);
  sub_10004A160((uint64_t)v18, (uint64_t)v15, &qword_1011C50D0);
  sub_10004A160((uint64_t)v12, (uint64_t)v9, &qword_1011C50C8);
  v26 = v30;
  sub_10004A160((uint64_t)v15, v30, &qword_1011C50D0);
  v27 = sub_100007E8C(&qword_1011C50F8);
  sub_10004A160((uint64_t)v9, v26 + *(int *)(v27 + 48), &qword_1011C50C8);
  sub_10004FF60((uint64_t)v12, &qword_1011C50C8);
  sub_10004FF60((uint64_t)v18, &qword_1011C50D0);
  sub_10004FF60((uint64_t)v9, &qword_1011C50C8);
  return sub_10004FF60((uint64_t)v15, &qword_1011C50D0);
}

uint64_t sub_1006F264C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v2 = sub_100007E8C(&qword_1011C5100);
  __chkstk_darwin(v2);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v17 - v6;
  v8 = sub_100007E8C(&qword_1011C5108);
  __chkstk_darwin(v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v17 - v12;
  sub_1006F27DC((uint64_t)&v17 - v12);
  sub_1006F2BC4((uint64_t)v7);
  sub_10004A160((uint64_t)v13, (uint64_t)v10, &qword_1011C5108);
  sub_10004A160((uint64_t)v7, (uint64_t)v4, &qword_1011C5100);
  sub_10004A160((uint64_t)v10, a1, &qword_1011C5108);
  v14 = sub_100007E8C(&qword_1011C5148);
  v15 = a1 + *(int *)(v14 + 48);
  *(_QWORD *)v15 = 0;
  *(_BYTE *)(v15 + 8) = 1;
  sub_10004A160((uint64_t)v4, a1 + *(int *)(v14 + 64), &qword_1011C5100);
  sub_10004FF60((uint64_t)v7, &qword_1011C5100);
  sub_10004FF60((uint64_t)v13, &qword_1011C5108);
  sub_10004FF60((uint64_t)v4, &qword_1011C5100);
  return sub_10004FF60((uint64_t)v10, &qword_1011C5108);
}

uint64_t sub_1006F27DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t KeyPath;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v58 = a1;
  v2 = type metadata accessor for SharePlayProxCard(0);
  v53 = *(_QWORD *)(v2 - 8);
  v3 = *(_QWORD *)(v53 + 64);
  __chkstk_darwin(v2);
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_10119DFD8);
  v54 = *(_QWORD *)(v10 - 8);
  v55 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_100007E8C(&qword_1011C5128);
  __chkstk_darwin(v57);
  v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v53 - v16;
  v56 = sub_100007E8C(&qword_1011C5130);
  __chkstk_darwin(v56);
  v19 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1006EE48C();
  v22 = v20;
  if (v21)
  {
    v59 = v20;
    v60 = v21;
    v23 = sub_100055B68();
    v24 = Text.init<A>(_:)(&v59, &type metadata for String, v23);
    v26 = v25;
    v28 = v27 & 1;
    v29 = Text.bold()();
    v31 = v30;
    v33 = v32;
    v35 = v34;
    sub_100055BAC(v24, v26, v28);
    swift_bridgeObjectRelease();
    *(_QWORD *)v19 = v29;
    *((_QWORD *)v19 + 1) = v31;
    v19[16] = v33 & 1;
    *((_QWORD *)v19 + 3) = v35;
    swift_storeEnumTagMultiPayload(v19, v56, 0);
    v36 = sub_1006F59B0();
    return _ConditionalContent<>.init(storage:)(v19, &type metadata for Text, v57, &protocol witness table for Text, v36);
  }
  else
  {
    v38 = String.LocalizationValue.init(stringLiteral:)(0x6F59207265746E45, 0xEF656D614E207275);
    static Locale.current.getter(v38);
    v59 = String.init(localized:table:bundle:locale:comment:)(v9, v22, 0, 0, v6, 0, 0, 256);
    v60 = v39;
    sub_10005B704(v1, (uint64_t)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SharePlayProxCard);
    v40 = *(unsigned __int8 *)(v53 + 80);
    v41 = (v40 + 16) & ~v40;
    v42 = swift_allocObject(&unk_1010D8080, v41 + v3, v40 | 7);
    sub_1006F4FF8((uint64_t)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v42 + v41);
    v43 = sub_100055B68();
    v45 = Button<>.init<A>(_:action:)(&v59, sub_1006F503C, v42, &type metadata for String, v43, v44);
    v46 = static Color.secondary.getter(v45);
    KeyPath = swift_getKeyPath(&unk_100ECBCF8);
    v49 = v54;
    v48 = v55;
    (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v14, v12, v55);
    v50 = v57;
    v51 = (uint64_t *)&v14[*(int *)(v57 + 36)];
    *v51 = KeyPath;
    v51[1] = v46;
    (*(void (**)(char *, uint64_t))(v49 + 8))(v12, v48);
    sub_100065228((uint64_t)v14, (uint64_t)v17, &qword_1011C5128);
    sub_10004A160((uint64_t)v17, (uint64_t)v19, &qword_1011C5128);
    swift_storeEnumTagMultiPayload(v19, v56, 1);
    v52 = sub_1006F59B0();
    _ConditionalContent<>.init(storage:)(v19, &type metadata for Text, v50, &protocol witness table for Text, v52);
    return sub_10004FF60((uint64_t)v17, &qword_1011C5128);
  }
}

uint64_t sub_1006F2BC4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  __n128 v27;
  uint64_t KeyPath;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[3];

  v40 = a1;
  v2 = type metadata accessor for SharePlayProxCard(0);
  v36 = *(_QWORD *)(v2 - 8);
  v3 = *(_QWORD *)(v36 + 64);
  __chkstk_darwin(v2);
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_10119DFD8);
  v37 = *(_QWORD *)(v10 - 8);
  v38 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_100007E8C(&qword_1011C5118);
  __chkstk_darwin(v35);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(&qword_1011C5120);
  v39 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1006EE48C();
  v19 = v18;
  v20 = swift_bridgeObjectRelease();
  if (!v19)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v39 + 56))(v40, 1, 1, v15, v20);
  v21 = String.LocalizationValue.init(stringLiteral:)(1953064005, 0xE400000000000000);
  static Locale.current.getter(v21);
  v41[0] = String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, 0, v6, 0, 0, 256);
  v41[1] = v22;
  sub_10005B704(v1, (uint64_t)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SharePlayProxCard);
  v23 = *(unsigned __int8 *)(v36 + 80);
  v24 = (v23 + 16) & ~v23;
  v25 = swift_allocObject(&unk_1010D8058, v24 + v3, v23 | 7);
  sub_1006F4FF8((uint64_t)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v25 + v24);
  v26 = sub_100055B68();
  Button<>.init<A>(_:action:)(v41, sub_1006F592C, v25, &type metadata for String, v26, v27);
  KeyPath = swift_getKeyPath(&unk_100ECBE30);
  v30 = v37;
  v29 = v38;
  (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v14, v12, v38);
  v31 = &v14[*(int *)(v35 + 36)];
  *(_QWORD *)v31 = KeyPath;
  *((_QWORD *)v31 + 1) = 1;
  v31[16] = 0;
  (*(void (**)(char *, uint64_t))(v30 + 8))(v12, v29);
  sub_10004A160((uint64_t)v14, (uint64_t)v17, &qword_1011C5118);
  *(_QWORD *)&v17[*(int *)(v15 + 36)] = 0x3FF0000000000000;
  sub_10004FF60((uint64_t)v14, &qword_1011C5118);
  v32 = v40;
  sub_100065228((uint64_t)v17, v40, &qword_1011C5120);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v39 + 56))(v32, 0, 1, v15);
}

uint64_t sub_1006F2F10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v16;

  v2 = sub_100007E8C(&qword_1011C5100);
  __chkstk_darwin(v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v16 - v6;
  v8 = sub_100007E8C(&qword_1011C5108);
  __chkstk_darwin(v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v16 - v12;
  sub_1006F27DC((uint64_t)&v16 - v12);
  sub_1006F2BC4((uint64_t)v7);
  sub_10004A160((uint64_t)v13, (uint64_t)v10, &qword_1011C5108);
  sub_10004A160((uint64_t)v7, (uint64_t)v4, &qword_1011C5100);
  sub_10004A160((uint64_t)v10, a1, &qword_1011C5108);
  v14 = sub_100007E8C(&qword_1011C5110);
  sub_10004A160((uint64_t)v4, a1 + *(int *)(v14 + 48), &qword_1011C5100);
  sub_10004FF60((uint64_t)v7, &qword_1011C5100);
  sub_10004FF60((uint64_t)v13, &qword_1011C5108);
  sub_10004FF60((uint64_t)v4, &qword_1011C5100);
  return sub_10004FF60((uint64_t)v10, &qword_1011C5108);
}

id sub_1006F308C()
{
  id result;
  void *v1;

  result = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
  if (result)
  {
    v1 = result;
    LSApplicationWorkspace.openMusicSettings()();

    return (id)static OpenURLAction.Result.handled.getter();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1006F30E0(uint64_t a1)
{
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v10;

  type metadata accessor for SharePlayProxCard(0);
  KeyPath = swift_getKeyPath(&unk_100ECBD58);
  v3 = swift_getKeyPath(&unk_100ECBD80);
  swift_retain();
  static Published.subscript.getter(&v10, v4, KeyPath, v3);
  swift_release();
  swift_release();
  swift_release();
  if (v10 == 1)
  {
    v5 = type metadata accessor for SharePlayProxCard.ViewModel(0);
    if ((*(_BYTE *)(a1 + *(int *)(v5 + 52) + 16) & 1) == 0)
      return static Color.clear.getter(v5);
    goto LABEL_7;
  }
  sub_1006EE48C();
  v7 = v6;
  swift_bridgeObjectRelease();
  if (!v7)
  {
LABEL_7:
    v8 = objc_msgSend((id)objc_opt_self(UIColor), "systemFillColor");
    return Color.init(_:)(v8);
  }
  v8 = (id)*UIColor.MusicTint.normal.unsafeMutableAddressor();
  return Color.init(_:)(v8);
}

uint64_t sub_1006F3204@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t KeyPath;
  uint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  _OWORD v52[7];

  v49 = a2;
  v51 = a3;
  v4 = sub_100007E8C(&qword_1011C4F98);
  __chkstk_darwin(v4);
  v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011C4F80);
  __chkstk_darwin(v7);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_100007E8C(&qword_1011C5150);
  v10 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin(v47);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_100007E8C(&qword_1011C4F78);
  __chkstk_darwin(v46);
  v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_100007E8C(&qword_1011A2C18);
  __chkstk_darwin(v48);
  v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C(&qword_1011C4F50);
  __chkstk_darwin(v17);
  v50 = (uint64_t)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v6 = static VerticalAlignment.center.getter(v19);
  *((_QWORD *)v6 + 1) = 0x4024000000000000;
  v6[16] = 0;
  v20 = sub_100007E8C(&qword_1011C5158);
  v21 = sub_1006F35C8(a1, (uint64_t)&v6[*(int *)(v20 + 44)]);
  v22 = static Font.body.getter(v21);
  KeyPath = swift_getKeyPath(&unk_100ECBCC8);
  sub_10004A160((uint64_t)v6, (uint64_t)v9, &qword_1011C4F98);
  v24 = (uint64_t *)&v9[*(int *)(v7 + 36)];
  *v24 = KeyPath;
  v24[1] = v22;
  sub_10004FF60((uint64_t)v6, &qword_1011C4F98);
  v25 = sub_1006F5488();
  View.bold(_:)(1, v7, v25);
  v26 = sub_10004FF60((uint64_t)v9, &qword_1011C4F80);
  if ((v49 & 1) != 0)
    v28 = static Color.primary.getter(v27);
  else
    v28 = static Color.white.getter(v26);
  v29 = v28;
  v30 = swift_getKeyPath(&unk_100ECBCF8);
  v31 = v47;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v14, v12, v47);
  v32 = (uint64_t *)&v14[*(int *)(v46 + 36)];
  *v32 = v30;
  v32[1] = v29;
  v33 = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v31);
  v34 = static Alignment.center.getter(v33);
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v52, 0, 1, 0, 1, 0, 1, 0x4049000000000000, 0, 0, 1, 0, 1, v34, v35);
  sub_10004A160((uint64_t)v14, (uint64_t)v16, &qword_1011C4F78);
  v36 = &v16[*(int *)(v48 + 36)];
  v37 = v52[5];
  *((_OWORD *)v36 + 4) = v52[4];
  *((_OWORD *)v36 + 5) = v37;
  *((_OWORD *)v36 + 6) = v52[6];
  v38 = v52[1];
  *(_OWORD *)v36 = v52[0];
  *((_OWORD *)v36 + 1) = v38;
  v39 = v52[3];
  *((_OWORD *)v36 + 2) = v52[2];
  *((_OWORD *)v36 + 3) = v39;
  v40 = sub_10004FF60((uint64_t)v14, &qword_1011C4F78);
  v41 = static Alignment.center.getter(v40);
  v42 = v50;
  sub_10014BC5C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v50, 0.0, 1, 0.0, 1, v41, v43);
  sub_10004FF60((uint64_t)v16, &qword_1011A2C18);
  return sub_100065228(v42, v51, &qword_1011C4F50);
}

uint64_t sub_1006F35C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(__n128);
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;

  v4 = sub_100007E8C((uint64_t *)&unk_1011C5160);
  __chkstk_darwin(v4);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v41 - v8;
  type metadata accessor for SharePlayProxCard(0);
  KeyPath = swift_getKeyPath(&unk_100ECBD58);
  v11 = swift_getKeyPath(&unk_100ECBD80);
  swift_retain();
  static Published.subscript.getter(&v46, v12, KeyPath, v11);
  swift_release();
  swift_release();
  swift_release();
  if (v46 == 1
    && (*(_BYTE *)(a1 + *(int *)(type metadata accessor for SharePlayProxCard.ViewModel(0) + 52) + 16) & 1) == 0)
  {
    ProgressView<>.init<>()(v13);
    v15 = sub_100007E8C(&qword_1011A4C68);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v9, 0, 1, v15);
  }
  else
  {
    v14 = sub_100007E8C(&qword_1011A4C68);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v9, 1, 1, v14);
  }
  v16 = a1 + *(int *)(type metadata accessor for SharePlayProxCard.ViewModel(0) + 52);
  v18 = *(uint64_t (**)(__n128))v16;
  v17 = *(_QWORD *)(v16 + 8);
  if ((*(_BYTE *)(v16 + 16) & 1) != 0)
  {
    v46 = *(_QWORD *)v16;
    v47 = v17;
    v19 = sub_100055B68();
    swift_bridgeObjectRetain();
    v41 = Text.init<A>(_:)(&v46, &type metadata for String, v19);
    v42 = v21;
    v43 = v20 & 1;
    v44 = v22;
    v45 = 1;
    _ConditionalContent<>.init(storage:)(&v41, &type metadata for Text, &type metadata for Text, &protocol witness table for Text, &protocol witness table for Text);
  }
  else
  {
    sub_1006EC874((uint64_t)v18, v17, 0);
    v23 = swift_retain();
    v24 = v18(v23);
    v26 = v25;
    swift_release();
    v46 = v24;
    v47 = v26;
    v27 = sub_100055B68();
    v28 = Text.init<A>(_:)(&v46, &type metadata for String, v27);
    v30 = v29;
    v41 = v28;
    v42 = v29;
    v32 = v31 & 1;
    v43 = v31 & 1;
    v44 = v33;
    v45 = 0;
    sub_100055BBC(v28, v29, v31 & 1);
    swift_bridgeObjectRetain();
    _ConditionalContent<>.init(storage:)(&v41, &type metadata for Text, &type metadata for Text, &protocol witness table for Text, &protocol witness table for Text);
    sub_1006EC948((uint64_t)v18, v17, 0);
    sub_100055BAC(v28, v30, v32);
    swift_bridgeObjectRelease();
  }
  v34 = v46;
  v35 = v47;
  v36 = v48;
  v37 = v49;
  v38 = v50;
  sub_10004A160((uint64_t)v9, (uint64_t)v6, (uint64_t *)&unk_1011C5160);
  sub_10004A160((uint64_t)v6, a2, (uint64_t *)&unk_1011C5160);
  v39 = a2 + *(int *)(sub_100007E8C((uint64_t *)&unk_1011C5170) + 48);
  *(_QWORD *)v39 = v34;
  *(_QWORD *)(v39 + 8) = v35;
  *(_QWORD *)(v39 + 16) = v36;
  *(_QWORD *)(v39 + 24) = v37;
  *(_BYTE *)(v39 + 32) = v38;
  sub_10034A204(v34, v35, v36);
  sub_10004FF60((uint64_t)v9, (uint64_t *)&unk_1011C5160);
  sub_10034A22C(v34, v35, v36, v37);
  return sub_10004FF60((uint64_t)v6, (uint64_t *)&unk_1011C5160);
}

uint64_t sub_1006F391C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  unint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  __n128 v55;
  uint64_t v56;
  void (*v57)(char *, char *, uint64_t);
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  int *v63;
  void (*v64)(char *, uint64_t);
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  char *v71;
  char *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;

  v75 = a2;
  v76 = a1;
  v3 = type metadata accessor for SharePlayProxCard(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Locale(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_10119DFD8);
  v73 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v74 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v72 = (char *)&v66 - v16;
  __chkstk_darwin(v17);
  v71 = (char *)&v66 - v18;
  __chkstk_darwin(v19);
  v70 = (char *)&v66 - v20;
  __chkstk_darwin(v21);
  v69 = (char *)&v66 - v22;
  __chkstk_darwin(v23);
  v78 = (char *)&v66 - v24;
  __chkstk_darwin(v25);
  v77 = (char *)&v66 - v26;
  __chkstk_darwin(v27);
  v79 = (char *)&v66 - v28;
  v29 = String.LocalizationValue.init(stringLiteral:)(0x6D614E2074696445, 0xE900000000000065);
  static Locale.current.getter(v29);
  v80 = String.init(localized:table:bundle:locale:comment:)(v12, 0, 0, 0, v9, 0, 0, 256);
  v81 = v30;
  sub_10005B704(a1, (uint64_t)v6, type metadata accessor for SharePlayProxCard);
  v31 = *(unsigned __int8 *)(v4 + 80);
  v32 = (v31 + 16) & ~v31;
  v33 = v32 + v5;
  v34 = v31 | 7;
  v68 = v31 | 7;
  v35 = swift_allocObject(&unk_1010D7F68, v32 + v5, v31 | 7);
  sub_1006F4FF8((uint64_t)v6, v35 + v32);
  v67 = sub_100055B68();
  Button<>.init<A>(_:action:)(&v80, sub_1006F503C, v35, &type metadata for String, v67, v36);
  v37 = String.LocalizationValue.init(stringLiteral:)(0x502065736F6F6843, 0xEC0000006F746F68);
  static Locale.current.getter(v37);
  v80 = String.init(localized:table:bundle:locale:comment:)(v12, 0, 0, 0, v9, 0, 0, 256);
  v81 = v38;
  v39 = v76;
  sub_10005B704(v76, (uint64_t)v6, type metadata accessor for SharePlayProxCard);
  v66 = v33;
  v40 = swift_allocObject(&unk_1010D7F90, v33, v34);
  sub_1006F4FF8((uint64_t)v6, v40 + v32);
  v41 = v77;
  v42 = v67;
  Button<>.init<A>(_:action:)(&v80, sub_1006F51D8, v40, &type metadata for String, v67, v43);
  v44 = String.LocalizationValue.init(stringLiteral:)(0x6F685020656B6154, 0xEA00000000006F74);
  static Locale.current.getter(v44);
  v80 = String.init(localized:table:bundle:locale:comment:)(v12, 0, 0, 0, v9, 0, 0, 256);
  v81 = v45;
  sub_10005B704(v39, (uint64_t)v6, type metadata accessor for SharePlayProxCard);
  v46 = v33;
  v47 = v68;
  v48 = swift_allocObject(&unk_1010D7FB8, v46, v68);
  sub_1006F4FF8((uint64_t)v6, v48 + v32);
  v49 = v78;
  Button<>.init<A>(_:action:)(&v80, sub_1006F51E8, v48, &type metadata for String, v42, v50);
  v51 = String.LocalizationValue.init(stringLiteral:)(0x502065766F6D6552, 0xEC0000006F746F68);
  static Locale.current.getter(v51);
  v80 = String.init(localized:table:bundle:locale:comment:)(v12, 0, 0, 0, v9, 0, 0, 256);
  v81 = v52;
  sub_10005B704(v76, (uint64_t)v6, type metadata accessor for SharePlayProxCard);
  v53 = swift_allocObject(&unk_1010D7FE0, v66, v47);
  sub_1006F4FF8((uint64_t)v6, v53 + v32);
  v54 = v69;
  Button<>.init<A>(_:action:)(&v80, sub_1006F51F8, v53, &type metadata for String, v42, v55);
  v56 = v73;
  v57 = *(void (**)(char *, char *, uint64_t))(v73 + 16);
  v58 = v70;
  v57(v70, v79, v13);
  v59 = v71;
  v57(v71, v41, v13);
  v60 = v72;
  v57(v72, v49, v13);
  v61 = v74;
  v57(v74, v54, v13);
  v62 = v75;
  v57(v75, v58, v13);
  v63 = (int *)sub_100007E8C(&qword_1011C4E58);
  v57(&v62[v63[12]], v59, v13);
  v57(&v62[v63[16]], v60, v13);
  v57(&v62[v63[20]], v61, v13);
  v64 = *(void (**)(char *, uint64_t))(v56 + 8);
  v64(v54, v13);
  v64(v78, v13);
  v64(v77, v13);
  v64(v79, v13);
  v64(v61, v13);
  v64(v60, v13);
  v64(v59, v13);
  return ((uint64_t (*)(char *, uint64_t))v64)(v58, v13);
}

uint64_t sub_1006F3F38(uint64_t a1)
{
  uint64_t v2;
  __int128 *v3;
  __int128 v4;
  uint64_t v5;
  char *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  v2 = type metadata accessor for SharePlayProxCard(0);
  v3 = (__int128 *)(a1 + *(int *)(v2 + 40));
  v4 = *v3;
  v13 = *((_QWORD *)v3 + 2);
  v11 = xmmword_100EA93A0;
  v12 = v4;
  v5 = sub_100007E8C(&qword_1011BB9B0);
  State.wrappedValue.setter(&v11, v5);
  v6 = (char *)(a1 + *(int *)(v2 + 32));
  v7 = *v6;
  v8 = *((_QWORD *)v6 + 1);
  LOBYTE(v12) = v7;
  *((_QWORD *)&v12 + 1) = v8;
  LOBYTE(v11) = 1;
  v9 = sub_100007E8C(&qword_1011C4DD0);
  return State.wrappedValue.setter(&v11, v9);
}

uint64_t sub_1006F3FE8(uint64_t a1)
{
  uint64_t v2;
  __int128 *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];
  __int128 v12;
  uint64_t v13;

  v2 = type metadata accessor for SharePlayProxCard(0);
  v3 = (__int128 *)(a1 + *(int *)(v2 + 40));
  v4 = *((_QWORD *)v3 + 2);
  v12 = *v3;
  v13 = v4;
  v11[0] = 0;
  v11[1] = 0;
  v5 = sub_100007E8C(&qword_1011BB9B0);
  State.wrappedValue.setter(v11, v5);
  v6 = (char *)(a1 + *(int *)(v2 + 32));
  v7 = *v6;
  v8 = *((_QWORD *)v6 + 1);
  LOBYTE(v12) = v7;
  *((_QWORD *)&v12 + 1) = v8;
  LOBYTE(v11[0]) = 1;
  v9 = sub_100007E8C(&qword_1011C4DD0);
  return State.wrappedValue.setter(v11, v9);
}

void sub_1006F4094(uint64_t a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;

  v1 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for SharePlayProxCard(0) + 20) + 8);
  KeyPath = swift_getKeyPath(&unk_100ECBC80);
  v3 = swift_getKeyPath(&unk_100ECBCA8);
  v7 = 0;
  swift_retain_n(v1, 2);
  static Published.subscript.setter(&v7, v1, KeyPath, v3);
  v4 = swift_getKeyPath(&unk_100ECBC80);
  v5 = swift_getKeyPath(&unk_100ECBCA8);
  static Published.subscript.getter(&v7, v1, v4, v5);
  swift_release();
  swift_release();
  v6 = v7;

  if (v6)
    *(_BYTE *)(v1 + OBJC_IVAR____TtCV5Music17SharePlayProxCard9CardState_removedImage) = 0;
  swift_release();
  *(_BYTE *)(v1 + OBJC_IVAR____TtCV5Music17SharePlayProxCard9CardState_removedImage) = 1;
}

uint64_t sub_1006F4190@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  int *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  __int128 *v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  char *v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _OWORD *v30;
  __int128 v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  _QWORD v39[3];
  __int128 v40;
  __int128 v41;
  __int128 v42;

  v36 = a2;
  v3 = type metadata accessor for ImagePicker(0);
  __chkstk_darwin(v3);
  v5 = (uint64_t *)((char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = (int *)type metadata accessor for SharePlayProxCard(0);
  v7 = (uint64_t *)(a1 + v6[5]);
  v8 = *v7;
  v9 = v7[1];
  v10 = type metadata accessor for SharePlayProxCard.CardState(0);
  v11 = sub_1006F4BB4();
  v12 = ObservedObject.projectedValue.getter(v8, v9, v10, v11);
  KeyPath = swift_getKeyPath(&unk_100ECBC80);
  ObservedObject.Wrapper.subscript.getter(v39, KeyPath, v12, v11);
  swift_release();
  swift_release();
  v14 = v39[2];
  v34 = v39[1];
  v35 = v39[0];
  v15 = (__int128 *)(a1 + v6[10]);
  v16 = *((_QWORD *)v15 + 2);
  v37 = *v15;
  v38 = v16;
  v17 = sub_100007E8C(&qword_1011BB9B0);
  State.projectedValue.getter(&v40, v17);
  v18 = v40;
  v19 = v41;
  v20 = (char *)(a1 + v6[8]);
  v21 = *v20;
  v22 = *((_QWORD *)v20 + 1);
  LOBYTE(v37) = v21;
  *((_QWORD *)&v37 + 1) = v22;
  v23 = sub_100007E8C(&qword_1011C4DD0);
  State.projectedValue.getter(&v40, v23);
  v24 = v40;
  LOBYTE(v10) = v41;
  v25 = UIImagePickerController.profileImagePickerProperties.unsafeMutableAddressor();
  ImagePicker.init(pickedImage:sourceType:shouldPresent:didPickImage:editingControllerProperties:)(v35, v34, v14, v18, *((uint64_t *)&v18 + 1), v19, *((uint64_t *)&v19 + 1), v24, v5, *((uint64_t *)&v24 + 1), v10, 0, 0, *v25);
  v26 = swift_bridgeObjectRetain();
  v27 = static Alignment.center.getter(v26);
  _FrameLayout.init(width:height:alignment:)(&v40, 0, 0, 0, 0, v27, v28);
  v29 = v36;
  sub_10005B704((uint64_t)v5, v36, type metadata accessor for ImagePicker);
  v30 = (_OWORD *)(v29 + *(int *)(sub_100007E8C(&qword_1011C4E50) + 36));
  v31 = v41;
  *v30 = v40;
  v30[1] = v31;
  v30[2] = v42;
  return sub_10005B748((uint64_t)v5, type metadata accessor for ImagePicker);
}

uint64_t sub_1006F43B4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100ECBC80);
  v5 = swift_getKeyPath(&unk_100ECBCA8);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_1006F4430@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t KeyPath;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  void (*v51)(char *, char *, uint64_t);
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  void (*v56)(char *, char *, uint64_t);
  uint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t);
  void (*v63)(char *, uint64_t);
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  _QWORD v77[2];
  _QWORD v78[6];

  v76 = a2;
  v3 = sub_100007E8C((uint64_t *)&unk_1011C4E20);
  __chkstk_darwin(v3);
  v68 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_100007E8C(&qword_10119DFD8);
  v74 = *(_QWORD *)(v72 - 8);
  __chkstk_darwin(v72);
  v75 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v73 = (char *)&v65 - v7;
  __chkstk_darwin(v8);
  v71 = (char *)&v65 - v9;
  __chkstk_darwin(v10);
  v12 = (char *)&v65 - v11;
  v13 = type metadata accessor for Locale(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_100007E8C(&qword_1011C4E30);
  v67 = *(_QWORD *)(v70 - 8);
  v19 = v67;
  __chkstk_darwin(v70);
  v69 = (char *)&v65 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v65 - v22;
  v24 = String.LocalizationValue.init(stringLiteral:)(1701667150, 0xE400000000000000);
  static Locale.current.getter(v24);
  v25 = String.init(localized:table:bundle:locale:comment:)(v18, 0, 0, 0, v15, 0, 0, 256);
  v27 = v26;
  v28 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SharePlayProxCard(0) + 20));
  v29 = *v28;
  v30 = v28[1];
  v31 = type metadata accessor for SharePlayProxCard.CardState(0);
  v32 = sub_1006F4BB4();
  v33 = ObservedObject.projectedValue.getter(v29, v30, v31, v32);
  KeyPath = swift_getKeyPath(&unk_100ECBC38);
  ObservedObject.Wrapper.subscript.getter(v78, KeyPath, v33, v32);
  swift_release();
  swift_release();
  v35 = v78[0];
  v36 = v78[1];
  v37 = v78[2];
  v38 = v78[3];
  v77[0] = v25;
  v77[1] = v27;
  v39 = sub_100055B68();
  v66 = v23;
  TextField<>.init<A>(_:text:onEditingChanged:onCommit:)(v77, v35, v36, v37, v38, UIScreen.Dimensions.size.getter, 0, UIScreen.Dimensions.size.getter, 0, &type metadata for String, v39);
  v40 = LocalizedStringKey.init(stringLiteral:)(1701736260, 0xE400000000000000);
  v65 = v12;
  Button<>.init(_:action:)(v40);
  v41 = LocalizedStringKey.init(stringLiteral:)(0x6C65636E6143, 0xE600000000000000);
  v43 = v42;
  LOBYTE(v35) = v44;
  v46 = v45;
  v47 = v68;
  static ButtonRole.cancel.getter(v41);
  v48 = type metadata accessor for ButtonRole(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v47, 0, 1, v48);
  v49 = v35 & 1;
  v50 = v71;
  Button<>.init(_:role:action:)(v41, v43, v49, v46, v47, UIScreen.Dimensions.size.getter, 0);
  v51 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
  v53 = v69;
  v52 = v70;
  v51(v69, v23, v70);
  v54 = v73;
  v55 = v74;
  v56 = *(void (**)(char *, char *, uint64_t))(v74 + 16);
  v57 = v72;
  v56(v73, v12, v72);
  v58 = v75;
  v59 = v50;
  v56(v75, v50, v57);
  v60 = v76;
  v51(v76, v53, v52);
  v61 = sub_100007E8C((uint64_t *)&unk_1011C4E40);
  v56(&v60[*(int *)(v61 + 48)], v54, v57);
  v56(&v60[*(int *)(v61 + 64)], v58, v57);
  v62 = *(void (**)(char *, uint64_t))(v55 + 8);
  v62(v59, v57);
  v62(v65, v57);
  v63 = *(void (**)(char *, uint64_t))(v67 + 8);
  v63(v66, v52);
  v62(v58, v57);
  v62(v54, v57);
  return ((uint64_t (*)(char *, uint64_t))v63)(v53, v52);
}

uint64_t sub_1006F48CC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  _QWORD v8[2];

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100ECBC38);
  v5 = swift_getKeyPath(&unk_100ECBC60);
  static Published.subscript.getter(v8, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  v7 = v8[1];
  *a2 = v8[0];
  a2[1] = v7;
  return result;
}

uint64_t sub_1006F4948(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  _QWORD v8[2];

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_100ECBC38);
  v6 = swift_getKeyPath(&unk_100ECBC60);
  v8[0] = v3;
  v8[1] = v2;
  swift_bridgeObjectRetain(v2);
  swift_retain(v4);
  return static Published.subscript.setter(v8, v4, KeyPath, v6);
}

uint64_t sub_1006F49C8(uint64_t a1)
{
  char *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[9];
  uint64_t v7;

  v1 = (char *)(a1 + *(int *)(type metadata accessor for SharePlayProxCard(0) + 36));
  v2 = *v1;
  v3 = *((_QWORD *)v1 + 1);
  v6[1] = v2;
  v7 = v3;
  v6[0] = 1;
  v4 = sub_100007E8C(&qword_1011C4DD0);
  return State.wrappedValue.setter(v6, v4);
}

uint64_t sub_1006F4A30(uint64_t a1)
{
  char *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[9];
  uint64_t v7;

  v1 = (char *)(a1 + *(int *)(type metadata accessor for SharePlayProxCard(0) + 28));
  v2 = *v1;
  v3 = *((_QWORD *)v1 + 1);
  v6[1] = v2;
  v7 = v3;
  v6[0] = 1;
  v4 = sub_100007E8C(&qword_1011C4DD0);
  return State.wrappedValue.setter(v6, v4);
}

uint64_t sub_1006F4A9C@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_1006F391C(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1006F4AA4@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_1006F4430(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1006F4AAC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1011C4E00;
  if (!qword_1011C4E00)
  {
    v1 = sub_100044B54(&qword_1011C4DC0);
    v2[0] = sub_100044B54(&qword_1011C4DB0);
    v2[1] = sub_100044B54(&qword_1011C4DD8);
    v2[2] = sub_100049F28(&qword_1011C4DE0, &qword_1011C4DB0, (uint64_t)&protocol conformance descriptor for VStack<A>);
    v2[3] = sub_100049F28(&qword_1011C4DE8, &qword_1011C4DD8, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.confirmationDialog<A>(_:isPresented:titleVisibility:actions:)>>, 1);
    sub_100049F28((unint64_t *)&unk_1011C4E08, &qword_1011C4DF0, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C4E00);
  }
  return result;
}

unint64_t sub_1006F4BB4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C4E38;
  if (!qword_1011C4E38)
  {
    v1 = type metadata accessor for SharePlayProxCard.CardState(255);
    result = swift_getWitnessTable(&unk_100ECBC00, v1);
    atomic_store(result, (unint64_t *)&qword_1011C4E38);
  }
  return result;
}

uint64_t sub_1006F4C04@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100ECBD58);
  v5 = swift_getKeyPath(&unk_100ECBD80);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_1006F4C80(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100ECBD58);
  v5 = swift_getKeyPath(&unk_100ECBD80);
  v7 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

void sub_1006F4CF4(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  sub_1006F4F20(v1);

}

uint64_t sub_1006F4D30@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1006F4D58(unsigned __int8 *a1)
{
  return EnvironmentValues.multilineTextAlignment.setter(*a1);
}

uint64_t sub_1006F4D7C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1006F4DA4(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.font.setter(v1);
}

uint64_t sub_1006F4DCC()
{
  return EnvironmentValues.textCase.getter();
}

uint64_t sub_1006F4DEC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = sub_100007E8C((uint64_t *)&unk_1011A4380);
  __chkstk_darwin(v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(a1, (uint64_t)v4, (uint64_t *)&unk_1011A4380);
  return EnvironmentValues.textCase.setter(v4);
}

uint64_t sub_1006F4E6C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1006F4E94(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.foregroundColor.setter(v1);
}

uint64_t sub_1006F4EBC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.isEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1006F4EE8(unsigned __int8 *a1)
{
  return EnvironmentValues.isEnabled.setter(*a1);
}

_BYTE *sub_1006F4F0C(_BYTE *result, char a2)
{
  *result &= a2 ^ 1;
  return result;
}

void sub_1006F4F20(void *a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;

  KeyPath = swift_getKeyPath(&unk_100ECBC80);
  v4 = swift_getKeyPath(&unk_100ECBCA8);
  v9 = a1;
  v5 = a1;
  swift_retain(v1);
  static Published.subscript.setter(&v9, v1, KeyPath, v4);
  v6 = swift_getKeyPath(&unk_100ECBC80);
  v7 = swift_getKeyPath(&unk_100ECBCA8);
  static Published.subscript.getter(&v9, v1, v6, v7);
  swift_release(v6);
  swift_release(v7);
  v8 = v9;

  if (v8)
    *(_BYTE *)(v1 + OBJC_IVAR____TtCV5Music17SharePlayProxCard9CardState_removedImage) = 0;
}

uint64_t sub_1006F4FF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SharePlayProxCard(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1006F5044()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = type metadata accessor for SharePlayProxCard(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = v0 + v3;
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = (int *)type metadata accessor for SharePlayProxCard.ViewModel(0);
  v7 = v0 + v3 + v6[10];
  v8 = type metadata accessor for Artwork(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(unint64_t, uint64_t))(v9 + 8))(v7, v8);

  swift_bridgeObjectRelease();
  sub_1006EC948(*(_QWORD *)(v5 + v6[13]), *(_QWORD *)(v5 + v6[13] + 8), *(_BYTE *)(v5 + v6[13] + 16));
  swift_release();
  if (*(_QWORD *)(v5 + *(int *)(v1 + 24)))
    swift_release();
  swift_release();
  swift_release();
  swift_release();
  v10 = v5 + *(int *)(v1 + 40);
  if (*(_QWORD *)v10 >= 3uLL)
  {
    swift_bridgeObjectRelease();

  }
  swift_release();
  return swift_deallocObject(v0, v3 + v4);
}

uint64_t sub_1006F51D8()
{
  return sub_1006F5938(sub_1006F3F38);
}

uint64_t sub_1006F51E8()
{
  return sub_1006F5938(sub_1006F3FE8);
}

uint64_t sub_1006F51F8()
{
  return sub_1006F5938((uint64_t (*)(uint64_t))sub_1006F4094);
}

uint64_t sub_1006F5204@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1006F522C(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.font.setter(v1);
}

uint64_t sub_1006F5254@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1006F527C(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.foregroundColor.setter(v1);
}

uint64_t sub_1006F52A4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1006F52CC(unsigned __int8 *a1)
{
  return EnvironmentValues.multilineTextAlignment.setter(*a1);
}

uint64_t sub_1006F52FC()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t (**v3)(void);

  result = type metadata accessor for SharePlayProxCard(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(result - 8) + 80);
  v3 = (uint64_t (**)(void))(v0 + *(int *)(result + 24) + ((v2 + 16) & ~v2));
  if (*v3)
    return (*v3)();
  return result;
}

uint64_t sub_1006F5348@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1006F3204(*(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), a1);
}

uint64_t sub_1006F5354()
{
  return sub_1006F5370((unint64_t *)&unk_1011C4F60, &qword_1011A2C18, (void (*)(void))sub_1006F53DC);
}

uint64_t sub_1006F5370(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_100044B54(a2);
    a3();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1006F53DC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011C4F70;
  if (!qword_1011C4F70)
  {
    v1 = sub_100044B54(&qword_1011C4F78);
    v2[0] = sub_100044B54(&qword_1011C4F80);
    v2[1] = sub_1006F5488();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.bold(_:)>>, 1);
    sub_100049F28((unint64_t *)&qword_1011A4620, &qword_1011B5800, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C4F70);
  }
  return result;
}

unint64_t sub_1006F5488()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C4F88;
  if (!qword_1011C4F88)
  {
    v1 = sub_100044B54(&qword_1011C4F80);
    sub_100049F28(&qword_1011C4F90, &qword_1011C4F98, (uint64_t)&protocol conformance descriptor for HStack<A>);
    sub_100049F28(&qword_1011A0FB0, &qword_1011A43F0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C4F88);
  }
  return result;
}

uint64_t sub_1006F5524@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.isEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1006F5550(unsigned __int8 *a1)
{
  return EnvironmentValues.isEnabled.setter(*a1);
}

uint64_t sub_1006F5574()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

_BYTE *sub_1006F5584(_BYTE *result)
{
  uint64_t v1;

  *result &= ~*(_BYTE *)(v1 + 16) & 1;
  return result;
}

uint64_t sub_1006F559C()
{
  return EnvironmentValues.textCase.getter();
}

uint64_t sub_1006F55C0()
{
  return EnvironmentValues.openURL.getter();
}

uint64_t sub_1006F55E4(uint64_t a1)
{
  sub_100055BBC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1006F5658(uint64_t a1)
{
  sub_100055BAC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return a1;
}

unint64_t sub_1006F56CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C5020;
  if (!qword_1011C5020)
  {
    v1 = sub_100044B54(&qword_1011C5018);
    sub_1006F5730();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C5020);
  }
  return result;
}

unint64_t sub_1006F5730()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C5028;
  if (!qword_1011C5028)
  {
    v1 = sub_100044B54(&qword_1011C5030);
    sub_1006F589C(&qword_1011C5038, &qword_1011C5040, (void (*)(void))sub_1006F57B4);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C5028);
  }
  return result;
}

unint64_t sub_1006F57B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C5048;
  if (!qword_1011C5048)
  {
    v1 = sub_100044B54(&qword_1011C5050);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C5048);
  }
  return result;
}

unint64_t sub_1006F5818()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C5068;
  if (!qword_1011C5068)
  {
    v1 = sub_100044B54(&qword_1011C4FF8);
    sub_1006F589C((unint64_t *)&unk_1011C5070, &qword_1011C4FF0, (void (*)(void))sub_10034A0C4);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C5068);
  }
  return result;
}

uint64_t sub_1006F589C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_100044B54(a2);
    a3();
    sub_100049F28(&qword_1011C5058, &qword_1011C5060, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1006F592C()
{
  return sub_1006F5938(sub_1006F4A30);
}

uint64_t sub_1006F5938(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SharePlayProxCard(0) - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

uint64_t sub_1006F5980()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SharePlayProxCard(0) - 8) + 80);
  return sub_1006F49C8(v0 + ((v1 + 16) & ~v1));
}

unint64_t sub_1006F59B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C5138;
  if (!qword_1011C5138)
  {
    v1 = sub_100044B54(&qword_1011C5128);
    sub_100049F28(&qword_1011C5140, &qword_10119DFD8, (uint64_t)&protocol conformance descriptor for Button<A>);
    sub_100049F28((unint64_t *)&qword_1011A4620, &qword_1011B5800, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C5138);
  }
  return result;
}

uint64_t sub_1006F5A4C()
{
  uint64_t v0;
  void *v1;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  v1 = *(void **)(v0 + 64);
  if (v1 != (void *)1)

  return swift_deallocObject(v0, 88, 7);
}

uint64_t sub_1006F5A98(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (uint64_t)(v1 + 4);
  v7 = v1[10];
  v8 = (_QWORD *)swift_task_alloc(dword_1011C518C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10005AEE4;
  return sub_1006EBB08(a1, v4, v5, v6, v7);
}

uint64_t sub_1006F5B14()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1006F5B40(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1011C51A4);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10006AEE4;
  return sub_1006EC0AC(a1, v4, v5, v6);
}

uint64_t sub_1006F5BAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

void sub_1006F5BD0()
{
  uint64_t v0;

  sub_1006EB55C(v0);
}

uint64_t destroy for SharePlayProxCard.ButtonTitle(uint64_t a1)
{
  return sub_1006EC948(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s5Music17SharePlayProxCardV11ButtonTitleOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1006EC874(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for SharePlayProxCard.ButtonTitle(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1006EC874(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_1006EC948(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for SharePlayProxCard.ButtonTitle(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_1006EC948(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for SharePlayProxCard.ButtonTitle()
{
  return &type metadata for SharePlayProxCard.ButtonTitle;
}

uint64_t sub_1006F5CDC()
{
  _QWORD v1[6];

  v1[0] = sub_100044B54(&qword_1011C4DC0);
  v1[1] = &type metadata for String;
  v1[2] = sub_100044B54(&qword_1011C4DF8);
  v1[3] = sub_1006F4AAC();
  v1[4] = sub_100055B68();
  v1[5] = sub_100049F28(&qword_1011C4E18, &qword_1011C4DF8, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.alert<A, B>(_:isPresented:actions:)>>, 1);
}

uint64_t *sub_1006F5D80(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  void *v69;
  int *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  id v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t *v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  uint64_t *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v130;
  uint64_t v131;
  unsigned int (*__dst)(char *, uint64_t, uint64_t);
  char *__dsta;
  int *v134;
  unsigned int (*v135)(uint64_t *, uint64_t, uint64_t);
  uint64_t v136;
  uint64_t v137;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for GenericMusicItem(0);
    v8 = *(_QWORD *)(v7 - 8);
    v135 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    v136 = v7;
    v130 = v8;
    if (v135(a2, 1, v7))
    {
      v9 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = (int *)type metadata accessor for Featured(0);
    v12 = v11[5];
    v13 = (uint64_t *)((char *)a1 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = v11[6];
    v17 = (uint64_t *)((char *)a1 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = v11[7];
    v21 = (uint64_t *)((char *)a1 + v20);
    v22 = (uint64_t *)((char *)a2 + v20);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    v24 = v11[8];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    v27 = type metadata accessor for ArtworkImage.ViewModel(0);
    v131 = *(_QWORD *)(v27 - 8);
    v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v131 + 48);
    v29 = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __dst = v28;
    v137 = v29;
    if (v28(v26, 1, v29))
    {
      v30 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      v31 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v25, v26, v31);
      v32 = *(int *)(v29 + 20);
      v33 = &v25[v32];
      v34 = &v26[v32];
      v35 = type metadata accessor for Artwork.CropStyle(0);
      v36 = *(_QWORD *)(v35 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
      {
        v37 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v33, v34, v35);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v131 + 56))(v25, 0, 1, v137);
    }
    v38 = v11[9];
    v39 = (char *)a1 + v38;
    v40 = (char *)a2 + v38;
    v41 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    v42 = *(_QWORD *)(v41 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 10, v41))
    {
      v43 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
    else
    {
      v44 = type metadata accessor for Playlist.Variant(0);
      v45 = *(_QWORD *)(v44 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v40, 1, v44))
      {
        v46 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v39, v40, v44);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v39, 0, 1, v44);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 10, v41);
    }
    v134 = v11;
    v47 = v11[10];
    v48 = (uint64_t *)((char *)a1 + v47);
    v49 = (char *)a2 + v47;
    v50 = *(uint64_t *)((char *)a2 + v47 + 8);
    *v48 = *(uint64_t *)((char *)a2 + v47);
    v48[1] = v50;
    v51 = *(uint64_t *)((char *)a2 + v47 + 24);
    v48[2] = *(uint64_t *)((char *)a2 + v47 + 16);
    v48[3] = v51;
    v52 = *(int *)(type metadata accessor for Featured.Caption(0) + 24);
    v53 = (char *)v48 + v52;
    v54 = &v49[v52];
    *v53 = v49[v52];
    v55 = type metadata accessor for Featured.Caption.Thumbnail(0);
    v56 = *(int *)(v55 + 20);
    v57 = &v53[v56];
    v58 = &v54[v56];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__dst(v58, 1, v137))
    {
      v59 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
      memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    }
    else
    {
      v60 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 16))(v57, v58, v60);
      v61 = *(int *)(v137 + 20);
      __dsta = &v57[v61];
      v62 = &v58[v61];
      v63 = type metadata accessor for Artwork.CropStyle(0);
      v64 = *(_QWORD *)(v63 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63))
      {
        v65 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(__dsta, v62, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v64 + 16))(__dsta, v62, v63);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(__dsta, 0, 1, v63);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v131 + 56))(v57, 0, 1, v137);
    }
    *(_QWORD *)&v53[*(int *)(v55 + 24)] = *(_QWORD *)&v54[*(int *)(v55 + 24)];
    v66 = v134[11];
    v67 = (char *)a1 + v66;
    v68 = (char *)a2 + v66;
    v69 = *(void **)((char *)a2 + v66);
    *(uint64_t *)((char *)a1 + v66) = (uint64_t)v69;
    v70 = (int *)type metadata accessor for SegueContext(0);
    v71 = v70[5];
    v72 = &v67[v71];
    v73 = &v68[v71];
    v74 = v69;
    if (v135((uint64_t *)v73, 1, v136))
    {
      v75 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v72, v73, v136);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v130 + 56))(v72, 0, 1, v136);
    }
    v67[v70[6]] = v68[v70[6]];
    v76 = v70[7];
    v77 = &v67[v76];
    v78 = &v68[v76];
    if (*(_QWORD *)v78)
    {
      v79 = *((_QWORD *)v78 + 1);
      *(_QWORD *)v77 = *(_QWORD *)v78;
      *((_QWORD *)v77 + 1) = v79;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v77 = *(_OWORD *)v78;
    }
    v80 = a3[5];
    v81 = (char *)a1 + v80;
    v82 = (char *)a2 + v80;
    v83 = *(id *)v82;
    v84 = v82[8];
    sub_1000A4100(*(id *)v82, v84);
    *(_QWORD *)v81 = v83;
    v81[8] = v84;
    v85 = a3[6];
    v86 = a3[7];
    v87 = (uint64_t *)((char *)a1 + v85);
    v88 = (uint64_t *)((char *)a2 + v85);
    v89 = *v88;
    v90 = v88[1];
    *v87 = v89;
    v87[1] = v90;
    v91 = (uint64_t *)((char *)a1 + v86);
    v92 = (uint64_t *)((char *)a2 + v86);
    v94 = *v92;
    v93 = v92[1];
    *v91 = v94;
    v91[1] = v93;
    v95 = a3[8];
    v96 = (char *)a1 + v95;
    v97 = (char *)a2 + v95;
    v98 = *(_QWORD *)v97;
    v99 = *((_QWORD *)v97 + 1);
    v100 = v97[16];
    swift_retain();
    swift_retain();
    KeyValueObservationTrigger.keyPath.getter(v98, v99);
    *(_QWORD *)v96 = v98;
    *((_QWORD *)v96 + 1) = v99;
    v96[16] = v100;
    v101 = a3[9];
    v102 = a3[10];
    v103 = (uint64_t *)((char *)a1 + v101);
    v104 = (uint64_t *)((char *)a2 + v101);
    v105 = *v104;
    v106 = v104[1];
    *v103 = v105;
    v103[1] = v106;
    v107 = (uint64_t *)((char *)a1 + v102);
    v108 = (uint64_t *)((char *)a2 + v102);
    v110 = *v108;
    v109 = v108[1];
    *v107 = v110;
    v107[1] = v109;
    v111 = a3[11];
    v112 = a3[12];
    v113 = (uint64_t *)((char *)a1 + v111);
    v114 = (uint64_t *)((char *)a2 + v111);
    v116 = *v114;
    v115 = v114[1];
    *v113 = v116;
    v113[1] = v115;
    v117 = (char *)a1 + v112;
    v118 = *(uint64_t *)((char *)a2 + v112);
    v119 = *(uint64_t *)((char *)a2 + v112 + 8);
    LOBYTE(v96) = *((_BYTE *)a2 + v112 + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1000A410C(v118, v119, (char)v96);
    *(_QWORD *)v117 = v118;
    *((_QWORD *)v117 + 1) = v119;
    v117[16] = (char)v96;
    v120 = a3[13];
    v121 = (char *)a1 + v120;
    v122 = (char *)a2 + v120;
    v123 = *(_QWORD *)v122;
    v124 = *((_QWORD *)v122 + 1);
    LOBYTE(v118) = v122[16];
    sub_1000A411C(*(_QWORD *)v122, v124, v118);
    *(_QWORD *)v121 = v123;
    *((_QWORD *)v121 + 1) = v124;
    v121[16] = v118;
    v125 = a3[14];
    v126 = (char *)a1 + v125;
    v127 = (char *)a2 + v125;
    v128 = sub_100007E8C(&qword_1011A70B8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v128 - 8) + 16))(v126, v127, v128);
  }
  return a1;
}

uint64_t type metadata accessor for Featured(uint64_t a1)
{
  return sub_100055934(a1, qword_1011C5400, (uint64_t)&nominal type descriptor for Featured);
}

uint64_t type metadata accessor for Featured.Caption(uint64_t a1)
{
  return sub_100055934(a1, qword_1011C5368, (uint64_t)&nominal type descriptor for Featured.Caption);
}

uint64_t type metadata accessor for Featured.Caption.Thumbnail(uint64_t a1)
{
  return sub_100055934(a1, qword_1011C52D0, (uint64_t)&nominal type descriptor for Featured.Caption.Thumbnail);
}

uint64_t sub_1006F64CC(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  int *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;

  v4 = type metadata accessor for GenericMusicItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v32 = v5;
  v7 = (int *)type metadata accessor for Featured(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = a1 + v7[8];
  v9 = type metadata accessor for ArtworkImage.ViewModel(0);
  v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48);
  if (!v10(v8, 1, v9))
  {
    v11 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v8, v11);
    v12 = v8 + *(int *)(v9 + 20);
    v13 = type metadata accessor for Artwork.CropStyle(0);
    v14 = *(_QWORD *)(v13 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  }
  v15 = a1 + v7[9];
  v16 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 10, v16))
  {
    v17 = type metadata accessor for Playlist.Variant(0);
    v18 = *(_QWORD *)(v17 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v15, 1, v17))
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v15, v17);
  }
  v19 = a1 + v7[10];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v20 = *(int *)(type metadata accessor for Featured.Caption(0) + 24);
  v21 = v19 + v20 + *(int *)(type metadata accessor for Featured.Caption.Thumbnail(0) + 20);
  if (!v10(v21, 1, v9))
  {
    v22 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
    v23 = v21 + *(int *)(v9 + 20);
    v24 = type metadata accessor for Artwork.CropStyle(0);
    v25 = *(_QWORD *)(v24 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
  }
  v26 = (id *)(a1 + v7[11]);

  v27 = type metadata accessor for SegueContext(0);
  v28 = (char *)v26 + *(int *)(v27 + 20);
  if (!v6((uint64_t)v28, 1, v4))
    (*(void (**)(char *, uint64_t))(v32 + 8))(v28, v4);
  if (*(id *)((char *)v26 + *(int *)(v27 + 28)))
    swift_release();
  sub_1000A4224(*(id *)(a1 + a2[5]), *(_BYTE *)(a1 + a2[5] + 8));
  swift_release();
  swift_release();
  sub_1000A6174(*(_QWORD *)(a1 + a2[8]), *(_QWORD *)(a1 + a2[8] + 8));
  swift_release();
  swift_release();
  swift_release();
  sub_1000A4230(*(_QWORD *)(a1 + a2[12]), *(_QWORD *)(a1 + a2[12] + 8), *(_BYTE *)(a1 + a2[12] + 16));
  sub_1000A4240(*(_QWORD *)(a1 + a2[13]), *(_QWORD *)(a1 + a2[13] + 8), *(_BYTE *)(a1 + a2[13] + 16));
  v29 = a1 + a2[14];
  v30 = sub_100007E8C(&qword_1011A70B8);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v29, v30);
}

char *sub_1006F683C(char *a1, char *a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  void *v67;
  int *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  id v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v129;
  uint64_t v130;
  unsigned int (*__dst)(char *, uint64_t, uint64_t);
  char *__dsta;
  unsigned int (*v133)(char *, uint64_t, uint64_t);
  uint64_t v134;
  uint64_t v136;

  v5 = type metadata accessor for GenericMusicItem(0);
  v6 = *(_QWORD *)(v5 - 8);
  v133 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  v134 = v5;
  v130 = v6;
  if (v133(a2, 1, v5))
  {
    v7 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  v8 = (int *)type metadata accessor for Featured(0);
  v9 = v8[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *((_QWORD *)v11 + 1);
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *((_QWORD *)v10 + 1) = v12;
  v13 = v8[6];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = *((_QWORD *)v15 + 1);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *((_QWORD *)v14 + 1) = v16;
  v17 = v8[7];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = *((_QWORD *)v19 + 1);
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *((_QWORD *)v18 + 1) = v20;
  v21 = v8[8];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = type metadata accessor for ArtworkImage.ViewModel(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
  v27 = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __dst = v26;
  if (v26(v23, 1, v27))
  {
    v28 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    v29 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v22, v23, v29);
    v30 = *(int *)(v27 + 20);
    v31 = &v22[v30];
    v32 = &v23[v30];
    v33 = type metadata accessor for Artwork.CropStyle(0);
    v34 = *(_QWORD *)(v33 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
    {
      v35 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v27);
  }
  v136 = v27;
  v36 = v8[9];
  v37 = &a1[v36];
  v38 = &a2[v36];
  v39 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v40 = *(_QWORD *)(v39 - 8);
  v129 = v25;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 10, v39))
  {
    v41 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    v42 = type metadata accessor for Playlist.Variant(0);
    v43 = *(_QWORD *)(v42 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v38, 1, v42))
    {
      v44 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v37, v38, v42);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v37, 0, 1, v42);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 10, v39);
  }
  v45 = v8[10];
  v46 = &a1[v45];
  v47 = &a2[v45];
  v48 = *(_QWORD *)&a2[v45 + 8];
  *(_QWORD *)v46 = *(_QWORD *)&a2[v45];
  *((_QWORD *)v46 + 1) = v48;
  v49 = *(_QWORD *)&a2[v45 + 24];
  *((_QWORD *)v46 + 2) = *(_QWORD *)&a2[v45 + 16];
  *((_QWORD *)v46 + 3) = v49;
  v50 = *(int *)(type metadata accessor for Featured.Caption(0) + 24);
  v51 = &v46[v50];
  v52 = &v47[v50];
  *v51 = v47[v50];
  v53 = type metadata accessor for Featured.Caption.Thumbnail(0);
  v54 = *(int *)(v53 + 20);
  v55 = &v51[v54];
  v56 = &v52[v54];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__dst(v56, 1, v136))
  {
    v57 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
  }
  else
  {
    v58 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v55, v56, v58);
    v59 = *(int *)(v136 + 20);
    __dsta = &v55[v59];
    v60 = &v56[v59];
    v61 = type metadata accessor for Artwork.CropStyle(0);
    v62 = *(_QWORD *)(v61 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v60, 1, v61))
    {
      v63 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(__dsta, v60, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v62 + 16))(__dsta, v60, v61);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(__dsta, 0, 1, v61);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v129 + 56))(v55, 0, 1, v136);
  }
  *(_QWORD *)&v51[*(int *)(v53 + 24)] = *(_QWORD *)&v52[*(int *)(v53 + 24)];
  v64 = v8[11];
  v65 = &a1[v64];
  v66 = &a2[v64];
  v67 = *(void **)&a2[v64];
  *(_QWORD *)&a1[v64] = v67;
  v68 = (int *)type metadata accessor for SegueContext(0);
  v69 = v68[5];
  v70 = &v65[v69];
  v71 = &v66[v69];
  v72 = v67;
  if (v133(v71, 1, v134))
  {
    v73 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v70, v71, v134);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v130 + 56))(v70, 0, 1, v134);
  }
  v65[v68[6]] = v66[v68[6]];
  v74 = v68[7];
  v75 = &v65[v74];
  v76 = &v66[v74];
  if (*(_QWORD *)v76)
  {
    v77 = *((_QWORD *)v76 + 1);
    *(_QWORD *)v75 = *(_QWORD *)v76;
    *((_QWORD *)v75 + 1) = v77;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v75 = *(_OWORD *)v76;
  }
  v78 = a3[5];
  v79 = &a1[v78];
  v80 = &a2[v78];
  v81 = *(id *)v80;
  v82 = v80[8];
  sub_1000A4100(*(id *)v80, v82);
  *(_QWORD *)v79 = v81;
  v79[8] = v82;
  v83 = a3[6];
  v84 = a3[7];
  v85 = &a1[v83];
  v86 = &a2[v83];
  v87 = *(_QWORD *)v86;
  v88 = *((_QWORD *)v86 + 1);
  *(_QWORD *)v85 = v87;
  *((_QWORD *)v85 + 1) = v88;
  v89 = &a1[v84];
  v90 = &a2[v84];
  v92 = *(_QWORD *)v90;
  v91 = *((_QWORD *)v90 + 1);
  *(_QWORD *)v89 = v92;
  *((_QWORD *)v89 + 1) = v91;
  v93 = a3[8];
  v94 = &a1[v93];
  v95 = &a2[v93];
  v96 = *(_QWORD *)v95;
  v97 = *((_QWORD *)v95 + 1);
  v98 = v95[16];
  swift_retain();
  swift_retain();
  KeyValueObservationTrigger.keyPath.getter(v96, v97);
  *(_QWORD *)v94 = v96;
  *((_QWORD *)v94 + 1) = v97;
  v94[16] = v98;
  v99 = a3[9];
  v100 = a3[10];
  v101 = &a1[v99];
  v102 = &a2[v99];
  v103 = *(_QWORD *)v102;
  v104 = *((_QWORD *)v102 + 1);
  *(_QWORD *)v101 = v103;
  *((_QWORD *)v101 + 1) = v104;
  v105 = &a1[v100];
  v106 = &a2[v100];
  v108 = *(_QWORD *)v106;
  v107 = *((_QWORD *)v106 + 1);
  *(_QWORD *)v105 = v108;
  *((_QWORD *)v105 + 1) = v107;
  v109 = a3[11];
  v110 = a3[12];
  v111 = &a1[v109];
  v112 = &a2[v109];
  v114 = *(_QWORD *)v112;
  v113 = *((_QWORD *)v112 + 1);
  *(_QWORD *)v111 = v114;
  *((_QWORD *)v111 + 1) = v113;
  v115 = &a1[v110];
  v116 = *(_QWORD *)&a2[v110];
  v117 = *(_QWORD *)&a2[v110 + 8];
  v118 = a2[v110 + 16];
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000A410C(v116, v117, v118);
  *(_QWORD *)v115 = v116;
  *((_QWORD *)v115 + 1) = v117;
  v115[16] = v118;
  v119 = a3[13];
  v120 = &a1[v119];
  v121 = &a2[v119];
  v122 = *(_QWORD *)v121;
  v123 = *((_QWORD *)v121 + 1);
  LOBYTE(v116) = v121[16];
  sub_1000A411C(*(_QWORD *)v121, v123, v116);
  *(_QWORD *)v120 = v122;
  *((_QWORD *)v120 + 1) = v123;
  v120[16] = v116;
  v124 = a3[14];
  v125 = &a1[v124];
  v126 = &a2[v124];
  v127 = sub_100007E8C(&qword_1011A70B8);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v127 - 8) + 16))(v125, v126, v127);
  return a1;
}

char *sub_1006F6F18(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  int v27;
  int v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(char *, uint64_t, uint64_t);
  int v44;
  int v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(char *, uint64_t, uint64_t);
  int v52;
  int v53;
  int *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(char *, uint64_t, uint64_t);
  int v62;
  int v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  int v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  size_t v82;
  void *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t (*v91)(void *, uint64_t, uint64_t);
  int v92;
  uint64_t v93;
  void **v94;
  char *v95;
  void *v96;
  void *v97;
  id v98;
  int *v99;
  uint64_t v100;
  char *v101;
  char *v102;
  int v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  id v114;
  char v115;
  void *v116;
  char v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char v146;
  uint64_t v147;
  uint64_t v148;
  char v149;
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  unint64_t v154;
  char v155;
  uint64_t v156;
  unint64_t v157;
  char v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  uint64_t v164;
  void *v165;
  uint64_t v166;
  uint64_t v167;
  int *v168;
  uint64_t (*__dst)(char *, uint64_t, uint64_t);
  void *__dsta;
  int *v171;
  uint64_t (*v172)(char *, uint64_t, uint64_t);

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  v168 = a3;
  v166 = v7;
  v172 = v8;
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = (int *)type metadata accessor for Featured(0);
  v13 = v12[5];
  v14 = &a1[v13];
  v15 = &a2[v13];
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *((_QWORD *)v14 + 1) = *((_QWORD *)v15 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = v12[6];
  v17 = &a1[v16];
  v18 = &a2[v16];
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = v12[7];
  v20 = &a1[v19];
  v21 = &a2[v19];
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = v12[8];
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = type metadata accessor for ArtworkImage.ViewModel(0);
  v164 = *(_QWORD *)(v25 - 8);
  v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v164 + 48);
  v27 = v26(v23, 1, v25);
  v28 = v26(v24, 1, v25);
  v167 = v6;
  __dst = v26;
  if (!v27)
  {
    if (!v28)
    {
      v39 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 24))(v23, v24, v39);
      v40 = *(int *)(v25 + 20);
      v23 += v40;
      v24 += v40;
      v41 = type metadata accessor for Artwork.CropStyle(0);
      v42 = *(_QWORD *)(v41 - 8);
      v43 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v42 + 48);
      v44 = v43(v23, 1, v41);
      v45 = v43(v24, 1, v41);
      if (v44)
      {
        if (!v45)
        {
          (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v23, v24, v41);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v23, 0, 1, v41);
          goto LABEL_21;
        }
      }
      else
      {
        if (!v45)
        {
          (*(void (**)(char *, char *, uint64_t))(v42 + 24))(v23, v24, v41);
          goto LABEL_21;
        }
        (*(void (**)(char *, uint64_t))(v42 + 8))(v23, v41);
      }
      v37 = (uint64_t *)&unk_1011A14A0;
LABEL_14:
      v38 = sub_100007E8C(v37);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      goto LABEL_21;
    }
    sub_10005B748((uint64_t)v23, type metadata accessor for ArtworkImage.ViewModel);
LABEL_13:
    v37 = (uint64_t *)&unk_1011A3E10;
    goto LABEL_14;
  }
  if (v28)
    goto LABEL_13;
  v29 = v12;
  v30 = type metadata accessor for Artwork(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v23, v24, v30);
  v31 = *(int *)(v25 + 20);
  v32 = &v23[v31];
  v33 = &v24[v31];
  v34 = type metadata accessor for Artwork.CropStyle(0);
  v35 = *(_QWORD *)(v34 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
  {
    v36 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
  }
  v12 = v29;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v164 + 56))(v23, 0, 1, v25);
LABEL_21:
  v46 = v12[9];
  v47 = &a1[v46];
  v48 = &a2[v46];
  v49 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v50 = *(_QWORD *)(v49 - 8);
  v51 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v50 + 48);
  v52 = v51(v47, 10, v49);
  v53 = v51(v48, 10, v49);
  if (!v52)
  {
    if (!v53)
    {
      v59 = type metadata accessor for Playlist.Variant(0);
      v60 = *(_QWORD *)(v59 - 8);
      v61 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v60 + 48);
      v62 = v61(v47, 1, v59);
      v63 = v61(v48, 1, v59);
      if (v62)
      {
        if (!v63)
        {
          (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v47, v48, v59);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v47, 0, 1, v59);
          goto LABEL_34;
        }
      }
      else
      {
        if (!v63)
        {
          (*(void (**)(char *, char *, uint64_t))(v60 + 24))(v47, v48, v59);
          goto LABEL_34;
        }
        (*(void (**)(char *, uint64_t))(v60 + 8))(v47, v59);
      }
      v58 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
LABEL_28:
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      goto LABEL_34;
    }
    sub_10004FF60((uint64_t)v47, (uint64_t *)&unk_1011A3DB0);
LABEL_27:
    v58 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_28;
  }
  if (v53)
    goto LABEL_27;
  v54 = v12;
  v55 = type metadata accessor for Playlist.Variant(0);
  v56 = *(_QWORD *)(v55 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v48, 1, v55))
  {
    v57 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v47, v48, v55);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v47, 0, 1, v55);
  }
  v12 = v54;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 10, v49);
LABEL_34:
  v171 = v12;
  v64 = v12[10];
  v65 = &a1[v64];
  v66 = &a2[v64];
  *(_QWORD *)v65 = *(_QWORD *)&a2[v64];
  *((_QWORD *)v65 + 1) = *(_QWORD *)&a2[v64 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v65 + 2) = *((_QWORD *)v66 + 2);
  *((_QWORD *)v65 + 3) = *((_QWORD *)v66 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v67 = *(int *)(type metadata accessor for Featured.Caption(0) + 24);
  v68 = &v65[v67];
  v69 = &v66[v67];
  *v68 = v66[v67];
  v70 = type metadata accessor for Featured.Caption.Thumbnail(0);
  v71 = *(int *)(v70 + 20);
  v72 = (uint64_t)&v68[v71];
  v73 = &v69[v71];
  v74 = __dst(&v68[v71], 1, v25);
  v75 = __dst(v73, 1, v25);
  if (!v74)
  {
    if (!v75)
    {
      v85 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v85 - 8) + 24))(v72, v73, v85);
      v86 = *(int *)(v25 + 20);
      v87 = (void *)(v72 + v86);
      v88 = &v73[v86];
      v89 = type metadata accessor for Artwork.CropStyle(0);
      v90 = *(_QWORD *)(v89 - 8);
      v91 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v90 + 48);
      v165 = v87;
      LODWORD(v87) = v91(v87, 1, v89);
      v92 = v91(v88, 1, v89);
      if ((_DWORD)v87)
      {
        if (!v92)
        {
          (*(void (**)(void *, char *, uint64_t))(v90 + 16))(v165, v88, v89);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v165, 0, 1, v89);
          goto LABEL_47;
        }
        v82 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
        v83 = v165;
        v84 = v88;
      }
      else
      {
        if (!v92)
        {
          (*(void (**)(void *, char *, uint64_t))(v90 + 24))(v165, v88, v89);
          goto LABEL_47;
        }
        (*(void (**)(void *, uint64_t))(v90 + 8))(v165, v89);
        v82 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
        v83 = v165;
        v84 = v88;
      }
LABEL_41:
      memcpy(v83, v84, v82);
      goto LABEL_47;
    }
    sub_10005B748(v72, type metadata accessor for ArtworkImage.ViewModel);
LABEL_40:
    v82 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v83 = (void *)v72;
    v84 = v73;
    goto LABEL_41;
  }
  if (v75)
    goto LABEL_40;
  v76 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v76 - 8) + 16))(v72, v73, v76);
  v77 = *(int *)(v25 + 20);
  __dsta = (void *)(v72 + v77);
  v78 = &v73[v77];
  v79 = type metadata accessor for Artwork.CropStyle(0);
  v80 = *(_QWORD *)(v79 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48))(v78, 1, v79))
  {
    v81 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(__dsta, v78, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v80 + 16))(__dsta, v78, v79);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v80 + 56))(__dsta, 0, 1, v79);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v164 + 56))(v72, 0, 1, v25);
LABEL_47:
  *(_QWORD *)&v68[*(int *)(v70 + 24)] = *(_QWORD *)&v69[*(int *)(v70 + 24)];
  v93 = v171[11];
  v94 = (void **)&a1[v93];
  v95 = &a2[v93];
  v96 = *(void **)&a2[v93];
  v97 = *v94;
  *v94 = v96;
  v98 = v96;

  v99 = (int *)type metadata accessor for SegueContext(0);
  v100 = v99[5];
  v101 = (char *)v94 + v100;
  v102 = &v95[v100];
  LODWORD(v97) = v172((char *)v94 + v100, 1, v167);
  v103 = v172(v102, 1, v167);
  if ((_DWORD)v97)
  {
    if (!v103)
    {
      (*(void (**)(char *, char *, uint64_t))(v166 + 16))(v101, v102, v167);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v166 + 56))(v101, 0, 1, v167);
      goto LABEL_53;
    }
    goto LABEL_52;
  }
  if (v103)
  {
    (*(void (**)(char *, uint64_t))(v166 + 8))(v101, v167);
LABEL_52:
    v104 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v101, v102, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
    goto LABEL_53;
  }
  (*(void (**)(char *, char *, uint64_t))(v166 + 24))(v101, v102, v167);
LABEL_53:
  *((_BYTE *)v94 + v99[6]) = v95[v99[6]];
  v105 = v99[7];
  v106 = (void **)((char *)v94 + v105);
  v107 = &v95[v105];
  v108 = *(_QWORD *)&v95[v105];
  if (!*v106)
  {
    if (v108)
    {
      v110 = *((_QWORD *)v107 + 1);
      *v106 = v108;
      v106[1] = v110;
      swift_retain();
      goto LABEL_60;
    }
LABEL_59:
    *(_OWORD *)v106 = *(_OWORD *)v107;
    goto LABEL_60;
  }
  if (!v108)
  {
    swift_release();
    goto LABEL_59;
  }
  v109 = *((_QWORD *)v107 + 1);
  *v106 = v108;
  v106[1] = v109;
  swift_retain();
  swift_release();
LABEL_60:
  v111 = v168[5];
  v112 = &a1[v111];
  v113 = &a2[v111];
  v114 = *(id *)v113;
  v115 = v113[8];
  sub_1000A4100(*(id *)v113, v115);
  v116 = *(void **)v112;
  v117 = v112[8];
  *(_QWORD *)v112 = v114;
  v112[8] = v115;
  sub_1000A4224(v116, v117);
  v118 = v168[6];
  v119 = &a1[v118];
  v120 = &a2[v118];
  *(_QWORD *)&a1[v118] = *(_QWORD *)&a2[v118];
  swift_retain();
  swift_release();
  *((_QWORD *)v119 + 1) = *((_QWORD *)v120 + 1);
  v121 = v168[7];
  v122 = &a1[v121];
  v123 = &a2[v121];
  *(_QWORD *)&a1[v121] = *(_QWORD *)&a2[v121];
  swift_retain();
  swift_release();
  *((_QWORD *)v122 + 1) = *((_QWORD *)v123 + 1);
  v124 = v168[8];
  v125 = &a1[v124];
  v126 = &a2[v124];
  v127 = *(_QWORD *)v126;
  v128 = *((_QWORD *)v126 + 1);
  v129 = v126[16];
  KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)v126, v128);
  v130 = *(_QWORD *)v125;
  v131 = *((_QWORD *)v125 + 1);
  *(_QWORD *)v125 = v127;
  *((_QWORD *)v125 + 1) = v128;
  v125[16] = v129;
  sub_1000A6174(v130, v131);
  v132 = v168[9];
  v133 = &a1[v132];
  v134 = &a2[v132];
  *(_QWORD *)&a1[v132] = *(_QWORD *)&a2[v132];
  swift_retain();
  swift_release();
  *((_QWORD *)v133 + 1) = *((_QWORD *)v134 + 1);
  v135 = v168[10];
  v136 = &a1[v135];
  v137 = &a2[v135];
  *(_QWORD *)&a1[v135] = *(_QWORD *)&a2[v135];
  swift_retain();
  swift_release();
  *((_QWORD *)v136 + 1) = *((_QWORD *)v137 + 1);
  v138 = v168[11];
  v139 = &a1[v138];
  v140 = &a2[v138];
  *(_QWORD *)&a1[v138] = *(_QWORD *)&a2[v138];
  swift_retain();
  swift_release();
  *((_QWORD *)v139 + 1) = *((_QWORD *)v140 + 1);
  v141 = v168[12];
  v142 = &a1[v141];
  v143 = &a2[v141];
  v144 = *(_QWORD *)v143;
  v145 = *((_QWORD *)v143 + 1);
  v146 = v143[16];
  sub_1000A410C(*(_QWORD *)v143, v145, v146);
  v147 = *(_QWORD *)v142;
  v148 = *((_QWORD *)v142 + 1);
  v149 = v142[16];
  *(_QWORD *)v142 = v144;
  *((_QWORD *)v142 + 1) = v145;
  v142[16] = v146;
  sub_1000A4230(v147, v148, v149);
  v150 = v168[13];
  v151 = &a1[v150];
  v152 = &a2[v150];
  v153 = *(_QWORD *)v152;
  v154 = *((_QWORD *)v152 + 1);
  v155 = v152[16];
  sub_1000A411C(*(_QWORD *)v152, v154, v155);
  v156 = *(_QWORD *)v151;
  v157 = *((_QWORD *)v151 + 1);
  v158 = v151[16];
  *(_QWORD *)v151 = v153;
  *((_QWORD *)v151 + 1) = v154;
  v151[16] = v155;
  sub_1000A4240(v156, v157, v158);
  v159 = v168[14];
  v160 = &a1[v159];
  v161 = &a2[v159];
  v162 = sub_100007E8C(&qword_1011A70B8);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v162 - 8) + 24))(v160, v161, v162);
  return a1;
}

char *sub_1006F7AC4(char *a1, char *a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  __int128 v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  int *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v81;
  uint64_t v82;
  unsigned int (*__dst)(char *, uint64_t, uint64_t);
  char *__dsta;
  unsigned int (*v85)(char *, uint64_t, uint64_t);
  uint64_t v86;
  uint64_t v88;

  v5 = type metadata accessor for GenericMusicItem(0);
  v6 = *(_QWORD *)(v5 - 8);
  v85 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (v85(a2, 1, v5))
  {
    v7 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  v8 = (int *)type metadata accessor for Featured(0);
  *(_OWORD *)&a1[v8[5]] = *(_OWORD *)&a2[v8[5]];
  *(_OWORD *)&a1[v8[6]] = *(_OWORD *)&a2[v8[6]];
  *(_OWORD *)&a1[v8[7]] = *(_OWORD *)&a2[v8[7]];
  v9 = v8[8];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = type metadata accessor for ArtworkImage.ViewModel(0);
  v82 = *(_QWORD *)(v12 - 8);
  __dst = *(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48);
  v88 = v12;
  if (__dst(v11, 1, v12))
  {
    v13 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v14 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v10, v11, v14);
    v15 = *(int *)(v12 + 20);
    v16 = &v10[v15];
    v17 = &v11[v15];
    v18 = type metadata accessor for Artwork.CropStyle(0);
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      v20 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v10, 0, 1, v88);
  }
  v21 = v8[9];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v25 = *(_QWORD *)(v24 - 8);
  v86 = v5;
  v81 = v6;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 10, v24))
  {
    v26 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    v27 = type metadata accessor for Playlist.Variant(0);
    v28 = *(_QWORD *)(v27 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v23, 1, v27))
    {
      v29 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v22, v23, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v22, 0, 1, v27);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 10, v24);
  }
  v30 = v8[10];
  v31 = &a1[v30];
  v32 = &a2[v30];
  v33 = *(_OWORD *)&a2[v30 + 16];
  *(_OWORD *)v31 = *(_OWORD *)&a2[v30];
  *((_OWORD *)v31 + 1) = v33;
  v34 = *(int *)(type metadata accessor for Featured.Caption(0) + 24);
  v35 = &v31[v34];
  v36 = &v32[v34];
  v31[v34] = v32[v34];
  v37 = type metadata accessor for Featured.Caption.Thumbnail(0);
  v38 = *(int *)(v37 + 20);
  v39 = &v35[v38];
  v40 = &v36[v38];
  if (__dst(&v36[v38], 1, v88))
  {
    v41 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    v42 = v86;
  }
  else
  {
    v43 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v39, v40, v43);
    v44 = *(int *)(v88 + 20);
    __dsta = &v39[v44];
    v45 = &v40[v44];
    v46 = type metadata accessor for Artwork.CropStyle(0);
    v47 = *(_QWORD *)(v46 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
    {
      v48 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(__dsta, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 32))(__dsta, v45, v46);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(__dsta, 0, 1, v46);
    }
    v42 = v86;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v39, 0, 1, v88);
  }
  *(_QWORD *)&v35[*(int *)(v37 + 24)] = *(_QWORD *)&v36[*(int *)(v37 + 24)];
  v49 = v8[11];
  v50 = &a1[v49];
  v51 = &a2[v49];
  *(_QWORD *)&a1[v49] = *(_QWORD *)&a2[v49];
  v52 = (int *)type metadata accessor for SegueContext(0);
  v53 = v52[5];
  v54 = &v50[v53];
  v55 = &v51[v53];
  if (v85(&v51[v53], 1, v42))
  {
    v56 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v54, v55, v42);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v54, 0, 1, v42);
  }
  v50[v52[6]] = v51[v52[6]];
  v57 = v52[7];
  v58 = &v50[v57];
  v59 = &v51[v57];
  v60 = *(_QWORD *)v59;
  if (*(_QWORD *)v59)
  {
    v61 = *((_QWORD *)v59 + 1);
    *(_QWORD *)v58 = v60;
    *((_QWORD *)v58 + 1) = v61;
  }
  else
  {
    *(_OWORD *)v58 = *(_OWORD *)v59;
  }
  v62 = a3[5];
  v63 = a3[6];
  v64 = &a1[v62];
  v65 = &a2[v62];
  *(_QWORD *)v64 = *(_QWORD *)v65;
  v64[8] = v65[8];
  *(_OWORD *)&a1[v63] = *(_OWORD *)&a2[v63];
  v66 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  v67 = &a1[v66];
  v68 = &a2[v66];
  *(_OWORD *)v67 = *(_OWORD *)v68;
  v67[16] = v68[16];
  v69 = a3[10];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  *(_OWORD *)&a1[v69] = *(_OWORD *)&a2[v69];
  v70 = a3[12];
  *(_OWORD *)&a1[a3[11]] = *(_OWORD *)&a2[a3[11]];
  v71 = &a1[v70];
  v72 = &a2[v70];
  v71[16] = v72[16];
  *(_OWORD *)v71 = *(_OWORD *)v72;
  v73 = a3[13];
  v74 = a3[14];
  v75 = &a1[v73];
  v76 = &a2[v73];
  v75[16] = v76[16];
  v77 = &a1[v74];
  v78 = &a2[v74];
  *(_OWORD *)v75 = *(_OWORD *)v76;
  v79 = sub_100007E8C(&qword_1011A70B8);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 32))(v77, v78, v79);
  return a1;
}

char *sub_1006F80CC(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t (*v32)(char *, uint64_t, uint64_t);
  int v33;
  int v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(char *, uint64_t, uint64_t);
  int v50;
  int v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(char *, uint64_t, uint64_t);
  int v58;
  int v59;
  int *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t (*v67)(char *, uint64_t, uint64_t);
  int v68;
  int v69;
  uint64_t (*v70)(char *, uint64_t, uint64_t);
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  size_t v90;
  void *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t (*v99)(void *, uint64_t, uint64_t);
  int v100;
  uint64_t v101;
  char *v102;
  char *v103;
  void *v104;
  int *v105;
  uint64_t v106;
  char *v107;
  char *v108;
  int v109;
  int v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  void *v122;
  char v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  char *v131;
  char *v132;
  char v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  char *v146;
  char *v147;
  char v148;
  uint64_t v149;
  uint64_t v150;
  char v151;
  uint64_t v152;
  char *v153;
  char *v154;
  char v155;
  uint64_t v156;
  unint64_t v157;
  char v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  uint64_t v164;
  void *__dst;
  void *__dsta;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  int *v170;
  uint64_t (*v171)(char *, uint64_t, uint64_t);
  int *v172;
  uint64_t (*v173)(char *, uint64_t, uint64_t);

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  v168 = v7;
  v173 = v8;
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = (int *)type metadata accessor for Featured(0);
  v13 = v12[5];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v17 = *(_QWORD *)v15;
  v16 = *((_QWORD *)v15 + 1);
  *(_QWORD *)v14 = v17;
  *((_QWORD *)v14 + 1) = v16;
  swift_bridgeObjectRelease();
  v18 = v12[6];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v22 = *(_QWORD *)v20;
  v21 = *((_QWORD *)v20 + 1);
  *(_QWORD *)v19 = v22;
  *((_QWORD *)v19 + 1) = v21;
  swift_bridgeObjectRelease();
  v23 = v12[7];
  v24 = &a1[v23];
  v25 = &a2[v23];
  v27 = *(_QWORD *)v25;
  v26 = *((_QWORD *)v25 + 1);
  *(_QWORD *)v24 = v27;
  *((_QWORD *)v24 + 1) = v26;
  swift_bridgeObjectRelease();
  v28 = v12[8];
  v29 = &a1[v28];
  v30 = &a2[v28];
  v31 = type metadata accessor for ArtworkImage.ViewModel(0);
  v167 = *(_QWORD *)(v31 - 8);
  v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v167 + 48);
  v33 = v32(v29, 1, v31);
  v171 = v32;
  v34 = v32(v30, 1, v31);
  v169 = v6;
  v170 = a3;
  if (!v33)
  {
    if (!v34)
    {
      v45 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 40))(v29, v30, v45);
      v46 = *(int *)(v31 + 20);
      v29 += v46;
      v30 += v46;
      v47 = type metadata accessor for Artwork.CropStyle(0);
      v48 = *(_QWORD *)(v47 - 8);
      v49 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 48);
      v50 = v49(v29, 1, v47);
      v51 = v49(v30, 1, v47);
      if (v50)
      {
        if (!v51)
        {
          (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v29, v30, v47);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v29, 0, 1, v47);
          goto LABEL_21;
        }
      }
      else
      {
        if (!v51)
        {
          (*(void (**)(char *, char *, uint64_t))(v48 + 40))(v29, v30, v47);
          goto LABEL_21;
        }
        (*(void (**)(char *, uint64_t))(v48 + 8))(v29, v47);
      }
      v43 = (uint64_t *)&unk_1011A14A0;
LABEL_14:
      v44 = sub_100007E8C(v43);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      goto LABEL_21;
    }
    sub_10005B748((uint64_t)v29, type metadata accessor for ArtworkImage.ViewModel);
LABEL_13:
    v43 = (uint64_t *)&unk_1011A3E10;
    goto LABEL_14;
  }
  if (v34)
    goto LABEL_13;
  v35 = v12;
  v36 = type metadata accessor for Artwork(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v29, v30, v36);
  v37 = *(int *)(v31 + 20);
  v38 = &v29[v37];
  v39 = &v30[v37];
  v40 = type metadata accessor for Artwork.CropStyle(0);
  v41 = *(_QWORD *)(v40 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
  {
    v42 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v38, v39, v40);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
  }
  v12 = v35;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v167 + 56))(v29, 0, 1, v31);
LABEL_21:
  v52 = v12[9];
  v53 = &a1[v52];
  v54 = &a2[v52];
  v55 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v56 = *(_QWORD *)(v55 - 8);
  v57 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v56 + 48);
  v58 = v57(v53, 10, v55);
  v59 = v57(v54, 10, v55);
  if (v58)
  {
    if (!v59)
    {
      v60 = v12;
      v61 = type metadata accessor for Playlist.Variant(0);
      v62 = *(_QWORD *)(v61 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v54, 1, v61))
      {
        v63 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v53, v54, v61);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v53, 0, 1, v61);
      }
      v12 = v60;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 10, v55);
      goto LABEL_33;
    }
LABEL_27:
    v64 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
LABEL_33:
    v70 = v171;
    goto LABEL_34;
  }
  if (v59)
  {
    sub_10004FF60((uint64_t)v53, (uint64_t *)&unk_1011A3DB0);
    goto LABEL_27;
  }
  v65 = type metadata accessor for Playlist.Variant(0);
  v66 = *(_QWORD *)(v65 - 8);
  v67 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v66 + 48);
  v68 = v67(v53, 1, v65);
  v69 = v67(v54, 1, v65);
  if (v68)
  {
    v70 = v171;
    if (!v69)
    {
      (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v53, v54, v65);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v53, 0, 1, v65);
      goto LABEL_34;
    }
    goto LABEL_67;
  }
  v70 = v171;
  if (v69)
  {
    (*(void (**)(char *, uint64_t))(v66 + 8))(v53, v65);
LABEL_67:
    v164 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v164 - 8) + 64));
    goto LABEL_34;
  }
  (*(void (**)(char *, char *, uint64_t))(v66 + 40))(v53, v54, v65);
LABEL_34:
  v172 = v12;
  v71 = v12[10];
  v72 = &a1[v71];
  v73 = &a2[v71];
  v74 = *(_QWORD *)&a2[v71 + 8];
  *(_QWORD *)v72 = *(_QWORD *)&a2[v71];
  *((_QWORD *)v72 + 1) = v74;
  swift_bridgeObjectRelease();
  v75 = *((_QWORD *)v73 + 3);
  *((_QWORD *)v72 + 2) = *((_QWORD *)v73 + 2);
  *((_QWORD *)v72 + 3) = v75;
  swift_bridgeObjectRelease();
  v76 = *(int *)(type metadata accessor for Featured.Caption(0) + 24);
  v77 = &v72[v76];
  v78 = &v73[v76];
  *v77 = v73[v76];
  v79 = type metadata accessor for Featured.Caption.Thumbnail(0);
  v80 = *(int *)(v79 + 20);
  v81 = (uint64_t)&v77[v80];
  v82 = &v78[v80];
  LODWORD(v73) = v70(&v77[v80], 1, v31);
  v83 = v70(v82, 1, v31);
  if (!(_DWORD)v73)
  {
    if (!v83)
    {
      v93 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 40))(v81, v82, v93);
      v94 = *(int *)(v31 + 20);
      v95 = (void *)(v81 + v94);
      v96 = &v82[v94];
      v97 = type metadata accessor for Artwork.CropStyle(0);
      v98 = *(_QWORD *)(v97 - 8);
      v99 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v98 + 48);
      __dsta = v95;
      LODWORD(v95) = v99(v95, 1, v97);
      v100 = v99(v96, 1, v97);
      if ((_DWORD)v95)
      {
        if (!v100)
        {
          (*(void (**)(void *, char *, uint64_t))(v98 + 32))(__dsta, v96, v97);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v98 + 56))(__dsta, 0, 1, v97);
          goto LABEL_47;
        }
        v90 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
        v91 = __dsta;
        v92 = v96;
      }
      else
      {
        if (!v100)
        {
          (*(void (**)(void *, char *, uint64_t))(v98 + 40))(__dsta, v96, v97);
          goto LABEL_47;
        }
        (*(void (**)(void *, uint64_t))(v98 + 8))(__dsta, v97);
        v90 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
        v91 = __dsta;
        v92 = v96;
      }
LABEL_41:
      memcpy(v91, v92, v90);
      goto LABEL_47;
    }
    sub_10005B748(v81, type metadata accessor for ArtworkImage.ViewModel);
LABEL_40:
    v90 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v91 = (void *)v81;
    v92 = v82;
    goto LABEL_41;
  }
  if (v83)
    goto LABEL_40;
  v84 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v84 - 8) + 32))(v81, v82, v84);
  v85 = *(int *)(v31 + 20);
  __dst = (void *)(v81 + v85);
  v86 = &v82[v85];
  v87 = type metadata accessor for Artwork.CropStyle(0);
  v88 = *(_QWORD *)(v87 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v88 + 48))(v86, 1, v87))
  {
    v89 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(__dst, v86, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v88 + 32))(__dst, v86, v87);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v88 + 56))(__dst, 0, 1, v87);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v167 + 56))(v81, 0, 1, v31);
LABEL_47:
  *(_QWORD *)&v77[*(int *)(v79 + 24)] = *(_QWORD *)&v78[*(int *)(v79 + 24)];
  v101 = v172[11];
  v102 = &a1[v101];
  v103 = &a2[v101];
  v104 = *(void **)&a1[v101];
  *(_QWORD *)&a1[v101] = *(_QWORD *)&a2[v101];

  v105 = (int *)type metadata accessor for SegueContext(0);
  v106 = v105[5];
  v107 = &v102[v106];
  v108 = &v103[v106];
  v109 = v173(&v102[v106], 1, v169);
  v110 = v173(v108, 1, v169);
  if (v109)
  {
    if (!v110)
    {
      (*(void (**)(char *, char *, uint64_t))(v168 + 32))(v107, v108, v169);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v168 + 56))(v107, 0, 1, v169);
      goto LABEL_53;
    }
    goto LABEL_52;
  }
  if (v110)
  {
    (*(void (**)(char *, uint64_t))(v168 + 8))(v107, v169);
LABEL_52:
    v111 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v107, v108, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
    goto LABEL_53;
  }
  (*(void (**)(char *, char *, uint64_t))(v168 + 40))(v107, v108, v169);
LABEL_53:
  v102[v105[6]] = v103[v105[6]];
  v112 = v105[7];
  v113 = &v102[v112];
  v114 = &v103[v112];
  v115 = *(_QWORD *)&v103[v112];
  if (!*(_QWORD *)v113)
  {
    if (v115)
    {
      v117 = *((_QWORD *)v114 + 1);
      *(_QWORD *)v113 = v115;
      *((_QWORD *)v113 + 1) = v117;
      goto LABEL_60;
    }
LABEL_59:
    *(_OWORD *)v113 = *(_OWORD *)v114;
    goto LABEL_60;
  }
  if (!v115)
  {
    swift_release();
    goto LABEL_59;
  }
  v116 = *((_QWORD *)v114 + 1);
  *(_QWORD *)v113 = v115;
  *((_QWORD *)v113 + 1) = v116;
  swift_release();
LABEL_60:
  v118 = v170[5];
  v119 = &a1[v118];
  v120 = &a2[v118];
  v121 = *(_QWORD *)v120;
  LOBYTE(v120) = v120[8];
  v122 = *(void **)v119;
  v123 = v119[8];
  *(_QWORD *)v119 = v121;
  v119[8] = (char)v120;
  sub_1000A4224(v122, v123);
  v124 = v170[6];
  v125 = &a1[v124];
  v126 = &a2[v124];
  *(_QWORD *)&a1[v124] = *(_QWORD *)&a2[v124];
  swift_release();
  *((_QWORD *)v125 + 1) = *((_QWORD *)v126 + 1);
  v127 = v170[7];
  v128 = &a1[v127];
  v129 = &a2[v127];
  *(_QWORD *)&a1[v127] = *(_QWORD *)&a2[v127];
  swift_release();
  *((_QWORD *)v128 + 1) = *((_QWORD *)v129 + 1);
  v130 = v170[8];
  v131 = &a1[v130];
  v132 = &a2[v130];
  v133 = v132[16];
  v134 = *(_QWORD *)v131;
  v135 = *((_QWORD *)v131 + 1);
  *(_OWORD *)v131 = *(_OWORD *)v132;
  v131[16] = v133;
  sub_1000A6174(v134, v135);
  v136 = v170[9];
  v137 = &a1[v136];
  v138 = &a2[v136];
  *(_QWORD *)&a1[v136] = *(_QWORD *)&a2[v136];
  swift_release();
  *((_QWORD *)v137 + 1) = *((_QWORD *)v138 + 1);
  v139 = v170[10];
  v140 = &a1[v139];
  v141 = &a2[v139];
  *(_QWORD *)&a1[v139] = *(_QWORD *)&a2[v139];
  swift_release();
  *((_QWORD *)v140 + 1) = *((_QWORD *)v141 + 1);
  v142 = v170[11];
  v143 = &a1[v142];
  v144 = &a2[v142];
  *(_QWORD *)&a1[v142] = *(_QWORD *)&a2[v142];
  swift_release();
  *((_QWORD *)v143 + 1) = *((_QWORD *)v144 + 1);
  v145 = v170[12];
  v146 = &a1[v145];
  v147 = &a2[v145];
  v148 = v147[16];
  v149 = *(_QWORD *)v146;
  v150 = *((_QWORD *)v146 + 1);
  v151 = v146[16];
  *(_OWORD *)v146 = *(_OWORD *)v147;
  v146[16] = v148;
  sub_1000A4230(v149, v150, v151);
  v152 = v170[13];
  v153 = &a1[v152];
  v154 = &a2[v152];
  v155 = v154[16];
  v156 = *(_QWORD *)v153;
  v157 = *((_QWORD *)v153 + 1);
  v158 = v153[16];
  *(_OWORD *)v153 = *(_OWORD *)v154;
  v153[16] = v155;
  sub_1000A4240(v156, v157, v158);
  v159 = v170[14];
  v160 = &a1[v159];
  v161 = &a2[v159];
  v162 = sub_100007E8C(&qword_1011A70B8);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v162 - 8) + 40))(v160, v161, v162);
  return a1;
}

uint64_t sub_1006F8BC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006F8BD4);
}

uint64_t sub_1006F8BD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;
  uint64_t v11;

  v6 = type metadata accessor for Featured(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 2147483646)
  {
    v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
    if (v9 >= 0xFFFFFFFF)
      LODWORD(v9) = -1;
    v10 = v9 - 1;
    if (v10 < 0)
      v10 = -1;
    return (v10 + 1);
  }
  else
  {
    v11 = sub_100007E8C(&qword_1011A70B8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(a1 + *(int *)(a3 + 56), a2, v11);
  }
}

uint64_t sub_1006F8C8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006F8C98);
}

uint64_t sub_1006F8C98(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = type metadata accessor for Featured(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 2147483646)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 24)) = a2;
      return result;
    }
    v10 = sub_100007E8C(&qword_1011A70B8);
    v12 = a1 + *(int *)(a4 + 56);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for FeaturedView(uint64_t a1)
{
  return sub_100055934(a1, qword_1011C5218, (uint64_t)&nominal type descriptor for FeaturedView);
}

void sub_1006F8D54(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[11];

  v2 = type metadata accessor for Featured(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = "\t";
    v6[2] = &unk_100ECBEC0;
    v6[3] = &unk_100ECBEC0;
    v6[4] = &unk_100ECBED8;
    v6[5] = &unk_100ECBEC0;
    v6[6] = &unk_100ECBEC0;
    v6[7] = &unk_100ECBEC0;
    v6[8] = &unk_100ECBED8;
    v6[9] = &unk_100ECBED8;
    sub_100201578(319);
    if (v5 <= 0x3F)
    {
      v6[10] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 11, v6, a1 + 16);
    }
  }
}

uint64_t *sub_1006F8E00(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for ArtworkImage.ViewModel(0);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v14 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v8, v9, v14);
      v15 = *(int *)(v10 + 20);
      v16 = &v8[v15];
      v17 = &v9[v15];
      v18 = type metadata accessor for Artwork.CropStyle(0);
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        v20 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  }
  return v4;
}

uint64_t sub_1006F8F9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = type metadata accessor for ArtworkImage.ViewModel(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v2, 1, v3);
  if (!(_DWORD)result)
  {
    v5 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v2, v5);
    v6 = v2 + *(int *)(v3 + 20);
    v7 = type metadata accessor for Artwork.CropStyle(0);
    v8 = *(_QWORD *)(v7 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  return result;
}

_BYTE *sub_1006F9054(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for ArtworkImage.ViewModel(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v7, v8, v12);
    v13 = *(int *)(v9 + 20);
    v14 = &v7[v13];
    v15 = &v8[v13];
    v16 = type metadata accessor for Artwork.CropStyle(0);
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      v18 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

_BYTE *sub_1006F91C4(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  size_t v21;
  void *v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(void *, uint64_t, uint64_t);
  int v31;
  int v32;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (uint64_t)&a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for ArtworkImage.ViewModel(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11((uint64_t)v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      v24 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v24 - 8) + 24))(v7, v8, v24);
      v25 = *(int *)(v9 + 20);
      v26 = (void *)(v7 + v25);
      v27 = &v8[v25];
      v28 = type metadata accessor for Artwork.CropStyle(0);
      v29 = *(_QWORD *)(v28 - 8);
      v30 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v29 + 48);
      v31 = v30(v26, 1, v28);
      v32 = v30(v27, 1, v28);
      if (v31)
      {
        if (!v32)
        {
          (*(void (**)(void *, _BYTE *, uint64_t))(v29 + 16))(v26, v27, v28);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v32)
        {
          (*(void (**)(void *, _BYTE *, uint64_t))(v29 + 24))(v26, v27, v28);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v29 + 8))(v26, v28);
      }
      v21 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v22 = v26;
      v23 = v27;
      goto LABEL_8;
    }
    sub_10005B748(v7, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    v21 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v22 = (void *)v7;
    v23 = v8;
LABEL_8:
    memcpy(v22, v23, v21);
    goto LABEL_14;
  }
  if (v13)
    goto LABEL_7;
  v14 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v7, v8, v14);
  v15 = *(int *)(v9 + 20);
  v16 = (void *)(v7 + v15);
  v17 = &v8[v15];
  v18 = type metadata accessor for Artwork.CropStyle(0);
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    v20 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, _BYTE *, uint64_t))(v19 + 16))(v16, v17, v18);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_14:
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

_BYTE *sub_1006F9444(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for ArtworkImage.ViewModel(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v7, v8, v12);
    v13 = *(int *)(v9 + 20);
    v14 = &v7[v13];
    v15 = &v8[v13];
    v16 = type metadata accessor for Artwork.CropStyle(0);
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      v18 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

_BYTE *sub_1006F95B4(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  size_t v21;
  void *v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(void *, uint64_t, uint64_t);
  int v31;
  int v32;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (uint64_t)&a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for ArtworkImage.ViewModel(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11((uint64_t)v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      v24 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v24 - 8) + 40))(v7, v8, v24);
      v25 = *(int *)(v9 + 20);
      v26 = (void *)(v7 + v25);
      v27 = &v8[v25];
      v28 = type metadata accessor for Artwork.CropStyle(0);
      v29 = *(_QWORD *)(v28 - 8);
      v30 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v29 + 48);
      v31 = v30(v26, 1, v28);
      v32 = v30(v27, 1, v28);
      if (v31)
      {
        if (!v32)
        {
          (*(void (**)(void *, _BYTE *, uint64_t))(v29 + 32))(v26, v27, v28);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v32)
        {
          (*(void (**)(void *, _BYTE *, uint64_t))(v29 + 40))(v26, v27, v28);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v29 + 8))(v26, v28);
      }
      v21 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v22 = v26;
      v23 = v27;
      goto LABEL_8;
    }
    sub_10005B748(v7, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    v21 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v22 = (void *)v7;
    v23 = v8;
LABEL_8:
    memcpy(v22, v23, v21);
    goto LABEL_14;
  }
  if (v13)
    goto LABEL_7;
  v14 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v7, v8, v14);
  v15 = *(int *)(v9 + 20);
  v16 = (void *)(v7 + v15);
  v17 = &v8[v15];
  v18 = type metadata accessor for Artwork.CropStyle(0);
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    v20 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, _BYTE *, uint64_t))(v19 + 32))(v16, v17, v18);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_14:
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

uint64_t sub_1006F9834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006F9840);
}

uint64_t sub_1006F9840(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 252)
  {
    v4 = *a1;
    if (v4 >= 4)
      return v4 - 3;
    else
      return 0;
  }
  else
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_1006F98B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006F98C4);
}

_BYTE *sub_1006F98C4(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 252)
  {
    *result = a2 + 3;
  }
  else
  {
    v7 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

void sub_1006F9938(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = &unk_100ECBF00;
  sub_1000E3A44(319, qword_1011A0C70, type metadata accessor for ArtworkImage.ViewModel, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
  }
}

_QWORD *sub_1006F99D0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v17 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v17 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = *(int *)(a3 + 24);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    *((_BYTE *)a1 + v7) = *((_BYTE *)a2 + v7);
    v26 = type metadata accessor for Featured.Caption.Thumbnail(0);
    v10 = *(int *)(v26 + 20);
    v11 = &v8[v10];
    v12 = &v9[v10];
    v13 = type metadata accessor for ArtworkImage.ViewModel(0);
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v15(v12, 1, v13))
    {
      v16 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      v18 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v11, v12, v18);
      v19 = *(int *)(v13 + 20);
      v20 = &v11[v19];
      v21 = &v12[v19];
      v22 = type metadata accessor for Artwork.CropStyle(0);
      v23 = *(_QWORD *)(v22 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      {
        v24 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    *(_QWORD *)&v8[*(int *)(v26 + 24)] = *(_QWORD *)&v9[*(int *)(v26 + 24)];
  }
  return v3;
}

uint64_t sub_1006F9BA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = v4 + *(int *)(type metadata accessor for Featured.Caption.Thumbnail(0) + 20);
  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6);
  if (!(_DWORD)result)
  {
    v8 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v5, v8);
    v9 = v5 + *(int *)(v6 + 20);
    v10 = type metadata accessor for Artwork.CropStyle(0);
    v11 = *(_QWORD *)(v10 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  return result;
}

_QWORD *sub_1006F9C88(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *((_BYTE *)a1 + v6) = *((_BYTE *)a2 + v6);
  v24 = type metadata accessor for Featured.Caption.Thumbnail(0);
  v9 = *(int *)(v24 + 20);
  v10 = &v7[v9];
  v11 = &v8[v9];
  v12 = type metadata accessor for ArtworkImage.ViewModel(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v14(v11, 1, v12))
  {
    v15 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v16 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v10, v11, v16);
    v17 = *(int *)(v12 + 20);
    v18 = &v10[v17];
    v19 = &v11[v17];
    v20 = type metadata accessor for Artwork.CropStyle(0);
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      v22 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  *(_QWORD *)&v7[*(int *)(v24 + 24)] = *(_QWORD *)&v8[*(int *)(v24 + 24)];
  return a1;
}

_QWORD *sub_1006F9E34(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  size_t v24;
  void *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(void *, uint64_t, uint64_t);
  int v34;
  int v35;
  void *__dst;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *((_BYTE *)a1 + v6) = *((_BYTE *)a2 + v6);
  v9 = type metadata accessor for Featured.Caption.Thumbnail(0);
  v10 = *(int *)(v9 + 20);
  v11 = (uint64_t)&v7[v10];
  v12 = &v8[v10];
  v13 = type metadata accessor for ArtworkImage.ViewModel(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15((uint64_t)v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      v27 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 24))(v11, v12, v27);
      v28 = *(int *)(v13 + 20);
      v29 = (void *)(v11 + v28);
      v30 = &v12[v28];
      v31 = type metadata accessor for Artwork.CropStyle(0);
      v32 = *(_QWORD *)(v31 - 8);
      v33 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v32 + 48);
      v34 = v33(v29, 1, v31);
      v35 = v33(v30, 1, v31);
      if (v34)
      {
        if (!v35)
        {
          (*(void (**)(void *, char *, uint64_t))(v32 + 16))(v29, v30, v31);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v35)
        {
          (*(void (**)(void *, char *, uint64_t))(v32 + 24))(v29, v30, v31);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v32 + 8))(v29, v31);
      }
      v24 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v25 = v29;
      v26 = v30;
      goto LABEL_8;
    }
    sub_10005B748(v11, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    v24 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v25 = (void *)v11;
    v26 = v12;
LABEL_8:
    memcpy(v25, v26, v24);
    goto LABEL_14;
  }
  if (v17)
    goto LABEL_7;
  v18 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v11, v12, v18);
  v19 = *(int *)(v13 + 20);
  __dst = (void *)(v11 + v19);
  v20 = &v12[v19];
  v21 = type metadata accessor for Artwork.CropStyle(0);
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    v23 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(__dst, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v22 + 16))(__dst, v20, v21);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_14:
  *(_QWORD *)&v7[*(int *)(v9 + 24)] = *(_QWORD *)&v8[*(int *)(v9 + 24)];
  return a1;
}

_OWORD *sub_1006FA118(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *__dst;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  *((_BYTE *)a1 + v5) = *((_BYTE *)a2 + v5);
  v8 = type metadata accessor for Featured.Caption.Thumbnail(0);
  v9 = *(int *)(v8 + 20);
  v10 = &v6[v9];
  v11 = &v7[v9];
  v12 = type metadata accessor for ArtworkImage.ViewModel(0);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v15 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v10, v11, v15);
    v16 = *(int *)(v12 + 20);
    __dst = &v10[v16];
    v17 = &v11[v16];
    v18 = type metadata accessor for Artwork.CropStyle(0);
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      v20 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(__dst, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(__dst, v17, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  *(_QWORD *)&v6[*(int *)(v8 + 24)] = *(_QWORD *)&v7[*(int *)(v8 + 24)];
  return a1;
}

_QWORD *sub_1006FA2AC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  size_t v26;
  void *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(void *, uint64_t, uint64_t);
  int v36;
  int v37;
  void *__dst;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  *((_BYTE *)a1 + v8) = *((_BYTE *)a2 + v8);
  v11 = type metadata accessor for Featured.Caption.Thumbnail(0);
  v12 = *(int *)(v11 + 20);
  v13 = (uint64_t)&v9[v12];
  v14 = &v10[v12];
  v15 = type metadata accessor for ArtworkImage.ViewModel(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17((uint64_t)v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      v29 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 40))(v13, v14, v29);
      v30 = *(int *)(v15 + 20);
      v31 = (void *)(v13 + v30);
      v32 = &v14[v30];
      v33 = type metadata accessor for Artwork.CropStyle(0);
      v34 = *(_QWORD *)(v33 - 8);
      v35 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v34 + 48);
      v36 = v35(v31, 1, v33);
      v37 = v35(v32, 1, v33);
      if (v36)
      {
        if (!v37)
        {
          (*(void (**)(void *, char *, uint64_t))(v34 + 32))(v31, v32, v33);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v37)
        {
          (*(void (**)(void *, char *, uint64_t))(v34 + 40))(v31, v32, v33);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v34 + 8))(v31, v33);
      }
      v26 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v27 = v31;
      v28 = v32;
      goto LABEL_8;
    }
    sub_10005B748(v13, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    v26 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v27 = (void *)v13;
    v28 = v14;
LABEL_8:
    memcpy(v27, v28, v26);
    goto LABEL_14;
  }
  if (v19)
    goto LABEL_7;
  v20 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v13, v14, v20);
  v21 = *(int *)(v15 + 20);
  __dst = (void *)(v13 + v21);
  v22 = &v14[v21];
  v23 = type metadata accessor for Artwork.CropStyle(0);
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    v25 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(__dst, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v24 + 32))(__dst, v22, v23);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(__dst, 0, 1, v23);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_14:
  *(_QWORD *)&v9[*(int *)(v11 + 24)] = *(_QWORD *)&v10[*(int *)(v11 + 24)];
  return a1;
}

uint64_t sub_1006FA570(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006FA57C);
}

uint64_t sub_1006FA57C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = type metadata accessor for Featured.Caption.Thumbnail(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v9);
  }
}

uint64_t sub_1006FA604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006FA610);
}

uint64_t sub_1006FA610(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v7 = type metadata accessor for Featured.Caption.Thumbnail(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1006FA684(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = &unk_100ECBEC0;
  v4[1] = &unk_100ECBEC0;
  result = type metadata accessor for Featured.Caption.Thumbnail(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t *sub_1006FA6F8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  void *v68;
  int *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v80;
  uint64_t v81;
  unsigned int (*__dst)(char *, uint64_t, uint64_t);
  char *__dsta;
  unsigned int (*v84)(uint64_t *, uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for GenericMusicItem(0);
    v8 = *(_QWORD *)(v7 - 8);
    v84 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    v85 = v7;
    v80 = v8;
    if (v84(a2, 1, v7))
    {
      v9 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = a3[5];
    v12 = a3[6];
    v13 = (uint64_t *)((char *)a1 + v11);
    v14 = (uint64_t *)((char *)a2 + v11);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = (uint64_t *)((char *)a1 + v12);
    v17 = (uint64_t *)((char *)a2 + v12);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = a3[7];
    v20 = a3[8];
    v21 = (uint64_t *)((char *)a1 + v19);
    v22 = (uint64_t *)((char *)a2 + v19);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    v24 = (char *)a1 + v20;
    v25 = (char *)a2 + v20;
    v26 = type metadata accessor for ArtworkImage.ViewModel(0);
    v81 = *(_QWORD *)(v26 - 8);
    v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v28 = v26;
    swift_bridgeObjectRetain();
    __dst = v27;
    if (v27(v25, 1, v26))
    {
      v29 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      v30 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v24, v25, v30);
      v31 = *(int *)(v26 + 20);
      v32 = &v24[v31];
      v33 = &v25[v31];
      v34 = type metadata accessor for Artwork.CropStyle(0);
      v35 = *(_QWORD *)(v34 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
      {
        v36 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v24, 0, 1, v28);
    }
    v37 = a3[9];
    v38 = (char *)a1 + v37;
    v39 = (char *)a2 + v37;
    v40 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    v41 = *(_QWORD *)(v40 - 8);
    v86 = v28;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 10, v40))
    {
      v42 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      v43 = type metadata accessor for Playlist.Variant(0);
      v44 = *(_QWORD *)(v43 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v39, 1, v43))
      {
        v45 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v38, v39, v43);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v38, 0, 1, v43);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 10, v40);
    }
    v46 = a3[10];
    v47 = (uint64_t *)((char *)a1 + v46);
    v48 = (char *)a2 + v46;
    v49 = *(uint64_t *)((char *)a2 + v46 + 8);
    *v47 = *(uint64_t *)((char *)a2 + v46);
    v47[1] = v49;
    v50 = *(uint64_t *)((char *)a2 + v46 + 24);
    v47[2] = *(uint64_t *)((char *)a2 + v46 + 16);
    v47[3] = v50;
    v51 = *(int *)(type metadata accessor for Featured.Caption(0) + 24);
    v52 = (char *)v47 + v51;
    v53 = &v48[v51];
    *v52 = *v53;
    v54 = type metadata accessor for Featured.Caption.Thumbnail(0);
    v55 = *(int *)(v54 + 20);
    v56 = &v52[v55];
    v57 = &v53[v55];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__dst(v57, 1, v86))
    {
      v58 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
      memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    }
    else
    {
      v59 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v56, v57, v59);
      v60 = *(int *)(v86 + 20);
      __dsta = &v56[v60];
      v61 = &v57[v60];
      v62 = type metadata accessor for Artwork.CropStyle(0);
      v63 = *(_QWORD *)(v62 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v61, 1, v62))
      {
        v64 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(__dsta, v61, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v63 + 16))(__dsta, v61, v62);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(__dsta, 0, 1, v62);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v56, 0, 1, v86);
    }
    *(_QWORD *)&v52[*(int *)(v54 + 24)] = *(_QWORD *)&v53[*(int *)(v54 + 24)];
    v65 = a3[11];
    v66 = (char *)a1 + v65;
    v67 = (char *)a2 + v65;
    v68 = *(void **)((char *)a2 + v65);
    *(uint64_t *)((char *)a1 + v65) = (uint64_t)v68;
    v69 = (int *)type metadata accessor for SegueContext(0);
    v70 = v69[5];
    v71 = &v66[v70];
    v72 = &v67[v70];
    v73 = v68;
    if (v84((uint64_t *)v72, 1, v85))
    {
      v74 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v71, v72, v85);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v71, 0, 1, v85);
    }
    v66[v69[6]] = v67[v69[6]];
    v75 = v69[7];
    v76 = &v66[v75];
    v77 = &v67[v75];
    if (*(_QWORD *)v77)
    {
      v78 = *((_QWORD *)v77 + 1);
      *(_QWORD *)v76 = *(_QWORD *)v77;
      *((_QWORD *)v76 + 1) = v78;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v76 = *(_OWORD *)v77;
    }
  }
  return a1;
}

double sub_1006FAC98(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id *v25;
  uint64_t v26;
  char *v27;
  double result;

  v4 = type metadata accessor for GenericMusicItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = a1 + a2[8];
  v8 = type metadata accessor for ArtworkImage.ViewModel(0);
  v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  if (!v9(v7, 1, v8))
  {
    v10 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v7, v10);
    v11 = v7 + *(int *)(v8 + 20);
    v12 = type metadata accessor for Artwork.CropStyle(0);
    v13 = *(_QWORD *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  v14 = a1 + a2[9];
  v15 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 10, v15))
  {
    v16 = type metadata accessor for Playlist.Variant(0);
    v17 = *(_QWORD *)(v16 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16))
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v14, v16);
  }
  v18 = a1 + a2[10];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v19 = v18 + *(int *)(type metadata accessor for Featured.Caption(0) + 24);
  v20 = v19 + *(int *)(type metadata accessor for Featured.Caption.Thumbnail(0) + 20);
  if (!v9(v20, 1, v8))
  {
    v21 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
    v22 = v20 + *(int *)(v8 + 20);
    v23 = type metadata accessor for Artwork.CropStyle(0);
    v24 = *(_QWORD *)(v23 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
  }
  v25 = (id *)(a1 + a2[11]);

  v26 = type metadata accessor for SegueContext(0);
  v27 = (char *)v25 + *(int *)(v26 + 20);
  if (!v6((uint64_t)v27, 1, v4))
    (*(void (**)(char *, uint64_t))(v5 + 8))(v27, v4);
  if (*(id *)((char *)v25 + *(int *)(v26 + 28)))
    *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

char *sub_1006FAF54(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  void *v66;
  int *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v78;
  uint64_t v79;
  unsigned int (*__dst)(char *, uint64_t, uint64_t);
  char *__dsta;
  unsigned int (*v82)(char *, uint64_t, uint64_t);
  uint64_t v83;
  uint64_t v84;

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v82 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v83 = v6;
  v78 = v7;
  if (v82(a2, 1, v6))
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[5];
  v10 = a3[6];
  v11 = &a1[v9];
  v12 = &a2[v9];
  v13 = *((_QWORD *)v12 + 1);
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *((_QWORD *)v11 + 1) = v13;
  v14 = &a1[v10];
  v15 = &a2[v10];
  v16 = *((_QWORD *)v15 + 1);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *((_QWORD *)v14 + 1) = v16;
  v17 = a3[7];
  v18 = a3[8];
  v19 = &a1[v17];
  v20 = &a2[v17];
  v21 = *((_QWORD *)v20 + 1);
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *((_QWORD *)v19 + 1) = v21;
  v22 = &a1[v18];
  v23 = &a2[v18];
  v24 = type metadata accessor for ArtworkImage.ViewModel(0);
  v79 = *(_QWORD *)(v24 - 8);
  v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v26 = v24;
  swift_bridgeObjectRetain();
  __dst = v25;
  if (v25(v23, 1, v24))
  {
    v27 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    v28 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v22, v23, v28);
    v29 = *(int *)(v24 + 20);
    v30 = &v22[v29];
    v31 = &v23[v29];
    v32 = type metadata accessor for Artwork.CropStyle(0);
    v33 = *(_QWORD *)(v32 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
    {
      v34 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v22, 0, 1, v26);
  }
  v35 = a3[9];
  v36 = &a1[v35];
  v37 = &a2[v35];
  v38 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v39 = *(_QWORD *)(v38 - 8);
  v84 = v26;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 10, v38))
  {
    v40 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    v41 = type metadata accessor for Playlist.Variant(0);
    v42 = *(_QWORD *)(v41 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v37, 1, v41))
    {
      v43 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v36, v37, v41);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v36, 0, 1, v41);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 10, v38);
  }
  v44 = a3[10];
  v45 = &a1[v44];
  v46 = &a2[v44];
  v47 = *(_QWORD *)&a2[v44 + 8];
  *(_QWORD *)v45 = *(_QWORD *)&a2[v44];
  *((_QWORD *)v45 + 1) = v47;
  v48 = *(_QWORD *)&a2[v44 + 24];
  *((_QWORD *)v45 + 2) = *(_QWORD *)&a2[v44 + 16];
  *((_QWORD *)v45 + 3) = v48;
  v49 = *(int *)(type metadata accessor for Featured.Caption(0) + 24);
  v50 = &v45[v49];
  v51 = &v46[v49];
  *v50 = *v51;
  v52 = type metadata accessor for Featured.Caption.Thumbnail(0);
  v53 = *(int *)(v52 + 20);
  v54 = &v50[v53];
  v55 = &v51[v53];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__dst(v55, 1, v84))
  {
    v56 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
  }
  else
  {
    v57 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v54, v55, v57);
    v58 = *(int *)(v84 + 20);
    __dsta = &v54[v58];
    v59 = &v55[v58];
    v60 = type metadata accessor for Artwork.CropStyle(0);
    v61 = *(_QWORD *)(v60 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v59, 1, v60))
    {
      v62 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(__dsta, v59, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v61 + 16))(__dsta, v59, v60);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56))(__dsta, 0, 1, v60);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v54, 0, 1, v84);
  }
  *(_QWORD *)&v50[*(int *)(v52 + 24)] = *(_QWORD *)&v51[*(int *)(v52 + 24)];
  v63 = a3[11];
  v64 = &a1[v63];
  v65 = &a2[v63];
  v66 = *(void **)&a2[v63];
  *(_QWORD *)&a1[v63] = v66;
  v67 = (int *)type metadata accessor for SegueContext(0);
  v68 = v67[5];
  v69 = &v64[v68];
  v70 = &v65[v68];
  v71 = v66;
  if (v82(v70, 1, v83))
  {
    v72 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v69, v70, v83);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v69, 0, 1, v83);
  }
  v64[v67[6]] = v65[v67[6]];
  v73 = v67[7];
  v74 = &v64[v73];
  v75 = &v65[v73];
  if (*(_QWORD *)v75)
  {
    v76 = *((_QWORD *)v75 + 1);
    *(_QWORD *)v74 = *(_QWORD *)v75;
    *((_QWORD *)v74 + 1) = v76;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v74 = *(_OWORD *)v75;
  }
  return a1;
}

char *sub_1006FB4C8(char *a1, char *a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(char *, uint64_t, uint64_t);
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t (*v24)(char *, uint64_t, uint64_t);
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(char *, uint64_t, uint64_t);
  int v41;
  int v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(char *, uint64_t, uint64_t);
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(char *, uint64_t, uint64_t);
  int v58;
  int v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  int v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t (*v80)(char *, uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t (*v87)(char *, uint64_t, uint64_t);
  int v88;
  size_t v89;
  char *v90;
  uint64_t v91;
  void **v92;
  char *v93;
  void *v94;
  void *v95;
  id v96;
  int *v97;
  uint64_t v98;
  char *v99;
  char *v100;
  int v101;
  int v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *__dst;
  char *__dsta;
  _QWORD *__src;
  uint64_t v114;
  uint64_t v115;
  uint64_t (*v116)(char *, uint64_t, uint64_t);

  v5 = type metadata accessor for GenericMusicItem(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 1, v5);
  v9 = v7(a2, 1, v5);
  v115 = v5;
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v9)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(a1, v5);
LABEL_6:
    v10 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 24))(a1, a2, v5);
LABEL_7:
  v11 = a3[5];
  v12 = &a1[v11];
  v13 = &a2[v11];
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = a3[6];
  v15 = &a1[v14];
  v16 = &a2[v14];
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *((_QWORD *)v15 + 1) = *((_QWORD *)v16 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = a3[7];
  v18 = &a1[v17];
  v19 = &a2[v17];
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = a3[8];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = type metadata accessor for ArtworkImage.ViewModel(0);
  __src = *(_QWORD **)(v23 - 8);
  v24 = (uint64_t (*)(char *, uint64_t, uint64_t))__src[6];
  v25 = v24(v21, 1, v23);
  v26 = v24(v22, 1, v23);
  v114 = v6;
  v116 = v7;
  if (!v25)
  {
    if (!v26)
    {
      v36 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 24))(v21, v22, v36);
      v37 = *(int *)(v23 + 20);
      v21 += v37;
      v22 += v37;
      v38 = type metadata accessor for Artwork.CropStyle(0);
      v39 = *(_QWORD *)(v38 - 8);
      v40 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v39 + 48);
      v41 = v40(v21, 1, v38);
      v42 = v40(v22, 1, v38);
      if (v41)
      {
        if (!v42)
        {
          (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v21, v22, v38);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v21, 0, 1, v38);
          goto LABEL_21;
        }
      }
      else
      {
        if (!v42)
        {
          (*(void (**)(char *, char *, uint64_t))(v39 + 24))(v21, v22, v38);
          goto LABEL_21;
        }
        (*(void (**)(char *, uint64_t))(v39 + 8))(v21, v38);
      }
      v34 = (uint64_t *)&unk_1011A14A0;
LABEL_14:
      v35 = sub_100007E8C(v34);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      goto LABEL_21;
    }
    sub_10005B748((uint64_t)v21, type metadata accessor for ArtworkImage.ViewModel);
LABEL_13:
    v34 = (uint64_t *)&unk_1011A3E10;
    goto LABEL_14;
  }
  if (v26)
    goto LABEL_13;
  v27 = type metadata accessor for Artwork(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v21, v22, v27);
  v28 = *(int *)(v23 + 20);
  v29 = &v21[v28];
  v30 = &v22[v28];
  v31 = type metadata accessor for Artwork.CropStyle(0);
  v32 = *(_QWORD *)(v31 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
  {
    v33 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v29, v30, v31);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
  }
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))__src[7])(v21, 0, 1, v23);
LABEL_21:
  v43 = a3[9];
  v44 = &a1[v43];
  v45 = &a2[v43];
  v46 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v47 = *(_QWORD *)(v46 - 8);
  v48 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v47 + 48);
  v49 = v48(v44, 10, v46);
  v50 = v48(v45, 10, v46);
  if (!v49)
  {
    if (!v50)
    {
      v55 = type metadata accessor for Playlist.Variant(0);
      v56 = *(_QWORD *)(v55 - 8);
      v57 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v56 + 48);
      v58 = v57(v44, 1, v55);
      v59 = v57(v45, 1, v55);
      if (v58)
      {
        if (!v59)
        {
          (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v44, v45, v55);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v44, 0, 1, v55);
          goto LABEL_34;
        }
      }
      else
      {
        if (!v59)
        {
          (*(void (**)(char *, char *, uint64_t))(v56 + 24))(v44, v45, v55);
          goto LABEL_34;
        }
        (*(void (**)(char *, uint64_t))(v56 + 8))(v44, v55);
      }
      v54 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
LABEL_28:
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
      goto LABEL_34;
    }
    sub_10004FF60((uint64_t)v44, (uint64_t *)&unk_1011A3DB0);
LABEL_27:
    v54 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_28;
  }
  if (v50)
    goto LABEL_27;
  v51 = type metadata accessor for Playlist.Variant(0);
  v52 = *(_QWORD *)(v51 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v45, 1, v51))
  {
    v53 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v44, v45, v51);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v44, 0, 1, v51);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 10, v46);
LABEL_34:
  v60 = a3[10];
  v61 = &a1[v60];
  v62 = &a2[v60];
  *(_QWORD *)v61 = *(_QWORD *)&a2[v60];
  *((_QWORD *)v61 + 1) = *(_QWORD *)&a2[v60 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v61 + 2) = *((_QWORD *)v62 + 2);
  *((_QWORD *)v61 + 3) = *((_QWORD *)v62 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v63 = *(int *)(type metadata accessor for Featured.Caption(0) + 24);
  v64 = &v61[v63];
  v65 = &v62[v63];
  *v64 = *v65;
  v66 = type metadata accessor for Featured.Caption.Thumbnail(0);
  v67 = *(int *)(v66 + 20);
  v68 = &v64[v67];
  v69 = &v65[v67];
  v70 = v24(&v64[v67], 1, v23);
  v71 = v24(v69, 1, v23);
  if (v70)
  {
    if (!v71)
    {
      v72 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 16))(v68, v69, v72);
      v73 = *(int *)(v23 + 20);
      __dst = &v68[v73];
      v74 = &v69[v73];
      v75 = type metadata accessor for Artwork.CropStyle(0);
      v76 = *(_QWORD *)(v75 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(v74, 1, v75))
      {
        v77 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(__dst, v74, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v76 + 16))(__dst, v74, v75);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(__dst, 0, 1, v75);
      }
      v80 = v116;
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))__src[7])(v68, 0, 1, v23);
      goto LABEL_56;
    }
LABEL_40:
    v78 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
    v79 = v115;
    v80 = v116;
    goto LABEL_57;
  }
  if (v71)
  {
    sub_10005B748((uint64_t)v68, type metadata accessor for ArtworkImage.ViewModel);
    goto LABEL_40;
  }
  v81 = type metadata accessor for Artwork(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 24))(v68, v69, v81);
  v82 = *(int *)(v23 + 20);
  v83 = &v68[v82];
  v84 = &v69[v82];
  v85 = type metadata accessor for Artwork.CropStyle(0);
  v86 = *(_QWORD *)(v85 - 8);
  v87 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v86 + 48);
  __dsta = v83;
  LODWORD(v83) = v87(v83, 1, v85);
  v88 = v87(v84, 1, v85);
  if ((_DWORD)v83)
  {
    v80 = v116;
    if (!v88)
    {
      (*(void (**)(char *, char *, uint64_t))(v86 + 16))(__dsta, v84, v85);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56))(__dsta, 0, 1, v85);
      goto LABEL_56;
    }
    v89 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
    v90 = __dsta;
  }
  else
  {
    v80 = v116;
    if (!v88)
    {
      (*(void (**)(char *, char *, uint64_t))(v86 + 24))(__dsta, v84, v85);
      goto LABEL_56;
    }
    (*(void (**)(char *, uint64_t))(v86 + 8))(__dsta, v85);
    v89 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
    v90 = __dsta;
  }
  memcpy(v90, v84, v89);
LABEL_56:
  v79 = v115;
LABEL_57:
  *(_QWORD *)&v64[*(int *)(v66 + 24)] = *(_QWORD *)&v65[*(int *)(v66 + 24)];
  v91 = a3[11];
  v92 = (void **)&a1[v91];
  v93 = &a2[v91];
  v94 = *(void **)&a2[v91];
  v95 = *v92;
  *v92 = v94;
  v96 = v94;

  v97 = (int *)type metadata accessor for SegueContext(0);
  v98 = v97[5];
  v99 = (char *)v92 + v98;
  v100 = &v93[v98];
  v101 = v80((char *)v92 + v98, 1, v79);
  v102 = v80(v100, 1, v79);
  if (v101)
  {
    if (!v102)
    {
      (*(void (**)(char *, char *, uint64_t))(v114 + 16))(v99, v100, v79);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v114 + 56))(v99, 0, 1, v79);
      goto LABEL_63;
    }
    goto LABEL_62;
  }
  if (v102)
  {
    (*(void (**)(char *, uint64_t))(v114 + 8))(v99, v79);
LABEL_62:
    v103 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v99, v100, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
    goto LABEL_63;
  }
  (*(void (**)(char *, char *, uint64_t))(v114 + 24))(v99, v100, v79);
LABEL_63:
  *((_BYTE *)v92 + v97[6]) = v93[v97[6]];
  v104 = v97[7];
  v105 = (void **)((char *)v92 + v104);
  v106 = &v93[v104];
  v107 = *(_QWORD *)&v93[v104];
  if (!*v105)
  {
    if (v107)
    {
      v109 = *((_QWORD *)v106 + 1);
      *v105 = v107;
      v105[1] = v109;
      swift_retain();
      return a1;
    }
LABEL_69:
    *(_OWORD *)v105 = *(_OWORD *)v106;
    return a1;
  }
  if (!v107)
  {
    swift_release();
    goto LABEL_69;
  }
  v108 = *((_QWORD *)v106 + 1);
  *v105 = v107;
  v105[1] = v108;
  swift_retain();
  swift_release();
  return a1;
}

char *sub_1006FBE6C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  __int128 v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  int *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unsigned int (*__dst)(char *, uint64_t, uint64_t);
  char *__dsta;
  unsigned int (*v69)(char *, uint64_t, uint64_t);
  uint64_t v70;

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v69 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v69(a2, 1, v6))
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(_OWORD *)&a1[v9] = *(_OWORD *)&a2[v9];
  v10 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = type metadata accessor for ArtworkImage.ViewModel(0);
  v66 = *(_QWORD *)(v13 - 8);
  __dst = *(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48);
  v65 = v7;
  if (__dst(v12, 1, v13))
  {
    v14 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v15 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v11, v12, v15);
    v16 = *(int *)(v13 + 20);
    v17 = &v11[v16];
    v18 = &v12[v16];
    v19 = type metadata accessor for Artwork.CropStyle(0);
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      v21 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v11, 0, 1, v13);
  }
  v70 = v13;
  v22 = a3[9];
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v26 = *(_QWORD *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 10, v25))
  {
    v27 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    v28 = v6;
    v29 = type metadata accessor for Playlist.Variant(0);
    v30 = *(_QWORD *)(v29 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v24, 1, v29))
    {
      v31 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v23, v24, v29);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v23, 0, 1, v29);
    }
    v6 = v28;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 10, v25);
  }
  v32 = a3[10];
  v33 = &a1[v32];
  v34 = &a2[v32];
  v35 = *(_OWORD *)&a2[v32 + 16];
  *(_OWORD *)v33 = *(_OWORD *)&a2[v32];
  *((_OWORD *)v33 + 1) = v35;
  v36 = *(int *)(type metadata accessor for Featured.Caption(0) + 24);
  v37 = &v33[v36];
  v38 = &v34[v36];
  *v37 = v34[v36];
  v39 = type metadata accessor for Featured.Caption.Thumbnail(0);
  v40 = *(int *)(v39 + 20);
  v41 = &v37[v40];
  v42 = &v38[v40];
  if (__dst(&v38[v40], 1, v70))
  {
    v43 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
  }
  else
  {
    v64 = v6;
    v44 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v41, v42, v44);
    v45 = *(int *)(v70 + 20);
    __dsta = &v41[v45];
    v46 = &v42[v45];
    v47 = type metadata accessor for Artwork.CropStyle(0);
    v48 = *(_QWORD *)(v47 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
    {
      v49 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(__dsta, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 32))(__dsta, v46, v47);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(__dsta, 0, 1, v47);
    }
    v6 = v64;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v41, 0, 1, v70);
  }
  *(_QWORD *)&v37[*(int *)(v39 + 24)] = *(_QWORD *)&v38[*(int *)(v39 + 24)];
  v50 = a3[11];
  v51 = &a1[v50];
  v52 = &a2[v50];
  *(_QWORD *)&a1[v50] = *(_QWORD *)&a2[v50];
  v53 = (int *)type metadata accessor for SegueContext(0);
  v54 = v53[5];
  v55 = &v51[v54];
  v56 = &v52[v54];
  if (v69(&v52[v54], 1, v6))
  {
    v57 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v55, v56, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v55, 0, 1, v6);
  }
  v51[v53[6]] = v52[v53[6]];
  v58 = v53[7];
  v59 = &v51[v58];
  v60 = &v52[v58];
  v61 = *(_QWORD *)v60;
  if (*(_QWORD *)v60)
  {
    v62 = *((_QWORD *)v60 + 1);
    *(_QWORD *)v59 = v61;
    *((_QWORD *)v59 + 1) = v62;
  }
  else
  {
    *(_OWORD *)v59 = *(_OWORD *)v60;
  }
  return a1;
}

char *sub_1006FC398(char *a1, char *a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(char *, uint64_t, uint64_t);
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t (*v30)(char *, uint64_t, uint64_t);
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(char *, uint64_t, uint64_t);
  int v47;
  int v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(char *, uint64_t, uint64_t);
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(char *, uint64_t, uint64_t);
  int v64;
  int v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  int v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t (*v88)(char *, uint64_t, uint64_t);
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t (*v95)(char *, uint64_t, uint64_t);
  int v96;
  size_t v97;
  char *v98;
  uint64_t v99;
  char *v100;
  char *v101;
  void *v102;
  int *v103;
  uint64_t v104;
  char *v105;
  char *v106;
  int v107;
  int v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *__dst;
  char *__dsta;
  _QWORD *__src;
  uint64_t v120;
  uint64_t v121;
  uint64_t (*v122)(char *, uint64_t, uint64_t);

  v5 = type metadata accessor for GenericMusicItem(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 1, v5);
  v9 = v7(a2, 1, v5);
  v121 = v5;
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v9)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(a1, v5);
LABEL_6:
    v10 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 40))(a1, a2, v5);
LABEL_7:
  v11 = a3[5];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v15 = *(_QWORD *)v13;
  v14 = *((_QWORD *)v13 + 1);
  *(_QWORD *)v12 = v15;
  *((_QWORD *)v12 + 1) = v14;
  swift_bridgeObjectRelease();
  v16 = a3[6];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v20 = *(_QWORD *)v18;
  v19 = *((_QWORD *)v18 + 1);
  *(_QWORD *)v17 = v20;
  *((_QWORD *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  v21 = a3[7];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v25 = *(_QWORD *)v23;
  v24 = *((_QWORD *)v23 + 1);
  *(_QWORD *)v22 = v25;
  *((_QWORD *)v22 + 1) = v24;
  swift_bridgeObjectRelease();
  v26 = a3[8];
  v27 = &a1[v26];
  v28 = &a2[v26];
  v29 = type metadata accessor for ArtworkImage.ViewModel(0);
  __src = *(_QWORD **)(v29 - 8);
  v30 = (uint64_t (*)(char *, uint64_t, uint64_t))__src[6];
  v31 = v30(v27, 1, v29);
  v32 = v30(v28, 1, v29);
  v120 = v6;
  v122 = v7;
  if (!v31)
  {
    if (!v32)
    {
      v42 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v27, v28, v42);
      v43 = *(int *)(v29 + 20);
      v27 += v43;
      v28 += v43;
      v44 = type metadata accessor for Artwork.CropStyle(0);
      v45 = *(_QWORD *)(v44 - 8);
      v46 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v45 + 48);
      v47 = v46(v27, 1, v44);
      v48 = v46(v28, 1, v44);
      if (v47)
      {
        if (!v48)
        {
          (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v27, v28, v44);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v27, 0, 1, v44);
          goto LABEL_21;
        }
      }
      else
      {
        if (!v48)
        {
          (*(void (**)(char *, char *, uint64_t))(v45 + 40))(v27, v28, v44);
          goto LABEL_21;
        }
        (*(void (**)(char *, uint64_t))(v45 + 8))(v27, v44);
      }
      v40 = (uint64_t *)&unk_1011A14A0;
LABEL_14:
      v41 = sub_100007E8C(v40);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      goto LABEL_21;
    }
    sub_10005B748((uint64_t)v27, type metadata accessor for ArtworkImage.ViewModel);
LABEL_13:
    v40 = (uint64_t *)&unk_1011A3E10;
    goto LABEL_14;
  }
  if (v32)
    goto LABEL_13;
  v33 = type metadata accessor for Artwork(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v27, v28, v33);
  v34 = *(int *)(v29 + 20);
  v35 = &v27[v34];
  v36 = &v28[v34];
  v37 = type metadata accessor for Artwork.CropStyle(0);
  v38 = *(_QWORD *)(v37 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
  {
    v39 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v35, v36, v37);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
  }
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))__src[7])(v27, 0, 1, v29);
LABEL_21:
  v49 = a3[9];
  v50 = &a1[v49];
  v51 = &a2[v49];
  v52 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v53 = *(_QWORD *)(v52 - 8);
  v54 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v53 + 48);
  v55 = v54(v50, 10, v52);
  v56 = v54(v51, 10, v52);
  if (!v55)
  {
    if (!v56)
    {
      v61 = type metadata accessor for Playlist.Variant(0);
      v62 = *(_QWORD *)(v61 - 8);
      v63 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v62 + 48);
      v64 = v63(v50, 1, v61);
      v65 = v63(v51, 1, v61);
      if (v64)
      {
        if (!v65)
        {
          (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v50, v51, v61);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v50, 0, 1, v61);
          goto LABEL_34;
        }
      }
      else
      {
        if (!v65)
        {
          (*(void (**)(char *, char *, uint64_t))(v62 + 40))(v50, v51, v61);
          goto LABEL_34;
        }
        (*(void (**)(char *, uint64_t))(v62 + 8))(v50, v61);
      }
      v60 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
LABEL_28:
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
      goto LABEL_34;
    }
    sub_10004FF60((uint64_t)v50, (uint64_t *)&unk_1011A3DB0);
LABEL_27:
    v60 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_28;
  }
  if (v56)
    goto LABEL_27;
  v57 = type metadata accessor for Playlist.Variant(0);
  v58 = *(_QWORD *)(v57 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v51, 1, v57))
  {
    v59 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v50, v51, v57);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v50, 0, 1, v57);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 10, v52);
LABEL_34:
  v66 = a3[10];
  v67 = &a1[v66];
  v68 = &a2[v66];
  v69 = *(_QWORD *)&a2[v66 + 8];
  *(_QWORD *)v67 = *(_QWORD *)&a2[v66];
  *((_QWORD *)v67 + 1) = v69;
  swift_bridgeObjectRelease();
  v70 = *((_QWORD *)v68 + 3);
  *((_QWORD *)v67 + 2) = *((_QWORD *)v68 + 2);
  *((_QWORD *)v67 + 3) = v70;
  swift_bridgeObjectRelease();
  v71 = *(int *)(type metadata accessor for Featured.Caption(0) + 24);
  v72 = &v67[v71];
  v73 = &v68[v71];
  *v72 = *v73;
  v74 = type metadata accessor for Featured.Caption.Thumbnail(0);
  v75 = *(int *)(v74 + 20);
  v76 = &v72[v75];
  v77 = &v73[v75];
  v78 = v30(&v72[v75], 1, v29);
  v79 = v30(v77, 1, v29);
  if (v78)
  {
    if (!v79)
    {
      v80 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 32))(v76, v77, v80);
      v81 = *(int *)(v29 + 20);
      __dst = &v76[v81];
      v82 = &v77[v81];
      v83 = type metadata accessor for Artwork.CropStyle(0);
      v84 = *(_QWORD *)(v83 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48))(v82, 1, v83))
      {
        v85 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(__dst, v82, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v84 + 32))(__dst, v82, v83);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v84 + 56))(__dst, 0, 1, v83);
      }
      v88 = v122;
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))__src[7])(v76, 0, 1, v29);
      goto LABEL_56;
    }
LABEL_40:
    v86 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
    v87 = v121;
    v88 = v122;
    goto LABEL_57;
  }
  if (v79)
  {
    sub_10005B748((uint64_t)v76, type metadata accessor for ArtworkImage.ViewModel);
    goto LABEL_40;
  }
  v89 = type metadata accessor for Artwork(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v89 - 8) + 40))(v76, v77, v89);
  v90 = *(int *)(v29 + 20);
  v91 = &v76[v90];
  v92 = &v77[v90];
  v93 = type metadata accessor for Artwork.CropStyle(0);
  v94 = *(_QWORD *)(v93 - 8);
  v95 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v94 + 48);
  __dsta = v91;
  LODWORD(v91) = v95(v91, 1, v93);
  v96 = v95(v92, 1, v93);
  if ((_DWORD)v91)
  {
    v88 = v122;
    if (!v96)
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(__dsta, v92, v93);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56))(__dsta, 0, 1, v93);
      goto LABEL_56;
    }
    v97 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
    v98 = __dsta;
  }
  else
  {
    v88 = v122;
    if (!v96)
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 40))(__dsta, v92, v93);
      goto LABEL_56;
    }
    (*(void (**)(char *, uint64_t))(v94 + 8))(__dsta, v93);
    v97 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
    v98 = __dsta;
  }
  memcpy(v98, v92, v97);
LABEL_56:
  v87 = v121;
LABEL_57:
  *(_QWORD *)&v72[*(int *)(v74 + 24)] = *(_QWORD *)&v73[*(int *)(v74 + 24)];
  v99 = a3[11];
  v100 = &a1[v99];
  v101 = &a2[v99];
  v102 = *(void **)&a1[v99];
  *(_QWORD *)&a1[v99] = *(_QWORD *)&a2[v99];

  v103 = (int *)type metadata accessor for SegueContext(0);
  v104 = v103[5];
  v105 = &v100[v104];
  v106 = &v101[v104];
  v107 = v88(&v100[v104], 1, v87);
  v108 = v88(v106, 1, v87);
  if (v107)
  {
    if (!v108)
    {
      (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v105, v106, v87);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v120 + 56))(v105, 0, 1, v87);
      goto LABEL_63;
    }
    goto LABEL_62;
  }
  if (v108)
  {
    (*(void (**)(char *, uint64_t))(v120 + 8))(v105, v87);
LABEL_62:
    v109 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v105, v106, *(_QWORD *)(*(_QWORD *)(v109 - 8) + 64));
    goto LABEL_63;
  }
  (*(void (**)(char *, char *, uint64_t))(v120 + 40))(v105, v106, v87);
LABEL_63:
  v100[v103[6]] = v101[v103[6]];
  v110 = v103[7];
  v111 = &v100[v110];
  v112 = &v101[v110];
  v113 = *(_QWORD *)&v101[v110];
  if (!*(_QWORD *)v111)
  {
    if (v113)
    {
      v115 = *((_QWORD *)v112 + 1);
      *(_QWORD *)v111 = v113;
      *((_QWORD *)v111 + 1) = v115;
      return a1;
    }
LABEL_69:
    *(_OWORD *)v111 = *(_OWORD *)v112;
    return a1;
  }
  if (!v113)
  {
    swift_release();
    goto LABEL_69;
  }
  v114 = *((_QWORD *)v112 + 1);
  *(_QWORD *)v111 = v113;
  *((_QWORD *)v111 + 1) = v114;
  swift_release();
  return a1;
}

uint64_t sub_1006FCCDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006FCCE8);
}

uint64_t sub_1006FCCE8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 2147483646)
  {
    v9 = *(_QWORD *)(a1 + a3[5] + 8);
    if (v9 >= 0xFFFFFFFF)
      LODWORD(v9) = -1;
    v10 = v9 - 1;
    if (v10 < 0)
      v10 = -1;
    return (v10 + 1);
  }
  else
  {
    v11 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v13 = v11;
      v14 = a3[8];
    }
    else
    {
      v15 = type metadata accessor for ArtworkImage.Placeholder(0);
      v12 = *(_QWORD *)(v15 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v13 = v15;
        v14 = a3[9];
      }
      else
      {
        v16 = type metadata accessor for Featured.Caption(0);
        v12 = *(_QWORD *)(v16 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v13 = v16;
          v14 = a3[10];
        }
        else
        {
          v13 = type metadata accessor for SegueContext(0);
          v12 = *(_QWORD *)(v13 - 8);
          v14 = a3[11];
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1 + v14, a2, v13);
  }
}

uint64_t sub_1006FCE14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006FCE20);
}

uint64_t sub_1006FCE20(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  result = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 2147483646)
    {
      *(_QWORD *)(a1 + a4[5] + 8) = a2;
      return result;
    }
    v13 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[8];
    }
    else
    {
      v16 = type metadata accessor for ArtworkImage.Placeholder(0);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[9];
      }
      else
      {
        v17 = type metadata accessor for Featured.Caption(0);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[10];
        }
        else
        {
          v10 = type metadata accessor for SegueContext(0);
          v14 = *(_QWORD *)(v10 - 8);
          v15 = a4[11];
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1006FCF3C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD v12[8];

  sub_1000E3A44(319, (unint64_t *)&qword_1011A06D8, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
  {
    v12[0] = *(_QWORD *)(v2 - 8) + 64;
    v12[1] = &unk_100ECBEC0;
    v12[2] = &unk_100ECBEC0;
    v12[3] = &unk_100ECBEC0;
    sub_1000E3A44(319, qword_1011A0C70, type metadata accessor for ArtworkImage.ViewModel, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    if (v5 <= 0x3F)
    {
      v12[4] = *(_QWORD *)(v4 - 8) + 64;
      v6 = type metadata accessor for ArtworkImage.Placeholder(319);
      if (v7 <= 0x3F)
      {
        v12[5] = *(_QWORD *)(v6 - 8) + 64;
        v8 = type metadata accessor for Featured.Caption(319);
        if (v9 <= 0x3F)
        {
          v12[6] = *(_QWORD *)(v8 - 8) + 64;
          v10 = type metadata accessor for SegueContext(319);
          if (v11 <= 0x3F)
          {
            v12[7] = *(_QWORD *)(v10 - 8) + 64;
            swift_initStructMetadata(a1, 256, 8, v12, a1 + 16);
          }
        }
      }
    }
  }
}

uint64_t sub_1006FD050(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAAC98, 1);
}

uint64_t sub_1006FD060@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v35;
  uint64_t v36;

  v4 = type metadata accessor for Font.TextStyle(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B6C0(a1, a2, type metadata accessor for Featured);
  v8 = (int *)type metadata accessor for FeaturedView(0);
  v9 = a2 + v8[5];
  *(_QWORD *)v9 = swift_getKeyPath(&unk_100ECC008);
  *(_BYTE *)(v9 + 8) = 0;
  v10 = (_QWORD *)(a2 + v8[6]);
  v11 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v12 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *v10 = EnvironmentObject.init()(v11, v12);
  v10[1] = v13;
  v14 = (_QWORD *)(a2 + v8[7]);
  v15 = type metadata accessor for NoticePresenter(0);
  v16 = sub_100048748((unint64_t *)&unk_1011C72F0, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
  *v14 = EnvironmentObject.init()(v15, v16);
  v14[1] = v17;
  v18 = a2 + v8[8];
  *(_QWORD *)v18 = sub_1000DEC04;
  *(_QWORD *)(v18 + 8) = 0;
  *(_BYTE *)(v18 + 16) = 0;
  v19 = (_QWORD *)(a2 + v8[9]);
  v20 = type metadata accessor for NavigationPusher();
  v21 = sub_100048748(&qword_10119F060, (uint64_t (*)(uint64_t))type metadata accessor for NavigationPusher, (uint64_t)&unk_100EC8D64);
  *v19 = EnvironmentObject.init()(v20, v21);
  v19[1] = v22;
  v23 = (_QWORD *)(a2 + v8[10]);
  v24 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
  v25 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
  *v23 = EnvironmentObject.init()(v24, v25);
  v23[1] = v26;
  v27 = (_QWORD *)(a2 + v8[11]);
  v28 = type metadata accessor for TabSelectionManager(0);
  v29 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
  *v27 = EnvironmentObject.init()(v28, v29);
  v27[1] = v30;
  v31 = a2 + v8[12];
  *(_QWORD *)v31 = swift_getKeyPath(&unk_100ECC030);
  *(_QWORD *)(v31 + 8) = 0;
  *(_BYTE *)(v31 + 16) = 0;
  v32 = a2 + v8[13];
  *(_QWORD *)v32 = swift_getKeyPath(&unk_100ECC058);
  *(_QWORD *)(v32 + 8) = 0;
  *(_BYTE *)(v32 + 16) = 0;
  v36 = 0x4055C00000000000;
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for Font.TextStyle.headline(_:), v4);
  v33 = sub_1002011C4();
  return ScaledMetric.init(wrappedValue:relativeTo:)(&v36, v7, &type metadata for Double, v33);
}

uint64_t sub_1006FD2FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  char *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(char *, uint64_t, uint64_t);
  int v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char v65;
  uint64_t v66;
  double v67;
  double v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  int *v73;
  uint64_t v74;
  _QWORD *v75;
  int *v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t *v79;
  char *v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _BYTE *v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103[24];
  char v104[24];
  char v105[24];
  char v106[24];
  char v107[16];
  char v108[8];

  v100 = a3;
  v96 = a4;
  v93 = type metadata accessor for Featured.Caption.Thumbnail(0);
  __chkstk_darwin(v93);
  v94 = (char *)&v84 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = type metadata accessor for Featured.Caption(0);
  __chkstk_darwin(v92);
  v95 = (uint64_t *)((char *)&v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v101 = (uint64_t)&v84 - v12;
  v13 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v13);
  v98 = (uint64_t)&v84 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v99 = (uint64_t)&v84 - v16;
  v17 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v17);
  v88 = (uint64_t)&v84 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v84 - v20;
  __chkstk_darwin(v22);
  v85 = (uint64_t)&v84 - v23;
  __chkstk_darwin(v24);
  v26 = (char *)&v84 - v25;
  __chkstk_darwin(v27);
  v29 = (char *)&v84 - v28;
  __chkstk_darwin(v30);
  v32 = (char *)&v84 - v31;
  __chkstk_darwin(v33);
  v91 = (uint64_t)&v84 - v34;
  sub_10004A160(a2, (uint64_t)&v84 - v34, (uint64_t *)&unk_1011A20D0);
  v35 = (uint64_t *)(a1 + OBJC_IVAR____TtC11MusicJSCore14JSFlowcaseItem_headlineText);
  swift_beginAccess(a1 + OBJC_IVAR____TtC11MusicJSCore14JSFlowcaseItem_headlineText, v108, 0, 0);
  v36 = v35[1];
  v90 = *v35;
  v37 = (uint64_t *)(a1 + OBJC_IVAR____TtC11MusicJSCore14JSFlowcaseItem_titleText);
  swift_beginAccess(a1 + OBJC_IVAR____TtC11MusicJSCore14JSFlowcaseItem_titleText, v107, 0, 0);
  v38 = *v37;
  v39 = (char *)v37[1];
  v97 = v38;
  sub_10004A160(a2, (uint64_t)v32, (uint64_t *)&unk_1011A20D0);
  v89 = v36;
  if (v39)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10004FF60((uint64_t)v32, (uint64_t *)&unk_1011A20D0);
  }
  else
  {
    v87 = v10;
    sub_10004A160((uint64_t)v32, (uint64_t)v29, (uint64_t *)&unk_1011A20D0);
    v40 = type metadata accessor for GenericMusicItem(0);
    v41 = *(_QWORD *)(v40 - 8);
    v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 48))(v29, 1, v40);
    swift_bridgeObjectRetain();
    if (v42 == 1)
    {
      sub_10004FF60((uint64_t)v32, (uint64_t *)&unk_1011A20D0);
      sub_10004FF60((uint64_t)v29, (uint64_t *)&unk_1011A20D0);
      v97 = 0;
      v39 = 0;
    }
    else
    {
      v97 = sub_1006FDB8C();
      v39 = v43;
      sub_10004FF60((uint64_t)v32, (uint64_t *)&unk_1011A20D0);
      (*(void (**)(char *, uint64_t))(v41 + 8))(v29, v40);
    }
    v10 = v87;
  }
  v44 = (uint64_t *)(a1 + OBJC_IVAR____TtC11MusicJSCore14JSFlowcaseItem_subtitleText);
  swift_beginAccess(a1 + OBJC_IVAR____TtC11MusicJSCore14JSFlowcaseItem_subtitleText, v106, 0, 0);
  v46 = *v44;
  v45 = v44[1];
  sub_10004A160(a2, (uint64_t)v26, (uint64_t *)&unk_1011A20D0);
  v87 = v39;
  if (v45)
  {
    v86 = v46;
    swift_bridgeObjectRetain();
    sub_10004FF60((uint64_t)v26, (uint64_t *)&unk_1011A20D0);
  }
  else
  {
    v47 = v10;
    v48 = v85;
    sub_10004A160((uint64_t)v26, v85, (uint64_t *)&unk_1011A20D0);
    v49 = type metadata accessor for GenericMusicItem(0);
    v50 = *(_QWORD *)(v49 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49) == 1)
    {
      sub_10004FF60((uint64_t)v26, (uint64_t *)&unk_1011A20D0);
      sub_10004FF60(v48, (uint64_t *)&unk_1011A20D0);
      v86 = 0;
      v45 = 0;
    }
    else
    {
      v51 = v48;
      v86 = sub_1006FE49C();
      v45 = v52;
      sub_10004FF60((uint64_t)v26, (uint64_t *)&unk_1011A20D0);
      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v51, v49);
    }
    v10 = v47;
  }
  sub_10004A160(v100, v99, (uint64_t *)&unk_1011A3E10);
  sub_10004A160(a2, (uint64_t)v21, (uint64_t *)&unk_1011A20D0);
  v53 = type metadata accessor for GenericMusicItem(0);
  v54 = *(_QWORD *)(v53 - 8);
  v55 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 48);
  v56 = v55(v21, 1, v53);
  v102 = a2;
  v85 = v45;
  if (v56 == 1)
  {
    sub_10004FF60((uint64_t)v21, (uint64_t *)&unk_1011A20D0);
    v57 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v101, 1, 10, v57);
  }
  else
  {
    GenericMusicItem.placeholder.getter((uint64_t)v10);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v21, v53);
    sub_10005B6C0((uint64_t)v10, v101, type metadata accessor for ArtworkImage.Placeholder);
  }
  v58 = (uint64_t *)(a1 + OBJC_IVAR____TtC11MusicJSCore14JSFlowcaseItem_descriptionTitleText);
  swift_beginAccess(a1 + OBJC_IVAR____TtC11MusicJSCore14JSFlowcaseItem_descriptionTitleText, v105, 0, 0);
  v59 = *v58;
  v60 = v58[1];
  v61 = (uint64_t *)(a1 + OBJC_IVAR____TtC11MusicJSCore14JSFlowcaseItem_descriptionText);
  swift_beginAccess(a1 + OBJC_IVAR____TtC11MusicJSCore14JSFlowcaseItem_descriptionText, v104, 0, 0);
  v62 = *v61;
  v63 = v61[1];
  v64 = (char *)(a1 + OBJC_IVAR____TtC11MusicJSCore14JSFlowcaseItem_thumbnailHorizontalAlignment);
  swift_beginAccess(a1 + OBJC_IVAR____TtC11MusicJSCore14JSFlowcaseItem_thumbnailHorizontalAlignment, v103, 0, 0);
  v65 = *v64;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1006FEC98(v98);
  v66 = v88;
  sub_10004A160(v102, v88, (uint64_t *)&unk_1011A20D0);
  if (v55((char *)v66, 1, v53) == 1)
  {
    sub_10004FF60(v66, (uint64_t *)&unk_1011A20D0);
    v67 = 1.0;
  }
  else
  {
    GenericMusicItem.aspectRatio.getter();
    v67 = v68;
    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v66, v53);
  }
  v69 = v89;
  sub_10004FF60(v100, (uint64_t *)&unk_1011A3E10);
  v70 = (uint64_t)v94;
  *v94 = v65;
  v71 = v93;
  sub_100065228(v98, v70 + *(int *)(v93 + 20), (uint64_t *)&unk_1011A3E10);
  *(double *)(v70 + *(int *)(v71 + 24)) = v67;
  v72 = v95;
  *v95 = v59;
  v72[1] = v60;
  v72[2] = v62;
  v72[3] = v63;
  sub_10005B6C0(v70, (uint64_t)v72 + *(int *)(v92 + 24), type metadata accessor for Featured.Caption.Thumbnail);
  v73 = (int *)type metadata accessor for Featured(0);
  v74 = v96;
  v75 = (_QWORD *)(v96 + v73[11]);
  *v75 = a1;
  v76 = (int *)type metadata accessor for SegueContext(0);
  sub_100065228(v102, (uint64_t)v75 + v76[5], (uint64_t *)&unk_1011A20D0);
  *((_BYTE *)v75 + v76[6]) = 0;
  v77 = (_QWORD *)((char *)v75 + v76[7]);
  *v77 = 0;
  v77[1] = 0;
  sub_100065228(v91, v74, (uint64_t *)&unk_1011A20D0);
  v78 = (_QWORD *)(v74 + v73[5]);
  *v78 = v90;
  v78[1] = v69;
  v79 = (uint64_t *)(v74 + v73[6]);
  v80 = v87;
  *v79 = v97;
  v79[1] = (uint64_t)v80;
  v81 = (uint64_t *)(v74 + v73[7]);
  v82 = v85;
  *v81 = v86;
  v81[1] = v82;
  sub_100065228(v99, v74 + v73[8], (uint64_t *)&unk_1011A3E10);
  sub_10005B6C0(v101, v74 + v73[9], type metadata accessor for ArtworkImage.Placeholder);
  return sub_10005B6C0((uint64_t)v72, v74 + v73[10], type metadata accessor for Featured.Caption);
}

uint64_t sub_1006FDB8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  char *v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  NSObject *v58;
  __n128 v59;
  os_log_type_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  __n128 v68;
  void (*v69)(char *, uint64_t, __n128);
  void (*v70)(char *, uint64_t, uint64_t, __n128);
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100[2];

  v80 = type metadata accessor for Logger(0);
  v76 = *(_QWORD *)(v80 - 8);
  __chkstk_darwin(v80);
  v75 = (char *)&v70 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = type metadata accessor for UploadedVideo(0);
  v73 = *(_QWORD *)(v74 - 8);
  __chkstk_darwin(v74);
  v72 = (char *)&v70 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = type metadata accessor for UploadedAudio(0);
  v78 = *(_QWORD *)(v79 - 8);
  __chkstk_darwin(v79);
  v77 = (char *)&v70 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Station(0);
  v82 = *(_QWORD *)(v3 - 8);
  v83 = v3;
  __chkstk_darwin(v3);
  v81 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Song(0);
  v85 = *(_QWORD *)(v5 - 8);
  v86 = v5;
  __chkstk_darwin(v5);
  v84 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for RadioShow(0);
  v88 = *(_QWORD *)(v7 - 8);
  v89 = v7;
  __chkstk_darwin(v7);
  v87 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Playlist(0);
  v91 = *(_QWORD *)(v9 - 8);
  v92 = v9;
  __chkstk_darwin(v9);
  v90 = (char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MusicVideo(0);
  v94 = *(_QWORD *)(v11 - 8);
  v95 = v11;
  __chkstk_darwin(v11);
  v93 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Curator(0);
  v96 = *(_QWORD *)(v13 - 8);
  v97 = v13;
  __chkstk_darwin(v13);
  v15 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Artist(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for Album(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)&v70 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for GenericMusicItem(0);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v71 = (char *)&v70 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __chkstk_darwin(v27);
  v30 = (char *)&v70 - v29;
  v70 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v25 + 16);
  v70((char *)&v70 - v29, v98, v24, v28);
  v31 = (*(uint64_t (**)(char *, uint64_t))(v25 + 88))(v30, v24);
  if (v31 != enum case for GenericMusicItem.album(_:))
  {
    if (v31 == enum case for GenericMusicItem.artist(_:))
    {
      (*(void (**)(char *, uint64_t))(v25 + 96))(v30, v24);
      v34 = (*(uint64_t (**)(char *, char *, uint64_t))(v17 + 32))(v19, v30, v16);
      v33 = Artist.name.getter(v34);
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      return v33;
    }
    v35 = v24;
    if (v31 == enum case for GenericMusicItem.curator(_:))
    {
      (*(void (**)(char *, uint64_t))(v25 + 96))(v30, v24);
      v37 = v96;
      v36 = v97;
      v38 = (*(uint64_t (**)(char *, char *, uint64_t))(v96 + 32))(v15, v30, v97);
      v33 = Curator.name.getter(v38);
      v39 = *(void (**)(char *, uint64_t))(v37 + 8);
      v40 = v15;
LABEL_26:
      v39(v40, v36);
      return v33;
    }
    v41 = v30;
    if (v31 == enum case for GenericMusicItem.genre(_:))
      goto LABEL_8;
    if (v31 == enum case for GenericMusicItem.musicVideo(_:))
    {
      (*(void (**)(char *, uint64_t))(v25 + 96))(v30, v24);
      v42 = v93;
      v43 = v94;
      v36 = v95;
      v44.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v94 + 32))(v93, v30, v95);
      v45 = MusicVideo.title.getter(v44);
    }
    else if (v31 == enum case for GenericMusicItem.playlist(_:))
    {
      (*(void (**)(char *, uint64_t))(v25 + 96))(v30, v24);
      v42 = v90;
      v43 = v91;
      v36 = v92;
      v46.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v91 + 32))(v90, v30, v92);
      v45 = Playlist.name.getter(v46);
    }
    else if (v31 == enum case for GenericMusicItem.radioShow(_:))
    {
      (*(void (**)(char *, uint64_t))(v25 + 96))(v30, v24);
      v42 = v87;
      v43 = v88;
      v36 = v89;
      v47 = (*(uint64_t (**)(char *, char *, uint64_t))(v88 + 32))(v87, v30, v89);
      v45 = RadioShow.name.getter(v47);
    }
    else
    {
      if (v31 == enum case for GenericMusicItem.recordLabel(_:))
      {
LABEL_8:
        (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
        return 0;
      }
      if (v31 == enum case for GenericMusicItem.song(_:))
      {
        (*(void (**)(char *, uint64_t))(v25 + 96))(v30, v24);
        v42 = v84;
        v43 = v85;
        v36 = v86;
        v48 = (*(uint64_t (**)(char *, char *, uint64_t))(v85 + 32))(v84, v30, v86);
        v45 = Song.title.getter(v48);
      }
      else if (v31 == enum case for GenericMusicItem.station(_:))
      {
        (*(void (**)(char *, uint64_t))(v25 + 96))(v30, v24);
        v42 = v81;
        v43 = v82;
        v36 = v83;
        v49 = (*(uint64_t (**)(char *, char *, uint64_t))(v82 + 32))(v81, v30, v83);
        v45 = Station.name.getter(v49);
      }
      else if (v31 == enum case for GenericMusicItem.uploadedAudio(_:))
      {
        (*(void (**)(char *, uint64_t))(v25 + 96))(v30, v24);
        v43 = v78;
        v42 = v77;
        v36 = v79;
        v50 = (*(uint64_t (**)(char *, char *, uint64_t))(v78 + 32))(v77, v30, v79);
        v45 = UploadedAudio.title.getter(v50);
      }
      else
      {
        if (v31 != enum case for GenericMusicItem.uploadedVideo(_:))
        {
          v53 = Logger.musicKit.unsafeMutableAddressor();
          v54 = v76;
          v55 = v75;
          (*(void (**)(char *, uint64_t, uint64_t))(v76 + 16))(v75, v53, v80);
          v56 = v71;
          v57 = ((uint64_t (*)(char *, uint64_t, uint64_t))v70)(v71, v98, v24);
          v58 = Logger.logObject.getter(v57);
          v60 = static os_log_type_t.fault.getter(v59);
          v61 = v60;
          if (os_log_type_enabled(v58, v60))
          {
            v62 = swift_slowAlloc(22, -1);
            v63 = swift_slowAlloc(64, -1);
            v100[0] = v63;
            *(_DWORD *)v62 = 136446467;
            LODWORD(v98) = v61;
            v99 = sub_100322200(0xD000000000000010, 0x8000000100E32610, v100);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v99, v100);
            *(_WORD *)(v62 + 12) = 2081;
            v64 = sub_100048748((unint64_t *)&qword_1011A1430, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t)&protocol conformance descriptor for GenericMusicItem);
            v65 = dispatch thunk of CustomStringConvertible.description.getter(v24, v64);
            v67 = v66;
            v99 = sub_100322200(v65, v66, v100);
            v41 = v30;
            v35 = v24;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v99, v100);
            v68 = swift_bridgeObjectRelease(v67);
            v69 = *(void (**)(char *, uint64_t, __n128))(v25 + 8);
            v69(v56, v24, v68);
            _os_log_impl((void *)&_mh_execute_header, v58, (os_log_type_t)v98, "Unhandled case for %{public}s: %{private}s", (uint8_t *)v62, 0x16u);
            swift_arrayDestroy(v63, 2, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v63, -1, -1);
            swift_slowDealloc(v62, -1, -1);

            (*(void (**)(char *, uint64_t))(v76 + 8))(v75, v80);
          }
          else
          {
            v69 = *(void (**)(char *, uint64_t, __n128))(v25 + 8);
            ((void (*)(char *, uint64_t))v69)(v56, v24);

            (*(void (**)(char *, uint64_t))(v54 + 8))(v55, v80);
          }
          ((void (*)(char *, uint64_t))v69)(v41, v35);
          return 0;
        }
        (*(void (**)(char *, uint64_t))(v25 + 96))(v30, v24);
        v43 = v73;
        v42 = v72;
        v36 = v74;
        v51.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v73 + 32))(v72, v30, v74);
        v45 = UploadedVideo.title.getter(v51);
      }
    }
    v33 = v45;
    v39 = *(void (**)(char *, uint64_t))(v43 + 8);
    v40 = v42;
    goto LABEL_26;
  }
  (*(void (**)(char *, uint64_t))(v25 + 96))(v30, v24);
  v32 = (*(uint64_t (**)(char *, char *, uint64_t))(v21 + 32))(v23, v30, v20);
  v33 = Album.artistName.getter(v32);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  return v33;
}

uint64_t sub_1006FE49C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  char *v30;
  void (*v31)(char *, uint64_t, uint64_t, __n128);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  NSObject *v58;
  __n128 v59;
  os_log_type_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  __n128 v68;
  void (*v69)(char *, uint64_t, __n128);
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92[2];

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v76 = *(_QWORD *)(v2 - 8);
  v77 = v2;
  __chkstk_darwin(v2);
  v75 = (char *)&v70 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UploadedVideo(0);
  v72 = *(_QWORD *)(v4 - 8);
  v73 = v4;
  __chkstk_darwin(v4);
  v71 = (char *)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UploadedAudio(0);
  v79 = *(_QWORD *)(v6 - 8);
  v80 = v6;
  __chkstk_darwin(v6);
  v78 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Song(0);
  v82 = *(_QWORD *)(v8 - 8);
  v83 = v8;
  __chkstk_darwin(v8);
  v81 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Playlist(0);
  v85 = *(_QWORD *)(v10 - 8);
  v86 = v10;
  __chkstk_darwin(v10);
  v84 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MusicVideo(0);
  v88 = *(_QWORD *)(v12 - 8);
  v89 = v12;
  __chkstk_darwin(v12);
  v87 = (char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C(&qword_1011A58C8);
  __chkstk_darwin(v14);
  v90 = (char *)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Curator(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for Album(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)&v70 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for GenericMusicItem(0);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v70 = (char *)&v70 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __chkstk_darwin(v27);
  v30 = (char *)&v70 - v29;
  v31 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v25 + 16);
  v74 = v1;
  v32 = v1;
  v34 = v33;
  v31((char *)&v70 - v29, v32, v33, v28);
  v35 = (*(uint64_t (**)(char *, uint64_t))(v25 + 88))(v30, v34);
  if (v35 != enum case for GenericMusicItem.album(_:))
  {
    if (v35 == enum case for GenericMusicItem.artist(_:))
      goto LABEL_8;
    if (v35 == enum case for GenericMusicItem.curator(_:))
    {
      (*(void (**)(char *, uint64_t))(v25 + 96))(v30, v34);
      v38 = (*(uint64_t (**)(char *, char *, uint64_t))(v17 + 32))(v19, v30, v16);
      v39 = (uint64_t)v90;
      Curator.editorialNotes.getter(v38);
      v40 = type metadata accessor for EditorialNotes(0);
      v41 = *(_QWORD *)(v40 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40) != 1)
      {
        v37 = EditorialNotes.short.getter();
        (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
        (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v39, v40);
        return v37;
      }
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      sub_10004FF60(v39, &qword_1011A58C8);
      return 0;
    }
    if (v35 == enum case for GenericMusicItem.genre(_:))
      goto LABEL_8;
    if (v35 == enum case for GenericMusicItem.musicVideo(_:))
    {
      (*(void (**)(char *, uint64_t))(v25 + 96))(v30, v34);
      v43 = v87;
      v44 = v88;
      v45 = v89;
      v46 = (*(uint64_t (**)(char *, char *, uint64_t))(v88 + 32))(v87, v30, v89);
      v47 = MusicVideo.artistName.getter(v46);
    }
    else if (v35 == enum case for GenericMusicItem.playlist(_:))
    {
      (*(void (**)(char *, uint64_t))(v25 + 96))(v30, v34);
      v43 = v84;
      v44 = v85;
      v45 = v86;
      v48 = (*(uint64_t (**)(char *, char *, uint64_t))(v85 + 32))(v84, v30, v86);
      v47 = Playlist.curatorName.getter(v48);
    }
    else
    {
      if (v35 == enum case for GenericMusicItem.radioShow(_:) || v35 == enum case for GenericMusicItem.recordLabel(_:))
        goto LABEL_8;
      if (v35 == enum case for GenericMusicItem.song(_:))
      {
        (*(void (**)(char *, uint64_t))(v25 + 96))(v30, v34);
        v43 = v81;
        v44 = v82;
        v45 = v83;
        v49 = (*(uint64_t (**)(char *, char *, uint64_t))(v82 + 32))(v81, v30, v83);
        v47 = Song.artistName.getter(v49);
        goto LABEL_25;
      }
      if (v35 == enum case for GenericMusicItem.station(_:))
      {
LABEL_8:
        (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v34);
        return 0;
      }
      if (v35 == enum case for GenericMusicItem.uploadedAudio(_:))
      {
        (*(void (**)(char *, uint64_t))(v25 + 96))(v30, v34);
        v43 = v78;
        v44 = v79;
        v45 = v80;
        v50 = (*(uint64_t (**)(char *, char *, uint64_t))(v79 + 32))(v78, v30, v80);
        v47 = UploadedAudio.artistName.getter(v50);
      }
      else
      {
        if (v35 != enum case for GenericMusicItem.uploadedVideo(_:))
        {
          v52 = Logger.musicKit.unsafeMutableAddressor();
          v54 = v75;
          v53 = v76;
          v55 = v77;
          (*(void (**)(char *, uint64_t, uint64_t))(v76 + 16))(v75, v52, v77);
          v56 = v70;
          v57 = ((uint64_t (*)(char *, uint64_t, uint64_t))v31)(v70, v74, v34);
          v58 = Logger.logObject.getter(v57);
          v60 = static os_log_type_t.fault.getter(v59);
          v61 = v60;
          if (os_log_type_enabled(v58, v60))
          {
            v62 = swift_slowAlloc(22, -1);
            v63 = swift_slowAlloc(64, -1);
            v92[0] = v63;
            *(_DWORD *)v62 = 136446467;
            LODWORD(v90) = v61;
            v91 = sub_100322200(0xD000000000000010, 0x8000000100E32610, v92);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v91, v92);
            *(_WORD *)(v62 + 12) = 2081;
            v64 = sub_100048748((unint64_t *)&qword_1011A1430, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t)&protocol conformance descriptor for GenericMusicItem);
            v65 = dispatch thunk of CustomStringConvertible.description.getter(v34, v64);
            v67 = v66;
            v91 = sub_100322200(v65, v66, v92);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v91, v92);
            v68 = swift_bridgeObjectRelease(v67);
            v69 = *(void (**)(char *, uint64_t, __n128))(v25 + 8);
            v69(v56, v34, v68);
            _os_log_impl((void *)&_mh_execute_header, v58, (os_log_type_t)v90, "Unhandled case for %{public}s: %{private}s", (uint8_t *)v62, 0x16u);
            swift_arrayDestroy(v63, 2, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v63, -1, -1);
            swift_slowDealloc(v62, -1, -1);

            (*(void (**)(char *, uint64_t))(v76 + 8))(v75, v77);
          }
          else
          {
            v69 = *(void (**)(char *, uint64_t, __n128))(v25 + 8);
            ((void (*)(char *, uint64_t))v69)(v56, v34);

            (*(void (**)(char *, uint64_t))(v53 + 8))(v54, v55);
          }
          ((void (*)(char *, uint64_t))v69)(v30, v34);
          return 0;
        }
        (*(void (**)(char *, uint64_t))(v25 + 96))(v30, v34);
        v44 = v72;
        v45 = v73;
        v43 = v71;
        v51 = (*(uint64_t (**)(char *, char *, uint64_t))(v72 + 32))(v71, v30, v73);
        v47 = UploadedVideo.artistName.getter(v51);
      }
    }
LABEL_25:
    v37 = v47;
    (*(void (**)(char *, uint64_t))(v44 + 8))(v43, v45);
    return v37;
  }
  (*(void (**)(char *, uint64_t))(v25 + 96))(v30, v34);
  v36 = (*(uint64_t (**)(char *, char *, uint64_t))(v21 + 32))(v23, v30, v20);
  v37 = Album.artistName.getter(v36);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  return v37;
}

uint64_t sub_1006FEC98@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id *v16;
  __n128 v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  _BYTE v25[24];

  v3 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
  __chkstk_darwin(v3);
  v5 = &v25[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = sub_100007E8C(&qword_1011A1440);
  __chkstk_darwin(v6);
  v8 = &v25[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for Artwork(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v25[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v13);
  v15 = &v25[-v14 - 8];
  v16 = (id *)(v1 + OBJC_IVAR____TtC11MusicJSCore14JSFlowcaseItem_thumbnailArtwork);
  v17 = swift_beginAccess(v16, v25, 0, 0);
  if (*v16)
  {
    v18 = *v16;
    JSArtwork.artwork.getter(v8);

    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
    {
      (*(void (**)(char *, _QWORD *, uint64_t))(v10 + 32))(v15, v8, v9);
      v19 = (*(uint64_t (**)(char *, char *, uint64_t))(v10 + 16))(v12, v15, v9);
      static Artwork.CropStyle.specificRectangle.getter(v19);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
      v20 = type metadata accessor for Artwork.CropStyle(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v5, 0, 1, v20);
      ArtworkImage.ViewModel.init(artwork:cropStyle:)((uint64_t)v12, (uint64_t)v5, a1);
      v21 = type metadata accessor for ArtworkImage.ViewModel(0);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a1, 0, 1, v21);
    }
  }
  else
  {
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t, __n128))(v10 + 56))(v8, 1, 1, v9, v17);
  }
  sub_10004FF60((uint64_t)v8, &qword_1011A1440);
  v23 = type metadata accessor for ArtworkImage.ViewModel(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(a1, 1, 1, v23);
}

uint64_t sub_1006FEED4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t OpaqueTypeConformance2;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  unsigned __int8 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (**v66)(_QWORD, _QWORD);
  uint64_t v67;
  uint64_t v68;
  void (**v69)(_QWORD, _QWORD);
  void (**v70)(_QWORD, _QWORD);
  int *v71;
  uint64_t v72;
  id v73;
  char v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  _QWORD *v91;
  unint64_t v92;
  uint64_t KeyPath;
  uint64_t v94;
  uint64_t v95;
  char v96;
  int *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void *v115;
  void *v116;
  uint64_t v117;
  uint64_t *v118;
  void (**v119)(_QWORD, _QWORD);
  uint64_t v120;
  _QWORD *v121;
  unint64_t v122;
  unint64_t v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  __n128 v138;
  uint64_t result;
  uint64_t v140;
  uint64_t *v141;
  uint64_t v142;
  unint64_t *v143;
  void *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  _QWORD *v155;
  unint64_t v156;
  ValueMetadata *v157;
  unint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  void *v164;
  void (**v165)(_QWORD, _QWORD);
  _QWORD *v166;
  uint64_t v167;
  uint64_t v168;
  _UNKNOWN **v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t *v178;
  uint64_t v179;
  uint64_t v180;
  void (**v181)(_QWORD, _QWORD);
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  int *v186;
  _BYTE v187[32];
  uint64_t v188;
  _QWORD v189[5];
  _QWORD v190[5];
  _QWORD v191[5];
  _QWORD v192[3];
  uint64_t v193;
  _UNKNOWN **v194;
  _QWORD *v195;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  void (**v202)(_QWORD, _QWORD);
  uint64_t v203;
  uint64_t v204;
  void (**v205)(_QWORD, _QWORD);
  __int128 v206;
  __int128 v207;
  __int128 v208;
  void (**v209)(_QWORD, _QWORD);
  __int128 v210;
  void (**v211)(_QWORD, _QWORD);

  v2 = v1;
  v177 = a1;
  v3 = type metadata accessor for FeaturedView(0);
  __chkstk_darwin(v3);
  v159 = (uint64_t)&v159 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C((uint64_t *)&unk_1011A20C0);
  __chkstk_darwin(v5);
  v169 = (_UNKNOWN **)((char *)&v159 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v7);
  v178 = (uint64_t *)((char *)&v159 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for AccessibilityTraits(0);
  v183 = *(_QWORD *)(v9 - 8);
  v184 = v9;
  __chkstk_darwin(v9);
  v180 = (uint64_t)&v159 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for AccessibilityChildBehavior(0);
  v165 = *(void (***)(_QWORD, _QWORD))(v11 - 8);
  v166 = (_QWORD *)v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v159 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FeaturedView.CaptionedArtwork(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v159 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C(&qword_1011C5450);
  v160 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v19 = (char *)&v159 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v161 = sub_100007E8C(&qword_1011C5458);
  v163 = *(_QWORD *)(v161 - 8);
  __chkstk_darwin(v161);
  v21 = (char *)&v159 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v164 = (void *)sub_100007E8C(&qword_1011C5460);
  __chkstk_darwin(v164);
  v23 = (char *)&v159 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v167 = sub_100007E8C(&qword_1011C5468);
  v179 = *(_QWORD *)(v167 - 8);
  __chkstk_darwin(v167);
  v25 = (char *)&v159 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_100007E8C(&qword_1011AC458);
  v181 = *(void (***)(_QWORD, _QWORD))(v26 - 8);
  v182 = v26;
  __chkstk_darwin(v26);
  v162 = (char *)&v159 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v172 = sub_100007E8C(&qword_1011AC460);
  __chkstk_darwin(v172);
  v185 = (uint64_t)&v159 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_100007E8C(&qword_1011C5470);
  v175 = *(_QWORD *)(v29 - 8);
  v176 = v29;
  __chkstk_darwin(v29);
  v174 = (uint64_t)&v159 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v173 = sub_100007E8C(&qword_1011C5478);
  v171 = *(_QWORD *)(v173 - 8);
  __chkstk_darwin(v173);
  v170 = (char *)&v159 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704(v2, (uint64_t)v16, type metadata accessor for Featured);
  v186 = (int *)v3;
  v32 = sub_100007E8C(&qword_1011A70B8);
  ScaledMetric.wrappedValue.getter(&v206, v32);
  sub_1006FFD7C(v2, (uint64_t)v19, *(double *)&v206);
  v33 = sub_10005B748((uint64_t)v16, type metadata accessor for FeaturedView.CaptionedArtwork);
  static AccessibilityChildBehavior.combine.getter(v33);
  v34 = sub_100044B54(&qword_1011C5480);
  v35 = sub_100702F90();
  *(_QWORD *)&v206 = v34;
  *((_QWORD *)&v206 + 1) = v35;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v206, &opaque type descriptor for <<opaque return type of View.materialContentMode(_:)>>, 1);
  View.accessibilityElement(children:)(v13, v17, OpaqueTypeConformance2);
  ((void (**)(char *, _QWORD *))v165)[1](v13, v166);
  v37 = (*(uint64_t (**)(char *, uint64_t))(v160 + 8))(v19, v17);
  v38 = v180;
  static AccessibilityTraits.isStaticText.getter(v37);
  *(_QWORD *)&v206 = v17;
  *((_QWORD *)&v206 + 1) = OpaqueTypeConformance2;
  v39 = swift_getOpaqueTypeConformance2(&v206, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v40 = v161;
  View.accessibilityRemoveTraits(_:)(v38, v161, v39);
  (*(void (**)(uint64_t, uint64_t))(v183 + 8))(v38, v184);
  (*(void (**)(char *, uint64_t))(v163 + 8))(v21, v40);
  v41 = Corner.featured.unsafeMutableAddressor();
  v42 = *(_QWORD *)v41;
  v43 = *((_QWORD *)v41 + 1);
  LOBYTE(v21) = *((_BYTE *)v41 + 16);
  v44 = sub_10070302C();
  v45 = v43;
  v46 = v164;
  View.corner(_:)(v42, v45, (char)v21, (uint64_t)v164, v44);
  sub_10004FF60((uint64_t)v23, &qword_1011C5460);
  v47 = *(_QWORD *)v41;
  v48 = *((_QWORD *)v41 + 1);
  LOBYTE(v41) = *((_BYTE *)v41 + 16);
  *(_QWORD *)&v206 = v46;
  *((_QWORD *)&v206 + 1) = v44;
  v49 = swift_getOpaqueTypeConformance2(&v206, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
  v50 = v162;
  v51 = v48;
  v52 = (uint64_t)v178;
  v53 = v41;
  v54 = v167;
  View.hover(corner:outset:isRelative:namespace:isEnabled:)(v47, v51, v53, 0, 0, 1, 1, v167, 0.0, v49);
  (*(void (**)(char *, uint64_t))(v179 + 8))(v25, v54);
  v55 = type metadata accessor for Featured(0);
  sub_10030ED28(v2 + *(int *)(v55 + 44), v185);
  ((void (**)(char *, uint64_t))v181)[1](v50, v182);
  sub_10004A160(v2, v52, (uint64_t *)&unk_1011A20D0);
  v56 = type metadata accessor for GenericMusicItem(0);
  v57 = *(_QWORD *)(v56 - 8);
  v58 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v52, 1, v56);
  v168 = v2;
  if (v58 == 1)
  {
    v59 = sub_10004FF60(v52, (uint64_t *)&unk_1011A20D0);
    v60 = 0;
    v61 = 0;
    v62 = 0;
    v63 = 0;
    v64 = 0;
    v65 = 0;
    v66 = 0;
    v67 = 0;
    v68 = 0;
    v69 = 0;
LABEL_12:
    v183 = v64;
    v184 = v63;
    v181 = v66;
    v182 = v65;
    v179 = v68;
    v180 = v67;
    v165 = v69;
    v178 = &v159;
    *(_QWORD *)&v206 = v60;
    *((_QWORD *)&v206 + 1) = v61;
    *(_QWORD *)&v207 = v62;
    *((_QWORD *)&v207 + 1) = v63;
    *(_QWORD *)&v208 = v64;
    *((_QWORD *)&v208 + 1) = v65;
    v209 = v66;
    *(_QWORD *)&v210 = v67;
    *((_QWORD *)&v210 + 1) = v68;
    v211 = v69;
    __chkstk_darwin(v59);
    v120 = v168;
    v121 = (_QWORD *)sub_100007E8C(&qword_1011AC3B0);
    v166 = v121;
    v122 = sub_100703108();
    v167 = v122;
    v123 = sub_1000E3EE4();
    v169 = (_UNKNOWN **)v123;
    v124 = (_QWORD *)sub_100314AC0();
    v155 = v121;
    v156 = v122;
    v125 = v172;
    v126 = v174;
    v127 = v185;
    View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)(0, 0, (uint64_t)&v206, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)sub_100314AB8, (uint64_t)&v155, (uint64_t)UIScreen.Dimensions.size.getter, 0, v174, v172, (uint64_t)&type metadata for ActionType, v155, v156, v123, v124);
    sub_1000E4164(v60, v61, v62, v184, v183, v182, v181, v180, v179, (uint64_t)v165);
    sub_10004FF60(v127, &qword_1011AC460);
    v128 = (uint64_t *)(v120 + v186[8]);
    v129 = *v128;
    v130 = v128[1];
    v131 = *((unsigned __int8 *)v128 + 16);
    v132 = sub_100007E8C(&qword_1011A03A8);
    v133 = sub_100049F28(&qword_1011A0548, &qword_1011A03A8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
    v134 = StateObject.wrappedValue.getter(v129, v130, v131, v132, v133);
    v192[0] = v125;
    v192[1] = &type metadata for ActionType;
    v192[2] = v166;
    v193 = v167;
    v194 = v169;
    v195 = v124;
    v135 = swift_getOpaqueTypeConformance2(v192, &opaque type descriptor for <<opaque return type of View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)>>, 1);
    v136 = v170;
    v137 = v176;
    View.shareSheetPresenting(_:)(v134, v176, v135);
    v138 = swift_release();
    (*(void (**)(uint64_t, uint64_t, __n128))(v175 + 8))(v126, v137, v138);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v171 + 32))(v177, v136, v173);
  }
  v70 = (void (**)(_QWORD, _QWORD))Optional<A>.playbackIntent.getter();
  v71 = v186;
  v72 = v2 + v186[5];
  v73 = *(id *)v72;
  v74 = *(_BYTE *)(v72 + 8);
  sub_1000A4100(*(id *)v72, v74);
  v164 = sub_100824044(v73, v74);
  sub_1000A4224(v73, v74);
  v75 = type metadata accessor for PlaylistContext(0);
  (*(void (**)(_UNKNOWN **, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 56))(v169, 1, 1, v75);
  v76 = (uint64_t *)(v2 + v71[6]);
  v77 = *v76;
  if (*v76)
  {
    v165 = v70;
    v193 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
    v194 = &protocol witness table for <A> PresentedViewState<A>;
    v192[0] = v77;
    v78 = (uint64_t *)(v2 + v71[7]);
    v79 = *v78;
    if (*v78)
    {
      v191[3] = type metadata accessor for NoticePresenter(0);
      v191[4] = &protocol witness table for NoticePresenter;
      v191[0] = v79;
      v209 = 0;
      v207 = 0u;
      v208 = 0u;
      v206 = 0u;
      v210 = xmmword_100EA93A0;
      v80 = v2 + v71[8];
      v81 = *(_QWORD *)v80;
      v82 = *(_QWORD *)(v80 + 8);
      v83 = *(unsigned __int8 *)(v80 + 16);
      swift_retain();
      swift_retain();
      v84 = sub_100007E8C(&qword_1011A03A8);
      v85 = sub_100049F28(&qword_1011A0548, &qword_1011A03A8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
      v86 = StateObject.wrappedValue.getter(v81, v82, v83, v84, v85);
      v190[3] = v84;
      v190[4] = &protocol witness table for <A> PresentedViewState<A>;
      v190[0] = v86;
      v87 = (uint64_t *)(v2 + v71[9]);
      v88 = *v87;
      if (*v87)
      {
        v89 = type metadata accessor for NavigationPusher();
        v189[3] = v89;
        v189[4] = &off_1010D58B0;
        v188 = 0;
        v189[0] = v88;
        memset(v187, 0, sizeof(v187));
        v90 = (_QWORD *)(v2 + v71[10]);
        if (*v90)
        {
          v166 = (_QWORD *)v57;
          v167 = v56;
          v91 = (_QWORD *)(v2 + v71[11]);
          if (*v91)
          {
            __chkstk_darwin(v89);
            v92 = sub_1000502A4();
            KeyPath = swift_getKeyPath(&unk_100ECBF80);
            __chkstk_darwin(KeyPath);
            v157 = &type metadata for TabIdentifier;
            v158 = v92;
            v94 = swift_getKeyPath(&unk_100ECBFB8);
            swift_retain();
            swift_retain();
            swift_retain();
            static Published.subscript.getter(&v196, v95, KeyPath, v94);
            swift_release();
            swift_release();
            swift_release();
            v96 = v196;
            v97 = v186;
            v98 = v2 + v186[12];
            v99 = *(_QWORD *)v98;
            v100 = *(_QWORD *)(v98 + 8);
            LOBYTE(v94) = *(_BYTE *)(v98 + 16);
            sub_1000A410C(*(_QWORD *)v98, v100, v94);
            sub_100824224(v99, v100, v94);
            sub_1000A4230(v99, v100, v94);
            sub_10066D160(v96);
            v102 = v101;
            v104 = v103;
            swift_release();
            swift_bridgeObjectRelease();
            v105 = v2 + v97[13];
            v106 = *(_QWORD *)v105;
            v107 = *(_QWORD *)(v105 + 8);
            LOBYTE(v100) = *(_BYTE *)(v105 + 16);
            sub_1000A411C(*(_QWORD *)v105, v107, v100);
            sub_100824400(v106, v107, v100, &v196);
            sub_1000A4240(v106, v107, v100);
            v109 = v196;
            v108 = (unint64_t)v197;
            v110 = v159;
            sub_10005B704(v2, v159, type metadata accessor for FeaturedView);
            if (v108 >> 60 != 15)
            {
LABEL_11:
              sub_10005B748(v110, type metadata accessor for FeaturedView);
              v113 = type metadata accessor for MusicLibrary(0);
              v114 = static MusicLibrary.shared.getter(v113);
              v155 = v102;
              v115 = v164;
              v116 = v165;
              v117 = (uint64_t)v169;
              v118 = v178;
              GenericMusicItem.actionMenu(playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:)(v165, v164, v114, (uint64_t)v169, (uint64_t)v192, (unint64_t)v191, (unint64_t)&v206, (unint64_t)v190, &v196, (uint64_t)v189, (unint64_t)v187, (uint64_t)v155, v104, v109, v108);
              v162 = v197;
              v163 = v196;
              v161 = v198;
              v183 = v200;
              v184 = v199;
              v181 = v202;
              v182 = v201;
              v119 = v205;
              v179 = v204;
              v180 = v203;
              swift_release();
              sub_1000822B4(v109, v108);

              swift_bridgeObjectRelease();
              sub_10004FF60((uint64_t)v187, &qword_1011A0558);
              sub_10004FF60((uint64_t)&v206, (uint64_t *)&unk_1011A20F0);
              sub_10004FF60(v117, (uint64_t *)&unk_1011A20C0);
              sub_10004FF60((uint64_t)v189, &qword_1011A0560);
              _s5Music18DragDropToPlaylistV6OriginVwxx_0(v190);
              _s5Music18DragDropToPlaylistV6OriginVwxx_0(v191);
              _s5Music18DragDropToPlaylistV6OriginVwxx_0(v192);
              v59 = ((uint64_t (*)(uint64_t *, uint64_t))v166[1])(v118, v167);
              v69 = v119;
              v68 = v179;
              v67 = v180;
              v66 = v181;
              v65 = v182;
              v64 = v183;
              v63 = v184;
              v62 = v161;
              v61 = (uint64_t)v162;
              v60 = v163;
              goto LABEL_12;
            }
            v111 = (_QWORD *)(v110 + v97[10]);
            if (*v111)
            {
              swift_retain();
              v109 = sub_10066D7A8();
              v108 = v112;
              swift_release();
              goto LABEL_11;
            }
          }
          else
          {
            v151 = v91[1];
            v152 = type metadata accessor for TabSelectionManager(0);
            v153 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
            swift_retain();
            swift_retain();
            EnvironmentObject.error()(0, v151, v152, v153);
            __break(1u);
          }
          v140 = v111[1];
          goto LABEL_19;
        }
LABEL_16:
        v140 = v90[1];
        swift_retain();
LABEL_19:
        v141 = (uint64_t *)&unk_10119CBE0;
        v142 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
        v143 = &qword_1011C5B90;
        v144 = &unk_100EC0A50;
        goto LABEL_20;
      }
    }
    else
    {
      v145 = v78[1];
      v146 = type metadata accessor for NoticePresenter(0);
      v147 = sub_100048748((unint64_t *)&unk_1011C72F0, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
      swift_retain();
      EnvironmentObject.error()(0, v145, v146, v147);
      __break(1u);
    }
    v148 = v87[1];
    v149 = type metadata accessor for NavigationPusher();
    v150 = sub_100048748(&qword_10119F060, (uint64_t (*)(uint64_t))type metadata accessor for NavigationPusher, (uint64_t)&unk_100EC8D64);
    EnvironmentObject.error()(0, v148, v149, v150);
    __break(1u);
    goto LABEL_16;
  }
  v140 = v76[1];
  v141 = (uint64_t *)&unk_1011B4E40;
  v142 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v143 = (unint64_t *)&unk_10119CC10;
  v144 = &protocol conformance descriptor for PresentedViewState<A>;
LABEL_20:
  v154 = sub_100049F28(v143, v141, (uint64_t)v144);
  result = EnvironmentObject.error()(0, v140, v142, v154);
  __break(1u);
  return result;
}

uint64_t sub_1006FFD7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v29[3];
  uint64_t v30;
  __int128 v31;

  v29[2] = a2;
  v5 = type metadata accessor for Featured(0);
  __chkstk_darwin(v5);
  v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v8);
  v10 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011AA8D0);
  __chkstk_darwin(v11);
  v13 = (char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C(&qword_1011C5480);
  __chkstk_darwin(v14);
  v16 = (char *)v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for MotionViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v13, 1, 1, v17);
  sub_10004A160(a1 + *(int *)(v5 + 32), (uint64_t)v10, (uint64_t *)&unk_1011A3E10);
  sub_10005B704(a1, (uint64_t)v7, type metadata accessor for Featured);
  KeyPath = swift_getKeyPath(&unk_100ECBFD8);
  v19 = (uint64_t)&v16[*(int *)(v14 + 36)];
  v20 = (int *)sub_100007E8C(&qword_1011C54A0);
  v21 = v19 + v20[10];
  v22 = (uint64_t *)(v21 + *(int *)(type metadata accessor for FeaturedView.TextContentView(0) + 20));
  *v22 = KeyPath;
  v23 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  swift_storeEnumTagMultiPayload(v22, v23, 0);
  sub_10005B6C0((uint64_t)v7, v21, type metadata accessor for Featured);
  v24 = v20[12];
  v30 = 0;
  v25 = sub_100007E8C(&qword_10119E588);
  State.init(wrappedValue:)(&v30, v25);
  *(_OWORD *)(v19 + v24) = v31;
  v26 = v20[13];
  v30 = 0;
  State.init(wrappedValue:)(&v30, v25);
  *(_OWORD *)(v19 + v26) = v31;
  sub_100065228((uint64_t)v13, v19, &qword_1011AA8D0);
  sub_100065228((uint64_t)v10, v19 + v20[9], (uint64_t *)&unk_1011A3E10);
  *(double *)(v19 + v20[11]) = a3;
  sub_10005B704(v29[1], (uint64_t)v16, type metadata accessor for FeaturedView.CaptionedArtwork);
  v27 = sub_100702F90();
  View.materialContentMode(_:)(1, v14, v27);
  return sub_10004FF60((uint64_t)v16, &qword_1011C5480);
}

uint64_t sub_100700040@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  double v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  _BYTE v69[48];
  uint64_t v70;
  __int128 v71;
  uint64_t v72;
  uint64_t v73;

  v68 = a2;
  v3 = type metadata accessor for FeaturedView.AlignedCaption(0);
  __chkstk_darwin(v3);
  v65 = (uint64_t)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v67 = sub_100007E8C(&qword_1011C55E0);
  __chkstk_darwin(v67);
  v64 = (uint64_t)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v66 = (uint64_t)&v55 - v7;
  v8 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C((uint64_t *)&unk_1011C4FE0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_100007E8C(&qword_1011C0B90);
  __chkstk_darwin(v60);
  v17 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_100007E8C(&qword_1011C55E8);
  v59 = *(_QWORD *)(v61 - 8);
  __chkstk_darwin(v61);
  v19 = (char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_100007E8C(&qword_1011C55F0);
  __chkstk_darwin(v58);
  v56 = (char *)&v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v57 = (uint64_t)&v55 - v22;
  v62 = (int *)type metadata accessor for Featured(0);
  v23 = v62[8];
  v24 = v62[9];
  v63 = a1;
  v25 = a1 + v23;
  v26 = a1 + v24;
  ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(0, 1, 0, 1, 0, 1, 2, (uint64_t)v69);
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v8);
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)(v25, v26, (uint64_t)v69, (uint64_t)v11, (uint64_t)v15);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v17, v15, v12);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v27 = Border.artwork.unsafeMutableAddressor();
  v28 = *((double *)v27 + 1);
  LOBYTE(v25) = *((_BYTE *)v27 + 16);
  v29 = sub_100683FC4();
  swift_retain();
  View.border(_:corner:)(v30, v25, 0, -1, 0, v60, v29, v28);
  swift_release();
  sub_10004FF60((uint64_t)v17, &qword_1011C0B90);
  v31 = v59;
  v32 = (uint64_t)v56;
  v33 = v61;
  (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v56, v19, v61);
  v34 = v32 + *(int *)(v58 + 36);
  *(_QWORD *)v34 = 0x3FFC71C71C71C71CLL;
  *(_WORD *)(v34 + 8) = 256;
  (*(void (**)(char *, uint64_t))(v31 + 8))(v19, v33);
  v35 = v57;
  sub_100065228(v32, v57, &qword_1011C55F0);
  v36 = sub_100007E8C(&qword_1011AC5F0);
  v37 = swift_allocObject(v36, 48, 7);
  *(_OWORD *)(v37 + 16) = xmmword_100EA7A80;
  static Color.black.getter(v37);
  v38 = Color.opacity(_:)(0.4);
  swift_release();
  *(_QWORD *)(v37 + 32) = v38;
  static Color.black.getter(v39);
  v40 = Color.opacity(_:)(0.0);
  swift_release();
  *(_QWORD *)(v37 + 40) = v40;
  v70 = v37;
  specialized Array._endMutation()(v41);
  Gradient.init(colors:)(v70);
  LinearGradient.init(gradient:startPoint:endPoint:)(&v70, 0.5, 1.0, 0.5, 0.15);
  v42 = v65;
  v43 = sub_10005B704(v63 + v62[10], v65, type metadata accessor for Featured.Caption);
  LOBYTE(v37) = static Edge.Set.all.getter(v43);
  v44 = v64;
  sub_10005B704(v42, v64, type metadata accessor for FeaturedView.AlignedCaption);
  v45 = v44 + *(int *)(v67 + 36);
  *(_BYTE *)v45 = v37;
  *(_OWORD *)(v45 + 8) = xmmword_100EBDBC0;
  *(_OWORD *)(v45 + 24) = xmmword_100EBDBC0;
  *(_BYTE *)(v45 + 40) = 0;
  sub_10005B748(v42, type metadata accessor for FeaturedView.AlignedCaption);
  v46 = v66;
  sub_100065228(v44, v66, &qword_1011C55E0);
  sub_10004A160(v35, v32, &qword_1011C55F0);
  v47 = v70;
  v67 = v71;
  v48 = v72;
  v49 = v73;
  v50 = v46;
  sub_10004A160(v46, v44, &qword_1011C55E0);
  v51 = v68;
  sub_10004A160(v32, v68, &qword_1011C55F0);
  v52 = sub_100007E8C(&qword_1011C55F8);
  v53 = v51 + *(int *)(v52 + 48);
  *(_QWORD *)v53 = v47;
  *(_OWORD *)(v53 + 8) = v67;
  *(_QWORD *)(v53 + 24) = v48;
  *(_QWORD *)(v53 + 32) = v49;
  sub_10004A160(v44, v51 + *(int *)(v52 + 64), &qword_1011C55E0);
  swift_bridgeObjectRetain();
  sub_10004FF60(v50, &qword_1011C55E0);
  sub_10004FF60(v35, &qword_1011C55F0);
  sub_10004FF60(v44, &qword_1011C55E0);
  swift_bridgeObjectRelease();
  return sub_10004FF60(v32, &qword_1011C55F0);
}

uint64_t sub_10070061C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  *a2 = static Alignment.bottom.getter(a1);
  a2[1] = v4;
  v5 = sub_100007E8C(&qword_1011C55D8);
  return sub_100700040(v2, (uint64_t)a2 + *(int *)(v5 + 44));
}

uint64_t sub_10070065C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD v42[6];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v54 = a1;
  v2 = sub_100007E8C(&qword_1011C56E0);
  __chkstk_darwin(v2);
  v4 = (char *)v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_100007E8C(&qword_1011C56E8);
  __chkstk_darwin(v52);
  v43 = (uint64_t)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v46 = (char *)v42 - v7;
  v50 = sub_100007E8C(&qword_1011C56F0);
  __chkstk_darwin(v50);
  v51 = (uint64_t)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011C56F8);
  __chkstk_darwin(v9);
  v42[4] = (char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_100007E8C(&qword_1011C5700);
  __chkstk_darwin(v49);
  v42[3] = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v42[5] = (char *)v42 - v13;
  v44 = sub_100007E8C(&qword_1011C5708);
  __chkstk_darwin(v44);
  v47 = (char *)v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(&qword_1011C5710);
  __chkstk_darwin(v15);
  v45 = sub_100007E8C(&qword_1011C5718);
  __chkstk_darwin(v45);
  v42[1] = (char *)v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v42[2] = (char *)v42 - v18;
  v53 = sub_100007E8C(&qword_1011C5720);
  __chkstk_darwin(v53);
  v48 = (char *)v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v20);
  v22 = (char *)v42 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100007E8C(&qword_1011C5728);
  __chkstk_darwin(v23);
  v25 = (char *)v42 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for Featured.Caption.Thumbnail(0);
  __chkstk_darwin(v26);
  v28 = (char *)v42 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for Featured.Caption(0);
  v30 = v1;
  sub_10005B704(v1 + *(int *)(v29 + 24), (uint64_t)v28, type metadata accessor for Featured.Caption.Thumbnail);
  sub_10004A160((uint64_t)&v28[*(int *)(v26 + 20)], (uint64_t)v22, (uint64_t *)&unk_1011A3E10);
  v31 = type metadata accessor for ArtworkImage.ViewModel(0);
  v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 48))(v22, 1, v31);
  v33 = sub_10004FF60((uint64_t)v22, (uint64_t *)&unk_1011A3E10);
  if (v32 != 1)
  {
    v46 = v25;
    __asm { BR              X10 }
  }
  *(_QWORD *)v4 = static VerticalAlignment.bottom.getter(v33);
  *((_QWORD *)v4 + 1) = 0;
  v4[16] = 1;
  v34 = sub_100007E8C(&qword_1011C5730);
  sub_100701460(v30, (uint64_t)&v4[*(int *)(v34 + 44)]);
  v35 = v43;
  sub_10004A160((uint64_t)v4, v43, &qword_1011C56E0);
  v36 = v52;
  *(_BYTE *)(v35 + *(int *)(v52 + 36)) = 0;
  sub_10004FF60((uint64_t)v4, &qword_1011C56E0);
  v37 = (uint64_t)v46;
  sub_100065228(v35, (uint64_t)v46, &qword_1011C56E8);
  v38 = v51;
  sub_10004A160(v37, v51, &qword_1011C56E8);
  swift_storeEnumTagMultiPayload(v38, v50, 1);
  v39 = sub_100708610();
  v40 = sub_1007086BC(&qword_1011C5768, &qword_1011C56E8, &qword_1011C5770, &qword_1011C56E0);
  _ConditionalContent<>.init(storage:)(v38, v53, v36, v39, v40);
  sub_10004FF60(v37, &qword_1011C56E8);
  sub_100065228((uint64_t)v25, v54, &qword_1011C5728);
  return sub_10005B748((uint64_t)v28, type metadata accessor for Featured.Caption.Thumbnail);
}

uint64_t sub_100700E28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;

  v44 = a2;
  v45 = a3;
  v4 = type metadata accessor for FeaturedView.CaptionText(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011C5788);
  __chkstk_darwin(v7);
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v44 - v11;
  v13 = type metadata accessor for FeaturedView.ThumbnailArtwork(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C(&qword_1011C5790);
  __chkstk_darwin(v16);
  v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v44 - v20;
  v22 = sub_10005B704(a1, (uint64_t)v15, type metadata accessor for Featured.Caption.Thumbnail);
  LOBYTE(a1) = static Edge.Set.bottom.getter(v22);
  v23 = EdgeInsets.init(_all:)(12.0);
  v25 = v24;
  v27 = v26;
  v29 = v28;
  sub_10005B704((uint64_t)v15, (uint64_t)v18, type metadata accessor for FeaturedView.ThumbnailArtwork);
  v30 = &v18[*(int *)(v16 + 36)];
  *v30 = a1;
  *((double *)v30 + 1) = v23;
  *((_QWORD *)v30 + 2) = v25;
  *((_QWORD *)v30 + 3) = v27;
  *((_QWORD *)v30 + 4) = v29;
  v30[40] = 0;
  sub_10005B748((uint64_t)v15, type metadata accessor for FeaturedView.ThumbnailArtwork);
  sub_100065228((uint64_t)v18, (uint64_t)v21, &qword_1011C5790);
  v31 = sub_10005B704(v44, (uint64_t)v6, type metadata accessor for Featured.Caption);
  LOBYTE(v16) = static Edge.Set.bottom.getter(v31);
  v32 = EdgeInsets.init(_all:)(16.0);
  v34 = v33;
  v36 = v35;
  v38 = v37;
  sub_10005B704((uint64_t)v6, (uint64_t)v9, type metadata accessor for FeaturedView.CaptionText);
  v39 = &v9[*(int *)(v7 + 36)];
  *v39 = v16;
  *((double *)v39 + 1) = v32;
  *((_QWORD *)v39 + 2) = v34;
  *((_QWORD *)v39 + 3) = v36;
  *((_QWORD *)v39 + 4) = v38;
  v39[40] = 0;
  sub_10005B748((uint64_t)v6, type metadata accessor for FeaturedView.CaptionText);
  sub_100065228((uint64_t)v9, (uint64_t)v12, &qword_1011C5788);
  sub_10004A160((uint64_t)v21, (uint64_t)v18, &qword_1011C5790);
  sub_10004A160((uint64_t)v12, (uint64_t)v9, &qword_1011C5788);
  v40 = v45;
  sub_10004A160((uint64_t)v18, v45, &qword_1011C5790);
  v41 = sub_100007E8C(&qword_1011C5798);
  v42 = v40 + *(int *)(v41 + 48);
  *(_QWORD *)v42 = 0x4028000000000000;
  *(_BYTE *)(v42 + 8) = 0;
  sub_10004A160((uint64_t)v9, v40 + *(int *)(v41 + 64), &qword_1011C5788);
  sub_10004FF60((uint64_t)v12, &qword_1011C5788);
  sub_10004FF60((uint64_t)v21, &qword_1011C5790);
  sub_10004FF60((uint64_t)v9, &qword_1011C5788);
  return sub_10004FF60((uint64_t)v18, &qword_1011C5790);
}

uint64_t sub_100701144@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;

  v44 = a2;
  v45 = a3;
  v4 = type metadata accessor for FeaturedView.ThumbnailArtwork(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011C5790);
  __chkstk_darwin(v7);
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v44 - v11;
  v13 = type metadata accessor for FeaturedView.CaptionText(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C(&qword_1011C5788);
  __chkstk_darwin(v16);
  v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v44 - v20;
  v22 = sub_10005B704(a1, (uint64_t)v15, type metadata accessor for Featured.Caption);
  LOBYTE(a1) = static Edge.Set.bottom.getter(v22);
  v23 = EdgeInsets.init(_all:)(16.0);
  v25 = v24;
  v27 = v26;
  v29 = v28;
  sub_10005B704((uint64_t)v15, (uint64_t)v18, type metadata accessor for FeaturedView.CaptionText);
  v30 = &v18[*(int *)(v16 + 36)];
  *v30 = a1;
  *((double *)v30 + 1) = v23;
  *((_QWORD *)v30 + 2) = v25;
  *((_QWORD *)v30 + 3) = v27;
  *((_QWORD *)v30 + 4) = v29;
  v30[40] = 0;
  sub_10005B748((uint64_t)v15, type metadata accessor for FeaturedView.CaptionText);
  sub_100065228((uint64_t)v18, (uint64_t)v21, &qword_1011C5788);
  v31 = sub_10005B704(v44, (uint64_t)v6, type metadata accessor for Featured.Caption.Thumbnail);
  LOBYTE(v16) = static Edge.Set.bottom.getter(v31);
  v32 = EdgeInsets.init(_all:)(12.0);
  v34 = v33;
  v36 = v35;
  v38 = v37;
  sub_10005B704((uint64_t)v6, (uint64_t)v9, type metadata accessor for FeaturedView.ThumbnailArtwork);
  v39 = &v9[*(int *)(v7 + 36)];
  *v39 = v16;
  *((double *)v39 + 1) = v32;
  *((_QWORD *)v39 + 2) = v34;
  *((_QWORD *)v39 + 3) = v36;
  *((_QWORD *)v39 + 4) = v38;
  v39[40] = 0;
  sub_10005B748((uint64_t)v6, type metadata accessor for FeaturedView.ThumbnailArtwork);
  sub_100065228((uint64_t)v9, (uint64_t)v12, &qword_1011C5790);
  sub_10004A160((uint64_t)v21, (uint64_t)v18, &qword_1011C5788);
  sub_10004A160((uint64_t)v12, (uint64_t)v9, &qword_1011C5790);
  v40 = v45;
  sub_10004A160((uint64_t)v18, v45, &qword_1011C5788);
  v41 = sub_100007E8C(&qword_1011C57A0);
  v42 = v40 + *(int *)(v41 + 48);
  *(_QWORD *)v42 = 0x4028000000000000;
  *(_BYTE *)(v42 + 8) = 0;
  sub_10004A160((uint64_t)v9, v40 + *(int *)(v41 + 64), &qword_1011C5790);
  sub_10004FF60((uint64_t)v12, &qword_1011C5790);
  sub_10004FF60((uint64_t)v21, &qword_1011C5788);
  sub_10004FF60((uint64_t)v9, &qword_1011C5790);
  return sub_10004FF60((uint64_t)v18, &qword_1011C5788);
}

uint64_t sub_100701460@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v24;

  v4 = type metadata accessor for FeaturedView.CaptionText(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011C5788);
  __chkstk_darwin(v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v24 - v11;
  v13 = sub_10005B704(a1, (uint64_t)v6, type metadata accessor for Featured.Caption);
  LOBYTE(a1) = static Edge.Set.bottom.getter(v13);
  v14 = EdgeInsets.init(_all:)(16.0);
  v16 = v15;
  v18 = v17;
  v20 = v19;
  sub_10005B704((uint64_t)v6, (uint64_t)v9, type metadata accessor for FeaturedView.CaptionText);
  v21 = &v9[*(int *)(v7 + 36)];
  *v21 = a1;
  *((double *)v21 + 1) = v14;
  *((_QWORD *)v21 + 2) = v16;
  *((_QWORD *)v21 + 3) = v18;
  *((_QWORD *)v21 + 4) = v20;
  v21[40] = 0;
  sub_10005B748((uint64_t)v6, type metadata accessor for FeaturedView.CaptionText);
  sub_100065228((uint64_t)v9, (uint64_t)v12, &qword_1011C5788);
  sub_10004A160((uint64_t)v12, (uint64_t)v9, &qword_1011C5788);
  sub_10004A160((uint64_t)v9, a2, &qword_1011C5788);
  v22 = a2 + *(int *)(sub_100007E8C(&qword_1011C57A8) + 48);
  *(_QWORD *)v22 = 0x4028000000000000;
  *(_BYTE *)(v22 + 8) = 0;
  sub_10004FF60((uint64_t)v12, &qword_1011C5788);
  return sub_10004FF60((uint64_t)v9, &qword_1011C5788);
}

uint64_t sub_100701618@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t inited;
  int *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v40[16];
  uint64_t v41;
  _BYTE v42[80];
  _QWORD v43[2];

  v2 = v1;
  v4 = sub_100007E8C(&qword_1011A2E20);
  __chkstk_darwin(v4);
  v6 = &v40[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_100007E8C(&qword_1011A2E28);
  __chkstk_darwin(v7);
  v9 = &v40[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_100007E8C(&qword_1011C5600);
  __chkstk_darwin(v10);
  v12 = &v40[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = sub_100007E8C((uint64_t *)&unk_1011A2410);
  inited = swift_initStackObject(v13, v42);
  *(_OWORD *)(inited + 16) = xmmword_100EA7AC0;
  v15 = (int *)type metadata accessor for Featured(0);
  v16 = (_QWORD *)(v2 + v15[5]);
  v17 = v16[1];
  *(_QWORD *)(inited + 32) = *v16;
  v18 = inited + 32;
  *(_QWORD *)(inited + 40) = v17;
  v19 = (_QWORD *)(v2 + v15[6]);
  v20 = v19[1];
  *(_QWORD *)(inited + 48) = *v19;
  *(_QWORD *)(inited + 56) = v20;
  v21 = (_QWORD *)(v2 + v15[7]);
  v22 = v21[1];
  *(_QWORD *)(inited + 64) = *v21;
  *(_QWORD *)(inited + 72) = v22;
  v41 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v23 = sub_10016CA00((void (*)(_QWORD *))sub_100708474, (uint64_t)v40, inited);
  swift_setDeallocating(inited);
  v24 = *(_QWORD *)(inited + 16);
  v25 = sub_100007E8C(&qword_10119DCA0);
  swift_arrayDestroy(v18, v24, v25);
  v26 = v23[2];
  swift_bridgeObjectRelease();
  v43[0] = 3;
  v43[1] = v26;
  *(_QWORD *)v6 = static HorizontalAlignment.leading.getter(v27);
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 0;
  v28 = sub_100007E8C(&qword_1011C5608);
  v29 = sub_100701990(v2, (uint64_t)v43, (uint64_t)&v6[*(int *)(v28 + 44)]);
  v30 = static Alignment.leading.getter(v29);
  sub_10014BCC0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v9, 0.0, 1, 0.0, 1, v30, v31);
  sub_10004FF60((uint64_t)v6, &qword_1011A2E20);
  sub_10004A160((uint64_t)v9, (uint64_t)v12, &qword_1011A2E28);
  *(_WORD *)&v12[*(int *)(v10 + 36)] = 256;
  v32 = sub_10004FF60((uint64_t)v9, &qword_1011A2E28);
  LOBYTE(v6) = static Edge.Set.all.getter(v32);
  sub_10004A160((uint64_t)v12, a1, &qword_1011C5600);
  v33 = a1 + *(int *)(sub_100007E8C(&qword_1011C5610) + 36);
  *(_BYTE *)v33 = (_BYTE)v6;
  *(_OWORD *)(v33 + 8) = xmmword_100ECBE80;
  __asm { FMOV            V0.2D, #16.0 }
  *(_OWORD *)(v33 + 24) = _Q0;
  *(_BYTE *)(v33 + 40) = 0;
  return sub_10004FF60((uint64_t)v12, &qword_1011C5600);
}

uint64_t sub_1007018F4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v4 = a1[1];
  if (v4 && ((v4 & 0x2000000000000000) != 0 ? (v5 = HIBYTE(v4) & 0xF) : (v5 = *a1 & 0xFFFFFFFFFFFFLL), v5))
  {
    sub_10005B704(a2, a3, type metadata accessor for FeaturedView.TextContentView);
    v6 = type metadata accessor for FeaturedView.TextContentView(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a3, 0, 1, v6);
  }
  else
  {
    v8 = type metadata accessor for FeaturedView.TextContentView(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a3, 1, 1, v8);
  }
}

uint64_t sub_100701990@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  unint64_t v23;
  Swift::Int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t KeyPath;
  double v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  char v98;
  __n128 v99;
  uint64_t *v100;
  uint64_t v101;
  unint64_t v102;
  Swift::Int v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;

  v140 = a1;
  v141 = a2;
  v138 = a3;
  v4 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v4);
  v127 = (uint64_t)&v127 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v6);
  v128 = (uint64_t)&v127 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DynamicTypeSize(0);
  v144 = *(_QWORD *)(v8 - 8);
  v145 = v8;
  __chkstk_darwin(v8);
  v143 = (uint64_t)&v127 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C((uint64_t *)&unk_1011A4380);
  __chkstk_darwin(v10);
  v131 = (char *)&v127 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = sub_100007E8C(&qword_1011A0F48);
  v132 = *(_QWORD *)(v133 - 8);
  __chkstk_darwin(v133);
  v13 = (char *)&v127 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = sub_100007E8C(&qword_1011B0330);
  __chkstk_darwin(v130);
  v129 = (char *)&v127 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = sub_100007E8C(&qword_1011B0338);
  __chkstk_darwin(v136);
  v135 = (uint64_t)&v127 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = sub_100007E8C(&qword_1011B0340);
  __chkstk_darwin(v137);
  v142 = (uint64_t)&v127 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v134 = (uint64_t)&v127 - v18;
  __chkstk_darwin(v19);
  v146 = (uint64_t)&v127 - v20;
  v139 = type metadata accessor for Featured(0);
  v21 = (uint64_t *)(a1 + *(int *)(v139 + 20));
  v22 = *v21;
  v23 = v21[1];
  v24 = sub_1004872C4((uint64_t)&off_1010AD238);
  swift_bridgeObjectRetain();
  v25 = Text.init(optional:options:)(v22, v23, v24);
  v27 = v26;
  v29 = v28;
  v31 = v30;
  v32 = static Font.footnote.getter(v25);
  KeyPath = swift_getKeyPath(&unk_100ECC148);
  v147 = v25;
  v148 = v27;
  v149 = v29;
  v150 = v31;
  v151 = KeyPath;
  v152 = v32;
  v34 = static Font.Weight.semibold.getter(KeyPath);
  v35 = sub_100007E8C((uint64_t *)&unk_1011B57E0);
  v36 = sub_1000F59AC();
  View.fontWeight(_:)(*(_QWORD *)&v34, 0, v35, v36);
  sub_1000E450C(v25, v27, v29, v31);
  swift_release();
  swift_release();
  v37 = enum case for Text.Case.uppercase(_:);
  v38 = type metadata accessor for Text.Case(0);
  v39 = *(_QWORD *)(v38 - 8);
  v40 = (uint64_t)v131;
  (*(void (**)(char *, uint64_t, uint64_t))(v39 + 104))(v131, v37, v38);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v39 + 56))(v40, 0, 1, v38);
  v41 = swift_getKeyPath(&unk_100ECC178);
  v42 = (uint64_t)v129;
  v43 = (uint64_t *)&v129[*(int *)(v130 + 36)];
  v44 = sub_100007E8C((uint64_t *)&unk_1011C4EE0);
  sub_10004A160(v40, (uint64_t)v43 + *(int *)(v44 + 28), (uint64_t *)&unk_1011A4380);
  *v43 = v41;
  v45 = v132;
  v46 = v133;
  (*(void (**)(uint64_t, char *, uint64_t))(v132 + 16))(v42, v13, v133);
  sub_10004FF60(v40, (uint64_t *)&unk_1011A4380);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v13, v46);
  type metadata accessor for FeaturedView.TextContentView(0);
  v47 = v140;
  v48 = v143;
  v49 = sub_1008237B8(v143);
  LOBYTE(v46) = DynamicTypeSize.isAccessibilitySize.getter(v49);
  (*(void (**)(uint64_t, uint64_t))(v144 + 8))(v48, v145);
  if ((v46 & 1) != 0)
    v50 = 2;
  else
    v50 = 1;
  v51 = v47;
  v52 = sub_100551E8C(v50);
  v53 = swift_getKeyPath(&unk_100ECC1A8);
  v54 = v135;
  sub_10004A160(v42, v135, &qword_1011B0330);
  v55 = v54 + *(int *)(v136 + 36);
  *(_QWORD *)v55 = v53;
  *(_QWORD *)(v55 + 8) = v52;
  *(_BYTE *)(v55 + 16) = 0;
  v56 = sub_10004FF60(v42, &qword_1011B0330);
  LODWORD(v52) = static HierarchicalShapeStyle.secondary.getter(v56);
  v57 = v134;
  sub_10004A160(v54, v134, &qword_1011B0338);
  *(_DWORD *)(v57 + *(int *)(v137 + 36)) = v52;
  sub_10004FF60(v54, &qword_1011B0338);
  sub_100065228(v57, v146, &qword_1011B0340);
  v58 = v139;
  v59 = (uint64_t *)(v51 + *(int *)(v139 + 24));
  v60 = v59[1];
  if (!v60)
    goto LABEL_10;
  v61 = *v59;
  v62 = HIBYTE(v60) & 0xF;
  if ((v60 & 0x2000000000000000) == 0)
    v62 = v61 & 0xFFFFFFFFFFFFLL;
  if (v62)
  {
    v147 = v61;
    v148 = v60;
    v63 = sub_100055B68();
    swift_bridgeObjectRetain();
    v64 = Text.init<A>(_:)(&v147, &type metadata for String, v63);
    v66 = v65;
    v68 = v67;
    v70 = v69;
    v71 = v127;
    sub_10004A160(v51, v127, (uint64_t *)&unk_1011A20D0);
    v72 = type metadata accessor for GenericMusicItem(0);
    v73 = *(_QWORD *)(v72 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v73 + 48))(v71, 1, v72) == 1)
    {
      sub_10004FF60(v71, (uint64_t *)&unk_1011A20D0);
      v74 = type metadata accessor for URL(0);
      v75 = v128;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 56))(v128, 1, 1, v74);
      v76 = 2;
    }
    else
    {
      v75 = v128;
      sub_1009189EC(v128);
      (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v71, v72);
      v79 = type metadata accessor for URL(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 48))(v75, 1, v79) == 1)
        v76 = 2;
      else
        v76 = 4;
    }
    sub_10004FF60(v75, &qword_10119E460);
    v80 = TextBadge.view.getter(v76);
    v82 = v81;
    v84 = v83 & 1;
    v85 = v68 & 1;
    v87 = static Text.+ infix(_:_:)(v64, v66, v85, v70, v80, v81, v84, v86);
    v136 = v88;
    v143 = v89;
    v91 = v90 & 1;
    sub_100055BAC(v80, v82, v84);
    swift_bridgeObjectRelease();
    sub_100055BAC(v64, v66, v85);
    swift_bridgeObjectRelease();
    v93 = static Font.body.getter(v92);
    v94 = v136;
    v137 = Text.font(_:)(v93, v87, v136, v91, v143);
    v144 = v96;
    v145 = v95;
    v98 = v97;
    swift_release();
    v77 = v98 & 1;
    sub_100055BAC(v87, v94, v91);
    swift_bridgeObjectRelease();
    v136 = sub_100551E8C(2);
    v78 = swift_getKeyPath(&unk_100ECC1A8);
    v143 = static HierarchicalShapeStyle.primary.getter(v99) << 32;
    v58 = v139;
    v51 = v140;
  }
  else
  {
LABEL_10:
    v136 = 0;
    v137 = 0;
    v144 = 0;
    v145 = 0;
    v77 = 0;
    v78 = 0;
    v143 = 0;
  }
  v100 = (uint64_t *)(v51 + *(int *)(v58 + 28));
  v101 = *v100;
  v102 = v100[1];
  v103 = sub_1004872C4((uint64_t)&off_1010AD260);
  swift_bridgeObjectRetain();
  v104 = Text.init(optional:options:)(v101, v102, v103);
  v140 = v106;
  v141 = v105;
  v139 = v107;
  v135 = static Font.subheadline.getter(v104);
  v108 = swift_getKeyPath(&unk_100ECC148);
  v133 = sub_100551E8C(1);
  v109 = swift_getKeyPath(&unk_100ECC1A8);
  LODWORD(v132) = static HierarchicalShapeStyle.secondary.getter(v109);
  v110 = v142;
  sub_10004A160(v146, v142, &qword_1011B0340);
  v111 = v138;
  sub_10004A160(v110, v138, &qword_1011B0340);
  v112 = sub_100007E8C(&qword_1011C5618);
  v113 = (uint64_t *)(v111 + *(int *)(v112 + 48));
  v114 = v137;
  v115 = v145;
  *v113 = v137;
  v113[1] = v115;
  v116 = v115;
  v145 = v115;
  v117 = v144;
  v113[2] = v77;
  v113[3] = v117;
  v118 = v117;
  v144 = v117;
  v113[4] = v78;
  v134 = v78;
  v119 = v143;
  v113[5] = v136;
  v113[6] = v119;
  v143 = v119;
  v120 = v111 + *(int *)(v112 + 64);
  v121 = v140;
  v122 = v141;
  *(_QWORD *)v120 = v104;
  *(_QWORD *)(v120 + 8) = v122;
  v123 = v139;
  *(_QWORD *)(v120 + 16) = v121;
  *(_QWORD *)(v120 + 24) = v123;
  v131 = (char *)v108;
  v124 = v135;
  *(_QWORD *)(v120 + 32) = v108;
  *(_QWORD *)(v120 + 40) = v124;
  v125 = v133;
  *(_QWORD *)(v120 + 48) = v109;
  *(_QWORD *)(v120 + 56) = v125;
  *(_BYTE *)(v120 + 64) = 0;
  *(_DWORD *)(v120 + 68) = v132;
  sub_1003DFEAC(v114, v116, v77, v118);
  sub_1000E4440(v104, v122, v121, v123);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10004FF60(v146, &qword_1011B0340);
  sub_1000E450C(v104, v122, v121, v123);
  swift_release();
  swift_release();
  swift_release();
  sub_1003DFEE8(v114, v145, v77, v144);
  return sub_10004FF60(v142, &qword_1011B0340);
}

uint64_t sub_100702358@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t OpaqueTypeConformance2;
  char *v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  double v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _OWORD *v63;
  __int128 v64;
  uint64_t v65;
  char *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _BYTE v88[48];
  _OWORD v89[3];

  v2 = v1;
  v87 = a1;
  v71 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v70 = *(_QWORD *)(v71 - 8);
  __chkstk_darwin(v71);
  v69 = (char *)&v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v4);
  v68 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = sub_100007E8C((uint64_t *)&unk_1011C4FE0);
  v73 = *(_QWORD *)(v75 - 8);
  __chkstk_darwin(v75);
  v72 = (uint64_t)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = sub_100007E8C((uint64_t *)&unk_1011C9250);
  v78 = *(_QWORD *)(v80 - 8);
  __chkstk_darwin(v80);
  v76 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_100007E8C((uint64_t *)&unk_1011C6960);
  v79 = *(_QWORD *)(v81 - 8);
  __chkstk_darwin(v81);
  v77 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = sub_100007E8C(&qword_1011A0628);
  __chkstk_darwin(v74);
  v83 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011A0630);
  v11 = *(_QWORD *)(v10 - 8);
  v85 = v10;
  v86 = v11;
  __chkstk_darwin(v10);
  v82 = (uint64_t)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v13);
  v15 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v67 - v17;
  v19 = type metadata accessor for Featured.Caption.Thumbnail(0);
  __chkstk_darwin(v19);
  v21 = (char *)&v67 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for ArtworkImage.ViewModel(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v25 = (char *)&v67 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = v2;
  sub_10005B704(v2, (uint64_t)v21, type metadata accessor for Featured.Caption.Thumbnail);
  sub_100065228((uint64_t)&v21[*(int *)(v19 + 20)], (uint64_t)v18, (uint64_t *)&unk_1011A3E10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v18, 1, v22) == 1)
  {
    sub_10004FF60((uint64_t)v18, (uint64_t *)&unk_1011A3E10);
    v26 = 1;
    v27 = v87;
    v28 = v85;
  }
  else
  {
    v67 = v25;
    sub_10005B6C0((uint64_t)v18, (uint64_t)v25, type metadata accessor for ArtworkImage.ViewModel);
    sub_10005B704((uint64_t)v25, (uint64_t)v15, type metadata accessor for ArtworkImage.ViewModel);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v15, 0, 1, v22);
    v29 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    v30 = (uint64_t)v68;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v68, 1, 10, v29);
    ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(0, 1, 0, 1, 0, 1, 2, (uint64_t)v88);
    v31 = v70;
    v32 = (uint64_t)v69;
    v33 = v71;
    (*(void (**)(char *, _QWORD, uint64_t))(v70 + 104))(v69, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v71);
    v34 = v72;
    static ArtworkImage.with(_:placeholder:size:reusePolicy:)((uint64_t)v15, v30, (uint64_t)v88, v32, v72);
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v32, v33);
    sub_10005B748(v30, type metadata accessor for ArtworkImage.Placeholder);
    sub_10004FF60((uint64_t)v15, (uint64_t *)&unk_1011A3E10);
    v35 = Corner.medium.unsafeMutableAddressor();
    v36 = *v35;
    v37 = v35[1];
    LOBYTE(v32) = *((_BYTE *)v35 + 16);
    v38 = sub_100044B54((uint64_t *)&unk_1011C5080);
    v39 = sub_1000E4264();
    *(_QWORD *)&v89[0] = v38;
    *((_QWORD *)&v89[0] + 1) = v39;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v89, &opaque type descriptor for <<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>, 1);
    v41 = v76;
    v42 = v75;
    View.corner(_:)(v36, v37, v32, v75, OpaqueTypeConformance2);
    (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v34, v42);
    v43 = Border.artwork.unsafeMutableAddressor();
    v44 = *v43;
    v45 = *((double *)v43 + 1);
    v46 = *v35;
    v47 = v35[1];
    LOBYTE(v35) = *((_BYTE *)v35 + 16);
    LOBYTE(v34) = *((_BYTE *)v43 + 16);
    swift_retain();
    *(_QWORD *)&v89[0] = v42;
    *((_QWORD *)&v89[0] + 1) = OpaqueTypeConformance2;
    v48 = swift_getOpaqueTypeConformance2(v89, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
    v49 = v77;
    v50 = (char)v35;
    v51 = v80;
    View.border(_:corner:)(v44, v34, v46, v47, v50, v80, v48, v45);
    v52 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v78 + 8))(v41, v51, v52);
    v53 = (uint64_t)v83;
    v54 = *(_QWORD *)(v84 + *(int *)(v19 + 24));
    v55 = v79;
    v56 = v81;
    (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v83, v49, v81);
    v57 = v53 + *(int *)(v74 + 36);
    *(_QWORD *)v57 = v54;
    *(_WORD *)(v57 + 8) = 0;
    v58 = (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v49, v56);
    v59 = static Alignment.center.getter(v58);
    _FrameLayout.init(width:height:alignment:)(v89, 0, 1, 0x404D000000000000, 0, v59, v60);
    v61 = v82;
    sub_10004A160(v53, v82, &qword_1011A0628);
    v62 = v85;
    v63 = (_OWORD *)(v61 + *(int *)(v85 + 36));
    v64 = v89[1];
    *v63 = v89[0];
    v63[1] = v64;
    v63[2] = v89[2];
    sub_10004FF60(v53, &qword_1011A0628);
    sub_10005B748((uint64_t)v67, type metadata accessor for ArtworkImage.ViewModel);
    v65 = v87;
    sub_100065228(v61, v87, &qword_1011A0630);
    v26 = 0;
    v27 = v65;
    v28 = v62;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v86 + 56))(v27, v26, 1, v28);
}

uint64_t sub_100702A20@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  Swift::Int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t KeyPath;
  double v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  Swift::Int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;

  v74 = a2;
  v3 = sub_100007E8C((uint64_t *)&unk_1011A4380);
  __chkstk_darwin(v3);
  v67 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = sub_100007E8C(&qword_1011A0F48);
  v71 = *(_QWORD *)(v73 - 8);
  __chkstk_darwin(v73);
  v6 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_100007E8C(&qword_1011B0330);
  __chkstk_darwin(v66);
  v65 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_100007E8C(&qword_1011B0338);
  __chkstk_darwin(v70);
  v68 = (uint64_t)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_100007E8C(&qword_1011B0340);
  __chkstk_darwin(v72);
  v76 = (uint64_t)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v75 = (uint64_t)&v65 - v11;
  v69 = a1;
  v12 = *a1;
  v13 = a1[1];
  v14 = sub_1004872C4((uint64_t)&off_1010AD288);
  swift_bridgeObjectRetain();
  v15 = Text.init(optional:options:)(v12, v13, v14);
  v17 = v16;
  v19 = v18;
  v21 = v20;
  v23 = static Font.headline.getter(v22);
  KeyPath = swift_getKeyPath(&unk_100ECC148);
  v77 = v15;
  v78 = v17;
  v79 = v19;
  v80 = v21;
  v81 = KeyPath;
  v82 = v23;
  v25 = static Font.Weight.semibold.getter(KeyPath);
  v26 = sub_100007E8C((uint64_t *)&unk_1011B57E0);
  v27 = sub_1000F59AC();
  View.fontWeight(_:)(*(_QWORD *)&v25, 0, v26, v27);
  sub_1000E450C(v15, v17, v19, v21);
  swift_release();
  swift_release();
  v28 = enum case for Text.Case.uppercase(_:);
  v29 = type metadata accessor for Text.Case(0);
  v30 = *(_QWORD *)(v29 - 8);
  v31 = (uint64_t)v67;
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 104))(v67, v28, v29);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v31, 0, 1, v29);
  v32 = swift_getKeyPath(&unk_100ECC178);
  v33 = (uint64_t)v65;
  v34 = (uint64_t *)&v65[*(int *)(v66 + 36)];
  v35 = sub_100007E8C((uint64_t *)&unk_1011C4EE0);
  sub_10004A160(v31, (uint64_t)v34 + *(int *)(v35 + 28), (uint64_t *)&unk_1011A4380);
  *v34 = v32;
  v36 = v71;
  v37 = v73;
  (*(void (**)(uint64_t, char *, uint64_t))(v71 + 16))(v33, v6, v73);
  sub_10004FF60(v31, (uint64_t *)&unk_1011A4380);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v6, v37);
  v38 = swift_getKeyPath(&unk_100ECC1A8);
  v39 = v68;
  sub_10004A160(v33, v68, &qword_1011B0330);
  v40 = v39 + *(int *)(v70 + 36);
  *(_QWORD *)v40 = v38;
  *(_QWORD *)(v40 + 8) = 1;
  *(_BYTE *)(v40 + 16) = 0;
  sub_10004FF60(v33, &qword_1011B0330);
  LODWORD(v38) = static HierarchicalShapeStyle.primary.getter(v41);
  v42 = v76;
  sub_10004A160(v39, v76, &qword_1011B0338);
  *(_DWORD *)(v42 + *(int *)(v72 + 36)) = v38;
  sub_10004FF60(v39, &qword_1011B0338);
  v43 = v75;
  sub_100065228(v42, v75, &qword_1011B0340);
  v44 = v69[2];
  v45 = v69[3];
  v46 = sub_1004872C4((uint64_t)&off_1010AD2B0);
  swift_bridgeObjectRetain();
  v47 = Text.init(optional:options:)(v44, v45, v46);
  v49 = v48;
  v51 = v50;
  v53 = v52;
  v54 = static Font.footnote.getter(v47);
  v55 = swift_getKeyPath(&unk_100ECC148);
  v56 = swift_getKeyPath(&unk_100ECC1A8);
  v58 = static HierarchicalShapeStyle.primary.getter(v57);
  v59 = v43;
  v60 = v76;
  sub_10004A160(v59, v76, &qword_1011B0340);
  v61 = v60;
  v62 = v74;
  sub_10004A160(v61, v74, &qword_1011B0340);
  v63 = v62 + *(int *)(sub_100007E8C(&qword_1011C58E0) + 48);
  *(_QWORD *)v63 = v47;
  *(_QWORD *)(v63 + 8) = v49;
  *(_QWORD *)(v63 + 16) = v51;
  *(_QWORD *)(v63 + 24) = v53;
  *(_QWORD *)(v63 + 32) = v55;
  *(_QWORD *)(v63 + 40) = v54;
  *(_QWORD *)(v63 + 48) = v56;
  *(_QWORD *)(v63 + 56) = 3;
  *(_BYTE *)(v63 + 64) = 0;
  *(_DWORD *)(v63 + 68) = v58;
  sub_1000E4440(v47, v49, v51, v53);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10004FF60(v75, &qword_1011B0340);
  sub_1000E450C(v47, v49, v51, v53);
  swift_release();
  swift_release();
  swift_release();
  return sub_10004FF60(v76, &qword_1011B0340);
}

uint64_t sub_100702F30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;

  *(_QWORD *)a2 = static HorizontalAlignment.leading.getter(a1);
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  v4 = sub_100007E8C(&qword_1011C58D8);
  return sub_100702A20(v2, a2 + *(int *)(v4 + 44));
}

uint64_t type metadata accessor for FeaturedView.CaptionedArtwork(uint64_t a1)
{
  return sub_100055934(a1, qword_1011C55A0, (uint64_t)&nominal type descriptor for FeaturedView.CaptionedArtwork);
}

unint64_t sub_100702F90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C5488;
  if (!qword_1011C5488)
  {
    v1 = sub_100044B54(&qword_1011C5480);
    sub_100048748(&qword_1011C5490, type metadata accessor for FeaturedView.CaptionedArtwork, (uint64_t)&unk_100ECC0F4);
    sub_100049F28(&qword_1011C5498, &qword_1011C54A0, (uint64_t)&unk_100EC3620);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C5488);
  }
  return result;
}

unint64_t sub_10070302C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  unint64_t v5;

  result = qword_1011C54A8;
  if (!qword_1011C54A8)
  {
    v1 = sub_100044B54(&qword_1011C5460);
    v2 = sub_100044B54(&qword_1011C5450);
    v4 = sub_100044B54(&qword_1011C5480);
    v5 = sub_100702F90();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.materialContentMode(_:)>>, 1);
    v4 = v2;
    v5 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C54A8);
  }
  return result;
}

unint64_t sub_100703108()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  unint64_t v5;

  result = qword_1011C54B0;
  if (!qword_1011C54B0)
  {
    v1 = sub_100044B54(&qword_1011AC460);
    v2 = sub_100044B54(&qword_1011C5468);
    v4 = sub_100044B54(&qword_1011C5460);
    v5 = sub_10070302C();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
    v4 = v2;
    v5 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.hover(corner:outset:isRelative:namespace:isEnabled:)>>, 1);
    sub_100048748((unint64_t *)&unk_1011A45E0, type metadata accessor for SegueLink, (uint64_t)&unk_100EC508C);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C54B0);
  }
  return result;
}

uint64_t sub_1007031EC()
{
  return 16;
}

__n128 sub_1007031F8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t type metadata accessor for FeaturedView.TextContentView(uint64_t a1)
{
  return sub_100055934(a1, qword_1011C5510, (uint64_t)&nominal type descriptor for FeaturedView.TextContentView);
}

uint64_t *sub_100703238(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  void *v67;
  int *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v87;
  uint64_t v88;
  unsigned int (*__dst)(char *, uint64_t, uint64_t);
  char *__dsta;
  unsigned int (*v91)(uint64_t *, uint64_t, uint64_t);
  uint64_t v92;
  uint64_t v94;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = type metadata accessor for GenericMusicItem(0);
    v7 = *(_QWORD *)(v6 - 8);
    v91 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48);
    v92 = v6;
    v87 = v7;
    if (v91(a2, 1, v6))
    {
      v8 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    v10 = (int *)type metadata accessor for Featured(0);
    v11 = v10[5];
    v12 = (uint64_t *)((char *)a1 + v11);
    v13 = (uint64_t *)((char *)a2 + v11);
    v14 = v13[1];
    *v12 = *v13;
    v12[1] = v14;
    v15 = v10[6];
    v16 = (uint64_t *)((char *)a1 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = v10[7];
    v20 = (uint64_t *)((char *)a1 + v19);
    v21 = (uint64_t *)((char *)a2 + v19);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = v10[8];
    v24 = (char *)a1 + v23;
    v25 = (char *)a2 + v23;
    v26 = type metadata accessor for ArtworkImage.ViewModel(0);
    v88 = *(_QWORD *)(v26 - 8);
    v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v88 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __dst = v27;
    if (v27(v25, 1, v26))
    {
      v28 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      v29 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v24, v25, v29);
      v30 = *(int *)(v26 + 20);
      v31 = &v24[v30];
      v32 = &v25[v30];
      v33 = type metadata accessor for Artwork.CropStyle(0);
      v34 = *(_QWORD *)(v33 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
      {
        v35 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v24, 0, 1, v26);
    }
    v36 = v10[9];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    v39 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    v40 = *(_QWORD *)(v39 - 8);
    v94 = v26;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 10, v39))
    {
      v41 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      v42 = type metadata accessor for Playlist.Variant(0);
      v43 = *(_QWORD *)(v42 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v38, 1, v42))
      {
        v44 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v37, v38, v42);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v37, 0, 1, v42);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 10, v39);
    }
    v45 = v10[10];
    v46 = (uint64_t *)((char *)a1 + v45);
    v47 = (char *)a2 + v45;
    v48 = *(uint64_t *)((char *)a2 + v45 + 8);
    *v46 = *(uint64_t *)((char *)a2 + v45);
    v46[1] = v48;
    v49 = *(uint64_t *)((char *)a2 + v45 + 24);
    v46[2] = *(uint64_t *)((char *)a2 + v45 + 16);
    v46[3] = v49;
    v50 = *(int *)(type metadata accessor for Featured.Caption(0) + 24);
    v51 = (char *)v46 + v50;
    v52 = &v47[v50];
    *v51 = *v52;
    v53 = type metadata accessor for Featured.Caption.Thumbnail(0);
    v54 = *(int *)(v53 + 20);
    v55 = &v51[v54];
    v56 = &v52[v54];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__dst(v56, 1, v94))
    {
      v57 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
      memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    }
    else
    {
      v58 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v55, v56, v58);
      v59 = *(int *)(v94 + 20);
      __dsta = &v55[v59];
      v60 = &v56[v59];
      v61 = type metadata accessor for Artwork.CropStyle(0);
      v62 = *(_QWORD *)(v61 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v60, 1, v61))
      {
        v63 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(__dsta, v60, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v62 + 16))(__dsta, v60, v61);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(__dsta, 0, 1, v61);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v55, 0, 1, v94);
    }
    *(_QWORD *)&v51[*(int *)(v53 + 24)] = *(_QWORD *)&v52[*(int *)(v53 + 24)];
    v64 = v10[11];
    v65 = (char *)a1 + v64;
    v66 = (char *)a2 + v64;
    v67 = *(void **)((char *)a2 + v64);
    *(uint64_t *)((char *)a1 + v64) = (uint64_t)v67;
    v68 = (int *)type metadata accessor for SegueContext(0);
    v69 = v68[5];
    v70 = &v65[v69];
    v71 = &v66[v69];
    v72 = v67;
    if (v91((uint64_t *)v71, 1, v92))
    {
      v73 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v70, v71, v92);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v87 + 56))(v70, 0, 1, v92);
    }
    v65[v68[6]] = v66[v68[6]];
    v74 = v68[7];
    v75 = &v65[v74];
    v76 = &v66[v74];
    if (*(_QWORD *)v76)
    {
      v77 = *((_QWORD *)v76 + 1);
      *(_QWORD *)v75 = *(_QWORD *)v76;
      *((_QWORD *)v75 + 1) = v77;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v75 = *(_OWORD *)v76;
    }
    v78 = *(int *)(a3 + 20);
    v79 = (uint64_t *)((char *)a1 + v78);
    v80 = (uint64_t *)((char *)a2 + v78);
    v81 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v80, v81) == 1)
    {
      v82 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v82 - 8) + 16))(v79, v80, v82);
      v83 = v79;
      v84 = v81;
      v85 = 1;
    }
    else
    {
      *v79 = *v80;
      swift_retain();
      v83 = v79;
      v84 = v81;
      v85 = 0;
    }
    swift_storeEnumTagMultiPayload(v83, v84, v85);
  }
  return a1;
}

double sub_100703868(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned int (*v5)(uint64_t, uint64_t, uint64_t);
  int *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double result;

  v3 = type metadata accessor for GenericMusicItem(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (!v5(a1, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  v6 = (int *)type metadata accessor for Featured(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = a1 + v6[8];
  v8 = type metadata accessor for ArtworkImage.ViewModel(0);
  v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  if (!v9(v7, 1, v8))
  {
    v10 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v7, v10);
    v11 = v7 + *(int *)(v8 + 20);
    v12 = type metadata accessor for Artwork.CropStyle(0);
    v13 = *(_QWORD *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  v14 = a1 + v6[9];
  v15 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 10, v15))
  {
    v16 = type metadata accessor for Playlist.Variant(0);
    v17 = *(_QWORD *)(v16 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16))
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v14, v16);
  }
  v18 = a1 + v6[10];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v19 = *(int *)(type metadata accessor for Featured.Caption(0) + 24);
  v20 = v18 + v19 + *(int *)(type metadata accessor for Featured.Caption.Thumbnail(0) + 20);
  if (!v9(v20, 1, v8))
  {
    v21 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
    v22 = v20 + *(int *)(v8 + 20);
    v23 = type metadata accessor for Artwork.CropStyle(0);
    v24 = *(_QWORD *)(v23 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
  }
  v25 = (id *)(a1 + v6[11]);

  v26 = type metadata accessor for SegueContext(0);
  v27 = (char *)v25 + *(int *)(v26 + 20);
  if (!v5((uint64_t)v27, 1, v3))
    (*(void (**)(char *, uint64_t))(v4 + 8))(v27, v3);
  if (*(id *)((char *)v25 + *(int *)(v26 + 28)))
    swift_release();
  v28 = a1 + *(int *)(a2 + 20);
  v29 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v28, v29) == 1)
  {
    v30 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v28, v30);
  }
  else
  {
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

char *sub_100703B88(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  void *v65;
  int *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v85;
  uint64_t v86;
  unsigned int (*__dst)(char *, uint64_t, uint64_t);
  char *__dsta;
  unsigned int (*v89)(char *, uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v92;

  v5 = type metadata accessor for GenericMusicItem(0);
  v6 = *(_QWORD *)(v5 - 8);
  v89 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  v90 = v5;
  v85 = v6;
  if (v89(a2, 1, v5))
  {
    v7 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  v8 = (int *)type metadata accessor for Featured(0);
  v9 = v8[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *((_QWORD *)v11 + 1);
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *((_QWORD *)v10 + 1) = v12;
  v13 = v8[6];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = *((_QWORD *)v15 + 1);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *((_QWORD *)v14 + 1) = v16;
  v17 = v8[7];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = *((_QWORD *)v19 + 1);
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *((_QWORD *)v18 + 1) = v20;
  v21 = v8[8];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = type metadata accessor for ArtworkImage.ViewModel(0);
  v86 = *(_QWORD *)(v24 - 8);
  v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v86 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __dst = v25;
  if (v25(v23, 1, v24))
  {
    v26 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    v27 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v22, v23, v27);
    v28 = *(int *)(v24 + 20);
    v29 = &v22[v28];
    v30 = &v23[v28];
    v31 = type metadata accessor for Artwork.CropStyle(0);
    v32 = *(_QWORD *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
    {
      v33 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v29, v30, v31);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v22, 0, 1, v24);
  }
  v34 = v8[9];
  v35 = &a1[v34];
  v36 = &a2[v34];
  v37 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v38 = *(_QWORD *)(v37 - 8);
  v92 = v24;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 10, v37))
  {
    v39 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    v40 = type metadata accessor for Playlist.Variant(0);
    v41 = *(_QWORD *)(v40 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v36, 1, v40))
    {
      v42 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v35, v36, v40);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v35, 0, 1, v40);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 10, v37);
  }
  v43 = v8[10];
  v44 = &a1[v43];
  v45 = &a2[v43];
  v46 = *(_QWORD *)&a2[v43 + 8];
  *(_QWORD *)v44 = *(_QWORD *)&a2[v43];
  *((_QWORD *)v44 + 1) = v46;
  v47 = *(_QWORD *)&a2[v43 + 24];
  *((_QWORD *)v44 + 2) = *(_QWORD *)&a2[v43 + 16];
  *((_QWORD *)v44 + 3) = v47;
  v48 = *(int *)(type metadata accessor for Featured.Caption(0) + 24);
  v49 = &v44[v48];
  v50 = &v45[v48];
  *v49 = *v50;
  v51 = type metadata accessor for Featured.Caption.Thumbnail(0);
  v52 = *(int *)(v51 + 20);
  v53 = &v49[v52];
  v54 = &v50[v52];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__dst(v54, 1, v92))
  {
    v55 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
  }
  else
  {
    v56 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 16))(v53, v54, v56);
    v57 = *(int *)(v92 + 20);
    __dsta = &v53[v57];
    v58 = &v54[v57];
    v59 = type metadata accessor for Artwork.CropStyle(0);
    v60 = *(_QWORD *)(v59 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
    {
      v61 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(__dsta, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v60 + 16))(__dsta, v58, v59);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(__dsta, 0, 1, v59);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v53, 0, 1, v92);
  }
  *(_QWORD *)&v49[*(int *)(v51 + 24)] = *(_QWORD *)&v50[*(int *)(v51 + 24)];
  v62 = v8[11];
  v63 = &a1[v62];
  v64 = &a2[v62];
  v65 = *(void **)&a2[v62];
  *(_QWORD *)&a1[v62] = v65;
  v66 = (int *)type metadata accessor for SegueContext(0);
  v67 = v66[5];
  v68 = &v63[v67];
  v69 = &v64[v67];
  v70 = v65;
  if (v89(v69, 1, v90))
  {
    v71 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v68, v69, v90);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v68, 0, 1, v90);
  }
  v63[v66[6]] = v64[v66[6]];
  v72 = v66[7];
  v73 = &v63[v72];
  v74 = &v64[v72];
  if (*(_QWORD *)v74)
  {
    v75 = *((_QWORD *)v74 + 1);
    *(_QWORD *)v73 = *(_QWORD *)v74;
    *((_QWORD *)v73 + 1) = v75;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v73 = *(_OWORD *)v74;
  }
  v76 = *(int *)(a3 + 20);
  v77 = &a1[v76];
  v78 = &a2[v76];
  v79 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v78, v79) == 1)
  {
    v80 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 16))(v77, v78, v80);
    v81 = v77;
    v82 = v79;
    v83 = 1;
  }
  else
  {
    *(_QWORD *)v77 = *(_QWORD *)v78;
    swift_retain();
    v81 = v77;
    v82 = v79;
    v83 = 0;
  }
  swift_storeEnumTagMultiPayload(v81, v82, v83);
  return a1;
}

char *sub_10070418C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(char *, uint64_t, uint64_t);
  int v8;
  int v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t (*v25)(char *, uint64_t, uint64_t);
  int v26;
  int v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(char *, uint64_t, uint64_t);
  int v43;
  int v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(char *, uint64_t, uint64_t);
  int v51;
  int v52;
  int *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(char *, uint64_t, uint64_t);
  int v61;
  int v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  int v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  size_t v81;
  void *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t (*v90)(void *, uint64_t, uint64_t);
  int v91;
  uint64_t v92;
  void **v93;
  char *v94;
  void *v95;
  void *v96;
  id v97;
  int *v98;
  uint64_t v99;
  char *v100;
  char *v101;
  int v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v119;
  void *v120;
  uint64_t v121;
  uint64_t v123;
  uint64_t (*__dst)(char *, uint64_t, uint64_t);
  void *__dsta;
  int *v126;
  uint64_t (*v127)(char *, uint64_t, uint64_t);

  v5 = type metadata accessor for GenericMusicItem(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 1, v5);
  v9 = v7(a2, 1, v5);
  v127 = v7;
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v9)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(a1, v5);
LABEL_6:
    v10 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 24))(a1, a2, v5);
LABEL_7:
  v11 = (int *)type metadata accessor for Featured(0);
  v12 = v11[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = v11[6];
  v16 = &a1[v15];
  v17 = &a2[v15];
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = v11[7];
  v19 = &a1[v18];
  v20 = &a2[v18];
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21 = v11[8];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = type metadata accessor for ArtworkImage.ViewModel(0);
  v119 = *(_QWORD *)(v24 - 8);
  v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v119 + 48);
  v26 = v25(v22, 1, v24);
  v27 = v25(v23, 1, v24);
  v123 = v5;
  __dst = v25;
  v121 = v6;
  if (!v26)
  {
    if (!v27)
    {
      v38 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v22, v23, v38);
      v39 = *(int *)(v24 + 20);
      v22 += v39;
      v23 += v39;
      v40 = type metadata accessor for Artwork.CropStyle(0);
      v41 = *(_QWORD *)(v40 - 8);
      v42 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 48);
      v43 = v42(v22, 1, v40);
      v44 = v42(v23, 1, v40);
      if (v43)
      {
        if (!v44)
        {
          (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v22, v23, v40);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v22, 0, 1, v40);
          goto LABEL_21;
        }
      }
      else
      {
        if (!v44)
        {
          (*(void (**)(char *, char *, uint64_t))(v41 + 24))(v22, v23, v40);
          goto LABEL_21;
        }
        (*(void (**)(char *, uint64_t))(v41 + 8))(v22, v40);
      }
      v36 = (uint64_t *)&unk_1011A14A0;
LABEL_14:
      v37 = sub_100007E8C(v36);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      goto LABEL_21;
    }
    sub_10005B748((uint64_t)v22, type metadata accessor for ArtworkImage.ViewModel);
LABEL_13:
    v36 = (uint64_t *)&unk_1011A3E10;
    goto LABEL_14;
  }
  if (v27)
    goto LABEL_13;
  v28 = v11;
  v29 = type metadata accessor for Artwork(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v22, v23, v29);
  v30 = *(int *)(v24 + 20);
  v31 = &v22[v30];
  v32 = &v23[v30];
  v33 = type metadata accessor for Artwork.CropStyle(0);
  v34 = *(_QWORD *)(v33 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
  {
    v35 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
  }
  v11 = v28;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v119 + 56))(v22, 0, 1, v24);
LABEL_21:
  v45 = v11[9];
  v46 = &a1[v45];
  v47 = &a2[v45];
  v48 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v49 = *(_QWORD *)(v48 - 8);
  v50 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v49 + 48);
  v51 = v50(v46, 10, v48);
  v52 = v50(v47, 10, v48);
  if (!v51)
  {
    if (!v52)
    {
      v58 = type metadata accessor for Playlist.Variant(0);
      v59 = *(_QWORD *)(v58 - 8);
      v60 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v59 + 48);
      v61 = v60(v46, 1, v58);
      v62 = v60(v47, 1, v58);
      if (v61)
      {
        if (!v62)
        {
          (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v46, v47, v58);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v46, 0, 1, v58);
          goto LABEL_34;
        }
      }
      else
      {
        if (!v62)
        {
          (*(void (**)(char *, char *, uint64_t))(v59 + 24))(v46, v47, v58);
          goto LABEL_34;
        }
        (*(void (**)(char *, uint64_t))(v59 + 8))(v46, v58);
      }
      v57 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
LABEL_28:
      memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
      goto LABEL_34;
    }
    sub_10004FF60((uint64_t)v46, (uint64_t *)&unk_1011A3DB0);
LABEL_27:
    v57 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_28;
  }
  if (v52)
    goto LABEL_27;
  v53 = v11;
  v54 = type metadata accessor for Playlist.Variant(0);
  v55 = *(_QWORD *)(v54 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v47, 1, v54))
  {
    v56 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v46, v47, v54);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v46, 0, 1, v54);
  }
  v11 = v53;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 10, v48);
LABEL_34:
  v126 = v11;
  v63 = v11[10];
  v64 = &a1[v63];
  v65 = &a2[v63];
  *(_QWORD *)v64 = *(_QWORD *)&a2[v63];
  *((_QWORD *)v64 + 1) = *(_QWORD *)&a2[v63 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v64 + 2) = *((_QWORD *)v65 + 2);
  *((_QWORD *)v64 + 3) = *((_QWORD *)v65 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v66 = *(int *)(type metadata accessor for Featured.Caption(0) + 24);
  v67 = &v64[v66];
  v68 = &v65[v66];
  *v67 = v65[v66];
  v69 = type metadata accessor for Featured.Caption.Thumbnail(0);
  v70 = *(int *)(v69 + 20);
  v71 = (uint64_t)&v67[v70];
  v72 = &v68[v70];
  v73 = __dst(&v67[v70], 1, v24);
  v74 = __dst(v72, 1, v24);
  if (!v73)
  {
    if (!v74)
    {
      v84 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v84 - 8) + 24))(v71, v72, v84);
      v85 = *(int *)(v24 + 20);
      v86 = (void *)(v71 + v85);
      v87 = &v72[v85];
      v88 = type metadata accessor for Artwork.CropStyle(0);
      v89 = *(_QWORD *)(v88 - 8);
      v90 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v89 + 48);
      v120 = v86;
      LODWORD(v86) = v90(v86, 1, v88);
      v91 = v90(v87, 1, v88);
      if ((_DWORD)v86)
      {
        if (!v91)
        {
          (*(void (**)(void *, char *, uint64_t))(v89 + 16))(v120, v87, v88);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v120, 0, 1, v88);
          goto LABEL_47;
        }
        v81 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
        v82 = v120;
        v83 = v87;
      }
      else
      {
        if (!v91)
        {
          (*(void (**)(void *, char *, uint64_t))(v89 + 24))(v120, v87, v88);
          goto LABEL_47;
        }
        (*(void (**)(void *, uint64_t))(v89 + 8))(v120, v88);
        v81 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
        v82 = v120;
        v83 = v87;
      }
LABEL_41:
      memcpy(v82, v83, v81);
      goto LABEL_47;
    }
    sub_10005B748(v71, type metadata accessor for ArtworkImage.ViewModel);
LABEL_40:
    v81 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v82 = (void *)v71;
    v83 = v72;
    goto LABEL_41;
  }
  if (v74)
    goto LABEL_40;
  v75 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 16))(v71, v72, v75);
  v76 = *(int *)(v24 + 20);
  __dsta = (void *)(v71 + v76);
  v77 = &v72[v76];
  v78 = type metadata accessor for Artwork.CropStyle(0);
  v79 = *(_QWORD *)(v78 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48))(v77, 1, v78))
  {
    v80 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(__dsta, v77, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v79 + 16))(__dsta, v77, v78);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v79 + 56))(__dsta, 0, 1, v78);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v119 + 56))(v71, 0, 1, v24);
LABEL_47:
  *(_QWORD *)&v67[*(int *)(v69 + 24)] = *(_QWORD *)&v68[*(int *)(v69 + 24)];
  v92 = v126[11];
  v93 = (void **)&a1[v92];
  v94 = &a2[v92];
  v95 = *(void **)&a2[v92];
  v96 = *v93;
  *v93 = v95;
  v97 = v95;

  v98 = (int *)type metadata accessor for SegueContext(0);
  v99 = v98[5];
  v100 = (char *)v93 + v99;
  v101 = &v94[v99];
  LODWORD(v96) = v127((char *)v93 + v99, 1, v123);
  v102 = v127(v101, 1, v123);
  if ((_DWORD)v96)
  {
    if (!v102)
    {
      (*(void (**)(char *, char *, uint64_t))(v121 + 16))(v100, v101, v123);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v121 + 56))(v100, 0, 1, v123);
      goto LABEL_53;
    }
    goto LABEL_52;
  }
  if (v102)
  {
    (*(void (**)(char *, uint64_t))(v121 + 8))(v100, v123);
LABEL_52:
    v103 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
    goto LABEL_53;
  }
  (*(void (**)(char *, char *, uint64_t))(v121 + 24))(v100, v101, v123);
LABEL_53:
  *((_BYTE *)v93 + v98[6]) = v94[v98[6]];
  v104 = v98[7];
  v105 = (void **)((char *)v93 + v104);
  v106 = &v94[v104];
  v107 = *(_QWORD *)&v94[v104];
  if (*v105)
  {
    if (v107)
    {
      v108 = *((_QWORD *)v106 + 1);
      *v105 = v107;
      v105[1] = v108;
      swift_retain();
      swift_release();
      goto LABEL_60;
    }
    swift_release();
  }
  else if (v107)
  {
    v109 = *((_QWORD *)v106 + 1);
    *v105 = v107;
    v105[1] = v109;
    swift_retain();
    goto LABEL_60;
  }
  *(_OWORD *)v105 = *(_OWORD *)v106;
LABEL_60:
  if (a1 != a2)
  {
    v110 = *(int *)(a3 + 20);
    v111 = &a1[v110];
    v112 = &a2[v110];
    sub_10004FF60((uint64_t)&a1[v110], (uint64_t *)&unk_1011ACE40);
    v113 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v112, v113) == 1)
    {
      v114 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v114 - 8) + 16))(v111, v112, v114);
      v115 = v111;
      v116 = v113;
      v117 = 1;
    }
    else
    {
      *(_QWORD *)v111 = *(_QWORD *)v112;
      swift_retain();
      v115 = v111;
      v116 = v113;
      v117 = 0;
    }
    swift_storeEnumTagMultiPayload(v115, v116, v117);
  }
  return a1;
}

char *sub_100704BDC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  __int128 v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  int *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v68;
  uint64_t v69;
  unsigned int (*__dst)(char *, uint64_t, uint64_t);
  char *__dsta;
  unsigned int (*v72)(char *, uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v75;

  v5 = type metadata accessor for GenericMusicItem(0);
  v6 = *(_QWORD *)(v5 - 8);
  v72 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  v73 = v5;
  if (v72(a2, 1, v5))
  {
    v7 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  v8 = (int *)type metadata accessor for Featured(0);
  *(_OWORD *)&a1[v8[5]] = *(_OWORD *)&a2[v8[5]];
  *(_OWORD *)&a1[v8[6]] = *(_OWORD *)&a2[v8[6]];
  *(_OWORD *)&a1[v8[7]] = *(_OWORD *)&a2[v8[7]];
  v9 = v8[8];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = type metadata accessor for ArtworkImage.ViewModel(0);
  v13 = *(_QWORD *)(v12 - 8);
  __dst = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v69 = v6;
  if (__dst(v11, 1, v12))
  {
    v14 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v15 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v10, v11, v15);
    v16 = *(int *)(v12 + 20);
    v17 = &v10[v16];
    v18 = &v11[v16];
    v19 = type metadata accessor for Artwork.CropStyle(0);
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      v21 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v75 = v12;
  v22 = v8[9];
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v26 = *(_QWORD *)(v25 - 8);
  v68 = v13;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 10, v25))
  {
    v27 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    v28 = type metadata accessor for Playlist.Variant(0);
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v24, 1, v28))
    {
      v30 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v23, v24, v28);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v23, 0, 1, v28);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 10, v25);
  }
  v31 = v8[10];
  v32 = &a1[v31];
  v33 = &a2[v31];
  v34 = *(_OWORD *)&a2[v31 + 16];
  *(_OWORD *)v32 = *(_OWORD *)&a2[v31];
  *((_OWORD *)v32 + 1) = v34;
  v35 = *(int *)(type metadata accessor for Featured.Caption(0) + 24);
  v36 = &v32[v35];
  v37 = &v33[v35];
  v32[v35] = v33[v35];
  v38 = type metadata accessor for Featured.Caption.Thumbnail(0);
  v39 = *(int *)(v38 + 20);
  v40 = &v36[v39];
  v41 = &v37[v39];
  if (__dst(&v37[v39], 1, v75))
  {
    v42 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  else
  {
    v43 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v40, v41, v43);
    v44 = *(int *)(v75 + 20);
    __dsta = &v40[v44];
    v45 = &v41[v44];
    v46 = type metadata accessor for Artwork.CropStyle(0);
    v47 = *(_QWORD *)(v46 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
    {
      v48 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(__dsta, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 32))(__dsta, v45, v46);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(__dsta, 0, 1, v46);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v40, 0, 1, v75);
  }
  *(_QWORD *)&v36[*(int *)(v38 + 24)] = *(_QWORD *)&v37[*(int *)(v38 + 24)];
  v49 = v8[11];
  v50 = &a1[v49];
  v51 = &a2[v49];
  *(_QWORD *)&a1[v49] = *(_QWORD *)&a2[v49];
  v52 = (int *)type metadata accessor for SegueContext(0);
  v53 = v52[5];
  v54 = &v50[v53];
  v55 = &v51[v53];
  if (v72(&v51[v53], 1, v73))
  {
    v56 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v54, v55, v73);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v54, 0, 1, v73);
  }
  v50[v52[6]] = v51[v52[6]];
  v57 = v52[7];
  v58 = &v50[v57];
  v59 = &v51[v57];
  v60 = *(_QWORD *)v59;
  if (*(_QWORD *)v59)
  {
    v61 = *((_QWORD *)v59 + 1);
    *(_QWORD *)v58 = v60;
    *((_QWORD *)v58 + 1) = v61;
  }
  else
  {
    *(_OWORD *)v58 = *(_OWORD *)v59;
  }
  v62 = *(int *)(a3 + 20);
  v63 = &a1[v62];
  v64 = &a2[v62];
  v65 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v64, v65) == 1)
  {
    v66 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 32))(v63, v64, v66);
    swift_storeEnumTagMultiPayload(v63, v65, 1);
  }
  else
  {
    memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
  }
  return a1;
}

char *sub_100705188(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(char *, uint64_t, uint64_t);
  int v8;
  int v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t (*v31)(char *, uint64_t, uint64_t);
  int v32;
  int v33;
  int *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(char *, uint64_t, uint64_t);
  int v49;
  int v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(char *, uint64_t, uint64_t);
  int v57;
  int v58;
  int *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t (*v66)(char *, uint64_t, uint64_t);
  int v67;
  int v68;
  uint64_t (*v69)(char *, uint64_t, uint64_t);
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  size_t v89;
  void *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t (*v98)(void *, uint64_t, uint64_t);
  int v99;
  uint64_t v100;
  char *v101;
  char *v102;
  void *v103;
  int *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  int v108;
  int v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v123;
  void *__dst;
  void *__dsta;
  uint64_t v126;
  uint64_t v127;
  uint64_t v129;
  uint64_t (*v130)(char *, uint64_t, uint64_t);
  int *v131;
  uint64_t (*v132)(char *, uint64_t, uint64_t);

  v5 = type metadata accessor for GenericMusicItem(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 1, v5);
  v9 = v7(a2, 1, v5);
  v132 = v7;
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v9)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(a1, v5);
LABEL_6:
    v10 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 40))(a1, a2, v5);
LABEL_7:
  v11 = (int *)type metadata accessor for Featured(0);
  v12 = v11[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v16 = *(_QWORD *)v14;
  v15 = *((_QWORD *)v14 + 1);
  *(_QWORD *)v13 = v16;
  *((_QWORD *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  v17 = v11[6];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v21 = *(_QWORD *)v19;
  v20 = *((_QWORD *)v19 + 1);
  *(_QWORD *)v18 = v21;
  *((_QWORD *)v18 + 1) = v20;
  swift_bridgeObjectRelease();
  v22 = v11[7];
  v23 = &a1[v22];
  v24 = &a2[v22];
  v26 = *(_QWORD *)v24;
  v25 = *((_QWORD *)v24 + 1);
  *(_QWORD *)v23 = v26;
  *((_QWORD *)v23 + 1) = v25;
  swift_bridgeObjectRelease();
  v27 = v11[8];
  v28 = &a1[v27];
  v29 = &a2[v27];
  v30 = type metadata accessor for ArtworkImage.ViewModel(0);
  v126 = *(_QWORD *)(v30 - 8);
  v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v126 + 48);
  v32 = v31(v28, 1, v30);
  v130 = v31;
  v33 = v31(v29, 1, v30);
  v129 = v5;
  v127 = v6;
  if (!v32)
  {
    if (!v33)
    {
      v44 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 40))(v28, v29, v44);
      v45 = *(int *)(v30 + 20);
      v28 += v45;
      v29 += v45;
      v46 = type metadata accessor for Artwork.CropStyle(0);
      v47 = *(_QWORD *)(v46 - 8);
      v48 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v47 + 48);
      v49 = v48(v28, 1, v46);
      v50 = v48(v29, 1, v46);
      if (v49)
      {
        if (!v50)
        {
          (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v28, v29, v46);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v28, 0, 1, v46);
          goto LABEL_21;
        }
      }
      else
      {
        if (!v50)
        {
          (*(void (**)(char *, char *, uint64_t))(v47 + 40))(v28, v29, v46);
          goto LABEL_21;
        }
        (*(void (**)(char *, uint64_t))(v47 + 8))(v28, v46);
      }
      v42 = (uint64_t *)&unk_1011A14A0;
LABEL_14:
      v43 = sub_100007E8C(v42);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      goto LABEL_21;
    }
    sub_10005B748((uint64_t)v28, type metadata accessor for ArtworkImage.ViewModel);
LABEL_13:
    v42 = (uint64_t *)&unk_1011A3E10;
    goto LABEL_14;
  }
  if (v33)
    goto LABEL_13;
  v34 = v11;
  v35 = type metadata accessor for Artwork(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v28, v29, v35);
  v36 = *(int *)(v30 + 20);
  v37 = &v28[v36];
  v38 = &v29[v36];
  v39 = type metadata accessor for Artwork.CropStyle(0);
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
  {
    v41 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v37, v38, v39);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
  }
  v11 = v34;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v126 + 56))(v28, 0, 1, v30);
LABEL_21:
  v51 = v11[9];
  v52 = &a1[v51];
  v53 = &a2[v51];
  v54 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v55 = *(_QWORD *)(v54 - 8);
  v56 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v55 + 48);
  v57 = v56(v52, 10, v54);
  v58 = v56(v53, 10, v54);
  if (v57)
  {
    if (!v58)
    {
      v59 = v11;
      v60 = type metadata accessor for Playlist.Variant(0);
      v61 = *(_QWORD *)(v60 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v53, 1, v60))
      {
        v62 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
        memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v52, v53, v60);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v52, 0, 1, v60);
      }
      v11 = v59;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 10, v54);
      goto LABEL_33;
    }
LABEL_27:
    v63 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
LABEL_33:
    v69 = v130;
    goto LABEL_34;
  }
  if (v58)
  {
    sub_10004FF60((uint64_t)v52, (uint64_t *)&unk_1011A3DB0);
    goto LABEL_27;
  }
  v64 = type metadata accessor for Playlist.Variant(0);
  v65 = *(_QWORD *)(v64 - 8);
  v66 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v65 + 48);
  v67 = v66(v52, 1, v64);
  v68 = v66(v53, 1, v64);
  if (v67)
  {
    v69 = v130;
    if (!v68)
    {
      (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v52, v53, v64);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v52, 0, 1, v64);
      goto LABEL_34;
    }
    goto LABEL_71;
  }
  v69 = v130;
  if (v68)
  {
    (*(void (**)(char *, uint64_t))(v65 + 8))(v52, v64);
LABEL_71:
    v123 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v123 - 8) + 64));
    goto LABEL_34;
  }
  (*(void (**)(char *, char *, uint64_t))(v65 + 40))(v52, v53, v64);
LABEL_34:
  v131 = v11;
  v70 = v11[10];
  v71 = &a1[v70];
  v72 = &a2[v70];
  v73 = *(_QWORD *)&a2[v70 + 8];
  *(_QWORD *)v71 = *(_QWORD *)&a2[v70];
  *((_QWORD *)v71 + 1) = v73;
  swift_bridgeObjectRelease();
  v74 = *((_QWORD *)v72 + 3);
  *((_QWORD *)v71 + 2) = *((_QWORD *)v72 + 2);
  *((_QWORD *)v71 + 3) = v74;
  swift_bridgeObjectRelease();
  v75 = *(int *)(type metadata accessor for Featured.Caption(0) + 24);
  v76 = &v71[v75];
  v77 = &v72[v75];
  v71[v75] = *v77;
  v78 = type metadata accessor for Featured.Caption.Thumbnail(0);
  v79 = *(int *)(v78 + 20);
  v80 = (uint64_t)&v76[v79];
  v81 = &v77[v79];
  LODWORD(v71) = v69(&v76[v79], 1, v30);
  v82 = v69(v81, 1, v30);
  if (!(_DWORD)v71)
  {
    if (!v82)
    {
      v92 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v92 - 8) + 40))(v80, v81, v92);
      v93 = *(int *)(v30 + 20);
      v94 = (void *)(v80 + v93);
      v95 = &v81[v93];
      v96 = type metadata accessor for Artwork.CropStyle(0);
      v97 = *(_QWORD *)(v96 - 8);
      v98 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v97 + 48);
      __dsta = v94;
      LODWORD(v94) = v98(v94, 1, v96);
      v99 = v98(v95, 1, v96);
      if ((_DWORD)v94)
      {
        if (!v99)
        {
          (*(void (**)(void *, char *, uint64_t))(v97 + 32))(__dsta, v95, v96);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v97 + 56))(__dsta, 0, 1, v96);
          goto LABEL_47;
        }
        v89 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
        v90 = __dsta;
        v91 = v95;
      }
      else
      {
        if (!v99)
        {
          (*(void (**)(void *, char *, uint64_t))(v97 + 40))(__dsta, v95, v96);
          goto LABEL_47;
        }
        (*(void (**)(void *, uint64_t))(v97 + 8))(__dsta, v96);
        v89 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
        v90 = __dsta;
        v91 = v95;
      }
LABEL_41:
      memcpy(v90, v91, v89);
      goto LABEL_47;
    }
    sub_10005B748(v80, type metadata accessor for ArtworkImage.ViewModel);
LABEL_40:
    v89 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v90 = (void *)v80;
    v91 = v81;
    goto LABEL_41;
  }
  if (v82)
    goto LABEL_40;
  v83 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 32))(v80, v81, v83);
  v84 = *(int *)(v30 + 20);
  __dst = (void *)(v80 + v84);
  v85 = &v81[v84];
  v86 = type metadata accessor for Artwork.CropStyle(0);
  v87 = *(_QWORD *)(v86 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48))(v85, 1, v86))
  {
    v88 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(__dst, v85, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v87 + 32))(__dst, v85, v86);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v87 + 56))(__dst, 0, 1, v86);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v126 + 56))(v80, 0, 1, v30);
LABEL_47:
  *(_QWORD *)&v76[*(int *)(v78 + 24)] = *(_QWORD *)&v77[*(int *)(v78 + 24)];
  v100 = v131[11];
  v101 = &a1[v100];
  v102 = &a2[v100];
  v103 = *(void **)&a1[v100];
  *(_QWORD *)&a1[v100] = *(_QWORD *)&a2[v100];

  v104 = (int *)type metadata accessor for SegueContext(0);
  v105 = v104[5];
  v106 = &v101[v105];
  v107 = &v102[v105];
  v108 = v132(&v101[v105], 1, v129);
  v109 = v132(v107, 1, v129);
  if (v108)
  {
    if (!v109)
    {
      (*(void (**)(char *, char *, uint64_t))(v127 + 32))(v106, v107, v129);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v127 + 56))(v106, 0, 1, v129);
      goto LABEL_53;
    }
    goto LABEL_52;
  }
  if (v109)
  {
    (*(void (**)(char *, uint64_t))(v127 + 8))(v106, v129);
LABEL_52:
    v110 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
    goto LABEL_53;
  }
  (*(void (**)(char *, char *, uint64_t))(v127 + 40))(v106, v107, v129);
LABEL_53:
  v101[v104[6]] = v102[v104[6]];
  v111 = v104[7];
  v112 = &v101[v111];
  v113 = &v102[v111];
  v114 = *(_QWORD *)&v102[v111];
  if (*(_QWORD *)v112)
  {
    if (v114)
    {
      v115 = *((_QWORD *)v113 + 1);
      *(_QWORD *)v112 = v114;
      *((_QWORD *)v112 + 1) = v115;
      swift_release();
      goto LABEL_60;
    }
    swift_release();
  }
  else if (v114)
  {
    v116 = *((_QWORD *)v113 + 1);
    *(_QWORD *)v112 = v114;
    *((_QWORD *)v112 + 1) = v116;
    goto LABEL_60;
  }
  *(_OWORD *)v112 = *(_OWORD *)v113;
LABEL_60:
  if (a1 != a2)
  {
    v117 = *(int *)(a3 + 20);
    v118 = &a1[v117];
    v119 = &a2[v117];
    sub_10004FF60((uint64_t)&a1[v117], (uint64_t *)&unk_1011ACE40);
    v120 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v119, v120) == 1)
    {
      v121 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v121 - 8) + 32))(v118, v119, v121);
      swift_storeEnumTagMultiPayload(v118, v120, 1);
    }
    else
    {
      memcpy(v118, v119, *(_QWORD *)(*(_QWORD *)(v120 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100705B8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100705B98);
}

uint64_t sub_100705B98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for Featured(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011C6890);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_100705C10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100705C1C);
}

uint64_t sub_100705C1C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for Featured(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_100007E8C(&qword_1011C6890);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_100705C9C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[2];

  v2 = type metadata accessor for Featured(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1000E3A44(319, (unint64_t *)&qword_1011C6900, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 2, v6, a1 + 16);
    }
  }
}

uint64_t *sub_100705D38(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  void *v68;
  int *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v80;
  uint64_t v81;
  unsigned int (*__dst)(char *, uint64_t, uint64_t);
  char *__dsta;
  unsigned int (*v84)(uint64_t *, uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;

  v4 = type metadata accessor for Featured(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = (int *)v4;
    v7 = type metadata accessor for GenericMusicItem(0);
    v8 = *(_QWORD *)(v7 - 8);
    v84 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    v85 = v7;
    v80 = v8;
    if (v84(a2, 1, v7))
    {
      v9 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = v6[5];
    v12 = (uint64_t *)((char *)a1 + v11);
    v13 = (uint64_t *)((char *)a2 + v11);
    v14 = v13[1];
    *v12 = *v13;
    v12[1] = v14;
    v15 = v6[6];
    v16 = (uint64_t *)((char *)a1 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = v6[7];
    v20 = (uint64_t *)((char *)a1 + v19);
    v21 = (uint64_t *)((char *)a2 + v19);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = v6[8];
    v24 = (char *)a1 + v23;
    v25 = (char *)a2 + v23;
    v26 = type metadata accessor for ArtworkImage.ViewModel(0);
    v81 = *(_QWORD *)(v26 - 8);
    v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v28 = v26;
    swift_bridgeObjectRetain();
    __dst = v27;
    if (v27(v25, 1, v26))
    {
      v29 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      v30 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v24, v25, v30);
      v31 = *(int *)(v26 + 20);
      v32 = &v24[v31];
      v33 = &v25[v31];
      v34 = type metadata accessor for Artwork.CropStyle(0);
      v35 = *(_QWORD *)(v34 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
      {
        v36 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v24, 0, 1, v28);
    }
    v37 = v6[9];
    v38 = (char *)a1 + v37;
    v39 = (char *)a2 + v37;
    v40 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    v41 = *(_QWORD *)(v40 - 8);
    v86 = v28;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 10, v40))
    {
      v42 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      v43 = type metadata accessor for Playlist.Variant(0);
      v44 = *(_QWORD *)(v43 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v39, 1, v43))
      {
        v45 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v38, v39, v43);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v38, 0, 1, v43);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 10, v40);
    }
    v46 = v6[10];
    v47 = (uint64_t *)((char *)a1 + v46);
    v48 = (char *)a2 + v46;
    v49 = *(uint64_t *)((char *)a2 + v46 + 8);
    *v47 = *(uint64_t *)((char *)a2 + v46);
    v47[1] = v49;
    v50 = *(uint64_t *)((char *)a2 + v46 + 24);
    v47[2] = *(uint64_t *)((char *)a2 + v46 + 16);
    v47[3] = v50;
    v51 = *(int *)(type metadata accessor for Featured.Caption(0) + 24);
    v52 = (char *)v47 + v51;
    v53 = &v48[v51];
    *v52 = *v53;
    v54 = type metadata accessor for Featured.Caption.Thumbnail(0);
    v55 = *(int *)(v54 + 20);
    v56 = &v52[v55];
    v57 = &v53[v55];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__dst(v57, 1, v86))
    {
      v58 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
      memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    }
    else
    {
      v59 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v56, v57, v59);
      v60 = *(int *)(v86 + 20);
      __dsta = &v56[v60];
      v61 = &v57[v60];
      v62 = type metadata accessor for Artwork.CropStyle(0);
      v63 = *(_QWORD *)(v62 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v61, 1, v62))
      {
        v64 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(__dsta, v61, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v63 + 16))(__dsta, v61, v62);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(__dsta, 0, 1, v62);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v56, 0, 1, v86);
    }
    *(_QWORD *)&v52[*(int *)(v54 + 24)] = *(_QWORD *)&v53[*(int *)(v54 + 24)];
    v65 = v6[11];
    v66 = (char *)a1 + v65;
    v67 = (char *)a2 + v65;
    v68 = *(void **)((char *)a2 + v65);
    *(uint64_t *)((char *)a1 + v65) = (uint64_t)v68;
    v69 = (int *)type metadata accessor for SegueContext(0);
    v70 = v69[5];
    v71 = &v66[v70];
    v72 = &v67[v70];
    v73 = v68;
    if (v84((uint64_t *)v72, 1, v85))
    {
      v74 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v71, v72, v85);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v71, 0, 1, v85);
    }
    v66[v69[6]] = v67[v69[6]];
    v75 = v69[7];
    v76 = &v66[v75];
    v77 = &v67[v75];
    if (*(_QWORD *)v77)
    {
      v78 = *((_QWORD *)v77 + 1);
      *(_QWORD *)v76 = *(_QWORD *)v77;
      *((_QWORD *)v76 + 1) = v78;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v76 = *(_OWORD *)v77;
    }
  }
  return a1;
}

double sub_1007062E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int (*v4)(uint64_t, uint64_t, uint64_t);
  int *v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id *v24;
  uint64_t v25;
  char *v26;
  double result;

  v2 = type metadata accessor for GenericMusicItem(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (!v4(a1, 1, v2))
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  v5 = (int *)type metadata accessor for Featured(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = a1 + v5[8];
  v7 = type metadata accessor for ArtworkImage.ViewModel(0);
  v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48);
  if (!v8(v6, 1, v7))
  {
    v9 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v6, v9);
    v10 = v6 + *(int *)(v7 + 20);
    v11 = type metadata accessor for Artwork.CropStyle(0);
    v12 = *(_QWORD *)(v11 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  }
  v13 = a1 + v5[9];
  v14 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 10, v14))
  {
    v15 = type metadata accessor for Playlist.Variant(0);
    v16 = *(_QWORD *)(v15 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15))
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v13, v15);
  }
  v17 = a1 + v5[10];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v18 = *(int *)(type metadata accessor for Featured.Caption(0) + 24);
  v19 = v17 + v18 + *(int *)(type metadata accessor for Featured.Caption.Thumbnail(0) + 20);
  if (!v8(v19, 1, v7))
  {
    v20 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
    v21 = v19 + *(int *)(v7 + 20);
    v22 = type metadata accessor for Artwork.CropStyle(0);
    v23 = *(_QWORD *)(v22 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
  }
  v24 = (id *)(a1 + v5[11]);

  v25 = type metadata accessor for SegueContext(0);
  v26 = (char *)v24 + *(int *)(v25 + 20);
  if (!v4((uint64_t)v26, 1, v2))
    (*(void (**)(char *, uint64_t))(v3 + 8))(v26, v2);
  if (*(id *)((char *)v24 + *(int *)(v25 + 28)))
    *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

char *sub_1007065AC(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  void *v64;
  int *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v76;
  uint64_t v77;
  unsigned int (*__dst)(char *, uint64_t, uint64_t);
  char *__dsta;
  unsigned int (*v80)(char *, uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;

  v4 = type metadata accessor for GenericMusicItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  v80 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v81 = v4;
  v76 = v5;
  if (v80(a2, 1, v4))
  {
    v6 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(a1, a2, v4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  v7 = (int *)type metadata accessor for Featured(0);
  v8 = v7[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = *((_QWORD *)v10 + 1);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *((_QWORD *)v9 + 1) = v11;
  v12 = v7[6];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = *((_QWORD *)v14 + 1);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *((_QWORD *)v13 + 1) = v15;
  v16 = v7[7];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = *((_QWORD *)v18 + 1);
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *((_QWORD *)v17 + 1) = v19;
  v20 = v7[8];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = type metadata accessor for ArtworkImage.ViewModel(0);
  v77 = *(_QWORD *)(v23 - 8);
  v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v77 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __dst = v24;
  if (v24(v22, 1, v23))
  {
    v25 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    v26 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v21, v22, v26);
    v27 = *(int *)(v23 + 20);
    v28 = &v21[v27];
    v29 = &v22[v27];
    v30 = type metadata accessor for Artwork.CropStyle(0);
    v31 = *(_QWORD *)(v30 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
    {
      v32 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v28, v29, v30);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v77 + 56))(v21, 0, 1, v23);
  }
  v33 = v7[9];
  v34 = &a1[v33];
  v35 = &a2[v33];
  v36 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v37 = *(_QWORD *)(v36 - 8);
  v82 = v23;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 10, v36))
  {
    v38 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    v39 = type metadata accessor for Playlist.Variant(0);
    v40 = *(_QWORD *)(v39 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v35, 1, v39))
    {
      v41 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v34, v35, v39);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v34, 0, 1, v39);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 10, v36);
  }
  v42 = v7[10];
  v43 = &a1[v42];
  v44 = &a2[v42];
  v45 = *(_QWORD *)&a2[v42 + 8];
  *(_QWORD *)v43 = *(_QWORD *)&a2[v42];
  *((_QWORD *)v43 + 1) = v45;
  v46 = *(_QWORD *)&a2[v42 + 24];
  *((_QWORD *)v43 + 2) = *(_QWORD *)&a2[v42 + 16];
  *((_QWORD *)v43 + 3) = v46;
  v47 = *(int *)(type metadata accessor for Featured.Caption(0) + 24);
  v48 = &v43[v47];
  v49 = &v44[v47];
  *v48 = *v49;
  v50 = type metadata accessor for Featured.Caption.Thumbnail(0);
  v51 = *(int *)(v50 + 20);
  v52 = &v48[v51];
  v53 = &v49[v51];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__dst(v53, 1, v82))
  {
    v54 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
  }
  else
  {
    v55 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v52, v53, v55);
    v56 = *(int *)(v82 + 20);
    __dsta = &v52[v56];
    v57 = &v53[v56];
    v58 = type metadata accessor for Artwork.CropStyle(0);
    v59 = *(_QWORD *)(v58 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58))
    {
      v60 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(__dsta, v57, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v59 + 16))(__dsta, v57, v58);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(__dsta, 0, 1, v58);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v77 + 56))(v52, 0, 1, v82);
  }
  *(_QWORD *)&v48[*(int *)(v50 + 24)] = *(_QWORD *)&v49[*(int *)(v50 + 24)];
  v61 = v7[11];
  v62 = &a1[v61];
  v63 = &a2[v61];
  v64 = *(void **)&a2[v61];
  *(_QWORD *)&a1[v61] = v64;
  v65 = (int *)type metadata accessor for SegueContext(0);
  v66 = v65[5];
  v67 = &v62[v66];
  v68 = &v63[v66];
  v69 = v64;
  if (v80(v68, 1, v81))
  {
    v70 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v67, v68, v81);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v67, 0, 1, v81);
  }
  v62[v65[6]] = v63[v65[6]];
  v71 = v65[7];
  v72 = &v62[v71];
  v73 = &v63[v71];
  if (*(_QWORD *)v73)
  {
    v74 = *((_QWORD *)v73 + 1);
    *(_QWORD *)v72 = *(_QWORD *)v73;
    *((_QWORD *)v72 + 1) = v74;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v72 = *(_OWORD *)v73;
  }
  return a1;
}

char *sub_100706B2C(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(char *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(char *, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(char *, uint64_t, uint64_t);
  int v42;
  int v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(char *, uint64_t, uint64_t);
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(char *, uint64_t, uint64_t);
  int v59;
  int v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  int v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t (*v81)(char *, uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t (*v88)(char *, uint64_t, uint64_t);
  int v89;
  size_t v90;
  char *v91;
  uint64_t v92;
  void **v93;
  char *v94;
  void *v95;
  void *v96;
  id v97;
  int *v98;
  uint64_t v99;
  char *v100;
  char *v101;
  int v102;
  int v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *__dst;
  char *__dsta;
  void (**__src)(void *, _QWORD, uint64_t, uint64_t);
  uint64_t v115;
  uint64_t v116;
  uint64_t (*v117)(char *, uint64_t, uint64_t);
  int *v118;

  v4 = type metadata accessor for GenericMusicItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  v115 = v5;
  v116 = v4;
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(a1, a2, v4);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(a1, v4);
LABEL_6:
    v9 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 24))(a1, a2, v4);
LABEL_7:
  v10 = (int *)type metadata accessor for Featured(0);
  v11 = v10[5];
  v12 = &a1[v11];
  v13 = &a2[v11];
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = v10[6];
  v15 = &a1[v14];
  v16 = &a2[v14];
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *((_QWORD *)v15 + 1) = *((_QWORD *)v16 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = v10[7];
  v18 = &a1[v17];
  v19 = &a2[v17];
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v118 = v10;
  v20 = v10[8];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = type metadata accessor for ArtworkImage.ViewModel(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48);
  v26 = v25(v21, 1, v23);
  v27 = v25(v22, 1, v23);
  v117 = v6;
  __src = (void (**)(void *, _QWORD, uint64_t, uint64_t))v24;
  if (!v26)
  {
    if (!v27)
    {
      v37 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 24))(v21, v22, v37);
      v38 = *(int *)(v23 + 20);
      v21 += v38;
      v22 += v38;
      v39 = type metadata accessor for Artwork.CropStyle(0);
      v40 = *(_QWORD *)(v39 - 8);
      v41 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v40 + 48);
      v42 = v41(v21, 1, v39);
      v43 = v41(v22, 1, v39);
      if (v42)
      {
        if (!v43)
        {
          (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v21, v22, v39);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v21, 0, 1, v39);
          goto LABEL_21;
        }
      }
      else
      {
        if (!v43)
        {
          (*(void (**)(char *, char *, uint64_t))(v40 + 24))(v21, v22, v39);
          goto LABEL_21;
        }
        (*(void (**)(char *, uint64_t))(v40 + 8))(v21, v39);
      }
      v35 = (uint64_t *)&unk_1011A14A0;
LABEL_14:
      v36 = sub_100007E8C(v35);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      goto LABEL_21;
    }
    sub_10005B748((uint64_t)v21, type metadata accessor for ArtworkImage.ViewModel);
LABEL_13:
    v35 = (uint64_t *)&unk_1011A3E10;
    goto LABEL_14;
  }
  if (v27)
    goto LABEL_13;
  v28 = type metadata accessor for Artwork(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v21, v22, v28);
  v29 = *(int *)(v23 + 20);
  v30 = &v21[v29];
  v31 = &v22[v29];
  v32 = type metadata accessor for Artwork.CropStyle(0);
  v33 = *(_QWORD *)(v32 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
  {
    v34 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
LABEL_21:
  v44 = v118[9];
  v45 = &a1[v44];
  v46 = &a2[v44];
  v47 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v48 = *(_QWORD *)(v47 - 8);
  v49 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 48);
  v50 = v49(v45, 10, v47);
  v51 = v49(v46, 10, v47);
  if (!v50)
  {
    if (!v51)
    {
      v56 = type metadata accessor for Playlist.Variant(0);
      v57 = *(_QWORD *)(v56 - 8);
      v58 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v57 + 48);
      v59 = v58(v45, 1, v56);
      v60 = v58(v46, 1, v56);
      if (v59)
      {
        if (!v60)
        {
          (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v45, v46, v56);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v45, 0, 1, v56);
          goto LABEL_34;
        }
      }
      else
      {
        if (!v60)
        {
          (*(void (**)(char *, char *, uint64_t))(v57 + 24))(v45, v46, v56);
          goto LABEL_34;
        }
        (*(void (**)(char *, uint64_t))(v57 + 8))(v45, v56);
      }
      v55 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
LABEL_28:
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      goto LABEL_34;
    }
    sub_10004FF60((uint64_t)v45, (uint64_t *)&unk_1011A3DB0);
LABEL_27:
    v55 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_28;
  }
  if (v51)
    goto LABEL_27;
  v52 = type metadata accessor for Playlist.Variant(0);
  v53 = *(_QWORD *)(v52 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v46, 1, v52))
  {
    v54 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v45, v46, v52);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v45, 0, 1, v52);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 10, v47);
LABEL_34:
  v61 = v118[10];
  v62 = &a1[v61];
  v63 = &a2[v61];
  *(_QWORD *)v62 = *(_QWORD *)&a2[v61];
  *((_QWORD *)v62 + 1) = *(_QWORD *)&a2[v61 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v62 + 2) = *((_QWORD *)v63 + 2);
  *((_QWORD *)v62 + 3) = *((_QWORD *)v63 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v64 = *(int *)(type metadata accessor for Featured.Caption(0) + 24);
  v65 = &v62[v64];
  v66 = &v63[v64];
  *v65 = *v66;
  v67 = type metadata accessor for Featured.Caption.Thumbnail(0);
  v68 = *(int *)(v67 + 20);
  v69 = &v65[v68];
  v70 = &v66[v68];
  v71 = v25(&v65[v68], 1, v23);
  v72 = v25(v70, 1, v23);
  if (v71)
  {
    if (!v72)
    {
      v73 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 16))(v69, v70, v73);
      v74 = *(int *)(v23 + 20);
      __dst = &v69[v74];
      v75 = &v70[v74];
      v76 = type metadata accessor for Artwork.CropStyle(0);
      v77 = *(_QWORD *)(v76 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v77 + 48))(v75, 1, v76))
      {
        v78 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(__dst, v75, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v77 + 16))(__dst, v75, v76);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v77 + 56))(__dst, 0, 1, v76);
      }
      v81 = v117;
      __src[7](v69, 0, 1, v23);
      goto LABEL_56;
    }
LABEL_40:
    v79 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
    v80 = v116;
    v81 = v117;
    goto LABEL_57;
  }
  if (v72)
  {
    sub_10005B748((uint64_t)v69, type metadata accessor for ArtworkImage.ViewModel);
    goto LABEL_40;
  }
  v82 = type metadata accessor for Artwork(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 24))(v69, v70, v82);
  v83 = *(int *)(v23 + 20);
  v84 = &v69[v83];
  v85 = &v70[v83];
  v86 = type metadata accessor for Artwork.CropStyle(0);
  v87 = *(_QWORD *)(v86 - 8);
  v88 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v87 + 48);
  __dsta = v84;
  LODWORD(v84) = v88(v84, 1, v86);
  v89 = v88(v85, 1, v86);
  if ((_DWORD)v84)
  {
    v81 = v117;
    if (!v89)
    {
      (*(void (**)(char *, char *, uint64_t))(v87 + 16))(__dsta, v85, v86);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v87 + 56))(__dsta, 0, 1, v86);
      goto LABEL_56;
    }
    v90 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
    v91 = __dsta;
  }
  else
  {
    v81 = v117;
    if (!v89)
    {
      (*(void (**)(char *, char *, uint64_t))(v87 + 24))(__dsta, v85, v86);
      goto LABEL_56;
    }
    (*(void (**)(char *, uint64_t))(v87 + 8))(__dsta, v86);
    v90 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
    v91 = __dsta;
  }
  memcpy(v91, v85, v90);
LABEL_56:
  v80 = v116;
LABEL_57:
  *(_QWORD *)&v65[*(int *)(v67 + 24)] = *(_QWORD *)&v66[*(int *)(v67 + 24)];
  v92 = v118[11];
  v93 = (void **)&a1[v92];
  v94 = &a2[v92];
  v95 = *(void **)&a2[v92];
  v96 = *v93;
  *v93 = v95;
  v97 = v95;

  v98 = (int *)type metadata accessor for SegueContext(0);
  v99 = v98[5];
  v100 = (char *)v93 + v99;
  v101 = &v94[v99];
  v102 = v81((char *)v93 + v99, 1, v80);
  v103 = v81(v101, 1, v80);
  if (v102)
  {
    if (!v103)
    {
      (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v100, v101, v80);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v115 + 56))(v100, 0, 1, v80);
      goto LABEL_63;
    }
    goto LABEL_62;
  }
  if (v103)
  {
    (*(void (**)(char *, uint64_t))(v115 + 8))(v100, v80);
LABEL_62:
    v104 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
    goto LABEL_63;
  }
  (*(void (**)(char *, char *, uint64_t))(v115 + 24))(v100, v101, v80);
LABEL_63:
  *((_BYTE *)v93 + v98[6]) = v94[v98[6]];
  v105 = v98[7];
  v106 = (void **)((char *)v93 + v105);
  v107 = &v94[v105];
  v108 = *(_QWORD *)&v94[v105];
  if (!*v106)
  {
    if (v108)
    {
      v110 = *((_QWORD *)v107 + 1);
      *v106 = v108;
      v106[1] = v110;
      swift_retain();
      return a1;
    }
LABEL_69:
    *(_OWORD *)v106 = *(_OWORD *)v107;
    return a1;
  }
  if (!v108)
  {
    swift_release();
    goto LABEL_69;
  }
  v109 = *((_QWORD *)v107 + 1);
  *v106 = v108;
  v106[1] = v109;
  swift_retain();
  swift_release();
  return a1;
}

char *sub_1007074D0(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  __int128 v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  int *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unsigned int (*__dst)(char *, uint64_t, uint64_t);
  char *__dsta;
  unsigned int (*v67)(char *, uint64_t, uint64_t);
  uint64_t v68;

  v4 = type metadata accessor for GenericMusicItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  v67 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  if (v67(a2, 1, v4))
  {
    v6 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(a1, a2, v4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  v7 = (int *)type metadata accessor for Featured(0);
  *(_OWORD *)&a1[v7[5]] = *(_OWORD *)&a2[v7[5]];
  *(_OWORD *)&a1[v7[6]] = *(_OWORD *)&a2[v7[6]];
  *(_OWORD *)&a1[v7[7]] = *(_OWORD *)&a2[v7[7]];
  v8 = v7[8];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = type metadata accessor for ArtworkImage.ViewModel(0);
  v64 = *(_QWORD *)(v11 - 8);
  __dst = *(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48);
  v63 = v5;
  if (__dst(v10, 1, v11))
  {
    v12 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v9, v10, v13);
    v14 = *(int *)(v11 + 20);
    v15 = &v9[v14];
    v16 = &v10[v14];
    v17 = type metadata accessor for Artwork.CropStyle(0);
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      v19 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v9, 0, 1, v11);
  }
  v68 = v11;
  v20 = v7[9];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 10, v23))
  {
    v25 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    v26 = v4;
    v27 = type metadata accessor for Playlist.Variant(0);
    v28 = *(_QWORD *)(v27 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v22, 1, v27))
    {
      v29 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v21, v22, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v21, 0, 1, v27);
    }
    v4 = v26;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 10, v23);
  }
  v30 = v7[10];
  v31 = &a1[v30];
  v32 = &a2[v30];
  v33 = *(_OWORD *)&a2[v30 + 16];
  *(_OWORD *)v31 = *(_OWORD *)&a2[v30];
  *((_OWORD *)v31 + 1) = v33;
  v34 = *(int *)(type metadata accessor for Featured.Caption(0) + 24);
  v35 = &v31[v34];
  v36 = &v32[v34];
  *v35 = v32[v34];
  v37 = type metadata accessor for Featured.Caption.Thumbnail(0);
  v38 = *(int *)(v37 + 20);
  v39 = &v35[v38];
  v40 = &v36[v38];
  if (__dst(&v36[v38], 1, v68))
  {
    v41 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    v62 = v4;
    v42 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v39, v40, v42);
    v43 = *(int *)(v68 + 20);
    __dsta = &v39[v43];
    v44 = &v40[v43];
    v45 = type metadata accessor for Artwork.CropStyle(0);
    v46 = *(_QWORD *)(v45 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
    {
      v47 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(__dsta, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v46 + 32))(__dsta, v44, v45);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(__dsta, 0, 1, v45);
    }
    v4 = v62;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v39, 0, 1, v68);
  }
  *(_QWORD *)&v35[*(int *)(v37 + 24)] = *(_QWORD *)&v36[*(int *)(v37 + 24)];
  v48 = v7[11];
  v49 = &a1[v48];
  v50 = &a2[v48];
  *(_QWORD *)&a1[v48] = *(_QWORD *)&a2[v48];
  v51 = (int *)type metadata accessor for SegueContext(0);
  v52 = v51[5];
  v53 = &v49[v52];
  v54 = &v50[v52];
  if (v67(&v50[v52], 1, v4))
  {
    v55 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v53, v54, v4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v53, 0, 1, v4);
  }
  v49[v51[6]] = v50[v51[6]];
  v56 = v51[7];
  v57 = &v49[v56];
  v58 = &v50[v56];
  v59 = *(_QWORD *)v58;
  if (*(_QWORD *)v58)
  {
    v60 = *((_QWORD *)v58 + 1);
    *(_QWORD *)v57 = v59;
    *((_QWORD *)v57 + 1) = v60;
  }
  else
  {
    *(_OWORD *)v57 = *(_OWORD *)v58;
  }
  return a1;
}

char *sub_100707A0C(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(char *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(char *, uint64_t, uint64_t);
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(char *, uint64_t, uint64_t);
  int v48;
  int v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(char *, uint64_t, uint64_t);
  int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(char *, uint64_t, uint64_t);
  int v65;
  int v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  int v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t (*v89)(char *, uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t (*v96)(char *, uint64_t, uint64_t);
  int v97;
  size_t v98;
  char *v99;
  uint64_t v100;
  char *v101;
  char *v102;
  void *v103;
  int *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  int v108;
  int v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *__dst;
  char *__dsta;
  void (**__src)(void *, _QWORD, uint64_t, uint64_t);
  uint64_t v121;
  uint64_t v122;
  uint64_t (*v123)(char *, uint64_t, uint64_t);
  int *v124;

  v4 = type metadata accessor for GenericMusicItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  v121 = v5;
  v122 = v4;
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(a1, a2, v4);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(a1, v4);
LABEL_6:
    v9 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 40))(a1, a2, v4);
LABEL_7:
  v10 = (int *)type metadata accessor for Featured(0);
  v11 = v10[5];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v15 = *(_QWORD *)v13;
  v14 = *((_QWORD *)v13 + 1);
  *(_QWORD *)v12 = v15;
  *((_QWORD *)v12 + 1) = v14;
  swift_bridgeObjectRelease();
  v16 = v10[6];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v20 = *(_QWORD *)v18;
  v19 = *((_QWORD *)v18 + 1);
  *(_QWORD *)v17 = v20;
  *((_QWORD *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  v21 = v10[7];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v25 = *(_QWORD *)v23;
  v24 = *((_QWORD *)v23 + 1);
  *(_QWORD *)v22 = v25;
  *((_QWORD *)v22 + 1) = v24;
  swift_bridgeObjectRelease();
  v124 = v10;
  v26 = v10[8];
  v27 = &a1[v26];
  v28 = &a2[v26];
  v29 = type metadata accessor for ArtworkImage.ViewModel(0);
  v30 = *(_QWORD *)(v29 - 8);
  v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48);
  v32 = v31(v27, 1, v29);
  v33 = v31(v28, 1, v29);
  v123 = v6;
  __src = (void (**)(void *, _QWORD, uint64_t, uint64_t))v30;
  if (!v32)
  {
    if (!v33)
    {
      v43 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 40))(v27, v28, v43);
      v44 = *(int *)(v29 + 20);
      v27 += v44;
      v28 += v44;
      v45 = type metadata accessor for Artwork.CropStyle(0);
      v46 = *(_QWORD *)(v45 - 8);
      v47 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v46 + 48);
      v48 = v47(v27, 1, v45);
      v49 = v47(v28, 1, v45);
      if (v48)
      {
        if (!v49)
        {
          (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v27, v28, v45);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v27, 0, 1, v45);
          goto LABEL_21;
        }
      }
      else
      {
        if (!v49)
        {
          (*(void (**)(char *, char *, uint64_t))(v46 + 40))(v27, v28, v45);
          goto LABEL_21;
        }
        (*(void (**)(char *, uint64_t))(v46 + 8))(v27, v45);
      }
      v41 = (uint64_t *)&unk_1011A14A0;
LABEL_14:
      v42 = sub_100007E8C(v41);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      goto LABEL_21;
    }
    sub_10005B748((uint64_t)v27, type metadata accessor for ArtworkImage.ViewModel);
LABEL_13:
    v41 = (uint64_t *)&unk_1011A3E10;
    goto LABEL_14;
  }
  if (v33)
    goto LABEL_13;
  v34 = type metadata accessor for Artwork(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v27, v28, v34);
  v35 = *(int *)(v29 + 20);
  v36 = &v27[v35];
  v37 = &v28[v35];
  v38 = type metadata accessor for Artwork.CropStyle(0);
  v39 = *(_QWORD *)(v38 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
  {
    v40 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v36, v37, v38);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
LABEL_21:
  v50 = v124[9];
  v51 = &a1[v50];
  v52 = &a2[v50];
  v53 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v54 = *(_QWORD *)(v53 - 8);
  v55 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 48);
  v56 = v55(v51, 10, v53);
  v57 = v55(v52, 10, v53);
  if (!v56)
  {
    if (!v57)
    {
      v62 = type metadata accessor for Playlist.Variant(0);
      v63 = *(_QWORD *)(v62 - 8);
      v64 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v63 + 48);
      v65 = v64(v51, 1, v62);
      v66 = v64(v52, 1, v62);
      if (v65)
      {
        if (!v66)
        {
          (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v51, v52, v62);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v51, 0, 1, v62);
          goto LABEL_34;
        }
      }
      else
      {
        if (!v66)
        {
          (*(void (**)(char *, char *, uint64_t))(v63 + 40))(v51, v52, v62);
          goto LABEL_34;
        }
        (*(void (**)(char *, uint64_t))(v63 + 8))(v51, v62);
      }
      v61 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
LABEL_28:
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
      goto LABEL_34;
    }
    sub_10004FF60((uint64_t)v51, (uint64_t *)&unk_1011A3DB0);
LABEL_27:
    v61 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_28;
  }
  if (v57)
    goto LABEL_27;
  v58 = type metadata accessor for Playlist.Variant(0);
  v59 = *(_QWORD *)(v58 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v52, 1, v58))
  {
    v60 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v51, v52, v58);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v51, 0, 1, v58);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 10, v53);
LABEL_34:
  v67 = v124[10];
  v68 = &a1[v67];
  v69 = &a2[v67];
  v70 = *(_QWORD *)&a2[v67 + 8];
  *(_QWORD *)v68 = *(_QWORD *)&a2[v67];
  *((_QWORD *)v68 + 1) = v70;
  swift_bridgeObjectRelease();
  v71 = *((_QWORD *)v69 + 3);
  *((_QWORD *)v68 + 2) = *((_QWORD *)v69 + 2);
  *((_QWORD *)v68 + 3) = v71;
  swift_bridgeObjectRelease();
  v72 = *(int *)(type metadata accessor for Featured.Caption(0) + 24);
  v73 = &v68[v72];
  v74 = &v69[v72];
  *v73 = *v74;
  v75 = type metadata accessor for Featured.Caption.Thumbnail(0);
  v76 = *(int *)(v75 + 20);
  v77 = &v73[v76];
  v78 = &v74[v76];
  v79 = v31(&v73[v76], 1, v29);
  v80 = v31(v78, 1, v29);
  if (v79)
  {
    if (!v80)
    {
      v81 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 32))(v77, v78, v81);
      v82 = *(int *)(v29 + 20);
      __dst = &v77[v82];
      v83 = &v78[v82];
      v84 = type metadata accessor for Artwork.CropStyle(0);
      v85 = *(_QWORD *)(v84 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v85 + 48))(v83, 1, v84))
      {
        v86 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(__dst, v83, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 32))(__dst, v83, v84);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(__dst, 0, 1, v84);
      }
      v89 = v123;
      __src[7](v77, 0, 1, v29);
      goto LABEL_56;
    }
LABEL_40:
    v87 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
    v88 = v122;
    v89 = v123;
    goto LABEL_57;
  }
  if (v80)
  {
    sub_10005B748((uint64_t)v77, type metadata accessor for ArtworkImage.ViewModel);
    goto LABEL_40;
  }
  v90 = type metadata accessor for Artwork(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v90 - 8) + 40))(v77, v78, v90);
  v91 = *(int *)(v29 + 20);
  v92 = &v77[v91];
  v93 = &v78[v91];
  v94 = type metadata accessor for Artwork.CropStyle(0);
  v95 = *(_QWORD *)(v94 - 8);
  v96 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v95 + 48);
  __dsta = v92;
  LODWORD(v92) = v96(v92, 1, v94);
  v97 = v96(v93, 1, v94);
  if ((_DWORD)v92)
  {
    v89 = v123;
    if (!v97)
    {
      (*(void (**)(char *, char *, uint64_t))(v95 + 32))(__dsta, v93, v94);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(__dsta, 0, 1, v94);
      goto LABEL_56;
    }
    v98 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
    v99 = __dsta;
  }
  else
  {
    v89 = v123;
    if (!v97)
    {
      (*(void (**)(char *, char *, uint64_t))(v95 + 40))(__dsta, v93, v94);
      goto LABEL_56;
    }
    (*(void (**)(char *, uint64_t))(v95 + 8))(__dsta, v94);
    v98 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
    v99 = __dsta;
  }
  memcpy(v99, v93, v98);
LABEL_56:
  v88 = v122;
LABEL_57:
  *(_QWORD *)&v73[*(int *)(v75 + 24)] = *(_QWORD *)&v74[*(int *)(v75 + 24)];
  v100 = v124[11];
  v101 = &a1[v100];
  v102 = &a2[v100];
  v103 = *(void **)&a1[v100];
  *(_QWORD *)&a1[v100] = *(_QWORD *)&a2[v100];

  v104 = (int *)type metadata accessor for SegueContext(0);
  v105 = v104[5];
  v106 = &v101[v105];
  v107 = &v102[v105];
  v108 = v89(&v101[v105], 1, v88);
  v109 = v89(v107, 1, v88);
  if (v108)
  {
    if (!v109)
    {
      (*(void (**)(char *, char *, uint64_t))(v121 + 32))(v106, v107, v88);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v121 + 56))(v106, 0, 1, v88);
      goto LABEL_63;
    }
    goto LABEL_62;
  }
  if (v109)
  {
    (*(void (**)(char *, uint64_t))(v121 + 8))(v106, v88);
LABEL_62:
    v110 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
    goto LABEL_63;
  }
  (*(void (**)(char *, char *, uint64_t))(v121 + 40))(v106, v107, v88);
LABEL_63:
  v101[v104[6]] = v102[v104[6]];
  v111 = v104[7];
  v112 = &v101[v111];
  v113 = &v102[v111];
  v114 = *(_QWORD *)&v102[v111];
  if (!*(_QWORD *)v112)
  {
    if (v114)
    {
      v116 = *((_QWORD *)v113 + 1);
      *(_QWORD *)v112 = v114;
      *((_QWORD *)v112 + 1) = v116;
      return a1;
    }
LABEL_69:
    *(_OWORD *)v112 = *(_OWORD *)v113;
    return a1;
  }
  if (!v114)
  {
    swift_release();
    goto LABEL_69;
  }
  v115 = *((_QWORD *)v113 + 1);
  *(_QWORD *)v112 = v114;
  *((_QWORD *)v112 + 1) = v115;
  swift_release();
  return a1;
}

uint64_t sub_100708350(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10070835C);
}

uint64_t sub_10070835C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100200C0C(a1, a2, a3, type metadata accessor for Featured);
}

uint64_t sub_100708368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100708374);
}

uint64_t sub_100708374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100200C60(a1, a2, a3, a4, type metadata accessor for Featured);
}

uint64_t sub_100708380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100201510(a1, a2, a3, type metadata accessor for Featured);
}

uint64_t sub_10070838C()
{
  uint64_t v0;
  uint64_t OpaqueTypeConformance2;
  uint64_t v3;
  ValueMetadata *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v0 = sub_100044B54(&qword_1011C5470);
  v3 = sub_100044B54(&qword_1011AC460);
  v4 = &type metadata for ActionType;
  v5 = sub_100044B54(&qword_1011AC3B0);
  v6 = sub_100703108();
  v7 = sub_1000E3EE4();
  v8 = sub_100314AC0();
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v3, &opaque type descriptor for <<opaque return type of View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)>>, 1);
  v3 = v0;
  v4 = (ValueMetadata *)OpaqueTypeConformance2;
  return swift_getOpaqueTypeConformance2(&v3, &opaque type descriptor for <<opaque return type of View.shareSheetPresenting(_:)>>, 1);
}

uint64_t sub_100708440(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAAD18, 1);
}

uint64_t sub_100708450(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAACF0, 1);
}

uint64_t type metadata accessor for FeaturedView.AlignedCaption(uint64_t a1)
{
  return sub_100055934(a1, qword_1011C5678, (uint64_t)&nominal type descriptor for FeaturedView.AlignedCaption);
}

uint64_t sub_100708474@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1007018F4(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1007084BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1007084C8);
}

uint64_t sub_1007084C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100200C0C(a1, a2, a3, type metadata accessor for Featured.Caption);
}

uint64_t sub_1007084D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1007084E0);
}

uint64_t sub_1007084E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100200C60(a1, a2, a3, a4, type metadata accessor for Featured.Caption);
}

uint64_t sub_1007084EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100201510(a1, a2, a3, type metadata accessor for Featured.Caption);
}

uint64_t sub_1007084F8()
{
  return sub_100049F28(&qword_1011C56B0, &qword_1011C56B8, (uint64_t)&protocol conformance descriptor for ZStack<A>);
}

uint64_t sub_100708524()
{
  return sub_10005610C(&qword_1011C56C0, &qword_1011C5610, (void (*)(void))sub_100708558);
}

uint64_t sub_100708558()
{
  return sub_10005610C(&qword_1011C56C8, &qword_1011C5600, (void (*)(void))sub_10070857C);
}

unint64_t sub_10070857C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C56D0;
  if (!qword_1011C56D0)
  {
    v1 = sub_100044B54(&qword_1011A2E28);
    sub_100049F28(&qword_1011C56D8, &qword_1011A2E20, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C56D0);
  }
  return result;
}

uint64_t sub_100708600(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAADA0, 1);
}

unint64_t sub_100708610()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C5738;
  if (!qword_1011C5738)
  {
    v1 = sub_100044B54(&qword_1011C5720);
    sub_1007086BC(&qword_1011C5740, &qword_1011C5718, &qword_1011C5748, &qword_1011C5710);
    sub_1007086BC(&qword_1011C5758, &qword_1011C5700, &qword_1011C5760, &qword_1011C56F8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C5738);
  }
  return result;
}

uint64_t sub_1007086BC(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v8 = sub_100044B54(a2);
    sub_100049F28(a3, a4, (uint64_t)&protocol conformance descriptor for HStack<A>);
    sub_10070873C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10070873C()
{
  unint64_t result;

  result = qword_1011C5750;
  if (!qword_1011C5750)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for _FlipForRTLEffect, &type metadata for _FlipForRTLEffect);
    atomic_store(result, (unint64_t *)&qword_1011C5750);
  }
  return result;
}

uint64_t type metadata accessor for FeaturedView.CaptionText(uint64_t a1)
{
  return sub_100055934(a1, qword_1011C5808, (uint64_t)&nominal type descriptor for FeaturedView.CaptionText);
}

uint64_t type metadata accessor for FeaturedView.ThumbnailArtwork(uint64_t a1)
{
  return sub_100055934(a1, qword_1011C5898, (uint64_t)&nominal type descriptor for FeaturedView.ThumbnailArtwork);
}

_QWORD *sub_1007087A8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;

  v4 = type metadata accessor for Featured.Caption(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    v8 = *(int *)(v4 + 24);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    *((_BYTE *)a1 + v8) = *((_BYTE *)a2 + v8);
    v27 = type metadata accessor for Featured.Caption.Thumbnail(0);
    v11 = *(int *)(v27 + 20);
    v12 = &v9[v11];
    v13 = &v10[v11];
    v14 = type metadata accessor for ArtworkImage.ViewModel(0);
    v15 = *(_QWORD *)(v14 - 8);
    v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v16(v13, 1, v14))
    {
      v17 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v19 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v12, v13, v19);
      v20 = *(int *)(v14 + 20);
      v21 = &v12[v20];
      v22 = &v13[v20];
      v23 = type metadata accessor for Artwork.CropStyle(0);
      v24 = *(_QWORD *)(v23 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
      {
        v25 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    *(_QWORD *)&v9[*(int *)(v27 + 24)] = *(_QWORD *)&v10[*(int *)(v27 + 24)];
  }
  return a1;
}

uint64_t sub_10070898C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for Featured.Caption(0) + 24);
  v3 = v2 + *(int *)(type metadata accessor for Featured.Caption.Thumbnail(0) + 20);
  v4 = type metadata accessor for ArtworkImage.ViewModel(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4);
  if (!(_DWORD)result)
  {
    v6 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v3, v6);
    v7 = v3 + *(int *)(v4 + 20);
    v8 = type metadata accessor for Artwork.CropStyle(0);
    v9 = *(_QWORD *)(v8 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  return result;
}

_QWORD *sub_100708A70(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = *(int *)(type metadata accessor for Featured.Caption(0) + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *((_BYTE *)a1 + v6) = *((_BYTE *)a2 + v6);
  v24 = type metadata accessor for Featured.Caption.Thumbnail(0);
  v9 = *(int *)(v24 + 20);
  v10 = &v7[v9];
  v11 = &v8[v9];
  v12 = type metadata accessor for ArtworkImage.ViewModel(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v14(v11, 1, v12))
  {
    v15 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v16 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v10, v11, v16);
    v17 = *(int *)(v12 + 20);
    v18 = &v10[v17];
    v19 = &v11[v17];
    v20 = type metadata accessor for Artwork.CropStyle(0);
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      v22 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  *(_QWORD *)&v7[*(int *)(v24 + 24)] = *(_QWORD *)&v8[*(int *)(v24 + 24)];
  return a1;
}

_QWORD *sub_100708C28(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  size_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(void *, uint64_t, uint64_t);
  int v32;
  int v33;
  void *__dst;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(int *)(type metadata accessor for Featured.Caption(0) + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  *((_BYTE *)a1 + v4) = *((_BYTE *)a2 + v4);
  v7 = type metadata accessor for Featured.Caption.Thumbnail(0);
  v8 = *(int *)(v7 + 20);
  v9 = (uint64_t)&v5[v8];
  v10 = &v6[v8];
  v11 = type metadata accessor for ArtworkImage.ViewModel(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13((uint64_t)v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      v25 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 24))(v9, v10, v25);
      v26 = *(int *)(v11 + 20);
      v27 = (void *)(v9 + v26);
      v28 = &v10[v26];
      v29 = type metadata accessor for Artwork.CropStyle(0);
      v30 = *(_QWORD *)(v29 - 8);
      v31 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v30 + 48);
      v32 = v31(v27, 1, v29);
      v33 = v31(v28, 1, v29);
      if (v32)
      {
        if (!v33)
        {
          (*(void (**)(void *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v33)
        {
          (*(void (**)(void *, char *, uint64_t))(v30 + 24))(v27, v28, v29);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v30 + 8))(v27, v29);
      }
      v22 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v23 = v27;
      v24 = v28;
      goto LABEL_8;
    }
    sub_10005B748(v9, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    v22 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v23 = (void *)v9;
    v24 = v10;
LABEL_8:
    memcpy(v23, v24, v22);
    goto LABEL_14;
  }
  if (v15)
    goto LABEL_7;
  v16 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v9, v10, v16);
  v17 = *(int *)(v11 + 20);
  __dst = (void *)(v9 + v17);
  v18 = &v10[v17];
  v19 = type metadata accessor for Artwork.CropStyle(0);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    v21 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(__dst, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v20 + 16))(__dst, v18, v19);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_14:
  *(_QWORD *)&v5[*(int *)(v7 + 24)] = *(_QWORD *)&v6[*(int *)(v7 + 24)];
  return a1;
}

_OWORD *sub_100708F10(_OWORD *a1, _OWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *__dst;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(type metadata accessor for Featured.Caption(0) + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  *((_BYTE *)a1 + v5) = *((_BYTE *)a2 + v5);
  v8 = type metadata accessor for Featured.Caption.Thumbnail(0);
  v9 = *(int *)(v8 + 20);
  v10 = &v6[v9];
  v11 = &v7[v9];
  v12 = type metadata accessor for ArtworkImage.ViewModel(0);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v15 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v10, v11, v15);
    v16 = *(int *)(v12 + 20);
    __dst = &v10[v16];
    v17 = &v11[v16];
    v18 = type metadata accessor for Artwork.CropStyle(0);
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      v20 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(__dst, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(__dst, v17, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  *(_QWORD *)&v6[*(int *)(v8 + 24)] = *(_QWORD *)&v7[*(int *)(v8 + 24)];
  return a1;
}

_QWORD *sub_1007090B0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  size_t v24;
  void *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(void *, uint64_t, uint64_t);
  int v34;
  int v35;
  void *__dst;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = *(int *)(type metadata accessor for Featured.Caption(0) + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *((_BYTE *)a1 + v6) = *((_BYTE *)a2 + v6);
  v9 = type metadata accessor for Featured.Caption.Thumbnail(0);
  v10 = *(int *)(v9 + 20);
  v11 = (uint64_t)&v7[v10];
  v12 = &v8[v10];
  v13 = type metadata accessor for ArtworkImage.ViewModel(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15((uint64_t)v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      v27 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 40))(v11, v12, v27);
      v28 = *(int *)(v13 + 20);
      v29 = (void *)(v11 + v28);
      v30 = &v12[v28];
      v31 = type metadata accessor for Artwork.CropStyle(0);
      v32 = *(_QWORD *)(v31 - 8);
      v33 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v32 + 48);
      v34 = v33(v29, 1, v31);
      v35 = v33(v30, 1, v31);
      if (v34)
      {
        if (!v35)
        {
          (*(void (**)(void *, char *, uint64_t))(v32 + 32))(v29, v30, v31);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v35)
        {
          (*(void (**)(void *, char *, uint64_t))(v32 + 40))(v29, v30, v31);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v32 + 8))(v29, v31);
      }
      v24 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v25 = v29;
      v26 = v30;
      goto LABEL_8;
    }
    sub_10005B748(v11, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    v24 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v25 = (void *)v11;
    v26 = v12;
LABEL_8:
    memcpy(v25, v26, v24);
    goto LABEL_14;
  }
  if (v17)
    goto LABEL_7;
  v18 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v11, v12, v18);
  v19 = *(int *)(v13 + 20);
  __dst = (void *)(v11 + v19);
  v20 = &v12[v19];
  v21 = type metadata accessor for Artwork.CropStyle(0);
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    v23 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(__dst, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v22 + 32))(__dst, v20, v21);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_14:
  *(_QWORD *)&v7[*(int *)(v9 + 24)] = *(_QWORD *)&v8[*(int *)(v9 + 24)];
  return a1;
}

uint64_t sub_100709378(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100709384);
}

uint64_t sub_100709384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100200C0C(a1, a2, a3, type metadata accessor for Featured.Caption);
}

uint64_t sub_100709390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10070939C);
}

uint64_t sub_10070939C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100200C60(a1, a2, a3, a4, type metadata accessor for Featured.Caption);
}

uint64_t *sub_1007093A8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = type metadata accessor for Featured.Caption.Thumbnail(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = v4;
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = *(int *)(v4 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for ArtworkImage.ViewModel(0);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v14 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v8, v9, v14);
      v15 = *(int *)(v10 + 20);
      v16 = &v8[v15];
      v17 = &v9[v15];
      v18 = type metadata accessor for Artwork.CropStyle(0);
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        v20 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    *(uint64_t *)((char *)a1 + *(int *)(v6 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v6 + 24));
  }
  return a1;
}

uint64_t sub_10070954C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = a1 + *(int *)(type metadata accessor for Featured.Caption.Thumbnail(0) + 20);
  v2 = type metadata accessor for ArtworkImage.ViewModel(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(v1, 1, v2);
  if (!(_DWORD)result)
  {
    v4 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v1, v4);
    v5 = v1 + *(int *)(v2 + 20);
    v6 = type metadata accessor for Artwork.CropStyle(0);
    v7 = *(_QWORD *)(v6 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  return result;
}

_BYTE *sub_100709610(_BYTE *a1, _BYTE *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *a1 = *a2;
  v4 = type metadata accessor for Featured.Caption.Thumbnail(0);
  v5 = *(int *)(v4 + 20);
  v6 = &a1[v5];
  v7 = &a2[v5];
  v8 = type metadata accessor for ArtworkImage.ViewModel(0);
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    v10 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    v11 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v6, v7, v11);
    v12 = *(int *)(v8 + 20);
    v13 = &v6[v12];
    v14 = &v7[v12];
    v15 = type metadata accessor for Artwork.CropStyle(0);
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      v17 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  *(_QWORD *)&a1[*(int *)(v4 + 24)] = *(_QWORD *)&a2[*(int *)(v4 + 24)];
  return a1;
}

_BYTE *sub_100709788(_BYTE *a1, _BYTE *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  size_t v20;
  void *v21;
  const void *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(void *, uint64_t, uint64_t);
  int v30;
  int v31;

  *a1 = *a2;
  v4 = type metadata accessor for Featured.Caption.Thumbnail(0);
  v5 = *(int *)(v4 + 20);
  v6 = (uint64_t)&a1[v5];
  v7 = &a2[v5];
  v8 = type metadata accessor for ArtworkImage.ViewModel(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  v11 = v10(v6, 1, v8);
  v12 = v10((uint64_t)v7, 1, v8);
  if (!v11)
  {
    if (!v12)
    {
      v23 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v23 - 8) + 24))(v6, v7, v23);
      v24 = *(int *)(v8 + 20);
      v25 = (void *)(v6 + v24);
      v26 = &v7[v24];
      v27 = type metadata accessor for Artwork.CropStyle(0);
      v28 = *(_QWORD *)(v27 - 8);
      v29 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v28 + 48);
      v30 = v29(v25, 1, v27);
      v31 = v29(v26, 1, v27);
      if (v30)
      {
        if (!v31)
        {
          (*(void (**)(void *, _BYTE *, uint64_t))(v28 + 16))(v25, v26, v27);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v31)
        {
          (*(void (**)(void *, _BYTE *, uint64_t))(v28 + 24))(v25, v26, v27);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v28 + 8))(v25, v27);
      }
      v20 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v21 = v25;
      v22 = v26;
      goto LABEL_8;
    }
    sub_10005B748(v6, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    v20 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v21 = (void *)v6;
    v22 = v7;
LABEL_8:
    memcpy(v21, v22, v20);
    goto LABEL_14;
  }
  if (v12)
    goto LABEL_7;
  v13 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v6, v7, v13);
  v14 = *(int *)(v8 + 20);
  v15 = (void *)(v6 + v14);
  v16 = &v7[v14];
  v17 = type metadata accessor for Artwork.CropStyle(0);
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    v19 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, _BYTE *, uint64_t))(v18 + 16))(v15, v16, v17);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
LABEL_14:
  *(_QWORD *)&a1[*(int *)(v4 + 24)] = *(_QWORD *)&a2[*(int *)(v4 + 24)];
  return a1;
}

_BYTE *sub_100709A10(_BYTE *a1, _BYTE *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *a1 = *a2;
  v4 = type metadata accessor for Featured.Caption.Thumbnail(0);
  v5 = *(int *)(v4 + 20);
  v6 = &a1[v5];
  v7 = &a2[v5];
  v8 = type metadata accessor for ArtworkImage.ViewModel(0);
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    v10 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    v11 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v6, v7, v11);
    v12 = *(int *)(v8 + 20);
    v13 = &v6[v12];
    v14 = &v7[v12];
    v15 = type metadata accessor for Artwork.CropStyle(0);
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      v17 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  *(_QWORD *)&a1[*(int *)(v4 + 24)] = *(_QWORD *)&a2[*(int *)(v4 + 24)];
  return a1;
}

_BYTE *sub_100709B88(_BYTE *a1, _BYTE *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  size_t v20;
  void *v21;
  const void *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(void *, uint64_t, uint64_t);
  int v30;
  int v31;

  *a1 = *a2;
  v4 = type metadata accessor for Featured.Caption.Thumbnail(0);
  v5 = *(int *)(v4 + 20);
  v6 = (uint64_t)&a1[v5];
  v7 = &a2[v5];
  v8 = type metadata accessor for ArtworkImage.ViewModel(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  v11 = v10(v6, 1, v8);
  v12 = v10((uint64_t)v7, 1, v8);
  if (!v11)
  {
    if (!v12)
    {
      v23 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v23 - 8) + 40))(v6, v7, v23);
      v24 = *(int *)(v8 + 20);
      v25 = (void *)(v6 + v24);
      v26 = &v7[v24];
      v27 = type metadata accessor for Artwork.CropStyle(0);
      v28 = *(_QWORD *)(v27 - 8);
      v29 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v28 + 48);
      v30 = v29(v25, 1, v27);
      v31 = v29(v26, 1, v27);
      if (v30)
      {
        if (!v31)
        {
          (*(void (**)(void *, _BYTE *, uint64_t))(v28 + 32))(v25, v26, v27);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v31)
        {
          (*(void (**)(void *, _BYTE *, uint64_t))(v28 + 40))(v25, v26, v27);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v28 + 8))(v25, v27);
      }
      v20 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v21 = v25;
      v22 = v26;
      goto LABEL_8;
    }
    sub_10005B748(v6, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    v20 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v21 = (void *)v6;
    v22 = v7;
LABEL_8:
    memcpy(v21, v22, v20);
    goto LABEL_14;
  }
  if (v12)
    goto LABEL_7;
  v13 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v6, v7, v13);
  v14 = *(int *)(v8 + 20);
  v15 = (void *)(v6 + v14);
  v16 = &v7[v14];
  v17 = type metadata accessor for Artwork.CropStyle(0);
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    v19 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, _BYTE *, uint64_t))(v18 + 32))(v15, v16, v17);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
LABEL_14:
  *(_QWORD *)&a1[*(int *)(v4 + 24)] = *(_QWORD *)&a2[*(int *)(v4 + 24)];
  return a1;
}

uint64_t sub_100709E10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100709E1C);
}

uint64_t sub_100709E1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100200C0C(a1, a2, a3, type metadata accessor for Featured.Caption.Thumbnail);
}

uint64_t sub_100709E28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100709E34);
}

uint64_t sub_100709E34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100200C60(a1, a2, a3, a4, type metadata accessor for Featured.Caption.Thumbnail);
}

uint64_t sub_100709E40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100201510(a1, a2, a3, type metadata accessor for Featured.Caption.Thumbnail);
}

unint64_t sub_100709E50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C58D0;
  if (!qword_1011C58D0)
  {
    v1 = sub_100044B54(&qword_1011C5728);
    sub_100708610();
    sub_1007086BC(&qword_1011C5768, &qword_1011C56E8, &qword_1011C5770, &qword_1011C56E0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C58D0);
  }
  return result;
}

uint64_t sub_100709EDC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAADF0, 1);
}

uint64_t sub_100709EEC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAADC8, 1);
}

uint64_t sub_100709EFC()
{
  return sub_100049F28(&qword_1011C58E8, (uint64_t *)&unk_1011C58F0, (uint64_t)&protocol conformance descriptor for VStack<A>);
}

uint64_t sub_100709F2C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  unint64_t v12;
  const char *v13;
  uint64_t v14;
  const char *v15;
  _BYTE *v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v24[16];

  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = &v24[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = &v24[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a1 >> 62)
  {
    if (a1 >> 62 == 1)
    {
      if ((a1 & 0x100) != 0)
      {
        v12 = 0xD00000000000003FLL;
        v13 = "This playlist will be available after Sync Library is complete.";
      }
      else
      {
        v12 = 0xD00000000000003CLL;
        v13 = "This album will be available after Sync Library is complete.";
      }
      v20 = String.LocalizationValue.init(stringLiteral:)(v12, (unint64_t)(v13 - 32) | 0x8000000000000000);
      static Locale.current.getter(v20);
      v15 = "Subtitle for view displayed when content is syncing";
      v16 = v11;
      v17 = v8;
      v18 = 51;
    }
    else if (a1 != 0x8000000000000000 || a3 | a2)
    {
      v21 = String.LocalizationValue.init(stringLiteral:)(0x1000000000000051, 0x8000000100E433D0);
      static Locale.current.getter(v21);
      v15 = "Subtitle for view displayed when content is unavailable";
      v16 = v11;
      v17 = v8;
      v18 = 55;
    }
    else if ((static DeviceCapabilities.hasWAPICapability.getter() & 1) != 0)
    {
      v19 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000006ELL, 0x8000000100E415D0);
      static Locale.current.getter(v19);
      v15 = "Subtitle for offline view with WAPI Capability";
      v16 = v11;
      v17 = v8;
      v18 = 46;
    }
    else
    {
      v22 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000006FLL, 0x8000000100E41520);
      static Locale.current.getter(v22);
      v15 = "Subtitle for offline view without WAPI Capability";
      v16 = v11;
      v17 = v8;
      v18 = 49;
    }
  }
  else
  {
    v14 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000021, 0x8000000100E43470);
    static Locale.current.getter(v14);
    v15 = "Subtitle for view displayed when a connection error occurs";
    v16 = v11;
    v17 = v8;
    v18 = 58;
  }
  return String.init(localized:table:bundle:locale:comment:)(v16, 0, 0, 0, v17, v15, v18, 2);
}

void (*sub_10070A1A0(unint64_t a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  void (*result)();
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[16];

  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = &v15[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a1 >> 62)
  {
    result = 0;
    if (a1 >> 62 != 1)
    {
      result = 0;
      if (a1 == 0x8000000000000000 && !(a3 | a2))
      {
        v13 = String.LocalizationValue.init(stringLiteral:)(0x73676E6974746553, 0xE800000000000000);
        static Locale.current.getter(v13);
        String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, 0, v8, "Button title for offline view", 29, 2);
        return sub_1006730F4;
      }
    }
  }
  else
  {
    swift_retain();
    v14 = String.LocalizationValue.init(stringLiteral:)(0x6961674120797254, 0xE90000000000006ELL);
    static Locale.current.getter(v14);
    String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, 0, v8, "Button title for view displayed when a connection error occurs", 62, 2);
    return (void (*)())a2;
  }
  return result;
}

uint64_t sub_10070A354@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;

  v4 = type metadata accessor for MusicPropertySource(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v8 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v8 == enum case for MusicPropertySource.catalog(_:))
  {
    *a2 = 0;
    v9 = type metadata accessor for ContainerDetail.Source(0);
    v10 = a2;
    v11 = 1;
LABEL_5:
    swift_storeEnumTagMultiPayload(v10, v9, v11);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  if (v8 == enum case for MusicPropertySource.library(_:))
  {
    v12 = sub_100007E8C((uint64_t *)&unk_1011AD760);
    v13 = *(int *)(v12 + 48);
    v14 = *(int *)(v12 + 64);
    v15 = _s6AlbumsV5ScopeOMa(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a2, 1, 1, v15);
    a2[v13] = 0;
    a2[v14] = 0;
    v9 = type metadata accessor for ContainerDetail.Source(0);
    v10 = a2;
    v11 = 0;
    goto LABEL_5;
  }
  *a2 = 0;
  v17 = type metadata accessor for ContainerDetail.Source(0);
  swift_storeEnumTagMultiPayload(a2, v17, 1);
  v18 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v18(a1, v4);
  return ((uint64_t (*)(char *, uint64_t))v18)(v7, v4);
}

uint64_t sub_10070A4CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id *v16;
  double v17;
  id v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v23;
  _BYTE v25[24];

  v2 = v1;
  v4 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v4);
  v6 = &v25[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (JSContainerDetail.hasMusicKitResponse.getter())
  {
    v7 = JSContainerDetail.containerStoreID.getter();
    if (v8)
    {
      v9 = v7;
      v10 = v8;
      type metadata accessor for MusicServerItemDatabase(0);
      static MusicServerItemDatabase.shared.getter();
      v11 = MusicItemID.init(_:)(v9, v10);
      v13 = v12;
      dispatch thunk of MusicServerItemDatabase.genericItem(for:)(v11);
      swift_release();
      swift_bridgeObjectRelease(v13);
      v14 = type metadata accessor for GenericMusicItem(0);
      v15 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v6, 1, v14) != 1)
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(a1, v6, v14);
        return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(a1, 0, 1, v14);
      }
      sub_10004FF60((uint64_t)v6, (uint64_t *)&unk_1011A20D0);
    }
  }
  v16 = (id *)(v2 + OBJC_IVAR____TtC11MusicJSCore17JSContainerDetail_containerStoreItemMetadata);
  *(_QWORD *)&v17 = swift_beginAccess(v2 + OBJC_IVAR____TtC11MusicJSCore17JSContainerDetail_containerStoreItemMetadata, v25, 0, 0).n128_u64[0];
  if (*v16)
  {
    v18 = objc_msgSend(*v16, "effectiveStorePlatformDictionary", v17);
    if (v18)
    {
      v19 = v18;
      v20 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v18, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

      v21 = sub_100050AA8(v20);
      swift_bridgeObjectRelease(v20);
      if (v21)
        return GenericMusicItem.init(_:)(v21);
    }
  }
  v23 = type metadata accessor for GenericMusicItem(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(a1, 1, 1, v23);
}

id sub_10070A6B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a3 + 16))(a3, a1, a2);
}

_QWORD *sub_10070A6E4(void *a1, void *a2, char a3, char a4)
{
  uint64_t v4;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[6];

  *(_BYTE *)(v4 + 80) = 0;
  v9 = type metadata accessor for Impressions.BagCoordinator();
  swift_retain();
  *(_QWORD *)(v4 + 88) = swift_initStaticObject(v9, &unk_10119CBB0);
  swift_unknownObjectWeakInit(v4 + 96, 0);
  *(_QWORD *)(v4 + 104) = sub_10004377C((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)(v4 + 112) = sub_100043894((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)(v4 + 120) = 0;
  *(_QWORD *)(v4 + 128) = 0;
  *(_QWORD *)(v4 + 136) = 0;
  *(_WORD *)(v4 + 144) = 0;
  *(_QWORD *)(v4 + 152) = 0;
  *(_QWORD *)(v4 + 160) = 0;
  *(_BYTE *)(v4 + 168) = 1;
  *(_QWORD *)(v4 + 176) = 0;
  *(_QWORD *)(v4 + 184) = 0;
  *(_BYTE *)(v4 + 192) = 1;
  *(_QWORD *)(v4 + 200) = 0x3F9999999999999ALL;
  swift_unknownObjectWeakAssign(v4 + 96, a1);
  *(_BYTE *)(v4 + 81) = a4;
  swift_release();
  v10 = (_QWORD *)sub_10047EA4C();
  swift_unknownObjectWeakAssign(v10 + 9, a2);
  v11 = swift_allocObject(&unk_1010D85F0, 24, 7);
  swift_weakInit(v11 + 16, v10);
  v12 = objc_allocWithZone((Class)ScrollViewContentOffsetObserver);
  v21[4] = sub_1007193B0;
  v21[5] = v11;
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 1107296256;
  v21[2] = sub_100717B60;
  v21[3] = &unk_1010D8608;
  v13 = _Block_copy(v21);
  swift_retain();
  v14 = objc_msgSend(v12, "initWithScrollView:changeHandler:", a2, v13, swift_retain().n128_f64[0]);
  _Block_release(v13);
  swift_release();
  swift_release();
  v15 = (void *)v10[15];
  v10[15] = v14;

  v16 = swift_allocObject(&unk_1010D85F0, 24, 7);
  swift_weakInit(v16 + 16, v10);
  v17 = type metadata accessor for NotificationObserver();
  swift_allocObject(v17, 64, 7);
  v10[17] = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(UIApplicationDidBecomeActiveNotification, 0, 1, 1, (uint64_t)sub_1007193B8, v16);
  swift_release();
  if ((a3 & 1) != 0)
  {
    v18 = swift_allocObject(&unk_1010D85F0, 24, 7);
    swift_weakInit(v18 + 16, v10);
    swift_allocObject(v17, 64, 7);
    v10[16] = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(UIApplicationWillResignActiveNotification, 0, 1, 1, (uint64_t)sub_1007193C0, v18);
    swift_release();
  }

  swift_release();
  if ((a4 & 1) != 0)
  {
    v19 = v10[19];
    v10[19] = &_swiftEmptySetSingleton;
    swift_bridgeObjectRelease(v19);
  }
  return v10;
}

double sub_10070A9D8(void *a1, uint64_t a2)
{
  uint64_t v3;
  double result;
  _BYTE v5[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  if (swift_weakLoadStrong(v3))
  {
    sub_10070BB3C(a1);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

void sub_10070AA34(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t Strong;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  _BYTE v35[24];

  v3 = type metadata accessor for Date(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = &v35[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v7);
  v9 = &v35[-v8 - 8];
  v10 = type metadata accessor for DispatchPredicate(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (uint64_t *)&v35[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v35, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v15 = Strong;
    if (qword_10119C148 != -1)
      swift_once(&qword_10119C148, sub_10053B640);
    if ((byte_10124D1F0 & 1) == 0 && *(_BYTE *)(v15 + 145) == 1)
    {
      v16 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
      *v13 = static OS_dispatch_queue.main.getter(v16, v17, v18, v19, v20, v21, v22, v23);
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v10);
      v24 = _dispatchPreconditionTest(_:)(v13);
      (*(void (**)(uint64_t *, uint64_t))(v11 + 8))(v13, v10);
      if ((v24 & 1) == 0)
      {
        __break(1u);
        return;
      }
      v25 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
      v26 = objc_msgSend(v25, "applicationState");

      if (!v26)
      {
        Date.init()(v27);
        v28 = swift_allocObject(&unk_1010D85F0, 24, 7);
        swift_weakInit(v28 + 16, v15);
        (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v9, v3);
        v29 = *(unsigned __int8 *)(v4 + 80);
        v30 = (v29 + 24) & ~v29;
        v31 = swift_allocObject(&unk_1010D86E0, v30 + v5, v29 | 7);
        *(_QWORD *)(v31 + 16) = v28;
        (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v31 + v30, v6, v3);
        v32 = swift_allocObject(&unk_1010D8708, 32, 7);
        *(_QWORD *)(v32 + 16) = sub_10071A2FC;
        *(_QWORD *)(v32 + 24) = v31;
        swift_retain();
        swift_retain();
        sub_10053AE60((void (*)(uint64_t, double, double))sub_10071A300, v32);
        swift_release();
        v33 = swift_release();
        (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v9, v3, v33);
        swift_release();
      }
    }
    swift_release();
  }
}

double sub_10070AD00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t Strong;
  double result;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char v21[24];

  v4 = type metadata accessor for Notification(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v8);
  v10 = &v21[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v21, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v13 = Strong;
    v14 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v10, 1, 1, v14);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(&v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8], a1, v4);
    type metadata accessor for MainActor(0);
    v15 = swift_retain();
    v16 = static MainActor.shared.getter(v15);
    v17 = *(unsigned __int8 *)(v5 + 80);
    v18 = (v17 + 40) & ~v17;
    v19 = (char *)swift_allocObject(&unk_1010D8640, v18 + v6, v17 | 7);
    *((_QWORD *)v19 + 2) = v16;
    *((_QWORD *)v19 + 3) = &protocol witness table for MainActor;
    *((_QWORD *)v19 + 4) = v13;
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v19[v18], v7, v4);
    sub_100166D14((uint64_t)v10, (uint64_t)&unk_1011C5BB8, (uint64_t)v19);
    swift_release();
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_10070AE9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v5[2] = a4;
  v5[3] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[4] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_10070AF08, v8, v9);
}

uint64_t sub_10070AF08()
{
  uint64_t v0;

  swift_release();
  sub_10070C1F0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10070AF44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  _BYTE v11[24];

  swift_beginAccess(v0 + 104, v11, 1, 0);
  v1 = *(_QWORD *)(v0 + 104);
  *(_QWORD *)(v0 + 104) = &_swiftEmptyDictionarySingleton;
  result = swift_bridgeObjectRelease(v1);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v0 + 32));
    v5 = (uint64_t *)(v3 + 40);
    do
    {
      v6 = *(v5 - 1);
      v7 = *v5;
      ObjectType = swift_getObjectType();
      v9 = *(void (**)(uint64_t, uint64_t))(v7 + 104);
      swift_unknownObjectRetain(v6, v10);
      v9(ObjectType, v7);
      swift_unknownObjectRelease(v6);
      v5 += 2;
      --v4;
    }
    while (v4);
    return swift_bridgeObjectRelease(v3);
  }
  return result;
}

void sub_10070B000(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t Strong;
  void *v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[24];

  v3 = v2;
  v6 = type metadata accessor for DispatchPredicate(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (uint64_t *)&v28[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
  *v9 = static OS_dispatch_queue.main.getter(v10, v11, v12, v13, v14, v15, v16, v17);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v6);
  v18 = _dispatchPreconditionTest(_:)(v9);
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if ((v18 & 1) != 0)
  {
    swift_beginAccess(v3 + 112, v28, 0, 0);
    v19 = swift_allocObject(&unk_1010D85F0, 24, 7);
    v20 = swift_weakInit(v19 + 16, v3);
    __chkstk_darwin(v20);
    *(&v27 - 4) = v19;
    *(&v27 - 3) = a1;
    *((double *)&v27 - 2) = a2;
    v21 = swift_bridgeObjectRetain();
    sub_1007194D8(v21, (void (*)(char *, uint64_t, __n128))sub_10071A308);
    swift_bridgeObjectRelease();
    swift_release();
    Strong = swift_unknownObjectWeakLoadStrong(v3 + 72);
    if (Strong)
    {
      v23 = (void *)Strong;
      v24 = UIScrollView.isScrolling.getter();

      if ((v24 & 1) == 0)
      {
        v26 = *(_QWORD *)(v3 + 48);
        __chkstk_darwin(v25);
        *(&v27 - 2) = a1;
        *((double *)&v27 - 1) = a2;
        swift_bridgeObjectRetain();
        sub_10076BF84((void (*)(uint64_t *, __n128))sub_10071A314, (uint64_t)(&v27 - 4), v26);
        swift_bridgeObjectRelease();
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_10070B1E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v9;
  _BYTE v10[24];

  v9 = a3 + 16;
  swift_beginAccess(a3 + 16, v10, 0, 0);
  if (swift_weakLoadStrong(v9))
  {
    sub_1009287F8(a2, a1, a4, a5);
    swift_release();
  }
}

void sub_10070B270()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;

  v1 = v0;
  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v31 - v7;
  v9 = type metadata accessor for DispatchPredicate(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (uint64_t *)((char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_10119C148 != -1)
    swift_once(&qword_10119C148, sub_10053B640);
  if ((byte_10124D1F0 & 1) == 0 && *(_BYTE *)(v0 + 145) == 1)
  {
    v13 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
    *v12 = static OS_dispatch_queue.main.getter(v13, v14, v15, v16, v17, v18, v19, v20);
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v9);
    v21 = _dispatchPreconditionTest(_:)(v12);
    (*(void (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9);
    if ((v21 & 1) != 0)
    {
      v22 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
      v23 = objc_msgSend(v22, "applicationState");

      if (!v23)
      {
        Date.init()(v24);
        v25 = swift_allocObject(&unk_1010D85F0, 24, 7);
        swift_weakInit(v25 + 16, v1);
        (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
        v26 = *(unsigned __int8 *)(v3 + 80);
        v27 = (v26 + 24) & ~v26;
        v28 = swift_allocObject(&unk_1010D8730, v27 + v4, v26 | 7);
        *(_QWORD *)(v28 + 16) = v25;
        (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v28 + v27, v5, v2);
        v29 = swift_allocObject(&unk_1010D8758, 32, 7);
        *(_QWORD *)(v29 + 16) = sub_10071A2FC;
        *(_QWORD *)(v29 + 24) = v28;
        swift_retain();
        swift_retain();
        sub_10053AE60((void (*)(uint64_t, double, double))sub_10071CC5C, v29);
        swift_release();
        v30 = swift_release();
        (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v8, v2, v30);
        swift_release();
      }
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_10070B508(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v5;
  _BYTE v6[24];

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  if (swift_weakLoadStrong(v5))
  {
    sub_10070B000(a2, a3);
    swift_release();
  }
}

void sub_10070B574(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t Strong;
  void *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  __n128 v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  _QWORD *v37;
  _QWORD *v38;
  char v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  double *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  double v53;
  _QWORD *v54;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v56;
  unint64_t v57;
  double *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  char v63;
  uint64_t v64;
  _QWORD *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _BYTE v70[32];
  char v71[24];
  uint64_t v72[3];
  char v73[32];

  v3 = v2;
  v68 = a2;
  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  __chkstk_darwin(v9);
  v11 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for IndexPath(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(a1, (uint64_t)v11, (uint64_t *)&unk_1011A3D50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_10004FF60((uint64_t)v11, (uint64_t *)&unk_1011A3D50);
    return;
  }
  v67 = v5;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
  Strong = swift_unknownObjectWeakLoadStrong(v3 + 12);
  if (!Strong)
    goto LABEL_8;
  v17 = (void *)Strong;
  v18 = (uint64_t *)(Strong + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource);
  swift_beginAccess(Strong + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource, v73, 0, 0);
  v19 = *v18;
  v20 = v18[1];
  ObjectType = swift_getObjectType();
  v72[0] = v19;
  v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 408))(v15, ObjectType, v20);

  if (!v22)
  {
LABEL_8:
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    return;
  }
  v66 = v15;
  v23 = sub_1003F9544(v22);
  v25 = v24;
  swift_beginAccess(v3 + 13, v72, 0, 0);
  if (*(_QWORD *)(v3[13] + 16))
  {
    swift_bridgeObjectRetain();
    sub_10079C2C4(v23, v25);
    v27 = v26;
    swift_bridgeObjectRelease();
    v28 = swift_bridgeObjectRelease();
    if ((v27 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t, __n128))(v13 + 8))(v66, v12, v28);
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_beginAccess(v3 + 14, v71, 0, 0);
  v29 = v3[14];
  if (!*(_QWORD *)(v29 + 16))
    goto LABEL_18;
  swift_bridgeObjectRetain();
  v30 = sub_10079CA8C((uint64_t)v66);
  if ((v31 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_18:
    v44 = qword_10119C150;
    swift_bridgeObjectRetain();
    if (v44 != -1)
      swift_once(&qword_10119C150, sub_10053C22C);
    v65 = v3 + 13;
    UnfairLock.locked<A>(_:)(sub_100483D78);
    v45 = qword_1011B9360;
    v46 = sub_100007E8C(&qword_1011C5BE0);
    v47 = swift_allocObject(v46, 56, 7);
    *(_QWORD *)(v47 + 32) = 0;
    *(_WORD *)(v47 + 40) = 513;
    *(_QWORD *)(v47 + 48) = _swiftEmptyArrayStorage;
    v48 = (_QWORD *)(v47 + 48);
    *(_QWORD *)(v47 + 16) = v22;
    *(_QWORD *)(v47 + 24) = v45;
    v49 = swift_unknownObjectWeakLoadStrong(v3 + 2);
    v50 = swift_unknownObjectRelease(v49);
    if (v49)
    {
      *(_QWORD *)(v47 + 32) = v3[8];
      *(_BYTE *)(v47 + 40) = 0;
    }
    v51 = v67;
    v52 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))(v8, v68, v67, v50);
    v53 = Date.timeIntervalSince1970.getter(v52);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v51);
    swift_beginAccess(v48, v70, 33, 0);
    v54 = (_QWORD *)*v48;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v48);
    *v48 = v54;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v54 = sub_100432E78(0, v54[2] + 1, 1, v54);
      *v48 = v54;
    }
    v57 = v54[2];
    v56 = v54[3];
    if (v57 >= v56 >> 1)
    {
      v54 = sub_100432E78((_QWORD *)(v56 > 1), v57 + 1, 1, v54);
      *v48 = v54;
    }
    v54[2] = v57 + 1;
    v58 = (double *)&v54[2 * v57];
    v58[4] = v53;
    *((_BYTE *)v58 + 40) = 0;
    swift_endAccess(v70);
    v59 = sub_1003F9544(v22);
    v61 = v60;
    swift_bridgeObjectRelease();
    v62 = v65;
    swift_beginAccess(v65, v70, 33, 0);
    swift_retain();
    v63 = swift_isUniquelyReferenced_nonNull_native(*v62);
    v69 = *v62;
    *v62 = 0x8000000000000000;
    sub_1005EE298(v47, v59, v61, v63);
    *v62 = v69;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess(v70);
    v40 = (uint64_t)v66;
    goto LABEL_27;
  }
  v32 = *(_QWORD *)(*(_QWORD *)(v29 + 56) + 8 * v30);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v33 = sub_100928DDC(v32);
  v34 = v67;
  v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v68, v67);
  v36 = Date.timeIntervalSince1970.getter(v35);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v34);
  v37 = (_QWORD *)(v33 + 48);
  swift_beginAccess(v33 + 48, v70, 33, 0);
  v38 = *(_QWORD **)(v33 + 48);
  v39 = swift_isUniquelyReferenced_nonNull_native(v38);
  *(_QWORD *)(v33 + 48) = v38;
  if ((v39 & 1) == 0)
  {
    v38 = sub_100432E78(0, v38[2] + 1, 1, v38);
    *v37 = v38;
  }
  v40 = (uint64_t)v66;
  v42 = v38[2];
  v41 = v38[3];
  if (v42 >= v41 >> 1)
  {
    v38 = sub_100432E78((_QWORD *)(v41 > 1), v42 + 1, 1, v38);
    *v37 = v38;
  }
  v38[2] = v42 + 1;
  v43 = (double *)&v38[2 * v42];
  v43[4] = v36;
  *((_BYTE *)v43 + 40) = 0;
  swift_endAccess(v70);
  swift_release();
LABEL_27:
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v40, v12);
}

void sub_10070BB3C(id a1)
{
  uint64_t v1;
  double v3;
  double v4;
  double v5;
  double v6;
  BOOL v7;
  double Current;
  double v9;
  uint64_t v10;
  uint64_t v11;

  if (qword_10119C148 != -1)
    swift_once(&qword_10119C148, sub_10053B640);
  if ((byte_10124D1F0 & 1) == 0 && *(_BYTE *)(v1 + 145) == 1)
  {
    if ((*(_BYTE *)(v1 + 192) & 1) != 0
      || ((v4 = *(double *)(v1 + 176), v3 = *(double *)(v1 + 184), objc_msgSend(a1, "contentOffset"), v4 == v6)
        ? (v7 = v3 == v5)
        : (v7 = 0),
          !v7))
    {
      if ((*(_BYTE *)(v1 + 168) & 1) != 0)
      {
        sub_10070B270();
        Current = CFAbsoluteTimeGetCurrent();
      }
      else
      {
        v9 = *(double *)(v1 + 160);
        Current = CFAbsoluteTimeGetCurrent();
        if (Current - v9 <= 0.025)
          return;
        sub_10070B270();
      }
      *(double *)(v1 + 160) = Current;
      *(_BYTE *)(v1 + 168) = 0;
      objc_msgSend(a1, "contentOffset");
      *(_QWORD *)(v1 + 176) = v10;
      *(_QWORD *)(v1 + 184) = v11;
      *(_BYTE *)(v1 + 192) = 0;
    }
  }
}

uint64_t sub_10070BC28(unsigned __int16 a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  BOOL v15;
  dispatch_semaphore_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v33;
  uint64_t *v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v39[24];
  _BYTE v40[24];

  v7 = type metadata accessor for DispatchTime(0);
  v37 = *(_QWORD *)(v7 - 8);
  v38 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Date(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(v3 + 104, v40, 0, 0);
  v14 = 0;
  if (*(_QWORD *)(*(_QWORD *)(v3 + 104) + 16))
    v15 = 1;
  else
    v15 = (a1 & 4) == 0;
  if (v15)
  {
    v35 = a1;
    sub_10070B574(a3, a2);
    v16 = dispatch_semaphore_create(1);
    v17 = swift_allocObject(&unk_1010D8668, 24, 7);
    *(_QWORD *)(v17 + 16) = _swiftEmptyArrayStorage;
    v34 = (uint64_t *)(v17 + 16);
    v36 = *(_QWORD *)(v3 + 88);
    v18 = swift_allocObject(&unk_1010D85F0, 24, 7);
    swift_weakInit(v18 + 16, v3);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v10);
    v19 = *(unsigned __int8 *)(v11 + 80);
    v20 = (v19 + 40) & ~v19;
    v21 = (v12 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
    v22 = swift_allocObject(&unk_1010D8690, v21 + 8, v19 | 7);
    *(_WORD *)(v22 + 16) = v35;
    *(_QWORD *)(v22 + 24) = v17;
    *(_QWORD *)(v22 + 32) = v18;
    (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v22 + v20, v13, v10);
    *(_QWORD *)(v22 + v21) = v16;
    v23 = swift_allocObject(&unk_1010D86B8, 32, 7);
    *(_QWORD *)(v23 + 16) = sub_1007197C8;
    *(_QWORD *)(v23 + 24) = v22;
    swift_retain();
    swift_retain();
    v24 = v16;
    swift_retain();
    sub_10053AE60((void (*)(uint64_t, double, double))sub_10010942C, v23);
    swift_release();
    swift_release();
    swift_release();
    sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
    static OS_dispatch_queue.UIFeedbackDeadline.getter();
    v25 = OS_dispatch_semaphore.wait(timeout:)(v9) & 1;
    (*(void (**)(char *, uint64_t))(v37 + 8))(v9, v38);
    if ((static DispatchTimeoutResult.== infix(_:_:)(v25, 0) & 1) != 0)
    {

      v26 = v34;
      swift_beginAccess(v34, v39, 0, 0);
      v14 = *v26;
      swift_bridgeObjectRetain();
    }
    else
    {
      if (qword_10119C0A0 != -1)
        swift_once(&qword_10119C0A0, sub_10048197C);
      v27 = type metadata accessor for Logger(0);
      v28 = sub_100048B14(v27, (uint64_t)qword_10124D0D0);
      v29 = Logger.logObject.getter(v28);
      v30 = static os_log_type_t.error.getter(v29);
      if (os_log_type_enabled(v29, v30))
      {
        v31 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v31 = 0;
        _os_log_impl((void *)&_mh_execute_header, v29, v30, "Semaphore returned a non-success code.  No impressions were generated", v31, 2u);
        swift_slowDealloc(v31, -1, -1);

      }
      else
      {

      }
      v14 = 0;
    }
    swift_release();
  }
  return v14;
}

void sub_10070BFB0(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _UNKNOWN **v9;
  uint64_t v10;
  uint64_t i;
  uint64_t ObjectType;
  uint64_t (*v13)(uint64_t, _UNKNOWN **);
  uint64_t v14;
  uint64_t v15;
  _UNKNOWN **v16;
  _UNKNOWN **v17;
  uint64_t Strong;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25[24];
  _BYTE v26[24];
  _BYTE v27[24];

  v6 = (_QWORD *)(a2 + 16);
  v7 = a3 + 16;
  if ((a1 & 4) != 0)
  {
    swift_beginAccess(a3 + 16, v27, 0, 0);
    Strong = swift_weakLoadStrong(v7);
    if (Strong)
    {
      v19 = Strong;
      swift_beginAccess(Strong + 104, v26, 0, 0);
      v20 = *(_QWORD *)(v19 + 104);
      v21 = swift_bridgeObjectRetain();
      if ((a1 & 1) != 0)
      {
        v22 = sub_100717C40(v20);
        swift_bridgeObjectRelease();
        v20 = v22;
      }
      __chkstk_darwin(v21);
      sub_100718740(v20, (uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128))sub_100719844);
      v24 = v23;
      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      v24 = 0;
    }
    swift_beginAccess(v6, v25, 1, 0);
    *v6 = v24;
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  swift_beginAccess(a3 + 16, v27, 0, 0);
  v8 = swift_weakLoadStrong(v7);
  if (!v8)
  {
LABEL_14:
    OS_dispatch_semaphore.signal()();
    return;
  }
  v9 = &off_1010C7C48;
  v10 = swift_retain_n(v8, 2);
  for (i = v10; ; i = v15)
  {
    ObjectType = swift_getObjectType();
    v13 = (uint64_t (*)(uint64_t, _UNKNOWN **))v9[4];
    swift_unknownObjectRetain(i, v14);
    v15 = v13(ObjectType, v9);
    v17 = v16;
    swift_unknownObjectRetain(v15, v16);
    swift_unknownObjectRelease_n(i, 2);
    if (!v15)
      break;
    swift_unknownObjectRelease(v10);
    v10 = v15;
    v9 = v17;
  }
  swift_beginAccess(v6, v26, 33, 0);
  if (*v6)
  {
    sub_1004812A4(v10, (uint64_t)v9, a1 | 4u, a4, (uint64_t)v6);
    swift_endAccess(v26);
    swift_unknownObjectRelease(v10);
    swift_release();
    goto LABEL_14;
  }
  __break(1u);
}

void sub_10070C1F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t Strong;
  void *v15;
  uint64_t ObjectType;
  uint64_t v17;
  _QWORD *v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  __n128 v36;
  _QWORD *v37;
  _QWORD *v38;

  v1 = sub_100007E8C((uint64_t *)&unk_1011A2170);
  __chkstk_darwin(v1);
  v3 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  __chkstk_darwin(v8);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10119C148 != -1)
    swift_once(&qword_10119C148, sub_10053B640);
  if ((byte_10124D1F0 & 1) == 0 && *(_BYTE *)(v0 + 145) == 1)
  {
    v11 = type metadata accessor for IndexPath(0);
    v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
    Date.init()(v12);
    v13 = sub_10070BC28(2u, (uint64_t)v7, (uint64_t)v10);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_1011A3D50);
    if (v13)
    {
      if (!*(_QWORD *)(v13 + 16))
      {
        swift_bridgeObjectRelease();
        return;
      }
      Strong = swift_unknownObjectWeakLoadStrong(v0 + 96);
      if (Strong)
      {
        v15 = (void *)Strong;
        ObjectType = swift_getObjectType();
        if (!swift_conformsToProtocol2(ObjectType, &protocol descriptor for ImpressionsBuilderBase))
        {
          __break(1u);
          return;
        }
        sub_100712D80((uint64_t)v3);

      }
      else
      {
        v17 = type metadata accessor for MetricsPageProperties(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v3, 1, 1, v17);
      }
      v18 = (_QWORD *)*MetricsReportingController.shared.unsafeMutableAddressor();
      v19 = *(_QWORD *)(v13 + 16);
      if (v19)
      {
        v37 = v18;
        v38 = _swiftEmptyArrayStorage;
        v20 = v18;
        sub_10035C9F0(0, v19, 0);
        v21 = 0;
        v22 = v38;
        v23 = v38[2];
        do
        {
          v24 = *(_QWORD *)(v13 + 8 * v21 + 32);
          v38 = v22;
          v25 = v22[3];
          swift_bridgeObjectRetain();
          if (v23 >= v25 >> 1)
          {
            sub_10035C9F0(v25 > 1, v23 + 1, 1);
            v22 = v38;
          }
          ++v21;
          v22[2] = v23 + 1;
          v22[v23++ + 4] = v24;
        }
        while (v19 != v21);
        swift_bridgeObjectRelease();
        v18 = v37;
      }
      else
      {
        v26 = v18;
        swift_bridgeObjectRelease();
        v22 = _swiftEmptyArrayStorage;
      }
      sub_100540B34();
      v28 = v27;
      v30 = v29;
      if (qword_10119B8B8 != -1)
        swift_once(&qword_10119B8B8, sub_1000E968C);
      v31 = qword_10124C790;
      swift_retain();
      v32 = GroupActivitiesManager.hasJoined.getter();
      v33 = GroupActivitiesManager.participantsCount.getter();
      v34 = (uint64_t *)(v31 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
      swift_beginAccess(v31 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, &v38, 0, 0);
      v35 = *v34;
      v36 = swift_release();
      (*(void (**)(_QWORD *, char *, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, __n128))((swift_isaMask & *v18) + 0xA8))(v22, v3, v28, v30, v32 & 1, v33, v35, v36);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      sub_10070AF44();
      sub_10004FF60((uint64_t)v3, (uint64_t *)&unk_1011A2170);
    }
  }
}

void sub_10070C5A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(_QWORD);
  char *v12;
  _QWORD v13[3];
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;

  v18 = a1;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v2);
  v17 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Genre(0);
  v13[1] = *(_QWORD *)(v4 - 8);
  v13[2] = v4;
  __chkstk_darwin(v4);
  v13[0] = type metadata accessor for Curator(0);
  __chkstk_darwin(v13[0]);
  v5 = type metadata accessor for Artist(0);
  __chkstk_darwin(v5);
  v6 = type metadata accessor for ContainerDetail.AttributionItem(0);
  v14 = *(_QWORD *)(v6 - 8);
  v7 = *(_QWORD *)(v14 + 64);
  v8 = __chkstk_darwin(v6);
  v15 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)v13 - v9;
  v16 = v1;
  sub_10005B704(v1, (uint64_t)v13 - v9, v11);
  v12 = (char *)sub_10070C74C + 4 * byte_100ECC310[swift_getEnumCaseMultiPayload(v10, v6)];
  __asm { BR              X10 }
}

void sub_10070C74C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_10005B748(v0, type metadata accessor for ContainerDetail.AttributionItem);
  v3 = *(_QWORD *)(v2 - 88);
  if (v3)
  {
    v4 = type metadata accessor for TaskPriority(0);
    v5 = *(_QWORD *)(v2 - 96);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v5, 1, 1, v4);
    v6 = *(_QWORD *)(v2 - 112);
    sub_10005B704(*(_QWORD *)(v2 - 104), v6, type metadata accessor for ContainerDetail.AttributionItem);
    v7 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 120) + 80);
    v8 = (v7 + 32) & ~v7;
    v9 = (v1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
    v10 = swift_allocObject(&unk_1010D8460, v9 + 8, v7 | 7);
    *(_QWORD *)(v10 + 16) = 0;
    *(_QWORD *)(v10 + 24) = 0;
    sub_10005B6C0(v6, v10 + v8, type metadata accessor for ContainerDetail.AttributionItem);
    *(_QWORD *)(v10 + v9) = v3;
    swift_retain(v3);
    v11 = sub_100166D14(v5, (uint64_t)&unk_1011C5B08, v10);
    swift_release(v11);
  }
}

uint64_t sub_10070C8D8(double a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  char v15;
  int v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD v26[2];
  __int128 v27;
  void *v28;
  _BYTE v29[40];
  uint64_t v30;

  v10 = *(_QWORD *)(a4 + 16);
  strcpy((char *)&v27, "impressionId");
  BYTE13(v27) = 0;
  HIWORD(v27) = -5120;
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)(&v27, &type metadata for String, &protocol witness table for String);
  v11 = *(_QWORD *)(a4 + 24);
  v28 = &type metadata for Int;
  *(_QWORD *)&v27 = v11;
  sub_100048ABC(&v27, v26);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v10);
  sub_1005EE030(v26, (uint64_t)v29, isUniquelyReferenced_nonNull_native);
  v13 = v10;
  v30 = v10;
  swift_bridgeObjectRelease();
  sub_10004FF2C((uint64_t)v29);
  if ((*(_BYTE *)(a4 + 40) & 1) == 0)
  {
    v14 = *(_QWORD *)(a4 + 32);
    *(_QWORD *)&v27 = 0xD000000000000012;
    *((_QWORD *)&v27 + 1) = 0x8000000100E3D410;
    AnyHashable.init<A>(_:)(&v27, &type metadata for String, &protocol witness table for String);
    v28 = &type metadata for Int;
    *(_QWORD *)&v27 = v14;
    sub_100048ABC(&v27, v26);
    v15 = swift_isUniquelyReferenced_nonNull_native(v13);
    sub_1005EE030(v26, (uint64_t)v29, v15);
    v30 = v13;
    swift_bridgeObjectRelease();
    sub_10004FF2C((uint64_t)v29);
  }
  v16 = *(unsigned __int8 *)(a4 + 41);
  if (v16 != 2)
  {
    strcpy((char *)&v27, "motionActive");
    BYTE13(v27) = 0;
    HIWORD(v27) = -5120;
    AnyHashable.init<A>(_:)(&v27, &type metadata for String, &protocol witness table for String);
    v28 = &type metadata for Bool;
    LOBYTE(v27) = v16 & 1;
    sub_100048ABC(&v27, v26);
    v17 = swift_isUniquelyReferenced_nonNull_native(v13);
    sub_1005EE030(v26, (uint64_t)v29, v17);
    swift_bridgeObjectRelease();
    sub_10004FF2C((uint64_t)v29);
    *(_QWORD *)&v27 = 0x76416E6F69746F6DLL;
    *((_QWORD *)&v27 + 1) = 0xEF656C62616C6961;
    AnyHashable.init<A>(_:)(&v27, &type metadata for String, &protocol witness table for String);
    v28 = &type metadata for Bool;
    LOBYTE(v27) = v16 & 1;
    sub_100048ABC(&v27, v26);
    v18 = swift_isUniquelyReferenced_nonNull_native(v13);
    sub_1005EE030(v26, (uint64_t)v29, v18);
    v30 = v13;
    swift_bridgeObjectRelease();
    sub_10004FF2C((uint64_t)v29);
  }
  if ((a5 & 1) != 0)
  {
    *(_QWORD *)&v27 = 0x6973736572706D69;
    *((_QWORD *)&v27 + 1) = 0xEF73656D69546E6FLL;
    AnyHashable.init<A>(_:)(&v27, &type metadata for String, &protocol witness table for String);
    v19 = sub_100007E8C(&qword_1011B3CE8);
    v20 = swift_allocObject(v19, 40, 7);
    *(_OWORD *)(v20 + 16) = xmmword_100EA7AA0;
    v21 = Date.timeIntervalSince1970.getter(v20);
    *(_QWORD *)(v20 + 32) = Double.toMillisecondsInServerTime.getter(v21);
    v28 = (void *)sub_100007E8C((uint64_t *)&unk_1011C5BD0);
    *(_QWORD *)&v27 = v20;
    sub_100048ABC(&v27, v26);
    v22 = swift_isUniquelyReferenced_nonNull_native(v13);
    sub_1005EE030(v26, (uint64_t)v29, v22);
    v23 = v13;
    swift_bridgeObjectRelease();
    sub_10004FF2C((uint64_t)v29);
  }
  else
  {
    swift_beginAccess(a4 + 48, v29, 0, 0);
    v24 = swift_bridgeObjectRetain();
    sub_10070CC8C(v24, a6, (uint64_t)&v30, a1);
    swift_bridgeObjectRelease();
    return v30;
  }
  return v23;
}

void sub_10070CC8C(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double v14;
  double *v15;
  _QWORD *v16;
  double v17;
  char v18;
  char v19;
  _QWORD *v20;
  double v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  __n128 v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char v41;
  unint64_t v42;
  char v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  _BYTE v57[48];

  v8 = type metadata accessor for Date(0);
  __chkstk_darwin(v8);
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 16);
  if (v13)
  {
    v48 = a2;
    v49 = v12;
    v50 = v10;
    v51 = v9;
    v52 = (unint64_t)a4;
    v53 = *(_QWORD *)&a4 & 0x7FF0000000000000;
    swift_bridgeObjectRetain();
    v14 = 0.0;
    v15 = (double *)(a1 + 40);
    v16 = _swiftEmptyArrayStorage;
    v17 = 0.0;
    v18 = 1;
    v19 = 1;
    v20 = _swiftEmptyArrayStorage;
    while (1)
    {
      v21 = *(v15 - 1);
      if ((*(_BYTE *)v15 & 1) != 0)
      {
        if ((v19 & 1) == 0)
          v14 = *(v15 - 1);
        v18 &= v19;
        goto LABEL_6;
      }
      if ((v19 & 1) != 0)
      {
        v19 = 0;
        v17 = *(v15 - 1);
      }
      else
      {
        if ((v18 & 1) != 0)
          goto LABEL_13;
        if (v21 - v14 < 0.0166666667)
        {
          v14 = 0.0;
LABEL_13:
          v19 = 0;
          v18 = 1;
          goto LABEL_6;
        }
        if (v14 - v17 <= 0.0166666667)
        {
          v14 = 0.0;
          v19 = 0;
          v18 = 1;
          v17 = *(v15 - 1);
        }
        else
        {
          v22 = sub_10053C460(v17, v14);
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
            v16 = sub_100432E64(0, v16[2] + 1, 1, v16);
          v24 = v16[2];
          v23 = v16[3];
          if (v24 >= v23 >> 1)
            v16 = sub_100432E64((_QWORD *)(v23 > 1), v24 + 1, 1, v16);
          v16[2] = v24 + 1;
          v16[v24 + 4] = v22;
          if (!*(_QWORD *)(v22 + 16))
          {
            __break(1u);
LABEL_62:
            __break(1u);
LABEL_63:
            __break(1u);
LABEL_64:
            __break(1u);
LABEL_65:
            __break(1u);
LABEL_66:
            v16 = sub_100432E64(0, v16[2] + 1, 1, v16);
LABEL_42:
            v39 = v16[2];
            v38 = v16[3];
            if (v39 >= v38 >> 1)
              v16 = sub_100432E64((_QWORD *)(v38 > 1), v39 + 1, 1, v16);
            v16[2] = v39 + 1;
            v16[v39 + 4] = v22;
            if (*(_QWORD *)(v22 + 16))
            {
              v40 = sub_10079C2C4(100, 0xE100000000000000);
              if ((v41 & 1) != 0)
              {
                if (v53 != 0x7FF0000000000000)
                {
                  if (a4 > -1.0)
                  {
                    if (a4 < 1.84467441e19)
                    {
                      if (*(_QWORD *)(*(_QWORD *)(v22 + 56) + 8 * v40) > v52)
                      {
                        if (*(_QWORD *)(v22 + 16))
                        {
                          v42 = sub_10079C2C4(115, 0xE100000000000000);
                          if ((v43 & 1) != 0)
                          {
                            v39 = *(_QWORD *)(*(_QWORD *)(v22 + 56) + 8 * v42);
                            swift_bridgeObjectRelease();
                            if ((swift_isUniquelyReferenced_nonNull_native(v20) & 1) != 0)
                              goto LABEL_53;
                            goto LABEL_72;
                          }
                        }
LABEL_74:
                        swift_bridgeObjectRelease();
                        __break(1u);
                        return;
                      }
                      swift_bridgeObjectRelease();
                      if (v16[2])
                        goto LABEL_57;
LABEL_38:
                      swift_bridgeObjectRelease();
                      if (!v20[2])
                        goto LABEL_39;
LABEL_58:
                      v54 = 0x6973736572706D69;
                      v55 = 0xEF73656D69546E6FLL;
                      AnyHashable.init<A>(_:)(&v54, &type metadata for String, &protocol witness table for String);
                      v56 = sub_100007E8C((uint64_t *)&unk_1011C5BD0);
                      v54 = (uint64_t)v20;
                      sub_1003AE83C((uint64_t)&v54, (uint64_t)v57);
                      return;
                    }
LABEL_71:
                    __break(1u);
LABEL_72:
                    v20 = sub_100432D50(0, v20[2] + 1, 1, v20);
LABEL_53:
                    v45 = v20[2];
                    v44 = v20[3];
                    if (v45 >= v44 >> 1)
                      v20 = sub_100432D50((_QWORD *)(v44 > 1), v45 + 1, 1, v20);
                    v20[2] = v45 + 1;
                    v20[v45 + 4] = v39;
LABEL_56:
                    if (!v16[2])
                      goto LABEL_38;
                    goto LABEL_57;
                  }
LABEL_70:
                  __break(1u);
                  goto LABEL_71;
                }
LABEL_69:
                __break(1u);
                goto LABEL_70;
              }
            }
            else
            {
              __break(1u);
            }
            __break(1u);
            goto LABEL_69;
          }
          v25 = sub_10079C2C4(100, 0xE100000000000000);
          if ((v26 & 1) == 0)
            goto LABEL_62;
          if (v53 == 0x7FF0000000000000)
            goto LABEL_63;
          if (a4 <= -1.0)
            goto LABEL_64;
          if (a4 >= 1.84467441e19)
            goto LABEL_65;
          if (*(_QWORD *)(*(_QWORD *)(v22 + 56) + 8 * v25) <= v52)
          {
            swift_bridgeObjectRelease();
            v14 = 0.0;
            v19 = 0;
            v18 = 1;
            v17 = v21;
          }
          else
          {
            if (!*(_QWORD *)(v22 + 16) || (v27 = sub_10079C2C4(115, 0xE100000000000000), (v28 & 1) == 0))
            {
              swift_bridgeObjectRelease();
              __break(1u);
              goto LABEL_74;
            }
            v47 = *(_QWORD *)(*(_QWORD *)(v22 + 56) + 8 * v27);
            swift_bridgeObjectRelease();
            v29 = a3;
            if ((swift_isUniquelyReferenced_nonNull_native(v20) & 1) == 0)
              v20 = sub_100432D50(0, v20[2] + 1, 1, v20);
            v31 = v20[2];
            v30 = v20[3];
            if (v31 >= v30 >> 1)
              v20 = sub_100432D50((_QWORD *)(v30 > 1), v31 + 1, 1, v20);
            v14 = 0.0;
            v19 = 0;
            v20[2] = v31 + 1;
            v20[v31 + 4] = v47;
            v18 = 1;
            v17 = v21;
            a3 = v29;
          }
        }
      }
LABEL_6:
      v15 += 2;
      if (!--v13)
      {
        v32 = swift_bridgeObjectRelease();
        if ((v19 & 1) == 0)
        {
          v34 = v49;
          v33 = v50;
          v35 = v51;
          v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v50 + 16))(v49, v48, v51, v32);
          if ((v18 & 1) != 0)
            v37 = Date.timeIntervalSince1970.getter(v36);
          else
            v37 = v14;
          (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v35);
          v22 = sub_10053C460(v17, v37);
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
            goto LABEL_66;
          goto LABEL_42;
        }
        goto LABEL_56;
      }
    }
  }
  v16 = _swiftEmptyArrayStorage;
  v20 = _swiftEmptyArrayStorage;
  if (!_swiftEmptyArrayStorage[2])
    goto LABEL_38;
LABEL_57:
  v54 = 0x6E49646577656976;
  v55 = 0xEA00000000006F66;
  AnyHashable.init<A>(_:)(&v54, &type metadata for String, &protocol witness table for String);
  v56 = sub_100007E8C(&qword_1011B9410);
  v54 = (uint64_t)v16;
  sub_1003AE83C((uint64_t)&v54, (uint64_t)v57);
  if (v20[2])
    goto LABEL_58;
LABEL_39:
  swift_bridgeObjectRelease();
}

void sub_10070D2A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  char *v8;
  _QWORD v9[2];

  v1 = type metadata accessor for Genre(0);
  v9[0] = *(_QWORD *)(v1 - 8);
  v9[1] = v1;
  __chkstk_darwin(v1);
  v2 = type metadata accessor for Curator(0);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for Artist(0);
  __chkstk_darwin(v3);
  v4 = type metadata accessor for ContainerDetail.AttributionItem(0);
  __chkstk_darwin(v4);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704(v0, (uint64_t)v6, v7);
  v8 = (char *)sub_10070D3E8 + 4 * byte_100ECC316[swift_getEnumCaseMultiPayload(v6, v4)];
  __asm { BR              X10 }
}

uint64_t sub_10070D3E8()
{
  uint64_t v0;

  sub_10005B748(v0, type metadata accessor for ContainerDetail.AttributionItem);
  return 1;
}

uint64_t sub_10070D4D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v5[2] = a4;
  v5[3] = a5;
  v6 = type metadata accessor for Playlist(0);
  v5[4] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[5] = v7;
  v5[6] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Genre(0);
  v5[7] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[8] = v9;
  v5[9] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for RadioShow(0);
  v5[10] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v5[11] = v11;
  v5[12] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Curator(0);
  v5[13] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v5[14] = v13;
  v5[15] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C(&qword_1011C44D0);
  v5[16] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v5[17] = v15;
  v5[18] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for SocialProfile(0);
  v5[19] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v5[20] = v17;
  v5[21] = swift_task_alloc((*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Artist(0);
  v5[22] = v18;
  v19 = *(_QWORD *)(v18 - 8);
  v5[23] = v19;
  v5[24] = swift_task_alloc((*(_QWORD *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for ContainerDetail.AttributionItem(0);
  v5[25] = v20;
  v5[26] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v20 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10070D64C, 0, 0);
}

void sub_10070D64C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;

  v1 = v0[25];
  v2 = v0[26];
  sub_10005B704(v0[2], v2, type metadata accessor for ContainerDetail.AttributionItem);
  v3 = (char *)sub_10070D6A8 + 4 * byte_100ECC31C[swift_getEnumCaseMultiPayload(v2, v1)];
  __asm { BR              X10 }
}

uint64_t sub_10070D6A8()
{
  uint64_t *v0;
  uint64_t **v1;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[23] + 32))(v0[24], v0[26], v0[22]);
  v1 = (uint64_t **)swift_task_alloc(dword_10119EB9C);
  v0[27] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = (uint64_t *)sub_10070D940;
  return sub_1000738E0(v0[3]);
}

uint64_t sub_10070D700()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t **v6;

  v1 = (_QWORD *)v0[18];
  v2 = v0[16];
  v3 = v0[17];
  v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0[20] + 32))(v0[21], v0[26], v0[19]);
  *v1 = ((uint64_t (*)(uint64_t))SocialProfile.id.getter)(v4);
  v1[1] = v5;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v1, enum case for MusicPageProvider.Destination.socialProfileDetail<A, B>(_:), v2);
  v6 = (uint64_t **)swift_task_alloc(dword_1011C7BB4);
  v0[28] = (uint64_t)v6;
  *v6 = v0;
  v6[1] = (uint64_t *)sub_10070DA40;
  return sub_10076ECA8(v0[3]);
}

uint64_t sub_10070D940()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 216));
  return swift_task_switch(sub_10070D994, 0, 0);
}

uint64_t sub_10070D994()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 96);
  v7 = *(_QWORD *)(v0 + 72);
  v8 = *(_QWORD *)(v0 + 48);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(v1, *(_QWORD *)(v0 + 176));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10070DA40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 136);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 144);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 128);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 224));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch(sub_10070DAB4, 0, 0);
}

uint64_t sub_10070DAB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 192);
  v4 = *(_QWORD *)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 96);
  v7 = *(_QWORD *)(v0 + 72);
  v8 = *(_QWORD *)(v0 + 48);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 160) + 8))(v1, *(_QWORD *)(v0 + 152));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v1);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10070DB60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 136);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 144);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 128);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 232));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch(sub_10070DBD4, 0, 0);
}

uint64_t sub_10070DBD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 192);
  v4 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 144);
  v6 = *(_QWORD *)(v0 + 96);
  v7 = *(_QWORD *)(v0 + 72);
  v8 = *(_QWORD *)(v0 + 48);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 112) + 8))(v1, *(_QWORD *)(v0 + 104));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v1);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10070DC80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 136);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 144);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 128);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 240));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch(sub_10070DCF4, 0, 0);
}

uint64_t sub_10070DCF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 192);
  v4 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 144);
  v6 = *(_QWORD *)(v0 + 120);
  v7 = *(_QWORD *)(v0 + 72);
  v8 = *(_QWORD *)(v0 + 48);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(v1, *(_QWORD *)(v0 + 80));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v1);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10070DDA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 136);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 144);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 128);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 248));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch(sub_10070DE14, 0, 0);
}

uint64_t sub_10070DE14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 192);
  v4 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 144);
  v6 = *(_QWORD *)(v0 + 120);
  v7 = *(_QWORD *)(v0 + 96);
  v8 = *(_QWORD *)(v0 + 48);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(v1, *(_QWORD *)(v0 + 56));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v1);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10070DEC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 136);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 144);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 128);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 256));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch(sub_10070DF34, 0, 0);
}

uint64_t sub_10070DF34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 192);
  v4 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 144);
  v6 = *(_QWORD *)(v0 + 120);
  v7 = *(_QWORD *)(v0 + 96);
  v8 = *(_QWORD *)(v0 + 72);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 40) + 8))(v1, *(_QWORD *)(v0 + 32));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10070DFE4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  const char *v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v21[16];

  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = &v21[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a1 >> 62)
  {
    if (a1 >> 62 == 1)
    {
      v12 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000018, 0x8000000100E434E0);
      static Locale.current.getter(v12);
      v13 = "Title for view displayed when content is syncing";
      v14 = v11;
      v15 = v8;
      v16 = 48;
    }
    else if (a1 != 0x8000000000000000 || a3 | a2)
    {
      v19 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000012, 0x8000000100E43540);
      static Locale.current.getter(v19);
      v13 = "Title for view displayed when content is unavailable";
      v14 = v11;
      v15 = v8;
      v16 = 52;
    }
    else
    {
      v18 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000016, 0x8000000100E414E0);
      static Locale.current.getter(v18);
      v13 = "Title for offline view";
      v14 = v11;
      v15 = v8;
      v16 = 22;
    }
  }
  else
  {
    v17 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000014, 0x8000000100E435A0);
    static Locale.current.getter(v17);
    v13 = "Title for view displayed when a connection error occurs";
    v14 = v11;
    v15 = v8;
    v16 = 55;
  }
  return String.init(localized:table:bundle:locale:comment:)(v14, 0, 0, 0, v15, v13, v16, 2);
}

void sub_10070E1EC()
{
  qword_10124D850 = Int.seconds.getter(1050);
}

void sub_10070E20C()
{
  qword_10124D858 = Int.seconds.getter(440);
}

void sub_10070E250()
{
  char *v0;
  char *v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  id v8;
  void *v9;
  id v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  void *v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  objc_class *v38;
  double v39;
  CGFloat v40;
  double v41;
  CGFloat v42;
  double v43;
  CGFloat v44;
  double v45;
  CGFloat v46;
  double Width;
  id v48;
  id v49;
  void *v50;
  id v51;
  Class isa;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  double v71;
  uint64_t v72;
  NSString v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  objc_super v79;
  objc_super v80;
  objc_super v81;
  char v82[24];
  objc_super v83;
  UIScrollView_optional v84;
  CGRect v85;
  CGRect v86;

  v1 = v0;
  ObjectType = swift_getObjectType();
  v83.receiver = v0;
  v83.super_class = (Class)type metadata accessor for ContainerDetail.ViewController(0);
  objc_msgSendSuper2(&v83, "viewDidLoad");
  if (qword_10119C740 != -1)
    swift_once(&qword_10119C740, sub_100716478);
  v3 = type metadata accessor for Logger(0);
  v4 = sub_100048B14(v3, (uint64_t)qword_10124D860);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Called viewDidLoad", v7, 2u);
    swift_slowDealloc(v7, -1, -1);
  }

  v8 = objc_msgSend(v1, "view");
  if (!v8)
  {
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v9 = v8;
  v10 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
  objc_msgSend(v9, "setBackgroundColor:", v10);

  v11 = &v1[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource];
  swift_beginAccess(&v1[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource], v82, 0, 0);
  v12 = *(_QWORD *)v11;
  v13 = type metadata accessor for PlaylistDetailDataSource(0);
  if (swift_dynamicCastClass(v12, v13))
  {
    v14 = _s14SheetPresenterV10DataSourceCMa(0);
    swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
    v15 = sub_100569C00();
    *(_QWORD *)&v1[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_sheetPresenterDataSource] = v15;
    swift_retain_n(v15, 2);
    swift_release();
    v16 = sub_100048748(&qword_1011BA6A8, _s14SheetPresenterV10DataSourceCMa, (uint64_t)&unk_100EC14D4);
    v17 = ObservedObject.init(wrappedValue:)(v15, v14, v16);
    v19 = v18;
    v78 = _swiftEmptyArrayStorage;
    v20 = sub_100007E8C((uint64_t *)&unk_1011B8ED0);
    State.init(wrappedValue:)(&v78, v20);
    v21 = v74;
    v22 = v75;
    v74 = v17;
    v75 = v19;
    v76 = v21;
    v77 = v22;
    v23 = objc_allocWithZone((Class)sub_100007E8C(&qword_1011C5C88));
    v24 = (void *)_UIHostingView.init(rootView:)(&v74);
    v25 = objc_msgSend(v1, "view", v74, v75, v76, v77, v78);
    if (!v25)
    {
LABEL_24:
      __break(1u);
      return;
    }
    v26 = v25;
    objc_msgSend(v25, "addSubview:", v24);

    swift_release();
  }
  v27 = sub_1007142B4();
  v28 = objc_msgSend(v1, "view");
  if (!v28)
    goto LABEL_22;
  v29 = v28;
  objc_msgSend(v28, "bounds");
  v31 = v30;
  v33 = v32;
  v35 = v34;
  v37 = v36;

  v38 = (objc_class *)type metadata accessor for HIMetricsCollectionView();
  v81.receiver = v27;
  v81.super_class = v38;
  objc_msgSendSuper2(&v81, "frame");
  v40 = v39;
  v42 = v41;
  v44 = v43;
  v46 = v45;
  v80.receiver = v27;
  v80.super_class = v38;
  objc_msgSendSuper2(&v80, "setFrame:", v31, v33, v35, v37);
  v85.origin.x = v40;
  v85.origin.y = v42;
  v85.size.width = v44;
  v85.size.height = v46;
  Width = CGRectGetWidth(v85);
  v79.receiver = v27;
  v79.super_class = v38;
  objc_msgSendSuper2(&v79, "frame");
  if (Width != CGRectGetWidth(v86))
    sub_100108B5C();

  v48 = sub_1007142B4();
  objc_msgSend(v48, "setAutoresizingMask:", 18);

  v49 = objc_msgSend(v1, "view");
  if (!v49)
    goto LABEL_23;
  v50 = v49;
  v51 = sub_1007142B4();
  objc_msgSend(v50, "addSubview:", v51);

  v84.value.super.super.super.isa = (Class)sub_1007142B4();
  isa = v84.value.super.super.super.isa;
  UIViewController.setContentScrollView(_:)(v84);

  v53 = *(_QWORD *)v11;
  v54 = *((_QWORD *)v11 + 1);
  v55 = swift_getObjectType();
  v74 = v53;
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v54 + 216))(v55, v54) & 1) != 0)
  {
    v56 = sub_1007142B4();
    objc_msgSend(v56, "setAlpha:", 0.0);

  }
  if (!*(_QWORD *)&v1[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_storeItemMetadataDidChangeObserver])
  {
    v57 = *(_QWORD *)v11;
    v58 = *((_QWORD *)v11 + 1);
    v59 = swift_getObjectType();
    v74 = v57;
    (*(void (**)(uint64_t, uint64_t))(v58 + 296))(v59, v58);
  }
  v60 = sub_100007E8C(&qword_1011A1750);
  v61 = swift_allocObject(v60, 48, 7);
  *(_OWORD *)(v61 + 16) = xmmword_100EA7AA0;
  v62 = sub_10018D478();
  *(_QWORD *)(v61 + 32) = &type metadata for LibraryFilterTrait;
  *(_QWORD *)(v61 + 40) = v62;
  v63 = UIViewController.registerForTraitChanges<A>(_:handler:)(v61, sub_10071873C, 0, ObjectType);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease(v63);
  sub_10070F7B4();
  v64 = objc_msgSend(v1, "navigationItem");
  objc_msgSend(v64, "setLargeTitleDisplayMode:", 2);

  v65 = *(_QWORD *)v11;
  v66 = *((_QWORD *)v11 + 1);
  v67 = swift_getObjectType();
  v74 = v65;
  *(_QWORD *)&v1[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dragDropController] = (*(uint64_t (**)(uint64_t, uint64_t))(v66 + 88))(v67, v66);
  swift_release();
  sub_10071014C(0);
  v68 = *(_QWORD *)v11;
  v69 = *((_QWORD *)v11 + 1);
  v70 = swift_getObjectType();
  v74 = v68;
  (*(void (**)(uint64_t, uint64_t))(v69 + 168))(v70, v69);
  if (v72)
  {
    v73 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v71 = swift_bridgeObjectRelease().n128_u64[0];
  }
  else
  {
    v73 = 0;
  }
  objc_msgSend(v1, "setTitle:", v73, v71);

}

uint64_t sub_10070E870(char a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  objc_class *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  int v17;
  unsigned __int8 *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  unsigned __int8 *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v42[3];
  uint64_t v43[3];
  char v44[24];
  objc_super v45;

  v2 = v1;
  v4 = sub_100007E8C((uint64_t *)&unk_1011A8780);
  __chkstk_darwin(v4);
  v6 = (char *)&v42[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MetricsEvent.Page(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v42[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (objc_class *)type metadata accessor for ContainerDetail.ViewController(0);
  v45.receiver = v2;
  v45.super_class = v11;
  objc_msgSendSuper2(&v45, "viewDidAppear:", a1 & 1);
  if (qword_10119C740 != -1)
    swift_once(&qword_10119C740, sub_100716478);
  v12 = type metadata accessor for Logger(0);
  v13 = sub_100048B14(v12, (uint64_t)qword_10124D860);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Called viewDidAppear", v16, 2u);
    swift_slowDealloc(v16, -1, -1);
  }

  v17 = v2[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_needToRegisterGroupActivitySuggestion];
  v2[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_needToRegisterGroupActivitySuggestion] = 1;
  if (v17 != 1)
  {
    v18 = &v2[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource];
    swift_beginAccess(&v2[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource], v44, 0, 0);
    v19 = *(_QWORD *)v18;
    v20 = *((_QWORD *)v18 + 1);
    ObjectType = swift_getObjectType();
    v43[0] = v19;
    (*(void (**)(uint64_t, uint64_t))(v20 + 400))(ObjectType, v20);
  }
  sub_100714554();
  v22 = &v2[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource];
  swift_beginAccess(v22, v43, 0, 0);
  v23 = *(_QWORD *)v22;
  v24 = *((_QWORD *)v22 + 1);
  v25 = swift_getObjectType();
  v42[0] = v23;
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v24 + 176))(v25, v24))
  {
    dispatch thunk of RelatedContentProvider.onAppear()();
    swift_release();
  }
  v26 = *(_QWORD *)v22;
  v27 = *((_QWORD *)v22 + 1);
  v28 = swift_getObjectType();
  v42[0] = v26;
  (*(void (**)(uint64_t, uint64_t))(v27 + 256))(v28, v27);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    return sub_10004FF60((uint64_t)v6, (uint64_t *)&unk_1011A8780);
  sub_10005B6C0((uint64_t)v6, (uint64_t)v10, type metadata accessor for MetricsEvent.Page);
  v30 = (id)*MetricsReportingController.shared.unsafeMutableAddressor();
  sub_100540B34();
  v32 = v31;
  v34 = v33;
  if (qword_10119B8B8 != -1)
    swift_once(&qword_10119B8B8, sub_1000E968C);
  v35 = qword_10124C790;
  swift_retain();
  v36 = GroupActivitiesManager.hasJoined.getter();
  v37 = GroupActivitiesManager.participantsCount.getter();
  v38 = (uint64_t *)(v35 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
  swift_beginAccess(v35 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, v42, 0, 0);
  v39 = *v38;
  v40 = swift_release();
  (*(void (**)(char *, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, __n128))((swift_isaMask & *v30) + 0xA0))(v10, v32, v34, v36 & 1, v37, v39, v40);

  swift_bridgeObjectRelease();
  return sub_10005B748((uint64_t)v10, type metadata accessor for MetricsEvent.Page);
}

double sub_10070EC38(char a1)
{
  void *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double result;
  objc_super v14;

  v14.receiver = v1;
  v14.super_class = (Class)type metadata accessor for ContainerDetail.ViewController(0);
  objc_msgSendSuper2(&v14, "viewWillAppear:", a1 & 1);
  v3 = sub_100712CDC();
  *((_BYTE *)v3 + 145) = 1;
  v4 = v3[4];
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    v7 = (uint64_t *)(v4 + 40);
    while (1)
    {
      v10 = *(v7 - 1);
      v11 = *v7;
      v12 = qword_10119C148;
      swift_unknownObjectRetain(v10, v6);
      if (v12 == -1)
      {
        if ((byte_10124D1F0 & 1) != 0)
          goto LABEL_7;
      }
      else
      {
        swift_once(&qword_10119C148, sub_10053B640);
        if ((byte_10124D1F0 & 1) != 0)
        {
LABEL_7:
          v8 = 0;
          goto LABEL_4;
        }
      }
      v8 = *((unsigned __int8 *)v3 + 145);
LABEL_4:
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v8, ObjectType, v11);
      swift_unknownObjectRelease(v10);
      v7 += 2;
      if (!--v5)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  if (qword_10119C148 != -1)
    swift_once(&qword_10119C148, sub_10053B640);
  if (byte_10124D1F0 != 1 && (*((_BYTE *)v3 + 145) & 1) != 0)
    sub_10070B270();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

double sub_10070EDE0(char a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  objc_class *v11;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  __n128 v15;
  int v16;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t ObjectType;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double result;
  objc_super v29;

  v2 = v1;
  v4 = sub_100007E8C((uint64_t *)&unk_10119E648);
  __chkstk_darwin(v4);
  v6 = (id *)((char *)&v29.receiver - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for PreviewPlaybackController.Context(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (objc_class *)type metadata accessor for ContainerDetail.ViewController(0);
  v29.receiver = v2;
  v29.super_class = v11;
  objc_msgSendSuper2(&v29, "viewWillDisappear:", a1 & 1);
  if (sub_100713128())
  {
    dispatch thunk of PopoverProvider.dismissPopover(animated:)(1);
    swift_release();
  }
  if (qword_10119B878 != -1)
    swift_once(&qword_10119B878, sub_10006585C);
  v12 = qword_10124C708;
  KeyPath = swift_getKeyPath(&unk_100ECC6B0);
  v14 = swift_getKeyPath(&unk_100ECC6D8);
  static Published.subscript.getter(v6, v12, KeyPath, v14);
  swift_release();
  v15 = swift_release();
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v8 + 48))(v6, 1, v7, v15) == 1)
  {
    sub_10004FF60((uint64_t)v6, (uint64_t *)&unk_10119E648);
  }
  else
  {
    sub_10005B6C0((uint64_t)v6, (uint64_t)v10, type metadata accessor for PreviewPlaybackController.Context);
    v16 = v10[*(int *)(v7 + 28)];
    if (v16 != 2 && (v16 & 1) == 0)
      sub_10006754C();
    sub_10005B748((uint64_t)v10, type metadata accessor for PreviewPlaybackController.Context);
  }
  if (qword_10119BFC8 != -1)
    swift_once(&qword_10119BFC8, sub_10040BCB8);
  GroupActivitiesManager.SuggestionProvider.removeSuggestedItem(from:)((UIViewController)v2);
  sub_10070F104();
  v18 = sub_100712CDC();
  *((_BYTE *)v18 + 145) = 0;
  v19 = v18[4];
  v20 = *(_QWORD *)(v19 + 16);
  if (v20)
  {
    swift_bridgeObjectRetain();
    v22 = (uint64_t *)(v19 + 40);
    while (1)
    {
      v25 = *(v22 - 1);
      v26 = *v22;
      v27 = qword_10119C148;
      swift_unknownObjectRetain(v25, v21);
      if (v27 == -1)
      {
        if ((byte_10124D1F0 & 1) != 0)
          goto LABEL_22;
      }
      else
      {
        swift_once(&qword_10119C148, sub_10053B640);
        if ((byte_10124D1F0 & 1) != 0)
        {
LABEL_22:
          v23 = 0;
          goto LABEL_19;
        }
      }
      v23 = *((unsigned __int8 *)v18 + 145);
LABEL_19:
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v23, ObjectType, v26);
      swift_unknownObjectRelease(v25);
      v22 += 2;
      if (!--v20)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  if (qword_10119C148 != -1)
    swift_once(&qword_10119C148, sub_10053B640);
  if (byte_10124D1F0 != 1 && (*((_BYTE *)v18 + 145) & 1) != 0)
    sub_10070B270();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

double sub_10070F104()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  int64_t v14;
  uint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  __n128 v30;
  double result;
  uint64_t v32;
  _QWORD *v33;

  v0 = sub_100007E8C((uint64_t *)&unk_1011A2170);
  __chkstk_darwin(v0);
  v2 = (char *)&v32 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Date(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  __chkstk_darwin(v7);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100712CDC();
  v10 = type metadata accessor for IndexPath(0);
  v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  Date.init()(v11);
  v12 = sub_10070BC28(2u, (uint64_t)v6, (uint64_t)v9);
  v13 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v13);
  sub_10004FF60((uint64_t)v9, (uint64_t *)&unk_1011A3D50);
  if (v12)
  {
    v14 = *(_QWORD *)(v12 + 16);
    if (v14)
    {
      v33 = _swiftEmptyArrayStorage;
      sub_10035C9F0(0, v14, 0);
      v15 = 0;
      v16 = v33;
      v17 = v33[2];
      do
      {
        v18 = *(_QWORD *)(v12 + 8 * v15 + 32);
        v33 = v16;
        v19 = v16[3];
        swift_bridgeObjectRetain();
        if (v17 >= v19 >> 1)
        {
          sub_10035C9F0(v19 > 1, v17 + 1, 1);
          v16 = v33;
        }
        ++v15;
        v16[2] = v17 + 1;
        v16[v17++ + 4] = v18;
      }
      while (v14 != v15);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v16 = _swiftEmptyArrayStorage;
    }
    v20 = (id)*MetricsReportingController.shared.unsafeMutableAddressor();
    sub_100712D80((uint64_t)v2);
    sub_100540B34();
    v22 = v21;
    v24 = v23;
    if (qword_10119B8B8 != -1)
      swift_once(&qword_10119B8B8, sub_1000E968C);
    v25 = qword_10124C790;
    swift_retain();
    v26 = GroupActivitiesManager.hasJoined.getter();
    v27 = GroupActivitiesManager.participantsCount.getter();
    v28 = (uint64_t *)(v25 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
    swift_beginAccess(v25 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, &v33, 0, 0);
    v29 = *v28;
    v30 = swift_release();
    (*(void (**)(_QWORD *, char *, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, __n128))((swift_isaMask & *v20)
                                                                                                 + 0xA8))(v16, v2, v22, v24, v26 & 1, v27, v29, v30);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10004FF60((uint64_t)v2, (uint64_t *)&unk_1011A2170);
  }
  sub_100712CDC();
  sub_10070AF44();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

id sub_10070F5EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _BYTE v13[24];
  __int128 v14;
  __int128 v15;
  void *v16;

  v1 = sub_100007E8C(&qword_1011C5C80);
  __chkstk_darwin(v1);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = (uint64_t *)(v0 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource);
  swift_beginAccess(v4, v13, 0, 0);
  v5 = *v4;
  v6 = v4[1];
  ObjectType = swift_getObjectType();
  *(_QWORD *)&v14 = v5;
  (*(void (**)(uint64_t, uint64_t))(v6 + 136))(ObjectType, v6);
  v8 = type metadata accessor for UIContentUnavailableConfiguration(0);
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v3, 1, v8) == 1)
  {
    sub_10004FF60((uint64_t)v3, &qword_1011C5C80);
    v14 = 0u;
    v15 = 0u;
    v16 = 0;
  }
  else
  {
    *((_QWORD *)&v15 + 1) = v8;
    v16 = &protocol witness table for UIContentUnavailableConfiguration;
    v10 = sub_100049F68(&v14);
    (*(void (**)(_QWORD *, char *, uint64_t))(v9 + 32))(v10, v3, v8);
  }
  UIViewController.contentUnavailableConfiguration.setter(&v14);
  return sub_100711424();
}

void sub_10070F7B4()
{
  char *v0;
  void *v1;
  char *v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  Class isa;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  Class v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t i;
  id v35;
  void *v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49[24];

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource];
  swift_beginAccess(&v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource], v49, 0, 0);
  v3 = *((_QWORD *)v2 + 1);
  ObjectType = swift_getObjectType();
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v3 + 216))(ObjectType, v3) & 1) == 0)
  {
    v5 = *((_QWORD *)v2 + 1);
    v6 = swift_getObjectType();
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v5 + 288))(v6, v5) & 1) == 0)
    {
      v7 = sub_100007E8C((uint64_t *)&unk_1011A1470);
      v8 = swift_allocObject(v7, 40, 7);
      *(_OWORD *)(v8 + 16) = xmmword_100EA7A90;
      v9 = sub_100715B24();
      *(_QWORD *)(v8 + 32) = v9;
      specialized Array._endMutation()(v9);
      v10 = *((_QWORD *)v2 + 1);
      v11 = swift_getObjectType();
      v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 360))(v11, v10);
      sub_100804B24(v12);
      v13 = v8;
      v14 = objc_msgSend(v0, "traitCollection");
      v15 = objc_msgSend(v14, "userInterfaceIdiom");

      v16 = objc_msgSend(v1, "navigationItem");
      if (v15 == (id)6)
      {
        sub_10004A07C(0, &qword_1011A3F70, UIBarButtonItem_ptr);
        isa = Array._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v16, "setRightBarButtonItems:animated:", isa, 1);

      }
      else
      {
        v18 = objc_msgSend(v1, "parentViewController");
        if (v18)
        {
          v19 = v18;
          while (1)
          {
            objc_opt_self(UINavigationController);
            if (swift_dynamicCastObjCClass(v19))
              break;
            v20 = v19;
            v21 = objc_msgSend(v20, "navigationItem");

            v19 = objc_msgSend(v20, "parentViewController");
            v16 = v21;
            if (!v19)
              goto LABEL_12;
          }

        }
        v21 = v16;
LABEL_12:
        v22 = swift_bridgeObjectRetain();
        if (sub_1008EC8F4(v22))
          goto LABEL_15;
        v23 = objc_msgSend(v21, "rightBarButtonItems");
        if (!v23)
          goto LABEL_16;
        v24 = v23;
        v25 = sub_10004A07C(0, &qword_1011A3F70, UIBarButtonItem_ptr);
        v26 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v24, v25);

        v27 = sub_1008EC9EC(v26);
        swift_bridgeObjectRelease(v26);
        swift_bridgeObjectRetain();
        v28 = swift_bridgeObjectRetain();
        LOBYTE(v26) = sub_1002EC758(v28, v13);
        swift_bridgeObjectRelease_n(v27, 2);
        swift_bridgeObjectRelease(v13);
        if ((v26 & 1) != 0)
        {
LABEL_15:

          swift_bridgeObjectRelease(v13);
        }
        else
        {
LABEL_16:
          v29 = sub_10004A07C(0, &qword_1011A3F70, UIBarButtonItem_ptr);
          v30 = Array.inserting(separator:)((uint64_t)sub_1008ECB38, 0, v13, v29);
          v31 = Array._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v21, "setRightBarButtonItems:animated:", v31, 1, swift_bridgeObjectRelease(v30).n128_f64[0]);

          swift_bridgeObjectRelease(v13);
        }
      }
      v32 = sub_10070FCAC();
      v48 = (unint64_t)_swiftEmptyArrayStorage;
      if ((unint64_t)v13 >> 62)
      {
        if (v13 < 0)
          v46 = v13;
        else
          v46 = v13 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        v33 = _CocoaArrayWrapper.endIndex.getter(v46);
        if (v33)
          goto LABEL_19;
      }
      else
      {
        v33 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v33)
        {
LABEL_19:
          if (v33 < 1)
          {
            __break(1u);
            return;
          }
          for (i = 0; i != v33; ++i)
          {
            if ((v13 & 0xC000000000000001) != 0)
              v35 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v13);
            else
              v35 = *(id *)(v13 + 8 * i + 32);
            v36 = v35;
            v37 = objc_msgSend(v35, "customView", v48);
            if (v37)
            {
              v38 = v37;
              v39 = type metadata accessor for SymbolButton(0);
              v40 = swift_dynamicCastClass(v38, v39);

              if (v40)
              {
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v41);
                v43 = *(_QWORD *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10);
                v42 = *(_QWORD *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x18);
                if (v43 >= v42 >> 1)
                  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v42 > 1, v43 + 1, 1);
                v44 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v43, v40);
                specialized Array._endMutation()(v44);
              }
              else
              {

              }
            }
            else
            {

            }
          }
          swift_bridgeObjectRelease(v13);
          v45 = (_QWORD *)v48;
          goto LABEL_38;
        }
      }
      swift_bridgeObjectRelease(v13);
      v45 = _swiftEmptyArrayStorage;
LABEL_38:
      swift_bridgeObjectRelease(v13);
      v47 = *(_QWORD *)(v32 + 16);
      *(_QWORD *)(v32 + 16) = v45;
      swift_bridgeObjectRelease(v47);
      sub_100568020();
      swift_release(v32);
    }
  }
}

uint64_t sub_10070FCAC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  _QWORD v25[5];
  char v26[24];
  __int128 v27[2];

  v1 = v0;
  v2 = type metadata accessor for MusicPropertySource(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v25[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___headerCoordinator;
  v7 = *(_QWORD *)&v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___headerCoordinator];
  if (v7)
  {
    v8 = *(_QWORD *)&v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___headerCoordinator];
  }
  else
  {
    v9 = &v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource];
    swift_beginAccess(&v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource], v26, 0, 0);
    v10 = *(_QWORD *)v9;
    v11 = *((_QWORD *)v9 + 1);
    ObjectType = swift_getObjectType();
    *(_QWORD *)&v27[0] = v10;
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v11 + 224))(v25, ObjectType, v11);
    v13 = *(_QWORD *)v9;
    v14 = *((_QWORD *)v9 + 1);
    v15 = swift_getObjectType();
    *(_QWORD *)&v27[0] = v13;
    (*(void (**)(uint64_t, uint64_t))(v14 + 232))(v15, v14);
    v16 = *(_QWORD *)v9;
    v17 = *((_QWORD *)v9 + 1);
    v18 = swift_getObjectType();
    *(_QWORD *)&v27[0] = v16;
    LOBYTE(v17) = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 216))(v18, v17);
    v19 = type metadata accessor for HeaderCoordinator();
    v8 = swift_allocObject(v19, 104, 7);
    *(_QWORD *)(v8 + 16) = _swiftEmptyArrayStorage;
    *(_QWORD *)(v8 + 24) = 0;
    *(_BYTE *)(v8 + 32) = 0;
    *(_QWORD *)(v8 + 40) = 0;
    *(_QWORD *)(v8 + 48) = 0;
    v20 = swift_unknownObjectWeakInit(v8 + 56, 0);
    swift_unknownObjectWeakAssign(v20, v1);
    v21 = v1;
    sub_100568C5C((uint64_t)v25, (uint64_t)v5, v17 & 1, (uint64_t *)v27);
    sub_100064C48(v27, v8 + 64);
    sub_100567AB8();
    sub_100568020();
    sub_100567EFC();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_10004FF60((uint64_t)v25, &qword_1011B6AD0);

    v22 = *(_QWORD *)&v1[v6];
    *(_QWORD *)&v1[v6] = v8;
    swift_retain(v8);
    swift_release(v22);
    v7 = 0;
  }
  swift_retain(v7);
  return v8;
}

void sub_10070FE80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  char v18;
  void (*v19)(char *, uint64_t);
  _BYTE v21[24];

  v2 = v1;
  v4 = type metadata accessor for Artwork(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = sub_100007E8C(&qword_1011A1440);
  __chkstk_darwin(v8);
  v10 = &v21[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = sub_100007E8C(&qword_1011C5B20);
  __chkstk_darwin(v11);
  v13 = &v21[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v14 = v2 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_artwork;
  swift_beginAccess(v2 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_artwork, v21, 0, 0);
  v15 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_10004A160(a1, (uint64_t)v13, &qword_1011A1440);
  sub_10004A160(v14, v15, &qword_1011A1440);
  v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v16((uint64_t)v13, 1, v4) == 1)
  {
    if (v16(v15, 1, v4) == 1)
    {
      sub_10004FF60((uint64_t)v13, &qword_1011A1440);
      return;
    }
  }
  else
  {
    sub_10004A160((uint64_t)v13, (uint64_t)v10, &qword_1011A1440);
    if (v16(v15, 1, v4) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
      v17 = sub_100048748(&qword_1011A2578, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork, (uint64_t)&protocol conformance descriptor for Artwork);
      v18 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v7, v4, v17);
      v19 = *(void (**)(char *, uint64_t))(v5 + 8);
      v19(v7, v4);
      v19(v10, v4);
      sub_10004FF60((uint64_t)v13, &qword_1011A1440);
      if ((v18 & 1) != 0)
        return;
      goto LABEL_8;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }
  sub_10004FF60((uint64_t)v13, &qword_1011C5B20);
LABEL_8:
  sub_10071014C(1);
}

id sub_1007100DC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___backdropContainer;
  v2 = *(void **)(v0 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___backdropContainer);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___backdropContainer);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void sub_10071014C(char a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  id v19;
  objc_class *v20;
  double v21;
  double v22;
  double v23;
  double v24;
  __n128 v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  unint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  objc_super v48;
  objc_super v49;
  _BYTE v50[24];

  v3 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v3);
  v47 = (uint64_t)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011A1440);
  __chkstk_darwin(v5);
  v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Artwork(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v11 = __chkstk_darwin(v8);
  v12 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v14 = (char *)&v45 - v13;
  v15 = objc_msgSend(v1, "traitCollection");
  v16 = objc_msgSend(v15, "userInterfaceIdiom");

  if (v16 == (id)6
    && ((a1 & 1) != 0 || !*(_QWORD *)&v1[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_backdropView]))
  {
    v17 = (uint64_t)&v1[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_artwork];
    swift_beginAccess(&v1[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_artwork], v50, 0, 0);
    sub_10004A160(v17, (uint64_t)v7, &qword_1011A1440);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      sub_10004FF60((uint64_t)v7, &qword_1011A1440);
    }
    else
    {
      v18 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
      v18(v14, v7, v8);
      v19 = sub_1007142B4();
      v20 = (objc_class *)type metadata accessor for HIMetricsCollectionView();
      v49.receiver = v19;
      v49.super_class = v20;
      objc_msgSendSuper2(&v49, "frame");
      v22 = v21;
      v24 = v23;

      if (v22 != 0.0 || v24 != 0.0)
      {
        v26 = sub_1007142B4();
        v48.receiver = v26;
        v48.super_class = v20;
        objc_msgSendSuper2(&v48, "frame");
        v28 = v27;
        v30 = v29;

        v31 = objc_msgSend(v1, "traitCollection");
        objc_msgSend(v31, "displayScale");
        v33 = v32;

        v34 = type metadata accessor for TaskPriority(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v47, 1, 1, v34);
        v35 = swift_allocObject(&unk_1010D8488, 24, 7);
        swift_unknownObjectWeakInit(v35 + 16, v1);
        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
        type metadata accessor for MainActor(0);
        v36 = swift_retain(v35);
        v46 = static MainActor.shared.getter(v36);
        v37 = *(unsigned __int8 *)(v9 + 80);
        v38 = (v37 + 40) & ~v37;
        v39 = (v10 + v38 + 7) & 0xFFFFFFFFFFFFFFF8;
        v40 = v18;
        v41 = (v39 + 23) & 0xFFFFFFFFFFFFFFF8;
        v42 = (char *)swift_allocObject(&unk_1010D87F8, v41 + 8, v37 | 7);
        *((_QWORD *)v42 + 2) = v46;
        *((_QWORD *)v42 + 3) = &protocol witness table for MainActor;
        *((_QWORD *)v42 + 4) = v35;
        v40(&v42[v38], v12, v8);
        v43 = &v42[v39];
        *(_QWORD *)v43 = v28;
        *((_QWORD *)v43 + 1) = v30;
        *(_QWORD *)&v42[v41] = v33;
        swift_release(v35);
        v44 = sub_100166D14(v47, (uint64_t)&unk_1011C5C48, (uint64_t)v42);
        v25 = swift_release(v44);
      }
      (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v14, v8, v25);
    }
  }
}

uint64_t sub_1007104D8(double a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;

  *(double *)(v8 + 112) = a2;
  *(double *)(v8 + 120) = a3;
  *(double *)(v8 + 104) = a1;
  *(_QWORD *)(v8 + 88) = a7;
  *(_QWORD *)(v8 + 96) = a8;
  v9 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  *(_QWORD *)(v8 + 128) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Artwork(0);
  *(_QWORD *)(v8 + 136) = v10;
  v11 = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v8 + 144) = v11;
  v12 = *(_QWORD *)(v11 + 64);
  *(_QWORD *)(v8 + 152) = v12;
  *(_QWORD *)(v8 + 160) = swift_task_alloc((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011C5B20);
  *(_QWORD *)(v8 + 168) = v13;
  *(_QWORD *)(v8 + 176) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v13 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011A1440) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v8 + 184) = swift_task_alloc(v14);
  *(_QWORD *)(v8 + 192) = swift_task_alloc(v14);
  *(_QWORD *)(v8 + 200) = swift_task_alloc(v14);
  v15 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v8 + 208) = v15;
  *(_QWORD *)(v8 + 216) = static MainActor.shared.getter(v16);
  v17 = dispatch thunk of Actor.unownedExecutor.getter(v15, &protocol witness table for MainActor);
  *(_QWORD *)(v8 + 224) = v17;
  *(_QWORD *)(v8 + 232) = v18;
  return swift_task_switch(sub_100710608, v17, v18);
}

uint64_t sub_100710608()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + 88) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  *(_QWORD *)(v0 + 240) = Strong;
  if (Strong)
  {
    v3 = (_QWORD *)swift_task_alloc(dword_1011C5C64);
    *(_QWORD *)(v0 + 248) = v3;
    *v3 = v0;
    v3[1] = sub_10071083C;
    return sub_10071AABC(*(_QWORD *)(v0 + 96), *(double *)(v0 + 104), *(double *)(v0 + 112), *(double *)(v0 + 120));
  }
  else
  {
    swift_release();
    v5 = *(_QWORD *)(v0 + 160);
    v7 = *(_QWORD *)(v0 + 136);
    v6 = *(_QWORD *)(v0 + 144);
    v8 = *(_QWORD *)(v0 + 128);
    v25 = *(_QWORD *)(v0 + 152);
    v26 = v8;
    v9 = *(_QWORD *)(v0 + 96);
    v10 = *(_QWORD *)(v0 + 88) + 16;
    v11 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v8, 1, 1, v11);
    v12 = swift_allocObject(&unk_1010D8488, 24, 7);
    swift_beginAccess(v10, v0 + 40, 0, 0);
    v13 = (void *)swift_unknownObjectWeakLoadStrong(v10);
    swift_unknownObjectWeakInit(v12 + 16);

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v9, v7);
    v14 = swift_retain();
    v15 = static MainActor.shared.getter(v14);
    v16 = *(unsigned __int8 *)(v6 + 80);
    v17 = (v16 + 32) & ~v16;
    v18 = (v25 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
    v19 = swift_allocObject(&unk_1010D8820, v18 + 8, v16 | 7);
    *(_QWORD *)(v19 + 16) = v15;
    *(_QWORD *)(v19 + 24) = &protocol witness table for MainActor;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v19 + v17, v5, v7);
    *(_QWORD *)(v19 + v18) = v12;
    swift_release();
    sub_100166D14(v26, (uint64_t)&unk_1011C5C58, v19);
    swift_release();
    v20 = *(_QWORD *)(v0 + 192);
    v22 = *(_QWORD *)(v0 + 176);
    v21 = *(_QWORD *)(v0 + 184);
    v23 = *(_QWORD *)(v0 + 160);
    v24 = *(_QWORD *)(v0 + 128);
    swift_task_dealloc(*(_QWORD *)(v0 + 200));
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10071083C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 248);
  *(_QWORD *)(*v1 + 256) = a1;
  swift_task_dealloc(v3);
  return swift_task_switch(sub_100710894, *(_QWORD *)(v2 + 224), *(_QWORD *)(v2 + 232));
}

uint64_t sub_100710894()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  void (*v29)(uint64_t, uint64_t);
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  __n128 v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *Strong;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  void *v60;
  uint64_t v61;

  v1 = *(_QWORD *)(v0 + 256);
  v2 = swift_release();
  if (!v1)
  {
    v15 = *(void **)(v0 + 240);
LABEL_12:

    v38 = *(_QWORD *)(v0 + 160);
    v40 = *(_QWORD *)(v0 + 136);
    v39 = *(_QWORD *)(v0 + 144);
    v41 = *(_QWORD *)(v0 + 128);
    v59 = *(_QWORD *)(v0 + 152);
    v61 = v41;
    v42 = *(_QWORD *)(v0 + 96);
    v43 = *(_QWORD *)(v0 + 88) + 16;
    v44 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v41, 1, 1, v44);
    v45 = swift_allocObject(&unk_1010D8488, 24, 7);
    swift_beginAccess(v43, v0 + 40, 0, 0);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v43);
    swift_unknownObjectWeakInit(v45 + 16);

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16))(v38, v42, v40);
    v47 = swift_retain();
    v48 = static MainActor.shared.getter(v47);
    v49 = *(unsigned __int8 *)(v39 + 80);
    v50 = (v49 + 32) & ~v49;
    v51 = (v59 + v50 + 7) & 0xFFFFFFFFFFFFFFF8;
    v52 = swift_allocObject(&unk_1010D8820, v51 + 8, v49 | 7);
    *(_QWORD *)(v52 + 16) = v48;
    *(_QWORD *)(v52 + 24) = &protocol witness table for MainActor;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 32))(v52 + v50, v38, v40);
    *(_QWORD *)(v52 + v51) = v45;
    swift_release();
    sub_100166D14(v61, (uint64_t)&unk_1011C5C58, v52);
    swift_release();
    goto LABEL_13;
  }
  v60 = *(void **)(v0 + 256);
  v3 = *(_QWORD *)(v0 + 240);
  v5 = *(_QWORD *)(v0 + 192);
  v4 = *(_QWORD *)(v0 + 200);
  v7 = *(_QWORD *)(v0 + 168);
  v6 = *(_QWORD *)(v0 + 176);
  v8 = *(_QWORD *)(v0 + 136);
  v9 = *(_QWORD *)(v0 + 144);
  (*(void (**)(uint64_t, _QWORD, uint64_t, __n128))(v9 + 16))(v4, *(_QWORD *)(v0 + 96), v8, v2);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(v4, 0, 1, v8);
  v10 = v3 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_artwork;
  swift_beginAccess(v10, v0 + 64, 0, 0);
  sub_10004A160(v10, v5, &qword_1011A1440);
  v11 = v6 + *(int *)(v7 + 48);
  sub_10004A160(v4, v6, &qword_1011A1440);
  sub_10004A160(v5, v11, &qword_1011A1440);
  v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v12(v6, 1, v8) != 1)
  {
    v16 = *(_QWORD *)(v0 + 136);
    sub_10004A160(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 184), &qword_1011A1440);
    v17 = v12(v11, 1, v16);
    v19 = *(_QWORD *)(v0 + 192);
    v18 = *(_QWORD *)(v0 + 200);
    v20 = *(_QWORD *)(v0 + 184);
    if (v17 != 1)
    {
      v23 = *(_QWORD *)(v0 + 176);
      v24 = *(_QWORD *)(v0 + 160);
      v25 = *(_QWORD *)(v0 + 136);
      v26 = *(_QWORD *)(v0 + 144);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 32))(v24, v11, v25);
      v27 = sub_100048748(&qword_1011A2578, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork, (uint64_t)&protocol conformance descriptor for Artwork);
      v28 = dispatch thunk of static Equatable.== infix(_:_:)(v20, v24, v25, v27);
      v29 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
      v29(v24, v25);
      sub_10004FF60(v19, &qword_1011A1440);
      sub_10004FF60(v18, &qword_1011A1440);
      v29(v20, v25);
      sub_10004FF60(v23, &qword_1011A1440);
      if ((v28 & 1) != 0)
        goto LABEL_10;
      goto LABEL_11;
    }
    v21 = *(_QWORD *)(v0 + 136);
    v22 = *(_QWORD *)(v0 + 144);
    sub_10004FF60(*(_QWORD *)(v0 + 192), &qword_1011A1440);
    sub_10004FF60(v18, &qword_1011A1440);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
LABEL_8:
    sub_10004FF60(*(_QWORD *)(v0 + 176), &qword_1011C5B20);
LABEL_11:
    v15 = *(void **)(v0 + 240);

    goto LABEL_12;
  }
  v13 = *(_QWORD *)(v0 + 200);
  v14 = *(_QWORD *)(v0 + 136);
  sub_10004FF60(*(_QWORD *)(v0 + 192), &qword_1011A1440);
  sub_10004FF60(v13, &qword_1011A1440);
  if (v12(v11, 1, v14) != 1)
    goto LABEL_8;
  sub_10004FF60(*(_QWORD *)(v0 + 176), &qword_1011A1440);
LABEL_10:
  v30 = *(void **)(v0 + 240);
  v31 = *(_QWORD *)(v0 + 128);
  v32 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v31, 1, 1, v32);
  v33 = swift_allocObject(&unk_1010D8488, 24, 7);
  swift_unknownObjectWeakInit(v33 + 16);
  swift_retain();
  v34 = v60;
  v36 = static MainActor.shared.getter(v35);
  v37 = (_QWORD *)swift_allocObject(&unk_1010D8848, 48, 7);
  v37[2] = v36;
  v37[3] = &protocol witness table for MainActor;
  v37[4] = v33;
  v37[5] = v34;
  swift_release();
  sub_100166D14(v31, (uint64_t)&unk_1011C5C70, (uint64_t)v37);

  swift_release();
LABEL_13:
  v53 = *(_QWORD *)(v0 + 192);
  v55 = *(_QWORD *)(v0 + 176);
  v54 = *(_QWORD *)(v0 + 184);
  v56 = *(_QWORD *)(v0 + 160);
  v57 = *(_QWORD *)(v0 + 128);
  swift_task_dealloc(*(_QWORD *)(v0 + 200));
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100710D6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;

  v5[14] = a4;
  v5[15] = a5;
  v6 = type metadata accessor for Artwork(0);
  v5[16] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[17] = v7;
  v5[18] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011C5B20);
  v5[19] = v8;
  v5[20] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011A1440) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[21] = swift_task_alloc(v9);
  v5[22] = swift_task_alloc(v9);
  v5[23] = swift_task_alloc(v9);
  v10 = type metadata accessor for MainActor(0);
  v5[24] = static MainActor.shared.getter(v11);
  v12 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor);
  return swift_task_switch(sub_100710E68, v12, v13);
}

uint64_t sub_100710E68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  void (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t Strong;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  void (*v33)(uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 120);
  v6 = swift_release();
  v5 += 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v3 + 16))(v1, v4, v2, v6);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v7(v1, 0, 1, v2);
  swift_beginAccess(v5, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v9 = (void *)Strong;
    v10 = *(_QWORD *)(v0 + 176);
    v11 = Strong + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_artwork;
    swift_beginAccess(Strong + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_artwork, v0 + 40, 0, 0);
    sub_10004A160(v11, v10, &qword_1011A1440);

  }
  else
  {
    v7(*(_QWORD *)(v0 + 176), 1, 1, *(_QWORD *)(v0 + 128));
  }
  v12 = *(_QWORD *)(v0 + 176);
  v13 = *(_QWORD *)(v0 + 160);
  v14 = *(_QWORD *)(v0 + 128);
  v15 = *(_QWORD *)(v0 + 136);
  v16 = v13 + *(int *)(*(_QWORD *)(v0 + 152) + 48);
  sub_10004A160(*(_QWORD *)(v0 + 184), v13, &qword_1011A1440);
  sub_10004A160(v12, v16, &qword_1011A1440);
  v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  if (v17(v13, 1, v14) != 1)
  {
    v20 = *(_QWORD *)(v0 + 128);
    sub_10004A160(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168), &qword_1011A1440);
    v21 = v17(v16, 1, v20);
    v23 = *(_QWORD *)(v0 + 176);
    v22 = *(_QWORD *)(v0 + 184);
    v24 = *(_QWORD *)(v0 + 168);
    if (v21 != 1)
    {
      v27 = *(_QWORD *)(v0 + 160);
      v29 = *(_QWORD *)(v0 + 136);
      v28 = *(_QWORD *)(v0 + 144);
      v30 = *(_QWORD *)(v0 + 128);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32))(v28, v16, v30);
      v31 = sub_100048748(&qword_1011A2578, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork, (uint64_t)&protocol conformance descriptor for Artwork);
      v32 = dispatch thunk of static Equatable.== infix(_:_:)(v24, v28, v30, v31);
      v33 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
      v33(v28, v30);
      sub_10004FF60(v23, &qword_1011A1440);
      sub_10004FF60(v22, &qword_1011A1440);
      v33(v24, v30);
      sub_10004FF60(v27, &qword_1011A1440);
      if ((v32 & 1) == 0)
        goto LABEL_16;
      goto LABEL_11;
    }
    v25 = *(_QWORD *)(v0 + 128);
    v26 = *(_QWORD *)(v0 + 136);
    sub_10004FF60(*(_QWORD *)(v0 + 176), &qword_1011A1440);
    sub_10004FF60(v22, &qword_1011A1440);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
LABEL_9:
    sub_10004FF60(*(_QWORD *)(v0 + 160), &qword_1011C5B20);
    goto LABEL_16;
  }
  v18 = *(_QWORD *)(v0 + 184);
  v19 = *(_QWORD *)(v0 + 128);
  sub_10004FF60(*(_QWORD *)(v0 + 176), &qword_1011A1440);
  sub_10004FF60(v18, &qword_1011A1440);
  if (v17(v16, 1, v19) != 1)
    goto LABEL_9;
  sub_10004FF60(*(_QWORD *)(v0 + 160), &qword_1011A1440);
LABEL_11:
  v34 = *(_QWORD *)(v0 + 120) + 16;
  swift_beginAccess(v34, v0 + 64, 0, 0);
  v35 = swift_unknownObjectWeakLoadStrong(v34);
  if (v35)
  {
    v36 = (void *)v35;
    v37 = *(void **)(v35 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_backdropView);
    v38 = v37;

    if (v37)
    {
      v39 = *(_QWORD *)(v0 + 120) + 16;
      objc_msgSend(v38, "removeFromSuperview");
      swift_beginAccess(v39, v0 + 88, 0, 0);
      v40 = swift_unknownObjectWeakLoadStrong(v39);
      if (v40)
      {
        v41 = (void *)v40;
        v42 = *(void **)(v40 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_backdropView);
        *(_QWORD *)(v40 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_backdropView) = 0;

      }
      else
      {

      }
    }
  }
LABEL_16:
  v43 = *(_QWORD *)(v0 + 176);
  v45 = *(_QWORD *)(v0 + 160);
  v44 = *(_QWORD *)(v0 + 168);
  v46 = *(_QWORD *)(v0 + 144);
  swift_task_dealloc(*(_QWORD *)(v0 + 184));
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100711200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v5[5] = a4;
  v5[6] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[7] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_10071126C, v8, v9);
}

uint64_t sub_10071126C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  char *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;

  v1 = *(_QWORD *)(v0 + 40);
  swift_release();
  v1 += 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (char *)Strong;
    v4 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", *(_QWORD *)(v0 + 48));
    objc_msgSend(v4, "setContentMode:", 0);
    objc_msgSend(v4, "setAlpha:", 0.0);
    objc_msgSend(v4, "setInsetsLayoutMarginsFromSafeArea:", 0);
    v5 = *(void **)&v3[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_backdropView];
    *(_QWORD *)&v3[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_backdropView] = v4;
    v6 = v4;

    v7 = sub_1007100DC();
    UIView.addSubviewAnchoredToBounds(_:useLayoutMarginsGuide:padding:)(v6);

    sub_10004A07C(0, (unint64_t *)&qword_1011A20A0, UIView_ptr);
    v8 = objc_msgSend((id)objc_opt_self(CAMediaTimingFunction), "functionWithName:", kCAMediaTimingFunctionLinear);
    v9 = swift_allocObject(&unk_1010D8870, 24, 7);
    *(_QWORD *)(v9 + 16) = v6;
    v10 = v6;
    static UIView.animate(withTimingFunction:duration:delay:options:animations:completion:)((uint64_t)v8, 0, sub_10071B48C, v9, 0, 0, 0.25, 0.0);
    swift_release();

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_100711424()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjectType;
  uint64_t v25;
  id v26;
  id v27;
  char *v28;
  double v29;
  _BOOL8 v30;
  id v31;
  id v32;
  double v33;
  char *v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  double v50;
  void *v51;
  id v52;
  id v53;
  void *v54;
  id v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t KeyPath;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t, __n128);
  __n128 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  id v96;
  void *v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char v113[24];
  _QWORD v114[3];
  uint64_t v115;

  v1 = v0;
  v101 = _s15FloatingArtworkVMa(0);
  __chkstk_darwin(v101);
  v102 = (uint64_t *)((char *)&v99 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = sub_100007E8C(&qword_1011BCC50);
  v4 = __chkstk_darwin(v3);
  v99 = (uint64_t)&v99 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v103 = (char *)&v99 - v6;
  v7 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v7);
  v106 = (char *)&v99 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ArtworkImage.Info(0);
  v10 = __chkstk_darwin(v9);
  v100 = (uint64_t)&v99 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v10);
  v104 = (uint64_t)&v99 - v13;
  __chkstk_darwin(v12);
  v107 = (uint64_t)&v99 - v14;
  v15 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  v16 = __chkstk_darwin(v15);
  v105 = (uint64_t)&v99 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v109 = (char *)&v99 - v18;
  v19 = type metadata accessor for ArtworkImage.ViewModel(0);
  v110 = *(_QWORD *)(v19 - 8);
  v111 = v19;
  __chkstk_darwin(v19);
  v108 = (uint64_t)&v99 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = &v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource];
  swift_beginAccess(&v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource], v113, 0, 0);
  v22 = *(_QWORD *)v21;
  v23 = *((_QWORD *)v21 + 1);
  ObjectType = swift_getObjectType();
  v112 = v22;
  swift_unknownObjectRetain(v22, v25);
  v26 = objc_msgSend(v1, "traitCollection");
  v27 = objc_msgSend(v26, "userInterfaceIdiom");

  if (v27 != (id)6)
    goto LABEL_6;
  v28 = (char *)sub_1007142B4();
  v29 = *(double *)&v28[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics];

  if (qword_10119C730 != -1)
    swift_once(&qword_10119C730, sub_10070E1EC);
  if (*(double *)&qword_10124D850 < v29)
  {
    UIViewController.contentUnavailableConfiguration.getter(v114, *(double *)&qword_10124D850);
    v30 = v115 == 0;
    sub_10004FF60((uint64_t)v114, (uint64_t *)&unk_1011BC800);
  }
  else
  {
LABEL_6:
    v30 = 0;
  }
  (*(void (**)(_BOOL8, uint64_t, uint64_t))(v23 + 376))(v30, ObjectType, v23);
  v31 = objc_msgSend(v1, "traitCollection", swift_unknownObjectRelease(v112).n128_f64[0]);
  v32 = objc_msgSend(v31, "userInterfaceIdiom");

  if (v32 != (id)6)
    return objc_msgSend(*(id *)&v1[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_floatingArtworkContainer], "removeFromSuperview", v33);
  v34 = (char *)sub_1007142B4();
  v35 = *(double *)&v34[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics];

  if (qword_10119C730 != -1)
    swift_once(&qword_10119C730, sub_10070E1EC);
  v33 = *(double *)&qword_10124D850;
  if (*(double *)&qword_10124D850 >= v35)
    return objc_msgSend(*(id *)&v1[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_floatingArtworkContainer], "removeFromSuperview", v33);
  UIViewController.contentUnavailableConfiguration.getter(v114, *(double *)&qword_10124D850);
  v36 = v115;
  sub_10004FF60((uint64_t)v114, (uint64_t *)&unk_1011BC800);
  if (v36)
    return objc_msgSend(*(id *)&v1[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_floatingArtworkContainer], "removeFromSuperview", v33);
  v37 = *(_QWORD *)v21;
  v38 = *((_QWORD *)v21 + 1);
  v39 = swift_getObjectType();
  v114[0] = v37;
  v40 = (uint64_t)v109;
  (*(void (**)(uint64_t, uint64_t))(v38 + 144))(v39, v38);
  v42 = v110;
  v41 = v111;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v110 + 48))(v40, 1, v111) == 1)
  {
    sub_10004FF60(v40, (uint64_t *)&unk_1011A3E10);
    return objc_msgSend(*(id *)&v1[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_floatingArtworkContainer], "removeFromSuperview", v33);
  }
  v44 = v108;
  sub_10005B6C0(v40, v108, type metadata accessor for ArtworkImage.ViewModel);
  v45 = v44;
  v46 = v105;
  sub_10005B704(v45, v105, type metadata accessor for ArtworkImage.ViewModel);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v42 + 56))(v46, 0, 1, v41);
  v47 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v48 = (uint64_t)v106;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v106, 1, 10, v47);
  if (qword_10119C738 != -1)
    swift_once(&qword_10119C738, sub_10070E20C);
  ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(qword_10124D858, 0, qword_10124D858, 0, 0, 1, 2, (uint64_t)v114);
  v49 = v107;
  *(_QWORD *)&v50 = ArtworkImage.Info.init(viewModel:placeholder:aspectRatio:size:corner:)(v46, v48, 0x3FF0000000000000, 0, (uint64_t)v114, 0x4034000000000000, -1, 0, v107).n128_u64[0];
  v51 = *(void **)&v1[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_floatingArtworkContainer];
  v52 = objc_msgSend(v51, "superview", v50);
  v53 = sub_1007142B4();
  v54 = v53;
  if (v52)
  {
    sub_10004A07C(0, (unint64_t *)&qword_1011A20A0, UIView_ptr);
    v55 = v52;
    v56 = static NSObject.== infix(_:_:)(v55, v54);

    if ((v56 & 1) != 0)
    {
      v57 = OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_floatingArtworkDataSource;
      v58 = *(_QWORD *)&v1[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_floatingArtworkDataSource];
      if (v58)
      {
        v59 = v104;
        sub_10005B704(v49, v104, type metadata accessor for ArtworkImage.Info);
        KeyPath = swift_getKeyPath(&unk_100ECC620);
        v61 = swift_getKeyPath(&unk_100ECC648);
        v62 = v100;
        sub_10005B704(v59, v100, type metadata accessor for ArtworkImage.Info);
        swift_retain_n(v58, 2);
        static Published.subscript.setter(v62, v58, KeyPath, v61);
        sub_10005B748(v59, type metadata accessor for ArtworkImage.Info);
        swift_release(v58);
        v63 = *(_QWORD *)&v1[v57];
        if (v63)
        {
          v64 = *(_QWORD *)v21;
          v65 = *((_QWORD *)v21 + 1);
          v66 = swift_getObjectType();
          v112 = v64;
          v67 = *(void (**)(uint64_t, uint64_t, __n128))(v65 + 152);
          v68 = swift_retain(v63);
          v69 = (uint64_t)v103;
          v67(v66, v65, v68);
          v70 = swift_getKeyPath(&unk_100ECC668);
          v71 = swift_getKeyPath(&unk_100ECC690);
          v72 = v99;
          sub_10004A160(v69, v99, &qword_1011BCC50);
          swift_retain(v63);
          static Published.subscript.setter(v72, v63, v70, v71);
          sub_10004FF60(v69, &qword_1011BCC50);
          swift_release(v63);
        }
      }
      v73 = v49;
      goto LABEL_25;
    }
  }
  else
  {

  }
  v74 = v104;
  sub_10005B704(v49, v104, type metadata accessor for ArtworkImage.Info);
  v75 = *(_QWORD *)v21;
  v76 = *((_QWORD *)v21 + 1);
  v77 = swift_getObjectType();
  v112 = v75;
  v78 = (uint64_t)v103;
  (*(void (**)(uint64_t, uint64_t))(v76 + 152))(v77, v76);
  v79 = _s15FloatingArtworkV10DataSourceCMa(0);
  swift_allocObject(v79, *(unsigned int *)(v79 + 48), *(unsigned __int16 *)(v79 + 52));
  v80 = sub_100575E08(v74, v78);
  v81 = *(_QWORD *)v21;
  v82 = *((_QWORD *)v21 + 1);
  v83 = swift_getObjectType();
  v112 = v81;
  v84 = (*(uint64_t (**)(uint64_t, uint64_t))(v82 + 248))(v83, v82);
  v86 = v85;
  v87 = *(_QWORD *)&v1[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_floatingArtworkDataSource];
  *(_QWORD *)&v1[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_floatingArtworkDataSource] = v80;
  swift_retain(v80);
  swift_release(v87);
  v88 = sub_1007142B4();
  sub_100711D44(v88);

  objc_msgSend(v51, "frame");
  objc_msgSend(v51, "setFrame:");
  v89 = sub_100048748((unint64_t *)&unk_1011C5C20, _s15FloatingArtworkV10DataSourceCMa, (uint64_t)&unk_100EC18B0);
  swift_retain(v80);
  v91 = ObservedObject.init(wrappedValue:)(v90, v79, v89);
  v92 = v102;
  *v102 = v91;
  v92[1] = v93;
  v92[2] = v84;
  v92[3] = v86;
  v94 = (uint64_t *)((char *)v92 + *(int *)(v101 + 24));
  *v94 = swift_getKeyPath(&unk_100ECC5F0);
  v95 = sub_100007E8C((uint64_t *)&unk_1011D0D50);
  swift_storeEnumTagMultiPayload(v94, v95, 0);
  v96 = objc_allocWithZone((Class)sub_100007E8C((uint64_t *)&unk_1011C5C30));
  v97 = (void *)_UIHostingView.init(rootView:)(v92);
  UIView.addSubviewAnchoredToBounds(_:useLayoutMarginsGuide:padding:)(v97);

  v98 = sub_1007142B4();
  objc_msgSend(v98, "_addContentSubview:atBack:", v51, 1);

  swift_release(v80);
  v73 = v49;
LABEL_25:
  sub_10005B748(v73, type metadata accessor for ArtworkImage.Info);
  return (id)sub_10005B748(v108, type metadata accessor for ArtworkImage.ViewModel);
}

id sub_100711D44(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  char v8;
  char v9;
  double v10;
  uint64_t v11;
  void *v12;
  double v13;
  double v14;
  double v15;
  double v16;
  id v17;
  double v18;
  double v19;
  void *v20;
  char *v21;
  double v22;
  _BYTE v24[24];

  v2 = v1;
  v4 = v1 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource;
  swift_beginAccess(v4, v24, 0, 0);
  v5 = *(_QWORD *)(v4 + 8);
  ObjectType = swift_getObjectType();
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 336))(10, ObjectType, v5);
  v9 = v8;
  v10 = 0.0;
  if ((v8 & 1) == 0)
  {
    v11 = v7;
    v12 = (void *)sub_10071346C();
    objc_msgSend(v12, "_contentFrameForSection:", v11);
    v14 = v13;

    if (qword_10119C738 != -1)
      swift_once(&qword_10119C738, sub_10070E20C);
    if (v14 >= *(double *)&qword_10124D858)
      v10 = v14;
    else
      v10 = *(double *)&qword_10124D858;
  }
  objc_msgSend(a1, "contentOffset");
  v16 = v15;
  v17 = objc_msgSend(a1, "safeAreaInsets");
  v19 = v16 + v18;
  if ((v9 & 1) == 0)
  {
    if (qword_10119C738 != -1)
      v17 = (id)swift_once(&qword_10119C738, sub_10070E20C);
    if (v10 < v19 + *(double *)&qword_10124D858)
      v19 = v10 - *(double *)&qword_10124D858;
  }
  if (v19 <= 0.0)
    v19 = 0.0;
  v20 = *(void **)(v2 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_floatingArtworkContainer);
  v21 = (char *)sub_1007142B4(v17);
  v22 = *(double *)&v21[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics + 16];

  objc_msgSend(v20, "frame");
  return objc_msgSend(v20, "setFrame:", v22, v19);
}

uint64_t sub_100711F04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v1 = OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___relatedContentSpacingData;
  v2 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___relatedContentSpacingData);
  if (v2)
  {
    v3 = *(_QWORD *)(v0
                   + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___relatedContentSpacingData);
  }
  else
  {
    v4 = type metadata accessor for RelatedContentSpacing.Data(0);
    v3 = swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
    v7 = 0;
    Published.init(initialValue:)(&v7, &type metadata for CGFloat);
    v5 = *(_QWORD *)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v3;
    swift_retain(v3);
    swift_release(v5);
    v2 = 0;
  }
  swift_retain(v2);
  return v3;
}

uint64_t sub_100711F9C(uint64_t a1)
{
  _BYTE *v1;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t ObjectType;
  _BYTE v10[24];

  v3 = &v1[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_relatedContentState];
  swift_beginAccess(&v1[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_relatedContentState], v10, 33, 0);
  v4 = type metadata accessor for RelatedContentProvider.State(0);
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 24))(v3, a1, v4);
  swift_endAccess(v10);
  v1[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_includeRelatedContentOnNextReload] = 1;
  if (objc_msgSend(v1, "isViewLoaded"))
  {
    v6 = &v1[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource];
    swift_beginAccess(v6, v10, 0, 0);
    v7 = *((_QWORD *)v6 + 1);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v7 + 320))(ObjectType, v7);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
}

uint64_t sub_100712090()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  __n128 v9;
  void (*v10)(char *, char *, uint64_t, __n128);
  int v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char *v25;
  NSObject *v26;
  __n128 v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint8_t *v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40[24];

  v1 = type metadata accessor for RelatedContentProvider.State(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v35 - v6;
  v8 = &v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_relatedContentState];
  v9 = swift_beginAccess(&v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_relatedContentState], v40, 0, 0);
  v10 = *(void (**)(char *, char *, uint64_t, __n128))(v2 + 16);
  v10(v7, v8, v1, v9);
  v11 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v7, v1);
  if (v11 == enum case for RelatedContentProvider.State.loaded(_:))
  {
    (*(void (**)(char *, uint64_t))(v2 + 96))(v7, v1);
    return *(_QWORD *)v7;
  }
  else
  {
    if (v11 == enum case for RelatedContentProvider.State.error(_:))
    {
      (*(void (**)(char *, uint64_t))(v2 + 96))(v7, v1);
      v13 = *(_QWORD *)v7;
      if (qword_10119C740 != -1)
        swift_once(&qword_10119C740, sub_100716478);
      v14 = type metadata accessor for Logger(0);
      sub_100048B14(v14, (uint64_t)qword_10124D860);
      swift_errorRetain(v13);
      v15 = swift_errorRetain(v13);
      v16 = Logger.logObject.getter(v15);
      v17 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v16, v17))
      {
        v18 = (uint8_t *)swift_slowAlloc(12, -1);
        v19 = swift_slowAlloc(32, -1);
        v38 = v13;
        v39 = v19;
        *(_DWORD *)v18 = 136446210;
        swift_errorRetain(v13);
        v20 = sub_100007E8C(&qword_1011A14B0);
        v21 = String.init<A>(describing:)(&v38, v20);
        v23 = v22;
        v38 = sub_100322200(v21, v22, &v39);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39);
        swift_bridgeObjectRelease(v23);
        swift_errorRelease(v13);
        swift_errorRelease(v13);
        _os_log_impl((void *)&_mh_execute_header, v16, v17, "Related content token failed to load with error=%{public}s", v18, 0xCu);
        swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v19, -1, -1);
        swift_slowDealloc(v18, -1, -1);

        swift_errorRelease(v13);
      }
      else
      {
        swift_errorRelease(v13);
        swift_errorRelease(v13);
        swift_errorRelease(v13);

      }
    }
    else if (v11 != enum case for RelatedContentProvider.State.loading(_:))
    {
      if (qword_10119C740 != -1)
        swift_once(&qword_10119C740, sub_100716478);
      v24 = type metadata accessor for Logger(0);
      sub_100048B14(v24, (uint64_t)qword_10124D860);
      v25 = v0;
      v26 = Logger.logObject.getter(v25);
      v28 = static os_log_type_t.fault.getter(v27);
      if (os_log_type_enabled(v26, v28))
      {
        v29 = (uint8_t *)swift_slowAlloc(12, -1);
        v37 = swift_slowAlloc(32, -1);
        v39 = v37;
        v36 = v29;
        *(_DWORD *)v29 = 136446210;
        v35 = v29 + 4;
        ((void (*)(char *, char *, uint64_t))v10)(v5, v8, v1);
        v30 = String.init<A>(describing:)(v5, v1);
        v32 = v31;
        v38 = sub_100322200(v30, v31, &v39);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39);

        swift_bridgeObjectRelease(v32);
        v33 = v36;
        _os_log_impl((void *)&_mh_execute_header, v26, v28, "Unhandled state=%{public}s", v36, 0xCu);
        v34 = v37;
        swift_arrayDestroy(v37, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v34, -1, -1);
        swift_slowDealloc(v33, -1, -1);

      }
      else
      {

      }
      (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
    }
    return 0;
  }
}

double sub_1007124FC()
{
  char *v0;
  void *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  double result;
  char v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  _QWORD aBlock[5];
  uint64_t v17;
  char v18[24];

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource];
  swift_beginAccess(v2, v18, 0, 0);
  v3 = *(_QWORD *)v2;
  v4 = *((_QWORD *)v2 + 1);
  ObjectType = swift_getObjectType();
  aBlock[0] = v3;
  v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 336))(10, ObjectType, v4);
  if ((v8 & 1) == 0)
  {
    v9 = v6;
    v10 = sub_1007142B4();
    v11 = swift_allocObject(&unk_1010D8780, 32, 7);
    *(_QWORD *)(v11 + 16) = v1;
    *(_QWORD *)(v11 + 24) = v9;
    v12 = swift_allocObject(&unk_1010D87A8, 32, 7);
    *(_QWORD *)(v12 + 16) = sub_10071A414;
    *(_QWORD *)(v12 + 24) = v11;
    aBlock[4] = sub_10010942C;
    v17 = v12;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10046D7B4;
    aBlock[3] = &unk_1010D87C0;
    v13 = _Block_copy(aBlock);
    v14 = v17;
    v15 = v1;
    objc_msgSend(v10, "performBatchUpdates:completion:", v13, 0, swift_release(v14).n128_f64[0]);
    _Block_release(v13);

    *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  }
  return result;
}

void sub_100712648(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSIndexSet *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  char v22[24];

  v4 = type metadata accessor for IndexSet(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v22[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = (uint64_t *)(a1 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource);
  swift_beginAccess(a1 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource, v22, 0, 0);
  v9 = *v8;
  v10 = v8[1];
  ObjectType = swift_getObjectType();
  v21 = v9;
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v10 + 184))(ObjectType, v10) & 1) != 0)
  {
    if ((*(_BYTE *)(a1 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_isShowingRelatedContent) & 1) != 0)
      return;
    *(_BYTE *)(a1 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_isShowingRelatedContent) = 1;
  }
  else
  {
    if (!*(_BYTE *)(a1 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_isShowingRelatedContent))
      return;
    *(_BYTE *)(a1 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_isShowingRelatedContent) = 0;
  }
  v12 = sub_1007142B4();
  v13 = sub_100007E8C(&qword_1011BC9F0);
  v14 = swift_allocObject(v13, 40, 7);
  *(_OWORD *)(v14 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v14 + 32) = a2;
  v21 = v14;
  v15 = sub_100048748((unint64_t *)&unk_1011BC7E0, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet, (uint64_t)&protocol conformance descriptor for IndexSet);
  v16 = sub_100007E8C(&qword_1011BC9F8);
  v17 = sub_100049F28(&qword_1011BCA00, &qword_1011BC9F8, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v21, v16, v17, v4, v15);
  IndexSet._bridgeToObjectiveC()(v18);
  v20 = v19;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  objc_msgSend(v12, "reloadSections:", v20);

}

void sub_100712804()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  char *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE v51[24];
  __int128 v52;
  __int128 v53;
  void *v54;
  _BYTE v55[24];

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011A08F0);
  __chkstk_darwin(v2);
  v4 = &v51[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = sub_100007E8C(&qword_1011C5BF0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v51[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = sub_100007E8C((uint64_t *)&unk_1011C5BF8);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v51[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  LOBYTE(v52) = 6;
  v13 = sub_10004D63C();
  if ((FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v13) & 1) != 0)
  {
    v50 = v10;
    v14 = (uint64_t *)(v0 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource);
    swift_beginAccess(v0 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource, v55, 0, 0);
    v15 = *v14;
    v16 = v14[1];
    ObjectType = swift_getObjectType();
    *(_QWORD *)&v52 = v15;
    v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 176))(ObjectType, v16);
    swift_release(v18);
    if (v18)
    {
      v19 = *v14;
      v20 = v14[1];
      v21 = swift_getObjectType();
      *(_QWORD *)&v52 = v19;
      v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 176))(v21, v20);
      if (v22)
      {
        v23 = v22;
        dispatch thunk of RelatedContentProvider.$state.getter();
        swift_release(v23);
        v24 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
        *(_QWORD *)&v52 = static OS_dispatch_queue.main.getter(v24, v25, v26, v27, v28, v29, v30, v31);
        v32 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
        (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v4, 1, 1, v32);
        v33 = sub_100049F28(&qword_1011C5C08, &qword_1011C5BF0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
        v34 = sub_1000EA1BC((unint64_t *)&qword_1011A89B0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
        Publisher.receive<A>(on:options:)(&v52, v4, v5, v24, v33, v34);
        sub_10004FF60((uint64_t)v4, &qword_1011A08F0);

        (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
        v35 = swift_allocObject(&unk_1010D8488, 24, 7);
        swift_unknownObjectWeakInit(v35 + 16, v1);
        v36 = sub_100049F28((unint64_t *)&unk_1011C5C10, (uint64_t *)&unk_1011C5BF8, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
        v37 = Publisher<>.sink(receiveValue:)(sub_10071A3E8, v35, v9, v36);
        v38 = swift_release(v35);
        (*(void (**)(_BYTE *, uint64_t, __n128))(v50 + 8))(v12, v9, v38);
        *((_QWORD *)&v53 + 1) = type metadata accessor for AnyCancellable(0);
        v54 = &protocol witness table for AnyCancellable;
        *(_QWORD *)&v52 = v37;
      }
      else
      {
        v54 = 0;
        v52 = 0u;
        v53 = 0u;
      }
      v49 = v1 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_relatedContentStateSubscription;
      swift_beginAccess(v49, v51, 33, 0);
      sub_1000A5508((uint64_t)&v52, v49, (uint64_t *)&unk_1011A3850);
      swift_endAccess(v51);
    }
  }
  else
  {
    v39 = OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_detailComponentController;
    v40 = *(char **)(v0 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_detailComponentController);
    if (v40)
      goto LABEL_7;
    v41 = (uint64_t *)(v0 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource);
    swift_beginAccess(v1 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource, v55, 0, 0);
    v42 = *v41;
    v43 = v41[1];
    v44 = swift_getObjectType();
    *(_QWORD *)&v52 = v42;
    v45 = (*(uint64_t (**)(uint64_t, uint64_t))(v43 + 368))(v44, v43);
    v46 = *(void **)(v1 + v39);
    *(_QWORD *)(v1 + v39) = v45;

    v40 = *(char **)(v1 + v39);
    if (v40)
    {
LABEL_7:
      v47 = *(_QWORD *)&v40[OBJC_IVAR____TtC11MusicJSCore36JSContainerDetailComponentController_containerDetail]
          + OBJC_IVAR____TtC11MusicJSCore17JSContainerDetail_containerDetailDelegate;
      swift_beginAccess(v47, &v52, 1, 0);
      *(_QWORD *)(v47 + 8) = &off_1010D8418;
      swift_unknownObjectWeakAssign(v47, v1);
      v48 = v40;
      JSComponentController.loadIfNeeded()();

    }
  }
}

void sub_100712C20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t Strong;
  void *v9;
  _BYTE v11[24];

  v4 = type metadata accessor for RelatedContentProvider.State(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v9 = (void *)Strong;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    sub_100711F9C((uint64_t)v7);

  }
}

_QWORD *sub_100712CDC()
{
  char *v0;
  uint64_t v1;
  _QWORD *v2;
  char *v3;
  char *v4;
  id v5;
  uint64_t v6;

  v1 = OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___impressionsTracker;
  if (*(_QWORD *)&v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___impressionsTracker])
  {
    v2 = *(_QWORD **)&v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___impressionsTracker];
  }
  else
  {
    v3 = v0;
    v4 = v0;
    v5 = sub_1007142B4();
    v6 = sub_100007E8C(&qword_1011C5AC8);
    swift_allocObject(v6, 208, 7);
    v2 = sub_10070A6E4(v4, v5, 1, 0);
    *(_QWORD *)&v3[v1] = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_100712D80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  uint64_t (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v32[3];
  char v33[24];
  char v34[24];

  v3 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v3);
  v5 = (char *)&v32[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011A2170);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v32[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011C5BA8);
  __chkstk_darwin(v10);
  v12 = (char *)&v32[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v32[-1] - v14;
  v16 = v1 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___pageProperties;
  swift_beginAccess(v1 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___pageProperties, v34, 0, 0);
  sub_10004A160(v16, (uint64_t)v15, &qword_1011C5BA8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v15, 1, v6) == 1)
  {
    sub_10004FF60((uint64_t)v15, &qword_1011C5BA8);
    v17 = (uint64_t *)(v1 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource);
    swift_beginAccess(v17, v33, 0, 0);
    v18 = a1;
    v19 = *v17;
    v20 = v17[1];
    ObjectType = swift_getObjectType();
    v32[0] = v19;
    v22 = *(uint64_t (**)(uint64_t, uint64_t))(v20 + 40);
    v23 = v20;
    a1 = v18;
    v24 = v22(ObjectType, v23);
    if (v25)
      v26 = v24;
    else
      v26 = 0x497972617262696CLL;
    if (v25)
      v27 = v25;
    else
      v27 = 0xEB000000006D6574;
    v28 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v5, 1, 1, v28);
    MetricsPageProperties.init(pageIdentifier:pageType:pageURL:pageDetails:extRefUrl:)(v26, v27, 0x656E6961746E6F43, 0xEF6C696174654472, (uint64_t)v5, 0, 0, 0, v9);
    v29 = type metadata accessor for MetricsPageProperties(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v9, 0, 1, v29);
    sub_10004A160((uint64_t)v9, (uint64_t)v12, (uint64_t *)&unk_1011A2170);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v12, 0, 1, v6);
    swift_beginAccess(v16, v32, 33, 0);
    sub_1000A5508((uint64_t)v12, v16, &qword_1011C5BA8);
    swift_endAccess(v32);
    v15 = v9;
  }
  return sub_100065228((uint64_t)v15, a1, (uint64_t *)&unk_1011A2170);
}

double sub_100713058(_QWORD *a1)
{
  char *v1;
  _QWORD *v3;
  char v4;
  double v5;
  char *v6;
  uint64_t v7;
  uint64_t ObjectType;
  double result;
  char v10[24];

  v3 = *(_QWORD **)&v1[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_relatedContent];
  *(_QWORD *)&v1[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_relatedContent] = a1;
  swift_bridgeObjectRetain();
  v4 = sub_1002ECFBC(v3, a1);
  *(_QWORD *)&v5 = swift_bridgeObjectRelease().n128_u64[0];
  if ((v4 & 1) != 0 || !objc_msgSend(v1, "isViewLoaded", v5))
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  else
  {
    v6 = &v1[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource];
    swift_beginAccess(v6, v10, 0, 0);
    v7 = *((_QWORD *)v6 + 1);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v7 + 320))(ObjectType, v7);
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  return result;
}

uint64_t sub_100713128()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  v1 = v0;
  v2 = OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___popoverProvider;
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___popoverProvider);
  v4 = v3;
  if (v3 == 1)
  {
    v5 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    sub_100794B44();
    v7 = v6;

    v8 = *(_QWORD *)(v7 + 16);
    if (v8)
    {
      swift_retain(*(_QWORD *)(v7 + 16));
      v9 = sub_100041ADC((uint64_t)_swiftEmptyArrayStorage);
      v4 = MusicPageProvider.popoverProvider(context:)();
      swift_release(v7);
      swift_release(v8);
      swift_bridgeObjectRelease(v9);
    }
    else
    {
      swift_release(v7);
      v4 = 0;
    }
    v10 = *(_QWORD *)(v1 + v2);
    *(_QWORD *)(v1 + v2) = v4;
    swift_retain(v4);
    sub_1004CB930(v10);
  }
  sub_1004CB940(v3);
  return v4;
}

void sub_10071323C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  void (*v16)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  id *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[3];
  _BYTE v39[24];
  char v40[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v40, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (char *)Strong;
    v5 = *(_QWORD *)(Strong + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_detailComponentController);
    if (!v5)
    {
LABEL_11:

      return;
    }
    v6 = (char *)objc_retain(*(id *)(v5
                                   + OBJC_IVAR____TtC11MusicJSCore36JSContainerDetailComponentController_containerDetail));
    v7 = JSContainerDetail.containerStoreID.getter();
    if (!v8)
    {
LABEL_10:

      goto LABEL_11;
    }
    v9 = MusicItemID.init(_:)(v7, v8);
    v11 = v10;
    v12 = &v4[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource];
    swift_beginAccess(&v4[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource], v39, 33, 0);
    v13 = *(_QWORD *)v12;
    v14 = *((_QWORD *)v12 + 1);
    ObjectType = swift_getObjectType();
    v38[0] = v13;
    v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 48);
    swift_unknownObjectRetain(v13, v17);
    v16(v9, v11, ObjectType, v14);
    v18 = *(_QWORD *)v12;
    *(_QWORD *)v12 = v38[0];
    *((_QWORD *)v12 + 1) = v14;
    swift_endAccess(v39);
    swift_unknownObjectRelease(v18);
    v19 = (id *)&v6[OBJC_IVAR____TtC11MusicJSCore17JSContainerDetail_prominentItemIdentifiers];
    swift_beginAccess(&v6[OBJC_IVAR____TtC11MusicJSCore17JSContainerDetail_prominentItemIdentifiers], v39, 0, 0);
    if (*v19)
    {
      v20 = *v19;
      v21 = MPIdentifierSet.bestStoreIdentifier.getter();
      v23 = v22;

      if (v23)
      {
        v23 = MusicItemID.init(_:)(v21, v23);
        v25 = v24;
LABEL_9:
        swift_beginAccess(v12, v38, 33, 0);
        v26 = *(_QWORD *)v12;
        v27 = *((_QWORD *)v12 + 1);
        v28 = swift_getObjectType();
        v37 = v26;
        v29 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 72);
        swift_unknownObjectRetain(v26, v30);
        v29(v23, v25, v28, v27);
        v31 = *(_QWORD *)v12;
        *(_QWORD *)v12 = v37;
        *((_QWORD *)v12 + 1) = v27;
        swift_endAccess(v38);
        swift_unknownObjectRelease(v31);
        v33 = *(_QWORD *)v12;
        v32 = *((_QWORD *)v12 + 1);
        v34 = swift_getObjectType();
        v38[0] = v33;
        v35 = *(void (**)(uint64_t, uint64_t))(v32 + 296);
        swift_unknownObjectRetain(v33, v36);
        v35(v34, v32);
        swift_unknownObjectRelease(v33);
        goto LABEL_10;
      }
    }
    else
    {
      v23 = 0;
    }
    v25 = 0;
    goto LABEL_9;
  }
}

id sub_10071346C()
{
  return sub_10012CF24(&OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___collectionViewLayout, (uint64_t (*)(uint64_t))sub_100713480);
}

char *sub_100713480(void *a1)
{
  id v2;
  uint64_t v3;
  id v4;
  void *v5;
  char *v6;
  id v7;
  id v8;
  uint64_t v9;
  void (**v10)(void *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[5];
  uint64_t v15;

  v2 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewCompositionalLayoutConfiguration), "init");
  v3 = swift_allocObject(&unk_1010D8488, 24, 7);
  swift_unknownObjectWeakInit(v3 + 16, a1);
  v4 = objc_allocWithZone((Class)type metadata accessor for ContainerDetailCompositionalLayout());
  v14[4] = sub_100719364;
  v15 = v3;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = sub_1008E31AC;
  v14[3] = &unk_1010D85B8;
  v5 = _Block_copy(v14);
  v6 = (char *)objc_msgSend(v4, "initWithSectionProvider:configuration:", v5, v2, swift_retain(v3).n128_f64[0]);
  _Block_release(v5);
  swift_release(v15);
  v7 = objc_msgSend(a1, "traitCollection", swift_release(v3).n128_f64[0]);
  v8 = objc_msgSend(v7, "userInterfaceIdiom");

  if (v8 == (id)6)
  {
    v9 = swift_allocObject(&unk_1010D8488, 24, 7);
    swift_unknownObjectWeakInit(v9 + 16, a1);
    v10 = (void (**)(void *, uint64_t))&v6[OBJC_IVAR____TtC5Music34ContainerDetailCompositionalLayout_willLayoutAttributes];
    v11 = *(_QWORD *)&v6[OBJC_IVAR____TtC5Music34ContainerDetailCompositionalLayout_willLayoutAttributes];
    v12 = *(_QWORD *)&v6[OBJC_IVAR____TtC5Music34ContainerDetailCompositionalLayout_willLayoutAttributes + 8];
    *v10 = sub_10071936C;
    v10[1] = (void (*)(void *, uint64_t))v9;
    swift_retain(v9);
    sub_10004BA30(v11, v12);
    swift_release(v9);
  }

  return v6;
}

void *sub_10071361C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t Strong;
  char *v19;
  id v20;
  double v21;
  double v22;
  char v23;
  double v24;
  id v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t ObjectType;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  char *v35;
  void (*v36)(_QWORD *, _QWORD);
  void (*v37)(_QWORD *, _QWORD);
  void *v38;
  id v39;
  void *v40;
  void (*v41)(char *, uint64_t);
  id v42;
  void *v43;
  id v44;
  double v45;
  id v46;
  double v47;
  double v48;
  char v49;
  id v51;
  void *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  _QWORD v58[4];
  char v59[24];
  char v60[32];

  v57 = a1;
  v5 = type metadata accessor for UIListSeparatorConfiguration.Visibility(0);
  v54 = *(_QWORD *)(v5 - 8);
  v55 = v5;
  __chkstk_darwin(v5);
  v56 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for UICollectionLayoutListConfiguration(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v51 - v16;
  a3 += 16;
  swift_beginAccess(a3, v60, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a3);
  if (Strong)
  {
    v19 = (char *)Strong;
    v20 = objc_msgSend(a2, "container");
    objc_msgSend(v20, "effectiveContentSize");
    v22 = v21;
    swift_unknownObjectRelease(v20);
    v23 = HI.SizeClass.init(_:)(v22);
    v24 = HI.SizeClass.margin.getter(v23);
    v52 = a2;
    v25 = objc_msgSend(a2, "traitCollection");
    objc_msgSend(v25, "horizontalSizeClass");
    objc_msgSend(v25, "horizontalSizeClass", v25);
    v53 = v19;
    v26 = &v19[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource];
    swift_beginAccess(&v19[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource], v59, 0, 0);
    v27 = *(_QWORD *)v26;
    v28 = *((_QWORD *)v26 + 1);
    ObjectType = swift_getObjectType();
    v58[0] = v27;
    v57 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 328))(v57, ObjectType, v28);
    LODWORD(v28) = v57;
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for UICollectionLayoutListConfiguration.Appearance.plain(_:), v7);
    UICollectionLayoutListConfiguration.init(appearance:)(v10);
    v30 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    UICollectionLayoutListConfiguration.backgroundColor.setter(v30);
    v31 = v11;
    if ((_DWORD)v28 != 11)
      __asm { BR              X10 }
    v32 = enum case for UIListSeparatorConfiguration.Visibility.hidden(_:);
    v33 = v55;
    v34 = *(void (**)(char *, uint64_t, uint64_t))(v54 + 104);
    v35 = v56;
    v34(v56, enum case for UIListSeparatorConfiguration.Visibility.hidden(_:), v55);
    v36 = (void (*)(_QWORD *, _QWORD))UICollectionLayoutListConfiguration.separatorConfiguration.modify(v58);
    UIListSeparatorConfiguration.topSeparatorVisibility.setter(v35);
    v36(v58, 0);
    v34(v35, v32, v33);
    v37 = (void (*)(_QWORD *, _QWORD))UICollectionLayoutListConfiguration.separatorConfiguration.modify(v58);
    UIListSeparatorConfiguration.bottomSeparatorVisibility.setter(v35);
    v37(v58, 0);
    v39 = v51;
    v38 = v52;
    objc_msgSend(v51, "userInterfaceIdiom");
    sub_10004A07C(0, (unint64_t *)&unk_1011B5670, NSCollectionLayoutSection_ptr);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v17, v15, v31);
    v40 = (void *)static NSCollectionLayoutSection.list(using:layoutEnvironment:)(v17, v38);
    v41 = *(void (**)(char *, uint64_t))(v12 + 8);
    v41(v17, v31);
    v42 = objc_msgSend(v38, "traitCollection");
    v43 = v38;
    v44 = objc_msgSend(v42, "userInterfaceIdiom");

    v45 = 0.0;
    if (v44 == (id)6)
    {
      v46 = objc_msgSend(v43, "container");
      objc_msgSend(v46, "effectiveContentSize");
      v48 = v47;
      swift_unknownObjectRelease(v46);
      if (qword_10119C730 != -1)
        swift_once(&qword_10119C730, sub_10070E1EC);
      v49 = v57;
      if (*(double *)&qword_10124D850 < v48)
      {
        if (qword_10119C738 != -1)
          swift_once(&qword_10119C738, sub_10070E20C);
        v45 = v24 + *(double *)&qword_10124D858;
      }
    }
    else
    {
      v49 = v57;
    }
    if (v49 != 11)
      __asm { BR              X10 }
    objc_msgSend(v40, "setContentInsets:", 0.0, v24 + v45, 0.0, v24);

    v41(v15, v31);
  }
  else
  {
    sub_10004A07C(0, (unint64_t *)&unk_1011B5670, NSCollectionLayoutSection_ptr);
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for UICollectionLayoutListConfiguration.Appearance.plain(_:), v7);
    UICollectionLayoutListConfiguration.init(appearance:)(v10);
    v40 = (void *)static NSCollectionLayoutSection.list(using:layoutEnvironment:)(v17, a2);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  }
  return v40;
}

uint64_t sub_100713F18(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  _BYTE v13[24];
  _BYTE v14[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (!Strong)
    return 0;
  v5 = (void *)Strong;
  v6 = (uint64_t *)(Strong + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource);
  swift_beginAccess(Strong + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource, v13, 0, 0);
  v8 = *v6;
  v7 = v6[1];
  swift_unknownObjectRetain(v8, v9);

  ObjectType = swift_getObjectType();
  v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 344))(a1, ObjectType, v7);
  swift_unknownObjectRelease(v8);
  return v11;
}

uint64_t sub_100713FD8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  _BYTE v13[24];
  _BYTE v14[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (!Strong)
    return 0;
  v5 = (void *)Strong;
  v6 = (uint64_t *)(Strong + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource);
  swift_beginAccess(Strong + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource, v13, 0, 0);
  v8 = *v6;
  v7 = v6[1];
  swift_unknownObjectRetain(v8, v9);

  ObjectType = swift_getObjectType();
  v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 352))(a1, ObjectType, v7);
  swift_unknownObjectRelease(v8);
  return v11;
}

void sub_100714098(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  char *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  char *v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  uint64_t v24;
  double v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t KeyPath;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[24];
  _BYTE v33[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v33, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (char *)Strong;
    v7 = (uint64_t *)(Strong + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource);
    swift_beginAccess(Strong + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource, v32, 0, 0);
    v8 = *v7;
    v9 = v7[1];
    ObjectType = swift_getObjectType();
    v31 = v8;
    v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 336))(10, ObjectType, v9);
    if ((v12 & 1) != 0)
      goto LABEL_17;
    v13 = v11;
    v14 = IndexPath.section.getter(v11);
    if (v13 != v14 || IndexPath.item.getter(v14) || !a1)
      goto LABEL_17;
    v15 = a1;
    v16 = (void *)sub_1007142B4(v15);
    sub_100711D44(v16);

    v18 = (char *)sub_1007142B4(v17);
    v19 = *(double *)&v18[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics];

    if (qword_10119C730 != -1)
      swift_once(&qword_10119C730, sub_10070E1EC);
    if (*(double *)&qword_10124D850 >= v19)
      goto LABEL_14;
    if (qword_10119C738 != -1)
      swift_once(&qword_10119C738, sub_10070E20C);
    v20 = *(double *)&qword_10124D858;
    objc_msgSend(v15, "frame");
    if (v21 >= v20)
    {
LABEL_14:
      v24 = OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_relatedContentLeadingPadding;
      v26 = *(double *)&v6[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_relatedContentLeadingPadding];
      *(_QWORD *)&v6[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_relatedContentLeadingPadding] = 0;
      if (v26 != 0.0)
      {
LABEL_15:
        v27 = sub_100711F04();
        v28 = *(_QWORD *)&v6[v24];
        KeyPath = swift_getKeyPath(&unk_100ECC5A8);
        v30 = swift_getKeyPath(&unk_100ECC5D0);
        v31 = v28;
        static Published.subscript.setter(&v31, v27, KeyPath, v30);
      }
    }
    else
    {
      objc_msgSend(v15, "frame");
      v23 = v20 - v22;
      v24 = OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_relatedContentLeadingPadding;
      v25 = *(double *)&v6[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_relatedContentLeadingPadding];
      *(double *)&v6[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_relatedContentLeadingPadding] = v23;
      if (v25 != v23)
        goto LABEL_15;
    }

LABEL_17:
  }
}

id sub_1007142B4()
{
  return sub_10012CF24(&OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___collectionView, (uint64_t (*)(uint64_t))sub_1007142C8);
}

char *sub_1007142C8(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  unint64_t v13;
  char *v14;
  uint64_t v15;
  double (**v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  _BYTE v21[24];

  v2 = sub_10071346C();
  v3 = objc_allocWithZone((Class)type metadata accessor for HIMetricsCollectionView());
  v4 = sub_1001089FC(v2, 0, 0);
  v5 = (_QWORD *)(a1 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource);
  swift_beginAccess(a1 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource, v21, 0, 0);
  v6 = *v5;
  v7 = v5[1];
  ObjectType = swift_getObjectType();
  v20 = v6;
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 240))(ObjectType, v7);
  v11 = v10;
  v12 = UIView.withAccessibilityIdentifier(_:)(v9, v10);
  swift_bridgeObjectRelease(v11);

  objc_msgSend(v12, "setDataSource:", *v5);
  objc_msgSend(v12, "setDelegate:", *v5);
  objc_msgSend(v12, "setPrefetchDataSource:", *v5);
  objc_msgSend(v12, "setAlwaysBounceVertical:", 1);
  objc_msgSend(v12, "setKeyboardDismissMode:", 1);
  objc_msgSend(v12, "setAllowsFocus:", 1);
  objc_msgSend(v12, "setRemembersLastFocusedIndexPath:", 1);
  LOBYTE(v20) = 0;
  v13 = sub_10004D63C();
  v14 = (char *)v12;
  objc_msgSend(v14, "setAllowsMultipleSelection:", FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v13) & 1, v20);

  v15 = swift_allocObject(&unk_1010D8488, 24, 7);
  swift_unknownObjectWeakInit(v15 + 16, a1);
  v16 = (double (**)(uint64_t, uint64_t))&v14[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metricsDidUpdate];
  v17 = *(_QWORD *)&v14[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metricsDidUpdate];
  v18 = *(_QWORD *)&v14[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metricsDidUpdate + 8];
  *v16 = sub_10071935C;
  v16[1] = (double (*)(uint64_t, uint64_t))v15;
  sub_10004BA30(v17, v18);
  return v14;
}

double sub_1007144A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  double result;
  void *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  _BYTE v13[24];
  _BYTE v14[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v7 = (void *)Strong;
    v8 = (uint64_t *)(Strong + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource);
    swift_beginAccess(Strong + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource, v13, 0, 0);
    v10 = *v8;
    v9 = v8[1];
    swift_unknownObjectRetain(v10, v11);

    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 312))(a2, ObjectType, v9);
    *(_QWORD *)&result = swift_unknownObjectRelease(v10).n128_u64[0];
  }
  return result;
}

void sub_100714554()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  Class isa;
  id v25;
  Class v26;
  _QWORD v27[3];
  _BYTE v28[24];

  v1 = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  __chkstk_darwin(v2);
  v4 = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)&v7 = __chkstk_darwin(v5).n128_u64[0];
  v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_hasScrolledtoProminentItem;
  if ((v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_hasScrolledtoProminentItem] & 1) == 0
    && objc_msgSend(v0, "isViewLoaded", v7))
  {
    v11 = (uint64_t *)&v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource];
    swift_beginAccess(&v1[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource], v28, 0, 0);
    v12 = *v11;
    v13 = v11[1];
    ObjectType = swift_getObjectType();
    v27[2] = v12;
    (*(void (**)(uint64_t, uint64_t))(v13 + 120))(ObjectType, v13);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_10004FF60((uint64_t)v4, (uint64_t *)&unk_1011A3D50);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v4, v5);
      v15 = sub_1007142B4();
      v16 = objc_msgSend(v15, "indexPathsForVisibleItems");

      v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v16, v5);
      __chkstk_darwin(v18);
      v27[-2] = v9;
      LOBYTE(v16) = sub_10091FF08((uint64_t (*)(char *))sub_100719340, (_BOOL8)&v27[-4], v17);
      swift_bridgeObjectRelease(v17);
      if ((v16 & 1) != 0)
      {
        v19 = sub_1007142B4();
        v20 = sub_100007E8C((uint64_t *)&unk_1011A9B60);
        v21 = *(unsigned __int8 *)(v6 + 80);
        v22 = (v21 + 32) & ~v21;
        v23 = swift_allocObject(v20, v22 + *(_QWORD *)(v6 + 72), v21 | 7);
        *(_OWORD *)(v23 + 16) = xmmword_100EA7AA0;
        (*(void (**)(uint64_t, char *, uint64_t))(v6 + 16))(v23 + v22, v9, v5);
        isa = Array._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v19, "reloadItemsAtIndexPaths:", isa, swift_bridgeObjectRelease(v23).n128_f64[0]);

      }
      v25 = sub_1007142B4();
      v26 = IndexPath._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v25, "scrollToItemAtIndexPath:atScrollPosition:animated:", v26, 2, 1);

      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      v1[v10] = 1;
    }
  }
}

double sub_10071481C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double result;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44[3];

  v1 = sub_100007E8C(&qword_1011A08F0);
  __chkstk_darwin(v1);
  v3 = (char *)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_1011C5B28);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C((uint64_t *)&unk_1011C5B30);
  v9 = __chkstk_darwin(v8);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v0 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_pathObserver);
  if (v14)
  {
    v41 = v10;
    v42 = v9;
    v43 = v0;
    __chkstk_darwin(v9);
    v15 = sub_100007E8C((uint64_t *)&unk_1011D11C0);
    *(&v41 - 2) = v15;
    KeyPath = swift_getKeyPath(&unk_100ECC548);
    __chkstk_darwin(KeyPath);
    *(&v41 - 2) = v15;
    v17 = swift_getKeyPath(&unk_100ECC580);
    swift_retain(v14);
    static Published.subscript.getter(v44, v18, KeyPath, v17);
    swift_release(KeyPath);
    swift_release(v17);
    v19 = *((_QWORD *)v44[0] + 2);
    swift_bridgeObjectRelease(v44[0]);
    if (v19)
    {
      v20 = v14;
    }
    else
    {
      swift_beginAccess(v14 + *(_QWORD *)(*(_QWORD *)v14 + 88), v44, 33, 0);
      v21 = sub_100007E8C((uint64_t *)&unk_1011C5B40);
      Published.projectedValue.getter(v21);
      swift_endAccess(v44);
      v22 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
      v44[0] = (id)static OS_dispatch_queue.main.getter(v22, v23, v24, v25, v26, v27, v28, v29);
      v30 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v3, 1, 1, v30);
      v31 = sub_100049F28((unint64_t *)&unk_1011C5B50, &qword_1011C5B28, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
      v32 = sub_1000EA1BC((unint64_t *)&qword_1011A89B0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
      Publisher.receive<A>(on:options:)(v44, v3, v4, v22, v31, v32);
      sub_10004FF60((uint64_t)v3, &qword_1011A08F0);

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      v33 = swift_allocObject(&unk_1010D8488, 24, 7);
      v34 = v43;
      swift_unknownObjectWeakInit(v33 + 16, v43);
      v35 = swift_allocObject(&unk_1010D84B0, 32, 7);
      *(_QWORD *)(v35 + 16) = v33;
      *(_QWORD *)(v35 + 24) = v14;
      v36 = sub_100049F28((unint64_t *)&unk_1011C5B60, (uint64_t *)&unk_1011C5B30, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
      swift_retain(v14);
      v37 = v42;
      v38 = Publisher<>.sink(receiveValue:)(sub_100717C38, v35, v42, v36);
      v39 = swift_release(v35);
      (*(void (**)(char *, uint64_t, __n128))(v41 + 8))(v13, v37, v39);
      v40 = *(_QWORD *)(v34 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_pathObserverSubscription);
      *(_QWORD *)(v34 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_pathObserverSubscription) = v38;
      swift_release(v14);
      v20 = v40;
    }
    *(_QWORD *)&result = swift_release(v20).n128_u64[0];
  }
  return result;
}

void sub_100714BC4(uint64_t *a1, char *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *Strong;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int *v54;
  char *v55;
  uint64_t *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, char *, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int *v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  void (*v75)(char *, char *, uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _BYTE *v88;
  _BYTE *v89;
  char *v90;
  void (*v91)(char *, uint64_t);
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  __n128 v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t *v103;
  uint64_t v104;
  id v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  id v112;
  void *v113;
  id v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  _BYTE *v130;
  void (*v131)(char *, uint64_t);
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  __n128 v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  id v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  _BYTE *v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  _BYTE *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  char v167[32];

  v150 = a3;
  v166 = a2;
  v4 = sub_100007E8C(&qword_10119F628);
  __chkstk_darwin(v4);
  v149 = (uint64_t)&v142 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = sub_100007E8C(&qword_1011C5B70);
  __chkstk_darwin(v148);
  v151 = (uint64_t)&v142 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = sub_100007E8C(&qword_1011C5B78);
  __chkstk_darwin(v143);
  v144 = (uint64_t)&v142 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_10119E460);
  v9 = __chkstk_darwin(v8);
  v159 = (uint64_t)&v142 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v161 = (char *)&v142 - v11;
  v158 = type metadata accessor for ContainerDetail.Source(0);
  v12 = __chkstk_darwin(v158);
  v145 = (char *)&v142 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v12);
  v160 = (uint64_t)&v142 - v15;
  __chkstk_darwin(v14);
  v154 = (char *)&v142 - v16;
  v17 = sub_100007E8C(&qword_10119ED10);
  v18 = __chkstk_darwin(v17);
  v146 = (char *)&v142 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v157 = (uint64_t)&v142 - v20;
  v156 = type metadata accessor for Album(0);
  v153 = *(_QWORD *)(v156 - 8);
  v21 = __chkstk_darwin(v156);
  v147 = (char *)&v142 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v21);
  v152 = (char *)&v142 - v24;
  __chkstk_darwin(v23);
  v155 = (char *)&v142 - v25;
  v26 = sub_100007E8C((uint64_t *)&unk_1011C5B80);
  v27 = __chkstk_darwin(v26);
  v29 = (char *)&v142 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v164 = (uint64_t)&v142 - v30;
  v31 = type metadata accessor for Playlist(0);
  v162 = *(_QWORD *)(v31 - 8);
  v32 = __chkstk_darwin(v31);
  v34 = (char *)&v142 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __chkstk_darwin(v32);
  v37 = (char *)&v142 - v36;
  __chkstk_darwin(v35);
  v163 = (char *)&v142 - v38;
  v39 = type metadata accessor for NavigationDestinationItem(0);
  v40 = *(_QWORD *)(v39 - 8);
  v41 = __chkstk_darwin(v39);
  v43 = (char *)&v142 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __chkstk_darwin(v41);
  v46 = (char *)&v142 - v45;
  __chkstk_darwin(v44);
  v165 = (uint64_t)&v142 - v47;
  v48 = *a1;
  v49 = v166 + 16;
  swift_beginAccess(v166 + 16, v167, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v49);
  if (Strong)
  {
    v51 = *(_QWORD *)(v48 + 16);
    if (!v51)
    {

      return;
    }
    v166 = Strong;
    v52 = v48
        + ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80))
        + *(_QWORD *)(v40 + 72) * (v51 - 1);
    v53 = v165;
    sub_10005B704(v52, v165, type metadata accessor for NavigationDestinationItem);
    sub_10005B704(v53, (uint64_t)v46, type metadata accessor for NavigationDestinationItem);
    if (swift_getEnumCaseMultiPayload(v46, v39) == 2)
    {
      v54 = (int *)sub_100007E8C(&qword_10119ED18);
      v55 = &v46[v54[12]];
      v56 = (uint64_t *)&v46[v54[16]];
      v57 = v56[1];
      v157 = *v56;
      sub_1000822B4(*(_QWORD *)&v46[v54[20]], *(_QWORD *)&v46[v54[20] + 8]);
      v59 = v162;
      v58 = v163;
      (*(void (**)(char *, char *, uint64_t))(v162 + 32))(v163, v46, v31);
      v60 = (uint64_t)v55;
      v61 = v164;
      sub_100065228(v60, v164, (uint64_t *)&unk_1011C5B80);
      v62 = *(void (**)(char *, char *, uint64_t))(v59 + 16);
      v62(v37, v58, v31);
      v63 = type metadata accessor for Library.Context(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56))(v29, 1, 1, v63);
      LOBYTE(v61) = sub_1000805A4(v61, (uint64_t)v29);
      sub_10004FF60((uint64_t)v29, (uint64_t *)&unk_1011C5B80);
      if ((v61 & 1) != 0)
      {
        v64 = (uint64_t)v154;
        *v154 = 0;
        v65 = 1;
      }
      else
      {
        v80 = sub_100007E8C((uint64_t *)&unk_1011AD760);
        v81 = *(int *)(v80 + 48);
        v82 = *(int *)(v80 + 64);
        v83 = _s6AlbumsV5ScopeOMa(0);
        v64 = (uint64_t)v154;
        (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 56))(v154, 1, 1, v83);
        v65 = 0;
        *(_BYTE *)(v64 + v81) = 0;
        *(_BYTE *)(v64 + v82) = 0;
      }
      v84 = v159;
      swift_storeEnumTagMultiPayload(v64, v158, v65);
      v85 = type metadata accessor for URL(0);
      v86 = (uint64_t)v161;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 56))(v161, 1, 1, v85);
      v62(v34, v37, v31);
      v87 = v160;
      sub_10005B704(v64, v160, type metadata accessor for ContainerDetail.Source);
      sub_10004A160(v86, v84, &qword_10119E460);
      v88 = (_BYTE *)sub_10096EE44(v34, v87, v157, v57, v84);
      v89 = objc_allocWithZone((Class)type metadata accessor for ContainerDetail.ViewController(0));
      v90 = sub_1003728E0(v88, 0, v89);
      sub_10004FF60(v86, &qword_10119E460);
      sub_10005B748(v64, type metadata accessor for ContainerDetail.Source);
      v91 = *(void (**)(char *, uint64_t))(v162 + 8);
      v91(v37, v31);
      v92 = v166;
      v93 = *(_QWORD *)&v166[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_pathObserver];
      v94 = *(_QWORD *)&v90[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_pathObserver];
      *(_QWORD *)&v90[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_pathObserver] = v93;
      swift_retain_n(v93, 2);
      v95 = v94;
      v96 = v92;
      v97 = swift_release(v95);
      sub_10071481C(v97);
      swift_release(v93);
      sub_10004FF60(v164, (uint64_t *)&unk_1011C5B80);
      v91(v163, v31);
      v53 = v165;
      goto LABEL_30;
    }
    sub_10005B748((uint64_t)v46, type metadata accessor for NavigationDestinationItem);
    sub_10005B704(v53, (uint64_t)v43, type metadata accessor for NavigationDestinationItem);
    if (swift_getEnumCaseMultiPayload(v43, v39) == 1)
    {
      v66 = (int *)sub_100007E8C(&qword_1011C5BA0);
      v67 = (uint64_t)&v43[v66[12]];
      v68 = (uint64_t *)&v43[v66[16]];
      v69 = *v68;
      v70 = v68[1];
      sub_1000822B4(*(_QWORD *)&v43[v66[20]], *(_QWORD *)&v43[v66[20] + 8]);
      v71 = v153;
      v73 = v155;
      v72 = v156;
      (*(void (**)(char *, char *, uint64_t))(v153 + 32))(v155, v43, v156);
      v74 = v157;
      sub_100065228(v67, v157, &qword_10119ED10);
      v75 = *(void (**)(char *, char *, uint64_t))(v71 + 16);
      v75(v152, v73, v72);
      v76 = type metadata accessor for Library.Context(0);
      v77 = (uint64_t)v146;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56))(v146, 1, 1, v76);
      LOBYTE(v67) = sub_100080590(v74, v77);
      sub_10004FF60(v77, &qword_10119ED10);
      v164 = v70;
      if ((v67 & 1) != 0)
      {
        v78 = (uint64_t)v145;
        *v145 = 0;
        v79 = 1;
      }
      else
      {
        v118 = sub_100007E8C((uint64_t *)&unk_1011AD760);
        v119 = *(int *)(v118 + 48);
        v120 = *(int *)(v118 + 64);
        v121 = _s6AlbumsV5ScopeOMa(0);
        v78 = (uint64_t)v145;
        (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v121 - 8) + 56))(v145, 1, 1, v121);
        v79 = 0;
        *(_BYTE *)(v78 + v119) = 0;
        *(_BYTE *)(v78 + v120) = 0;
      }
      v123 = v160;
      v122 = (uint64_t)v161;
      swift_storeEnumTagMultiPayload(v78, v158, v79);
      v124 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v124 - 8) + 56))(v122, 1, 1, v124);
      v125 = (uint64_t)v147;
      v126 = v152;
      v127 = v156;
      v75(v147, v152, v156);
      sub_10005B704(v78, v123, type metadata accessor for ContainerDetail.Source);
      v128 = v159;
      sub_10004A160(v122, v159, &qword_10119E460);
      v129 = sub_1004C73D0(v125, v123, v69, v164, v128);
      v130 = objc_allocWithZone((Class)type metadata accessor for ContainerDetail.ViewController(0));
      v90 = sub_1003723A0(v129, 0, v130);
      sub_10004FF60(v122, &qword_10119E460);
      sub_10005B748(v78, type metadata accessor for ContainerDetail.Source);
      v131 = *(void (**)(char *, uint64_t))(v153 + 8);
      v131(v126, v127);
      v132 = v166;
      v133 = *(_QWORD *)&v166[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_pathObserver];
      v134 = *(_QWORD *)&v90[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_pathObserver];
      *(_QWORD *)&v90[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_pathObserver] = v133;
      swift_retain_n(v133, 2);
      v135 = v134;
      v96 = v132;
      v136 = swift_release(v135);
      sub_10071481C(v136);
      swift_release(v133);
      sub_10004FF60(v157, &qword_10119ED10);
      v131(v155, v127);
      goto LABEL_30;
    }
    sub_10005B748((uint64_t)v43, type metadata accessor for NavigationDestinationItem);
    v98 = v149;
    sub_10007D908(v149);
    v99 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
    v100 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
    v101 = static ObservableObject.environmentStore.getter(v99, v100);
    v102 = v151;
    sub_10004A160(v98, v151, &qword_10119F628);
    v103 = (uint64_t *)(v102 + *(int *)(v148 + 36));
    v104 = v150;
    *v103 = v101;
    v103[1] = v104;
    swift_retain(v104);
    sub_10004FF60(v98, &qword_10119F628);
    v105 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v106 = objc_msgSend(v105, "connectedScenes");
    v107 = sub_10004A07C(0, &qword_1011A4630, UIScene_ptr);
    v108 = sub_1000EA1BC((unint64_t *)&qword_1011A2190, &qword_1011A4630, UIScene_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    v109 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v106, v107, v108);

    sub_10079470C(v109);
    v111 = v110;
    swift_bridgeObjectRelease(v109);
    if ((unint64_t)v111 >> 62)
    {
      if (v111 < 0)
        v137 = v111;
      else
        v137 = v111 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v138 = _CocoaArrayWrapper.endIndex.getter(v137);
      swift_bridgeObjectRelease(v111);
      if (v138)
      {
LABEL_14:
        if ((v111 & 0xC000000000000001) != 0)
        {
          v112 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v111);
        }
        else
        {
          if (!*(_QWORD *)((v111 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return;
          }
          v112 = *(id *)(v111 + 32);
        }
        v113 = v112;

        v114 = objc_msgSend(v113, "delegate", swift_bridgeObjectRelease(v111).n128_f64[0]);
        v96 = v166;
        if (v114)
        {
          v115 = type metadata accessor for MainSceneDelegate();
          v116 = swift_dynamicCastClass(v114, v115);
          if (v116)
          {
            v117 = *(_QWORD *)(v116 + OBJC_IVAR____TtC5Music17MainSceneDelegate_environmentManager);
            swift_retain(v117);
            swift_unknownObjectRelease(v114);
LABEL_29:
            v140 = v144;
            sub_10004A160(v102, v144, &qword_1011C5B70);
            *(_QWORD *)(v140 + *(int *)(v143 + 36)) = v117;
            sub_10004FF60(v102, &qword_1011C5B70);
            v141 = objc_allocWithZone((Class)sub_100007E8C(&qword_1011C5B98));
            v90 = (char *)UIHostingController.init(rootView:)(v140);
LABEL_30:
            objc_msgSend(v96, "showViewController:sender:", v90, v96);

            sub_10005B748(v53, type metadata accessor for NavigationDestinationItem);
            return;
          }
          swift_unknownObjectRelease(v114);
        }
LABEL_28:
        v139 = type metadata accessor for EnvironmentObjectsManager();
        v117 = swift_allocObject(v139, 56, 7);
        *(_OWORD *)(v117 + 16) = 0u;
        *(_OWORD *)(v117 + 32) = 0u;
        *(_QWORD *)(v117 + 48) = 0;
        goto LABEL_29;
      }
    }
    else if (*(_QWORD *)((v111 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_14;
    }

    swift_bridgeObjectRelease(v111);
    v96 = v166;
    goto LABEL_28;
  }
}

char *sub_100715880()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char *v3;
  char *v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___contextualActionsButton;
  v2 = *(void **)(v0 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___contextualActionsButton);
  if (v2)
  {
    v3 = *(char **)(v0
                  + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___contextualActionsButton);
  }
  else
  {
    v4 = sub_1007158DC();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

char *sub_1007158DC()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  NSString v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  NSString v21;
  _BYTE v23[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v23[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v3);
  v5 = &v23[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin(v6);
  v8 = &v23[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = SymbolButton.Configuration.barButtonContextualAction.unsafeMutableAddressor();
  sub_10005B704(v9, (uint64_t)v8, type metadata accessor for SymbolButton.Configuration);
  v10 = objc_allocWithZone((Class)type metadata accessor for SymbolButton(0));
  v11 = SymbolButton.init(configuration:handler:)((uint64_t)v8, 0, 0);
  v12 = String.LocalizationValue.init(stringLiteral:)(1701998413, 0xE400000000000000);
  static Locale.current.getter(v12);
  String.init(localized:table:bundle:locale:comment:)(v5, 0, 0, 0, v2, 0, 0, 256);
  v14 = v13;
  (*(void (**)(unint64_t, unint64_t))((swift_isaMask & *(_QWORD *)v11) + 0x100))(0xD00000000000001DLL, 0x8000000100E43600);
  v15 = v11;
  v16 = String._bridgeToObjectiveC()();
  objc_msgSend(v15, "setAccessibilityLabel:", v16);

  v17 = AccessibilityIdentifier.containerDetailContextualActionsButton.unsafeMutableAddressor();
  v18 = *v17;
  v19 = v17[1];
  swift_bridgeObjectRetain();
  UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(v18, v19);
  v20 = v15;
  v21 = String._bridgeToObjectiveC()();
  objc_msgSend(v20, "setLargeContentTitle:", v21, swift_bridgeObjectRelease(v14).n128_f64[0]);

  objc_msgSend(v20, "setContextMenuInteractionEnabled:", 1);
  objc_msgSend(v20, "setShowsMenuAsPrimaryAction:", 1);
  return v20;
}

id sub_100715B24()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  char *v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___contextualActionsBarButtonItem;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___contextualActionsBarButtonItem);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___contextualActionsBarButtonItem);
  }
  else
  {
    v4 = sub_100715880();
    v5 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v4);

    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

id sub_100715BE0()
{
  return sub_10004D23C(0, (uint64_t (*)(void))type metadata accessor for ContainerDetail.ViewController);
}

uint64_t sub_100715DD8()
{
  return type metadata accessor for ContainerDetail.ViewController(0);
}

uint64_t type metadata accessor for ContainerDetail.ViewController(uint64_t a1)
{
  return sub_100055934(a1, qword_1011C59B8, (uint64_t)&nominal type descriptor for ContainerDetail.ViewController);
}

void sub_100715DF4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[32];

  v8[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v8[1] = &unk_100ECC390;
  v8[2] = &unk_100ECC3A8;
  sub_10015C698(319, (unint64_t *)&qword_1011B66A0, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork);
  if (v3 <= 0x3F)
  {
    v8[3] = *(_QWORD *)(v2 - 8) + 64;
    v8[4] = &unk_100ECC3A8;
    v8[5] = &unk_100ECC3A8;
    v8[6] = &unk_100ECC3A8;
    v8[7] = &unk_100ECC390;
    v8[8] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v8[9] = &unk_100ECC390;
    v8[10] = &unk_100ECC390;
    v8[11] = &unk_100ECC3A8;
    v8[12] = (char *)&value witness table for Builtin.Int64 + 64;
    v4 = type metadata accessor for RelatedContentProvider.State(319);
    if (v5 <= 0x3F)
    {
      v8[13] = *(_QWORD *)(v4 - 8) + 64;
      v8[14] = &unk_100ECC3C0;
      v8[15] = &unk_100ECC3A8;
      sub_100715F48(319);
      if (v7 <= 0x3F)
      {
        v8[16] = *(_QWORD *)(v6 - 8) + 64;
        v8[17] = &unk_100ECC3A8;
        v8[18] = (char *)&value witness table for Builtin.BridgeObject + 64;
        v8[19] = &unk_100ECC3D8;
        v8[20] = &unk_100ECC3A8;
        v8[21] = &unk_100ECC390;
        v8[22] = &unk_100ECC3A8;
        v8[23] = &unk_100ECC3A8;
        v8[24] = &unk_100ECC3A8;
        v8[25] = (char *)&value witness table for Builtin.NativeObject + 64;
        v8[26] = &unk_100ECC3A8;
        v8[27] = &unk_100ECC3A8;
        v8[28] = &unk_100ECC3F0;
        v8[29] = &unk_100ECC3A8;
        v8[30] = &unk_100ECC3A8;
        v8[31] = &unk_100ECC3A8;
        swift_updateClassMetadata2(a1, 256, 32, v8, a1 + 80);
      }
    }
  }
}

void sub_100715F48(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1011C59D0)
  {
    v2 = sub_100044B54((uint64_t *)&unk_1011A2170);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1011C59D0);
  }
}

uint64_t sub_100715FA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;

  v8[6] = a7;
  v8[7] = a8;
  v8[4] = a5;
  v8[5] = a6;
  v8[2] = a1;
  v8[3] = a4;
  v9 = type metadata accessor for AppInterfaceContext.Activity(0);
  v8[8] = v9;
  v8[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MainActor(0);
  v8[10] = static MainActor.shared.getter(v11);
  v12 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor);
  return swift_task_switch(sub_100716038, v12, v13);
}

uint64_t sub_100716038()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 24);
  swift_release();
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 64);
    v2 = *(_QWORD *)(v0 + 72);
    v5 = *(_QWORD *)(v0 + 48);
    v4 = *(_QWORD *)(v0 + 56);
    v7 = *(_QWORD *)(v0 + 32);
    v6 = *(_QWORD *)(v0 + 40);
    v8 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v2, v7, v8);
    v9 = (uint64_t *)(v2 + *(int *)(type metadata accessor for PlaylistPicker.Context(0) + 20));
    *v9 = v6;
    v9[1] = v5;
    v9[2] = v4;
    swift_storeEnumTagMultiPayload(v2, v3, 5);
    sub_10047C350(v6, v5, v4);
    sub_100770824(v2, 0, 0);
    sub_10005B748(v2, type metadata accessor for AppInterfaceContext.Activity);
  }
  v10 = *(_QWORD *)(v0 + 72);
  **(_BYTE **)(v0 + 16) = v1 == 0;
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_10071612C()
{
  _QWORD *v0;

  v0 = (_QWORD *)swift_bridgeObjectRetain();
  return sub_100713058(v0);
}

double sub_100716144(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  void (*v8)(void *, uint64_t, uint64_t);
  id v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  _BYTE v13[24];

  v4 = (uint64_t *)(v2 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource);
  swift_beginAccess(v2 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource, v13, 33, 0);
  v5 = *v4;
  v6 = v4[1];
  ObjectType = swift_getObjectType();
  v8 = *(void (**)(void *, uint64_t, uint64_t))(v6 + 200);
  v9 = a2;
  swift_unknownObjectRetain(v5, v10);
  v8(a2, ObjectType, v6);
  v11 = *v4;
  *v4 = v5;
  v4[1] = v6;
  swift_endAccess(v13);
  *(_QWORD *)&result = swift_unknownObjectRelease(v11).n128_u64[0];
  return result;
}

char *sub_1007161EC(uint64_t a1, void *a2, unint64_t a3, uint64_t a4)
{
  objc_class *v8;
  uint64_t ObjectType;
  char *v10;

  if (a3 >> 62)
  {
    if (a3 >> 62 == 1)
    {
      sub_10071B4F8(a2, a3);
      swift_retain();
      return sub_10071C634(a2, a4);
    }
    else
    {
      sub_10071B4F8(a2, a3);
      swift_retain();
      return sub_10071C914(a2, a4);
    }
  }
  else
  {
    v8 = (objc_class *)type metadata accessor for ContainerDetail.ViewController(0);
    ObjectType = swift_getObjectType();
    sub_10071B4F8(a2, a3);
    swift_retain();
    v10 = sub_1007181B0((uint64_t)a2, 0, objc_allocWithZone(v8), ObjectType, a3);
    *(_QWORD *)&v10[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_pathObserver] = a4;
    swift_release();
    return v10;
  }
}

char *sub_1007162F0(uint64_t a1)
{
  uint64_t v1;

  return sub_1007161EC(a1, *(void **)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16));
}

uint64_t sub_1007162FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10071CBDC();
  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_10071634C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10071CBDC();
  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_10071639C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10071CBDC();
  UIViewControllerRepresentable.body.getter(a1, v2);
  __break(1u);
}

uint64_t sub_1007163C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *(id *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  if (v4)
  {
    sub_10071B4F8(*(id *)v1, *(_QWORD *)(v1 + 8));
    v6 = swift_retain();
    v7 = static SafeAreaRegions.all.getter(v6);
    result = static Edge.Set.all.getter(v7);
    *(_QWORD *)a1 = v2;
    *(_QWORD *)(a1 + 8) = v3;
    *(_QWORD *)(a1 + 16) = v4;
    *(_QWORD *)(a1 + 24) = v7;
    *(_BYTE *)(a1 + 32) = result;
  }
  else
  {
    v9 = *(_QWORD *)(v1 + 24);
    sub_10071B4F8(*(id *)v1, *(_QWORD *)(v1 + 8));
    v10 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
    v11 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
    result = EnvironmentObject.error()(0, v9, v10, v11);
    __break(1u);
  }
  return result;
}

uint64_t sub_100716478()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10004FACC(v0, qword_10124D860);
  sub_100048B14(v0, (uint64_t)qword_10124D860);
  return static Logger.music(_:)(0x656E6961746E6F43, 0xEF6C696174654472);
}

uint64_t sub_1007165F4(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  objc_class *v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t i;
  id v20;
  void *v21;
  void (*v22)(void *, char *);
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  objc_super v32;

  v9 = type metadata accessor for IndexPath(0);
  v29 = *(_QWORD *)(v9 - 8);
  v30 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (objc_class *)type metadata accessor for ContainerDetailCompositionalLayout();
  v32.receiver = v4;
  v32.super_class = v12;
  v13 = objc_msgSendSuper2(&v32, "layoutAttributesForElementsInRect:", a1, a2, a3, a4);
  if (!v13)
    return 0;
  v14 = v13;
  v15 = sub_10004A07C(0, (unint64_t *)&qword_1011BA810, UICollectionViewLayoutAttributes_ptr);
  v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, v15);

  if ((unint64_t)v16 >> 62)
    goto LABEL_15;
  v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n(v16, 2);
  for (; v17; v17 = _CocoaArrayWrapper.endIndex.getter(v26))
  {
    v18 = &v4[OBJC_IVAR____TtC5Music34ContainerDetailCompositionalLayout_willLayoutAttributes];
    v31 = v16 & 0xC000000000000001;
    for (i = 4; ; ++i)
    {
      v4 = (char *)(i - 4);
      v20 = v31 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, v16) : *(id *)(v16 + 8 * i);
      v21 = v20;
      if (__OFADD__(v4, 1))
        break;
      v22 = *(void (**)(void *, char *))v18;
      if (*(_QWORD *)v18)
      {
        v23 = *((_QWORD *)v18 + 1);
        v24 = v17;
        v25 = objc_msgSend(v20, "indexPath", swift_retain().n128_f64[0]);
        static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v25);

        v17 = v24;
        v22(v21, v11);
        sub_10004BA30((uint64_t)v22, v23);
        (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v30);
      }

      if (i - 3 == v17)
        goto LABEL_19;
    }
    __break(1u);
LABEL_15:
    if (v16 < 0)
      v26 = v16;
    else
      v26 = v16 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v16, 2);
  }
LABEL_19:
  swift_bridgeObjectRelease_n(v16, 2);
  return v16;
}

id sub_100716BD0(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  char *v4;
  char *v9;
  void *v10;
  objc_class *v11;
  id v12;
  _QWORD v14[6];
  objc_super v15;

  v9 = &v4[OBJC_IVAR____TtC5Music34ContainerDetailCompositionalLayout_willLayoutAttributes];
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
  if (a2)
  {
    v14[4] = a2;
    v14[5] = a3;
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 1107296256;
    v14[2] = sub_1008E31AC;
    v14[3] = &unk_1010D84F0;
    v10 = _Block_copy(v14);
    swift_retain();
    swift_release();
  }
  else
  {
    v10 = 0;
  }
  v11 = (objc_class *)type metadata accessor for ContainerDetailCompositionalLayout();
  v15.receiver = v4;
  v15.super_class = v11;
  v12 = objc_msgSendSuper2(&v15, "initWithSection:sectionProvider:configuration:", a1, v10, a4);

  sub_10004BA30(a2, a3);
  _Block_release(v10);
  return v12;
}

id sub_100716D58(uint64_t a1)
{
  return sub_10004D23C(a1, type metadata accessor for ContainerDetailCompositionalLayout);
}

uint64_t type metadata accessor for ContainerDetailCompositionalLayout()
{
  return objc_opt_self(_TtC5Music34ContainerDetailCompositionalLayout);
}

uint64_t storeEnumTagSinglePayload for ContainerDetail.Section(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_100716DE4 + 4 * byte_100ECC327[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_100716E18 + 4 * byte_100ECC322[v4]))();
}

uint64_t sub_100716E18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100716E20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100716E28);
  return result;
}

uint64_t sub_100716E34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100716E3CLL);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_100716E40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100716E48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ContainerDetail.Section()
{
  return &type metadata for ContainerDetail.Section;
}

unint64_t destroy for ContainerDetail.LoadingState(uint64_t a1)
{
  return sub_10005533C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
}

unint64_t *_s5Music15ContainerDetailV12LoadingStateOwCP_0(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  sub_100055294(*a2, v4, v5);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  return a1;
}

unint64_t *assignWithCopy for ContainerDetail.LoadingState(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  sub_100055294(*a2, v4, v5);
  v6 = *a1;
  v7 = a1[1];
  v8 = a1[2];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  sub_10005533C(v6, v7, v8);
  return a1;
}

unint64_t *assignWithTake for ContainerDetail.LoadingState(unint64_t *a1, uint64_t a2)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *a1;
  v6 = a1[1];
  v5 = a1[2];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v3;
  sub_10005533C(v4, v6, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContainerDetail.LoadingState(uint64_t a1, int a2)
{
  unsigned int v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = (*(_QWORD *)a1 >> 2) & 0xFFFFFF80 | (*(_QWORD *)a1 >> 1);
  if (v2 > 0x80000000)
    v3 = ~v2;
  else
    v3 = -1;
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for ContainerDetail.LoadingState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = 0;
      *(_QWORD *)result = (4 * -a2) & 0x3FFFFFE00 | (2 * (-a2 & 0x7FLL));
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_100716FF8(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)a1 >> 62;
  if (v1 <= 1)
    return v1;
  else
    return (*(_DWORD *)a1 & 1 | (2 * ((*(_QWORD *)a1 >> 8) & 1)) | (4 * *(_DWORD *)(a1 + 8))) + 2;
}

_QWORD *sub_100717024(_QWORD *result, uint64_t a2)
{
  if (a2 < 2)
  {
    *result = *result & 0x101 | (a2 << 62);
  }
  else
  {
    result[1] = (unint64_t)(a2 - 2) >> 2;
    result[2] = 0;
    *result = (((int)a2 - 2) << 7) & 0x100 | ((_BYTE)a2 - 2) & 1 | 0x8000000000000000;
  }
  return result;
}

ValueMetadata *type metadata accessor for ContainerDetail.LoadingState()
{
  return &type metadata for ContainerDetail.LoadingState;
}

uint64_t sub_100717074(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_1007170C4 + 4 * byte_100ECC32C[swift_getEnumCaseMultiPayload(a2, a3)];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain(v6);
  return v7;
}

uint64_t sub_100717218(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload(a1, a2);
  switch((int)result)
  {
    case 0:
      v4 = type metadata accessor for Artist(0);
      goto LABEL_8;
    case 1:
      v4 = type metadata accessor for SocialProfile(0);
      goto LABEL_8;
    case 2:
      v4 = type metadata accessor for Curator(0);
      goto LABEL_8;
    case 3:
      v4 = type metadata accessor for RadioShow(0);
      goto LABEL_8;
    case 4:
      v4 = type metadata accessor for Genre(0);
      goto LABEL_8;
    case 5:
      v4 = type metadata accessor for Playlist(0);
LABEL_8:
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
      break;
    default:
      return result;
  }
  return result;
}

void sub_1007172BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;

  v3 = (char *)sub_100717304 + 4 * byte_100ECC338[swift_getEnumCaseMultiPayload(a2, a3)];
  __asm { BR              X10 }
}

uint64_t sub_100717304()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(v0, v3, v4);
  swift_storeEnumTagMultiPayload(v0, v1, v2);
  return v0;
}

uint64_t sub_100717384(uint64_t result, uint64_t a2, uint64_t a3)
{
  char *v5;

  if (result != a2)
  {
    sub_10005B748(result, type metadata accessor for ContainerDetail.AttributionItem);
    v5 = (char *)&loc_1007173E4 + 4 * byte_100ECC33E[swift_getEnumCaseMultiPayload(a2, a3)];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t type metadata accessor for ContainerDetail.AttributionItem(uint64_t a1)
{
  return sub_100055934(a1, qword_1011C5A80, (uint64_t)&nominal type descriptor for ContainerDetail.AttributionItem);
}

void sub_100717478(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;

  v3 = (char *)sub_1007174C0 + 4 * byte_100ECC344[swift_getEnumCaseMultiPayload(a2, a3)];
  __asm { BR              X10 }
}

uint64_t sub_1007174C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v0, v3, v4);
  swift_storeEnumTagMultiPayload(v0, v1, v2);
  return v0;
}

uint64_t sub_100717540(uint64_t result, uint64_t a2, uint64_t a3)
{
  char *v5;

  if (result != a2)
  {
    sub_10005B748(result, type metadata accessor for ContainerDetail.AttributionItem);
    v5 = (char *)&loc_1007175A0 + 4 * byte_100ECC34A[swift_getEnumCaseMultiPayload(a2, a3)];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_100717620(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD v9[6];

  result = type metadata accessor for Artist(319);
  if (v3 <= 0x3F)
  {
    v9[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for SocialProfile(319);
    if (v4 <= 0x3F)
    {
      v9[1] = *(_QWORD *)(result - 8) + 64;
      result = type metadata accessor for Curator(319);
      if (v5 <= 0x3F)
      {
        v9[2] = *(_QWORD *)(result - 8) + 64;
        result = type metadata accessor for RadioShow(319);
        if (v6 <= 0x3F)
        {
          v9[3] = *(_QWORD *)(result - 8) + 64;
          result = type metadata accessor for Genre(319);
          if (v7 <= 0x3F)
          {
            v9[4] = *(_QWORD *)(result - 8) + 64;
            result = type metadata accessor for Playlist(319);
            if (v8 <= 0x3F)
            {
              v9[5] = *(_QWORD *)(result - 8) + 64;
              swift_initEnumMetadataMultiPayload(a1, 256, 6, v9);
              return 0;
            }
          }
        }
      }
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContainerDetail()
{
  return &type metadata for ContainerDetail;
}

unint64_t sub_100717724()
{
  unint64_t result;

  result = qword_1011C5AB8;
  if (!qword_1011C5AB8)
  {
    result = swift_getWitnessTable(&unk_100ECC4B8, &type metadata for ContainerDetail.Section);
    atomic_store(result, (unint64_t *)&qword_1011C5AB8);
  }
  return result;
}

uint64_t sub_100717768(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  _BYTE v7[24];

  v3 = v1 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource;
  swift_beginAccess(v3, v7, 0, 0);
  v4 = *(_QWORD *)(v3 + 8);
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 408))(a1, ObjectType, v4);
}

uint64_t sub_1007177DC()
{
  return sub_100049F28(&qword_1011C5AC0, &qword_1011C5AC8, (uint64_t)&unk_100EBD308);
}

uint64_t sub_100717808(uint64_t a1)
{
  uint64_t result;

  result = sub_100048748(&qword_1011C5AF8, type metadata accessor for ContainerDetail.ViewController, (uint64_t)&unk_100ECC500);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t type metadata accessor for ContainerDetail.Source(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011C5D00, (uint64_t)&nominal type descriptor for ContainerDetail.Source);
}

uint64_t sub_100717858()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for ContainerDetail.AttributionItem(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  switch(swift_getEnumCaseMultiPayload(v0 + v3, v1))
  {
    case 0u:
      v5 = type metadata accessor for Artist(0);
      goto LABEL_8;
    case 1u:
      v5 = type metadata accessor for SocialProfile(0);
      goto LABEL_8;
    case 2u:
      v5 = type metadata accessor for Curator(0);
      goto LABEL_8;
    case 3u:
      v5 = type metadata accessor for RadioShow(0);
      goto LABEL_8;
    case 4u:
      v5 = type metadata accessor for Genre(0);
      goto LABEL_8;
    case 5u:
      v5 = type metadata accessor for Playlist(0);
LABEL_8:
      (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v0 + v3, v5);
      break;
    default:
      break;
  }
  swift_release();
  return swift_deallocObject(v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
}

uint64_t sub_10071795C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for ContainerDetail.AttributionItem(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc(dword_1011C5B04);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10006AEE4;
  return sub_10070D4D4(a1, v6, v7, v8, v9);
}

uint64_t sub_100717A00@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100ECC6B0);
  v5 = swift_getKeyPath(&unk_100ECC6D8);
  static Published.subscript.getter(a2, v3, KeyPath, v5);
  swift_release(KeyPath);
  return swift_release(v5);
}

uint64_t sub_100717A68(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v14;

  v4 = sub_100007E8C((uint64_t *)&unk_10119E648);
  __chkstk_darwin(v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v14 - v8;
  sub_10004A160(a1, (uint64_t)&v14 - v8, (uint64_t *)&unk_10119E648);
  v10 = *a2;
  KeyPath = swift_getKeyPath(&unk_100ECC6B0);
  v12 = swift_getKeyPath(&unk_100ECC6D8);
  sub_10004A160((uint64_t)v9, (uint64_t)v6, (uint64_t *)&unk_10119E648);
  swift_retain();
  static Published.subscript.setter(v6, v10, KeyPath, v12);
  return sub_10004FF60((uint64_t)v9, (uint64_t *)&unk_10119E648);
}

void sub_100717B60(uint64_t a1, void *a2, double a3, double a4)
{
  uint64_t v7;
  void (*v8)(double, double);
  id v9;

  v8 = *(void (**)(double, double))(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  swift_retain(v7);
  v9 = a2;
  v8(a3, a4);
  swift_release(v7);

}

uint64_t sub_100717BD0()
{
  return 8;
}

_QWORD *sub_100717BDC(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_100717BE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

uint64_t sub_100717C0C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100717C38(uint64_t *a1)
{
  uint64_t v1;

  sub_100714BC4(a1, *(char **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_100717C40(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  unsigned int v4;
  unint64_t v5;
  uint64_t v6;
  size_t v7;
  uint64_t v8;
  __n128 v9;
  void *v10;
  uint64_t v11;
  uint64_t v13;

  v2 = isStackAllocationSafe;
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = v3 & 0x3F;
  v5 = (1 << v3) + 63;
  v6 = v5 >> 6;
  v7 = 8 * (v5 >> 6);
  if (v4 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v5 >> 6), 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v13 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    sub_100717D90((unint64_t *)((char *)&v13 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0)), v6, v2);
    if (v1)
      swift_willThrow(v9);
    else
      return v8;
  }
  else
  {
    v10 = (void *)swift_slowAlloc(v7, -1);
    bzero(v10, v7);
    sub_100717D90((unint64_t *)v10, v6, v2);
    v2 = v11;
    swift_slowDealloc(v10, -1, -1);
  }
  return v2;
}

void sub_100717D90(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[24];

  v5 = 0;
  v6 = 0;
  v7 = a3 + 64;
  v8 = 1 << *(_BYTE *)(a3 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a3 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  while (v10)
  {
    v13 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    v14 = v13 | (v6 << 6);
LABEL_19:
    v18 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v14);
    swift_beginAccess(v18 + 48, v22, 0, 0);
    v19 = *(_QWORD *)(v18 + 48);
    v20 = *(_QWORD *)(v19 + 16);
    if (!v20 || (*(_BYTE *)(v19 + 16 * v20 + 24) & 1) == 0)
    {
      *(unint64_t *)((char *)a1 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      if (__OFADD__(v5++, 1))
        goto LABEL_25;
    }
  }
  v15 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_24;
  }
  if (v15 >= v11)
    goto LABEL_22;
  v16 = *(_QWORD *)(v7 + 8 * v15);
  ++v6;
  if (v16)
    goto LABEL_18;
  v6 = v15 + 1;
  if (v15 + 1 >= v11)
    goto LABEL_22;
  v16 = *(_QWORD *)(v7 + 8 * v6);
  if (v16)
  {
LABEL_18:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v6 << 6);
    goto LABEL_19;
  }
  v17 = v15 + 2;
  if (v17 >= v11)
  {
LABEL_22:
    sub_100717F2C(a1, a2, v5, a3);
    return;
  }
  v16 = *(_QWORD *)(v7 + 8 * v17);
  if (v16)
  {
    v6 = v17;
    goto LABEL_18;
  }
  while (1)
  {
    v6 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v6 >= v11)
      goto LABEL_22;
    v16 = *(_QWORD *)(v7 + 8 * v6);
    ++v17;
    if (v16)
      goto LABEL_18;
  }
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
}

Swift::Int sub_100717F2C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  Swift::Int result;
  Swift::Int v9;
  unint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  _QWORD *v30;
  unint64_t *v32;
  uint64_t v33;
  _QWORD v34[9];

  if (!a3)
    return (Swift::Int)&_swiftEmptyDictionarySingleton;
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_100007E8C((uint64_t *)&unk_1011C5BC0);
  result = static _DictionaryStorage.allocate(capacity:)(v5);
  v9 = result;
  v32 = a1;
  v33 = a2;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
    }
    else
    {
      v15 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_38;
      if (v15 >= v33)
        return v9;
      v16 = v32[v15];
      ++v11;
      if (!v16)
      {
        v11 = v15 + 1;
        if (v15 + 1 >= v33)
          return v9;
        v16 = v32[v11];
        if (!v16)
        {
          v17 = v15 + 2;
          if (v17 >= v33)
            return v9;
          v16 = v32[v17];
          if (!v16)
          {
            while (1)
            {
              v11 = v17 + 1;
              if (__OFADD__(v17, 1))
                goto LABEL_39;
              if (v11 >= v33)
                return v9;
              v16 = v32[v11];
              ++v17;
              if (v16)
                goto LABEL_22;
            }
          }
          v11 = v17;
        }
      }
LABEL_22:
      v10 = (v16 - 1) & v16;
      v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    v18 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v14);
    v20 = *v18;
    v19 = v18[1];
    v21 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v14);
    Hasher.init(_seed:)(v34, *(_QWORD *)(v9 + 40));
    swift_bridgeObjectRetain();
    swift_retain();
    String.hash(into:)(v34, v20, v19);
    result = Hasher._finalize()();
    v22 = -1 << *(_BYTE *)(v9 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      v25 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_37;
        }
        v28 = v24 == v27;
        if (v24 == v27)
          v24 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v24);
      }
      while (v29 == -1);
      v25 = __clz(__rbit64(~v29)) + (v24 << 6);
    }
    *(_QWORD *)(v12 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    v30 = (_QWORD *)(*(_QWORD *)(v9 + 48) + 16 * v25);
    *v30 = v20;
    v30[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v25) = v21;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    if (!v5)
      return v9;
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
  return result;
}

char *sub_1007181B0(uint64_t a1, void *a2, _BYTE *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  _BYTE *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  objc_class *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t ObjectType;
  void (*v39)(_BYTE *, uint64_t, uint64_t);
  char *v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t, uint64_t);
  char *v43;
  unsigned __int8 v44;
  uint64_t v45;
  id v46;
  void *v47;
  id v48;
  id v49;
  uint64_t v51;
  _QWORD v52[3];
  _BYTE v53[16];
  objc_super v54;

  v9 = sub_100007E8C(&qword_1011A1440);
  __chkstk_darwin(v9);
  v11 = (char *)&v52[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_durationCalculator;
  v13 = type metadata accessor for DurationCalculator();
  v14 = swift_allocObject(v13, 24, 7);
  *(_QWORD *)&a3[v12] = v14;
  *(_QWORD *)(v14 + 16) = 0;
  a3[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_needToRegisterGroupActivitySuggestion] = 0;
  *(_QWORD *)&a3[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___headerCoordinator] = 0;
  v15 = &a3[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_artwork];
  v16 = type metadata accessor for Artwork(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  *(_QWORD *)&a3[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___backdropContainer] = 0;
  *(_QWORD *)&a3[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_backdropView] = 0;
  *(_QWORD *)&a3[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_floatingArtworkDataSource] = 0;
  a3[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_hideFloatingArtwork] = 0;
  v17 = OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_floatingArtworkContainer;
  v18 = objc_allocWithZone((Class)UIView);
  v19 = a3;
  *(_QWORD *)&a3[v17] = objc_msgSend(v18, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v19[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_isShowingRelatedContent] = 0;
  v19[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_includeRelatedContentOnNextReload] = 0;
  *(_QWORD *)&v19[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___relatedContentSpacingData] = 0;
  *(_QWORD *)&v19[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_relatedContentLeadingPadding] = 0;
  v20 = &v19[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_relatedContentState];
  v21 = enum case for RelatedContentProvider.State.loading(_:);
  v22 = type metadata accessor for RelatedContentProvider.State(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v20, v21, v22);
  v23 = &v19[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_relatedContentStateSubscription];
  *(_OWORD *)v23 = 0u;
  *((_OWORD *)v23 + 1) = 0u;
  *((_QWORD *)v23 + 4) = 0;
  *(_QWORD *)&v19[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___impressionsTracker] = 0;
  v24 = &v19[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___pageProperties];
  v25 = sub_100007E8C((uint64_t *)&unk_1011A2170);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v24, 1, 1, v25);
  *(_QWORD *)&v19[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_detailComponentController] = 0;
  *(_QWORD *)&v19[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_relatedContent] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v19[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___popoverProvider] = 1;
  *(_QWORD *)&v19[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_storeItemMetadataDidChangeObserver] = 0;
  v19[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_hasScrolledtoProminentItem] = 0;
  *(_QWORD *)&v19[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_sheetPresenterDataSource] = 0;
  *(_QWORD *)&v19[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___collectionViewLayout] = 0;
  *(_QWORD *)&v19[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___collectionView] = 0;
  v26 = OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_cachingReference;
  v27 = type metadata accessor for ArtworkPrefetchingController.CacheReference();
  v28 = swift_allocObject(v27, 41, 7);
  *(_QWORD *)(v28 + 16) = 0xD00000000000001FLL;
  *(_QWORD *)(v28 + 24) = 0x8000000100E37690;
  *(_QWORD *)(v28 + 32) = 0;
  *(_BYTE *)(v28 + 40) = 1;
  *(_QWORD *)&v19[v26] = v28;
  *(_QWORD *)&v19[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_pathObserverSubscription] = 0;
  *(_QWORD *)&v19[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_pathObserver] = 0;
  *(_QWORD *)&v19[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___contextualActionsButton] = 0;
  *(_QWORD *)&v19[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___contextualActionsBarButtonItem] = 0;
  *(_QWORD *)&v19[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dragDropController] = 0;
  v29 = &v19[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource];
  *v29 = a1;
  v29[1] = a5;
  swift_unknownObjectRetain(a1, v30);

  v31 = (objc_class *)type metadata accessor for ContainerDetail.ViewController(0);
  v54.receiver = v19;
  v54.super_class = v31;
  v32 = (char *)objc_msgSendSuper2(&v54, "initWithNibName:bundle:", 0, 0);
  v33 = swift_unknownObjectWeakInit(v52);
  swift_unknownObjectWeakAssign(v33, v32);
  sub_100065228(v34, (uint64_t)v53, &qword_1011C5D60);
  v53[8] = 0;
  v35 = &v32[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource];
  swift_beginAccess(&v32[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource], v52, 33, 0);
  v36 = *(_QWORD *)v35;
  v37 = *((_QWORD *)v35 + 1);
  ObjectType = swift_getObjectType();
  v51 = v36;
  v39 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v37 + 16);
  v40 = v32;
  v39(v53, ObjectType, v37);
  *(_QWORD *)v35 = v51;
  *((_QWORD *)v35 + 1) = v37;
  swift_endAccess(v52);
  v41 = swift_getObjectType();
  v52[0] = a1;
  v42 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 32);
  v43 = v40;
  v44 = v42(v41, a5);
  UIViewController.playActivityFeatureIdentifier.setter(v44);

  v52[0] = a1;
  (*(void (**)(uint64_t, uint64_t))(a5 + 160))(v41, a5);
  v45 = (uint64_t)&v43[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_artwork];
  swift_beginAccess(&v43[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_artwork], v52, 33, 0);
  sub_1000A5508((uint64_t)v11, v45, &qword_1011A1440);
  swift_endAccess(v52);
  v46 = objc_msgSend(v43, "navigationItem");
  objc_msgSend(v46, "setLargeTitleDisplayMode:", 2);

  v47 = *(void **)&v43[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_detailComponentController];
  *(_QWORD *)&v43[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_detailComponentController] = a2;
  v48 = a2;

  sub_100712804();
  v49 = objc_msgSend(v43, "navigationItem");
  objc_msgSend(v49, "setBackButtonDisplayMode:", 2);

  swift_unknownObjectRelease(a1);
  return v43;
}

uint64_t sub_1007186B4(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

void sub_100718740(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, __n128))
{
  int64_t v2;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  int v25;
  uint64_t v26;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_10035CA1C(0, v2, 0);
    v5 = sub_1007186B4(a1);
    v6 = 0;
    v7 = a1 + 64;
    v24 = v2;
    v25 = v4;
    v26 = a1 + 64;
    while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(_BYTE *)(a1 + 32))
    {
      v10 = (unint64_t)v5 >> 6;
      if ((*(_QWORD *)(v7 + 8 * ((unint64_t)v5 >> 6)) & (1 << v5)) == 0)
        goto LABEL_23;
      if (*(_DWORD *)(a1 + 36) != v4)
        goto LABEL_24;
      v11 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v5);
      v12 = *v11;
      v13 = v11[1];
      v14 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v5);
      swift_bridgeObjectRetain();
      v15 = swift_retain();
      v16 = a2(v12, v13, v14, v15);
      swift_release();
      swift_bridgeObjectRelease();
      v18 = _swiftEmptyArrayStorage[2];
      v17 = _swiftEmptyArrayStorage[3];
      if (v18 >= v17 >> 1)
        sub_10035CA1C(v17 > 1, v18 + 1, 1);
      _swiftEmptyArrayStorage[2] = v18 + 1;
      _swiftEmptyArrayStorage[v18 + 4] = v16;
      v8 = 1 << *(_BYTE *)(a1 + 32);
      if (v5 >= v8)
        goto LABEL_25;
      v7 = a1 + 64;
      v19 = *(_QWORD *)(v26 + 8 * v10);
      if ((v19 & (1 << v5)) == 0)
        goto LABEL_26;
      v4 = v25;
      if (*(_DWORD *)(a1 + 36) != v25)
        goto LABEL_27;
      v20 = v19 & (-2 << (v5 & 0x3F));
      if (v20)
      {
        v8 = __clz(__rbit64(v20)) | v5 & 0xFFFFFFFFFFFFFFC0;
        v9 = v24;
      }
      else
      {
        v21 = v10 + 1;
        v22 = (unint64_t)(v8 + 63) >> 6;
        v9 = v24;
        if (v10 + 1 < v22)
        {
          v23 = *(_QWORD *)(v26 + 8 * v21);
          if (v23)
          {
LABEL_20:
            v8 = __clz(__rbit64(v23)) + (v21 << 6);
          }
          else
          {
            while (v22 - 2 != v10)
            {
              v23 = *(_QWORD *)(a1 + 80 + 8 * v10++);
              if (v23)
              {
                v21 = v10 + 1;
                goto LABEL_20;
              }
            }
          }
        }
      }
      ++v6;
      v5 = v8;
      if (v6 == v9)
        return;
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
  }
}

uint64_t sub_100718980(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  int v54;
  uint64_t v55;
  id v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  id v92;
  id v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  id v103;
  id v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _BYTE v109[24];
  char v110[24];
  _BYTE v111[24];
  _BYTE v112[24];
  char v113[24];

  v4 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v4);
  v6 = (char *)&v91 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for URL(0);
  v106 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v105 = (uint64_t)&v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for AlbumDetailDataSource.ProminentTrackSource(0);
  v108 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011B6CA0);
  __chkstk_darwin(v12);
  v107 = (uint64_t)&v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C((uint64_t *)&unk_1011A3D70);
  __chkstk_darwin(v14);
  __chkstk_darwin(v15);
  __chkstk_darwin(v16);
  v18 = (char *)&v91 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v91 - v20;
  __chkstk_darwin(v22);
  v26 = (char *)&v91 - v25;
  if (!a1)
    return 0;
  v100 = v24;
  v101 = v23;
  v102 = v6;
  v27 = type metadata accessor for ContainerDetail.ViewController(0);
  v104 = a1;
  v28 = swift_dynamicCastClass(a1, v27);
  if (!v28)
    return 0;
  v29 = v28;
  v99 = v7;
  v30 = swift_dynamicCastClass(a2, v27);
  if (!v30)
    return 0;
  v31 = v30;
  v94 = v11;
  v97 = v9;
  v103 = a2;
  v32 = (uint64_t *)(v29 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource);
  swift_beginAccess(v29 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource, v113, 0, 0);
  v33 = *v32;
  v34 = type metadata accessor for AlbumDetailDataSource(0);
  v98 = v33;
  v35 = swift_dynamicCastClass(v33, v34);
  v96 = v29;
  if (v35)
  {
    v95 = v35;
    v36 = (_QWORD *)(v31 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource);
    swift_beginAccess(v31 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource, v110, 0, 0);
    v37 = *v36;
    v38 = swift_dynamicCastClass(*v36, v34);
    v39 = v104;
    v40 = v104;
    v41 = v103;
    if (v38)
    {
      v92 = v40;
      v93 = v41;
      v43 = v98;
      swift_unknownObjectRetain(v98, v42);
      swift_unknownObjectRetain(v37, v44);
      v45 = v37;
      v46 = v95;
      if ((sub_1004C5FA8(v95, v38) & 1) != 0)
      {
        v106 = v45;
        v47 = v46 + OBJC_IVAR____TtC5Music21AlbumDetailDataSource_prominentTrackSource;
        swift_beginAccess(v46 + OBJC_IVAR____TtC5Music21AlbumDetailDataSource_prominentTrackSource, v112, 0, 0);
        sub_10004A160(v47, (uint64_t)v26, (uint64_t *)&unk_1011A3D70);
        v48 = v38 + OBJC_IVAR____TtC5Music21AlbumDetailDataSource_prominentTrackSource;
        swift_beginAccess(v38 + OBJC_IVAR____TtC5Music21AlbumDetailDataSource_prominentTrackSource, v111, 0, 0);
        v105 = v48;
        sub_10004A160(v48, (uint64_t)v21, (uint64_t *)&unk_1011A3D70);
        v49 = v107;
        v50 = v107 + *(int *)(v12 + 48);
        sub_10004A160((uint64_t)v26, v107, (uint64_t *)&unk_1011A3D70);
        sub_10004A160((uint64_t)v21, v50, (uint64_t *)&unk_1011A3D70);
        v51 = v108;
        v52 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v108 + 48);
        v53 = v97;
        if (v52(v49, 1, v97) == 1)
        {
          sub_10004FF60((uint64_t)v21, (uint64_t *)&unk_1011A3D70);
          sub_10004FF60((uint64_t)v26, (uint64_t *)&unk_1011A3D70);
          v54 = v52(v50, 1, v53);
          v55 = v106;
          if (v54 == 1)
          {
            sub_10004FF60(v49, (uint64_t *)&unk_1011A3D70);
LABEL_38:

            swift_unknownObjectRelease(v98);
            swift_unknownObjectRelease(v55);
            return 1;
          }
        }
        else
        {
          sub_10004A160(v49, (uint64_t)v18, (uint64_t *)&unk_1011A3D70);
          if (v52(v50, 1, v53) != 1)
          {
            v89 = (uint64_t)v94;
            sub_10005B6C0(v50, (uint64_t)v94, type metadata accessor for AlbumDetailDataSource.ProminentTrackSource);
            v90 = sub_1004C50EC((uint64_t)v18, v89);
            sub_10005B748(v89, type metadata accessor for AlbumDetailDataSource.ProminentTrackSource);
            sub_10004FF60((uint64_t)v21, (uint64_t *)&unk_1011A3D70);
            sub_10004FF60((uint64_t)v26, (uint64_t *)&unk_1011A3D70);
            sub_10005B748((uint64_t)v18, type metadata accessor for AlbumDetailDataSource.ProminentTrackSource);
            sub_10004FF60(v49, (uint64_t *)&unk_1011A3D70);
            v55 = v106;
            if ((v90 & 1) != 0)
              goto LABEL_38;
            goto LABEL_29;
          }
          sub_10004FF60((uint64_t)v21, (uint64_t *)&unk_1011A3D70);
          sub_10004FF60((uint64_t)v26, (uint64_t *)&unk_1011A3D70);
          sub_10005B748((uint64_t)v18, type metadata accessor for AlbumDetailDataSource.ProminentTrackSource);
          v55 = v106;
        }
        sub_10004FF60(v49, &qword_1011B6CA0);
LABEL_29:
        v75 = 1;
        v77 = v100;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 56))(v100, 1, 1, v97);
        v78 = v101;
        sub_10004A160(v47, v101, (uint64_t *)&unk_1011A3D70);
        swift_beginAccess(v47, v109, 33, 0);
        sub_10071B4B0(v77, v47);
        swift_endAccess(v109);
        sub_1004B5730(v78);
        sub_10004FF60(v77, (uint64_t *)&unk_1011A3D70);
        sub_10004FF60(v78, (uint64_t *)&unk_1011A3D70);
        *(_BYTE *)(v96 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_hasScrolledtoProminentItem) = 0;
        sub_10004A160(v105, v77, (uint64_t *)&unk_1011A3D70);
        sub_10004A160(v47, v78, (uint64_t *)&unk_1011A3D70);
        swift_beginAccess(v47, v109, 33, 0);
        sub_10071B4B0(v77, v47);
        swift_endAccess(v109);
        sub_1004B5730(v78);
        sub_10004FF60(v77, (uint64_t *)&unk_1011A3D70);
        sub_10004FF60(v78, (uint64_t *)&unk_1011A3D70);
        sub_100714554();

        swift_unknownObjectRelease(v98);
        swift_unknownObjectRelease(v55);
        return v75;
      }
      swift_unknownObjectRelease(v43);
      swift_unknownObjectRelease(v45);
      v39 = v104;
    }
  }
  else
  {
    v39 = v104;
    v56 = v104;
    v57 = v103;
  }
  v58 = *v32;
  v59 = type metadata accessor for PlaylistDetailDataSource(0);
  v60 = swift_dynamicCastClass(v58, v59);
  if (!v60)
  {

    return 0;
  }
  v61 = v60;
  v62 = (uint64_t *)(v31 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource);
  swift_beginAccess(v31 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource, v112, 0, 0);
  v63 = *v62;
  v64 = swift_dynamicCastClass(v63, v59);
  v66 = v103;
  if (!v64)
  {
LABEL_23:

    return 0;
  }
  v67 = v64;
  swift_unknownObjectRetain(v58, v65);
  swift_unknownObjectRetain(v63, v68);
  if ((sub_10096E184(v61, v67) & 1) == 0)
  {
    swift_unknownObjectRelease(v58);
    swift_unknownObjectRelease(v63);
    goto LABEL_23;
  }
  v69 = (uint64_t *)(v61 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_prominentEntryID);
  v70 = *(_QWORD *)(v61 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_prominentEntryID);
  v71 = *(_QWORD *)(v61 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_prominentEntryID + 8);
  v72 = (uint64_t *)(v67 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_prominentEntryID);
  v73 = *(_QWORD *)(v67 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_prominentEntryID + 8);
  if (v71)
  {
    v74 = *(_QWORD *)(v61 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_prominentEntryID + 8);
    if (v73)
    {
      if (v70 == *v72 && v71 == v73
        || (_stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)(v61 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_prominentEntryID), *(_QWORD *)(v61 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_prominentEntryID + 8), *v72, v73, 0) & 1) != 0)
      {
        goto LABEL_33;
      }
      v74 = v69[1];
    }
    goto LABEL_32;
  }
  if (v73)
  {
    v74 = 0;
LABEL_32:
    *v69 = 0;
    v69[1] = 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v74);
    sub_100956A7C(v70, v71);
    swift_bridgeObjectRelease(v71);
    *(_BYTE *)(v96 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_hasScrolledtoProminentItem) = 0;
    v80 = *v72;
    v79 = v72[1];
    v81 = *v69;
    v82 = v69[1];
    *v69 = v80;
    v69[1] = v79;
    swift_bridgeObjectRetain();
    sub_100956A7C(v81, v82);
    swift_bridgeObjectRelease(v82);
    sub_100714554();
  }
LABEL_33:
  v83 = v67 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_collaborationURL;
  swift_beginAccess(v67 + OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_collaborationURL, v111, 0, 0);
  v84 = v83;
  v85 = (uint64_t)v102;
  sub_10004A160(v84, (uint64_t)v102, &qword_10119E460);
  v86 = v106;
  v87 = v99;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v106 + 48))(v85, 1, v99) == 1)
  {

    swift_unknownObjectRelease(v58);
    swift_unknownObjectRelease(v63);
    sub_10004FF60(v85, &qword_10119E460);
  }
  else
  {
    v88 = v105;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v86 + 32))(v105, v85, v87);
    sub_10094BDFC(v88);
    swift_unknownObjectRelease(v63);
    swift_unknownObjectRelease(v58);

    (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v88, v87);
  }
  return 1;
}

