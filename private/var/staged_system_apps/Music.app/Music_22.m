Swift::Int sub_100BD3C20(uint64_t a1, __n128 a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Swift::Int result;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  id v17;
  _QWORD *v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  unint64_t v31;
  char v32;
  char v33;
  char v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  uint64_t v39;
  id v40[2];
  _QWORD *v41;

  if ((a1 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)(a1 + 16) > 1uLL)
    {
      v29 = swift_bridgeObjectRetain();
      v4 = sub_100BD01A4(v29);
      if ((v4 & 0xC000000000000001) != 0)
        goto LABEL_37;
      goto LABEL_33;
    }
    return 0;
  }
  if (a1 < 0)
    v3 = a1;
  else
    v3 = a1 & 0xFFFFFFFFFFFFFF8;
  if (__CocoaSet.count.getter(v3, a2) <= 1)
    return 0;
  v4 = (uint64_t)&_swiftEmptySetSingleton;
  v41 = &_swiftEmptySetSingleton;
  swift_bridgeObjectRetain();
  v5 = __CocoaSet.makeIterator()(v3);
  v6 = __CocoaSet.Iterator.next()(v5);
  if (!v6)
    goto LABEL_36;
  v7 = v6;
  v8 = sub_10004A07C(0, (unint64_t *)&qword_1011DF118, MSVLyricsAgent_ptr);
  do
  {
    v39 = v7;
    swift_dynamicCast(v40, &v39, (char *)&type metadata for Swift.AnyObject + 8, v8, 7);
    v10 = objc_msgSend(v40[0], "type");
    if (!v10)
    {
LABEL_8:

      goto LABEL_9;
    }
    v11 = v10;
    v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v14 = v13;

    if (v12 == 0x6E6F73726570 && v14 == 0xE600000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v14, 0x6E6F73726570, 0xE600000000000000, 0);
      swift_bridgeObjectRelease();
      if ((v16 & 1) == 0)
        goto LABEL_8;
    }
    v17 = v40[0];
    v18 = v41;
    v19 = v41[2];
    if (v41[3] <= v19)
    {
      sub_100C6EBA0(v19 + 1);
      v18 = v41;
    }
    result = NSObject._rawHashValue(seed:)(v18[5]);
    v20 = v18 + 7;
    v21 = -1 << *((_BYTE *)v18 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~v18[(v22 >> 6) + 7]) != 0)
    {
      v24 = __clz(__rbit64((-1 << v22) & ~v18[(v22 >> 6) + 7])) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          return result;
        }
        v27 = v23 == v26;
        if (v23 == v26)
          v23 = 0;
        v25 |= v27;
        v28 = v20[v23];
      }
      while (v28 == -1);
      v24 = __clz(__rbit64(~v28)) + (v23 << 6);
    }
    *(_QWORD *)((char *)v20 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    *(_QWORD *)(v18[6] + 8 * v24) = v17;
    ++v18[2];
LABEL_9:
    v7 = __CocoaSet.Iterator.next()(result);
  }
  while (v7);
  v4 = (uint64_t)v41;
LABEL_36:
  v30 = swift_release();
  if ((v4 & 0xC000000000000001) == 0)
  {
LABEL_33:
    v31 = *(_QWORD *)(v4 + 16);
    goto LABEL_38;
  }
LABEL_37:
  v31 = __CocoaSet.count.getter(v4, v30);
LABEL_38:
  swift_release();
  sub_100BCB22C(a1);
  v33 = v32;
  sub_100BCB5AC(a1);
  if (v31 == 2)
    v35 = 1;
  else
    v35 = 2;
  if (v31 == 1)
    v35 = 0;
  if (v31 >= 3)
    v36 = 2;
  else
    v36 = 0x10000u >> (8 * v31);
  if ((v33 & 1) != 0)
    v35 = v36;
  if (v31 == 2)
    v37 = 1;
  else
    v37 = 2;
  if (v31 >= 3)
    v38 = 2;
  else
    v38 = 0x10200u >> (8 * v31);
  if ((v33 & 1) == 0)
    v37 = v38;
  if ((v34 & 1) != 0)
    return v37;
  else
    return v35;
}

uint64_t sub_100BD3F80()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[6]);
  swift_release(v0[10]);
  swift_release(v0[12]);
  swift_release(v0[14]);
  return swift_deallocObject(v0, 120, 7);
}

uint64_t sub_100BD3FBC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100BD3FE0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 48, 7);
}

unint64_t sub_100BD3FF4()
{
  unint64_t result;

  result = qword_1011DF1C0;
  if (!qword_1011DF1C0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Lyrics.Word.Emphasis, &type metadata for Lyrics.Word.Emphasis);
    atomic_store(result, (unint64_t *)&qword_1011DF1C0);
  }
  return result;
}

unint64_t sub_100BD403C()
{
  unint64_t result;

  result = qword_1011DF1C8;
  if (!qword_1011DF1C8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Lyrics.Word, &type metadata for Lyrics.Word);
    atomic_store(result, (unint64_t *)&qword_1011DF1C8);
  }
  return result;
}

unint64_t sub_100BD4084()
{
  unint64_t result;

  result = qword_1011DF1D0;
  if (!qword_1011DF1D0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Lyrics.Syllable, &type metadata for Lyrics.Syllable);
    atomic_store(result, (unint64_t *)&qword_1011DF1D0);
  }
  return result;
}

unint64_t sub_100BD40CC()
{
  unint64_t result;

  result = qword_1011DF1D8;
  if (!qword_1011DF1D8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Lyrics.TextLine, &type metadata for Lyrics.TextLine);
    atomic_store(result, (unint64_t *)&qword_1011DF1D8);
  }
  return result;
}

unint64_t sub_100BD4114()
{
  unint64_t result;

  result = qword_1011DF1E0;
  if (!qword_1011DF1E0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Lyrics.LyricsType, &type metadata for Lyrics.LyricsType);
    atomic_store(result, (unint64_t *)&qword_1011DF1E0);
  }
  return result;
}

unint64_t sub_100BD415C()
{
  unint64_t result;

  result = qword_1011DF1E8;
  if (!qword_1011DF1E8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Lyrics.VocalistsType, &type metadata for Lyrics.VocalistsType);
    atomic_store(result, (unint64_t *)&qword_1011DF1E8);
  }
  return result;
}

unint64_t sub_100BD41A4()
{
  unint64_t result;

  result = qword_1011DF1F0;
  if (!qword_1011DF1F0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Lyrics.AgentAlignment, &type metadata for Lyrics.AgentAlignment);
    atomic_store(result, (unint64_t *)&qword_1011DF1F0);
  }
  return result;
}

unint64_t sub_100BD41EC()
{
  unint64_t result;

  result = qword_1011DF1F8;
  if (!qword_1011DF1F8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Lyrics.Direction, &type metadata for Lyrics.Direction);
    atomic_store(result, (unint64_t *)&qword_1011DF1F8);
  }
  return result;
}

unint64_t sub_100BD4234()
{
  unint64_t result;

  result = qword_1011DF200;
  if (!qword_1011DF200)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Lyrics.Capability, &type metadata for Lyrics.Capability);
    atomic_store(result, (unint64_t *)&qword_1011DF200);
  }
  return result;
}

uint64_t sub_100BD4278()
{
  return sub_100049F28(&qword_1011DF208, &qword_1011DF210, (uint64_t)&protocol conformance descriptor for [A]);
}

unint64_t sub_100BD42A8()
{
  unint64_t result;

  result = qword_1011DF218;
  if (!qword_1011DF218)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Lyrics.AudioAttribute, &type metadata for Lyrics.AudioAttribute);
    atomic_store(result, (unint64_t *)&qword_1011DF218);
  }
  return result;
}

uint64_t type metadata accessor for Lyrics()
{
  return objc_opt_self(_TtC11MusicCoreUI6Lyrics);
}

uint64_t initializeWithCopy for Lyrics.Word(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Lyrics.Word(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v6;
  return a1;
}

__n128 _s5SpecsV20SelectedLinePositionOwcp(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for Lyrics.Word(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease(v4);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for Lyrics.Word()
{
  return &type metadata for Lyrics.Word;
}

ValueMetadata *type metadata accessor for Lyrics.Word.Emphasis()
{
  return &type metadata for Lyrics.Word.Emphasis;
}

uint64_t initializeWithCopy for Lyrics.Syllable(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for Lyrics.Syllable(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  v4 = a1[3];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  return a1;
}

__n128 initializeWithTake for SymbolButton.CustomView(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for Lyrics.Syllable(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease(v5);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for Lyrics.Syllable(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Lyrics.Syllable(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Lyrics.Syllable()
{
  return &type metadata for Lyrics.Syllable;
}

double destroy for Lyrics.TextLine(_QWORD *a1)
{
  double result;

  swift_bridgeObjectRelease(a1[4]);
  swift_release(a1[8]);
  swift_release(a1[10]);
  *(_QWORD *)&result = swift_release(a1[12]).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for Lyrics.TextLine(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v5;
  __int128 v6;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v3 = *(_QWORD *)(a2 + 96);
  v5 = *(_OWORD *)(a2 + 64);
  v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(_QWORD *)(a1 + 96) = v3;
  swift_bridgeObjectRetain();
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v3);
  return a1;
}

uint64_t assignWithCopy for Lyrics.TextLine(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  v4 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v5 = *(_QWORD *)(a2 + 64);
  v6 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  swift_retain(v5);
  swift_release(v6);
  v7 = *(_QWORD *)(a2 + 80);
  v8 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v7;
  swift_retain(v7);
  swift_release(v8);
  v10 = *(_QWORD *)(a2 + 88);
  v9 = *(_QWORD *)(a2 + 96);
  v11 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = v10;
  *(_QWORD *)(a1 + 96) = v9;
  swift_retain(v9);
  swift_release(v11);
  return a1;
}

__n128 initializeWithTake for Lyrics.TextLine(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_QWORD *)(a1 + 96) = *((_QWORD *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for Lyrics.TextLine(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  v4 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease(v4);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release(v5);
  v6 = *(_QWORD *)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release(v6);
  v7 = *(_QWORD *)(a1 + 96);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_release(v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for Lyrics.TextLine(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 104))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Lyrics.TextLine(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 104) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 104) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Lyrics.TextLine()
{
  return &type metadata for Lyrics.TextLine;
}

uint64_t destroy for Lyrics.TextLine.BackgroundVocals(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 56));
}

uint64_t initializeWithCopy for Lyrics.TextLine.BackgroundVocals(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Lyrics.TextLine.BackgroundVocals(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v5 = *(_QWORD *)(a2 + 56);
  v6 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  return a1;
}

__n128 initializeWithTake for Gradient(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for Lyrics.TextLine.BackgroundVocals(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease(v5);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v6 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease(v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for Lyrics.TextLine.BackgroundVocals(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Lyrics.TextLine.BackgroundVocals(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Lyrics.TextLine.BackgroundVocals()
{
  return &type metadata for Lyrics.TextLine.BackgroundVocals;
}

uint64_t getEnumTagSinglePayload for Lyrics.InstrumentalLine(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 24);
  v4 = v3 >= 2;
  v5 = v3 - 2;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for Lyrics.InstrumentalLine(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for Lyrics.InstrumentalLine()
{
  return &type metadata for Lyrics.InstrumentalLine;
}

uint64_t destroy for Lyrics.SongwritersLine(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 32));
}

uint64_t initializeWithCopy for Lyrics.SongwritersLine(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Lyrics.SongwritersLine(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v3);
  return a1;
}

__n128 initializeWithTake for SyncedLyricsManager.Configuration(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for Lyrics.SongwritersLine(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for Lyrics.SongwritersLine(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Lyrics.SongwritersLine(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Lyrics.SongwritersLine()
{
  return &type metadata for Lyrics.SongwritersLine;
}

ValueMetadata *type metadata accessor for Lyrics.LyricsType()
{
  return &type metadata for Lyrics.LyricsType;
}

ValueMetadata *type metadata accessor for Lyrics.VocalistsType()
{
  return &type metadata for Lyrics.VocalistsType;
}

ValueMetadata *type metadata accessor for Lyrics.AgentAlignment()
{
  return &type metadata for Lyrics.AgentAlignment;
}

uint64_t _s11MusicCoreUI6LyricsC14AgentAlignmentOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100BD4E04 + 4 * byte_100EEB255[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100BD4E38 + 4 * asc_100EEB250[v4]))();
}

uint64_t sub_100BD4E38(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100BD4E40(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100BD4E48);
  return result;
}

uint64_t sub_100BD4E54(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100BD4E5CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100BD4E60(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100BD4E68(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Lyrics.Direction()
{
  return &type metadata for Lyrics.Direction;
}

uint64_t _s11MusicCoreUI6LyricsC10CapabilityOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100BD4ED0 + 4 * byte_100EEB25F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100BD4F04 + 4 * byte_100EEB25A[v4]))();
}

uint64_t sub_100BD4F04(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100BD4F0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100BD4F14);
  return result;
}

uint64_t sub_100BD4F20(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100BD4F28);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100BD4F2C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100BD4F34(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Lyrics.Capability()
{
  return &type metadata for Lyrics.Capability;
}

_QWORD *initializeBufferWithCopyOfBuffer for Lyrics.AudioAttribute(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for Lyrics.AudioAttribute()
{
  return &type metadata for Lyrics.AudioAttribute;
}

uint64_t destroy for Lyrics.LineTranslationMetadata(_QWORD *a1)
{
  uint64_t result;

  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[2]);
  result = a1[6];
  if (result)
  {
    swift_bridgeObjectRelease(result);
    return swift_bridgeObjectRelease(a1[10]);
  }
  return result;
}

uint64_t initializeWithCopy for Lyrics.LineTranslationMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v5)
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = v5;
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v6 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = v6;
    v7 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v7;
  }
  return a1;
}

uint64_t assignWithCopy for Lyrics.LineTranslationMetadata(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  __int128 *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 24);
  v5 = (__int128 *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(a1 + 48))
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100BD51B4(a1 + 24);
      v7 = *(_OWORD *)(a2 + 72);
      v9 = *v5;
      v8 = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 72) = v7;
      *v4 = v9;
      *(_OWORD *)(a1 + 40) = v8;
    }
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v10 = *v5;
    v11 = *(_OWORD *)(a2 + 40);
    v12 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v12;
    *v4 = v10;
    *(_OWORD *)(a1 + 40) = v11;
  }
  return a1;
}

uint64_t sub_100BD51B4(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 56));
  return a1;
}

__n128 initializeWithTake for Lyrics.LineTranslationMetadata(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for Lyrics.LineTranslationMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 48))
    goto LABEL_5;
  v5 = *(_QWORD *)(a2 + 48);
  if (!v5)
  {
    sub_100BD51B4(a1 + 24);
LABEL_5:
    v6 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = v6;
    v7 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v7;
    return a1;
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Lyrics.LineTranslationMetadata(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Lyrics.LineTranslationMetadata(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Lyrics.LineTranslationMetadata()
{
  return &type metadata for Lyrics.LineTranslationMetadata;
}

uint64_t sub_100BD5368(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PlaylistCurators.Curator(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100BD53AC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PlaylistCurators.Curator(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100BD53E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011DF488;
  if (!qword_1011DF488)
  {
    v1 = sub_10004A07C(255, (unint64_t *)&qword_1011DF118, MSVLyricsAgent_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1011DF488);
  }
  return result;
}

const char *sub_100BD5440()
{
  return "startTime";
}

id sub_100BD544C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;

  result = objc_msgSend(*a1, "startTime");
  *a2 = v4;
  return result;
}

id sub_100BD547C(double *a1, id *a2)
{
  return objc_msgSend(*a2, "setStartTime:", *a1);
}

uint64_t sub_100BD5490()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100BD54B4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  if (v1)
  {
    swift_bridgeObjectRelease(v1);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
  }
  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_100BD54E4()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[4]);
  swift_bridgeObjectRelease(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100BD5518()
{
  uint64_t *v0;

  return sub_100BCA390(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_100BD552C()
{
  uint64_t *v0;

  return sub_100BCA600(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_100BD553C()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[4]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100BD5570@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_100BCA854(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD **)(v1 + 40), a1);
}

BOOL sub_100BD557C(id *a1)
{
  uint64_t v1;

  return sub_100BCAEA0(a1, *(char **)(v1 + 16), *(void **)(v1 + 24), *(char **)(v1 + 32), *(void **)(v1 + 40));
}

BOOL sub_100BD55A0(id *a1)
{
  uint64_t v1;

  return sub_100BCAE00(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_100BD55C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a4)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_100BD55F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_100BD0A58(a4, a5, a6, a7, a8, a9, a10, a11);
  }
  return result;
}

uint64_t static LyricsLoader.supportsLyrics(for:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char v36;
  uint64_t (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  char v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  BOOL v53;
  uint64_t v54;
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  NSString v71;
  id v72;
  uint64_t v73;
  uint64_t (*v74)(char *, uint64_t, uint64_t);
  char *v75;
  uint64_t v76;
  NSObject *v77;
  os_log_type_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  BOOL v82;
  uint64_t v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  char *v89;
  char v90;
  char *v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  char *v95;
  uint64_t (*v96)(char *, uint64_t, uint64_t);
  uint64_t v97;
  NSObject *v98;
  os_log_type_t v99;
  uint64_t v100;
  uint64_t v101;
  int v102;
  char *v103;
  char *v104;
  char *v105;
  const char *v106;
  NSObject *v107;
  os_log_type_t v108;
  uint8_t *v109;
  uint32_t v110;
  uint64_t v111;
  void (*v112)(char *, uint64_t, uint64_t);
  uint64_t v113;
  os_log_type_t v114;
  char *v115;
  int v116;
  uint64_t v117;
  int v118;
  uint64_t v119;
  char *v120;
  char *v121;
  char *v122;
  char *v123;
  uint64_t v124;
  char v125;
  uint64_t v126;
  uint64_t (*v127)(char *, uint64_t, uint64_t);
  char *v128;
  uint64_t v129;
  NSObject *v130;
  os_log_type_t v131;
  uint64_t v132;
  uint64_t v133;
  char v134;
  BOOL v135;
  uint64_t v136;
  char *v137;
  char *v138;
  char *v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v144;
  char *v145;
  char *v146;
  char *v147;
  char *v148;
  char *v149;
  char *v150;
  char *v151;
  uint64_t (*v152)(char *, uint64_t, uint64_t);
  uint64_t v153;
  uint64_t v154;
  _QWORD v155[15];
  uint64_t v156;
  char v157;
  uint64_t v158;

  v2 = type metadata accessor for Song(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v144 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v4);
  v150 = (char *)&v144 - v8;
  v9 = __chkstk_darwin(v7);
  v149 = (char *)&v144 - v10;
  v11 = __chkstk_darwin(v9);
  v151 = (char *)&v144 - v12;
  v13 = __chkstk_darwin(v11);
  v146 = (char *)&v144 - v14;
  v15 = __chkstk_darwin(v13);
  v145 = (char *)&v144 - v16;
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v144 - v18;
  v20 = __chkstk_darwin(v17);
  v22 = (char *)&v144 - v21;
  v23 = __chkstk_darwin(v20);
  v147 = (char *)&v144 - v24;
  v25 = __chkstk_darwin(v23);
  v27 = (char *)&v144 - v26;
  v28 = __chkstk_darwin(v25);
  v148 = (char *)&v144 - v29;
  v30 = __chkstk_darwin(v28);
  v32 = (char *)&v144 - v31;
  v33 = __chkstk_darwin(v30);
  v35 = (char *)&v144 - v34;
  v36 = Song.hasLyrics.getter(v33);
  v37 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v153 = a1;
  v152 = v37;
  v38 = v37(v35, a1, v2);
  if ((v36 & 1) != 0)
  {
    v39 = *(void (**)(char *, uint64_t))(v3 + 8);
    v39(v35, v2);
  }
  else
  {
    v40 = Song.hasCustomLyrics.getter(v38);
    v39 = *(void (**)(char *, uint64_t))(v3 + 8);
    v39(v35, v2);
    if ((v40 & 1) == 0)
    {
      v59 = v153;
      if (qword_1011DDFE0 != -1)
        swift_once(&qword_1011DDFE0, sub_100BCBEB4);
      v60 = type metadata accessor for Logger(0);
      sub_100048B14(v60, (uint64_t)static Logger.lyrics);
      v61 = v152(v6, v59, v2);
      v62 = Logger.logObject.getter(v61);
      v63 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v62, v63))
      {
        v64 = swift_slowAlloc(12, -1);
        v65 = swift_slowAlloc(32, -1);
        v156 = v65;
        *(_DWORD *)v64 = 136446210;
        v66 = (char *)sub_100BD644C();
        v68 = v67;
        *(_QWORD *)(v64 + 4) = sub_100BBDE38(v66, v67, &v156);
        swift_bridgeObjectRelease(v68);
        v39(v6, v2);
        _os_log_impl((void *)&_mh_execute_header, v62, v63, "Loader supportsLyrics=false [hasLyrics and hasCustomLyrics were false] %{public}s", (uint8_t *)v64, 0xCu);
        swift_arrayDestroy(v65, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v65, -1, -1);
        swift_slowDealloc(v64, -1, -1);
      }
      else
      {
        v39(v6, v2);
      }

      v125 = 0;
      return v125 & 1;
    }
  }
  v41 = v153;
  v42 = *BagProvider.shared.unsafeMutableAddressor();
  swift_retain(v42);
  v43 = (void *)BagProvider.bag.getter();
  swift_release(v42);
  if (!v43)
  {
    if (qword_1011DDFE0 != -1)
      swift_once(&qword_1011DDFE0, sub_100BCBEB4);
    v45 = type metadata accessor for Logger(0);
    sub_100048B14(v45, (uint64_t)static Logger.lyrics);
    v46 = v152;
    v152(v22, v41, v2);
    v47 = v46(v19, v41, v2);
    v48 = Logger.logObject.getter(v47);
    v49 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v48, v49))
    {
      v50 = swift_slowAlloc(22, -1);
      v51 = swift_slowAlloc(64, -1);
      v156 = v51;
      *(_DWORD *)v50 = 136446466;
      v52 = Song.hasCustomLyrics.getter(v51);
      v53 = (v52 & 1) == 0;
      if ((v52 & 1) != 0)
        v54 = 1702195828;
      else
        v54 = 0x65736C6166;
      if (v53)
        v55 = (char *)0xE500000000000000;
      else
        v55 = (char *)0xE400000000000000;
      *(_QWORD *)(v50 + 4) = sub_100BBDE38((char *)v54, v55, &v156);
      swift_bridgeObjectRelease(v55);
      v39(v22, v2);
      *(_WORD *)(v50 + 12) = 2082;
      v56 = (char *)sub_100BD644C();
      v58 = v57;
      *(_QWORD *)(v50 + 14) = sub_100BBDE38(v56, v57, &v156);
      swift_bridgeObjectRelease(v58);
      v39(v19, v2);
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "Loader supportsLyrics=%{public}s [bag is nil] %{public}s", (uint8_t *)v50, 0x16u);
      swift_arrayDestroy(v51, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v51, -1, -1);
      swift_slowDealloc(v50, -1, -1);
    }
    else
    {
      v39(v22, v2);
      v39(v19, v2);
    }

LABEL_34:
    v88 = v150;
    v89 = v149;
    v90 = Song.hasLyrics.getter(v44);
    v91 = v151;
    if ((v90 & 1) != 0
      && (static ApplicationCapabilities.shared.getter((uint64_t)v155),
          v92 = v155[3],
          swift_bridgeObjectRetain(),
          sub_100065184(v155),
          v93 = sub_100BD6578(2u, v92),
          swift_bridgeObjectRelease(v92),
          (v93 & 1) != 0))
    {
      static ApplicationCapabilities.shared.getter((uint64_t)&v156);
      sub_100065184(&v156);
      if ((v157 & 1) != 0)
      {
        v125 = 1;
        return v125 & 1;
      }
      if (qword_1011DDFE0 != -1)
        swift_once(&qword_1011DDFE0, sub_100BCBEB4);
      v94 = type metadata accessor for Logger(0);
      sub_100048B14(v94, (uint64_t)static Logger.lyrics);
      v95 = v145;
      v96 = v152;
      v152(v145, v41, v2);
      v88 = v146;
      v97 = v96(v146, v41, v2);
      v98 = Logger.logObject.getter(v97);
      v99 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v98, v99))
      {
        v100 = swift_slowAlloc(18, -1);
        v101 = swift_slowAlloc(32, -1);
        v154 = v101;
        *(_DWORD *)v100 = 67240450;
        v102 = Song.hasCustomLyrics.getter(v101) & 1;
        v39(v95, v2);
        *(_DWORD *)(v100 + 4) = v102;
        *(_WORD *)(v100 + 8) = 2082;
        v103 = (char *)sub_100BD644C();
        v105 = v104;
        *(_QWORD *)(v100 + 10) = sub_100BBDE38(v103, v104, &v154);
        swift_bridgeObjectRelease(v105);
        v39(v88, v2);
        v106 = "Loader supportsLyrics=%{BOOL,public}d [not supported by subscription] subscriptionCapabilities.contains(."
               "catalogLyricsViewing)=false %{public}s";
        v107 = v98;
        v108 = v99;
        v109 = (uint8_t *)v100;
        v110 = 18;
LABEL_45:
        _os_log_impl((void *)&_mh_execute_header, v107, v108, v106, v109, v110);
        swift_arrayDestroy(v101, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v101, -1, -1);
        swift_slowDealloc(v100, -1, -1);
LABEL_48:

        v125 = Song.hasCustomLyrics.getter(v124);
        return v125 & 1;
      }
      v123 = v95;
    }
    else
    {
      if (qword_1011DDFE0 != -1)
        swift_once(&qword_1011DDFE0, sub_100BCBEB4);
      v111 = type metadata accessor for Logger(0);
      sub_100048B14(v111, (uint64_t)static Logger.lyrics);
      v112 = (void (*)(char *, uint64_t, uint64_t))v152;
      v152(v91, v41, v2);
      v112(v89, v41, v2);
      v113 = ((uint64_t (*)(char *, uint64_t, uint64_t))v112)(v88, v41, v2);
      v98 = Logger.logObject.getter(v113);
      v114 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v98, v114))
      {
        v115 = v91;
        v100 = swift_slowAlloc(30, -1);
        v101 = swift_slowAlloc(32, -1);
        v154 = v101;
        *(_DWORD *)v100 = 67240962;
        v116 = Song.hasCustomLyrics.getter(v101) & 1;
        v117 = ((uint64_t (*)(char *, uint64_t))v39)(v115, v2);
        *(_DWORD *)(v100 + 4) = v116;
        *(_WORD *)(v100 + 8) = 1026;
        v118 = Song.hasLyrics.getter(v117) & 1;
        v39(v89, v2);
        *(_DWORD *)(v100 + 10) = v118;
        *(_WORD *)(v100 + 14) = 1026;
        static ApplicationCapabilities.shared.getter((uint64_t)&v156);
        v119 = v158;
        swift_bridgeObjectRetain();
        sub_100065184(&v156);
        LOBYTE(v115) = sub_100BD6578(2u, v119);
        swift_bridgeObjectRelease(v119);
        *(_DWORD *)(v100 + 16) = v115 & 1;
        *(_WORD *)(v100 + 20) = 2082;
        v120 = (char *)sub_100BD644C();
        v122 = v121;
        *(_QWORD *)(v100 + 22) = sub_100BBDE38(v120, v121, &v154);
        swift_bridgeObjectRelease(v122);
        v39(v88, v2);
        v106 = "Loader supportsLyrics=%{BOOL,public}d [can't support store lyrics] song.hasLyrics=%{BOOL,public}d allowsS"
               "ubscriptionContent=%{BOOL,public}d %{public}s";
        v107 = v98;
        v108 = v114;
        v109 = (uint8_t *)v100;
        v110 = 30;
        goto LABEL_45;
      }
      v39(v89, v2);
      v123 = v91;
    }
    v39(v123, v2);
    v39(v88, v2);
    goto LABEL_48;
  }
  if ((objc_msgSend((id)objc_opt_self(MPStoreLyricsRequest), "supportsLyricsForURLBag:", v43) & 1) != 0)
  {

    goto LABEL_34;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)(ICURLBagKeyMusicSubscription);
  v70 = v69;
  v71 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v70);
  v72 = objc_msgSend(v43, "dictionaryForBagKey:", v71);

  if (v72)
  {

    if (qword_1011DDFE0 != -1)
      swift_once(&qword_1011DDFE0, sub_100BCBEB4);
    v73 = type metadata accessor for Logger(0);
    sub_100048B14(v73, (uint64_t)static Logger.lyrics);
    v74 = v152;
    v152(v32, v41, v2);
    v75 = v148;
    v76 = v74(v148, v41, v2);
    v77 = Logger.logObject.getter(v76);
    v78 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v77, v78))
    {
      v79 = swift_slowAlloc(22, -1);
      v80 = swift_slowAlloc(64, -1);
      v156 = v80;
      *(_DWORD *)v79 = 136446466;
      v81 = Song.hasCustomLyrics.getter(v80);
      v82 = (v81 & 1) == 0;
      if ((v81 & 1) != 0)
        v83 = 1702195828;
      else
        v83 = 0x65736C6166;
      if (v82)
        v84 = (char *)0xE500000000000000;
      else
        v84 = (char *)0xE400000000000000;
      *(_QWORD *)(v79 + 4) = sub_100BBDE38((char *)v83, v84, &v156);
      swift_bridgeObjectRelease(v84);
      v39(v32, v2);
      *(_WORD *)(v79 + 12) = 2082;
      v85 = (char *)sub_100BD644C();
      v87 = v86;
      *(_QWORD *)(v79 + 14) = sub_100BBDE38(v85, v86, &v156);
      swift_bridgeObjectRelease(v87);
      v39(v75, v2);
      _os_log_impl((void *)&_mh_execute_header, v77, v78, "Loader supportsLyrics=%{public}s [no lyrics keys in bag] %{public}s", (uint8_t *)v79, 0x16u);
      swift_arrayDestroy(v80, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v80, -1, -1);
      swift_slowDealloc(v79, -1, -1);
    }
    else
    {
      v39(v32, v2);
      v39(v75, v2);
    }

  }
  else
  {
    if (qword_1011DDFE0 != -1)
      swift_once(&qword_1011DDFE0, sub_100BCBEB4);
    v126 = type metadata accessor for Logger(0);
    sub_100048B14(v126, (uint64_t)static Logger.lyrics);
    v127 = v152;
    v152(v27, v41, v2);
    v128 = v147;
    v129 = v127(v147, v41, v2);
    v130 = Logger.logObject.getter(v129);
    v131 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v130, v131))
    {
      v132 = swift_slowAlloc(22, -1);
      v133 = swift_slowAlloc(64, -1);
      v156 = v133;
      *(_DWORD *)v132 = 136446466;
      v134 = Song.hasCustomLyrics.getter(v133);
      v135 = (v134 & 1) == 0;
      if ((v134 & 1) != 0)
        v136 = 1702195828;
      else
        v136 = 0x65736C6166;
      if (v135)
        v137 = (char *)0xE500000000000000;
      else
        v137 = (char *)0xE400000000000000;
      *(_QWORD *)(v132 + 4) = sub_100BBDE38((char *)v136, v137, &v156);
      swift_bridgeObjectRelease(v137);
      v39(v27, v2);
      *(_WORD *)(v132 + 12) = 2082;
      v138 = v147;
      v139 = (char *)sub_100BD644C();
      v141 = v140;
      *(_QWORD *)(v132 + 14) = sub_100BBDE38(v139, v140, &v156);
      swift_bridgeObjectRelease(v141);
      v39(v138, v2);
      _os_log_impl((void *)&_mh_execute_header, v130, v131, "Loader supportsLyrics=%{public}s [no musicSubscription key in bag] %{public}s", (uint8_t *)v132, 0x16u);
      swift_arrayDestroy(v133, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v133, -1, -1);
      swift_slowDealloc(v132, -1, -1);
    }
    else
    {
      v39(v27, v2);
      v39(v128, v2);
    }

  }
  v125 = Song.hasCustomLyrics.getter(v142);

  return v125 & 1;
}

uint64_t sub_100BD644C()
{
  uint64_t v0;
  Swift::String v1;
  void *object;
  Swift::String v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Swift::String v8;
  void *v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Swift::String v14;
  void *v15;
  _QWORD v17[2];
  uint64_t v18;
  unint64_t v19;

  _StringGuts.grow(_:)(42);
  v0 = swift_bridgeObjectRelease(0xE000000000000000);
  v18 = 0x7469742E676E6F73;
  v19 = 0xEB000000003D656CLL;
  v1._countAndFlagsBits = Song.title.getter(v0);
  object = v1._object;
  String.append(_:)(v1);
  swift_bridgeObjectRelease(object);
  v3._countAndFlagsBits = 0x64692E676E6F7320;
  v3._object = (void *)0xE90000000000003DLL;
  String.append(_:)(v3);
  v5 = Song.id.getter(v4);
  v7 = v6;
  v8._countAndFlagsBits = MusicItemID.description.getter(v5, v6);
  v9 = v8._object;
  String.append(_:)(v8);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v9);
  v10._object = (void *)0x8000000100E55080;
  v10._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v10);
  v17[0] = Song.catalogID.getter(v11);
  v17[1] = v12;
  v13 = sub_100007E8C((uint64_t *)&unk_1011DF7F0);
  v14._countAndFlagsBits = String.init<A>(describing:)(v17, v13);
  v15 = v14._object;
  String.append(_:)(v14);
  swift_bridgeObjectRelease(v15);
  return v18;
}

uint64_t sub_100BD6578(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v9[9];

  if (*(_QWORD *)(a2 + 16))
  {
    Hasher.init(_seed:)(v9, *(_QWORD *)(a2 + 40));
    v4 = ApplicationCapabilities.Service.rawValue.getter(a1);
    v6 = v5;
    String.hash(into:)(v9, v4, v5);
    swift_bridgeObjectRelease(v6);
    v7 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(a2 + 32));
    if (((*(_QWORD *)(a2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
      __asm { BR              X9 }
  }
  return 0;
}

uint64_t sub_100BD6944(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, unint64_t, uint64_t);
  uint64_t v15;
  char v16;
  uint64_t v18;
  uint64_t v19;

  v4 = type metadata accessor for Playlist.Collaborator(0);
  v19 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a2 + 16)
    && (v7 = *(_QWORD *)(a2 + 40),
        v8 = sub_100048748((unint64_t *)&unk_1011E3C20, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Collaborator, (uint64_t)&protocol conformance descriptor for Playlist.Collaborator), v9 = dispatch thunk of Hashable._rawHashValue(seed:)(v7, v4, v8), v10 = -1 << *(_BYTE *)(a2 + 32), v11 = v9 & ~v10, ((*(_QWORD *)(a2 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0))
  {
    v12 = ~v10;
    v13 = *(_QWORD *)(v19 + 72);
    v14 = *(void (**)(char *, unint64_t, uint64_t))(v19 + 16);
    do
    {
      v14(v6, *(_QWORD *)(a2 + 48) + v13 * v11, v4);
      v15 = sub_100048748(&qword_1011DF690, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Collaborator, (uint64_t)&protocol conformance descriptor for Playlist.Collaborator);
      v16 = dispatch thunk of static Equatable.== infix(_:_:)(v6, a1, v4, v15);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v4);
      if ((v16 & 1) != 0)
        break;
      v11 = (v11 + 1) & v12;
    }
    while (((*(_QWORD *)(a2 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  }
  else
  {
    v16 = 0;
  }
  return v16 & 1;
}

uint64_t LyricsLoader.loadLyrics(for:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v2[62] = a1;
  v2[63] = v1;
  v3 = type metadata accessor for String.Encoding(0);
  v2[64] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[65] = v4;
  v2[66] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Song(0);
  v2[67] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[68] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[69] = swift_task_alloc(v7);
  v2[70] = swift_task_alloc(v7);
  v2[71] = swift_task_alloc(v7);
  v2[72] = swift_task_alloc(v7);
  v2[73] = swift_task_alloc(v7);
  v2[74] = swift_task_alloc(v7);
  v2[75] = swift_task_alloc(v7);
  v2[76] = swift_task_alloc(v7);
  v2[77] = swift_task_alloc(v7);
  v2[78] = swift_task_alloc(v7);
  v2[79] = swift_task_alloc(v7);
  return swift_task_switch(sub_100BD6BCC, 0, 0);
}

{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = v1;
  return swift_task_switch(sub_100BD8AFC, 0, 0);
}

uint64_t sub_100BD6BCC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  char *v37;
  __n128 v38;
  unint64_t v39;
  _BYTE *v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53[2];

  v2 = *(_QWORD *)(v1 + 632);
  v3 = *(_QWORD *)(v1 + 544);
  v4 = *(_QWORD *)(v1 + 536);
  v5 = *(_QWORD *)(v1 + 496);
  v6 = Song.hasLyrics.getter(a1);
  v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v1 + 640) = v7;
  v8 = v7(v2, v5, v4);
  v9 = *(_QWORD *)(v1 + 632);
  v10 = *(_QWORD *)(v1 + 544);
  v11 = *(_QWORD *)(v1 + 536);
  if ((v6 & 1) != 0)
  {
    v12 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v12(*(_QWORD *)(v1 + 632), *(_QWORD *)(v1 + 536));
LABEL_4:
    *(_QWORD *)(v1 + 648) = v12;
    v14 = sub_100007E8C(&qword_1011DF520);
    v15 = swift_allocObject(v14, 40, 7);
    *(_OWORD *)(v15 + 16) = xmmword_100EA7A90;
    sub_100007E8C(&qword_1011DF528);
    v16 = static PartialMusicProperty<A>.customLyrics.getter();
    *(_QWORD *)(v15 + 32) = v16;
    v53[0] = v15;
    specialized Array._endMutation()(v16);
    v17 = v15;
    *(_QWORD *)(v1 + 656) = v15;
    v18 = (_QWORD *)swift_task_alloc(async function pointer to MusicItem<>.with(_:)[1]);
    *(_QWORD *)(v1 + 664) = v18;
    v19 = sub_100048748(&qword_1011DF530, (uint64_t (*)(uint64_t))&type metadata accessor for Song, (uint64_t)&protocol conformance descriptor for Song);
    *v18 = v1;
    v18[1] = sub_100BD6FCC;
    return MusicItem<>.with(_:)(*(_QWORD *)(v1 + 624), v17, *(_QWORD *)(v1 + 536), &protocol witness table for Song, &protocol witness table for Song, v19);
  }
  v13 = Song.hasCustomLyrics.getter(v8);
  v12 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v12(v9, v11);
  if ((v13 & 1) != 0)
    goto LABEL_4;
  if (qword_1011DDFE0 != -1)
    swift_once(&qword_1011DDFE0, sub_100BCBEB4);
  v21 = *(_QWORD *)(v1 + 576);
  v22 = *(_QWORD *)(v1 + 536);
  v23 = *(_QWORD *)(v1 + 496);
  v24 = *(void **)(v1 + 504);
  v25 = type metadata accessor for Logger(0);
  sub_100048B14(v25, (uint64_t)static Logger.lyrics);
  v7(v21, v23, v22);
  v26 = Logger.logObject.getter(v24);
  v27 = static os_log_type_t.default.getter();
  v28 = os_log_type_enabled(v26, v27);
  v29 = *(_QWORD *)(v1 + 576);
  v30 = *(_QWORD *)(v1 + 536);
  v31 = *(void **)(v1 + 504);
  if (v28)
  {
    v32 = swift_slowAlloc(22, -1);
    v33 = swift_slowAlloc(64, -1);
    v53[0] = v33;
    *(_DWORD *)v32 = 136446466;
    *(_QWORD *)(v1 + 472) = v31;
    v34 = (char *)String.init<A>(describing:)(v1 + 472, &type metadata for UnsafeMutableRawPointer);
    *(_QWORD *)(v32 + 4) = sub_100BBDE38(v34, v35, v53);

    swift_bridgeObjectRelease();
    *(_WORD *)(v32 + 12) = 2082;
    v36 = (char *)sub_100BD644C();
    *(_QWORD *)(v32 + 14) = sub_100BBDE38(v36, v37, v53);
    v38 = swift_bridgeObjectRelease();
    ((void (*)(uint64_t, uint64_t, __n128))v12)(v29, v30, v38);
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "Loader<%{public}s> loadLyrics(for:completion:) returned without loading lyrics [hasLyrics and hasCustomLyrics were false] %{public}s", (uint8_t *)v32, 0x16u);
    swift_arrayDestroy(v33, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v33, -1, -1);
    swift_slowDealloc(v32, -1, -1);
  }
  else
  {

    v12(v29, v30);
  }

  v39 = sub_100BDC8B8();
  swift_allocError(&type metadata for LyricsLoader.LyricsError, v39, 0, 0);
  *v40 = 1;
  swift_willThrow(v41);
  v42 = *(_QWORD *)(v1 + 624);
  v43 = *(_QWORD *)(v1 + 616);
  v44 = *(_QWORD *)(v1 + 608);
  v45 = *(_QWORD *)(v1 + 600);
  v46 = *(_QWORD *)(v1 + 592);
  v47 = *(_QWORD *)(v1 + 584);
  v48 = *(_QWORD *)(v1 + 576);
  v49 = *(_QWORD *)(v1 + 568);
  v50 = *(_QWORD *)(v1 + 560);
  v51 = *(_QWORD *)(v1 + 552);
  v52 = *(_QWORD *)(v1 + 528);
  swift_task_dealloc(*(_QWORD *)(v1 + 632));
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_100BD6FCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 664);
  *(_QWORD *)(*(_QWORD *)v1 + 672) = v0;
  swift_task_dealloc(v2);
  if (v0)
  {
    v3 = sub_100BD7F74;
  }
  else
  {
    swift_bridgeObjectRelease();
    v3 = sub_100BD7038;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100BD7038(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  id v7;
  NSString v8;
  unsigned int v9;
  Swift::String v10;
  char v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  _QWORD *v34;
  uint64_t v35;
  void *v36;
  char *v37;
  NSObject *v38;
  void *v39;
  id v40;
  id v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  id v49;
  id v50;
  id v51;
  id v52;
  NSObject *v53;
  os_log_type_t v54;
  _BOOL4 v55;
  void (*v56)(uint64_t, uint64_t, __n128);
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  id v64;
  uint64_t v65;
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  __n128 v70;
  uint64_t v71;
  void (*v72)(uint64_t, uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  NSObject *v81;
  os_log_type_t v82;
  _BOOL4 v83;
  uint64_t (*v84)(uint64_t, uint64_t, __n128);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  char v94;
  BOOL v95;
  uint64_t v96;
  char *v97;
  __n128 v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  char *v104;
  __n128 v105;
  char *v106;
  char *v107;
  __n128 v108;
  void (*v109)(uint64_t, uint64_t);
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  _BYTE *v113;
  __n128 v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  _BYTE *v120;
  __n128 v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  void (*v131)(uint64_t, uint64_t, uint64_t);
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD *v137;
  _QWORD *v138;
  id v139;
  Class isa;
  id v141;
  __n128 v142;
  uint64_t v143;
  unsigned int v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  os_log_type_t typea[8];
  os_log_type_t type;
  os_log_type_t typeb[8];
  uint64_t v151;
  void *v152;
  uint64_t v153;
  uint64_t v154[2];

  v2 = Song.customLyrics.getter(a1);
  if (!v3)
  {
LABEL_11:
    v28 = Song.hasLyrics.getter(v2);
    if ((v28 & 1) != 0)
    {
      v29 = (char *)v1[63];
      v30 = Song.id.getter(v28);
      v32 = v31;
      v1[56] = 0;
      v33 = *(void **)&v29[OBJC_IVAR___MusicLyricsLoader_accessQueue];
      v34 = (_QWORD *)swift_allocObject(&unk_101105A08, 48, 7);
      v34[2] = v1 + 56;
      v34[3] = v29;
      v34[4] = v30;
      v34[5] = v32;
      v35 = swift_allocObject(&unk_101105A30, 32, 7);
      *(_QWORD *)(v35 + 16) = sub_100BDC900;
      *(_QWORD *)(v35 + 24) = v34;
      v1[44] = sub_10010942C;
      v1[45] = v35;
      v1[40] = _NSConcreteStackBlock;
      v1[41] = 1107296256;
      v1[42] = sub_10046D7B4;
      v1[43] = &unk_101105A48;
      v36 = _Block_copy(v1 + 40);
      v37 = v29;
      v38 = v33;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_release();
      dispatch_sync(v38, v36);

      _Block_release(v36);
      LOBYTE(v36) = swift_isEscapingClosureAtFileLocation(v35, "", 122, 302, 31, 1);
      swift_release();
      if ((v36 & 1) == 0)
      {
        v39 = (void *)v1[56];
        swift_bridgeObjectRelease();
        swift_release();

        if (!v39)
        {
          static ApplicationCapabilities.shared.getter((uint64_t)(v1 + 25));
          sub_100065184(v1 + 25);
          if ((*((_BYTE *)v1 + 210) & 1) != 0)
          {
            v131 = (void (*)(uint64_t, uint64_t, uint64_t))v1[80];
            v132 = v1[74];
            v133 = v1[67];
            v134 = v1[62];
            v135 = v1[63];
            sub_10004A07C(0, &qword_1011DF548, MPStoreLyricsRequest_ptr);
            v131(v132, v134, v133);
            v136 = MPStoreLyricsRequest.init(song:)(v132);
            v1[89] = v136;
            v137 = (_QWORD *)swift_task_alloc(48);
            v1[90] = v137;
            v137[2] = v135;
            v137[3] = v136;
            v137[4] = v134;
            v138 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
            v1[91] = v138;
            *v138 = v1;
            v138[1] = sub_100BD7DF0;
            return withCheckedThrowingContinuation<A>(isolation:function:_:)(v1 + 51, 0, 0, 0xD000000000000010, 0x8000000100E54FA0, sub_100BDC934, v137, &type metadata for LyricsLoader.Result);
          }
        }
        v40 = objc_msgSend((id)objc_opt_self(MPCloudServiceStatusController), "sharedController");
        v41 = objc_msgSend(v40, "musicSubscriptionStatus");

        static ApplicationCapabilities.shared.getter((uint64_t)(v1 + 10));
        sub_100065184(v1 + 10);
        v42 = v1[11];
        if (qword_1011DDFE0 != -1)
          swift_once(&qword_1011DDFE0, sub_100BCBEB4);
        v43 = (void (*)(uint64_t, uint64_t, uint64_t))v1[80];
        v44 = v1[73];
        v45 = v1[67];
        v46 = v1[62];
        v47 = (void *)v1[63];
        v48 = type metadata accessor for Logger(0);
        sub_100048B14(v48, (uint64_t)static Logger.lyrics);
        v43(v44, v46, v45);
        v49 = v47;
        v50 = v41;
        v51 = v49;
        v52 = v50;
        v53 = Logger.logObject.getter(v52);
        v54 = static os_log_type_t.default.getter();
        v55 = os_log_type_enabled(v53, v54);
        v56 = (void (*)(uint64_t, uint64_t, __n128))v1[81];
        v57 = v1[73];
        v58 = v1[67];
        v59 = (void *)v1[63];
        if (v55)
        {
          v146 = v1[67];
          v152 = v52;
          v60 = swift_slowAlloc(38, -1);
          v144 = v42;
          v61 = swift_slowAlloc(96, -1);
          v154[0] = v61;
          *(_DWORD *)v60 = 136446978;
          v1[54] = v59;
          v62 = (char *)String.init<A>(describing:)(v1 + 54, &type metadata for UnsafeMutableRawPointer);
          *(_QWORD *)(v60 + 4) = sub_100BBDE38(v62, v63, v154);

          swift_bridgeObjectRelease();
          *(_WORD *)(v60 + 12) = 2082;
          v1[55] = v41;
          v64 = v152;
          v65 = sub_100007E8C(&qword_1011DF540);
          v66 = (char *)String.init<A>(describing:)(v1 + 55, v65);
          *(_QWORD *)(v60 + 14) = sub_100BBDE38(v66, v67, v154);

          swift_bridgeObjectRelease();
          *(_WORD *)(v60 + 22) = 1026;
          *(_DWORD *)(v60 + 24) = HIWORD(v144) & 1;
          *(_WORD *)(v60 + 28) = 2082;
          v68 = (char *)sub_100BD644C();
          *(_QWORD *)(v60 + 30) = sub_100BBDE38(v68, v69, v154);
          v70 = swift_bridgeObjectRelease();
          v56(v57, v146, v70);
          _os_log_impl((void *)&_mh_execute_header, v53, v54, "Loader<%{public}s> loadLyrics(for:completion:) didn't load store lyrics [not supported by subscription] subscriptionStatus=%{public}s subscriptionStatus.capabilities.contains(.catalogLyricsViewing)=%{BOOL,public}d %{public}s", (uint8_t *)v60, 0x26u);
          swift_arrayDestroy(v61, 3, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v61, -1, -1);
          v71 = v60;
          v52 = v152;
          swift_slowDealloc(v71, -1, -1);
        }
        else
        {

          ((void (*)(uint64_t, uint64_t))v56)(v57, v58);
        }

        v109 = (void (*)(uint64_t, uint64_t))v1[81];
        v117 = v1[78];
        v118 = v1[67];
        v119 = sub_100BDC8B8();
        swift_allocError(&type metadata for LyricsLoader.LyricsError, v119, 0, 0);
        *v120 = 2;
        swift_willThrow(v121);

        v115 = v117;
        v116 = v118;
LABEL_32:
        v109(v115, v116);
        v122 = v1[78];
        v123 = v1[77];
        v124 = v1[76];
        v125 = v1[75];
        v126 = v1[74];
        v127 = v1[73];
        v128 = v1[72];
        v129 = v1[71];
        v130 = v1[70];
        v147 = v1[69];
        *(_QWORD *)typeb = v1[66];
        swift_task_dealloc(v1[79]);
        swift_task_dealloc(v122);
        swift_task_dealloc(v123);
        swift_task_dealloc(v124);
        swift_task_dealloc(v125);
        swift_task_dealloc(v126);
        swift_task_dealloc(v127);
        swift_task_dealloc(v128);
        swift_task_dealloc(v129);
        swift_task_dealloc(v130);
        swift_task_dealloc(v147);
        swift_task_dealloc(*(_QWORD *)typeb);
        return ((uint64_t (*)(void))v1[1])();
      }
      __break(1u);
    }
    else if (qword_1011DDFE0 == -1)
    {
LABEL_20:
      v72 = (void (*)(uint64_t, uint64_t, uint64_t))v1[80];
      v73 = v1[78];
      v74 = v1[77];
      v75 = v1[76];
      v76 = v1[75];
      v77 = v1[67];
      v78 = v1[62];
      v79 = (void *)v1[63];
      v80 = type metadata accessor for Logger(0);
      sub_100048B14(v80, (uint64_t)static Logger.lyrics);
      v72(v74, v78, v77);
      v72(v75, v73, v77);
      v72(v76, v78, v77);
      v81 = Logger.logObject.getter(v79);
      v82 = static os_log_type_t.default.getter();
      v83 = os_log_type_enabled(v81, v82);
      v84 = (uint64_t (*)(uint64_t, uint64_t, __n128))v1[81];
      v85 = v1[77];
      v86 = v1[76];
      v87 = v1[75];
      v88 = v1[67];
      v89 = (void *)v1[63];
      if (v83)
      {
        type = v82;
        v90 = swift_slowAlloc(42, -1);
        v153 = swift_slowAlloc(128, -1);
        v154[0] = v153;
        *(_DWORD *)v90 = 136446978;
        v1[58] = v89;
        v91 = (char *)String.init<A>(describing:)(v1 + 58, &type metadata for UnsafeMutableRawPointer);
        *(_QWORD *)(v90 + 4) = sub_100BBDE38(v91, v92, v154);

        swift_bridgeObjectRelease();
        *(_WORD *)(v90 + 12) = 2082;
        v94 = Song.hasCustomLyrics.getter(v93);
        v95 = (v94 & 1) == 0;
        if ((v94 & 1) != 0)
          v96 = 1702195828;
        else
          v96 = 0x65736C6166;
        if (v95)
          v97 = (char *)0xE500000000000000;
        else
          v97 = (char *)0xE400000000000000;
        *(_QWORD *)(v90 + 14) = sub_100BBDE38((char *)v96, v97, v154);
        v98 = swift_bridgeObjectRelease();
        v99 = v84(v85, v88, v98);
        *(_WORD *)(v90 + 22) = 2082;
        v100 = Song.customLyrics.getter(v99);
        v102 = (char *)Optional<A>.description.getter(v100, v101);
        v104 = v103;
        swift_bridgeObjectRelease();
        *(_QWORD *)(v90 + 24) = sub_100BBDE38(v102, v104, v154);
        v105 = swift_bridgeObjectRelease();
        v84(v86, v88, v105);
        *(_WORD *)(v90 + 32) = 2082;
        v106 = (char *)sub_100BD644C();
        *(_QWORD *)(v90 + 34) = sub_100BBDE38(v106, v107, v154);
        v108 = swift_bridgeObjectRelease();
        v84(v87, v88, v108);
        _os_log_impl((void *)&_mh_execute_header, v81, type, "Loader<%{public}s> loadLyrics(for:completion:) didn't load lyrics [no lyrics found] song.hasLyrics=false song.hasCustomLyrics=%{public}s song.customLyrics=%{public}s %{public}s", (uint8_t *)v90, 0x2Au);
        swift_arrayDestroy(v153, 4, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v153, -1, -1);
        swift_slowDealloc(v90, -1, -1);
      }
      else
      {

        ((void (*)(uint64_t, uint64_t))v84)(v85, v88);
        ((void (*)(uint64_t, uint64_t))v84)(v86, v88);
        ((void (*)(uint64_t, uint64_t))v84)(v87, v88);
      }

      v109 = (void (*)(uint64_t, uint64_t))v1[81];
      v110 = v1[78];
      v111 = v1[67];
      v112 = sub_100BDC8B8();
      swift_allocError(&type metadata for LyricsLoader.LyricsError, v112, 0, 0);
      *v113 = 1;
      swift_willThrow(v114);
      v115 = v110;
      v116 = v111;
      goto LABEL_32;
    }
    swift_once(&qword_1011DDFE0, sub_100BCBEB4);
    goto LABEL_20;
  }
  v4 = v2;
  v5 = v3;
  v6 = HIBYTE(v3) & 0xF;
  if ((v3 & 0x2000000000000000) == 0)
    v6 = v2 & 0xFFFFFFFFFFFFLL;
  if (!v6)
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  v7 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend(v7, "BOOLForKey:", v8);

  if (!v9)
    goto LABEL_9;
  if (*DeviceCapabilities.isInternalInstall.unsafeMutableAddressor() != 1)
    goto LABEL_9;
  v10 = String.trim()();
  v11 = sub_100BD85EC(544502844, 0xE400000000000000, v10._countAndFlagsBits, (uint64_t)v10._object);
  v12 = swift_bridgeObjectRelease();
  if ((v11 & 1) == 0)
    goto LABEL_9;
  v13 = v1[66];
  v14 = v1[65];
  v15 = v1[64];
  static String.Encoding.utf8.getter(v12);
  v16 = String.data(using:allowLossyConversion:)(v13, 0, v4, v5);
  v18 = v17;
  v1[85] = v16;
  v1[86] = v17;
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  if (v18 >> 60 != 15)
  {
    swift_bridgeObjectRelease();
    v139 = objc_allocWithZone((Class)MSVLyricsTTMLParser);
    sub_100079DE4(v16, v18);
    isa = Data._bridgeToObjectiveC()().super.isa;
    v141 = objc_msgSend(v139, "initWithTTMLData:", isa);
    v1[87] = v141;
    sub_1000822B4(v16, v18);

    v1[7] = v1 + 57;
    v1[2] = v1;
    v1[3] = sub_100BD7C40;
    v1[50] = swift_continuation_init(v1 + 2, 1);
    v1[46] = _NSConcreteStackBlock;
    v1[47] = 0x40000000;
    v1[48] = sub_100BD8750;
    v1[49] = &unk_101105A70;
    objc_msgSend(v141, "parseWithCompletion:", v1 + 46);
    return swift_continuation_await(v1 + 2, v142);
  }
  else
  {
LABEL_9:
    ((void (*)(_QWORD, _QWORD))v1[81])(v1[78], v1[67]);
    v19 = v1[78];
    v20 = v1[77];
    v21 = v1[76];
    v22 = v1[75];
    v151 = v4;
    v23 = v1[74];
    v24 = v1[73];
    v25 = v1[72];
    v26 = v1[71];
    v143 = v1[70];
    v145 = v1[69];
    *(_QWORD *)typea = v1[66];
    swift_task_dealloc(v1[79]);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v143);
    swift_task_dealloc(v145);
    swift_task_dealloc(*(_QWORD *)typea);
    return ((uint64_t (*)(uint64_t, unint64_t, _QWORD))v1[1])(v151, v5, 0);
  }
}

uint64_t sub_100BD7C40()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 704) = v1;
  if (v1)
    v2 = sub_100BD8060;
  else
    v2 = sub_100BD7CA0;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_100BD7CA0()
{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *(void **)(v0 + 696);
  v2 = *(_QWORD *)(v0 + 688);
  v3 = *(_QWORD *)(v0 + 680);
  v4 = *(void (**)(uint64_t, uint64_t))(v0 + 648);
  v5 = *(_QWORD *)(v0 + 624);
  v6 = *(_QWORD *)(v0 + 536);
  v7 = *(void **)(v0 + 456);
  v8 = type metadata accessor for Lyrics();
  swift_allocObject(v8, 160, 7);
  v21 = Lyrics.init(identifier:songInfo:)(0, 0, v7);

  sub_1000822B4(v3, v2);
  v4(v5, v6);
  v9 = *(_QWORD *)(v0 + 624);
  v10 = *(_QWORD *)(v0 + 616);
  v11 = *(_QWORD *)(v0 + 608);
  v12 = *(_QWORD *)(v0 + 600);
  v13 = *(_QWORD *)(v0 + 592);
  v14 = *(_QWORD *)(v0 + 584);
  v15 = *(_QWORD *)(v0 + 576);
  v16 = *(_QWORD *)(v0 + 568);
  v17 = *(_QWORD *)(v0 + 560);
  v19 = *(_QWORD *)(v0 + 552);
  v20 = *(_QWORD *)(v0 + 528);
  swift_task_dealloc(*(_QWORD *)(v0 + 632));
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v0 + 8))(v21, 0, 1);
}

uint64_t sub_100BD7DF0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 728);
  *(_QWORD *)(*v1 + 736) = v0;
  swift_task_dealloc(v3);
  swift_task_dealloc(*(_QWORD *)(v2 + 720));
  if (v0)
    v4 = sub_100BD84E8;
  else
    v4 = sub_100BD7E5C;
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100BD7E5C()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 648);
  v2 = *(_QWORD *)(v0 + 624);
  v3 = *(_QWORD *)(v0 + 536);

  v1(v2, v3);
  v17 = *(_QWORD *)(v0 + 416);
  v18 = *(_QWORD *)(v0 + 408);
  v16 = *(unsigned __int8 *)(v0 + 424);
  v4 = *(_QWORD *)(v0 + 624);
  v5 = *(_QWORD *)(v0 + 616);
  v6 = *(_QWORD *)(v0 + 608);
  v7 = *(_QWORD *)(v0 + 600);
  v8 = *(_QWORD *)(v0 + 592);
  v9 = *(_QWORD *)(v0 + 584);
  v10 = *(_QWORD *)(v0 + 576);
  v11 = *(_QWORD *)(v0 + 568);
  v12 = *(_QWORD *)(v0 + 560);
  v14 = *(_QWORD *)(v0 + 552);
  v15 = *(_QWORD *)(v0 + 528);
  swift_task_dealloc(*(_QWORD *)(v0 + 632));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v0 + 8))(v18, v17, v16);
}

uint64_t sub_100BD7F74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 656));
  v1 = *(_QWORD *)(v0 + 624);
  v2 = *(_QWORD *)(v0 + 616);
  v3 = *(_QWORD *)(v0 + 608);
  v4 = *(_QWORD *)(v0 + 600);
  v5 = *(_QWORD *)(v0 + 592);
  v6 = *(_QWORD *)(v0 + 584);
  v7 = *(_QWORD *)(v0 + 576);
  v8 = *(_QWORD *)(v0 + 568);
  v9 = *(_QWORD *)(v0 + 560);
  v11 = *(_QWORD *)(v0 + 552);
  v12 = *(_QWORD *)(v0 + 528);
  swift_task_dealloc(*(_QWORD *)(v0 + 632));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100BD8060(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  _BOOL4 v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t, __n128);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char v32;
  BOOL v33;
  uint64_t v34;
  char *v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  __n128 v43;
  char *v44;
  char *v45;
  __n128 v46;
  uint64_t v47;
  void *v48;
  unint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  _BYTE *v55;
  __n128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  NSObject *log;
  os_log_t loga;
  os_log_type_t type;
  uint64_t v73[2];

  swift_willThrow(a1);
  if (qword_1011DDFE0 != -1)
    swift_once(&qword_1011DDFE0, sub_100BCBEB4);
  v2 = *(_QWORD *)(v1 + 704);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 640);
  v4 = *(_QWORD *)(v1 + 624);
  v5 = *(_QWORD *)(v1 + 568);
  v6 = *(_QWORD *)(v1 + 560);
  v7 = *(_QWORD *)(v1 + 552);
  v8 = *(_QWORD *)(v1 + 536);
  v9 = *(_QWORD *)(v1 + 496);
  v10 = *(void **)(v1 + 504);
  v11 = type metadata accessor for Logger(0);
  sub_100048B14(v11, (uint64_t)static Logger.lyrics);
  v3(v5, v9, v8);
  v3(v6, v4, v8);
  v3(v7, v9, v8);
  v12 = v10;
  swift_errorRetain(v2);
  v13 = v12;
  v14 = swift_errorRetain(v2);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter();
  v17 = os_log_type_enabled(v15, v16);
  v18 = *(_QWORD *)(v1 + 704);
  v19 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v1 + 648);
  v20 = *(_QWORD *)(v1 + 568);
  v21 = *(_QWORD *)(v1 + 560);
  v22 = *(_QWORD *)(v1 + 552);
  v23 = *(_QWORD *)(v1 + 536);
  v24 = *(void **)(v1 + 504);
  if (v17)
  {
    log = v15;
    type = v16;
    v67 = *(_QWORD *)(v1 + 552);
    v25 = swift_slowAlloc(52, -1);
    v68 = swift_slowAlloc(160, -1);
    v73[0] = v68;
    *(_DWORD *)v25 = 136447234;
    *(_QWORD *)(v1 + 480) = v24;
    v26 = (char *)String.init<A>(describing:)(v1 + 480, &type metadata for UnsafeMutableRawPointer);
    *(_QWORD *)(v25 + 4) = sub_100BBDE38(v26, v27, v73);

    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2082;
    *(_QWORD *)(v1 + 488) = v18;
    swift_errorRetain(v18);
    v28 = sub_100007E8C(&qword_1011DF550);
    v29 = (char *)String.init<A>(describing:)(v1 + 488, v28);
    *(_QWORD *)(v25 + 14) = sub_100BBDE38(v29, v30, v73);
    swift_bridgeObjectRelease();
    swift_errorRelease(v18);
    v31 = swift_errorRelease(v18);
    *(_WORD *)(v25 + 22) = 2082;
    v32 = Song.hasCustomLyrics.getter(v31);
    v33 = (v32 & 1) == 0;
    if ((v32 & 1) != 0)
      v34 = 1702195828;
    else
      v34 = 0x65736C6166;
    if (v33)
      v35 = (char *)0xE500000000000000;
    else
      v35 = (char *)0xE400000000000000;
    *(_QWORD *)(v25 + 24) = sub_100BBDE38((char *)v34, v35, v73);
    v36 = swift_bridgeObjectRelease();
    v37 = v19(v20, v23, v36);
    *(_WORD *)(v25 + 32) = 2082;
    v38 = Song.customLyrics.getter(v37);
    v40 = (char *)Optional<A>.description.getter(v38, v39);
    v42 = v41;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v25 + 34) = sub_100BBDE38(v40, v42, v73);
    v43 = swift_bridgeObjectRelease();
    v19(v21, v23, v43);
    *(_WORD *)(v25 + 42) = 2082;
    v44 = (char *)sub_100BD644C();
    *(_QWORD *)(v25 + 44) = sub_100BBDE38(v44, v45, v73);
    v46 = swift_bridgeObjectRelease();
    v19(v67, v23, v46);
    _os_log_impl((void *)&_mh_execute_header, log, type, "Loader<%{public}s> loadLyrics(for:completion:) didn't parse TTML custom lyrics with error=%{public}s song.hasCustomLyrics=%{public}s song.customLyrics=%{public}s %{public}s", (uint8_t *)v25, 0x34u);
    swift_arrayDestroy(v68, 5, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v68, -1, -1);
    swift_slowDealloc(v25, -1, -1);

  }
  else
  {

    swift_errorRelease(v18);
    swift_errorRelease(v18);
    ((void (*)(uint64_t, uint64_t))v19)(v20, v23);
    ((void (*)(uint64_t, uint64_t))v19)(v21, v23);
    ((void (*)(uint64_t, uint64_t))v19)(v22, v23);

  }
  v47 = *(_QWORD *)(v1 + 704);
  v48 = *(void **)(v1 + 696);
  v49 = *(_QWORD *)(v1 + 688);
  v50 = *(_QWORD *)(v1 + 680);
  v51 = *(void (**)(uint64_t, uint64_t))(v1 + 648);
  v52 = *(_QWORD *)(v1 + 624);
  v53 = *(_QWORD *)(v1 + 536);
  v54 = sub_100BDC8B8();
  swift_allocError(&type metadata for LyricsLoader.LyricsError, v54, 0, 0);
  *v55 = 0;
  swift_willThrow(v56);

  swift_errorRelease(v47);
  sub_1000822B4(v50, v49);
  v51(v52, v53);
  v57 = *(_QWORD *)(v1 + 624);
  v58 = *(_QWORD *)(v1 + 616);
  v59 = *(_QWORD *)(v1 + 608);
  v60 = *(_QWORD *)(v1 + 600);
  v61 = *(_QWORD *)(v1 + 592);
  v62 = *(_QWORD *)(v1 + 584);
  v63 = *(_QWORD *)(v1 + 576);
  v64 = *(_QWORD *)(v1 + 568);
  v65 = *(_QWORD *)(v1 + 560);
  v69 = *(_QWORD *)(v1 + 552);
  loga = *(os_log_t *)(v1 + 528);
  swift_task_dealloc(*(_QWORD *)(v1 + 632));
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v69);
  swift_task_dealloc(loga);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_100BD84E8()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 648);
  v2 = *(_QWORD *)(v0 + 624);
  v3 = *(_QWORD *)(v0 + 536);

  v1(v2, v3);
  v4 = *(_QWORD *)(v0 + 624);
  v5 = *(_QWORD *)(v0 + 616);
  v6 = *(_QWORD *)(v0 + 608);
  v7 = *(_QWORD *)(v0 + 600);
  v8 = *(_QWORD *)(v0 + 592);
  v9 = *(_QWORD *)(v0 + 584);
  v10 = *(_QWORD *)(v0 + 576);
  v11 = *(_QWORD *)(v0 + 568);
  v12 = *(_QWORD *)(v0 + 560);
  v14 = *(_QWORD *)(v0 + 552);
  v15 = *(_QWORD *)(v0 + 528);
  swift_task_dealloc(*(_QWORD *)(v0 + 632));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100BD85EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  Swift::String_optional v4;
  uint64_t countAndFlagsBits;
  void *object;
  char v7;
  Swift::String_optional v8;
  Swift::String_optional v9;
  void *v10;
  _BOOL8 v11;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v4 = String.Iterator.next()();
  if (v4.value._object)
  {
    countAndFlagsBits = v4.value._countAndFlagsBits;
    object = v4.value._object;
    do
    {
      v9 = String.Iterator.next()();
      if (!v9.value._object)
      {
        swift_bridgeObjectRelease(object);
        swift_bridgeObjectRelease(a4);
        swift_bridgeObjectRelease(a2);
        return 1;
      }
      if (countAndFlagsBits == v9.value._countAndFlagsBits && object == v9.value._object)
      {
        swift_bridgeObjectRelease(object);
        swift_bridgeObjectRelease(v9.value._object);
      }
      else
      {
        v7 = _stringCompareWithSmolCheck(_:_:expecting:)(countAndFlagsBits, object, v9.value._countAndFlagsBits, v9.value._object, 0);
        swift_bridgeObjectRelease(object);
        swift_bridgeObjectRelease(v9.value._object);
        if ((v7 & 1) == 0)
        {
          swift_bridgeObjectRelease(a4);
          swift_bridgeObjectRelease(a2);
          return 0;
        }
      }
      v8 = String.Iterator.next()();
      countAndFlagsBits = v8.value._countAndFlagsBits;
      object = v8.value._object;
    }
    while (v8.value._object);
  }
  swift_bridgeObjectRelease(a4);
  v10 = String.Iterator.next()().value._object;
  swift_bridgeObjectRelease(a2);
  v11 = v10 == 0;
  swift_bridgeObjectRelease(v10);
  return v11;
}

void sub_100BD8750(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  id v9;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    v5 = sub_100007E8C(&qword_1011DF550);
    v6 = swift_allocError(v5, &protocol self-conformance witness table for Error, 0, 0);
    *v7 = a3;
    v8 = a3;
    swift_continuation_throwingResumeWithError(v3, v6);
  }
  else if (a2)
  {
    **(_QWORD **)(*(_QWORD *)(v3 + 64) + 40) = a2;
    v9 = a2;
    swift_continuation_throwingResume(v3);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100BD87DC(uint64_t a1, char *a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v20;
  char *v21;

  v21 = a2;
  v7 = sub_100007E8C(&qword_1011DF7E8);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin();
  v10 = type metadata accessor for Song(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin();
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16))(v14, a4, v10, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  v15 = *(unsigned __int8 *)(v8 + 80);
  v16 = (v15 + 16) & ~v15;
  v17 = swift_allocObject(&unk_101106250, v16 + v9, v15 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v17 + v16, (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  sub_100BDCF44(a3, (uint64_t)v14, (uint64_t)sub_100BDFEFC, v17, v21);
  v18 = swift_release();
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v11 + 8))(v14, v10, v18);
}

void LyricsLoader.hasRequest(for:)(uint64_t a1)
{
  char *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  _QWORD *v7;
  uint64_t v8;
  void *v9;
  NSObject *v10;
  id v11;
  _QWORD aBlock[6];
  char v13;

  v2 = v1;
  v3 = Song.id.getter(a1);
  v5 = v4;
  v13 = 0;
  v6 = *(void **)&v1[OBJC_IVAR___MusicLyricsLoader_accessQueue];
  v7 = (_QWORD *)swift_allocObject(&unk_101105A98, 48, 7);
  v7[2] = &v13;
  v7[3] = v2;
  v7[4] = v3;
  v7[5] = v5;
  v8 = swift_allocObject(&unk_101105AC0, 32, 7);
  *(_QWORD *)(v8 + 16) = sub_100BDC944;
  *(_QWORD *)(v8 + 24) = v7;
  aBlock[4] = sub_1001095DC;
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10046D7B4;
  aBlock[3] = &unk_101105AD8;
  v9 = _Block_copy(aBlock);
  v10 = v6;
  v11 = v2;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v10, v9);

  _Block_release(v9);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation(v8, "", 122, 294, 31, 1);
  swift_release();
  if ((v2 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
  }
}

double LyricsLoader.cancelRequest(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  double result;

  v1 = Song.id.getter(a1);
  sub_100BDA5CC(v1, v2);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_100BD8AFC()
{
  uint64_t v0;
  int8x16_t *v1;
  _QWORD *v2;

  v1 = (int8x16_t *)swift_task_alloc(32);
  *(_QWORD *)(v0 + 56) = v1;
  v1[1] = vextq_s8(*(int8x16_t *)(v0 + 40), *(int8x16_t *)(v0 + 40), 8uLL);
  v2 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 64) = v2;
  *v2 = v0;
  v2[1] = sub_100BD8BA0;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD000000000000010, 0x8000000100E54FA0, sub_100BDC960, v1, &type metadata for LyricsLoader.Result);
}

uint64_t sub_100BD8BA0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 64);
  *(_QWORD *)(*v1 + 72) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_100BD8C20;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 56));
    v4 = sub_100BD8C0C;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100BD8C0C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(unsigned __int8 *)(v0 + 32));
}

uint64_t sub_100BD8C20()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 56));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_100BD8C54(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  uint64_t v13;

  v5 = sub_100007E8C(&qword_1011DF7E8);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = __chkstk_darwin();
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))((char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5, v8);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = (v9 + 16) & ~v9;
  v11 = swift_allocObject(&unk_1011061B0, v10 + v7, v9 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v11 + v10, (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  LyricsLoader.loadLyrics(for:completion:)(a3, (void (*)(uint64_t, unint64_t, uint64_t, uint64_t))sub_100BDFEFC, v11);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100BD8D38(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _QWORD v10[2];
  char v11;

  if (a3 == 255)
  {
    if (a4)
    {
      v4 = a4;
    }
    else
    {
      v7 = sub_100BDC8B8();
      v4 = swift_allocError(&type metadata for LyricsLoader.LyricsError, v7, 0, 0);
      a4 = 0;
      *v8 = 3;
    }
    v10[0] = v4;
    swift_errorRetain(a4);
    v9 = sub_100007E8C(&qword_1011DF7E8);
    return CheckedContinuation.resume(throwing:)(v10, v9);
  }
  else
  {
    v10[0] = a1;
    v10[1] = a2;
    v11 = a3 & 1;
    sub_100055BBC(a1, a2, a3 & 1);
    v5 = sub_100007E8C(&qword_1011DF7E8);
    return CheckedContinuation.resume(returning:)(v10, v5);
  }
}

id static LyricsLoader.requiredProperties()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Class isa;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  Class v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  Class v30;
  id v31;
  unint64_t v32;
  id v33;
  Class v34;
  Class v35;
  id v36;
  unint64_t v37;
  id v38;
  Class v39;
  Class v40;
  id v41;
  _BYTE v43[56];
  _BYTE v44[112];

  v0 = sub_100007E8C(&qword_1011DF560);
  v1 = swift_allocObject(v0, 96, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100EA7BA0;
  *(_QWORD *)(v1 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongTitle);
  *(_QWORD *)(v1 + 40) = v2;
  *(_QWORD *)(v1 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongArtwork);
  *(_QWORD *)(v1 + 56) = v3;
  *(_QWORD *)(v1 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongHasVideo);
  *(_QWORD *)(v1 + 72) = v4;
  *(_QWORD *)(v1 + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongArtistUploadedContent);
  *(_QWORD *)(v1 + 88) = v5;
  v6 = sub_100007E8C(&qword_1011DF568);
  inited = swift_initStackObject(v6, v44);
  *(_OWORD *)(inited + 16) = xmmword_100EA7AC0;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipSongArtist);
  *(_QWORD *)(inited + 40) = v8;
  v9 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v9 + 16) = xmmword_100EA7AA0;
  v10 = MPModelPropertyArtistName;
  *(_QWORD *)(v9 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyArtistName);
  *(_QWORD *)(v9 + 40) = v11;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v9);
  v13 = (void *)objc_opt_self(MPPropertySet);
  v14 = objc_msgSend(v13, "propertySetWithProperties:", isa);

  *(_QWORD *)(inited + 48) = v14;
  *(_QWORD *)(inited + 56) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipSongLyrics);
  *(_QWORD *)(inited + 64) = v15;
  v16 = swift_allocObject(v0, 96, 7);
  *(_OWORD *)(v16 + 16) = xmmword_100EA7BA0;
  *(_QWORD *)(v16 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyLyricsText);
  *(_QWORD *)(v16 + 40) = v17;
  *(_QWORD *)(v16 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyLyricsHasLibraryLyrics);
  *(_QWORD *)(v16 + 56) = v18;
  *(_QWORD *)(v16 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyLyricsHasStoreLyrics);
  *(_QWORD *)(v16 + 72) = v19;
  *(_QWORD *)(v16 + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyLyricsHasTimeSyncedLyrics);
  *(_QWORD *)(v16 + 88) = v20;
  v21 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v16);
  v22 = objc_msgSend(v13, "propertySetWithProperties:", v21);

  *(_QWORD *)(inited + 72) = v22;
  *(_QWORD *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipSongAlbum);
  *(_QWORD *)(inited + 88) = v23;
  v24 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v24 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v24 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyAlbumTitle);
  *(_QWORD *)(v24 + 40) = v25;
  v26 = swift_initStackObject(v6, v43);
  *(_OWORD *)(v26 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v26 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipAlbumArtist);
  *(_QWORD *)(v26 + 40) = v27;
  v28 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v28 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v28 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  *(_QWORD *)(v28 + 40) = v29;
  v30 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v28);
  v31 = objc_msgSend(v13, "propertySetWithProperties:", v30);

  *(_QWORD *)(v26 + 48) = v31;
  v32 = sub_100BA7F80(v26);
  v33 = objc_allocWithZone((Class)MPPropertySet);
  v34 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v24);
  sub_10004A07C(0, &qword_1011DF570, MPPropertySet_ptr);
  v35 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v32);
  v36 = objc_msgSend(v33, "initWithProperties:relationships:", v34, v35);

  *(_QWORD *)(inited + 96) = v36;
  v37 = sub_100BA7F80(inited);
  v38 = objc_allocWithZone((Class)MPPropertySet);
  v39 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v1);
  v40 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v37);
  v41 = objc_msgSend(v38, "initWithProperties:relationships:", v39, v40);

  return v41;
}

void LyricsLoader.loadLyrics(for:completion:)(void *a1, void (*a2)(uint64_t, unint64_t, uint64_t, uint64_t), uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  id v15;
  double v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  NSString v23;
  unsigned int v24;
  Swift::String v25;
  char v26;
  __n128 v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  id v32;
  char *v33;
  id v34;
  char *v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  void **v39;
  char *v40;
  char *v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char **v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  _QWORD *v52;
  uint64_t v53;
  void *v54;
  NSObject *v55;
  char *v56;
  uint64_t v57;
  id v58;
  id v59;
  unsigned int v60;
  uint64_t v61;
  id v62;
  char *v63;
  id v64;
  id v65;
  char *v66;
  void **v67;
  NSObject *v68;
  int v69;
  uint64_t v70;
  char *v71;
  char *v72;
  void **v73;
  uint64_t v74;
  char *v75;
  char *v76;
  id v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  char *v89;
  id v90;
  char *v91;
  NSObject *v92;
  os_log_type_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  unsigned int v97;
  id v98;
  void *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  char *v105;
  id v106;
  id v107;
  char *v108;
  char *v109;
  char *v110;
  unint64_t v111;
  uint64_t v112;
  _BYTE *v113;
  char *v114;
  char *v115;
  char *v116;
  id v117;
  void *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  char *v124;
  id v125;
  id v126;
  char *v127;
  char *v128;
  char *v129;
  void **v130;
  unint64_t v131;
  uint64_t v132;
  _BYTE *v133;
  id v134;
  id v135;
  os_log_type_t v136;
  char *v137;
  char *v138;
  char *v139;
  id v140;
  id v141;
  char *v142;
  char *v143;
  char *v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t v147;
  _BYTE *v148;
  id v149;
  Class isa;
  id v151;
  uint64_t v152;
  uint64_t v153;
  void *v154;
  uint64_t v155;
  uint64_t v156;
  void **v157;
  uint64_t v158;
  void (*v159)(uint64_t, unint64_t, uint64_t, uint64_t);
  char *v160;
  uint64_t v161;
  char *v162;
  char v163;
  void **v164;
  uint64_t v165;
  void *v166;
  void *v167;
  void (*v168)(void *, uint64_t);
  char **v169;

  v4 = v3;
  v8 = type metadata accessor for String.Encoding(0);
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)&v10 = __chkstk_darwin().n128_u64[0];
  v12 = (char *)&v155 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend(a1, "lyrics", v10);
  if (v13)
  {
    v14 = v13;
    v159 = a2;
    v15 = objc_msgSend(v13, "text");
    v158 = a3;
    if (v15)
    {
      v17 = v15;
      v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
      v20 = v19;

      v21 = HIBYTE(v20) & 0xF;
      if ((v20 & 0x2000000000000000) == 0)
        v21 = v18 & 0xFFFFFFFFFFFFLL;
      if (v21)
      {
        v22 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
        v23 = String._bridgeToObjectiveC()();
        v24 = objc_msgSend(v22, "BOOLForKey:", v23);

        if (v24
          && *DeviceCapabilities.isInternalInstall.unsafeMutableAddressor() == 1
          && (v25 = String.trim()(),
              v26 = sub_100BD85EC(544502844, 0xE400000000000000, v25._countAndFlagsBits, (uint64_t)v25._object),
              v27 = swift_bridgeObjectRelease(),
              (v26 & 1) != 0)
          && (static String.Encoding.utf8.getter(v27),
              v28 = String.data(using:allowLossyConversion:)(v12, 0, v18, v20),
              v30 = v29,
              (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8),
              v30 >> 60 != 15))
        {
          swift_bridgeObjectRelease();
          v149 = objc_allocWithZone((Class)MSVLyricsTTMLParser);
          sub_100079DE4(v28, v30);
          isa = Data._bridgeToObjectiveC()().super.isa;
          v151 = objc_msgSend(v149, "initWithTTMLData:", isa);
          sub_1000822B4(v28, v30);

          v152 = swift_allocObject(&unk_101105B88, 32, 7);
          v153 = v158;
          *(_QWORD *)(v152 + 16) = v159;
          *(_QWORD *)(v152 + 24) = v153;
          v168 = sub_100BDF640;
          v169 = (char **)v152;
          v164 = _NSConcreteStackBlock;
          v165 = 1107296256;
          v166 = sub_100537628;
          v167 = &unk_101105BA0;
          v154 = _Block_copy(&v164);
          swift_retain();
          objc_msgSend(v151, "parseWithCompletion:", v154, swift_release().n128_f64[0]);

          _Block_release(v154);
          sub_1000822B4(v28, v30);
        }
        else
        {
          v159(v18, v20, 0, 0);

          swift_bridgeObjectRelease();
        }
        return;
      }
      *(_QWORD *)&v16 = swift_bridgeObjectRelease().n128_u64[0];
    }
    v47 = &selRef_handleVolumeDownButton;
    if ((objc_msgSend(v14, "hasStoreLyrics", v16) & 1) != 0)
    {
      v48 = sub_100BDA1D8();
      v50 = v49;
      v162 = 0;
      v51 = *(void **)&v4[OBJC_IVAR___MusicLyricsLoader_accessQueue];
      v52 = (_QWORD *)swift_allocObject(&unk_101105B10, 48, 7);
      v52[2] = &v162;
      v52[3] = v4;
      v52[4] = v48;
      v52[5] = v50;
      v53 = swift_allocObject(&unk_101105B38, 32, 7);
      *(_QWORD *)(v53 + 16) = sub_100BE00A0;
      *(_QWORD *)(v53 + 24) = v52;
      v168 = (void (*)(void *, uint64_t))sub_1001095DC;
      v169 = (char **)v53;
      v164 = _NSConcreteStackBlock;
      v165 = 1107296256;
      v166 = sub_10046D7B4;
      v167 = &unk_101105B50;
      v54 = _Block_copy(&v164);
      v47 = v169;
      v4 = v4;
      v55 = v51;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_release();
      dispatch_sync(v55, v54);

      _Block_release(v54);
      LOBYTE(v54) = swift_isEscapingClosureAtFileLocation(v53, "", 122, 302, 31, 1);
      swift_release();
      if ((v54 & 1) == 0)
      {
        v56 = v162;
        swift_release();
        swift_bridgeObjectRelease();

        v57 = (uint64_t)v159;
        if (!v56)
        {
          static ApplicationCapabilities.shared.getter((uint64_t)&v162);
          sub_100065184(&v162);
          if ((v163 & 1) != 0)
          {
            v134 = objc_msgSend(objc_allocWithZone((Class)MPStoreLyricsRequest), "init");
            objc_msgSend(v134, "setSong:", a1);
            v135 = a1;
            sub_100BDD1E4(v134, v135, v57, v158, v4);

            return;
          }
        }
        v58 = objc_msgSend((id)objc_opt_self(MPCloudServiceStatusController), "sharedController");
        v59 = objc_msgSend(v58, "musicSubscriptionStatus");

        static ApplicationCapabilities.shared.getter((uint64_t)&v164);
        sub_100065184(&v164);
        v60 = v165;
        if (qword_1011DDFE0 != -1)
          swift_once(&qword_1011DDFE0, sub_100BCBEB4);
        v61 = type metadata accessor for Logger(0);
        sub_100048B14(v61, (uint64_t)static Logger.lyrics);
        v62 = a1;
        v63 = v4;
        v64 = v59;
        v65 = v62;
        v66 = v63;
        v67 = (void **)v64;
        v68 = Logger.logObject.getter(v67);
        v69 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v68, (os_log_type_t)v69))
        {
          HIDWORD(v155) = v69;
          v70 = swift_slowAlloc(48, -1);
          v156 = swift_slowAlloc(128, -1);
          v160 = v66;
          v161 = v156;
          *(_DWORD *)v70 = 136447234;
          v71 = (char *)String.init<A>(describing:)(&v160, &type metadata for UnsafeMutableRawPointer);
          *(_QWORD *)(v70 + 4) = sub_100BBDE38(v71, v72, &v161);
          swift_bridgeObjectRelease();

          *(_WORD *)(v70 + 12) = 2082;
          v160 = (char *)v59;
          v157 = v67;
          v73 = v67;
          v74 = sub_100007E8C(&qword_1011DF540);
          v75 = (char *)String.init<A>(describing:)(&v160, v74);
          *(_QWORD *)(v70 + 14) = sub_100BBDE38(v75, v76, &v161);
          swift_bridgeObjectRelease();

          *(_WORD *)(v70 + 22) = 1026;
          *(_DWORD *)(v70 + 24) = HIWORD(v60) & 1;
          *(_WORD *)(v70 + 28) = 2082;
          v77 = objc_msgSend(v65, "title");
          if (v77)
          {
            v78 = v77;
            v79 = static String._unconditionallyBridgeFromObjectiveC(_:)(v77);
            v81 = v80;

          }
          else
          {
            v79 = 0;
            v81 = 0;
          }
          v136 = BYTE4(v155);
          v137 = (char *)Optional<A>.description.getter(v79, v81);
          v139 = v138;
          swift_bridgeObjectRelease();
          *(_QWORD *)(v70 + 30) = sub_100BBDE38(v137, v139, &v161);
          swift_bridgeObjectRelease();

          *(_WORD *)(v70 + 38) = 2082;
          v140 = objc_msgSend(v65, "identifiers");
          v141 = objc_msgSend(v140, "description");
          v142 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v141);
          v144 = v143;

          *(_QWORD *)(v70 + 40) = sub_100BBDE38(v142, v144, &v161);
          swift_bridgeObjectRelease();

          _os_log_impl((void *)&_mh_execute_header, v68, v136, "Loader<%{public}s> loadLyrics(for:completion:) didn't load store lyrics [not supported by subscription] subscriptionStatus=%{public}s subscriptionStatus.capabilities.contains(.catalogLyricsViewing)=%{BOOL,public}d song.title=%{public}s song.identifiers=%{public}s", (uint8_t *)v70, 0x30u);
          v145 = v156;
          swift_arrayDestroy(v156, 4, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v145, -1, -1);
          swift_slowDealloc(v70, -1, -1);

          v67 = v157;
        }
        else
        {

        }
        v146 = sub_100BDC8B8();
        v147 = swift_allocError(&type metadata for LyricsLoader.LyricsError, v146, 0, 0);
        *v148 = 2;
        v159(0, 0, 255, v147);
        swift_errorRelease(v147);

        goto LABEL_46;
      }
      __break(1u);
    }
    else if (qword_1011DDFE0 == -1)
    {
LABEL_28:
      v82 = type metadata accessor for Logger(0);
      sub_100048B14(v82, (uint64_t)static Logger.lyrics);
      v83 = v14;
      v84 = a1;
      v85 = v83;
      v86 = v84;
      v87 = v85;
      v88 = v86;
      v89 = v4;
      v14 = v87;
      v90 = v88;
      v91 = v89;
      v92 = Logger.logObject.getter(v91);
      v93 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v92, v93))
      {
        v94 = swift_slowAlloc(48, -1);
        v157 = (void **)swift_slowAlloc(128, -1);
        v164 = v157;
        *(_DWORD *)v94 = 136447234;
        v162 = v91;
        v95 = (char *)String.init<A>(describing:)(&v162, &type metadata for UnsafeMutableRawPointer);
        *(_QWORD *)(v94 + 4) = sub_100BBDE38(v95, v96, (uint64_t *)&v164);
        swift_bridgeObjectRelease();

        *(_WORD *)(v94 + 12) = 1026;
        v97 = objc_msgSend(v14, v47[418]);

        *(_DWORD *)(v94 + 14) = v97;
        *(_WORD *)(v94 + 18) = 2082;
        v98 = objc_msgSend(v14, "text");
        if (v98)
        {
          v99 = v98;
          v100 = static String._unconditionallyBridgeFromObjectiveC(_:)(v98);
          v102 = v101;

        }
        else
        {
          v100 = 0;
          v102 = 0;
        }
        v114 = (char *)Optional<A>.description.getter(v100, v102);
        v116 = v115;
        swift_bridgeObjectRelease();
        *(_QWORD *)(v94 + 20) = sub_100BBDE38(v114, v116, (uint64_t *)&v164);
        swift_bridgeObjectRelease();

        *(_WORD *)(v94 + 28) = 2082;
        v117 = objc_msgSend(v90, "title");
        if (v117)
        {
          v118 = v117;
          v119 = static String._unconditionallyBridgeFromObjectiveC(_:)(v117);
          v121 = v120;

        }
        else
        {
          v119 = 0;
          v121 = 0;
        }
        v122 = (char *)Optional<A>.description.getter(v119, v121);
        v124 = v123;
        swift_bridgeObjectRelease();
        *(_QWORD *)(v94 + 30) = sub_100BBDE38(v122, v124, (uint64_t *)&v164);
        swift_bridgeObjectRelease();

        *(_WORD *)(v94 + 38) = 2082;
        v125 = objc_msgSend(v90, "identifiers");
        v126 = objc_msgSend(v125, "description");
        v127 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v126);
        v129 = v128;

        *(_QWORD *)(v94 + 40) = sub_100BBDE38(v127, v129, (uint64_t *)&v164);
        swift_bridgeObjectRelease();

        _os_log_impl((void *)&_mh_execute_header, v92, v93, "Loader<%{public}s> loadLyrics(for:completion:) didn't load lyrics [no lyrics found] lyrics.hasStoreLyrics=%{BOOL,public}d lyrics.text=%{public}s song.title=%{public}s song.identifiers=%{public}s", (uint8_t *)v94, 0x30u);
        v130 = v157;
        swift_arrayDestroy(v157, 4, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v130, -1, -1);
        swift_slowDealloc(v94, -1, -1);
      }
      else
      {

      }
      v131 = sub_100BDC8B8();
      v132 = swift_allocError(&type metadata for LyricsLoader.LyricsError, v131, 0, 0);
      *v133 = 1;
      v159(0, 0, 255, v132);
      swift_errorRelease(v132);
LABEL_46:

      return;
    }
    swift_once(&qword_1011DDFE0, sub_100BCBEB4);
    goto LABEL_28;
  }
  if (qword_1011DDFE0 != -1)
    swift_once(&qword_1011DDFE0, sub_100BCBEB4);
  v31 = type metadata accessor for Logger(0);
  sub_100048B14(v31, (uint64_t)static Logger.lyrics);
  v32 = a1;
  v33 = v4;
  v34 = v32;
  v35 = v33;
  v36 = Logger.logObject.getter(v35);
  v37 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v36, v37))
  {
    v158 = a3;
    v159 = a2;
    v38 = swift_slowAlloc(32, -1);
    v39 = (void **)swift_slowAlloc(96, -1);
    v164 = v39;
    *(_DWORD *)v38 = 136446722;
    v162 = v35;
    v40 = (char *)String.init<A>(describing:)(&v162, &type metadata for UnsafeMutableRawPointer);
    *(_QWORD *)(v38 + 4) = sub_100BBDE38(v40, v41, (uint64_t *)&v164);
    swift_bridgeObjectRelease();

    *(_WORD *)(v38 + 12) = 2082;
    v42 = objc_msgSend(v34, "title");
    if (v42)
    {
      v43 = v42;
      v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
      v46 = v45;

    }
    else
    {
      v44 = 0;
      v46 = 0;
    }
    v103 = (char *)Optional<A>.description.getter(v44, v46);
    v105 = v104;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v38 + 14) = sub_100BBDE38(v103, v105, (uint64_t *)&v164);
    swift_bridgeObjectRelease();

    *(_WORD *)(v38 + 22) = 2082;
    v106 = objc_msgSend(v34, "identifiers");
    v107 = objc_msgSend(v106, "description");
    v108 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v107);
    v110 = v109;

    *(_QWORD *)(v38 + 24) = sub_100BBDE38(v108, v110, (uint64_t *)&v164);
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, v36, v37, "Loader<%{public}s> loadLyrics(for:completion:) returned without loading lyrics [MPModelLyrics was nil] song.title=%{public}s song.identifiers=%{public}s", (uint8_t *)v38, 0x20u);
    swift_arrayDestroy(v39, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v39, -1, -1);
    swift_slowDealloc(v38, -1, -1);

    a2 = v159;
  }
  else
  {

  }
  v111 = sub_100BDC8B8();
  v112 = swift_allocError(&type metadata for LyricsLoader.LyricsError, v111, 0, 0);
  *v113 = 1;
  a2(0, 0, 255, v112);
  swift_errorRelease(v112);
}

void sub_100BDA120(void *a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v5;
  id v6;

  if (a1)
  {
    v5 = type metadata accessor for Lyrics();
    swift_allocObject(v5, 160, 7);
    v6 = a1;
    Lyrics.init(identifier:songInfo:)(0, 0, v6);
    a3();

    swift_release();
  }
  else
  {
    ((void (*)(_QWORD, _QWORD, uint64_t, uint64_t))a3)(0, 0, 255, a2);
  }
}

uint64_t sub_100BDA1D8()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v1 = v0;
  v2 = objc_msgSend(v0, "identifiers");
  v3 = MPIdentifierSet.bestStoreIdentifier.getter();
  v5 = v4;

  if (!v5)
  {
    v6 = objc_msgSend(v1, "identifiers");
    v3 = MPIdentifierSet.bestLibraryIdentifier.getter();
    v8 = v7;

    if (!v8)
    {
      v9 = objc_msgSend(v1, "identifiers");
      NSObject.hashValue.getter();

      return dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    }
  }
  return v3;
}

void LyricsLoader.hasRequest(for:)()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  NSObject *v9;
  id v10;
  _QWORD aBlock[6];
  char v12;

  v1 = v0;
  v2 = sub_100BDA1D8();
  v4 = v3;
  v12 = 0;
  v5 = *(void **)&v0[OBJC_IVAR___MusicLyricsLoader_accessQueue];
  v6 = (_QWORD *)swift_allocObject(&unk_101105BD8, 48, 7);
  v6[2] = &v12;
  v6[3] = v1;
  v6[4] = v2;
  v6[5] = v4;
  v7 = swift_allocObject(&unk_101105C00, 32, 7);
  *(_QWORD *)(v7 + 16) = sub_100BE00A4;
  *(_QWORD *)(v7 + 24) = v6;
  aBlock[4] = sub_1001095DC;
  aBlock[5] = v7;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10046D7B4;
  aBlock[3] = &unk_101105C18;
  v8 = _Block_copy(aBlock);
  v9 = v5;
  v10 = v1;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v9, v8);

  _Block_release(v8);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation(v7, "", 122, 294, 31, 1);
  swift_release();
  if ((v1 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
  }
}

double LyricsLoader.cancelRequest(for:)()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  v0 = sub_100BDA1D8();
  sub_100BDA5CC(v0, v1);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

void sub_100BDA470(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  char v8;
  char v9;
  _BYTE v10[24];

  v7 = a2 + OBJC_IVAR___MusicLyricsLoader_lyricsOperations;
  swift_beginAccess(a2 + OBJC_IVAR___MusicLyricsLoader_lyricsOperations, v10, 0, 0);
  if (*(_QWORD *)(*(_QWORD *)v7 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10079C2C4(a3, a4);
    v9 = v8;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = 0;
  }
  *a1 = v9 & 1;
}

void sub_100BDA514(void **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  void *v11;
  id v12;
  void *v13;
  _BYTE v14[24];

  v7 = (uint64_t *)(a2 + OBJC_IVAR___MusicLyricsLoader_lyricsOperations);
  swift_beginAccess(a2 + OBJC_IVAR___MusicLyricsLoader_lyricsOperations, v14, 0, 0);
  v8 = *v7;
  if (*(_QWORD *)(v8 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v9 = sub_10079C2C4(a3, a4);
    if ((v10 & 1) != 0)
    {
      v11 = *(void **)(*(_QWORD *)(v8 + 56) + 8 * v9);
      v12 = v11;
    }
    else
    {
      v11 = 0;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = 0;
  }
  v13 = *a1;
  *a1 = v11;

}

void sub_100BDA5CC(uint64_t a1, uint64_t a2)
{
  char *v2;
  void *v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  NSObject *v9;
  char *v10;
  char isEscapingClosureAtFileLocation;
  double v12;
  id v13;
  _QWORD aBlock[6];
  id v15;

  v15 = 0;
  v5 = *(void **)&v2[OBJC_IVAR___MusicLyricsLoader_accessQueue];
  v6 = (_QWORD *)swift_allocObject(&unk_1011061D8, 48, 7);
  v6[2] = &v15;
  v6[3] = v2;
  v6[4] = a1;
  v6[5] = a2;
  v7 = swift_allocObject(&unk_101106200, 32, 7);
  *(_QWORD *)(v7 + 16) = sub_100BDFF30;
  *(_QWORD *)(v7 + 24) = v6;
  aBlock[4] = sub_1001095DC;
  aBlock[5] = v7;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10046D7B4;
  aBlock[3] = &unk_101106218;
  v8 = _Block_copy(aBlock);
  v9 = v5;
  v10 = v2;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v9, v8);

  _Block_release(v8);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v7, "", 122, 310, 31, 1);
  *(_QWORD *)&v12 = swift_release().n128_u64[0];
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    objc_msgSend(v15, "cancel", v12);
    v13 = v15;
    swift_release();

  }
}

void sub_100BDA73C(void **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  _BYTE v15[24];
  _BYTE v16[24];

  v7 = (uint64_t *)(a2 + OBJC_IVAR___MusicLyricsLoader_lyricsOperations);
  swift_beginAccess(a2 + OBJC_IVAR___MusicLyricsLoader_lyricsOperations, v16, 0, 0);
  v8 = *v7;
  if (*(_QWORD *)(*v7 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v9 = sub_10079C2C4(a3, a4);
    if ((v10 & 1) != 0)
    {
      v11 = *(void **)(*(_QWORD *)(v8 + 56) + 8 * v9);
      v12 = v11;
    }
    else
    {
      v11 = 0;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = 0;
  }
  v13 = *a1;
  *a1 = v11;

  swift_beginAccess(v7, v15, 33, 0);
  swift_bridgeObjectRetain();
  v14 = (void *)sub_100BDC968(a3, a4);
  swift_endAccess(v15);
  swift_bridgeObjectRelease();

}

void sub_100BDA840(void *a1, uint64_t a2, uint64_t a3, _QWORD *a4, void (*a5)(_QWORD, _QWORD, _QWORD, _QWORD), uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t Strong;
  void *v12;
  Swift::String v13;
  Swift::String v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  double (*v26)(void *, uint64_t);
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)();
  void *v37;
  NSObject *v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  void *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  __n128 v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  __n128 v53;
  unint64_t v54;
  uint64_t v55;
  _BYTE *v56;
  id v57;
  uint64_t v58;
  _BYTE *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  __n128 v63;
  id v64;
  Class isa;
  id v66;
  _QWORD *v67;
  void (*v68)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v69;
  char *v70;
  void *v71;
  id v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(_QWORD, _QWORD, _QWORD, _QWORD);
  void *v81;
  char *v82;
  __int128 v83[2];
  uint64_t aBlock;
  unint64_t v85;
  void *v86;
  void *v87;
  double (*v88)(void *, uint64_t);
  _QWORD *v89;
  char v90[24];
  char v91[32];

  v79 = a6;
  v80 = a5;
  v81 = a1;
  v78 = type metadata accessor for String.Encoding(0);
  v77 = *(_QWORD *)(v78 - 8);
  __chkstk_darwin();
  v76 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a3 + 16;
  swift_beginAccess(v10, v91, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v10);
  if (Strong)
  {
    v12 = (void *)Strong;
    aBlock = 0x3C726564616F4CLL;
    v85 = 0xE700000000000000;
    *(_QWORD *)&v83[0] = Strong;
    v13._countAndFlagsBits = String.init<A>(describing:)(v83, &type metadata for UnsafeMutableRawPointer);
    String.append(_:)(v13);
    swift_bridgeObjectRelease();
    v14._countAndFlagsBits = 62;
    v14._object = (void *)0xE100000000000000;
    String.append(_:)(v14);

    v15 = aBlock;
    v16 = (char *)v85;
  }
  else
  {
    v16 = (char *)0xEC0000003E303078;
    v15 = 0x303C726564616F4CLL;
  }
  v82 = (char *)v15;
  if (qword_1011DDFE0 != -1)
    swift_once(&qword_1011DDFE0, sub_100BCBEB4);
  v17 = type metadata accessor for Logger(0);
  sub_100048B14(v17, (uint64_t)static Logger.lyrics);
  sub_100064C78((uint64_t)a4, (uint64_t)&aBlock);
  v18 = swift_bridgeObjectRetain_n(v16, 2);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc(22, -1);
    v74 = a4;
    v22 = v21;
    v23 = swift_slowAlloc(64, -1);
    v75 = a2;
    v24 = v23;
    *(_QWORD *)&v83[0] = v23;
    *(_DWORD *)v22 = 136446466;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v22 + 4) = sub_100BBDE38(v82, v16, (uint64_t *)v83);
    swift_bridgeObjectRelease_n(v16, 3);
    *(_WORD *)(v22 + 12) = 2082;
    v25 = v87;
    v26 = v88;
    sub_100007E68(&aBlock, (uint64_t)v87);
    v27 = (char *)(*((uint64_t (**)(void *, double (*)(void *, uint64_t)))v26 + 2))(v25, v26);
    *(_QWORD *)(v22 + 14) = sub_100BBDE38(v27, v28, (uint64_t *)v83);
    swift_bridgeObjectRelease();
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(&aBlock);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "%{public}s loadLyrics(for:completion:) completed for %{public}s", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy(v24, 2, (char *)&type metadata for Any + 8);
    a2 = v75;
    swift_slowDealloc(v24, -1, -1);
    v29 = v22;
    a4 = v74;
    swift_slowDealloc(v29, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(v16, 2);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(&aBlock);
  }

  swift_beginAccess(v10, v90, 0, 0);
  v30 = swift_unknownObjectWeakLoadStrong(v10);
  if (!v30)
  {
    v36 = 0;
    v34 = 0;
    v40 = v81;
    if (a2)
      goto LABEL_19;
    goto LABEL_14;
  }
  v31 = (void *)v30;
  v32 = *(void **)(v30 + OBJC_IVAR___MusicLyricsLoader_accessQueue);
  v33 = a4;
  sub_100064C78((uint64_t)a4, (uint64_t)v83);
  v34 = swift_allocObject(&unk_101106138, 64, 7);
  *(_QWORD *)(v34 + 16) = v31;
  sub_100064C48(v83, v34 + 24);
  v35 = swift_allocObject(&unk_101106160, 32, 7);
  v36 = sub_100BDFEDC;
  *(_QWORD *)(v35 + 16) = sub_100BDFEDC;
  *(_QWORD *)(v35 + 24) = v34;
  v88 = (double (*)(void *, uint64_t))sub_1001095DC;
  v89 = (_QWORD *)v35;
  aBlock = (uint64_t)_NSConcreteStackBlock;
  v85 = 1107296256;
  v86 = sub_10046D7B4;
  v87 = &unk_101106178;
  v37 = _Block_copy(&aBlock);
  v38 = v32;
  v39 = v31;
  swift_retain();
  swift_release();
  dispatch_sync(v38, v37);

  _Block_release(v37);
  LOBYTE(v39) = swift_isEscapingClosureAtFileLocation(v35, "", 122, 349, 39, 1);
  swift_release();
  if ((v39 & 1) == 0)
  {
    a4 = v33;
    v40 = v81;
    if (a2)
      goto LABEL_19;
LABEL_14:
    if (v40)
    {
      v41 = v40;
      v42 = objc_msgSend(v41, "lyrics");
      if (!v42)
        goto LABEL_18;
      v43 = v42;
      v44 = objc_msgSend(v42, "TTML");

      if (!v44)
        goto LABEL_18;
      v45 = static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
      v47 = v46;

      v48 = v76;
      static String.Encoding.utf8.getter(v49);
      v50 = String.data(using:allowLossyConversion:)(v48, 0, v45, v47);
      v52 = v51;
      v53 = swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t, __n128))(v77 + 8))(v48, v78, v53);
      if (v52 >> 60 != 15)
      {
        v64 = objc_allocWithZone((Class)MSVLyricsTTMLParser);
        sub_100079DE4(v50, v52);
        isa = Data._bridgeToObjectiveC()().super.isa;
        v66 = objc_msgSend(v64, "initWithTTMLData:", isa);
        sub_1000822B4(v50, v52);

        v67 = (_QWORD *)swift_allocObject(&unk_1011060E8, 56, 7);
        v69 = v79;
        v68 = v80;
        v67[2] = v41;
        v67[3] = v68;
        v70 = v82;
        v67[4] = v69;
        v67[5] = v70;
        v67[6] = v16;
        v88 = sub_100BDFEA0;
        v89 = v67;
        aBlock = (uint64_t)_NSConcreteStackBlock;
        v85 = 1107296256;
        v86 = sub_100537628;
        v87 = &unk_101106100;
        v71 = _Block_copy(&aBlock);
        v72 = v41;
        swift_retain();
        objc_msgSend(v66, "parseWithCompletion:", v71, swift_release().n128_f64[0]);

        _Block_release(v71);
        sub_1000822B4(v50, v52);
      }
      else
      {
LABEL_18:
        v54 = sub_100BDC8B8();
        v55 = swift_allocError(&type metadata for LyricsLoader.LyricsError, v54, 0, 0);
        *v56 = 1;
        v57 = v41;
        sub_100BDD47C(v55, v57, v82, v16);
        swift_errorRelease(v55);
        swift_bridgeObjectRelease();

        v58 = swift_allocError(&type metadata for LyricsLoader.LyricsError, v54, 0, 0);
        *v59 = 1;
        v80(0, 0, 255, v58);

        swift_errorRelease(v58);
      }
      goto LABEL_20;
    }
LABEL_19:
    v60 = a4[3];
    v61 = a4[4];
    v62 = sub_100007E68(a4, v60);
    sub_100BDDB84(a2, (uint64_t)v62, v82, v16, v60, v61);
    v63 = swift_bridgeObjectRelease();
    ((void (*)(_QWORD, _QWORD, uint64_t, uint64_t, __n128))v80)(0, 0, 255, a2, v63);
LABEL_20:
    sub_10004BA30((uint64_t)v36, v34);
    return;
  }
  __break(1u);
}

void sub_100BDAF5C(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  _BYTE v9[24];

  v3 = a2[3];
  v4 = a2[4];
  sub_100007E68(a2, v3);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  v7 = v6;
  swift_beginAccess(a1 + OBJC_IVAR___MusicLyricsLoader_lyricsOperations, v9, 33, 0);
  v8 = (void *)sub_100BDC968(v5, v7);
  swift_endAccess(v9);
  swift_bridgeObjectRelease();

}

double sub_100BDAFFC(void *a1, uint64_t a2, void *a3, void (*a4)(void), uint64_t a5, char *a6, char *a7)
{
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v19;
  double result;
  uint64_t v21;
  id v22;

  if (!a1)
  {
    v19 = a3;
    sub_100BDD47C(a2, v19, a6, a7);

    ((void (*)(_QWORD, _QWORD, uint64_t, uint64_t))a4)(0, 0, 255, a2);
    return result;
  }
  v9 = a1;
  v10 = objc_msgSend(a3, "lyrics");
  v11 = v10;
  if (!v10)
    goto LABEL_7;
  v12 = objc_msgSend(v10, "identifiers");

  v13 = objc_msgSend(v12, "lyricsID");
  if (!v13)
  {
    v11 = 0;
LABEL_7:
    v15 = 0;
    goto LABEL_8;
  }
  v11 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v15 = v14;

LABEL_8:
  v21 = type metadata accessor for Lyrics();
  swift_allocObject(v21, 160, 7);
  v22 = v9;
  Lyrics.init(identifier:songInfo:)((uint64_t)v11, v15, v22);
  a4();

  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100BDB178(uint64_t a1, _QWORD *a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  _BYTE v15[24];

  v5 = a2[3];
  v6 = a2[4];
  sub_100007E68(a2, v5);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
  v9 = v8;
  v10 = (_QWORD *)(a1 + OBJC_IVAR___MusicLyricsLoader_lyricsOperations);
  swift_beginAccess(v10, v15, 33, 0);
  v11 = a3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v10);
  v14 = *v10;
  *v10 = 0x8000000000000000;
  sub_100BDCB74((uint64_t)v11, v7, v9, isUniquelyReferenced_nonNull_native);
  *v10 = v14;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_endAccess(v15);
}

id LyricsLoader.init()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  objc_class *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  objc_super v23;
  _QWORD *v24;

  v22 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v1 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin();
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin();
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DispatchQoS(0);
  __chkstk_darwin();
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = OBJC_IVAR___MusicLyricsLoader_lyricsOperations;
  v10 = v0;
  *(_QWORD *)&v0[v9] = sub_100BA7F74((uint64_t)_swiftEmptyArrayStorage);
  v21 = OBJC_IVAR___MusicLyricsLoader_accessQueue;
  sub_10004A07C(0, (unint64_t *)&qword_1011DF580, OS_dispatch_queue_ptr);
  static DispatchQoS.unspecified.getter(v11);
  v24 = _swiftEmptyArrayStorage;
  v12 = sub_100048748((unint64_t *)&unk_1011DE3E0, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v13 = sub_100007E8C((uint64_t *)&unk_1011DF590);
  v14 = sub_100BA84CC();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v24, v13, v14, v4, v12);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v22);
  v15 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000001BLL, 0x8000000100E543C0, v8, v6, v3, 0);
  *(_QWORD *)&v10[v21] = v15;
  v16 = OBJC_IVAR___MusicLyricsLoader_operationQueue;
  v17 = objc_msgSend(objc_allocWithZone((Class)NSOperationQueue), "init");
  objc_msgSend(v17, "setMaxConcurrentOperationCount:", 1);
  *(_QWORD *)&v10[v16] = v17;

  v18 = (objc_class *)type metadata accessor for LyricsLoader();
  v23.receiver = v10;
  v23.super_class = v18;
  return objc_msgSendSuper2(&v23, "init");
}

id LyricsLoader.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LyricsLoader();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t LyricsLoader.Song.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  v5 = type metadata accessor for LyricsLoader.Song(0);
  return swift_storeEnumTagMultiPayload(a2, v5, 0);
}

uint64_t LyricsLoader.Song.init(_:in:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;

  *a3 = a1;
  a3[1] = a2;
  v4 = type metadata accessor for LyricsLoader.Song(0);
  swift_storeEnumTagMultiPayload(a3, v4, 1);
  return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a3, 0, 1, v4);
}

void LyricsLoader.Song.modelObjectSong.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  __n128 v16;
  _QWORD aBlock[5];
  uint64_t v18;

  v1 = v0;
  v2 = type metadata accessor for Song(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for LyricsLoader.Song(0);
  __chkstk_darwin(v6);
  v8 = (id *)((char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100BDF6B8(v1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload(v8, v6) == 1)
  {

  }
  else
  {
    (*(void (**)(char *, id *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_10004A07C(0, &qword_1011DF5A8, MPIdentifierSet_ptr);
    v9 = objc_msgSend((id)objc_opt_self(MPModelSong), "kindWithVariants:", 1);
    __chkstk_darwin(v9);
    aBlock[-2] = v5;
    sub_100BDC2B4(0xD000000000000012, 0x8000000100E54FC0, v10, (uint64_t)sub_100BDF6FC, (uint64_t)&aBlock[-4]);
    v12 = v11;
    __chkstk_darwin(v11);
    aBlock[-2] = v5;
    v13 = objc_allocWithZone((Class)MPModelSong);
    v14 = swift_allocObject(&unk_101105C50, 32, 7);
    *(_QWORD *)(v14 + 16) = sub_100BDF704;
    *(_QWORD *)(v14 + 24) = &aBlock[-4];
    aBlock[4] = sub_10004D5F4;
    v18 = v14;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004BF88;
    aBlock[3] = &unk_101105C68;
    v15 = _Block_copy(aBlock);
    objc_msgSend(v13, "initWithIdentifiers:block:", v12, v15, swift_retain(v14).n128_f64[0]);

    _Block_release(v15);
    swift_release(v18);
    LOBYTE(v12) = swift_isEscapingClosureAtFileLocation(v14, "", 0, 0, 0, 1);
    v16 = swift_release(v14);
    if ((v12 & 1) != 0)
      __break(1u);
    else
      (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v16);
  }
}

void sub_100BDB86C(uint64_t isEscapingClosureAtFileLocation, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  void **v26;
  uint64_t v27;
  double (*v28)(uint64_t, uint64_t);
  void *v29;
  uint64_t (*v30)();
  uint64_t v31;
  _QWORD aBlock[5];
  uint64_t v33;

  v4 = type metadata accessor for Song(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = __chkstk_darwin(v4);
  v8 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = Song.catalogID.getter(v7);
  if (v10)
  {
    v11 = v9;
    v12 = v10;
    v13 = swift_allocObject(&unk_101105F80, 32, 7);
    *(_QWORD *)(v13 + 16) = v11;
    *(_QWORD *)(v13 + 24) = v12;
    v4 = swift_allocObject(&unk_101105FA8, 32, 7);
    *(_QWORD *)(v4 + 16) = sub_100BDFDF8;
    *(_QWORD *)(v4 + 24) = v13;
    aBlock[4] = sub_10013C910;
    v33 = v4;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100BDBF78;
    aBlock[3] = &unk_101105FC0;
    v8 = (char *)_Block_copy(aBlock);
    v6 = v33;
    swift_retain(v4);
    objc_msgSend((id)isEscapingClosureAtFileLocation, "setUniversalStoreIdentifiersWithBlock:", v8, swift_release(v6).n128_f64[0]);
    _Block_release(v8);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v4, "", 122, 401, 74, 1);
    swift_release(v13);
    swift_release(v4);
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      return;
    __break(1u);
  }
  static ApplicationCapabilities.shared.getter((uint64_t)aBlock);
  sub_100065184(aBlock);
  if ((aBlock[0] & 0x10000) != 0)
    goto LABEL_8;
  sub_10004A07C(0, &qword_1011DF710, MPMediaLibrary_ptr);
  v14 = static MPMediaLibrary.device.getter();
  v15 = objc_msgSend(v14, "uniqueIdentifier");

  if (v15)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a2, v4);
    v16 = *(unsigned __int8 *)(v5 + 80);
    v17 = (v16 + 16) & ~v16;
    v6 = swift_allocObject(&unk_101105E90, v17 + v6, v16 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v6 + v17, v8, v4);
    v4 = swift_allocObject(&unk_101105EB8, 32, 7);
    *(_QWORD *)(v4 + 16) = sub_100BDFD4C;
    *(_QWORD *)(v4 + 24) = v6;
    v30 = sub_10013C910;
    v31 = v4;
    v26 = _NSConcreteStackBlock;
    v27 = 1107296256;
    v28 = sub_100BDBF78;
    v29 = &unk_101105ED0;
    v8 = (char *)_Block_copy(&v26);
    a2 = v31;
    swift_retain(v4);
    objc_msgSend((id)isEscapingClosureAtFileLocation, "setLibraryIdentifiersWithDatabaseID:block:", v15, v8, swift_release(a2).n128_f64[0]);

    _Block_release(v8);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v4, "", 122, 409, 87, 1);
    swift_release(v6);
    swift_release(v4);
    if ((isEscapingClosureAtFileLocation & 1) != 0)
    {
      __break(1u);
LABEL_8:
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a2, v4);
      v18 = *(unsigned __int8 *)(v5 + 80);
      v19 = (v18 + 16) & ~v18;
      v20 = swift_allocObject(&unk_101105F08, v19 + v6, v18 | 7);
      (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v20 + v19, v8, v4);
      v21 = swift_allocObject(&unk_101105F30, 32, 7);
      *(_QWORD *)(v21 + 16) = sub_100BDFD6C;
      *(_QWORD *)(v21 + 24) = v20;
      v30 = sub_10013C910;
      v31 = v21;
      v26 = _NSConcreteStackBlock;
      v27 = 1107296256;
      v28 = sub_100BDBF78;
      v29 = &unk_101105F48;
      v22 = _Block_copy(&v26);
      v23 = v31;
      swift_retain(v21);
      objc_msgSend((id)isEscapingClosureAtFileLocation, "setUniversalStoreIdentifiersWithBlock:", v22, swift_release(v23).n128_f64[0]);
      _Block_release(v22);
      v24 = swift_isEscapingClosureAtFileLocation(v21, "", 122, 405, 74, 1);
      swift_release(v20);
      swift_release(v21);
      if ((v24 & 1) != 0)
        __break(1u);
    }
  }
}

id sub_100BDBC94(id result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  unsigned __int8 *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 *v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 *v22;
  unsigned int v23;
  uint64_t v24;
  char v25;
  _QWORD v26[3];

  v3 = a2;
  v4 = result;
  v5 = HIBYTE(a3) & 0xF;
  v6 = a2 & 0xFFFFFFFFFFFFLL;
  if ((a3 & 0x2000000000000000) != 0)
    v7 = HIBYTE(a3) & 0xF;
  else
    v7 = v6;
  if (!v7)
  {
    v21 = 0;
    return objc_msgSend(v4, "setAdamID:", v21);
  }
  if ((a3 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    v10 = (uint64_t)sub_100BDCCA0(v3, a3, 10);
    LOBYTE(v3) = v25;
    swift_bridgeObjectRelease(a3);
LABEL_44:
    if ((v3 & 1) != 0)
      v21 = 0;
    else
      v21 = v10;
    return objc_msgSend(v4, "setAdamID:", v21);
  }
  if ((a3 & 0x2000000000000000) == 0)
  {
    if ((v3 & 0x1000000000000000) != 0)
      v9 = (unsigned __int8 *)((a3 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v9 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v3, a3);
    v10 = (uint64_t)sub_1001AF97C(v9, v6, 10);
    LOBYTE(v3) = v11 & 1;
    goto LABEL_44;
  }
  v26[0] = v3;
  v26[1] = a3 & 0xFFFFFFFFFFFFFFLL;
  if (v3 == 43)
  {
    if (!v5)
      goto LABEL_58;
    if (v5 == 1 || (BYTE1(v3) - 48) > 9u)
      goto LABEL_31;
    v10 = (BYTE1(v3) - 48);
    if (v5 != 2)
    {
      if ((BYTE2(v3) - 48) > 9u)
        goto LABEL_31;
      v10 = 10 * (BYTE1(v3) - 48) + (BYTE2(v3) - 48);
      v12 = v5 - 3;
      if (v12)
      {
        v13 = (unsigned __int8 *)v26 + 3;
        while (1)
        {
          v14 = *v13 - 48;
          if (v14 > 9)
            goto LABEL_31;
          v15 = 10 * v10;
          if ((unsigned __int128)(v10 * (__int128)10) >> 64 != (10 * v10) >> 63)
            goto LABEL_31;
          v10 = v15 + v14;
          if (__OFADD__(v15, v14))
            goto LABEL_31;
          LOBYTE(v3) = 0;
          ++v13;
          if (!--v12)
            goto LABEL_44;
        }
      }
    }
LABEL_43:
    LOBYTE(v3) = 0;
    goto LABEL_44;
  }
  if (v3 != 45)
  {
    if (!v5 || (v3 - 48) > 9u)
      goto LABEL_31;
    v10 = (v3 - 48);
    if (v5 != 1)
    {
      if ((BYTE1(v3) - 48) > 9u)
        goto LABEL_31;
      v10 = 10 * (v3 - 48) + (BYTE1(v3) - 48);
      v16 = v5 - 2;
      if (v16)
      {
        v17 = (unsigned __int8 *)v26 + 2;
        while (1)
        {
          v18 = *v17 - 48;
          if (v18 > 9)
            goto LABEL_31;
          v19 = 10 * v10;
          if ((unsigned __int128)(v10 * (__int128)10) >> 64 != (10 * v10) >> 63)
            goto LABEL_31;
          v10 = v19 + v18;
          if (__OFADD__(v19, v18))
            goto LABEL_31;
          LOBYTE(v3) = 0;
          ++v17;
          if (!--v16)
            goto LABEL_44;
        }
      }
    }
    goto LABEL_43;
  }
  if (v5)
  {
    if (v5 != 1 && (BYTE1(v3) - 48) <= 9u)
    {
      if (v5 == 2)
      {
        LOBYTE(v3) = 0;
        v10 = -(uint64_t)(BYTE1(v3) - 48);
        goto LABEL_44;
      }
      if ((BYTE2(v3) - 48) <= 9u)
      {
        v10 = -10 * (BYTE1(v3) - 48) - (BYTE2(v3) - 48);
        v20 = v5 - 3;
        if (!v20)
          goto LABEL_43;
        v22 = (unsigned __int8 *)v26 + 3;
        while (1)
        {
          v23 = *v22 - 48;
          if (v23 > 9)
            break;
          v24 = 10 * v10;
          if ((unsigned __int128)(v10 * (__int128)10) >> 64 != (10 * v10) >> 63)
            break;
          v10 = v24 - v23;
          if (__OFSUB__(v24, v23))
            break;
          LOBYTE(v3) = 0;
          ++v22;
          if (!--v20)
            goto LABEL_44;
        }
      }
    }
LABEL_31:
    v10 = 0;
    LOBYTE(v3) = 1;
    goto LABEL_44;
  }
  __break(1u);
LABEL_58:
  __break(1u);
  return result;
}

void sub_100BDBF7C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;

  Song.id.getter(a1);
  v3 = v2;
  v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v3);
  objc_msgSend(a1, "setUniversalCloudLibraryID:", v4);

}

uint64_t sub_100BDBFD4(void *a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  unsigned __int8 *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 *v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  unsigned __int8 *v23;
  unsigned int v24;
  uint64_t v25;
  char v26;
  _QWORD v27[3];

  result = Song.id.getter(a1);
  v4 = v3;
  v5 = HIBYTE(v3) & 0xF;
  v6 = result & 0xFFFFFFFFFFFFLL;
  if ((v4 & 0x2000000000000000) != 0)
    v7 = v5;
  else
    v7 = result & 0xFFFFFFFFFFFFLL;
  if (!v7)
  {
    *(_QWORD *)&v21 = swift_bridgeObjectRelease(v4).n128_u64[0];
    v22 = 0;
    return (uint64_t)objc_msgSend(a1, "setPersistentID:", v22, v21);
  }
  if ((v4 & 0x1000000000000000) != 0)
  {
    v9 = (uint64_t)sub_100BDCCA0(result, v4, 10);
    v11 = v26;
LABEL_44:
    *(_QWORD *)&v21 = swift_bridgeObjectRelease(v4).n128_u64[0];
    if ((v11 & 1) != 0)
      v22 = 0;
    else
      v22 = v9;
    return (uint64_t)objc_msgSend(a1, "setPersistentID:", v22, v21);
  }
  if ((v4 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0)
      v8 = (unsigned __int8 *)((v4 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v8 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(result, v4);
    v9 = (uint64_t)sub_1001AF97C(v8, v6, 10);
    v11 = v10 & 1;
    goto LABEL_44;
  }
  v27[0] = result;
  v27[1] = v4 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (!v5)
      goto LABEL_58;
    if (v5 == 1 || (BYTE1(result) - 48) > 9u)
      goto LABEL_31;
    v9 = (BYTE1(result) - 48);
    if (v5 != 2)
    {
      if ((BYTE2(result) - 48) > 9u)
        goto LABEL_31;
      v9 = 10 * (BYTE1(result) - 48) + (BYTE2(result) - 48);
      v12 = v5 - 3;
      if (v12)
      {
        v13 = (unsigned __int8 *)v27 + 3;
        while (1)
        {
          v14 = *v13 - 48;
          if (v14 > 9)
            goto LABEL_31;
          v15 = 10 * v9;
          if ((unsigned __int128)(v9 * (__int128)10) >> 64 != (10 * v9) >> 63)
            goto LABEL_31;
          v9 = v15 + v14;
          if (__OFADD__(v15, v14))
            goto LABEL_31;
          v11 = 0;
          ++v13;
          if (!--v12)
            goto LABEL_44;
        }
      }
    }
LABEL_43:
    v11 = 0;
    goto LABEL_44;
  }
  if (result != 45)
  {
    if (!v5 || (result - 48) > 9u)
      goto LABEL_31;
    v9 = (result - 48);
    if (v5 != 1)
    {
      if ((BYTE1(result) - 48) > 9u)
        goto LABEL_31;
      v9 = 10 * (result - 48) + (BYTE1(result) - 48);
      v16 = v5 - 2;
      if (v16)
      {
        v17 = (unsigned __int8 *)v27 + 2;
        while (1)
        {
          v18 = *v17 - 48;
          if (v18 > 9)
            goto LABEL_31;
          v19 = 10 * v9;
          if ((unsigned __int128)(v9 * (__int128)10) >> 64 != (10 * v9) >> 63)
            goto LABEL_31;
          v9 = v19 + v18;
          if (__OFADD__(v19, v18))
            goto LABEL_31;
          v11 = 0;
          ++v17;
          if (!--v16)
            goto LABEL_44;
        }
      }
    }
    goto LABEL_43;
  }
  if (v5)
  {
    if (v5 != 1 && (BYTE1(result) - 48) <= 9u)
    {
      if (v5 == 2)
      {
        v11 = 0;
        v9 = -(uint64_t)(BYTE1(result) - 48);
        goto LABEL_44;
      }
      if ((BYTE2(result) - 48) <= 9u)
      {
        v9 = -10 * (BYTE1(result) - 48) - (BYTE2(result) - 48);
        v20 = v5 - 3;
        if (!v20)
          goto LABEL_43;
        v23 = (unsigned __int8 *)v27 + 3;
        while (1)
        {
          v24 = *v23 - 48;
          if (v24 > 9)
            break;
          v25 = 10 * v9;
          if ((unsigned __int128)(v9 * (__int128)10) >> 64 != (10 * v9) >> 63)
            break;
          v9 = v25 - v24;
          if (__OFSUB__(v25, v24))
            break;
          v11 = 0;
          ++v23;
          if (!--v20)
            goto LABEL_44;
        }
      }
    }
LABEL_31:
    v9 = 0;
    v11 = 1;
    goto LABEL_44;
  }
  __break(1u);
LABEL_58:
  __break(1u);
  return result;
}

void sub_100BDC2B4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  id v9;
  NSString v10;
  uint64_t v11;
  void *v12;
  _QWORD v13[5];
  uint64_t v14;

  v9 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v11 = swift_allocObject(&unk_101105E40, 32, 7);
  *(_QWORD *)(v11 + 16) = a4;
  *(_QWORD *)(v11 + 24) = a5;
  v13[4] = sub_10013C910;
  v14 = v11;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  v13[2] = sub_10027FF28;
  v13[3] = &unk_101105E58;
  v12 = _Block_copy(v13);
  swift_retain(v11);
  objc_msgSend(v9, "initWithSource:modelKind:block:", v10, a3, v12);

  _Block_release(v12);
  swift_release(v14);
  LOBYTE(a3) = swift_isEscapingClosureAtFileLocation(v11, "", 0, 0, 0, 1);
  swift_release(v11);
  if ((a3 & 1) != 0)
    __break(1u);
}

void sub_100BDC400(void *a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  double v15;
  _QWORD v16[4];
  _QWORD aBlock[5];
  uint64_t v18;

  v4 = objc_opt_self(MPModelSong);
  v5 = (void *)swift_dynamicCastObjCClassUnconditional(a1, v4, 0, 0, 0);
  v6 = a1;
  Song.title.getter(v6);
  v8 = v7;
  v9 = String._bridgeToObjectiveC()();
  objc_msgSend(v5, "setTitle:", v9, swift_bridgeObjectRelease(v8).n128_f64[0]);

  objc_msgSend(v5, "setArtistUploadedContent:", 0);
  v10 = objc_msgSend((id)objc_opt_self(MPIdentifierSet), "emptyIdentifierSet");
  v16[2] = a2;
  v11 = objc_allocWithZone((Class)MPModelLyrics);
  v12 = swift_allocObject(&unk_101105DF0, 32, 7);
  *(_QWORD *)(v12 + 16) = sub_100BDFD20;
  *(_QWORD *)(v12 + 24) = v16;
  aBlock[4] = sub_10013C910;
  v18 = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004BF88;
  aBlock[3] = &unk_101105E08;
  v13 = _Block_copy(aBlock);
  v14 = objc_msgSend(v11, "initWithIdentifiers:block:", v10, v13, swift_retain(v12).n128_f64[0]);

  _Block_release(v13);
  swift_release(v18);
  LOBYTE(v10) = swift_isEscapingClosureAtFileLocation(v12, "", 0, 0, 0, 1);
  *(_QWORD *)&v15 = swift_release(v12).n128_u64[0];
  if ((v10 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    objc_msgSend(v5, "setLyrics:", v14, v15);

    objc_msgSend(v5, "setHasVideo:", 0);
  }
}

void sub_100BDC5EC(void *a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  id v6;

  v2 = objc_opt_self(MPModelLyrics);
  v3 = (void *)swift_dynamicCastObjCClassUnconditional(a1, v2, 0, 0, 0);
  v6 = a1;
  v4 = objc_msgSend(v3, "setHasStoreLyrics:", Song.hasLyrics.getter() & 1);
  v5 = objc_msgSend(v3, "setHasLibraryLyrics:", Song.hasCustomLyrics.getter(v4) & 1);
  objc_msgSend(v3, "setHasTimeSyncedLyrics:", Song.hasTimeSyncedLyrics.getter(v5) & 1);
  objc_msgSend(v3, "setText:", 0);

}

uint64_t sub_100BDC6B8()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  Swift::String v10;
  Swift::String v11;
  id v12;
  id v13;
  uint64_t v14;
  void *v15;
  void *v16;
  Swift::String v17;

  v1 = v0;
  _StringGuts.grow(_:)(33);
  swift_bridgeObjectRelease(0xE000000000000000);
  v2 = objc_msgSend(v0, "title");
  if (v2)
  {
    v3 = v2;
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
    v6 = v5;

  }
  else
  {
    v4 = 0;
    v6 = 0;
  }
  v7 = Optional<A>.description.getter(v4, v6);
  v9 = v8;
  swift_bridgeObjectRelease(v6);
  v10._countAndFlagsBits = v7;
  v10._object = v9;
  String.append(_:)(v10);
  swift_bridgeObjectRelease(v9);
  v11._object = (void *)0x8000000100E55030;
  v11._countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v11);
  v12 = objc_msgSend(v1, "identifiers");
  v13 = objc_msgSend(v12, "description");
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v16 = v15;

  v17._countAndFlagsBits = v14;
  v17._object = v16;
  String.append(_:)(v17);

  swift_bridgeObjectRelease(v16);
  return 0x7469742E676E6F73;
}

uint64_t sub_100BDC814()
{
  return sub_100BDA1D8();
}

uint64_t sub_100BDC834()
{
  return sub_100BDC6B8();
}

_QWORD *sub_100BDC854(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  size_t v6;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return _swiftEmptyArrayStorage;
  v4 = sub_100007E8C(&qword_1011DEFF0);
  v5 = (_QWORD *)swift_allocObject(v4, v2 + 32, 7);
  v6 = j__malloc_size_0(v5);
  v5[2] = a1;
  v5[3] = 2 * v6 - 64;
  return v5;
}

unint64_t sub_100BDC8B8()
{
  unint64_t result;

  result = qword_1011DF518;
  if (!qword_1011DF518)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for LyricsLoader.LyricsError, &type metadata for LyricsLoader.LyricsError);
    atomic_store(result, (unint64_t *)&qword_1011DF518);
  }
  return result;
}

void sub_100BDC900()
{
  uint64_t v0;

  sub_100BDA514(*(void ***)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_100BDC90C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100BDC91C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100BDC92C(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_100BDC934(uint64_t a1)
{
  uint64_t v1;

  return sub_100BD87DC(a1, *(char **)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32));
}

void sub_100BDC944()
{
  uint64_t v0;

  sub_100BDA470(*(_BYTE **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_100BDC950()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

double sub_100BDC960(uint64_t a1)
{
  uint64_t v1;

  return sub_100BD8C54(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_100BDC968(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_10079C2C4(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  v9 = *v3;
  v12 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_100BCFB24();
    v9 = v12;
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v6);
  sub_1007AA65C(v6, v9);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_100BDCA34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD **v6;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  char v24;

  v6 = (_QWORD **)v5;
  v12 = (_QWORD *)*v5;
  v14 = sub_10079C2C4(a3, a4);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a5 & 1) != 0)
    {
LABEL_7:
      v20 = *v6;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7] + 16 * v14;
        result = sub_1000652DC(*(_QWORD *)v21, *(_QWORD *)(v21 + 8));
        *(_QWORD *)v21 = a1;
        *(_QWORD *)(v21 + 8) = a2;
        return result;
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a5 & 1) == 0)
    {
      sub_100BCF7AC();
      goto LABEL_7;
    }
    sub_100BCE6C4(v17, a5 & 1);
    v23 = sub_10079C2C4(a3, a4);
    if ((v18 & 1) == (v24 & 1))
    {
      v14 = v23;
      v20 = *v6;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_100BCF75C(v14, a3, a4, a1, a2, v20);
      return swift_bridgeObjectRetain();
    }
  }
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

void sub_100BDCB74(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_10079C2C4(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];

        *(_QWORD *)(v19 + 8 * v12) = a1;
        return;
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_100BCFB24();
      goto LABEL_7;
    }
    sub_100BCECE4(v15, a4 & 1);
    v20 = sub_10079C2C4(a2, a3);
    if ((v16 & 1) == (v21 & 1))
    {
      v12 = v20;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1005EF5B4(v12, a2, a3, a1, v18);
      swift_bridgeObjectRetain();
      return;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

unsigned __int8 *sub_100BDCCA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int8 *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unsigned __int8 *v12;
  uint64_t v14;
  uint64_t v15;

  v14 = a1;
  v15 = a2;
  swift_bridgeObjectRetain();
  v4 = String.init<A>(_:)(&v14, &type metadata for String, &protocol witness table for String, &protocol witness table for String);
  v6 = v4;
  v7 = v5;
  if ((v5 & 0x1000000000000000) == 0)
  {
    if ((v5 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v9 = HIBYTE(v7) & 0xF;
    v14 = v6;
    v15 = v7 & 0xFFFFFFFFFFFFFFLL;
    v8 = (unsigned __int8 *)&v14;
    goto LABEL_7;
  }
  v6 = sub_100BDCD84(v4, v5);
  v11 = v10;
  swift_bridgeObjectRelease(v7);
  v7 = v11;
  if ((v11 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v6 & 0x1000000000000000) != 0)
  {
    v8 = (unsigned __int8 *)((v7 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v9 = v6 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v8 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v6, v7);
  }
LABEL_7:
  v12 = sub_1001AF97C(v8, v9, a3);
  swift_bridgeObjectRelease(v7);
  return v12;
}

uint64_t sub_100BDCD84(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1;
  v3 = 7;
  if (((a2 >> 60) & ((a1 & 0x800000000000000) == 0)) != 0)
    v3 = 11;
  v4 = String.subscript.getter(15, v3 | (v2 << 16), a1, a2);
  v6 = v5;
  v9 = sub_100BDCE00(v4, v7, v8, v5);
  swift_bridgeObjectRelease(v6);
  return v9;
}

uint64_t sub_100BDCE00(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v5;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[5];

  v5 = a3;
  if ((a4 & 0x1000000000000000) != 0)
  {
    v12 = sub_1001AFDB8(a1, a2, a3, a4);
    if (v12)
    {
      v9 = v12;
      v8 = (unint64_t)sub_100BDC854(v12, 0);
      v5 = sub_1001AFEA4((unint64_t)v15, v8 + 32, v9, a1, a2, v5, a4);
      v13 = v15[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease(v13);
      if (v5 != v9)
      {
        __break(1u);
        goto LABEL_11;
      }
    }
    else
    {
      v8 = (unint64_t)_swiftEmptyArrayStorage;
    }
    v14 = static String._uncheckedFromUTF8(_:)(v8 + 32, *(_QWORD *)(v8 + 16));
    swift_release(v8);
    return v14;
  }
  else
  {
    v8 = a1 >> 16;
    v9 = a2 >> 16;
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
      {
        v10 = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
LABEL_5:
        v10 += v8;
        return static String._uncheckedFromUTF8(_:)(v10, v9 - v8);
      }
LABEL_11:
      v10 = _StringObject.sharedUTF8.getter(v5, a4);
      if (!v10)
        return static String._uncheckedFromUTF8(_:)(v10, v9 - v8);
      goto LABEL_5;
    }
    v15[0] = a3;
    v15[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return static String._uncheckedFromUTF8(_:)((char *)v15 + v8, v9 - v8);
  }
}

void sub_100BDCF44(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  NSObject *v20;
  char *v21;
  id v22;
  double v23;
  void **v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t (*v28)();
  _QWORD *v29;
  __int128 v30[2];
  _QWORD v31[5];

  v10 = type metadata accessor for Song(0);
  v31[3] = v10;
  v31[4] = &off_101105C90;
  v11 = sub_100049F68(v31);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v11, a2, v10);
  v12 = swift_allocObject(&unk_101105FF8, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16);
  sub_100064C78((uint64_t)v31, (uint64_t)v30);
  v13 = (_QWORD *)swift_allocObject(&unk_101106278, 80, 7);
  v13[2] = v12;
  sub_100064C48(v30, (uint64_t)(v13 + 3));
  v13[8] = a3;
  v13[9] = a4;
  v28 = sub_100BE0134;
  v29 = v13;
  v24 = _NSConcreteStackBlock;
  v25 = 1107296256;
  v26 = sub_100537628;
  v27 = &unk_101106290;
  v14 = _Block_copy(&v24);
  swift_retain();
  v15 = objc_msgSend(a1, "newOperationWithResponseHandler:", v14, swift_release().n128_f64[0]);
  _Block_release(v14);
  v16 = *(void **)&a5[OBJC_IVAR___MusicLyricsLoader_accessQueue];
  sub_100064C78((uint64_t)v31, (uint64_t)v30);
  v17 = swift_allocObject(&unk_1011062C8, 72, 7);
  *(_QWORD *)(v17 + 16) = a5;
  sub_100064C48(v30, v17 + 24);
  *(_QWORD *)(v17 + 64) = v15;
  v18 = swift_allocObject(&unk_1011062F0, 32, 7);
  *(_QWORD *)(v18 + 16) = sub_100BE00A8;
  *(_QWORD *)(v18 + 24) = v17;
  v28 = sub_1001095DC;
  v29 = (_QWORD *)v18;
  v24 = _NSConcreteStackBlock;
  v25 = 1107296256;
  v26 = sub_10046D7B4;
  v27 = &unk_101106308;
  v19 = _Block_copy(&v24);
  v20 = v16;
  v21 = a5;
  v22 = v15;
  swift_retain();
  swift_release();
  dispatch_sync(v20, v19);

  _Block_release(v19);
  LOBYTE(v15) = swift_isEscapingClosureAtFileLocation(v18, "", 122, 377, 31, 1);
  *(_QWORD *)&v23 = swift_release().n128_u64[0];
  if ((v15 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    objc_msgSend(*(id *)&v21[OBJC_IVAR___MusicLyricsLoader_operationQueue], "addOperation:", v22, v23);

    swift_release();
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v31);
  }
}

void sub_100BDD1E4(void *a1, void *a2, uint64_t a3, uint64_t a4, char *a5)
{
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  NSObject *v19;
  char *v20;
  id v21;
  double v22;
  void **v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void (*v27)(void *, uint64_t);
  _QWORD *v28;
  __int128 v29[2];
  _QWORD v30[5];

  v30[3] = sub_10004A07C(0, &qword_1011DF7E0, MPModelSong_ptr);
  v30[4] = &off_101105CA8;
  v30[0] = a2;
  v10 = swift_allocObject(&unk_101105FF8, 24, 7);
  swift_unknownObjectWeakInit(v10 + 16);
  sub_100064C78((uint64_t)v30, (uint64_t)v29);
  v11 = (_QWORD *)swift_allocObject(&unk_101106020, 80, 7);
  v11[2] = v10;
  sub_100064C48(v29, (uint64_t)(v11 + 3));
  v11[8] = a3;
  v11[9] = a4;
  v27 = sub_100BDFE38;
  v28 = v11;
  v23 = _NSConcreteStackBlock;
  v24 = 1107296256;
  v25 = sub_100537628;
  v26 = &unk_101106038;
  v12 = _Block_copy(&v23);
  v13 = a2;
  swift_retain();
  v14 = objc_msgSend(a1, "newOperationWithResponseHandler:", v12, swift_release().n128_f64[0]);
  _Block_release(v12);
  v15 = *(void **)&a5[OBJC_IVAR___MusicLyricsLoader_accessQueue];
  sub_100064C78((uint64_t)v30, (uint64_t)v29);
  v16 = swift_allocObject(&unk_101106070, 72, 7);
  *(_QWORD *)(v16 + 16) = a5;
  sub_100064C48(v29, v16 + 24);
  *(_QWORD *)(v16 + 64) = v14;
  v17 = swift_allocObject(&unk_101106098, 32, 7);
  *(_QWORD *)(v17 + 16) = sub_100BDFE4C;
  *(_QWORD *)(v17 + 24) = v16;
  v27 = (void (*)(void *, uint64_t))sub_1001095DC;
  v28 = (_QWORD *)v17;
  v23 = _NSConcreteStackBlock;
  v24 = 1107296256;
  v25 = sub_10046D7B4;
  v26 = &unk_1011060B0;
  v18 = _Block_copy(&v23);
  v19 = v15;
  v20 = a5;
  v21 = v14;
  swift_retain();
  swift_release();
  dispatch_sync(v19, v18);

  _Block_release(v18);
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation(v17, "", 122, 377, 31, 1);
  *(_QWORD *)&v22 = swift_release().n128_u64[0];
  if ((v14 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    objc_msgSend(*(id *)&v20[OBJC_IVAR___MusicLyricsLoader_operationQueue], "addOperation:", v21, v22);

    swift_release();
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v30);
  }
}

uint64_t sub_100BDD47C(uint64_t a1, void *a2, char *a3, char *a4)
{
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  id v27;
  id v28;
  char *v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  id v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  id v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v58;
  _QWORD v59[3];
  uint64_t v60;
  _QWORD v61[5];

  v61[3] = sub_10004A07C(0, &qword_1011DF7E0, MPModelSong_ptr);
  v61[4] = &off_101105CA8;
  v61[0] = a2;
  if (!a1)
  {
    v34 = qword_1011DDFE0;
    v35 = a2;
    if (v34 != -1)
      swift_once(&qword_1011DDFE0, sub_100BCBEB4);
    v36 = type metadata accessor for Logger(0);
    sub_100048B14(v36, (uint64_t)static Logger.lyrics);
    sub_100064C78((uint64_t)v61, (uint64_t)v59);
    v37 = swift_bridgeObjectRetain_n(a4, 2);
    v22 = Logger.logObject.getter(v37);
    v38 = static os_log_type_t.error.getter(v22);
    if (os_log_type_enabled(v22, v38))
    {
      v39 = swift_slowAlloc(32, -1);
      v40 = swift_slowAlloc(96, -1);
      v58 = v40;
      *(_DWORD *)v39 = 136446722;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v39 + 4) = sub_100BBDE38(a3, a4, &v58);
      swift_bridgeObjectRelease_n(a4, 3);
      *(_WORD *)(v39 + 12) = 2082;
      v41 = (char *)Optional<A>.description.getter(0, 0);
      *(_QWORD *)(v39 + 14) = sub_100BBDE38(v41, v42, &v58);
      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 22) = 2082;
      sub_100007E68(v59, v60);
      v43 = (char *)sub_100BDC6B8();
      *(_QWORD *)(v39 + 24) = sub_100BBDE38(v43, v44, &v58);
      swift_bridgeObjectRelease();
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(v59);
      _os_log_impl((void *)&_mh_execute_header, v22, v38, "%{public}s loadLyrics(for:completion:) failed to handle error on store lyrics request [failed to convert Error? to NSError] error.localizedDescription=%{public}s %{public}s", (uint8_t *)v39, 0x20u);
      swift_arrayDestroy(v40, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v40, -1, -1);
      swift_slowDealloc(v39, -1, -1);
      goto LABEL_26;
    }
    swift_bridgeObjectRelease_n(a4, 2);
LABEL_25:
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v59);
    goto LABEL_26;
  }
  v8 = a2;
  v9 = (void *)_convertErrorToNSError(_:)(a1);
  v10 = objc_msgSend(v9, "domain");
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v13 = v12;

  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(MPStoreLyricsRequestErrorDomain);
  if (v11 == v14 && v13 == v15)
  {
    v18 = swift_bridgeObjectRelease_n(v13, 2).n128_u64[0];
  }
  else
  {
    v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v13, v14, v15, 0);
    swift_bridgeObjectRelease();
    v18 = swift_bridgeObjectRelease().n128_u64[0];
    if ((v17 & 1) == 0)
    {
      if (qword_1011DDFE0 != -1)
        swift_once(&qword_1011DDFE0, sub_100BCBEB4);
      v19 = type metadata accessor for Logger(0);
      sub_100048B14(v19, (uint64_t)static Logger.lyrics);
      sub_100064C78((uint64_t)v61, (uint64_t)v59);
      v20 = v9;
      swift_bridgeObjectRetain_n(a4, 2);
      v21 = v20;
      v22 = Logger.logObject.getter(v21);
      v23 = static os_log_type_t.error.getter(v22);
      if (os_log_type_enabled(v22, v23))
      {
        v24 = swift_slowAlloc(42, -1);
        v25 = swift_slowAlloc(96, -1);
        v58 = v25;
        *(_DWORD *)v24 = 136446978;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v24 + 4) = sub_100BBDE38(a3, a4, &v58);
        *(_QWORD *)&v26 = swift_bridgeObjectRelease_n(a4, 3).n128_u64[0];
        *(_WORD *)(v24 + 12) = 2050;
        v27 = objc_msgSend(v21, "code", v26);

        *(_QWORD *)(v24 + 14) = v27;
        *(_WORD *)(v24 + 22) = 2082;
        v28 = objc_msgSend(v21, "domain");
        v29 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
        v31 = v30;

        *(_QWORD *)(v24 + 24) = sub_100BBDE38(v29, v31, &v58);
        swift_bridgeObjectRelease();
        *(_WORD *)(v24 + 32) = 2082;
        sub_100007E68(v59, v60);
        v32 = (char *)sub_100BDC6B8();
        *(_QWORD *)(v24 + 34) = sub_100BBDE38(v32, v33, &v58);
        swift_bridgeObjectRelease();
        _s5Music18DragDropToPlaylistV6OriginVwxx_0(v59);
        _os_log_impl((void *)&_mh_execute_header, v22, v23, "%{public}s loadLyrics(for:completion:) failed to handle error on store lyrics request [unexpected error domain or code] standardError.code=%{public}ld standardError.domain=%{public}s %{public}s", (uint8_t *)v24, 0x2Au);
        swift_arrayDestroy(v25, 3, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v25, -1, -1);
        swift_slowDealloc(v24, -1, -1);

LABEL_26:
        return _s5Music18DragDropToPlaylistV6OriginVwxx_0(v61);
      }
      swift_bridgeObjectRelease_n(a4, 2);

      goto LABEL_25;
    }
  }
  if (objc_msgSend(v9, "code", *(double *)&v18) != (id)-3005)
  {
    if (qword_1011DDFE0 != -1)
      swift_once(&qword_1011DDFE0, sub_100BCBEB4);
    v45 = type metadata accessor for Logger(0);
    sub_100048B14(v45, (uint64_t)static Logger.lyrics);
    sub_100064C78((uint64_t)v61, (uint64_t)v59);
    swift_bridgeObjectRetain_n(a4, 2);
    v46 = v9;
    v22 = Logger.logObject.getter(v46);
    v47 = static os_log_type_t.error.getter(v22);
    if (os_log_type_enabled(v22, v47))
    {
      v48 = swift_slowAlloc(32, -1);
      v49 = swift_slowAlloc(96, -1);
      v58 = v49;
      *(_DWORD *)v48 = 136446722;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v48 + 4) = sub_100BBDE38(a3, a4, &v58);
      swift_bridgeObjectRelease_n(a4, 3);
      *(_WORD *)(v48 + 12) = 2082;
      v50 = v46;
      v51 = objc_msgSend(v50, "description");
      v52 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v51);
      v54 = v53;

      *(_QWORD *)(v48 + 14) = sub_100BBDE38(v52, v54, &v58);
      swift_bridgeObjectRelease();
      *(_WORD *)(v48 + 22) = 2082;
      sub_100007E68(v59, v60);
      v55 = (char *)sub_100BDC6B8();
      *(_QWORD *)(v48 + 24) = sub_100BBDE38(v55, v56, &v58);
      swift_bridgeObjectRelease();
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(v59);
      _os_log_impl((void *)&_mh_execute_header, v22, v47, "%{public}s loadLyrics(for:completion:) unexpected error on store lyrics request [found error other than .explicitContentRestricted] error=%{public}s) %{public}s", (uint8_t *)v48, 0x20u);
      swift_arrayDestroy(v49, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v49, -1, -1);
      swift_slowDealloc(v48, -1, -1);

      goto LABEL_26;
    }
    swift_bridgeObjectRelease_n(a4, 2);

    goto LABEL_25;
  }

  return _s5Music18DragDropToPlaylistV6OriginVwxx_0(v61);
}

uint64_t sub_100BDDB84(uint64_t a1, uint64_t a2, char *a3, char *a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  double v29;
  id v30;
  id v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  id v47;
  os_log_type_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  id v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  uint64_t v59;
  uint64_t v60;
  _QWORD v61[3];
  uint64_t v62;
  _QWORD v63[5];

  v63[3] = a5;
  v63[4] = a6;
  v12 = sub_100049F68(v63);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 16))(v12, a2, a5);
  if (!a1)
  {
    if (qword_1011DDFE0 != -1)
      swift_once(&qword_1011DDFE0, sub_100BCBEB4);
    v37 = type metadata accessor for Logger(0);
    sub_100048B14(v37, (uint64_t)static Logger.lyrics);
    sub_100064C78((uint64_t)v63, (uint64_t)v61);
    v38 = swift_bridgeObjectRetain_n(a4, 2);
    v26 = Logger.logObject.getter(v38);
    v39 = static os_log_type_t.error.getter(v26);
    if (os_log_type_enabled(v26, v39))
    {
      v40 = swift_slowAlloc(32, -1);
      v41 = swift_slowAlloc(96, -1);
      v60 = v41;
      *(_DWORD *)v40 = 136446722;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v40 + 4) = sub_100BBDE38(a3, a4, &v60);
      swift_bridgeObjectRelease_n(a4, 3);
      *(_WORD *)(v40 + 12) = 2082;
      v42 = (char *)Optional<A>.description.getter(0, 0);
      *(_QWORD *)(v40 + 14) = sub_100BBDE38(v42, v43, &v60);
      swift_bridgeObjectRelease();
      *(_WORD *)(v40 + 22) = 2082;
      sub_100007E68(v61, v62);
      v44 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(a6 + 16))(a5, a6);
      *(_QWORD *)(v40 + 24) = sub_100BBDE38(v44, v45, &v60);
      swift_bridgeObjectRelease();
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(v61);
      _os_log_impl((void *)&_mh_execute_header, v26, v39, "%{public}s loadLyrics(for:completion:) failed to handle error on store lyrics request [failed to convert Error? to NSError] error.localizedDescription=%{public}s %{public}s", (uint8_t *)v40, 0x20u);
      swift_arrayDestroy(v41, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v41, -1, -1);
      swift_slowDealloc(v40, -1, -1);
      goto LABEL_26;
    }
    swift_bridgeObjectRelease_n(a4, 2);
LABEL_25:
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v61);
    goto LABEL_26;
  }
  v13 = (void *)_convertErrorToNSError(_:)(a1);
  v14 = objc_msgSend(v13, "domain");
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v17 = v16;

  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(MPStoreLyricsRequestErrorDomain);
  if (v15 == v18 && v17 == v19)
  {
    v22 = swift_bridgeObjectRelease_n(v17, 2).n128_u64[0];
  }
  else
  {
    v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v17, v18, v19, 0);
    swift_bridgeObjectRelease();
    v22 = swift_bridgeObjectRelease().n128_u64[0];
    if ((v21 & 1) == 0)
    {
      if (qword_1011DDFE0 != -1)
        swift_once(&qword_1011DDFE0, sub_100BCBEB4);
      v23 = type metadata accessor for Logger(0);
      sub_100048B14(v23, (uint64_t)static Logger.lyrics);
      sub_100064C78((uint64_t)v63, (uint64_t)v61);
      v24 = v13;
      swift_bridgeObjectRetain_n(a4, 2);
      v25 = v24;
      v26 = Logger.logObject.getter(v25);
      v27 = static os_log_type_t.error.getter(v26);
      if (os_log_type_enabled(v26, v27))
      {
        v28 = swift_slowAlloc(42, -1);
        v59 = swift_slowAlloc(96, -1);
        v60 = v59;
        *(_DWORD *)v28 = 136446978;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v28 + 4) = sub_100BBDE38(a3, a4, &v60);
        *(_QWORD *)&v29 = swift_bridgeObjectRelease_n(a4, 3).n128_u64[0];
        *(_WORD *)(v28 + 12) = 2050;
        v30 = objc_msgSend(v25, "code", v29);

        *(_QWORD *)(v28 + 14) = v30;
        *(_WORD *)(v28 + 22) = 2082;
        v31 = objc_msgSend(v25, "domain");
        v32 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
        v34 = v33;

        *(_QWORD *)(v28 + 24) = sub_100BBDE38(v32, v34, &v60);
        swift_bridgeObjectRelease();
        *(_WORD *)(v28 + 32) = 2082;
        sub_100007E68(v61, v62);
        v35 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(a6 + 16))(a5, a6);
        *(_QWORD *)(v28 + 34) = sub_100BBDE38(v35, v36, &v60);
        swift_bridgeObjectRelease();
        _s5Music18DragDropToPlaylistV6OriginVwxx_0(v61);
        _os_log_impl((void *)&_mh_execute_header, v26, v27, "%{public}s loadLyrics(for:completion:) failed to handle error on store lyrics request [unexpected error domain or code] standardError.code=%{public}ld standardError.domain=%{public}s %{public}s", (uint8_t *)v28, 0x2Au);
        swift_arrayDestroy(v59, 3, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v59, -1, -1);
        swift_slowDealloc(v28, -1, -1);

LABEL_26:
        return _s5Music18DragDropToPlaylistV6OriginVwxx_0(v63);
      }
      swift_bridgeObjectRelease_n(a4, 2);

      goto LABEL_25;
    }
  }
  if (objc_msgSend(v13, "code", *(double *)&v22) != (id)-3005)
  {
    if (qword_1011DDFE0 != -1)
      swift_once(&qword_1011DDFE0, sub_100BCBEB4);
    v46 = type metadata accessor for Logger(0);
    sub_100048B14(v46, (uint64_t)static Logger.lyrics);
    sub_100064C78((uint64_t)v63, (uint64_t)v61);
    swift_bridgeObjectRetain_n(a4, 2);
    v47 = v13;
    v26 = Logger.logObject.getter(v47);
    v48 = static os_log_type_t.error.getter(v26);
    if (os_log_type_enabled(v26, v48))
    {
      v49 = swift_slowAlloc(32, -1);
      v50 = swift_slowAlloc(96, -1);
      v60 = v50;
      *(_DWORD *)v49 = 136446722;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v49 + 4) = sub_100BBDE38(a3, a4, &v60);
      swift_bridgeObjectRelease_n(a4, 3);
      *(_WORD *)(v49 + 12) = 2082;
      v51 = v47;
      v52 = objc_msgSend(v51, "description");
      v53 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v52);
      v55 = v54;

      *(_QWORD *)(v49 + 14) = sub_100BBDE38(v53, v55, &v60);
      swift_bridgeObjectRelease();
      *(_WORD *)(v49 + 22) = 2082;
      sub_100007E68(v61, v62);
      v56 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(a6 + 16))(a5, a6);
      *(_QWORD *)(v49 + 24) = sub_100BBDE38(v56, v57, &v60);
      swift_bridgeObjectRelease();
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(v61);
      _os_log_impl((void *)&_mh_execute_header, v26, v48, "%{public}s loadLyrics(for:completion:) unexpected error on store lyrics request [found error other than .explicitContentRestricted] error=%{public}s) %{public}s", (uint8_t *)v49, 0x20u);
      swift_arrayDestroy(v50, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v50, -1, -1);
      swift_slowDealloc(v49, -1, -1);

      goto LABEL_26;
    }
    swift_bridgeObjectRelease_n(a4, 2);

    goto LABEL_25;
  }

  return _s5Music18DragDropToPlaylistV6OriginVwxx_0(v63);
}

uint64_t _s11MusicCoreUI12LyricsLoaderC4SongO21__derived_enum_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void **v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void **v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  char v21;
  id v22;
  id v23;
  char v24;
  char v25;
  void (*v26)(char *, uint64_t);
  uint64_t v28;

  v4 = type metadata accessor for Song(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for LyricsLoader.Song(0);
  __chkstk_darwin();
  v10 = (void **)((char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  v12 = (char *)&v28 - v11;
  sub_100007E8C(&qword_1011DF698);
  __chkstk_darwin();
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (void **)&v14[*(int *)(v15 + 48)];
  sub_100BDF6B8(a1, (uint64_t)v14);
  sub_100BDF6B8(a2, (uint64_t)v16);
  if (swift_getEnumCaseMultiPayload(v14, v8) == 1)
  {
    sub_100BDF6B8((uint64_t)v14, (uint64_t)v10);
    v17 = *v10;
    v18 = v10[1];
    if (swift_getEnumCaseMultiPayload(v16, v8) == 1)
    {
      v19 = *v16;
      v20 = v16[1];
      sub_10004A07C(0, (unint64_t *)&qword_1011DF6A0, NSObject_ptr);
      v21 = static NSObject.== infix(_:_:)(v17, v19);

      if ((v21 & 1) != 0)
      {
        if (v18)
        {
          if (v20)
          {
            sub_10004A07C(0, &qword_1011DF6A8, MPCPlayerResponseTracklist_ptr);
            v22 = v20;
            v23 = v18;
            v24 = static NSObject.== infix(_:_:)(v23, v22);

            if ((v24 & 1) != 0)
              goto LABEL_20;
            goto LABEL_15;
          }
        }
        else
        {
          if (!v20)
          {
LABEL_20:
            sub_100BDFBA0((uint64_t)v14);
            v25 = 1;
            return v25 & 1;
          }
          v18 = v20;
        }
      }
      else
      {

      }
LABEL_15:
      sub_100BDFBA0((uint64_t)v14);
      goto LABEL_16;
    }

LABEL_11:
    sub_100BDFCE0((uint64_t)v14);
LABEL_16:
    v25 = 0;
    return v25 & 1;
  }
  sub_100BDF6B8((uint64_t)v14, (uint64_t)v12);
  if (swift_getEnumCaseMultiPayload(v16, v8) == 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v12, v4);
    goto LABEL_11;
  }
  (*(void (**)(char *, void **, uint64_t))(v5 + 32))(v7, v16, v4);
  v25 = static Song.== infix(_:_:)(v12, v7);
  v26 = *(void (**)(char *, uint64_t))(v5 + 8);
  v26(v7, v4);
  v26(v12, v4);
  sub_100BDFBA0((uint64_t)v14);
  return v25 & 1;
}

uint64_t _s11MusicCoreUI12LyricsLoaderC08supportsD03forSbSo11MPModelSongC_tFZ_0(void *a1)
{
  id v2;
  id v3;
  uint64_t v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  NSString v31;
  id v32;
  uint64_t v33;
  id v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  char *v45;
  double v46;
  id v47;
  id v48;
  char *v49;
  char *v50;
  char *v51;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint64_t v56;
  id v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  char *v64;
  double v65;
  id v66;
  id v67;
  char *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  id v72;
  os_log_type_t v73;
  id v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  char *v81;
  double v82;
  id v83;
  id v84;
  char *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  id v91;
  NSObject *v92;
  os_log_type_t v93;
  uint64_t v94;
  id v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  id v101;
  os_log_type_t v102;
  uint64_t v103;
  char v104;
  double v105;
  id v106;
  void *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  char *v113;
  double v114;
  id v115;
  id v116;
  char *v117;
  char *v118;
  char *v119;
  os_log_type_t v120;
  const char *v121;
  NSObject *v122;
  uint8_t *v123;
  uint32_t v124;
  char *v125;
  char *v126;
  char *v127;
  double v128;
  id v129;
  id v130;
  char *v131;
  char *v132;
  char *v133;
  os_log_type_t v134;
  const char *v135;
  char *v136;
  char *v137;
  char *v138;
  double v139;
  id v140;
  id v141;
  char *v142;
  char *v143;
  char *v144;
  char *v145;
  char *v146;
  char *v147;
  double v148;
  id v149;
  id v150;
  char *v151;
  char *v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  os_log_type_t v156;
  os_log_type_t v157;
  os_log_type_t v158;
  uint64_t v159;
  uint64_t v160;
  _QWORD v161[15];
  uint64_t v162;
  char v163;
  uint64_t v164;

  v2 = objc_msgSend(a1, "lyrics");
  if (v2)
  {
    v3 = v2;
    if ((objc_msgSend(a1, "hasVideo") & 1) != 0)
    {

      goto LABEL_4;
    }
    v15 = objc_msgSend(v3, "hasLibraryLyrics");
    if ((objc_msgSend(v3, "hasStoreLyrics") & 1) == 0 && !(_DWORD)v15)
    {
      if (qword_1011DDFE0 != -1)
        swift_once(&qword_1011DDFE0, sub_100BCBEB4);
      v16 = type metadata accessor for Logger(0);
      sub_100048B14(v16, (uint64_t)static Logger.lyrics);
      v17 = a1;
      v6 = v3;
      v18 = Logger.logObject.getter(v6);
      v19 = static os_log_type_t.default.getter(v18);
      if (os_log_type_enabled(v18, v19))
      {
        v20 = swift_slowAlloc(34, -1);
        v21 = swift_slowAlloc(64, -1);
        v162 = v21;
        *(_DWORD *)v20 = 67240962;
        *(_DWORD *)(v20 + 4) = -[NSObject hasLibraryLyrics](v6, "hasLibraryLyrics");
        *(_WORD *)(v20 + 8) = 1026;
        *(_DWORD *)(v20 + 10) = -[NSObject hasStoreLyrics](v6, "hasStoreLyrics");

        *(_WORD *)(v20 + 14) = 2082;
        v22 = objc_msgSend(v17, "title");
        if (v22)
        {
          v23 = v22;
          v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
          v26 = v25;

        }
        else
        {
          v24 = 0;
          v26 = 0;
        }
        v62 = (char *)Optional<A>.description.getter(v24, v26);
        v64 = v63;
        swift_bridgeObjectRelease(v26);
        *(_QWORD *)(v20 + 16) = sub_100BBDE38(v62, v64, &v162);

        *(_QWORD *)&v65 = swift_bridgeObjectRelease(v64).n128_u64[0];
        *(_WORD *)(v20 + 24) = 2082;
        v66 = objc_msgSend(v17, "identifiers", v65);
        v67 = objc_msgSend(v66, "description");
        v68 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v67);
        v70 = v69;

        *(_QWORD *)(v20 + 26) = sub_100BBDE38(v68, v70, &v162);
        swift_bridgeObjectRelease(v70);
        _os_log_impl((void *)&_mh_execute_header, v18, v19, "Loader supportsLyrics=false [no lyrics found] lyrics.hasLibraryLyrics=%{BOOL,public}d lyrics.hasStoreLyrics=%{BOOL,public}d song.title=%{public}s song.identifiers=%{public}s", (uint8_t *)v20, 0x22u);
        swift_arrayDestroy(v21, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v21, -1, -1);
        swift_slowDealloc(v20, -1, -1);

        return 0;
      }

      goto LABEL_27;
    }
    v27 = *BagProvider.shared.unsafeMutableAddressor();
    swift_retain(v27);
    v28 = (id)BagProvider.bag.getter();
    swift_release(v27);
    if (v28)
    {
      if ((objc_msgSend((id)objc_opt_self(MPStoreLyricsRequest), "supportsLyricsForURLBag:", v28) & 1) == 0)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)(ICURLBagKeyMusicSubscription);
        v30 = v29;
        v31 = String._bridgeToObjectiveC()();
        v32 = objc_msgSend(v28, "dictionaryForBagKey:", v31, swift_bridgeObjectRelease(v30).n128_f64[0]);

        if (v32)
        {

          if (qword_1011DDFE0 != -1)
            swift_once(&qword_1011DDFE0, sub_100BCBEB4);
          v33 = type metadata accessor for Logger(0);
          sub_100048B14(v33, (uint64_t)static Logger.lyrics);
          v34 = a1;
          v35 = Logger.logObject.getter(v34);
          v36 = static os_log_type_t.default.getter(v35);
          if (!os_log_type_enabled(v35, v36))
          {

            return (uint64_t)v15;
          }
          v156 = v36;
          v37 = swift_slowAlloc(28, -1);
          v154 = swift_slowAlloc(64, -1);
          v162 = v154;
          *(_DWORD *)v37 = 67240706;
          *(_DWORD *)(v37 + 4) = (_DWORD)v15;
          *(_WORD *)(v37 + 8) = 2082;
          v38 = objc_msgSend(v34, "title");
          if (v38)
          {
            v39 = v38;
            v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
            v42 = v41;

          }
          else
          {
            v40 = 0;
            v42 = 0;
          }
          v125 = (char *)Optional<A>.description.getter(v40, v42);
          v127 = v126;
          swift_bridgeObjectRelease(v42);
          *(_QWORD *)(v37 + 10) = sub_100BBDE38(v125, v127, &v162);

          *(_QWORD *)&v128 = swift_bridgeObjectRelease(v127).n128_u64[0];
          *(_WORD *)(v37 + 18) = 2082;
          v129 = objc_msgSend(v34, "identifiers", v128);
          v130 = objc_msgSend(v129, "description");
          v131 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v130);
          v133 = v132;

          *(_QWORD *)(v37 + 20) = sub_100BBDE38(v131, v133, &v162);
          swift_bridgeObjectRelease(v133);
          v134 = v156;
          v135 = "Loader supportsLyrics=%{BOOL,public}d [no lyrics keys in bag] song.title=%{public}s song.identifiers=%{public}s";
        }
        else
        {
          if (qword_1011DDFE0 != -1)
            swift_once(&qword_1011DDFE0, sub_100BCBEB4);
          v71 = type metadata accessor for Logger(0);
          sub_100048B14(v71, (uint64_t)static Logger.lyrics);
          v72 = a1;
          v35 = Logger.logObject.getter(v72);
          v73 = static os_log_type_t.default.getter(v35);
          if (!os_log_type_enabled(v35, v73))
          {

            return (uint64_t)v15;
          }
          v158 = v73;
          v37 = swift_slowAlloc(28, -1);
          v154 = swift_slowAlloc(64, -1);
          v162 = v154;
          *(_DWORD *)v37 = 67240706;
          *(_DWORD *)(v37 + 4) = (_DWORD)v15;
          *(_WORD *)(v37 + 8) = 2082;
          v74 = objc_msgSend(v72, "title");
          if (v74)
          {
            v75 = v74;
            v76 = static String._unconditionallyBridgeFromObjectiveC(_:)(v74);
            v78 = v77;

          }
          else
          {
            v76 = 0;
            v78 = 0;
          }
          v136 = (char *)Optional<A>.description.getter(v76, v78);
          v138 = v137;
          swift_bridgeObjectRelease(v78);
          *(_QWORD *)(v37 + 10) = sub_100BBDE38(v136, v138, &v162);

          *(_QWORD *)&v139 = swift_bridgeObjectRelease(v138).n128_u64[0];
          *(_WORD *)(v37 + 18) = 2082;
          v140 = objc_msgSend(v72, "identifiers", v139);
          v141 = objc_msgSend(v140, "description");
          v142 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v141);
          v144 = v143;

          *(_QWORD *)(v37 + 20) = sub_100BBDE38(v142, v144, &v162);
          swift_bridgeObjectRelease(v144);
          v134 = v158;
          v135 = "Loader supportsLyrics=%{BOOL,public}d [no musicSubscription key in bag] song.title=%{public}s song.iden"
                 "tifiers=%{public}s";
        }
        _os_log_impl((void *)&_mh_execute_header, v35, v134, v135, (uint8_t *)v37, 0x1Cu);
        swift_arrayDestroy(v154, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v154, -1, -1);
        swift_slowDealloc(v37, -1, -1);

        return (uint64_t)v15;
      }
    }
    else
    {
      if (qword_1011DDFE0 != -1)
        swift_once(&qword_1011DDFE0, sub_100BCBEB4);
      v53 = type metadata accessor for Logger(0);
      sub_100048B14(v53, (uint64_t)static Logger.lyrics);
      v28 = a1;
      v54 = Logger.logObject.getter(v28);
      v55 = static os_log_type_t.default.getter(v54);
      if (os_log_type_enabled(v54, v55))
      {
        v157 = v55;
        v56 = swift_slowAlloc(28, -1);
        v155 = swift_slowAlloc(64, -1);
        v162 = v155;
        *(_DWORD *)v56 = 67240706;
        *(_DWORD *)(v56 + 4) = (_DWORD)v15;
        *(_WORD *)(v56 + 8) = 2082;
        v57 = objc_msgSend(v28, "title");
        if (v57)
        {
          v58 = v57;
          v59 = static String._unconditionallyBridgeFromObjectiveC(_:)(v57);
          v61 = v60;

        }
        else
        {
          v59 = 0;
          v61 = 0;
        }
        v79 = (char *)Optional<A>.description.getter(v59, v61);
        v81 = v80;
        swift_bridgeObjectRelease(v61);
        *(_QWORD *)(v56 + 10) = sub_100BBDE38(v79, v81, &v162);

        *(_QWORD *)&v82 = swift_bridgeObjectRelease(v81).n128_u64[0];
        *(_WORD *)(v56 + 18) = 2082;
        v83 = objc_msgSend(v28, "identifiers", v82);
        v84 = objc_msgSend(v83, "description");
        v85 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v84);
        v87 = v86;

        *(_QWORD *)(v56 + 20) = sub_100BBDE38(v85, v87, &v162);
        swift_bridgeObjectRelease(v87);
        _os_log_impl((void *)&_mh_execute_header, v54, v157, "Loader supportsLyrics=%{BOOL,public}d [bag is nil] song.title=%{public}s song.identifiers=%{public}s", (uint8_t *)v56, 0x1Cu);
        swift_arrayDestroy(v155, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v155, -1, -1);
        swift_slowDealloc(v56, -1, -1);

LABEL_48:
        if (objc_msgSend(v3, "hasStoreLyrics")
          && (static ApplicationCapabilities.shared.getter((uint64_t)v161),
              v88 = v161[3],
              swift_bridgeObjectRetain(),
              sub_100065184(v161),
              v89 = sub_100BD6578(2u, v88),
              swift_bridgeObjectRelease(v88),
              (v89 & 1) != 0))
        {
          static ApplicationCapabilities.shared.getter((uint64_t)&v162);
          sub_100065184(&v162);
          if ((v163 & 1) != 0)
          {

            return 1;
          }
          if (qword_1011DDFE0 != -1)
            swift_once(&qword_1011DDFE0, sub_100BCBEB4);
          v90 = type metadata accessor for Logger(0);
          sub_100048B14(v90, (uint64_t)static Logger.lyrics);
          v91 = a1;
          v92 = Logger.logObject.getter(v91);
          v93 = static os_log_type_t.default.getter(v92);
          if (!os_log_type_enabled(v92, v93))
          {

            return (uint64_t)v15;
          }
          v94 = swift_slowAlloc(28, -1);
          v159 = swift_slowAlloc(64, -1);
          v160 = v159;
          *(_DWORD *)v94 = 67240706;
          *(_DWORD *)(v94 + 4) = (_DWORD)v15;
          *(_WORD *)(v94 + 8) = 2082;
          v95 = objc_msgSend(v91, "title");
          if (v95)
          {
            v96 = v95;
            v97 = static String._unconditionallyBridgeFromObjectiveC(_:)(v95);
            v99 = v98;

          }
          else
          {
            v97 = 0;
            v99 = 0;
          }
          v145 = (char *)Optional<A>.description.getter(v97, v99);
          v147 = v146;
          swift_bridgeObjectRelease(v99);
          *(_QWORD *)(v94 + 10) = sub_100BBDE38(v145, v147, &v160);

          *(_QWORD *)&v148 = swift_bridgeObjectRelease(v147).n128_u64[0];
          *(_WORD *)(v94 + 18) = 2082;
          v149 = objc_msgSend(v91, "identifiers", v148);
          v150 = objc_msgSend(v149, "description");
          v151 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v150);
          v153 = v152;

          *(_QWORD *)(v94 + 20) = sub_100BBDE38(v151, v153, &v160);
          swift_bridgeObjectRelease(v153);
          v120 = v93;
          v121 = "Loader supportsLyrics=%{BOOL,public}d [not supported by subscription] subscriptionCapabilities.contains"
                 "(.catalogLyricsViewing)=false song.title=%{public}s song.identifiers=%{public}s";
          v122 = v92;
          v123 = (uint8_t *)v94;
          v124 = 28;
        }
        else
        {
          if (qword_1011DDFE0 != -1)
            swift_once(&qword_1011DDFE0, sub_100BCBEB4);
          v100 = type metadata accessor for Logger(0);
          sub_100048B14(v100, (uint64_t)static Logger.lyrics);
          v101 = a1;
          v3 = v3;
          v92 = Logger.logObject.getter(v3);
          v102 = static os_log_type_t.default.getter(v92);
          if (!os_log_type_enabled(v92, v102))
          {

            return (uint64_t)v15;
          }
          v94 = swift_slowAlloc(40, -1);
          v159 = swift_slowAlloc(64, -1);
          v160 = v159;
          *(_DWORD *)v94 = 67241218;
          *(_DWORD *)(v94 + 4) = (_DWORD)v15;
          *(_WORD *)(v94 + 8) = 1026;
          *(_DWORD *)(v94 + 10) = objc_msgSend(v3, "hasStoreLyrics");

          *(_WORD *)(v94 + 14) = 1026;
          static ApplicationCapabilities.shared.getter((uint64_t)&v162);
          v103 = v164;
          swift_bridgeObjectRetain();
          sub_100065184(&v162);
          v104 = sub_100BD6578(2u, v103);
          *(_QWORD *)&v105 = swift_bridgeObjectRelease(v103).n128_u64[0];
          *(_DWORD *)(v94 + 16) = v104 & 1;
          *(_WORD *)(v94 + 20) = 2082;
          v106 = objc_msgSend(v101, "title", v105);
          if (v106)
          {
            v107 = v106;
            v108 = static String._unconditionallyBridgeFromObjectiveC(_:)(v106);
            v110 = v109;

          }
          else
          {
            v108 = 0;
            v110 = 0;
          }
          v111 = (char *)Optional<A>.description.getter(v108, v110);
          v113 = v112;
          swift_bridgeObjectRelease(v110);
          *(_QWORD *)(v94 + 22) = sub_100BBDE38(v111, v113, &v160);

          *(_QWORD *)&v114 = swift_bridgeObjectRelease(v113).n128_u64[0];
          *(_WORD *)(v94 + 30) = 2082;
          v115 = objc_msgSend(v101, "identifiers", v114);
          v116 = objc_msgSend(v115, "description");
          v117 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v116);
          v119 = v118;

          *(_QWORD *)(v94 + 32) = sub_100BBDE38(v117, v119, &v160);
          swift_bridgeObjectRelease(v119);
          v120 = v102;
          v121 = "Loader supportsLyrics=%{BOOL,public}d [can't support store lyrics] lyrics.hasStoreLyrics=%{BOOL,public}"
                 "d allowsSubscriptionContent=%{BOOL,public}d song.title=%{public}s song.identifiers=%{public}s";
          v122 = v92;
          v123 = (uint8_t *)v94;
          v124 = 40;
        }
        _os_log_impl((void *)&_mh_execute_header, v122, v120, v121, v123, v124);
        swift_arrayDestroy(v159, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v159, -1, -1);
        swift_slowDealloc(v94, -1, -1);

        return (uint64_t)v15;
      }

    }
    goto LABEL_48;
  }
LABEL_4:
  if (qword_1011DDFE0 != -1)
    swift_once(&qword_1011DDFE0, sub_100BCBEB4);
  v4 = type metadata accessor for Logger(0);
  sub_100048B14(v4, (uint64_t)static Logger.lyrics);
  v5 = a1;
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc(22, -1);
    v9 = swift_slowAlloc(64, -1);
    v162 = v9;
    *(_DWORD *)v8 = 136446466;
    v10 = objc_msgSend(v5, "title");
    if (v10)
    {
      v11 = v10;
      v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
      v14 = v13;

    }
    else
    {
      v12 = 0;
      v14 = 0;
    }
    v43 = (char *)Optional<A>.description.getter(v12, v14);
    v45 = v44;
    swift_bridgeObjectRelease(v14);
    *(_QWORD *)(v8 + 4) = sub_100BBDE38(v43, v45, &v162);

    *(_QWORD *)&v46 = swift_bridgeObjectRelease(v45).n128_u64[0];
    *(_WORD *)(v8 + 12) = 2082;
    v47 = objc_msgSend(v5, "identifiers", v46);
    v48 = objc_msgSend(v47, "description");
    v49 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v48);
    v51 = v50;

    *(_QWORD *)(v8 + 14) = sub_100BBDE38(v49, v51, &v162);
    swift_bridgeObjectRelease(v51);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Loader supportsLyrics=false [MPModelLyrics was nil] song.title=%{public}s song.identifiers=%{public}s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy(v9, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);
LABEL_27:

    return 0;
  }

  return 0;
}

uint64_t sub_100BDF60C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100BDF61C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100BDF640(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_100BDA120(a1, a2, *(void (**)(void))(v2 + 16));
}

uint64_t sub_100BDF64C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t type metadata accessor for LyricsLoader()
{
  return objc_opt_self(MusicLyricsLoader);
}

uint64_t type metadata accessor for LyricsLoader.Song(uint64_t a1)
{
  uint64_t result;

  result = qword_1011DF650;
  if (!qword_1011DF650)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LyricsLoader.Song);
  return result;
}

uint64_t sub_100BDF6B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LyricsLoader.Song(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_100BDF6FC(uint64_t a1)
{
  uint64_t v1;

  sub_100BDB86C(a1, *(_QWORD *)(v1 + 16));
}

void sub_100BDF704(void *a1)
{
  uint64_t v1;

  sub_100BDC400(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_100BDF70C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_100BDF720()
{
  unint64_t result;

  result = qword_1011DF5B0;
  if (!qword_1011DF5B0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for LyricsLoader.LyricsError, &type metadata for LyricsLoader.LyricsError);
    atomic_store(result, (unint64_t *)&qword_1011DF5B0);
  }
  return result;
}

uint64_t destroy for LyricsLoader.Result(uint64_t a1)
{
  return sub_100055BAC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s11MusicCoreUI12LyricsLoaderC6ResultOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_100055BBC(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for LyricsLoader.Result(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_100055BBC(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_100055BAC(v6, v7, v8);
  return a1;
}

__n128 initializeBufferWithCopyOfBuffer for Corner(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for LyricsLoader.Result(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_100055BAC(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for LyricsLoader.Result()
{
  return &type metadata for LyricsLoader.Result;
}

uint64_t storeEnumTagSinglePayload for LyricsLoader.LyricsError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_100BDF8C8 + 4 * byte_100EEBA93[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_100BDF8FC + 4 * byte_100EEBA8E[v4]))();
}

uint64_t sub_100BDF8FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100BDF904(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100BDF90CLL);
  return result;
}

uint64_t sub_100BDF918(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100BDF920);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_100BDF924(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100BDF92C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LyricsLoader.LyricsError()
{
  return &type metadata for LyricsLoader.LyricsError;
}

char *initializeBufferWithCopyOfBuffer for LyricsLoader.Song(char *a1, char **a2, uint64_t a3)
{
  int v5;
  char *v7;
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v14[(v5 + 16) & ~(unint64_t)v5];
    swift_retain(v14);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v7 = *a2;
      v8 = a2[1];
      *(_QWORD *)a1 = v7;
      *((_QWORD *)a1 + 1) = v8;
      v9 = v7;
      v10 = v8;
      v11 = a1;
      v12 = a3;
      v13 = 1;
    }
    else
    {
      v15 = type metadata accessor for Song(0);
      (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
      v11 = a1;
      v12 = a3;
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v11, v12, v13);
  }
  return a1;
}

void destroy for LyricsLoader.Song(id *a1, uint64_t a2)
{
  uint64_t v3;

  if (swift_getEnumCaseMultiPayload(a1, a2) == 1)
  {

  }
  else
  {
    v3 = type metadata accessor for Song(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
}

_QWORD *initializeWithCopy for LyricsLoader.Song(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  id v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = *(void **)a2;
    v7 = *(void **)(a2 + 8);
    *a1 = v6;
    a1[1] = v7;
    v8 = v6;
    v9 = v7;
    v10 = a1;
    v11 = a3;
    v12 = 1;
  }
  else
  {
    v13 = type metadata accessor for Song(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
    v10 = a1;
    v11 = a3;
    v12 = 0;
  }
  swift_storeEnumTagMultiPayload(v10, v11, v12);
  return a1;
}

void **assignWithCopy for LyricsLoader.Song(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  id v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (a1 != a2)
  {
    sub_100BDFBA0((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = *a2;
      *a1 = *a2;
      v7 = a2[1];
      a1[1] = v7;
      v8 = v6;
      v9 = v7;
      v10 = a1;
      v11 = a3;
      v12 = 1;
    }
    else
    {
      v13 = type metadata accessor for Song(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
      v10 = a1;
      v11 = a3;
      v12 = 0;
    }
    swift_storeEnumTagMultiPayload(v10, v11, v12);
  }
  return a1;
}

uint64_t sub_100BDFBA0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for LyricsLoader.Song(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *assignWithTake for LyricsLoader.Song(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_100BDFBA0((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload(a2, a3))
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = type metadata accessor for Song(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t sub_100BDFC74(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for Song(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100EEBBD0;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v4);
    return 0;
  }
  return result;
}

uint64_t sub_100BDFCE0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100007E8C(&qword_1011DF698);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_100BDFD20(void *a1)
{
  sub_100BDC5EC(a1);
}

uint64_t sub_100BDFD28()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100BDFD38()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100BDFD4C(uint64_t a1)
{
  return sub_100BDFD78(a1, (uint64_t (*)(uint64_t, uint64_t))sub_100BDBFD4);
}

uint64_t sub_100BDFD58()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100BDFD6C(uint64_t a1)
{
  return sub_100BDFD78(a1, (uint64_t (*)(uint64_t, uint64_t))sub_100BDBF7C);
}

uint64_t sub_100BDFD78(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Song(0) - 8) + 80);
  return a2(a1, v2 + ((v4 + 16) & ~v4));
}

uint64_t sub_100BDFDC4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100BDFDD4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

id sub_100BDFDF8(void *a1)
{
  uint64_t v1;

  return sub_100BDBC94(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_100BDFE00()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100BDFE10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

void sub_100BDFE38(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_100BDA840(a1, a2, *(_QWORD *)(v2 + 16), (_QWORD *)(v2 + 24), *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v2 + 64), *(_QWORD *)(v2 + 72));
}

uint64_t sub_100BDFE4C()
{
  uint64_t v0;

  return sub_100BDB178(*(_QWORD *)(v0 + 16), (_QWORD *)(v0 + 24), *(void **)(v0 + 64));
}

uint64_t sub_100BDFE5C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100BDFE6C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

double sub_100BDFEA0(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100BDAFFC(a1, a2, *(void **)(v2 + 16), *(void (**)(void))(v2 + 24), *(_QWORD *)(v2 + 32), *(char **)(v2 + 40), *(char **)(v2 + 48));
}

uint64_t sub_100BDFEB0()
{
  uint64_t v0;

  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 64);
}

void sub_100BDFEDC()
{
  uint64_t v0;

  sub_100BDAF5C(*(_QWORD *)(v0 + 16), (_QWORD *)(v0 + 24));
}

uint64_t sub_100BDFEE8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100BDFF04()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_100BDFF30()
{
  uint64_t v0;

  sub_100BDA73C(*(void ***)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_100BDFF3C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100BDFF50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_100007E8C(&qword_1011DF7E8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject(v0, v4);
}

uint64_t sub_100BDFFB4(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  sub_100007E8C(&qword_1011DF7E8);
  return sub_100BD8D38(a1, a2, a3, a4);
}

uint64_t sub_100BE0024()
{
  uint64_t v0;

  swift_release();
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 24));
  swift_release();
  return swift_deallocObject(v0, 80);
}

uint64_t sub_100BE005C()
{
  uint64_t v0;

  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 72);
}

uint64_t sub_100BE0090()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100BE0138(uint64_t a1)
{
  char *v1;
  char *v2;
  double v4;
  uint64_t v5;
  void *v6;
  _BYTE v7[544];

  v2 = v1;
  memcpy(v7, &v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs], 0x219uLL);
  sub_10024E6C8((uint64_t)v7);
  LOBYTE(a1) = _s11MusicCoreUI26SyncedLyricsViewControllerC5SpecsV23__derived_struct_equalsySbAE_AEtFZ_0((uint64_t)v7, a1);
  sub_10024E458((uint64_t)v7);
  if ((a1 & 1) == 0)
  {
    sub_100BE2330(0);
    objc_msgSend(v2, "bounds");
    sub_100BE1AA0(v4);
    if (v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_isSelected] == 1)
    {
      sub_100BE25D4();
      v5 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView;
      objc_msgSend(*(id *)&v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView], "removeFromSuperview");
      v6 = *(void **)&v2[v5];
      *(_QWORD *)&v2[v5] = 0;

    }
    else
    {
      sub_100BE23C4();
      if (*(_QWORD *)&v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation])
      {
        swift_retain();
        sub_100BE36AC();
        swift_release();
      }
    }
    sub_100BE0D44(0, *(double *)&v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_progress]);
  }
}

void sub_100BE0248(char a1, char a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  double v18;
  double v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  id v23;
  id v24;
  NSString v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  id v38;
  NSString v39;
  void *v40;
  id v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t i;
  uint64_t v56;
  void *v57;
  void *v58;
  char *v59;
  id v60;
  void *v61;
  char v62;
  _BYTE __dst[560];

  v62 = a1 & 1;
  if (v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_isSelected] == (a1 & 1))
    return;
  v3 = v2;
  v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_isSelected] = v62;
  if ((a1 & 1) != 0)
  {
    sub_100BE25D4();
    v6 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView;
    objc_msgSend(*(id *)&v3[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView], "removeFromSuperview");
    v7 = *(void **)&v3[v6];
    *(_QWORD *)&v3[v6] = 0;

    if ((a2 & 1) == 0)
      return;
  }
  else
  {
    if ((a2 & 1) == 0)
    {
      sub_100BE23C4();
      if (*(_QWORD *)&v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation])
      {
        swift_retain();
        sub_100BE36AC();
        swift_release();
      }
      return;
    }
    v8 = sub_10004A07C(0, (unint64_t *)&qword_1011DF580, OS_dispatch_queue_ptr);
    v16 = (void *)static OS_dispatch_queue.main.getter(v8, v9, v10, v11, v12, v13, v14, v15);
    v17 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 100.0, 18.0, 0.0, 0.0);
    objc_msgSend(v17, "settlingDuration");
    v19 = v18;

    v20 = swift_allocObject(&unk_1011064D0, 24, 7);
    *(_QWORD *)(v20 + 16) = v3;
    v21 = v3;
    OS_dispatch_queue.asyncAfter(_:block:)((uint64_t)sub_100BE3484, v20, v19);

    swift_release();
  }
  if (!*(_QWORD *)&v3[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation])
    return;
  v22 = 240;
  if (v3[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_kind])
    v22 = 264;
  v23 = objc_msgSend(*(id *)&v3[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs + v22], "CGColor", swift_retain().n128_f64[0]);
  v59 = &v3[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs];
  v24 = objc_msgSend(*(id *)&v3[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs + 248], "CGColor");
  v25 = String._bridgeToObjectiveC()();
  v26 = objc_msgSend((id)objc_opt_self(CASpringAnimation), "animationWithKeyPath:", v25);

  CASpringAnimation.springParameters.setter(objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 100.0, 18.0, 0.0, 0.0));
  if ((a1 & 1) != 0)
    v27 = v24;
  else
    v27 = v23;
  if ((a1 & 1) != 0)
    v28 = v23;
  else
    v28 = v24;
  objc_msgSend(v26, "setFromValue:", v27, v24);
  v60 = v28;
  v61 = v26;
  objc_msgSend(v26, "setToValue:", v28);
  v29 = swift_bridgeObjectRetain();
  v30 = (uint64_t)sub_100BE0998(v29);
  swift_bridgeObjectRelease();
  v58 = v23;
  if ((unint64_t)v30 >> 62)
    goto LABEL_38;
  v31 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v31)
  {
    v32 = 4;
    while (1)
    {
      v33 = (v30 & 0xC000000000000001) != 0
          ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v32 - 4, v30)
          : (char *)*(id *)(v30 + 8 * v32);
      v34 = v33;
      v35 = v32 - 3;
      if (__OFADD__(v32 - 4, 1))
        break;
      v36 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_backgroundColorLayer;
      v37 = *(void **)&v33[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_backgroundColorLayer];
      if (!v37)
        goto LABEL_63;
      v38 = v37;
      v39 = String._bridgeToObjectiveC()();
      objc_msgSend(v38, "addAnimation:forKey:", v61, v39);

      v40 = *(void **)&v34[v36];
      if (!v40)
        goto LABEL_64;
      objc_msgSend(v40, "setBackgroundColor:", v60);
      sub_10004A07C(0, (unint64_t *)&qword_1011E2F40, UIView_ptr);
      v41 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 100.0, 18.0, 0.0, 0.0);
      v42 = swift_allocObject(&unk_1011064A8, 25, 7);
      *(_QWORD *)(v42 + 16) = v34;
      *(_BYTE *)(v42 + 24) = v62;
      v43 = v34;
      static UIView.animate(withSpringTimingParameters:delay:options:animations:completion:)(v41, 0, sub_100BE3424, v42, 0, 0, 0.0);

      swift_release();
      ++v32;
      if (v35 == v31)
        goto LABEL_26;
    }
    __break(1u);
LABEL_38:
    if (v30 < 0)
      v50 = v30;
    else
      v50 = v30 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v31 = _CocoaArrayWrapper.endIndex.getter(v50);
    swift_bridgeObjectRelease();
  }
LABEL_26:
  swift_bridgeObjectRelease();
  v44 = swift_bridgeObjectRetain();
  v45 = sub_100BE0C24(v44);
  swift_bridgeObjectRelease();
  v46 = (uint64_t)sub_100BE0B04((uint64_t)v45);
  swift_bridgeObjectRelease();
  if ((unint64_t)v46 >> 62)
  {
    if (v46 < 0)
      v51 = v46;
    else
      v51 = v46 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v47 = _CocoaArrayWrapper.endIndex.getter(v51);
    swift_bridgeObjectRelease();
    v48 = v59;
    if (!v47)
      goto LABEL_47;
  }
  else
  {
    v47 = *(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10);
    v48 = v59;
    if (!v47)
      goto LABEL_47;
  }
  if (v47 >= 1)
  {
    v49 = 0;
    if ((v46 & 0xC000000000000001) == 0)
      goto LABEL_31;
LABEL_30:
    specialized _ArrayBuffer._getElementSlowPath(_:)(v49, v46);
    while (1)
    {
      memcpy(__dst, v48, 0x219uLL);
      sub_10024E6C8((uint64_t)__dst);
      sub_100BE7D28();
      sub_10024E458((uint64_t)__dst);
      swift_release();
      if (v47 - 1 == v49)
        break;
      ++v49;
      if ((v46 & 0xC000000000000001) != 0)
        goto LABEL_30;
LABEL_31:
      swift_retain();
    }
LABEL_47:
    swift_bridgeObjectRelease();
    v52 = swift_bridgeObjectRetain();
    v53 = (uint64_t)sub_100BE0C24(v52);
    swift_bridgeObjectRelease();
    if ((unint64_t)v53 >> 62)
    {
      if (v53 < 0)
        v56 = v53;
      else
        v56 = v53 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v54 = _CocoaArrayWrapper.endIndex.getter(v56);
      swift_bridgeObjectRelease();
      if (v54)
      {
LABEL_49:
        if (v54 >= 1)
        {
          for (i = 0; i != v54; ++i)
          {
            if ((v53 & 0xC000000000000001) != 0)
              specialized _ArrayBuffer._getElementSlowPath(_:)(i, v53);
            else
              swift_retain();
            sub_100BE8098();
            swift_release();
          }
          goto LABEL_59;
        }
        goto LABEL_62;
      }
    }
    else
    {
      v54 = *(_QWORD *)((v53 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v54)
        goto LABEL_49;
    }
LABEL_59:

    swift_bridgeObjectRelease();
    swift_release();

    return;
  }
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
}

double sub_100BE0908(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  double result;

  if (*(_BYTE *)(a1 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_isSelected) == 1)
  {
    sub_100BE25D4();
    v2 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView;
    objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView), "removeFromSuperview");
    v3 = *(void **)(a1 + v2);
    *(_QWORD *)(a1 + v2) = 0;

  }
  else
  {
    sub_100BE23C4();
    if (*(_QWORD *)(a1
                   + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation))
    {
      swift_retain();
      sub_100BE36AC();
      *(_QWORD *)&result = swift_release().n128_u64[0];
    }
  }
  return result;
}

_QWORD *sub_100BE0998(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;

  if ((unint64_t)a1 >> 62)
    goto LABEL_16;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (v2)
  {
    v3 = 4;
    while (1)
    {
      v5 = v3 - 4;
      if ((a1 & 0xC000000000000001) == 0)
        break;
      v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v3 - 4, a1);
      v7 = v3 - 3;
      if (__OFADD__(v5, 1))
        goto LABEL_15;
LABEL_11:
      v8 = *(void **)(v6 + 72);
      v9 = v8;
      swift_release(v6);
      if (v8)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v10);
        v12 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v11 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v12 >= v11 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v11 > 1, v12 + 1, 1);
        v4 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v9);
        specialized Array._endMutation()(v4);
      }
      ++v3;
      if (v7 == v2)
        goto LABEL_20;
    }
    v6 = *(_QWORD *)(a1 + 8 * v3);
    swift_retain(v6);
    v7 = v3 - 3;
    if (!__OFADD__(v5, 1))
      goto LABEL_11;
LABEL_15:
    __break(1u);
LABEL_16:
    if (a1 < 0)
      v13 = a1;
    else
      v13 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v2 = _CocoaArrayWrapper.endIndex.getter(v13);
  }
LABEL_20:
  swift_bridgeObjectRelease(a1);
  return _swiftEmptyArrayStorage;
}

_QWORD *sub_100BE0B04(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if ((unint64_t)a1 >> 62)
    goto LABEL_12;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (v2)
  {
    v3 = 4;
    while (1)
    {
      v4 = v3 - 4;
      if ((a1 & 0xC000000000000001) == 0)
        break;
      v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(v3 - 4, a1);
      v6 = v3 - 3;
      if (__OFADD__(v4, 1))
        goto LABEL_11;
LABEL_9:
      v7 = *(_QWORD *)(v5 + 72);
      swift_bridgeObjectRetain();
      swift_release();
      sub_100C5753C(v7);
      ++v3;
      if (v6 == v2)
        goto LABEL_16;
    }
    v5 = *(_QWORD *)(a1 + 8 * v3);
    swift_retain();
    v6 = v3 - 3;
    if (!__OFADD__(v4, 1))
      goto LABEL_9;
LABEL_11:
    __break(1u);
LABEL_12:
    if (a1 < 0)
      v8 = a1;
    else
      v8 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v2 = _CocoaArrayWrapper.endIndex.getter(v8);
  }
LABEL_16:
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

_QWORD *sub_100BE0C24(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if ((unint64_t)a1 >> 62)
    goto LABEL_12;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (v2)
  {
    v3 = 4;
    while (1)
    {
      v4 = v3 - 4;
      if ((a1 & 0xC000000000000001) == 0)
        break;
      v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(v3 - 4, a1);
      v6 = v3 - 3;
      if (__OFADD__(v4, 1))
        goto LABEL_11;
LABEL_9:
      v7 = *(_QWORD *)(v5 + 16);
      swift_bridgeObjectRetain();
      swift_release();
      sub_100C57560(v7);
      ++v3;
      if (v6 == v2)
        goto LABEL_16;
    }
    v5 = *(_QWORD *)(a1 + 8 * v3);
    swift_retain();
    v6 = v3 - 3;
    if (!__OFADD__(v4, 1))
      goto LABEL_9;
LABEL_11:
    __break(1u);
LABEL_12:
    if (a1 < 0)
      v8 = a1;
    else
      v8 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v2 = _CocoaArrayWrapper.endIndex.getter(v8);
  }
LABEL_16:
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

void sub_100BE0D44(char a1, double a2)
{
  char *v2;
  char *v3;
  double v4;
  double v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t i;
  uint64_t v41;
  void *v42;
  char *v43;
  char isEscapingClosureAtFileLocation;
  uint64_t v45;
  _OWORD v46[34];
  _QWORD __dst[68];

  v3 = &v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs];
  v4 = *(double *)&v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs + 336];
  v5 = v4 + a2;
  if (*(double *)&v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_progress] != v4 + a2)
  {
    *(double *)&v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_progress] = v5;
    if (v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_isSelected] == 1)
    {
      if ((a1 & 1) != 0)
      {
        v6 = *(_QWORD *)&v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation];
        if (!v6)
          return;
        v7 = v3[40];
        v8 = *((_QWORD *)v3 + 6);
        v9 = v3[56];
        v10 = *((_QWORD *)v3 + 8);
        v11 = v3[72];
        v12 = *((_QWORD *)v3 + 22);
        v13 = v3[184];
        v14 = *((_QWORD *)v3 + 26);
        v15 = *((_QWORD *)v3 + 33);
        v16 = *((_QWORD *)v3 + 34);
        v17 = *((_QWORD *)v3 + 35);
        v18 = *((_QWORD *)v3 + 40);
        v19 = *((_QWORD *)v3 + 41);
        v20 = *((_QWORD *)v3 + 43);
        v21 = *((_QWORD *)v3 + 46);
        v22 = *((_QWORD *)v3 + 47);
        v23 = *((_QWORD *)v3 + 48);
        v24 = *((_QWORD *)v3 + 49);
        v25 = *((_QWORD *)v3 + 56);
        v26 = *((_QWORD *)v3 + 57);
        v27 = *((_QWORD *)v3 + 60);
        v28 = *((_QWORD *)v3 + 61);
        v29 = *((_QWORD *)v3 + 66);
        v30 = v3[536];
        *(_QWORD *)&v46[0] = *(_QWORD *)v3;
        *(_OWORD *)((char *)v46 + 8) = *(_OWORD *)(v3 + 8);
        *(_OWORD *)((char *)&v46[1] + 8) = *(_OWORD *)(v3 + 24);
        BYTE8(v46[2]) = v7;
        *(_QWORD *)&v46[3] = v8;
        BYTE8(v46[3]) = v9;
        *(_QWORD *)&v46[4] = v10;
        BYTE8(v46[4]) = v11;
        v31 = *((_OWORD *)v3 + 6);
        v46[5] = *((_OWORD *)v3 + 5);
        v46[6] = v31;
        v32 = *((_OWORD *)v3 + 8);
        v46[7] = *((_OWORD *)v3 + 7);
        v46[8] = v32;
        v33 = *((_OWORD *)v3 + 10);
        v46[9] = *((_OWORD *)v3 + 9);
        v46[10] = v33;
        *(_QWORD *)&v46[11] = v12;
        BYTE8(v46[11]) = v13;
        v46[12] = *((_OWORD *)v3 + 12);
        *(_OWORD *)((char *)&v46[13] + 8) = *(_OWORD *)(v3 + 216);
        *(_OWORD *)((char *)&v46[14] + 8) = *(_OWORD *)(v3 + 232);
        *(_OWORD *)((char *)&v46[15] + 8) = *(_OWORD *)(v3 + 248);
        *(_QWORD *)&v46[13] = v14;
        *((_QWORD *)&v46[16] + 1) = v15;
        *(_QWORD *)&v46[17] = v16;
        *((_QWORD *)&v46[17] + 1) = v17;
        v34 = *((_OWORD *)v3 + 19);
        v46[18] = *((_OWORD *)v3 + 18);
        v46[19] = v34;
        *(_QWORD *)&v46[20] = v18;
        *((_QWORD *)&v46[20] + 1) = v19;
        *(double *)&v46[21] = v4;
        *((_QWORD *)&v46[21] + 1) = v20;
        v46[22] = *((_OWORD *)v3 + 22);
        *(_QWORD *)&v46[23] = v21;
        *((_QWORD *)&v46[23] + 1) = v22;
        *(_QWORD *)&v46[24] = v23;
        *((_QWORD *)&v46[24] + 1) = v24;
        v35 = *((_OWORD *)v3 + 26);
        v46[25] = *((_OWORD *)v3 + 25);
        v46[26] = v35;
        v46[27] = *((_OWORD *)v3 + 27);
        *(_QWORD *)&v46[28] = v25;
        *((_QWORD *)&v46[28] + 1) = v26;
        v46[29] = *((_OWORD *)v3 + 29);
        *(_QWORD *)&v46[30] = v27;
        *((_QWORD *)&v46[30] + 1) = v28;
        v36 = *((_OWORD *)v3 + 32);
        v46[31] = *((_OWORD *)v3 + 31);
        v46[32] = v36;
        *(_QWORD *)&v46[33] = v29;
        BYTE8(v46[33]) = v30;
        memcpy(__dst, v46, 0x219uLL);
        v37 = v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_direction];
        v38 = *(_QWORD *)(v6 + 24);
        if (!((unint64_t)v38 >> 62))
        {
          v39 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_retain();
          sub_10024E6C8((uint64_t)v46);
          swift_bridgeObjectRetain();
          if (v39)
          {
LABEL_7:
            if (v39 < 1)
            {
              __break(1u);
              return;
            }
            for (i = 0; i != v39; ++i)
            {
              if ((v38 & 0xC000000000000001) != 0)
                specialized _ArrayBuffer._getElementSlowPath(_:)(i, v38);
              else
                swift_retain();
              sub_100BE50E8((uint64_t)__dst, v37, v5);
              swift_release();
            }
          }
LABEL_19:
          swift_bridgeObjectRelease();
          sub_10024E458((uint64_t)v46);
          swift_release();
          return;
        }
      }
      else
      {
        v37 = objc_opt_self(UIView);
        v41 = swift_allocObject(&unk_101106430, 32, 7);
        *(_QWORD *)(v41 + 16) = v2;
        *(double *)(v41 + 24) = v5;
        v38 = swift_allocObject(&unk_101106458, 32, 7);
        *(_QWORD *)(v38 + 16) = sub_100BE33CC;
        *(_QWORD *)(v38 + 24) = v41;
        __dst[4] = sub_10010942C;
        __dst[5] = v38;
        __dst[0] = _NSConcreteStackBlock;
        __dst[1] = 1107296256;
        __dst[2] = sub_10046D7B4;
        __dst[3] = &unk_101106470;
        v42 = _Block_copy(__dst);
        v43 = v2;
        swift_retain();
        objc_msgSend((id)v37, "performWithoutAnimation:", v42, swift_release().n128_f64[0]);
        _Block_release(v42);
        isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v38, "", 124, 84, 48, 1);
        swift_release();
        swift_release();
        if ((isEscapingClosureAtFileLocation & 1) == 0)
          return;
        __break(1u);
      }
      if (v38 < 0)
        v45 = v38;
      else
        v45 = v38 & 0xFFFFFFFFFFFFFF8;
      swift_retain();
      sub_10024E6C8((uint64_t)v46);
      swift_bridgeObjectRetain();
      v39 = _CocoaArrayWrapper.endIndex.getter(v45);
      if (v39)
        goto LABEL_7;
      goto LABEL_19;
    }
  }
}

void sub_100BE111C(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  uint64_t v9;
  _BYTE v10[544];

  v2 = *(_QWORD *)(a1
                 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation);
  if (v2)
  {
    memcpy(v10, (const void *)(a1 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs), 0x219uLL);
    v5 = *(unsigned __int8 *)(a1
                            + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_direction);
    v6 = *(_QWORD *)(v2 + 24);
    if ((unint64_t)v6 >> 62)
    {
      if (v6 < 0)
        v9 = *(_QWORD *)(v2 + 24);
      else
        v9 = v6 & 0xFFFFFFFFFFFFFF8;
      swift_retain();
      sub_10024E6C8((uint64_t)v10);
      swift_bridgeObjectRetain();
      v7 = _CocoaArrayWrapper.endIndex.getter(v9);
      if (v7)
        goto LABEL_4;
    }
    else
    {
      v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_retain();
      sub_10024E6C8((uint64_t)v10);
      swift_bridgeObjectRetain();
      if (v7)
      {
LABEL_4:
        if (v7 < 1)
        {
          __break(1u);
          return;
        }
        for (i = 0; i != v7; ++i)
        {
          if ((v6 & 0xC000000000000001) != 0)
            specialized _ArrayBuffer._getElementSlowPath(_:)(i, v6);
          else
            swift_retain();
          sub_100BE50E8((uint64_t)v10, v5, a2);
          swift_release();
        }
      }
    }
    swift_bridgeObjectRelease();
    sub_10024E458((uint64_t)v10);
    swift_release();
  }
}

id sub_100BE1278(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  _BYTE *v6;
  _BYTE *v7;
  _QWORD *v11;
  char v12;
  double v13;
  uint64_t v14;
  void *v15;
  double v16;

  v7 = v6;
  v11 = &v7[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_text];
  v12 = a5 & 1;
  *v11 = a1;
  v11[1] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_words] = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_alignment] = a4;
  v7[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_direction] = v12;
  *(_QWORD *)&v7[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_capabilities] = a6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_100BE2330(0);
  objc_msgSend(v7, "bounds");
  sub_100BE1AA0(v13);
  if (v7[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_isSelected] == 1)
  {
    sub_100BE25D4();
    v14 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView;
    objc_msgSend(*(id *)&v7[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView], "removeFromSuperview");
    v15 = *(void **)&v7[v14];
    *(_QWORD *)&v7[v14] = 0;

  }
  else
  {
    sub_100BE23C4();
    if (*(_QWORD *)&v7[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation])
    {
      swift_retain();
      sub_100BE36AC();
      *(_QWORD *)&v16 = swift_release().n128_u64[0];
    }
  }
  objc_msgSend(v7, "setNeedsLayout", v16);
  return objc_msgSend(v7, "layoutIfNeeded");
}

id sub_100BE13D8(uint64_t a1, uint64_t a2, uint64_t a3, void *__src, char a5, uint64_t a6, char a7, uint64_t a8)
{
  _BYTE *v8;
  char v14;
  uint64_t v15;
  char v16;
  _QWORD *v17;
  objc_super v19;

  v14 = a5 & 1;
  v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_isScrolling] = 1;
  v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_isSelected] = 0;
  v15 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_progress;
  *(_QWORD *)&v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_progress] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_framesetter] = 0;
  v16 = a7 & 1;
  *(_QWORD *)&v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView] = 0;
  memcpy(&v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs], __src, 0x219uLL);
  *(_QWORD *)&v8[v15] = 0;
  v17 = &v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_text];
  *v17 = a1;
  v17[1] = a2;
  *(_QWORD *)&v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_words] = a3;
  v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_kind] = v14;
  *(_QWORD *)&v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_alignment] = a6;
  v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_direction] = v16;
  *(_QWORD *)&v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_capabilities] = a8;
  v19.receiver = v8;
  v19.super_class = (Class)_s14descr1011064E9C8TextViewCMa();
  return objc_msgSendSuper2(&v19, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
}

void sub_100BE159C()
{
  char *v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  void *v4;
  double v5;
  void *v6;
  objc_super v7;

  v7.receiver = v0;
  v7.super_class = (Class)_s14descr1011064E9C8TextViewCMa();
  objc_msgSendSuper2(&v7, "layoutSubviews");
  v1 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation;
  if (*(_QWORD *)&v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation])
  {
    swift_retain();
    sub_100BE36AC();
    swift_release();
  }
  *(_QWORD *)&v0[v1] = 0;
  *(_QWORD *)&v2 = swift_release().n128_u64[0];
  v3 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView], "removeFromSuperview", v2);
  v4 = *(void **)&v0[v3];
  *(_QWORD *)&v0[v3] = 0;

  objc_msgSend(v0, "bounds");
  sub_100BE1AA0(v5);
  if (v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_isSelected] == 1)
  {
    sub_100BE25D4();
    objc_msgSend(*(id *)&v0[v3], "removeFromSuperview");
    v6 = *(void **)&v0[v3];
    *(_QWORD *)&v0[v3] = 0;

  }
  else
  {
    sub_100BE23C4();
    if (*(_QWORD *)&v0[v1])
    {
      swift_retain();
      sub_100BE36AC();
      swift_release();
    }
  }
  sub_100BE0D44(0, *(double *)&v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_progress]);
}

double sub_100BE1700(double a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  CTParagraphStyleRef v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t inited;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  NSString *v20;
  id v21;
  NSString *v22;
  id v23;
  NSString v24;
  Class isa;
  const __CFAttributedString *v26;
  uint64_t v27;
  void *v28;
  const __CTFramesetter *v29;
  CTFramesetterRef v30;
  void *v31;
  id v32;
  double v33;
  double v34;
  char v36;
  char v37;
  CTParagraphStyleSetting v38;
  int v39;
  uint64_t v40;
  char *v41;
  _BYTE v42[112];
  _QWORD v43[4];

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_text);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_text + 8);
  swift_bridgeObjectRetain();
  LOBYTE(v3) = String.containsExcessiveHeightCharacters.getter(v3, v4);
  swift_bridgeObjectRelease();
  if ((v3 & 1) != 0)
  {
    NSTextAlignment.ctTextAlignment.getter(*(_QWORD *)(v1
                                                     + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_alignment));
    v38.spec = kCTParagraphStyleSpecifierLineBoundsOptions;
    v38.valueSize = 8;
    v38.value = &v37;
    v39 = 0;
    v40 = 1;
    v41 = &v36;
    v5 = CTParagraphStyleCreate(&v38, 2uLL);
    type metadata accessor for CTParagraphStyle(0);
  }
  else
  {
    v5 = (CTParagraphStyleRef)objc_msgSend(objc_allocWithZone((Class)NSMutableParagraphStyle), "init");
    -[__CTParagraphStyle setAlignment:](v5, "setAlignment:", *(_QWORD *)(v1 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_alignment));
    v7 = v1 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs;
    if ((*(_BYTE *)(v1 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs + 184) & 1) == 0)
    {
      v8 = *(double *)(v7 + 176);
      v9 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_kind;
      if (*(_BYTE *)(v1 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_kind))
        v10 = 192;
      else
        v10 = 168;
      objc_msgSend(*(id *)(v7 + v10), "ascender");
      if (*(_BYTE *)(v1 + v9))
        v12 = 192;
      else
        v12 = 168;
      v13 = v8 - v11;
      objc_msgSend(*(id *)(v7 + v12), "descender");
      -[__CTParagraphStyle setLineSpacing:](v5, "setLineSpacing:", v13 + v14);
    }
    v6 = sub_10004A07C(0, &qword_1011DF958, NSMutableParagraphStyle_ptr);
  }
  v43[3] = v6;
  v43[0] = v5;
  v15 = sub_100007E8C(&qword_1011DF960);
  inited = swift_initStackObject(v15, v42);
  *(_OWORD *)(inited + 16) = xmmword_100EA7A80;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  v17 = 168;
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_kind))
    v17 = 192;
  v18 = *(void **)(v1 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs + v17);
  v19 = sub_10004A07C(0, (unint64_t *)&qword_1011DE3F8, UIFont_ptr);
  *(_QWORD *)(inited + 40) = v18;
  *(_QWORD *)(inited + 64) = v19;
  *(_QWORD *)(inited + 72) = NSParagraphStyleAttributeName;
  sub_10004FA40((uint64_t)v43, inited + 80);
  swift_bridgeObjectRetain();
  v20 = NSFontAttributeName;
  v21 = v18;
  v22 = NSParagraphStyleAttributeName;
  sub_100BA80A0(inited);
  v23 = objc_allocWithZone((Class)NSAttributedString);
  v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  _s3__C3KeyVMa_2(0);
  sub_100BE3360();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v26 = (const __CFAttributedString *)objc_msgSend(v23, "initWithString:attributes:", v24, isa, swift_bridgeObjectRelease().n128_f64[0]);

  v27 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_framesetter;
  v28 = *(void **)(v1 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_framesetter);
  if (v28)
  {
    v29 = *(const __CTFramesetter **)(v1
                                    + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_framesetter);
  }
  else
  {
    v30 = CTFramesetterCreateWithAttributedString(v26);
    v31 = *(void **)(v1 + v27);
    *(_QWORD *)(v1 + v27) = v30;
    v29 = v30;

    v28 = 0;
  }
  v32 = v28;
  v33 = CTFramesetterRef.suggestedFrameSize(constraints:)(a1, INFINITY);
  CTFramesetterRef.createFrame(_:)(0.0, 0.0, v33, v34);

  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v43);
  return v33;
}

void sub_100BE1AA0(double a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  CGRect v15;

  v2 = v1;
  objc_msgSend(v1, "bounds");
  if (CGRectGetHeight(v15) != 0.0)
  {
    v4 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation;
    if (!*(_QWORD *)&v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation])
    {
      v5 = sub_100BE1700(a1);
      v7 = v6;
      v8 = v5;
      v10 = v9;
      swift_bridgeObjectRetain();
      CTFrameRef.linesWithFrames(flippedCoordinates:useExtendedLineBounds:)(1, 0);
      __chkstk_darwin();
      v12 = sub_100BE2A34(v11, (uint64_t (*)(double, double, double, double))sub_100BE2A24);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v13 = _s5FrameCMa();
      v14 = swift_allocObject(v13, 88, 7);
      *(_QWORD *)(v14 + 64) = 0;
      *(_BYTE *)(v14 + 72) = 2;
      *(_QWORD *)(v14 + 80) = 0;
      *(_QWORD *)(v14 + 16) = v7;
      *(_QWORD *)(v14 + 24) = v12;
      *(_QWORD *)(v14 + 32) = 0;
      *(_QWORD *)(v14 + 40) = 0;
      *(double *)(v14 + 48) = v8;
      *(_QWORD *)(v14 + 56) = v10;
      *(_QWORD *)&v2[v4] = v14;
      swift_release();
    }
  }
}

uint64_t sub_100BE1BF4(void *a1, void *a2, double a3, double a4, double a5, double a6, uint64_t a7, uint64_t a8, char a9)
{
  _QWORD *v16;
  id v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;

  v16 = CTLineRef.glyphRuns.getter();
  v17 = a2;
  v18 = sub_100BE301C((unint64_t)v16, (uint64_t)v17);
  swift_bridgeObjectRelease();

  v19 = sub_100BE2B2C((uint64_t)v18, (uint64_t (*)(_QWORD *, id, uint64_t, uint64_t))sub_100BE3350);
  swift_bridgeObjectRelease();
  v20 = _s4LineCMa();
  v21 = swift_allocObject(v20, 96, 7);
  *(_QWORD *)(v21 + 72) = 0;
  *(_BYTE *)(v21 + 80) = 0;
  *(_QWORD *)(v21 + 88) = 0;
  *(_QWORD *)(v21 + 16) = v19;
  *(_QWORD *)(v21 + 24) = a1;
  *(double *)(v21 + 40) = a3;
  *(double *)(v21 + 48) = a4;
  *(double *)(v21 + 56) = a5;
  *(double *)(v21 + 64) = a6;
  *(_BYTE *)(v21 + 32) = a9;
  v22 = a1;
  return v21;
}

Swift::Int sub_100BE1CF8(__int128 *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, CGFloat a7, CGFloat a8, CGFloat a9, CGFloat a10)
{
  __C::_NSRange v20;
  Swift::Int location;
  __C::_NSRange_optional v22;
  Swift::Int length;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  Swift::Int v29;
  uint64_t v30;
  char v31;
  char v32;
  Swift::Int v33;
  char v34;
  char v35;
  Swift::Int v36;
  char v37;
  unint64_t v38;
  uint64_t v40;
  double v41;
  __C::_NSRange v42;
  double v43;
  CGFloat Height;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v56;
  Swift::Int v57;
  uint64_t v58;
  Swift::Int v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  __C::_NSRange v63;
  CGRect v64;

  CTRunRef.cfStringRange.getter();
  v20.location = sub_100BD09E0(*((_QWORD *)a1 + 2));
  v22 = _NSRange.intersection(_:)(v20);
  location = v22.value.location;
  v22.value.location = 0;
  if (!v22.is_nil)
  {
    length = v22.value.length;
    if (v22.value.length >= 1)
    {
      v24 = Range<>.init(_:in:)(location, v22.value.length, a5, a6);
      if ((v26 & 1) == 0)
      {
        v27 = v24;
        v60 = v25;
        v28 = CTRunRef.status.getter();
        v22.value.location = location;
        if ((v28 & 1) != 0)
        {
          v29 = location + length;
          if (__OFADD__(location, length))
          {
LABEL_23:
            __break(1u);
            goto LABEL_24;
          }
          v22.value.location = v29 - 1;
          if (__OFSUB__(v29, 1))
          {
LABEL_24:
            __break(1u);
            goto LABEL_25;
          }
        }
        v58 = v27;
        v30 = sub_100BF74CC(v22.value.location, a4);
        if ((v31 & 1) == 0)
          goto LABEL_16;
        v32 = CTRunRef.status.getter();
        v22.value.location = location;
        if ((v32 & 1) != 0)
        {
          v33 = location + length;
          if (__OFADD__(location, length))
          {
LABEL_25:
            __break(1u);
            goto LABEL_26;
          }
          v22.value.location = v33 - 2;
          if (__OFSUB__(v33, 2))
          {
LABEL_26:
            __break(1u);
            goto LABEL_27;
          }
        }
        v30 = sub_100BF74CC(v22.value.location, a4);
        if ((v34 & 1) == 0)
          goto LABEL_16;
        v35 = CTRunRef.status.getter();
        v22.value.location = location;
        if ((v35 & 1) != 0)
        {
          v36 = location + length;
          if (__OFADD__(location, length))
          {
LABEL_27:
            __break(1u);
            goto LABEL_28;
          }
          v22.value.location = v36 - 3;
          if (__OFSUB__(v36, 3))
          {
LABEL_28:
            __break(1u);
            return v22.value.location;
          }
        }
        v30 = sub_100BF74CC(v22.value.location, a4);
        if ((v37 & 1) == 0)
        {
LABEL_16:
          v38 = v30;
          v22.value.location = String.subscript.getter(v58, v60, a5, a6);
          if ((v38 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else
          {
            v56 = *(_QWORD *)&v22.is_nil;
            v57 = v22.value.length;
            v59 = v22.value.location;
            v61 = v40;
            if (v38 < *(_QWORD *)(a3 + 16))
            {
              v41 = *(double *)(a3 + 16 * v38 + 32);
              v42.location = location;
              v42.length = length;
              v63 = CTRunRef.convertToGlyphRange(textRange:)(v42);
              v43 = CTRunRef.typographicBounds(range:)((CFRange)v63);
              v64.origin.x = a7;
              v64.origin.y = a8;
              v64.size.width = a9;
              v64.size.height = a10;
              Height = CGRectGetHeight(v64);
              v45 = a2;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v46 = swift_bridgeObjectRetain();
              sub_100BE2E74(v46, v45, a5, a6, a4, a3, v41, a7, a8, a9, a10);
              v48 = v47;
              swift_bridgeObjectRelease();

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v62 = *a1;
              swift_bridgeObjectRetain();
              sub_100055CE4((uint64_t)&v62);
              v50 = static String._fromSubstring(_:)(v59, v57, v56, v61, v49);
              v52 = v51;
              swift_bridgeObjectRelease();
              v53 = _s4WordCMa();
              v22.value.location = swift_allocObject(v53, 144, 7);
              *(_BYTE *)(v22.value.location + 88) = 2;
              *(_QWORD *)(v22.value.location + 128) = 0;
              *(_QWORD *)(v22.value.location + 136) = 0;
              v54 = a1[1];
              *(_OWORD *)(v22.value.location + 16) = *a1;
              *(_OWORD *)(v22.value.location + 32) = v54;
              *(_BYTE *)(v22.value.location + 48) = *((_BYTE *)a1 + 32);
              *(_QWORD *)(v22.value.location + 56) = v50;
              *(_QWORD *)(v22.value.location + 64) = v52;
              *(_QWORD *)(v22.value.location + 72) = v48;
              *(_QWORD *)(v22.value.location + 80) = 0;
              *(double *)(v22.value.location + 96) = v41;
              *(_QWORD *)(v22.value.location + 104) = 0;
              *(double *)(v22.value.location + 112) = v43;
              *(CGFloat *)(v22.value.location + 120) = Height;
              return v22.value.location;
            }
          }
          __break(1u);
          goto LABEL_23;
        }
      }
      v22.value.location = 0;
    }
  }
  return v22.value.location;
}

Swift::Int sub_100BE1FEC@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, Swift::Int *a7@<X8>, double a8@<D0>, CGFloat a9@<D1>, CGFloat a10@<D2>, CGFloat a11@<D3>, CGFloat a12@<D4>)
{
  uint64_t v22;
  uint64_t v23;
  Swift::Int v24;
  Swift::Int v25;
  __C::_NSRange v26;
  Swift::Int location;
  __C::_NSRange_optional v28;
  Swift::Int length;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  Swift::Int v34;
  uint64_t v35;
  char v36;
  char v37;
  Swift::Int v38;
  char v39;
  char v40;
  Swift::Int v41;
  char v42;
  unint64_t v43;
  uint64_t v45;
  double v46;
  __C::_NSRange v47;
  CGFloat Height;
  __C::_NSRange v49;
  __C::_NSRange v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  double v60;
  double v61;
  uint64_t v62;
  Swift::Int v63;
  uint64_t v64;
  Swift::Int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  Swift::Int v69;
  uint64_t v70;
  uint64_t v71;
  __C::_NSRange v73;
  CGRect v74;

  v23 = *a1;
  v22 = a1[1];
  v24 = a1[4];
  v70 = a1[3];
  v71 = a1[2];
  v25 = a1[5];
  v68 = a1[6];
  CTRunRef.cfStringRange.getter();
  v69 = v24;
  v26.location = v24;
  v26.length = v25;
  v28 = _NSRange.intersection(_:)(v26);
  location = v28.value.location;
  v28.value.location = 0;
  if (v28.is_nil)
    goto LABEL_20;
  length = v28.value.length;
  if (v28.value.length < 1)
    goto LABEL_20;
  v30 = Range<>.init(_:in:)(location, v28.value.length, a3, a4);
  if ((v32 & 1) != 0)
  {
    v28.value.location = 0;
    goto LABEL_20;
  }
  v64 = v31;
  v66 = v30;
  v33 = CTRunRef.status.getter();
  v28.value.location = location;
  if ((v33 & 1) != 0)
  {
    v34 = location + length;
    if (__OFADD__(location, length))
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v28.value.location = v34 - 1;
    if (__OFSUB__(v34, 1))
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
  }
  v35 = sub_100BF74CC(v28.value.location, a5);
  if ((v36 & 1) != 0)
  {
    v37 = CTRunRef.status.getter();
    v28.value.location = location;
    if ((v37 & 1) != 0)
    {
      v38 = location + length;
      if (__OFADD__(location, length))
      {
LABEL_26:
        __break(1u);
        goto LABEL_27;
      }
      v28.value.location = v38 - 2;
      if (__OFSUB__(v38, 2))
      {
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
    }
    v35 = sub_100BF74CC(v28.value.location, a5);
    if ((v39 & 1) != 0)
    {
      v40 = CTRunRef.status.getter();
      v28.value.location = location;
      if ((v40 & 1) != 0)
      {
        v41 = location + length;
        if (__OFADD__(location, length))
        {
LABEL_28:
          __break(1u);
          goto LABEL_29;
        }
        v28.value.location = v41 - 3;
        if (__OFSUB__(v41, 3))
        {
LABEL_29:
          __break(1u);
          return v28.value.location;
        }
      }
      v35 = sub_100BF74CC(v28.value.location, a5);
      if ((v42 & 1) != 0)
      {
        v28.value.location = 0;
        goto LABEL_20;
      }
    }
  }
  v43 = v35;
  v28.value.location = String.subscript.getter(v66, v64, a3, a4);
  if ((v43 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  v62 = *(_QWORD *)&v28.is_nil;
  v63 = v28.value.length;
  v65 = v28.value.location;
  v67 = v45;
  if (v43 >= *(_QWORD *)(a6 + 16))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v46 = *(double *)(a6 + 16 * v43 + 32);
  v47.location = location;
  v47.length = length;
  v73 = CTRunRef.convertToGlyphRange(textRange:)(v47);
  v61 = CTRunRef.typographicBounds(range:)((CFRange)v73);
  v60 = v46 - a8;
  v74.origin.x = a9;
  v74.origin.y = a10;
  v74.size.width = a11;
  v74.size.height = a12;
  Height = CGRectGetHeight(v74);
  v49.location = location;
  v49.length = length;
  v50 = CTRunRef.convertToGlyphRange(textRange:)(v49);
  swift_bridgeObjectRetain();
  v51 = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100BE2C8C(a8, a9, a10, a11, a12, v50.location, v50.length, a6, (uint64_t)v51, a3, a4, a5);
  v53 = v52;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v55 = static String._fromSubstring(_:)(v65, v63, v62, v67, v54);
  v57 = v56;
  swift_bridgeObjectRelease();
  v58 = _s8SyllableCMa();
  v28.value.location = swift_allocObject(v58, 152, 7);
  *(_QWORD *)(v28.value.location + 88) = v53;
  *(_QWORD *)(v28.value.location + 96) = 0;
  *(_BYTE *)(v28.value.location + 104) = 2;
  *(_QWORD *)(v28.value.location + 144) = 0;
  *(_QWORD *)(v28.value.location + 16) = v23;
  *(_QWORD *)(v28.value.location + 24) = v22;
  *(_QWORD *)(v28.value.location + 32) = v71;
  *(_QWORD *)(v28.value.location + 40) = v70;
  *(_QWORD *)(v28.value.location + 48) = v69;
  *(_QWORD *)(v28.value.location + 56) = v25;
  *(_QWORD *)(v28.value.location + 64) = v68;
  *(_QWORD *)(v28.value.location + 72) = v55;
  *(_QWORD *)(v28.value.location + 80) = v57;
  *(double *)(v28.value.location + 112) = v60;
  *(_QWORD *)(v28.value.location + 120) = 0;
  *(double *)(v28.value.location + 128) = v61;
  *(CGFloat *)(v28.value.location + 136) = Height;
LABEL_20:
  *a7 = v28.value.location;
  return v28.value.location;
}

void sub_100BE2330(char a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  void *v7;

  v2 = v1;
  if ((a1 & 1) == 0)
  {
    v3 = *(void **)(v1 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_framesetter);
    *(_QWORD *)(v1 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_framesetter) = 0;

  }
  v4 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation;
  if (*(_QWORD *)(v1
                 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation))
  {
    swift_retain();
    sub_100BE36AC();
    swift_release();
  }
  *(_QWORD *)(v1 + v4) = 0;
  *(_QWORD *)&v5 = swift_release().n128_u64[0];
  v6 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView;
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView), "removeFromSuperview", v5);
  v7 = *(void **)(v2 + v6);
  *(_QWORD *)(v2 + v6) = 0;

}

void sub_100BE23C4()
{
  char *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  void *v4;
  double v5;
  double v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  double v12;
  double v13;
  double v14;
  id v15;
  double v16;
  id v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  id v24;
  id v25;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation];
  if (v1)
  {
    v2 = v0;
    v3 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView;
    if (!*(_QWORD *)&v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView])
    {
      v4 = *(void **)(v1 + 16);
      v5 = *(double *)(v1 + 48);
      v6 = *(double *)(v1 + 56);
      v7 = objc_allocWithZone((Class)type metadata accessor for CTLabel.Frame());
      v8 = v4;
      swift_retain();
      v9 = CTLabel.Frame.init(ctFrame:suggestedSize:colorOverride:)(v8, 0, v5, v6);
      objc_msgSend(v9, "setOpaque:", 0);
      v10 = *(_QWORD *)&v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_alignment];
      if (v10 == 1)
      {
        v15 = v9;
        objc_msgSend(v2, "bounds");
        v13 = (v16 - v5) * 0.5;
        v14 = 0.0;
      }
      else if (v10 == 2)
      {
        v11 = v9;
        objc_msgSend(v2, "bounds");
        v13 = v12 - v5;
        v14 = 0.0;
      }
      else
      {
        v17 = v9;
        objc_msgSend(v2, "bounds");
        v5 = v18;
        v6 = v19;
      }
      objc_msgSend(v9, "setFrame:", v13, v14, v5, v6);

      objc_msgSend(v2, "bounds");
      v24 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", v20, v21, v22, v23);
      objc_msgSend(v24, "setBackgroundColor:", *(_QWORD *)&v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs + 248]);
      objc_msgSend(v24, "setMaskView:", v9);
      objc_msgSend(v2, "addSubview:", v24);
      v25 = *(id *)&v2[v3];
      *(_QWORD *)&v2[v3] = v24;
      swift_release();

    }
  }
}

void sub_100BE25D4()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  char v3;
  void **v4;
  uint64_t v5;
  void *v6;
  void **v7;
  void **v8;
  void *v9;
  uint64_t v10;
  BOOL v11;
  char v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  double v18;
  double v19;
  double v20;
  double v21;
  id v22;
  double v23;
  double v24;
  double v25;
  _BYTE v26[544];

  v1 = v0;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation];
  if (v2 && !*(_QWORD *)(v2 + 80))
  {
    v3 = v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_kind];
    v4 = (void **)&v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs];
    v5 = 21;
    if (v3)
      v5 = 24;
    v6 = v4[v5];
    v7 = v4 + 33;
    if ((v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_kind] & 1) == 0)
      v7 = v4 + 30;
    if (v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_isSelected] == 1)
      v8 = v7;
    else
      v8 = v4 + 31;
    v9 = *v8;
    memcpy(v26, v4, 0x219uLL);
    v10 = *(_QWORD *)&v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_capabilities];
    v11 = !sub_100BF72F8(1, v10) && !sub_100BF72F8(2, v10);
    v12 = v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_direction];
    swift_retain();
    v13 = v6;
    v14 = v9;
    sub_10024E6C8((uint64_t)v26);
    v15 = (void *)sub_100BE3B54(v13, v14, v3, v26, v11, v12);
    sub_10024E458((uint64_t)v26);
    swift_release();

    v16 = *(_QWORD *)&v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_alignment];
    if (v16 == 1)
    {
      v22 = v15;
      objc_msgSend(v1, "bounds");
      v24 = v23;
      objc_msgSend(v22, "bounds");
      v21 = (v24 - v25) * 0.5;
    }
    else
    {
      if (v16 != 2)
      {
LABEL_18:
        objc_msgSend(v1, "addSubview:", v15);

        return;
      }
      v17 = v15;
      objc_msgSend(v1, "bounds");
      v19 = v18;
      objc_msgSend(v17, "bounds");
      v21 = v19 - v20;
    }
    objc_msgSend(v15, "frame");
    objc_msgSend(v15, "setFrame:", v21);

    goto LABEL_18;
  }
}

id sub_100BE2818()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)_s14descr1011064E9C8TextViewCMa();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t _s14descr1011064E9C8TextViewCMa()
{
  return objc_opt_self(_TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView);
}

uint64_t _s14descr1011064E9C8TextViewC4KindOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100BE295C + 4 * byte_100EEBC15[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100BE2990 + 4 * byte_100EEBC10[v4]))();
}

uint64_t sub_100BE2990(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100BE2998(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100BE29A0);
  return result;
}

uint64_t sub_100BE29AC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100BE29B4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100BE29B8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100BE29C0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s14descr1011064E9C8TextViewC4KindOMa()
{
  return &_s14descr1011064E9C8TextViewC4KindON;
}

unint64_t sub_100BE29E0()
{
  unint64_t result;

  result = qword_1011DF950;
  if (!qword_1011DF950)
  {
    result = swift_getWitnessTable("ɨ!", &_s14descr1011064E9C8TextViewC4KindON);
    atomic_store(result, (unint64_t *)&qword_1011DF950);
  }
  return result;
}

uint64_t sub_100BE2A24(void *a1, double a2, double a3, double a4, double a5)
{
  uint64_t v5;

  return sub_100BE1BF4(a1, *(void **)(v5 + 16), a2, a3, a4, a5, *(_QWORD *)(v5 + 24), *(_QWORD *)(v5 + 32), *(_BYTE *)(v5 + 40));
}

_QWORD *sub_100BE2A34(uint64_t a1, uint64_t (*a2)(double, double, double, double))
{
  uint64_t v3;
  _QWORD *result;
  double *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (v3)
  {
    specialized ContiguousArray.reserveCapacity(_:)(v3);
    v6 = (double *)(a1 + 64);
    do
    {
      v7 = *(v6 - 3);
      v8 = *(v6 - 2);
      v9 = *(v6 - 1);
      v10 = *v6;
      v11 = *((id *)v6 - 4);
      v12 = a2(v7, v8, v9, v10);

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v13);
      v14 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v14);
      v15 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v12);
      specialized ContiguousArray._endMutation()(v15);
      v6 += 5;
      --v3;
    }
    while (v3);
    return _swiftEmptyArrayStorage;
  }
  return result;
}

_QWORD *sub_100BE2B2C(uint64_t a1, uint64_t (*a2)(_QWORD *, id, uint64_t, uint64_t))
{
  _QWORD *result;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD v21[4];
  char v22;
  unint64_t v23;

  result = _swiftEmptyArrayStorage;
  v23 = (unint64_t)_swiftEmptyArrayStorage;
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    v19 = a1;
    v5 = (uint64_t *)(a1 + 48);
    do
    {
      v7 = *(v5 - 1);
      v9 = *v5;
      v8 = v5[1];
      v10 = *((_BYTE *)v5 + 16);
      v11 = (void *)v5[3];
      v12 = v5[4];
      v13 = v5[5];
      v21[0] = *(v5 - 2);
      v21[1] = v7;
      v21[2] = v9;
      v21[3] = v8;
      v22 = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v14 = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v15 = a2(v21, v14, v12, v13);
      swift_bridgeObjectRelease(v13);
      swift_bridgeObjectRelease(v12);

      swift_bridgeObjectRelease(v9);
      v16 = swift_bridgeObjectRelease(v7);
      if (v15)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v16);
        v18 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v17 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v18 >= v17 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v17 > 1, v18 + 1, 1);
        v6 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v15);
        specialized Array._endMutation()(v6);
      }
      v5 += 8;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease(v19);
    return (_QWORD *)v23;
  }
  return result;
}

void sub_100BE2C8C(double a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  CFRange v25;
  unint64_t location;
  double v27;
  double v28;
  double Height;
  double v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[5];
  char v42;
  _QWORD *v43;
  CGRect v44;

  v43 = _swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)(0);
  _NSRange.makeIterator()();
  v41[2] = v21;
  v41[3] = v22;
  v41[4] = v23;
  v42 = v24 & 1;
  *(Swift::Int_optional *)&v25.location = _NSRange.NSRangeIterator.next()();
  if ((v25.length & 1) == 0)
  {
    location = v25.location;
    while ((location & 0x8000000000000000) == 0)
    {
      if (location >= *(_QWORD *)(a8 + 16))
        goto LABEL_9;
      v27 = *(double *)(a8 + 32 + 16 * location);
      v25.location = location;
      v28 = CTRunRef.typographicBounds(forGlyphAtIndex:)(v25);
      v44.origin.x = a2;
      v44.origin.y = a3;
      v44.size.width = a4;
      v44.size.height = a5;
      Height = CGRectGetHeight(v44);
      if (location >= *(_QWORD *)(a12 + 16))
        goto LABEL_10;
      v30 = Height;
      v31 = *(_QWORD *)(a12 + 32 + 8 * location);
      v41[0] = a10;
      v41[1] = a11;
      v32 = sub_100BBF2FC();
      swift_bridgeObjectRetain();
      v33 = String.Index.init<A>(utf16Offset:in:)(v31, v41, &type metadata for String, v32);
      v34 = String.subscript.getter(v33, a10, a11);
      v36 = v35;
      v37 = _s5GlyphCMa();
      v38 = swift_allocObject(v37, 72, 7);
      *(_QWORD *)(v38 + 64) = 0;
      *(_QWORD *)(v38 + 16) = v34;
      *(_QWORD *)(v38 + 24) = v36;
      *(double *)(v38 + 32) = v27 - a1;
      *(_QWORD *)(v38 + 40) = 0;
      *(double *)(v38 + 48) = v28;
      *(double *)(v38 + 56) = v30;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v38);
      v39 = v43[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v39);
      v40 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v39, v38);
      specialized ContiguousArray._endMutation()(v40);
      *(Swift::Int_optional *)&v25.location = _NSRange.NSRangeIterator.next()();
      location = v25.location;
      if ((v25.length & 1) != 0)
        return;
    }
    __break(1u);
LABEL_9:
    __break(1u);
LABEL_10:
    __break(1u);
  }
}

void sub_100BE2E74(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7, CGFloat a8, CGFloat a9, CGFloat a10, CGFloat a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  Swift::Int v29;
  unint64_t v30;
  unint64_t v31;
  Swift::Int v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  unint64_t v40;

  v12 = v11;
  v40 = (unint64_t)_swiftEmptyArrayStorage;
  v14 = *(_QWORD *)(a1 + 16);
  if (v14)
  {
    swift_bridgeObjectRetain();
    v23 = (uint64_t *)(a1 + 48);
    do
    {
      v25 = v23[4];
      v26 = *v23;
      v27 = v23[1];
      v35 = *((_OWORD *)v23 - 1);
      v36 = v26;
      v37 = v27;
      v38 = *((_OWORD *)v23 + 1);
      v39 = v25;
      swift_bridgeObjectRetain();
      sub_100BE1FEC((uint64_t *)&v35, a2, a3, a4, a5, a6, &v34, a7, a8, a9, a10, a11);
      if (v12)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return;
      }
      swift_bridgeObjectRelease();
      v29 = v34;
      if (v34)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v28);
        v31 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v30 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v31 >= v30 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v30 > 1, v31 + 1, 1);
        v24 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v31, v29);
        specialized Array._endMutation()(v24);
      }
      v23 += 7;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
  }
}

_QWORD *sub_100BE301C(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  id v6;
  BOOL v7;
  uint64_t v8;
  int64_t v9;
  _QWORD *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  CFIndex v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t isUniquelyReferenced_nonNull_native;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  _QWORD *v38;
  uint64_t v39;
  id v40;
  CFIndex v41;
  char v42;
  uint64_t v43;
  uint64_t v44;

  v2 = a1;
  if (a1 >> 62)
    goto LABEL_39;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
LABEL_3:
  if (v3)
  {
    v4 = 0;
    v35 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_words;
    v36 = v2 & 0xC000000000000001;
    v32 = v2 + 32;
    v33 = v3;
    v5 = _swiftEmptyArrayStorage;
    v34 = v2;
    while (1)
    {
      if (v36)
      {
        v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2);
        v7 = __OFADD__(v4++, 1);
        if (v7)
          goto LABEL_35;
      }
      else
      {
        v6 = *(id *)(v32 + 8 * v4);
        v7 = __OFADD__(v4++, 1);
        if (v7)
          goto LABEL_35;
      }
      v8 = *(_QWORD *)(a2 + v35);
      v9 = *(_QWORD *)(v8 + 16);
      if (v9)
      {
        v38 = v5;
        v39 = v4;
        v40 = v6;
        swift_bridgeObjectRetain();
        sub_100BCD398(0, v9, 0);
        v10 = _swiftEmptyArrayStorage;
        v11 = (_BYTE *)(v8 + 64);
        do
        {
          v12 = *((_QWORD *)v11 - 3);
          v13 = *((_QWORD *)v11 - 2);
          v43 = *((_QWORD *)v11 - 1);
          v44 = *((_QWORD *)v11 - 4);
          v42 = *v11;
          swift_bridgeObjectRetain_n(v12, 2);
          swift_bridgeObjectRetain_n(v13, 2);
          v14 = v40;
          v41 = CTRunRef.positions.getter();
          v15 = CTRunRef.stringIndices.getter();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v17 = v10[2];
          v16 = v10[3];
          v18 = v10;
          if (v17 >= v16 >> 1)
          {
            sub_100BCD398((_QWORD *)(v16 > 1), v17 + 1, 1);
            v18 = v10;
          }
          v18[2] = v17 + 1;
          v19 = &v18[8 * v17];
          v19[4] = v44;
          v19[5] = v12;
          v19[6] = v13;
          v19[7] = v43;
          *((_BYTE *)v19 + 64) = v42;
          v19[9] = v14;
          v19[10] = v41;
          v11 += 40;
          v19[11] = v15;
          --v9;
          v10 = v18;
        }
        while (v9);
        swift_bridgeObjectRelease();

        v3 = v33;
        v2 = v34;
        v5 = v38;
        v4 = v39;
      }
      else
      {

        v10 = _swiftEmptyArrayStorage;
      }
      v20 = v10;
      v21 = v10[2];
      v22 = v5[2];
      v23 = v22 + v21;
      if (__OFADD__(v22, v21))
        goto LABEL_36;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v5);
      if ((isUniquelyReferenced_nonNull_native & 1) != 0 && v23 <= v5[3] >> 1)
      {
        if (v20[2])
          goto LABEL_28;
      }
      else
      {
        if (v22 <= v23)
          v25 = v22 + v21;
        else
          v25 = v22;
        v5 = sub_100BCC7C0((_QWORD *)isUniquelyReferenced_nonNull_native, v25, 1, v5);
        if (v20[2])
        {
LABEL_28:
          v26 = v5[2];
          if ((v5[3] >> 1) - v26 < v21)
            goto LABEL_37;
          v27 = (uint64_t)&v5[8 * v26 + 4];
          sub_100007E8C(&qword_1011DF3C0);
          swift_arrayInitWithCopy(v27);
          if (v21)
          {
            v28 = v5[2];
            v7 = __OFADD__(v28, v21);
            v29 = v28 + v21;
            if (v7)
              goto LABEL_38;
            v5[2] = v29;
          }
          goto LABEL_6;
        }
      }
      if (v21)
      {
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        if (v2 < 0)
          v31 = v2;
        else
          v31 = v2 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        v3 = _CocoaArrayWrapper.endIndex.getter(v31);
        goto LABEL_3;
      }
LABEL_6:
      swift_bridgeObjectRelease();
      if (v4 == v3)
        goto LABEL_33;
    }
  }
  v5 = _swiftEmptyArrayStorage;
LABEL_33:
  swift_bridgeObjectRelease();
  return v5;
}

Swift::Int sub_100BE3350(__int128 *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_100BE1CF8(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), *(CGFloat *)(v4 + 32), *(CGFloat *)(v4 + 40), *(CGFloat *)(v4 + 48), *(CGFloat *)(v4 + 56));
}

unint64_t sub_100BE3360()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011DE828;
  if (!qword_1011DE828)
  {
    _s3__C3KeyVMa_2(255);
    result = swift_getWitnessTable(&unk_100EEA290, v1);
    atomic_store(result, (unint64_t *)&qword_1011DE828);
  }
  return result;
}

uint64_t sub_100BE33A8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100BE33CC()
{
  uint64_t v0;

  sub_100BE111C(*(_QWORD *)(v0 + 16), *(double *)(v0 + 24));
}

uint64_t sub_100BE33D8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100BE33E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100BE33F8(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_100BE3400()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

id sub_100BE3424()
{
  uint64_t v0;
  id result;
  double v2;

  result = *(id *)(*(_QWORD *)(v0 + 16)
                 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_gradientView);
  if (result)
  {
    v2 = 0.0;
    if (*(_BYTE *)(v0 + 24))
      v2 = 1.0;
    return objc_msgSend(result, "setAlpha:", v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100BE3460()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

double sub_100BE3484()
{
  uint64_t v0;

  return sub_100BE0908(*(_QWORD *)(v0 + 16));
}

void sub_100BE348C()
{
  _BYTE *v0;

  v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_isScrolling] = 1;
  v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_isSelected] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_progress] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_framesetter] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E2B820, "MusicCoreUI/LyricsTextView.swift", 32, 2, 138, 0);
  __break(1u);
}

uint64_t initializeBufferWithCopyOfBuffer for AnimationStatus(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_100BE3578(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

id sub_100BE3578(id result, unsigned __int8 a2)
{
  if (a2 <= 1u)
    return result;
  return result;
}

void destroy for AnimationStatus(uint64_t a1)
{
  sub_100BE359C(*(id *)a1, *(_BYTE *)(a1 + 8));
}

void sub_100BE359C(id a1, unsigned __int8 a2)
{
  if (a2 <= 1u)

}

uint64_t assignWithCopy for AnimationStatus(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v4;
  void *v5;
  unsigned __int8 v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_100BE3578(*(id *)a2, v4);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_100BE359C(v5, v6);
  return a1;
}

uint64_t assignWithTake for AnimationStatus(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  unsigned __int8 v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_100BE359C(v4, v5);
  return a1;
}

ValueMetadata *type metadata accessor for AnimationStatus()
{
  return &type metadata for AnimationStatus;
}

uint64_t sub_100BE364C(uint64_t a1, uint64_t *a2)
{
  int v2;
  uint64_t v4;

  v2 = *((unsigned __int8 *)a2 + 8);
  if (*(_BYTE *)(a1 + 8))
  {
    if (*(_BYTE *)(a1 + 8) == 1)
    {
      if (v2 == 1)
        return 1;
    }
    else
    {
      v4 = *a2;
      if (*(_QWORD *)a1)
      {
        if (v2 == 2 && v4 == 1)
          return 1;
      }
      else if (v2 == 2 && v4 == 0)
      {
        return 1;
      }
    }
  }
  else if (!*((_BYTE *)a2 + 8))
  {
    return 1;
  }
  return 0;
}

void sub_100BE36AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  BOOL v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  unsigned __int8 v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  void *v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  double v26;
  void *v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  void *v34;
  unsigned __int8 v35;
  uint64_t v36;
  double v37;
  uint64_t v38;
  void *v39;
  void *v40;
  double v41;
  void *v42;
  void *v43;
  void *v44;
  unsigned __int8 v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v1 = *(_QWORD *)(v0 + 24);
  v49 = v1;
  if ((unint64_t)v1 >> 62)
    goto LABEL_75;
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v48 = v2;
  if (v2)
  {
LABEL_3:
    v3 = 0;
    do
    {
      if ((v49 & 0xC000000000000001) != 0)
      {
        v1 = specialized _ArrayBuffer._getElementSlowPath(_:)(v3, v49);
        v4 = __OFADD__(v3, 1);
        v5 = v3 + 1;
        if (v4)
          goto LABEL_74;
      }
      else
      {
        if (v3 >= *(_QWORD *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        swift_retain();
        v4 = __OFADD__(v3, 1);
        v5 = v3 + 1;
        if (v4)
          goto LABEL_74;
      }
      v50 = v5;
      v51 = v1;
      v6 = *(_QWORD *)(v1 + 16);
      if (!((unint64_t)v6 >> 62))
      {
        v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
        v1 = swift_bridgeObjectRetain();
        if (v7)
          goto LABEL_12;
        goto LABEL_61;
      }
      if (v6 < 0)
        v36 = *(_QWORD *)(v1 + 16);
      else
        v36 = v6 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v1 = _CocoaArrayWrapper.endIndex.getter(v36);
      v7 = v1;
      if (v1)
      {
LABEL_12:
        v8 = 0;
        v54 = v6;
        v55 = v6 & 0xC000000000000001;
        v52 = v6 & 0xFFFFFFFFFFFFFF8;
        v53 = v7;
        while (1)
        {
          if (v55)
          {
            v1 = specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v6);
            v4 = __OFADD__(v8, 1);
            v11 = v8 + 1;
            if (v4)
              goto LABEL_72;
          }
          else
          {
            if (v8 >= *(_QWORD *)(v52 + 16))
              goto LABEL_73;
            swift_retain();
            v4 = __OFADD__(v8, 1);
            v11 = v8 + 1;
            if (v4)
              goto LABEL_72;
          }
          v56 = v11;
          v57 = v1;
          v12 = *(_QWORD *)(v1 + 72);
          v58 = v12;
          if (!((unint64_t)v12 >> 62))
          {
            v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
            v1 = swift_bridgeObjectRetain();
            if (v13)
              break;
            goto LABEL_52;
          }
          v28 = v12 < 0 ? v12 : v12 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain();
          v1 = _CocoaArrayWrapper.endIndex.getter(v28);
          v13 = v1;
          if (v1)
            break;
LABEL_52:
          *(_QWORD *)&v29 = swift_bridgeObjectRelease().n128_u64[0];
          v30 = v57;
          v31 = *(void **)(v57 + 128);
          if (v31)
          {
            objc_msgSend(v31, "removeFromSuperview", v29);
            v30 = v57;
            v32 = *(void **)(v57 + 128);
          }
          else
          {
            v32 = 0;
          }
          v6 = v54;
          v8 = v56;
          *(_QWORD *)(v30 + 128) = 0;

          v33 = v57;
          if (!*(_QWORD *)(v57 + 128))
          {
            v34 = *(void **)(v57 + 80);
            *(_QWORD *)(v57 + 80) = 0;
            v35 = *(_BYTE *)(v57 + 88);
            *(_BYTE *)(v57 + 88) = 2;
            sub_100BE359C(v34, v35);
            v33 = v57;
          }
          v9 = *(void **)(v33 + 80);
          *(_QWORD *)(v33 + 80) = 0;
          v10 = *(_BYTE *)(v33 + 88);
          *(_BYTE *)(v33 + 88) = 2;
          sub_100BE359C(v9, v10);
          swift_release();
          if (v56 == v53)
            goto LABEL_61;
        }
        v14 = 0;
        while (2)
        {
          if ((v58 & 0xC000000000000001) != 0)
          {
            v18 = specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v58);
            v4 = __OFADD__(v14++, 1);
            if (v4)
              goto LABEL_67;
LABEL_31:
            v19 = *(_QWORD *)(v18 + 88);
            if (!((unint64_t)v19 >> 62))
            {
              v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain();
              if (v20)
                goto LABEL_33;
LABEL_46:
              *(_QWORD *)&v26 = swift_bridgeObjectRelease().n128_u64[0];
              v27 = *(void **)(v18 + 144);
              if (v27)
              {
                objc_msgSend(v27, "removeFromSuperview", v26);
                v15 = *(void **)(v18 + 144);
              }
              else
              {
                v15 = 0;
              }
              *(_QWORD *)(v18 + 144) = 0;

              v16 = *(void **)(v18 + 96);
              *(_QWORD *)(v18 + 96) = 0;
              v17 = *(_BYTE *)(v18 + 104);
              *(_BYTE *)(v18 + 104) = 2;
              sub_100BE359C(v16, v17);
              swift_release();
              if (v14 == v13)
                goto LABEL_52;
              continue;
            }
            if (v19 < 0)
              v25 = *(_QWORD *)(v18 + 88);
            else
              v25 = v19 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain();
            v20 = _CocoaArrayWrapper.endIndex.getter(v25);
            if (!v20)
              goto LABEL_46;
LABEL_33:
            if (v20 >= 1)
            {
              v21 = 0;
              while (1)
              {
                if ((v19 & 0xC000000000000001) != 0)
                {
                  v23 = specialized _ArrayBuffer._getElementSlowPath(_:)(v21, v19);
                  v24 = *(void **)(v23 + 64);
                  if (!v24)
                    goto LABEL_41;
                }
                else
                {
                  v23 = *(_QWORD *)(v19 + 8 * v21 + 32);
                  swift_retain();
                  v24 = *(void **)(v23 + 64);
                  if (!v24)
                  {
LABEL_41:
                    v22 = 0;
                    goto LABEL_36;
                  }
                }
                objc_msgSend(v24, "removeFromSuperview");
                v22 = *(void **)(v23 + 64);
LABEL_36:
                ++v21;
                *(_QWORD *)(v23 + 64) = 0;
                swift_release();

                if (v20 == v21)
                  goto LABEL_46;
              }
            }
            goto LABEL_68;
          }
          break;
        }
        if (v14 < *(_QWORD *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          v18 = *(_QWORD *)(v58 + 32 + 8 * v14);
          swift_retain();
          v4 = __OFADD__(v14++, 1);
          if (!v4)
            goto LABEL_31;
LABEL_67:
          __break(1u);
LABEL_68:
          __break(1u);
          goto LABEL_69;
        }
        __break(1u);
LABEL_72:
        __break(1u);
LABEL_73:
        __break(1u);
LABEL_74:
        __break(1u);
LABEL_75:
        if (v1 < 0)
          v46 = v1;
        else
          v46 = v1 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        v48 = _CocoaArrayWrapper.endIndex.getter(v46);
        if (!v48)
          break;
        goto LABEL_3;
      }
LABEL_61:
      *(_QWORD *)&v37 = swift_bridgeObjectRelease().n128_u64[0];
      v38 = v51;
      v39 = *(void **)(v51 + 72);
      if (v39)
      {
        objc_msgSend(v39, "removeFromSuperview", v37);
        v38 = v51;
        v40 = *(void **)(v51 + 72);
      }
      else
      {
        v40 = 0;
      }
      *(_QWORD *)(v38 + 72) = 0;
      swift_release();

      v3 = v50;
    }
    while (v50 != v48);
  }
  *(_QWORD *)&v41 = swift_bridgeObjectRelease().n128_u64[0];
  v14 = v47;
  v42 = *(void **)(v47 + 80);
  if (v42)
  {
    objc_msgSend(v42, "removeFromSuperview", v41);
    v43 = *(void **)(v47 + 80);
  }
  else
  {
LABEL_69:
    v43 = 0;
  }
  *(_QWORD *)(v14 + 80) = 0;

  v44 = *(void **)(v14 + 64);
  *(_QWORD *)(v14 + 64) = 0;
  v45 = *(_BYTE *)(v14 + 72);
  *(_BYTE *)(v14 + 72) = 2;
  sub_100BE359C(v44, v45);
}

uint64_t sub_100BE3B54(void *a1, void *a2, char a3, const void *a4, char a5, char a6)
{
  uint64_t v6;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  void *v20;
  uint64_t v21;

  v10 = objc_msgSend(objc_allocWithZone((Class)_s5FrameC9FrameViewCMa()), "initWithFrame:", *(double *)(v6 + 32), *(double *)(v6 + 40), *(double *)(v6 + 48), *(double *)(v6 + 56));
  v11 = *(void **)(v6 + 80);
  *(_QWORD *)(v6 + 80) = v10;
  v12 = v10;

  v13 = *(_QWORD *)(v6 + 24);
  if (!((unint64_t)v13 >> 62))
  {
    v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v14)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease();
    return (uint64_t)v12;
  }
  if (v13 < 0)
    v21 = *(_QWORD *)(v6 + 24);
  else
    v21 = v13 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  result = _CocoaArrayWrapper.endIndex.getter(v21);
  v14 = result;
  if (!result)
    goto LABEL_13;
LABEL_3:
  if (v14 >= 1)
  {
    v16 = 0;
    v17 = a3 & 1;
    v18 = a6 & 1;
    v19 = a5 & 1;
    do
    {
      if ((v13 & 0xC000000000000001) != 0)
        specialized _ArrayBuffer._getElementSlowPath(_:)(v16, v13);
      else
        swift_retain();
      ++v16;
      v20 = (void *)sub_100BE5C6C(a1, a2, v17, a4, v19, v18);
      objc_msgSend(v12, "addSubview:", v20);
      swift_release();

    }
    while (v14 != v16);
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_100BE3D8C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_100BE359C(*(id *)(v0 + 64), *(_BYTE *)(v0 + 72));

  return swift_deallocClassInstance(v0, 88, 7);
}

uint64_t _s5FrameCMa()
{
  return objc_opt_self(_TtCC11MusicCoreUI20SyncedLyricsLineView5Frame);
}

uint64_t _s5FrameC9FrameViewCMa()
{
  return objc_opt_self(_TtCCC11MusicCoreUI20SyncedLyricsLineView5Frame9FrameView);
}

_UNKNOWN **sub_100BE3E0C()
{
  return &off_1011DFCD0;
}

void (*sub_100BE3E18(uint64_t **a1, unint64_t a2, uint64_t a3))(_QWORD *)
{
  uint64_t *v6;

  v6 = (uint64_t *)malloc(0x28uLL);
  *a1 = v6;
  v6[4] = (uint64_t)sub_100BE3E6C(v6, a2, a3);
  return sub_100812ADC;
}

uint64_t *sub_100BE3E6C(uint64_t *result, unint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_retain(*(_QWORD *)(a3 + 8 * a2 + 32));
LABEL_5:
    *v3 = v4;
    return (uint64_t *)destroy for Border;
  }
  __break(1u);
  return result;
}

void sub_100BE3F58()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  int isUniquelyReferenced_nonNull_bridgeObject;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v39[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView5Glyph9GlyphView_currentAnimators);
  swift_beginAccess(v1, v39, 33, 0);
  v2 = *v1;
  if ((unint64_t)*v1 >> 62)
    goto LABEL_19;
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v3)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    v9 = *v1;
    if ((unint64_t)*v1 >> 62)
      goto LABEL_29;
    v4 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    while (1)
    {
LABEL_15:
      v9 = *v1;
      if ((unint64_t)*v1 >> 62)
      {
        if (v9 < 0)
          v13 = *v1;
        else
          v13 = v9 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        v11 = _CocoaArrayWrapper.endIndex.getter(v13);
        swift_bridgeObjectRelease();
        if (v11 >= v4)
        {
LABEL_17:
          sub_100BB9B28(v4, v11);
          swift_endAccess(v39);
          return;
        }
      }
      else
      {
        v11 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v11 >= v4)
          goto LABEL_17;
      }
      __break(1u);
LABEL_29:
      if (v9 < 0)
        v14 = v9;
      else
        v14 = v9 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v4 = _CocoaArrayWrapper.endIndex.getter(v14);
      swift_bridgeObjectRelease();
    }
  }
LABEL_3:
  v4 = 0;
  while (1)
  {
    v5 = (v2 & 0xC000000000000001) != 0
       ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2)
       : *(id *)(v2 + 8 * v4 + 32);
    v6 = v5;
    v7 = (unint64_t)objc_msgSend(v5, "state");

    if ((v7 | 2) == 2)
      break;
    v8 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_19:
      if (v2 < 0)
        v12 = v2;
      else
        v12 = v2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v3 = _CocoaArrayWrapper.endIndex.getter(v12);
      if (!v3)
        goto LABEL_10;
      goto LABEL_3;
    }
    ++v4;
    if (v8 == v3)
      goto LABEL_10;
  }
  swift_bridgeObjectRelease();
  v10 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
LABEL_34:
    if (v2 < 0)
      v15 = v2;
    else
      v15 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v16 = _CocoaArrayWrapper.endIndex.getter(v15);
    swift_bridgeObjectRelease();
    if (v10 == v16)
      goto LABEL_15;
    goto LABEL_38;
  }
  v2 = *v1;
  if ((unint64_t)*v1 >> 62)
    goto LABEL_34;
  if (v10 == *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_15;
LABEL_38:
  v17 = v4 + 5;
  while (1)
  {
    v18 = v17 - 4;
    v19 = *v1;
    if ((*v1 & 0xC000000000000001) != 0)
    {
      v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v17 - 4, v19);
      goto LABEL_43;
    }
    if ((v18 & 0x8000000000000000) != 0)
      break;
    if (v18 >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_77;
    v20 = *(id *)(v19 + 8 * v17);
LABEL_43:
    v21 = v20;
    v22 = (unint64_t)objc_msgSend(v20, "state");

    if ((v22 | 2) == 2)
      goto LABEL_64;
    if (v18 != v4)
    {
      v23 = *v1;
      if ((*v1 & 0xC000000000000001) != 0)
      {
        v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, *v1);
        v23 = *v1;
        if ((*v1 & 0xC000000000000001) == 0)
          goto LABEL_49;
      }
      else
      {
        if (v4 < 0)
          goto LABEL_80;
        if ((unint64_t)v4 >= *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_81;
        v24 = *(id *)(v23 + 8 * v4 + 32);
        if ((v23 & 0xC000000000000001) == 0)
        {
LABEL_49:
          if ((v18 & 0x8000000000000000) != 0)
            goto LABEL_82;
          if (v18 >= *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_83;
          v25 = *(id *)(v23 + 8 * v17);
          goto LABEL_52;
        }
      }
      v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v17 - 4, v23);
      v23 = *v1;
LABEL_52:
      isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(v23);
      *v1 = v23;
      if (!isUniquelyReferenced_nonNull_bridgeObject || v23 < 0 || (v23 & 0x4000000000000000) != 0)
      {
        v23 = sub_10072E088(v23);
        *v1 = v23;
      }
      v27 = *(void **)((v23 & 0xFFFFFFFFFFFFFF8) + 8 * v4 + 0x20);
      *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 8 * v4 + 0x20) = v25;

      specialized Array._endMutation()(v28);
      v29 = *v1;
      v30 = swift_isUniquelyReferenced_nonNull_bridgeObject(*v1);
      *v1 = v29;
      if (!v30 || v29 < 0 || (v29 & 0x4000000000000000) != 0)
      {
        v29 = sub_10072E088(v29);
        *v1 = v29;
      }
      if ((v18 & 0x8000000000000000) != 0)
        goto LABEL_84;
      v31 = v29 & 0xFFFFFFFFFFFFFF8;
      if (v18 >= *(_QWORD *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_85;
      v32 = *(void **)(v31 + 8 * v17);
      *(_QWORD *)(v31 + 8 * v17) = v24;

      specialized Array._endMutation()(v33);
    }
    if (__OFADD__(v4++, 1))
      goto LABEL_79;
LABEL_64:
    v35 = v17 - 3;
    if (__OFADD__(v18, 1))
      goto LABEL_78;
    v36 = *v1;
    if ((unint64_t)*v1 >> 62)
    {
      if (v36 < 0)
        v38 = *v1;
      else
        v38 = v36 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v37 = _CocoaArrayWrapper.endIndex.getter(v38);
      swift_bridgeObjectRelease();
    }
    else
    {
      v37 = *(_QWORD *)((v36 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    ++v17;
    if (v35 == v37)
      goto LABEL_15;
  }
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
LABEL_83:
  __break(1u);
LABEL_84:
  __break(1u);
LABEL_85:
  __break(1u);
}

id sub_100BE4378(void *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  _QWORD v10[6];

  v10[0] = 0x3FF0000000000000;
  v10[1] = 0;
  v10[2] = 0;
  v10[3] = 0x3FF0000000000000;
  v10[4] = 0;
  v10[5] = 0;
  objc_msgSend(a1, "setTransform:", v10);
  return UIView.untransformedFrame.setter(a2, a3, a4, a5);
}

void sub_100BE43F0(void *a1, double a2, double a3, double a4, double a5)
{
  void *v5;
  Class isa;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  void *v16;
  char *v17;
  objc_class *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void **v22;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  uint64_t v27;

  sub_100BE4C84();
  isa = UIViewPropertyAnimator.init(springTimingParameters:)((UISpringTimingParameters)a1).super.isa;
  v12 = swift_allocObject(&unk_101106708, 48, 7);
  *(_QWORD *)(v12 + 16) = v5;
  *(double *)(v12 + 24) = a2;
  *(double *)(v12 + 32) = a3;
  *(double *)(v12 + 40) = a4;
  v26 = sub_100BE4D98;
  v27 = v12;
  v22 = _NSConcreteStackBlock;
  v23 = 1107296256;
  v24 = sub_1001DBD98;
  v25 = &unk_101106720;
  v13 = _Block_copy(&v22);
  v14 = v5;
  -[objc_class addAnimations:](isa, "addAnimations:", v13, swift_release().n128_f64[0]);
  _Block_release(v13);
  v15 = swift_allocObject(&unk_101106640, 24, 7);
  swift_unknownObjectWeakInit(v15 + 16);
  v26 = sub_100BE4D2C;
  v27 = v15;
  v22 = _NSConcreteStackBlock;
  v23 = 1107296256;
  v24 = sub_10012F6FC;
  v25 = &unk_101106748;
  v16 = _Block_copy(&v22);
  -[objc_class addCompletion:](isa, "addCompletion:", v16, swift_release().n128_f64[0]);
  _Block_release(v16);
  -[objc_class startAnimationAfterDelay:](isa, "startAnimationAfterDelay:", a5);
  v17 = &v14[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView5Glyph9GlyphView_currentAnimators];
  swift_beginAccess(v17, &v22, 33, 0);
  v18 = isa;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v18);
  v20 = *(_QWORD *)((*(_QWORD *)v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v19 = *(_QWORD *)((*(_QWORD *)v17 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v20 >= v19 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v19 > 1, v20 + 1, 1);
  v21 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v18);
  specialized Array._endMutation()(v21);
  swift_endAccess(&v22);

}

void sub_100BE45F8(void *a1, double a2, double a3, CGFloat a4)
{
  uint64_t v8;
  uint64_t v9;
  CGFloat v10;
  void *v11;
  id v12;
  double v13;
  CGAffineTransform v14;

  v8 = objc_opt_self(UIView);
  v9 = swift_allocObject(&unk_101106780, 24, 7);
  *(_QWORD *)(v9 + 16) = a1;
  v10 = COERCE_DOUBLE(swift_allocObject(&unk_1011067A8, 32, 7));
  *(_QWORD *)(*(_QWORD *)&v10 + 16) = sub_100BE4DCC;
  *(_QWORD *)(*(_QWORD *)&v10 + 24) = v9;
  *(_QWORD *)&v14.tx = sub_1001095DC;
  v14.ty = v10;
  *(_QWORD *)&v14.a = _NSConcreteStackBlock;
  *(_QWORD *)&v14.b = 1107296256;
  *(_QWORD *)&v14.c = sub_10046D7B4;
  *(_QWORD *)&v14.d = &unk_1011067C0;
  v11 = _Block_copy(&v14);
  v12 = a1;
  swift_retain();
  objc_msgSend((id)v8, "performWithoutAnimation:", v11, swift_release().n128_f64[0]);
  _Block_release(v11);
  LOBYTE(v8) = swift_isEscapingClosureAtFileLocation(*(_QWORD *)&v10, "", 130, 92, 52, 1);
  *(_QWORD *)&v13 = swift_release().n128_u64[0];
  if ((v8 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    objc_msgSend(v12, "frame", v13);
    objc_msgSend(v12, "setFrame:", a2, a3);
    CGAffineTransformMakeScale(&v14, a4, a4);
    objc_msgSend(v12, "setTransform:", &v14);
    swift_release();
  }
}

void sub_100BE47AC(void *a1, double a2, double a3, double a4)
{
  void *v4;
  Class isa;
  uint64_t v10;
  void *v11;
  char *v12;
  uint64_t v13;
  void *v14;
  char *v15;
  objc_class *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void **v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;

  sub_100BE4C84();
  isa = UIViewPropertyAnimator.init(springTimingParameters:)((UISpringTimingParameters)a1).super.isa;
  v10 = swift_allocObject(&unk_1011065F0, 40, 7);
  *(_QWORD *)(v10 + 16) = v4;
  *(double *)(v10 + 24) = a2;
  *(double *)(v10 + 32) = a3;
  v24 = sub_100BE4CE4;
  v25 = v10;
  v20 = _NSConcreteStackBlock;
  v21 = 1107296256;
  v22 = sub_1001DBD98;
  v23 = &unk_101106608;
  v11 = _Block_copy(&v20);
  v12 = v4;
  -[objc_class addAnimations:](isa, "addAnimations:", v11, swift_release().n128_f64[0]);
  _Block_release(v11);
  v13 = swift_allocObject(&unk_101106640, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16);
  v24 = sub_100BE4D2C;
  v25 = v13;
  v20 = _NSConcreteStackBlock;
  v21 = 1107296256;
  v22 = sub_10012F6FC;
  v23 = &unk_101106658;
  v14 = _Block_copy(&v20);
  -[objc_class addCompletion:](isa, "addCompletion:", v14, swift_release().n128_f64[0]);
  _Block_release(v14);
  -[objc_class startAnimationAfterDelay:](isa, "startAnimationAfterDelay:", a4);
  v15 = &v12[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView5Glyph9GlyphView_currentAnimators];
  swift_beginAccess(v15, &v20, 33, 0);
  v16 = isa;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v16);
  v18 = *(_QWORD *)((*(_QWORD *)v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v17 = *(_QWORD *)((*(_QWORD *)v15 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v18 >= v17 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v17 > 1, v18 + 1, 1);
  v19 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v16);
  specialized Array._endMutation()(v19);
  swift_endAccess(&v20);

}

void sub_100BE49AC(void *a1, double a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  uint64_t (*v16)();
  uint64_t v17;

  v6 = objc_opt_self(UIView);
  v7 = swift_allocObject(&unk_101106690, 24, 7);
  *(_QWORD *)(v7 + 16) = a1;
  v8 = swift_allocObject(&unk_1011066B8, 32, 7);
  *(_QWORD *)(v8 + 16) = sub_100BE4D44;
  *(_QWORD *)(v8 + 24) = v7;
  v16 = sub_10010942C;
  v17 = v8;
  v12 = (uint64_t)_NSConcreteStackBlock;
  v13 = 1107296256;
  v14 = sub_10046D7B4;
  v15 = (uint64_t)&unk_1011066D0;
  v9 = _Block_copy(&v12);
  v10 = a1;
  swift_retain();
  objc_msgSend((id)v6, "performWithoutAnimation:", v9, swift_release().n128_f64[0]);
  _Block_release(v9);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation(v8, "", 130, 108, 52, 1);
  *(_QWORD *)&v11 = swift_release().n128_u64[0];
  if ((v6 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v12 = 0x3FF0000000000000;
    v13 = 0;
    v14 = 0;
    v15 = 0x3FF0000000000000;
    v16 = 0;
    v17 = 0;
    objc_msgSend(v10, "setTransform:", &v12, v11);
    objc_msgSend(v10, "frame");
    objc_msgSend(v10, "setFrame:", a2, a3);
    swift_release();
  }
}

id sub_100BE4B44(uint64_t a1, uint64_t (*a2)(void))
{
  double *v2;
  _BYTE v4[24];

  v2 = (double *)a2();
  swift_beginAccess(v2, v4, 0, 0);
  return UIView.setAnchorPoint(_:preserveFrame:)(1, *v2, v2[1]);
}

void sub_100BE4B8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_100BE3F58();

  }
}

uint64_t sub_100BE4C18()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  return swift_deallocClassInstance(v0, 72, 7);
}

uint64_t _s5GlyphCMa()
{
  return objc_opt_self(_TtCC11MusicCoreUI20SyncedLyricsLineView5Glyph);
}

uint64_t _s5GlyphC9GlyphViewCMa()
{
  return objc_opt_self(_TtCCC11MusicCoreUI20SyncedLyricsLineView5Glyph9GlyphView);
}

unint64_t sub_100BE4C84()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E0650;
  if (!qword_1011E0650)
  {
    v1 = objc_opt_self(UIViewPropertyAnimator);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1011E0650);
  }
  return result;
}

uint64_t sub_100BE4CC0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

void sub_100BE4CE4()
{
  uint64_t v0;

  sub_100BE49AC(*(void **)(v0 + 16), *(double *)(v0 + 24), *(double *)(v0 + 32));
}

uint64_t sub_100BE4CF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100BE4D00(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_100BE4D08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

void sub_100BE4D2C(uint64_t a1)
{
  uint64_t v1;

  sub_100BE4B8C(a1, v1);
}

id sub_100BE4D44()
{
  uint64_t v0;

  return sub_100BE4B44(*(_QWORD *)(v0 + 16), (uint64_t (*)(void))CGPoint.center.unsafeMutableAddressor);
}

uint64_t sub_100BE4D64()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100BE4D74()
{
  uint64_t v0;

  return swift_deallocObject(v0, 48, 7);
}

void sub_100BE4D98()
{
  uint64_t v0;

  sub_100BE45F8(*(void **)(v0 + 16), *(double *)(v0 + 24), *(double *)(v0 + 32), *(CGFloat *)(v0 + 40));
}

uint64_t sub_100BE4DA8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_100BE4DCC()
{
  uint64_t v0;

  return sub_100BE4B44(*(_QWORD *)(v0 + 16), (uint64_t (*)(void))CGPoint.bottomCenter.unsafeMutableAddressor);
}

uint64_t sub_100BE4DEC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

char *sub_100BE4E28(uint64_t a1)
{
  uint64_t v2;
  char *result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if ((unint64_t)a1 >> 62)
    goto LABEL_18;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (!v2)
      return (char *)_swiftEmptyArrayStorage;
    result = sub_100BCD37C(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(v4, a1);
      else
        swift_retain();
      v6 = *(_QWORD *)(v5 + 32);
      v7 = *(_QWORD *)(v6 + 16);
      if (v7)
        v8 = *(_QWORD *)(v6 + 56 * v7 - 16);
      else
        v8 = 0;
      swift_release();
      v10 = _swiftEmptyArrayStorage[2];
      v9 = _swiftEmptyArrayStorage[3];
      if (v10 >= v9 >> 1)
        sub_100BCD37C((char *)(v9 > 1), v10 + 1, 1);
      ++v4;
      _swiftEmptyArrayStorage[2] = v10 + 1;
      _swiftEmptyArrayStorage[v10 + 4] = v8;
      if (v2 == v4)
        return (char *)_swiftEmptyArrayStorage;
    }
    __break(1u);
LABEL_18:
    if (a1 < 0)
      v11 = a1;
    else
      v11 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v2 = _CocoaArrayWrapper.endIndex.getter(v11);
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

char *sub_100BE4F94(uint64_t a1)
{
  uint64_t v2;
  char *result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if ((unint64_t)a1 >> 62)
    goto LABEL_18;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (!v2)
      return (char *)_swiftEmptyArrayStorage;
    result = sub_100BCD37C(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(v4, a1);
      else
        swift_retain();
      v6 = *(_QWORD *)(v5 + 32);
      if (*(_QWORD *)(v6 + 16))
        v7 = *(_QWORD *)(v6 + 32);
      else
        v7 = 0;
      swift_release();
      v9 = _swiftEmptyArrayStorage[2];
      v8 = _swiftEmptyArrayStorage[3];
      if (v9 >= v8 >> 1)
        sub_100BCD37C((char *)(v8 > 1), v9 + 1, 1);
      ++v4;
      _swiftEmptyArrayStorage[2] = v9 + 1;
      _swiftEmptyArrayStorage[v9 + 4] = v7;
      if (v2 == v4)
        return (char *)_swiftEmptyArrayStorage;
    }
    __break(1u);
LABEL_18:
    if (a1 < 0)
      v10 = a1;
    else
      v10 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v2 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void sub_100BE50E8(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  unint64_t v4;
  double v5;
  double v6;
  double v7;
  CGFloat v8;
  CGFloat v9;
  double v10;
  uint64_t v11;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  double v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  double *v31;
  CGFloat v32;
  CGFloat v33;
  CGFloat v34;
  CGFloat v35;
  id v36;
  uint64_t v37;
  id v38;
  id v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  double v45;
  double v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t i;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  double v69;
  double v70;
  uint64_t v71;
  uint64_t v72;
  double Width;
  double v74;
  uint64_t v75;
  uint64_t v76;
  double v77;
  char v78;
  double v79;
  double v80;
  uint64_t v81;
  double v82;
  double v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  double v88;
  void *v89;
  uint64_t v90;
  void *v91;
  id v92;
  __n128 v93;
  uint64_t v94;
  double v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD aBlock[7];
  CGRect v104;
  CGRect v105;
  CGRect v106;
  CGRect v107;
  CGRect v108;

  v11 = v3;
  v15 = *(_QWORD *)(v3 + 16);
  v16 = (unint64_t)v15 >> 62;
  if ((unint64_t)v15 >> 62)
  {
    if (v15 < 0)
      v20 = *(_QWORD *)(v3 + 16);
    else
      v20 = v15 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v18 = _CocoaArrayWrapper.endIndex.getter(v20);
    v17 = v18;
    if (!v18)
      goto LABEL_13;
  }
  else
  {
    v17 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
    v18 = swift_bridgeObjectRetain();
    if (!v17)
      goto LABEL_13;
  }
  if (v17 < 1)
  {
    __break(1u);
    goto LABEL_40;
  }
  v19 = 0;
  v4 = v15 & 0xC000000000000001;
  do
  {
    if (v4)
      specialized _ArrayBuffer._getElementSlowPath(_:)(v19, v15);
    else
      swift_retain();
    ++v19;
    sub_100BE847C(a1, a3);
    swift_release();
  }
  while (v17 != v19);
LABEL_13:
  swift_bridgeObjectRelease();
  if ((*(_BYTE *)(v3 + 80) & 1) != 0)
    return;
  v21 = *(_QWORD *)(v3 + 72);
  if (!v21)
    return;
  v22 = *(void **)(v21 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_gradientView);
  if (!v22)
    return;
  v23 = *(void **)(a1 + 168);
  v17 = v22;
  objc_msgSend(v23, "lineHeight");
  v25 = v24 * *(double *)(a1 + 224) + *(double *)(a1 + 352) + *(double *)(a1 + 352);
  v9 = *(double *)(v11 + 40);
  v8 = *(double *)(v11 + 48);
  v7 = *(double *)(v11 + 56);
  v6 = *(double *)(v11 + 64);
  v104.origin.x = v9;
  v104.origin.y = v8;
  v104.size.width = v7;
  v104.size.height = v6;
  v5 = (v25 - CGRectGetHeight(v104)) * 0.5;
  v10 = *(double *)(a1 + 392);
  if (sub_100BE5F50() <= a3)
  {
    if (v16)
    {
      if (v15 < 0)
        v28 = v15;
      else
        v28 = v15 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v26 = _CocoaArrayWrapper.endIndex.getter(v28);
      v27 = v15;
      if (!v26)
        goto LABEL_49;
    }
    else
    {
      v26 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      v27 = v15;
      if (!v26)
        goto LABEL_49;
    }
    v18 = v26 - 1;
    if (!__OFSUB__(v26, 1))
    {
      if ((v15 & 0xC000000000000001) == 0)
      {
        if ((v18 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v18 < *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          v26 = *(_QWORD *)(v15 + 8 * v18 + 32);
          swift_retain();
          goto LABEL_29;
        }
        __break(1u);
        goto LABEL_44;
      }
LABEL_41:
      v26 = specialized _ArrayBuffer._getElementSlowPath(_:)(v18, v15);
LABEL_29:
      swift_bridgeObjectRelease();
      v27 = *(_QWORD *)(v26 + 72);
      if (!((unint64_t)v27 >> 62))
      {
        v29 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v29)
          goto LABEL_31;
        goto LABEL_48;
      }
LABEL_44:
      if (v27 < 0)
        v37 = v27;
      else
        v37 = v27 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v29 = _CocoaArrayWrapper.endIndex.getter(v37);
      if (v29)
      {
LABEL_31:
        v30 = v29 - 1;
        if (__OFSUB__(v29, 1))
        {
          __break(1u);
        }
        else if ((v27 & 0xC000000000000001) == 0)
        {
          if ((v30 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v30 < *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            v31 = *(double **)(v27 + 8 * v30 + 32);
            swift_retain();
LABEL_36:
            swift_bridgeObjectRelease();
            if ((a2 & 1) == 0)
            {
              v32 = v31[14];
              v33 = v31[15];
              v34 = v31[16];
              v35 = v31[17];
              v36 = (id)v17;
              v105.origin.x = v32;
              v105.origin.y = v33;
              v105.size.width = v34;
              v105.size.height = v35;
              CGRectGetWidth(v105);
              objc_msgSend(v36, "frame");
              objc_msgSend(v36, "setFrame:");

            }
            swift_release();
            goto LABEL_154;
          }
          __break(1u);
          goto LABEL_102;
        }
        v31 = (double *)specialized _ArrayBuffer._getElementSlowPath(_:)(v30, v27);
        goto LABEL_36;
      }
LABEL_48:
      swift_release();
LABEL_49:
      swift_bridgeObjectRelease();
      goto LABEL_50;
    }
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
LABEL_50:
  if (sub_100BE5EB0() > a3)
  {
    *(_QWORD *)(v11 + 88) = 0;
    swift_release();
    v38 = (id)v17;
    v39 = v38;
    if ((a2 & 1) != 0)
    {
      v106.origin.x = v9;
      v106.origin.y = v8;
      v106.size.width = v7;
      v106.size.height = v6;
      v45 = v5 * 0.5 + CGRectGetWidth(v106);
      objc_msgSend(v39, "frame");
      objc_msgSend(v39, "setFrame:", v45);

      v39 = v39;
      objc_msgSend(v39, "frame");
    }
    else
    {
      objc_msgSend(v38, "frame");
    }
    objc_msgSend(v39, "setFrame:");

    goto LABEL_155;
  }
  sub_100BE64D0(a3);
  v4 = v40;
  v27 = v41;
  v42 = sub_100BE6678(a3);
  v29 = v42;
  v26 = v43;
  if (!v4 || !v42)
  {
    swift_release();
    swift_release();
    goto LABEL_154;
  }
  v44 = *(_QWORD *)(v11 + 88);
  if (v44 && v42 == v44)
  {

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return;
  }
  if ((a2 & 1) == 0)
  {
    if (v16)
    {
      if (v15 < 0)
        v50 = v15;
      else
        v50 = v15 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      v47 = _CocoaArrayWrapper.endIndex.getter(v50);
    }
    else
    {
      v47 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
    }
    if (!v47)
      goto LABEL_118;
    v30 = v47 - 1;
    if (!__OFSUB__(v47, 1))
    {
      if ((v15 & 0xC000000000000001) == 0)
      {
        if ((v30 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v30 < *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          v51 = *(_QWORD *)(v15 + 8 * v30 + 32);
          swift_retain();
          swift_bridgeObjectRelease();
          v15 = *(_QWORD *)(v51 + 72);
          swift_bridgeObjectRetain();
          swift_release();
          if ((v15 & 0x8000000000000000) == 0 && (v15 & 0x4000000000000000) == 0)
            goto LABEL_77;
          goto LABEL_105;
        }
        __break(1u);
        goto LABEL_112;
      }
LABEL_103:
      v57 = specialized _ArrayBuffer._getElementSlowPath(_:)(v30, v15);
      swift_bridgeObjectRelease();
      v15 = *(_QWORD *)(v57 + 72);
      swift_bridgeObjectRetain();
      swift_unknownObjectRelease(v57);
      if ((v15 & 0x8000000000000000) == 0 && (v15 & 0x4000000000000000) == 0)
      {
LABEL_77:
        v52 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v52)
          goto LABEL_78;
        goto LABEL_118;
      }
LABEL_105:
      if (v15 < 0)
        v58 = v15;
      else
        v58 = v15 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v52 = _CocoaArrayWrapper.endIndex.getter(v58);
      swift_bridgeObjectRelease();
      if (v52)
      {
LABEL_78:
        v53 = v52 - 1;
        if (__OFSUB__(v52, 1))
          goto LABEL_163;
        if ((v15 & 0xC000000000000001) != 0)
          goto LABEL_166;
        if ((v53 & 0x8000000000000000) != 0)
          goto LABEL_164;
        if (v53 < *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          i = *(_QWORD *)(v15 + 8 * v53 + 32);
          goto LABEL_96;
        }
        goto LABEL_168;
      }
LABEL_118:
      swift_bridgeObjectRelease();
      goto LABEL_119;
    }
LABEL_102:
    __break(1u);
    goto LABEL_103;
  }
  if (v16)
  {
    if (v15 < 0)
      v55 = v15;
    else
      v55 = v15 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    v49 = _CocoaArrayWrapper.endIndex.getter(v55);
    v48 = v49;
  }
  else
  {
    v48 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
  }
  if (!v48)
    goto LABEL_118;
  if ((v15 & 0xC000000000000001) == 0)
  {
    if (!*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_158:
      __break(1u);
LABEL_159:
      v94 = specialized _ArrayBuffer._getElementSlowPath(_:)(v49, v15);
      swift_bridgeObjectRelease();
      v95 = *(double *)(v94 + 16);
      v69 = *(double *)(v94 + 24);
      v72 = *(_QWORD *)(v94 + 32);
      v71 = *(_QWORD *)(v94 + 40);
      v98 = *(_QWORD *)(v94 + 56);
      v99 = *(_QWORD *)(v94 + 48);
      v96 = *(_QWORD *)(v94 + 64);
      swift_bridgeObjectRetain();
      swift_unknownObjectRelease(v94);
      if (v7 == v95)
        goto LABEL_132;
LABEL_148:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_149:
      v79 = a3;
      v108 = *(CGRect *)(v29 + 112);
      v82 = *(double *)(v4 + 96) + v108.origin.x;
      Width = CGRectGetWidth(v108);
      v80 = v82 + Width;
      goto LABEL_150;
    }
    v56 = *(_QWORD *)(v15 + 32);
    swift_retain();
    swift_bridgeObjectRelease();
    v15 = *(_QWORD *)(v56 + 72);
    swift_bridgeObjectRetain();
    swift_release();
    if (v15 < 0 || (v15 & 0x4000000000000000) != 0)
      goto LABEL_114;
LABEL_92:
    if (!*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_118;
    goto LABEL_93;
  }
LABEL_112:
  v59 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v15);
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(v59 + 72);
  swift_bridgeObjectRetain();
  swift_unknownObjectRelease(v59);
  if ((v15 & 0x8000000000000000) == 0 && (v15 & 0x4000000000000000) == 0)
    goto LABEL_92;
LABEL_114:
  if (v15 < 0)
    v60 = v15;
  else
    v60 = v15 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v61 = _CocoaArrayWrapper.endIndex.getter(v60);
  swift_bridgeObjectRelease();
  if (!v61)
    goto LABEL_118;
LABEL_93:
  if ((v15 & 0xC000000000000001) != 0)
    goto LABEL_165;
  if (!*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_168:
    __break(1u);
    return;
  }
  for (i = *(_QWORD *)(v15 + 32); ; swift_unknownObjectRelease(i))
  {
LABEL_96:
    swift_bridgeObjectRelease();
    if (i == v29)
    {
      a3 = 1.0;
    }
    else
    {
LABEL_119:
      v62 = *(_QWORD *)(v29 + 64);
      if (!v62 || (a3 = 0.5, v62 >= 3))
      {
        if (!v26
          || (v63 = *(_QWORD *)(v29 + 32),
              v64 = *(_QWORD *)(v29 + 40),
              swift_bridgeObjectRetain(),
              v65 = String.count.getter(v63, v64),
              swift_bridgeObjectRelease(),
              a3 = 0.25,
              v65 >= 3))
        {
          a3 = 0.12;
        }
      }
    }
    if ((a2 & 1) != 0)
    {
      v74 = *(double *)(v4 + 96) + *(double *)(v29 + 112) - v10 * a3 - v5;
      objc_msgSend((id)v17, "frame");
      v76 = v75;
      v107.origin.x = v9;
      v107.origin.y = v8;
      v107.size.width = v7;
      v107.size.height = v6;
      v77 = CGRectGetWidth(v107) - v74;
      goto LABEL_151;
    }
    v7 = *(double *)(v29 + 16);
    v6 = *(double *)(v29 + 24);
    a2 = *(_QWORD *)(v29 + 40);
    v101 = *(_QWORD *)(v29 + 48);
    v102 = *(_QWORD *)(v29 + 32);
    v66 = *(_QWORD *)(v29 + 64);
    v100 = *(_QWORD *)(v29 + 56);
    v15 = *(_QWORD *)(v4 + 72);
    if ((unint64_t)v15 >> 62)
    {
      if (v15 < 0)
        v81 = *(_QWORD *)(v4 + 72);
      else
        v81 = v15 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v67 = _CocoaArrayWrapper.endIndex.getter(v81);
      if (!v67)
      {
LABEL_147:
        swift_bridgeObjectRelease();
        goto LABEL_148;
      }
    }
    else
    {
      v67 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (!v67)
        goto LABEL_147;
    }
    v49 = v67 - 1;
    if (__OFSUB__(v67, 1))
      goto LABEL_158;
    v97 = v66;
    if ((v15 & 0xC000000000000001) != 0)
      goto LABEL_159;
    if ((v49 & 0x8000000000000000) != 0)
    {
      __break(1u);
      goto LABEL_162;
    }
    if (v49 < *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
      break;
LABEL_162:
    __break(1u);
LABEL_163:
    __break(1u);
LABEL_164:
    __break(1u);
LABEL_165:
    v53 = 0;
LABEL_166:
    i = specialized _ArrayBuffer._getElementSlowPath(_:)(v53, v15);
  }
  v68 = *(_QWORD *)(v15 + 8 * v49 + 32);
  swift_retain();
  swift_bridgeObjectRelease();
  v70 = *(double *)(v68 + 16);
  v69 = *(double *)(v68 + 24);
  v72 = *(_QWORD *)(v68 + 32);
  v71 = *(_QWORD *)(v68 + 40);
  v98 = *(_QWORD *)(v68 + 56);
  v99 = *(_QWORD *)(v68 + 48);
  v96 = *(_QWORD *)(v68 + 64);
  swift_bridgeObjectRetain();
  swift_release();
  if (v7 != v70)
    goto LABEL_148;
LABEL_132:
  if (v6 != v69)
    goto LABEL_148;
  if (v102 != v72 || a2 != v71)
  {
    v78 = _stringCompareWithSmolCheck(_:_:expecting:)(v102, a2, v72, v71, 0);
    swift_bridgeObjectRelease();
    *(_QWORD *)&Width = swift_bridgeObjectRelease().n128_u64[0];
    if ((v78 & 1) != 0)
      goto LABEL_138;
    goto LABEL_149;
  }
  *(_QWORD *)&Width = swift_bridgeObjectRelease_n(a2, 2).n128_u64[0];
LABEL_138:
  if (v101 != v99 || v100 != v98 || v97 != v96 || !v27)
    goto LABEL_149;
  v79 = a3;
  v80 = *(double *)(v27 + 96);
LABEL_150:
  objc_msgSend((id)v17, "frame", Width, v96);
  v74 = v83;
  v76 = v84;
  v77 = v5 + v10 * v79 + v80;
LABEL_151:
  objc_msgSend((id)v17, "frame");
  v86 = *(void **)(v11 + 72);
  if (v86)
  {
    v87 = v85;
    v88 = *(double *)(v29 + 24) - *(double *)(v29 + 16);
    v89 = (void *)objc_opt_self(UIView);
    v90 = swift_allocObject(&unk_101106808, 56, 7);
    *(_QWORD *)(v90 + 16) = v86;
    *(double *)(v90 + 24) = v74;
    *(_QWORD *)(v90 + 32) = v76;
    *(double *)(v90 + 40) = v77;
    *(_QWORD *)(v90 + 48) = v87;
    aBlock[4] = sub_100BE79C4;
    aBlock[5] = v90;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001DBD98;
    aBlock[3] = &unk_101106820;
    v91 = _Block_copy(aBlock);
    v92 = v86;
    swift_release();
    objc_msgSend(v89, "animateWithDuration:delay:options:animations:completion:", 196609, v91, 0, v88, 0.0);
    _Block_release(v91);

  }
  v93 = swift_release();
  swift_release_n(v4, 2, v93);
  swift_release();
  swift_release();
  *(_QWORD *)(v11 + 88) = v29;
LABEL_154:
  *(_QWORD *)&v46 = swift_release().n128_u64[0];
LABEL_155:
  objc_msgSend((id)v17, "setNeedsDisplay", v46);

}

uint64_t sub_100BE5C6C(void *a1, void *a2, char a3, const void *a4, char a5, char a6)
{
  uint64_t v6;
  uint64_t v7;
  char v12;
  double v13;
  double v14;
  double v15;
  double v16;
  char v17;
  id v18;
  id v19;
  char *v20;
  void *v21;
  char *v22;
  id v23;
  void *v24;
  char v25;
  id v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  char *v35;

  v7 = v6;
  v12 = a3 & 1;
  v13 = *(double *)(v7 + 40);
  v14 = *(double *)(v7 + 48);
  v15 = *(double *)(v7 + 56);
  v16 = *(double *)(v7 + 64);
  v17 = a6 & 1;
  v18 = objc_allocWithZone((Class)_s4LineC8LineViewCMa());
  v19 = a2;
  sub_10024E6C8((uint64_t)a4);
  v20 = sub_100BE67FC(v19, v12, a4, v17, v13, v14, v15, v16);
  v21 = *(void **)(v7 + 72);
  *(_QWORD *)(v7 + 72) = v20;
  v22 = v20;

  v23 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, v15, v16);
  if ((a5 & 1) != 0)
  {
    v24 = *(void **)(v7 + 24);
    v25 = *(_BYTE *)(v7 + 32);
    objc_allocWithZone((Class)type metadata accessor for CTLabel.Line());
    v26 = CTLabel.Line.init(ctLine:size:useExtendedLineBounds:)(v24, v25, v15, v16);
    objc_msgSend(v23, "addSubview:", v26);

LABEL_17:
    objc_msgSend(v22, "setMaskView:", v23, v27);

    return (uint64_t)v22;
  }
  v28 = *(_QWORD *)(v7 + 16);
  if (!((unint64_t)v28 >> 62))
  {
    v29 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v29)
      goto LABEL_5;
LABEL_16:
    *(_QWORD *)&v27 = swift_bridgeObjectRelease().n128_u64[0];
    goto LABEL_17;
  }
  if (v28 < 0)
    v34 = v28;
  else
    v34 = v28 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  result = _CocoaArrayWrapper.endIndex.getter(v34);
  v29 = result;
  if (!result)
    goto LABEL_16;
LABEL_5:
  if (v29 >= 1)
  {
    v35 = v22;
    v31 = 0;
    do
    {
      if ((v28 & 0xC000000000000001) != 0)
        specialized _ArrayBuffer._getElementSlowPath(_:)(v31, v28);
      else
        swift_retain();
      ++v31;
      sub_100BE900C(a1, (uint64_t)a4);
      v33 = v32;
      objc_msgSend(v23, "addSubview:", v32);
      swift_release();

    }
    while (v29 != v31);
    *(_QWORD *)&v27 = swift_bridgeObjectRelease().n128_u64[0];
    v22 = v35;
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

double sub_100BE5EB0()
{
  uint64_t v0;
  char *v1;
  double v2;
  double *v4;

  v0 = swift_bridgeObjectRetain();
  v1 = sub_100BE4F94(v0);
  swift_bridgeObjectRelease();
  v4 = (double *)v1;
  swift_bridgeObjectRetain();
  sub_100BE6FE0((char **)&v4);
  swift_bridgeObjectRelease();
  if (*((_QWORD *)v4 + 2))
    v2 = v4[4];
  else
    v2 = 0.0;
  swift_release();
  return v2;
}

double sub_100BE5F50()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  double v3;
  char *v5;

  v0 = swift_bridgeObjectRetain();
  v1 = sub_100BE4E28(v0);
  swift_bridgeObjectRelease();
  v5 = v1;
  swift_bridgeObjectRetain();
  sub_100BE6FE0(&v5);
  swift_bridgeObjectRelease();
  v2 = *((_QWORD *)v5 + 2);
  if (v2)
    v3 = *(double *)&v5[8 * v2 + 24];
  else
    v3 = 0.0;
  swift_release();
  return v3;
}

void sub_100BE5FF8(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v9;
  uint64_t v10;
  id v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  double v16;
  char v17;
  double v18;
  double v19;
  double v20;
  void *v21;
  double v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  _QWORD v40[6];

  v4 = v2;
  v5 = *(_QWORD *)(v2 + 72);
  if (v5)
  {
    v6 = *(void **)(v5 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_gradientView);
    if (v6)
    {
      v9 = *(_QWORD *)(v4 + 16);
      if ((unint64_t)v9 >> 62)
      {
        if (v9 < 0)
          v37 = *(_QWORD *)(v4 + 16);
        else
          v37 = v9 & 0xFFFFFFFFFFFFFF8;
        v38 = v6;
        swift_bridgeObjectRetain();
        v10 = _CocoaArrayWrapper.endIndex.getter(v37);
        if (v10)
        {
LABEL_5:
          v12 = v10 - 1;
          if (__OFSUB__(v10, 1))
          {
            __break(1u);
          }
          else if ((v9 & 0xC000000000000001) == 0)
          {
            if ((v12 & 0x8000000000000000) != 0)
            {
              __break(1u);
            }
            else if (v12 < *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              v10 = *(_QWORD *)(v9 + 8 * v12 + 32);
              swift_retain();
              goto LABEL_10;
            }
            __break(1u);
            goto LABEL_30;
          }
          v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v12, v9);
LABEL_10:
          swift_bridgeObjectRelease();
          v3 = *(_QWORD *)(v10 + 72);
          if (!((unint64_t)v3 >> 62))
          {
            v13 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
            if (v13)
              goto LABEL_12;
LABEL_34:

            swift_release();
            goto LABEL_35;
          }
LABEL_30:
          if (v3 < 0)
            v39 = v3;
          else
            v39 = v3 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain();
          v13 = _CocoaArrayWrapper.endIndex.getter(v39);
          if (v13)
          {
LABEL_12:
            v14 = v13 - 1;
            if (__OFSUB__(v13, 1))
            {
              __break(1u);
            }
            else if ((v3 & 0xC000000000000001) == 0)
            {
              if ((v14 & 0x8000000000000000) != 0)
              {
                __break(1u);
              }
              else if (v14 < *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
              {
                v15 = *(_QWORD *)(v3 + 8 * v14 + 32);
                swift_retain();
                goto LABEL_17;
              }
              __break(1u);
              return;
            }
            v15 = specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v3);
LABEL_17:
            *(_QWORD *)&v16 = swift_bridgeObjectRelease().n128_u64[0];
            if ((*(_BYTE *)(v4 + 80) & 1) != 0)
            {

              swift_release();
              swift_release();
            }
            else
            {
              v17 = a2 & 1;
              objc_msgSend(*(id *)(a1 + 168), "lineHeight", v16);
              v19 = v18 * *(double *)(a1 + 224) + *(double *)(a1 + 352) + *(double *)(a1 + 352);
              v20 = (v19 - CGRectGetHeight(*(CGRect *)(v4 + 40))) * 0.5;
              *(_BYTE *)(v4 + 80) = 1;
              v21 = (void *)objc_opt_self(UIView);
              v22 = *(double *)(a1 + 528);
              v23 = swift_allocObject(&unk_101106858, 593, 7);
              *(_BYTE *)(v23 + 16) = v17;
              *(_QWORD *)(v23 + 24) = v6;
              *(double *)(v23 + 32) = v20;
              *(_QWORD *)(v23 + 40) = v10;
              *(_QWORD *)(v23 + 48) = v15;
              memcpy((void *)(v23 + 56), (const void *)a1, 0x219uLL);
              v40[4] = sub_100BE7ADC;
              v40[5] = v23;
              v40[0] = _NSConcreteStackBlock;
              v40[1] = 1107296256;
              v40[2] = sub_1001DBD98;
              v40[3] = &unk_101106870;
              v24 = _Block_copy(v40);
              v25 = v6;
              swift_retain();
              swift_retain();
              sub_10024E6C8(a1);
              swift_release();
              objc_msgSend(v21, "animateWithDuration:delay:options:animations:completion:", 196609, v24, 0, v22, 0.0);
              _Block_release(v24);
              v26 = sub_10004A07C(0, (unint64_t *)&qword_1011DF580, OS_dispatch_queue_ptr);
              v34 = (void *)static OS_dispatch_queue.main.getter(v26, v27, v28, v29, v30, v31, v32, v33);
              v35 = swift_allocObject(&unk_1011068A8, 24, 7);
              swift_weakInit(v35 + 16, v4);
              swift_retain();
              OS_dispatch_queue.asyncAfter(_:block:)((uint64_t)sub_100BE7B18, v35, v22);

              swift_release();
              swift_release();

              swift_release_n(v35, 2, v36);
            }
            return;
          }
          goto LABEL_34;
        }
      }
      else
      {
        v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
        v11 = v6;
        swift_bridgeObjectRetain();
        if (v10)
          goto LABEL_5;
      }

LABEL_35:
      swift_bridgeObjectRelease();
    }
  }
}

id sub_100BE63DC(char a1, id a2, double a3, uint64_t a4, uint64_t a5)
{
  if ((a1 & 1) != 0)
  {
    objc_msgSend(a2, "frame");
    objc_msgSend(a2, "setFrame:", -a3);
  }
  CGRectGetMaxX(*(CGRect *)(a5 + 112));
  objc_msgSend(a2, "frame");
  return objc_msgSend(a2, "setFrame:");
}

double sub_100BE6484(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  double result;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    *(_BYTE *)(Strong + 80) = 0;
    *(_QWORD *)&result = swift_release(Strong).n128_u64[0];
  }
  return result;
}

void sub_100BE64D0(double a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  unint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = *(_QWORD *)(v1 + 16);
  if ((unint64_t)v3 >> 62)
    goto LABEL_28;
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v4)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return;
  }
  while (1)
  {
    v5 = 0;
    v6 = v3 & 0xC000000000000001;
    while (1)
    {
      if (v6)
        v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v3);
      else
        swift_retain();
      v8 = *(_QWORD *)(v7 + 32);
      v9 = *(_QWORD *)(v8 + 16);
      if (v9)
      {
        v10 = *(double *)(v8 + 32);
        v11 = *(double *)(v8 + 32 + 56 * v9 - 48);
        swift_release();
        if (v10 > v11)
          goto LABEL_26;
      }
      else
      {
        swift_release();
        v10 = 0.0;
        v11 = 0.0;
      }
      if (v10 <= a1 && v11 > a1)
        break;
      v13 = v5 + 1;
      if (__OFADD__(v5, 1))
        goto LABEL_27;
      ++v5;
      if (v13 == v4)
        goto LABEL_18;
    }
    swift_bridgeObjectRelease();
    if (!v6)
      break;
    specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v3);
    v14 = __OFADD__(v5, 1);
    v15 = v5 + 1;
    if (!v14)
      goto LABEL_21;
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    if (v3 < 0)
      v17 = v3;
    else
      v17 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v4 = _CocoaArrayWrapper.endIndex.getter(v17);
    if (!v4)
      goto LABEL_18;
  }
  if (v5 < *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    swift_retain();
    v14 = __OFADD__(v5, 1);
    v15 = v5 + 1;
    if (!v14)
    {
LABEL_21:
      v16 = _s4WordCMa();
      Array.subscript.getter(v15, v3, v16, (uint64_t)&v18);
      return;
    }
    goto LABEL_25;
  }
  __break(1u);
}

uint64_t sub_100BE6678(double a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t i;
  uint64_t v7;
  uint64_t v8;
  double v9;
  double v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v2 = swift_bridgeObjectRetain();
  v3 = (uint64_t)sub_100BE0B04(v2);
  swift_bridgeObjectRelease();
  if ((unint64_t)v3 >> 62)
    goto LABEL_24;
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v4)
  {
    v5 = v3 & 0xC000000000000001;
    for (i = 4; ; ++i)
    {
      v7 = i - 4;
      if (v5)
        v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, v3);
      else
        swift_retain();
      v9 = *(double *)(v8 + 16);
      v10 = *(double *)(v8 + 24);
      swift_release();
      if (v9 > v10)
        goto LABEL_22;
      if (v9 <= a1 && v10 > a1)
        break;
      v12 = i - 3;
      if (__OFADD__(v7, 1))
        goto LABEL_23;
      if (v12 == v4)
      {
        swift_bridgeObjectRelease();
        return 0;
      }
    }
    if (v5)
    {
      v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, v3);
      v13 = __OFADD__(v7, 1);
      v14 = i - 3;
      if (!v13)
        goto LABEL_18;
    }
    else
    {
      v4 = *(_QWORD *)(v3 + 8 * i);
      swift_retain();
      v13 = __OFADD__(v7, 1);
      v14 = i - 3;
      if (!v13)
      {
LABEL_18:
        v15 = _s8SyllableCMa();
        Array.subscript.getter(v14, v3, v15, (uint64_t)&v18);
        swift_bridgeObjectRelease();
        return v4;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    if (v3 < 0)
      v16 = v3;
    else
      v16 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v4 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return v4;
}

char *sub_100BE67FC(void *a1, char a2, const void *a3, char a4, double a5, double a6, double a7, double a8)
{
  _BYTE *v8;
  objc_class *ObjectType;
  char *v18;
  id v19;
  id v20;
  void *v21;
  char *v22;
  void *v23;
  objc_super v25;

  ObjectType = (objc_class *)swift_getObjectType();
  a2 &= 1u;
  *(_QWORD *)&v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_backgroundColorLayer] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_gradientView] = 0;
  v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_kind] = a2;
  memcpy(&v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_specs], a3, 0x219uLL);
  sub_10024E6C8((uint64_t)a3);
  v25.receiver = v8;
  v25.super_class = ObjectType;
  v18 = (char *)objc_msgSendSuper2(&v25, "initWithFrame:", a5, a6, a7, a8);
  v19 = objc_msgSend(a1, "CGColor");
  v20 = sub_100BE6964((uint64_t)v19, (uint64_t)a3);

  v21 = *(void **)&v18[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_backgroundColorLayer];
  *(_QWORD *)&v18[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_backgroundColorLayer] = v20;

  v22 = sub_100BE6A8C(a2, (uint64_t)a3, a4 & 1);
  sub_10024E458((uint64_t)a3);

  v23 = *(void **)&v18[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_gradientView];
  *(_QWORD *)&v18[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_gradientView] = v22;

  return v18;
}

id sub_100BE6964(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  CGFloat v11;
  id v12;
  CGRect v14;
  CGRect v15;
  CGRect v16;

  v5 = objc_msgSend(objc_allocWithZone((Class)CALayer), "init");
  objc_msgSend(v5, "setBackgroundColor:", a1);
  objc_msgSend(*(id *)(a2 + 168), "lineHeight");
  v7 = v6 * *(double *)(a2 + 224) + *(double *)(a2 + 352) + *(double *)(a2 + 352);
  objc_msgSend(v2, "frame");
  v8 = (v7 - CGRectGetHeight(v14)) * 0.5;
  v9 = -v8;
  objc_msgSend(v2, "frame");
  v10 = v8 + v8;
  v11 = CGRectGetWidth(v15) + v8 + v8;
  objc_msgSend(v2, "frame");
  objc_msgSend(v5, "setFrame:", v9, v9, v11, v10 + CGRectGetHeight(v16));
  v12 = objc_msgSend(v2, "layer");
  objc_msgSend(v12, "addSublayer:", v5);

  return v5;
}

char *sub_100BE6A8C(char a1, uint64_t a2, char a3)
{
  void *v3;
  void *v4;
  double v8;
  double v9;
  double v10;
  double v11;
  double Height;
  uint64_t v13;
  double v14;
  double v15;
  id v16;
  double v17;
  id v18;
  char *v19;
  CGRect v21;
  CGRect v22;

  v4 = v3;
  objc_msgSend(*(id *)(a2 + 168), "lineHeight");
  v9 = v8;
  v10 = *(double *)(a2 + 224);
  v11 = *(double *)(a2 + 352);
  objc_msgSend(v4, "frame");
  Height = CGRectGetHeight(v21);
  v13 = 384;
  if ((a1 & 1) == 0)
    v13 = 376;
  v14 = (v9 * v10 + v11 + v11 - Height) * 0.5;
  v15 = *(double *)(a2 + 392);
  v16 = *(id *)(a2 + v13);
  objc_msgSend(v4, "frame");
  v17 = v14 + v14 + CGRectGetHeight(v22);
  v18 = objc_allocWithZone((Class)type metadata accessor for LineProgressGradientView());
  v19 = LineProgressGradientView.init(color:featherWidth:direction:frame:)(v16, a3 & 1, v15, -v14, -v14, v14, v17);
  objc_msgSend(v4, "addSubview:", v19);
  return v19;
}

void sub_100BE6C2C()
{
  char *v0;
  char *v1;
  void **v2;
  void *v3;
  void *v4;
  id v5;
  char *v6;
  id v7;
  objc_super v8;

  v8.receiver = v0;
  v8.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v8, "tintColorDidChange");
  v1 = *(char **)&v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_gradientView];
  if (v1)
  {
    if (v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_kind])
      v2 = (void **)&v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_specs + 384];
    else
      v2 = (void **)&v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_specs + 376];
    v3 = *v2;
    v4 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_color];
    *(_QWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_color] = v3;
    v5 = v3;
    v6 = v1;
    sub_10004A07C(0, (unint64_t *)&qword_1011E6AE0, UIColor_ptr);
    v7 = v5;
    LOBYTE(v5) = static NSObject.== infix(_:_:)(v7, v4);

    if ((v5 & 1) == 0)
      sub_100C082B4();

  }
  else
  {
    __break(1u);
  }
}

void sub_100BE6D64(uint64_t a1)
{
  char *v1;
  char *v3;
  void **v4;
  void *v5;
  void *v6;
  id v7;
  char *v8;
  id v9;
  objc_super v10;

  v10.receiver = v1;
  v10.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v10, "traitCollectionDidChange:", a1);
  v3 = *(char **)&v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_gradientView];
  if (v3)
  {
    if (v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_kind])
      v4 = (void **)&v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_specs + 384];
    else
      v4 = (void **)&v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_specs + 376];
    v5 = *v4;
    v6 = *(void **)&v3[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_color];
    *(_QWORD *)&v3[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_color] = v5;
    v7 = v5;
    v8 = v3;
    sub_10004A07C(0, (unint64_t *)&qword_1011E6AE0, UIColor_ptr);
    v9 = v7;
    LOBYTE(v7) = static NSObject.== infix(_:_:)(v9, v6);

    if ((v7 & 1) == 0)
      sub_100C082B4();

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100BE6F58()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 88));
  return swift_deallocClassInstance(v0, 96, 7);
}

uint64_t _s4LineCMa()
{
  return objc_opt_self(_TtCC11MusicCoreUI20SyncedLyricsLineView4Line);
}

uint64_t _s4LineC8LineViewCMa()
{
  return objc_opt_self(_TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView);
}

_UNKNOWN **sub_100BE6FD4()
{
  return &off_1011DFF70;
}

void sub_100BE6FE0(char **a1)
{
  char *v2;
  uint64_t v3;
  _QWORD v4[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v2 = sub_100BE7A08((uint64_t)v2);
  v3 = *((_QWORD *)v2 + 2);
  v4[0] = v2 + 32;
  v4[1] = v3;
  sub_100BE7048(v4);
  *a1 = v2;
}

void sub_100BE7048(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  Swift::Int v3;
  Swift::Int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  Swift::Int v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  Swift::Int v13;
  double v14;
  double v15;
  double v16;
  double v17;
  uint64_t *v18;
  Swift::Int v19;
  Swift::Int v20;
  uint64_t *v21;
  uint64_t v22;
  Swift::Int v23;
  double *v24;
  double v25;
  Swift::Int v26;
  double *v27;
  double v28;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  char *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  unint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  BOOL v54;
  uint64_t v55;
  char v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  unint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t i;
  double v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  unint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  _QWORD *v96;
  Swift::Int v97;
  Swift::Int v98;
  uint64_t v99;
  double *v100;

  v2 = a1;
  v3 = a1[1];
  v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if (v3 < 0)
      goto LABEL_137;
    if ((unint64_t)v3 >= 2)
    {
      v80 = 0;
      v81 = *v2;
      for (i = 1; i != v3; ++i)
      {
        v83 = *(double *)(v81 + 8 * i);
        v84 = v80;
        do
        {
          v85 = v81 + 8 * v84;
          if (v83 >= *(double *)v85)
            break;
          if (!v81)
            goto LABEL_141;
          *(_QWORD *)(v85 + 8) = *(_QWORD *)v85;
          *(double *)(v81 + 8 * v84--) = v83;
        }
        while (v84 != -1);
        ++v80;
      }
    }
  }
  else
  {
    if (v3 >= 0)
      v5 = v3;
    else
      v5 = v3 + 1;
    if (v3 < -1)
      goto LABEL_136;
    v97 = v4;
    v98 = v3;
    if (v3 > 1)
    {
      v6 = v5 >> 1;
      v7 = static Array._allocateBufferUninitialized(minimumCapacity:)(v5 >> 1, &type metadata for Double);
      *(_QWORD *)(v7 + 16) = v6;
      v3 = v98;
      v96 = (_QWORD *)v7;
      v100 = (double *)(v7 + 32);
LABEL_13:
      v9 = 0;
      v10 = *v2;
      v94 = v2;
      v95 = *v2 - 8;
      v11 = (char *)_swiftEmptyArrayStorage;
      v99 = *v2;
      while (1)
      {
        v13 = v9++;
        if (v9 < v3)
        {
          v14 = *(double *)(v10 + 8 * v9);
          v15 = *(double *)(v10 + 8 * v13);
          v9 = v13 + 2;
          if (v13 + 2 < v3)
          {
            v16 = v14;
            while (1)
            {
              v17 = v16;
              v16 = *(double *)(v10 + 8 * v9);
              if (v14 < v15 == v16 >= v17)
                break;
              if (v3 == ++v9)
              {
                v9 = v3;
                break;
              }
            }
          }
          if (v14 < v15)
          {
            if (v9 < v13)
              goto LABEL_138;
            if (v13 < v9)
            {
              v18 = (uint64_t *)(v95 + 8 * v9);
              v19 = v9;
              v20 = v13;
              v21 = (uint64_t *)(v10 + 8 * v13);
              do
              {
                if (v20 != --v19)
                {
                  if (!v10)
                    goto LABEL_144;
                  v22 = *v21;
                  *v21 = *v18;
                  *v18 = v22;
                }
                ++v20;
                --v18;
                ++v21;
              }
              while (v20 < v19);
            }
          }
        }
        if (v9 < v3)
        {
          if (__OFSUB__(v9, v13))
            goto LABEL_135;
          if (v9 - v13 < v97)
          {
            v23 = v13 + v97;
            if (__OFADD__(v13, v97))
              goto LABEL_139;
            if (v23 >= v3)
              v23 = v3;
            if (v23 < v13)
            {
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
              return;
            }
            if (v9 != v23)
            {
              v24 = (double *)(v95 + 8 * v9);
              do
              {
                v25 = *(double *)(v10 + 8 * v9);
                v26 = v13;
                v27 = v24;
                do
                {
                  v28 = *v27;
                  if (v25 >= *v27)
                    break;
                  if (!v10)
                    goto LABEL_142;
                  *v27 = v25;
                  v27[1] = v28;
                  --v27;
                  ++v26;
                }
                while (v9 != v26);
                ++v9;
                ++v24;
              }
              while (v9 != v23);
              v9 = v23;
            }
          }
        }
        if (v9 < v13)
          goto LABEL_130;
        if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
          v11 = sub_100BE7894(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
        v30 = *((_QWORD *)v11 + 2);
        v29 = *((_QWORD *)v11 + 3);
        v12 = v30 + 1;
        v10 = v99;
        if (v30 >= v29 >> 1)
        {
          v79 = sub_100BE7894((char *)(v29 > 1), v30 + 1, 1, v11);
          v10 = v99;
          v11 = v79;
        }
        *((_QWORD *)v11 + 2) = v12;
        v31 = v11 + 32;
        v32 = &v11[16 * v30 + 32];
        *(_QWORD *)v32 = v13;
        *((_QWORD *)v32 + 1) = v9;
        if (v30)
        {
          while (1)
          {
            v33 = v12 - 1;
            if (v12 >= 4)
            {
              v38 = &v31[16 * v12];
              v39 = *((_QWORD *)v38 - 8);
              v40 = *((_QWORD *)v38 - 7);
              v44 = __OFSUB__(v40, v39);
              v41 = v40 - v39;
              if (v44)
                goto LABEL_119;
              v43 = *((_QWORD *)v38 - 6);
              v42 = *((_QWORD *)v38 - 5);
              v44 = __OFSUB__(v42, v43);
              v36 = v42 - v43;
              v37 = v44;
              if (v44)
                goto LABEL_120;
              v45 = v12 - 2;
              v46 = &v31[16 * v12 - 32];
              v48 = *(_QWORD *)v46;
              v47 = *((_QWORD *)v46 + 1);
              v44 = __OFSUB__(v47, v48);
              v49 = v47 - v48;
              if (v44)
                goto LABEL_121;
              v44 = __OFADD__(v36, v49);
              v50 = v36 + v49;
              if (v44)
                goto LABEL_123;
              if (v50 >= v41)
              {
                v68 = &v31[16 * v33];
                v70 = *(_QWORD *)v68;
                v69 = *((_QWORD *)v68 + 1);
                v44 = __OFSUB__(v69, v70);
                v71 = v69 - v70;
                if (v44)
                  goto LABEL_129;
                v61 = v36 < v71;
                goto LABEL_83;
              }
            }
            else
            {
              if (v12 != 3)
              {
                v62 = *((_QWORD *)v11 + 4);
                v63 = *((_QWORD *)v11 + 5);
                v44 = __OFSUB__(v63, v62);
                v55 = v63 - v62;
                v56 = v44;
                goto LABEL_77;
              }
              v35 = *((_QWORD *)v11 + 4);
              v34 = *((_QWORD *)v11 + 5);
              v44 = __OFSUB__(v34, v35);
              v36 = v34 - v35;
              v37 = v44;
            }
            if ((v37 & 1) != 0)
              goto LABEL_122;
            v45 = v12 - 2;
            v51 = &v31[16 * v12 - 32];
            v53 = *(_QWORD *)v51;
            v52 = *((_QWORD *)v51 + 1);
            v54 = __OFSUB__(v52, v53);
            v55 = v52 - v53;
            v56 = v54;
            if (v54)
              goto LABEL_124;
            v57 = &v31[16 * v33];
            v59 = *(_QWORD *)v57;
            v58 = *((_QWORD *)v57 + 1);
            v44 = __OFSUB__(v58, v59);
            v60 = v58 - v59;
            if (v44)
              goto LABEL_126;
            if (__OFADD__(v55, v60))
              goto LABEL_128;
            if (v55 + v60 >= v36)
            {
              v61 = v36 < v60;
LABEL_83:
              if (v61)
                v33 = v45;
              goto LABEL_85;
            }
LABEL_77:
            if ((v56 & 1) != 0)
              goto LABEL_125;
            v64 = &v31[16 * v33];
            v66 = *(_QWORD *)v64;
            v65 = *((_QWORD *)v64 + 1);
            v44 = __OFSUB__(v65, v66);
            v67 = v65 - v66;
            if (v44)
              goto LABEL_127;
            if (v67 < v55)
              goto LABEL_15;
LABEL_85:
            v72 = v33 - 1;
            if (v33 - 1 >= v12)
            {
              __break(1u);
LABEL_116:
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
              goto LABEL_140;
            }
            if (!v10)
              goto LABEL_143;
            v73 = &v31[16 * v72];
            v74 = *(_QWORD *)v73;
            v75 = v31;
            v76 = &v31[16 * v33];
            v77 = *((_QWORD *)v76 + 1);
            sub_100BE7694((double *)(v10 + 8 * *(_QWORD *)v73), (double *)(v10 + 8 * *(_QWORD *)v76), v10 + 8 * v77, v100);
            if (v1)
              goto LABEL_113;
            if (v77 < v74)
              goto LABEL_116;
            if (v33 > *((_QWORD *)v11 + 2))
              goto LABEL_117;
            *(_QWORD *)v73 = v74;
            *(_QWORD *)&v75[16 * v72 + 8] = v77;
            v78 = *((_QWORD *)v11 + 2);
            if (v33 >= v78)
              goto LABEL_118;
            v12 = v78 - 1;
            memmove(v76, v76 + 16, 16 * (v78 - 1 - v33));
            v31 = v75;
            *((_QWORD *)v11 + 2) = v78 - 1;
            v10 = v99;
            if (v78 <= 2)
              goto LABEL_15;
          }
        }
        v12 = 1;
LABEL_15:
        v3 = v98;
        if (v9 >= v98)
        {
          v8 = v96;
          v2 = v94;
          goto LABEL_102;
        }
      }
    }
    v8 = _swiftEmptyArrayStorage;
    v100 = (double *)&_swiftEmptyArrayStorage[4];
    if (v3 == 1)
    {
      v96 = _swiftEmptyArrayStorage;
      goto LABEL_13;
    }
    v12 = _swiftEmptyArrayStorage[2];
    v11 = (char *)_swiftEmptyArrayStorage;
LABEL_102:
    v96 = v8;
    if (v12 >= 2)
    {
      v86 = *v2;
      do
      {
        v87 = v12 - 2;
        if (v12 < 2)
          goto LABEL_131;
        if (!v86)
          goto LABEL_145;
        v88 = v11;
        v89 = v11 + 32;
        v90 = *(_QWORD *)&v11[16 * v87 + 32];
        v91 = *(_QWORD *)&v11[16 * v12 + 24];
        sub_100BE7694((double *)(v86 + 8 * v90), (double *)(v86 + 8 * *(_QWORD *)&v89[16 * v12 - 16]), v86 + 8 * v91, v100);
        if (v1)
          break;
        if (v91 < v90)
          goto LABEL_132;
        if ((swift_isUniquelyReferenced_nonNull_native(v88) & 1) == 0)
          v88 = sub_100BE798C((uint64_t)v88);
        if (v87 >= *((_QWORD *)v88 + 2))
          goto LABEL_133;
        v92 = &v88[16 * v87 + 32];
        *(_QWORD *)v92 = v90;
        *((_QWORD *)v92 + 1) = v91;
        v93 = *((_QWORD *)v88 + 2);
        if (v12 > v93)
          goto LABEL_134;
        memmove(&v88[16 * v12 + 16], &v88[16 * v12 + 32], 16 * (v93 - v12));
        v11 = v88;
        *((_QWORD *)v88 + 2) = v93 - 1;
        v12 = v93 - 1;
      }
      while (v93 > 2);
    }
LABEL_113:
    swift_bridgeObjectRelease();
    v96[2] = 0;
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_100BE7694(double *__dst, double *__src, unint64_t a3, double *a4)
{
  double *v4;
  double *v6;
  double *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double *v14;
  double v15;
  BOOL v16;
  double *v17;
  double *v18;
  double *v19;
  double v20;
  double v21;
  int64_t v23;

  v4 = a4;
  v6 = __src;
  v7 = __dst;
  v8 = (char *)__src - (char *)__dst;
  v9 = (char *)__src - (char *)__dst + 7;
  if ((char *)__src - (char *)__dst >= 0)
    v9 = (char *)__src - (char *)__dst;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)__src;
  v12 = a3 - (_QWORD)__src + 7;
  if ((uint64_t)(a3 - (_QWORD)__src) >= 0)
    v12 = a3 - (_QWORD)__src;
  v13 = v12 >> 3;
  if (v10 >= v12 >> 3)
  {
    if (a4 != __src || &__src[v13] <= a4)
      memmove(a4, __src, 8 * v13);
    v14 = &v4[v13];
    if (v7 >= v6 || v11 < 8)
      goto LABEL_39;
    v17 = (double *)(a3 - 8);
    v18 = v6;
    while (1)
    {
      v19 = v17 + 1;
      v20 = *--v18;
      v21 = v20;
      if (*(v14 - 1) < v20)
        break;
      v21 = *(v14 - 1);
      v18 = v6;
      if (v19 != v14)
      {
        --v14;
LABEL_35:
        *v17 = v21;
        goto LABEL_36;
      }
      if (v17 >= v14--)
        goto LABEL_35;
LABEL_36:
      if (v18 > v7)
      {
        --v17;
        v6 = v18;
        if (v14 > v4)
          continue;
      }
      v6 = v18;
      goto LABEL_39;
    }
    if (v19 == v6 && v17 < v6)
      goto LABEL_36;
    goto LABEL_35;
  }
  if (a4 != __dst || &__dst[v10] <= a4)
    memmove(a4, __dst, 8 * v10);
  v14 = &v4[v10];
  if ((unint64_t)v6 < a3 && v8 >= 8)
  {
    while (1)
    {
      v15 = *v6;
      if (*v6 >= *v4)
        break;
      v16 = v7 == v6++;
      if (!v16)
        goto LABEL_16;
LABEL_17:
      ++v7;
      if (v4 >= v14 || (unint64_t)v6 >= a3)
        goto LABEL_19;
    }
    v15 = *v4;
    v16 = v7 == v4++;
    if (v16)
      goto LABEL_17;
LABEL_16:
    *v7 = v15;
    goto LABEL_17;
  }
LABEL_19:
  v6 = v7;
LABEL_39:
  v23 = (char *)v14 - (char *)v4 + ((char *)v14 - (char *)v4 < 0 ? 7uLL : 0);
  if (v6 != v4 || v6 >= (double *)((char *)v4 + (v23 & 0xFFFFFFFFFFFFFFF8)))
    memmove(v6, v4, 8 * (v23 >> 3));
  return 1;
}

char *sub_100BE7894(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100007E8C(&qword_1011DFD28);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_100BE798C(uint64_t a1)
{
  return sub_100BE7894(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_100BE79A0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 56, 7);
}

id sub_100BE79C4()
{
  uint64_t v0;
  id result;

  result = *(id *)(*(_QWORD *)(v0 + 16)
                 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_gradientView);
  if (result)
    return objc_msgSend(result, "setFrame:", *(double *)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40), *(double *)(v0 + 48));
  __break(1u);
  return result;
}

uint64_t sub_100BE79F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100BE7A00(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

char *sub_100BE7A08(uint64_t a1)
{
  return sub_100BCDB40(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

char *sub_100BE7A1C(uint64_t a1)
{
  return sub_100BCE0E4(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_100BE7A30()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 48));

  return swift_deallocObject(v0, 593, 7);
}

id sub_100BE7ADC()
{
  uint64_t v0;

  return sub_100BE63DC(*(_BYTE *)(v0 + 16), *(id *)(v0 + 24), *(double *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_100BE7AF4()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_100BE7B18()
{
  uint64_t v0;

  return sub_100BE6484(v0);
}

_QWORD *sub_100BE7B38(_QWORD *result, char a2, uint64_t a3)
{
  void *v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  CGAffineTransform v7;

  v3 = (void *)result[18];
  if (v3)
  {
    if ((a2 & 1) != 0)
    {
      v4 = xmmword_100EAB8C0;
      v5 = xmmword_100EAB8D0;
      v6 = 0uLL;
    }
    else
    {
      CGAffineTransformMakeTranslation(&v7, 0.0, -*(double *)(a3 + 504));
      v5 = *(_OWORD *)&v7.a;
      v4 = *(_OWORD *)&v7.c;
      v6 = *(_OWORD *)&v7.tx;
    }
    *(_OWORD *)&v7.a = v5;
    *(_OWORD *)&v7.c = v4;
    *(_OWORD *)&v7.tx = v6;
    return objc_msgSend(v3, "setTransform:", &v7);
  }
  return result;
}

void sub_100BE7BB4(uint64_t a1, uint64_t a2, char a3)
{
  void *v3;
  unsigned __int8 v4;

  if (!a1)
  {
    v3 = *(void **)(a2 + 96);
    *(_QWORD *)(a2 + 96) = (a3 & 1) == 0;
    v4 = *(_BYTE *)(a2 + 104);
    *(_BYTE *)(a2 + 104) = 2;
    sub_100BE359C(v3, v4);
  }
}

id sub_100BE7C64()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)_s8SyllableC12SyllableViewCMa();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100BE7C94()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100BE359C(*(id *)(v0 + 96), *(_BYTE *)(v0 + 104));

  return swift_deallocClassInstance(v0, 152, 7);
}

uint64_t _s8SyllableCMa()
{
  return objc_opt_self(_TtCC11MusicCoreUI20SyncedLyricsLineView8Syllable);
}

uint64_t _s8SyllableC12SyllableViewCMa()
{
  return objc_opt_self(_TtCCC11MusicCoreUI20SyncedLyricsLineView8Syllable12SyllableView);
}

_UNKNOWN **sub_100BE7D1C()
{
  return &off_1011DFB88;
}

void sub_100BE7D28()
{
  uint64_t v0;
  uint64_t v1;
  Class isa;
  int v3;
  BOOL v4;
  void *v5;
  void *v6;
  void *v7;
  unsigned __int8 v8;
  objc_class *v9;
  void **v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;

  v1 = v0;
  isa = *(Class *)(v0 + 96);
  v3 = *(unsigned __int8 *)(v1 + 104);
  if (v3 == 1)
  {
    if (isa)
    {
LABEL_9:
      sub_100BE3578(isa, v3);
      -[objc_class stopAnimation:](isa, "stopAnimation:", 1);
      goto LABEL_10;
    }
  }
  else
  {
    if (*(_BYTE *)(v1 + 104))
      v4 = 1;
    else
      v4 = isa == 0;
    if (!v4)
      goto LABEL_9;
  }
  sub_100BE4C84();
  isa = UIViewPropertyAnimator.init(springTimingParameters:)((UISpringTimingParameters)objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 14.0, 7.0, 0.0, 0.0)).super.isa;
LABEL_10:
  v14 = sub_100BE7EF8;
  v15 = v1;
  v10 = _NSConcreteStackBlock;
  v11 = 1107296256;
  v12 = sub_1001DBD98;
  v13 = &unk_1011068D8;
  v5 = _Block_copy(&v10);
  swift_retain();
  -[objc_class addAnimations:](isa, "addAnimations:", v5, swift_release().n128_f64[0]);
  _Block_release(v5);
  v14 = sub_100BE7F50;
  v15 = v1;
  v10 = _NSConcreteStackBlock;
  v11 = 1107296256;
  v12 = sub_10012F6FC;
  v13 = &unk_101106900;
  v6 = _Block_copy(&v10);
  swift_retain();
  -[objc_class addCompletion:](isa, "addCompletion:", v6, swift_release().n128_f64[0]);
  _Block_release(v6);
  v7 = *(void **)(v1 + 96);
  *(_QWORD *)(v1 + 96) = isa;
  v8 = *(_BYTE *)(v1 + 104);
  *(_BYTE *)(v1 + 104) = 1;
  v9 = isa;
  sub_100BE359C(v7, v8);
  -[objc_class startAnimation](v9, "startAnimation");

}

id sub_100BE7EF8()
{
  uint64_t v0;
  id result;
  _QWORD v2[6];

  result = *(id *)(v0 + 144);
  if (result)
  {
    v2[0] = 0x3FF0000000000000;
    v2[1] = 0;
    v2[2] = 0;
    v2[3] = 0x3FF0000000000000;
    v2[4] = 0;
    v2[5] = 0;
    return objc_msgSend(result, "setTransform:", v2);
  }
  return result;
}

uint64_t sub_100BE7F38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100BE7F48(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

void sub_100BE7F50(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  unsigned __int8 v3;

  if (!a1)
  {
    v2 = *(void **)(v1 + 96);
    *(_QWORD *)(v1 + 96) = 0;
    v3 = *(_BYTE *)(v1 + 104);
    *(_BYTE *)(v1 + 104) = 2;
    sub_100BE359C(v2, v3);
  }
}

_QWORD *sub_100BE7F78(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if ((unint64_t)a1 >> 62)
    goto LABEL_12;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (v2)
  {
    v3 = 4;
    while (1)
    {
      v4 = v3 - 4;
      if ((a1 & 0xC000000000000001) == 0)
        break;
      v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(v3 - 4, a1);
      v6 = v3 - 3;
      if (__OFADD__(v4, 1))
        goto LABEL_11;
LABEL_9:
      v7 = *(_QWORD *)(v5 + 88);
      swift_bridgeObjectRetain();
      swift_release();
      sub_100C57518(v7);
      ++v3;
      if (v6 == v2)
        goto LABEL_16;
    }
    v5 = *(_QWORD *)(a1 + 8 * v3);
    swift_retain();
    v6 = v3 - 3;
    if (!__OFADD__(v4, 1))
      goto LABEL_9;
LABEL_11:
    __break(1u);
LABEL_12:
    if (a1 < 0)
      v8 = a1;
    else
      v8 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v2 = _CocoaArrayWrapper.endIndex.getter(v8);
  }
LABEL_16:
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

void sub_100BE8098()
{
  unint64_t v0;
  unint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  double *v10;
  id v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  BOOL v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void *v31;
  unsigned __int8 v32;
  unint64_t v33;
  uint64_t v34;
  char v35[24];
  char v36[32];

  v1 = v0;
  v2 = *(void **)(v0 + 128);
  if (v2)
  {
    v3 = objc_msgSend(v2, "layer");
    objc_msgSend(v3, "removeAllAnimations");

  }
  if (*(_QWORD *)(v1 + 136))
  {
    swift_retain();
    Task.cancel()();
    swift_release();
  }
  *(_QWORD *)(v1 + 136) = 0;
  swift_release();
  v4 = *(void **)(v1 + 128);
  if (v4)
  {
    v5 = v4;
    sub_100BE9528();

  }
  v6 = swift_bridgeObjectRetain();
  v7 = (uint64_t)sub_100BE7F78(v6);
  swift_bridgeObjectRelease();
  if ((unint64_t)v7 >> 62)
    goto LABEL_37;
  v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v8)
  {
    v9 = 0;
    v34 = v8;
    v33 = v1;
    while (1)
    {
      if ((v7 & 0xC000000000000001) != 0)
      {
        v14 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v7);
        v15 = __OFADD__(v9++, 1);
        if (v15)
          break;
        goto LABEL_17;
      }
      if (v9 >= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_36;
      v14 = *(_QWORD **)(v7 + 32 + 8 * v9);
      swift_retain();
      v15 = __OFADD__(v9++, 1);
      if (v15)
        break;
LABEL_17:
      v16 = (char *)v14[8];
      if (v16)
      {
        v17 = v14[4];
        v18 = v14[5];
        v19 = v14[6];
        v20 = v14[7];
        v21 = (uint64_t *)&v16[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView5Glyph9GlyphView_currentAnimators];
        swift_beginAccess(&v16[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView5Glyph9GlyphView_currentAnimators], v36, 0, 0);
        v22 = *v21;
        if ((unint64_t)v22 >> 62)
        {
          if (v22 < 0)
            v28 = v22;
          else
            v28 = v22 & 0xFFFFFFFFFFFFFF8;
          v29 = v16;
          swift_bridgeObjectRetain();
          v23 = _CocoaArrayWrapper.endIndex.getter(v28);
          if (!v23)
            goto LABEL_10;
        }
        else
        {
          v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
          v24 = v16;
          swift_bridgeObjectRetain();
          if (!v23)
            goto LABEL_10;
        }
        if (v23 < 1)
          goto LABEL_35;
        v25 = 0;
        v1 = v22 & 0xC000000000000001;
        do
        {
          if (v1)
            v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v25, v22);
          else
            v26 = *(id *)(v22 + 8 * v25 + 32);
          v27 = v26;
          ++v25;
          objc_msgSend(v26, "stopAnimation:", 0, v33);

        }
        while (v23 != v25);
LABEL_10:
        swift_bridgeObjectRelease();
        sub_100BE3F58();
        v10 = (double *)CGPoint.center.unsafeMutableAddressor();
        swift_beginAccess(v10, v35, 0, 0);
        UIView.setAnchorPoint(_:preserveFrame:)(1, *v10, v10[1]);
        sub_10004A07C(0, (unint64_t *)&qword_1011E2F40, UIView_ptr);
        sub_10004A07C(0, &qword_1011E0390, UISpringTimingParameters_ptr);
        v11 = UISpringTimingParameters.init(dampingRatio:response:)(1.0, 1.5);
        v12 = (_QWORD *)swift_allocObject(&unk_101106A68, 56, 7);
        v12[2] = v16;
        v12[3] = v17;
        v12[4] = v18;
        v12[5] = v19;
        v12[6] = v20;
        v13 = v16;
        static UIView.animate(withSpringTimingParameters:delay:options:animations:completion:)(v11, 0, sub_100BE9F18, (uint64_t)v12, 0, 0, 0.0);

        objc_msgSend(v13, "sizeToFit", swift_release().n128_f64[0]);
        swift_release();

        v8 = v34;
        if (v9 == v34)
          goto LABEL_33;
      }
      else
      {
        swift_release();
        if (v9 == v8)
        {
LABEL_33:
          swift_bridgeObjectRelease();
          v1 = v33;
          goto LABEL_42;
        }
      }
    }
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    if (v7 < 0)
      v30 = v7;
    else
      v30 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = _CocoaArrayWrapper.endIndex.getter(v30);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
LABEL_42:
  v31 = *(void **)(v1 + 80);
  *(_QWORD *)(v1 + 80) = 0;
  v32 = *(_BYTE *)(v1 + 88);
  *(_BYTE *)(v1 + 88) = 2;
  sub_100BE359C(v31, v32);
}

void sub_100BE847C(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  unint64_t v12;
  uint64_t v13;
  double v14;
  _BOOL4 v15;
  Class isa;
  int v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  unsigned __int8 v23;
  objc_class *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  double *v35;
  id v36;
  _QWORD *v37;
  char *v38;
  _QWORD *v39;
  BOOL v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t j;
  id v52;
  void *v53;
  char *v54;
  uint64_t v55;
  void *v56;
  unsigned __int8 v57;
  double v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  double v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  unsigned __int8 v66;
  void *v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  double v73;
  double v74;
  double v75;
  double v76;
  id v77;
  double v78;
  double v79;
  double v80;
  double v81;
  double v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  double v86;
  double v87;
  double v88;
  double v89;
  uint64_t v90;
  void *v91;
  double v92;
  double v93;
  double v94;
  double v95;
  id v96;
  void *v97;
  double v98;
  id v99;
  uint64_t v100;
  _QWORD v101[2];
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t i;
  double v108;
  double v109;
  double v110;
  char v111[32];
  void **aBlock;
  uint64_t v113;
  void *v114;
  void *v115;
  void *v116;
  uint64_t v117;

  v4 = v2;
  v109 = *(double *)&a1;
  sub_100007E8C(&qword_1011E0490);
  __chkstk_darwin();
  v103 = (char *)v101 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = *(double *)(v2 + 72);
  if (*(_QWORD *)&v110 >> 62)
  {
    if (v110 < 0.0)
      v25 = *(_QWORD *)&v110;
    else
      v25 = *(_QWORD *)&v110 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v7 = _CocoaArrayWrapper.endIndex.getter(v25);
    if (v7)
      goto LABEL_3;
  }
  else
  {
    v7 = *(_QWORD *)((*(_QWORD *)&v110 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v7)
    {
LABEL_3:
      v8 = v7 - 1;
      if (v7 < 1)
        goto LABEL_75;
      v104 = v4;
      v9 = 0;
      v11 = v109;
      v10 = v110;
      v12 = *(_QWORD *)&v110 & 0xC000000000000001;
      while (1)
      {
        if (v12)
        {
          v13 = specialized _ArrayBuffer._getElementSlowPath(_:)(v9, *(_QWORD *)&v10);
        }
        else
        {
          v13 = *(_QWORD *)(*(_QWORD *)&v10 + 8 * v9 + 32);
          swift_retain();
        }
        v14 = *(double *)(v13 + 16);
        v15 = v14 <= a2;
        if (*(unsigned __int8 *)(v13 + 104) >= 2u)
        {
          if (*(_QWORD *)(v13 + 96))
          {
            if (v14 <= a2)
              goto LABEL_5;
            v15 = 0;
          }
          else if (v14 > a2)
          {
LABEL_5:
            swift_release();
            if (v8 == v9)
              goto LABEL_25;
            goto LABEL_6;
          }
        }
        sub_100BE359C((id)v15, 2u);
        isa = *(Class *)(v13 + 96);
        v17 = *(unsigned __int8 *)(v13 + 104);
        if (v17 == 1)
        {
          if (isa && v14 <= a2)
          {
LABEL_22:
            sub_100BE3578(*(id *)(v13 + 96), v17);
            -[objc_class stopAnimation:](isa, "stopAnimation:", 1);
            goto LABEL_24;
          }
        }
        else if (!*(_BYTE *)(v13 + 104) && isa && v14 > a2)
        {
          goto LABEL_22;
        }
        sub_10004A07C(0, (unint64_t *)&qword_1011E0650, UIViewPropertyAnimator_ptr);
        isa = UIViewPropertyAnimator.init(springTimingParameters:)((UISpringTimingParameters)objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 14.0, 7.0, 0.0, 0.0)).super.isa;
LABEL_24:
        v18 = swift_allocObject(&unk_101106950, 569, 7);
        *(_QWORD *)(v18 + 16) = v13;
        *(_BYTE *)(v18 + 24) = v14 > a2;
        memcpy((void *)(v18 + 32), *(const void **)&v11, 0x219uLL);
        v116 = sub_100BE9DDC;
        v117 = v18;
        aBlock = _NSConcreteStackBlock;
        v113 = 1107296256;
        v114 = sub_1001DBD98;
        v115 = &unk_101106968;
        v19 = _Block_copy(&aBlock);
        swift_retain();
        sub_10024E6C8(*(uint64_t *)&v11);
        -[objc_class addAnimations:](isa, "addAnimations:", v19, swift_release().n128_f64[0]);
        _Block_release(v19);
        v20 = swift_allocObject(&unk_1011069A0, 25, 7);
        *(_QWORD *)(v20 + 16) = v13;
        *(_BYTE *)(v20 + 24) = v14 > a2;
        v116 = sub_100BE9E28;
        v117 = v20;
        aBlock = _NSConcreteStackBlock;
        v113 = 1107296256;
        v114 = sub_10012F6FC;
        v115 = &unk_1011069B8;
        v21 = _Block_copy(&aBlock);
        swift_retain();
        -[objc_class addCompletion:](isa, "addCompletion:", v21, swift_release().n128_f64[0]);
        _Block_release(v21);
        v22 = *(void **)(v13 + 96);
        *(_QWORD *)(v13 + 96) = isa;
        v23 = *(_BYTE *)(v13 + 104);
        *(_BYTE *)(v13 + 104) = v14 > a2;
        v24 = isa;
        sub_100BE359C(v22, v23);
        -[objc_class startAnimation](v24, "startAnimation");
        swift_release();

        v10 = v110;
        if (v8 == v9)
        {
LABEL_25:
          swift_bridgeObjectRelease();
          v4 = v104;
          goto LABEL_31;
        }
LABEL_6:
        ++v9;
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_31:
  v26 = *(_QWORD *)(v4 + 32);
  v27 = *(_QWORD *)(v26 + 16);
  if (v27)
  {
    if (*(double *)(v26 + 32) <= a2)
    {
LABEL_81:
      if (*(double *)(v26 + 32) > a2)
        return;
      goto LABEL_84;
    }
  }
  else if (a2 >= 0.0)
  {
    goto LABEL_83;
  }
  if (*(_BYTE *)(v4 + 88) == 2 && !*(_QWORD *)(v4 + 80))
  {
    if (v27)
      goto LABEL_81;
    goto LABEL_83;
  }
  v28 = *(void **)(v4 + 128);
  if (v28)
  {
    v29 = objc_msgSend(v28, "layer");
    objc_msgSend(v29, "removeAllAnimations");

  }
  if (*(_QWORD *)(v4 + 136))
  {
    swift_retain();
    Task.cancel()();
    swift_release();
  }
  *(_QWORD *)(v4 + 136) = 0;
  swift_release();
  v30 = *(void **)(v4 + 128);
  if (v30)
  {
    v31 = v30;
    sub_100BE9528();

  }
  v102 = v26;
  v32 = swift_bridgeObjectRetain();
  v3 = (uint64_t)sub_100BE7F78(v32);
  swift_bridgeObjectRelease();
  v104 = v4;
  v101[1] = 0;
  if ((unint64_t)v3 >> 62)
    goto LABEL_76;
  v33 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v33)
  {
LABEL_48:
    v34 = 0;
    *(_QWORD *)&v108 = v3 & 0xC000000000000001;
    v106 = v3 & 0xFFFFFFFFFFFFFF8;
    v105 = v3 + 32;
    for (i = v33; i != v34; v33 = i)
    {
      while (1)
      {
        if (v108 == 0.0)
        {
          if (v34 >= *(_QWORD *)(v106 + 16))
            goto LABEL_74;
          v39 = *(_QWORD **)(v105 + 8 * v34);
          swift_retain();
          v40 = __OFADD__(v34++, 1);
          if (v40)
          {
LABEL_72:
            __break(1u);
LABEL_73:
            __break(1u);
LABEL_74:
            __break(1u);
LABEL_75:
            __break(1u);
LABEL_76:
            if (v3 < 0)
              v55 = v3;
            else
              v55 = v3 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain();
            v33 = _CocoaArrayWrapper.endIndex.getter(v55);
            swift_bridgeObjectRelease();
            if (!v33)
              goto LABEL_80;
            goto LABEL_48;
          }
        }
        else
        {
          v39 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v34, v3);
          v40 = __OFADD__(v34++, 1);
          if (v40)
            goto LABEL_72;
        }
        v41 = (char *)v39[8];
        if (v41)
          break;
        swift_release();
        if (v34 == v33)
          goto LABEL_80;
      }
      v42 = v3;
      v43 = v39[4];
      v44 = v39[5];
      v45 = v39[6];
      v46 = v39[7];
      v47 = (uint64_t *)&v41[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView5Glyph9GlyphView_currentAnimators];
      swift_beginAccess(&v41[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView5Glyph9GlyphView_currentAnimators], &aBlock, 0, 0);
      v48 = *v47;
      if ((unint64_t)v48 >> 62)
      {
        if (v48 < 0)
          v3 = v48;
        else
          v3 = v48 & 0xFFFFFFFFFFFFFF8;
        v54 = v41;
        swift_bridgeObjectRetain();
        v49 = _CocoaArrayWrapper.endIndex.getter(v3);
        if (!v49)
          goto LABEL_49;
      }
      else
      {
        v49 = *(_QWORD *)((v48 & 0xFFFFFFFFFFFFF8) + 0x10);
        v50 = v41;
        swift_bridgeObjectRetain();
        if (!v49)
          goto LABEL_49;
      }
      if (v49 < 1)
        goto LABEL_73;
      for (j = 0; j != v49; ++j)
      {
        if ((v48 & 0xC000000000000001) != 0)
          v52 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v48);
        else
          v52 = *(id *)(v48 + 8 * j + 32);
        v53 = v52;
        objc_msgSend(v52, "stopAnimation:", 0);

      }
LABEL_49:
      swift_bridgeObjectRelease();
      sub_100BE3F58();
      v35 = (double *)CGPoint.center.unsafeMutableAddressor();
      swift_beginAccess(v35, v111, 0, 0);
      UIView.setAnchorPoint(_:preserveFrame:)(1, *v35, v35[1]);
      sub_10004A07C(0, (unint64_t *)&qword_1011E2F40, UIView_ptr);
      sub_10004A07C(0, &qword_1011E0390, UISpringTimingParameters_ptr);
      v36 = UISpringTimingParameters.init(dampingRatio:response:)(1.0, 1.5);
      v37 = (_QWORD *)swift_allocObject(&unk_101106A40, 56, 7);
      v37[2] = v41;
      v37[3] = v43;
      v37[4] = v44;
      v37[5] = v45;
      v37[6] = v46;
      v38 = v41;
      static UIView.animate(withSpringTimingParameters:delay:options:animations:completion:)(v36, 0, sub_100BE9F18, (uint64_t)v37, 0, 0, 0.0);

      objc_msgSend(v38, "sizeToFit", swift_release().n128_f64[0]);
      swift_release();

      v3 = v42;
    }
  }
LABEL_80:
  swift_bridgeObjectRelease();
  v4 = v104;
  v56 = *(void **)(v104 + 80);
  *(_QWORD *)(v104 + 80) = 0;
  v57 = *(_BYTE *)(v4 + 88);
  *(_BYTE *)(v4 + 88) = 2;
  sub_100BE359C(v56, v57);
  v26 = v102;
  if (*(_QWORD *)(v102 + 16))
    goto LABEL_81;
LABEL_83:
  if (a2 < 0.0)
    return;
LABEL_84:
  if (*(_BYTE *)(v4 + 88) == 2 && !*(_QWORD *)(v4 + 80) && (*(_BYTE *)(v4 + 48) & 1) == 0)
  {
    v58 = *(double *)(v4 + 40);
    v59 = swift_bridgeObjectRetain();
    v60 = (uint64_t)sub_100BE7F78(v59);
    swift_bridgeObjectRelease();
    v61 = *(_QWORD *)(v26 + 16);
    if (v61)
      v62 = *(double *)(v26 + 32 + 56 * v61 - 48) - *(double *)(v26 + 32);
    else
      v62 = 0.0;
    v63 = *(_QWORD *)&v109;
    if ((unint64_t)v60 >> 62)
    {
      if (v60 < 0)
        v100 = v60;
      else
        v100 = v60 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v64 = _CocoaArrayWrapper.endIndex.getter(v100);
      swift_bridgeObjectRelease();
      if (v64 < 1)
        goto LABEL_117;
    }
    else
    {
      v64 = *(_QWORD *)((v60 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v64 < 1)
        goto LABEL_117;
    }
    if (v62 > 0.0)
    {
      v65 = *(void **)(v4 + 80);
      *(_QWORD *)(v4 + 80) = 0;
      v66 = *(_BYTE *)(v4 + 88);
      *(_BYTE *)(v4 + 88) = 0;
      sub_100BE359C(v65, v66);
      v67 = *(void **)(v4 + 128);
      if (v67)
      {
        v68 = v67;
        sub_100BE9738(v63, v58, v62);

      }
      v69 = type metadata accessor for TaskPriority(0);
      v70 = (uint64_t)v103;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 56))(v103, 1, 1, v69);
      v71 = swift_allocObject(&unk_1011069F0, 24, 7);
      swift_weakInit(v71 + 16, v4);
      v72 = swift_allocObject(&unk_101106A18, 48, 7);
      *(_QWORD *)(v72 + 16) = 0;
      *(_QWORD *)(v72 + 24) = 0;
      *(_QWORD *)(v72 + 32) = v71;
      *(double *)(v72 + 40) = v62;
      *(_QWORD *)(v4 + 136) = sub_100BF76B8(v70, (uint64_t)&unk_1011DFFD0, v72);
      swift_release();
      v73 = (double)v64;
      v74 = v62 / (double)v64 * 0.4;
      if (v74 > 0.4)
        v74 = 0.4;
      v110 = v74;
      v75 = *(double *)(v63 + 216) + v58 * (*(double *)(v63 + 224) - *(double *)(v63 + 216));
      if (v62 <= 3.0)
        v76 = v62;
      else
        v76 = 3.0;
      sub_10004A07C(0, &qword_1011E0390, UISpringTimingParameters_ptr);
      v77 = UISpringTimingParameters.init(dampingRatio:response:)(1.0, v76);
      v79 = *(double *)(v4 + 112);
      v78 = *(double *)(v4 + 120);
      v80 = CGSize.scaled(_:)(v77, v75, v79, v78);
      v82 = v81;
      if ((unint64_t)v60 >> 62)
      {
        if (v60 < 0)
          v84 = v60;
        else
          v84 = v60 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        v83 = _CocoaArrayWrapper.endIndex.getter(v84);
        swift_bridgeObjectRelease();
        if (!v83)
          goto LABEL_116;
      }
      else
      {
        v83 = *(_QWORD *)((v60 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (!v83)
        {
LABEL_116:

          goto LABEL_117;
        }
      }
      if (v83 < 1)
      {
        __break(1u);
        return;
      }
      v85 = 0;
      v86 = v73 * 0.5;
      v87 = (v79 - v80) * 0.5;
      v88 = v78 - v82;
      v89 = *(double *)(*(_QWORD *)&v109 + 504);
      v108 = v87;
      v109 = v62 / v86;
      do
      {
        while (1)
        {
          if ((v60 & 0xC000000000000001) != 0)
          {
            v90 = specialized _ArrayBuffer._getElementSlowPath(_:)(v85, v60);
          }
          else
          {
            v90 = *(_QWORD *)(v60 + 8 * v85 + 32);
            swift_retain();
          }
          ++v85;
          v91 = *(void **)(v90 + 64);
          if (v91)
          {
            v92 = *(double *)(v90 + 32);
            v93 = *(double *)(v90 + 40);
            v94 = (v92 + v108 + v75 * v92) * 0.5;
            v95 = v110 * (double)v85;
            v96 = v91;
            sub_100BE43F0(v77, v94, (v93 + v88 + v75 * v93) * 0.25 - v89, v75, v95);

            v97 = *(void **)(v90 + 64);
            if (v97)
              break;
          }
          swift_release();
          if (v83 == v85)
            goto LABEL_116;
        }
        v98 = v109 + v95;
        v99 = v97;
        sub_100BE47AC(v77, v92, v93 - v89, v98);
        swift_release();

      }
      while (v83 != v85);
      goto LABEL_116;
    }
LABEL_117:
    swift_bridgeObjectRelease();
  }
}

void sub_100BE900C(void *a1, uint64_t a2)
{
  double *v2;
  double *v3;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  double v10;
  double v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  double v25;
  objc_class *v26;
  id v27;
  id v28;
  NSString v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double *v36;
  double v37;
  double v38;
  double v39;
  double v40;
  objc_class *v41;
  char *v42;
  id v43;
  id v44;
  NSString v45;
  id v46;
  void *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  objc_super v52;
  objc_super v53;
  id v54[5];

  v3 = v2;
  v5 = objc_msgSend(objc_allocWithZone((Class)_s4WordC8WordViewCMa()), "initWithFrame:", v2[12], v2[13], v2[14], v2[15]);
  v6 = *(void **)(a2 + 344);
  UIView.Shadow.init(color:opacity:radius:offset:)((uint64_t)v6, (uint64_t)v54, 0.0, *(double *)(a2 + 352), 0.0, 0.0);
  v7 = v6;
  v8 = objc_msgSend(v5, "layer");
  v9 = objc_msgSend(v5, "traitCollection");
  objc_msgSend(v9, "displayScale");
  v11 = v10;

  objc_msgSend(v8, "setRasterizationScale:", v11);
  v12 = objc_msgSend(v5, "layer");
  objc_msgSend(v12, "setShouldRasterize:", 1);

  v13 = v5;
  sub_1005518D0(v54);
  UIView.shadow.setter((uint64_t)v54);

  v14 = (void *)*((_QWORD *)v3 + 16);
  *((_QWORD *)v3 + 16) = v13;
  v15 = v13;

  if (!*((_QWORD *)v3 + 16))
  {
    v16 = (void *)*((_QWORD *)v3 + 10);
    v3[10] = 0.0;
    v17 = *((_BYTE *)v3 + 88);
    *((_BYTE *)v3 + 88) = 2;
    sub_100BE359C(v16, v17);
  }

  v18 = *((_QWORD *)v3 + 9);
  if (((_BYTE)v3[6] & 1) == 0)
  {
    v32 = swift_bridgeObjectRetain();
    v33 = (uint64_t)sub_100BE7F78(v32);
    swift_bridgeObjectRelease();
    if ((unint64_t)v33 >> 62)
    {
      if (v33 < 0)
        v50 = v33;
      else
        v50 = v33 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v34 = _CocoaArrayWrapper.endIndex.getter(v50);
      swift_bridgeObjectRelease();
      if (!v34)
        goto LABEL_24;
    }
    else
    {
      v34 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v34)
        goto LABEL_24;
    }
    if (v34 >= 1)
    {
      v35 = 0;
      do
      {
        if ((v33 & 0xC000000000000001) != 0)
        {
          v36 = (double *)specialized _ArrayBuffer._getElementSlowPath(_:)(v35, v33);
        }
        else
        {
          v36 = *(double **)(v33 + 8 * v35 + 32);
          swift_retain();
        }
        ++v35;
        v37 = v36[4];
        v38 = v36[5];
        v39 = v36[6];
        v40 = v36[7];
        v41 = (objc_class *)_s5GlyphC9GlyphViewCMa();
        v42 = (char *)objc_allocWithZone(v41);
        *(_QWORD *)&v42[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView5Glyph9GlyphView_currentAnimators] = _swiftEmptyArrayStorage;
        v53.receiver = v42;
        v53.super_class = v41;
        v43 = a1;
        swift_bridgeObjectRetain();
        v44 = objc_msgSendSuper2(&v53, "initWithFrame:", v37, v38, v39, v40);
        v45 = String._bridgeToObjectiveC()();
        objc_msgSend(v44, "setText:", v45, swift_bridgeObjectRelease().n128_f64[0]);

        objc_msgSend(v44, "setFont:", v43);
        objc_msgSend(v44, "setTextAlignment:", 0);
        v46 = v44;
        objc_msgSend(v46, "sizeToFit");

        v47 = (void *)*((_QWORD *)v36 + 8);
        *((_QWORD *)v36 + 8) = v46;
        v48 = v46;

        objc_msgSend(v15, "addSubview:", v48);
        swift_release();

      }
      while (v34 != v35);
      goto LABEL_24;
    }
    goto LABEL_31;
  }
  if ((unint64_t)v18 >> 62)
  {
    if (v18 < 0)
      v49 = *((_QWORD *)v3 + 9);
    else
      v49 = v18 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v19 = _CocoaArrayWrapper.endIndex.getter(v49);
    if (v19)
      goto LABEL_6;
LABEL_24:
    swift_bridgeObjectRelease();
    sub_100065200(v54);
    return;
  }
  v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v19)
    goto LABEL_24;
LABEL_6:
  if (v19 >= 1)
  {
    v20 = 0;
    do
    {
      if ((v18 & 0xC000000000000001) != 0)
      {
        v21 = specialized _ArrayBuffer._getElementSlowPath(_:)(v20, v18);
      }
      else
      {
        v21 = *(_QWORD *)(v18 + 8 * v20 + 32);
        swift_retain();
      }
      ++v20;
      v22 = *(double *)(v21 + 112);
      v23 = *(double *)(v21 + 120);
      v24 = *(double *)(v21 + 136);
      v25 = *(double *)(v21 + 128) + 50.0;
      v26 = (objc_class *)_s8SyllableC12SyllableViewCMa();
      v52.receiver = objc_allocWithZone(v26);
      v52.super_class = v26;
      swift_bridgeObjectRetain();
      v27 = a1;
      v28 = objc_msgSendSuper2(&v52, "initWithFrame:", v22, v23, v25, v24);
      v29 = String._bridgeToObjectiveC()();
      objc_msgSend(v28, "setText:", v29, swift_bridgeObjectRelease().n128_f64[0]);

      objc_msgSend(v28, "setFont:", v27);
      objc_msgSend(v28, "setTextAlignment:", 0);

      v30 = *(void **)(v21 + 144);
      *(_QWORD *)(v21 + 144) = v28;
      v31 = v28;

      objc_msgSend(v15, "addSubview:", v31);
      swift_release();

    }
    while (v19 != v20);
    goto LABEL_24;
  }
  __break(1u);
LABEL_31:
  __break(1u);
}

void sub_100BE9528()
{
  void *v0;
  void *v1;
  id v2;
  NSString v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  Class isa;
  id v10;
  Class v11;
  id v12;
  id v13;
  double v14;
  id v15;

  v1 = v0;
  sub_10004A07C(0, &qword_1011E0390, UISpringTimingParameters_ptr);
  v2 = UISpringTimingParameters.init(dampingRatio:response:)(1.0, 1.5);
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend((id)objc_opt_self(CASpringAnimation), "animationWithKeyPath:", v3);

  v5 = v4;
  objc_msgSend(v2, "settlingDuration");
  objc_msgSend(v5, "setDuration:");

  v6 = v2;
  CASpringAnimation.springParameters.setter(v6);
  v7 = v5;
  v8 = objc_msgSend(v1, "layer");
  objc_msgSend(v8, "shadowOpacity");

  isa = Float._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v7, "setFromValue:", isa);

  v10 = v7;
  v11 = Int._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v10, "setToValue:", v11);

  v12 = objc_msgSend(v1, "layer");
  v13 = objc_msgSend(v10, "keyPath");
  objc_msgSend(v12, "addAnimation:forKey:", v10, v13);

  v15 = objc_msgSend(v1, "layer");
  LODWORD(v14) = 0;
  objc_msgSend(v15, "setShadowOpacity:", v14);

}

void sub_100BE9738(uint64_t a1, double a2, double a3)
{
  void *v3;
  void *v4;
  float v5;
  double v6;
  id v7;
  NSString v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  Class isa;
  Class v15;
  id v16;
  id v17;
  double v18;
  id v19;

  v4 = v3;
  v5 = *(double *)(a1 + 360) + (*(double *)(a1 + 368) - *(double *)(a1 + 360)) * a2;
  if (a3 <= 3.0)
    v6 = a3;
  else
    v6 = 3.0;
  sub_10004A07C(0, &qword_1011E0390, UISpringTimingParameters_ptr);
  v7 = UISpringTimingParameters.init(dampingRatio:response:)(1.0, v6);
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend((id)objc_opt_self(CASpringAnimation), "animationWithKeyPath:", v8);

  v10 = v9;
  objc_msgSend(v7, "settlingDuration");
  objc_msgSend(v10, "setDuration:");

  v11 = v7;
  CASpringAnimation.springParameters.setter(v11);
  v12 = v10;
  v13 = objc_msgSend(v4, "layer");
  objc_msgSend(v13, "shadowOpacity");

  isa = Float._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v12, "setFromValue:", isa);

  v15 = Float._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v12, "setToValue:", v15);

  v16 = objc_msgSend(v4, "layer");
  v17 = objc_msgSend(v12, "keyPath");
  objc_msgSend(v16, "addAnimation:forKey:", v12, v17);

  v19 = objc_msgSend(v4, "layer");
  *(float *)&v18 = v5;
  objc_msgSend(v19, "setShadowOpacity:", v18);

}

uint64_t sub_100BE995C(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(double *)(v5 + 96) = a1;
  *(_QWORD *)(v5 + 88) = a5;
  return swift_task_switch(sub_100BE9978, 0, 0);
}

uint64_t sub_100BE9978()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  __n128 v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  unsigned __int8 v16;
  uint64_t (*v17)(double);

  v1 = *(_QWORD *)(v0 + 88) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v3 = *(void **)(Strong + 128);
    *(_QWORD *)(v0 + 104) = v3;
    if (v3)
    {
      v3;
      swift_release();
      v17 = (uint64_t (*)(double))((char *)&dword_1011DFFD8 + dword_1011DFFD8);
      v4 = (_QWORD *)swift_task_alloc(unk_1011DFFDC);
      *(_QWORD *)(v0 + 112) = v4;
      *v4 = v0;
      v4[1] = sub_100BE9AD4;
      return v17(*(double *)(v0 + 96));
    }
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + 88) + 16;
  swift_beginAccess(v6, v0 + 40, 0, 0);
  v7 = swift_weakLoadStrong(v6);
  if (!v7
    || ((v8 = *(_QWORD *)(v7 + 80), v9 = *(unsigned __int8 *)(v7 + 88), v10 = swift_release(), v9 == 2)
      ? (v11 = v8 == 0)
      : (v11 = 0),
        !v11))
  {
    v12 = *(_QWORD *)(v0 + 88) + 16;
    swift_beginAccess(v12, v0 + 64, 0, 0);
    v13 = swift_weakLoadStrong(v12);
    if (v13)
    {
      v14 = v13;
      v15 = *(void **)(v13 + 80);
      *(_QWORD *)(v14 + 80) = 1;
      v16 = *(_BYTE *)(v14 + 88);
      *(_BYTE *)(v14 + 88) = 2;
      sub_100BE359C(v15, v16);
      v10 = swift_release();
    }
  }
  return (*(uint64_t (**)(__n128))(v0 + 8))(v10);
}

uint64_t sub_100BE9AD4()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(*(_QWORD *)v0 + 104);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 112));

  return swift_task_switch(sub_100BE9B2C, 0, 0);
}

uint64_t sub_100BE9B2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  int v4;
  __n128 v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  unsigned __int8 v11;

  v1 = *(_QWORD *)(v0 + 88) + 16;
  swift_beginAccess(v1, v0 + 40, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (!Strong
    || ((v3 = *(_QWORD *)(Strong + 80), v4 = *(unsigned __int8 *)(Strong + 88), v5 = swift_release(), v4 == 2)
      ? (v6 = v3 == 0)
      : (v6 = 0),
        !v6))
  {
    v7 = *(_QWORD *)(v0 + 88) + 16;
    swift_beginAccess(v7, v0 + 64, 0, 0);
    v8 = swift_weakLoadStrong(v7);
    if (v8)
    {
      v9 = v8;
      v10 = *(void **)(v8 + 80);
      *(_QWORD *)(v9 + 80) = 1;
      v11 = *(_BYTE *)(v9 + 88);
      *(_BYTE *)(v9 + 88) = 2;
      sub_100BE359C(v10, v11);
      v5 = swift_release();
    }
  }
  return (*(uint64_t (**)(__n128))(v0 + 8))(v5);
}

uint64_t sub_100BE9C94()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100BE359C(*(id *)(v0 + 80), *(_BYTE *)(v0 + 88));

  swift_release();
  return swift_deallocClassInstance(v0, 144, 7);
}

uint64_t _s4WordCMa()
{
  return objc_opt_self(_TtCC11MusicCoreUI20SyncedLyricsLineView4Word);
}

uint64_t _s4WordC8WordViewCMa()
{
  return objc_opt_self(_TtCCC11MusicCoreUI20SyncedLyricsLineView4Word8WordView);
}

_UNKNOWN **sub_100BE9D34()
{
  return &off_1011DFE20;
}

uint64_t sub_100BE9D40()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 569, 7);
}

_QWORD *sub_100BE9DDC()
{
  uint64_t v0;

  return sub_100BE7B38(*(_QWORD **)(v0 + 16), *(_BYTE *)(v0 + 24), v0 + 32);
}

uint64_t sub_100BE9DEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100BE9DFC(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_100BE9E04()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

void sub_100BE9E28(uint64_t a1)
{
  uint64_t v1;

  sub_100BE7BB4(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

uint64_t sub_100BE9E34()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100BE9E58()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100BE9E84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = (_QWORD *)swift_task_alloc(dword_1011DFFCC);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_10005AEE4;
  v4[12] = v3;
  v4[11] = v2;
  return swift_task_switch(sub_100BE9978, 0, 0);
}

uint64_t sub_100BE9EF4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100BE9F1C(double a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v2 + 24) = v1;
  *(double *)(v2 + 16) = a1;
  v3 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v2 + 32) = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  *(_QWORD *)(v2 + 40) = v5;
  *(_QWORD *)(v2 + 48) = v6;
  return swift_task_switch(sub_100BE9F8C, v5, v6);
}

uint64_t sub_100BE9F8C()
{
  uint64_t v0;
  _QWORD *v1;
  void *v3;
  id v4;
  NSString v5;
  id v6;
  id v7;
  id v8;
  id v9;
  Class isa;
  id v11;
  Class v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  if (*(double *)(v0 + 16) <= 0.0)
  {
    v3 = *(void **)(v0 + 24);
    v4 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 14.0, 7.0, 0.0, 0.0);
    *(_QWORD *)(v0 + 72) = v4;
    v5 = String._bridgeToObjectiveC()();
    v6 = objc_msgSend((id)objc_opt_self(CASpringAnimation), "animationWithKeyPath:", v5);
    *(_QWORD *)(v0 + 80) = v6;

    v7 = v6;
    objc_msgSend(v4, "settlingDuration");
    objc_msgSend(v7, "setDuration:");

    CASpringAnimation.springParameters.setter(v4);
    v8 = v7;
    v9 = objc_msgSend(v3, "layer");
    objc_msgSend(v9, "shadowOpacity");

    isa = Float._bridgeToObjectiveC()().super.super.isa;
    objc_msgSend(v8, "setFromValue:", isa);

    v11 = v8;
    v12 = Int._bridgeToObjectiveC()().super.super.isa;
    objc_msgSend(v11, "setToValue:", v12);

    *(_QWORD *)(v0 + 88) = objc_msgSend(v3, "layer");
    v13 = objc_msgSend(v11, "keyPath");
    if (v13)
    {
      v14 = v13;
      v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
      v17 = v16;

    }
    else
    {
      v15 = 0;
      v17 = 0;
    }
    *(_QWORD *)(v0 + 96) = v17;
    v18 = (_QWORD *)swift_task_alloc(dword_1011DCCBC);
    *(_QWORD *)(v0 + 104) = v18;
    *v18 = v0;
    v18[1] = sub_100BEA470;
    return CALayer.addAsyncAnimation(_:forKey:)((uint64_t)v11, v15, v17);
  }
  else
  {
    v1 = (_QWORD *)swift_task_alloc(dword_1011DCC6C);
    *(_QWORD *)(v0 + 56) = v1;
    *v1 = v0;
    v1[1] = sub_100BEA1F4;
    return static Task<>.sleep(for:)(*(double *)(v0 + 16));
  }
}

uint64_t sub_100BEA1F4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 56);
  *(_QWORD *)(*v1 + 64) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100BEA510;
  else
    v4 = sub_100BEA254;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
}

uint64_t sub_100BEA254()
{
  _QWORD *v0;
  void *v1;
  id v2;
  NSString v3;
  id v4;
  id v5;
  id v6;
  id v7;
  Class isa;
  id v9;
  Class v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v1 = (void *)v0[3];
  v2 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 14.0, 7.0, 0.0, 0.0);
  v0[9] = v2;
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend((id)objc_opt_self(CASpringAnimation), "animationWithKeyPath:", v3);
  v0[10] = v4;

  v5 = v4;
  objc_msgSend(v2, "settlingDuration");
  objc_msgSend(v5, "setDuration:");

  CASpringAnimation.springParameters.setter(v2);
  v6 = v5;
  v7 = objc_msgSend(v1, "layer");
  objc_msgSend(v7, "shadowOpacity");

  isa = Float._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v6, "setFromValue:", isa);

  v9 = v6;
  v10 = Int._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v9, "setToValue:", v10);

  v0[11] = objc_msgSend(v1, "layer");
  v11 = objc_msgSend(v9, "keyPath");
  if (v11)
  {
    v12 = v11;
    v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v15 = v14;

  }
  else
  {
    v13 = 0;
    v15 = 0;
  }
  v0[12] = v15;
  v16 = (_QWORD *)swift_task_alloc(dword_1011DCCBC);
  v0[13] = v16;
  *v16 = v0;
  v16[1] = sub_100BEA470;
  return CALayer.addAsyncAnimation(_:forKey:)((uint64_t)v9, v13, v15);
}

uint64_t sub_100BEA470()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;

  v1 = *v0;
  v2 = *(void **)(*v0 + 88);
  swift_task_dealloc(*(_QWORD *)(*v0 + 104));

  swift_bridgeObjectRelease();
  return swift_task_switch(sub_100BEA4D4, *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_100BEA4D4()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 72);
  v2 = *(void **)(v0 + 80);
  swift_release(*(_QWORD *)(v0 + 32));

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100BEA510()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_release(*(_QWORD *)(v0 + 32));
  swift_errorRelease(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_100BEA54C()
{
  uint64_t v0;

  return sub_100BE4378(*(void **)(v0 + 16), *(CGFloat *)(v0 + 24), *(CGFloat *)(v0 + 32), *(CGFloat *)(v0 + 40), *(CGFloat *)(v0 + 48));
}

void sub_100BEA568()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  const void *v3;
  char *v4;
  char *v5;
  char *v6;
  _BYTE v7[544];
  _BYTE v8[544];
  _BYTE __dst[544];
  _BYTE v10[544];
  _BYTE v11[544];
  _BYTE v12[544];

  v1 = *(char **)(v0 + OBJC_IVAR___MusicSBS_TextContentView_textView);
  if (v1)
  {
    v2 = v0;
    v3 = (const void *)(v0 + OBJC_IVAR___MusicSBS_TextContentView_specs);
    memcpy(__dst, (const void *)(v0 + OBJC_IVAR___MusicSBS_TextContentView_specs), 0x219uLL);
    memcpy(v12, &v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs], 0x219uLL);
    memcpy(v10, &v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs], 0x219uLL);
    memmove(&v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs], (const void *)(v0 + OBJC_IVAR___MusicSBS_TextContentView_specs), 0x219uLL);
    sub_10024E6C8((uint64_t)__dst);
    sub_10024E6C8((uint64_t)__dst);
    v4 = v1;
    sub_10024E6C8((uint64_t)v12);
    sub_10024E458((uint64_t)v10);
    sub_100BE0138((uint64_t)v12);
    sub_10024E458((uint64_t)__dst);
    sub_10024E458((uint64_t)v12);

    v5 = *(char **)(v2 + OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView);
    if (v5)
    {
      memcpy(v7, v3, 0x219uLL);
      memcpy(v11, &v5[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs], 0x219uLL);
      memcpy(v8, &v5[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs], 0x219uLL);
      memmove(&v5[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs], v3, 0x219uLL);
      sub_10024E6C8((uint64_t)v7);
      sub_10024E6C8((uint64_t)v7);
      v6 = v5;
      sub_10024E6C8((uint64_t)v11);
      sub_10024E458((uint64_t)v8);
      sub_100BE0138((uint64_t)v11);
      sub_10024E458((uint64_t)v7);
      sub_10024E458((uint64_t)v11);

    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100BEA6EC(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  v2 = OBJC_IVAR___MusicSBS_TextContentView_isScrolling;
  v3 = *(unsigned __int8 *)(v1 + OBJC_IVAR___MusicSBS_TextContentView_isScrolling);
  *(_BYTE *)(v1 + OBJC_IVAR___MusicSBS_TextContentView_isScrolling) = result;
  if (v3 != (result & 1))
  {
    v4 = *(_QWORD *)(v1 + OBJC_IVAR___MusicSBS_TextContentView_textView);
    if (v4)
    {
      *(_BYTE *)(v4 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_isScrolling) = result & 1;
      v5 = *(_QWORD *)(v1 + OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView);
      if (v5)
        *(_BYTE *)(v5 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_isScrolling) = *(_BYTE *)(v1 + v2);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

void sub_100BEA74C(char a1, char a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  void *v5;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  objc_class *v13;
  uint64_t v14;
  UISpringTimingParameters v15;
  Class isa;
  void *v17;
  _QWORD v18[6];

  v3 = a1 & 1;
  if (*(_BYTE *)(v2 + OBJC_IVAR___MusicSBS_TextContentView_isSelected) != (a1 & 1))
  {
    v4 = v2;
    *(_BYTE *)(v2 + OBJC_IVAR___MusicSBS_TextContentView_isSelected) = v3;
    v5 = *(void **)(v2 + OBJC_IVAR___MusicSBS_TextContentView_textView);
    if (v5)
    {
      v8 = v5;
      sub_100BE0248(a1 & 1, a2 & 1);

      v9 = *(void **)(v4 + OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView);
      if (v9)
      {
        v10 = v9;
        sub_100BE0248(a1 & 1, a2 & 1);

      }
      v11 = swift_allocObject(&unk_101106B10, 24, 7);
      swift_unknownObjectWeakInit(v11 + 16);
      v12 = swift_allocObject(&unk_101106B38, 25, 7);
      *(_QWORD *)(v12 + 16) = v11;
      *(_BYTE *)(v12 + 24) = v3;
      if ((a2 & 1) != 0)
      {
        if ((a1 & 1) != 0)
        {
          v13 = (objc_class *)objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 30.0, 9.0, 0.0, 0.0);
        }
        else
        {
          sub_10004A07C(0, &qword_1011E0390, UISpringTimingParameters_ptr);
          v13 = (objc_class *)UISpringTimingParameters.init(dampingRatio:response:)(1.0, 0.2);
        }
        v15.super.isa = v13;
        sub_10004A07C(0, (unint64_t *)&qword_1011E0650, UIViewPropertyAnimator_ptr);
        isa = UIViewPropertyAnimator.init(springTimingParameters:)(v15).super.isa;
        v18[4] = sub_100BEBCE0;
        v18[5] = v12;
        v18[0] = _NSConcreteStackBlock;
        v18[1] = 1107296256;
        v18[2] = sub_1001DBD98;
        v18[3] = &unk_101106B50;
        v17 = _Block_copy(v18);
        swift_retain();
        -[objc_class addAnimations:](isa, "addAnimations:", v17, swift_release().n128_f64[0]);
        _Block_release(v17);
        -[objc_class startAnimation](isa, "startAnimation");

        swift_release();
      }
      else
      {
        swift_retain();
        sub_100BEA9A8(v14, a1 & 1);
        swift_release();
        swift_release();
      }
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_100BEA9A8(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t Strong;
  char *v5;
  uint64_t v6;
  void *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  void *v11;
  double v12;
  id v13;
  _OWORD v14[3];
  _BYTE v15[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v15, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (char *)Strong;
    v6 = OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView;
    v7 = *(void **)(Strong + OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView);
    if (v7)
    {
      if ((a2 & 1) != 0)
      {
        v8 = xmmword_100EAB8C0;
        v9 = xmmword_100EAB8D0;
        v10 = 0uLL;
      }
      else
      {
        v9 = *(_OWORD *)&v5[OBJC_IVAR___MusicSBS_TextContentView_specs + 96];
        v8 = *(_OWORD *)&v5[OBJC_IVAR___MusicSBS_TextContentView_specs + 112];
        v10 = *(_OWORD *)&v5[OBJC_IVAR___MusicSBS_TextContentView_specs + 128];
      }
      v14[0] = v9;
      v14[1] = v8;
      v14[2] = v10;
      objc_msgSend(v7, "setTransform:", v14);
      v11 = *(void **)&v5[v6];
      if (v11)
      {
        if ((a2 & 1) != 0)
          v12 = 1.0;
        else
          v12 = 0.0;
        v13 = v11;
        objc_msgSend(v13, "setAlpha:", v12);

      }
    }

  }
}

id sub_100BEAA94(id result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  _BYTE *v10;
  void *v11;
  _BYTE *v12;
  uint64_t v18;
  char v19;
  char v20;
  id v21;
  double v22;
  uint64_t v23;
  void *v24;
  id v25;
  _OWORD *v26;
  id v27;
  id v28;
  double v29;
  double v30;
  __int128 v31;
  void *v32;
  _OWORD v34[3];
  _BYTE __dst[552];

  v11 = *(void **)&v10[OBJC_IVAR___MusicSBS_TextContentView_textView];
  if (v11)
  {
    v12 = v10;
    v18 = (uint64_t)result;
    v19 = a10 & 1;
    v20 = a5 & 1;
    v21 = v11;
    sub_100BE1278(v18, a2, a3, a4, v20, a6);

    *(_QWORD *)&v12[OBJC_IVAR___MusicSBS_TextContentView_alignment] = a4;
    v12[OBJC_IVAR___MusicSBS_TextContentView_direction] = v20;
    *(_QWORD *)&v12[OBJC_IVAR___MusicSBS_TextContentView_capabilities] = a6;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v22 = swift_bridgeObjectRelease().n128_u64[0];
    v12[OBJC_IVAR___MusicSBS_TextContentView_backgroundDirection] = a10 & 1;
    v23 = OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView;
    v24 = *(void **)&v12[OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView];
    if (v24)
    {
      if (a8)
      {
        v25 = v24;
        sub_100BE1278(a7, a8, a9, a4, v19, a6);

LABEL_11:
        objc_msgSend(v12, "setNeedsLayout", a9);
        return objc_msgSend(v12, "layoutIfNeeded");
      }
      objc_msgSend(v24, "removeFromSuperview", v22);
      v32 = *(void **)&v12[v23];
    }
    else
    {
      if (a8)
      {
        v26 = &v12[OBJC_IVAR___MusicSBS_TextContentView_specs];
        memcpy(__dst, &v12[OBJC_IVAR___MusicSBS_TextContentView_specs], 0x219uLL);
        v27 = objc_allocWithZone((Class)_s14descr1011064E9C8TextViewCMa());
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_10024E6C8((uint64_t)__dst);
        v28 = sub_100BE13D8(a7, a8, a9, __dst, 1, a4, v19, a6);
        v29 = sub_100BEBC2C(a4);
        UIView.setAnchorPoint(_:preserveFrame:)(1, v29, v30);
        objc_msgSend(v28, "setAlpha:", 0.0);
        v31 = v26[7];
        v34[0] = v26[6];
        v34[1] = v31;
        v34[2] = v26[8];
        objc_msgSend(v28, "setTransform:", v34);
        objc_msgSend(v12, "addSubview:", v28);
        v32 = *(void **)&v12[v23];
        *(_QWORD *)&v12[v23] = v28;
LABEL_10:

        goto LABEL_11;
      }
      v32 = 0;
    }
    *(_QWORD *)&v12[v23] = 0;
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

char *sub_100BEACE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, _OWORD *a11)
{
  _BYTE *v11;
  _BYTE *v12;
  uint64_t *v16;
  char v17;
  uint64_t v18;
  _BYTE *v19;
  objc_class *v20;
  id v21;
  id v22;
  void *v23;
  char v24;
  id v25;
  void *v26;
  void *v27;
  id v28;
  double v29;
  double v30;
  void *v31;
  void *v32;
  __int128 v33;
  objc_class *v34;
  char *result;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  void *v40;
  void *v41;
  id v42;
  char *v43;
  uint64_t v44;
  uint64_t v49;
  _OWORD v50[3];
  objc_super v51;

  v12 = v11;
  v11[OBJC_IVAR___MusicSBS_TextContentView_isScrolling] = 1;
  v16 = (uint64_t *)&v11[OBJC_IVAR___MusicSBS_TextContentView_text];
  *v16 = 0;
  v16[1] = 0;
  *(_QWORD *)&v11[OBJC_IVAR___MusicSBS_TextContentView_attributedText] = 0;
  v11[OBJC_IVAR___MusicSBS_TextContentView_isSelected] = 0;
  *(_QWORD *)&v11[OBJC_IVAR___MusicSBS_TextContentView_progress] = 0;
  v49 = OBJC_IVAR___MusicSBS_TextContentView_backgroundDirection;
  v11[OBJC_IVAR___MusicSBS_TextContentView_backgroundDirection] = 2;
  v17 = a5 & 1;
  v18 = OBJC_IVAR___MusicSBS_TextContentView_textView;
  *(_QWORD *)&v11[OBJC_IVAR___MusicSBS_TextContentView_textView] = 0;
  v44 = OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView;
  *(_QWORD *)&v11[OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView] = 0;
  *v16 = a1;
  v16[1] = a2;
  v19 = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  memcpy(&v19[OBJC_IVAR___MusicSBS_TextContentView_specs], a11, 0x219uLL);
  *(_QWORD *)&v19[OBJC_IVAR___MusicSBS_TextContentView_alignment] = a4;
  v19[OBJC_IVAR___MusicSBS_TextContentView_direction] = v17;
  *(_QWORD *)&v19[OBJC_IVAR___MusicSBS_TextContentView_capabilities] = a6;
  v20 = (objc_class *)_s14descr1011064E9C8TextViewCMa();
  v21 = objc_allocWithZone(v20);
  swift_bridgeObjectRetain();
  sub_10024E6C8((uint64_t)a11);
  swift_bridgeObjectRetain();
  sub_10024E6C8((uint64_t)a11);
  v22 = sub_100BE13D8(a1, a2, a3, a11, 0, a4, v17, a6);
  v23 = *(void **)&v11[v18];
  *(_QWORD *)&v11[v18] = v22;

  if (a8)
  {
    v24 = a10;
    objc_allocWithZone(v20);
    sub_10024E6C8((uint64_t)a11);
    v25 = sub_100BE13D8(a7, a8, a9, a11, 1, a4, a10 & 1, a6);
    v26 = *(void **)&v11[v44];
    *(_QWORD *)&v11[v44] = v25;

    v27 = *(void **)&v11[v44];
    if (v27)
    {
      v28 = v27;
      v29 = sub_100BEBC2C(a4);
      UIView.setAnchorPoint(_:preserveFrame:)(1, v29, v30);

      v31 = *(void **)&v12[v44];
      if (v31)
      {
        objc_msgSend(v31, "setAlpha:", 0.0);
        v32 = *(void **)&v12[v44];
        if (v32)
        {
          v33 = a11[7];
          v50[0] = a11[6];
          v50[1] = v33;
          v50[2] = a11[8];
          objc_msgSend(v32, "setTransform:", v50);
        }
      }
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v24 = a10;
  }
  v12[v49] = v24;

  v34 = (objc_class *)_s19SBS_TextContentViewCMa();
  v51.receiver = v19;
  v51.super_class = v34;
  result = (char *)objc_msgSendSuper2(&v51, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v36 = OBJC_IVAR___MusicSBS_TextContentView_textView;
  v37 = *(_QWORD *)&result[OBJC_IVAR___MusicSBS_TextContentView_textView];
  if (!v37)
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v38 = result;
  v39 = result;
  result = (char *)objc_msgSend(v39, "addSubview:", v37);
  v40 = *(void **)&v39[OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView];
  if (!v40)
  {
    sub_10024E458((uint64_t)a11);
    goto LABEL_13;
  }
  v41 = *(void **)&v38[v36];
  if (!v41)
    goto LABEL_15;
  v42 = v40;
  objc_msgSend(v41, "frame");
  result = *(char **)&v38[v36];
  if (result)
  {
    objc_msgSend(result, "frame");
    objc_msgSend(v42, "frame");
    objc_msgSend(v42, "setFrame:");
    v43 = v39;
    objc_msgSend(v43, "addSubview:", v42);
    sub_10024E458((uint64_t)a11);

LABEL_13:
    return v39;
  }
LABEL_16:
  __break(1u);
  return result;
}

void sub_100BEB0A8(char **a1@<X8>)
{
  char *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  char v12;
  id v13;
  char *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  char *v19;
  id v20;
  char isEscapingClosureAtFileLocation;
  objc_class *v22;
  char v24;
  uint64_t v25;
  _QWORD aBlock[6];
  _OWORD __dst[34];

  v2 = *(_QWORD *)&v1[OBJC_IVAR___MusicSBS_TextContentView_textView];
  if (v2)
  {
    v3 = v1;
    v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_text);
    v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_text + 8);
    v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_words);
    v7 = *(_QWORD *)&v1[OBJC_IVAR___MusicSBS_TextContentView_capabilities];
    v8 = *(_QWORD *)&v1[OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView];
    v25 = *(_QWORD *)&v1[OBJC_IVAR___MusicSBS_TextContentView_alignment];
    v24 = v1[OBJC_IVAR___MusicSBS_TextContentView_direction];
    if (v8)
    {
      v10 = *(_QWORD *)(v8 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_text);
      v9 = *(_QWORD *)(v8 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_text + 8);
      v11 = *(_QWORD **)(v8 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_words);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v10 = 0;
      v9 = 0;
      v11 = _swiftEmptyArrayStorage;
    }
    v12 = v1[OBJC_IVAR___MusicSBS_TextContentView_backgroundDirection];
    memcpy(__dst, &v1[OBJC_IVAR___MusicSBS_TextContentView_specs], 0x219uLL);
    v22 = (objc_class *)_s19SBS_TextContentViewCMa();
    v13 = objc_allocWithZone(v22);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10024E6C8((uint64_t)__dst);
    v14 = sub_100BEACE8(v4, v5, v6, v25, v24, v7, v10, v9, (uint64_t)v11, v12, __dst);
    v15 = (void *)objc_opt_self(UIView);
    v16 = swift_allocObject(&unk_101106B88, 32, 7);
    *(_QWORD *)(v16 + 16) = v14;
    *(_QWORD *)(v16 + 24) = v3;
    v17 = swift_allocObject(&unk_101106BB0, 32, 7);
    *(_QWORD *)(v17 + 16) = sub_100BEBD30;
    *(_QWORD *)(v17 + 24) = v16;
    aBlock[4] = sub_10010942C;
    aBlock[5] = v17;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10046D7B4;
    aBlock[3] = &unk_101106BC8;
    v18 = _Block_copy(aBlock);
    v19 = v14;
    v20 = v3;
    swift_retain();
    objc_msgSend(v15, "performWithoutAnimation:", v18, swift_release().n128_f64[0]);
    _Block_release(v18);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v17, "", 139, 222, 44, 1);
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      a1[3] = (char *)v22;
      swift_release();
      *a1 = v19;
      return;
    }
    __break(1u);
  }
  __break(1u);
}

void sub_100BEB338(char *a1, char *a2)
{
  double v4;
  void *v5;
  id v6;
  void *v7;
  id v8;

  objc_msgSend(a2, "bounds");
  objc_msgSend(a1, "setFrame:");
  objc_msgSend(a1, "layoutIfNeeded");
  sub_100BEA74C(a2[OBJC_IVAR___MusicSBS_TextContentView_isSelected], 0);
  v4 = *(double *)&a2[OBJC_IVAR___MusicSBS_TextContentView_progress];
  if (v4 != *(double *)&a1[OBJC_IVAR___MusicSBS_TextContentView_progress])
  {
    *(double *)&a1[OBJC_IVAR___MusicSBS_TextContentView_progress] = v4;
    v5 = *(void **)&a1[OBJC_IVAR___MusicSBS_TextContentView_textView];
    if (v5)
    {
      v6 = v5;
      sub_100BE0D44(0, v4);

      v7 = *(void **)&a1[OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView];
      if (v7)
      {
        v8 = v7;
        sub_100BE0D44(0, v4);

      }
    }
    else
    {
      __break(1u);
    }
  }
}

id sub_100BEB4A4(char a1, double a2, double a3)
{
  uint64_t v3;
  id result;

  result = *(id *)(v3 + OBJC_IVAR___MusicSBS_TextContentView_textView);
  if (result)
  {
    result = objc_msgSend(result, "sizeThatFits:");
    if ((a1 & 1) != 0)
    {
      result = *(id *)(v3 + OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView);
      if (result)
        return objc_msgSend(result, "sizeThatFits:", a2, a3);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100BEB548(double a1, double a2)
{
  uint64_t v2;
  id result;
  int v6;

  result = *(id *)(v2 + OBJC_IVAR___MusicSBS_TextContentView_textView);
  if (result)
  {
    v6 = *(unsigned __int8 *)(v2 + OBJC_IVAR___MusicSBS_TextContentView_isSelected);
    result = objc_msgSend(result, "sizeThatFits:");
    if (v6 == 1)
    {
      result = *(id *)(v2 + OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView);
      if (result)
        return objc_msgSend(result, "sizeThatFits:", a1, a2);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100BEB648()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  id v4;
  double v5;
  double v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  double v11;
  double v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  void *v19;
  id v20;
  CGFloat v21;
  CGFloat v22;
  CGFloat v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  double v28;
  double v29;
  void *v30;
  id v31;
  double v32;
  double v33;
  CGFloat v34;
  double v35;
  CGFloat v36;
  CGFloat v37;
  void *v38;
  uint64_t v39;
  void *v40;
  id v41;
  double v42;
  void *v43;
  double v44;
  double v45;
  double v46;
  void *v47;
  id v48;
  double v49;
  void *v50;
  double v51;
  void *v52;
  id v53;
  void *v54;
  CGFloat v55;
  CGFloat v56;
  CGFloat v57;
  CGFloat v58;
  void *v59;
  id v60;
  double Width;
  void *v62;
  double v63;
  double v64;
  double v65;
  void *v66;
  double v67;
  void *v68;
  double v69;
  double v70;
  objc_super v71;
  CGRect v72;
  CGRect v73;
  CGRect v74;
  CGRect v75;

  v1 = v0;
  v71.receiver = v0;
  v71.super_class = (Class)_s19SBS_TextContentViewCMa();
  objc_msgSendSuper2(&v71, "layoutSubviews");
  v2 = OBJC_IVAR___MusicSBS_TextContentView_textView;
  v3 = *(void **)&v0[OBJC_IVAR___MusicSBS_TextContentView_textView];
  if (!v3)
  {
    __break(1u);
    goto LABEL_34;
  }
  v4 = v3;
  objc_msgSend(v1, "bounds");
  objc_msgSend(v4, "sizeThatFits:", v5, v6);
  objc_msgSend(v4, "frame");
  objc_msgSend(v4, "setFrame:");

  v7 = *(void **)&v1[v2];
  if (!v7)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  objc_msgSend(v7, "layoutSubviews");
  v8 = OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView;
  v9 = *(void **)&v1[OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView];
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v1, "bounds");
    objc_msgSend(v10, "sizeThatFits:", v11, v12);
    v14 = v13;
    v16 = v15;
    v17 = UIView.untransformedFrame.getter();
    UIView.untransformedFrame.setter(v17, v18, v14, v16);

    v19 = *(void **)&v1[v8];
    if (v19)
    {
      v20 = v19;
      UIView.untransformedFrame.getter();
      UIView.untransformedFrame.setter(0.0, v21, v22, v23);

      v24 = *(void **)&v1[v8];
      if (v24)
      {
        v25 = *(void **)&v1[v2];
        if (v25)
        {
          v26 = v24;
          v27 = v25;
          UIView.untransformedFrame.getter();
          v29 = v28;

          v30 = *(void **)&v1[v2];
          if (v30)
          {
            v31 = v30;
            UIView.untransformedFrame.getter();
            v33 = v32;

            v34 = v29 + v33 + *(double *)&v1[OBJC_IVAR___MusicSBS_TextContentView_specs + 88];
            v35 = UIView.untransformedFrame.getter();
            UIView.untransformedFrame.setter(v35, v34, v36, v37);

            v38 = *(void **)&v1[v8];
            goto LABEL_10;
          }
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
          goto LABEL_38;
        }
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
    }
  }
  v38 = 0;
LABEL_10:
  objc_msgSend(v38, "layoutSubviews");
  v39 = *(_QWORD *)&v1[OBJC_IVAR___MusicSBS_TextContentView_alignment];
  if (!v39)
  {
    v52 = *(void **)&v1[v2];
    if (v52)
    {
      v53 = v52;
      objc_msgSend(v53, "frame");
      objc_msgSend(v53, "setFrame:", 0.0);

      v54 = *(void **)&v1[v8];
      if (!v54)
        return;
      v48 = v54;
      UIView.untransformedFrame.getter();
      v58 = 0.0;
      goto LABEL_31;
    }
    goto LABEL_39;
  }
  if (v39 == 1)
  {
    v59 = *(void **)&v1[v2];
    if (v59)
    {
      v60 = v59;
      objc_msgSend(v1, "bounds");
      Width = CGRectGetWidth(v74);
      v62 = *(void **)&v1[v2];
      if (v62)
      {
        v63 = Width;
        objc_msgSend(v62, "bounds");
        v65 = (v63 - v64) * 0.5;
        objc_msgSend(v60, "frame");
        objc_msgSend(v60, "setFrame:", v65);

        v66 = *(void **)&v1[v8];
        if (!v66)
          return;
        v48 = v66;
        objc_msgSend(v1, "bounds");
        v67 = CGRectGetWidth(v75);
        v68 = *(void **)&v1[v8];
        if (v68)
          objc_msgSend(v68, "bounds");
        else
          v69 = 0.0;
        v70 = (v67 - v69) * 0.5;
        goto LABEL_30;
      }
LABEL_41:
      __break(1u);
      return;
    }
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  if (v39 != 2)
    return;
  v40 = *(void **)&v1[v2];
  if (!v40)
    goto LABEL_37;
  v41 = v40;
  objc_msgSend(v1, "bounds");
  v42 = CGRectGetWidth(v72);
  v43 = *(void **)&v1[v2];
  if (!v43)
  {
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v44 = v42;
  objc_msgSend(v43, "bounds");
  v46 = v44 - v45;
  objc_msgSend(v41, "frame");
  objc_msgSend(v41, "setFrame:", v46);

  v47 = *(void **)&v1[v8];
  if (!v47)
    return;
  v48 = v47;
  objc_msgSend(v1, "bounds");
  v49 = CGRectGetWidth(v73);
  v50 = *(void **)&v1[v8];
  if (v50)
    objc_msgSend(v50, "bounds");
  else
    v51 = 0.0;
  v70 = v49 - v51;
LABEL_30:
  UIView.untransformedFrame.getter();
  v58 = v70;
LABEL_31:
  UIView.untransformedFrame.setter(v58, v55, v56, v57);

}

id sub_100BEBA6C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)_s19SBS_TextContentViewCMa();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t _s19SBS_TextContentViewCMa()
{
  return objc_opt_self(MusicSBS_TextContentView);
}

uint64_t sub_100BEBB54(const void *a1)
{
  _QWORD *v1;
  void *v3;
  _BYTE v5[544];

  v3 = (void *)(*v1 + OBJC_IVAR___MusicSBS_TextContentView_specs);
  memcpy(v5, v3, 0x219uLL);
  memcpy(v3, a1, 0x219uLL);
  sub_10024E6C8((uint64_t)a1);
  sub_10024E458((uint64_t)v5);
  sub_100BEA568();
  return sub_10024E458((uint64_t)a1);
}

uint64_t sub_100BEBBCC(uint64_t a1)
{
  return sub_100BEA6EC(a1);
}

void sub_100BEBBEC(char a1, char a2)
{
  sub_100BEA74C(a1, a2);
}

id sub_100BEBC0C(char a1, double a2, double a3)
{
  return sub_100BEB4A4(a1, a2, a3);
}

double sub_100BEBC2C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  _BYTE v4[24];

  switch(a1)
  {
    case 1:
    case 3:
      v1 = CGPoint.center.unsafeMutableAddressor();
      break;
    case 2:
      v1 = CGPoint.centerRight.unsafeMutableAddressor();
      break;
    default:
      v1 = CGPoint.centerLeft.unsafeMutableAddressor();
      break;
  }
  v2 = v1;
  swift_beginAccess(v1, v4, 0, 0);
  return *(double *)v2;
}

uint64_t sub_100BEBC98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

uint64_t sub_100BEBCBC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

void sub_100BEBCE0()
{
  uint64_t v0;

  sub_100BEA9A8(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_100BEBCEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100BEBCFC(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_100BEBD04()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100BEBD30()
{
  uint64_t v0;

  sub_100BEB338(*(char **)(v0 + 16), *(char **)(v0 + 24));
}

uint64_t sub_100BEBD38()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100BEBD48()
{
  _BYTE *v0;
  _QWORD *v1;

  v0[OBJC_IVAR___MusicSBS_TextContentView_isScrolling] = 1;
  v1 = &v0[OBJC_IVAR___MusicSBS_TextContentView_text];
  *v1 = 0;
  v1[1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___MusicSBS_TextContentView_attributedText] = 0;
  v0[OBJC_IVAR___MusicSBS_TextContentView_isSelected] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___MusicSBS_TextContentView_progress] = 0;
  v0[OBJC_IVAR___MusicSBS_TextContentView_backgroundDirection] = 2;
  *(_QWORD *)&v0[OBJC_IVAR___MusicSBS_TextContentView_textView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E2B820, "MusicCoreUI/SBS_SyncedLyricsLineView+Text.swift", 47, 2, 208, 0);
  __break(1u);
}

void sub_100BEBE18()
{
  qword_10124F430 = Int.seconds.getter(6);
}

void sub_100BEBE38()
{
  qword_10124F438 = Int.seconds.getter(8);
}

void sub_100BEBE58(uint64_t a1)
{
  qword_10124F440 = UIScreen.Dimensions.size.getter(a1);
}

CGFloat sub_100BEBE7C(uint64_t a1)
{
  return sub_100BEBEF4(0.9, a1, &xmmword_10124F450, &xmmword_10124F460, &xmmword_10124F470);
}

CGFloat sub_100BEBE98(uint64_t a1)
{
  return sub_100BEBEF4(1.2, a1, &xmmword_10124F480, algn_10124F490, &xmmword_10124F4A0);
}

CGFloat sub_100BEBEB8(uint64_t a1)
{
  return sub_100BEBEF4(1.2, a1, &xmmword_10124F4B0, &xmmword_10124F4C0, &xmmword_10124F4D0);
}

CGFloat sub_100BEBED8(uint64_t a1)
{
  return sub_100BEBEF4(0.2, a1, &xmmword_10124F4E0, algn_10124F4F0, &xmmword_10124F500);
}

CGFloat sub_100BEBEF4(CGFloat a1, uint64_t a2, _OWORD *a3, _OWORD *a4, _OWORD *a5)
{
  CGFloat result;
  __int128 v9;
  __int128 v10;
  CGAffineTransform v11;

  CGAffineTransformMakeScale(&v11, a1, a1);
  result = v11.a;
  v9 = *(_OWORD *)&v11.c;
  v10 = *(_OWORD *)&v11.tx;
  *a3 = *(_OWORD *)&v11.a;
  *a4 = v9;
  *a5 = v10;
  return result;
}

id sub_100BEBF48(uint64_t a1, char a2, void *__src, double a4, double a5)
{
  _BYTE *v5;
  _OWORD *v6;
  char *v7;
  double *v8;
  objc_super v10;

  v5[OBJC_IVAR___MusicInstrumentalContentView_isScrolling] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicInstrumentalContentView_alignment] = 0;
  v6 = &v5[OBJC_IVAR___MusicInstrumentalContentView_lastSeenBounds];
  *v6 = 0u;
  v6[1] = 0u;
  v5[OBJC_IVAR___MusicInstrumentalContentView_isSelected] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicInstrumentalContentView_dots] = _swiftEmptyArrayStorage;
  v5[OBJC_IVAR___MusicInstrumentalContentView_fadeOutCued] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicInstrumentalContentView_dotFadeInDuration] = 0;
  v7 = &v5[OBJC_IVAR___MusicInstrumentalContentView_totalDotsFadedIn];
  *(_QWORD *)v7 = 0;
  v7[8] = 1;
  *(_QWORD *)&v5[OBJC_IVAR___MusicInstrumentalContentView_totalDotsCompleted] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicInstrumentalContentView_breathDuration] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicInstrumentalContentView_totalBreathsCompleted] = 0;
  v8 = (double *)&v5[OBJC_IVAR___MusicInstrumentalContentView_line];
  *(_QWORD *)v8 = a1;
  v8[1] = a4;
  v8[2] = a5;
  *((_BYTE *)v8 + 24) = a2 & 1;
  memcpy(&v5[OBJC_IVAR___MusicInstrumentalContentView_specs], __src, 0x219uLL);
  v10.receiver = v5;
  v10.super_class = (Class)_s23InstrumentalContentViewCMa();
  return objc_msgSendSuper2(&v10, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
}

uint64_t sub_100BEC148()
{
  uint64_t v0;
  double v1;
  double v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  _QWORD v13[6];
  _BYTE v14[24];

  v1 = *(double *)(v0 + OBJC_IVAR___MusicInstrumentalContentView_line + 8);
  v2 = *(double *)(v0 + OBJC_IVAR___MusicInstrumentalContentView_line + 16) + -1.8;
  *(double *)(v0 + OBJC_IVAR___MusicInstrumentalContentView_breathDuration) = (v2 - v1) / floor((v2 - v1) * 0.25) * 0.5;
  *(double *)(v0 + OBJC_IVAR___MusicInstrumentalContentView_dotFadeInDuration) = (v2 - (v1 + 1.0))
                                                                               / (double)*(uint64_t *)(v0 + OBJC_IVAR___MusicInstrumentalContentView_specs + 488);
  *(_QWORD *)(v0 + OBJC_IVAR___MusicInstrumentalContentView_totalDotsCompleted) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR___MusicInstrumentalContentView_totalBreathsCompleted) = 0;
  v3 = v0 + OBJC_IVAR___MusicInstrumentalContentView_totalDotsFadedIn;
  *(_QWORD *)v3 = 0;
  *(_BYTE *)(v3 + 8) = 1;
  *(_BYTE *)(v0 + OBJC_IVAR___MusicInstrumentalContentView_fadeOutCued) = 0;
  v4 = (uint64_t *)(v0 + OBJC_IVAR___MusicInstrumentalContentView_dots);
  swift_beginAccess(v0 + OBJC_IVAR___MusicInstrumentalContentView_dots, v14, 0, 0);
  v5 = *v4;
  if (!((unint64_t)v5 >> 62))
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v6)
      goto LABEL_3;
    return swift_bridgeObjectRelease(v5);
  }
  if (v5 < 0)
    v12 = v5;
  else
    v12 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  result = _CocoaArrayWrapper.endIndex.getter(v12);
  v6 = result;
  if (!result)
    return swift_bridgeObjectRelease(v5);
LABEL_3:
  if (v6 >= 1)
  {
    v8 = 0;
    do
    {
      if ((v5 & 0xC000000000000001) != 0)
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v5);
      else
        v9 = *(id *)(v5 + 8 * v8 + 32);
      v10 = v9;
      ++v8;
      v11 = objc_msgSend(v9, "layer");
      objc_msgSend(v11, "removeAllAnimations");

      objc_msgSend(v10, "setAlpha:", 0.0);
      v13[1] = 0;
      v13[2] = 0;
      v13[0] = 0x3FF0000000000000;
      v13[3] = 0x3FF0000000000000;
      v13[4] = 0;
      v13[5] = 0;
      objc_msgSend(v10, "setTransform:", v13);

    }
    while (v6 != v8);
    return swift_bridgeObjectRelease(v5);
  }
  __break(1u);
  return result;
}

void sub_100BEC360(char a1, char a2)
{
  _BYTE *v2;
  id v3;
  uint64_t v4;
  void *v5;
  _BYTE *v6;
  _QWORD v7[6];

  v2[OBJC_IVAR___MusicInstrumentalContentView_isSelected] = a1;
  if ((a1 & 1) == 0)
  {
    if ((a2 & 1) != 0)
    {
      v3 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:controlPoint1:controlPoint2:animations:", 0, 0.12, 0.33, 0.0, 0.2, 0.1);
      v4 = swift_allocObject(&unk_101106EF8, 24, 7);
      *(_QWORD *)(v4 + 16) = v2;
      v7[4] = sub_100BEE0CC;
      v7[5] = v4;
      v7[0] = _NSConcreteStackBlock;
      v7[1] = 1107296256;
      v7[2] = sub_1001DBD98;
      v7[3] = &unk_101106F10;
      v5 = _Block_copy(v7);
      v6 = v2;
      objc_msgSend(v3, "addAnimations:", v5, swift_release().n128_f64[0]);
      _Block_release(v5);
      objc_msgSend(v3, "startAnimation");

    }
    else
    {
      sub_100BEC148();
    }
  }
}

void sub_100BEC490(double a1)
{
  char *v1;
  char *v2;
  char *v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  double v9;
  uint64_t v10;
  uint64_t i;
  id v12;
  _QWORD *v13;
  void *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void *v20;
  char *v21;
  void *v22;
  double v23;
  uint64_t v24;
  void *v25;
  char *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void **aBlock;
  uint64_t v33;
  void *v34;
  void *v35;
  void (*v36)();
  _QWORD *v37;
  char v38[24];

  v2 = &v1[OBJC_IVAR___MusicInstrumentalContentView_totalDotsFadedIn];
  if (v1[OBJC_IVAR___MusicInstrumentalContentView_totalDotsFadedIn + 8] == 1)
  {
    v3 = v1;
    v5 = (uint64_t *)&v1[OBJC_IVAR___MusicInstrumentalContentView_dots];
    swift_beginAccess(&v1[OBJC_IVAR___MusicInstrumentalContentView_dots], v38, 0, 0);
    v6 = *v5;
    if ((unint64_t)v6 >> 62)
    {
      if (v6 < 0)
        v30 = v6;
      else
        v30 = v6 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v31 = _CocoaArrayWrapper.endIndex.getter(v30);
      swift_bridgeObjectRelease();
      if (v31)
      {
LABEL_5:
        v7 = 0;
        *(_QWORD *)v2 = 0;
        v2[8] = 0;
        v8 = *(double *)&v1[OBJC_IVAR___MusicInstrumentalContentView_line + 8] + 1.0;
        if (v8 <= a1)
        {
          v9 = (a1 - v8) / *(double *)&v1[OBJC_IVAR___MusicInstrumentalContentView_dotFadeInDuration];
          if ((~*(_QWORD *)&v9 & 0x7FF0000000000000) == 0)
          {
LABEL_27:
            __break(1u);
            goto LABEL_28;
          }
          if (v9 <= -9.22337204e18)
          {
LABEL_28:
            __break(1u);
            goto LABEL_29;
          }
          if (v9 >= 9.22337204e18)
          {
LABEL_29:
            __break(1u);
            goto LABEL_30;
          }
          if (__OFADD__((uint64_t)v9, 1))
          {
LABEL_30:
            __break(1u);
            return;
          }
          if ((uint64_t)v9 + 1 >= 3)
            v7 = 3;
          else
            v7 = (uint64_t)v9 + 1;
        }
        v10 = *(_QWORD *)&v1[OBJC_IVAR___MusicInstrumentalContentView_specs + 488];
        if (v10 < 0)
        {
          __break(1u);
        }
        else
        {
          if (v10)
          {
            for (i = 0; i != v10; ++i)
            {
              v12 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:curve:animations:", 3, 0, 0.8);
              v13 = (_QWORD *)swift_allocObject(&unk_101106E08, 40, 7);
              v13[2] = v7;
              v13[3] = i;
              v13[4] = v3;
              v36 = sub_100BEE078;
              v37 = v13;
              aBlock = _NSConcreteStackBlock;
              v33 = 1107296256;
              v34 = sub_1001DBD98;
              v35 = &unk_101106E20;
              v14 = _Block_copy(&aBlock);
              v15 = v3;
              v16 = v3;
              v17 = v7;
              v18 = v15;
              objc_msgSend(v12, "addAnimations:", v14, swift_release().n128_f64[0]);
              _Block_release(v14);
              v19 = swift_allocObject(&unk_101106E58, 32, 7);
              *(_QWORD *)(v19 + 16) = v18;
              *(_QWORD *)(v19 + 24) = i;
              v36 = sub_100BEE084;
              v37 = (_QWORD *)v19;
              aBlock = _NSConcreteStackBlock;
              v33 = 1107296256;
              v34 = sub_10012F6FC;
              v35 = &unk_101106E70;
              v20 = _Block_copy(&aBlock);
              v21 = v18;
              v7 = v17;
              v3 = v16;
              objc_msgSend(v12, "addCompletion:", v20, swift_release().n128_f64[0]);
              _Block_release(v20);
              objc_msgSend(v12, "startAnimationAfterDelay:", (double)i * 0.06);

            }
          }
          v22 = (void *)objc_opt_self(UIView);
          v23 = *(double *)&v3[OBJC_IVAR___MusicInstrumentalContentView_breathDuration] + -0.4;
          v24 = swift_allocObject(&unk_101106EA8, 24, 7);
          *(_QWORD *)(v24 + 16) = v3;
          v36 = sub_100BEE0C4;
          v37 = (_QWORD *)v24;
          aBlock = _NSConcreteStackBlock;
          v33 = 1107296256;
          v34 = sub_1001DBD98;
          v35 = &unk_101106EC0;
          v25 = _Block_copy(&aBlock);
          v26 = v3;
          swift_release();
          objc_msgSend(v22, "animateWithDuration:delay:options:animations:completion:", 0x20000, v25, 0, v23, 0.2);
          _Block_release(v25);
          v27 = *(_QWORD *)&v26[OBJC_IVAR___MusicInstrumentalContentView_totalBreathsCompleted];
          v28 = __OFADD__(v27, 1);
          v29 = v27 + 1;
          if (!v28)
          {
            *(_QWORD *)&v26[OBJC_IVAR___MusicInstrumentalContentView_totalBreathsCompleted] = v29;
            return;
          }
        }
        __break(1u);
        goto LABEL_27;
      }
    }
    else if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_5;
    }
    sub_100BEDBB4();
    goto LABEL_5;
  }
}

void sub_100BEC888(int64_t a1, int64_t a2, uint64_t a3)
{
  unint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  _BYTE v6[24];

  v3 = a2;
  v4 = (uint64_t *)(a3 + OBJC_IVAR___MusicInstrumentalContentView_dots);
  if (a2 >= a1)
  {
    swift_beginAccess(a3 + OBJC_IVAR___MusicInstrumentalContentView_dots, v6, 0, 0);
    v5 = *v4;
    if ((v5 & 0xC000000000000001) == 0)
    {
      if ((v3 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10) > v3)
      {
        v3 = (unint64_t)*(id *)(v5 + 8 * v3 + 32);
        goto LABEL_11;
      }
      __break(1u);
      goto LABEL_20;
    }
LABEL_17:
    swift_bridgeObjectRetain();
    v3 = specialized _ArrayBuffer._getElementSlowPath(_:)(v3, v5);
    swift_bridgeObjectRelease();
LABEL_11:
    if (qword_1011DDFF8 == -1)
    {
LABEL_12:
      objc_msgSend((id)v3, "setAlpha:", *(double *)&qword_10124F440);
      goto LABEL_13;
    }
LABEL_20:
    swift_once(&qword_1011DDFF8, sub_100BEBE58);
    goto LABEL_12;
  }
  swift_beginAccess(a3 + OBJC_IVAR___MusicInstrumentalContentView_dots, v6, 0, 0);
  v5 = *v4;
  if ((v5 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v3 = specialized _ArrayBuffer._getElementSlowPath(_:)(v3, v5);
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  if ((v3 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10) <= v3)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v3 = (unint64_t)*(id *)(v5 + 8 * v3 + 32);
LABEL_6:
  objc_msgSend((id)v3, "setAlpha:", 1.0);
LABEL_13:

}

void sub_100BEC9F4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  _OWORD v8[3];
  _BYTE v9[24];

  v1 = (uint64_t *)(a1 + OBJC_IVAR___MusicInstrumentalContentView_dots);
  swift_beginAccess(a1 + OBJC_IVAR___MusicInstrumentalContentView_dots, v9, 0, 0);
  v2 = *v1;
  if (!((unint64_t)v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
      goto LABEL_3;
LABEL_16:
    swift_bridgeObjectRelease();
    return;
  }
  if (v2 < 0)
    v7 = v2;
  else
    v7 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v3 = _CocoaArrayWrapper.endIndex.getter(v7);
  if (!v3)
    goto LABEL_16;
LABEL_3:
  if (v3 >= 1)
  {
    v4 = 0;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
        v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2);
      else
        v5 = *(id *)(v2 + 8 * v4 + 32);
      v6 = v5;
      if (qword_1011DE008 != -1)
        swift_once(&qword_1011DE008, sub_100BEBE98);
      ++v4;
      v8[0] = xmmword_10124F480;
      v8[1] = *(_OWORD *)algn_10124F490;
      v8[2] = xmmword_10124F4A0;
      objc_msgSend(v6, "setTransform:", v8);

    }
    while (v3 != v4);
    goto LABEL_16;
  }
  __break(1u);
}

void sub_100BECB48(double a1)
{
  uint64_t v1;
  char **v2;
  uint64_t v3;
  unint64_t v4;
  double *v6;
  double v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  BOOL v19;
  unint64_t *v20;
  id v21;
  double v22;
  uint64_t v23;
  id v24;
  id v25;
  double v26;
  double v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  char **v31;
  uint64_t v32;
  BOOL v33;
  char *v34;
  double v35;
  BOOL v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  char **v40;
  char v41[24];
  _BYTE v42[24];
  uint64_t aBlock;
  uint64_t v44;
  uint64_t (*v45)(uint64_t);
  uint64_t v46;
  void *v47;
  _QWORD *v48;

  v6 = (double *)((char *)v2 + OBJC_IVAR___MusicInstrumentalContentView_line);
  v7 = *(double *)((char *)v2 + OBJC_IVAR___MusicInstrumentalContentView_line + 8);
  v8 = OBJC_IVAR___MusicInstrumentalContentView_dotFadeInDuration;
  v9 = (a1 - (v7 + 1.0)) / *(double *)((char *)v2 + OBJC_IVAR___MusicInstrumentalContentView_dotFadeInDuration);
  if ((~*(_QWORD *)&v9 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_61;
  }
  if (v9 <= -9.22337204e18)
  {
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  if (v9 >= 9.22337204e18)
  {
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  if (__OFADD__((uint64_t)v9, 1))
  {
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  v10 = *(uint64_t *)((char *)v2 + OBJC_IVAR___MusicInstrumentalContentView_specs + 488);
  if ((uint64_t)v9 + 1 >= v10)
    v11 = *(uint64_t *)((char *)v2 + OBJC_IVAR___MusicInstrumentalContentView_specs + 488);
  else
    v11 = (uint64_t)v9 + 1;
  v12 = OBJC_IVAR___MusicInstrumentalContentView_totalDotsCompleted;
  v13 = *(uint64_t *)((char *)v2 + OBJC_IVAR___MusicInstrumentalContentView_totalDotsCompleted);
  if (v11 < v13)
  {
    sub_100BEC148();
    v14 = (uint64_t *)((char *)v2 + OBJC_IVAR___MusicInstrumentalContentView_dots);
    swift_beginAccess((char *)v2 + OBJC_IVAR___MusicInstrumentalContentView_dots, v42, 0, 0);
    v1 = *v14;
    v40 = v2;
    if (!((unint64_t)v1 >> 62))
    {
      v3 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v3)
      {
LABEL_11:
        if (v3 >= 1)
        {
          v15 = 0;
          do
          {
            if ((v1 & 0xC000000000000001) != 0)
              v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v15, v1);
            else
              v16 = *(id *)(v1 + 8 * v15 + 32);
            v17 = v16;
            v18 = objc_msgSend(v16, "layer");
            objc_msgSend(v18, "removeAllAnimations");

            if (qword_1011DDFF8 != -1)
              swift_once(&qword_1011DDFF8, sub_100BEBE58);
            ++v15;
            objc_msgSend(v17, "setAlpha:", *(double *)&qword_10124F440);
            v44 = 0;
            v45 = 0;
            aBlock = 0x3FF0000000000000;
            v46 = 0x3FF0000000000000;
            v47 = 0;
            v48 = 0;
            objc_msgSend(v17, "setTransform:", &aBlock);

          }
          while (v3 != v15);
          goto LABEL_68;
        }
        __break(1u);
LABEL_71:
        __break(1u);
LABEL_72:
        __break(1u);
LABEL_73:
        __break(1u);
LABEL_74:
        __break(1u);
LABEL_75:
        __break(1u);
LABEL_76:
        __break(1u);
        do
        {
          __break(1u);
LABEL_78:
          __break(1u);
LABEL_79:
          __break(1u);
LABEL_80:
          swift_bridgeObjectRetain();
          v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3, v4);
          swift_bridgeObjectRelease();
LABEL_36:
          v22 = *(double *)((char *)v2 + v8) + -0.1;
          v23 = swift_allocObject(&unk_101106DB8, 24, 7);
          *(_QWORD *)(v23 + 16) = v21;
          v24 = objc_allocWithZone((Class)UIViewPropertyAnimator);
          v47 = sub_100558AE8;
          v48 = (_QWORD *)v23;
          aBlock = (uint64_t)_NSConcreteStackBlock;
          v44 = 1107296256;
          v45 = sub_1001DBD98;
          v46 = (uint64_t)&unk_101106DD0;
          v3 = (uint64_t)_Block_copy(&aBlock);
          v25 = v21;
          v2 = v40;
          swift_release();
          v4 = (unint64_t)objc_msgSend(v24, "initWithDuration:curve:animations:", 3, v3, v22);
          _Block_release((const void *)v3);
          objc_msgSend((id)v4, "startAnimation");

          v7 = v6[1];
LABEL_37:
          v26 = *(double *)((char *)v2 + OBJC_IVAR___MusicInstrumentalContentView_breathDuration);
          v27 = (a1 - v7) / v26;
          if ((~*(_QWORD *)&v27 & 0x7FF0000000000000) == 0)
            goto LABEL_73;
          if (v27 <= -9.22337204e18)
            goto LABEL_74;
          if (v27 >= 9.22337204e18)
            goto LABEL_75;
          v3 = (uint64_t)v27 + 1;
          if (__OFADD__((uint64_t)v27, 1))
            goto LABEL_76;
          v28 = OBJC_IVAR___MusicInstrumentalContentView_totalBreathsCompleted;
          if (*(uint64_t *)((char *)v2 + OBJC_IVAR___MusicInstrumentalContentView_totalBreathsCompleted) >= v3)
            goto LABEL_44;
          v29 = (void *)objc_opt_self(UIView);
          v30 = swift_allocObject(&unk_101106D68, 32, 7);
          *(_QWORD *)(v30 + 16) = v2;
          *(_QWORD *)(v30 + 24) = v3;
          v47 = sub_100BEE04C;
          v48 = (_QWORD *)v30;
          aBlock = (uint64_t)_NSConcreteStackBlock;
          v44 = 1107296256;
          v45 = sub_1001DBD98;
          v46 = (uint64_t)&unk_101106D80;
          v3 = (uint64_t)_Block_copy(&aBlock);
          v4 = (unint64_t)v48;
          v31 = v2;
          swift_release();
          objc_msgSend(v29, "animateWithDuration:delay:options:animations:completion:", 0x20000, v3, 0, v26 + -0.4, 0.2);
          _Block_release((const void *)v3);
          v32 = *(uint64_t *)((char *)v2 + v28);
          v33 = __OFADD__(v32, 1);
          v34 = (char *)(v32 + 1);
        }
        while (v33);
        *(char **)((char *)v2 + v28) = v34;
        goto LABEL_44;
      }
LABEL_68:
      swift_bridgeObjectRelease();
      sub_100BEC490(a1);
      return;
    }
LABEL_64:
    if (v1 < 0)
      v39 = v1;
    else
      v39 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v3 = _CocoaArrayWrapper.endIndex.getter(v39);
    if (v3)
      goto LABEL_11;
    goto LABEL_68;
  }
  if ((*((_BYTE *)v2 + OBJC_IVAR___MusicInstrumentalContentView_totalDotsFadedIn + 8) & 1) != 0
    || (v7 + 1.0 < a1
      ? (v19 = *(char **)((char *)v2 + OBJC_IVAR___MusicInstrumentalContentView_totalDotsFadedIn) == (char *)v10)
      : (v19 = 0),
        !v19 || v6[2] + -1.8 <= a1))
  {
LABEL_44:
    v35 = v6[2];
    v36 = v35 > a1 && v35 + -1.8 < a1;
    if (v36 && (*((_BYTE *)v2 + OBJC_IVAR___MusicInstrumentalContentView_fadeOutCued) & 1) == 0)
      sub_100BED34C();
    return;
  }
  if (v11 == v13 || *((_BYTE *)v2 + OBJC_IVAR___MusicInstrumentalContentView_isSelected) != 1)
    goto LABEL_37;
  v3 = v11 - 1;
  if (__OFSUB__(v11, 1))
    goto LABEL_78;
  v40 = v2;
  if (v3 < v13)
    goto LABEL_79;
  if (v13 == v3)
  {
LABEL_32:
    v2 = v40;
    *(char **)((char *)v40 + v12) = (char *)v11;
    v20 = (unint64_t *)((char *)v40 + OBJC_IVAR___MusicInstrumentalContentView_dots);
    swift_beginAccess((char *)v40 + OBJC_IVAR___MusicInstrumentalContentView_dots, v41, 0, 0);
    v4 = *v20;
    if ((*v20 & 0xC000000000000001) != 0)
      goto LABEL_80;
    if (v3 < 0)
    {
      __break(1u);
    }
    else if ((unint64_t)v3 < *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v21 = *(id *)(v4 + 8 * v3 + 32);
      goto LABEL_36;
    }
    __break(1u);
  }
  else if (v13 < v3)
  {
    v4 = (unint64_t)v2 + OBJC_IVAR___MusicInstrumentalContentView_dots;
    swift_beginAccess((char *)v2 + OBJC_IVAR___MusicInstrumentalContentView_dots, v42, 0, 0);
    v2 = &selRef_referralObject;
    while (1)
    {
      v37 = *(_QWORD *)v4;
      if ((*(_QWORD *)v4 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v37);
        swift_bridgeObjectRelease();
      }
      else
      {
        if (v13 < 0)
          goto LABEL_71;
        if ((unint64_t)v13 >= *(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_72;
        v38 = *(id *)(v37 + 8 * v13 + 32);
      }
      ++v13;
      objc_msgSend(v38, "setAlpha:", 1.0);

      if (v3 == v13)
        goto LABEL_32;
    }
  }
  __break(1u);
}

void sub_100BED1AC(uint64_t a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  __int128 v7;
  id v8;
  void *v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[24];

  v3 = (uint64_t *)(a1 + OBJC_IVAR___MusicInstrumentalContentView_dots);
  swift_beginAccess(a1 + OBJC_IVAR___MusicInstrumentalContentView_dots, v14, 0, 0);
  v4 = *v3;
  if (!((unint64_t)v4 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5)
      goto LABEL_3;
LABEL_20:
    swift_bridgeObjectRelease();
    return;
  }
  if (v4 < 0)
    v10 = v4;
  else
    v10 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v5 = _CocoaArrayWrapper.endIndex.getter(v10);
  if (!v5)
    goto LABEL_20;
LABEL_3:
  if (v5 >= 1)
  {
    for (i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0)
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v4);
      else
        v8 = *(id *)(v4 + 8 * i + 32);
      v9 = v8;
      if ((a2 & 0x8000000000000001) == 1)
      {
        if (qword_1011DE008 != -1)
          swift_once(&qword_1011DE008, sub_100BEBE98);
        v11 = xmmword_10124F480;
        v12 = *(_OWORD *)algn_10124F490;
        v7 = xmmword_10124F4A0;
      }
      else
      {
        if (qword_1011DE000 != -1)
          swift_once(&qword_1011DE000, sub_100BEBE7C);
        v11 = xmmword_10124F450;
        v12 = xmmword_10124F460;
        v7 = xmmword_10124F470;
      }
      v13 = v7;
      objc_msgSend(v9, "setTransform:", &v11);

    }
    goto LABEL_20;
  }
  __break(1u);
}

void sub_100BED34C()
{
  _BYTE *v0;
  id v1;
  uint64_t v2;
  void *v3;
  _BYTE *v4;
  id v5;
  uint64_t v6;
  void *v7;
  _BYTE *v8;
  id v9;
  uint64_t v10;
  void *v11;
  _BYTE *v12;
  void **v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  void *v16;
  void *v17;
  uint64_t v18;

  if ((v0[OBJC_IVAR___MusicInstrumentalContentView_fadeOutCued] & 1) == 0)
  {
    v0[OBJC_IVAR___MusicInstrumentalContentView_fadeOutCued] = 1;
    v1 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:controlPoint1:controlPoint2:animations:", 0, 1.0, 0.25, 0.1, 0.25, 1.0);
    v2 = swift_allocObject(&unk_101106C78, 24, 7);
    *(_QWORD *)(v2 + 16) = v0;
    v17 = sub_100BEDFF8;
    v18 = v2;
    v13 = _NSConcreteStackBlock;
    v14 = 1107296256;
    v15 = sub_1001DBD98;
    v16 = &unk_101106C90;
    v3 = _Block_copy(&v13);
    v4 = v0;
    objc_msgSend(v1, "addAnimations:", v3, swift_release().n128_f64[0]);
    _Block_release(v3);
    objc_msgSend(v1, "startAnimation");
    v5 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:curve:animations:", 1, 0, 0.3);
    v6 = swift_allocObject(&unk_101106CC8, 24, 7);
    *(_QWORD *)(v6 + 16) = v4;
    v17 = sub_100BEE018;
    v18 = v6;
    v13 = _NSConcreteStackBlock;
    v14 = 1107296256;
    v15 = sub_1001DBD98;
    v16 = &unk_101106CE0;
    v7 = _Block_copy(&v13);
    v8 = v4;
    objc_msgSend(v5, "addAnimations:", v7, swift_release().n128_f64[0]);
    _Block_release(v7);
    objc_msgSend(v5, "startAnimationAfterDelay:", 1.0);
    v9 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:curve:animations:", 1, 0, 0.5);
    v10 = swift_allocObject(&unk_101106D18, 24, 7);
    *(_QWORD *)(v10 + 16) = v8;
    v17 = sub_100BEE020;
    v18 = v10;
    v13 = _NSConcreteStackBlock;
    v14 = 1107296256;
    v15 = sub_1001DBD98;
    v16 = &unk_101106D30;
    v11 = _Block_copy(&v13);
    v12 = v8;
    objc_msgSend(v9, "addAnimations:", v11, swift_release().n128_f64[0]);
    _Block_release(v11);
    objc_msgSend(v9, "startAnimationAfterDelay:", 1.0);

  }
}

void sub_100BED5E0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  _OWORD v8[3];
  _BYTE v9[24];

  v1 = (uint64_t *)(a1 + OBJC_IVAR___MusicInstrumentalContentView_dots);
  swift_beginAccess(a1 + OBJC_IVAR___MusicInstrumentalContentView_dots, v9, 0, 0);
  v2 = *v1;
  if (!((unint64_t)v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
      goto LABEL_3;
LABEL_16:
    swift_bridgeObjectRelease();
    return;
  }
  if (v2 < 0)
    v7 = v2;
  else
    v7 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v3 = _CocoaArrayWrapper.endIndex.getter(v7);
  if (!v3)
    goto LABEL_16;
LABEL_3:
  if (v3 >= 1)
  {
    v4 = 0;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
        v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2);
      else
        v5 = *(id *)(v2 + 8 * v4 + 32);
      v6 = v5;
      if (qword_1011DE010 != -1)
        swift_once(&qword_1011DE010, sub_100BEBEB8);
      ++v4;
      v8[0] = xmmword_10124F4B0;
      v8[1] = xmmword_10124F4C0;
      v8[2] = xmmword_10124F4D0;
      objc_msgSend(v6, "setTransform:", v8);

    }
    while (v3 != v4);
    goto LABEL_16;
  }
  __break(1u);
}

uint64_t sub_100BED734(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t i;
  id v6;
  void *v7;
  uint64_t v8;
  _BYTE v9[24];

  v1 = (uint64_t *)(a1 + OBJC_IVAR___MusicInstrumentalContentView_dots);
  swift_beginAccess(a1 + OBJC_IVAR___MusicInstrumentalContentView_dots, v9, 0, 0);
  v2 = *v1;
  if (!((unint64_t)v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v3)
      goto LABEL_3;
    return swift_bridgeObjectRelease(v2);
  }
  if (v2 < 0)
    v8 = v2;
  else
    v8 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  result = _CocoaArrayWrapper.endIndex.getter(v8);
  v3 = result;
  if (!result)
    return swift_bridgeObjectRelease(v2);
LABEL_3:
  if (v3 >= 1)
  {
    for (i = 0; i != v3; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0)
        v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v2);
      else
        v6 = *(id *)(v2 + 8 * i + 32);
      v7 = v6;
      objc_msgSend(v6, "setAlpha:", 0.0);

    }
    return swift_bridgeObjectRelease(v2);
  }
  __break(1u);
  return result;
}

void sub_100BED82C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  _OWORD v8[3];
  _BYTE v9[24];

  v1 = (uint64_t *)(a1 + OBJC_IVAR___MusicInstrumentalContentView_dots);
  swift_beginAccess(a1 + OBJC_IVAR___MusicInstrumentalContentView_dots, v9, 0, 0);
  v2 = *v1;
  if (!((unint64_t)v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
      goto LABEL_3;
LABEL_16:
    swift_bridgeObjectRelease();
    return;
  }
  if (v2 < 0)
    v7 = v2;
  else
    v7 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v3 = _CocoaArrayWrapper.endIndex.getter(v7);
  if (!v3)
    goto LABEL_16;
LABEL_3:
  if (v3 >= 1)
  {
    v4 = 0;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
        v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2);
      else
        v5 = *(id *)(v2 + 8 * v4 + 32);
      v6 = v5;
      if (qword_1011DE018 != -1)
        swift_once(&qword_1011DE018, sub_100BEBED8);
      ++v4;
      v8[0] = xmmword_10124F4E0;
      v8[1] = *(_OWORD *)algn_10124F4F0;
      v8[2] = xmmword_10124F500;
      objc_msgSend(v6, "setTransform:", v8);

    }
    while (v3 != v4);
    goto LABEL_16;
  }
  __break(1u);
}

void sub_100BED980()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  double v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  id v12;
  double v13;
  id v14;
  id v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _BYTE v19[24];

  v1 = &v0[OBJC_IVAR___MusicInstrumentalContentView_specs];
  v2 = *(_QWORD *)&v0[OBJC_IVAR___MusicInstrumentalContentView_specs + 488];
  if (v2 < 0)
  {
LABEL_16:
    __break(1u);
  }
  else if (v2)
  {
    v3 = v0;
    v4 = 0;
    v5 = &v0[OBJC_IVAR___MusicInstrumentalContentView_dots];
    do
    {
      v6 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
      v7 = v6;
      v8 = 1.3;
      if (!v4)
        goto LABEL_7;
      v9 = *((_QWORD *)v1 + 61);
      v10 = __OFSUB__(v9, 1);
      v11 = v9 - 1;
      if (v10)
      {
        __break(1u);
        goto LABEL_16;
      }
      v8 = -1.3;
      if (v4 == v11)
      {
LABEL_7:
        v12 = objc_msgSend(v6, "layer");
        objc_msgSend(v12, "anchorPoint");
        objc_msgSend(v12, "setAnchorPoint:", v13 + v8);

      }
      objc_msgSend(v7, "setBackgroundColor:", *((_QWORD *)v1 + 29));
      objc_msgSend(v7, "setAlpha:", 0.0);
      objc_msgSend(v7, "setAutoresizingMask:", 40);
      v14 = objc_msgSend(v7, "layer");
      if (qword_1011DDFE8 != -1)
        swift_once(&qword_1011DDFE8, sub_100BEBE18);
      objc_msgSend(v14, "setCornerRadius:", *(double *)&qword_10124F430);

      swift_beginAccess(v5, v19, 33, 0);
      v15 = v7;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v15);
      v17 = *(_QWORD *)((*(_QWORD *)v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v16 = *(_QWORD *)((*(_QWORD *)v5 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v17 >= v16 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v17 + 1, 1);
      ++v4;
      v18 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v15);
      specialized Array._endMutation()(v18);
      swift_endAccess(v19);
      objc_msgSend(v3, "addSubview:", v15);

    }
    while (v2 != v4);
  }
}

void sub_100BEDBB4()
{
  char *v0;
  char *v1;
  uint64_t *v2;
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  double v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22[24];
  CGRect v23;
  CGRect v24;

  v1 = v0;
  v2 = (uint64_t *)&v0[OBJC_IVAR___MusicInstrumentalContentView_dots];
  swift_beginAccess(&v0[OBJC_IVAR___MusicInstrumentalContentView_dots], v22, 0, 0);
  v3 = *v2;
  if (!((unint64_t)*v2 >> 62))
  {
    if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_4;
    goto LABEL_3;
  }
  if (v3 < 0)
    v19 = *v2;
  else
    v19 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v20 = _CocoaArrayWrapper.endIndex.getter(v19);
  swift_bridgeObjectRelease();
  if (!v20)
LABEL_3:
    sub_100BED980();
LABEL_4:
  v4 = (double)*(uint64_t *)&v1[OBJC_IVAR___MusicInstrumentalContentView_specs + 488];
  if (qword_1011DDFE8 != -1)
    swift_once(&qword_1011DDFE8, sub_100BEBE18);
  v5 = *(double *)&qword_10124F430 + *(double *)&qword_10124F430;
  v6 = (*(double *)&qword_10124F430 + *(double *)&qword_10124F430) * v4;
  v7 = v4 + -1.0;
  if (qword_1011DDFF0 != -1)
    swift_once(&qword_1011DDFF0, sub_100BEBE38);
  v8 = v6 + v7 * *(double *)&qword_10124F438;
  v9 = Int.seconds.getter(0);
  v10 = *(_QWORD *)&v1[OBJC_IVAR___MusicInstrumentalContentView_alignment];
  if (v10 == 1)
  {
    objc_msgSend(v1, "bounds", v9);
    v11 = (CGRectGetWidth(v24) - v8) * 0.5;
  }
  else
  {
    v11 = v9;
    if (v10 == 2)
    {
      objc_msgSend(v1, "bounds");
      v11 = CGRectGetWidth(v23) - v8;
    }
  }
  v12 = *v2;
  if (!((unint64_t)v12 >> 62))
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v13)
      goto LABEL_14;
LABEL_29:
    swift_bridgeObjectRelease();
    return;
  }
  if (v12 < 0)
    v21 = v12;
  else
    v21 = v12 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v13 = _CocoaArrayWrapper.endIndex.getter(v21);
  if (!v13)
    goto LABEL_29;
LABEL_14:
  if (v13 >= 1)
  {
    v14 = 0;
    do
    {
      if ((v12 & 0xC000000000000001) != 0)
        v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v12);
      else
        v15 = *(id *)(v12 + 8 * v14 + 32);
      v16 = v15;
      ++v14;
      objc_msgSend(v1, "bounds");
      UIView.untransformedFrame.setter(v11, v17 * 0.5 - v5 * 0.5, v5, v5);
      v18 = *(double *)&qword_10124F438;

      v11 = v11 + v5 + v18;
    }
    while (v13 != v14);
    goto LABEL_29;
  }
  __break(1u);
}

id sub_100BEDE68()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)_s23InstrumentalContentViewCMa();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t _s23InstrumentalContentViewCMa()
{
  return objc_opt_self(MusicInstrumentalContentView);
}

uint64_t sub_100BEDF0C(const void *a1)
{
  _QWORD *v1;
  void *v3;
  _BYTE v5[544];

  v3 = (void *)(*v1 + OBJC_IVAR___MusicInstrumentalContentView_specs);
  memcpy(v5, v3, 0x219uLL);
  memcpy(v3, a1, 0x219uLL);
  return sub_10024E458((uint64_t)v5);
}

uint64_t sub_100BEDF70(uint64_t result)
{
  _QWORD *v1;

  *(_BYTE *)(*v1 + OBJC_IVAR___MusicInstrumentalContentView_isScrolling) = result;
  return result;
}

uint64_t sub_100BEDF84()
{
  return sub_100BEC148();
}

void sub_100BEDFA4(char a1, char a2)
{
  sub_100BEC360(a1, a2);
}

id sub_100BEDFC4()
{
  id *v0;

  return objc_msgSend(*v0, "sizeThatFits:");
}

uint64_t sub_100BEDFD4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100BEDFF8()
{
  uint64_t v0;

  sub_100BED5E0(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100BEE000(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100BEE010(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_100BEE018()
{
  uint64_t v0;

  return sub_100BED734(*(_QWORD *)(v0 + 16));
}

void sub_100BEE020()
{
  uint64_t v0;

  sub_100BED82C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100BEE028()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100BEE04C()
{
  uint64_t v0;

  sub_100BED1AC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100BEE054()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

void sub_100BEE078()
{
  int64_t *v0;

  sub_100BEC888(v0[2], v0[3], v0[4]);
}

void sub_100BEE084()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 16) + OBJC_IVAR___MusicInstrumentalContentView_totalDotsFadedIn;
  if ((*(_BYTE *)(v1 + 8) & 1) == 0)
  {
    v2 = *(_QWORD *)(v0 + 24);
    if (*(_QWORD *)v1 <= v2)
    {
      v3 = __OFADD__(v2, 1);
      v4 = v2 + 1;
      if (v3)
      {
        __break(1u);
      }
      else
      {
        *(_QWORD *)v1 = v4;
        *(_BYTE *)(v1 + 8) = 0;
      }
    }
  }
}

void sub_100BEE0C4()
{
  uint64_t v0;

  sub_100BEC9F4(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100BEE0CC()
{
  return sub_100BEC148();
}

void sub_100BEE0EC()
{
  _BYTE *v0;
  _OWORD *v1;
  char *v2;

  v0[OBJC_IVAR___MusicInstrumentalContentView_isScrolling] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___MusicInstrumentalContentView_alignment] = 0;
  v1 = &v0[OBJC_IVAR___MusicInstrumentalContentView_lastSeenBounds];
  *v1 = 0u;
  v1[1] = 0u;
  v0[OBJC_IVAR___MusicInstrumentalContentView_isSelected] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___MusicInstrumentalContentView_dots] = _swiftEmptyArrayStorage;
  v0[OBJC_IVAR___MusicInstrumentalContentView_fadeOutCued] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___MusicInstrumentalContentView_dotFadeInDuration] = 0;
  v2 = &v0[OBJC_IVAR___MusicInstrumentalContentView_totalDotsFadedIn];
  *(_QWORD *)v2 = 0;
  v2[8] = 1;
  *(_QWORD *)&v0[OBJC_IVAR___MusicInstrumentalContentView_totalDotsCompleted] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___MusicInstrumentalContentView_breathDuration] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___MusicInstrumentalContentView_totalBreathsCompleted] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E2B820, "MusicCoreUI/SyncedLyricsLineView+Instrumental.swift", 51, 2, 75, 0);
  __break(1u);
}

void sub_100BEE240(char a1, char a2)
{
  _BYTE *v2;
  double v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  char **v10;
  uint64_t v11;
  NSString v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  void *v19;
  _BYTE *v20;
  uint64_t v21;
  void *v22;
  _BYTE *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void **v27;
  uint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  uint64_t v32;

  v2[OBJC_IVAR___MusicTextContentView_isSelected] = a1;
  if ((a1 & 1) != 0)
  {
    v5 = Int.seconds.getter(1);
    v6 = OBJC_IVAR___MusicTextContentView_selectedLabel;
    v7 = *(void **)&v2[OBJC_IVAR___MusicTextContentView_selectedLabel];
    if (v7)
      goto LABEL_20;
    v8 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
    objc_msgSend(v8, "setLineBreakStrategy:", 3);
    objc_msgSend(v8, "setNumberOfLines:", 0);
    objc_msgSend(v8, "setTextAlignment:", 4);
    objc_msgSend(v8, "setAutoresizingMask:", 18);
    objc_msgSend(v8, "setTextAlignment:", *(_QWORD *)&v2[OBJC_IVAR___MusicTextContentView_alignment]);
    v9 = *(void **)&v2[OBJC_IVAR___MusicTextContentView_content];
    if ((v2[OBJC_IVAR___MusicTextContentView_content + 16] & 1) != 0)
    {
      v10 = &selRef_setAttributedText_;
    }
    else
    {
      v11 = *(_QWORD *)&v2[OBJC_IVAR___MusicTextContentView_content + 8];
      swift_bridgeObjectRetain();
      v12 = String._bridgeToObjectiveC()();
      sub_100BEEFB8(v9, v11, 0);
      objc_msgSend(v8, "setText:", v12);

      v9 = *(void **)&v2[OBJC_IVAR___MusicTextContentView_specs + 168];
      v10 = &selRef_setFont_;
    }
    objc_msgSend(v8, *v10, v9);
    objc_msgSend(v8, "setTextColor:", *(_QWORD *)&v2[OBJC_IVAR___MusicTextContentView_specs + 232]);
    objc_msgSend(v2, "addSubview:", v8);
    v13 = *(void **)&v2[v6];
    *(_QWORD *)&v2[v6] = v8;

    v7 = *(void **)&v2[v6];
    if (v7)
    {
LABEL_20:
      v14 = *(void **)&v2[OBJC_IVAR___MusicTextContentView_label];
      v15 = v7;
      objc_msgSend(v14, "frame");
      objc_msgSend(v15, "setFrame:");

      v16 = *(void **)&v2[v6];
      if (v16)
        objc_msgSend(v16, "setAlpha:", 0.0);
    }
  }
  else
  {
    v5 = Int.seconds.getter(0);
  }
  if ((a2 & 1) != 0)
  {
    v17 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:controlPoint1:controlPoint2:animations:", 0, 0.12, 0.33, 0.0, 0.2, 0.1);
    v18 = swift_allocObject(&unk_101107050, 32, 7);
    *(_QWORD *)(v18 + 16) = v2;
    *(double *)(v18 + 24) = v5;
    v31 = sub_100BEF1F4;
    v32 = v18;
    v27 = _NSConcreteStackBlock;
    v28 = 1107296256;
    v29 = sub_1001DBD98;
    v30 = &unk_101107068;
    v19 = _Block_copy(&v27);
    v20 = v2;
    objc_msgSend(v17, "addAnimations:", v19, swift_release().n128_f64[0]);
    _Block_release(v19);
    v21 = swift_allocObject(&unk_1011070A0, 24, 7);
    *(_QWORD *)(v21 + 16) = v20;
    v31 = sub_100BEF2AC;
    v32 = v21;
    v27 = _NSConcreteStackBlock;
    v28 = 1107296256;
    v29 = sub_10012F6FC;
    v30 = &unk_1011070B8;
    v22 = _Block_copy(&v27);
    v23 = v20;
    objc_msgSend(v17, "addCompletion:", v22, swift_release().n128_f64[0]);
    _Block_release(v22);
    objc_msgSend(v17, "startAnimation");

  }
  else
  {
    objc_msgSend(*(id *)&v2[OBJC_IVAR___MusicTextContentView_label], "setAlpha:", 1.0 - v5);
    v24 = OBJC_IVAR___MusicTextContentView_selectedLabel;
    v25 = *(void **)&v2[OBJC_IVAR___MusicTextContentView_selectedLabel];
    if (v25)
      objc_msgSend(v25, "setAlpha:", v5);
    if ((a1 & 1) == 0)
    {
      v26 = *(void **)&v2[v24];
      if (v26)
      {
        objc_msgSend(v26, "removeFromSuperview");
        v26 = *(void **)&v2[v24];
      }
      *(_QWORD *)&v2[v24] = 0;

    }
  }
}

void sub_100BEE658(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;

  if ((*(_BYTE *)(a2 + OBJC_IVAR___MusicTextContentView_isSelected) & 1) == 0)
  {
    v3 = OBJC_IVAR___MusicTextContentView_selectedLabel;
    v4 = *(void **)(a2 + OBJC_IVAR___MusicTextContentView_selectedLabel);
    if (v4)
    {
      objc_msgSend(v4, "removeFromSuperview");
      v4 = *(void **)(a2 + v3);
    }
    *(_QWORD *)(a2 + v3) = 0;

  }
}

char *sub_100BEE6B4(void *a1, uint64_t a2, char a3, uint64_t a4)
{
  _BYTE *v4;
  uint64_t v9;
  id v10;
  char *v11;
  id v12;
  char *v13;
  char v14;
  id v15;
  Swift::Int v16;
  char *v17;
  double v18;
  uint64_t v19;
  void *v20;
  char *v21;
  id v22;
  objc_super v24;

  v4[OBJC_IVAR___MusicTextContentView_isSelected] = 0;
  *(_QWORD *)&v4[OBJC_IVAR___MusicTextContentView_alignment] = 0;
  v4[OBJC_IVAR___MusicTextContentView_isScrolling] = 1;
  v9 = OBJC_IVAR___MusicTextContentView_label;
  v10 = objc_allocWithZone((Class)UILabel);
  v11 = v4;
  v12 = objc_msgSend(v10, "init");
  objc_msgSend(v12, "setLineBreakStrategy:", 3);
  objc_msgSend(v12, "setNumberOfLines:", 0);
  objc_msgSend(v12, "setTextAlignment:", 4);
  objc_msgSend(v12, "setAutoresizingMask:", 18);
  *(_QWORD *)&v4[v9] = v12;
  *(_QWORD *)&v11[OBJC_IVAR___MusicTextContentView_selectedLabel] = 0;
  v13 = &v11[OBJC_IVAR___MusicTextContentView_content];
  *(_QWORD *)v13 = a1;
  *((_QWORD *)v13 + 1) = a2;
  v14 = a3 & 1;
  v13[16] = a3 & 1;
  memcpy(&v11[OBJC_IVAR___MusicTextContentView_specs], (const void *)a4, 0x219uLL);
  sub_10024E6C8(a4);
  sub_100BEEF98(a1, a2, a3 & 1);

  v24.receiver = v11;
  v24.super_class = (Class)_s15TextContentViewCMa();
  v15 = objc_msgSendSuper2(&v24, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v16 = sub_100BBFE48((uint64_t)&off_101102820);
  v17 = (char *)v15;
  sub_100BEEAE4(v16);
  *(_QWORD *)&v18 = swift_bridgeObjectRelease().n128_u64[0];
  if ((a3 & 1) == 0)
  {
    if (*(_BYTE *)(a4 + 56))
      v19 = 4;
    else
      v19 = *(_QWORD *)(a4 + 48);
    objc_msgSend(*(id *)&v17[OBJC_IVAR___MusicTextContentView_label], "setTextAlignment:", v19, v18);
  }
  v20 = *(void **)&v17[OBJC_IVAR___MusicTextContentView_label];
  v21 = v17;
  v22 = v20;
  objc_msgSend(v21, "addSubview:", v22);
  sub_10024E458(a4);
  sub_100BEEFB8(a1, a2, v14);

  return v21;
}

uint64_t sub_100BEE918@<X0>(char **a1@<X8>)
{
  _BYTE *v1;
  _BYTE *v2;
  char *v4;
  void *v5;
  uint64_t v6;
  char *v7;
  objc_class *v8;
  void *v9;
  uint64_t v10;
  char v11;
  char *v12;
  Swift::Int v13;
  char *v14;
  uint64_t result;
  _BYTE v16[544];

  v2 = v1;
  v4 = &v1[OBJC_IVAR___MusicTextContentView_content];
  v5 = *(void **)&v1[OBJC_IVAR___MusicTextContentView_content];
  v6 = *((_QWORD *)v4 + 1);
  v7 = &v2[OBJC_IVAR___MusicTextContentView_specs];
  if ((v4[16] & 1) != 0)
  {
    memcpy(v16, v7, 0x219uLL);
    v8 = (objc_class *)_s15TextContentViewCMa();
    objc_allocWithZone(v8);
    sub_100BEEF98(v5, v6, 1);
    sub_10024E6C8((uint64_t)v16);
    v9 = v5;
    v10 = v6;
    v11 = 1;
  }
  else
  {
    memcpy(v16, v7, 0x219uLL);
    v8 = (objc_class *)_s15TextContentViewCMa();
    objc_allocWithZone(v8);
    sub_100BEEF98(v5, v6, 0);
    sub_10024E6C8((uint64_t)v16);
    v9 = v5;
    v10 = v6;
    v11 = 0;
  }
  v12 = sub_100BEE6B4(v9, v10, v11, (uint64_t)v16);
  sub_100BEE240(v2[OBJC_IVAR___MusicTextContentView_isSelected], 0);
  *(_QWORD *)&v12[OBJC_IVAR___MusicTextContentView_alignment] = *(_QWORD *)&v2[OBJC_IVAR___MusicTextContentView_alignment];
  v13 = sub_100BBFE48((uint64_t)&off_101102848);
  sub_100BEEAE4(v13);
  swift_bridgeObjectRelease();
  v14 = v12;
  objc_msgSend(v2, "bounds");
  objc_msgSend(v14, "setFrame:");

  result = _s15TextContentViewCMa();
  a1[3] = (char *)v8;
  *a1 = v14;
  return result;
}

double sub_100BEEAE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double result;
  _QWORD *v10;
  int64_t v11;

  v10 = (_QWORD *)(a1 + 56);
  v1 = 1 << *(_BYTE *)(a1 + 32);
  v2 = -1;
  if (v1 < 64)
    v2 = ~(-1 << v1);
  v3 = v2 & *(_QWORD *)(a1 + 56);
  v11 = (unint64_t)(v1 + 63) >> 6;
  swift_bridgeObjectRetain();
  if (v3)
  {
    v5 = __clz(__rbit64(v3));
    goto LABEL_18;
  }
  if (v11 > 1)
  {
    v6 = v10[1];
    v7 = 1;
    if (v6)
      goto LABEL_17;
    v7 = 2;
    if (v11 <= 2)
      goto LABEL_19;
    v6 = v10[2];
    if (v6)
      goto LABEL_17;
    v7 = 3;
    if (v11 <= 3)
      goto LABEL_19;
    v6 = v10[3];
    if (v6)
    {
LABEL_17:
      v5 = __clz(__rbit64(v6)) + (v7 << 6);
LABEL_18:
      __asm { BR              X9 }
    }
    v8 = 4;
    if (v11 > 4)
    {
      v6 = v10[4];
      if (v6)
      {
        v7 = 4;
        goto LABEL_17;
      }
      while (1)
      {
        v7 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
          __break(1u);
          JUMPOUT(0x100BEEE8CLL);
        }
        if (v7 >= v11)
          break;
        v6 = v10[v7];
        ++v8;
        if (v6)
          goto LABEL_17;
      }
    }
  }
LABEL_19:
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

id sub_100BEEEC8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)_s15TextContentViewCMa();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t _s15TextContentViewCMa()
{
  return objc_opt_self(MusicTextContentView);
}

id sub_100BEEF98(void *a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return a1;
  else
    return (id)swift_bridgeObjectRetain();
}

void destroy for JSStaticImageViewModel.ImageResource(uint64_t a1)
{
  sub_100BEEFB8(*(void **)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void sub_100BEEFB8(void *a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)

  else
    swift_bridgeObjectRelease(a2);
}

uint64_t _s11MusicJSCore22JSStaticImageViewModelC13ImageResourceOwCP_0(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  char v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_100BEEF98(*(void **)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for JSStaticImageViewModel.ImageResource(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  char v5;
  void *v6;
  uint64_t v7;
  char v8;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_100BEEF98(*(void **)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_100BEEFB8(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for JSStaticImageViewModel.ImageResource(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_100BEEFB8(v4, v5, v6);
  return a1;
}

ValueMetadata *_s15TextContentViewC7ContentOMa()
{
  return &_s15TextContentViewC7ContentON;
}

uint64_t sub_100BEF0B8(const void *a1)
{
  _QWORD *v1;
  void *v3;
  Swift::Int v4;
  _BYTE v6[544];

  v3 = (void *)(*v1 + OBJC_IVAR___MusicTextContentView_specs);
  memcpy(v6, v3, 0x219uLL);
  memcpy(v3, a1, 0x219uLL);
  sub_10024E6C8((uint64_t)a1);
  sub_10024E458((uint64_t)v6);
  v4 = sub_100BBFE48((uint64_t)&off_1011027F8);
  sub_100BEEAE4(v4);
  swift_bridgeObjectRelease();
  return sub_10024E458((uint64_t)a1);
}

double sub_100BEF14C(char a1)
{
  _QWORD *v1;
  Swift::Int v2;
  double result;

  *(_BYTE *)(*v1 + OBJC_IVAR___MusicTextContentView_isScrolling) = a1;
  v2 = sub_100BBFE48((uint64_t)&off_101102870);
  sub_100BEEAE4(v2);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

id sub_100BEF190()
{
  _QWORD *v0;

  return objc_msgSend(*(id *)(*v0 + OBJC_IVAR___MusicTextContentView_label), "setAlpha:", 1.0);
}

void sub_100BEF1B0(char a1, char a2)
{
  sub_100BEE240(a1, a2);
}

uint64_t sub_100BEF1D0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_100BEF1F4()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  id result;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(double *)(v0 + 24);
  objc_msgSend(*(id *)(v1 + OBJC_IVAR___MusicTextContentView_label), "setAlpha:", 1.0 - v2);
  result = *(id *)(v1 + OBJC_IVAR___MusicTextContentView_selectedLabel);
  if (result)
    return objc_msgSend(result, "setAlpha:", v2);
  return result;
}

uint64_t sub_100BEF270(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100BEF280(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_100BEF288()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100BEF2AC(uint64_t a1)
{
  uint64_t v1;

  sub_100BEE658(a1, *(_QWORD *)(v1 + 16));
}

void sub_100BEF2B4()
{
  _BYTE *v0;
  uint64_t v1;
  id v2;

  v0[OBJC_IVAR___MusicTextContentView_isSelected] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___MusicTextContentView_alignment] = 0;
  v0[OBJC_IVAR___MusicTextContentView_isScrolling] = 1;
  v1 = OBJC_IVAR___MusicTextContentView_label;
  v2 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v2, "setLineBreakStrategy:", 3);
  objc_msgSend(v2, "setNumberOfLines:", 0);
  objc_msgSend(v2, "setTextAlignment:", 4);
  objc_msgSend(v2, "setAutoresizingMask:", 18);
  *(_QWORD *)&v0[v1] = v2;
  *(_QWORD *)&v0[OBJC_IVAR___MusicTextContentView_selectedLabel] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E2B820, "MusicCoreUI/SyncedLyricsLineView+Text.swift", 43, 2, 121, 0);
  __break(1u);
}

uint64_t _s15TextContentViewC6ChangeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_100BEF40C + 4 * byte_100EEBF6D[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_100BEF440 + 4 * byte_100EEBF68[v4]))();
}

uint64_t sub_100BEF440(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100BEF448(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100BEF450);
  return result;
}

uint64_t sub_100BEF45C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100BEF464);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_100BEF468(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100BEF470(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s15TextContentViewC6ChangeOMa()
{
  return &_s15TextContentViewC6ChangeON;
}

unint64_t sub_100BEF490()
{
  unint64_t result;

  result = qword_1011E0158;
  if (!qword_1011E0158)
  {
    result = swift_getWitnessTable(&unk_100EEBFE4, &_s15TextContentViewC6ChangeON);
    atomic_store(result, (unint64_t *)&qword_1011E0158);
  }
  return result;
}

uint64_t sub_100BEF4DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_100064C78(v3, a1);
}

id sub_100BEF52C()
{
  char *v0;
  double v1;
  double v2;
  CGFloat v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  uint64_t v8;
  uint64_t *v9;
  double *v10;
  _BYTE v12[24];

  v1 = UIView.untransformedFrame.getter();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = *(_QWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_alignment];
  if (v8 == 2)
  {
    v9 = CGPoint.centerRight.unsafeMutableAddressor();
  }
  else if (v8)
  {
    v9 = CGPoint.center.unsafeMutableAddressor();
  }
  else
  {
    v9 = CGPoint.centerLeft.unsafeMutableAddressor();
  }
  v10 = (double *)v9;
  swift_beginAccess(v9, v12, 0, 0);
  objc_msgSend(v0, "setAnchorPoint:", *v10, v10[1]);
  return UIView.untransformedFrame.setter(v1, v3, v5, v7);
}

void sub_100BEF5D8(void *a1)
{
  char *v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  Class isa;

  if (a1)
    objc_msgSend(a1, "removeFromSuperview");
  v2 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_containerView], "addSubview:", v3);
    v4 = (void *)objc_opt_self(NSLayoutConstraint);
    v5 = sub_100007E8C(&qword_1011DF520);
    v6 = swift_allocObject(v5, 64, 7);
    *(_OWORD *)(v6 + 16) = xmmword_100EA7AB0;
    v7 = objc_msgSend(v3, "leadingAnchor");
    v8 = objc_msgSend(v1, "leadingAnchor");
    v9 = objc_msgSend(v7, "constraintEqualToAnchor:", v8);

    *(_QWORD *)(v6 + 32) = v9;
    v10 = objc_msgSend(v3, "trailingAnchor");
    v11 = objc_msgSend(v1, "trailingAnchor");
    v12 = objc_msgSend(v10, "constraintEqualToAnchor:", v11);

    *(_QWORD *)(v6 + 40) = v12;
    v13 = objc_msgSend(v3, "topAnchor");
    v14 = objc_msgSend(v1, "topAnchor");
    v15 = objc_msgSend(v13, "constraintEqualToAnchor:", v14);

    *(_QWORD *)(v6 + 48) = v15;
    v16 = objc_msgSend(v3, "bottomAnchor");
    v17 = objc_msgSend(v1, "bottomAnchor");
    v18 = objc_msgSend(v16, "constraintEqualToAnchor:", v17);

    *(_QWORD *)(v6 + 56) = v18;
    specialized Array._endMutation()(v19);
    sub_10004A07C(0, &qword_1011E01E8, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v4, "activateConstraints:", isa, swift_bridgeObjectRelease().n128_f64[0]);

  }
}

void (*sub_100BEF894(uint64_t a1))(__int128 *a1, char a2)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  id v4;

  v2 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView;
  *(_QWORD *)(a1 + 16) = v1;
  *(_QWORD *)(a1 + 24) = v2;
  v3 = *(_OWORD *)(v1 + v2);
  *(_OWORD *)a1 = v3;
  v4 = (id)v3;
  return sub_100BEF8DC;
}

void sub_100BEF8DC(__int128 *a1, char a2)
{
  id *v3;
  __int128 v4;
  id v5;
  void *v6;
  id v7;
  id v8;

  v3 = (id *)(*((_QWORD *)a1 + 2) + *((_QWORD *)a1 + 3));
  v8 = *v3;
  v4 = *a1;
  *(_OWORD *)v3 = *a1;
  v5 = (id)v4;
  v6 = v5;
  if ((a2 & 1) != 0)
  {
    v7 = v5;
    sub_100BEF5D8(v8);

  }
  else
  {
    sub_100BEF5D8(v8);
  }

}

id sub_100BEF960()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView____lazy_storage___backgroundView;
  v2 = *(void **)&v0[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView____lazy_storage___backgroundView];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView____lazy_storage___backgroundView];
  }
  else
  {
    v4 = sub_100BEF9C0(v0);
    v5 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_100BEF9C0(char *a1)
{
  id v2;
  double *v3;
  id v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  Class isa;

  v2 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v3 = (double *)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs];
  objc_msgSend(v2, "setBackgroundColor:", *(_QWORD *)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 456]);
  objc_msgSend(v2, "setAlpha:", 0.0);
  v4 = objc_msgSend(v2, "layer");
  objc_msgSend(v4, "setCornerCurve:", kCACornerCurveContinuous);

  v5 = objc_msgSend(v2, "layer");
  objc_msgSend(v5, "setCornerRadius:", v3[58]);

  objc_msgSend(a1, "insertSubview:atIndex:", v2, 0);
  v6 = (void *)objc_opt_self(NSLayoutConstraint);
  v7 = sub_100007E8C(&qword_1011DF520);
  v8 = swift_allocObject(v7, 64, 7);
  *(_OWORD *)(v8 + 16) = xmmword_100EA7AB0;
  v9 = objc_msgSend(v2, "leadingAnchor");
  v10 = objc_msgSend(a1, "leadingAnchor");
  v11 = objc_msgSend(v9, "constraintEqualToAnchor:constant:", v10, -v3[59]);

  *(_QWORD *)(v8 + 32) = v11;
  v12 = objc_msgSend(v2, "trailingAnchor");
  v13 = objc_msgSend(a1, "trailingAnchor");
  v14 = objc_msgSend(v12, "constraintEqualToAnchor:constant:", v13, v3[59]);

  *(_QWORD *)(v8 + 40) = v14;
  v15 = objc_msgSend(v2, "topAnchor");
  v16 = objc_msgSend(a1, "topAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:constant:", v16, -v3[59]);

  *(_QWORD *)(v8 + 48) = v17;
  v18 = objc_msgSend(v2, "bottomAnchor");
  v19 = objc_msgSend(a1, "bottomAnchor");
  v20 = objc_msgSend(v18, "constraintEqualToAnchor:constant:", v19, v3[59]);

  *(_QWORD *)(v8 + 56) = v20;
  specialized Array._endMutation()(v21);
  sub_10004A07C(0, &qword_1011E01E8, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v6, "activateConstraints:", isa, swift_bridgeObjectRelease().n128_f64[0]);

  return v2;
}

double sub_100BEFDBC(char a1)
{
  char *v1;
  double result;
  id v3;
  char *v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  char *v9;
  id v10;

  if (objc_msgSend(v1, "isHighlighted") != (a1 & 1))
  {
    v3 = sub_100BEF960();
    if (objc_msgSend(v1, "isHighlighted"))
    {
      v4 = &v1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_previousBlurRadius];
      *(_QWORD *)v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_blurRadius];
      v4[8] = 0;
      v5 = 0.0;
    }
    else
    {
      if ((v1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_previousBlurRadius + 8] & 1) != 0)
      {
LABEL_8:
        v6 = swift_allocObject(&unk_1011072B8, 32, 7);
        *(_QWORD *)(v6 + 16) = v3;
        *(_QWORD *)(v6 + 24) = v1;
        v7 = swift_allocObject(&unk_1011072E0, 32, 7);
        *(_QWORD *)(v7 + 16) = v1;
        *(_QWORD *)(v7 + 24) = v3;
        v8 = v3;
        v9 = v1;
        v10 = v8;
        _s11MusicCoreUI26SyncedLyricsViewControllerC5SpecsV35animateWithHighlightAnimationCurves11highlighted14fadeAnimations09transformP0ySb_yycyyctFZ_0((char)objc_msgSend(v9, "isHighlighted"), (uint64_t)sub_100BF2170, v6, (uint64_t)sub_100BF2178, v7);

        swift_release();
        *(_QWORD *)&result = swift_release().n128_u64[0];
        return result;
      }
      v5 = *(double *)&v1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_previousBlurRadius];
    }
    sub_100BF06D4(1, v5);
    goto LABEL_8;
  }
  return result;
}

void sub_100BEFF00(void *a1, char *a2)
{
  unsigned int v4;
  double v5;
  double v6;
  id v7;

  v4 = objc_msgSend(a2, "isHighlighted");
  v5 = 0.0;
  v6 = 1.0;
  if (v4)
    v5 = 1.0;
  objc_msgSend(a1, "setAlpha:", v5);
  v7 = *(id *)&a2[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_containerView];
  if (objc_msgSend(a2, "isHighlighted"))
    v6 = *(double *)&a2[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 448];
  objc_msgSend(v7, "setAlpha:", v6);

}

id sub_100BEFFB0(char *a1, void *a2)
{
  uint64_t v4;
  double v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  double v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v17;

  if (objc_msgSend(a1, "isHighlighted"))
  {
    v5 = *(double *)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 400];
    v4 = *(_QWORD *)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 408];
    v6 = *(_QWORD *)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 416];
    v7 = *(double *)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 424];
    v8 = *(_QWORD *)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 432];
    v9 = *(_QWORD *)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 440];
  }
  else
  {
    v4 = 0;
    v5 = 1.0;
    v6 = 0;
    v7 = 1.0;
    v8 = 0;
    v9 = 0;
  }
  v10 = *(void **)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_containerView];
  v12 = v5;
  v13 = v4;
  v14 = v6;
  v15 = v7;
  v16 = v8;
  v17 = v9;
  objc_msgSend(v10, "setTransform:", &v12);
  v12 = v5;
  v13 = v4;
  v14 = v6;
  v15 = v7;
  v16 = v8;
  v17 = v9;
  return objc_msgSend(a2, "setTransform:", &v12);
}

double sub_100BF009C(double a1, double a2)
{
  char *v2;
  void *v3;
  uint64_t v6;
  uint64_t ObjectType;
  id v8;
  double v9;

  v3 = *(void **)&v2[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
  if (!v3)
    return 0.0;
  v6 = *(_QWORD *)&v2[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView + 8];
  ObjectType = swift_getObjectType();
  v8 = v3;
  v9 = (*(double (**)(id, uint64_t, uint64_t, double, double))(v6 + 96))(objc_msgSend(v2, "isSelected"), ObjectType, v6, a1, a2);

  return v9;
}

void sub_100BF01A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(__int128 *, char);
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  id v15;
  void *v16;
  _QWORD v17[4];

  v1 = v0;
  v2 = v0 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView;
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView);
  if (v3)
  {
    v4 = *(_QWORD *)(v2 + 8);
    ObjectType = swift_getObjectType();
    v17[0] = v3;
    (*(void (**)(uint64_t, uint64_t))(v4 + 80))(ObjectType, v4);
  }
  v6 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_isScrolling;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_isScrolling) = 1;
  v8 = sub_100BEF894((uint64_t)v17);
  v9 = *(void **)v7;
  if (*(_QWORD *)v7)
  {
    v10 = v7;
    v11 = *(unsigned __int8 *)(v1 + v6);
    v12 = *(_QWORD *)(v7 + 8);
    v13 = swift_getObjectType();
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 40);
    v15 = v9;
    v14(v11, v13, v12);
    v16 = *(void **)v10;
    *(_QWORD *)v10 = v9;
    *(_QWORD *)(v10 + 8) = v12;

  }
  v8((__int128 *)v17, 0);
  sub_100BF029C(0, 0);
}

void sub_100BF029C(char a1, void *a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)();
  void *v9;
  id v10;
  char *v11;
  void **v12;
  uint64_t v13;
  uint64_t ObjectType;
  void (*v15)(_QWORD, uint64_t, uint64_t, uint64_t);
  void **v16;
  char *Strong;
  void *v18;
  uint64_t v19;
  double v20;
  uint64_t (*v21)(uint64_t);
  double v22;
  void (*v23)();
  uint64_t v24;
  char *v25;
  void **v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(_QWORD, _QWORD, uint64_t, uint64_t);
  void **v30;
  void **aBlock;
  uint64_t v32;
  uint64_t (*v33)(uint64_t);
  double v34;
  void (*v35)();
  uint64_t v36;
  char v37[24];

  v5 = a1 & 1;
  if (objc_msgSend(v2, "isSelected") != (_DWORD)v5)
  {
    objc_msgSend(v2, "setSelected:", v5);
    if (objc_msgSend(v2, "isHighlighted"))
    {
      objc_msgSend(v2, "setHighlighted:", 0);
      objc_msgSend(v2, "cancelTrackingWithEvent:", 0);
      v6 = swift_allocObject(&unk_101107218, 24, 7);
      swift_unknownObjectWeakInit(v6 + 16);
      v7 = swift_allocObject(&unk_101107290, 25, 7);
      *(_QWORD *)(v7 + 16) = v6;
      *(_BYTE *)(v7 + 24) = a1 & 1;
      if (a2)
      {
        v8 = sub_100BF2180;
LABEL_7:
        v35 = v8;
        v36 = v7;
        aBlock = _NSConcreteStackBlock;
        v32 = 1107296256;
        v33 = sub_1001DBD98;
        v34 = COERCE_DOUBLE(&unk_101107258);
        v9 = _Block_copy(&aBlock);
        swift_retain();
        v10 = a2;
        objc_msgSend(v10, "addAnimations:", v9, swift_release().n128_f64[0]);
        _Block_release(v9);
        v11 = &v2[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
        v12 = *(void ***)&v2[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
        if (v12)
        {
          v13 = *((_QWORD *)v11 + 1);
          ObjectType = swift_getObjectType();
          aBlock = v12;
          v15 = *(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v13 + 88);
          v16 = v12;
          v15(a1 & 1, 1, ObjectType, v13);

          swift_release();
          return;
        }

        goto LABEL_17;
      }
    }
    else
    {
      v6 = swift_allocObject(&unk_101107218, 24, 7);
      swift_unknownObjectWeakInit(v6 + 16);
      v7 = swift_allocObject(&unk_101107240, 25, 7);
      *(_QWORD *)(v7 + 16) = v6;
      *(_BYTE *)(v7 + 24) = a1 & 1;
      if (a2)
      {
        v8 = sub_100BF2034;
        goto LABEL_7;
      }
    }
    swift_beginAccess(v6 + 16, v37, 0, 0);
    Strong = (char *)swift_unknownObjectWeakLoadStrong(v6 + 16);
    if (Strong)
    {
      v18 = Strong;
      if ((a1 & 1) != 0)
      {
        v19 = 0;
        v20 = 1.0;
        v21 = 0;
        v22 = 1.0;
        v23 = 0;
        v24 = 0;
      }
      else
      {
        v20 = *(double *)&Strong[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 280];
        v19 = *(_QWORD *)&Strong[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 288];
        v21 = *(uint64_t (**)(uint64_t))&Strong[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 296];
        v22 = *(double *)&Strong[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 304];
        v23 = *(void (**)())&Strong[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 312];
        v24 = *(_QWORD *)&Strong[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 320];
      }
      aBlock = *(void ***)&v20;
      v32 = v19;
      v33 = v21;
      v34 = v22;
      v35 = v23;
      v36 = v24;
      objc_msgSend(Strong, "setTransform:", &aBlock, swift_retain().n128_f64[0]);
      swift_release();

    }
    v25 = &v2[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
    v26 = *(void ***)&v2[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
    if (v26)
    {
      v27 = *((_QWORD *)v25 + 1);
      v28 = swift_getObjectType();
      aBlock = v26;
      v29 = *(void (**)(_QWORD, _QWORD, uint64_t, uint64_t))(v27 + 88);
      v30 = v26;
      v29(a1 & 1, 0, v28, v27);

    }
LABEL_17:
    swift_release();
  }
}

void sub_100BF05D4(uint64_t a1, char a2)
{
  uint64_t v3;
  char *Strong;
  void *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD v9[3];
  _BYTE v10[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v10, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    if ((a2 & 1) != 0)
    {
      v6 = xmmword_100EAB8C0;
      v7 = xmmword_100EAB8D0;
      v8 = 0uLL;
    }
    else
    {
      v7 = *(_OWORD *)&Strong[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 280];
      v6 = *(_OWORD *)&Strong[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 296];
      v8 = *(_OWORD *)&Strong[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 312];
    }
    v9[0] = v7;
    v9[1] = v6;
    v9[2] = v8;
    objc_msgSend(Strong, "setTransform:", v9);

  }
}

void sub_100BF06D4(char a1, double a2)
{
  char *v2;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  NSString v10;
  id v11;
  id v12;
  double v13;
  Class isa;
  Class v15;
  id v16;
  double v17;
  float v18;
  double v19;
  float v20;
  double v21;
  float v22;
  double v23;
  float v24;
  id v25;
  double v26;
  double v27;
  double v28;
  double v29;
  id v30;
  id v31;
  void *v32;
  uint64_t v33;
  void *v34;
  char *v35;
  id v36;
  NSString v37;
  id v38;
  _QWORD aBlock[6];

  v5 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:controlPoint1:controlPoint2:animations:", 0, 0.12, 0.33, 0.0, 0.2, 0.1);
  v6 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_blurRadius;
  if (*(double *)&v2[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_blurRadius] == a2)
    goto LABEL_8;
  v38 = v5;
  v7 = objc_msgSend(v5, "timingParameters");
  if (!v7
    || (v8 = v7,
        v9 = objc_msgSend(v7, "cubicTimingParameters"),
        swift_unknownObjectRelease(v8),
        !v9))
  {
    v5 = v38;
LABEL_8:

    return;
  }
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend((id)objc_opt_self(CABasicAnimation), "animationWithKeyPath:", v10);

  v12 = v11;
  v13 = 0.0;
  if ((a1 & 1) != 0)
    objc_msgSend(v38, "duration", 0.0);
  objc_msgSend(v12, "setDuration:", v13);

  objc_msgSend(v12, "setFillMode:", kCAFillModeBoth);
  isa = CGFloat._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v12, "setFromValue:", isa);

  v15 = CGFloat._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v12, "setToValue:", v15);

  objc_msgSend(v12, "setRemovedOnCompletion:", 0);
  v16 = v12;
  objc_msgSend(v9, "controlPoint1");
  v18 = v17;
  objc_msgSend(v9, "controlPoint1");
  v20 = v19;
  objc_msgSend(v9, "controlPoint2");
  v22 = v21;
  objc_msgSend(v9, "controlPoint2");
  v24 = v23;
  v25 = objc_allocWithZone((Class)CAMediaTimingFunction);
  *(float *)&v26 = v18;
  *(float *)&v27 = v20;
  *(float *)&v28 = v22;
  *(float *)&v29 = v24;
  v30 = objc_msgSend(v25, "initWithControlPoints::::", v26, v27, v28, v29);
  objc_msgSend(v16, "setTimingFunction:", v30);

  v31 = objc_msgSend(v2, "layer");
  objc_msgSend(v31, "setShouldRasterize:", 0);

  v32 = (void *)objc_opt_self(CATransaction);
  objc_msgSend(v32, "begin");
  v33 = swift_allocObject(&unk_1011071C8, 24, 7);
  *(_QWORD *)(v33 + 16) = v2;
  aBlock[4] = sub_100BF1FF0;
  aBlock[5] = v33;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001DBD98;
  aBlock[3] = &unk_1011071E0;
  v34 = _Block_copy(aBlock);
  v35 = v2;
  objc_msgSend(v32, "setCompletionBlock:", v34, swift_release().n128_f64[0]);
  _Block_release(v34);
  v36 = objc_msgSend(v35, "layer");
  v37 = String._bridgeToObjectiveC()();
  objc_msgSend(v36, "addAnimation:forKey:", v16, v37);

  objc_msgSend(v32, "commit");
  *(double *)&v2[v6] = a2;
}

void sub_100BF0AD4(void *a1)
{
  id v1;

  v1 = objc_msgSend(a1, "layer");
  objc_msgSend(v1, "setShouldRasterize:", 1);

}

uint64_t sub_100BF0B18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  uint64_t (*v14)(void);
  void (*v15)(uint64_t *__return_ptr);
  void *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  id v35;
  NSString v36;
  uint64_t v37;
  Class isa;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  NSString *v47;
  NSString *v48;
  id v49;
  id v50;
  id v51;
  id v52;
  NSString v53;
  Class v54;
  id v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  char v66;
  id v67;
  id v68;
  Swift::Int v69;
  uint64_t v70;
  Swift::Int v71;
  uint64_t v72;
  double v73;
  double v74;
  char v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  char v97;
  uint64_t v98;
  Swift::Int v99;
  Swift::Int v100;
  uint64_t v101;
  id v102;
  void *v103;
  id v104;
  char *v105;
  char *v106;
  uint64_t v107;
  Swift::Int v108;
  void *v109;
  char *v110;
  void *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  Swift::Int v115;
  void *v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  uint64_t v122;
  _QWORD *v123;
  char v124;
  char v125;
  id v126;
  char *v127;
  void *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  char v133;
  char v134;
  id v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  id v140;
  void (*v141)(char *, uint64_t);
  NSString *v142;
  id v143;
  __int128 v144;
  id v145;
  id v146;
  uint64_t v147;
  uint64_t v148;
  id v149;
  _QWORD v150[3];
  char v151;
  unsigned __int8 v152;
  uint64_t v153;
  uint64_t (*v154)(void);
  void *v155;
  uint64_t (*v156)(void);
  uint64_t v157;
  void (*v158)(uint64_t *__return_ptr);
  void *v159;
  uint64_t v160;
  _QWORD v161[5];
  uint64_t v162[8];
  uint64_t v163[8];
  uint64_t v164[8];
  uint64_t v165[6];
  char v166;
  _BYTE v167[24];
  uint64_t v168;
  char v169;
  _QWORD *v170;
  _QWORD v171[3];
  uint64_t v172;
  _QWORD *v173;
  _OWORD v174[34];

  v1 = v0;
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v3 = (char *)&v136 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for String.LocalizationValue(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v136 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v9 = (char *)&v136 - v8;
  sub_100BEF52C();
  v10 = v0 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
  swift_beginAccess(v10, &v160, 0, 0);
  sub_100064C78(v10, (uint64_t)v161);
  v11 = sub_100007E8C(&qword_1011DF470);
  if (swift_dynamicCast(v150, v161, v11, &type metadata for Lyrics.TextLine, 0))
  {
    LODWORD(v146) = v152;
    v12 = v153;
    v13 = v154;
    v14 = v156;
    v15 = v158;
    v16 = v159;
    v148 = v157;
    v149 = v155;
    v17 = *(_QWORD *)(v156() + 16);
    v18 = swift_bridgeObjectRelease();
    v19 = v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView;
    v20 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView);
    if (v17)
    {
      v147 = v12;
      v21 = v1;
      if (v20)
      {
        v22 = _s19SBS_TextContentViewCMa();
        if (swift_dynamicCastClass(v20, v22))
        {
          v145 = v20;
          v143 = (id)v13();
          *(_QWORD *)&v144 = v23;
          v24 = v14();
          v142 = *(NSString **)(v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_alignment);
          v15(v163);
          v25 = sub_100BF1F84((uint64_t)v163, (uint64_t)v174);
          v26 = *((_QWORD *)&v174[1] + 1);
          if (*((_QWORD *)&v174[1] + 1))
          {
            v141 = *(void (**)(char *, uint64_t))&v174[1];
            swift_bridgeObjectRetain();
            v25 = (uint64_t)sub_100BD0A20(v163);
          }
          else
          {
            v141 = 0;
          }
          v130 = v147;
          ((void (*)(uint64_t *__return_ptr, uint64_t))v15)(v164, v25);
          v131 = sub_100BF1F84((uint64_t)v164, (uint64_t)v171);
          if (v172)
          {
            v132 = v173;
            swift_bridgeObjectRetain();
            v131 = (uint64_t)sub_100BD0A20(v164);
          }
          else
          {
            v132 = _swiftEmptyArrayStorage;
          }
          ((void (*)(uint64_t *__return_ptr, uint64_t))v15)(v165, v131);
          sub_100BF1F84((uint64_t)v165, (uint64_t)v167);
          v133 = v168;
          if (v168)
          {
            v134 = v169;
            sub_100BD0A20(v165);
            v133 = v134 & 1;
          }
          sub_100BEAA94(v143, v144, v24, (uint64_t)v142, (char)v146, v130, (uint64_t)v141, v26, (uint64_t)v132, v133);
          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_48;
        }
      }
      v145 = (id)((uint64_t (*)(__n128))v13)(v18);
      *(_QWORD *)&v144 = v85;
      v86 = v14();
      v142 = *(NSString **)(v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_alignment);
      v87 = swift_bridgeObjectRetain();
      ((void (*)(uint64_t *__return_ptr, uint64_t))v15)(v162, v87);
      v88 = sub_100BF1F84((uint64_t)v162, (uint64_t)v171);
      v89 = v172;
      if (v172)
      {
        v141 = (void (*)(char *, uint64_t))v171[2];
        swift_bridgeObjectRetain();
        v88 = (uint64_t)sub_100BD0A20(v162);
      }
      else
      {
        v141 = 0;
      }
      ((void (*)(uint64_t *__return_ptr, uint64_t))v15)(v163, v88);
      v122 = sub_100BF1F84((uint64_t)v163, (uint64_t)v167);
      if (v168)
      {
        v123 = v170;
        swift_bridgeObjectRetain();
        v122 = (uint64_t)sub_100BD0A20(v163);
      }
      else
      {
        v123 = _swiftEmptyArrayStorage;
      }
      v143 = v16;
      ((void (*)(uint64_t *__return_ptr, uint64_t))v15)(v164, v122);
      sub_100BF1F84((uint64_t)v164, (uint64_t)v165);
      if (v165[3])
      {
        v124 = v166;
        sub_100BD0A20(v164);
        v125 = v124 & 1;
      }
      else
      {
        v125 = 0;
      }
      memcpy(v174, (const void *)(v21 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs), 0x219uLL);
      v126 = objc_allocWithZone((Class)_s19SBS_TextContentViewCMa());
      sub_10024E6C8((uint64_t)v174);
      v127 = sub_100BEACE8((uint64_t)v145, v144, v86, (uint64_t)v142, (char)v146, v147, (uint64_t)v141, v89, (uint64_t)v123, v125, v174);
      v128 = *(void **)v19;
      *(_QWORD *)v19 = v127;
      *(_QWORD *)(v19 + 8) = &off_101106A98;
      v129 = v127;
      sub_100BEF5D8(v128);
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();

    }
    else
    {
      if (v20)
      {
        v90 = _s15TextContentViewCMa();
        v91 = swift_dynamicCastClass(v20, v90);
        if (v91)
        {
          v92 = v91;
          v146 = v20;
          v93 = v13();
          v94 = v92 + OBJC_IVAR___MusicTextContentView_content;
          v147 = v12;
          v96 = *(void **)(v92 + OBJC_IVAR___MusicTextContentView_content);
          v95 = *(_QWORD *)(v92 + OBJC_IVAR___MusicTextContentView_content + 8);
          v97 = *(_BYTE *)(v92 + OBJC_IVAR___MusicTextContentView_content + 16);
          *(_QWORD *)v94 = v93;
          *(_QWORD *)(v94 + 8) = v98;
          *(_BYTE *)(v94 + 16) = 0;
          swift_bridgeObjectRetain_n(v98, 2);
          sub_100BEEF98(v96, v95, v97);
          sub_100BEEFB8(v96, v95, v97);
          v99 = sub_100BBFE48((uint64_t)&off_101102898);
          sub_100BEEAE4(v99);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_100BEEFB8(v96, v95, v97);
          swift_bridgeObjectRelease();
          *(_QWORD *)(v92 + OBJC_IVAR___MusicTextContentView_alignment) = *(_QWORD *)(v1
                                                                                    + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_alignment);
          v100 = sub_100BBFE48((uint64_t)&off_1011028C0);
          sub_100BEEAE4(v100);

          swift_release();
          swift_release();
          swift_release();
LABEL_48:
          swift_bridgeObjectRelease();
LABEL_49:
          swift_bridgeObjectRelease();
          return _s5Music18DragDropToPlaylistV6OriginVwxx_0(v161);
        }
      }
      v111 = (void *)((uint64_t (*)(__n128))v13)(v18);
      v113 = v112;
      memcpy(v174, (const void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs), 0x219uLL);
      objc_allocWithZone((Class)_s15TextContentViewCMa());
      sub_10024E6C8((uint64_t)v174);
      v114 = sub_100BEE6B4(v111, v113, 0, (uint64_t)v174);
      *(_QWORD *)&v114[OBJC_IVAR___MusicTextContentView_alignment] = *(_QWORD *)(v1
                                                                               + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_alignment);
      v115 = sub_100BBFE48((uint64_t)&off_1011028E8);
      sub_100BEEAE4(v115);
      swift_bridgeObjectRelease();
      v116 = *(void **)v19;
      *(_QWORD *)v19 = v114;
      *(_QWORD *)(v19 + 8) = &off_101106FD8;
      v117 = v114;
      sub_100BEF5D8(v116);
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();

    }
  }
  else if (swift_dynamicCast(v150, v161, v11, &type metadata for Lyrics.SongwritersLine, 0))
  {
    v147 = v153;
    v148 = v1;
    v149 = objc_msgSend(objc_allocWithZone((Class)NSMutableAttributedString), "init");
    String.LocalizationValue.init(stringLiteral:)(0x206E657474697257, 0xEC000000203A7942);
    v146 = *(id *)(v5 + 16);
    ((void (*)(char *, char *, uint64_t))v146)(v7, v9, v4);
    if (qword_1011DDE30 != -1)
      swift_once(&qword_1011DDE30, sub_100BA7618);
    v27 = qword_10124F040;
    static Locale.current.getter((id)qword_10124F040);
    v28 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v27, v3, 0, 0, 256);
    v137 = v29;
    v138 = v28;
    v141 = *(void (**)(char *, uint64_t))(v5 + 8);
    v141(v9, v4);
    v145 = (id)sub_100007E8C(&qword_1011DF960);
    v30 = swift_allocObject(v145, 72, 7);
    v144 = xmmword_100EA7AA0;
    *(_OWORD *)(v30 + 16) = xmmword_100EA7AA0;
    *(_QWORD *)(v30 + 32) = NSFontAttributeName;
    v31 = (void *)objc_opt_self(UIFontMetrics);
    v143 = v31;
    v142 = NSFontAttributeName;
    v32 = objc_msgSend(v31, "defaultMetrics");
    v140 = (id)objc_opt_self(UIFont);
    v33 = objc_msgSend(v140, "systemFontOfSize:weight:", 22.0, UIFontWeightBold);
    v34 = objc_msgSend(v32, "scaledFontForFont:", v33);

    v139 = sub_10004A07C(0, (unint64_t *)&qword_1011DE3F8, UIFont_ptr);
    *(_QWORD *)(v30 + 64) = v139;
    *(_QWORD *)(v30 + 40) = v34;
    sub_100BA80A0(v30);
    v35 = objc_allocWithZone((Class)NSAttributedString);
    v36 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    _s3__C3KeyVMa_2(0);
    v138 = v37;
    v137 = sub_100BE3360();
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v39 = objc_msgSend(v35, "initWithString:attributes:", v36, isa, swift_bridgeObjectRelease().n128_f64[0]);

    v136 = v39;
    objc_msgSend(v149, "appendAttributedString:", v39);
    *(_QWORD *)&v174[0] = v147;
    String.LocalizationValue.init(stringLiteral:)(8236, 0xE200000000000000);
    ((void (*)(char *, char *, uint64_t))v146)(v7, v9, v4);
    v40 = qword_10124F040;
    static Locale.current.getter((id)qword_10124F040);
    v41 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v40, v3, 0, 0, 256);
    v43 = v42;
    v141(v9, v4);
    v44 = sub_100007E8C(&qword_1011E01D8);
    v45 = sub_100BF1F38();
    BidirectionalCollection<>.joined(separator:)(v41, v43, v44, v45);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v46 = swift_allocObject(v145, 72, 7);
    *(_OWORD *)(v46 + 16) = v144;
    v47 = v142;
    *(_QWORD *)(v46 + 32) = v142;
    v48 = v47;
    v49 = objc_msgSend(v143, "defaultMetrics");
    v50 = objc_msgSend(v140, "systemFontOfSize:weight:", 22.0, UIFontWeightMedium);
    v51 = objc_msgSend(v49, "scaledFontForFont:", v50);

    *(_QWORD *)(v46 + 64) = v139;
    *(_QWORD *)(v46 + 40) = v51;
    sub_100BA80A0(v46);
    v52 = objc_allocWithZone((Class)NSAttributedString);
    v53 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v54 = Dictionary._bridgeToObjectiveC()().super.isa;
    v55 = objc_msgSend(v52, "initWithString:attributes:", v53, v54, swift_bridgeObjectRelease().n128_f64[0]);

    v56 = v149;
    objc_msgSend(v149, "appendAttributedString:", v55);
    v57 = v148;
    v58 = v148 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView;
    v59 = *(void **)(v148 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView);
    if (v59)
    {
      v60 = _s15TextContentViewCMa();
      v61 = swift_dynamicCastClass(v59, v60);
      if (v61)
      {
        v62 = v61;
        v63 = v61 + OBJC_IVAR___MusicTextContentView_content;
        v64 = *(void **)(v61 + OBJC_IVAR___MusicTextContentView_content);
        v65 = *(_QWORD *)(v61 + OBJC_IVAR___MusicTextContentView_content + 8);
        v66 = *(_BYTE *)(v61 + OBJC_IVAR___MusicTextContentView_content + 16);
        *(_QWORD *)v63 = v56;
        *(_QWORD *)(v63 + 8) = 0;
        *(_BYTE *)(v63 + 16) = 1;
        v67 = v56;
        v68 = v59;
        sub_100BEEF98(v64, v65, v66);
        sub_100BEEFB8(v64, v65, v66);
        v69 = sub_100BBFE48((uint64_t)&off_101102910);
        sub_100BEEAE4(v69);

        swift_bridgeObjectRelease();
        sub_100BEEFB8(v64, v65, v66);
        v70 = 4;
        if (!*(_BYTE *)(v57 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 72))
          v70 = *(_QWORD *)(v57 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 64);
        *(_QWORD *)(v62 + OBJC_IVAR___MusicTextContentView_alignment) = v70;
        v71 = sub_100BBFE48((uint64_t)&off_101102938);
        sub_100BEEAE4(v71);

        goto LABEL_49;
      }
    }
    v101 = v57 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs;
    memcpy(v174, (const void *)(v57 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs), 0x219uLL);
    v102 = objc_allocWithZone((Class)_s15TextContentViewCMa());
    v103 = v56;
    v104 = v56;
    sub_10024E6C8((uint64_t)v174);
    v105 = sub_100BEE6B4(v103, 0, 1, (uint64_t)v174);
    v106 = v105;
    v107 = *(_QWORD *)(v101 + 64);
    if (*(_BYTE *)(v101 + 72))
      v107 = 4;
    *(_QWORD *)&v105[OBJC_IVAR___MusicTextContentView_alignment] = v107;
    v108 = sub_100BBFE48((uint64_t)&off_101102960);
    sub_100BEEAE4(v108);
    swift_bridgeObjectRelease();
    v109 = *(void **)v58;
    *(_QWORD *)v58 = v106;
    *(_QWORD *)(v58 + 8) = &off_101106FD8;
    v110 = v106;
    sub_100BEF5D8(v109);

  }
  else if (swift_dynamicCast(v150, v161, v11, &type metadata for Lyrics.InstrumentalLine, 0))
  {
    v72 = v150[0];
    v74 = *(double *)&v150[1];
    v73 = *(double *)&v150[2];
    v75 = v151;
    v76 = v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView;
    v77 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView);
    if (v77 && (v78 = _s23InstrumentalContentViewCMa(), (v79 = swift_dynamicCastClass(v77, v78)) != 0))
    {
      v80 = v79;
      v81 = v79 + OBJC_IVAR___MusicInstrumentalContentView_line;
      *(_QWORD *)v81 = v72;
      *(double *)(v81 + 8) = v74;
      *(double *)(v81 + 16) = v73;
      *(_BYTE *)(v81 + 24) = v75;
      *(_BYTE *)(v79 + OBJC_IVAR___MusicInstrumentalContentView_isSelected) = 0;
      v82 = v77;
      sub_100BEC148();
      v83 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_alignment);
      v84 = *(_QWORD *)(v80 + OBJC_IVAR___MusicInstrumentalContentView_alignment);
      *(_QWORD *)(v80 + OBJC_IVAR___MusicInstrumentalContentView_alignment) = v83;
      if (v83 != v84)
        sub_100BEDBB4();
    }
    else
    {
      memcpy(v174, (const void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs), 0x219uLL);
      objc_allocWithZone((Class)_s23InstrumentalContentViewCMa());
      sub_10024E6C8((uint64_t)v174);
      v118 = (char *)sub_100BEBF48(v72, v75, v174, v74, v73);
      v119 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_alignment);
      v120 = *(_QWORD *)&v118[OBJC_IVAR___MusicInstrumentalContentView_alignment];
      *(_QWORD *)&v118[OBJC_IVAR___MusicInstrumentalContentView_alignment] = v119;
      if (v119 != v120)
        sub_100BEDBB4();
      v121 = *(void **)v76;
      *(_QWORD *)v76 = v118;
      *(_QWORD *)(v76 + 8) = &off_101106C00;
      v82 = v118;
      sub_100BEF5D8(v121);

    }
  }
  return _s5Music18DragDropToPlaylistV6OriginVwxx_0(v161);
}

id sub_100BF1A78()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SyncedLyricsLineView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SyncedLyricsLineView()
{
  return objc_opt_self(_TtC11MusicCoreUI20SyncedLyricsLineView);
}

char *sub_100BF1B5C(_QWORD *a1, uint64_t a2, const void *a3)
{
  _BYTE *v3;
  uint64_t v7;
  uint64_t v8;
  id v9;
  char *v10;
  char *v11;
  char *v12;
  id v13;
  NSString v14;
  id v15;
  char *v16;
  uint64_t v17;
  void *v18;
  char *v19;
  __int128 v20;
  __int128 v21;
  id v22;
  id v23;
  id v24;
  double v25;
  double v26;
  uint64_t v27;
  id v28;
  Class isa;
  id v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  Class v35;
  _OWORD v37[3];
  objc_super v38;

  v3[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_isScrolling] = 1;
  v7 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_alignment;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_alignment] = 0;
  v8 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_containerView;
  v9 = objc_allocWithZone((Class)UIView);
  v10 = v3;
  *(_QWORD *)&v3[v8] = objc_msgSend(v9, "init");
  v11 = &v10[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView____lazy_storage___backgroundView] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_blurRadius] = 0;
  v12 = &v10[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_previousBlurRadius];
  *(_QWORD *)v12 = 0;
  v12[8] = 1;
  sub_100064C78((uint64_t)a1, (uint64_t)&v10[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line]);
  *(_QWORD *)&v3[v7] = a2;
  memcpy(&v10[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs], a3, 0x219uLL);
  static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterGaussianBlur);
  v13 = objc_allocWithZone((Class)CAFilter);
  sub_10024E6C8((uint64_t)a3);
  v14 = String._bridgeToObjectiveC()();
  v15 = objc_msgSend(v13, "initWithType:", v14, swift_bridgeObjectRelease().n128_f64[0]);

  *(_QWORD *)&v10[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_blurFilter] = v15;
  v38.receiver = v10;
  v38.super_class = (Class)type metadata accessor for SyncedLyricsLineView();
  v16 = (char *)objc_msgSendSuper2(&v38, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v17 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_containerView;
  v18 = *(void **)&v16[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_containerView];
  v19 = v16;
  objc_msgSend(v18, "setUserInteractionEnabled:", 0);
  objc_msgSend(*(id *)&v16[v17], "setAutoresizingMask:", 18);
  objc_msgSend(v19, "addSubview:", *(_QWORD *)&v16[v17]);
  objc_msgSend(v19, "setExclusiveTouch:", 1);
  v20 = *(_OWORD *)&v19[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 296];
  v21 = *(_OWORD *)&v19[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 312];
  v37[0] = *(_OWORD *)&v19[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 280];
  v37[1] = v20;
  v37[2] = v21;
  objc_msgSend(v19, "setTransform:", v37);
  v22 = objc_msgSend(v19, "layer");
  objc_msgSend(v22, "setShouldRasterize:", 1);

  v23 = objc_msgSend(v19, "layer");
  v24 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v24, "scale");
  v26 = v25;

  objc_msgSend(v23, "setRasterizationScale:", v26);
  v27 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_blurFilter;
  v28 = *(id *)&v19[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_blurFilter];
  isa = Int._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v28, "setValue:forKey:", isa, kCAFilterInputRadius);

  v30 = objc_msgSend(v19, "layer");
  v31 = sub_100007E8C(&qword_1011DEF80);
  v32 = swift_allocObject(v31, 64, 7);
  *(_OWORD *)(v32 + 16) = xmmword_100EA7AA0;
  v33 = *(void **)&v19[v27];
  *(_QWORD *)(v32 + 56) = sub_10004A07C(0, (unint64_t *)&qword_1011DEF88, CAFilter_ptr);
  *(_QWORD *)(v32 + 32) = v33;
  v34 = v33;
  v35 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v30, "setFilters:", v35, swift_bridgeObjectRelease().n128_f64[0]);

  sub_100BF0B18();
  sub_100BF01A0();

  _s5Music18DragDropToPlaylistV6OriginVwxx_0(a1);
  return v19;
}

unint64_t sub_100BF1F38()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E01E0;
  if (!qword_1011E01E0)
  {
    v1 = sub_100044B54(&qword_1011E01D8);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1011E01E0);
  }
  return result;
}

uint64_t sub_100BF1F84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011DF188);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100BF1FCC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100BF1FF0()
{
  uint64_t v0;

  sub_100BF0AD4(*(void **)(v0 + 16));
}

uint64_t sub_100BF1FF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100BF2008(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_100BF2010(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

void sub_100BF2034()
{
  uint64_t v0;

  sub_100BF05D4(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_100BF2040()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

void sub_100BF2064()
{
  _BYTE *v0;
  uint64_t v1;
  _QWORD *v2;
  char *v3;

  v0[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_isScrolling] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_alignment] = 0;
  v1 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_containerView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v2 = &v0[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
  *v2 = 0;
  v2[1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView____lazy_storage___backgroundView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_blurRadius] = 0;
  v3 = &v0[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_previousBlurRadius];
  *(_QWORD *)v3 = 0;
  v3[8] = 1;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E2B820, "MusicCoreUI/SyncedLyricsLineView.swift", 38, 2, 165, 0);
  __break(1u);
}

uint64_t sub_100BF2144()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100BF2170()
{
  uint64_t v0;

  sub_100BEFF00(*(void **)(v0 + 16), *(char **)(v0 + 24));
}

id sub_100BF2178()
{
  uint64_t v0;

  return sub_100BEFFB0(*(char **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t SegueResponseContext.completionHandler.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_retain(v0[1]);
  return v1;
}

double SyncedLyricsManager.Configuration.maxEndTimeOffset.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

uint64_t SyncedLyricsManager.Configuration.init(animationDuration:finishLineAnimationDuration:maxEndTimeOffset:maxSelectedLines:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  *(_QWORD *)a4 = result;
  *(_QWORD *)(a4 + 8) = a2;
  *(double *)(a4 + 16) = a5;
  *(double *)(a4 + 24) = a6;
  *(_QWORD *)(a4 + 32) = a3;
  return result;
}

uint64_t SyncedLyricsManager.lyrics.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 16));
}

uint64_t SyncedLyricsManager.configuration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[24];

  swift_beginAccess(v1 + 24, v6, 0, 0);
  v3 = *(_QWORD *)(v1 + 32);
  v4 = *(_QWORD *)(v1 + 56);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  return swift_retain(v3);
}

double SyncedLyricsManager.configuration.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  double result;
  _BYTE v6[24];

  swift_beginAccess(v1 + 24, v6, 1, 0);
  v3 = *(_QWORD *)(v1 + 32);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_QWORD *)(v1 + 56) = *(_QWORD *)(a1 + 32);
  *(_QWORD *)&result = swift_release(v3).n128_u64[0];
  return result;
}

uint64_t SyncedLyricsManager.delegate.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 64, v2, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v0 + 64);
}

double SyncedLyricsManager.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;
  _BYTE v6[24];

  swift_beginAccess(v2 + 64, v6, 1, 0);
  *(_QWORD *)(v2 + 72) = a2;
  swift_unknownObjectWeakAssign(v2 + 64, a1);
  *(_QWORD *)&result = swift_unknownObjectRelease(a1).n128_u64[0];
  return result;
}

void (*SyncedLyricsManager.delegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t Strong;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess(v1 + 64, v3, 33, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 64);
  v5 = *(_QWORD *)(v1 + 72);
  v3[3] = Strong;
  v3[4] = v5;
  return sub_100BF2398;
}

void sub_100BF2398(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  *(_QWORD *)(v5 + 72) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign(v5 + 64, v4);
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease(v3[3]);
    swift_endAccess(v3);
  }
  else
  {
    swift_endAccess(v3);
    swift_unknownObjectRelease(v4);
  }
  free(v3);
}

uint64_t sub_100BF2408(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[24];

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess(*a2 + 80, v6, 1, 0);
  v4 = *(_QWORD *)(v3 + 80);
  *(_QWORD *)(v3 + 80) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease(v4);
}

uint64_t SyncedLyricsManager.selectedLines.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 80, v2, 0, 0);
  return swift_bridgeObjectRetain();
}

uint64_t SyncedLyricsManager.isPlayingSpatial.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 88, v2, 0, 0);
  return *(unsigned __int8 *)(v0 + 88);
}

void SyncedLyricsManager.isPlayingSpatial.setter(char a1)
{
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v1 + 88, v3, 1, 0);
  *(_BYTE *)(v1 + 88) = a1;
}

uint64_t (*SyncedLyricsManager.isPlayingSpatial.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 88, a1, 33, 0);
  return j_j__swift_endAccess;
}

void SyncedLyricsManager.spatialOffset.getter()
{
  uint64_t v0;
  _BYTE v1[24];

  swift_beginAccess(v0 + 88, v1, 0, 0);
  if (*(_BYTE *)(v0 + 88) == 1)
    Lyrics.spatialOffset.getter();
}

uint64_t SyncedLyricsManager.adjustedElapsedTime.getter()
{
  uint64_t v0;
  double (*v1)(__n128);
  uint64_t v2;
  __n128 v3;
  double v4;
  double v5;
  double v6;
  uint64_t result;
  uint64_t v8;
  _BYTE v9[24];

  swift_beginAccess(v0 + 96, v9, 0, 0);
  v1 = *(double (**)(__n128))(v0 + 96);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 104);
    v3 = swift_retain();
    v4 = v1(v3);
    swift_beginAccess(v0 + 88, &v8, 0, 0);
    v5 = 0.0;
    if (*(_BYTE *)(v0 + 88) == 1)
    {
      Lyrics.spatialOffset.getter();
      v5 = v6;
    }
    sub_10004BA30((uint64_t)v1, v2);
    *(double *)&result = v4 - v5;
  }
  else
  {
    *(double *)&result = 0.0;
  }
  return result;
}

void sub_100BF2648()
{
  uint64_t v0;
  uint64_t v1;
  double (*v2)(__n128);
  uint64_t v3;
  __n128 v4;
  double v5;
  double v6;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t Strong;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[24];
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  _QWORD v42[3];
  uint64_t v43;
  uint64_t v44;
  _BYTE v45[24];
  _BYTE v46[24];

  v1 = v0;
  swift_beginAccess(v0 + 96, v46, 0, 0);
  v2 = *(double (**)(__n128))(v0 + 96);
  if (!v2)
    goto LABEL_27;
  v3 = *(_QWORD *)(v0 + 104);
  v4 = swift_retain();
  v5 = v2(v4);
  swift_beginAccess(v0 + 88, v45, 0, 0);
  v6 = 0.0;
  if (*(_BYTE *)(v0 + 88) == 1)
  {
    Lyrics.spatialOffset.getter();
    v6 = v7;
  }
  sub_10004BA30((uint64_t)v2, v3);
  v8 = v5 - v6;
  v9 = *(_QWORD *)(v0 + 16);
  Lyrics.line(before:useOriginalLines:)(0, (uint64_t)&v36, v8 + 0.1);
  if (!*((_QWORD *)&v37 + 1))
  {
    v13 = *(_QWORD *)(v9 + 40);
    if (*(_QWORD *)(v13 + 16))
    {
      sub_100064C78(v13 + 32, (uint64_t)&v39);
    }
    else
    {
      v41 = 0;
      v39 = 0u;
      v40 = 0u;
    }
    sub_100BF3E04((uint64_t)&v36);
    if (*((_QWORD *)&v40 + 1))
      goto LABEL_6;
    goto LABEL_26;
  }
  sub_100064C48(&v36, (uint64_t)&v39);
  if (!*((_QWORD *)&v40 + 1))
  {
LABEL_26:
    sub_100BF3E04((uint64_t)&v39);
LABEL_27:
    SyncedLyricsManager.update()();
    return;
  }
LABEL_6:
  sub_100064C48(&v39, (uint64_t)v42);
  v11 = v43;
  v10 = v44;
  sub_100007E68(v42, v43);
  v12 = (*(double (**)(uint64_t))(*(_QWORD *)(v10 + 8) + 8))(v11);
  sub_100064C78((uint64_t)v42, (uint64_t)&v39);
  if (v12 >= v8)
  {
    v15 = *((_QWORD *)&v40 + 1);
    v14 = v41;
    sub_100007E68(&v39, *((uint64_t *)&v40 + 1));
    v16 = vabdd_f64(v8, (*(double (**)(uint64_t))(*(_QWORD *)(v14 + 8) + 8))(v15));
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v39);
    if (v16 > 0.1)
    {
      sub_100064C78((uint64_t)v42, (uint64_t)&v36);
      swift_beginAccess(v1 + 112, v35, 33, 0);
      sub_100BF3FAC((uint64_t)&v36, v1 + 112);
      swift_endAccess(v35);
      sub_100BF3E04((uint64_t)&v36);
      swift_beginAccess(v1 + 80, &v36, 1, 0);
      *(_QWORD *)(v1 + 80) = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease();
      swift_beginAccess(v1 + 64, v35, 0, 0);
      Strong = swift_unknownObjectWeakLoadStrong(v1 + 64);
      if (Strong)
      {
        v18 = Strong;
        v19 = *(_QWORD *)(v1 + 72);
        ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v1, ObjectType, v19);
        swift_unknownObjectRelease(v18);
      }
      v21 = swift_unknownObjectWeakLoadStrong(v1 + 64);
      if (!v21)
        goto LABEL_23;
      v22 = v21;
      v23 = *(_QWORD *)(v1 + 72);
      v24 = swift_getObjectType();
      (*(void (**)(uint64_t, _QWORD *, _QWORD, uint64_t, uint64_t, double))(v23 + 16))(v1, v42, 0, v24, v23, v8);
      goto LABEL_22;
    }
  }
  else
  {
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v39);
  }
  v25 = v43;
  v26 = v44;
  sub_100007E68(v42, v43);
  v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 16))(v25, v26);
  v28 = v27 + 1;
  if (__OFADD__(v27, 1))
  {
    __break(1u);
  }
  else
  {
    v29 = *(_QWORD *)(v9 + 40);
    if (v28 >= *(_QWORD *)(v29 + 16))
    {
      v38 = 0;
      v36 = 0u;
      v37 = 0u;
      goto LABEL_20;
    }
    if ((v28 & 0x8000000000000000) == 0)
    {
      sub_100064C78(v29 + 40 * v28 + 32, (uint64_t)&v36);
LABEL_20:
      swift_beginAccess(v1 + 112, v35, 33, 0);
      sub_100BF3FAC((uint64_t)&v36, v1 + 112);
      swift_endAccess(v35);
      sub_100BF3E04((uint64_t)&v36);
      v30 = sub_100007E8C(&qword_1011DF468);
      v31 = swift_allocObject(v30, 72, 7);
      *(_OWORD *)(v31 + 16) = xmmword_100EA7AA0;
      sub_100064C78((uint64_t)v42, v31 + 32);
      swift_beginAccess(v1 + 80, &v36, 1, 0);
      *(_QWORD *)(v1 + 80) = v31;
      swift_bridgeObjectRelease();
      swift_beginAccess(v1 + 64, v35, 0, 0);
      v32 = swift_unknownObjectWeakLoadStrong(v1 + 64);
      if (!v32)
      {
LABEL_23:
        _s5Music18DragDropToPlaylistV6OriginVwxx_0(v42);
        return;
      }
      v22 = v32;
      v33 = *(_QWORD *)(v1 + 72);
      v34 = swift_getObjectType();
      (*(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t, double))(v33 + 16))(v1, v42, 1, v34, v33, v8);
LABEL_22:
      swift_unknownObjectRelease(v22);
      goto LABEL_23;
    }
  }
  __break(1u);
}

uint64_t SyncedLyricsManager.elapsedTimeProvider.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + 96, v3, 0, 0);
  v1 = *(_QWORD *)(v0 + 96);
  sub_100048AAC(v1, *(_QWORD *)(v0 + 104));
  return v1;
}

uint64_t SyncedLyricsManager.elapsedTimeProvider.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[24];

  swift_beginAccess(v2 + 96, v8, 1, 0);
  v5 = *(_QWORD *)(v2 + 96);
  v6 = *(_QWORD *)(v2 + 104);
  *(_QWORD *)(v2 + 96) = a1;
  *(_QWORD *)(v2 + 104) = a2;
  sub_100048AAC(a1, a2);
  sub_10004BA30(v5, v6);
  sub_100BF2648();
  return sub_10004BA30(a1, a2);
}

void (*SyncedLyricsManager.elapsedTimeProvider.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + 96, a1, 33, 0);
  return sub_100BF2B54;
}

void sub_100BF2B54(uint64_t a1, char a2)
{
  swift_endAccess(a1);
  if ((a2 & 1) == 0)
    sub_100BF2648();
}

uint64_t SyncedLyricsManager.__allocating_init(lyrics:configuration:delegate:isPlayingSpatial:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;

  v11 = swift_allocObject(v5, 152, 7);
  ObjectType = swift_getObjectType();
  v13 = sub_100BF3CFC(a1, a2, a3, a5, v11, ObjectType, a4);
  swift_unknownObjectRelease(a3);
  return v13;
}

uint64_t SyncedLyricsManager.init(lyrics:configuration:delegate:isPlayingSpatial:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v12;

  ObjectType = swift_getObjectType();
  v12 = sub_100BF3CFC(a1, a2, a3, a5, v5, ObjectType, a4);
  swift_unknownObjectRelease(a3);
  return v12;
}

Swift::Void __swiftcall SyncedLyricsManager.update()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double (*v3)(__n128);
  uint64_t v4;
  __n128 v5;
  double v6;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  _UNKNOWN **v15;
  ValueMetadata *v16;
  double v17;
  double (*v18)(double);
  double v19;
  double (*v20)(double);
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t Strong;
  uint64_t v29;
  uint64_t v30;
  uint64_t ObjectType;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  double v59;
  uint64_t v60;
  _BYTE v61[24];
  __int128 v62;
  ValueMetadata *v63;
  _UNKNOWN **v64;
  double v65;
  _BYTE v66[40];
  _QWORD v67[3];
  uint64_t v68;
  uint64_t v69;
  _BYTE v70[24];
  _BYTE v71[24];
  _BYTE v72[24];
  _BYTE v73[24];
  _BYTE v74[24];
  _BYTE v75[24];
  _QWORD v76[3];
  uint64_t v77;
  uint64_t v78;

  v1 = v0;
  sub_100BF3948();
  v2 = v0 + 112;
  swift_beginAccess(v2, v75, 0, 0);
  sub_100BF3DBC(v2, (uint64_t)&v62);
  if (v63)
  {
    sub_100064C48(&v62, (uint64_t)v76);
    swift_beginAccess(v1 + 96, v74, 0, 0);
    v3 = *(double (**)(__n128))(v1 + 96);
    if (v3)
    {
      v4 = *(_QWORD *)(v1 + 104);
      v5 = swift_retain();
      v6 = v3(v5);
      swift_beginAccess(v1 + 88, v73, 0, 0);
      v7 = 0.0;
      if (*(_BYTE *)(v1 + 88) == 1)
      {
        Lyrics.spatialOffset.getter();
        v7 = v8;
      }
      sub_10004BA30((uint64_t)v3, v4);
      v9 = v1 + 80;
      swift_beginAccess(v1 + 80, v72, 0, 0);
      v10 = *(_QWORD *)(v1 + 80);
      v11 = *(_QWORD *)(v10 + 16);
      if (v11)
      {
        sub_100064C78(v10 + 40 * v11 - 8, (uint64_t)&v62);
        v13 = v77;
        v12 = v78;
        sub_100007E68(v76, v77);
        v14 = (*(double (**)(uint64_t))(*(_QWORD *)(v12 + 8) + 8))(v13);
        v16 = v63;
        v15 = v64;
        sub_100007E68(&v62, (uint64_t)v63);
        v17 = v14 - (*((double (**)(ValueMetadata *))v15[1] + 2))(v16);
        swift_beginAccess(v1 + 24, v71, 0, 0);
        v18 = *(double (**)(double))(v1 + 24);
        swift_retain();
        v19 = v18(v17);
        swift_release();
        _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v62);
      }
      else
      {
        swift_beginAccess(v1 + 24, v71, 0, 0);
        v20 = *(double (**)(double))(v1 + 24);
        swift_retain();
        v19 = v20(0.0);
        swift_release();
      }
      v21 = v6 - v7;
      v22 = *(_QWORD *)(*(_QWORD *)v9 + 16);
      if (v22)
      {
        sub_100064C78(*(_QWORD *)v9 + 40 * v22 - 8, (uint64_t)&v62);
        v23 = sub_100007E8C(&qword_1011DF470);
        if ((swift_dynamicCast(v67, &v62, v23, &type metadata for Lyrics.InstrumentalLine, 6) & 1) != 0)
        {
          v24 = v67[0];
          v25 = v67[1];
          v26 = v67[2];
          v27 = v68;
          swift_beginAccess(v1 + 64, &v60, 0, 0);
          Strong = swift_unknownObjectWeakLoadStrong(v1 + 64);
          if (Strong)
          {
            v29 = Strong;
            v30 = *(_QWORD *)(v1 + 72);
            ObjectType = swift_getObjectType();
            v63 = &type metadata for Lyrics.InstrumentalLine;
            v64 = &protocol witness table for Lyrics.InstrumentalLine;
            v32 = swift_allocObject(&unk_101107308, 48, 7);
            *(_QWORD *)&v62 = v32;
            *(_QWORD *)(v32 + 16) = v24;
            *(_QWORD *)(v32 + 24) = v25;
            *(_QWORD *)(v32 + 32) = v26;
            *(_BYTE *)(v32 + 40) = v27;
            (*(void (**)(uint64_t, __int128 *, uint64_t, uint64_t, double))(v30 + 24))(v1, &v62, ObjectType, v30, v21);
            swift_unknownObjectRelease(v29);
            _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v62);
          }
        }
      }
      swift_beginAccess(v1 + 24, v70, 0, 0);
      if (sub_100BF32E0(v76, v1, v21 + *(double *)(v1 + 40), v19) == 1)
      {
        v33 = *(_QWORD *)(*(_QWORD *)v9 + 16);
        if (v33)
        {
          v34 = *(_QWORD *)v9 + 32;
          swift_bridgeObjectRetain();
          swift_beginAccess(v1 + 64, v61, 0, 0);
          do
          {
            sub_100064C78(v34, (uint64_t)&v62);
            v35 = swift_unknownObjectWeakLoadStrong(v1 + 64);
            if (v35)
            {
              v36 = v35;
              v37 = *(_QWORD *)(v1 + 72);
              v38 = swift_getObjectType();
              (*(void (**)(uint64_t, __int128 *, uint64_t, uint64_t))(v37 + 40))(v1, &v62, v38, v37);
              swift_unknownObjectRelease(v36);
            }
            _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v62);
            v34 += 40;
            --v33;
          }
          while (v33);
          swift_bridgeObjectRelease();
        }
      }
      v40 = v77;
      v39 = v78;
      sub_100007E68(v76, v77);
      if ((*(double (**)(uint64_t))(*(_QWORD *)(v39 + 8) + 8))(v40) <= v21 + v19)
      {
        v41 = *(_QWORD *)(*(_QWORD *)v9 + 16);
        if (v41)
        {
          sub_100064C78(*(_QWORD *)v9 + 40 * v41 - 8, (uint64_t)v67);
          v43 = v77;
          v42 = v78;
          sub_100007E68(v76, v77);
          v44 = (*(double (**)(uint64_t))(*(_QWORD *)(v42 + 8) + 8))(v43);
          v46 = v68;
          v45 = v69;
          sub_100007E68(v67, v68);
          v47 = (*(double (**)(uint64_t))(*(_QWORD *)(v45 + 8) + 16))(v46);
          v49 = v68;
          v48 = v69;
          sub_100007E68(v67, v68);
          v50 = (*(double (**)(uint64_t))(*(_QWORD *)(v48 + 8) + 16))(v49) - *(double *)(v1 + 48);
          sub_100064C78((uint64_t)v76, (uint64_t)&v62);
          v51 = sub_100007E8C(&qword_1011DF470);
          if (swift_dynamicCast(v66, &v62, v51, &type metadata for Lyrics.InstrumentalLine, 6))
            goto LABEL_37;
          sub_100064C78((uint64_t)v67, (uint64_t)&v62);
          if (swift_dynamicCast(v66, &v62, v51, &type metadata for Lyrics.InstrumentalLine, 6))
            goto LABEL_37;
          if (*(_QWORD *)(*(_QWORD *)(v1 + 80) + 16) >= *(_QWORD *)(v1 + 56))
            goto LABEL_37;
          v52 = v77;
          v53 = v78;
          sub_100007E68(v76, v77);
          v54 = (*(uint64_t (**)(uint64_t, uint64_t))(v53 + 16))(v52, v53);
          v55 = v68;
          v56 = v69;
          sub_100007E68(v67, v68);
          if ((*(uint64_t (**)(uint64_t, uint64_t))(v56 + 16))(v55, v56) >= v54
            || (v58 = v77,
                v57 = v78,
                sub_100007E68(v76, v77),
                (*(double (**)(uint64_t))(*(_QWORD *)(v57 + 8) + 8))(v58) >= v21))
          {
LABEL_37:
            if (v50 < v21
              || (sub_100064C78((uint64_t)v67, (uint64_t)v66),
                  (swift_dynamicCast(&v62, v66, v51, &type metadata for Lyrics.TextLine, 6) & 1) != 0)
              && (v59 = v65,
                  swift_release(),
                  swift_release(),
                  swift_release(),
                  swift_bridgeObjectRelease(),
                  v59 - *(double *)(v1 + 48) < v21))
            {
              sub_100BF356C(v76, COERCE__INT64(v44 - v47), 0, v21);
            }
          }
          else
          {
            sub_100BF3718(v76);
          }
          _s5Music18DragDropToPlaylistV6OriginVwxx_0(v67);
        }
        else
        {
          sub_100BF356C(v76, 0, 1, v21);
        }
      }
    }
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v76);
  }
  else
  {
    sub_100BF3E04((uint64_t)&v62);
  }
}

uint64_t sub_100BF32E0(_QWORD *a1, uint64_t a2, double a3, double a4)
{
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v25;
  _BYTE v26[32];
  double v27;
  _BYTE v28[40];
  _BYTE v29[24];
  _BYTE v30[24];
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;

  v7 = a3 + a4;
  v9 = a1[3];
  v8 = a1[4];
  sub_100007E68(a1, v9);
  if ((*(double (**)(uint64_t))(*(_QWORD *)(v8 + 8) + 8))(v9) <= v7)
  {
    swift_beginAccess(a2 + 80, v30, 0, 0);
    v10 = *(_QWORD *)(a2 + 80);
    v11 = *(_QWORD *)(v10 + 16);
    if (v11)
    {
      sub_100064C78(v10 + 40 * v11 - 8, (uint64_t)v31);
      v13 = v32;
      v12 = v33;
      sub_100007E68(v31, v32);
      v14 = (*(double (**)(uint64_t))(*(_QWORD *)(v12 + 8) + 16))(v13);
      swift_beginAccess(a2 + 24, v29, 0, 0);
      v15 = v14 - *(double *)(a2 + 48);
      sub_100064C78((uint64_t)a1, (uint64_t)v26);
      v16 = sub_100007E8C(&qword_1011DF470);
      if ((swift_dynamicCast(v28, v26, v16, &type metadata for Lyrics.InstrumentalLine, 6) & 1) == 0)
      {
        sub_100064C78((uint64_t)v31, (uint64_t)v26);
        if (!swift_dynamicCast(v28, v26, v16, &type metadata for Lyrics.InstrumentalLine, 6)
          && *(_QWORD *)(*(_QWORD *)(a2 + 80) + 16) < *(_QWORD *)(a2 + 56))
        {
          v17 = a1[3];
          v18 = a1[4];
          sub_100007E68(a1, v17);
          v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 16))(v17, v18);
          v20 = v32;
          v21 = v33;
          sub_100007E68(v31, v32);
          if ((*(uint64_t (**)(uint64_t, uint64_t))(v21 + 16))(v20, v21) < v19)
          {
            v23 = a1[3];
            v22 = a1[4];
            sub_100007E68(a1, v23);
            if ((*(double (**)(uint64_t))(*(_QWORD *)(v22 + 8) + 8))(v23) < a3)
            {
              _s5Music18DragDropToPlaylistV6OriginVwxx_0(v31);
              return 2;
            }
          }
        }
      }
      if (v15 < a3
        || (sub_100064C78((uint64_t)v31, (uint64_t)v28),
            (swift_dynamicCast(v26, v28, v16, &type metadata for Lyrics.TextLine, 6) & 1) != 0)
        && (v25 = v27,
            swift_release(),
            swift_release(),
            swift_release(),
            swift_bridgeObjectRelease(),
            v25 - *(double *)(a2 + 48) < a3))
      {
        _s5Music18DragDropToPlaylistV6OriginVwxx_0(v31);
        return 1;
      }
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(v31);
    }
  }
  return 0;
}

void sub_100BF356C(_QWORD *a1, uint64_t a2, char a3, double a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t Strong;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  _BYTE v22[24];
  _OWORD v23[2];
  uint64_t v24;
  _BYTE v25[24];

  v5 = v4;
  v10 = sub_100007E8C(&qword_1011DF468);
  v11 = swift_allocObject(v10, 72, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100EA7AA0;
  sub_100064C78((uint64_t)a1, v11 + 32);
  swift_beginAccess(v5 + 10, v25, 1, 0);
  v5[10] = v11;
  swift_bridgeObjectRelease();
  v12 = v5[2];
  v13 = a1[3];
  v14 = a1[4];
  sub_100007E68(a1, v13);
  v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 16))(v13, v14);
  v16 = v15 + 1;
  if (__OFADD__(v15, 1))
  {
    __break(1u);
    goto LABEL_10;
  }
  v17 = *(_QWORD *)(v12 + 40);
  if (v16 < *(_QWORD *)(v17 + 16))
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      sub_100064C78(v17 + 40 * v16 + 32, (uint64_t)v23);
      goto LABEL_6;
    }
LABEL_10:
    __break(1u);
    return;
  }
  v24 = 0;
  memset(v23, 0, sizeof(v23));
LABEL_6:
  swift_beginAccess(v5 + 14, v22, 33, 0);
  sub_100BF3FAC((uint64_t)v23, (uint64_t)(v5 + 14));
  swift_endAccess(v22);
  sub_100BF3E04((uint64_t)v23);
  swift_beginAccess(v5 + 8, v23, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5 + 8);
  if (Strong)
  {
    v19 = Strong;
    v20 = v5[9];
    ObjectType = swift_getObjectType();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t, _QWORD, uint64_t, uint64_t, double))(v20 + 8))(v5, a1, a2, a3 & 1, ObjectType, v20, a4);
    swift_unknownObjectRelease(v19);
  }
}

void sub_100BF3718(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t *v4;
  _QWORD *v5;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t Strong;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjectType;
  _BYTE v25[24];
  _BYTE v26[24];
  __int128 v27;
  __int128 v28;
  uint64_t v29;

  v2 = v1;
  sub_100064C78((uint64_t)a1, (uint64_t)&v27);
  v4 = v1 + 10;
  swift_beginAccess(v4, v26, 1, 0);
  v5 = (_QWORD *)v2[10];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v5);
  v2[10] = v5;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v5 = sub_100BCC68C(0, v5[2] + 1, 1, v5);
    *v4 = (uint64_t)v5;
  }
  v8 = v5[2];
  v7 = v5[3];
  if (v8 >= v7 >> 1)
    *v4 = (uint64_t)sub_100BCC68C((_QWORD *)(v7 > 1), v8 + 1, 1, v5);
  v9 = *((_QWORD *)&v28 + 1);
  v10 = v29;
  sub_1006EA194((uint64_t)&v27, *((uint64_t *)&v28 + 1));
  v11 = __chkstk_darwin();
  v13 = &v25[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, __n128))(v14 + 16))(v13, v11);
  sub_100BF3C84(v8, (uint64_t)v13, v4, v9, v10);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v27);
  v15 = v2[2];
  v16 = a1[3];
  v17 = a1[4];
  sub_100007E68(a1, v16);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 16))(v16, v17);
  v19 = v18 + 1;
  if (__OFADD__(v18, 1))
  {
    __break(1u);
    goto LABEL_14;
  }
  v20 = *(_QWORD *)(v15 + 40);
  if (v19 < *(_QWORD *)(v20 + 16))
  {
    if ((v19 & 0x8000000000000000) == 0)
    {
      sub_100064C78(v20 + 40 * v19 + 32, (uint64_t)&v27);
      goto LABEL_10;
    }
LABEL_14:
    __break(1u);
    return;
  }
  v29 = 0;
  v27 = 0u;
  v28 = 0u;
LABEL_10:
  swift_beginAccess(v2 + 14, v25, 33, 0);
  sub_100BF3FAC((uint64_t)&v27, (uint64_t)(v2 + 14));
  swift_endAccess(v25);
  sub_100BF3E04((uint64_t)&v27);
  swift_beginAccess(v2 + 8, &v27, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2 + 8);
  if (Strong)
  {
    v22 = Strong;
    v23 = v2[9];
    ObjectType = swift_getObjectType();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t, uint64_t))(v23 + 32))(v2, a1, ObjectType, v23);
    swift_unknownObjectRelease(v22);
  }
}

void sub_100BF3948()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double (*v4)(__n128);
  uint64_t v5;
  __n128 v6;
  double v7;
  double v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  __int128 *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[24];
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  _BYTE v29[24];
  _BYTE v30[24];
  _BYTE v31[24];
  __int128 v32;
  __int128 v33;
  uint64_t v34;

  v1 = v0;
  v2 = v0 + 112;
  swift_beginAccess(v0 + 112, v31, 0, 0);
  sub_100BF3DBC(v0 + 112, (uint64_t)&v32);
  v3 = *((_QWORD *)&v33 + 1);
  sub_100BF3E04((uint64_t)&v32);
  if (!v3)
  {
    swift_beginAccess(v1 + 96, v30, 0, 0);
    v4 = *(double (**)(__n128))(v1 + 96);
    if (v4)
    {
      v5 = *(_QWORD *)(v1 + 104);
      v6 = swift_retain();
      v7 = v4(v6);
      swift_beginAccess(v1 + 88, v29, 0, 0);
      v8 = 0.0;
      if (*(_BYTE *)(v1 + 88) == 1)
      {
        Lyrics.spatialOffset.getter();
        v8 = v9;
      }
      sub_10004BA30((uint64_t)v4, v5);
      v10 = *(_QWORD *)(v1 + 16);
      v11 = *(_QWORD *)(v10 + 40);
      if (!*(_QWORD *)(v11 + 16))
      {
        __break(1u);
        goto LABEL_24;
      }
      v12 = v7 - v8;
      sub_100064C78(v11 + 32, (uint64_t)&v32);
      v14 = *((_QWORD *)&v33 + 1);
      v13 = v34;
      sub_100007E68(&v32, *((uint64_t *)&v33 + 1));
      v15 = (*(double (**)(uint64_t))(*(_QWORD *)(v13 + 8) + 8))(v14);
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v32);
      if (v12 > v15)
      {
        Lyrics.line(before:useOriginalLines:)(0, (uint64_t)&v26, v12);
        if (!*((_QWORD *)&v27 + 1))
        {
          sub_100BF3E04((uint64_t)&v26);
          return;
        }
        sub_100064C48(&v26, (uint64_t)&v32);
        v17 = *((_QWORD *)&v33 + 1);
        v16 = v34;
        sub_100007E68(&v32, *((uint64_t *)&v33 + 1));
        if (v12 < (*(double (**)(uint64_t))(*(_QWORD *)(v16 + 8) + 16))(v17))
        {
          v18 = &v32;
LABEL_20:
          sub_100064C78((uint64_t)v18, (uint64_t)&v26);
LABEL_22:
          swift_beginAccess(v2, v25, 33, 0);
          sub_100BF3FAC((uint64_t)&v26, v2);
          swift_endAccess(v25);
          sub_100BF3E04((uint64_t)&v26);
          _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v32);
          return;
        }
        v20 = *((_QWORD *)&v33 + 1);
        v21 = v34;
        sub_100007E68(&v32, *((uint64_t *)&v33 + 1));
        v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 16))(v20, v21);
        v23 = v22 + 1;
        if (!__OFADD__(v22, 1))
        {
          v24 = *(_QWORD *)(v10 + 40);
          if (v23 >= *(_QWORD *)(v24 + 16))
          {
            v28 = 0;
            v26 = 0u;
            v27 = 0u;
            goto LABEL_22;
          }
          if ((v23 & 0x8000000000000000) == 0)
          {
            v18 = (__int128 *)(v24 + 40 * v23 + 32);
            goto LABEL_20;
          }
          goto LABEL_25;
        }
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
        return;
      }
      v19 = *(_QWORD *)(v10 + 40);
      if (*(_QWORD *)(v19 + 16))
      {
        sub_100064C78(v19 + 32, (uint64_t)&v32);
      }
      else
      {
        v34 = 0;
        v32 = 0u;
        v33 = 0u;
      }
      swift_beginAccess(v2, &v26, 33, 0);
      sub_100BF3FAC((uint64_t)&v32, v2);
      swift_endAccess(&v26);
      sub_100BF3E04((uint64_t)&v32);
    }
  }
}

uint64_t SyncedLyricsManager.deinit()
{
  uint64_t v0;
  uint64_t v1;

  swift_release();
  swift_release();
  sub_10013C71C(v0 + 64, v1);
  swift_bridgeObjectRelease();
  sub_10004BA30(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
  sub_100BF3E04(v0 + 112);
  return v0;
}

uint64_t SyncedLyricsManager.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;

  swift_release();
  swift_release();
  sub_10013C71C(v0 + 64, v1);
  swift_bridgeObjectRelease();
  sub_10004BA30(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
  sub_100BF3E04(v0 + 112);
  return swift_deallocClassInstance(v0, 152, 7);
}

uint64_t sub_100BF3C84(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v9;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = a4;
  v14 = a5;
  v9 = sub_100049F68(&v12);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(v9, a2, a4);
  v10 = *a3;
  *(_QWORD *)(v10 + 16) = a1 + 1;
  return sub_100064C48(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_100BF3CFC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  _BYTE v17[24];

  v13 = a5 + 64;
  *(_QWORD *)(a5 + 72) = 0;
  v14 = swift_unknownObjectWeakInit(a5 + 64, 0);
  *(_QWORD *)(a5 + 80) = _swiftEmptyArrayStorage;
  *(_OWORD *)(a5 + 96) = 0u;
  *(_OWORD *)(a5 + 112) = 0u;
  *(_OWORD *)(a5 + 128) = 0u;
  *(_QWORD *)(a5 + 144) = 0;
  *(_QWORD *)(a5 + 16) = a1;
  v15 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a5 + 24) = *(_OWORD *)a2;
  *(_OWORD *)(a5 + 40) = v15;
  *(_QWORD *)(a5 + 56) = *(_QWORD *)(a2 + 32);
  swift_beginAccess(v14, v17, 1, 0);
  *(_QWORD *)(a5 + 72) = a7;
  swift_unknownObjectWeakAssign(v13, a3);
  *(_BYTE *)(a5 + 88) = a4;
  return a5;
}

uint64_t sub_100BF3DBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011E04F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100BF3E04(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100007E8C(&qword_1011E04F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100BF3E44()
{
  uint64_t v0;

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100BF3E54@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[24];

  v3 = *a1;
  swift_beginAccess(*a1 + 80, v5, 0, 0);
  *a2 = *(_QWORD *)(v3 + 80);
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for SyncedLyricsManager()
{
  return objc_opt_self(_TtC11MusicCoreUI19SyncedLyricsManager);
}

uint64_t initializeWithCopy for SyncedLyricsManager.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain(v3);
  return a1;
}

_QWORD *assignWithCopy for SyncedLyricsManager.Configuration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  return a1;
}

uint64_t assignWithTake for SyncedLyricsManager.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for SyncedLyricsManager.Configuration()
{
  return &type metadata for SyncedLyricsManager.Configuration;
}

uint64_t sub_100BF3FAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011E04F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

id static SyncedLyricsViewController.Specs.lineChangeSpringTimingParameters()()
{
  return objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 100.0, 18.0, 0.0, 0.0);
}

void *SyncedLyricsViewController.Specs.init(_:)@<X0>(void (*a1)(_BYTE *, __n128)@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  _BYTE v5[544];

  sub_100BF5860(a1, a2, v5);
  return memcpy(a3, v5, 0x219uLL);
}

id static SyncedLyricsViewController.Specs.liftSpringTimingParameters()()
{
  return objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 14.0, 7.0, 0.0, 0.0);
}

id static SyncedLyricsViewController.Specs.growSyllableTimingParameters(response:)(double a1)
{
  sub_10004A07C(0, &qword_1011E0390, UISpringTimingParameters_ptr);
  return UISpringTimingParameters.init(dampingRatio:response:)(1.0, a1);
}

id static SyncedLyricsViewController.Specs.backgroundVocalsSpringTimingParameters(showing:)(char a1)
{
  if ((a1 & 1) != 0)
    return objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 30.0, 9.0, 0.0, 0.0);
  sub_10004A07C(0, &qword_1011E0390, UISpringTimingParameters_ptr);
  return UISpringTimingParameters.init(dampingRatio:response:)(1.0, 0.2);
}

id static SyncedLyricsViewController.Specs.opacityAnimator()()
{
  return objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:controlPoint1:controlPoint2:animations:", 0, 0.12, 0.33, 0.0, 0.2, 0.1);
}

BOOL static SyncedLyricsViewController.Specs.SelectedLinePosition.__derived_enum_equals(_:_:)(__int128 *a1, __int128 *a2)
{
  char v3;
  double v4;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat v9;
  char v10;
  CGRect v11;
  char v12;
  _QWORD v13[4];
  char v14;
  CGRect v15;

  sub_1002A58C0(a1, (uint64_t)v13);
  v3 = v14;
  if ((v14 & 0x80) == 0)
  {
    v4 = *(double *)v13;
    sub_1002A58C0(a2, (uint64_t)&v11);
    if ((v12 & 0x80000000) == 0)
      return v4 == v11.origin.x;
    return 0;
  }
  v14 &= ~0x80u;
  v6 = *(double *)v13;
  v7 = *(double *)&v13[1];
  v8 = *(double *)&v13[2];
  v9 = *(double *)&v13[3];
  sub_1002A58C0(a2, (uint64_t)&v11);
  v10 = v12;
  if ((v12 & 0x80) == 0)
    return 0;
  v12 &= ~0x80u;
  if ((v3 & 1) != 0)
  {
    if ((v10 & 1) == 0)
      return 0;
  }
  else
  {
    if ((v10 & 1) != 0)
      return 0;
    v15.origin.x = v6;
    v15.origin.y = v7;
    v15.size.width = v8;
    v15.size.height = v9;
    if (!CGRectEqualToRect(v15, v11))
      return 0;
  }
  return 1;
}

uint64_t sub_100BF4290(uint64_t a1, uint64_t a2)
{
  int v2;

  v2 = *(char *)(a1 + 32);
  if (v2 < 0)
  {
    if ((*(_BYTE *)(a2 + 32) & 0x80) != 0)
    {
      if ((v2 & 1) != 0)
      {
        if ((*(_BYTE *)(a2 + 32) & 1) != 0)
          return 1;
      }
      else if ((*(_BYTE *)(a2 + 32) & 1) == 0 && CGRectEqualToRect(*(CGRect *)a1, *(CGRect *)a2))
      {
        return 1;
      }
    }
  }
  else if ((*(_BYTE *)(a2 + 32) & 0x80) == 0 && *(double *)a1 == *(double *)a2)
  {
    return 1;
  }
  return 0;
}

__n128 SyncedLyricsViewController.Specs.selectedLinePosition.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  __n128 result;
  __int128 v4;

  v2 = *(_BYTE *)(v1 + 40);
  result = *(__n128 *)(v1 + 8);
  v4 = *(_OWORD *)(v1 + 24);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = v2;
  return result;
}

uint64_t SyncedLyricsViewController.Specs.selectedLinePosition.setter(__int128 *a1)
{
  uint64_t v1;

  return sub_1002A58C0(a1, v1 + 8);
}

uint64_t SyncedLyricsViewController.Specs.lineTextAlignment.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t SyncedLyricsViewController.Specs.lineTextAlignment.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = result;
  *(_BYTE *)(v2 + 56) = a2 & 1;
  return result;
}

uint64_t SyncedLyricsViewController.Specs.songwritersTextAlignment.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 64);
}

uint64_t SyncedLyricsViewController.Specs.songwritersTextAlignment.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = result;
  *(_BYTE *)(v2 + 72) = a2 & 1;
  return result;
}

double SyncedLyricsViewController.Specs.lineSpacing.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 80);
}

void SyncedLyricsViewController.Specs.lineSpacing.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 80) = a1;
}

void SyncedLyricsViewController.Specs.backgroundVocalsTopSpacing.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 88) = a1;
}

__n128 SyncedLyricsViewController.Specs.backgroundVocalsDeselectedTransform.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(v1 + 112);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 96);
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(v1 + 128);
  *(__n128 *)(a1 + 32) = result;
  return result;
}

__n128 SyncedLyricsViewController.Specs.backgroundVocalsDeselectedTransform.setter(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 112) = v2;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 128) = result;
  return result;
}

double (*SyncedLyricsViewController.Specs.backgroundVocalsDeselectedTransform.modify())(_QWORD)
{
  return UIScreen.Dimensions.size.getter;
}

double SyncedLyricsViewController.Specs.lineDelay.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 144);
}

void SyncedLyricsViewController.Specs.lineDelay.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 144) = a1;
}

double (*SyncedLyricsViewController.Specs.lineDelay.modify())(_QWORD)
{
  return UIScreen.Dimensions.size.getter;
}

double SyncedLyricsViewController.Specs.maxEndTimeOffset.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 152);
}

void SyncedLyricsViewController.Specs.maxEndTimeOffset.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 152) = a1;
}

double (*SyncedLyricsSharingTransitionInfo.isSelected.modify())(_QWORD)
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t SyncedLyricsViewController.Specs.maxSelectedLines.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 160);
}

uint64_t SyncedLyricsViewController.Specs.maxSelectedLines.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 160) = result;
  return result;
}

double (*SyncedLyricsSharingTransitionInfo.transform.modify())(_QWORD)
{
  return UIScreen.Dimensions.size.getter;
}

id SyncedLyricsViewController.Specs.font.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 168);
}

void SyncedLyricsViewController.Specs.font.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 168) = a1;
}

double (*SyncedLyricsViewController.Specs.font.modify())(_QWORD)
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t SyncedLyricsViewController.Specs.fontLeading.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 176);
}

uint64_t SyncedLyricsViewController.Specs.fontLeading.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 176) = result;
  *(_BYTE *)(v2 + 184) = a2 & 1;
  return result;
}

double (*SyncedLyricsViewController.Specs.fontLeading.modify())(_QWORD)
{
  return UIScreen.Dimensions.size.getter;
}

id SyncedLyricsViewController.Specs.backgroundVocalsFont.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 192);
}

void SyncedLyricsViewController.Specs.backgroundVocalsFont.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 192) = a1;
}

double (*SyncedLyricsViewController.Specs.backgroundVocalsFont.modify())(_QWORD)
{
  return UIScreen.Dimensions.size.getter;
}

id SyncedLyricsViewController.Specs.writtenByFont.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 200);
}

void SyncedLyricsViewController.Specs.writtenByFont.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 200) = a1;
}

double (*SyncedLyricsViewController.Specs.writtenByFont.modify())(_QWORD)
{
  return UIScreen.Dimensions.size.getter;
}

id SyncedLyricsViewController.Specs.songwritersNamesFont.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 208);
}

void SyncedLyricsViewController.Specs.songwritersNamesFont.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 208) = a1;
}

double (*SyncedLyricsSharingTransitionInfo.transitionWillBeginHandler.modify())(_QWORD)
{
  return UIScreen.Dimensions.size.getter;
}

double SyncedLyricsViewController.Specs.emphasizingScaleRange.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 216);
}

void SyncedLyricsViewController.Specs.emphasizingScaleRange.setter(double a1, double a2)
{
  uint64_t v2;

  *(double *)(v2 + 216) = a1;
  *(double *)(v2 + 224) = a2;
}

double (*SyncedLyricsViewController.Specs.emphasizingScaleRange.modify())(_QWORD)
{
  return UIScreen.Dimensions.size.getter;
}

id SyncedLyricsViewController.Specs.selectedTextColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 232);
}

void SyncedLyricsViewController.Specs.selectedTextColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 232) = a1;
}

double (*SyncedLyricsViewController.Specs.selectedTextColor.modify())(_QWORD)
{
  return UIScreen.Dimensions.size.getter;
}

id SyncedLyricsViewController.Specs.selectedUpcomingTextColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 240);
}

void SyncedLyricsViewController.Specs.selectedUpcomingTextColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 240) = a1;
}

double (*SyncedLyricsViewController.Specs.selectedUpcomingTextColor.modify())(_QWORD)
{
  return UIScreen.Dimensions.size.getter;
}

id SyncedLyricsViewController.Specs.deselectedTextColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 248);
}

void SyncedLyricsViewController.Specs.deselectedTextColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 248) = a1;
}

double (*SyncedLyricsViewController.Specs.deselectedTextColor.modify())(_QWORD)
{
  return UIScreen.Dimensions.size.getter;
}

id SyncedLyricsViewController.Specs.selectedBackgroundVocalsTextColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 256);
}

void SyncedLyricsViewController.Specs.selectedBackgroundVocalsTextColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 256) = a1;
}

double (*SyncedLyricsViewController.Specs.selectedBackgroundVocalsTextColor.modify())(_QWORD)
{
  return UIScreen.Dimensions.size.getter;
}

id SyncedLyricsViewController.Specs.selectedUpcomingBackgroundVocalsTextColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 264);
}

void SyncedLyricsViewController.Specs.selectedUpcomingBackgroundVocalsTextColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 264) = a1;
}

double (*SyncedLyricsViewController.Specs.selectedUpcomingBackgroundVocalsTextColor.modify())(_QWORD)
{
  return UIScreen.Dimensions.size.getter;
}

id SyncedLyricsViewController.Specs.deselectedScrollTextColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 272);
}

void SyncedLyricsViewController.Specs.deselectedScrollTextColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 272) = a1;
}

double (*SyncedLyricsViewController.Specs.deselectedScrollTextColor.modify())(_QWORD)
{
  return UIScreen.Dimensions.size.getter;
}

__n128 SyncedLyricsViewController.Specs.deselectedTransform.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(v1 + 296);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 280);
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(v1 + 312);
  *(__n128 *)(a1 + 32) = result;
  return result;
}

__n128 SyncedLyricsViewController.Specs.deselectedTransform.setter(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 280) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 296) = v2;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 312) = result;
  return result;
}

double (*SyncedLyricsViewController.Specs.deselectedTransform.modify())(_QWORD)
{
  return UIScreen.Dimensions.size.getter;
}

id SyncedLyricsViewController.Specs.hiddenTextColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 328);
}

void SyncedLyricsViewController.Specs.hiddenTextColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 328) = a1;
}

double (*SyncedLyricsViewController.Specs.hiddenTextColor.modify())(_QWORD)
{
  return UIScreen.Dimensions.size.getter;
}

double SyncedLyricsViewController.Specs.animationHeadstart.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 336);
}

void SyncedLyricsViewController.Specs.animationHeadstart.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 336) = a1;
}

double (*SyncedLyricsViewController.Specs.animationHeadstart.modify())(_QWORD)
{
  return UIScreen.Dimensions.size.getter;
}

id SyncedLyricsViewController.Specs.glowColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 344);
}

void SyncedLyricsViewController.Specs.glowColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 344) = a1;
}

double (*SyncedLyricsViewController.Specs.glowColor.modify())(_QWORD)
{
  return UIScreen.Dimensions.size.getter;
}

double SyncedLyricsViewController.Specs.glowRadius.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 352);
}

void SyncedLyricsViewController.Specs.glowRadius.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 352) = a1;
}

double (*SyncedLyricsViewController.Specs.glowRadius.modify())(_QWORD)
{
  return UIScreen.Dimensions.size.getter;
}

double SyncedLyricsViewController.Specs.glowRange.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 360);
}

void SyncedLyricsViewController.Specs.glowRange.setter(double a1, double a2)
{
  uint64_t v2;

  *(double *)(v2 + 360) = a1;
  *(double *)(v2 + 368) = a2;
}

double (*SyncedLyricsViewController.Specs.glowRange.modify())(_QWORD)
{
  return UIScreen.Dimensions.size.getter;
}

id SyncedLyricsViewController.Specs.lineProgressionGradientColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 376);
}

void SyncedLyricsViewController.Specs.lineProgressionGradientColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 376) = a1;
}

double (*SyncedLyricsViewController.Specs.lineProgressionGradientColor.modify())(_QWORD)
{
  return UIScreen.Dimensions.size.getter;
}

id SyncedLyricsViewController.Specs.lineProgressionBackgroundVocalsGradientColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 384);
}

void SyncedLyricsViewController.Specs.lineProgressionBackgroundVocalsGradientColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 384) = a1;
}

double (*SyncedLyricsViewController.Specs.lineProgressionBackgroundVocalsGradientColor.modify())(_QWORD)
{
  return UIScreen.Dimensions.size.getter;
}

double SyncedLyricsViewController.Specs.lineProgressionGradientFeather.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 392);
}

void SyncedLyricsViewController.Specs.lineProgressionGradientFeather.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 392) = a1;
}

double (*SyncedLyricsViewController.Specs.lineProgressionGradientFeather.modify())(_QWORD)
{
  return UIScreen.Dimensions.size.getter;
}

__n128 SyncedLyricsViewController.Specs.touchDownTransform.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(v1 + 416);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 400);
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(v1 + 432);
  *(__n128 *)(a1 + 32) = result;
  return result;
}

__n128 SyncedLyricsViewController.Specs.touchDownTransform.setter(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 400) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 416) = v2;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 432) = result;
  return result;
}

double (*SyncedLyricsViewController.Specs.touchDownTransform.modify())(_QWORD)
{
  return UIScreen.Dimensions.size.getter;
}

double SyncedLyricsViewController.Specs.highlightLabelAlpha.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 448);
}

void SyncedLyricsViewController.Specs.highlightLabelAlpha.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 448) = a1;
}

double (*SyncedLyricsViewController.Specs.highlightLabelAlpha.modify())(_QWORD)
{
  return UIScreen.Dimensions.size.getter;
}

id SyncedLyricsViewController.Specs.highlightViewBackgroundColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 456);
}

void SyncedLyricsViewController.Specs.highlightViewBackgroundColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 456) = a1;
}

double (*SyncedLyricsViewController.Specs.highlightViewBackgroundColor.modify())(_QWORD)
{
  return UIScreen.Dimensions.size.getter;
}

double SyncedLyricsViewController.Specs.highlightViewCornerRadius.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 464);
}

void SyncedLyricsViewController.Specs.highlightViewCornerRadius.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 464) = a1;
}

double (*SyncedLyricsViewController.Specs.highlightViewCornerRadius.modify())(_QWORD)
{
  return UIScreen.Dimensions.size.getter;
}

double SyncedLyricsViewController.Specs.highlightViewMargin.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 472);
}

void SyncedLyricsViewController.Specs.highlightViewMargin.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 472) = a1;
}

double (*SyncedLyricsViewController.Specs.highlightViewMargin.modify())(_QWORD)
{
  return UIScreen.Dimensions.size.getter;
}

double SyncedLyricsViewController.Specs.instrumentalBreakVisualizationMinSeconds.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 480);
}

void SyncedLyricsViewController.Specs.instrumentalBreakVisualizationMinSeconds.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 480) = a1;
}

double (*SyncedLyricsViewController.Specs.instrumentalBreakVisualizationMinSeconds.modify())(_QWORD)
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t SyncedLyricsViewController.Specs.instrumentalBreakCountdownDotCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 488);
}

uint64_t SyncedLyricsViewController.Specs.instrumentalBreakCountdownDotCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 488) = result;
  return result;
}

double (*SyncedLyricsViewController.Specs.instrumentalBreakCountdownDotCount.modify())(_QWORD)
{
  return UIScreen.Dimensions.size.getter;
}

double SyncedLyricsViewController.Specs.instrumentalBreakViewHeight.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 496);
}

void SyncedLyricsViewController.Specs.instrumentalBreakViewHeight.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 496) = a1;
}

double (*SyncedLyricsViewController.Specs.instrumentalBreakViewHeight.modify())(_QWORD)
{
  return UIScreen.Dimensions.size.getter;
}

double SyncedLyricsViewController.Specs.syllableLift.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 504);
}

void SyncedLyricsViewController.Specs.syllableLift.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 504) = a1;
}

double (*SyncedLyricsViewController.Specs.syllableLift.modify())(_QWORD)
{
  return UIScreen.Dimensions.size.getter;
}

double SyncedLyricsViewController.Specs.vocalGroupWidthCoefficient.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 512);
}

void SyncedLyricsViewController.Specs.vocalGroupWidthCoefficient.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 512) = a1;
}

double (*SyncedLyricsViewController.Specs.vocalGroupWidthCoefficient.modify())(_QWORD)
{
  return UIScreen.Dimensions.size.getter;
}

double SyncedLyricsViewController.Specs.lineTapProgressFreezeDuration.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 520);
}

void SyncedLyricsViewController.Specs.lineTapProgressFreezeDuration.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 520) = a1;
}

double (*SyncedLyricsViewController.Specs.lineTapProgressFreezeDuration.modify())(_QWORD)
{
  return UIScreen.Dimensions.size.getter;
}

double SyncedLyricsViewController.Specs.lineFinishProgressAnimationDuration.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 528);
}

void SyncedLyricsViewController.Specs.lineFinishProgressAnimationDuration.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 528) = a1;
}

double (*SyncedLyricsViewController.Specs.lineFinishProgressAnimationDuration.modify())(_QWORD)
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t SyncedLyricsViewController.Specs.showsVerticalScrollIndicator.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 536);
}

uint64_t SyncedLyricsViewController.Specs.showsVerticalScrollIndicator.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 536) = result;
  return result;
}

double (*SyncedLyricsViewController.Specs.showsVerticalScrollIndicator.modify())(_QWORD)
{
  return UIScreen.Dimensions.size.getter;
}

void *SyncedLyricsViewController.Specs.with(_:)@<X0>(void (*a1)(_BYTE *)@<X0>, void *a2@<X8>)
{
  const void *v2;
  _BYTE v6[544];

  memcpy(v6, v2, 0x219uLL);
  sub_10024E6C8((uint64_t)v2);
  a1(v6);
  return memcpy(a2, v6, 0x219uLL);
}

void *sub_100BF4AF0()
{
  _BYTE v1[544];

  sub_100BF5860(0, 0, v1);
  return memcpy(&static SyncedLyricsViewController.Specs.default, v1, 0x219uLL);
}

void *SyncedLyricsViewController.Specs.default.unsafeMutableAddressor()
{
  if (qword_1011DE020 != -1)
    swift_once(&qword_1011DE020, sub_100BF4AF0);
  return &static SyncedLyricsViewController.Specs.default;
}

uint64_t static SyncedLyricsViewController.Specs.default.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100BF51B0(&qword_1011DE020, (uint64_t)&static SyncedLyricsViewController.Specs.default, (uint64_t)sub_100BF4AF0, a1);
}

void *sub_100BF4B90()
{
  _BYTE v1[544];

  sub_100BF5860((void (*)(_BYTE *, __n128))sub_100BF4BD8, 0, v1);
  return memcpy(&static SyncedLyricsViewController.Specs.iPad, v1, 0x219uLL);
}

void sub_100BF4BD8(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;

  *(_QWORD *)(a1 + 8) = 0x4034000000000000;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 40) = 0;
  *(_OWORD *)(a1 + 80) = xmmword_100EE8A80;
  *(_QWORD *)(a1 + 152) = 0x3FE0000000000000;
  v2 = (void *)objc_opt_self(UIFont);
  v3 = objc_msgSend(v2, "systemFontOfSize:weight:", 48.0, UIFontWeightBold);

  *(_QWORD *)(a1 + 168) = v3;
  v4 = objc_msgSend(v2, "systemFontOfSize:weight:", 32.0, UIFontWeightBold);

  *(_QWORD *)(a1 + 192) = v4;
  *(_QWORD *)(a1 + 176) = 0x404A000000000000;
  *(_BYTE *)(a1 + 184) = 0;
}

void *SyncedLyricsViewController.Specs.iPad.unsafeMutableAddressor()
{
  if (qword_1011DE028 != -1)
    swift_once(&qword_1011DE028, sub_100BF4B90);
  return &static SyncedLyricsViewController.Specs.iPad;
}

uint64_t static SyncedLyricsViewController.Specs.iPad.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100BF51B0(&qword_1011DE028, (uint64_t)&static SyncedLyricsViewController.Specs.iPad, (uint64_t)sub_100BF4B90, a1);
}

void *sub_100BF4D0C()
{
  _BYTE v1[544];

  sub_100BF5860((void (*)(_BYTE *, __n128))sub_100BF4D54, 0, v1);
  return memcpy(&static SyncedLyricsViewController.Specs.vision, v1, 0x219uLL);
}

void sub_100BF4D54(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  _QWORD v19[6];

  *(_QWORD *)(a1 + 8) = 0x4042000000000000;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 40) = 0;
  *(_OWORD *)(a1 + 80) = xmmword_100EE8A80;
  *(_QWORD *)(a1 + 152) = 0x3FE0000000000000;
  v2 = (void *)objc_opt_self(UIFont);
  v3 = objc_msgSend(v2, "systemFontOfSize:weight:", 56.0, UIFontWeightBold);

  *(_QWORD *)(a1 + 168) = v3;
  v4 = objc_msgSend(v2, "systemFontOfSize:weight:", 34.0, UIFontWeightBold);

  *(_QWORD *)(a1 + 192) = v4;
  *(_BYTE *)(a1 + 536) = 0;
  *(_QWORD *)(a1 + 176) = 0x404C000000000000;
  *(_BYTE *)(a1 + 184) = 0;
  v5 = (void *)objc_opt_self(UIColor);
  v6 = objc_msgSend(v5, "whiteColor");
  v7 = objc_msgSend(v6, "colorWithAlphaComponent:", 0.175);

  *(_QWORD *)(a1 + 384) = v7;
  v8 = objc_msgSend(v5, "whiteColor");

  *(_QWORD *)(a1 + 376) = v8;
  v9 = objc_msgSend(v5, "whiteColor");
  v10 = objc_msgSend(v9, "colorWithAlphaComponent:", 0.35);

  v11 = objc_msgSend(v5, "labelColor");
  v12 = objc_msgSend(v11, "colorWithAlphaComponent:", 0.55);

  v13 = objc_allocWithZone((Class)UIColor);
  v14 = swift_allocObject(&unk_101107580, 32, 7);
  *(_QWORD *)(v14 + 16) = v12;
  *(_QWORD *)(v14 + 24) = v10;
  v19[4] = sub_100BF7188;
  v19[5] = v14;
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 1107296256;
  v19[2] = sub_100264780;
  v19[3] = &unk_101107598;
  v15 = _Block_copy(v19);
  v16 = v12;
  v17 = v10;
  v18 = objc_msgSend(v13, "initWithDynamicProvider:", v15, swift_release().n128_f64[0]);

  _Block_release(v15);
  *(_QWORD *)(a1 + 240) = v18;
}

void *SyncedLyricsViewController.Specs.vision.unsafeMutableAddressor()
{
  if (qword_1011DE030 != -1)
    swift_once(&qword_1011DE030, sub_100BF4D0C);
  return &static SyncedLyricsViewController.Specs.vision;
}

uint64_t static SyncedLyricsViewController.Specs.vision.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100BF51B0(&qword_1011DE030, (uint64_t)&static SyncedLyricsViewController.Specs.vision, (uint64_t)sub_100BF4D0C, a1);
}

void *sub_100BF5050()
{
  _BYTE v1[544];

  sub_100BF5860((void (*)(_BYTE *, __n128))sub_100BF5098, 0, v1);
  return memcpy(&static SyncedLyricsViewController.Specs.alternative, v1, 0x219uLL);
}

void sub_100BF5098(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;

  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_BYTE *)(a1 + 40) = -127;
  *(_QWORD *)(a1 + 160) = 1;
  v2 = (void *)objc_opt_self(UIFont);
  v3 = objc_msgSend(v2, "systemFontOfSize:weight:", 28.0, UIFontWeightBold);

  *(_QWORD *)(a1 + 168) = v3;
  v4 = objc_msgSend(v2, "systemFontOfSize:weight:", 24.0, UIFontWeightBold);

  *(_QWORD *)(a1 + 192) = v4;
}

void *SyncedLyricsViewController.Specs.alternative.unsafeMutableAddressor()
{
  if (qword_1011DE038 != -1)
    swift_once(&qword_1011DE038, sub_100BF5050);
  return &static SyncedLyricsViewController.Specs.alternative;
}

uint64_t static SyncedLyricsViewController.Specs.alternative.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100BF51B0(&qword_1011DE038, (uint64_t)&static SyncedLyricsViewController.Specs.alternative, (uint64_t)sub_100BF5050, a1);
}

uint64_t sub_100BF51B0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*a1 != -1)
    swift_once(a1, a3);
  return sub_100BF66A8(a2, a4);
}

id static SyncedLyricsViewController.Specs.syllableBySyllableLineChangeSpringTimingParameters(gap:)(uint64_t a1, char a2)
{
  return sub_100BF66DC(a1, a2 & 1);
}

id static SyncedLyricsViewController.Specs.tapSpringTimingParameters()()
{
  return objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 2.0, 260.0, 50.0, 0.0, 0.0);
}

id sub_100BF52E8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)_s5SpecsV27CustomCurveAnimationFactoryCMa();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100BF5320(void *__src, const void *a2)
{
  _BYTE v4[544];
  _BYTE __dst[544];

  memcpy(v4, __src, 0x219uLL);
  memcpy(__dst, a2, 0x219uLL);
  return _s11MusicCoreUI26SyncedLyricsViewControllerC5SpecsV23__derived_struct_equalsySbAE_AEtFZ_0((uint64_t)v4, (uint64_t)__dst) & 1;
}

id sub_100BF5374(void *a1, void *a2, void *a3)
{
  id v4;
  BOOL v5;
  void *v6;

  v4 = objc_msgSend(a1, "accessibilityContrast");
  if (v4 == (id)-1)
  {
    v6 = a3;
  }
  else
  {
    v5 = v4 == (id)1;
    v6 = a3;
    if (v5)
      v6 = a2;
  }
  return v6;
}

uint64_t _s11MusicCoreUI26SyncedLyricsViewControllerC5SpecsV23__derived_struct_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  char v4;
  double v5;
  char v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat v9;
  CGFloat v10;
  char v11;
  __int128 v12;
  __int128 v13;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _OWORD v19[3];
  _OWORD v20[3];
  _OWORD v21[3];
  _OWORD v22[3];
  _OWORD v23[3];
  _OWORD v24[3];
  __int128 v25[2];
  __int128 v26[2];
  _QWORD v27[4];
  char v28;
  CGRect v29;
  char v30;
  CGRect v31;

  if (*(double *)a1 != *(double *)a2)
    goto LABEL_33;
  sub_1002A58C0((__int128 *)(a1 + 8), (uint64_t)v26);
  sub_1002A58C0((__int128 *)(a2 + 8), (uint64_t)v25);
  sub_1002A58C0(v26, (uint64_t)v27);
  v4 = v28;
  if (v28 < 0)
  {
    v28 &= ~0x80u;
    v7 = *(double *)v27;
    v8 = *(double *)&v27[1];
    v9 = *(double *)&v27[2];
    v10 = *(double *)&v27[3];
    sub_1002A58C0(v25, (uint64_t)&v29);
    v11 = v30;
    if ((v30 & 0x80) == 0)
      goto LABEL_33;
    v30 &= ~0x80u;
    if ((v4 & 1) != 0)
    {
      if ((v11 & 1) == 0)
        goto LABEL_33;
    }
    else
    {
      if ((v11 & 1) != 0)
        goto LABEL_33;
      v31.origin.x = v7;
      v31.origin.y = v8;
      v31.size.width = v9;
      v31.size.height = v10;
      if (!CGRectEqualToRect(v31, v29))
        goto LABEL_33;
    }
  }
  else
  {
    v5 = *(double *)v27;
    sub_1002A58C0(v25, (uint64_t)&v29);
    v6 = 0;
    if (v30 < 0 || v5 != v29.origin.x)
      return v6 & 1;
  }
  v6 = *(_BYTE *)(a2 + 56);
  if ((*(_BYTE *)(a1 + 56) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 56))
      return v6 & 1;
  }
  else
  {
    if (*(_QWORD *)(a1 + 48) != *(_QWORD *)(a2 + 48))
      v6 = 1;
    if ((v6 & 1) != 0)
      goto LABEL_33;
  }
  v6 = *(_BYTE *)(a2 + 72);
  if ((*(_BYTE *)(a1 + 72) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 72))
      return v6 & 1;
  }
  else
  {
    if (*(_QWORD *)(a1 + 64) != *(_QWORD *)(a2 + 64))
      v6 = 1;
    if ((v6 & 1) != 0)
      goto LABEL_33;
  }
  if (*(double *)(a1 + 80) != *(double *)(a2 + 80))
    goto LABEL_33;
  if (*(double *)(a1 + 88) != *(double *)(a2 + 88))
    goto LABEL_33;
  v12 = *(_OWORD *)(a1 + 112);
  v24[0] = *(_OWORD *)(a1 + 96);
  v24[1] = v12;
  v24[2] = *(_OWORD *)(a1 + 128);
  v13 = *(_OWORD *)(a2 + 112);
  v23[0] = *(_OWORD *)(a2 + 96);
  v23[1] = v13;
  v23[2] = *(_OWORD *)(a2 + 128);
  if ((static CGAffineTransform.== infix(_:_:)(v24, v23) & 1) == 0
    || *(double *)(a1 + 144) != *(double *)(a2 + 144)
    || *(double *)(a1 + 152) != *(double *)(a2 + 152)
    || *(_QWORD *)(a1 + 160) != *(_QWORD *)(a2 + 160)
    || (sub_10004A07C(0, (unint64_t *)&qword_1011DF6A0, NSObject_ptr),
        (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 168), *(_QWORD *)(a2 + 168)) & 1) == 0))
  {
LABEL_33:
    v6 = 0;
    return v6 & 1;
  }
  v6 = *(_BYTE *)(a2 + 184);
  if ((*(_BYTE *)(a1 + 184) & 1) == 0)
  {
    if (*(double *)(a1 + 176) != *(double *)(a2 + 176))
      v6 = 1;
    if ((v6 & 1) == 0)
    {
LABEL_38:
      if ((static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 192), *(_QWORD *)(a2 + 192)) & 1) != 0
        && (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 200), *(_QWORD *)(a2 + 200)) & 1) != 0
        && (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 208), *(_QWORD *)(a2 + 208)) & 1) != 0
        && *(double *)(a1 + 216) == *(double *)(a2 + 216)
        && *(double *)(a1 + 224) == *(double *)(a2 + 224)
        && (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 232), *(_QWORD *)(a2 + 232)) & 1) != 0
        && (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 240), *(_QWORD *)(a2 + 240)) & 1) != 0
        && (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 248), *(_QWORD *)(a2 + 248)) & 1) != 0
        && (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 256), *(_QWORD *)(a2 + 256)) & 1) != 0
        && (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 264), *(_QWORD *)(a2 + 264)) & 1) != 0
        && (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 272), *(_QWORD *)(a2 + 272)) & 1) != 0)
      {
        v15 = *(_OWORD *)(a1 + 296);
        v22[0] = *(_OWORD *)(a1 + 280);
        v22[1] = v15;
        v22[2] = *(_OWORD *)(a1 + 312);
        v16 = *(_OWORD *)(a2 + 296);
        v21[0] = *(_OWORD *)(a2 + 280);
        v21[1] = v16;
        v21[2] = *(_OWORD *)(a2 + 312);
        if ((static CGAffineTransform.== infix(_:_:)(v22, v21) & 1) != 0
          && (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 328), *(_QWORD *)(a2 + 328)) & 1) != 0
          && *(double *)(a1 + 336) == *(double *)(a2 + 336)
          && (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 344), *(_QWORD *)(a2 + 344)) & 1) != 0
          && *(double *)(a1 + 352) == *(double *)(a2 + 352)
          && *(double *)(a1 + 360) == *(double *)(a2 + 360)
          && *(double *)(a1 + 368) == *(double *)(a2 + 368)
          && (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 376), *(_QWORD *)(a2 + 376)) & 1) != 0
          && (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 384), *(_QWORD *)(a2 + 384)) & 1) != 0
          && *(double *)(a1 + 392) == *(double *)(a2 + 392))
        {
          v17 = *(_OWORD *)(a1 + 416);
          v20[0] = *(_OWORD *)(a1 + 400);
          v20[1] = v17;
          v20[2] = *(_OWORD *)(a1 + 432);
          v18 = *(_OWORD *)(a2 + 416);
          v19[0] = *(_OWORD *)(a2 + 400);
          v19[1] = v18;
          v19[2] = *(_OWORD *)(a2 + 432);
          if ((static CGAffineTransform.== infix(_:_:)(v20, v19) & 1) != 0
            && *(double *)(a1 + 448) == *(double *)(a2 + 448)
            && (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 456), *(_QWORD *)(a2 + 456)) & 1) != 0
            && *(double *)(a1 + 464) == *(double *)(a2 + 464)
            && *(double *)(a1 + 472) == *(double *)(a2 + 472)
            && *(double *)(a1 + 480) == *(double *)(a2 + 480)
            && *(_QWORD *)(a1 + 488) == *(_QWORD *)(a2 + 488)
            && *(double *)(a1 + 496) == *(double *)(a2 + 496)
            && *(double *)(a1 + 504) == *(double *)(a2 + 504)
            && *(double *)(a1 + 512) == *(double *)(a2 + 512)
            && *(double *)(a1 + 520) == *(double *)(a2 + 520)
            && *(double *)(a1 + 528) == *(double *)(a2 + 528))
          {
            v6 = ((*(_BYTE *)(a1 + 536) & 1) == 0) ^ *(_BYTE *)(a2 + 536);
            return v6 & 1;
          }
        }
      }
      goto LABEL_33;
    }
    goto LABEL_33;
  }
  if (*(_BYTE *)(a2 + 184))
    goto LABEL_38;
  return v6 & 1;
}

void *sub_100BF5860@<X0>(void (*a1)(_BYTE *, __n128)@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  CGFloat v8;
  void *v9;
  CGFloat ty;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  CGFloat v19;
  void *v20;
  CGFloat v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  CGFloat v30;
  void *v31;
  CGFloat v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  CGFloat v41;
  void *v42;
  CGFloat v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  CGFloat v52;
  void *v53;
  CGFloat v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  CGFloat v63;
  void *v64;
  CGFloat v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  CGFloat v72;
  void *v73;
  CGFloat v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  CGFloat v83;
  void *v84;
  CGFloat v85;
  id v86;
  id v87;
  id v88;
  __n128 v94;
  CGAffineTransform aBlock;
  _BYTE __src[537];

  *(_QWORD *)__src = 0x404E000000000000;
  *(_QWORD *)&__src[8] = 0x4028000000000000;
  *(_QWORD *)&__src[48] = 0;
  memset(&__src[16], 0, 25);
  __src[56] = 1;
  *(_QWORD *)&__src[64] = 0;
  __src[72] = 1;
  *(_OWORD *)&__src[80] = xmmword_100EE8A90;
  CGAffineTransformMakeScale(&aBlock, 0.9, 0.9);
  *(CGAffineTransform *)&__src[96] = aBlock;
  *(_OWORD *)&__src[144] = xmmword_100EE8AA0;
  *(_QWORD *)&__src[160] = 2;
  sub_10004A07C(0, (unint64_t *)&qword_1011DE3F8, UIFont_ptr);
  *(_QWORD *)&__src[168] = static UIFont.preferredFont(forTextStyle:weight:)(UIFontTextStyleLargeTitle, UIFontWeightBold);
  *(_QWORD *)&__src[176] = 0;
  __src[184] = 1;
  *(_QWORD *)&__src[192] = static UIFont.shortEmphasizedPreferredFont(forTextStyle:)(UIFontTextStyleTitle2);
  v3 = (void *)objc_opt_self(UIFont);
  *(_QWORD *)&__src[200] = objc_msgSend(v3, "systemFontOfSize:weight:", 22.0, UIFontWeightBold);
  *(_QWORD *)&__src[208] = objc_msgSend(v3, "systemFontOfSize:weight:", 22.0, UIFontWeightMedium);
  *(_OWORD *)&__src[216] = xmmword_100EE8AB0;
  v4 = (void *)objc_opt_self(UIColor);
  v5 = objc_msgSend(v4, "whiteColor");
  v6 = objc_msgSend(v4, "labelColor");
  v7 = objc_allocWithZone((Class)UIColor);
  v8 = COERCE_DOUBLE(swift_allocObject(&unk_101107620, 32, 7));
  *(_QWORD *)(*(_QWORD *)&v8 + 16) = v6;
  *(_QWORD *)(*(_QWORD *)&v8 + 24) = v5;
  *(_QWORD *)&aBlock.tx = sub_100BF7188;
  aBlock.ty = v8;
  *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.b = 1107296256;
  *(_QWORD *)&aBlock.c = sub_100264780;
  *(_QWORD *)&aBlock.d = &unk_101107638;
  v9 = _Block_copy(&aBlock);
  ty = aBlock.ty;
  v11 = v6;
  v12 = v5;
  v13 = objc_msgSend(v7, "initWithDynamicProvider:", v9, swift_release(*(_QWORD *)&ty).n128_f64[0]);

  _Block_release(v9);
  *(_QWORD *)&__src[232] = v13;
  v14 = objc_msgSend(v4, "whiteColor");
  v15 = objc_msgSend(v14, "colorWithAlphaComponent:", 0.35);

  v16 = objc_msgSend(v4, "labelColor");
  v17 = objc_msgSend(v16, "colorWithAlphaComponent:", 0.85);

  v18 = objc_allocWithZone((Class)UIColor);
  v19 = COERCE_DOUBLE(swift_allocObject(&unk_101107670, 32, 7));
  *(_QWORD *)(*(_QWORD *)&v19 + 16) = v17;
  *(_QWORD *)(*(_QWORD *)&v19 + 24) = v15;
  *(_QWORD *)&aBlock.tx = sub_100BF7188;
  aBlock.ty = v19;
  *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.b = 1107296256;
  *(_QWORD *)&aBlock.c = sub_100264780;
  *(_QWORD *)&aBlock.d = &unk_101107688;
  v20 = _Block_copy(&aBlock);
  v21 = aBlock.ty;
  v22 = v17;
  v23 = v15;
  v24 = objc_msgSend(v18, "initWithDynamicProvider:", v20, swift_release(*(_QWORD *)&v21).n128_f64[0]);

  _Block_release(v20);
  *(_QWORD *)&__src[240] = v24;
  v25 = objc_msgSend(v4, "whiteColor");
  v26 = objc_msgSend(v25, "colorWithAlphaComponent:", 0.175);

  v27 = objc_msgSend(v4, "labelColor");
  v28 = objc_msgSend(v27, "colorWithAlphaComponent:", 0.4);

  v29 = objc_allocWithZone((Class)UIColor);
  v30 = COERCE_DOUBLE(swift_allocObject(&unk_1011076C0, 32, 7));
  *(_QWORD *)(*(_QWORD *)&v30 + 16) = v28;
  *(_QWORD *)(*(_QWORD *)&v30 + 24) = v26;
  *(_QWORD *)&aBlock.tx = sub_100BF7188;
  aBlock.ty = v30;
  *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.b = 1107296256;
  *(_QWORD *)&aBlock.c = sub_100264780;
  *(_QWORD *)&aBlock.d = &unk_1011076D8;
  v31 = _Block_copy(&aBlock);
  v32 = aBlock.ty;
  v33 = v28;
  v34 = v26;
  v35 = objc_msgSend(v29, "initWithDynamicProvider:", v31, swift_release(*(_QWORD *)&v32).n128_f64[0]);

  _Block_release(v31);
  *(_QWORD *)&__src[248] = v35;
  v36 = objc_msgSend(v4, "whiteColor");
  v37 = objc_msgSend(v36, "colorWithAlphaComponent:", 0.35);

  v38 = objc_msgSend(v4, "labelColor");
  v39 = objc_msgSend(v38, "colorWithAlphaComponent:", 0.85);

  v40 = objc_allocWithZone((Class)UIColor);
  v41 = COERCE_DOUBLE(swift_allocObject(&unk_101107710, 32, 7));
  *(_QWORD *)(*(_QWORD *)&v41 + 16) = v39;
  *(_QWORD *)(*(_QWORD *)&v41 + 24) = v37;
  *(_QWORD *)&aBlock.tx = sub_100BF7188;
  aBlock.ty = v41;
  *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.b = 1107296256;
  *(_QWORD *)&aBlock.c = sub_100264780;
  *(_QWORD *)&aBlock.d = &unk_101107728;
  v42 = _Block_copy(&aBlock);
  v43 = aBlock.ty;
  v44 = v39;
  v45 = v37;
  v46 = objc_msgSend(v40, "initWithDynamicProvider:", v42, swift_release(*(_QWORD *)&v43).n128_f64[0]);

  _Block_release(v42);
  *(_QWORD *)&__src[256] = v46;
  v47 = objc_msgSend(v4, "whiteColor");
  v48 = objc_msgSend(v47, "colorWithAlphaComponent:", 0.175);

  v49 = objc_msgSend(v4, "labelColor");
  v50 = objc_msgSend(v49, "colorWithAlphaComponent:", 0.65);

  v51 = objc_allocWithZone((Class)UIColor);
  v52 = COERCE_DOUBLE(swift_allocObject(&unk_101107760, 32, 7));
  *(_QWORD *)(*(_QWORD *)&v52 + 16) = v50;
  *(_QWORD *)(*(_QWORD *)&v52 + 24) = v48;
  *(_QWORD *)&aBlock.tx = sub_100BF7188;
  aBlock.ty = v52;
  *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.b = 1107296256;
  *(_QWORD *)&aBlock.c = sub_100264780;
  *(_QWORD *)&aBlock.d = &unk_101107778;
  v53 = _Block_copy(&aBlock);
  v54 = aBlock.ty;
  v55 = v50;
  v56 = v48;
  v57 = objc_msgSend(v51, "initWithDynamicProvider:", v53, swift_release(*(_QWORD *)&v54).n128_f64[0]);

  _Block_release(v53);
  *(_QWORD *)&__src[264] = v57;
  v58 = objc_msgSend(v4, "whiteColor");
  v59 = objc_msgSend(v58, "colorWithAlphaComponent:", 0.4);

  v60 = objc_msgSend(v4, "labelColor");
  v61 = objc_msgSend(v60, "colorWithAlphaComponent:", 0.4);

  v62 = objc_allocWithZone((Class)UIColor);
  v63 = COERCE_DOUBLE(swift_allocObject(&unk_1011077B0, 32, 7));
  *(_QWORD *)(*(_QWORD *)&v63 + 16) = v61;
  *(_QWORD *)(*(_QWORD *)&v63 + 24) = v59;
  *(_QWORD *)&aBlock.tx = sub_100BF7188;
  aBlock.ty = v63;
  *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.b = 1107296256;
  *(_QWORD *)&aBlock.c = sub_100264780;
  *(_QWORD *)&aBlock.d = &unk_1011077C8;
  v64 = _Block_copy(&aBlock);
  v65 = aBlock.ty;
  v66 = v61;
  v67 = v59;
  v68 = objc_msgSend(v62, "initWithDynamicProvider:", v64, swift_release(*(_QWORD *)&v65).n128_f64[0]);

  _Block_release(v64);
  *(_QWORD *)&__src[272] = v68;
  CGAffineTransformMakeScale(&aBlock, 0.98, 0.98);
  *(CGAffineTransform *)&__src[280] = aBlock;
  *(_QWORD *)&__src[328] = objc_msgSend(v4, "clearColor");
  *(_QWORD *)&__src[336] = 0x3FB999999999999ALL;
  *(_QWORD *)&__src[344] = objc_msgSend(v4, "whiteColor");
  *(_OWORD *)&__src[352] = xmmword_100EE8AC0;
  *(_QWORD *)&__src[368] = 0x3FD999999999999ALL;
  v69 = objc_msgSend(v4, "whiteColor");
  v70 = objc_msgSend(v4, "tintColor");
  v71 = objc_allocWithZone((Class)UIColor);
  v72 = COERCE_DOUBLE(swift_allocObject(&unk_101107800, 32, 7));
  *(_QWORD *)(*(_QWORD *)&v72 + 16) = v70;
  *(_QWORD *)(*(_QWORD *)&v72 + 24) = v69;
  *(_QWORD *)&aBlock.tx = sub_100BF7188;
  aBlock.ty = v72;
  *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.b = 1107296256;
  *(_QWORD *)&aBlock.c = sub_100264780;
  *(_QWORD *)&aBlock.d = &unk_101107818;
  v73 = _Block_copy(&aBlock);
  v74 = aBlock.ty;
  v75 = v70;
  v76 = v69;
  v77 = objc_msgSend(v71, "initWithDynamicProvider:", v73, swift_release(*(_QWORD *)&v74).n128_f64[0]);

  _Block_release(v73);
  *(_QWORD *)&__src[376] = v77;
  v78 = objc_msgSend(v4, "whiteColor");
  v79 = objc_msgSend(v78, "colorWithAlphaComponent:", 0.175);

  v80 = objc_msgSend(v4, "tintColor");
  v81 = objc_msgSend(v80, "colorWithAlphaComponent:", 0.175);

  v82 = objc_allocWithZone((Class)UIColor);
  v83 = COERCE_DOUBLE(swift_allocObject(&unk_101107850, 32, 7));
  *(_QWORD *)(*(_QWORD *)&v83 + 16) = v81;
  *(_QWORD *)(*(_QWORD *)&v83 + 24) = v79;
  *(_QWORD *)&aBlock.tx = sub_100BF7188;
  aBlock.ty = v83;
  *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.b = 1107296256;
  *(_QWORD *)&aBlock.c = sub_100264780;
  *(_QWORD *)&aBlock.d = &unk_101107868;
  v84 = _Block_copy(&aBlock);
  v85 = aBlock.ty;
  v86 = v81;
  v87 = v79;
  v88 = objc_msgSend(v82, "initWithDynamicProvider:", v84, swift_release(*(_QWORD *)&v85).n128_f64[0]);

  _Block_release(v84);
  *(_QWORD *)&__src[384] = v88;
  *(_QWORD *)&__src[392] = 0x403E000000000000;
  CGAffineTransformMakeScale(&aBlock, 0.95, 0.95);
  *(CGAffineTransform *)&__src[400] = aBlock;
  *(_QWORD *)&__src[448] = 0x3FEB333333333333;
  *(_QWORD *)&__src[456] = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 1.0, 0.08);
  __asm { FMOV            V0.2D, #16.0 }
  *(_OWORD *)&__src[464] = _Q0;
  *(_QWORD *)&__src[480] = 0x401C000000000000;
  *(_QWORD *)&__src[488] = 3;
  *(_OWORD *)&__src[496] = xmmword_100EE8AD0;
  *(_OWORD *)&__src[512] = xmmword_100EE8AE0;
  *(_QWORD *)&__src[528] = 0x3FD0000000000000;
  __src[536] = 1;
  if (a1)
  {
    v94 = swift_retain(a2);
    a1(__src, v94);
    sub_10004BA30((uint64_t)a1, a2);
    sub_10004BA30((uint64_t)a1, a2);
  }
  return memcpy(a3, __src, 0x219uLL);
}

void _s11MusicCoreUI26SyncedLyricsViewControllerC5SpecsV35animateWithHighlightAnimationCurves11highlighted14fadeAnimations09transformP0ySb_yycyyctFZ_0(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  id v14;
  double v15;
  double v16;
  double v17;
  objc_class *v18;
  char *v19;
  double *v20;
  double *v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  void *v34;
  void **aBlock;
  uint64_t v37;
  uint64_t (*v38)(uint64_t);
  void *v39;
  uint64_t v40;
  uint64_t v41;
  objc_super v42;

  v8 = a1 & 1;
  if ((a1 & 1) != 0)
    v9 = 24.0;
  else
    v9 = 50.0;
  if ((a1 & 1) != 0)
    v10 = 322.0;
  else
    v10 = 300.0;
  v11 = 1.0;
  if ((a1 & 1) != 0)
    v12 = 1.0;
  else
    v12 = 2.0;
  v13 = 0.0;
  v14 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", v12, v10, v9, 0.0, 0.0);
  if (v8)
  {
    v15 = 0.55;
    v16 = 0.2;
    v17 = 0.0;
  }
  else
  {
    v15 = 0.25;
    v13 = 0.1;
    v16 = 0.3;
    v11 = 0.1;
    v17 = 0.25;
  }
  v18 = (objc_class *)_s5SpecsV27CustomCurveAnimationFactoryCMa();
  v19 = (char *)objc_allocWithZone(v18);
  v20 = (double *)&v19[OBJC_IVAR____TtCVC11MusicCoreUI26SyncedLyricsViewController5SpecsP33_24E29E585AB6D5A617C4CD1FBB85399D27CustomCurveAnimationFactory_controlPoint1];
  *v20 = v17;
  v20[1] = v13;
  v21 = (double *)&v19[OBJC_IVAR____TtCVC11MusicCoreUI26SyncedLyricsViewController5SpecsP33_24E29E585AB6D5A617C4CD1FBB85399D27CustomCurveAnimationFactory_controlPoint2];
  *v21 = v15;
  v21[1] = v11;
  v42.receiver = v19;
  v42.super_class = v18;
  v22 = objc_msgSendSuper2(&v42, "init");
  v23 = (void *)objc_opt_self(UIView);
  v40 = a2;
  v41 = a3;
  aBlock = _NSConcreteStackBlock;
  v37 = 1107296256;
  v38 = sub_1001DBD98;
  v39 = &unk_1011075C0;
  v24 = _Block_copy(&aBlock);
  v25 = v22;
  swift_retain();
  swift_release();
  objc_msgSend(v23, "_animateWithDuration:delay:options:factory:animations:completion:", 0, v25, v24, 0, v16, v13);
  _Block_release(v24);

  objc_msgSend(v14, "settlingDuration");
  v27 = v26;
  objc_msgSend(v14, "mass");
  v29 = v28;
  objc_msgSend(v14, "stiffness");
  v31 = v30;
  objc_msgSend(v14, "damping");
  v33 = v32;
  v40 = a4;
  v41 = a5;
  aBlock = _NSConcreteStackBlock;
  v37 = 1107296256;
  v38 = sub_1001DBD98;
  v39 = &unk_1011075E8;
  v34 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v23, "_animateUsingSpringWithDuration:delay:options:mass:stiffness:damping:initialVelocity:animations:completion:", 0, v34, 0, v27, v13, v29, v31, v33, 0.0);

  _Block_release(v34);
}

uint64_t sub_100BF66A8(uint64_t a1, uint64_t a2)
{
  _s5SpecsVwcp(a2, a1);
  return a2;
}

id sub_100BF66DC(uint64_t a1, char a2)
{
  double v2;
  double v3;
  double v4;
  double v5;

  if ((a2 & 1) != 0)
    return objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 100.0, 18.0, 0.0, 0.0);
  v2 = (*(double *)&a1 + -0.2) / 0.55;
  if (*(double *)&a1 > 0.75)
    v2 = 1.0;
  v3 = 0.0;
  if (*(double *)&a1 >= 0.2)
    v3 = v2;
  v4 = (1.0 - v3) * 0.12 + 0.78;
  v5 = v3 * 0.27 + 0.48;
  sub_10004A07C(0, &qword_1011E0390, UISpringTimingParameters_ptr);
  return UISpringTimingParameters.init(dampingRatio:response:)(v4, v5);
}

void _s5SpecsVwxx(id *a1)
{

}

uint64_t _s5SpecsVwcp(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  __int128 v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  __int128 v18;
  __int128 v19;
  void *v20;
  __int128 v21;
  __int128 v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v3 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v3;
  v4 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v4;
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  v5 = *(void **)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v5;
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  v7 = *(void **)(a2 + 192);
  v6 = *(void **)(a2 + 200);
  *(_QWORD *)(a1 + 192) = v7;
  *(_QWORD *)(a1 + 200) = v6;
  v8 = *(void **)(a2 + 208);
  *(_QWORD *)(a1 + 208) = v8;
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  v9 = *(void **)(a2 + 232);
  v10 = *(void **)(a2 + 240);
  *(_QWORD *)(a1 + 232) = v9;
  *(_QWORD *)(a1 + 240) = v10;
  v40 = *(void **)(a2 + 248);
  v41 = *(void **)(a2 + 256);
  *(_QWORD *)(a1 + 248) = v40;
  *(_QWORD *)(a1 + 256) = v41;
  v42 = *(void **)(a2 + 264);
  v43 = *(void **)(a2 + 272);
  *(_QWORD *)(a1 + 264) = v42;
  *(_QWORD *)(a1 + 272) = v43;
  v11 = *(_OWORD *)(a2 + 280);
  v12 = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 312) = v12;
  *(_OWORD *)(a1 + 280) = v11;
  v13 = *(_QWORD *)(a2 + 336);
  v39 = *(void **)(a2 + 328);
  *(_QWORD *)(a1 + 328) = v39;
  *(_QWORD *)(a1 + 336) = v13;
  v15 = *(void **)(a2 + 344);
  v14 = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 344) = v15;
  *(_QWORD *)(a1 + 352) = v14;
  *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
  v16 = *(void **)(a2 + 376);
  v17 = *(void **)(a2 + 384);
  *(_QWORD *)(a1 + 376) = v16;
  *(_QWORD *)(a1 + 384) = v17;
  *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
  v18 = *(_OWORD *)(a2 + 400);
  v19 = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 432) = v19;
  *(_OWORD *)(a1 + 400) = v18;
  v20 = *(void **)(a2 + 456);
  *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
  *(_QWORD *)(a1 + 456) = v20;
  v21 = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 480) = v21;
  v22 = *(_OWORD *)(a2 + 512);
  *(_OWORD *)(a1 + 496) = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 512) = v22;
  *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
  *(_BYTE *)(a1 + 536) = *(_BYTE *)(a2 + 536);
  v23 = v5;
  v24 = v7;
  v25 = v6;
  v26 = v8;
  v27 = v9;
  v28 = v10;
  v29 = v40;
  v30 = v41;
  v31 = v42;
  v32 = v43;
  v33 = v39;
  v34 = v15;
  v35 = v16;
  v36 = v17;
  v37 = v20;
  return a1;
}

uint64_t _s5SpecsVwca(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  void *v24;
  void *v25;
  id v26;
  void *v27;
  void *v28;
  id v29;
  void *v30;
  void *v31;
  id v32;
  void *v33;
  void *v34;
  id v35;
  void *v36;
  void *v37;
  id v38;
  void *v39;
  void *v40;
  id v41;
  void *v42;
  void *v43;
  id v44;
  void *v45;
  void *v46;
  id v47;
  void *v48;
  void *v49;
  id v50;
  void *v51;
  void *v52;
  id v53;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_OWORD *)(a2 + 8);
  v5 = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = v5;
  *(_OWORD *)(a1 + 8) = v4;
  v6 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v6;
  v7 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v7;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  v8 = *(void **)(a2 + 168);
  v9 = *(void **)(a1 + 168);
  *(_QWORD *)(a1 + 168) = v8;
  v10 = v8;

  v11 = *(_QWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = v11;
  v12 = *(void **)(a2 + 192);
  v13 = *(void **)(a1 + 192);
  *(_QWORD *)(a1 + 192) = v12;
  v14 = v12;

  v15 = *(void **)(a2 + 200);
  v16 = *(void **)(a1 + 200);
  *(_QWORD *)(a1 + 200) = v15;
  v17 = v15;

  v18 = *(void **)(a2 + 208);
  v19 = *(void **)(a1 + 208);
  *(_QWORD *)(a1 + 208) = v18;
  v20 = v18;

  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  v21 = *(void **)(a2 + 232);
  v22 = *(void **)(a1 + 232);
  *(_QWORD *)(a1 + 232) = v21;
  v23 = v21;

  v24 = *(void **)(a2 + 240);
  v25 = *(void **)(a1 + 240);
  *(_QWORD *)(a1 + 240) = v24;
  v26 = v24;

  v27 = *(void **)(a2 + 248);
  v28 = *(void **)(a1 + 248);
  *(_QWORD *)(a1 + 248) = v27;
  v29 = v27;

  v30 = *(void **)(a2 + 256);
  v31 = *(void **)(a1 + 256);
  *(_QWORD *)(a1 + 256) = v30;
  v32 = v30;

  v33 = *(void **)(a2 + 264);
  v34 = *(void **)(a1 + 264);
  *(_QWORD *)(a1 + 264) = v33;
  v35 = v33;

  v36 = *(void **)(a2 + 272);
  v37 = *(void **)(a1 + 272);
  *(_QWORD *)(a1 + 272) = v36;
  v38 = v36;

  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  v39 = *(void **)(a2 + 328);
  v40 = *(void **)(a1 + 328);
  *(_QWORD *)(a1 + 328) = v39;
  v41 = v39;

  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  v42 = *(void **)(a2 + 344);
  v43 = *(void **)(a1 + 344);
  *(_QWORD *)(a1 + 344) = v42;
  v44 = v42;

  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
  v45 = *(void **)(a2 + 376);
  v46 = *(void **)(a1 + 376);
  *(_QWORD *)(a1 + 376) = v45;
  v47 = v45;

  v48 = *(void **)(a2 + 384);
  v49 = *(void **)(a1 + 384);
  *(_QWORD *)(a1 + 384) = v48;
  v50 = v48;

  *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
  *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
  *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
  *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
  *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
  *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
  *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
  *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
  v51 = *(void **)(a2 + 456);
  v52 = *(void **)(a1 + 456);
  *(_QWORD *)(a1 + 456) = v51;
  v53 = v51;

  *(_QWORD *)(a1 + 464) = *(_QWORD *)(a2 + 464);
  *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
  *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
  *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
  *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
  *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
  *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
  *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
  *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
  *(_BYTE *)(a1 + 536) = *(_BYTE *)(a2 + 536);
  return a1;
}

void *_s5SpecsVwtk(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x219uLL);
}

uint64_t _s5SpecsVwta(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  __int128 v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  __int128 v22;
  void *v23;
  __int128 v24;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v4 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v4;
  v5 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v5;
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  v6 = *(_QWORD *)(a2 + 168);
  v7 = *(void **)(a1 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v6;

  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  v8 = *(void **)(a1 + 192);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);

  v9 = *(void **)(a1 + 200);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);

  v10 = *(void **)(a1 + 208);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);

  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  v11 = *(void **)(a1 + 232);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);

  v12 = *(void **)(a1 + 240);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);

  v13 = *(void **)(a1 + 248);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);

  v14 = *(void **)(a1 + 256);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);

  v15 = *(void **)(a1 + 264);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);

  v16 = *(void **)(a1 + 272);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);

  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  v17 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v17;
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  v18 = *(void **)(a1 + 328);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);

  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  v19 = *(void **)(a1 + 344);
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);

  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
  v20 = *(void **)(a1 + 376);
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);

  v21 = *(void **)(a1 + 384);
  *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);

  *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
  v22 = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 416) = v22;
  *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
  *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
  v23 = *(void **)(a1 + 456);
  *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);

  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
  *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
  *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
  v24 = *(_OWORD *)(a2 + 512);
  *(_OWORD *)(a1 + 496) = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 512) = v24;
  *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
  *(_BYTE *)(a1 + 536) = *(_BYTE *)(a2 + 536);
  return a1;
}

uint64_t _s5SpecsVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 537))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 168);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s5SpecsVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 536) = 0;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 537) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 168) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 537) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SyncedLyricsViewController.Specs()
{
  return &type metadata for SyncedLyricsViewController.Specs;
}

uint64_t _s5SpecsV20SelectedLinePositionOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7F && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 127);
  v3 = (*(_BYTE *)(a1 + 32) & 0x7E | (*(unsigned __int8 *)(a1 + 32) >> 7)) ^ 0x7F;
  if (v3 >= 0x7E)
    v3 = -1;
  return v3 + 1;
}

uint64_t _s5SpecsV20SelectedLinePositionOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 127;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
    {
      *(_OWORD *)result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(_BYTE *)(result + 32) = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
    }
  }
  return result;
}

uint64_t sub_100BF70FC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32) >> 7;
}

uint64_t sub_100BF7108(uint64_t result)
{
  *(_BYTE *)(result + 32) &= ~0x80u;
  return result;
}

uint64_t sub_100BF7118(uint64_t result, char a2)
{
  *(_BYTE *)(result + 32) = *(_BYTE *)(result + 32) & 1 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for SyncedLyricsViewController.Specs.SelectedLinePosition()
{
  return &type metadata for SyncedLyricsViewController.Specs.SelectedLinePosition;
}

uint64_t _s5SpecsV27CustomCurveAnimationFactoryCMa()
{
  return objc_opt_self(_TtCVC11MusicCoreUI26SyncedLyricsViewController5SpecsP33_24E29E585AB6D5A617C4CD1FBB85399D27CustomCurveAnimationFactory);
}

uint64_t sub_100BF715C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100BF718C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100BF719C(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

id sub_100BF71A4(void *a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;

  v2 = *(void **)(v1 + 16);
  v3 = *(void **)(v1 + 24);
  v4 = objc_msgSend(a1, "accessibilityContrast");
  if (v4 == (id)1)
    v5 = v2;
  else
    v5 = v3;
  if (v4 == (id)-1)
    v6 = v3;
  else
    v6 = v5;
  return v6;
}

_QWORD *sub_100BF724C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *result;
  void **v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (v2)
  {
    specialized ContiguousArray.reserveCapacity(_:)(v2);
    v4 = (void **)(a1 + 32);
    do
    {
      v5 = *v4;
      v4 += 2;
      v6 = v5;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v6);
      v7 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v7);
      v8 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v7, v6);
      specialized ContiguousArray._endMutation()(v8);
      --v2;
    }
    while (v2);
    return _swiftEmptyArrayStorage;
  }
  return result;
}

BOOL sub_100BF72F8(_BOOL8 result, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t i;
  uint64_t v5;
  int v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v3 = result;
  if (*(_BYTE *)(a2 + 32) == result)
    return 1;
  if (v2 == 1)
    return 0;
  for (i = 33; ; ++i)
  {
    v5 = i - 31;
    if (__OFADD__(i - 32, 1))
      break;
    v6 = *(unsigned __int8 *)(a2 + i);
    result = v6 == v3;
    if (v6 == v3 || v5 == v2)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_100BF7358(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  id v6;
  void *v7;
  char v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  id v16;
  char v17;
  uint64_t v18;

  if ((unint64_t)a2 >> 62)
    goto LABEL_20;
  v4 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; v4 = _CocoaArrayWrapper.endIndex.getter(v18))
  {
    v5 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      v6 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
LABEL_5:
      v7 = v6;
      type metadata accessor for SyncedLyricsLineView();
      v8 = static NSObject.== infix(_:_:)(v7, a1);

      if ((v8 & 1) != 0)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v4 == 1)
        goto LABEL_18;
      if (v5)
        break;
      v5 = 5;
      while (1)
      {
        v15 = v5 - 3;
        if (__OFADD__(v5 - 4, 1))
          break;
        v16 = *(id *)(a2 + 8 * v5);
        v17 = static NSObject.== infix(_:_:)(v16, a1);

        if ((v17 & 1) != 0)
          goto LABEL_6;
        ++v5;
        if (v15 == v4)
          goto LABEL_18;
      }
      __break(1u);
    }
    v10 = 1;
    while (1)
    {
      v11 = specialized _ArrayBuffer._getElementSlowPath(_:)(v10, a2);
      v12 = v10 + 1;
      if (__OFADD__(v10, 1))
        break;
      v13 = v11;
      v14 = static NSObject.== infix(_:_:)(v11, a1);
      swift_unknownObjectRelease(v13);
      if ((v14 & 1) != 0)
        goto LABEL_6;
      ++v10;
      if (v12 == v4)
        goto LABEL_18;
    }
    __break(1u);
LABEL_20:
    if (a2 < 0)
      v18 = a2;
    else
      v18 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_100BF74CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  if (*(_QWORD *)(a2 + 32) == a1)
    return 0;
  result = 0;
  v5 = v2 - 1;
  while (v5 != result)
  {
    v6 = *(_QWORD *)(a2 + 40 + 8 * result++);
    if (v6 == a1)
      return result;
  }
  return 0;
}

void sub_100BF7530(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  id v5;
  void *v6;
  char v7;
  uint64_t i;
  id v9;
  void *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;

  if ((unint64_t)a2 >> 62)
    goto LABEL_20;
  v4 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
      }
      else
      {
        if (!*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        v5 = *(id *)(a2 + 32);
      }
      v6 = v5;
      type metadata accessor for SyncedLyricsLineView();
      v7 = static NSObject.== infix(_:_:)(v6, a1);

      if ((v7 & 1) == 0)
      {
        for (i = 0; ; ++i)
        {
          v12 = i + 1;
          if (__OFADD__(i, 1))
            break;
          if (v12 == v4)
            return;
          if ((a2 & 0xC000000000000001) != 0)
          {
            v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i + 1, a2);
          }
          else
          {
            if ((v12 & 0x8000000000000000) != 0)
              goto LABEL_18;
            if (v12 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_19;
            v9 = *(id *)(a2 + 32 + 8 * v12);
          }
          v10 = v9;
          v11 = static NSObject.== infix(_:_:)(v9, a1);

          if ((v11 & 1) != 0)
            return;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        v13 = a2 < 0 ? a2 : a2 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        v4 = _CocoaArrayWrapper.endIndex.getter(v13);
        swift_bridgeObjectRelease();
        if (v4)
          continue;
      }
      return;
    }
  }
}

uint64_t sub_100BF76B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD v21[4];

  v6 = type metadata accessor for TaskPriority(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) == 1)
  {
    sub_10004FF60(a1, &qword_1011E0490);
    v9 = 7168;
    v10 = *(_QWORD *)(a3 + 16);
    if (v10)
    {
LABEL_3:
      v11 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v10, v13);
      v14 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v11);
      v16 = v15;
      swift_unknownObjectRelease(v10);
      goto LABEL_6;
    }
  }
  else
  {
    v17 = TaskPriority.rawValue.getter(v8);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    v9 = v17 | 0x1C00;
    v10 = *(_QWORD *)(a3 + 16);
    if (v10)
      goto LABEL_3;
  }
  v14 = 0;
  v16 = 0;
LABEL_6:
  v18 = swift_allocObject(&unk_101108220, 32, 7);
  *(_QWORD *)(v18 + 16) = a2;
  *(_QWORD *)(v18 + 24) = a3;
  if (v16 | v14)
  {
    v21[0] = 0;
    v21[1] = 0;
    v19 = v21;
    v21[2] = v14;
    v21[3] = v16;
  }
  else
  {
    v19 = 0;
  }
  return swift_task_create(v9, v19, (char *)&type metadata for () + 8, &unk_1011E0708, v18);
}

uint64_t sub_100BF7804(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100BF783C(a1, a2, a3, (uint64_t)&unk_101107EB0, &qword_1011E0690, (uint64_t)&unk_1011E0688);
}

uint64_t sub_100BF7820(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100BF783C(a1, a2, a3, (uint64_t)&unk_101107AC8, &qword_1011E0640, (uint64_t)&unk_1011E0638);
}

uint64_t sub_100BF783C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD v28[4];

  v12 = type metadata accessor for TaskPriority(0);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(a1, 1, v12) == 1)
  {
    sub_10004FF60(a1, &qword_1011E0490);
    v15 = 7168;
    v16 = *(_QWORD *)(a3 + 16);
    if (v16)
    {
LABEL_3:
      v17 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v16, v19);
      v20 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v17);
      v22 = v21;
      swift_unknownObjectRelease(v16);
      goto LABEL_6;
    }
  }
  else
  {
    v23 = TaskPriority.rawValue.getter(v14);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a1, v12);
    v15 = v23 | 0x1C00;
    v16 = *(_QWORD *)(a3 + 16);
    if (v16)
      goto LABEL_3;
  }
  v20 = 0;
  v22 = 0;
LABEL_6:
  v24 = swift_allocObject(a4, 32, 7);
  *(_QWORD *)(v24 + 16) = a2;
  *(_QWORD *)(v24 + 24) = a3;
  v25 = sub_100007E8C(a5);
  if (v22 | v20)
  {
    v28[0] = 0;
    v28[1] = 0;
    v26 = v28;
    v28[2] = v20;
    v28[3] = v22;
  }
  else
  {
    v26 = 0;
  }
  return swift_task_create(v15, v26, v25, a6, v24);
}

uint64_t SyncedLyricsSharingTransitionInfo.line.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100BF79A4(v1, a1);
}

uint64_t sub_100BF79A4(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for Lyrics.TextLine(a2, a1);
  return a2;
}

uint64_t SyncedLyricsSharingTransitionInfo.line.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_100BF79E8(a1, v1);
}

uint64_t sub_100BF79E8(uint64_t a1, uint64_t a2)
{
  assignWithTake for Lyrics.TextLine(a2, a1);
  return a2;
}

id JSBridge.Singletons.restrictions.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 104);
}

void SyncedLyricsSharingTransitionInfo.initialView.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 104) = a1;
}

double (*SyncedLyricsSharingTransitionInfo.initialView.modify())(_QWORD)
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t SyncedLyricsSharingTransitionInfo.alignment.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 112);
}

uint64_t SyncedLyricsSharingTransitionInfo.alignment.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 112) = result;
  return result;
}

double SyncedLyricsSharingTransitionInfo.frame.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 120);
}

void SyncedLyricsSharingTransitionInfo.frame.setter(double a1, double a2, double a3, double a4)
{
  double *v4;

  v4[15] = a1;
  v4[16] = a2;
  v4[17] = a3;
  v4[18] = a4;
}

double (*SyncedLyricsSharingTransitionInfo.frame.modify())(_QWORD)
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t SyncedLyricsSharingTransitionInfo.isSelected.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 152);
}

uint64_t SyncedLyricsSharingTransitionInfo.isSelected.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 152) = result;
  return result;
}

__n128 SyncedLyricsSharingTransitionInfo.transform.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(v1 + 176);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 160);
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(v1 + 192);
  *(__n128 *)(a1 + 32) = result;
  return result;
}

__n128 SyncedLyricsSharingTransitionInfo.transform.setter(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 160) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 176) = v2;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 192) = result;
  return result;
}

uint64_t SyncedLyricsSharingTransitionInfo.transitionWillBeginHandler.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 208);
  swift_retain(*(_QWORD *)(v0 + 216));
  return v1;
}

void SyncedLyricsSharingTransitionInfo.transitionWillBeginHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_release(*(_QWORD *)(v2 + 216));
  *(_QWORD *)(v2 + 208) = a1;
  *(_QWORD *)(v2 + 216) = a2;
}

uint64_t SyncedLyricsSharingTransitionInfo.transitionCompletionHandler.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 224);
  swift_retain(*(_QWORD *)(v0 + 232));
  return v1;
}

void SyncedLyricsSharingTransitionInfo.transitionCompletionHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_release(*(_QWORD *)(v2 + 232));
  *(_QWORD *)(v2 + 224) = a1;
  *(_QWORD *)(v2 + 232) = a2;
}

double (*SyncedLyricsSharingTransitionInfo.transitionCompletionHandler.modify())(_QWORD)
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t SyncedLyricsViewController.isPlayingSpatial.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isPlayingSpatial);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isPlayingSpatial, v3, 0, 0);
  return *v1;
}

void SyncedLyricsViewController.isPlayingSpatial.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v6[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isPlayingSpatial);
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isPlayingSpatial, v6, 1, 0);
  *v3 = a1;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager);
  if (v4)
  {
    swift_beginAccess(v4 + 88, &v5, 1, 0);
    *(_BYTE *)(v4 + 88) = a1 & 1;
  }
}

void (*SyncedLyricsViewController.isPlayingSpatial.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isPlayingSpatial;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  return sub_100BF7CBC;
}

void sub_100BF7CBC(_QWORD *a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = (_QWORD *)*a1;
  swift_endAccess(*a1);
  if ((a2 & 1) == 0)
  {
    v4 = v3[3];
    v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager);
    if (v5)
    {
      v6 = *(_BYTE *)(v4 + v3[4]);
      swift_beginAccess(v5 + 88, v3, 1, 0);
      *(_BYTE *)(v5 + 88) = v6;
    }
  }
  free(v3);
}

uint64_t SyncedLyricsViewController.isFullScreen.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isFullScreen);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isFullScreen, v3, 0, 0);
  return *v1;
}

void SyncedLyricsViewController.isFullScreen.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  _BYTE v4[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isFullScreen);
  swift_beginAccess(v3, v4, 1, 0);
  *v3 = a1;
}

uint64_t (*SyncedLyricsViewController.isFullScreen.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isFullScreen, a1, 33, 0);
  return j__swift_endAccess;
}

double SyncedLyricsViewController.bottomTapAreaHeight.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_bottomTapAreaHeight;
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_bottomTapAreaHeight, v3, 0, 0);
  return *(double *)v1;
}

void SyncedLyricsViewController.bottomTapAreaHeight.setter(double a1)
{
  uint64_t v1;
  double *v3;
  _BYTE v4[24];

  v3 = (double *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_bottomTapAreaHeight);
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_bottomTapAreaHeight, v4, 1, 0);
  *v3 = a1;
}

uint64_t (*SyncedLyricsViewController.bottomTapAreaHeight.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_bottomTapAreaHeight, a1, 33, 0);
  return j_j__swift_endAccess;
}

double SyncedLyricsViewController.containerHeight.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight;
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight, v3, 0, 0);
  return *(double *)v1;
}

void SyncedLyricsViewController.containerHeight.setter(double a1)
{
  uint64_t v1;
  double *v3;
  double v4;
  _BYTE v5[24];

  v3 = (double *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight);
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;
  if (v4 != a1)
    sub_100BFC72C();
}

void (*SyncedLyricsViewController.containerHeight.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight;
  v3[4] = v1;
  v3[5] = v4;
  v5 = (_QWORD *)(v1 + v4);
  swift_beginAccess(v1 + v4, v3, 1, 0);
  v3[3] = *v5;
  return sub_100BF7FE0;
}

void sub_100BF7FE0(uint64_t a1)
{
  void *v1;
  double v2;
  uint64_t v3;
  uint64_t v4;
  double v5;

  v1 = *(void **)a1;
  v2 = *(double *)(*(_QWORD *)a1 + 24);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  v5 = *(double *)(v4 + v3);
  *(double *)(v4 + v3) = v2;
  if (v2 != v5)
    sub_100BFC72C();
  free(v1);
}

void sub_100BF8024(uint64_t a1)
{
  char *v1;
  char *v2;
  unsigned __int8 *v4;
  char v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *i;
  char *v11;
  char *v12;
  void **v13;
  void (*v14)(__int128 *, char);
  void **v15;
  void *v16;
  _QWORD *v17;
  uint64_t ObjectType;
  uint64_t v19;
  char *v20;
  void (*v21)(_BYTE *, uint64_t, _QWORD *);
  id v22;
  void *v23;
  uint64_t v24;
  unsigned __int8 *v25;
  unint64_t v26;
  uint64_t v27;
  _BYTE v28[32];
  _BYTE v29[544];
  _BYTE v30[544];
  char v31[24];
  char v32[24];
  _BYTE v33[544];
  _BYTE __dst[552];

  v2 = v1;
  if (objc_msgSend(v2, "isViewLoaded"))
  {
    v4 = (unsigned __int8 *)&v2[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
    swift_beginAccess(&v2[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs], v32, 0, 0);
    memcpy(__dst, v4, 0x219uLL);
    sub_10024E6C8((uint64_t)__dst);
    v5 = _s11MusicCoreUI26SyncedLyricsViewControllerC5SpecsV23__derived_struct_equalsySbAE_AEtFZ_0((uint64_t)__dst, a1);
    sub_10024E458((uint64_t)__dst);
    if ((v5 & 1) == 0)
    {
      sub_100BFC72C();
      objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView], "setShowsVerticalScrollIndicator:", v4[536]);
      v6 = (uint64_t *)&v2[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
      swift_beginAccess(&v2[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews], v31, 0, 0);
      v7 = *v6;
      if ((unint64_t)*v6 >> 62)
      {
        if (v7 < 0)
          v24 = *v6;
        else
          v24 = v7 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        v8 = _CocoaArrayWrapper.endIndex.getter(v24);
        if (v8)
          goto LABEL_5;
      }
      else
      {
        v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v8)
        {
LABEL_5:
          v27 = v8 - 1;
          if (v8 < 1)
          {
            __break(1u);
            return;
          }
          v9 = 0;
          v25 = v4;
          v26 = v7 & 0xC000000000000001;
          if ((v7 & 0xC000000000000001) == 0)
            goto LABEL_8;
LABEL_7:
          for (i = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v7);
                ;
                i = (char *)*(id *)(v7 + 8 * v9 + 32))
          {
            v11 = i;
            memcpy(v29, v4, 0x219uLL);
            v12 = &v11[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs];
            memcpy(v30, &v11[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs], 0x219uLL);
            memmove(&v11[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs], v4, 0x219uLL);
            sub_10024E6C8((uint64_t)v29);
            sub_10024E6C8((uint64_t)v29);
            sub_10024E458((uint64_t)v30);
            v14 = sub_100BEF894((uint64_t)v28);
            if (*v13)
            {
              v15 = v13;
              memcpy(v33, v12, 0x219uLL);
              v16 = *v15;
              v17 = v15[1];
              ObjectType = swift_getObjectType();
              v19 = v7;
              v20 = v2;
              v21 = (void (*)(_BYTE *, uint64_t, _QWORD *))v17[2];
              sub_10024E6C8((uint64_t)v33);
              v22 = v16;
              v21(v33, ObjectType, v17);
              v2 = v20;
              v7 = v19;
              v23 = *v15;
              *v15 = v16;
              v15[1] = v17;

            }
            v14((__int128 *)v28, 0);
            sub_10024E458((uint64_t)v29);
            sub_100BFD9EC(v11);

            if (v27 == v9)
              break;
            ++v9;
            v4 = v25;
            if (v26)
              goto LABEL_7;
LABEL_8:
            ;
          }
        }
      }
      swift_bridgeObjectRelease();
    }
  }
}

void *SyncedLyricsViewController.specs.getter@<X0>(void *a1@<X8>)
{
  uint64_t v1;
  const void *v3;
  _BYTE v5[24];
  _BYTE __dst[544];

  v3 = (const void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs);
  swift_beginAccess(v3, v5, 0, 0);
  memcpy(__dst, v3, 0x219uLL);
  sub_10024E6C8((uint64_t)__dst);
  return memcpy(a1, __dst, 0x219uLL);
}

uint64_t SyncedLyricsViewController.specs.setter(const void *a1)
{
  uint64_t v1;
  void *v3;
  _BYTE v5[24];
  _BYTE __dst[544];
  _BYTE v7[544];

  v3 = (void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs);
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs, v5, 1, 0);
  memcpy(__dst, v3, 0x219uLL);
  memcpy(v7, v3, 0x219uLL);
  memcpy(v3, a1, 0x219uLL);
  sub_10024E6C8((uint64_t)__dst);
  sub_10024E6C8((uint64_t)a1);
  sub_10024E458((uint64_t)v7);
  sub_100BF8024((uint64_t)__dst);
  sub_10024E458((uint64_t)a1);
  return sub_10024E458((uint64_t)__dst);
}

void (*SyncedLyricsViewController.specs.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  const void *v5;

  v3 = malloc(0xF08uLL);
  *a1 = v3;
  v3[479] = v1;
  v4 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs;
  v3[480] = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs;
  v5 = (const void *)(v1 + v4);
  swift_beginAccess(v5, v3 + 476, 1, 0);
  memcpy(v3, v5, 0x219uLL);
  memcpy(v3 + 204, v5, 0x219uLL);
  sub_10024E6C8((uint64_t)v3);
  return sub_100BF847C;
}

void sub_100BF847C(uint64_t a1, char a2)
{
  _QWORD *v2;
  const void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;

  v2 = *(_QWORD **)a1;
  v3 = (const void *)(*(_QWORD *)a1 + 1632);
  v4 = (void *)(*(_QWORD *)a1 + 2176);
  v5 = (void *)(*(_QWORD *)a1 + 2720);
  if ((a2 & 1) != 0)
  {
    v6 = (void *)(v2[479] + v2[480]);
    memcpy(v2 + 408, v3, 0x219uLL);
    memcpy(v2 + 68, v6, 0x219uLL);
    memcpy(v5, v6, 0x219uLL);
    memcpy(v6, v3, 0x219uLL);
    sub_10024E6C8((uint64_t)(v2 + 408));
    sub_10024E6C8((uint64_t)(v2 + 408));
    sub_10024E6C8((uint64_t)(v2 + 68));
    sub_10024E458((uint64_t)v5);
    sub_100BF8024((uint64_t)(v2 + 68));
    sub_10024E458((uint64_t)(v2 + 408));
    sub_10024E458((uint64_t)(v2 + 68));
    memcpy(v4, v3, 0x219uLL);
    v7 = (uint64_t)v4;
  }
  else
  {
    v8 = (void *)(v2[479] + v2[480]);
    memcpy((void *)(*(_QWORD *)a1 + 2176), v3, 0x219uLL);
    memcpy(v2 + 136, v8, 0x219uLL);
    memcpy(v5, v8, 0x219uLL);
    memcpy(v8, v3, 0x219uLL);
    sub_10024E6C8((uint64_t)(v2 + 136));
    sub_10024E6C8((uint64_t)v4);
    sub_10024E458((uint64_t)v5);
    sub_100BF8024((uint64_t)(v2 + 136));
    sub_10024E458((uint64_t)v4);
    v7 = (uint64_t)(v2 + 136);
  }
  sub_10024E458(v7);
  free(v2);
}

uint64_t SyncedLyricsViewController.delegate.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate;
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate, v3, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v1);
}

double SyncedLyricsViewController.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  double result;
  _BYTE v7[24];

  v5 = v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate;
  swift_beginAccess(v5, v7, 1, 0);
  *(_QWORD *)(v5 + 8) = a2;
  swift_unknownObjectWeakAssign(v5, a1);
  *(_QWORD *)&result = swift_unknownObjectRelease(a1).n128_u64[0];
  return result;
}

void (*SyncedLyricsViewController.delegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = Strong;
  v3[4] = v7;
  return sub_100BF8710;
}

void sub_100BF8710(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 40) + *(_QWORD *)(*(_QWORD *)a1 + 48);
  *(_QWORD *)(v6 + 8) = v5;
  swift_unknownObjectWeakAssign(v6, v4);
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease(v3[3]);
    swift_endAccess(v3);
  }
  else
  {
    swift_endAccess(v3);
    swift_unknownObjectRelease(v4);
  }
  free(v3);
}

uint64_t SyncedLyricsViewController.mode.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode, v3, 0, 0);
  return *v1;
}

void sub_100BF87C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  _QWORD *v5;
  void *v6;
  _QWORD *v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  void *v26;
  id v27;
  void *v28;
  void *v29;
  _BYTE v30[24];
  _BYTE v31[24];
  _BYTE v32[24];
  _BYTE v33[24];
  _BYTE v34[24];
  _BYTE v35[24];
  _BYTE v36[24];

  v2 = v1;
  v4 = (uint64_t *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics);
  swift_beginAccess(v4, v36, 0, 0);
  if (*v4)
  {
    if (a1 && *v4 == a1)
      return;
  }
  else if (!a1)
  {
    return;
  }
  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews);
  swift_beginAccess(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews, v35, 1, 0);
  *v5 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
    && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    sub_100BBFE54((uint64_t)_swiftEmptyArrayStorage);
    v6 = v29;
  }
  else
  {
    v6 = &_swiftEmptySetSingleton;
  }
  v7 = (_QWORD *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews);
  swift_beginAccess(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews, v34, 1, 0);
  *v7 = v6;
  *(_QWORD *)&v8 = swift_bridgeObjectRelease().n128_u64[0];
  v9 = *v4;
  if (*v4)
  {
    v10 = swift_allocObject(&unk_1011078B8, 24, 7);
    swift_unknownObjectWeakInit(v10 + 16);
    v11 = (_QWORD *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs);
    swift_beginAccess(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs, v33, 0, 0);
    v12 = v11[66];
    v13 = v11[19];
    v14 = v11[20];
    v15 = (char *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isPlayingSpatial);
    swift_beginAccess(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isPlayingSpatial, v32, 0, 0);
    v16 = *v15;
    v17 = type metadata accessor for SyncedLyricsManager();
    v18 = swift_allocObject(v17, 152, 7);
    *(_QWORD *)(v18 + 72) = 0;
    v19 = swift_unknownObjectWeakInit(v18 + 64);
    *(_QWORD *)(v18 + 80) = _swiftEmptyArrayStorage;
    *(_OWORD *)(v18 + 96) = 0u;
    *(_OWORD *)(v18 + 112) = 0u;
    *(_OWORD *)(v18 + 128) = 0u;
    *(_QWORD *)(v18 + 144) = 0;
    *(_QWORD *)(v18 + 16) = v9;
    *(_QWORD *)(v18 + 24) = sub_100C07C1C;
    *(_QWORD *)(v18 + 32) = v10;
    *(_QWORD *)(v18 + 40) = v12;
    *(_QWORD *)(v18 + 48) = v13;
    *(_QWORD *)(v18 + 56) = v14;
    swift_beginAccess(v19, v31, 1, 0);
    *(_QWORD *)(v18 + 72) = &protocol witness table for SyncedLyricsViewController;
    swift_unknownObjectWeakAssign(v18 + 64, v2);
    *(_BYTE *)(v18 + 88) = v16;
    v20 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager;
    *(_QWORD *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager) = v18;
    swift_retain_n(v9, 2);
    swift_retain();
    swift_release();
    sub_100C03BC8();
    sub_100BFDBF8(v9);
    v21 = *(_QWORD *)(v2 + v20);
    if (v21)
    {
      v22 = swift_allocObject(&unk_1011078B8, 24, 7);
      swift_unknownObjectWeakInit(v22 + 16);
      swift_beginAccess(v21 + 96, v30, 1, 0);
      v23 = *(_QWORD *)(v21 + 96);
      v24 = *(_QWORD *)(v21 + 104);
      *(_QWORD *)(v21 + 96) = sub_100C07B8C;
      *(_QWORD *)(v21 + 104) = v22;
      swift_retain();
      swift_retain_n(v22, 2);
      sub_10004BA30(v23, v24);
      sub_100BF2648();
      swift_release_n(v22, 2, v25);
      swift_release();
    }
    v26 = *(void **)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink);
    if (v26)
    {
      v27 = v26;
      objc_msgSend(v27, "setPaused:", sub_100BFEB94() & 1);
      swift_release();

    }
    else
    {
      swift_release();
    }
  }
  else
  {
    v28 = *(void **)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink);
    if (v28)
      objc_msgSend(v28, "setPaused:", 1, v8);
    *(_QWORD *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager) = 0;
  }
  swift_release();
}

double sub_100BF8B34(uint64_t a1, double a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  double v7;
  double v8;
  double v9;
  id v10;
  void *v11;
  double v12;
  double v13;
  uint64_t v15;
  _BYTE v16[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (!Strong)
    return 0.0;
  v5 = (void *)Strong;
  v6 = Strong + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics;
  swift_beginAccess(Strong + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics, &v15, 0, 0);
  if (*(_QWORD *)v6 && *(_BYTE *)(*(_QWORD *)v6 + 56) == 2)
  {
    v7 = (a2 + -0.2) / 0.55;
    if (a2 > 0.75)
      v7 = 1.0;
    if (a2 < 0.2)
      v7 = 0.0;
    v8 = (1.0 - v7) * 0.12 + 0.78;
    v9 = v7 * 0.27 + 0.48;
    sub_10004A07C(0, &qword_1011E0390, UISpringTimingParameters_ptr);
    v10 = UISpringTimingParameters.init(dampingRatio:response:)(v8, v9);
  }
  else
  {
    v10 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 100.0, 18.0, 0.0, 0.0);
  }
  v11 = v10;

  objc_msgSend(v11, "settlingDuration");
  v13 = v12;

  return v13;
}

uint64_t SyncedLyricsViewController.lyrics.getter()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics, v3, 0, 0);
  return swift_retain(*v1);
}

double SyncedLyricsViewController.lyrics.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  double result;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics);
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  swift_retain();
  sub_100BF87C8(v4);
  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void (*SyncedLyricsViewController.lyrics.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics;
  v3[4] = v1;
  v3[5] = v4;
  v5 = (_QWORD *)(v1 + v4);
  swift_beginAccess(v1 + v4, v3, 1, 0);
  v3[3] = *v5;
  swift_retain();
  return sub_100BF8DE4;
}

void sub_100BF8DE4(uint64_t a1, char a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  v6 = *(_QWORD *)(v5 + v4);
  *(_QWORD *)(v5 + v4) = v3;
  if ((a2 & 1) != 0)
  {
    swift_retain_n(v3, 2);
    sub_100BF87C8(v6);
    swift_release();
  }
  else
  {
    swift_retain();
    sub_100BF87C8(v6);
  }
  swift_release();
  swift_release();
  free(v2);
}

void sub_100BF8E78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double (*v7)(void);
  double v8;
  uint64_t v9;
  uint64_t v10;
  double (*v11)(void);
  double v12;
  _BYTE *v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  void *v24;
  id v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[24];
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;

  v2 = v1;
  v4 = v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider;
  swift_beginAccess(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider, v30, 0, 0);
  sub_100BFCAD8(v4, (uint64_t)&v27);
  if (v28)
  {
    sub_100064C48(&v27, (uint64_t)v31);
    sub_100BFCAD8(a1, (uint64_t)&v27);
    v5 = v28;
    if (v28)
    {
      v6 = v29;
      sub_100007E68(&v27, v28);
      v7 = (double (*)(void))(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
      v8 = v7();
      swift_release();
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v27);
      v9 = v32;
      v10 = v33;
      sub_100007E68(v31, v32);
      v11 = (double (*)(void))(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
      v12 = v11();
      swift_release();
      if (vabdd_f64(v8, v12) <= 0.5)
      {
        v13 = (_BYTE *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode);
        swift_beginAccess(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode, &v26, 0, 0);
        if (*v13 != 2)
        {
          v14 = *(void **)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink);
          if (v14)
          {
            v15 = v14;
            objc_msgSend(v15, "setPaused:", sub_100BFEB94() & 1);

          }
          _s5Music18DragDropToPlaylistV6OriginVwxx_0(v31);
          return;
        }
      }
    }
    else
    {
      sub_10004FF60((uint64_t)&v27, &qword_1011E0480);
    }
    v19 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager);
    if (v19)
    {
      v20 = swift_allocObject(&unk_1011078B8, 24, 7);
      swift_unknownObjectWeakInit(v20 + 16);
      swift_beginAccess(v19 + 96, &v27, 1, 0);
      v21 = *(_QWORD *)(v19 + 96);
      v22 = *(_QWORD *)(v19 + 104);
      *(_QWORD *)(v19 + 96) = sub_100C07B8C;
      *(_QWORD *)(v19 + 104) = v20;
      swift_retain();
      swift_retain_n(v20, 2);
      sub_10004BA30(v21, v22);
      sub_100BF2648();
      swift_release_n(v20, 2, v23);
      swift_release();
    }
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v31);
  }
  else
  {
    sub_10004FF60((uint64_t)&v27, &qword_1011E0480);
    v16 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager);
    if (v16)
    {
      swift_beginAccess(v16 + 96, v31, 1, 0);
      v17 = *(_QWORD *)(v16 + 96);
      v18 = *(_QWORD *)(v16 + 104);
      *(_QWORD *)(v16 + 96) = 0;
      *(_QWORD *)(v16 + 104) = 0;
      swift_retain();
      sub_10004BA30(v17, v18);
      sub_100BF2648();
      swift_release();
    }
  }
  v24 = *(void **)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink);
  if (v24)
  {
    v25 = v24;
    objc_msgSend(v25, "setPaused:", sub_100BFEB94() & 1);

  }
}

double sub_100BF9144(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  double v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  double (*v12)(uint64_t);
  uint64_t v13;
  _BYTE v16[24];
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v20, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  v3 = 0.0;
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = Strong + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider;
    swift_beginAccess(Strong + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider, v16, 0, 0);
    sub_100BFCAD8(v5, (uint64_t)v17);

    v6 = v18;
    if (v18)
    {
      v7 = v19;
      sub_100007E68(v17, v18);
      v8 = *(_QWORD *)(v6 - 8);
      v9 = __chkstk_darwin();
      v11 = &v16[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
      (*(void (**)(char *, __n128))(v8 + 16))(v11, v9);
      sub_10004FF60((uint64_t)v17, &qword_1011E0480);
      v12 = (double (*)(uint64_t))(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
      v13 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v6);
      v3 = v12(v13);
      swift_release();
    }
    else
    {
      sub_10004FF60((uint64_t)v17, &qword_1011E0480);
    }
  }
  return v3;
}

uint64_t SyncedLyricsViewController.timingProvider.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_100BFCAD8(v3, a1);
}

uint64_t SyncedLyricsViewController.timingProvider.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];
  _BYTE v6[24];
  _BYTE v7[40];

  v3 = v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider;
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider, v6, 0, 0);
  sub_100BFCAD8(v3, (uint64_t)v7);
  swift_beginAccess(v3, v5, 33, 0);
  sub_100BFCB20(a1, v3);
  swift_endAccess(v5);
  sub_100BF8E78((uint64_t)v7);
  sub_10004FF60(a1, &qword_1011E0480);
  return sub_10004FF60((uint64_t)v7, &qword_1011E0480);
}

void (*SyncedLyricsViewController.timingProvider.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0xB8uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider;
  v3[21] = v1;
  v3[22] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3 + 18, 0, 0);
  sub_100BFCAD8(v5, (uint64_t)v3);
  return sub_100BF9404;
}

void sub_100BF9404(uint64_t *a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = (_QWORD *)*a1;
  v3 = *a1 + 40;
  v4 = *a1 + 80;
  if ((a2 & 1) != 0)
  {
    v5 = v2[21] + v2[22];
    sub_100BFCAD8(*a1, v3);
    sub_100BFCAD8(v5, v4);
    swift_beginAccess(v5, v2 + 15, 33, 0);
    sub_100BFCB20(v3, v5);
    swift_endAccess(v2 + 15);
    sub_100BF8E78(v4);
    sub_10004FF60(v3, &qword_1011E0480);
    sub_10004FF60(v4, &qword_1011E0480);
    v6 = (uint64_t)v2;
  }
  else
  {
    v7 = v2[21] + v2[22];
    sub_100BFCAD8(v7, v3);
    swift_beginAccess(v7, v4, 33, 0);
    sub_100BFCB20((uint64_t)v2, v7);
    swift_endAccess(v4);
    sub_100BF8E78(v3);
    sub_10004FF60((uint64_t)v2, &qword_1011E0480);
    v6 = v3;
  }
  sub_10004FF60(v6, &qword_1011E0480);
  free(v2);
}

uint64_t SyncedLyricsViewController.shareHandler.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_shareHandler);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_shareHandler, v4, 0, 0);
  v2 = *v1;
  sub_100048AAC(*v1, v1[1]);
  return v2;
}

uint64_t SyncedLyricsViewController.shareHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_shareHandler);
  swift_beginAccess(v5, v9, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return sub_10004BA30(v6, v7);
}

uint64_t (*SyncedLyricsViewController.shareHandler.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_shareHandler, a1, 33, 0);
  return j_j__swift_endAccess;
}

Swift::Void __swiftcall SyncedLyricsViewController.viewDidLoad()()
{
  char *v0;
  char *v1;
  uint64_t ObjectType;
  uint64_t v3;
  char *v4;
  objc_class *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  id v18;
  uint64_t v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  _QWORD *v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  _QWORD *v42;
  id v43;
  id v44;
  void *v45;
  uint64_t v46;
  char v47[24];
  objc_super v48;

  v1 = v0;
  ObjectType = swift_getObjectType();
  sub_100007E8C(&qword_1011E0490);
  __chkstk_darwin();
  v4 = &v47[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = (objc_class *)type metadata accessor for SyncedLyricsViewController();
  v48.receiver = v0;
  v48.super_class = v5;
  objc_msgSendSuper2(&v48, "viewDidLoad");
  v6 = objc_msgSend(v0, "view");
  if (!v6)
  {
    __break(1u);
    goto LABEL_7;
  }
  v7 = v6;
  objc_msgSend(v6, "setPreservesSuperviewLayoutMargins:", 1);

  objc_msgSend(v1, "setViewRespectsSystemMinimumLayoutMargins:", 0);
  v8 = objc_msgSend(v1, "view");
  if (!v8)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v9 = v8;
  objc_msgSend(v8, "bounds");
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v17 = v16;

  v18 = objc_msgSend(objc_allocWithZone((Class)UIScrollView), "initWithFrame:", v11, v13, v15, v17);
  v19 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
  v20 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView];
  *(_QWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView] = v18;

  objc_msgSend(*(id *)&v1[v19], "setClipsToBounds:", 0);
  objc_msgSend(*(id *)&v1[v19], "setIndicatorStyle:", 2);
  objc_msgSend(*(id *)&v1[v19], "setShowsHorizontalScrollIndicator:", 0);
  objc_msgSend(*(id *)&v1[v19], "setAutoresizingMask:", 18);
  objc_msgSend(*(id *)&v1[v19], "setDelegate:", v1);
  objc_msgSend(*(id *)&v1[v19], "setMultipleTouchEnabled:", 0);
  objc_msgSend(*(id *)&v1[v19], "setShowsVerticalScrollIndicator:", v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs + 536], swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs], v47, 0, 0).n128_f64[0]);
  v21 = objc_msgSend(v1, "view");
  if (!v21)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v22 = v21;
  objc_msgSend(v21, "addSubview:", *(_QWORD *)&v1[v19]);

  v23 = (void *)objc_opt_self(NSNotificationCenter);
  v24 = objc_msgSend(v23, "defaultCenter");
  v25 = NSNotificationCenter.notifications(named:object:)(UISceneDidEnterBackgroundNotification, 0);

  v26 = objc_msgSend(v23, "defaultCenter");
  v46 = NSNotificationCenter.notifications(named:object:)(UISceneWillEnterForegroundNotification, 0);

  v27 = sub_100007E8C(&qword_1011E04A0);
  v28 = swift_allocObject(v27, 48, 7);
  *(_OWORD *)(v28 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v28 + 32) = type metadata accessor for UITraitAccessibilityContrast(0);
  *(_QWORD *)(v28 + 40) = &protocol witness table for UITraitAccessibilityContrast;
  v29 = UIViewController.registerForTraitChanges<A>(_:handler:)(v28, sub_100C04810, 0, ObjectType);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease(v29);
  v30 = type metadata accessor for TaskPriority(0);
  v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56);
  v31(v4, 1, 1, v30);
  v32 = (uint64_t)v4;
  v33 = swift_allocObject(&unk_1011078B8, 24, 7);
  swift_unknownObjectWeakInit(v33 + 16);
  type metadata accessor for MainActor(0);
  swift_retain();
  v34 = swift_retain();
  v35 = static MainActor.shared.getter(v34);
  v36 = (_QWORD *)swift_allocObject(&unk_1011078E0, 48, 7);
  v36[2] = v35;
  v36[3] = &protocol witness table for MainActor;
  v36[4] = v25;
  v36[5] = v33;
  swift_release();
  sub_100BF76B8(v32, (uint64_t)&unk_1011E04B0, (uint64_t)v36);
  v37 = swift_release();
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))v31)(v32, 1, 1, v30, v37);
  v38 = v46;
  v39 = swift_allocObject(&unk_1011078B8, 24, 7);
  swift_unknownObjectWeakInit(v39 + 16);
  swift_retain();
  v40 = swift_retain();
  v41 = static MainActor.shared.getter(v40);
  v42 = (_QWORD *)swift_allocObject(&unk_101107908, 48, 7);
  v42[2] = v41;
  v42[3] = &protocol witness table for MainActor;
  v42[4] = v38;
  v42[5] = v39;
  swift_release();
  sub_100BF76B8(v32, (uint64_t)&unk_1011E04C0, (uint64_t)v42);
  swift_release();
  v43 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "init");
  objc_msgSend(v43, "setDelegate:", v1);
  objc_msgSend(v43, "addTarget:action:", v1, "bottomTapHandler");
  v44 = objc_msgSend(v1, "view");
  if (v44)
  {
    v45 = v44;
    objc_msgSend(v44, "addGestureRecognizer:", v43);

    swift_release();
    swift_release();
    return;
  }
LABEL_9:
  __break(1u);
}

uint64_t sub_100BF9B44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;

  v5[15] = a4;
  v5[16] = a5;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v5[17] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[18] = v7;
  v5[19] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v5[20] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[21] = v9;
  v5[22] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for NSNotificationCenter.Notifications.Iterator(0);
  v5[23] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011E06A0);
  v5[24] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v5[25] = v12;
  v5[26] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011E06A8);
  v5[27] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v5[28] = v14;
  v5[29] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for MainActor(0);
  v5[30] = v15;
  v5[31] = static MainActor.shared.getter(v16);
  v17 = dispatch thunk of Actor.unownedExecutor.getter(v15, &protocol witness table for MainActor);
  v5[32] = v17;
  v5[33] = v18;
  return swift_task_switch(sub_100BF9C7C, v17, v18);
}

uint64_t sub_100BF9C7C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  char *v17;

  v1 = v0[26];
  v15 = v0[25];
  v2 = v0[23];
  v3 = v0[24];
  v16 = v0[16] + 16;
  v0[11] = v0[15];
  v4 = type metadata accessor for NSNotificationCenter.Notifications(0);
  v5 = sub_10004A07C(0, &qword_1011E06B8, UIWindowScene_ptr);
  v0[34] = v5;
  v6 = sub_100048748(&qword_1011E06C0, (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Notifications, (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Notifications);
  v7 = swift_retain();
  AsyncCompactMapSequence.init(_:transform:)(v0 + 11, &unk_1011E0710, 0, v4, v5, v6, v7);
  AsyncCompactMapSequence.base.getter(v3);
  dispatch thunk of AsyncSequence.makeAsyncIterator()(v4, v6);
  v8 = AsyncCompactMapSequence.transform.getter(v3);
  v10 = v9;
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v1, v3);
  AsyncCompactMapSequence.Iterator.init(_:transform:)(v2, v8, v10, v4, v5, v6);
  v11 = swift_beginAccess(v16, v0 + 8, 0, 0);
  v12 = static MainActor.shared.getter(v11);
  v0[35] = v12;
  v17 = (char *)&dword_1011E06C8 + dword_1011E06C8;
  v13 = (_QWORD *)swift_task_alloc(unk_1011E06CC);
  v0[36] = v13;
  *v13 = v0;
  v13[1] = sub_100BF9E40;
  return ((uint64_t (*)(uint64_t, void *, _QWORD *))v17)(v12, &protocol witness table for MainActor, v0 + 13);
}

uint64_t sub_100BF9E40(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 288);
  *(_QWORD *)(*v1 + 296) = a1;
  swift_task_dealloc(v3);
  swift_release();
  return swift_task_switch(sub_100BF9EA0, *(_QWORD *)(v2 + 256), *(_QWORD *)(v2 + 264));
}

void sub_100BF9EA0()
{
  uint64_t v0;
  void *v1;
  void *Strong;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t);

  v1 = *(void **)(v0 + 296);
  if (!v1)
  {
    v33 = *(_QWORD *)(v0 + 232);
    v34 = *(_QWORD *)(v0 + 208);
    v36 = *(_QWORD *)(v0 + 176);
    v35 = *(_QWORD *)(v0 + 184);
    v37 = *(_QWORD *)(v0 + 152);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 224) + 8))(v33, *(_QWORD *)(v0 + 216));
    swift_release();
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  Strong = (void *)swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 128) + 16);
  if (!Strong)
    goto LABEL_11;
  v3 = Strong;
  v4 = objc_msgSend(Strong, "view");

  if (v4)
  {
    v5 = objc_msgSend(v4, "window");

    v6 = objc_msgSend(v5, "windowScene");
    if (v6)
    {
      v7 = v1;
      v8 = static NSObject.== infix(_:_:)(v7, v6);

      if ((v8 & 1) != 0)
      {
        if (qword_1011DDFE0 != -1)
          swift_once(&qword_1011DDFE0, sub_100BCBEB4);
        v9 = type metadata accessor for Logger(0);
        v10 = sub_100048B14(v9, (uint64_t)static Logger.lyrics);
        v11 = Logger.logObject.getter(v10);
        v12 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v11, v12))
        {
          v13 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v13 = 0;
          swift_slowDealloc(v13, -1, -1);
        }
        v14 = *(_QWORD *)(v0 + 176);
        v15 = *(_QWORD *)(v0 + 152);
        v41 = *(_QWORD *)(v0 + 168);
        v42 = *(_QWORD *)(v0 + 160);
        v16 = *(_QWORD *)(v0 + 136);
        v40 = *(_QWORD *)(v0 + 144);
        v17 = *(_QWORD *)(v0 + 128);

        v18 = sub_10004A07C(0, (unint64_t *)&qword_1011DF580, OS_dispatch_queue_ptr);
        v26 = (void *)static OS_dispatch_queue.main.getter(v18, v19, v20, v21, v22, v23, v24, v25);
        *(_QWORD *)(v0 + 48) = sub_100C07C14;
        *(_QWORD *)(v0 + 56) = v17;
        *(_QWORD *)(v0 + 16) = _NSConcreteStackBlock;
        *(_QWORD *)(v0 + 24) = 1107296256;
        *(_QWORD *)(v0 + 32) = sub_1001DBD98;
        *(_QWORD *)(v0 + 40) = &unk_101108238;
        v27 = _Block_copy((const void *)(v0 + 16));
        v28 = swift_retain();
        static DispatchQoS.unspecified.getter(v28);
        *(_QWORD *)(v0 + 112) = _swiftEmptyArrayStorage;
        v29 = sub_100048748((unint64_t *)&unk_1011E06D0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
        v30 = sub_100007E8C(&qword_1011DECE8);
        v31 = sub_1001EBC18((unint64_t *)&qword_1011E06E0, &qword_1011DECE8);
        dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 112, v30, v31, v16, v29);
        OS_dispatch_queue.async(group:qos:flags:execute:)(0, v14, v15, v27);
        _Block_release(v27);

        (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v15, v16);
        (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v14, v42);
        v32 = swift_release();
      }
      else
      {

      }
      goto LABEL_14;
    }
LABEL_11:

LABEL_14:
    v38 = static MainActor.shared.getter(v32);
    *(_QWORD *)(v0 + 280) = v38;
    v43 = (void (*)(uint64_t, uint64_t))((char *)&dword_1011E06C8 + dword_1011E06C8);
    v39 = (_QWORD *)swift_task_alloc(unk_1011E06CC);
    *(_QWORD *)(v0 + 288) = v39;
    *v39 = v0;
    v39[1] = sub_100BF9E40;
    v43(v38, (uint64_t)&protocol witness table for MainActor);
    return;
  }

  __break(1u);
}

uint64_t sub_100BFA284(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return swift_task_switch(sub_100BFA29C, 0, 0);
}

uint64_t sub_100BFA29C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  Notification.object.getter((_QWORD *)(v0 + 16));
  v1 = *(_QWORD **)(v0 + 48);
  if (*(_QWORD *)(v0 + 40))
  {
    v2 = sub_10004A07C(0, &qword_1011E06B8, UIWindowScene_ptr);
    if ((swift_dynamicCast(v1, v0 + 16, (char *)&type metadata for Any + 8, v2, 6) & 1) == 0)
      **(_QWORD **)(v0 + 48) = 0;
  }
  else
  {
    sub_10004FF60(v0 + 16, &qword_1011E0700);
    *v1 = 0;
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100BFA338(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  v6 = sub_100007E8C(&qword_1011E06A8);
  v3[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[11] = v7;
  v3[12] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011E06F0);
  v3[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Notification(0);
  v3[14] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v3[15] = v10;
  v3[16] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    ObjectType = swift_getObjectType();
    v12 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, a2);
    v14 = v13;
  }
  else
  {
    v12 = 0;
    v14 = 0;
  }
  v3[17] = v12;
  v3[18] = v14;
  return swift_task_switch(sub_100BFA428, v12, v14);
}

uint64_t sub_100BFA428()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[19] = AsyncCompactMapSequence.Iterator.baseIterator.modify(v0 + 2, v0[10]);
  type metadata accessor for NSNotificationCenter.Notifications.Iterator(0);
  sub_100048748(&qword_1011E06F8, (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Notifications.Iterator, (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Notifications.Iterator);
  v1 = (_QWORD *)swift_task_alloc(_sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTjTu[1]);
  v0[20] = v1;
  *v1 = v0;
  v1[1] = sub_100BFA4CC;
  return _sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v0[13], v0[7], v0[8]);
}

uint64_t sub_100BFA4CC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 160));
  if (v0)
  {
    v3 = *(_QWORD *)(v2 + 136);
    v4 = *(_QWORD *)(v2 + 144);
    v5 = sub_100BFA690;
  }
  else
  {
    (*(void (**)(uint64_t, _QWORD))(v2 + 152))(v2 + 16, 0);
    v3 = *(_QWORD *)(v2 + 136);
    v4 = *(_QWORD *)(v2 + 144);
    v5 = sub_100BFA53C;
  }
  return swift_task_switch(v5, v3, v4);
}

uint64_t sub_100BFA53C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  int *v14;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 104);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10004FF60(v3, &qword_1011E06F0);
    v4 = *(_QWORD *)(v0 + 96);
    v5 = *(_QWORD *)(v0 + 104);
    swift_task_dealloc(*(_QWORD *)(v0 + 128));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 88);
    v7 = *(_QWORD *)(v0 + 96);
    v10 = *(_QWORD *)(v0 + 72);
    v9 = *(_QWORD *)(v0 + 80);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(*(_QWORD *)(v0 + 128), v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v7, v10, v9);
    v11 = (int *)AsyncCompactMapSequence.Iterator.transform.getter(v9);
    *(_QWORD *)(v0 + 168) = v12;
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    v14 = (int *)((char *)v11 + *v11);
    v13 = (_QWORD *)swift_task_alloc(v11[1]);
    *(_QWORD *)(v0 + 176) = v13;
    *v13 = v0;
    v13[1] = sub_100BFA6F4;
    return ((uint64_t (*)(uint64_t, _QWORD))v14)(v0 + 48, *(_QWORD *)(v0 + 128));
  }
}

uint64_t sub_100BFA690()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t))(v0 + 152))(v0 + 16, 1);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100BFA6F4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;

  v1 = *v0;
  v3 = *(_QWORD *)(*v0 + 120);
  v2 = *(_QWORD *)(*v0 + 128);
  v4 = *(_QWORD *)(*v0 + 112);
  swift_task_dealloc(*(_QWORD *)(*v0 + 176));
  v5 = swift_release();
  (*(void (**)(uint64_t, uint64_t, __n128))(v3 + 8))(v2, v4, v5);
  return swift_task_switch(sub_100BFA770, *(_QWORD *)(v1 + 136), *(_QWORD *)(v1 + 144));
}

uint64_t sub_100BFA770()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 48);
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 96);
    v2 = *(_QWORD *)(v0 + 104);
    swift_task_dealloc(*(_QWORD *)(v0 + 128));
    swift_task_dealloc(v2);
    swift_task_dealloc(v3);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
  }
  else
  {
    *(_QWORD *)(v0 + 152) = AsyncCompactMapSequence.Iterator.baseIterator.modify(v0 + 16, *(_QWORD *)(v0 + 80));
    type metadata accessor for NSNotificationCenter.Notifications.Iterator(0);
    sub_100048748(&qword_1011E06F8, (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Notifications.Iterator, (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Notifications.Iterator);
    v5 = (_QWORD *)swift_task_alloc(_sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTjTu[1]);
    *(_QWORD *)(v0 + 160) = v5;
    *v5 = v0;
    v5[1] = sub_100BFA4CC;
    return _sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  }
}

void sub_100BFA85C(uint64_t a1)
{
  uint64_t v1;
  _BYTE *Strong;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  _BYTE v8[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v8, 0, 0);
  Strong = (_BYTE *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    Strong[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isBackgrounded] = 1;

  }
  swift_beginAccess(v1, &v7, 0, 0);
  v3 = swift_unknownObjectWeakLoadStrong(v1);
  if (v3)
  {
    v4 = (void *)v3;
    v5 = *(void **)(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink);
    v6 = v5;

    if (v5)
    {
      objc_msgSend(v6, "setPaused:", 1);

    }
  }
}

uint64_t sub_100BFA914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;

  v5[15] = a4;
  v5[16] = a5;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v5[17] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[18] = v7;
  v5[19] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v5[20] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[21] = v9;
  v5[22] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for NSNotificationCenter.Notifications.Iterator(0);
  v5[23] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011E06A0);
  v5[24] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v5[25] = v12;
  v5[26] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011E06A8);
  v5[27] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v5[28] = v14;
  v5[29] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for MainActor(0);
  v5[30] = v15;
  v5[31] = static MainActor.shared.getter(v16);
  v17 = dispatch thunk of Actor.unownedExecutor.getter(v15, &protocol witness table for MainActor);
  v5[32] = v17;
  v5[33] = v18;
  return swift_task_switch(sub_100BFAA4C, v17, v18);
}

uint64_t sub_100BFAA4C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  char *v17;

  v1 = v0[26];
  v15 = v0[25];
  v2 = v0[23];
  v3 = v0[24];
  v16 = v0[16] + 16;
  v0[11] = v0[15];
  v4 = type metadata accessor for NSNotificationCenter.Notifications(0);
  v5 = sub_10004A07C(0, &qword_1011E06B8, UIWindowScene_ptr);
  v0[34] = v5;
  v6 = sub_100048748(&qword_1011E06C0, (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Notifications, (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Notifications);
  v7 = swift_retain();
  AsyncCompactMapSequence.init(_:transform:)(v0 + 11, &unk_1011E06B0, 0, v4, v5, v6, v7);
  AsyncCompactMapSequence.base.getter(v3);
  dispatch thunk of AsyncSequence.makeAsyncIterator()(v4, v6);
  v8 = AsyncCompactMapSequence.transform.getter(v3);
  v10 = v9;
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v1, v3);
  AsyncCompactMapSequence.Iterator.init(_:transform:)(v2, v8, v10, v4, v5, v6);
  v11 = swift_beginAccess(v16, v0 + 8, 0, 0);
  v12 = static MainActor.shared.getter(v11);
  v0[35] = v12;
  v17 = (char *)&dword_1011E06C8 + dword_1011E06C8;
  v13 = (_QWORD *)swift_task_alloc(unk_1011E06CC);
  v0[36] = v13;
  *v13 = v0;
  v13[1] = sub_100BFAC10;
  return ((uint64_t (*)(uint64_t, void *, _QWORD *))v17)(v12, &protocol witness table for MainActor, v0 + 13);
}

uint64_t sub_100BFAC10(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 288);
  *(_QWORD *)(*v1 + 296) = a1;
  swift_task_dealloc(v3);
  swift_release();
  return swift_task_switch(sub_100BFAC70, *(_QWORD *)(v2 + 256), *(_QWORD *)(v2 + 264));
}

void sub_100BFAC70()
{
  uint64_t v0;
  void *v1;
  void *Strong;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t);

  v1 = *(void **)(v0 + 296);
  if (!v1)
  {
    v28 = *(_QWORD *)(v0 + 232);
    v29 = *(_QWORD *)(v0 + 208);
    v31 = *(_QWORD *)(v0 + 176);
    v30 = *(_QWORD *)(v0 + 184);
    v32 = *(_QWORD *)(v0 + 152);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 224) + 8))(v28, *(_QWORD *)(v0 + 216));
    swift_release();
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  Strong = (void *)swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 128) + 16);
  if (!Strong)
    goto LABEL_7;
  v3 = Strong;
  v4 = objc_msgSend(Strong, "view");

  if (v4)
  {
    v5 = objc_msgSend(v4, "window");

    v6 = objc_msgSend(v5, "windowScene");
    if (v6)
    {
      v7 = v1;
      v8 = static NSObject.== infix(_:_:)(v7, v6);

      if ((v8 & 1) != 0)
      {
        v9 = *(_QWORD *)(v0 + 176);
        v10 = *(_QWORD *)(v0 + 152);
        v36 = *(_QWORD *)(v0 + 168);
        v37 = *(_QWORD *)(v0 + 160);
        v11 = *(_QWORD *)(v0 + 136);
        v35 = *(_QWORD *)(v0 + 144);
        v12 = *(_QWORD *)(v0 + 128);
        v13 = sub_10004A07C(0, (unint64_t *)&qword_1011DF580, OS_dispatch_queue_ptr);
        v21 = (void *)static OS_dispatch_queue.main.getter(v13, v14, v15, v16, v17, v18, v19, v20);
        *(_QWORD *)(v0 + 48) = sub_100C07B84;
        *(_QWORD *)(v0 + 56) = v12;
        *(_QWORD *)(v0 + 16) = _NSConcreteStackBlock;
        *(_QWORD *)(v0 + 24) = 1107296256;
        *(_QWORD *)(v0 + 32) = sub_1001DBD98;
        *(_QWORD *)(v0 + 40) = &unk_1011081E8;
        v22 = _Block_copy((const void *)(v0 + 16));
        v23 = swift_retain();
        static DispatchQoS.unspecified.getter(v23);
        *(_QWORD *)(v0 + 112) = _swiftEmptyArrayStorage;
        v24 = sub_100048748((unint64_t *)&unk_1011E06D0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
        v25 = sub_100007E8C(&qword_1011DECE8);
        v26 = sub_1001EBC18((unint64_t *)&qword_1011E06E0, &qword_1011DECE8);
        dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 112, v25, v26, v11, v24);
        OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v10, v22);
        _Block_release(v22);

        (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v10, v11);
        (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v9, v37);
        v27 = swift_release();
      }
      else
      {

      }
      goto LABEL_10;
    }
LABEL_7:

LABEL_10:
    v33 = static MainActor.shared.getter(v27);
    *(_QWORD *)(v0 + 280) = v33;
    v38 = (void (*)(uint64_t, uint64_t))((char *)&dword_1011E06C8 + dword_1011E06C8);
    v34 = (_QWORD *)swift_task_alloc(unk_1011E06CC);
    *(_QWORD *)(v0 + 288) = v34;
    *v34 = v0;
    v34[1] = sub_100BFAC10;
    v38(v33, (uint64_t)&protocol witness table for MainActor);
    return;
  }

  __break(1u);
}

uint64_t sub_100BFAFA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return swift_task_switch(sub_100C07C28, 0, 0);
}

void sub_100BFAFBC(uint64_t a1)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  char v21;
  char v22;
  uint64_t v23;
  char *v24;
  char *v25;
  __n128 v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  uint64_t v31;
  void *v32;
  char v33;
  _BYTE v34[24];
  _BYTE v35[24];
  uint64_t v36[3];
  _BYTE v37[24];
  _BYTE v38[24];
  _BYTE v39[24];
  _BYTE v40[24];

  v2 = a1 + 16;
  swift_beginAccess(a1 + 16, v40, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = *(_QWORD *)(Strong + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager);
    swift_retain();

    if (v5)
    {
      v6 = swift_allocObject(&unk_1011078B8, 24, 7);
      swift_beginAccess(v2, v39, 0, 0);
      v7 = (void *)swift_unknownObjectWeakLoadStrong(v2);
      swift_unknownObjectWeakInit(v6 + 16);

      swift_beginAccess(v5 + 96, v38, 1, 0);
      v8 = *(_QWORD *)(v5 + 96);
      v9 = *(_QWORD *)(v5 + 104);
      *(_QWORD *)(v5 + 96) = sub_100C07B8C;
      *(_QWORD *)(v5 + 104) = v6;
      swift_retain_n(v6, 2);
      sub_10004BA30(v8, v9);
      sub_100BF2648();
      swift_release_n(v6, 2, v10);
      swift_release();
    }
  }
  swift_beginAccess(v2, v37, 0, 0);
  v11 = (_BYTE *)swift_unknownObjectWeakLoadStrong(v2);
  if (v11)
  {
    v11[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isBackgrounded] = 0;

  }
  if (qword_1011DDFE0 != -1)
    swift_once(&qword_1011DDFE0, sub_100BCBEB4);
  v12 = type metadata accessor for Logger(0);
  sub_100048B14(v12, (uint64_t)static Logger.lyrics);
  v13 = swift_retain_n(a1, 2);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    v17 = swift_slowAlloc(12, -1);
    v18 = swift_slowAlloc(32, -1);
    v36[0] = v18;
    *(_DWORD *)v17 = 136315138;
    swift_beginAccess(v2, v34, 0, 0);
    v19 = swift_unknownObjectWeakLoadStrong(v2);
    if (v19)
    {
      v20 = (void *)v19;
      v21 = sub_100BFEB94();

      v22 = v21 & 1;
    }
    else
    {
      v22 = 2;
    }
    v35[0] = v22;
    v23 = sub_100007E8C(&qword_1011E06E8);
    v24 = (char *)String.init<A>(describing:)(v35, v23);
    *(_QWORD *)(v17 + 4) = sub_100BBDE38(v24, v25, v36);
    v26 = swift_bridgeObjectRelease();
    swift_release_n(a1, 2, v26);
    swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v17, -1, -1);
  }
  else
  {
    swift_release_n(a1, 2, v16);
  }

  swift_beginAccess(v2, v36, 0, 0);
  v27 = swift_unknownObjectWeakLoadStrong(v2);
  if (v27)
  {
    v28 = (void *)v27;
    v29 = *(void **)(v27 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink);
    v30 = v29;

    if (v29)
    {
      swift_beginAccess(v2, v35, 0, 0);
      v31 = swift_unknownObjectWeakLoadStrong(v2);
      if (v31)
      {
        v32 = (void *)v31;
        v33 = sub_100BFEB94();

      }
      else
      {
        v33 = 1;
      }
      objc_msgSend(v30, "setPaused:", v33 & 1);

    }
  }
}

Swift::Void __swiftcall SyncedLyricsViewController.viewDidAppear(_:)(Swift::Bool a1)
{
  char *v1;
  id v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  objc_super v16;

  v16.receiver = v1;
  v16.super_class = (Class)type metadata accessor for SyncedLyricsViewController();
  objc_msgSendSuper2(&v16, "viewDidAppear:", a1);
  v3 = objc_msgSend(v1, "view");
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, "window");

    if (v5)
    {
      v6 = objc_msgSend(v5, "screen");

      v5 = objc_msgSend(v6, "displayLinkWithTarget:selector:", v1, "displayLinkFired:");
    }
    v7 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink;
    v8 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink];
    *(_QWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink] = v5;

    v9 = *(void **)&v1[v7];
    if (v9)
    {
      v10 = v9;
      objc_msgSend(v10, "setPaused:", sub_100BFEB94() & 1);

      v11 = *(void **)&v1[v7];
      if (v11)
      {
        v12 = (void *)objc_opt_self(NSRunLoop);
        v13 = v11;
        v14 = objc_msgSend(v12, "mainRunLoop");
        objc_msgSend(v13, "addToRunLoop:forMode:", v14, NSRunLoopCommonModes);

        v15 = *(void **)&v1[v7];
        if (v15)
          objc_msgSend(v15, "setPreferredFramesPerSecond:", 30);
      }
    }
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall SyncedLyricsViewController.viewDidDisappear(_:)(Swift::Bool a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for SyncedLyricsViewController();
  objc_msgSendSuper2(&v5, "viewDidDisappear:", a1);
  v3 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink], "invalidate");
  v4 = *(void **)&v1[v3];
  *(_QWORD *)&v1[v3] = 0;

}

Swift::Void __swiftcall SyncedLyricsViewController.viewDidLayoutSubviews()()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  __int128 v15;
  id v16;
  void *v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  id v26;
  void *v27;
  double v28;
  CGFloat v29;
  double v30;
  CGFloat v31;
  double v32;
  CGFloat v33;
  double v34;
  CGFloat v35;
  char *v36;
  unint64_t v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _OWORD v49[2];
  _QWORD v50[4];
  objc_super v51;
  CGRect v52;
  CGRect v53;

  v1 = v0;
  v51.receiver = v0;
  v51.super_class = (Class)type metadata accessor for SyncedLyricsViewController();
  objc_msgSendSuper2(&v51, "viewDidLayoutSubviews");
  v2 = objc_msgSend(v0, "view");
  if (!v2)
  {
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    return;
  }
  v3 = v2;
  _s3__C6CGRectVMa_1(0);
  v5 = v4;
  objc_msgSend(v3, "bounds");
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;

  v50[0] = v7;
  v50[1] = v9;
  v50[2] = v11;
  v50[3] = v13;
  v14 = &v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_previousBounds];
  v15 = *(_OWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_previousBounds + 16];
  v49[0] = *(_OWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_previousBounds];
  v49[1] = v15;
  if ((static ApproximatelyEquatable.!=~ infix(_:_:)(v50, v49, v5) & 1) == 0)
    return;
  v16 = objc_msgSend(v1, "view");
  if (!v16)
    goto LABEL_14;
  v17 = v16;
  objc_msgSend(v16, "bounds");
  v19 = v18;
  v21 = v20;
  v23 = v22;
  v25 = v24;

  v52.origin.x = v19;
  v52.origin.y = v21;
  v52.size.width = v23;
  v52.size.height = v25;
  v50[0] = CGRectGetWidth(v52);
  *(_QWORD *)&v49[0] = CGRectGetWidth(*(CGRect *)v14);
  if ((static ApproximatelyEquatable.!=~ infix(_:_:)(v50, v49, &type metadata for CGFloat) & 1) != 0)
    sub_100BFCB88();
  v26 = objc_msgSend(v1, "view");
  if (!v26)
    goto LABEL_15;
  v27 = v26;
  objc_msgSend(v26, "bounds");
  v29 = v28;
  v31 = v30;
  v33 = v32;
  v35 = v34;

  v53.origin.x = v29;
  v53.origin.y = v31;
  v53.size.width = v33;
  v53.size.height = v35;
  v50[0] = CGRectGetHeight(v53);
  *(_QWORD *)&v49[0] = CGRectGetHeight(*(CGRect *)v14);
  if ((static ApproximatelyEquatable.!=~ infix(_:_:)(v50, v49, &type metadata for CGFloat) & 1) != 0)
  {
    sub_100BFF7DC(0);
    v36 = &v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight];
    swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight], v50, 0, 0);
    *(_QWORD *)&v49[0] = *(_QWORD *)v36;
    v48 = 0;
    v37 = sub_100C04984();
    if ((static ApproximatelyEquatable<>.==~ infix(_:_:)(v49, &v48, &type metadata for CGFloat, &protocol witness table for CGFloat, v37) & 1) != 0)sub_100BFC72C();
  }
  v38 = objc_msgSend(v1, "view");
  if (!v38)
    goto LABEL_16;
  v39 = v38;
  objc_msgSend(v38, "bounds");
  v41 = v40;
  v43 = v42;
  v45 = v44;
  v47 = v46;

  *(_QWORD *)v14 = v41;
  *((_QWORD *)v14 + 1) = v43;
  *((_QWORD *)v14 + 2) = v45;
  *((_QWORD *)v14 + 3) = v47;
}

Swift::Void __swiftcall SyncedLyricsViewController.viewLayoutMarginsDidChange()()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for SyncedLyricsViewController();
  objc_msgSendSuper2(&v1, "viewLayoutMarginsDidChange");
  sub_100BFCB88();
}

void sub_100BFBA1C(uint64_t a1, char a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double (*v9)(uint64_t);
  uint64_t v10;
  id v11;
  uint64_t v12;
  double v13;
  double v14;
  double v15;
  double v16;
  void *v17;
  id v18;
  char v19;
  void *v20;
  id v21;
  uint64_t v22;
  _BYTE v23[24];

  v3 = *(void **)(a1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView);
  if (v3)
  {
    v5 = _s19SBS_TextContentViewCMa();
    v6 = swift_dynamicCastClass(v3, v5);
    if (v6)
    {
      v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager);
      if (v7)
      {
        v8 = v6;
        swift_beginAccess(v7 + 96, v23, 0, 0);
        v9 = *(double (**)(uint64_t))(v7 + 96);
        if (v9)
        {
          v10 = *(_QWORD *)(v7 + 104);
          v11 = v3;
          swift_retain();
          v12 = sub_100048AAC((uint64_t)v9, v10);
          v13 = v9(v12);
          swift_beginAccess(v7 + 88, &v22, 0, 0);
          v14 = 0.0;
          if (*(_BYTE *)(v7 + 88) == 1)
          {
            Lyrics.spatialOffset.getter();
            v14 = v15;
          }
          sub_10004BA30((uint64_t)v9, v10);
          swift_release();
          v16 = v13 - v14;
          if (v16 != *(double *)(v8 + OBJC_IVAR___MusicSBS_TextContentView_progress))
          {
            *(double *)(v8 + OBJC_IVAR___MusicSBS_TextContentView_progress) = v16;
            v17 = *(void **)(v8 + OBJC_IVAR___MusicSBS_TextContentView_textView);
            if (!v17)
            {
              __break(1u);
              return;
            }
            v18 = v17;
            v19 = a2 & 1;
            sub_100BE0D44(v19, v16);

            v20 = *(void **)(v8 + OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView);
            if (v20)
            {
              v21 = v20;
              sub_100BE0D44(v19, v16);

              v11 = v21;
            }
          }

        }
      }
    }
  }
}

Swift::Void __swiftcall SyncedLyricsViewController.presentSharing()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  char *v5;
  uint64_t *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  double v19;
  double v20;
  double v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char v47[24];
  char v48[24];
  char v49[24];
  char v50[24];
  char v51[24];
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  char v55[24];
  _QWORD v56[3];
  uint64_t *v57;
  uint64_t v58;
  char v59[24];

  v5 = v0;
  v6 = (uint64_t *)&v0[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews];
  swift_beginAccess(v6, v59, 0, 0);
  v7 = *v6;
  if ((unint64_t)v7 >> 62)
    goto LABEL_18;
  v8 = *(char **)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v8)
    goto LABEL_22;
LABEL_3:
  v9 = v8 - 1;
  if (__OFSUB__(v8, 1))
  {
    __break(1u);
    goto LABEL_36;
  }
  if ((v7 & 0xC000000000000001) != 0)
  {
LABEL_36:
    v10 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v7);
    goto LABEL_8;
  }
  if (((unint64_t)v9 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if ((unint64_t)v9 < *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v10 = (char *)*(id *)(v7 + 8 * (_QWORD)v9 + 32);
LABEL_8:
    v8 = v10;
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  if (v7 < 0)
    v26 = v7;
  else
    v26 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v27 = _CocoaArrayWrapper.endIndex.getter(v26);
  swift_bridgeObjectRelease();
  if (v4 >= v27)
  {
LABEL_44:
    sub_100064C78(v1, (uint64_t)v56);
    if ((swift_dynamicCast(&v52, v56, v2, &type metadata for Lyrics.SongwritersLine, 6) & 1) == 0)
      goto LABEL_52;
    swift_bridgeObjectRelease();
    sub_100064C78(v1, (uint64_t)v56);
    v28 = (uint64_t)v57;
    v29 = v58;
    sub_100007E68(v56, (uint64_t)v57);
    v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 16))(v28, v29);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v56);
    if (v30 < 1)
      goto LABEL_52;
    sub_100064C78(v1, (uint64_t)v56);
    v1 = (uint64_t)v57;
    v31 = v58;
    sub_100007E68(v56, (uint64_t)v57);
    v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 16))(v1, v31);
    v7 = v32 - 1;
    if (!__OFSUB__(v32, 1))
    {
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(v56);
      v33 = (uint64_t *)&v5[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
      swift_beginAccess(&v5[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews], v56, 0, 0);
      v1 = *v33;
      if ((v1 & 0xC000000000000001) != 0)
      {
LABEL_54:
        swift_bridgeObjectRetain();
        v34 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v1);

        swift_bridgeObjectRelease();
        goto LABEL_51;
      }
      if ((v7 & 0x8000000000000000) == 0)
      {
        if ((unint64_t)v7 < *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_50:
          v34 = (char *)*(id *)(v1 + 8 * v7 + 32);

LABEL_51:
          v8 = v34;
LABEL_52:
          objc_msgSend(v8, "setHighlighted:", 1);
          v35 = sub_10004A07C(0, (unint64_t *)&qword_1011DF580, OS_dispatch_queue_ptr);
          v43 = (void *)static OS_dispatch_queue.main.getter(v35, v36, v37, v38, v39, v40, v41, v42);
          v44 = swift_allocObject(&unk_101107930, 32, 7);
          *(_QWORD *)(v44 + 16) = v5;
          *(_QWORD *)(v44 + 24) = v8;
          v45 = v5;
          v46 = v8;
          OS_dispatch_queue.asyncAfter(_:block:)((uint64_t)sub_100C049F4, v44, 0.3);

          swift_release();
          return;
        }
LABEL_59:
        __break(1u);
LABEL_60:
        swift_bridgeObjectRetain();
        v8 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v1);
        swift_bridgeObjectRelease();
        goto LABEL_32;
      }
LABEL_58:
      __break(1u);
      goto LABEL_59;
    }
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  while (1)
  {
    sub_100064C78(v1, (uint64_t)v56);
    v1 = (uint64_t)v57;
    v2 = v58;
    sub_100007E68(v56, (uint64_t)v57);
    v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
    v7 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
LABEL_56:
      __break(1u);
      goto LABEL_57;
    }
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v56);
    v1 = *v3;
    if ((*v3 & 0xC000000000000001) != 0)
      goto LABEL_54;
    if (v7 < 0)
      goto LABEL_56;
    if ((unint64_t)v7 < *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_50;
    __break(1u);
LABEL_18:
    if (v7 < 0)
      v14 = v7;
    else
      v14 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = (char *)_CocoaArrayWrapper.endIndex.getter(v14);
    if (v8)
      goto LABEL_3;
LABEL_22:
    swift_bridgeObjectRelease();
    v15 = *(_QWORD *)&v5[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager];
    if (!v15)
      return;
    swift_beginAccess(v15 + 96, v50, 0, 0);
    v16 = *(double (**)(uint64_t))(v15 + 96);
    if (!v16)
      return;
    v17 = *(_QWORD *)(v15 + 104);
    swift_retain();
    v18 = sub_100048AAC((uint64_t)v16, v17);
    v19 = v16(v18);
    swift_beginAccess(v15 + 88, v49, 0, 0);
    v20 = 0.0;
    if (*(_BYTE *)(v15 + 88) == 1)
    {
      Lyrics.spatialOffset.getter();
      v20 = v21;
    }
    sub_10004BA30((uint64_t)v16, v17);
    swift_release();
    v22 = &v5[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics];
    swift_beginAccess(&v5[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics], v48, 0, 0);
    if (!*(_QWORD *)v22)
    {
      v54 = 0;
      v52 = 0u;
      v53 = 0u;
LABEL_34:
      sub_10004FF60((uint64_t)&v52, &qword_1011E04F0);
      return;
    }
    swift_retain();
    Lyrics.line(before:useOriginalLines:)(0, (uint64_t)&v52, v19 - v20);
    swift_release();
    if (!*((_QWORD *)&v53 + 1))
      goto LABEL_34;
    sub_100064C48(&v52, (uint64_t)v56);
    v23 = (uint64_t)v57;
    v24 = v58;
    sub_100007E68(v56, (uint64_t)v57);
    v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 16))(v23, v24);
    v25 = (uint64_t *)&v5[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
    swift_beginAccess(&v5[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews], v47, 0, 0);
    v1 = *v25;
    if ((*v25 & 0xC000000000000001) != 0)
      goto LABEL_60;
    if (v7 < 0)
      break;
    if ((unint64_t)v7 >= *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_62;
    v8 = (char *)*(id *)(v1 + 8 * v7 + 32);
LABEL_32:
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v56);
LABEL_9:
    v1 = (uint64_t)&v8[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
    swift_beginAccess(&v8[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], v55, 0, 0);
    sub_100064C78(v1, (uint64_t)v56);
    v2 = sub_100007E8C(&qword_1011DF470);
    if (!swift_dynamicCast(&v52, v56, v2, &type metadata for Lyrics.InstrumentalLine, 6))
      goto LABEL_44;
    sub_100064C78(v1, (uint64_t)v56);
    v3 = v57;
    v11 = v58;
    v7 = (uint64_t)sub_100007E68(v56, (uint64_t)v57);
    v12 = (*(uint64_t (**)(uint64_t *, uint64_t))(v11 + 16))(v3, v11);
    v4 = v12 + 1;
    if (__OFADD__(v12, 1))
      goto LABEL_39;
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v56);
    v3 = (uint64_t *)&v5[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
    swift_beginAccess(&v5[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews], v51, 0, 0);
    v7 = *v3;
    if ((unint64_t)*v3 >> 62)
      goto LABEL_40;
    if (v4 >= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_44;
  }
  __break(1u);
LABEL_62:
  __break(1u);
}

void sub_100BFC2AC(char *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  __int128 v9;
  uint64_t v10;
  char v11;
  int v12;
  char v13;
  uint64_t v14;
  __int128 v15;
  id v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  void (*v34)(__int128 *);
  uint64_t v35;
  char *v36;
  id v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  void *v42;
  __int128 v43;
  __int128 v44;
  char v45[24];
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  char v61[24];
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;

  v2 = v1;
  v4 = (uint64_t)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
  swift_beginAccess(&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], v61, 0, 0);
  sub_100064C78(v4, (uint64_t)&v46);
  v5 = sub_100007E8C(&qword_1011DF470);
  if ((swift_dynamicCast(&v62, &v46, v5, &type metadata for Lyrics.TextLine, 6) & 1) != 0)
  {
    v6 = v64;
    v7 = v68;
    v8 = *(void **)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
    v43 = v67;
    v44 = v66;
    if (!v8)
      goto LABEL_10;
    v9 = v62;
    v10 = v63;
    v11 = BYTE8(v63);
    v12 = BYTE9(v63);
    v13 = BYTE10(v63);
    v14 = *((_QWORD *)&v64 + 1);
    v15 = v65;
    v16 = objc_msgSend(v8, "copy");
    _bridgeAnyObjectToAny(_:)(&v62, v16);
    swift_unknownObjectRelease(v16);
    v17 = sub_10004A07C(0, (unint64_t *)&qword_1011E2F40, UIView_ptr);
    if ((swift_dynamicCast(&v46, &v62, (char *)&type metadata for Any + 8, v17, 6) & 1) != 0)
    {
      v41 = v13;
      v42 = (void *)v46;
      objc_msgSend(a1, "cancelTrackingWithEvent:", 0);
      v18 = objc_msgSend(v2, "view");
      if (!v18)
      {
        __break(1u);
        return;
      }
      v19 = v18;
      if (v12)
        v20 = 2;
      else
        v20 = 0;
      objc_msgSend(v18, "convertRect:fromCoordinateSpace:", *(_QWORD *)&v2[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView], UIView.untransformedFrame.getter());
      v39 = v22;
      v40 = v21;
      v24 = v23;
      v26 = v25;

      v27 = objc_msgSend(a1, "isSelected");
      objc_msgSend(a1, "transform");
      v28 = v62;
      v29 = v63;
      v30 = v64;
      v31 = swift_allocObject(&unk_101107E60, 24, 7);
      *(_QWORD *)(v31 + 16) = a1;
      v32 = swift_allocObject(&unk_101107E88, 24, 7);
      *(_QWORD *)(v32 + 16) = a1;
      v46 = v9;
      *(_QWORD *)&v47 = v10;
      BYTE8(v47) = v11;
      BYTE9(v47) = v12;
      BYTE10(v47) = v41;
      *(_QWORD *)&v48 = v6;
      *((_QWORD *)&v48 + 1) = v14;
      v49 = v15;
      v50 = v44;
      v51 = v43;
      *(_QWORD *)&v52 = v7;
      *((_QWORD *)&v52 + 1) = v42;
      *(_QWORD *)&v53 = v20;
      *((_QWORD *)&v53 + 1) = v40;
      *(_QWORD *)&v54 = v39;
      *((_QWORD *)&v54 + 1) = v24;
      *(_QWORD *)&v55 = v26;
      BYTE8(v55) = v27;
      v56 = v28;
      v57 = v29;
      v58 = v30;
      *(_QWORD *)&v59 = sub_10022938C;
      *((_QWORD *)&v59 + 1) = v31;
      *(_QWORD *)&v60 = sub_100C0797C;
      *((_QWORD *)&v60 + 1) = v32;
      v70 = v54;
      v71 = v55;
      v62 = v9;
      v63 = v47;
      v68 = v52;
      v69 = v53;
      v66 = v44;
      v67 = v43;
      v64 = v48;
      v65 = v15;
      v75 = v59;
      v76 = v60;
      v73 = v29;
      v74 = v30;
      v33 = &v2[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_shareHandler];
      v72 = v28;
      swift_beginAccess(&v2[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_shareHandler], v45, 0, 0);
      v34 = *(void (**)(__int128 *))v33;
      if (!*(_QWORD *)v33)
      {
        v38 = a1;
        sub_100C079BC(&v46);
        return;
      }
      v35 = *((_QWORD *)v33 + 1);
      v36 = a1;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      v37 = v42;
      sub_100048AAC((uint64_t)v34, v35);
      v34(&v62);

      sub_10004BA30((uint64_t)v34, v35);
      sub_100C079BC(&v46);
      swift_release();
      swift_release();
    }
    else
    {
LABEL_10:
      swift_release();
      swift_release();
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
}

Swift::Void __swiftcall SyncedLyricsViewController.displayLinkResumeIfNeeded()()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink);
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v2, "setPaused:", sub_100BFEB94() & 1);

  }
}

void sub_100BFC72C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  double v3;
  double v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  id v9;
  void *v10;
  double v11;
  CGFloat v12;
  CGFloat *v13;
  double v14;
  CGFloat v15;
  id v16;
  void *v17;
  double v18;
  double v19;
  double v20;
  double v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  id v32;
  double v33;
  double v34;
  CGFloat v35;
  double v36;
  CGFloat v37;
  double v38;
  CGFloat v39;
  double v40;
  double v41;
  uint64_t v42;
  double v43;
  uint64_t v44;
  id v45;
  id v46;
  char v47[24];
  char v48[24];
  __int128 v49[2];
  _QWORD v50[3];
  uint64_t v51;
  uint64_t v52;
  char v53[24];
  CGRect v54;

  v1 = v0;
  v2 = (uint64_t)&v0[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
  *(_QWORD *)&v3 = swift_beginAccess(v2, v53, 0, 0).n128_u64[0];
  if (*(char *)(v2 + 40) < 0)
  {
    v22 = (uint64_t *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
    swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews], v48, 0, 0);
    v23 = *v22;
    if ((unint64_t)*v22 >> 62)
    {
      if (v23 < 0)
        v42 = *v22;
      else
        v42 = v23 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      if (_CocoaArrayWrapper.endIndex.getter(v42))
      {
LABEL_9:
        if ((v23 & 0xC000000000000001) != 0)
        {
          v25 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v23);
        }
        else
        {
          if (!*(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_25;
          }
          v25 = (char *)*(id *)(v23 + 32);
        }
        v26 = v25;
        swift_bridgeObjectRelease();
        v27 = (uint64_t)&v26[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
        swift_beginAccess(&v26[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], v47, 0, 0);
        sub_100064C78(v27, (uint64_t)v49);

        sub_100064C48(v49, (uint64_t)v50);
        v28 = v51;
        v29 = v52;
        sub_100007E68(v50, v51);
        v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 16))(v28, v29);
        v23 = v30;
        v2 = *v22;
        if ((*v22 & 0xC000000000000001) == 0)
        {
          if ((v30 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v30 < *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            v31 = *(id *)(v2 + 8 * v30 + 32);
LABEL_16:
            v32 = v31;
            v33 = UIView.untransformedFrame.getter();
            v35 = v34;
            v37 = v36;
            v39 = v38;

            sub_100BFF2C8(v33, v35, v37, v39);
            v41 = v40;

            v21 = fabs(v41);
            _s5Music18DragDropToPlaylistV6OriginVwxx_0(v50);
            goto LABEL_22;
          }
          __break(1u);
          goto LABEL_28;
        }
LABEL_25:
        swift_bridgeObjectRetain();
        v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v23, v2);
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
    }
    else
    {
      v24 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v24)
        goto LABEL_9;
    }
    objc_msgSend(*(id *)(v2 + 168), "_bodyLeading", swift_bridgeObjectRelease().n128_f64[0]);
    v21 = v43;
    goto LABEL_22;
  }
  v4 = *(double *)(v2 + 8);
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView], "contentOffset", v3);
  v6 = v5;
  v8 = v7;
  v9 = objc_msgSend(v1, "view");
  if (!v9)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v10 = v9;
  objc_msgSend(v9, "frame");
  v12 = v11;

  v13 = (CGFloat *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight];
  *(_QWORD *)&v14 = swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight], v50, 0, 0).n128_u64[0];
  v15 = *v13;
  if (*v13 > 0.0)
  {
LABEL_6:
    v54.origin.x = v6;
    v54.origin.y = v8;
    v54.size.width = v12;
    v54.size.height = v15;
    v19 = v4 * (CGRectGetHeight(v54) / 100.0);
    objc_msgSend(*(id *)(v2 + 168), "ascender");
    v21 = v19 - v20;
LABEL_22:
    sub_100C03BC8();
    v44 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
    v45 = *(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView];
    objc_msgSend(v45, "contentInset");
    objc_msgSend(v45, "setContentInset:", v21);

    v46 = *(id *)&v1[v44];
    objc_msgSend(v46, "contentOffset");
    objc_msgSend(v46, "setContentOffset:");

    return;
  }
  v16 = objc_msgSend(v1, "view", v14);
  if (v16)
  {
    v17 = v16;
    objc_msgSend(v16, "frame");
    v15 = v18;

    goto LABEL_6;
  }
LABEL_29:
  __break(1u);
}

uint64_t sub_100BFCAD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011E0480);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100BFCB20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011E0480);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for SyncedLyricsViewController()
{
  return objc_opt_self(_TtC11MusicCoreUI26SyncedLyricsViewController);
}

void sub_100BFCB88()
{
  uint64_t isEscapingClosureAtFileLocation;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  unint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  id v16;
  _BYTE v17[24];
  void **aBlock;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t (*v22)();
  uint64_t v23;

  v1 = swift_allocObject(&unk_101108090, 24, 7);
  *(_QWORD *)(v1 + 16) = isEscapingClosureAtFileLocation;
  if ((*(_BYTE *)(isEscapingClosureAtFileLocation
                 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating) & 1) != 0)
  {
    v2 = (uint64_t *)(isEscapingClosureAtFileLocation
                   + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators);
    swift_beginAccess(isEscapingClosureAtFileLocation + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators, v17, 0, 0);
    v3 = *v2;
    if (!((unint64_t)v3 >> 62))
    {
      v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
      v5 = (id)isEscapingClosureAtFileLocation;
      swift_bridgeObjectRetain();
      if (v4)
        goto LABEL_4;
LABEL_16:
      swift_bridgeObjectRelease();
      swift_release();
      return;
    }
  }
  else
  {
    v11 = (void *)objc_opt_self(UIView);
    v3 = swift_allocObject(&unk_1011080B8, 24, 7);
    *(_QWORD *)(v3 + 16) = isEscapingClosureAtFileLocation;
    v12 = swift_allocObject(&unk_1011080E0, 32, 7);
    *(_QWORD *)(v12 + 16) = sub_100C07B5C;
    *(_QWORD *)(v12 + 24) = v3;
    v22 = sub_10010942C;
    v23 = v12;
    aBlock = _NSConcreteStackBlock;
    v19 = 1107296256;
    v20 = sub_10046D7B4;
    v21 = &unk_1011080F8;
    v13 = _Block_copy(&aBlock);
    v14 = (id)isEscapingClosureAtFileLocation;
    swift_retain();
    objc_msgSend(v11, "performWithoutAnimation:", v13, swift_release().n128_f64[0]);
    _Block_release(v13);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v12, "", 136, 383, 44, 1);
    swift_release();
    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      return;
    __break(1u);
  }
  if (v3 < 0)
    v15 = v3;
  else
    v15 = v3 & 0xFFFFFFFFFFFFFF8;
  v16 = (id)isEscapingClosureAtFileLocation;
  swift_bridgeObjectRetain();
  v4 = _CocoaArrayWrapper.endIndex.getter(v15);
  if (!v4)
    goto LABEL_16;
LABEL_4:
  v6 = v4 - 1;
  if (__OFSUB__(v4, 1))
  {
    __break(1u);
    goto LABEL_19;
  }
  if ((v3 & 0xC000000000000001) != 0)
  {
LABEL_19:
    v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v3);
    goto LABEL_9;
  }
  if ((v6 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v6 < *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v7 = *(id *)(v3 + 8 * v6 + 32);
LABEL_9:
    v8 = v7;
    swift_bridgeObjectRelease();
    v9 = swift_allocObject(&unk_101108130, 32, 7);
    *(_QWORD *)(v9 + 16) = sub_100C07B54;
    *(_QWORD *)(v9 + 24) = v1;
    v22 = sub_10004D5F4;
    v23 = v9;
    aBlock = _NSConcreteStackBlock;
    v19 = 1107296256;
    v20 = sub_10012F6FC;
    v21 = &unk_101108148;
    v10 = _Block_copy(&aBlock);
    swift_retain();
    objc_msgSend(v8, "addCompletion:", v10, swift_release().n128_f64[0]);
    swift_release();
    _Block_release(v10);

    return;
  }
  __break(1u);
}

void sub_100BFCE70(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  _QWORD v7[6];

  v2 = objc_opt_self(UIView);
  v3 = swift_allocObject(&unk_101108180, 24, 7);
  *(_QWORD *)(v3 + 16) = a1;
  v4 = swift_allocObject(&unk_1011081A8, 32, 7);
  *(_QWORD *)(v4 + 16) = sub_100C07CE0;
  *(_QWORD *)(v4 + 24) = v3;
  v7[4] = sub_1001095DC;
  v7[5] = v4;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_10046D7B4;
  v7[3] = &unk_1011081C0;
  v5 = _Block_copy(v7);
  v6 = a1;
  swift_retain();
  objc_msgSend((id)v2, "performWithoutAnimation:", v5, swift_release().n128_f64[0]);
  _Block_release(v5);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation(v4, "", 136, 383, 44, 1);
  swift_release();
  swift_release();
  if ((v2 & 1) != 0)
    __break(1u);
}

void sub_100BFCFA8(uint64_t a1)
{
  uint64_t *v1;
  double v2;
  CGFloat v3;
  CGFloat v4;
  CGFloat v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  double v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t i;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  id v27;
  double v28;
  double v29;
  CGFloat v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  double v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[3];
  uint64_t v40;
  uint64_t v41;
  char v42[24];
  char v43[24];
  CGRect v44;
  CGRect v45;

  v7 = (uint64_t *)(a1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews);
  swift_beginAccess(a1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews, v43, 0, 0);
  v8 = *v7;
  if ((unint64_t)*v7 >> 62)
  {
    if (v8 < 0)
      v1 = (uint64_t *)*v7;
    else
      v1 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
    v9 = _CocoaArrayWrapper.endIndex.getter(v1);
    if (v9)
      goto LABEL_3;
LABEL_11:
    swift_bridgeObjectRelease();
    v2 = 0.0;
    v3 = 0.0;
    v4 = 0.0;
    v5 = 0.0;
    goto LABEL_12;
  }
  v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v9)
    goto LABEL_11;
LABEL_3:
  if ((v8 & 0xC000000000000001) != 0)
  {
    v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v8);
  }
  else
  {
    if (!*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_39;
    }
    v10 = *(id *)(v8 + 32);
  }
  v11 = v10;
  swift_bridgeObjectRelease();
  v8 = (uint64_t)v11;
  v2 = UIView.untransformedFrame.getter();
  v3 = v12;
  v4 = v13;
  v5 = v14;

LABEL_12:
  v1 = (uint64_t *)(a1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
  swift_beginAccess(a1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews, v42, 0, 0);
  v15 = *v1;
  if ((unint64_t)*v1 >> 62)
  {
    if (v15 < 0)
      v8 = *v1;
    else
      v8 = v15 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v16 = _CocoaArrayWrapper.endIndex.getter(v8);
    if (!v16)
      goto LABEL_24;
  }
  else
  {
    v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v16)
      goto LABEL_24;
  }
  if (v16 < 1)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  for (i = 0; i != v16; ++i)
  {
    if ((v15 & 0xC000000000000001) != 0)
      v18 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v15);
    else
      v18 = (char *)*(id *)(v15 + 8 * i + 32);
    v19 = v18;
    sub_100BFD9EC(v18);

  }
LABEL_24:
  swift_bridgeObjectRelease();
  if (!v9)
    return;
  v8 = *v7;
  if (!((unint64_t)*v7 >> 62))
  {
    v20 = *(char **)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v20)
      goto LABEL_27;
LABEL_44:
    swift_bridgeObjectRelease();
    return;
  }
LABEL_40:
  if (v8 < 0)
    v37 = v8;
  else
    v37 = v8 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v20 = (char *)_CocoaArrayWrapper.endIndex.getter(v37);
  if (!v20)
    goto LABEL_44;
LABEL_27:
  if ((v8 & 0xC000000000000001) != 0)
  {
    v21 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v8);
  }
  else
  {
    if (!*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_48:
      swift_bridgeObjectRetain();
      v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v8);
      swift_bridgeObjectRelease();
      goto LABEL_35;
    }
    v21 = (char *)*(id *)(v8 + 32);
  }
  v20 = v21;
  objc_msgSend(v21, "frame", swift_bridgeObjectRelease().n128_f64[0]);
  v45.origin.x = v2;
  v45.origin.y = v3;
  v45.size.width = v4;
  v45.size.height = v5;
  if (CGRectEqualToRect(v44, v45))
  {
LABEL_36:

    return;
  }
  v22 = (uint64_t)&v20[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
  swift_beginAccess(&v20[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], &v38, 0, 0);
  sub_100064C78(v22, (uint64_t)v39);
  v23 = v40;
  v24 = v41;
  sub_100007E68(v39, v40);
  v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 16))(v23, v24);
  v9 = v25;
  v8 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
    goto LABEL_48;
  if ((v25 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v25 < *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v26 = *(id *)(v8 + 8 * v25 + 32);
LABEL_35:
    v27 = v26;
    v28 = UIView.untransformedFrame.getter();
    v30 = v29;
    v32 = v31;
    v34 = v33;

    sub_100BFF2C8(v28, v30, v32, v34);
    v36 = v35;

    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v39);
    objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView), "setContentOffset:", 0.0, v36);
    goto LABEL_36;
  }
  __break(1u);
}

void sub_100BFD370(char *a1, unsigned __int8 a2, uint64_t a3)
{
  char *v3;
  char *v4;
  double Width;
  id v9;
  void *v10;
  int v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  double *v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  uint64_t v22;
  uint64_t v23;
  CGFloat height;
  uint64_t v25;
  uint64_t v26;
  CGFloat v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t *v38;
  id v39;
  double v40;
  id v41;
  double v42;
  double v43;
  CGFloat v44;
  double v45;
  CGFloat v46;
  double v47;
  CGFloat v48;
  double MaxY;
  char **v50;
  double *v51;
  _BYTE *v52;
  CGFloat x;
  CGFloat y;
  CGFloat v55;
  CGFloat v56;
  double v57;
  id v58;
  void *v59;
  uint64_t v60;
  char v61[24];
  char v62[24];
  char v63[24];
  _BYTE v64[32];
  _QWORD v65[3];
  uint64_t v66;
  uint64_t v67;
  char v68[24];
  CGRect v69;
  uint64_t v70;
  CGRect v71;
  CGRect v72;
  CGRect v73;
  CGRect v74;

  v4 = v3;
  objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView], "frame");
  Width = CGRectGetWidth(v71);
  v9 = objc_msgSend(v4, "view");
  if (!v9)
    goto LABEL_42;
  v10 = v9;
  v11 = a2;
  objc_msgSend(v9, "layoutMargins");

  v13 = Width - UIEdgeInsets.horizontal.getter(v12);
  v14 = (uint64_t)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
  swift_beginAccess(&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], v68, 0, 0);
  sub_100064C78(v14, (uint64_t)&v69);
  v15 = sub_100007E8C(&qword_1011DF470);
  if (swift_dynamicCast(v65, &v69, v15, &type metadata for Lyrics.TextLine, 0))
  {
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    v16 = &v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics];
    swift_beginAccess(&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics], v61, 0, 0);
    if (*(_QWORD *)v16 && !*(_BYTE *)(*(_QWORD *)v16 + 96))
    {
      v18 = 1.0;
    }
    else
    {
      v17 = (double *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
      swift_beginAccess(&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs], &v60, 0, 0);
      v18 = v17[64];
    }
  }
  else
  {
    v18 = 1.0;
    if ((swift_dynamicCast(v65, &v69, v15, &type metadata for Lyrics.InstrumentalLine, 0) & 1) == 0
      && swift_dynamicCast(v65, &v69, v15, &type metadata for Lyrics.SongwritersLine, 0))
    {
      swift_bridgeObjectRelease();
    }
  }
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v69);
  if (v11 == 2)
  {
    objc_msgSend(a1, "sizeThatFits:", v13 * v18, INFINITY);
  }
  else
  {
    v19 = *(_QWORD *)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
    if (v19)
    {
      v20 = *(_QWORD *)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView + 8];
      ObjectType = swift_getObjectType();
      v65[0] = v19;
      (*(void (**)(_QWORD, uint64_t, uint64_t, double, double))(v20 + 96))(v11 & 1, ObjectType, v20, v13 * v18, INFINITY);
    }
  }
  sub_100064C78(v14, (uint64_t)v65);
  if (swift_dynamicCast(v64, v65, v15, &type metadata for Lyrics.InstrumentalLine, 0))
  {
    v22 = *(_QWORD *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView];
    if (v22)
    {
      v23 = v22 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
      swift_beginAccess(v22 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line, v63, 0, 0);
      sub_100064C78(v23, (uint64_t)&v69);
      height = v69.size.height;
      v25 = v70;
      sub_100007E68(&v69, *(uint64_t *)&v69.size.height);
      v26 = (*(uint64_t (**)(CGFloat, uint64_t))(v25 + 16))(COERCE_CGFLOAT(*(_QWORD *)&height), v25);
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v69);
    }
    else
    {
      v26 = 0;
    }
    sub_100064C78(v14, (uint64_t)&v69);
    v27 = v69.size.height;
    v28 = v70;
    sub_100007E68(&v69, *(uint64_t *)&v69.size.height);
    v29 = (*(uint64_t (**)(CGFloat, uint64_t))(v28 + 16))(COERCE_CGFLOAT(*(_QWORD *)&v27), v28);
    if (v22)
    {
      v30 = v29;
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v69);
      if (v26 == v30)
        swift_beginAccess(&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs], v62, 0, 0);
    }
    else
    {
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v69);
    }
  }
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v65);
  sub_100064C78(v14, (uint64_t)v65);
  v31 = v66;
  v32 = v67;
  sub_100007E68(v65, v66);
  v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 16))(v31, v32);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v65);
  if (!v33)
  {
    *(_QWORD *)&MaxY = swift_beginAccess(&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs], v65, 0, 0).n128_u64[0];
    v50 = &selRef_referralObject;
    goto LABEL_36;
  }
  sub_100C07934(a3, (uint64_t)&v69);
  if ((v70 & 1) != 0)
  {
    sub_100064C78(v14, (uint64_t)v65);
    v34 = v66;
    v35 = v67;
    sub_100007E68(v65, v66);
    v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 16))(v34, v35);
    v37 = v36 - 1;
    if (__OFSUB__(v36, 1))
    {
      __break(1u);
    }
    else
    {
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(v65);
      v38 = (uint64_t *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
      swift_beginAccess(&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews], v65, 0, 0);
      v34 = *v38;
      if ((v34 & 0xC000000000000001) == 0)
      {
        if ((v37 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v37 < *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          v39 = *(id *)(v34 + 8 * v37 + 32);
LABEL_30:
          objc_msgSend(v39, "frame");
          v40 = CGRectGetHeight(v72);
          v41 = v39;
          v42 = UIView.untransformedFrame.getter();
          v44 = v43;
          v46 = v45;
          v48 = v47;

          v73.origin.x = v42;
          v73.origin.y = v44;
          v73.size.width = v46;
          v73.size.height = v48;
          CGRectGetMaxY(v73);

          v50 = &selRef_referralObject;
          if (v40 <= 0.0)
            goto LABEL_36;
          v51 = (double *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
          v52 = v64;
          goto LABEL_35;
        }
        __break(1u);
LABEL_42:
        __break(1u);
        goto LABEL_43;
      }
    }
    swift_bridgeObjectRetain();
    v39 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v37, v34);
    swift_bridgeObjectRelease();
    goto LABEL_30;
  }
  x = v69.origin.x;
  y = v69.origin.y;
  v55 = v69.size.width;
  v56 = v69.size.height;
  v57 = CGRectGetHeight(v69);
  v74.origin.x = x;
  v74.origin.y = y;
  v74.size.width = v55;
  v74.size.height = v56;
  MaxY = CGRectGetMaxY(v74);
  v50 = &selRef_referralObject;
  if (v57 <= 0.0)
    goto LABEL_36;
  v51 = (double *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
  v52 = v65;
LABEL_35:
  swift_beginAccess(v51, v52, 0, 0);
  MaxY = v51[10];
LABEL_36:
  v58 = objc_msgSend(v4, v50[483], MaxY);
  if (v58)
  {
    v59 = v58;
    objc_msgSend(v58, "layoutMargins");

    return;
  }
LABEL_43:
  __break(1u);
}

void sub_100BFD9EC(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  CGFloat v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  double Width;
  double Height;
  double v20;
  double v21;
  double v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[24];
  _BYTE v28[24];
  _QWORD v29[3];
  uint64_t v30;
  uint64_t v31;
  _OWORD v32[2];
  char v33;
  CGRect v34;
  CGRect v35;
  CGRect v36;
  CGRect v37;

  v2 = v1;
  memset(v32, 0, sizeof(v32));
  v33 = 1;
  sub_100BFD370(a1, 2u, (uint64_t)v32);
  UIView.untransformedFrame.setter(v4, v5, v6, v7);
  v8 = (uint64_t)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
  swift_beginAccess(&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], v28, 0, 0);
  sub_100064C78(v8, (uint64_t)v29);
  v9 = v30;
  v10 = v31;
  sub_100007E68(v29, v30);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 16))(v9, v10);
  v12 = (uint64_t *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
  swift_beginAccess(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews, v27, 0, 0);
  v13 = *v12;
  if (!((unint64_t)v13 >> 62))
  {
    v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    v15 = v14 - 1;
    if (!__OFSUB__(v14, 1))
      goto LABEL_3;
LABEL_13:
    __break(1u);
    return;
  }
  if (v13 < 0)
    v25 = v13;
  else
    v25 = v13 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v26 = _CocoaArrayWrapper.endIndex.getter(v25);
  swift_bridgeObjectRelease();
  v15 = v26 - 1;
  if (__OFSUB__(v26, 1))
    goto LABEL_13;
LABEL_3:
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v29);
  if (v11 == v15)
  {
    v16 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
    v17 = *(id *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView);
    objc_msgSend(v17, "frame");
    Width = CGRectGetWidth(v34);
    v35.origin.x = UIView.untransformedFrame.getter();
    objc_msgSend(v17, "setContentSize:", Width, CGRectGetMaxY(v35));

    objc_msgSend(*(id *)(v2 + v16), "frame");
    Height = CGRectGetHeight(v36);
    objc_msgSend(*(id *)(v2 + v16), "contentInset");
    v21 = v20;
    v37.origin.x = UIView.untransformedFrame.getter();
    v22 = Height - (v21 + CGRectGetHeight(v37));
    v23 = *(id *)(v2 + v16);
    v24 = v23;
    if (v22 <= 0.0)
      objc_msgSend(v23, "contentInset");
    objc_msgSend(v24, "contentInset");
    objc_msgSend(v24, "setContentInset:");

  }
}

void sub_100BFDBF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t, __n128);
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t ObjectType;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(__int128 *, char);
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t, uint64_t);
  id v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(uint64_t, uint64_t, __n128);
  __n128 v57;
  id v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  void *v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *__src;
  uint64_t v76;
  uint64_t *v77;
  _QWORD v78[3];
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD v84[3];
  uint64_t v85;
  uint64_t v86;
  char v87[24];
  char v88[24];
  char v89[24];
  _BYTE __dst[552];

  v2 = v1;
  v4 = (uint64_t *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
  swift_beginAccess(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews, v89, 0, 0);
  v5 = *v4;
  if ((unint64_t)*v4 >> 62)
    goto LABEL_61;
  v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  v7 = *(_QWORD *)(a1 + 40);
  a1 = *(_QWORD *)(v7 + 16);
  if (a1 >= v6)
    goto LABEL_8;
  v8 = *v4;
  if (!((unint64_t)*v4 >> 62))
  {
    v5 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v5 >= a1)
      goto LABEL_6;
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
    return;
  }
  if (v8 < 0)
    v72 = *v4;
  else
    v72 = v8 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v5 = _CocoaArrayWrapper.endIndex.getter(v72);
  swift_bridgeObjectRelease();
  if (v5 < a1)
    goto LABEL_69;
LABEL_6:
  if (a1 != v5)
  {
    if (a1 < (unint64_t)v5)
    {
      v68 = a1;
      while (1)
      {
        v69 = *v4;
        if ((*v4 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          v70 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v68, v69);
          swift_bridgeObjectRelease();
        }
        else
        {
          if ((v68 & 0x8000000000000000) != 0)
            goto LABEL_59;
          if (v68 >= *(_QWORD *)((v69 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
LABEL_60:
            __break(1u);
LABEL_61:
            if (v5 < 0)
              v71 = v5;
            else
              v71 = v5 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain();
            v6 = _CocoaArrayWrapper.endIndex.getter(v71);
            swift_bridgeObjectRelease();
            goto LABEL_3;
          }
          v70 = *(id *)(v69 + 8 * v68 + 32);
        }
        ++v68;
        objc_msgSend(v70, "removeFromSuperview");

        if (v5 == v68)
          goto LABEL_7;
      }
    }
    goto LABEL_70;
  }
LABEL_7:
  swift_beginAccess(v4, __dst, 33, 0);
  sub_100BB9B3C(a1, v5);
  swift_endAccess(__dst);
LABEL_8:
  v9 = *(void **)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView) = 0;

  v10 = *(_QWORD *)(v7 + 16);
  if (v10)
  {
    v11 = v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics;
    v12 = (_QWORD *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs);
    v74 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
    v13 = v7 + 32;
    swift_bridgeObjectRetain();
    v76 = v11;
    swift_beginAccess(v11, v88, 0, 0);
    __src = v12;
    swift_beginAccess(v12, v87, 0, 0);
    v73 = v2;
    v77 = v4;
    while (1)
    {
      sub_100064C78(v13, (uint64_t)v84);
      v15 = v85;
      v16 = v86;
      sub_100007E68(v84, v85);
      v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 16))(v15, v16);
      v18 = v17;
      v19 = *v4;
      if ((unint64_t)*v4 >> 62)
      {
        if (v19 < 0)
          v48 = *v4;
        else
          v48 = v19 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        v49 = _CocoaArrayWrapper.endIndex.getter(v48);
        swift_bridgeObjectRelease();
        if (v18 >= v49)
        {
LABEL_34:
          sub_100064C78((uint64_t)v84, (uint64_t)&v81);
          if (*(_QWORD *)v76)
          {
            if (*(_BYTE *)(*(_QWORD *)v76 + 96))
            {
              v50 = v85;
              v51 = v86;
              sub_100007E68(v84, v85);
              v52 = (*(uint64_t (**)(uint64_t, uint64_t))(v51 + 24))(v50, v51);
            }
            else
            {
              v52 = __src[6];
              v53 = *((_BYTE *)__src + 56);
              sub_100064C78((uint64_t)v84, (uint64_t)v78);
              if ((v53 & 1) != 0)
              {
                v54 = v79;
                v55 = v80;
                sub_100007E68(v78, v79);
                v56 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v55 + 24);
                v57 = swift_retain();
                v52 = v56(v54, v55, v57);
              }
              else
              {
                swift_retain();
              }
              v2 = v73;
              _s5Music18DragDropToPlaylistV6OriginVwxx_0(v78);
              swift_release();
            }
          }
          else
          {
            v52 = 4;
          }
          memcpy(__dst, __src, 0x219uLL);
          v58 = objc_allocWithZone((Class)type metadata accessor for SyncedLyricsLineView());
          sub_10024E6C8((uint64_t)__dst);
          v59 = sub_100BF1B5C(&v81, v52, __dst);
          sub_10024E458((uint64_t)__dst);
          sub_10004A07C(0, &qword_1011E0668, UIAction_ptr);
          v60 = swift_allocObject(&unk_1011078B8, 24, 7);
          swift_unknownObjectWeakInit(v60 + 16);
          v61 = swift_allocObject(&unk_101107DE8, 24, 7);
          swift_unknownObjectWeakInit(v61 + 16);
          v62 = swift_allocObject(&unk_101107E10, 32, 7);
          *(_QWORD *)(v62 + 16) = v60;
          *(_QWORD *)(v62 + 24) = v61;
          v63 = v59;
          v64 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100C07900, v62);
          objc_msgSend(v63, "addAction:forControlEvents:", v64, 64);

          objc_msgSend(*(id *)(v2 + v74), "addSubview:", v63);
          swift_beginAccess(v4, &v81, 33, 0);
          v25 = v63;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v25);
          v66 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v65 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v66 >= v65 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v65 > 1, v66 + 1, 1);
          v67 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v66, v25);
          specialized Array._endMutation()(v67);
          swift_endAccess(&v81);
          v14 = (char *)objc_msgSend(objc_allocWithZone((Class)UILongPressGestureRecognizer), "init");
          objc_msgSend(v14, "setCancelsTouchesInView:", 0);
          objc_msgSend(v14, "addTarget:action:", v2, "shareGestureHandler:");
          objc_msgSend(v25, "addGestureRecognizer:", v14);
          sub_100BFD9EC(v25);

          goto LABEL_11;
        }
      }
      else if (v17 >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_34;
      }
      v20 = v85;
      v21 = v86;
      sub_100007E68(v84, v85);
      v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 16))(v20, v21);
      a1 = v22;
      v5 = *v4;
      if ((*v4 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        v23 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(a1, v5);
        swift_bridgeObjectRelease();
      }
      else
      {
        if ((v22 & 0x8000000000000000) != 0)
        {
          __break(1u);
LABEL_58:
          __break(1u);
LABEL_59:
          __break(1u);
          goto LABEL_60;
        }
        if (v22 >= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_58;
        v23 = (char *)*(id *)(v5 + 8 * v22 + 32);
      }
      sub_100064C78((uint64_t)v84, (uint64_t)&v81);
      v24 = &v23[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
      swift_beginAccess(&v23[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], v78, 33, 0);
      v25 = v23;
      sub_100625DD8(v24, &v81);
      swift_endAccess(v78);
      sub_100BF0B18();
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v81);
      if (*(_QWORD *)v76)
      {
        if (*(_BYTE *)(*(_QWORD *)v76 + 96))
        {
          v26 = v85;
          v27 = v86;
          sub_100007E68(v84, v85);
          v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 24))(v26, v27);
        }
        else
        {
          v28 = __src[6];
          v29 = *((_BYTE *)__src + 56);
          sub_100064C78((uint64_t)v84, (uint64_t)&v81);
          if ((v29 & 1) != 0)
          {
            v30 = v82;
            v31 = v83;
            sub_100007E68(&v81, v82);
            v32 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v31 + 24);
            v33 = swift_retain();
            v28 = v32(v30, v31, v33);
          }
          else
          {
            swift_retain();
          }
          _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v81);
          swift_release();
        }
      }
      else
      {
        v28 = 4;
      }
      *(_QWORD *)&v25[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_alignment] = v28;
      sub_100BF0B18();
      v34 = *(_QWORD *)&v25[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
      if (v34)
      {
        v35 = *(_QWORD *)&v25[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView + 8];
        ObjectType = swift_getObjectType();
        *(_QWORD *)&v81 = v34;
        (*(void (**)(uint64_t, uint64_t))(v35 + 80))(ObjectType, v35);
      }
      v37 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_isScrolling;
      v25[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_isScrolling] = 1;
      v39 = sub_100BEF894((uint64_t)&v81);
      v40 = *(void **)v38;
      if (*(_QWORD *)v38)
      {
        v41 = v38;
        v42 = v25[v37];
        v43 = *(_QWORD *)(v38 + 8);
        v44 = swift_getObjectType();
        v78[0] = v40;
        v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 40);
        v46 = v40;
        v45(v42, v44, v43);
        v2 = v73;
        v47 = *(void **)v41;
        *(_QWORD *)v41 = v78[0];
        *(_QWORD *)(v41 + 8) = v43;

      }
      v39(&v81, 0);
      sub_100BF029C(0, 0);
      sub_100BFD9EC(v25);
      v14 = v25;
LABEL_11:

      _s5Music18DragDropToPlaylistV6OriginVwxx_0(v84);
      v13 += 40;
      --v10;
      v4 = v77;
      if (!v10)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  sub_100BFF7DC(0);
  sub_100BFC72C();
}

void sub_100BFE474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  double v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  void *v40;
  void *v41;
  id v42;
  double v43;
  double v44;
  CGFloat v45;
  CGFloat v46;
  CGFloat v47;
  CGFloat v48;
  double v49;
  id v50;
  char *v51;
  uint64_t v52;
  id v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  double (*v58)(uint64_t, uint64_t);
  id v59;
  double v60;
  uint64_t v61;
  double v62;
  double v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t);
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t ObjectType;
  void *v73;
  char *v74;
  uint64_t __dst[68];
  char v76[24];
  char v77[24];
  _BYTE v78[40];
  char v79[24];
  char v80[32];
  CGRect v81;
  CGRect v82;

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v80, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (char *)Strong;
    v7 = a3 + 16;
    swift_beginAccess(v7, v79, 0, 0);
    v8 = swift_unknownObjectWeakLoadStrong(v7);
    if (!v8)
    {
      v51 = v6;
LABEL_37:

      return;
    }
    v9 = (char *)v8;
    objc_msgSend(*(id *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_tapFeedbackGenerator], "selectionChanged");
    v10 = *(void **)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink];
    if (v10)
      objc_msgSend(v10, "setPaused:", 1);
    v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_needsTapHandling] = 1;
    v11 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScrollTimer;
    objc_msgSend(*(id *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScrollTimer], "invalidate");
    v12 = *(void **)&v6[v11];
    *(_QWORD *)&v6[v11] = 0;

    v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScroll] = 1;
    v13 = (uint64_t)&v9[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
    swift_beginAccess(&v9[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], v77, 0, 0);
    sub_100064C78(v13, (uint64_t)v78);
    v14 = sub_100007E8C(&qword_1011DF470);
    if ((swift_dynamicCast(__dst, v78, v14, &type metadata for Lyrics.TextLine, 6) & 1) == 0)
    {
LABEL_31:
      v54 = objc_msgSend(objc_allocWithZone((Class)MSVLyricsLine), "init");
      sub_100064C78(v13, (uint64_t)__dst);
      v56 = __dst[3];
      v55 = __dst[4];
      sub_100007E68(__dst, __dst[3]);
      v57 = *(_QWORD *)(v55 + 8);
      v58 = *(double (**)(uint64_t, uint64_t))(v57 + 8);
      v59 = v54;
      v60 = v58(v56, v57);
      v61 = *(_QWORD *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager];
      v62 = 0.0;
      if (v61)
      {
        swift_beginAccess(v61 + 88, v78, 0, 0);
        if (*(_BYTE *)(v61 + 88) == 1)
        {
          swift_retain();
          Lyrics.spatialOffset.getter();
          v62 = v63;
          swift_release();
        }
      }
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(__dst);
      objc_msgSend(v59, "setStartTime:", v60 + v62);

      sub_100064C78(v13, (uint64_t)__dst);
      v65 = __dst[3];
      v64 = __dst[4];
      sub_100007E68(__dst, __dst[3]);
      v66 = *(_QWORD *)(v64 + 8);
      v67 = *(void (**)(uint64_t, uint64_t))(v66 + 16);
      v51 = (char *)v59;
      v67(v65, v66);
      objc_msgSend(v51, "setEndTime:");

      _s5Music18DragDropToPlaylistV6OriginVwxx_0(__dst);
      v68 = &v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate];
      swift_beginAccess(&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate], __dst, 0, 0);
      v69 = swift_unknownObjectWeakLoadStrong(v68);
      if (v69)
      {
        v70 = v69;
        v71 = *((_QWORD *)v68 + 1);
        ObjectType = swift_getObjectType();
        (*(void (**)(char *, char *, uint64_t, uint64_t))(v71 + 8))(v6, v51, ObjectType, v71);

        swift_unknownObjectRelease(v70);
      }
      else
      {

      }
      goto LABEL_37;
    }
    v15 = *(void **)&v9[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
    if (!v15)
      goto LABEL_23;
    v16 = _s19SBS_TextContentViewCMa();
    v17 = swift_dynamicCastClass(v15, v16);
    if (!v17)
      goto LABEL_23;
    v18 = *(_QWORD *)(v17 + OBJC_IVAR___MusicSBS_TextContentView_textView);
    if (!v18)
      goto LABEL_40;
    v19 = *(_QWORD *)(v18
                    + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation);
    if (!v19)
    {
LABEL_23:
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_31;
    }
    v74 = v9;
    v20 = *(_QWORD *)(v19 + 24);
    if ((unint64_t)v20 >> 62)
    {
      if (v20 < 0)
        v52 = *(_QWORD *)(v19 + 24);
      else
        v52 = v20 & 0xFFFFFFFFFFFFFF8;
      v53 = v15;
      swift_retain();
      swift_bridgeObjectRetain();
      v21 = _CocoaArrayWrapper.endIndex.getter(v52);
      if (v21)
        goto LABEL_12;
    }
    else
    {
      v21 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
      v22 = v15;
      swift_retain();
      swift_bridgeObjectRetain();
      if (v21)
      {
LABEL_12:
        v73 = v15;
        sub_10004A07C(0, (unint64_t *)&qword_1011DF580, OS_dispatch_queue_ptr);
        v23 = v21 - 1;
        if (v21 >= 1)
        {
          v24 = &v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
          swift_beginAccess(&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs], v76, 0, 0);
          v25 = 0;
          if ((v20 & 0xC000000000000001) == 0)
            goto LABEL_15;
LABEL_14:
          v26 = specialized _ArrayBuffer._getElementSlowPath(_:)(v25, v20);
          while (1)
          {
            memcpy(__dst, v24, 0x219uLL);
            *(_BYTE *)(v26 + 80) = 1;
            v27 = sub_10024E6C8((uint64_t)__dst);
            v35 = (void *)static OS_dispatch_queue.main.getter(v27, v28, v29, v30, v31, v32, v33, v34);
            v36 = *(double *)&__dst[65];
            v37 = swift_allocObject(&unk_101107E38, 24, 7);
            swift_weakInit(v37 + 16, v26);
            swift_retain();
            OS_dispatch_queue.asyncAfter(_:block:)((uint64_t)sub_100C0792C, v37, v36);

            swift_release_n(v37, 2, v38);
            v39 = *(_QWORD *)(v26 + 72);
            if (v39)
            {
              v40 = *(void **)(v39 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_gradientView);
              if (v40)
              {
                v41 = (void *)__dst[21];
                v42 = v40;
                objc_msgSend(v41, "lineHeight");
                v44 = v43 * *(double *)&__dst[28] + *(double *)&__dst[44] + *(double *)&__dst[44];
                v45 = *(double *)(v26 + 40);
                v46 = *(double *)(v26 + 48);
                v47 = *(double *)(v26 + 56);
                v48 = *(double *)(v26 + 64);
                v81.origin.x = v45;
                v81.origin.y = v46;
                v81.size.width = v47;
                v81.size.height = v48;
                v49 = (v44 - CGRectGetHeight(v81)) * 0.5;
                v50 = v42;
                v82.origin.x = v45;
                v82.origin.y = v46;
                v82.size.width = v47;
                v82.size.height = v48;
                objc_msgSend(v50, "setFrame:", -v49, -v49, v49, CGRectGetHeight(v82) + v49 + v49);

              }
            }
            sub_10024E458((uint64_t)__dst);
            swift_release();
            if (v23 == v25)
              break;
            ++v25;
            if ((v20 & 0xC000000000000001) != 0)
              goto LABEL_14;
LABEL_15:
            v26 = *(_QWORD *)(v20 + 8 * v25 + 32);
            swift_retain();
          }
          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v15 = v73;
          goto LABEL_30;
        }
        __break(1u);
LABEL_40:
        __break(1u);
        return;
      }
    }
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_30:

    swift_release();
    v9 = v74;
    goto LABEL_31;
  }
}

Swift::Void __swiftcall SyncedLyricsViewController.enterTrackingMode()()
{
  uint64_t v0;
  _BYTE *v1;
  _BYTE v2[24];

  v1 = (_BYTE *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode, v2, 1, 0);
  if (*v1 != 2)
  {
    sub_100C009E8();
    *v1 = 2;
  }
}

Swift::Void __swiftcall SyncedLyricsViewController.leaveTrackingMode()()
{
  uint64_t v0;
  _BYTE *v1;
  _BYTE v2[24];

  v1 = (_BYTE *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode, v2, 1, 0);
  if (*v1 == 2)
  {
    sub_100BFF7DC(0);
    *v1 = 0;
  }
}

uint64_t sub_100BFEB94()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _BOOL8 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  v1 = v0;
  v2 = (_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics);
  swift_beginAccess(v2, v15, 0, 0);
  if (!*v2 || (*(_BYTE *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isBackgrounded) & 1) != 0)
    return 1;
  v4 = v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider;
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider, &v9, 0, 0);
  sub_100BFCAD8(v4, (uint64_t)&v10);
  if (v11)
  {
    sub_100064C48(&v10, (uint64_t)v12);
    v5 = v13;
    v6 = v14;
    sub_100007E68(v12, v13);
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6) & 1) != 0)
    {
      v3 = 1;
    }
    else
    {
      v7 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode);
      swift_beginAccess(v7, &v10, 0, 0);
      v3 = *v7 == 2;
    }
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v12);
  }
  else
  {
    sub_10004FF60((uint64_t)&v10, &qword_1011E0480);
    return 1;
  }
  return v3;
}

_QWORD *sub_100BFECC0()
{
  char *v0;
  _QWORD *result;
  void *v2;
  double *v3;
  double v4;
  void *v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  _BYTE v10[24];
  _BYTE v11[24];

  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView], "contentOffset");
  result = objc_msgSend(v0, "view");
  if (result)
  {
    v2 = result;
    objc_msgSend(result, "frame");

    v3 = (double *)&v0[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight];
    *(_QWORD *)&v4 = swift_beginAccess(&v0[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight], v11, 0, 0).n128_u64[0];
    if (*v3 > 0.0)
    {
LABEL_5:
      __chkstk_darwin();
      swift_beginAccess(&v0[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews], v10, 0, 0);
      __chkstk_darwin();
      v6 = swift_bridgeObjectRetain();
      v7 = sub_100C04A18(v6, (uint64_t (*)(void))sub_100C0789C);
      swift_bridgeObjectRelease();
      v8 = sub_100C06528((uint64_t)v7);
      swift_bridgeObjectRelease();
      v9 = sub_100BF724C(v8);
      swift_bridgeObjectRelease();
      return v9;
    }
    result = objc_msgSend(v0, "view", v4);
    if (result)
    {
      v5 = result;
      objc_msgSend(result, "frame");

      goto LABEL_5;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_100BFEE80(_QWORD *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  int v15;
  BOOL v16;
  uint64_t i;
  int v18;
  uint64_t v19;
  id v20;
  id v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  BOOL v29;
  uint64_t v30;
  int v31;
  id v32;
  id v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t KeyPath;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t, uint64_t);
  _BYTE v43[24];
  unint64_t v44;
  CGRect v45;
  CGRect v46;
  CGRect v47;
  CGRect v48;

  v6 = v5;
  v44 = (unint64_t)_swiftEmptyArrayStorage;
  v11 = a1[3];
  v12 = a1[4];
  sub_100007E68(a1, v11);
  v42 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 16);
  v13 = v42(v11, v12);
  v14 = (uint64_t *)(v6 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
  swift_beginAccess(v14, v43, 0, 0);
  v15 = 0;
  v16 = v13 == 0;
  if (v13 <= 0)
    goto LABEL_3;
LABEL_2:
  for (i = v13 - 1; ; i = 0)
  {
    v19 = *v14;
    if ((*v14 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v19);
      swift_bridgeObjectRelease();
    }
    else
    {
      if ((unint64_t)v13 >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_41;
      }
      v20 = *(id *)(v19 + 8 * v13 + 32);
    }
    objc_msgSend(v20, "frame");
    v47.origin.x = a2;
    v47.origin.y = a3;
    v47.size.width = a4;
    v47.size.height = a5;
    if (!CGRectIntersectsRect(v45, v47))
      break;
    v21 = v20;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v21);
    v23 = *(_QWORD *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v22 = *(_QWORD *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v23 >= v22 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v22 > 1, v23 + 1, 1);
    v24 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v23, v21);
    specialized Array._endMutation()(v24);

    v13 = i;
    v16 = i == 0;
    if (i > 0)
      goto LABEL_2;
LABEL_3:
    v18 = !v16;
    if (((v18 | v15) & 1) != 0)
      goto LABEL_18;
    v15 = 1;
  }

LABEL_18:
  v25 = v42(v11, v12);
  v13 = v25 + 1;
  if (__OFADD__(v25, 1))
    goto LABEL_43;
  v11 = *v14;
  if ((unint64_t)*v14 >> 62)
    goto LABEL_44;
  v26 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
  v27 = v26 - 1;
  if (__OFSUB__(v26, 1))
    goto LABEL_49;
  while (2)
  {
    v28 = 0;
    v29 = v13 == v27;
    if (v13 < v27)
    {
LABEL_22:
      v30 = v13 + 1;
      goto LABEL_28;
    }
    while (1)
    {
      v31 = !v29;
      if (((v31 | v28) & 1) != 0)
        goto LABEL_39;
      v28 = 1;
      v30 = v27;
LABEL_28:
      v11 = *v14;
      if ((*v14 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v11);
        swift_bridgeObjectRelease();
        goto LABEL_32;
      }
      if (v13 < 0)
        break;
      if ((unint64_t)v13 >= *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_42;
      v32 = *(id *)(v11 + 8 * v13 + 32);
LABEL_32:
      objc_msgSend(v32, "frame");
      v48.origin.x = a2;
      v48.origin.y = a3;
      v48.size.width = a4;
      v48.size.height = a5;
      if (!CGRectIntersectsRect(v46, v48))
      {

LABEL_39:
        KeyPath = swift_getKeyPath(&unk_100EEC2D0);
        v38 = sub_100007E8C(&qword_1011E0658);
        v39 = sub_1001EBC18(&qword_1011E0660, &qword_1011E0658);
        Sequence.sorted<A>(by:comparator:)(KeyPath, (uint64_t)sub_100A6D910, 0, v38, v39, (uint64_t)&protocol witness table for Int);
        swift_release();
        swift_bridgeObjectRelease();
        return;
      }
      v33 = v32;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v33);
      v35 = *(_QWORD *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v34 = *(_QWORD *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v35 >= v34 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v34 > 1, v35 + 1, 1);
      v36 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v35, v33);
      specialized Array._endMutation()(v36);

      v13 = v30;
      v29 = v30 == v27;
      if (v30 < v27)
        goto LABEL_22;
    }
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    if (v11 < 0)
      v40 = v11;
    else
      v40 = v11 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v41 = _CocoaArrayWrapper.endIndex.getter(v40);
    swift_bridgeObjectRelease();
    v27 = v41 - 1;
    if (!__OFSUB__(v41, 1))
      continue;
    break;
  }
LABEL_49:
  __break(1u);
}

uint64_t sub_100BFF254(uint64_t a1, _QWORD *a2)
{
  _QWORD *v3;
  _BYTE v5[24];
  _QWORD v6[5];

  sub_100064C78(a1, (uint64_t)v6);
  v3 = (_QWORD *)(*a2 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line);
  swift_beginAccess(v3, v5, 33, 0);
  sub_100625DD8(v3, v6);
  swift_endAccess(v5);
  sub_100BF0B18();
  return _s5Music18DragDropToPlaylistV6OriginVwxx_0(v6);
}

double sub_100BFF2C8(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  uint64_t v4;
  uint64_t v9;
  double v10;
  int v11;
  CGFloat v12;
  CGFloat v13;
  char v14;
  CGFloat v15;
  CGFloat v16;
  CGFloat v17;
  CGFloat v18;
  CGFloat v19;
  CGFloat v20;
  _BYTE v22[24];
  CGRect v23;
  CGRect v24;
  CGRect v25;
  CGRect v26;

  v9 = v4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs;
  *(_QWORD *)&v10 = swift_beginAccess(v4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs, v22, 0, 0).n128_u64[0];
  v11 = *(char *)(v9 + 40);
  if (v11 < 0)
  {
    v12 = *(double *)(v9 + 8);
    v13 = *(double *)(v9 + 16);
    v14 = *(_BYTE *)(v9 + 40);
    v16 = *(double *)(v9 + 24);
    v15 = *(double *)(v9 + 32);
    if ((v11 & 1) != 0)
    {
      objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView), "frame", v10);
    }
    else
    {
      v17 = v12;
      v18 = v13;
      v19 = v16;
      v20 = v15;
    }
    CGRectGetHeight(*(CGRect *)&v17);
    v24.origin.x = a1;
    v24.origin.y = a2;
    v24.size.width = a3;
    v24.size.height = a4;
    CGRectGetHeight(v24);
    v25.origin.x = a1;
    v25.origin.y = a2;
    v25.size.width = a3;
    v25.size.height = a4;
    CGRectGetMinY(v25);
    if ((v14 & 1) == 0)
    {
      v26.origin.x = v12;
      v26.origin.y = v13;
      v26.size.width = v16;
      v26.size.height = v15;
      CGRectGetMinY(v26);
    }
  }
  else
  {
    v23.origin.x = a1;
    v23.origin.y = a2;
    v23.size.width = a3;
    v23.size.height = a4;
    CGRectGetMinY(v23);
    objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView), "contentInset");
  }
  return 0.0;
}

void sub_100BFF424(_QWORD *a1, void *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t i;
  id v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t *v23;
  uint64_t v24;
  double v25;
  double (*v26)(uint64_t);
  uint64_t v27;
  uint64_t v28;
  double v29;
  double v30;
  double v31;
  _QWORD *v32;
  uint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  _BYTE v39[24];
  _BYTE v40[24];
  _BYTE v41[24];
  _BYTE v42[24];
  _BYTE v43[32];

  v5 = v4;
  v9 = a1[3];
  v10 = a1[4];
  sub_100007E68(a1, v9);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 16))(v9, v10);
  v12 = (uint64_t *)(v5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
  swift_beginAccess(v5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews, v43, 0, 0);
  v13 = *v12;
  if ((*v12 & 0xC000000000000001) == 0)
  {
    if ((v11 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v11 < *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v12 = (uint64_t *)*(id *)(v13 + 8 * v11 + 32);
      if ((a3 & 1) == 0)
        goto LABEL_24;
LABEL_5:
      v37 = a4;
      a3 = (uint64_t *)(v5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews);
      swift_beginAccess(v5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews, v39, 1, 0);
      a4 = *a3;
      v38 = v5;
      if (!((unint64_t)*a3 >> 62))
      {
        v14 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v14)
        {
LABEL_7:
          type metadata accessor for SyncedLyricsLineView();
          if (v14 < 1)
          {
            __break(1u);
            return;
          }
          for (i = 0; i != v14; ++i)
          {
            if ((a4 & 0xC000000000000001) != 0)
              v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a4);
            else
              v16 = *(id *)(a4 + 8 * i + 32);
            v17 = v16;
            if ((static NSObject.== infix(_:_:)(v16, v12) & 1) == 0)
              sub_100BF029C(0, a2);

          }
        }
LABEL_23:
        swift_bridgeObjectRelease();
        *a3 = (uint64_t)_swiftEmptyArrayStorage;
        swift_bridgeObjectRelease();
        v5 = v38;
        LOBYTE(a4) = v37;
        goto LABEL_24;
      }
LABEL_19:
      if (a4 < 0)
        v18 = a4;
      else
        v18 = a4 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v14 = _CocoaArrayWrapper.endIndex.getter(v18);
      if (v14)
        goto LABEL_7;
      goto LABEL_23;
    }
    __break(1u);
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  v12 = (uint64_t *)specialized _ArrayBuffer._getElementSlowPath(_:)(v11, v13);
  swift_bridgeObjectRelease();
  if ((a3 & 1) != 0)
    goto LABEL_5;
LABEL_24:
  sub_100BF029C(1, a2);
  sub_100BFBA1C((uint64_t)v12, a2 != 0);
  v19 = *(void **)((char *)v12 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView);
  if (v19)
  {
    v20 = _s23InstrumentalContentViewCMa();
    if (swift_dynamicCastClass(v19, v20))
    {
      v21 = *(void **)(v5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView);
      *(_QWORD *)(v5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView) = v12;
      v22 = v19;
      v23 = v12;

      if ((a4 & 1) != 0)
      {
        v24 = *(_QWORD *)(v5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager);
        v25 = 0.0;
        if (v24)
        {
          swift_beginAccess(v24 + 96, v41, 0, 0);
          v26 = *(double (**)(uint64_t))(v24 + 96);
          if (v26)
          {
            v27 = *(_QWORD *)(v24 + 104);
            swift_retain();
            v28 = sub_100048AAC((uint64_t)v26, v27);
            v29 = v26(v28);
            swift_beginAccess(v24 + 88, v40, 0, 0);
            v30 = 0.0;
            if (*(_BYTE *)(v24 + 88) == 1)
            {
              Lyrics.spatialOffset.getter();
              v30 = v31;
            }
            sub_10004BA30((uint64_t)v26, v27);
            swift_release();
            v25 = v29 - v30;
          }
        }
        sub_100BEC490(v25);
      }

    }
  }
  sub_100C008D0(v12, 1, 0.0);
  v32 = (_QWORD *)(v5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews);
  swift_beginAccess(v5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews, v42, 33, 0);
  v33 = v12;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v33);
  v35 = *(_QWORD *)((*v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v34 = *(_QWORD *)((*v32 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v35 >= v34 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v34 > 1, v35 + 1, 1);
  v36 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v35, v33);
  specialized Array._endMutation()(v36);
  swift_endAccess(v42);

}

void sub_100BFF7DC(int64_t a1)
{
  char *v1;
  uint64_t v2;
  int64_t v3;
  char *v4;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  id v44;
  id v45;
  double v46;
  void *v47;
  uint64_t v48;
  id v49;
  id v50;
  double v52;
  void *v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  id v61;
  id v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  double v74;
  int64_t v75;
  unint64_t v76;
  uint64_t v77;
  id v78;
  void *v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  double v91;
  CGFloat v92;
  double v93;
  CGFloat v94;
  id v95;
  void *v96;
  double v97;
  CGFloat v98;
  double *v99;
  double v100;
  CGFloat v101;
  id v102;
  void *v103;
  double v104;
  int64_t v105;
  uint64_t v106;
  unint64_t v107;
  double v108;
  CGFloat v109;
  double v110;
  CGFloat v111;
  char **v112;
  id v113;
  void *v114;
  double v115;
  CGFloat v116;
  double *v117;
  double v118;
  CGFloat v119;
  id v120;
  void *v121;
  double v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  int64_t v126;
  id v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  id v139;
  double v140;
  int64_t v141;
  unint64_t v142;
  uint64_t v143;
  id v144;
  void *v145;
  uint64_t v146;
  __n128 v147;
  uint64_t v148;
  uint64_t **v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t ObjectType;
  uint64_t *v155;
  void (*v156)(uint64_t, uint64_t, uint64_t);
  id v157;
  void *v158;
  void (*v159)(__int128 *, char);
  unsigned __int8 *v160;
  unsigned __int8 *v161;
  uint64_t v162;
  uint64_t v163;
  void *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  unint64_t v174;
  unint64_t v175;
  char *v176;
  void (*v177)(__int128 *, char);
  char v178[24];
  char v179[24];
  Swift::Int v180;
  char v181[24];
  _QWORD v182[3];
  uint64_t v183;
  uint64_t v184;
  __int128 v185;
  uint64_t v186;
  uint64_t v187;
  char v188[24];
  char v189[24];
  uint64_t v190;
  _BYTE v191[24];
  char v192[24];
  int64_t v193;
  _QWORD v194[3];
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  unint64_t v199;

  v4 = v1;
  v6 = objc_msgSend(v1, "traitCollection");
  v7 = objc_msgSend(v6, "accessibilityContrast");

  v176 = v4;
  if (v7 != (id)1)
  {
    v19 = &v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode];
    swift_beginAccess(&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode], v194, 0, 0);
    if (*v19 == 1)
      return;
    if (a1)
    {
      v193 = a1;
      v3 = a1;
      goto LABEL_10;
    }
    v89 = *(_QWORD *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager];
    if (!v89 || (swift_beginAccess(v89 + 80, v192, 0, 0), v90 = *(_QWORD *)(v89 + 80), !*(_QWORD *)(v90 + 16)))
    {
      v106 = (uint64_t)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
      v107 = swift_beginAccess(&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews], v191, 0, 0).n128_u64[0];
      v8 = *(_QWORD *)v106;
      if (*(_QWORD *)v106 >> 62)
        goto LABEL_165;
      if (*(uint64_t *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10) < 1)
        return;
      goto LABEL_90;
    }
    sub_100064C78(v90 + 32, (uint64_t)&v195);
    objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView], "contentOffset");
    v92 = v91;
    v94 = v93;
    v95 = objc_msgSend(v4, "view");
    if (!v95)
      goto LABEL_189;
    v96 = v95;
    objc_msgSend(v95, "frame");
    v98 = v97;

    v99 = (double *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight];
    *(_QWORD *)&v100 = swift_beginAccess(&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight], v191, 0, 0).n128_u64[0];
    v101 = *v99;
    if (*v99 <= 0.0)
    {
      v102 = objc_msgSend(v4, "view", v100);
      if (!v102)
        goto LABEL_191;
      v103 = v102;
      objc_msgSend(v102, "frame");
      v101 = v104;

    }
    sub_100BFEE80(&v195, v92, v94, v98, v101);
    v3 = v105;
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v195);
    v193 = v3;
    while (1)
    {
LABEL_10:
      v8 = (uint64_t)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews];
      swift_beginAccess(&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews], v189, 0, 0);
      v17 = *(_QWORD *)v8;
      v190 = *(_QWORD *)v8;
      if ((unint64_t)v3 >> 62)
      {
LABEL_106:
        if (v3 < 0)
          v129 = v3;
        else
          v129 = v3 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v20 = _CocoaArrayWrapper.endIndex.getter(v129);
        swift_bridgeObjectRelease();
        if (v20)
        {
LABEL_12:
          if (v20 >= 1)
          {
            v21 = 0;
            v22 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager;
            v173 = v20;
            v174 = v3 & 0xC000000000000001;
            v172 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager;
            while (1)
            {
              if (v174)
                v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v21, v3);
              else
                v25 = *(id *)(v3 + 8 * v21 + 32);
              v17 = (uint64_t)v25;
              v26 = *(_QWORD *)&v4[v22];
              if (!v26)
                goto LABEL_33;
              swift_beginAccess(v26 + 80, v188, 0, 0);
              v27 = *(_QWORD *)(v26 + 80);
              if (!*(_QWORD *)(v27 + 16))
                goto LABEL_33;
              sub_100064C78(v27 + 32, (uint64_t)&v195);
              v28 = *(_QWORD *)(v27 + 16);
              if (!v28)
              {
                _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v195);
LABEL_33:
                v48 = v21 + 3;
                if (__OFADD__(v21, 3))
                {
                  __break(1u);
                  goto LABEL_104;
                }
                v49 = objc_msgSend(v4, "traitCollection");
                v50 = objc_msgSend(v49, "accessibilityContrast");

                if (v50 != (id)1 || v48 <= 0)
                {
                  v52 = (double)v48;
                  if ((double)v48 > 4.0)
                    v52 = 4.0;
                  sub_100BF06D4(1, v52);
                  swift_beginAccess(v8, &v195, 33, 0);
                  if (v21 == -3)
                  {
                    v54 = (void *)sub_100C6F9A0((void *)v17);
                    swift_endAccess(&v195);

                  }
                  else
                  {
                    sub_100C6E2C0((Swift::Int *)&v185, (id)v17);
                    v53 = (void *)v185;
                    swift_endAccess(&v195);

                  }
                }
                goto LABEL_16;
              }
              v29 = v3;
              sub_100064C78(v27 + 32 + 40 * v28 - 40, (uint64_t)&v185);
              v30 = v17 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
              swift_beginAccess(v17 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line, v181, 0, 0);
              sub_100064C78(v30, (uint64_t)v182);
              v31 = v183;
              v32 = v184;
              sub_100007E68(v182, v183);
              v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 16))(v31, v32);
              v35 = v186;
              v34 = v187;
              sub_100007E68(&v185, v186);
              v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 16))(v35, v34);
              _s5Music18DragDropToPlaylistV6OriginVwxx_0(v182);
              if (v36 >= v33)
              {
                sub_100064C78(v30, (uint64_t)v182);
                v55 = v183;
                v56 = v184;
                sub_100007E68(v182, v183);
                v57 = (*(uint64_t (**)(uint64_t, uint64_t))(v56 + 16))(v55, v56);
                v58 = v198;
                v59 = v199;
                sub_100007E68(&v195, v198);
                v60 = (*(uint64_t (**)(uint64_t, unint64_t))(v59 + 16))(v58, v59);
                _s5Music18DragDropToPlaylistV6OriginVwxx_0(v182);
                v4 = v176;
                v61 = objc_msgSend(v176, "traitCollection");
                v62 = objc_msgSend(v61, "accessibilityContrast");

                if (v57 >= v60)
                {
                  sub_100BF06D4(1, 0.0);
                  swift_beginAccess(v8, v182, 33, 0);
                  v23 = (void *)sub_100C6F9A0((void *)v17);
                  swift_endAccess(v182);

                  v3 = v29;
                  v22 = v172;
                  v20 = v173;
                }
                else
                {
                  v3 = v29;
                  v22 = v172;
                  v20 = v173;
                  if (v62 != (id)1)
                  {
                    sub_100BF06D4(1, 3.0);
LABEL_47:
                    swift_beginAccess(v8, v182, 33, 0);
                    sub_100C6E2C0(&v180, (id)v17);
                    v63 = (void *)v180;
                    swift_endAccess(v182);

                  }
                }
              }
              else
              {
                sub_100064C78(v30, (uint64_t)v182);
                v37 = v183;
                v38 = v184;
                sub_100007E68(v182, v183);
                v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 16))(v37, v38);
                v3 = v186;
                v40 = v187;
                sub_100007E68(&v185, v186);
                v41 = (*(uint64_t (**)(int64_t, uint64_t))(v40 + 16))(v3, v40);
                v42 = v39 - v41;
                v4 = v176;
                if (__OFSUB__(v39, v41))
                  goto LABEL_105;
                _s5Music18DragDropToPlaylistV6OriginVwxx_0(v182);
                v43 = (double)v42 + 1.0;
                v44 = objc_msgSend(v176, "traitCollection");
                v45 = objc_msgSend(v44, "accessibilityContrast");

                v3 = v29;
                v22 = v172;
                v20 = v173;
                if (v45 == (id)1 && v43 > 0.0)
                  goto LABEL_15;
                if (v43 <= 4.0)
                  v46 = (double)v42 + 1.0;
                else
                  v46 = 4.0;
                sub_100BF06D4(1, v46);
                if (v43 != 0.0)
                  goto LABEL_47;
                swift_beginAccess(v8, v182, 33, 0);
                v47 = (void *)sub_100C6F9A0((void *)v17);
                swift_endAccess(v182);

              }
LABEL_15:
              _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v185);
              _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v195);
LABEL_16:
              ++v21;
              v24 = (void *)sub_100C6F9A0((void *)v17);

              if (v20 == v21)
              {
                swift_bridgeObjectRelease();
                v17 = v190;
                if ((v190 & 0xC000000000000001) == 0)
                  goto LABEL_111;
LABEL_76:
                if (v17 < 0)
                  v81 = v17;
                else
                  v81 = v17 & 0xFFFFFFFFFFFFFF8;
                v82 = __CocoaSet.makeIterator()(v81);
                v83 = type metadata accessor for SyncedLyricsLineView();
                v84 = sub_100048748(&qword_1011E0698, (uint64_t (*)(uint64_t))type metadata accessor for SyncedLyricsLineView, (uint64_t)&protocol conformance descriptor for NSObject);
                v80 = Set.Iterator.init(_cocoa:)(&v195, v82, v83, v84);
                v17 = v195;
                v85 = v196;
                v86 = v197;
                v87 = v198;
                v88 = v199;
                goto LABEL_115;
              }
            }
          }
          goto LABEL_157;
        }
      }
      else
      {
        v20 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v20)
          goto LABEL_12;
      }
      swift_bridgeObjectRelease();
      if ((v17 & 0xC000000000000001) != 0)
        goto LABEL_76;
LABEL_111:
      v87 = 0;
      v130 = -1 << *(_BYTE *)(v17 + 32);
      v85 = v17 + 56;
      v86 = ~v130;
      v131 = -v130;
      if (v131 < 64)
        v132 = ~(-1 << v131);
      else
        v132 = -1;
      v88 = v132 & *(_QWORD *)(v17 + 56);
LABEL_115:
      v3 = (unint64_t)(v86 + 64) >> 6;
      if (v17 < 0)
      {
        while (1)
        {
          v135 = __CocoaSet.Iterator.next()(v80);
          if (!v135)
            break;
          v136 = v135;
          v182[0] = v135;
          v137 = type metadata accessor for SyncedLyricsLineView();
          swift_unknownObjectRetain(v136, v138);
          swift_dynamicCast(&v185, v182, (char *)&type metadata for Swift.AnyObject + 8, v137, 7);
          v139 = (id)v185;
          *(_QWORD *)&v140 = swift_unknownObjectRelease(v136).n128_u64[0];
          v134 = v87;
          v4 = (char *)v88;
          if (!v139)
            break;
LABEL_136:
          v144 = objc_msgSend(v176, "traitCollection", v140);
          objc_msgSend(v144, "accessibilityContrast");

          sub_100BF06D4(0, 0.0);
          swift_beginAccess(v8, &v185, 33, 0);
          v145 = (void *)sub_100C6F9A0(v139);
          swift_endAccess(&v185);

          v87 = v134;
          v88 = (unint64_t)v4;
          if ((v17 & 0x8000000000000000) == 0)
            goto LABEL_116;
        }
      }
      else
      {
LABEL_116:
        if (v88)
        {
          v4 = (char *)((v88 - 1) & v88);
          v133 = __clz(__rbit64(v88)) | (v87 << 6);
          v134 = v87;
          goto LABEL_135;
        }
        v141 = v87 + 1;
        if (__OFADD__(v87, 1))
        {
          __break(1u);
LABEL_157:
          __break(1u);
          goto LABEL_158;
        }
        if (v141 < v3)
        {
          v142 = *(_QWORD *)(v85 + 8 * v141);
          v134 = v87 + 1;
          if (!v142)
          {
            v134 = v87 + 2;
            if (v87 + 2 >= v3)
              goto LABEL_138;
            v142 = *(_QWORD *)(v85 + 8 * v134);
            if (!v142)
            {
              v134 = v87 + 3;
              if (v87 + 3 >= v3)
                goto LABEL_138;
              v142 = *(_QWORD *)(v85 + 8 * v134);
              if (!v142)
              {
                v134 = v87 + 4;
                if (v87 + 4 >= v3)
                  goto LABEL_138;
                v142 = *(_QWORD *)(v85 + 8 * v134);
                if (!v142)
                {
                  v143 = v87 + 5;
                  do
                  {
                    if (v3 == v143)
                      goto LABEL_138;
                    v142 = *(_QWORD *)(v85 + 8 * v143++);
                  }
                  while (!v142);
                  v134 = v143 - 1;
                }
              }
            }
          }
          v4 = (char *)((v142 - 1) & v142);
          v133 = __clz(__rbit64(v142)) + (v134 << 6);
LABEL_135:
          v139 = *(id *)(*(_QWORD *)(v17 + 48) + 8 * v133);
          if (!v139)
            goto LABEL_138;
          goto LABEL_136;
        }
      }
LABEL_138:
      sub_10004FA7C(v17);
      v106 = *(_QWORD *)v8;
      if ((*(_QWORD *)v8 & 0xC000000000000001) != 0)
      {
        if (v106 < 0)
          v146 = *(_QWORD *)v8;
        else
          v146 = v106 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        v148 = __CocoaSet.count.getter(v146, v147);
        swift_bridgeObjectRelease();
      }
      else
      {
        v148 = *(_QWORD *)(v106 + 16);
      }
      if (v148 < 1)
        return;
      v149 = (uint64_t **)&v176[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
      swift_beginAccess(&v176[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews], v182, 0, 0);
      v8 = (uint64_t)*v149;
      if (!((unint64_t)*v149 >> 62))
      {
        v2 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v2)
          goto LABEL_162;
        goto LABEL_147;
      }
LABEL_158:
      if (v8 < 0)
        v106 = v8;
      else
        v106 = v8 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v2 = _CocoaArrayWrapper.endIndex.getter(v106);
      if (!v2)
        goto LABEL_162;
LABEL_147:
      if (v2 >= 1)
      {
        v150 = 0;
        v175 = v8 & 0xC000000000000001;
        do
        {
          if (v175)
            v160 = (unsigned __int8 *)specialized _ArrayBuffer._getElementSlowPath(_:)(v150, v8);
          else
            v160 = (unsigned __int8 *)*(id *)(v8 + 8 * v150 + 32);
          v161 = v160;
          v162 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_isScrolling;
          v160[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_isScrolling] = 0;
          v159 = sub_100BEF894((uint64_t)&v185);
          v164 = *(void **)v163;
          if (*(_QWORD *)v163)
          {
            v151 = v163;
            v152 = v161[v162];
            v153 = *(_QWORD *)(v163 + 8);
            v177 = v159;
            ObjectType = swift_getObjectType();
            v180 = (Swift::Int)v164;
            v155 = (uint64_t *)v8;
            v156 = *(void (**)(uint64_t, uint64_t, uint64_t))(v153 + 40);
            v157 = v164;
            v156(v152, ObjectType, v153);
            v8 = (uint64_t)v155;
            v158 = *(void **)v151;
            *(_QWORD *)v151 = v180;
            *(_QWORD *)(v151 + 8) = v153;

            v159 = v177;
          }
          v159(&v185, 0);
          ++v150;

        }
        while (v2 != v150);
LABEL_162:
        swift_bridgeObjectRelease();
        return;
      }
      __break(1u);
LABEL_165:
      if (v8 < 0)
        v165 = v8;
      else
        v165 = v8 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v166 = _CocoaArrayWrapper.endIndex.getter(v165);
      v107 = swift_bridgeObjectRelease().n128_u64[0];
      if (v166 < 1)
        return;
LABEL_90:
      objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView], "contentOffset", *(double *)&v107);
      v109 = v108;
      v111 = v110;
      v112 = &selRef_referralObject;
      v113 = objc_msgSend(v4, "view");
      if (!v113)
        goto LABEL_190;
      v114 = v113;
      objc_msgSend(v113, "frame");
      v116 = v115;

      v117 = (double *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight];
      *(_QWORD *)&v118 = swift_beginAccess(&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight], v179, 0, 0).n128_u64[0];
      v119 = *v117;
      if (*v117 <= 0.0)
      {
        v120 = objc_msgSend(v4, "view", v118);
        if (!v120)
          goto LABEL_192;
        v121 = v120;
        objc_msgSend(v120, "frame");
        v119 = v122;

      }
      v123 = *(_QWORD *)v106;
      if ((*(_QWORD *)v106 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        v124 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v123);
        swift_bridgeObjectRelease();
      }
      else
      {
        if (!*(_QWORD *)((v123 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_172;
        }
        v124 = (char *)*(id *)(v123 + 32);
      }
      v125 = (uint64_t)&v124[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
      swift_beginAccess(&v124[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], v178, 0, 0);
      sub_100064C78(v125, (uint64_t)&v195);

      sub_100BFEE80(&v195, v109, v111, v116, v119);
      v3 = v126;
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v195);
      v193 = v3;
      v112 = (char **)((unint64_t)v3 >> 62);
      if ((unint64_t)v3 >> 62)
      {
LABEL_172:
        if (v3 < 0)
          v167 = v3;
        else
          v167 = v3 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        v168 = _CocoaArrayWrapper.endIndex.getter(v167);
        v2 = v3;
        swift_bridgeObjectRelease();
        if (v168 < 1)
          goto LABEL_187;
        swift_bridgeObjectRetain();
        v169 = _CocoaArrayWrapper.endIndex.getter(v167);
        swift_bridgeObjectRelease();
        if (!v169)
          goto LABEL_193;
        swift_bridgeObjectRetain();
        v170 = _CocoaArrayWrapper.endIndex.getter(v167);
        swift_bridgeObjectRelease();
        v4 = v176;
        if (v170)
        {
LABEL_99:
          if ((v3 & 0xC000000000000001) != 0)
            goto LABEL_179;
          if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            v127 = *(id *)(v3 + 32);
            if (!v112)
              goto LABEL_102;
            goto LABEL_180;
          }
          __break(1u);
LABEL_187:
          v4 = v176;
          v3 = v2;
        }
        else
        {
          __break(1u);
LABEL_179:
          v127 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v3);
          if (!v112)
          {
LABEL_102:
            v128 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
            goto LABEL_184;
          }
LABEL_180:
          if (v3 < 0)
            v171 = v3;
          else
            v171 = v3 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain();
          v128 = _CocoaArrayWrapper.endIndex.getter(v171);
          swift_bridgeObjectRelease();
LABEL_184:
          if (!v128)
          {
            __break(1u);
LABEL_189:
            __break(1u);
LABEL_190:
            __break(1u);
LABEL_191:
            __break(1u);
LABEL_192:
            __break(1u);
LABEL_193:
            __break(1u);
            return;
          }
          sub_100BB9B3C(0, 1);

          v3 = v193;
        }
      }
      else if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_99;
      }
    }
  }
  v8 = (uint64_t)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews];
  swift_beginAccess(&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews], &v185, 0, 0);
  v9 = *(_QWORD *)v8;
  if ((*(_QWORD *)v8 & 0xC000000000000001) != 0)
  {
    if (v9 < 0)
      v10 = *(_QWORD *)v8;
    else
      v10 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v11 = __CocoaSet.makeIterator()(v10);
    v12 = type metadata accessor for SyncedLyricsLineView();
    v13 = sub_100048748(&qword_1011E0698, (uint64_t (*)(uint64_t))type metadata accessor for SyncedLyricsLineView, (uint64_t)&protocol conformance descriptor for NSObject);
    v14 = Set.Iterator.init(_cocoa:)(&v195, v11, v12, v13);
    v9 = v195;
    v15 = v196;
    v16 = v197;
    v17 = v198;
    v18 = v199;
  }
  else
  {
    v64 = -1 << *(_BYTE *)(v9 + 32);
    v15 = v9 + 56;
    v16 = ~v64;
    v65 = -v64;
    if (v65 < 64)
      v66 = ~(-1 << v65);
    else
      v66 = -1;
    v18 = v66 & *(_QWORD *)(v9 + 56);
    v14 = (_QWORD *)swift_bridgeObjectRetain();
    v17 = 0;
  }
  v67 = (unint64_t)(v16 + 64) >> 6;
  if (v9 < 0)
    goto LABEL_55;
  while (1)
  {
    if (v18)
    {
      v4 = (char *)((v18 - 1) & v18);
      v68 = __clz(__rbit64(v18)) | (v17 << 6);
      v3 = v17;
      goto LABEL_72;
    }
    v75 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
      goto LABEL_106;
    }
    if (v75 >= v67)
      goto LABEL_80;
    v76 = *(_QWORD *)(v15 + 8 * v75);
    v3 = v17 + 1;
    if (!v76)
    {
      v3 = v17 + 2;
      if (v17 + 2 >= v67)
        goto LABEL_80;
      v76 = *(_QWORD *)(v15 + 8 * v3);
      if (!v76)
      {
        v3 = v17 + 3;
        if (v17 + 3 >= v67)
          goto LABEL_80;
        v76 = *(_QWORD *)(v15 + 8 * v3);
        if (!v76)
        {
          v3 = v17 + 4;
          if (v17 + 4 >= v67)
            goto LABEL_80;
          v76 = *(_QWORD *)(v15 + 8 * v3);
          if (!v76)
            break;
        }
      }
    }
LABEL_71:
    v4 = (char *)((v76 - 1) & v76);
    v68 = __clz(__rbit64(v76)) + (v3 << 6);
LABEL_72:
    v73 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * v68);
    if (!v73)
      goto LABEL_80;
    while (1)
    {
      v78 = objc_msgSend(v176, "traitCollection", v74);
      objc_msgSend(v78, "accessibilityContrast");

      sub_100BF06D4(0, 0.0);
      swift_beginAccess(v8, v182, 33, 0);
      v79 = (void *)sub_100C6F9A0(v73);
      swift_endAccess(v182);

      v17 = v3;
      v18 = (unint64_t)v4;
      if ((v9 & 0x8000000000000000) == 0)
        break;
LABEL_55:
      v69 = __CocoaSet.Iterator.next()(v14);
      if (v69)
      {
        v70 = v69;
        v194[0] = v69;
        v71 = type metadata accessor for SyncedLyricsLineView();
        swift_unknownObjectRetain(v70, v72);
        swift_dynamicCast(v182, v194, (char *)&type metadata for Swift.AnyObject + 8, v71, 7);
        v73 = (id)v182[0];
        *(_QWORD *)&v74 = swift_unknownObjectRelease(v70).n128_u64[0];
        v3 = v17;
        v4 = (char *)v18;
        if (v73)
          continue;
      }
      goto LABEL_80;
    }
  }
  v77 = v17 + 5;
  while (v67 != v77)
  {
    v76 = *(_QWORD *)(v15 + 8 * v77++);
    if (v76)
    {
      v3 = v77 - 1;
      goto LABEL_71;
    }
  }
LABEL_80:
  sub_10004FA7C(v9);
}

void sub_100C008D0(void *a1, char a2, double a3)
{
  char *v3;
  char *v4;
  id v8;
  id v9;
  double v10;
  void *v11;
  _BYTE v12[24];
  Swift::Int v13;

  v4 = v3;
  v8 = objc_msgSend(v4, "traitCollection");
  v9 = objc_msgSend(v8, "accessibilityContrast");

  if (v9 != (id)1 || a3 <= 0.0)
  {
    v10 = 4.0;
    if (a3 <= 4.0)
      v10 = a3;
    sub_100BF06D4(a2 & 1, v10);
    swift_beginAccess(&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews], v12, 33, 0);
    if (a3 == 0.0)
    {
      v11 = (void *)sub_100C6F9A0(a1);
    }
    else
    {
      sub_100C6E2C0(&v13, a1);
      v11 = (void *)v13;
    }
    swift_endAccess(v12);

  }
}

void sub_100C009E8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  double v23;
  int64_t v24;
  unint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t **v29;
  uint64_t v30;
  uint64_t v31;
  unsigned __int8 *v32;
  unsigned __int8 *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(__int128 *, char);
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t ObjectType;
  uint64_t *v42;
  void (*v43)(uint64_t, uint64_t, uint64_t);
  id v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  int64_t v48;
  unint64_t v49;
  uint64_t v50;
  void (*v51)(__int128 *, char);
  _QWORD v52[4];
  _QWORD v53[3];
  char v54[24];
  _QWORD v55[6];

  v1 = v0;
  v2 = (uint64_t)&v0[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews];
  swift_beginAccess(&v0[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews], v54, 0, 0);
  v3 = *(_QWORD *)v2;
  if ((*(_QWORD *)v2 & 0xC000000000000001) != 0)
  {
    if (v3 < 0)
      v4 = *(_QWORD *)v2;
    else
      v4 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v5 = __CocoaSet.makeIterator()(v4);
    v6 = type metadata accessor for SyncedLyricsLineView();
    v7 = sub_100048748(&qword_1011E0698, (uint64_t (*)(uint64_t))type metadata accessor for SyncedLyricsLineView, (uint64_t)&protocol conformance descriptor for NSObject);
    v8 = Set.Iterator.init(_cocoa:)(v55, v5, v6, v7);
    v3 = v55[0];
    v50 = v55[1];
    v9 = v55[2];
    v10 = v55[3];
    v11 = v55[4];
  }
  else
  {
    v12 = -1 << *(_BYTE *)(v3 + 32);
    v50 = v3 + 56;
    v9 = ~v12;
    v13 = -v12;
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v11 = v14 & *(_QWORD *)(v3 + 56);
    v8 = (_QWORD *)swift_bridgeObjectRetain();
    v10 = 0;
  }
  v47 = v9;
  v48 = (unint64_t)(v9 + 64) >> 6;
  if (v3 < 0)
    goto LABEL_13;
  while (1)
  {
    if (v11)
    {
      v15 = (v11 - 1) & v11;
      v16 = __clz(__rbit64(v11)) | (v10 << 6);
      v17 = v10;
      goto LABEL_30;
    }
    v24 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v24 >= v48)
      goto LABEL_33;
    v25 = *(_QWORD *)(v50 + 8 * v24);
    v17 = v10 + 1;
    if (!v25)
    {
      v17 = v10 + 2;
      if (v10 + 2 >= v48)
        goto LABEL_33;
      v25 = *(_QWORD *)(v50 + 8 * v17);
      if (!v25)
      {
        v17 = v10 + 3;
        if (v10 + 3 >= v48)
          goto LABEL_33;
        v25 = *(_QWORD *)(v50 + 8 * v17);
        if (!v25)
        {
          v17 = v10 + 4;
          if (v10 + 4 >= v48)
            goto LABEL_33;
          v25 = *(_QWORD *)(v50 + 8 * v17);
          if (!v25)
            break;
        }
      }
    }
LABEL_29:
    v15 = (v25 - 1) & v25;
    v16 = __clz(__rbit64(v25)) + (v17 << 6);
LABEL_30:
    v22 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v16);
    if (!v22)
      goto LABEL_33;
    while (1)
    {
      v27 = objc_msgSend(v1, "traitCollection", v23, v47);
      objc_msgSend(v27, "accessibilityContrast");

      sub_100BF06D4(1, 0.0);
      swift_beginAccess(v2, v52, 33, 0);
      v28 = (void *)sub_100C6F9A0(v22);
      swift_endAccess(v52);

      v10 = v17;
      v11 = v15;
      if ((v3 & 0x8000000000000000) == 0)
        break;
LABEL_13:
      v18 = __CocoaSet.Iterator.next()(v8);
      if (v18)
      {
        v19 = v18;
        v53[0] = v18;
        v20 = type metadata accessor for SyncedLyricsLineView();
        swift_unknownObjectRetain(v19, v21);
        swift_dynamicCast(v52, v53, (char *)&type metadata for Swift.AnyObject + 8, v20, 7);
        v22 = (id)v52[0];
        *(_QWORD *)&v23 = swift_unknownObjectRelease(v19).n128_u64[0];
        v17 = v10;
        v15 = v11;
        if (v22)
          continue;
      }
      goto LABEL_33;
    }
  }
  v26 = v10 + 5;
  while (v48 != v26)
  {
    v25 = *(_QWORD *)(v50 + 8 * v26++);
    if (v25)
    {
      v17 = v26 - 1;
      goto LABEL_29;
    }
  }
LABEL_33:
  sub_10004FA7C(v3);
  v29 = (uint64_t **)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
  swift_beginAccess(v29, v53, 0, 0);
  v2 = (uint64_t)*v29;
  if (!((unint64_t)*v29 >> 62))
  {
    v30 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v30)
      goto LABEL_35;
LABEL_49:
    swift_bridgeObjectRelease();
    return;
  }
LABEL_45:
  if (v2 < 0)
    v46 = v2;
  else
    v46 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v30 = _CocoaArrayWrapper.endIndex.getter(v46);
  if (!v30)
    goto LABEL_49;
LABEL_35:
  if (v30 >= 1)
  {
    v31 = 0;
    v49 = v2 & 0xC000000000000001;
    do
    {
      if (v49)
        v32 = (unsigned __int8 *)specialized _ArrayBuffer._getElementSlowPath(_:)(v31, v2);
      else
        v32 = (unsigned __int8 *)*(id *)(v2 + 8 * v31 + 32);
      v33 = v32;
      v34 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_isScrolling;
      v32[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_isScrolling] = 1;
      v36 = sub_100BEF894((uint64_t)v52);
      v37 = *(void **)v35;
      if (*(_QWORD *)v35)
      {
        v38 = v35;
        v39 = v33[v34];
        v40 = *(_QWORD *)(v35 + 8);
        v51 = v36;
        ObjectType = swift_getObjectType();
        v42 = (uint64_t *)v2;
        v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 40);
        v44 = v37;
        v43(v39, ObjectType, v40);
        v2 = (uint64_t)v42;
        v45 = *(void **)v38;
        *(_QWORD *)v38 = v37;
        *(_QWORD *)(v38 + 8) = v40;

        v51((__int128 *)v52, 0);
      }
      else
      {
        v36((__int128 *)v52, 0);
      }
      ++v31;

    }
    while (v30 != v31);
    goto LABEL_49;
  }
  __break(1u);
}

void sub_100C00E68(uint64_t a1, char a2, uint64_t a3, char a4, char a5, double a6, double a7, double a8)
{
  char *v8;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  char *v20;
  double v21;
  double v22;
  double v23;
  CGFloat v24;
  char **v25;
  id v26;
  void *v27;
  double v28;
  CGFloat v29;
  CGFloat *v30;
  double v31;
  CGFloat v32;
  id v33;
  void *v34;
  double v35;
  double v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  double v44;
  double v45;
  double v46;
  double v47;
  id v48;
  char *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  char *v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  void (*v66)(uint64_t);
  uint64_t *v67;
  uint64_t (*v68)(void *, void (*)(uint64_t));
  id v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  BOOL v75;
  void *v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  _QWORD *v80;
  id v81;
  void *v82;
  double v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  double *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  BOOL v96;
  __int128 v97;
  char v98;
  uint64_t v99;
  __int128 v100;
  char *v101;
  char *v102;
  char v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  double v108;
  char **v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(uint64_t);
  void *v115;
  uint64_t v116;
  void *v117;
  void (*v118)(uint64_t);
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  void *v126;
  char *v127;
  id v128;
  unint64_t v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char v134;
  uint64_t v135;
  id v136;
  CGFloat v137;
  CGFloat v138;
  double v139;
  double v140;
  unint64_t v141;
  uint64_t v142;
  CGFloat *v143;
  id v144;
  void *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  char *v151;
  uint64_t Strong;
  uint64_t v153;
  uint64_t v154;
  uint64_t ObjectType;
  char v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  unsigned int v160;
  uint64_t v161;
  uint64_t v162;
  BOOL v163;
  char *v164;
  unsigned int v165;
  uint64_t v166;
  unint64_t v168;
  unint64_t v169;
  double *v170;
  char **v171;
  _QWORD *v172;
  id v173;
  char *v174;
  __int128 v175;
  __int128 v176;
  uint64_t v177;
  uint64_t v178;
  void *v179;
  char v180[24];
  char v181[24];
  char v182[24];
  _QWORD aBlock[3];
  void *v184;
  void (*v185)(uint64_t);
  uint64_t v186;
  __int128 v187[2];
  char v188[24];
  char v189[24];
  char v190[24];
  char v191[24];
  char v192[24];
  char v193[24];
  char v194[24];
  char v195[24];
  char v196[24];
  _OWORD v197[2];
  char v198;
  CGRect v199;
  CGRect v200;
  CGRect v201;
  CGRect v202;
  CGRect v203;

  v16 = swift_allocObject(&unk_101107D20, 32, 7);
  *(double *)(v16 + 16) = a6;
  *(double *)(v16 + 24) = a7;
  v17 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
  objc_msgSend(*(id *)&v8[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView], "contentOffset");
  v19 = v18;
  v20 = v8;
  objc_msgSend(*(id *)&v8[v17], "contentOffset");
  v22 = v21;
  v24 = v23;
  v25 = &selRef_referralObject;
  v26 = objc_msgSend(v8, "view");
  if (!v26)
    goto LABEL_133;
  v27 = v26;
  objc_msgSend(v26, "frame");
  v29 = v28;

  v30 = (CGFloat *)&v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight];
  *(_QWORD *)&v31 = swift_beginAccess(&v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight], v196, 0, 0).n128_u64[0];
  v32 = *v30;
  if (*v30 <= 0.0)
  {
    v33 = objc_msgSend(v20, "view", v31);
    if (!v33)
      goto LABEL_134;
    v34 = v33;
    objc_msgSend(v33, "frame");
    v32 = v35;

  }
  v160 = a4 & 1;
  v36 = a7 - v19;
  v199.origin.x = v22;
  v199.origin.y = v24;
  v199.size.width = v29;
  v199.size.height = v32;
  v203 = CGRectOffset(v199, 0.0, v36);
  v200.origin.x = v22;
  v200.origin.y = v24;
  v200.size.width = v29;
  v200.size.height = v32;
  v201 = CGRectUnion(v200, v203);
  sub_100BFEE80((_QWORD *)a1, v201.origin.x, v201.origin.y, v201.size.width, v201.size.height);
  v169 = v37;
  v38 = *(_QWORD *)(a1 + 24);
  v39 = *(_QWORD *)(a1 + 32);
  sub_100007E68((_QWORD *)a1, v38);
  v40 = (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 16))(v38, v39);
  v41 = &v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
  swift_beginAccess(&v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews], v195, 0, 0);
  v42 = *(_QWORD *)v41;
  if ((v42 & 0xC000000000000001) == 0)
  {
    if ((v40 & 0x8000000000000000) != 0)
    {
LABEL_109:
      __break(1u);
    }
    else if (v40 < *(_QWORD *)((v42 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v173 = *(id *)(v42 + 8 * v40 + 32);
      if (v160)
        goto LABEL_17;
      goto LABEL_9;
    }
    __break(1u);
    goto LABEL_111;
  }
  swift_bridgeObjectRetain();
  v173 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v40, v42);
  swift_bridgeObjectRelease();
  if (v160)
    goto LABEL_17;
LABEL_9:
  v43 = &v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics];
  swift_beginAccess(&v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics], v180, 0, 0);
  if (!*(_QWORD *)v43 || *(_BYTE *)(*(_QWORD *)v43 + 56) != 2)
  {
LABEL_17:
    if ((a2 & 1) != 0)
    {
      v48 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 2.0, 260.0, 50.0, 0.0, 0.0);
    }
    else
    {
      v49 = &v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics];
      swift_beginAccess(&v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics], v194, 0, 0);
      if (*(_QWORD *)v49 && *(_BYTE *)(*(_QWORD *)v49 + 56) == 2)
        v48 = sub_100BF66DC(a3, v160);
      else
        v48 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 100.0, 18.0, 0.0, 0.0);
    }
    goto LABEL_23;
  }
  v44 = (*(double *)&a3 + -0.2) / 0.55;
  if (*(double *)&a3 > 0.75)
    v44 = 1.0;
  v45 = 0.0;
  if (*(double *)&a3 >= 0.2)
    v45 = v44;
  v46 = (1.0 - v45) * 0.12 + 0.78;
  v47 = v45 * 0.27 + 0.48;
  sub_10004A07C(0, &qword_1011E0390, UISpringTimingParameters_ptr);
  v48 = UISpringTimingParameters.init(dampingRatio:response:)(v46, v47);
LABEL_23:
  v50 = v48;
  v51 = *(_QWORD *)(a1 + 24);
  v52 = *(_QWORD *)(a1 + 32);
  sub_100007E68((_QWORD *)a1, v51);
  v53 = (*(double (**)(uint64_t))(*(_QWORD *)(v52 + 8) + 16))(v51);
  v170 = (double *)&v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
  *(_QWORD *)&v54 = swift_beginAccess(&v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs], v193, 0, 0).n128_u64[0];
  v166 = (uint64_t)v50;
  v157 = a3;
  if ((a2 & 1) != 0 || (v55 = v53 - v170[19], objc_msgSend(v50, "settlingDuration"), v54 = v56 + a8, v55 >= v54))
  {
    objc_msgSend(v50, "settlingDuration", v54);
    v22 = v57;
  }
  else
  {
    v22 = v55 - a8;
    objc_msgSend(v50, "setImplicitDuration:", 0);
  }
  v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating] = 1;
  v25 = (char **)OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView;
  v58 = *(char **)&v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView];
  v174 = v20;
  v171 = (char **)a1;
  v156 = a2;
  if (v58
    && (v59 = *(void **)&v58[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView]) != 0
    && (v60 = _s23InstrumentalContentViewCMa(), (v61 = swift_dynamicCastClass(v59, v60)) != 0))
  {
    v62 = v61;
    v63 = v16;
    v64 = (uint64_t)&v58[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
    swift_beginAccess(&v58[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], v181, 0, 0);
    sub_100064C78(v64, (uint64_t)aBlock);
    v65 = v184;
    v66 = v185;
    v67 = sub_100007E68(aBlock, (uint64_t)v184);
    v68 = (uint64_t (*)(void *, void (*)(uint64_t)))*((_QWORD *)v66 + 2);
    v39 = v58;
    v69 = v59;
    v70 = v67;
    v71 = v68(v65, v66);
    a1 = v71 + 1;
    if (__OFADD__(v71, 1))
    {
      __break(1u);
      goto LABEL_116;
    }
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(aBlock);
    v72 = (uint64_t)v171[3];
    v73 = v171[4];
    sub_100007E68(v171, v72);
    v74 = (*((uint64_t (**)(uint64_t, char *))v73 + 2))(v72, v73);
    v75 = a1 == v74;
    v16 = v63;
    v20 = v174;
    if (a1 == v74)
    {
      v76 = *(char **)((char *)v25 + (_QWORD)v174);
      *(char **)((char *)v25 + (_QWORD)v174) = 0;

      objc_msgSend((id)v39, "frame");
      *(double *)(v16 + 24) = *(double *)(v16 + 24) - (CGRectGetHeight(v202) + v170[10]);
      sub_100BEC148();
    }

    a1 = (uint64_t)v171;
  }
  else
  {
    v75 = 0;
  }
  sub_100064C78(a1, (uint64_t)aBlock);
  v77 = sub_100007E8C(&qword_1011DF470);
  v25 = (char **)v166;
  if ((swift_dynamicCast(v187, aBlock, v77, &type metadata for Lyrics.InstrumentalLine, 6) & 1) != 0)
  {
    v78 = (_QWORD *)a1;
    a1 = v169;
    sub_100C02124(v78, v169, v166, *(double *)(v16 + 16), *(double *)(v16 + 24), v22, v36, a8);
    goto LABEL_123;
  }
  if (v75)
  {
    v79 = (_QWORD *)a1;
    a1 = v169;
    sub_100C02C0C(v79, v169, v166, *(double *)(v16 + 16), *(double *)(v16 + 24), v22, v36);
    goto LABEL_123;
  }
  a1 = v169;
  v20 = (char *)(v169 >> 62);
  if (!(v169 >> 62))
  {
    v62 = *(_QWORD *)((v169 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_41;
  }
LABEL_111:
  if (a1 < 0)
    v146 = a1;
  else
    v146 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v62 = _CocoaArrayWrapper.endIndex.getter(v146);
  swift_bridgeObjectRelease();
LABEL_41:
  v80 = _swiftEmptyArrayStorage;
  if (v62)
  {
    aBlock[0] = _swiftEmptyArrayStorage;
    v70 = aBlock;
    sub_100BCD3B4(0, v62 & ~(v62 >> 63), 0);
    if ((v62 & 0x8000000000000000) == 0)
    {
      v39 = 0;
      v80 = (_QWORD *)aBlock[0];
      do
      {
        if ((a1 & 0xC000000000000001) != 0)
          v81 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v39, a1);
        else
          v81 = *(id *)(a1 + 8 * v39 + 32);
        v82 = v81;
        v83 = UIView.untransformedFrame.getter();
        v85 = v84;
        v87 = v86;
        v89 = v88;

        aBlock[0] = v80;
        v91 = v80[2];
        v90 = v80[3];
        if (v91 >= v90 >> 1)
        {
          sub_100BCD3B4((char *)(v90 > 1), v91 + 1, 1);
          v80 = (_QWORD *)aBlock[0];
        }
        ++v39;
        v80[2] = v91 + 1;
        v92 = (double *)&v80[4 * v91];
        v92[4] = v83;
        *((_QWORD *)v92 + 5) = v85;
        *((_QWORD *)v92 + 6) = v87;
        *((_QWORD *)v92 + 7) = v89;
      }
      while (v62 != v39);
      v25 = (char **)v166;
      goto LABEL_51;
    }
LABEL_116:
    __break(1u);
    goto LABEL_117;
  }
LABEL_51:
  v159 = v16;
  if (v20)
  {
    if (a1 < 0)
      v94 = a1;
    else
      v94 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v93 = _CocoaArrayWrapper.endIndex.getter(v94);
    v20 = v174;
    if (!v93)
    {
LABEL_87:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100BF7530((uint64_t)v173, a1);
      v25 = v171;
      if ((v134 & 1) != 0)
        goto LABEL_121;
      v62 = v133;
      v70 = (uint64_t *)&v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators];
      swift_beginAccess(&v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators], v188, 0, 0);
      v39 = *v70;
      if (!((unint64_t)*v70 >> 62))
      {
        if (v62 < *(_QWORD *)((v39 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_90;
        goto LABEL_121;
      }
LABEL_117:
      if (v39 < 0)
        v147 = v39;
      else
        v147 = v39 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v148 = v147;
      v20 = v174;
      v149 = _CocoaArrayWrapper.endIndex.getter(v148);
      swift_bridgeObjectRelease();
      if (v62 < v149)
      {
LABEL_90:
        v135 = *v70;
        if ((v135 & 0xC000000000000001) == 0)
        {
          if (v62 < 0)
          {
            __break(1u);
          }
          else if ((unint64_t)v62 < *(_QWORD *)((v135 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            v136 = *(id *)(v135 + 8 * v62 + 32);
LABEL_94:
            sub_100BFF424(v25, v136, (uint64_t *)1, 1);

LABEL_122:
            v25 = (char **)v166;
LABEL_123:
            v150 = &v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode];
            swift_beginAccess(&v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode], aBlock, 1, 0);
            if (*v150 == 1)
            {
              *v150 = 0;
              v151 = &v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate];
              swift_beginAccess(&v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate], v187, 0, 0);
              Strong = swift_unknownObjectWeakLoadStrong(v151);
              if (Strong)
              {
                v153 = Strong;
                v154 = *((_QWORD *)v151 + 1);
                ObjectType = swift_getObjectType();
                (*(void (**)(char *, uint64_t, uint64_t))(v154 + 24))(v20, ObjectType, v154);
                swift_unknownObjectRelease(v153);
              }
            }
            sub_100BFF7DC(a1);
            swift_bridgeObjectRelease();

LABEL_127:
            swift_release();

            return;
          }
          __break(1u);
          goto LABEL_131;
        }
        swift_bridgeObjectRetain();
        v136 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v62, v135);
        swift_bridgeObjectRelease();
        goto LABEL_94;
      }
LABEL_121:
      sub_100BFF424(v25, 0, (uint64_t *)1, 1);
      goto LABEL_122;
    }
  }
  else
  {
    v93 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v20 = v174;
    if (!v93)
      goto LABEL_87;
  }
  sub_10004A07C(0, (unint64_t *)&qword_1011DF6A0, NSObject_ptr);
  v95 = 0;
  v165 = 0;
  v164 = &v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators];
  v168 = a1 & 0xC000000000000001;
  v158 = a1 + 32;
  v161 = v62 - 1;
  v96 = __OFSUB__(v62, 1);
  v163 = v96;
  v97 = 0uLL;
  v98 = 1;
  v99 = 56;
  v100 = 0uLL;
  v162 = v93;
  v172 = v80;
  while (1)
  {
    v197[0] = v97;
    v197[1] = v100;
    v198 = v98 & 1;
    if (v168)
      v101 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v95, a1);
    else
      v101 = (char *)*(id *)(v158 + 8 * v95);
    v102 = v101;
    if (__OFADD__(v95, 1))
    {
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
      goto LABEL_109;
    }
    v177 = v95 + 1;
    v16 = (uint64_t)objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:timingParameters:", v25, v22);
    v39 = swift_allocObject(&unk_101107D48, 48, 7);
    v103 = static NSObject.== infix(_:_:)(v102, v173);
    sub_100BFD370(v102, v103 & 1, (uint64_t)v197);
    *(_QWORD *)(v39 + 16) = v104;
    *(_QWORD *)(v39 + 24) = v105;
    *(_QWORD *)(v39 + 32) = v106;
    *(_QWORD *)(v39 + 40) = v107;
    v178 = v99;
    v179 = (void *)v16;
    if (v95)
    {
      if ((a5 & 1) != 0)
        goto LABEL_78;
    }
    else
    {
      swift_beginAccess(v39 + 16, v182, 1, 0);
      *(double *)(v39 + 24) = *(double *)(v39 + 24) - v36;
      if ((a5 & 1) != 0)
        goto LABEL_78;
    }
    if ((unint64_t)v95 >= v172[2])
      goto LABEL_108;
    v108 = *(double *)((char *)v172 + v99);
    swift_beginAccess(v39 + 16, v192, 1, 0);
    if (v108 == *(double *)(v39 + 40))
    {
      v16 = v165;
      v109 = v171;
    }
    else
    {
      v109 = v171;
      v111 = (uint64_t)v171[3];
      v110 = v171[4];
      sub_100007E68(v171, v111);
      v112 = (*((uint64_t (**)(uint64_t, char *))v110 + 2))(v111, v110);
      v113 = (uint64_t)&v102[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
      swift_beginAccess(&v102[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], v191, 0, 0);
      sub_100064C78(v113, (uint64_t)aBlock);
      v115 = v184;
      v114 = v185;
      sub_100007E68(aBlock, (uint64_t)v184);
      LODWORD(v112) = (*((uint64_t (**)(void *, void (*)(uint64_t)))v114 + 2))(v115, v114) < v112;
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(aBlock);
      v16 = v112 | v165;
    }
    v116 = (uint64_t)&v102[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
    swift_beginAccess(&v102[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], v190, 0, 0);
    sub_100064C78(v116, (uint64_t)aBlock);
    v117 = v184;
    v118 = v185;
    sub_100007E68(aBlock, (uint64_t)v184);
    v119 = (*((uint64_t (**)(void *, void (*)(uint64_t)))v118 + 2))(v117, v118);
    v121 = (uint64_t)v109[3];
    v120 = v109[4];
    sub_100007E68(v109, v121);
    v122 = (*((uint64_t (**)(uint64_t, char *))v120 + 2))(v121, v120);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(aBlock);
    v165 = (v119 != v122) & v16;
    if (v119 != v122)
    {
      v20 = v174;
      a1 = v169;
      v25 = (char **)v166;
      goto LABEL_78;
    }
    v20 = v174;
    a1 = v169;
    v25 = (char **)v166;
    if ((v16 & 1) != 0)
      break;
LABEL_78:
    swift_beginAccess(v39 + 16, v189, 0, 0);
    v175 = *(_OWORD *)(v39 + 32);
    v176 = *(_OWORD *)(v39 + 16);
    v123 = swift_allocObject(&unk_101107D70, 32, 7);
    *(_QWORD *)(v123 + 16) = v102;
    *(_QWORD *)(v123 + 24) = v39;
    v124 = v102;
    swift_retain();
    UIViewPropertyAnimator.addModifiedAnimations(with:animations:)(2, (uint64_t)sub_100C07758, v123);
    swift_release();
    if (v163)
      goto LABEL_107;
    if (v161 == v95)
    {
      sub_100064C78((uint64_t)v171, (uint64_t)v187);
      v125 = swift_allocObject(&unk_101107D98, 88, 7);
      *(_QWORD *)(v125 + 16) = a1;
      *(double *)(v125 + 24) = v36;
      *(_QWORD *)(v125 + 32) = v20;
      *(_QWORD *)(v125 + 40) = v159;
      sub_100064C48(v187, v125 + 48);
      v185 = sub_100C0779C;
      v186 = v125;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10012F6FC;
      v184 = &unk_101107DB0;
      v126 = _Block_copy(aBlock);
      swift_bridgeObjectRetain();
      v127 = v174;
      v20 = v174;
      swift_retain();
      objc_msgSend(v179, "addCompletion:", v126, swift_release().n128_f64[0]);
      _Block_release(v126);
    }
    swift_beginAccess(v164, aBlock, 33, 0);
    v128 = v179;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v128);
    v130 = *(_QWORD *)((*(_QWORD *)v164 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v129 = *(_QWORD *)((*(_QWORD *)v164 & 0xFFFFFFFFFFFFFF8) + 0x18);
    v16 = v162;
    if (v130 >= v129 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v129 > 1, v130 + 1, 1);
    v131 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v130, v128);
    specialized Array._endMutation()(v131);
    swift_endAccess(aBlock);
    if (v95 <= 1)
      v132 = 1;
    else
      v132 = v95;
    objc_msgSend(v128, "startAnimationAfterDelay:", v170[18] * (double)(v132 - 1));
    swift_release();

    v98 = 0;
    ++v95;
    v99 = v178 + 32;
    v100 = v175;
    v97 = v176;
    if (v177 == v162)
      goto LABEL_87;
  }
  swift_bridgeObjectRelease();
  sub_100C03BC8();
  v137 = *(double *)(v39 + 16);
  v138 = v36 + *(double *)(v39 + 24);
  *(CGFloat *)(v39 + 24) = v138;
  sub_100BFF2C8(v137, v138, *(CGFloat *)(v39 + 32), *(CGFloat *)(v39 + 40));
  v140 = v139;
  if (!v95)
  {
LABEL_105:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100C00E68(v171, v156 & 1, v157, v160, 1, 0.0, v140, a8);

    swift_release();
    goto LABEL_127;
  }
  if (v168)
  {
    v141 = v95 - 1;
  }
  else
  {
    v141 = v95 - 1;
    if ((unint64_t)(v95 - 1) >= *(_QWORD *)((v169 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_132;
  }
  if (v141 < v172[2])
  {
    v142 = 0;
    v143 = (CGFloat *)(v172 + 7);
    do
    {
      if (v168)
        v144 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v142, v169);
      else
        v144 = *(id *)(v169 + 8 * v142 + 32);
      v145 = v144;
      ++v142;
      UIView.untransformedFrame.setter(*(v143 - 3), *(v143 - 2), *(v143 - 1), *v143);

      v143 += 4;
    }
    while (v95 != v142);
    goto LABEL_105;
  }
LABEL_131:
  __break(1u);
LABEL_132:
  __break(1u);
LABEL_133:
  __break(1u);
LABEL_134:
  __break(1u);
}

id sub_100C01E78(uint64_t a1, CGFloat *a2)
{
  _BYTE v4[24];

  swift_beginAccess(a2 + 2, v4, 0, 0);
  return UIView.untransformedFrame.setter(a2[2], a2[3], a2[4], a2[5]);
}

void sub_100C01EC0(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  unint64_t v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  CGFloat v17;
  CGFloat v18;
  uint64_t v19;
  void *v20;
  id v21;
  double v22;
  double v23;
  CGFloat v24;
  CGFloat v25;
  void *v26;
  _QWORD *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t);
  uint64_t *v32;
  id v33;
  _BYTE v34[24];
  _BYTE v35[24];
  _BYTE v36[24];

  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v6 = a3;
    else
      v6 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v12 = _CocoaArrayWrapper.endIndex.getter(v6);
    if (!v12)
      goto LABEL_10;
  }
  else
  {
    v12 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v12)
      goto LABEL_10;
  }
  if (v12 < 1)
  {
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, a5);
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  if ((a3 & 0xC000000000000001) != 0)
  {
    v13 = 0;
    do
    {
      v14 = specialized _ArrayBuffer._getElementSlowPath(_:)(v13++, a3);
      v15 = UIView.untransformedFrame.getter();
      UIView.untransformedFrame.setter(v15, v16 + a1, v17, v18);
      swift_unknownObjectRelease(v14);
    }
    while (v12 != v13);
  }
  else
  {
    v19 = 0;
    do
    {
      v20 = *(void **)(a3 + 8 * v19++ + 32);
      v21 = v20;
      v22 = UIView.untransformedFrame.getter();
      UIView.untransformedFrame.setter(v22, v23 + a1, v24, v25);

    }
    while (v12 != v19);
  }
LABEL_10:
  swift_bridgeObjectRelease();
  v26 = *(void **)(a4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView);
  swift_beginAccess(a5 + 16, v36, 0, 0);
  objc_msgSend(v26, "setContentOffset:", *(double *)(a5 + 16), *(double *)(a5 + 24));
  *(_BYTE *)(a4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating) = 0;
  v27 = (_QWORD *)(a4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators);
  swift_beginAccess(a4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators, v35, 1, 0);
  *v27 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  v28 = *(void **)(a4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView);
  if (!v28)
    return;
  v29 = a6[3];
  v30 = a6[4];
  sub_100007E68(a6, v29);
  v31 = *(uint64_t (**)(uint64_t, uint64_t))(v30 + 16);
  a6 = v28;
  v6 = v31(v29, v30);
  v32 = (uint64_t *)(a4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
  swift_beginAccess(a4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews, v34, 0, 0);
  a5 = *v32;
  if ((a5 & 0xC000000000000001) != 0)
    goto LABEL_23;
  if ((v6 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_25;
  }
  if (v6 >= *(_QWORD *)((a5 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_25:
    __break(1u);
    return;
  }
  v33 = *(id *)(a5 + 8 * v6 + 32);
LABEL_15:
  sub_100C0340C((uint64_t)a6, (uint64_t)v33);

}

void sub_100C02124(_QWORD *a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7, double a8)
{
  uint64_t v11;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  void *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void *v26;
  uint64_t (**v27)(void *, void *);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  char *v39;
  char *v40;
  id v41;
  uint64_t v42;
  void *v43;
  id v44;
  uint64_t v45;
  void *v46;
  char *v47;
  char *v48;
  id v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  double *v56;
  uint64_t v57;
  uint64_t v58;
  char *v60;
  uint64_t v61;
  char v63[24];
  void **aBlock;
  uint64_t v65;
  void *v66;
  void *v67;
  uint64_t (**v68)(void *, void *);
  uint64_t v69;
  __int128 v70[2];
  char v71[32];

  v11 = a2;
  if (!((unint64_t)a2 >> 62))
  {
    v14 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v15 = v14;
    v61 = v14;
    if (v14)
      goto LABEL_3;
LABEL_27:
    swift_bridgeObjectRelease();
    return;
  }
  if (a2 < 0)
    v54 = a2;
  else
    v54 = a2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v61 = _CocoaArrayWrapper.endIndex.getter(v54);
  if (!v61)
    goto LABEL_27;
  swift_bridgeObjectRetain();
  v15 = _CocoaArrayWrapper.endIndex.getter(v54);
  swift_bridgeObjectRelease();
LABEL_3:
  v58 = v15 - 1;
  if (__OFSUB__(v15, 1))
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v61 < 1)
  {
LABEL_29:
    __break(1u);
    return;
  }
  v16 = &v60[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators];
  v55 = v11 & 0xC000000000000001;
  v56 = (double *)&v60[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
  swift_beginAccess(&v60[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs], v71, 0, 0);
  v17 = 0;
  v57 = v11;
  do
  {
    if (v55)
      v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v17, v11);
    else
      v18 = *(id *)(v11 + 8 * v17 + 32);
    v19 = v18;
    v20 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:timingParameters:", a3, a6);
    sub_100064C78((uint64_t)a1, (uint64_t)v70);
    v21 = swift_allocObject(&unk_101107BE0, 80, 7);
    *(_QWORD *)(v21 + 16) = v19;
    sub_100064C48(v70, v21 + 24);
    *(_QWORD *)(v21 + 64) = v60;
    *(double *)(v21 + 72) = a7;
    v68 = (uint64_t (**)(void *, void *))sub_100C07620;
    v69 = v21;
    aBlock = _NSConcreteStackBlock;
    v65 = 1107296256;
    v66 = sub_1001DBD98;
    v67 = &unk_101107BF8;
    v22 = _Block_copy(&aBlock);
    v23 = v19;
    v24 = v60;
    objc_msgSend(v20, "addAnimations:", v22, swift_release().n128_f64[0]);
    _Block_release(v22);
    v25 = (uint64_t)&v23[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
    swift_beginAccess(&v23[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], v63, 0, 0);
    sub_100064C78(v25, (uint64_t)&aBlock);
    v26 = v67;
    v27 = v68;
    sub_100007E68(&aBlock, (uint64_t)v67);
    v28 = v27[2](v26, v27);
    v30 = a1[3];
    v29 = a1[4];
    sub_100007E68(a1, v30);
    v31 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 16))(v30, v29);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(&aBlock);
    if (v28 == v31)
    {
      v32 = v20;
      sub_100BFF424(a1, v20, (uint64_t *)1, 0);

      v33 = *(void **)&v23[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
      if (v33)
      {
        v34 = _s23InstrumentalContentViewCMa();
        v35 = swift_dynamicCastClass(v33, v34);
        if (v35)
        {
          v36 = v35;
          v37 = swift_allocObject(&unk_101107C80, 40, 7);
          *(_QWORD *)(v37 + 16) = v24;
          *(_QWORD *)(v37 + 24) = v23;
          *(double *)(v37 + 32) = a7;
          v68 = (uint64_t (**)(void *, void *))sub_100C076B4;
          v69 = v37;
          aBlock = _NSConcreteStackBlock;
          v65 = 1107296256;
          v66 = sub_1001DBD98;
          v67 = &unk_101107C98;
          v38 = _Block_copy(&aBlock);
          v39 = v23;
          v40 = v24;
          v41 = v33;
          objc_msgSend(v32, "addAnimations:", v38, swift_release().n128_f64[0]);
          _Block_release(v38);
          v42 = swift_allocObject(&unk_101107CD0, 32, 7);
          *(_QWORD *)(v42 + 16) = v36;
          *(double *)(v42 + 24) = a8;
          v68 = (uint64_t (**)(void *, void *))sub_100C076E4;
          v69 = v42;
          aBlock = _NSConcreteStackBlock;
          v65 = 1107296256;
          v66 = sub_10012F6FC;
          v67 = &unk_101107CE8;
          v43 = _Block_copy(&aBlock);
          v44 = v41;
          objc_msgSend(v32, "addCompletion:", v43, swift_release().n128_f64[0]);
          _Block_release(v43);

        }
      }
    }
    v11 = v57;
    if (v58 == v17)
    {
      sub_100064C78((uint64_t)a1, (uint64_t)v70);
      v45 = swift_allocObject(&unk_101107C30, 104, 7);
      *(_QWORD *)(v45 + 16) = v57;
      *(double *)(v45 + 24) = a7;
      *(_QWORD *)(v45 + 32) = v23;
      *(_QWORD *)(v45 + 40) = v24;
      *(double *)(v45 + 48) = a4;
      *(double *)(v45 + 56) = a5;
      sub_100064C48(v70, v45 + 64);
      v68 = (uint64_t (**)(void *, void *))sub_100C07670;
      v69 = v45;
      aBlock = _NSConcreteStackBlock;
      v65 = 1107296256;
      v66 = sub_10012F6FC;
      v67 = &unk_101107C48;
      v46 = _Block_copy(&aBlock);
      swift_bridgeObjectRetain();
      v47 = v23;
      v48 = v24;
      objc_msgSend(v20, "addCompletion:", v46, swift_release().n128_f64[0]);
      _Block_release(v46);
    }
    swift_beginAccess(v16, &aBlock, 33, 0);
    v49 = v20;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v49);
    v51 = *(_QWORD *)((*(_QWORD *)v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v50 = *(_QWORD *)((*(_QWORD *)v16 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v51 >= v50 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v50 > 1, v51 + 1, 1);
    v52 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v51, v49);
    specialized Array._endMutation()(v52);
    swift_endAccess(&aBlock);
    if (v17 <= 1)
      v53 = 1;
    else
      v53 = v17;
    ++v17;
    objc_msgSend(v49, "startAnimationAfterDelay:", v56[18] * (double)(v53 - 1), v55);

  }
  while (v61 != v17);
  swift_bridgeObjectRelease();
}

id sub_100C0271C(char *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;

  v6 = (uint64_t)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
  swift_beginAccess(&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], &v14, 0, 0);
  sub_100064C78(v6, (uint64_t)v15);
  v7 = v16;
  v8 = v17;
  sub_100007E68(v15, v16);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 16))(v7, v8);
  v10 = a2[3];
  v11 = a2[4];
  sub_100007E68(a2, v10);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 16))(v10, v11);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v15);
  if (v12 < v9)
    swift_beginAccess(a3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs, v15, 0, 0);
  objc_msgSend(a1, "frame");
  return objc_msgSend(a1, "setFrame:");
}

id sub_100C02868(uint64_t a1, char *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id result;
  uint64_t v8;
  _QWORD v9[3];
  uint64_t v10;
  uint64_t v11;

  sub_100BFD9EC(a2);
  v3 = (uint64_t)&a2[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
  swift_beginAccess(&a2[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], &v8, 0, 0);
  sub_100064C78(v3, (uint64_t)v9);
  v4 = v10;
  v5 = v11;
  sub_100007E68(v9, v10);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
  result = (id)_s5Music18DragDropToPlaylistV6OriginVwxx_0(v9);
  if (!v6)
  {
    objc_msgSend(a2, "frame");
    return objc_msgSend(a2, "setFrame:");
  }
  return result;
}

void sub_100C02934(double a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  uint64_t v26;
  _BYTE v27[24];
  _BYTE v28[24];
  _QWORD v29[3];
  uint64_t v30;
  uint64_t v31;

  if ((unint64_t)a5 >> 62)
  {
    if (a5 < 0)
      v16 = a5;
    else
      v16 = a5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v12 = _CocoaArrayWrapper.endIndex.getter(v16);
    if (!v12)
      goto LABEL_13;
  }
  else
  {
    v12 = *(_QWORD *)((a5 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v12)
      goto LABEL_13;
  }
  if (v12 < 1)
    goto LABEL_32;
  v13 = 0;
  do
  {
    if ((a5 & 0xC000000000000001) != 0)
      v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v13, a5);
    else
      v14 = *(id *)(a5 + 8 * v13 + 32);
    v15 = v14;
    ++v13;
    objc_msgSend(v14, "frame");
    objc_msgSend(v15, "setFrame:");

  }
  while (v12 != v13);
LABEL_13:
  swift_bridgeObjectRelease();
  v17 = a6 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
  swift_beginAccess(v17, v28, 0, 0);
  sub_100064C78(v17, (uint64_t)v29);
  v18 = v30;
  v19 = v31;
  sub_100007E68(v29, v30);
  v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 16))(v18, v19);
  v21 = (uint64_t *)(a7 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
  swift_beginAccess(a7 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews, v27, 0, 0);
  v22 = *v21;
  if ((unint64_t)*v21 >> 62)
    goto LABEL_27;
  v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v23 >= v20)
  {
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v29);
    if (v20 == v23)
    {
LABEL_16:
      objc_msgSend(*(id *)(a7 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView), "setContentOffset:", a2, a3);
      *(_BYTE *)(a7 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating) = 0;
      v24 = (_QWORD *)(a7 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators);
      swift_beginAccess(v24, v29, 1, 0);
      *v24 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease();
      return;
    }
    if (v20 >= v23)
      goto LABEL_33;
    while (1)
    {
      v22 = *v21;
      if ((*v21 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        v25 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v20, v22);
        swift_bridgeObjectRelease();
        goto LABEL_22;
      }
      if (v20 < 0)
        break;
      if ((unint64_t)v20 >= *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_26;
      v25 = (char *)*(id *)(v22 + 8 * v20 + 32);
LABEL_22:
      ++v20;
      sub_100BFD9EC(v25);

      if (v23 == v20)
        goto LABEL_16;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    if (v22 < 0)
      v26 = v22;
    else
      v26 = v22 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v23 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
}

void sub_100C02C0C(_QWORD *a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7)
{
  uint64_t v9;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  void *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void *v25;
  uint64_t (**v26)(void *, void *);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  void *v33;
  char *v34;
  id v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  double *v42;
  uint64_t v43;
  uint64_t v44;
  char *v46;
  uint64_t v47;
  char v48[24];
  void **aBlock;
  uint64_t v50;
  void *v51;
  void *v52;
  uint64_t (**v53)(void *, void *);
  uint64_t v54;
  __int128 v55[2];
  char v56[32];

  v9 = a2;
  if (!((unint64_t)a2 >> 62))
  {
    v13 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v14 = v13;
    v47 = v13;
    if (v13)
      goto LABEL_3;
LABEL_25:
    swift_bridgeObjectRelease();
    return;
  }
  if (a2 < 0)
    v40 = a2;
  else
    v40 = a2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v47 = _CocoaArrayWrapper.endIndex.getter(v40);
  if (!v47)
    goto LABEL_25;
  swift_bridgeObjectRetain();
  v14 = _CocoaArrayWrapper.endIndex.getter(v40);
  swift_bridgeObjectRelease();
LABEL_3:
  v44 = v14 - 1;
  if (__OFSUB__(v14, 1))
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v47 < 1)
  {
LABEL_27:
    __break(1u);
    return;
  }
  v15 = &v46[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators];
  v41 = v9 & 0xC000000000000001;
  v42 = (double *)&v46[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
  swift_beginAccess(&v46[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs], v56, 0, 0);
  v16 = 0;
  v43 = v9;
  do
  {
    if (v41)
      v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v16, v9);
    else
      v17 = *(id *)(v9 + 8 * v16 + 32);
    v18 = v17;
    v19 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:timingParameters:", a3, a6);
    sub_100064C78((uint64_t)a1, (uint64_t)v55);
    v20 = swift_allocObject(&unk_101107B40, 80, 7);
    *(_QWORD *)(v20 + 16) = v18;
    sub_100064C48(v55, v20 + 24);
    *(double *)(v20 + 64) = a7;
    *(_QWORD *)(v20 + 72) = v46;
    v53 = (uint64_t (**)(void *, void *))sub_100C07594;
    v54 = v20;
    aBlock = _NSConcreteStackBlock;
    v50 = 1107296256;
    v51 = sub_1001DBD98;
    v52 = &unk_101107B58;
    v21 = _Block_copy(&aBlock);
    v22 = v18;
    v23 = v46;
    objc_msgSend(v19, "addAnimations:", v21, swift_release().n128_f64[0]);
    _Block_release(v21);
    v24 = (uint64_t)&v22[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
    swift_beginAccess(&v22[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], v48, 0, 0);
    sub_100064C78(v24, (uint64_t)&aBlock);
    v25 = v52;
    v26 = v53;
    sub_100007E68(&aBlock, (uint64_t)v52);
    v27 = v26[2](v25, v26);
    v29 = a1[3];
    v28 = a1[4];
    sub_100007E68(a1, v29);
    v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 16))(v29, v28);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(&aBlock);
    if (v27 == v30)
    {
      v31 = v19;
      sub_100BFF424(a1, v19, (uint64_t *)1, 1);

    }
    v9 = v43;
    if (v44 == v16)
    {
      sub_100064C78((uint64_t)a1, (uint64_t)v55);
      v32 = swift_allocObject(&unk_101107B90, 88, 7);
      *(_QWORD *)(v32 + 16) = v43;
      *(_QWORD *)(v32 + 24) = v23;
      *(double *)(v32 + 32) = a4;
      *(double *)(v32 + 40) = a5;
      sub_100064C48(v55, v32 + 48);
      v53 = (uint64_t (**)(void *, void *))sub_100C075DC;
      v54 = v32;
      aBlock = _NSConcreteStackBlock;
      v50 = 1107296256;
      v51 = sub_10012F6FC;
      v52 = &unk_101107BA8;
      v33 = _Block_copy(&aBlock);
      swift_bridgeObjectRetain();
      v34 = v23;
      objc_msgSend(v19, "addCompletion:", v33, swift_release().n128_f64[0]);
      _Block_release(v33);
    }
    swift_beginAccess(v15, &aBlock, 33, 0);
    v35 = v19;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v35);
    v37 = *(_QWORD *)((*(_QWORD *)v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v36 = *(_QWORD *)((*(_QWORD *)v15 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v37 >= v36 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v36 > 1, v37 + 1, 1);
    v38 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v37, v35);
    specialized Array._endMutation()(v38);
    swift_endAccess(&aBlock);
    if (v16 <= 1)
      v39 = 1;
    else
      v39 = v16;
    ++v16;
    objc_msgSend(v35, "startAnimationAfterDelay:", v42[18] * (double)(v39 - 1));

  }
  while (v47 != v16);
  swift_bridgeObjectRelease();
}

id sub_100C030A4(char *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;

  v6 = (uint64_t)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
  swift_beginAccess(&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], &v14, 0, 0);
  sub_100064C78(v6, (uint64_t)v15);
  v7 = v16;
  v8 = v17;
  sub_100007E68(v15, v16);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 16))(v7, v8);
  v10 = a2[3];
  v11 = a2[4];
  sub_100007E68(a2, v10);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 16))(v10, v11);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v15);
  if (v9 < v12)
    swift_beginAccess(a3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs, v15, 0, 0);
  objc_msgSend(a1, "frame");
  return objc_msgSend(a1, "setFrame:");
}

void sub_100C031D8(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  char *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _BYTE v21[24];
  _BYTE v22[24];
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;

  if ((a4 & 0xC000000000000001) != 0)
    goto LABEL_18;
  if (*(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v11 = (char *)*(id *)(a4 + 32);
    goto LABEL_4;
  }
  __break(1u);
  do
  {
    if (v5 < 0)
      v20 = v5;
    else
      v20 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v16 = _CocoaArrayWrapper.endIndex.getter(v20);
    swift_bridgeObjectRelease();
    if (v16 < v6)
      goto LABEL_24;
LABEL_6:
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v23);
    if (v6 == v16)
    {
LABEL_7:
      objc_msgSend(*(id *)(a5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView), "setContentOffset:", a1, a2);
      *(_BYTE *)(a5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating) = 0;
      v17 = (_QWORD *)(a5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators);
      swift_beginAccess(v17, v23, 1, 0);
      *v17 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease();
      return;
    }
    if (v6 >= v16)
      goto LABEL_25;
    while (1)
    {
      v18 = *v7;
      if ((*v7 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        v19 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v18);
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
      if (v6 < 0)
        break;
      if ((unint64_t)v6 >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_17;
      v19 = (char *)*(id *)(v18 + 8 * v6 + 32);
LABEL_13:
      ++v6;
      sub_100BFD9EC(v19);

      if (v16 == v6)
        goto LABEL_7;
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    v11 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a4);
LABEL_4:
    v12 = v11;
    v13 = (uint64_t)&v11[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
    swift_beginAccess(&v11[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], v22, 0, 0);
    sub_100064C78(v13, (uint64_t)v23);

    v14 = v24;
    v15 = v25;
    sub_100007E68(v23, v24);
    v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 16))(v14, v15);
    v7 = (uint64_t *)(a5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
    swift_beginAccess(a5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews, v21, 0, 0);
    v5 = *v7;
  }
  while ((unint64_t)*v7 >> 62);
  v16 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v16 >= v6)
    goto LABEL_6;
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
}

void sub_100C0340C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  id v11;
  void *v12;
  double v13;
  CGFloat v14;
  double *v15;
  double v16;
  CGFloat v17;
  id v18;
  void *v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void (*v26)();
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void (*v30)();
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  void *v41;
  id v42;
  void *v43;
  char v44;
  id v45;
  Class isa;
  uint64_t v47;
  void *v48;
  id v49;
  id v50;
  objc_class *v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  BOOL v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  id v63;
  char v64;
  uint64_t v65;
  id v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  _QWORD aBlock[3];
  void *v81;
  void (*v82)();
  uint64_t v83;
  char v84[24];
  char v85[24];
  _QWORD v86[3];
  uint64_t v87;
  uint64_t v88;
  char v89[24];
  char v90[24];
  char v91[32];

  v3 = v2;
  v6 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
  objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView), "contentOffset");
  v8 = v7;
  v10 = v9;
  v11 = objc_msgSend((id)v3, "view");
  if (!v11)
  {
    __break(1u);
    goto LABEL_73;
  }
  v12 = v11;
  objc_msgSend(v11, "frame");
  v14 = v13;

  v15 = (double *)(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight);
  *(_QWORD *)&v16 = swift_beginAccess(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight, v91, 0, 0).n128_u64[0];
  v17 = *v15;
  if (*v15 > 0.0)
    goto LABEL_5;
  v18 = objc_msgSend((id)v3, "view", v16);
  if (!v18)
  {
LABEL_73:
    __break(1u);
    return;
  }
  v19 = v18;
  objc_msgSend(v18, "frame");
  v17 = v20;

LABEL_5:
  v21 = a2 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
  swift_beginAccess(a2 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line, v90, 0, 0);
  sub_100064C78(v21, (uint64_t)aBlock);
  sub_100BFEE80(aBlock, v8, v10, v14, v17);
  v23 = v22;
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(aBlock);
  v24 = a1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
  swift_beginAccess(v24, v89, 0, 0);
  sub_100064C78(v24, (uint64_t)aBlock);
  v25 = v81;
  v26 = v82;
  sub_100007E68(aBlock, (uint64_t)v81);
  v76 = (*((uint64_t (**)(void *, void (*)()))v26 + 2))(v25, v26);
  sub_100064C78(v21, (uint64_t)v86);
  v27 = v87;
  v28 = v88;
  sub_100007E68(v86, v87);
  v75 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 16))(v27, v28);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v86);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(aBlock);
  sub_100064C78(v24, (uint64_t)aBlock);
  v29 = v81;
  v30 = v82;
  sub_100007E68(aBlock, (uint64_t)v81);
  v31 = (*((uint64_t (**)(void *, void (*)()))v30 + 2))(v29, v30);
  v32 = (uint64_t *)(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
  swift_beginAccess(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews, v86, 0, 0);
  v79 = v32;
  v33 = *v32;
  v70 = v6;
  if ((unint64_t)*v32 >> 62)
    goto LABEL_63;
  v34 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v34 >= v31)
    goto LABEL_7;
LABEL_67:
  __break(1u);
LABEL_68:
  if (v23 < 0)
    v69 = v23;
  else
    v69 = v23 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v37 = _CocoaArrayWrapper.endIndex.getter(v69);
  swift_bridgeObjectRelease();
  while (1)
  {
    v72 = (_QWORD *)(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators);
    v33 = v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs;
    swift_beginAccess(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics, v85, 0, 0);
    v71 = v33;
    swift_beginAccess(v33, v84, 0, 0);
    v74 = 0;
    if (v31 <= v34)
      v38 = v34;
    else
      v38 = v31;
    v77 = v23 & 0xC000000000000001;
    v78 = v38;
    v73 = v3;
    while (1)
    {
      if (v31 == v78)
      {
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
        goto LABEL_60;
      }
      v33 = *v79;
      if ((*v79 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        v39 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v31, v33);
        swift_bridgeObjectRelease();
        if (!v37)
          goto LABEL_18;
      }
      else
      {
        if (v31 < 0)
          goto LABEL_58;
        if ((unint64_t)v31 >= *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_59;
        v39 = *(id *)(v33 + 8 * v31 + 32);
        if (!v37)
          goto LABEL_18;
      }
      v40 = v34;
      if (v77)
      {
        swift_bridgeObjectRetain();
        v42 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v23);
      }
      else
      {
        v41 = *(void **)(v23 + 32);
        swift_bridgeObjectRetain();
        v42 = v41;
      }
      v43 = v42;
      v33 = type metadata accessor for SyncedLyricsLineView();
      v44 = static NSObject.== infix(_:_:)(v43, v39);

      if ((v44 & 1) == 0)
        break;
      swift_bridgeObjectRelease();
LABEL_29:
      v34 = v40;
LABEL_30:
      if (v75 >= v76)
        goto LABEL_18;
      v45 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 100.0, 18.0, 0.0, 0.0);
      sub_10004A07C(0, (unint64_t *)&qword_1011E0650, UIViewPropertyAnimator_ptr);
      isa = UIViewPropertyAnimator.init(springTimingParameters:)((UISpringTimingParameters)v45).super.isa;
      v47 = swift_allocObject(&unk_101107AF0, 32, 7);
      *(_QWORD *)(v47 + 16) = v3;
      *(_QWORD *)(v47 + 24) = v39;
      v82 = sub_100C07524;
      v83 = v47;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1001DBD98;
      v81 = &unk_101107B08;
      v48 = _Block_copy(aBlock);
      v49 = (id)v3;
      v50 = v39;
      -[objc_class addAnimations:](isa, "addAnimations:", v48, swift_release().n128_f64[0]);
      _Block_release(v48);
      swift_beginAccess(v72, aBlock, 33, 0);
      v51 = isa;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v51);
      v53 = *(_QWORD *)((*v72 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v52 = *(_QWORD *)((*v72 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v53 >= v52 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v52 > 1, v53 + 1, 1);
      v54 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v53, v51);
      specialized Array._endMutation()(v54);
      swift_endAccess(aBlock);
      -[objc_class startAnimationAfterDelay:](v51, "startAnimationAfterDelay:", *(double *)(v71 + 144) * (double)v74);

      v55 = __OFADD__(v74, 1);
      v33 = ++v74;
      if (v55)
        goto LABEL_62;
LABEL_19:
      if (++v31 == v34)
        goto LABEL_8;
    }
    v34 = v40;
    if (v37 == 1)
      goto LABEL_17;
    if (v77)
    {
      v56 = specialized _ArrayBuffer._getElementSlowPath(_:)(1, v23);
      v57 = static NSObject.== infix(_:_:)(v56, v39);
      swift_unknownObjectRelease(v56);
      if ((v57 & 1) == 0)
      {
        if (v37 == 2)
        {
LABEL_17:
          swift_bridgeObjectRelease();
LABEL_18:
          v33 = v3;
          sub_100BFD9EC((char *)v39);

          goto LABEL_19;
        }
        v58 = 2;
        while (1)
        {
          v59 = specialized _ArrayBuffer._getElementSlowPath(_:)(v58, v23);
          v60 = v58 + 1;
          if (__OFADD__(v58, 1))
            break;
          v61 = v59;
          v62 = static NSObject.== infix(_:_:)(v59, v39);
          swift_unknownObjectRelease(v61);
          if ((v62 & 1) != 0)
            goto LABEL_53;
          ++v58;
          v3 = v73;
          if (v60 == v37)
          {
            swift_bridgeObjectRelease();
            v34 = v40;
            goto LABEL_18;
          }
        }
LABEL_60:
        __break(1u);
        goto LABEL_61;
      }
LABEL_46:
      swift_bridgeObjectRelease();
      goto LABEL_30;
    }
    v63 = *(id *)(v23 + 40);
    v64 = static NSObject.== infix(_:_:)(v63, v39);

    if ((v64 & 1) != 0)
      goto LABEL_46;
    if (v37 == 2)
      goto LABEL_17;
    v3 = 6;
    while (1)
    {
      v65 = v3 - 3;
      if (__OFADD__(v3 - 4, 1))
        break;
      v66 = *(id *)(v23 + 8 * v3);
      v67 = static NSObject.== infix(_:_:)(v66, v39);

      if ((v67 & 1) != 0)
      {
LABEL_53:
        swift_bridgeObjectRelease();
        v3 = v73;
        goto LABEL_29;
      }
      ++v3;
      if (v65 == v37)
      {
        swift_bridgeObjectRelease();
        v3 = v73;
        v34 = v40;
        goto LABEL_18;
      }
    }
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    if (v33 < 0)
      v68 = v33;
    else
      v68 = v33 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v34 = _CocoaArrayWrapper.endIndex.getter(v68);
    swift_bridgeObjectRelease();
    if (v34 < v31)
      goto LABEL_67;
LABEL_7:
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(aBlock);
    if (v31 == v34)
      break;
    if ((unint64_t)v23 >> 62)
      goto LABEL_68;
    v37 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
LABEL_8:
  swift_bridgeObjectRelease();
  if (v75 >= v76)
  {
    v35 = *(void **)(v3 + v70);
    swift_beginAccess(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs, aBlock, 0, 0);
    v36 = v35;
    objc_msgSend(v36, "contentOffset");
    objc_msgSend(v36, "setContentOffset:");

  }
}

uint64_t sub_100C03BC8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t i;
  id v6;
  void *v7;
  uint64_t v8;
  _BYTE v9[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators, v9, 0, 0);
  v2 = *v1;
  if (!((unint64_t)v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v3)
      goto LABEL_3;
    return swift_bridgeObjectRelease(v2);
  }
  if (v2 < 0)
    v8 = v2;
  else
    v8 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  result = _CocoaArrayWrapper.endIndex.getter(v8);
  v3 = result;
  if (!result)
    return swift_bridgeObjectRelease(v2);
LABEL_3:
  if (v3 >= 1)
  {
    for (i = 0; i != v3; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0)
        v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v2);
      else
        v6 = *(id *)(v2 + 8 * i + 32);
      v7 = v6;
      if (objc_msgSend(v6, "state") == (id)1)
      {
        objc_msgSend(v7, "stopAnimation:", 0);
        objc_msgSend(v7, "finishAnimationAtPosition:", 0);
      }

    }
    return swift_bridgeObjectRelease(v2);
  }
  __break(1u);
  return result;
}

id SyncedLyricsViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  _BYTE *v3;
  uint64_t v6;
  double v7;
  char *v8;
  _BYTE *v9;
  char *v10;
  char *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  NSString v16;
  id v17;
  objc_super v19;
  _BYTE __src[544];

  v3[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isPlayingSpatial] = 0;
  v3[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isFullScreen] = 0;
  v6 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_bottomTapAreaHeight;
  v7 = Int.seconds.getter(0);
  *(double *)&v3[v6] = v7;
  *(double *)&v3[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight] = v7;
  v8 = &v3[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
  v9 = v3;
  sub_100BF5860(0, 0, __src);
  memcpy(v8, __src, 0x219uLL);
  v10 = &v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate];
  *((_QWORD *)v10 + 1) = 0;
  swift_unknownObjectWeakInit(v10);
  v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics] = 0;
  v11 = &v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider];
  *(_OWORD *)v11 = 0u;
  *((_OWORD *)v11 + 1) = 0u;
  *((_QWORD *)v11 + 4) = 0;
  v12 = &v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_shareHandler];
  *v12 = 0;
  v12[1] = 0;
  v13 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
  *(_QWORD *)&v9[v13] = objc_msgSend(objc_allocWithZone((Class)UIScrollView), "init");
  *(_QWORD *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews] = &_swiftEmptySetSingleton;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView] = 0;
  v14 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_tapFeedbackGenerator;
  *(_QWORD *)&v9[v14] = objc_msgSend(objc_allocWithZone((Class)UISelectionFeedbackGenerator), "init");
  *(_QWORD *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators] = _swiftEmptyArrayStorage;
  v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating] = 0;
  v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_needsTapHandling] = 0;
  v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isBackgrounded] = 0;
  v15 = &v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_previousBounds];
  *v15 = 0u;
  v15[1] = 0u;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScrollTimer] = 0;
  v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScroll] = 1;

  if (a2)
  {
    v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = 0;
  }
  v19.receiver = v9;
  v19.super_class = (Class)type metadata accessor for SyncedLyricsViewController();
  v17 = objc_msgSendSuper2(&v19, "initWithNibName:bundle:", v16, a3);

  return v17;
}

id SyncedLyricsViewController.init(coder:)(void *a1)
{
  _BYTE *v1;
  uint64_t v3;
  double v4;
  char *v5;
  _BYTE *v6;
  char *v7;
  char *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  id v13;
  objc_super v15;
  _BYTE __src[544];

  v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isPlayingSpatial] = 0;
  v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isFullScreen] = 0;
  v3 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_bottomTapAreaHeight;
  v4 = Int.seconds.getter(0);
  *(double *)&v1[v3] = v4;
  *(double *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight] = v4;
  v5 = &v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
  v6 = v1;
  sub_100BF5860(0, 0, __src);
  memcpy(v5, __src, 0x219uLL);
  v7 = &v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate];
  *((_QWORD *)v7 + 1) = 0;
  swift_unknownObjectWeakInit(v7);
  v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics] = 0;
  v8 = &v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider];
  *(_OWORD *)v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  *((_QWORD *)v8 + 4) = 0;
  v9 = &v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_shareHandler];
  *v9 = 0;
  v9[1] = 0;
  v10 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
  *(_QWORD *)&v6[v10] = objc_msgSend(objc_allocWithZone((Class)UIScrollView), "init");
  *(_QWORD *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews] = &_swiftEmptySetSingleton;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView] = 0;
  v11 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_tapFeedbackGenerator;
  *(_QWORD *)&v6[v11] = objc_msgSend(objc_allocWithZone((Class)UISelectionFeedbackGenerator), "init");
  *(_QWORD *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators] = _swiftEmptyArrayStorage;
  v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating] = 0;
  v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_needsTapHandling] = 0;
  v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isBackgrounded] = 0;
  v12 = &v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_previousBounds];
  *v12 = 0u;
  v12[1] = 0u;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScrollTimer] = 0;
  v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScroll] = 1;

  v15.receiver = v6;
  v15.super_class = (Class)type metadata accessor for SyncedLyricsViewController();
  v13 = objc_msgSendSuper2(&v15, "initWithCoder:", a1);

  return v13;
}

id SyncedLyricsViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SyncedLyricsViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void SyncedLyricsViewController.syncedLyrics(_:animateTo:elapsedTime:gap:)(double a1, uint64_t a2, _QWORD *a3, uint64_t a4, char a5)
{
  sub_100C04DD0(a3, a4, a5 & 1, a1);
}

void SyncedLyricsViewController.syncedLyrics(_:jumpTo:select:elapsedTime:)(double a1, uint64_t a2, _QWORD *a3, int a4)
{
  sub_100C053E4(a3, a4, a1);
}

void SyncedLyricsViewController.syncedLyrics(_:update:elapsedTime:)(double a1, uint64_t a2, _QWORD *a3)
{
  sub_100C05F24(a3, a1);
}

void SyncedLyricsViewController.syncedLyrics(_:select:)(uint64_t a1, _QWORD *a2)
{
  sub_100C0631C(a2);
}

void sub_100C04384()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char *v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  double v18;
  double v19;
  double v20;
  double v21;
  char *v22;
  __int128 v23;
  __int128 v24;
  char v25;

  v0 = (uint64_t)sub_100BFECC0();
  v1 = v0;
  if ((unint64_t)v0 >> 62)
  {
    if (v0 >= 0)
      v0 &= 0xFFFFFFFFFFFFFF8uLL;
    v2 = _CocoaArrayWrapper.endIndex.getter(v0);
    if (!v2)
      goto LABEL_8;
  }
  else
  {
    v2 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v2)
    {
LABEL_8:
      swift_bridgeObjectRelease();
      return;
    }
  }
  if (v2 >= 1)
  {
    v23 = 0u;
    v24 = 0u;
    v25 = 1;
    if ((v1 & 0xC000000000000001) != 0)
      v3 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v1);
    else
      v3 = (char *)*(id *)(v1 + 32);
    v4 = v3;
    sub_100BFD370(v3, 2u, (uint64_t)&v23);
    v6 = v5;
    v8 = v7;
    v10 = v9;
    v12 = v11;
    v13 = v4;
    UIView.untransformedFrame.setter(v6, v8, v10, v12);

    v14 = v2 - 1;
    if (v2 != 1)
    {
      v15 = 0;
      do
      {
        *(CGFloat *)&v23 = v6;
        *((CGFloat *)&v23 + 1) = v8;
        *(CGFloat *)&v24 = v10;
        *((CGFloat *)&v24 + 1) = v12;
        v25 = 0;
        if ((v1 & 0xC000000000000001) != 0)
          v16 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v15 + 1, v1);
        else
          v16 = (char *)*(id *)(v1 + 8 * v15 + 40);
        v17 = v16;
        sub_100BFD370(v16, 2u, (uint64_t)&v23);
        v6 = v18;
        v8 = v19;
        v10 = v20;
        v12 = v21;
        v22 = v17;
        UIView.untransformedFrame.setter(v6, v8, v10, v12);

        ++v15;
      }
      while (v14 != v15);
    }
    goto LABEL_8;
  }
  __break(1u);
}

void sub_100C04524(uint64_t a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[24];

  v3 = (uint64_t *)(a2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators);
  swift_beginAccess(a2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators, v7, 0, 0);
  v4 = *v3;
  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0)
      v6 = v4;
    else
      v6 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v5 = _CocoaArrayWrapper.endIndex.getter(v6);
    swift_bridgeObjectRelease(v4);
  }
  else
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *(_BYTE *)(a2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating) = v5 > 0;
}

void SyncedLyricsViewController.syncedLyrics(_:finish:)(uint64_t a1, uint64_t a2)
{
  sub_100C06050(a2);
}

Swift::Bool __swiftcall SyncedLyricsViewController.gestureRecognizer(_:shouldReceive:)(UIGestureRecognizer _, UITouch shouldReceive)
{
  return sub_100C06A30(shouldReceive.super.isa);
}

Swift::Void __swiftcall SyncedLyricsViewController.scrollViewWillBeginDragging(_:)(UIScrollView a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  sub_100C009E8();
  sub_100C03BC8();
  *(_BYTE *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScroll) = 0;
  v2 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScrollTimer;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScrollTimer), "invalidate");
  v3 = *(void **)(v1 + v2);
  *(_QWORD *)(v1 + v2) = 0;

}

void sub_100C04704(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BYTE *Strong;
  _BYTE v4[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v4, 0, 0);
  Strong = (_BYTE *)swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    Strong[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScroll] = 1;

  }
}

void sub_100C04810()
{
  sub_100BFF7DC(0);
}

uint64_t sub_100C04834(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

uint64_t sub_100C0485C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1011E04AC);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10005AEE4;
  return sub_100BF9B44(a1, v4, v5, v7, v6);
}

uint64_t sub_100C048D8()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100C0490C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1011E04BC);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10006AEE4;
  return sub_100BFA914(a1, v4, v5, v7, v6);
}

unint64_t sub_100C04984()
{
  unint64_t result;

  result = qword_1011E04D8;
  if (!qword_1011E04D8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_1011E04D8);
  }
  return result;
}

uint64_t sub_100C049C8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100C049F4()
{
  uint64_t v0;

  sub_100BFC2AC(*(char **)(v0 + 24));
}

_QWORD *sub_100C04A18(unint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *result;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  char v10;
  char v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;

  v2 = a1;
  if (a1 >> 62)
    goto LABEL_15;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (!v3)
      return _swiftEmptyArrayStorage;
    result = sub_100BCD3D0(0, v3 & ~(v3 >> 63), 0);
    if (v3 < 0)
      break;
    v5 = 0;
    v16 = v2 & 0xC000000000000001;
    v6 = v2;
    while (v3 != v5)
    {
      if (v16)
        v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v2);
      else
        v7 = *(id *)(v2 + 8 * v5 + 32);
      v8 = v7;
      v9 = a2();
      v11 = v10;

      v13 = _swiftEmptyArrayStorage[2];
      v12 = _swiftEmptyArrayStorage[3];
      if (v13 >= v12 >> 1)
        sub_100BCD3D0((_QWORD *)(v12 > 1), v13 + 1, 1);
      ++v5;
      _swiftEmptyArrayStorage[2] = v13 + 1;
      v14 = &_swiftEmptyArrayStorage[2 * v13];
      v14[4] = v9;
      *((_BYTE *)v14 + 40) = v11 & 1;
      v2 = v6;
      if (v3 == v5)
        return _swiftEmptyArrayStorage;
    }
    __break(1u);
LABEL_15:
    if (v2 < 0)
      v15 = v2;
    else
      v15 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v3 = _CocoaArrayWrapper.endIndex.getter(v15);
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_100C04B90(uint64_t a1, char *a2)
{
  uint64_t v4;
  CGFloat *v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  uint64_t result;
  void *v23;
  double v24;
  CGFloat v25;
  CGFloat v26;
  void *v27;
  double v28;
  _BOOL4 v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[24];
  unint64_t v33;
  CGRect v34;
  CGRect v35;

  if (!((unint64_t)a1 >> 62))
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease(a1);
    return 0;
  }
LABEL_17:
  if (a1 < 0)
    v30 = a1;
  else
    v30 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v4 = _CocoaArrayWrapper.endIndex.getter(v30);
  if (!v4)
    goto LABEL_14;
LABEL_3:
  v33 = a1 & 0xC000000000000001;
  v31 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
  v5 = (CGFloat *)&a2[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight];
  swift_beginAccess(&a2[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight], v32, 0, 0);
  v6 = 4;
  while (1)
  {
    if (v33)
      v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6 - 4, a1);
    else
      v7 = *(id *)(a1 + 8 * v6);
    v8 = v7;
    v9 = v6 - 3;
    if (__OFADD__(v6 - 4, 1))
    {
      __break(1u);
      goto LABEL_17;
    }
    objc_msgSend(v7, "frame");
    v11 = v10;
    v13 = v12;
    v15 = v14;
    v17 = v16;
    objc_msgSend(*(id *)&a2[v31], "contentOffset");
    v19 = v18;
    v21 = v20;
    result = (uint64_t)objc_msgSend(a2, "view");
    if (!result)
      break;
    v23 = (void *)result;
    objc_msgSend((id)result, "frame");
    v25 = v24;

    v26 = *v5;
    if (*v5 <= 0.0)
    {
      result = (uint64_t)objc_msgSend(a2, "view");
      if (!result)
        goto LABEL_23;
      v27 = (void *)result;
      objc_msgSend((id)result, "frame");
      v26 = v28;

    }
    v34.origin.x = v11;
    v34.origin.y = v13;
    v34.size.width = v15;
    v34.size.height = v17;
    v35.origin.x = v19;
    v35.origin.y = v21;
    v35.size.width = v25;
    v35.size.height = v26;
    v29 = CGRectIntersectsRect(v34, v35);

    if (v29)
    {
      swift_bridgeObjectRelease(a1);
      return 1;
    }
    ++v6;
    if (v9 == v4)
      goto LABEL_14;
  }
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

void sub_100C04DD0(_QWORD *a1, uint64_t a2, uint64_t a3, double a4)
{
  char *v4;
  char v5;
  char *v6;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  uint64_t v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  uint64_t v24;
  double v25;
  CGFloat v26;
  double v27;
  CGFloat v28;
  id v29;
  void *v30;
  double v31;
  CGFloat v32;
  CGFloat *v33;
  double v34;
  CGFloat v35;
  id v36;
  void *v37;
  double v38;
  int v39;
  char *v40;
  uint64_t v41;
  int v42;
  char *v43;
  double v44;
  void *v45;
  uint64_t (*v46)();
  unint64_t v47;
  id v48;
  id v49;
  double v50;
  double v51;
  CGFloat v52;
  double v53;
  CGFloat v54;
  double v55;
  CGFloat v56;
  double v57;
  double v58;
  uint64_t v59;
  char *v60;
  objc_class *v61;
  UISpringTimingParameters v62;
  Class isa;
  uint64_t v64;
  void *v65;
  char *v66;
  BOOL v67;
  uint64_t v68;
  void *v69;
  char *v70;
  double v71;
  void **aBlock;
  uint64_t v73;
  void *v74;
  void *v75;
  uint64_t (*v76)();
  uint64_t v77;
  _BYTE v78[24];
  char v79[32];
  char v80[24];
  char v81[24];
  char v82[32];
  CGRect v83;
  CGRect v84;

  v6 = v4;
  v10 = a1;
  v11 = a1[3];
  v12 = a1[4];
  sub_100007E68(a1, v11);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12);
  v14 = &v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
  swift_beginAccess(&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews], v82, 0, 0);
  v15 = *(_QWORD *)v14;
  v71 = a4;
  if ((*(_QWORD *)v14 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v13 = specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v15);
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  if ((v13 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v13 >= *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v13 = (unint64_t)*(id *)(v15 + 8 * v13 + 32);
LABEL_6:
  objc_msgSend((id)v13, "frame", *(_QWORD *)&a4);
  v17 = v16;
  v19 = v18;
  v21 = v20;
  v23 = v22;
  v24 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
  objc_msgSend(*(id *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView], "contentOffset");
  v26 = v25;
  v28 = v27;
  v29 = objc_msgSend(v6, "view");
  if (!v29)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v30 = v29;
  objc_msgSend(v29, "frame");
  v32 = v31;

  v33 = (CGFloat *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight];
  *(_QWORD *)&v34 = swift_beginAccess(&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight], v81, 0, 0).n128_u64[0];
  v35 = *v33;
  if (*v33 <= 0.0)
  {
    v36 = objc_msgSend(v6, "view", v34);
    if (!v36)
    {
LABEL_32:
      __break(1u);
      return;
    }
    v37 = v36;
    objc_msgSend(v36, "frame");
    v35 = v38;

  }
  v5 = a3 & 1;
  v83.origin.x = v17;
  v83.origin.y = v19;
  v83.size.width = v21;
  v83.size.height = v23;
  v84.origin.x = v26;
  v84.origin.y = v28;
  v84.size.width = v32;
  v84.size.height = v35;
  if (CGRectIntersectsRect(v83, v84))
  {
    v39 = 0;
  }
  else
  {
    swift_beginAccess(&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews], v80, 0, 0);
    v40 = v6;
    v41 = swift_bridgeObjectRetain();
    v42 = sub_100C04B90(v41, v40);

    swift_bridgeObjectRelease();
    v39 = v42 ^ 1;
  }
  v43 = &v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode];
  *(_QWORD *)&v44 = swift_beginAccess(&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode], v79, 0, 0).n128_u64[0];
  if (*v43 != 2
    && ((objc_msgSend(*(id *)&v6[v24], "isDragging", v44) | v39) & 1) == 0
    && v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScroll] == 1)
  {
    a3 = v13 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
    swift_beginAccess(v13 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line, v78, 0, 0);
    sub_100064C78(a3, (uint64_t)&aBlock);
    v45 = v75;
    v46 = v76;
    sub_100007E68(&aBlock, (uint64_t)v75);
    v47 = (*((uint64_t (**)(void *, uint64_t (*)()))v46 + 2))(v45, v46);
    v10 = (_QWORD *)v47;
    v15 = *(_QWORD *)v14;
    if ((*(_QWORD *)v14 & 0xC000000000000001) == 0)
    {
      if ((v47 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v47 < *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v48 = *(id *)(v15 + 8 * v47 + 32);
LABEL_20:
        v49 = v48;
        v50 = UIView.untransformedFrame.getter();
        v52 = v51;
        v54 = v53;
        v56 = v55;

        sub_100BFF2C8(v50, v52, v54, v56);
        v58 = v57;

        _s5Music18DragDropToPlaylistV6OriginVwxx_0(&aBlock);
        sub_100064C78(a3, (uint64_t)&aBlock);
        v59 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_needsTapHandling;
        sub_100C00E68((uint64_t)&aBlock, v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_needsTapHandling], a2, v5, 0, 0.0, v58, v71);

        _s5Music18DragDropToPlaylistV6OriginVwxx_0(&aBlock);
        v6[v59] = 0;
        return;
      }
      __break(1u);
      goto LABEL_31;
    }
LABEL_28:
    swift_bridgeObjectRetain();
    v48 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v15);
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  v60 = &v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics];
  swift_beginAccess(&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics], v78, 0, 0);
  if (*(_QWORD *)v60 && *(_BYTE *)(*(_QWORD *)v60 + 56) == 2)
    v61 = (objc_class *)sub_100BF66DC(a2, v5);
  else
    v61 = (objc_class *)objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 100.0, 18.0, 0.0, 0.0);
  v62.super.isa = v61;
  sub_10004A07C(0, (unint64_t *)&qword_1011E0650, UIViewPropertyAnimator_ptr);
  isa = UIViewPropertyAnimator.init(springTimingParameters:)(v62).super.isa;
  sub_100BFF424(v10, isa, (uint64_t *)1, 1);
  v64 = swift_allocObject(&unk_101107FF0, 24, 7);
  *(_QWORD *)(v64 + 16) = v6;
  v76 = sub_100C07CCC;
  v77 = v64;
  aBlock = _NSConcreteStackBlock;
  v73 = 1107296256;
  v74 = sub_1001DBD98;
  v75 = &unk_101108008;
  v65 = _Block_copy(&aBlock);
  v66 = v6;
  -[objc_class addAnimations:](isa, "addAnimations:", v65, swift_release().n128_f64[0]);
  _Block_release(v65);
  v67 = -[objc_class state](isa, "state") == (id)3;
  v66[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating] = v67;
  v68 = swift_allocObject(&unk_101108040, 24, 7);
  *(_QWORD *)(v68 + 16) = v66;
  v76 = sub_100C07C24;
  v77 = v68;
  aBlock = _NSConcreteStackBlock;
  v73 = 1107296256;
  v74 = sub_10012F6FC;
  v75 = &unk_101108058;
  v69 = _Block_copy(&aBlock);
  v70 = v66;
  -[objc_class addCompletion:](isa, "addCompletion:", v69, swift_release().n128_f64[0]);
  _Block_release(v69);
  -[objc_class startAnimation](isa, "startAnimation");

}

void sub_100C053E4(_QWORD *a1, int a2, double a3)
{
  char *v3;
  char *v4;
  char v5;
  double v6;
  char *v7;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  void *v16;
  id (*v17)();
  unint64_t v18;
  id v19;
  id v20;
  double v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  double v28;
  uint64_t *v29;
  uint64_t v30;
  double v31;
  double *v32;
  id v33;
  void *v34;
  char *v35;
  id v36;
  id v37;
  double v38;
  CGFloat v39;
  double v40;
  CGFloat v41;
  id v42;
  void *v43;
  double v44;
  CGFloat v45;
  CGFloat *v46;
  double v47;
  CGFloat v48;
  id v49;
  void *v50;
  double v51;
  CGFloat v52;
  CGFloat v53;
  CGFloat v54;
  CGFloat v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char *v60;
  void *v61;
  id v62;
  uint64_t v63;
  void *v64;
  id v65;
  double v66;
  double v67;
  void *v68;
  id (*v69)();
  uint64_t v70;
  double v71;
  CGFloat v72;
  double v73;
  CGFloat v74;
  id v75;
  void *v76;
  double v77;
  CGFloat v78;
  CGFloat v79;
  id v80;
  void *v81;
  double v82;
  int64_t v83;
  int64_t v84;
  char *v85;
  uint64_t v86;
  unsigned int v87;
  CGFloat *v88;
  uint64_t v89;
  _QWORD aBlock[3];
  void *v91;
  id (*v92)();
  double *v93;
  char v94[24];
  char v95[24];
  char v96[24];
  char v97[24];
  char v98[24];
  _BYTE v99[64];
  CGRect v100;
  CGRect v101;

  v7 = v3;
  LODWORD(v9) = a2;
  v10 = a1;
  v11 = a1[3];
  v12 = a1[4];
  sub_100007E68(a1, v11);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12);
  v14 = (uint64_t *)&v3[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
  swift_beginAccess(&v3[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews], v98, 0, 0);
  v15 = *v14;
  if ((*v14 & 0xC000000000000001) != 0)
    goto LABEL_56;
  if ((v13 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v13 < *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v13 = (unint64_t)*(id *)(v15 + 8 * v13 + 32);
    goto LABEL_5;
  }
  __break(1u);
LABEL_59:
  swift_bridgeObjectRetain();
  v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v15);
  swift_bridgeObjectRelease();
LABEL_9:
  v20 = v19;
  v21 = UIView.untransformedFrame.getter();
  v23 = v22;
  v25 = v24;
  v27 = v26;

  sub_100BFF2C8(v21, v23, v25, v27);
  v6 = v28;

  _s5Music18DragDropToPlaylistV6OriginVwxx_0(aBlock);
  v29 = (uint64_t *)&v7[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews];
  swift_beginAccess(&v7[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews], v96, 0, 0);
  v30 = *v29;
  swift_bridgeObjectRetain();
  v5 = sub_100BF7358(v13, v30);
  swift_bridgeObjectRelease();
  v4 = &v7[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode];
  *(_QWORD *)&v31 = swift_beginAccess(&v7[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode], v95, 0, 0).n128_u64[0];
  if (*v4 == 2 && (v5 & 1) == 0)
  {
    sub_100C03BC8();
    v32 = (double *)swift_allocObject(&unk_101107FA0, 48, 7);
    *((_QWORD *)v32 + 2) = v7;
    v32[3] = 0.0;
    v32[4] = v6;
    *((_QWORD *)v32 + 5) = v13;
    v33 = objc_allocWithZone((Class)UIViewPropertyAnimator);
    v92 = sub_100C07B34;
    v93 = v32;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001DBD98;
    v91 = &unk_101107FB8;
    v34 = _Block_copy(aBlock);
    v35 = v7;
    v36 = (id)v13;
    swift_release();
    v13 = (unint64_t)objc_msgSend(v33, "initWithDuration:curve:animations:", 3, v34, 0.25);
    _Block_release(v34);
    if ((v9 & 1) != 0)
    {
      sub_100064C78(v12, (uint64_t)aBlock);
      v37 = (id)v13;
      sub_100BFF424(aBlock, (void *)v13, (uint64_t *)1, 1);

      _s5Music18DragDropToPlaylistV6OriginVwxx_0(aBlock);
    }
    objc_msgSend((id)v13, "startAnimation");

    goto LABEL_45;
  }
  v89 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
  objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView], "contentOffset", v31);
  v39 = v38;
  v41 = v40;
  v42 = objc_msgSend(v7, "view");
  if (!v42)
    goto LABEL_71;
  v43 = v42;
  objc_msgSend(v42, "frame");
  v45 = v44;

  v46 = (CGFloat *)&v7[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight];
  *(_QWORD *)&v47 = swift_beginAccess(&v7[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight], v94, 0, 0).n128_u64[0];
  v88 = v46;
  v48 = *v46;
  if (*v46 <= 0.0)
  {
    v49 = objc_msgSend(v7, "view", v47);
    if (!v49)
    {
LABEL_72:
      __break(1u);
LABEL_73:
      __break(1u);
      goto LABEL_74;
    }
    v50 = v49;
    objc_msgSend(v49, "frame");
    v48 = v51;

  }
  objc_msgSend((id)v13, "frame");
  v101.origin.x = v52;
  v101.origin.y = v53;
  v101.size.width = v54;
  v101.size.height = v55;
  v100.origin.x = v39;
  v100.origin.y = v41;
  v100.size.width = v45;
  v100.size.height = v48;
  if (CGRectIntersectsRect(v100, v101))
  {
    sub_100064C78((uint64_t)v10, (uint64_t)aBlock);
    v56 = sub_100007E8C(&qword_1011DF470);
    if ((swift_dynamicCast(v99, aBlock, v56, &type metadata for Lyrics.InstrumentalLine, 6) & 1) == 0
      && (v9 & 1) != 0)
    {
      sub_100C03BC8();
      sub_100C04DD0(v10, 0, 1, a3);
LABEL_45:

      return;
    }
  }
  sub_100064C78((uint64_t)v10, (uint64_t)aBlock);
  v57 = sub_100007E8C(&qword_1011DF470);
  if (swift_dynamicCast(v99, aBlock, v57, &type metadata for Lyrics.InstrumentalLine, 6))
  {
    v87 = v9;
    v58 = v10[3];
    v9 = v10[4];
    sub_100007E68(v10, v58);
    v59 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 16))(v58, v9);
    v10 = (_QWORD *)v59;
    v15 = *v14;
    if ((*v14 & 0xC000000000000001) != 0)
      goto LABEL_62;
    if ((v59 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      v9 = v87;
      if (v59 < *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v60 = (char *)*(id *)(v15 + 8 * v59 + 32);
        goto LABEL_27;
      }
    }
    __break(1u);
LABEL_65:
    if (v15 < 0)
      v86 = v15;
    else
      v86 = v15 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v10 = (_QWORD *)_CocoaArrayWrapper.endIndex.getter(v86);
    swift_bridgeObjectRelease();
    if ((uint64_t)v10 >= v9)
      goto LABEL_38;
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
LABEL_33:
  if (!(v5 & 1 | ((v9 & 1) == 0)))
  {
    sub_100064C78(v12, (uint64_t)aBlock);
    sub_100BFF424(aBlock, 0, (uint64_t *)1, 0);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(aBlock);
  }
LABEL_35:
  v13 = (unint64_t)(id)v13;
  UIView.untransformedFrame.getter();
  a3 = v66;

  memset(v99, 0, 32);
  v99[32] = 1;
  sub_100BFD370((char *)v13, 2u, (uint64_t)v99);
  if (v67 != a3)
  {
    sub_100064C78(v12, (uint64_t)aBlock);
    v68 = v91;
    v69 = v92;
    sub_100007E68(aBlock, (uint64_t)v91);
    v70 = (*((uint64_t (**)(void *, id (*)()))v69 + 2))(v68, v69);
    v9 = v70;
    v15 = *v14;
    if ((unint64_t)*v14 >> 62)
      goto LABEL_65;
    v10 = *(_QWORD **)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
    if ((uint64_t)v10 < v70)
      goto LABEL_69;
LABEL_38:
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(aBlock);
    if ((_QWORD *)v9 != v10)
    {
      if (v9 >= (uint64_t)v10)
        goto LABEL_70;
      do
      {
        v15 = *v14;
        if ((*v14 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          v85 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v15);
          swift_bridgeObjectRelease();
        }
        else
        {
          if (v9 < 0)
          {
            __break(1u);
LABEL_55:
            __break(1u);
LABEL_56:
            swift_bridgeObjectRetain();
            v13 = specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v15);
            swift_bridgeObjectRelease();
LABEL_5:
            v12 = v13 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
            swift_beginAccess(v13 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line, v97, 0, 0);
            sub_100064C78(v12, (uint64_t)aBlock);
            v16 = v91;
            v17 = v92;
            sub_100007E68(aBlock, (uint64_t)v91);
            v18 = (*((uint64_t (**)(void *, id (*)()))v17 + 2))(v16, v17);
            v4 = (char *)v18;
            v15 = *v14;
            if ((*v14 & 0xC000000000000001) != 0)
              goto LABEL_59;
            if ((v18 & 0x8000000000000000) != 0)
            {
              __break(1u);
            }
            else if (v18 < *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              v19 = *(id *)(v15 + 8 * v18 + 32);
              goto LABEL_9;
            }
            __break(1u);
LABEL_62:
            swift_bridgeObjectRetain();
            v60 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v15);
            swift_bridgeObjectRelease();
            LOBYTE(v9) = v87;
LABEL_27:
            v61 = *(void **)&v60[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
            v62 = v61;

            if (v61)
            {
              v63 = _s23InstrumentalContentViewCMa();
              if (swift_dynamicCastClass(v62, v63))
              {
                v64 = *(void **)&v7[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView];
                *(_QWORD *)&v7[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView] = v13;
                v65 = (id)v13;

                if ((v5 & 1) != 0)
                {
                  sub_100BECB48(a3);

                  goto LABEL_35;
                }
                sub_100BEC490(a3);
                LOBYTE(v9) = v87;
              }

            }
            goto LABEL_33;
          }
          if ((unint64_t)v9 >= *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_55;
          v85 = (char *)*(id *)(v15 + 8 * v9 + 32);
        }
        ++v9;
        sub_100BFD9EC(v85);

      }
      while (v10 != (_QWORD *)v9);
    }
  }
  sub_100C03BC8();
  objc_msgSend(*(id *)&v7[v89], "setContentOffset:", 0.0, v6);
  if (*v4)
    goto LABEL_45;
  objc_msgSend(*(id *)&v7[v89], "contentOffset");
  v72 = v71;
  v74 = v73;
  v75 = objc_msgSend(v7, "view");
  if (!v75)
    goto LABEL_73;
  v76 = v75;
  objc_msgSend(v75, "frame");
  v78 = v77;

  v79 = *v88;
  if (*v88 > 0.0)
  {
LABEL_44:
    sub_100064C78(v12, (uint64_t)aBlock);
    sub_100BFEE80(aBlock, v72, v74, v78, v79);
    v84 = v83;
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(aBlock);
    sub_100BFF7DC(v84);
    swift_bridgeObjectRelease();
    goto LABEL_45;
  }
  v80 = objc_msgSend(v7, "view");
  if (v80)
  {
    v81 = v80;
    objc_msgSend(v80, "frame");
    v79 = v82;

    goto LABEL_44;
  }
LABEL_74:
  __break(1u);
}

void _s11MusicCoreUI26SyncedLyricsViewControllerC06syncedE14DesectAllLinesyyAA0dE7ManagerCF_0()
{
  char *v0;
  char *v1;
  char *v2;
  double v3;
  id v4;
  UIViewPropertyAnimator v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  objc_class *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  char *v18;
  _BYTE v19[24];
  Swift::Int v20;
  char v21[24];
  char v22[24];
  char v23[24];

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode];
  *(_QWORD *)&v3 = swift_beginAccess(v2, v23, 0, 0).n128_u64[0];
  if (!*v2
    && (objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView], "isDragging", v3) & 1) == 0)
  {
    swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics], v22, 0, 0);
    v4 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 100.0, 18.0, 0.0, 0.0);
    sub_10004A07C(0, (unint64_t *)&qword_1011E0650, UIViewPropertyAnimator_ptr);
    v5.super.isa = UIViewPropertyAnimator.init(springTimingParameters:)((UISpringTimingParameters)v4).super.isa;
    v6 = &v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews];
    swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews], v21, 1, 0);
    v18 = v6;
    v7 = *(_QWORD *)v6;
    if (*(_QWORD *)v6 >> 62)
    {
      if (v7 < 0)
        v17 = *(_QWORD *)v6;
      else
        v17 = v7 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v8 = _CocoaArrayWrapper.endIndex.getter(v17);
      if (v8)
        goto LABEL_5;
    }
    else
    {
      v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v8)
      {
LABEL_5:
        if (v8 < 1)
        {
          __break(1u);
          return;
        }
        v9 = 0;
        v10 = &v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews];
        do
        {
          if ((v7 & 0xC000000000000001) != 0)
            v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v7);
          else
            v11 = *(id *)(v7 + 8 * v9 + 32);
          v12 = v11;
          v13 = v5.super.isa;
          sub_100BF029C(0, v5.super.isa);

          v14 = objc_msgSend(v1, "traitCollection");
          v15 = objc_msgSend(v14, "accessibilityContrast");

          if (v15 != (id)1)
          {
            sub_100BF06D4(1, 3.0);
            swift_beginAccess(v10, v19, 33, 0);
            v16 = v12;
            sub_100C6E2C0(&v20, v16);
            v12 = (void *)v20;
            swift_endAccess(v19);

          }
          ++v9;
        }
        while (v8 != v9);
      }
    }
    swift_bridgeObjectRelease();
    *(_QWORD *)v18 = _swiftEmptyArrayStorage;

    swift_bridgeObjectRelease();
  }
}

void sub_100C05F24(_QWORD *a1, double a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  uint64_t v12;
  id v13;
  _BYTE v14[24];

  v4 = a1[3];
  v5 = a1[4];
  sub_100007E68(a1, v4);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
  v7 = (uint64_t *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
  swift_beginAccess(v7, v14, 0, 0);
  v8 = *v7;
  if ((v8 & 0xC000000000000001) == 0)
  {
    if ((v6 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v6 < *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v9 = (char *)*(id *)(v8 + 8 * v6 + 32);
      goto LABEL_5;
    }
    __break(1u);
    return;
  }
  swift_bridgeObjectRetain();
  v9 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v8);
  swift_bridgeObjectRelease();
LABEL_5:
  v10 = *(void **)&v9[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
  v11 = v10;

  if (v10)
  {
    v12 = _s23InstrumentalContentViewCMa();
    if (swift_dynamicCastClass(v11, v12))
    {
      v13 = v11;
      sub_100BECB48(a2);

    }
  }
}

void sub_100C06050(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  _BYTE v21[24];
  _BYTE v22[40];
  _QWORD __dst[69];

  sub_100064C78(a1, (uint64_t)v22);
  v2 = sub_100007E8C(&qword_1011DF470);
  if ((swift_dynamicCast(__dst, v22, v2, &type metadata for Lyrics.TextLine, 6) & 1) != 0)
  {
    v3 = __dst[2];
    v4 = BYTE1(__dst[3]);
    v5 = (uint64_t *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
    swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews, v22, 0, 0);
    v6 = *v5;
    v7 = type metadata accessor for SyncedLyricsLineView();
    swift_bridgeObjectRetain();
    Array.subscript.getter(v3, v6, v7, (uint64_t)__dst);
    swift_bridgeObjectRelease();
    v8 = (void *)__dst[0];
    if (!__dst[0])
    {
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      return;
    }
    v9 = *(void **)(__dst[0] + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView);
    if (!v9)
      goto LABEL_15;
    v10 = _s19SBS_TextContentViewCMa();
    v11 = swift_dynamicCastClass(v9, v10);
    if (!v11)
      goto LABEL_15;
    v12 = *(_QWORD *)(v11 + OBJC_IVAR___MusicSBS_TextContentView_textView);
    if (!v12)
      goto LABEL_24;
    v13 = *(_QWORD *)(v12
                    + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation);
    if (!v13)
    {
LABEL_15:
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();

      return;
    }
    v14 = *(_QWORD *)(v13 + 24);
    if ((unint64_t)v14 >> 62)
    {
      if (v14 < 0)
        v19 = *(_QWORD *)(v13 + 24);
      else
        v19 = v14 & 0xFFFFFFFFFFFFFF8;
      v20 = v9;
      swift_retain();
      swift_bridgeObjectRetain();
      v15 = _CocoaArrayWrapper.endIndex.getter(v19);
      if (v15)
        goto LABEL_9;
    }
    else
    {
      v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
      v16 = v9;
      swift_retain();
      swift_bridgeObjectRetain();
      if (v15)
      {
LABEL_9:
        if (v15 >= 1)
        {
          v17 = (const void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs);
          swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs, v21, 0, 0);
          v18 = 0;
          do
          {
            if ((v14 & 0xC000000000000001) != 0)
              specialized _ArrayBuffer._getElementSlowPath(_:)(v18, v14);
            else
              swift_retain();
            ++v18;
            memcpy(__dst, v17, 0x219uLL);
            sub_10024E6C8((uint64_t)__dst);
            sub_100BE5FF8((uint64_t)__dst, v4);
            sub_10024E458((uint64_t)__dst);
            swift_release();
          }
          while (v15 != v18);
          goto LABEL_21;
        }
        __break(1u);
LABEL_24:
        __break(1u);
        return;
      }
    }
LABEL_21:
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();

  }
}

void sub_100C0631C(_QWORD *a1)
{
  char *v1;
  id v3;
  Class isa;
  uint64_t v5;
  void *v6;
  char *v7;
  BOOL v8;
  uint64_t v9;
  void *v10;
  char *v11;
  void **aBlock;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  char v18[24];

  swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics], v18, 0, 0);
  v3 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 100.0, 18.0, 0.0, 0.0);
  sub_10004A07C(0, (unint64_t *)&qword_1011E0650, UIViewPropertyAnimator_ptr);
  isa = UIViewPropertyAnimator.init(springTimingParameters:)((UISpringTimingParameters)v3).super.isa;
  sub_100BFF424(a1, isa, 0, 1);
  v5 = swift_allocObject(&unk_101107F00, 24, 7);
  *(_QWORD *)(v5 + 16) = v1;
  v16 = sub_100C07AD8;
  v17 = v5;
  aBlock = _NSConcreteStackBlock;
  v13 = 1107296256;
  v14 = sub_1001DBD98;
  v15 = &unk_101107F18;
  v6 = _Block_copy(&aBlock);
  v7 = v1;
  -[objc_class addAnimations:](isa, "addAnimations:", v6, swift_release().n128_f64[0]);
  _Block_release(v6);
  v8 = -[objc_class state](isa, "state") == (id)3;
  v7[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating] = v8;
  v9 = swift_allocObject(&unk_101107F50, 24, 7);
  *(_QWORD *)(v9 + 16) = v7;
  v16 = sub_100C07AF0;
  v17 = v9;
  aBlock = _NSConcreteStackBlock;
  v13 = 1107296256;
  v14 = sub_10012F6FC;
  v15 = &unk_101107F68;
  v10 = _Block_copy(&aBlock);
  v11 = v7;
  -[objc_class addCompletion:](isa, "addCompletion:", v10, swift_release().n128_f64[0]);
  _Block_release(v10);
  -[objc_class startAnimation](isa, "startAnimation");

}

uint64_t sub_100C06528(uint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unsigned __int8 *v6;
  unsigned __int8 *v7;
  int v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;

  v1 = 0;
  v2 = *(_QWORD *)(result + 16);
  v3 = result + 40;
LABEL_2:
  if (v1 <= v2)
    v4 = v2;
  else
    v4 = v1;
  v5 = v4 + 1;
  v6 = (unsigned __int8 *)(v3 + 16 * v1);
  while (1)
  {
    if (v2 == v1)
      return (uint64_t)_swiftEmptyArrayStorage;
    if (v5 == ++v1)
      break;
    v7 = v6 + 16;
    v8 = *v6;
    v6 += 16;
    if (v8 == 1)
    {
      v9 = *((id *)v7 - 3);
      result = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage);
      if ((result & 1) == 0)
        result = (uint64_t)sub_100BCD3D0(0, _swiftEmptyArrayStorage[2] + 1, 1);
      v11 = _swiftEmptyArrayStorage[2];
      v10 = _swiftEmptyArrayStorage[3];
      if (v11 >= v10 >> 1)
        result = (uint64_t)sub_100BCD3D0((_QWORD *)(v10 > 1), v11 + 1, 1);
      _swiftEmptyArrayStorage[2] = v11 + 1;
      v12 = &_swiftEmptyArrayStorage[2 * v11];
      v12[4] = v9;
      *((_BYTE *)v12 + 40) = 1;
      goto LABEL_2;
    }
  }
  __break(1u);
  return result;
}

void sub_100C0663C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  double (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  double v23;
  double v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  unint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  char v40;
  void *v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE v49[24];
  _BYTE v50[24];
  _BYTE v51[24];

  v1 = v0;
  v2 = (uint64_t)sub_100BFECC0();
  if ((unint64_t)v2 >> 62)
    goto LABEL_26;
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  v4 = &OBJC_IVAR___MusicSBS_TextContentView_isSelected;
  while (v3)
  {
    v48 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager;
    v5 = v2 & 0xC000000000000001;
    v6 = &OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView;
    v7 = 4;
    v44 = v1;
    v45 = v3;
    v47 = v2;
    while (1)
    {
      v8 = v5
         ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v7 - 4, v2)
         : (char *)*(id *)(v2 + 8 * v7);
      v9 = v8;
      v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1))
        break;
      v11 = *(void **)&v8[*v6];
      if (v11)
      {
        v12 = _s19SBS_TextContentViewCMa();
        v13 = swift_dynamicCastClass(v11, v12);
        if (v13)
        {
          v14 = v6;
          v15 = *(_QWORD *)(v1 + v48);
          if (v15)
          {
            v16 = v13;
            v17 = v5;
            swift_beginAccess(v15 + 96, v50, 0, 0);
            v18 = *(double (**)(uint64_t))(v15 + 96);
            if (v18)
            {
              v19 = *(_QWORD *)(v15 + 104);
              v46 = v11;
              swift_retain();
              v20 = sub_100048AAC((uint64_t)v18, v19);
              v21 = v18(v20);
              swift_beginAccess(v15 + 88, v49, 0, 0);
              v22 = 0.0;
              if (*(_BYTE *)(v15 + 88) == 1)
              {
                Lyrics.spatialOffset.getter();
                v22 = v23;
              }
              sub_10004BA30((uint64_t)v18, v19);
              swift_release();
              v24 = v21 - v22;
              if (v24 == *(double *)(v16 + OBJC_IVAR___MusicSBS_TextContentView_progress))
              {
                v5 = v17;
                v1 = v44;
                v3 = v45;
                v6 = v14;
                v25 = v46;
                v2 = v47;
              }
              else
              {
                *(double *)(v16 + OBJC_IVAR___MusicSBS_TextContentView_progress) = v24;
                v26 = *(void **)(v16 + OBJC_IVAR___MusicSBS_TextContentView_textView);
                v1 = v44;
                if (!v26)
                  goto LABEL_56;
                v5 = v17;
                v6 = v14;
                v27 = v26;
                sub_100BE0D44(1, v24);

                v28 = *(void **)(v16 + OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView);
                v3 = v45;
                v2 = v47;
                if (v28)
                {
                  v25 = v28;
                  sub_100BE0D44(1, v24);

                  v9 = v46;
                }
                else
                {
                  v25 = v46;
                }
              }

              v9 = v25;
              goto LABEL_6;
            }
            v5 = v17;
            v3 = v45;
          }
          v6 = v14;
          v2 = v47;
        }
      }
LABEL_6:

      ++v7;
      if (v10 == v3)
      {
        swift_bridgeObjectRelease();
        v4 = &OBJC_IVAR___MusicSBS_TextContentView_isSelected;
        goto LABEL_31;
      }
    }
    __break(1u);
LABEL_26:
    if (v2 < 0)
      v29 = v2;
    else
      v29 = v2 & 0xFFFFFFFFFFFFFF8;
    v3 = _CocoaArrayWrapper.endIndex.getter(v29);
    v4 = &OBJC_IVAR___MusicSBS_TextContentView_isSelected;
  }
  swift_bridgeObjectRelease();
LABEL_31:
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating) & 1) != 0)
    return;
  v30 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView;
  v31 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView);
  if (!v31)
    goto LABEL_49;
  v32 = (uint64_t *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews);
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews, v51, 0, 0);
  v33 = *v32;
  if (!((unint64_t)*v32 >> 62))
  {
    v34 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
    v35 = v31;
    swift_bridgeObjectRetain();
    if (v34)
      goto LABEL_35;
LABEL_47:
    swift_bridgeObjectRelease();
LABEL_48:

LABEL_49:
    if (*(_QWORD *)(v1 + v4[135]))
    {
      swift_retain();
      SyncedLyricsManager.update()();
      swift_release();
    }
    return;
  }
  if (v33 < 0)
    v42 = *v32;
  else
    v42 = v33 & 0xFFFFFFFFFFFFFF8;
  v43 = v31;
  swift_bridgeObjectRetain();
  v34 = _CocoaArrayWrapper.endIndex.getter(v42);
  if (!v34)
    goto LABEL_47;
LABEL_35:
  v36 = v34 - 1;
  if (__OFSUB__(v34, 1))
  {
    __break(1u);
    goto LABEL_53;
  }
  if ((v33 & 0xC000000000000001) != 0)
  {
LABEL_53:
    v37 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v36, v33);
    goto LABEL_40;
  }
  if ((v36 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v36 < *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v37 = *(id *)(v33 + 8 * v36 + 32);
LABEL_40:
    v38 = v37;
    swift_bridgeObjectRelease();
    v39 = *v32;
    swift_bridgeObjectRetain();
    v40 = sub_100BF7358((uint64_t)v31, v39);
    swift_bridgeObjectRelease();
    if ((v40 & 1) == 0)
    {
      v41 = *(void **)(v1 + v30);
      *(_QWORD *)(v1 + v30) = 0;

      sub_100C0340C((uint64_t)v31, (uint64_t)v38);
      sub_100BF01A0();
    }

    goto LABEL_48;
  }
  __break(1u);
LABEL_56:
  __break(1u);
}

id sub_100C06A30(void *a1)
{
  char *v1;
  char *v3;
  char *v4;
  double *v5;
  id v6;
  double v7;
  double v8;
  id result;
  void *v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  char v19[24];
  char v20[24];
  char v21[24];
  CGRect v22;

  v3 = &v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isFullScreen];
  swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isFullScreen], v21, 0, 0);
  if (*v3 != 1)
    return 0;
  v4 = &v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode];
  swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode], v20, 0, 0);
  if (*v4)
    return 0;
  v5 = (double *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_bottomTapAreaHeight];
  swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_bottomTapAreaHeight], v19, 0, 0);
  if (*v5 <= 0.0)
    return 0;
  v6 = objc_msgSend(v1, "view", *v5);
  objc_msgSend(a1, "locationInView:", v6);
  v8 = v7;

  result = objc_msgSend(v1, "view");
  if (result)
  {
    v10 = result;
    objc_msgSend(result, "frame");
    v12 = v11;
    v14 = v13;
    v16 = v15;
    v18 = v17;

    v22.origin.x = v12;
    v22.origin.y = v14;
    v22.size.width = v16;
    v22.size.height = v18;
    return (id)(CGRectGetHeight(v22) - *v5 < v8);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void _s11MusicCoreUI26SyncedLyricsViewControllerC06scrollF14DidEndDragging_14willDecelerateySo08UIScrollF0C_SbtF_0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  _QWORD v6[6];

  v1 = (void *)objc_opt_self(NSTimer);
  v2 = swift_allocObject(&unk_1011078B8, 24, 7);
  swift_unknownObjectWeakInit(v2 + 16);
  v6[4] = sub_100C07AAC;
  v6[5] = v2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  v6[2] = sub_100223938;
  v6[3] = &unk_101107EC8;
  v3 = _Block_copy(v6);
  swift_release();
  v4 = objc_msgSend(v1, "scheduledTimerWithTimeInterval:repeats:block:", 0, v3, 3.0);
  _Block_release(v3);
  v5 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScrollTimer);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScrollTimer) = v4;

}

double _s11MusicCoreUI26SyncedLyricsViewControllerC06scrollF15WillEndDragging_12withVelocity19targetContentOffsetySo08UIScrollF0C_So7CGPointVSpyAJGtF_0(double a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  double result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t Strong;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[24];
  _BYTE v22[24];
  _BYTE v23[24];

  v3 = v2;
  if (a2 <= 0.0)
  {
    if (a2 < 0.0)
    {
      v11 = (_BYTE *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode);
      swift_beginAccess(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode, v23, 1, 0);
      if (*v11 == 1)
      {
        *v11 = 0;
        v12 = v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate;
        swift_beginAccess(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate, v21, 0, 0);
        Strong = swift_unknownObjectWeakLoadStrong(v12);
        if (Strong)
        {
          v14 = Strong;
          v15 = *(_QWORD *)(v12 + 8);
          ObjectType = swift_getObjectType();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 24))(v3, ObjectType, v15);
          swift_unknownObjectRelease(v14);
        }
      }
      v17 = v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate;
      swift_beginAccess(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate, v22, 0, 0);
      v18 = swift_unknownObjectWeakLoadStrong(v17);
      if (v18)
      {
        v8 = v18;
        v19 = *(_QWORD *)(v17 + 8);
        v20 = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(v3, v20, v19);
        goto LABEL_11;
      }
    }
  }
  else
  {
    v4 = (_BYTE *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode);
    *(_QWORD *)&result = swift_beginAccess(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode, v23, 1, 0).n128_u64[0];
    if (*v4 != 1)
    {
      *v4 = 1;
      v6 = v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate;
      swift_beginAccess(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate, v22, 0, 0);
      v7 = swift_unknownObjectWeakLoadStrong(v6);
      if (v7)
      {
        v8 = v7;
        v9 = *(_QWORD *)(v6 + 8);
        v10 = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v3, v10, v9);
LABEL_11:
        *(_QWORD *)&result = swift_unknownObjectRelease(v8).n128_u64[0];
      }
    }
  }
  return result;
}

unint64_t sub_100C06E14()
{
  unint64_t result;

  result = qword_1011E0540;
  if (!qword_1011E0540)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SyncedLyricsViewController.Mode, &type metadata for SyncedLyricsViewController.Mode);
    atomic_store(result, (unint64_t *)&qword_1011E0540);
  }
  return result;
}

void sub_100C06E58(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  _BYTE v4[24];

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode);
  swift_beginAccess(v3, v4, 0, 0);
  *a2 = *v3;
}

void sub_100C06EA8(char *a1, _QWORD *a2)
{
  char v2;
  _BYTE *v3;
  _BYTE v4[24];

  v2 = *a1;
  v3 = (_BYTE *)(*a2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode);
  swift_beginAccess(v3, v4, 1, 0);
  *v3 = v2;
}

double destroy for SyncedLyricsSharingTransitionInfo(uint64_t a1)
{
  double result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 32));
  swift_release(*(_QWORD *)(a1 + 64));
  swift_release(*(_QWORD *)(a1 + 80));
  swift_release(*(_QWORD *)(a1 + 96));

  swift_release(*(_QWORD *)(a1 + 216));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 232)).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for SyncedLyricsSharingTransitionInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  __int128 v5;
  uint64_t v6;
  id v7;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v10 = *(_OWORD *)(a2 + 64);
  v11 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = v10;
  *(_OWORD *)(a1 + 80) = v11;
  v3 = *(_QWORD *)(a2 + 96);
  v4 = *(void **)(a2 + 104);
  *(_QWORD *)(a1 + 96) = v3;
  *(_QWORD *)(a1 + 104) = v4;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  v5 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v5;
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  v6 = *(_QWORD *)(a2 + 232);
  v9 = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 216) = v9;
  *(_QWORD *)(a1 + 232) = v6;
  swift_bridgeObjectRetain();
  swift_retain(v10);
  swift_retain(v11);
  swift_retain(v3);
  v7 = v4;
  swift_retain(v9);
  swift_retain(v6);
  return a1;
}

uint64_t assignWithCopy for SyncedLyricsSharingTransitionInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  v4 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v5 = *(_QWORD *)(a2 + 64);
  v6 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  swift_retain(v5);
  swift_release(v6);
  v7 = *(_QWORD *)(a2 + 80);
  v8 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v7;
  swift_retain(v7);
  swift_release(v8);
  v9 = *(_QWORD *)(a2 + 96);
  v10 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v9;
  swift_retain(v9);
  swift_release(v10);
  v11 = *(void **)(a2 + 104);
  v12 = *(void **)(a1 + 104);
  *(_QWORD *)(a1 + 104) = v11;
  v13 = v11;

  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  v14 = *(_QWORD *)(a2 + 216);
  v15 = *(_QWORD *)(a1 + 216);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = v14;
  swift_retain(v14);
  swift_release(v15);
  v17 = *(_QWORD *)(a2 + 224);
  v16 = *(_QWORD *)(a2 + 232);
  v18 = *(_QWORD *)(a1 + 232);
  *(_QWORD *)(a1 + 224) = v17;
  *(_QWORD *)(a1 + 232) = v16;
  swift_retain(v16);
  swift_release(v18);
  return a1;
}

__n128 initializeWithTake for SyncedLyricsSharingTransitionInfo(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __n128 result;
  __int128 v11;
  __int128 v12;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  v7 = a2[7];
  v8 = a2[8];
  v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  result = (__n128)a2[11];
  v11 = a2[12];
  v12 = a2[14];
  *(_OWORD *)(a1 + 208) = a2[13];
  *(_OWORD *)(a1 + 224) = v12;
  *(__n128 *)(a1 + 176) = result;
  *(_OWORD *)(a1 + 192) = v11;
  return result;
}

uint64_t assignWithTake for SyncedLyricsSharingTransitionInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  v4 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease(v4);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release(v5);
  v6 = *(_QWORD *)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release(v6);
  v7 = *(_QWORD *)(a1 + 96);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_release(v7);
  v8 = *(void **)(a1 + 104);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);

  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  v9 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v9;
  v10 = *(_QWORD *)(a1 + 216);
  v11 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v11;
  swift_release(v10);
  v12 = *(_QWORD *)(a1 + 232);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  swift_release(v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for SyncedLyricsSharingTransitionInfo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 240))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SyncedLyricsSharingTransitionInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 232) = 0;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 240) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 240) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SyncedLyricsSharingTransitionInfo()
{
  return &type metadata for SyncedLyricsSharingTransitionInfo;
}

uint64_t storeEnumTagSinglePayload for SyncedLyricsViewController.Mode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100C07410 + 4 * byte_100EEC195[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100C07444 + 4 * asc_100EEC190[v4]))();
}

uint64_t sub_100C07444(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100C0744C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100C07454);
  return result;
}

uint64_t sub_100C07460(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100C07468);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100C0746C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100C07474(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SyncedLyricsViewController.Mode()
{
  return &type metadata for SyncedLyricsViewController.Mode;
}

uint64_t sub_100C07490()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100C074B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1011E0634);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10005AEE4;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1011E0630 + dword_1011E0630))(a1, v4);
}

void sub_100C07524()
{
  uint64_t v0;

  sub_100BFD9EC(*(char **)(v0 + 24));
}

uint64_t sub_100C07548(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100C07558(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_100C07560()
{
  uint64_t v0;

  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 80);
}

id sub_100C07594()
{
  uint64_t v0;

  return sub_100C030A4(*(char **)(v0 + 16), (_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 72));
}

uint64_t sub_100C075A8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 88);
}

void sub_100C075DC(uint64_t a1)
{
  uint64_t v1;

  sub_100C031D8(*(double *)(v1 + 32), *(double *)(v1 + 40), a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_100C075EC()
{
  uint64_t v0;

  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 80);
}

id sub_100C07620()
{
  uint64_t v0;

  return sub_100C0271C(*(char **)(v0 + 16), (_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 64));
}

uint64_t sub_100C07634()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 64));
  return swift_deallocObject(v0, 104);
}

void sub_100C07670(uint64_t a1)
{
  uint64_t v1;

  sub_100C02934(*(double *)(v1 + 24), *(double *)(v1 + 48), *(double *)(v1 + 56), a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_100C07688()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

id sub_100C076B4()
{
  uint64_t v0;

  return sub_100C02868(*(_QWORD *)(v0 + 16), *(char **)(v0 + 24));
}

uint64_t sub_100C076C0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100C076E4()
{
  uint64_t v0;

  sub_100BEC490(*(double *)(v0 + 24));
}

uint64_t sub_100C0770C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100C0771C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100C0772C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

id sub_100C07758()
{
  uint64_t v0;

  return sub_100C01E78(*(_QWORD *)(v0 + 16), *(CGFloat **)(v0 + 24));
}

uint64_t sub_100C07760()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_release();
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 88);
}

void sub_100C0779C(uint64_t a1)
{
  uint64_t v1;

  sub_100C01EC0(*(double *)(v1 + 24), a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), (_QWORD *)(v1 + 48));
}

uint64_t sub_100C077B0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[24];

  v3 = *a1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_100064C78(v3, a2);
}

uint64_t sub_100C0780C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = a1[3];
  v4 = a1[4];
  sub_100007E68(a1, v3);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
  *a2 = result;
  return result;
}

BOOL sub_100C07854(void *a1)
{
  double *v1;
  CGFloat v2;
  CGFloat v3;
  CGFloat v4;
  CGFloat v5;
  CGRect v7;
  CGRect v8;

  v2 = v1[2];
  v3 = v1[3];
  v4 = v1[4];
  v5 = v1[5];
  objc_msgSend(a1, "frame");
  v8.origin.x = v2;
  v8.origin.y = v3;
  v8.size.width = v4;
  v8.size.height = v5;
  return CGRectIntersectsRect(v7, v8);
}

id sub_100C0789C(void *a1)
{
  uint64_t v1;
  void (*v2)(void);
  id v3;

  v2 = *(void (**)(void))(v1 + 16);
  v3 = a1;
  v2();
  return v3;
}

uint64_t sub_100C078D4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100C07900(uint64_t a1)
{
  uint64_t v1;

  sub_100BFE474(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_100C07908()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_100C0792C()
{
  uint64_t v0;

  return sub_100BE5FF4(v0);
}

uint64_t sub_100C07934(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C((uint64_t *)&unk_1011E0670);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_100C0797C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  objc_msgSend(v1, "setHidden:", 0);
  return objc_msgSend(v1, "setHighlighted:", 0);
}

_QWORD *sub_100C079BC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;

  v2 = a1[4];
  v3 = a1[8];
  v4 = a1[10];
  v5 = a1[12];
  v6 = (void *)a1[13];
  v7 = a1[27];
  swift_release(a1[29]);
  swift_release(v7);

  swift_release(v5);
  swift_release(v4);
  swift_release(v3);
  swift_bridgeObjectRelease(v2);
  return a1;
}

uint64_t sub_100C07A3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1011E0684);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1011E0680 + dword_1011E0680))(a1, v4);
}

void sub_100C07AAC(uint64_t a1)
{
  uint64_t v1;

  sub_100C04704(a1, v1);
}

uint64_t sub_100C07AB4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100C07AD8()
{
  sub_100C04384();
}

void sub_100C07AF0(uint64_t a1)
{
  uint64_t v1;

  sub_100C04524(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_100C07B08()
{
  uint64_t v0;

  return swift_deallocObject(v0, 48, 7);
}

id sub_100C07B34()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView), "setContentOffset:", *(double *)(v0 + 24), *(double *)(v0 + 32));
}

void sub_100C07B54()
{
  uint64_t v0;

  sub_100BFCE70(*(void **)(v0 + 16));
}

void sub_100C07B5C()
{
  uint64_t v0;

  sub_100BFCFA8(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100C07B64()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100C07B74()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100C07B84()
{
  uint64_t v0;

  sub_100BFAFBC(v0);
}

double sub_100C07B8C()
{
  uint64_t v0;

  return sub_100BF9144(v0);
}

uint64_t sub_100C07BA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1011E064C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1011E0648 + dword_1011E0648))(a1, v4);
}

void sub_100C07C14()
{
  uint64_t v0;

  sub_100BFA85C(v0);
}

double sub_100C07C1C(double a1)
{
  uint64_t v1;

  return sub_100BF8B34(v1, a1);
}

char *LineProgressGradientView.__allocating_init(color:featherWidth:direction:frame:)(void *a1, char a2, double a3, double a4, double a5, double a6, double a7)
{
  objc_class *v7;
  char v14;
  id v15;

  v14 = a2 & 1;
  v15 = objc_allocWithZone(v7);
  return LineProgressGradientView.init(color:featherWidth:direction:frame:)(a1, v14, a3, a4, a5, a6, a7);
}

char *LineProgressGradientView.init(color:featherWidth:direction:frame:)(void *a1, char a2, double a3, double a4, double a5, double a6, double a7)
{
  char *v7;
  uint64_t v14;
  char v15;
  id v16;
  char *v17;
  uint64_t v18;
  id v19;
  char *v20;
  objc_super v22;

  v14 = OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_gradientView;
  v15 = a2 & 1;
  type metadata accessor for LineProgressGradientView.GradientView();
  v16 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v17 = v7;
  *(_QWORD *)&v7[v14] = objc_msgSend(v16, "init");
  v18 = OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_fillView;
  *(_QWORD *)&v17[v18] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  *(_QWORD *)&v17[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_color] = a1;
  *(double *)&v17[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_featherWidth] = a3;
  v17[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_direction] = v15;
  v19 = a1;

  v22.receiver = v17;
  v22.super_class = (Class)type metadata accessor for LineProgressGradientView();
  v20 = (char *)objc_msgSendSuper2(&v22, "initWithFrame:", a4, a5, a6, a7);
  objc_msgSend(v20, "setClipsToBounds:", 1);
  objc_msgSend(v20, "addSubview:", *(_QWORD *)&v20[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_fillView]);
  objc_msgSend(v20, "addSubview:", *(_QWORD *)&v20[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_gradientView]);
  sub_100C08074();
  sub_100C082B4();

  return v20;
}

uint64_t type metadata accessor for LineProgressGradientView.GradientView()
{
  return objc_opt_self(_TtCC11MusicCoreUI24LineProgressGradientViewP33_CAA5E92EB35A39E050897B33043EE84412GradientView);
}

uint64_t type metadata accessor for LineProgressGradientView()
{
  return objc_opt_self(_TtC11MusicCoreUI24LineProgressGradientView);
}

Swift::Void __swiftcall LineProgressGradientView.layoutSubviews()()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for LineProgressGradientView();
  objc_msgSendSuper2(&v1, "layoutSubviews");
  sub_100C0816C();
}

void sub_100C08074()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  void *v5;
  double v6;
  double v7;
  id v8;
  uint64_t v9;

  v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_direction);
  v2 = OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_gradientView;
  v3 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_gradientView), "layer"));
  v4 = objc_opt_self(CAGradientLayer);
  v5 = (void *)swift_dynamicCastObjCClassUnconditional(v3, v4, 0, 0, 0);
  if (v1)
    v6 = 1.0;
  else
    v6 = 0.0;
  if (v1)
    v7 = 0.0;
  else
    v7 = 1.0;
  objc_msgSend(v5, "setStartPoint:", v6);

  v8 = objc_msgSend(*(id *)(v0 + v2), "layer");
  v9 = objc_opt_self(CAGradientLayer);
  objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v8, v9, 0, 0, 0), "setEndPoint:", v7, 0.0);

  sub_100C0816C();
}

void sub_100C0816C()
{
  char *v0;
  uint64_t v1;
  double v2;
  double v3;
  double v4;
  double Width;
  id v6;
  double v7;
  double v8;
  id v9;
  CGRect v10;
  CGRect v11;
  CGRect v12;
  CGRect v13;

  if ((v0[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_direction] & 1) != 0)
  {
    v1 = OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_featherWidth;
    v2 = *(double *)&v0[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_featherWidth];
    v3 = 0.0;
    v4 = v2;
  }
  else
  {
    objc_msgSend(v0, "bounds");
    Width = CGRectGetWidth(v10);
    v1 = OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_featherWidth;
    v4 = *(double *)&v0[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_featherWidth];
    v3 = Width - v4;
    if (Width - v4 <= 0.0)
      v2 = Width - v4;
    else
      v2 = 0.0;
  }
  v6 = *(id *)&v0[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_gradientView];
  objc_msgSend(v0, "bounds");
  objc_msgSend(v6, "setFrame:", v3, 0.0, v4, CGRectGetHeight(v11));

  v9 = *(id *)&v0[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_fillView];
  objc_msgSend(v0, "bounds");
  v7 = CGRectGetWidth(v12) - *(double *)&v0[v1];
  if (v7 < 0.0)
    v8 = 0.0;
  else
    v8 = v7;
  objc_msgSend(v0, "bounds");
  objc_msgSend(v9, "setFrame:", v2, 0.0, v8, CGRectGetHeight(v13));

}

id sub_100C082B4()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  Class isa;

  v1 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_gradientView), "layer"));
  v2 = objc_opt_self(CAGradientLayer);
  v3 = (void *)swift_dynamicCastObjCClassUnconditional(v1, v2, 0, 0, 0);
  v4 = sub_100007E8C(&qword_1011DEF80);
  v5 = swift_allocObject(v4, 96, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100EA7A80;
  v6 = OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_color;
  v7 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_color), "CGColor"));
  _s3__C7CGColorCMa_1(0);
  v9 = v8;
  *(_QWORD *)(v5 + 56) = v8;
  *(_QWORD *)(v5 + 32) = v7;
  v10 = objc_msgSend(*(id *)(v0 + v6), "colorWithAlphaComponent:", 0.0);
  v11 = objc_msgSend(v10, "CGColor");

  *(_QWORD *)(v5 + 88) = v9;
  *(_QWORD *)(v5 + 64) = v11;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v3, "setColors:", isa, swift_bridgeObjectRelease(v5).n128_f64[0]);

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_fillView), "setBackgroundColor:", *(_QWORD *)(v0 + v6));
}

id sub_100C08500()
{
  return sub_10004D23C(0, type metadata accessor for LineProgressGradientView.GradientView);
}

void LineProgressGradientView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicCoreUI.LineProgressGradientView", 36, "init(frame:)", 12, 0);
  __break(1u);
}

id LineProgressGradientView.__deallocating_deinit(uint64_t a1)
{
  return sub_10004D23C(a1, type metadata accessor for LineProgressGradientView);
}

id MPCPlayerResponseItem.hasStoreLyrics.getter()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  void *v6;

  v1 = objc_msgSend(v0, "metadataObject");
  v2 = v1;
  if (v1)
  {
    v3 = objc_msgSend(v1, "innermostModelObject");

    objc_opt_self(MPModelSong);
    v4 = (void *)swift_dynamicCastObjCClass(v3);
    if (v4 && (v5 = objc_msgSend(v4, "lyrics")) != 0)
    {
      v6 = v5;
      v2 = objc_msgSend(v5, "hasStoreLyrics");

    }
    else
    {
      v2 = 0;
    }

  }
  return v2;
}

uint64_t MPCPlayerResponseItem.supportsLyrics.getter()
{
  void *v0;
  uint64_t result;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  unsigned int v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;

  result = (uint64_t)objc_msgSend(v0, "metadataObject");
  if (result)
  {
    v2 = (void *)result;
    v3 = objc_msgSend((id)result, "innermostModelObject");

    objc_opt_self(MPModelSong);
    v4 = (void *)swift_dynamicCastObjCClass(v3);
    if (!v4)
      goto LABEL_11;
    v5 = v4;
    if ((_s11MusicCoreUI12LyricsLoaderC08supportsD03forSbSo11MPModelSongC_tFZ_0(v4) & 1) == 0)
      goto LABEL_11;
    v6 = objc_msgSend((id)objc_opt_self(ICEnvironmentMonitor), "sharedMonitor");
    v7 = objc_msgSend(v6, "isRemoteServerLikelyReachable");

    if (v7)
    {

      return 1;
    }
    v8 = objc_msgSend(v5, "lyrics");
    if (v8 && (v9 = v8, v10 = objc_msgSend(v8, "text"), v9, v10))
    {
      v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
      v13 = v12;

      swift_bridgeObjectRelease(v13);
      v14 = HIBYTE(v13) & 0xF;
      if ((v13 & 0x2000000000000000) == 0)
        v14 = v11 & 0xFFFFFFFFFFFFLL;
      return v14 != 0;
    }
    else
    {
LABEL_11:

      return 0;
    }
  }
  return result;
}

unint64_t sub_100C087CC()
{
  unint64_t result;

  result = qword_1011E0748;
  if (!qword_1011E0748)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for LineProgressGradientView.Direction, &type metadata for LineProgressGradientView.Direction);
    atomic_store(result, (unint64_t *)&qword_1011E0748);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for LineProgressGradientView.Direction(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100C0885C + 4 * byte_100EEC315[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100C08890 + 4 * byte_100EEC310[v4]))();
}

uint64_t sub_100C08890(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100C08898(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100C088A0);
  return result;
}

uint64_t sub_100C088AC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100C088B4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100C088B8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100C088C0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LineProgressGradientView.Direction()
{
  return &type metadata for LineProgressGradientView.Direction;
}

unint64_t sub_100C088DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E07A0;
  if (!qword_1011E07A0)
  {
    v1 = objc_opt_self(CAGradientLayer);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1011E07A0);
  }
  return result;
}

char *VocalsAttenuationSlider.init(frame:)(double a1, double a2, double a3, double a4)
{
  void *v4;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[24];
  objc_super v30;
  _QWORD v31[11];

  v30.receiver = v4;
  v30.super_class = (Class)swift_getObjectType();
  v9 = objc_msgSendSuper2(&v30, "initWithFrame:", a1, a2, a3, a4);
  v10 = static AccessibilityIdentifier.named(_:)(0xD000000000000017, (void *)0x8000000100E55E10);
  UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(v10, v11);
  v12 = qword_1011DDE30;
  v13 = (char *)v9;
  if (v12 != -1)
    swift_once(&qword_1011DDE30, sub_100BA7618);
  v14 = (void *)qword_10124F040;
  v15 = (uint64_t *)&v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageDefinition];
  swift_beginAccess(&v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageDefinition], v29, 1, 0);
  sub_100C08C2C((uint64_t)v15, (uint64_t)v31);
  v27 = v15[1];
  v28 = *v15;
  v16 = v15[4];
  v25 = v15[3];
  v26 = (void *)v15[2];
  v17 = v15[5];
  v18 = v15[6];
  v20 = v15[7];
  v19 = v15[8];
  v21 = v15[9];
  *(_OWORD *)v15 = xmmword_100EE8AF0;
  v15[2] = (uint64_t)v14;
  v15[3] = 0x3FF0000000000000;
  v15[4] = 0;
  v15[5] = 0;
  v15[6] = 0x3FF0000000000000;
  v15[7] = 0;
  v15[8] = 0;
  v15[9] = (uint64_t)_swiftEmptyArrayStorage;
  v22 = v14;
  sub_100267690(v31, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10013C5B4);
  swift_bridgeObjectRetain();
  v23 = v22;
  swift_bridgeObjectRetain();
  sub_10013C57C(v28, v27, v26, v25, v16, v17, v18, v20, v19, v21);
  sub_100CDDFC8((uint64_t)v31);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_100267690(v31, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10013C57C);

  return v13;
}

void VocalsAttenuationSlider.accessibilitySliderCurrentPercentageValue.getter()
{
  uint64_t v0;

  if (*(float *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__minValue) > *(float *)(v0
                                                                                                 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue))
    __break(1u);
}

uint64_t sub_100C08C2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011E07A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for VocalsAttenuationSlider()
{
  return objc_opt_self(MusicVocalsAttenuationSlider);
}

double Corner.radius(in:)(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, uint64_t a6, char a7)
{
  double Width;
  double Height;
  CGRect v14;

  if ((a7 & 1) == 0)
    return *(double *)&a1;
  Width = CGRectGetWidth(*(CGRect *)&a2);
  v14.origin.x = a2;
  v14.origin.y = a3;
  v14.size.width = a4;
  v14.size.height = a5;
  Height = CGRectGetHeight(v14);
  if (Height >= Width)
    Height = Width;
  return Height * 0.5;
}

void Corner.hash(into:)(uint64_t a1, Swift::UInt64 a2, Swift::UInt a3, char a4)
{
  Swift::UInt64 v6;

  if ((a4 & 1) != 0)
  {
    String.hash(into:)(a1, 0x6465646E756F72, 0xE700000000000000);
  }
  else
  {
    String.hash(into:)(a1, 0x737569646172, 0xE600000000000000);
    if ((a2 & 0x7FFFFFFFFFFFFFFFLL) != 0)
      v6 = a2;
    else
      v6 = 0;
    Hasher._combine(_:)(v6);
    Hasher._combine(_:)(a3);
  }
}

BOOL static Corner.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  _BOOL4 v6;

  v6 = (a6 & 1) == 0;
  if (*(double *)&a1 != *(double *)&a4)
    v6 = 0;
  if (a2 != a5)
    v6 = 0;
  if ((a3 & 1) != 0)
    return a6 & 1;
  else
    return v6;
}

Swift::Int Corner.hashValue.getter(Swift::UInt64 a1, Swift::UInt a2, char a3)
{
  Swift::UInt64 v6;
  _QWORD v8[9];

  Hasher.init(_seed:)(v8, 0);
  if ((a3 & 1) != 0)
  {
    String.hash(into:)(v8, 0x6465646E756F72, 0xE700000000000000);
  }
  else
  {
    String.hash(into:)(v8, 0x737569646172, 0xE600000000000000);
    if ((a1 & 0x7FFFFFFFFFFFFFFFLL) != 0)
      v6 = a1;
    else
      v6 = 0;
    Hasher._combine(_:)(v6);
    Hasher._combine(_:)(a2);
  }
  return Hasher._finalize()();
}

Swift::Int sub_100C08E54()
{
  uint64_t v0;
  Swift::UInt64 v1;
  Swift::UInt v2;
  char v3;
  _QWORD v5[9];

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_BYTE *)(v0 + 16);
  Hasher.init(_seed:)(v5, 0);
  Corner.hash(into:)((uint64_t)v5, v1, v2, v3);
  return Hasher._finalize()();
}

void sub_100C08EAC(uint64_t a1)
{
  uint64_t v1;

  Corner.hash(into:)(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_BYTE *)(v1 + 16));
}

Swift::Int sub_100C08EB8(uint64_t a1)
{
  uint64_t v1;
  Swift::UInt64 v2;
  Swift::UInt v3;
  char v4;
  _QWORD v6[9];

  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_BYTE *)(v1 + 16);
  Hasher.init(_seed:)(v6, a1);
  Corner.hash(into:)((uint64_t)v6, v2, v3, v4);
  return Hasher._finalize()();
}

uint64_t sub_100C08F0C(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t result;
  uint64_t v5;
  unsigned int v6;

  v3 = *(_BYTE *)(a1 + 16);
  result = *(unsigned __int8 *)(a2 + 16);
  if ((v3 & 1) == 0)
  {
    v5 = *(_QWORD *)(a1 + 8);
    v6 = (*(double *)a1 == *(double *)a2) & ~(_DWORD)result;
    if (v5 == *(_QWORD *)(a2 + 8))
      return v6;
    else
      return 0;
  }
  return result;
}

void Border.hash(into:)(uint64_t a1, uint64_t a2, unsigned __int8 a3, double a4)
{
  Swift::UInt64 v8;

  swift_retain(a2);
  Color.hash(into:)(a1, a2);
  swift_release(a2);
  if ((*(_QWORD *)&a4 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v8 = *(_QWORD *)&a4;
  else
    v8 = 0;
  Hasher._combine(_:)(v8);
  Hasher._combine(_:)(a3);
}

uint64_t static Border.__derived_struct_equals(_:_:)(uint64_t a1, unsigned __int8 a2, uint64_t a3, unsigned __int8 a4, double a5, double a6)
{
  int v7;
  unsigned int v8;

  v7 = a2;
  v8 = static Color.== infix(_:_:)(a1, a3) & (a5 == a6);
  if (v7 == a4)
    return v8;
  else
    return 0;
}

Swift::Int Border.hashValue.getter(uint64_t a1, unsigned __int8 a2, double a3)
{
  Swift::UInt64 v6;
  _QWORD v8[9];

  Hasher.init(_seed:)(v8, 0);
  swift_retain(a1);
  Color.hash(into:)(v8, a1);
  swift_release(a1);
  if ((*(_QWORD *)&a3 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v6 = *(_QWORD *)&a3;
  else
    v6 = 0;
  Hasher._combine(_:)(v6);
  Hasher._combine(_:)(a2);
  return Hasher._finalize()();
}

Swift::Int sub_100C09088()
{
  uint64_t v0;

  return Border.hashValue.getter(*(_QWORD *)v0, *(_BYTE *)(v0 + 16), *(double *)(v0 + 8));
}

void sub_100C09098(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  Swift::UInt64 v4;
  Swift::UInt v5;
  Swift::UInt64 v6;

  v3 = *v1;
  v4 = v1[1];
  v5 = *((unsigned __int8 *)v1 + 16);
  swift_retain(*v1);
  Color.hash(into:)(a1, v3);
  swift_release(v3);
  if ((v4 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v6 = v4;
  else
    v6 = 0;
  Hasher._combine(_:)(v6);
  Hasher._combine(_:)(v5);
}

Swift::Int sub_100C09100(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  Swift::UInt64 v3;
  Swift::UInt v4;
  Swift::UInt64 v5;
  _QWORD v7[9];

  v2 = *v1;
  v3 = v1[1];
  v4 = *((unsigned __int8 *)v1 + 16);
  Hasher.init(_seed:)(v7, a1);
  swift_retain(v2);
  Color.hash(into:)(v7, v2);
  swift_release(v2);
  if ((v3 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v5 = v3;
  else
    v5 = 0;
  Hasher._combine(_:)(v5);
  Hasher._combine(_:)(v4);
  return Hasher._finalize()();
}

BOOL sub_100C09178(uint64_t a1, uint64_t a2)
{
  double v2;
  int v3;
  double v4;
  int v5;
  char v6;
  _BOOL8 result;

  v2 = *(double *)(a1 + 8);
  v3 = *(unsigned __int8 *)(a1 + 16);
  v4 = *(double *)(a2 + 8);
  v5 = *(unsigned __int8 *)(a2 + 16);
  v6 = static Color.== infix(_:_:)(*(_QWORD *)a1, *(_QWORD *)a2);
  result = 0;
  if ((v6 & 1) != 0 && v2 == v4)
    return v3 == v5;
  return result;
}

uint64_t View.corner(_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[2];
  char v7;

  v6[0] = a1;
  v6[1] = a2;
  v7 = a3 & 1;
  return View.modifier<A>(_:)(v6, a4, &type metadata for CornerRadiusModifier, a5);
}

uint64_t sub_100C09214@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  sub_100007E8C(&qword_1011E0808);
  __chkstk_darwin();
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v2;
  v8 = v2[1];
  v9 = *((_BYTE *)v2 + 16);
  v10 = sub_100007E8C(&qword_1011E0810);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v6, a1, v10);
  sub_100C0A9F0((uint64_t)v6, a2);
  v11 = a2 + *(int *)(sub_100007E8C(&qword_1011E0818) + 36);
  *(_QWORD *)v11 = v7;
  *(_QWORD *)(v11 + 8) = v8;
  *(_BYTE *)(v11 + 16) = v9;
  *(_QWORD *)(v11 + 24) = 0;
  *(_WORD *)(v11 + 32) = 256;
  return sub_10004FF60((uint64_t)v6, &qword_1011E0808);
}

uint64_t View.border(_:corner:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, double a8)
{
  _QWORD v9[2];
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  v9[0] = a1;
  *(double *)&v9[1] = a8;
  v10 = a2;
  v11 = a3;
  v12 = a4;
  v13 = a5 & 1;
  return View.modifier<A>(_:)(v9, a6, &type metadata for BorderViewModifier, a7);
}

uint64_t sub_100C09340@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[5];

  v28 = a1;
  v29 = a2;
  v3 = sub_100007E8C(&qword_1011E0820);
  __chkstk_darwin();
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(double *)v2;
  v7 = *((double *)v2 + 1);
  if (!*((_BYTE *)v2 + 16))
  {
    v9 = 0.5;
    goto LABEL_5;
  }
  v8 = 0.0;
  if (*((_BYTE *)v2 + 16) == 1)
  {
    v9 = -0.5;
LABEL_5:
    v8 = v7 * v9;
  }
  v10 = v2[3];
  v27 = v2[4];
  v11 = *((_BYTE *)v2 + 40);
  swift_retain();
  v12 = StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(v30, 0, 0, _swiftEmptyArrayStorage, v7, 10.0, 0.0);
  v13 = v30[0];
  v14 = v30[2];
  v15 = v30[3];
  v16 = v30[4];
  v17 = static Alignment.center.getter(v12);
  v19 = v18;
  v20 = static Alignment.center.getter(v17);
  v22 = v21;
  v23 = sub_100007E8C(&qword_1011E0828);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v5, v28, v23);
  v24 = &v5[*(int *)(v3 + 36)];
  v25 = v27;
  *(_QWORD *)v24 = v10;
  *((_QWORD *)v24 + 1) = v25;
  v24[16] = v11;
  *((double *)v24 + 3) = v8;
  *((_QWORD *)v24 + 4) = v13;
  *((_QWORD *)v24 + 5) = v30[1];
  *((_QWORD *)v24 + 6) = v14;
  *((_QWORD *)v24 + 7) = v15;
  *((_QWORD *)v24 + 8) = v16;
  *((double *)v24 + 9) = v6;
  *((_WORD *)v24 + 40) = 256;
  *((_QWORD *)v24 + 11) = v17;
  *((_QWORD *)v24 + 12) = v19;
  *((_QWORD *)v24 + 13) = v20;
  *((_QWORD *)v24 + 14) = v22;
  return sub_100C0AA38((uint64_t)v5, v29);
}

uint64_t sub_100C094C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100C09340(a1, a2);
}

uint64_t View.hover(corner:outset:isRelative:namespace:isEnabled:)(uint64_t a1, uint64_t a2, unsigned __int8 a3, unsigned __int8 a4, uint64_t a5, char a6, char a7, uint64_t a8, double a9, uint64_t a10)
{
  double v10;
  _QWORD v12[2];
  char v13;
  double v14;
  uint64_t v15;
  char v16;
  char v17;

  if (((a4 | a3) & 1) != 0)
    v10 = *(double *)&a1;
  else
    v10 = *(double *)&a1 - a9;
  *(double *)v12 = v10;
  v12[1] = a2;
  v13 = a3 & 1;
  v14 = a9;
  v15 = a5;
  v16 = a6 & 1;
  v17 = a7;
  return View.modifier<A>(_:)(v12, a8, &type metadata for HoverViewModifier, a10);
}

uint64_t sub_100C0956C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  __n128 v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  double v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _BYTE v26[12];
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v28 = a1;
  v30 = a2;
  v29 = type metadata accessor for HighlightHoverEffect(0);
  v31 = *(_QWORD *)(v29 - 8);
  v3 = __chkstk_darwin();
  v5 = &v26[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for ContentShapeKinds(0, v3);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = &v26[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_100007E8C(&qword_1011E0830);
  v11 = __chkstk_darwin();
  v13 = &v26[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = *v2;
  v15 = v2[1];
  v16 = *((_BYTE *)v2 + 16);
  v17 = *((double *)v2 + 3);
  v27 = *((unsigned __int8 *)v2 + 41);
  static ContentShapeKinds.hoverEffect.getter(v11);
  v18 = &v13[*(int *)(v10 + 36)];
  v19 = sub_100007E8C(&qword_1011E0838);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 16))(&v18[*(int *)(v19 + 40)], v9, v6);
  *(_QWORD *)v18 = v14;
  *((_QWORD *)v18 + 1) = v15;
  v18[16] = v16;
  *((double *)v18 + 3) = -v17;
  v18[32] = 0;
  v20 = sub_100007E8C(&qword_1011E0840);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v13, v28, v20);
  v21 = (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
  static CustomHoverEffect<>.highlight.getter(v21);
  v22 = sub_100C0AA80();
  v23 = sub_100C0AB1C();
  v24 = v29;
  View.hoverEffect<A>(_:isEnabled:)(v5, v27, v10, v29, v22, v23);
  (*(void (**)(_BYTE *, uint64_t))(v31 + 8))(v5, v24);
  return sub_10004FF60((uint64_t)v13, &qword_1011E0830);
}

void sub_100C09758(double a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>, double a8@<D3>, CGFloat a9@<D4>)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  double v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  void (*v38)(char *, _QWORD, uint64_t, __n128);
  uint64_t v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  CGRect v50;
  CGRect v51;

  v43 = a1;
  v44 = a2;
  v16 = type metadata accessor for RoundedCornerStyle(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin();
  v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Capsule(0);
  __chkstk_darwin();
  v21 = (char *)&v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for RoundedRectangle(0);
  v23 = __chkstk_darwin();
  v25 = (char *)&v42 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for RoundedRectangle._Inset(0, v23);
  v27 = __chkstk_darwin();
  v29 = (char *)&v42 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) != 0)
  {
    v38 = *(void (**)(char *, _QWORD, uint64_t, __n128))(v17 + 104);
    v38(v21, enum case for RoundedCornerStyle.continuous(_:), v16, v27);
    ((void (*)(char *, _QWORD, uint64_t))v38)(v19, enum case for RoundedCornerStyle.circular(_:), v16);
    LOBYTE(v38) = static RoundedCornerStyle.== infix(_:_:)(v21, v19);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    v39 = sub_10005B748((uint64_t)v21, (uint64_t (*)(_QWORD))&type metadata accessor for Capsule);
    Capsule._Inset.path(in:)(&v45, v39, a5, a6, a7, a8, COERCE_DOUBLE(*(_QWORD *)&a9 & 0xFFFFFFFFFFFFFFFELL | ((v38 & 1) == 0)));
    v33 = v45;
    v34 = v46;
    v35 = v47;
    v36 = v48;
    v37 = v49;
  }
  else
  {
    v30 = v44;
    if (v44 == -1)
    {
      (*(void (**)(char *, _QWORD, uint64_t, __n128))(v17 + 104))(&v25[*(int *)(v22 + 20)], enum case for RoundedCornerStyle.continuous(_:), v16, v27);
      v40 = v43;
      *(double *)v25 = v43;
      *((double *)v25 + 1) = v40;
      sub_1007985C4((uint64_t)v25, (uint64_t)v29);
      *(CGFloat *)&v29[*(int *)(v26 + 20)] = a9;
      v41 = sub_10005B748((uint64_t)v25, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
      RoundedRectangle._Inset.path(in:)(&v45, v41, a5, a6, a7, a8);
      v33 = v45;
      v34 = v46;
      v35 = v47;
      v36 = v48;
      v37 = v49;
      sub_10005B748((uint64_t)v29, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle._Inset);
    }
    else
    {
      v31 = v43;
      v50.origin.x = a5;
      v50.origin.y = a6;
      v50.size.width = a7;
      v50.size.height = a8;
      v51 = CGRectInset(v50, a9, a9);
      v32 = objc_msgSend((id)objc_opt_self(UIBezierPath), "bezierPathWithRoundedRect:byRoundingCorners:cornerRadii:", v30, v51.origin.x, v51.origin.y, v51.size.width, v51.size.height, v31, v31);
      Path.init(_:)(&v45, objc_msgSend(v32, "CGPath"));
      v33 = v45;
      v34 = v46;
      v35 = v47;
      v36 = v48;
      v37 = v49;

    }
  }
  *(_QWORD *)a4 = v33;
  *(_QWORD *)(a4 + 8) = v34;
  *(_QWORD *)(a4 + 16) = v35;
  *(_QWORD *)(a4 + 24) = v36;
  *(_BYTE *)(a4 + 32) = v37;
}

double sub_100C09A8C@<D0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v2;
  char v3;
  double result;

  v3 = *(_BYTE *)(v2 + 16);
  result = *(double *)(v2 + 24) + a2;
  *(_OWORD *)a1 = *(_OWORD *)v2;
  *(_BYTE *)(a1 + 16) = v3;
  *(double *)(a1 + 24) = result;
  return result;
}

double sub_100C09AAC@<D0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  uint64_t v5;
  double result;
  __int128 v8;
  _OWORD v9[2];
  char v10;

  sub_100C09758(*(double *)v5, *(_QWORD *)(v5 + 8), *(_BYTE *)(v5 + 16), (uint64_t)v9, a2, a3, a4, a5, *(CGFloat *)(v5 + 24));
  result = *(double *)v9;
  v8 = v9[1];
  *(_OWORD *)a1 = v9[0];
  *(_OWORD *)(a1 + 16) = v8;
  *(_BYTE *)(a1 + 32) = v10;
  return result;
}

uint64_t sub_100C09AF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100C0AE64();
  return static Shape._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100C09B48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100C0AE64();
  return static Shape._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100C09B98(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C0AE64();
  return Shape.body.getter(a1, v2);
}

void sub_100C09BD0()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v1 = objc_msgSend(v0, "userInterfaceIdiom");

  byte_1011E07D8 = v1 == (id)6;
}

uint64_t sub_100C09C30()
{
  uint64_t v0;
  uint64_t result;

  if (qword_1011DE040 != -1)
    result = swift_once(&qword_1011DE040, sub_100C09BD0);
  v0 = 0x4008000000000000;
  if (byte_1011E07D8)
    v0 = 0x4018000000000000;
  static Corner.extraSmall = v0;
  *(_QWORD *)algn_10124FD98 = -1;
  byte_10124FDA0 = 0;
  return result;
}

uint64_t *Corner.extraSmall.unsafeMutableAddressor()
{
  if (qword_1011DE048 != -1)
    swift_once(&qword_1011DE048, sub_100C09C30);
  return &static Corner.extraSmall;
}

uint64_t static Corner.extraSmall.getter()
{
  if (qword_1011DE048 != -1)
    swift_once(&qword_1011DE048, sub_100C09C30);
  return static Corner.extraSmall;
}

uint64_t sub_100C09D1C()
{
  uint64_t v0;
  uint64_t result;

  if (qword_1011DE040 != -1)
    result = swift_once(&qword_1011DE040, sub_100C09BD0);
  v0 = 0x4014000000000000;
  if (byte_1011E07D8)
    v0 = 0x4020000000000000;
  static Corner.small = v0;
  unk_10124FDB0 = -1;
  byte_10124FDB8 = 0;
  return result;
}

uint64_t *Corner.small.unsafeMutableAddressor()
{
  if (qword_1011DE050 != -1)
    swift_once(&qword_1011DE050, sub_100C09D1C);
  return &static Corner.small;
}

uint64_t static Corner.small.getter()
{
  if (qword_1011DE050 != -1)
    swift_once(&qword_1011DE050, sub_100C09D1C);
  return static Corner.small;
}

uint64_t sub_100C09E08()
{
  uint64_t v0;
  uint64_t result;

  if (qword_1011DE040 != -1)
    result = swift_once(&qword_1011DE040, sub_100C09BD0);
  v0 = 0x4020000000000000;
  if (byte_1011E07D8)
    v0 = 0x4024000000000000;
  static Corner.medium = v0;
  *(_QWORD *)algn_10124FDC8 = -1;
  byte_10124FDD0 = 0;
  return result;
}

uint64_t *Corner.medium.unsafeMutableAddressor()
{
  if (qword_1011DE058 != -1)
    swift_once(&qword_1011DE058, sub_100C09E08);
  return &static Corner.medium;
}

uint64_t static Corner.medium.getter()
{
  if (qword_1011DE058 != -1)
    swift_once(&qword_1011DE058, sub_100C09E08);
  return static Corner.medium;
}

uint64_t sub_100C09EF4()
{
  uint64_t v0;
  uint64_t result;

  if (qword_1011DE040 != -1)
    result = swift_once(&qword_1011DE040, sub_100C09BD0);
  v0 = 0x4024000000000000;
  if (byte_1011E07D8)
    v0 = 0x4030000000000000;
  static Corner.large = v0;
  unk_10124FDE0 = -1;
  byte_10124FDE8 = 0;
  return result;
}

uint64_t *Corner.large.unsafeMutableAddressor()
{
  if (qword_1011DE060 != -1)
    swift_once(&qword_1011DE060, sub_100C09EF4);
  return &static Corner.large;
}

uint64_t static Corner.large.getter()
{
  if (qword_1011DE060 != -1)
    swift_once(&qword_1011DE060, sub_100C09EF4);
  return static Corner.large;
}

uint64_t sub_100C09FE0()
{
  uint64_t v0;
  uint64_t result;

  if (qword_1011DE040 != -1)
    result = swift_once(&qword_1011DE040, sub_100C09BD0);
  v0 = 0x402C000000000000;
  if (byte_1011E07D8)
    v0 = 0x4038000000000000;
  static Corner.extraLarge = v0;
  *(_QWORD *)algn_10124FDF8 = -1;
  byte_10124FE00 = 0;
  return result;
}

uint64_t *Corner.extraLarge.unsafeMutableAddressor()
{
  if (qword_1011DE068 != -1)
    swift_once(&qword_1011DE068, sub_100C09FE0);
  return &static Corner.extraLarge;
}

uint64_t static Corner.extraLarge.getter()
{
  if (qword_1011DE068 != -1)
    swift_once(&qword_1011DE068, sub_100C09FE0);
  return static Corner.extraLarge;
}

uint64_t sub_100C0A0CC()
{
  id v0;
  void *v1;
  id v2;
  __n128 v3;
  uint64_t result;
  _QWORD v5[5];
  uint64_t v6;

  v0 = objc_allocWithZone((Class)UIColor);
  v5[4] = sub_100C0A184;
  v6 = 0;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 1107296256;
  v5[2] = sub_100264780;
  v5[3] = &unk_101108698;
  v1 = _Block_copy(v5);
  v2 = objc_msgSend(v0, "initWithDynamicProvider:", v1);
  _Block_release(v1);
  v3 = swift_release(v6);
  result = Color.init(uiColor:)(v2, v3);
  static Border.artwork = result;
  qword_10124FE10 = 0x3FE0000000000000;
  byte_10124FE18 = 0;
  return result;
}

id sub_100C0A184(void *a1)
{
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;

  v1 = objc_msgSend(a1, "userInterfaceStyle");
  v2 = (void *)objc_opt_self(UIColor);
  if (v1 == (id)1)
  {
    v3 = objc_msgSend(v2, "blackColor");
    v4 = objc_msgSend(v3, "colorWithAlphaComponent:", 0.08);
  }
  else
  {
    v3 = objc_msgSend(v2, "whiteColor");
    v4 = objc_msgSend(v3, "colorWithAlphaComponent:", 0.1);
  }
  v5 = v4;

  return v5;
}

uint64_t *Border.artwork.unsafeMutableAddressor()
{
  if (qword_1011DE070 != -1)
    swift_once(&qword_1011DE070, sub_100C0A0CC);
  return &static Border.artwork;
}

double static Border.artwork.getter()
{
  double v0;

  if (qword_1011DE070 != -1)
    swift_once(&qword_1011DE070, sub_100C0A0CC);
  v0 = *(double *)&qword_10124FE10;
  swift_retain();
  return v0;
}

unint64_t sub_100C0A2D4()
{
  unint64_t result;

  result = qword_1011E07E0;
  if (!qword_1011E07E0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Corner, &type metadata for Corner);
    atomic_store(result, (unint64_t *)&qword_1011E07E0);
  }
  return result;
}

unint64_t sub_100C0A31C()
{
  unint64_t result;

  result = qword_1011E07E8;
  if (!qword_1011E07E8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Border.StrokeStyle, &type metadata for Border.StrokeStyle);
    atomic_store(result, (unint64_t *)&qword_1011E07E8);
  }
  return result;
}

unint64_t sub_100C0A364()
{
  unint64_t result;

  result = qword_1011E07F0;
  if (!qword_1011E07F0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Border, &type metadata for Border);
    atomic_store(result, (unint64_t *)&qword_1011E07F0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for Corner(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 16) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 17) = v3;
  return result;
}

uint64_t sub_100C0A3D8(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_100C0A3F4(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    *(_BYTE *)(result + 16) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for Corner()
{
  return &type metadata for Corner;
}

uint64_t sub_100C0A428(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  swift_retain(v3);
  return a1;
}

uint64_t *assignWithCopy for Border(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  a1[1] = a2[1];
  *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
  return a1;
}

uint64_t *assignWithTake for Border(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  a1[1] = a2[1];
  *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for Border()
{
  return &type metadata for Border;
}

uint64_t storeEnumTagSinglePayload for Border.StrokeStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100C0A550 + 4 * byte_100EEC3F5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100C0A584 + 4 * asc_100EEC3F0[v4]))();
}

uint64_t sub_100C0A584(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100C0A58C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100C0A594);
  return result;
}

uint64_t sub_100C0A5A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100C0A5A8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100C0A5AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100C0A5B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Border.StrokeStyle()
{
  return &type metadata for Border.StrokeStyle;
}

uint64_t sub_100C0A5D0(_QWORD *a1)
{
  return sub_100C0A694(a1, (uint64_t)&type metadata for CornerRadiusModifier, (void (*)(void))sub_100C0A5E4);
}

unint64_t sub_100C0A5E4()
{
  unint64_t result;

  result = qword_1011E3DF0;
  if (!qword_1011E3DF0)
  {
    result = swift_getWitnessTable(&unk_100EEC658, &type metadata for CornerRadiusModifier);
    atomic_store(result, (unint64_t *)&qword_1011E3DF0);
  }
  return result;
}

uint64_t sub_100C0A628(_QWORD *a1)
{
  return sub_100C0A694(a1, (uint64_t)&type metadata for BorderViewModifier, (void (*)(void))sub_100C0A63C);
}

unint64_t sub_100C0A63C()
{
  unint64_t result;

  result = qword_1011E07F8;
  if (!qword_1011E07F8)
  {
    result = swift_getWitnessTable(&unk_100EEC608, &type metadata for BorderViewModifier);
    atomic_store(result, (unint64_t *)&qword_1011E07F8);
  }
  return result;
}

uint64_t sub_100C0A680(_QWORD *a1)
{
  return sub_100C0A694(a1, (uint64_t)&type metadata for HoverViewModifier, (void (*)(void))sub_100C0A6F0);
}

uint64_t sub_100C0A694(_QWORD *a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4;

  v4 = type metadata accessor for ModifiedContent(255, *a1, a2);
  a3();
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v4);
}

unint64_t sub_100C0A6F0()
{
  unint64_t result;

  result = qword_1011E0800;
  if (!qword_1011E0800)
  {
    result = swift_getWitnessTable(&unk_100EEC5B8, &type metadata for HoverViewModifier);
    atomic_store(result, (unint64_t *)&qword_1011E0800);
  }
  return result;
}

__n128 _s4SizeVwcp(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 26) = *(_OWORD *)(a2 + 26);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for HoverViewModifier(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 42))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 41);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for HoverViewModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 42) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 42) = 0;
    if (a2)
      *(_BYTE *)(result + 41) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for HoverViewModifier()
{
  return &type metadata for HoverViewModifier;
}

uint64_t initializeWithCopy for BorderViewModifier(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
  *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
  swift_retain(v3);
  return a1;
}

uint64_t *assignWithCopy for BorderViewModifier(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  a1[1] = a2[1];
  *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
  v6 = *(_OWORD *)(a2 + 3);
  *((_BYTE *)a1 + 40) = *((_BYTE *)a2 + 40);
  *(_OWORD *)(a1 + 3) = v6;
  return a1;
}

__n128 initializeWithTake for BorderViewModifier(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t *assignWithTake for BorderViewModifier(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  a1[1] = a2[1];
  *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
  *((_BYTE *)a1 + 40) = *((_BYTE *)a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for BorderViewModifier(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 41))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BorderViewModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 41) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BorderViewModifier()
{
  return &type metadata for BorderViewModifier;
}

ValueMetadata *type metadata accessor for CornerRadiusModifier()
{
  return &type metadata for CornerRadiusModifier;
}

uint64_t sub_100C0A9C0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FBC0BC, 1);
}

uint64_t sub_100C0A9D0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FBC094, 1);
}

uint64_t sub_100C0A9E0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FBC06C, 1);
}

uint64_t sub_100C0A9F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011E0808);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100C0AA38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011E0820);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100C0AA80()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E0848;
  if (!qword_1011E0848)
  {
    v1 = sub_100044B54(&qword_1011E0830);
    sub_100049F28(&qword_1011E0850, &qword_1011E0840, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    sub_100049F28(&qword_1011E0858, &qword_1011E0838, (uint64_t)&protocol conformance descriptor for _ContentShapeKindModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E0848);
  }
  return result;
}

unint64_t sub_100C0AB1C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E0860;
  if (!qword_1011E0860)
  {
    v1 = type metadata accessor for HighlightHoverEffect(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for HighlightHoverEffect, v1);
    atomic_store(result, (unint64_t *)&qword_1011E0860);
  }
  return result;
}

uint64_t sub_100C0AB64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100C0AB74(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

ValueMetadata *type metadata accessor for CornerShape()
{
  return &type metadata for CornerShape;
}

unint64_t sub_100C0AB90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E0868;
  if (!qword_1011E0868)
  {
    v1 = sub_100044B54(&qword_1011E0818);
    sub_100C0AC14();
    sub_100049F28(&qword_1011E0880, &qword_1011E0888, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E0868);
  }
  return result;
}

unint64_t sub_100C0AC14()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E0870;
  if (!qword_1011E0870)
  {
    v1 = sub_100044B54(&qword_1011E0808);
    sub_100049F28(&qword_1011E0878, &qword_1011E0810, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E0870);
  }
  return result;
}

unint64_t sub_100C0AC9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E0890;
  if (!qword_1011E0890)
  {
    v1 = sub_100044B54(&qword_1011E0820);
    sub_100049F28(&qword_1011E0898, &qword_1011E0828, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    sub_100049F28(&qword_1011E08A0, &qword_1011E08A8, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E0890);
  }
  return result;
}

uint64_t sub_100C0AD38()
{
  _QWORD v1[4];

  v1[0] = sub_100044B54(&qword_1011E0830);
  v1[1] = type metadata accessor for HighlightHoverEffect(255);
  v1[2] = sub_100C0AA80();
  v1[3] = sub_100C0AB1C();
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>, 1);
}

uint64_t sub_100C0ADA4()
{
  return sub_100049F28(&qword_1011E08B0, &qword_1011E08B8, (uint64_t)&protocol conformance descriptor for _ShapeView<A, B>);
}

unint64_t sub_100C0ADD4()
{
  unint64_t result;

  result = qword_1011E08C0;
  if (!qword_1011E08C0)
  {
    result = swift_getWitnessTable(&unk_100EEC704, &type metadata for CornerShape);
    atomic_store(result, (unint64_t *)&qword_1011E08C0);
  }
  return result;
}

unint64_t sub_100C0AE1C()
{
  unint64_t result;

  result = qword_1011E08C8;
  if (!qword_1011E08C8)
  {
    result = swift_getWitnessTable(&unk_100EEC6B4, &type metadata for CornerShape);
    atomic_store(result, (unint64_t *)&qword_1011E08C8);
  }
  return result;
}

unint64_t sub_100C0AE64()
{
  unint64_t result;

  result = qword_1011E08D0;
  if (!qword_1011E08D0)
  {
    result = swift_getWitnessTable(&unk_100EEC754, &type metadata for CornerShape);
    atomic_store(result, (unint64_t *)&qword_1011E08D0);
  }
  return result;
}

unint64_t sub_100C0AEAC()
{
  unint64_t result;

  result = qword_1011E08D8;
  if (!qword_1011E08D8)
  {
    result = swift_getWitnessTable(&unk_100EEC7A4, &type metadata for CornerShape);
    atomic_store(result, (unint64_t *)&qword_1011E08D8);
  }
  return result;
}

uint64_t NoticePresenter.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  NoticePresenter.init()();
  return v1;
}

uint64_t NoticePresenter.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  CGFloat bottom;
  CGFloat trailing;
  uint64_t v17;
  _QWORD *v18;
  __int128 v20;
  _BYTE v21[16];
  uint64_t v22;
  __int128 v23;
  CGFloat v24;
  CGFloat v25;

  v1 = sub_100007E8C(&qword_1011E08E8);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v21[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = sub_100007E8C(&qword_1011E08F0);
  v6 = __chkstk_darwin(v5);
  v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v6);
  v10 = &v21[-v9 - 8];
  v11 = v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter__notice;
  v12 = type metadata accessor for Notice(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v10, 1, 1, v12);
  sub_10004A160((uint64_t)v10, (uint64_t)v8, &qword_1011E08F0);
  Published.init(initialValue:)(v8, v5);
  sub_10004FF60((uint64_t)v10, &qword_1011E08F0);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v2 + 32))(v11, v4, v1);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_dismissalWorkItem) = 0;
  v13 = OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration;
  if (qword_1011DE078 != -1)
    swift_once(&qword_1011DE078, sub_100C0BBE0);
  v14 = static NoticePresenter.defaultEdgePadding;
  v20 = *(_OWORD *)&NSDirectionalEdgeInsetsZero.top;
  bottom = NSDirectionalEdgeInsetsZero.bottom;
  trailing = NSDirectionalEdgeInsetsZero.trailing;
  v17 = swift_unknownObjectWeakInit(v21, 0);
  v21[8] = 2;
  v22 = v14;
  v23 = v20;
  v24 = bottom;
  v25 = trailing;
  sub_100C0EE88(v17, v0 + v13, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakTakeInit);
  v18 = (_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_willPresentHandler);
  *v18 = 0;
  v18[1] = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_passthroughWindow) = 0;
  return v0;
}

uint64_t property wrapper backing initializer of NoticePresenter.notice(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = sub_100007E8C(&qword_1011E08F0);
  __chkstk_darwin();
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(a1, (uint64_t)v4, &qword_1011E08F0);
  Published.init(initialValue:)(v4, v2);
  return sub_10004FF60(a1, &qword_1011E08F0);
}

double sub_100C0B1CC@<D0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100EEC800);
  v5 = swift_getKeyPath(&unk_100EEC828);
  static Published.subscript.getter(a2, v3, KeyPath, v5);
  swift_release(KeyPath);
  *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  return result;
}

uint64_t sub_100C0B234(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v12;

  sub_100007E8C(&qword_1011E08F0);
  __chkstk_darwin();
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v7 = (char *)&v12 - v6;
  sub_10004A160(a1, (uint64_t)&v12 - v6, &qword_1011E08F0);
  v8 = *a2;
  KeyPath = swift_getKeyPath(&unk_100EEC800);
  v10 = swift_getKeyPath(&unk_100EEC828);
  sub_10004A160((uint64_t)v7, (uint64_t)v5, &qword_1011E08F0);
  swift_retain();
  static Published.subscript.setter(v5, v8, KeyPath, v10);
  return sub_10004FF60((uint64_t)v7, &qword_1011E08F0);
}

double NoticePresenter.notice.getter@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  double result;

  KeyPath = swift_getKeyPath(&unk_100EEC800);
  v4 = swift_getKeyPath(&unk_100EEC828);
  static Published.subscript.getter(a1, v1, KeyPath, v4);
  swift_release(KeyPath);
  *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  return result;
}

uint64_t sub_100C0B390(_QWORD *a1)
{
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(*a1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter__notice, v3, 33, 0);
  v1 = sub_100007E8C(&qword_1011E08E8);
  Published.projectedValue.getter(v1);
  return swift_endAccess(v3);
}

uint64_t sub_100C0B3F4(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  __n128 v8;
  uint64_t v9;
  _BYTE *v10;
  void (*v11)(_BYTE *, uint64_t, uint64_t, __n128);
  uint64_t v12;
  uint64_t v13;
  _BYTE v16[24];

  v4 = sub_100007E8C(&qword_1011E0B98);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = __chkstk_darwin();
  v10 = &v16[-v9 - 8];
  v11 = *(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v5 + 16);
  v11(&v16[-v9 - 8], a1, v4, v8);
  v12 = *a2;
  ((void (*)(_BYTE *, _BYTE *, uint64_t))v11)(v7, v10, v4);
  swift_beginAccess(v12 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter__notice, v16, 33, 0);
  v13 = sub_100007E8C(&qword_1011E08E8);
  Published.projectedValue.setter(v7, v13);
  swift_endAccess(v16);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v10, v4);
}

uint64_t NoticePresenter.$notice.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter__notice, v3, 33, 0);
  v1 = sub_100007E8C(&qword_1011E08E8);
  Published.projectedValue.getter(v1);
  return swift_endAccess(v3);
}

Swift::Void __swiftcall NoticePresenter.dismiss(_:)(Swift::Bool a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  double v21;
  uint64_t v22;

  v2 = v1;
  sub_100007E8C(&qword_1011E08F0);
  __chkstk_darwin();
  v5 = (uint64_t *)((char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  KeyPath = swift_getKeyPath(&unk_100EEC800);
  swift_getKeyPath(&unk_100EEC828);
  static Published.subscript.getter(v5, v1, KeyPath);
  swift_release();
  swift_release();
  v7 = type metadata accessor for Notice(0);
  LODWORD(KeyPath) = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7);
  v8 = sub_10004FF60((uint64_t)v5, &qword_1011E08F0);
  if ((_DWORD)KeyPath != 1)
  {
    v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_dismissalWorkItem);
    *(_QWORD *)(v2 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_dismissalWorkItem) = 0;
    if (v9)
    {
      dispatch thunk of DispatchWorkItem.cancel()(v8);
      swift_release();
    }
    if (a1)
      v10 = static Animation.default.getter(v8);
    else
      v10 = 0;
    withAnimation<A>(_:_:)(v10, sub_100C0BCE8, v2, (char *)&type metadata for () + 8);
    swift_release();
    v11 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_passthroughWindow);
    if (v11)
    {
      *(_BYTE *)(v11
               + OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C117PassthroughWindow_canReceiveTouches) = 0;
      v12 = sub_10004A07C(0, (unint64_t *)&qword_1011DF580, OS_dispatch_queue_ptr);
      v20 = (void *)static OS_dispatch_queue.main.getter(v12, v13, v14, v15, v16, v17, v18, v19);
      if (a1)
        v21 = 2.0;
      else
        v21 = 0.0;
      swift_retain();
      OS_dispatch_queue.asyncAfter(_:block:)((uint64_t)sub_100C0BD00, v2, v21);

      swift_release();
    }
  }
}

uint64_t sub_100C0B734(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  _QWORD v10[2];

  sub_100007E8C(&qword_1011E08F0);
  __chkstk_darwin();
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v5 = (char *)v10 - v4;
  v6 = type metadata accessor for Notice(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  KeyPath = swift_getKeyPath(&unk_100EEC800);
  v8 = swift_getKeyPath(&unk_100EEC828);
  sub_10004A160((uint64_t)v5, (uint64_t)v3, &qword_1011E08F0);
  swift_retain();
  static Published.subscript.setter(v3, a1, KeyPath, v8);
  return sub_10004FF60((uint64_t)v5, &qword_1011E08F0);
}

void sub_100C0B848(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_100007E8C(&qword_1011E08F0);
  __chkstk_darwin();
  v3 = (uint64_t *)((char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  KeyPath = swift_getKeyPath(&unk_100EEC800);
  v5 = swift_getKeyPath(&unk_100EEC828);
  static Published.subscript.getter(v3, a1, KeyPath, v5);
  swift_release();
  swift_release();
  v6 = type metadata accessor for Notice(0);
  LODWORD(KeyPath) = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v3, 1, v6);
  sub_10004FF60((uint64_t)v3, &qword_1011E08F0);
  if ((_DWORD)KeyPath == 1)
    sub_100C0C068(0);
}

uint64_t NoticePresenter.present(_:internalOnly:)(uint64_t a1, char a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v7;

  type metadata accessor for Notice(0);
  __chkstk_darwin();
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Notice.variant(_:)(a1);
  _s11MusicCoreUI15NoticePresenterC7present_12internalOnlyy0aB00D0V_SbtF_0((uint64_t)v5, a2);
  return sub_10005B748((uint64_t)v5, type metadata accessor for Notice);
}

void sub_100C0B9D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;

  sub_100007E8C(&qword_1011E08F0);
  __chkstk_darwin();
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v7 = (char *)&v24 - v6;
  sub_10005B704(a2, (uint64_t)&v24 - v6, type metadata accessor for Notice);
  v8 = type metadata accessor for Notice(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 0, 1, v8);
  KeyPath = swift_getKeyPath(&unk_100EEC800);
  v10 = swift_getKeyPath(&unk_100EEC828);
  sub_10004A160((uint64_t)v7, (uint64_t)v5, &qword_1011E08F0);
  swift_retain();
  static Published.subscript.setter(v5, a1, KeyPath, v10);
  sub_10004FF60((uint64_t)v7, &qword_1011E08F0);
  v11 = OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_passthroughWindow;
  v12 = *(void **)(a1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_passthroughWindow);
  if (v12)
  {
    v13 = objc_msgSend(v12, "rootViewController");
    if (v13)
    {
      v14 = v13;
      v15 = type metadata accessor for NoticePresenter.UIRootViewController();
      v16 = (void *)swift_dynamicCastClass(v14, v15);
      if (v16)
      {
        v17 = objc_msgSend(v16, "view");

        if (!v17)
        {
          __break(1u);
          goto LABEL_15;
        }
        objc_msgSend(v17, "setNeedsLayout");
        v14 = v17;
      }

    }
    v18 = *(void **)(a1 + v11);
    if (v18)
    {
      v19 = objc_msgSend(v18, "rootViewController");
      if (v19)
      {
        v20 = v19;
        v21 = type metadata accessor for NoticePresenter.UIRootViewController();
        v22 = (void *)swift_dynamicCastClass(v20, v21);
        if (!v22)
        {
LABEL_12:

          return;
        }
        v23 = objc_msgSend(v22, "view");

        if (v23)
        {
          objc_msgSend(v23, "layoutIfNeeded");
          v20 = v23;
          goto LABEL_12;
        }
LABEL_15:
        __break(1u);
      }
    }
  }
}

void sub_100C0BBE0()
{
  static NoticePresenter.defaultEdgePadding = 0x4024000000000000;
}

uint64_t *NoticePresenter.defaultEdgePadding.unsafeMutableAddressor()
{
  if (qword_1011DE078 != -1)
    swift_once(&qword_1011DE078, sub_100C0BBE0);
  return &static NoticePresenter.defaultEdgePadding;
}

double static NoticePresenter.defaultEdgePadding.getter()
{
  if (qword_1011DE078 != -1)
    swift_once(&qword_1011DE078, sub_100C0BBE0);
  return *(double *)&static NoticePresenter.defaultEdgePadding;
}

void *NoticePresenter.defaultEdge.unsafeMutableAddressor()
{
  return &static NoticePresenter.defaultEdge;
}

uint64_t NoticePresenter.UIKitConfiguration.init(edge:padding:insets:)@<X0>(char a1@<W0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>, double a7@<D4>)
{
  uint64_t result;

  result = swift_unknownObjectWeakInit(a2, 0);
  *(_BYTE *)(result + 8) = a1;
  *(double *)(result + 16) = a3;
  *(double *)(result + 24) = a4;
  *(double *)(result + 32) = a5;
  *(double *)(result + 40) = a6;
  *(double *)(result + 48) = a7;
  return result;
}

uint64_t sub_100C0BCE8()
{
  uint64_t v0;

  return sub_100C0B734(v0);
}

void sub_100C0BD00()
{
  uint64_t v0;

  sub_100C0B848(v0);
}

uint64_t NoticePresenter.uiKitConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_100C0EE88(v3, a1, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
}

uint64_t NoticePresenter.uiKitConfiguration.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __n128 v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[56];
  _BYTE v15[24];
  _BYTE v16[56];

  v3 = v1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration;
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration, v15, 0, 0);
  sub_100C0EE88(v3, (uint64_t)v16, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
  v4 = swift_beginAccess(v3, v14, 33, 0);
  sub_100C0EED8(a1, v3, v4);
  swift_endAccess(v14);
  sub_100C0EE88(v3, (uint64_t)v14, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
  v5 = _s11MusicCoreUI15NoticePresenterC18UIKitConfigurationV23__derived_struct_equalsySbAE_AEtFZ_0((uint64_t)v16, (uint64_t)v14);
  sub_10013C71C((uint64_t)v14, v6);
  if ((v5 & 1) == 0)
  {
    v8 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_passthroughWindow);
    if (v8)
    {
      v9 = objc_msgSend(v8, "rootViewController");
      if (v9)
      {
        v10 = v9;
        v11 = type metadata accessor for NoticePresenter.UIRootViewController();
        if (swift_dynamicCastClass(v10, v11))
        {
          sub_100C0EE88(v3, (uint64_t)v14, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
          sub_100C0D84C((uint64_t)v14);
        }

      }
    }
  }
  sub_10013C71C(a1, v7);
  return sub_10013C71C((uint64_t)v16, v12);
}

void (*NoticePresenter.uiKitConfiguration.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x90uLL);
  *a1 = v3;
  v3[17] = v1;
  v4 = v1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration;
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration, v3 + 14, 0, 0);
  sub_100C0EE88(v4, (uint64_t)v3, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
  return sub_100C0BF08;
}

void sub_100C0BF08(uint64_t *a1, char a2)
{
  void *v2;
  uint64_t v3;

  v2 = (void *)*a1;
  if ((a2 & 1) != 0)
  {
    sub_100C0EE88(*a1, (uint64_t)v2 + 56, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
    NoticePresenter.uiKitConfiguration.setter((uint64_t)v2 + 56);
    sub_10013C71C((uint64_t)v2, v3);
  }
  else
  {
    NoticePresenter.uiKitConfiguration.setter(*a1);
  }
  free(v2);
}

uint64_t NoticePresenter.willPresentHandler.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_willPresentHandler);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_willPresentHandler, v4, 0, 0);
  v2 = *v1;
  sub_100048AAC(*v1, v1[1]);
  return v2;
}

uint64_t NoticePresenter.willPresentHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_willPresentHandler);
  swift_beginAccess(v5, v9, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return sub_10004BA30(v6, v7);
}

uint64_t (*NoticePresenter.willPresentHandler.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_willPresentHandler, a1, 33, 0);
  return j__swift_endAccess;
}

void sub_100C0C068(void *a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  id v5;
  id v6;
  char v7;
  id v8;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_passthroughWindow);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_passthroughWindow) = a1;
  v4 = a1;
  if (v3)
  {
    v8 = v4;
    if (!a1
      || (type metadata accessor for NoticePresenter.PassthroughWindow(),
          v5 = v3,
          v6 = v8,
          v7 = static NSObject.== infix(_:_:)(v5, v6),
          v5,
          v6,
          (v7 & 1) == 0))
    {
      objc_msgSend(v3, "resignKeyWindow");
    }

    v4 = v8;
  }

}

uint64_t NoticePresenter.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter__notice;
  v2 = sub_100007E8C(&qword_1011E08E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  sub_10013C71C(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration, v3);
  sub_10004BA30(*(_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_willPresentHandler), *(_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_willPresentHandler + 8));

  return v0;
}

uint64_t NoticePresenter.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter__notice;
  v2 = sub_100007E8C(&qword_1011E08E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  sub_10013C71C(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration, v3);
  sub_10004BA30(*(_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_willPresentHandler), *(_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_willPresentHandler + 8));

  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100C0C22C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for NoticePresenter(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

void sub_100C0C268(uint64_t a1, char a2)
{
  _s11MusicCoreUI15NoticePresenterC7present_12internalOnlyy0aB00D0V_SbtF_0(a1, a2);
}

uint64_t View.noticePresenting(_:edge:padding:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t WitnessTable;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD v24[2];
  char v25;
  double v26;

  v20 = a5;
  v21 = a1;
  v10 = type metadata accessor for ModifiedContent(0, a3, &type metadata for NoticePresentingModifier);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin();
  v13 = (char *)&v20 - v12;
  v14 = type metadata accessor for NoticePresenter(0);
  v15 = sub_100048748(&qword_1011DE400, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
  v24[0] = EnvironmentObject.init()(v14, v15);
  v24[1] = v16;
  v25 = a2;
  v26 = a6;
  View.modifier<A>(_:)(v24, a3, &type metadata for NoticePresentingModifier, a4);
  swift_release();
  v17 = sub_100C0EF94();
  v22 = a4;
  v23 = v17;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v10);
  View.environmentObject<A>(_:)(v21, v10, v14, WitnessTable, v15);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

double NoticePresentingModifier.init(edge:padding:)(double a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for NoticePresenter(0);
  v3 = sub_100048748(&qword_1011DE400, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
  EnvironmentObject.init()(v2, v3);
  return a1;
}

void NoticePresentingModifier.controller.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  if (a1)
  {
    swift_retain();
  }
  else
  {
    v3 = type metadata accessor for NoticePresenter(0);
    v4 = sub_100048748(&qword_1011DE400, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
    EnvironmentObject.error()(0, a2, v3, v4);
    __break(1u);
  }
}

uint64_t NoticePresentingModifier.$controller.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for NoticePresenter(0);
  v5 = sub_100048748(&qword_1011DE400, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
  return EnvironmentObject.projectedValue.getter(a1, a2, v4, v5);
}

uint64_t NoticePresentingModifier.edge.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

void NoticePresentingModifier.padding.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 24) = a1;
}

void NoticePresentingModifier.body(content:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  __asm { BR              X10 }
}

uint64_t sub_100C0C554(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;

  v7 = static Alignment.top.getter(a1);
  v9 = v8;
  if (v3)
  {
    swift_retain();
    v10 = Edge.Set.init(_:)(v5);
    v11 = _s7SwiftUI10EdgeInsetsV09MusicCoreB0E_6lengthAcA0C0O3SetV_0F8Graphics7CGFloatVtcfC_0(v10, v6);
    v13 = v12;
    v15 = v14;
    v17 = v16;
    v18 = type metadata accessor for NoticePresenter(0);
    v19 = sub_100048748(&qword_1011DE400, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
    v20 = ObservedObject.init(wrappedValue:)(v3, v18, v19);
    v22 = v21;
    v23 = sub_100007E8C(&qword_1011E0920);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v1, v2, v23);
    result = sub_100007E8C(&qword_1011E0928);
    v25 = (uint64_t *)(v1 + *(int *)(result + 36));
    *v25 = v20;
    v25[1] = v22;
    *((double *)v25 + 2) = v11;
    v25[3] = v13;
    v25[4] = v15;
    v25[5] = v17;
    v25[6] = v7;
    v25[7] = v9;
  }
  else
  {
    v26 = type metadata accessor for NoticePresenter(0);
    v27 = sub_100048748(&qword_1011DE400, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
    result = EnvironmentObject.error()(0, v4, v26, v27);
    __break(1u);
  }
  return result;
}

void sub_100C0C68C()
{
  __asm { BR              X9 }
}

uint64_t sub_100C0C6D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;

  v7 = static Alignment.top.getter(a1);
  v9 = v8;
  if (v2)
  {
    swift_retain();
    v10 = Edge.Set.init(_:)(v4);
    v11 = _s7SwiftUI10EdgeInsetsV09MusicCoreB0E_6lengthAcA0C0O3SetV_0F8Graphics7CGFloatVtcfC_0(v10, v6);
    v13 = v12;
    v15 = v14;
    v17 = v16;
    v18 = type metadata accessor for NoticePresenter(0);
    v19 = sub_100048748(&qword_1011DE400, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
    v20 = ObservedObject.init(wrappedValue:)(v2, v18, v19);
    v22 = v21;
    v23 = sub_100007E8C(&qword_1011E0920);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v1, v5, v23);
    result = sub_100007E8C(&qword_1011E0928);
    v25 = (uint64_t *)(v1 + *(int *)(result + 36));
    *v25 = v20;
    v25[1] = v22;
    *((double *)v25 + 2) = v11;
    v25[3] = v13;
    v25[4] = v15;
    v25[5] = v17;
    v25[6] = v7;
    v25[7] = v9;
  }
  else
  {
    v26 = type metadata accessor for NoticePresenter(0);
    v27 = sub_100048748(&qword_1011DE400, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
    result = EnvironmentObject.error()(0, v3, v26, v27);
    __break(1u);
  }
  return result;
}

uint64_t sub_100C0C810@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  int *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t KeyPath;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  __int128 v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  double v52;
  char v53;
  double v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  double v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __n128 v76;
  __n128 v77;
  __n128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  double v82;
  double v83;
  uint64_t v84;
  __n128 v85;
  __n128 v86;
  __n128 v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  double v91;
  double v92;
  uint64_t v93;
  __n128 v94;
  __n128 v95;
  __n128 v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  __n128 v103;
  uint64_t v104;
  uint64_t v105;
  __int128 v106;
  __n128 v107;
  uint64_t v108;
  uint64_t v109;
  __int128 v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char v119;
  uint64_t v120;
  char v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  int v145;
  uint64_t v146;
  int v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  _QWORD *v153;
  uint64_t v154;
  uint64_t v155;
  unsigned __int8 v156;
  uint64_t v157;
  unsigned __int8 v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  __int128 v163;
  uint64_t v164;
  uint64_t v165;

  v153 = a2;
  v3 = (int *)type metadata accessor for NoticeView(0);
  __chkstk_darwin();
  v5 = (char *)&v130 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = sub_100007E8C(&qword_1011E0B60);
  __chkstk_darwin();
  v134 = (uint64_t)&v130 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = sub_100007E8C(&qword_1011E0B68);
  __chkstk_darwin();
  v135 = (uint64_t)&v130 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = sub_100007E8C(&qword_1011E0B70);
  __chkstk_darwin();
  v138 = (uint64_t)&v130 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = sub_100007E8C(&qword_1011E0B78);
  __chkstk_darwin();
  v140 = (uint64_t)&v130 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v150 = sub_100007E8C(&qword_1011E0B80);
  v151 = *(_QWORD *)(v150 - 8);
  __chkstk_darwin();
  v139 = (uint64_t)&v130 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011E08F0);
  __chkstk_darwin();
  v12 = (uint64_t *)((char *)&v130 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = type metadata accessor for Notice(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin();
  v16 = (char *)&v130 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v141 = (uint64_t)&v130 - v17;
  sub_100007E8C(&qword_1011E0B88);
  __chkstk_darwin();
  v152 = (uint64_t)&v130 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v142 = (uint64_t)&v130 - v19;
  v20 = *(_QWORD *)(a1 + 16);
  v21 = *(double *)(a1 + 24);
  v149 = *(_QWORD *)(a1 + 32);
  v22 = *(double *)(a1 + 40);
  v24 = static Alignment.center.getter(v23);
  _FrameLayout.init(width:height:alignment:)(&v155, 0, 1, v20, 0, v24, v25);
  v148 = v155;
  v147 = v156;
  v146 = v157;
  v145 = v158;
  v144 = v159;
  v143 = v160;
  v26 = *(_QWORD *)(a1 + 8);
  KeyPath = swift_getKeyPath(&unk_100EEC800);
  swift_getKeyPath(&unk_100EEC828);
  swift_retain();
  v136 = v26;
  static Published.subscript.getter(v12, v28, KeyPath);
  swift_release();
  swift_release();
  sub_1003E34C0(a1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_10004FF60((uint64_t)v12, &qword_1011E08F0);
    v29 = 1;
    v30 = v150;
    v31 = v142;
  }
  else
  {
    v32 = v141;
    sub_100C0F5C4((uint64_t)v12, v141);
    sub_10005B704(v32, (uint64_t)v16, type metadata accessor for Notice);
    v33 = &v5[v3[5]];
    *(_QWORD *)v33 = swift_getKeyPath(&unk_100EECA58);
    *((_QWORD *)v33 + 1) = 0;
    *((_WORD *)v33 + 8) = 0;
    v34 = &v5[v3[6]];
    v154 = 0x3FF0000000000000;
    State.init(wrappedValue:)(&v154, &type metadata for Double);
    v35 = v162;
    *(_QWORD *)v34 = v161;
    *((_QWORD *)v34 + 1) = v35;
    v36 = &v5[v3[7]];
    LOBYTE(v154) = 0;
    GestureState.init(wrappedValue:)(&v161, &v154, &type metadata for Bool);
    v37 = v162;
    v38 = v163;
    *v36 = v161;
    *((_QWORD *)v36 + 1) = v37;
    *((_OWORD *)v36 + 1) = v38;
    v39 = &v5[v3[8]];
    LOBYTE(v154) = 0;
    State.init(wrappedValue:)(&v154, &type metadata for Bool);
    v40 = v162;
    *v39 = v161;
    *((_QWORD *)v39 + 1) = v40;
    v41 = sub_100C0F5C4((uint64_t)v16, (uint64_t)v5);
    v42 = static Edge.Set.leading.getter(v41);
    v43 = EdgeInsets.init(_all:)(v21);
    v45 = v44;
    v47 = v46;
    v49 = v48;
    v50 = v134;
    sub_10005B704((uint64_t)v5, v134, type metadata accessor for NoticeView);
    v51 = v50 + *(int *)(v131 + 36);
    *(_BYTE *)v51 = v42;
    *(double *)(v51 + 8) = v43;
    *(_QWORD *)(v51 + 16) = v45;
    *(_QWORD *)(v51 + 24) = v47;
    *(_QWORD *)(v51 + 32) = v49;
    *(_BYTE *)(v51 + 40) = 0;
    sub_10005B748((uint64_t)v5, type metadata accessor for NoticeView);
    v53 = static Edge.Set.trailing.getter(v52);
    v54 = EdgeInsets.init(_all:)(v22);
    v56 = v55;
    v58 = v57;
    v60 = v59;
    v61 = v135;
    sub_10004A160(v50, v135, &qword_1011E0B60);
    v62 = v61 + *(int *)(v132 + 36);
    *(_BYTE *)v62 = v53;
    *(double *)(v62 + 8) = v54;
    *(_QWORD *)(v62 + 16) = v56;
    *(_QWORD *)(v62 + 24) = v58;
    *(_QWORD *)(v62 + 32) = v60;
    *(_BYTE *)(v62 + 40) = 0;
    v63 = sub_10004FF60(v50, &qword_1011E0B60);
    v64 = static Edge.Set.vertical.getter(v63);
    v65 = EdgeInsets.init(_all:)(0.0);
    v67 = v66;
    v69 = v68;
    v71 = v70;
    v72 = v138;
    sub_10004A160(v61, v138, &qword_1011E0B68);
    v73 = v72 + *(int *)(v133 + 36);
    *(_BYTE *)v73 = v64;
    *(double *)(v73 + 8) = v65;
    *(_QWORD *)(v73 + 16) = v67;
    *(_QWORD *)(v73 + 24) = v69;
    *(_QWORD *)(v73 + 32) = v71;
    *(_BYTE *)(v73 + 40) = 0;
    v74 = sub_10004FF60(v61, &qword_1011E0B68);
    v75 = static AnyTransition.opacity.getter(v74);
    v76.n128_u64[0] = 0x4072C00000000000;
    v77.n128_u64[0] = 0x4044000000000000;
    v78.n128_u64[0] = 1.0;
    v79 = static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)(v75, v78, v76, v77, 1.0);
    v80 = AnyTransition.animation(_:)(v79, v75);
    swift_release();
    swift_release();
    v82 = static UnitPoint.center.getter(v81);
    v84 = static AnyTransition.scale(scale:anchor:)(0.85, v82, v83);
    v85.n128_u64[0] = 0x4081300000000000;
    v86.n128_u64[0] = 1.0;
    v87.n128_u64[0] = 26.0;
    v88 = static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)(v84, v86, v85, v87, 1.0);
    v89 = AnyTransition.animation(_:)(v88, v84);
    swift_release();
    swift_release();
    v91 = static UnitPoint.center.getter(v90);
    v93 = static AnyTransition.scale(scale:anchor:)(0.9, v91, v92);
    v94.n128_u64[0] = 0x4083600000000000;
    v95.n128_u64[0] = 0x4049000000000000;
    v96.n128_u64[0] = 1.0;
    v97 = static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)(v93, v96, v94, v95, 1.0);
    v98 = AnyTransition.animation(_:)(v97, v93);
    swift_release();
    swift_release();
    v99 = static AnyTransition.asymmetric(insertion:removal:)(v89, v98);
    swift_release();
    swift_release();
    v100 = AnyTransition.combined(with:)(v99, v80);
    swift_release();
    swift_release();
    v101 = v140;
    sub_10004A160(v72, v140, &qword_1011E0B70);
    *(_QWORD *)(v101 + *(int *)(v137 + 36)) = v100;
    sub_10004FF60(v72, &qword_1011E0B70);
    v102 = swift_getKeyPath(&unk_100EECA58);
    type metadata accessor for MainActor(0);
    v103 = swift_retain();
    v104 = static MainActor.shared.getter(v103);
    v105 = swift_allocObject(&unk_101108A50, 80, 7);
    *(_QWORD *)(v105 + 16) = v104;
    *(_QWORD *)(v105 + 24) = &protocol witness table for MainActor;
    v106 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v105 + 32) = *(_OWORD *)a1;
    *(_OWORD *)(v105 + 48) = v106;
    *(_OWORD *)(v105 + 64) = *(_OWORD *)(a1 + 32);
    v107 = swift_retain();
    v108 = static MainActor.shared.getter(v107);
    v109 = swift_allocObject(&unk_101108A78, 80, 7);
    *(_QWORD *)(v109 + 16) = v108;
    *(_QWORD *)(v109 + 24) = &protocol witness table for MainActor;
    v110 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v109 + 32) = *(_OWORD *)a1;
    *(_OWORD *)(v109 + 48) = v110;
    *(_OWORD *)(v109 + 64) = *(_OWORD *)(a1 + 32);
    Binding.init(get:set:)(&v161, sub_100C0F614, v105, sub_100C0F650, v109, &type metadata for Bool);
    v111 = v161;
    v112 = v162;
    LOBYTE(v105) = v163;
    v113 = v139;
    sub_10004A160(v101, v139, &qword_1011E0B78);
    v114 = v150;
    v115 = v113 + *(int *)(v150 + 36);
    *(_QWORD *)v115 = v102;
    *(_QWORD *)(v115 + 8) = v111;
    *(_QWORD *)(v115 + 16) = v112;
    *(_BYTE *)(v115 + 24) = v105;
    sub_10004FF60(v101, &qword_1011E0B78);
    sub_10005B748(v141, type metadata accessor for Notice);
    v31 = v142;
    sub_100065228(v113, v142, &qword_1011E0B80);
    v29 = 0;
    v30 = v114;
  }
  v116 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v151 + 56))(v31, v29, 1, v30);
  v117 = static Alignment.center.getter(v116);
  _FrameLayout.init(width:height:alignment:)(&v161, 0, 1, v149, 0, v117, v118);
  v151 = v161;
  v119 = v162;
  v120 = v163;
  v121 = BYTE8(v163);
  v122 = v164;
  v123 = v165;
  v124 = v152;
  sub_10004A160(v31, v152, &qword_1011E0B88);
  v125 = v153;
  *v153 = 0;
  *((_BYTE *)v125 + 8) = 1;
  v125[2] = v148;
  *((_BYTE *)v125 + 24) = v147;
  v125[4] = v146;
  *((_BYTE *)v125 + 40) = v145;
  v126 = v143;
  v125[6] = v144;
  v125[7] = v126;
  v127 = sub_100007E8C(&qword_1011E0B90);
  sub_10004A160(v124, (uint64_t)v125 + *(int *)(v127 + 48), &qword_1011E0B88);
  v128 = (char *)v125 + *(int *)(v127 + 64);
  *(_QWORD *)v128 = 0;
  v128[8] = 1;
  *((_QWORD *)v128 + 2) = v151;
  v128[24] = v119;
  *((_QWORD *)v128 + 4) = v120;
  v128[40] = v121;
  *((_QWORD *)v128 + 6) = v122;
  *((_QWORD *)v128 + 7) = v123;
  sub_10004FF60(v31, &qword_1011E0B88);
  return sub_10004FF60(v124, &qword_1011E0B88);
}

uint64_t sub_100C0D270@<X0>(uint64_t a1@<X2>, _BYTE *a2@<X8>)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  sub_100007E8C(&qword_1011E08F0);
  __chkstk_darwin();
  v5 = (uint64_t *)((char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  KeyPath = swift_getKeyPath(&unk_100EEC800);
  swift_getKeyPath(&unk_100EEC828);
  swift_retain();
  static Published.subscript.getter(v5, v7, KeyPath);
  swift_release();
  swift_release();
  sub_1003E34C0(a1);
  v8 = type metadata accessor for Notice(0);
  LOBYTE(a1) = (*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v5, 1, v8) != 1;
  result = sub_10004FF60((uint64_t)v5, &qword_1011E08F0);
  *a2 = a1;
  return result;
}

_BYTE *sub_100C0D374(_BYTE *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((*result & 1) == 0)
  {
    swift_retain();
    NoticePresenter.dismiss(_:)(1);
    return (_BYTE *)sub_1003E34C0(a4);
  }
  return result;
}

uint64_t sub_100C0D3BC@<X0>(uint64_t a1@<X8>)
{
  _OWORD *v1;
  uint64_t v3;
  char *v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  _OWORD v13[3];

  sub_100007E8C((uint64_t *)&unk_1011E4D10);
  __chkstk_darwin();
  v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v1[1];
  v13[0] = *v1;
  v13[1] = v5;
  v13[2] = v1[2];
  *(_QWORD *)v4 = static HorizontalAlignment.center.getter(v6);
  *((_QWORD *)v4 + 1) = 0;
  v4[16] = 1;
  v7 = sub_100007E8C(&qword_1011E0B58);
  v8 = sub_100C0C810((uint64_t)v13, &v4[*(int *)(v7 + 44)]);
  v9 = static Alignment.center.getter(v8);
  sub_100C879A8(0, 1, 0.0, 1, INFINITY, 0, 0, 1, a1, v11, 0.0, 1, 0.0, 1, v9, v10);
  return sub_10004FF60((uint64_t)v4, (uint64_t *)&unk_1011E4D10);
}

uint64_t JSShareRequest.RequestContent.contentType.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t NoticePresenter.UIKitConfiguration.edge.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = result;
  return result;
}

double NoticePresenter.UIKitConfiguration.insets.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

void NoticePresenter.UIKitConfiguration.insets.setter(double a1, double a2, double a3, double a4)
{
  double *v4;

  v4[3] = a1;
  v4[4] = a2;
  v4[5] = a3;
  v4[6] = a4;
}

id sub_100C0D50C(uint64_t a1, double a2, double a3)
{
  void *v3;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id result;
  void *v13;
  unsigned __int8 v14;
  objc_super v15;

  v15.receiver = v3;
  v15.super_class = (Class)type metadata accessor for NoticePresenter.PassthroughWindow();
  v7 = objc_msgSendSuper2(&v15, "hitTest:withEvent:", a1, a2, a3);
  v8 = v7;
  if (*((_BYTE *)v3
       + OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C117PassthroughWindow_canReceiveTouches) != 1)
  {
    v9 = v7;
LABEL_8:

    return 0;
  }
  if (!v7)
    return v8;
  v9 = v7;
  v10 = objc_msgSend(v3, "rootViewController");
  if (!v10)
  {

    goto LABEL_8;
  }
  v11 = v10;
  result = objc_msgSend(v10, "view");
  if (result)
  {
    v13 = result;
    v14 = objc_msgSend(v9, "isDescendantOfView:", result);

    if ((v14 & 1) != 0)
      return v8;
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

id sub_100C0D840()
{
  return sub_10015C40C((uint64_t (*)(_QWORD))type metadata accessor for NoticePresenter.PassthroughWindow);
}

id sub_100C0D84C(uint64_t a1)
{
  char *v1;
  void *v2;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  unsigned int v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(_BYTE *, _QWORD);
  double *v16;
  id result;
  void *v18;
  void *v19;
  _BYTE v20[32];

  v2 = v1;
  v4 = (uint64_t)&v1[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_configuration];
  v5 = swift_beginAccess(&v1[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_configuration], v20, 33, 0);
  sub_100C0EED8(a1, v4, v5);
  swift_endAccess(v20);
  if (!objc_msgSend(v1, "isViewLoaded"))
    return (id)sub_10013C71C(a1, v6);
  v7 = Edge.Set.init(_:)(*(unsigned __int8 *)(v4 + 8));
  v8 = _s7SwiftUI10EdgeInsetsV09MusicCoreB0E_6lengthAcA0C0O3SetV_0F8Graphics7CGFloatVtcfC_0(v7, *(double *)(v4 + 16));
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v15 = (void (*)(_BYTE *, _QWORD))dispatch thunk of UIHostingController.rootView.modify(v20);
  v16[2] = v8;
  *((_QWORD *)v16 + 3) = v10;
  *((_QWORD *)v16 + 4) = v12;
  *((_QWORD *)v16 + 5) = v14;
  v15(v20, 0);
  result = objc_msgSend(v1, "view");
  if (result)
  {
    v18 = result;
    objc_msgSend(result, "setNeedsLayout");

    result = objc_msgSend(v2, "view");
    if (result)
    {
      v19 = result;
      objc_msgSend(result, "layoutIfNeeded");

      return (id)sub_10013C71C(a1, v6);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_100C0DAB0()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  double *v6;
  unsigned int v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(_BYTE *, _QWORD);
  double *v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  _BYTE v23[32];
  char v24[24];
  objc_super v25;

  v1 = v0;
  v25.receiver = v0;
  v25.super_class = (Class)type metadata accessor for NoticePresenter.UIRootViewController();
  objc_msgSendSuper2(&v25, "viewDidLoad");
  v2 = *(void **)&v0[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_hostingController];
  v3 = objc_msgSend(v2, "view");
  if (!v3)
  {
    __break(1u);
    goto LABEL_7;
  }
  v4 = v3;
  v5 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  objc_msgSend(v4, "setBackgroundColor:", v5);

  v6 = (double *)&v1[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_configuration];
  swift_beginAccess(&v1[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_configuration], v24, 0, 0);
  v7 = Edge.Set.init(_:)(*((unsigned __int8 *)v6 + 8));
  v8 = _s7SwiftUI10EdgeInsetsV09MusicCoreB0E_6lengthAcA0C0O3SetV_0F8Graphics7CGFloatVtcfC_0(v7, v6[2]);
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v15 = (void (*)(_BYTE *, _QWORD))dispatch thunk of UIHostingController.rootView.modify(v23);
  v16[2] = v8;
  *((_QWORD *)v16 + 3) = v10;
  *((_QWORD *)v16 + 4) = v12;
  *((_QWORD *)v16 + 5) = v14;
  v15(v23, 0);
  v17 = objc_msgSend(v1, "view");
  if (!v17)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v18 = v17;
  v19 = objc_msgSend(v2, "view");
  if (!v19)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v20 = v19;
  objc_msgSend(v18, "addSubview:", v19);

  v21 = objc_msgSend(v2, "view");
  if (v21)
  {
    v22 = v21;
    objc_msgSend(v21, "layoutIfNeeded");

    return;
  }
LABEL_9:
  __break(1u);
}

void sub_100C0DCA0()
{
  char *v0;
  id v1;
  void *v2;
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  double v7;
  id v8;
  uint64_t v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  char *v22;
  char isEscapingClosureAtFileLocation;
  uint64_t v24;
  double v25;
  double v26;
  double v27;
  id v28;
  double v29;
  double v30;
  char v31[24];
  _QWORD aBlock[3];
  double v33;
  uint64_t (*v34)();
  double v35;
  double v36;
  objc_super v37;

  v37.receiver = v0;
  v37.super_class = (Class)type metadata accessor for NoticePresenter.UIRootViewController();
  objc_msgSendSuper2(&v37, "viewDidLayoutSubviews");
  v1 = objc_msgSend(v0, "view");
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, "bounds");

    v3 = (uint64_t)&v0[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_configuration];
    swift_beginAccess(&v0[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_configuration], v31, 0, 0);
    sub_100C0EE88(v3, (uint64_t)aBlock, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
    v4 = v33;
    v5 = *(double *)&v34;
    v6 = v35;
    v7 = v36;
    v8 = objc_msgSend(v0, "view");
    if (!v8)
    {
LABEL_7:
      __break(1u);
      JUMPOUT(0x100C0E09CLL);
    }
    v10 = v8;
    sub_10013C71C((uint64_t)aBlock, v9);
    objc_msgSend(v10, "effectiveUserInterfaceLayoutDirection");

    v11 = CGRect.inset(by:for:)(v4, v5, v6, v7);
    v13 = v12;
    v15 = v14;
    v17 = v16;
    v18 = (void *)objc_opt_self(UIView);
    v19 = swift_allocObject(&unk_101108AA0, 24, 7);
    *(_QWORD *)(v19 + 16) = v0;
    v20 = swift_allocObject(&unk_101108AC8, 32, 7);
    *(_QWORD *)(v20 + 16) = sub_100C0F680;
    *(_QWORD *)(v20 + 24) = v19;
    *(double *)&v34 = COERCE_DOUBLE(sub_10010942C);
    v35 = *(double *)&v20;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10046D7B4;
    v33 = COERCE_DOUBLE(&unk_101108AE0);
    v21 = _Block_copy(aBlock);
    v22 = v0;
    swift_retain();
    objc_msgSend(v18, "performWithoutAnimation:", v21, swift_release().n128_f64[0]);
    _Block_release(v21);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v20, "", 129, 462, 44, 1);
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      v25 = dispatch thunk of UIHostingController.sizeThatFits(in:)(v24, v15, v17);
      v27 = v26;
      v28 = objc_msgSend(v22, "traitCollection");
      objc_msgSend(v28, "displayScale");
      v30 = v29;

      CGRect.centeringAlong(axes:bounds:scale:)(3, v11, v13, v15, v17, v30, 0.0, 0.0, v25, v27);
      __asm { BR              X10 }
    }
    __break(1u);
  }
  __break(1u);
  goto LABEL_7;
}

void sub_100C0E0B0(uint64_t a1)
{
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;

  v1 = *(void **)(a1
                + OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_hostingController);
  v2 = objc_msgSend(v1, "view");
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, "setNeedsLayout");

    v4 = objc_msgSend(v1, "view");
    if (v4)
    {
      v5 = v4;
      objc_msgSend(v4, "layoutIfNeeded");

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_100C0E1AC()
{
  return sub_10015C40C((uint64_t (*)(_QWORD))type metadata accessor for NoticePresenter.UIRootViewController);
}

uint64_t sub_100C0E200()
{
  uint64_t result;

  result = swift_slowAlloc(1, -1);
  qword_1011E08E0 = result;
  return result;
}

char *UIWindowScene.noticePresenter.getter()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  _BYTE v10[24];
  uint64_t v11;
  _OWORD v12[2];

  v1 = v0;
  if (qword_1011DE080 != -1)
    swift_once(&qword_1011DE080, sub_100C0E200);
  v2 = objc_getAssociatedObject(v0, (const void *)qword_1011E08E0);
  if (v2)
  {
    v3 = v2;
    _bridgeAnyObjectToAny(_:)(v12, v2);
    swift_unknownObjectRelease(v3);
  }
  else
  {
    memset(v12, 0, sizeof(v12));
  }
  sub_100065228((uint64_t)v12, (uint64_t)v10, &qword_1011E0700);
  if (!v11)
  {
    sub_10004FF60((uint64_t)v10, &qword_1011E0700);
    goto LABEL_10;
  }
  v4 = type metadata accessor for NoticePresenter(0);
  if ((swift_dynamicCast(&v9, v10, (char *)&type metadata for Any + 8, v4, 6) & 1) == 0)
  {
LABEL_10:
    v6 = type metadata accessor for NoticePresenter(0);
    v5 = (char *)swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
    NoticePresenter.init()();
    objc_setAssociatedObject(v1, (const void *)qword_1011E08E0, v5, (void *)1);
    v7 = (uint64_t)&v5[OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration];
    swift_beginAccess(&v5[OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration], v12, 0, 0);
    sub_100C0EE88(v7, (uint64_t)v10, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
    swift_unknownObjectWeakAssign(v10, v1);
    NoticePresenter.uiKitConfiguration.setter((uint64_t)v10);
    return v5;
  }
  return (char *)v9;
}

char *UIView.noticePresenter.getter()
{
  void *v0;
  char *v1;
  char *v2;
  id v3;

  v1 = (char *)objc_msgSend(v0, "window");
  v2 = v1;
  if (v1)
  {
    v3 = objc_msgSend(v1, "windowScene");

    if (v3)
    {
      v2 = UIWindowScene.noticePresenter.getter();

    }
    else
    {
      return 0;
    }
  }
  return v2;
}

char *UIViewController.noticePresenter.getter()
{
  void *v0;
  char *result;
  char *v2;
  char *v3;
  char *v4;
  id v5;
  uint64_t v6;

  if (!objc_msgSend(v0, "isViewLoaded"))
  {
    v4 = (char *)objc_msgSend(v0, "parentViewController");
    if (v4)
    {
      v6 = UIViewController.noticePresenter.getter();

      return (char *)v6;
    }
    return v4;
  }
  result = (char *)objc_msgSend(v0, "view");
  if (result)
  {
    v2 = result;
    v3 = (char *)objc_msgSend(result, "window");
    v4 = v3;
    if (v3)
    {
      v5 = objc_msgSend(v3, "windowScene");

      if (v5)
      {
        v4 = UIWindowScene.noticePresenter.getter();

      }
      else
      {

        return 0;
      }
    }
    else
    {

    }
    return v4;
  }
  __break(1u);
  return result;
}

uint64_t _s11MusicCoreUI15NoticePresenterC18UIKitConfigurationV23__derived_struct_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  void *Strong;
  void *v5;
  void *v6;
  id v7;
  char v8;
  uint64_t v9;
  int v10;
  char v11;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(a1);
  v5 = (void *)swift_unknownObjectWeakLoadStrong(a2);
  v6 = v5;
  if (Strong)
  {
    if (v5)
    {
      sub_10004A07C(0, &qword_1011E06B8, UIWindowScene_ptr);
      v7 = Strong;
      v8 = static NSObject.== infix(_:_:)(v7, v6);

      if ((v8 & 1) != 0)
        goto LABEL_7;
    }
    else
    {

    }
LABEL_11:
    v11 = 0;
    return v11 & 1;
  }
  if (v5)
  {

    goto LABEL_11;
  }
LABEL_7:
  v9 = *(unsigned __int8 *)(a2 + 8);
  v10 = Edge.rawValue.getter(*(unsigned __int8 *)(a1 + 8));
  if (v10 != Edge.rawValue.getter(v9) || *(double *)(a1 + 16) != *(double *)(a2 + 16))
    goto LABEL_11;
  v11 = vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 24), *(float64x2_t *)(a2 + 24)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 40), *(float64x2_t *)(a2 + 40)))), 0xFuLL)));
  return v11 & 1;
}

char *sub_100C0E60C(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  char *v6;
  double *v7;
  uint64_t v8;
  char *v9;
  unsigned int v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  objc_class *v22;
  char *v23;
  void *v24;
  char *v25;
  uint64_t v26;
  uint64_t v28;
  objc_super v29;
  _QWORD v30[6];
  char v31[24];

  type metadata accessor for UIHostingControllerSizingOptions(0);
  __chkstk_darwin();
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v2[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController__noticePresenter] = a1;
  v7 = (double *)&v2[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_configuration];
  sub_100C0EE88(a2, (uint64_t)&v2[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_configuration], (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
  swift_beginAccess(v7, v31, 0, 0);
  v8 = *((unsigned __int8 *)v7 + 8);
  swift_retain_n(a1, 2);
  v9 = v2;
  v10 = Edge.Set.init(_:)(v8);
  v11 = _s7SwiftUI10EdgeInsetsV09MusicCoreB0E_6lengthAcA0C0O3SetV_0F8Graphics7CGFloatVtcfC_0(v10, v7[2]);
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v18 = type metadata accessor for NoticePresenter(0);
  v19 = sub_100048748(&qword_1011DE400, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
  v30[0] = ObservedObject.init(wrappedValue:)(a1, v18, v19);
  v30[1] = v20;
  *(double *)&v30[2] = v11;
  v30[3] = v13;
  v30[4] = v15;
  v30[5] = v17;
  v21 = objc_allocWithZone((Class)sub_100007E8C(&qword_1011E0BA0));
  *(_QWORD *)&v9[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_hostingController] = UIHostingController.init(rootView:)(v30);

  v22 = (objc_class *)type metadata accessor for NoticePresenter.UIRootViewController();
  v29.receiver = v9;
  v29.super_class = v22;
  v23 = (char *)objc_msgSendSuper2(&v29, "initWithNibName:bundle:", 0, 0);
  v24 = *(void **)&v23[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_hostingController];
  v25 = v23;
  static UIHostingControllerSizingOptions.intrinsicContentSize.getter();
  dispatch thunk of UIHostingController.sizingOptions.setter(v6);
  objc_msgSend(v25, "addChildViewController:", v24);
  objc_msgSend(v24, "didMoveToParentViewController:", v25);

  sub_10013C71C(a2, v26);
  return v25;
}

void _s11MusicCoreUI15NoticePresenterC7present_12internalOnlyy0aB00D0V_SbtF_0(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(void ***, __n128);
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  char *v27;
  id v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  char *v56;
  char *v57;
  void (*v58)(char *, uint64_t);
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __n128 v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  _QWORD *v70;
  char v71[24];
  char v72[24];
  void **aBlock;
  uint64_t v74;
  uint64_t (*v75)(uint64_t);
  void *v76;
  void (*v77)();
  uint64_t v78;
  char v79[32];

  v3 = v2;
  v6 = type metadata accessor for DispatchTime(0);
  v69 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v68 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v9 = (char *)&v64 - v8;
  v66 = type metadata accessor for DispatchWorkItemFlags(0);
  __chkstk_darwin();
  v67 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (int *)type metadata accessor for Notice(0);
  v12 = *((_QWORD *)v11 - 1);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin();
  v14 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0 || *DeviceCapabilities.isInternalInstall.unsafeMutableAddressor() == 1)
  {
    v64 = v9;
    v65 = v6;
    v15 = v3 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_willPresentHandler;
    swift_beginAccess(v3 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_willPresentHandler, v79, 0, 0);
    v16 = *(void (**)(void ***, __n128))v15;
    if (*(_QWORD *)v15)
    {
      v17 = *(_QWORD *)(v15 + 8);
      v18 = v3 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration;
      swift_beginAccess(v3 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration, v72, 0, 0);
      sub_100C0EE88(v18, (uint64_t)&aBlock, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
      v19 = swift_retain();
      v16(&aBlock, v19);
      sub_10004BA30((uint64_t)v16, v17);
      NoticePresenter.uiKitConfiguration.setter((uint64_t)&aBlock);
    }
    v20 = v3 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration;
    swift_beginAccess(v3 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration, v71, 0, 0);
    sub_100C0EE88(v20, (uint64_t)&aBlock, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
    v21 = (void *)swift_unknownObjectWeakLoadStrong(&aBlock);
    sub_10013C71C((uint64_t)&aBlock, v22);
    if (v21)
    {
      if (!*(_QWORD *)(v3 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_passthroughWindow))
      {
        v23 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for NoticePresenter.PassthroughWindow()), "initWithWindowScene:", v21);
        objc_msgSend(v23, "setWindowLevel:", UIWindowLevelStatusBar);
        sub_100C0EE88(v20, (uint64_t)&aBlock, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
        v24 = objc_allocWithZone((Class)type metadata accessor for NoticePresenter.UIRootViewController());
        v25 = v23;
        swift_retain();
        v27 = sub_100C0E60C(v26, (uint64_t)&aBlock);
        objc_msgSend(v25, "setRootViewController:", v27, swift_release().n128_f64[0]);

        objc_msgSend(v25, "makeKeyAndVisible");
        objc_msgSend(v25, "resignKeyWindow");
        v28 = v25;
        sub_100C0C068(v25);

        v21 = v28;
      }

    }
    v29 = *(_BYTE **)(v3 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_passthroughWindow);
    if (v29)
    {
      v29[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C117PassthroughWindow_canReceiveTouches] = 1;
      objc_msgSend(v29, "makeKeyAndVisible");
    }
    v30 = objc_opt_self(UIView);
    sub_10005B704(a1, (uint64_t)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for Notice);
    v31 = *(unsigned __int8 *)(v12 + 80);
    v32 = (v31 + 24) & ~v31;
    v33 = swift_allocObject(&unk_101108B18, v32 + v13, v31 | 7);
    *(_QWORD *)(v33 + 16) = v3;
    sub_100C0F5C4((uint64_t)v14, v33 + v32);
    v34 = swift_allocObject(&unk_101108B40, 32, 7);
    *(_QWORD *)(v34 + 16) = sub_100C0F7CC;
    *(_QWORD *)(v34 + 24) = v33;
    v77 = (void (*)())sub_1001095DC;
    v78 = v34;
    aBlock = _NSConcreteStackBlock;
    v74 = 1107296256;
    v75 = sub_10046D7B4;
    v76 = &unk_101108B58;
    v35 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    objc_msgSend((id)v30, "performWithoutAnimation:", v35, swift_release().n128_f64[0]);
    _Block_release(v35);
    LOBYTE(v30) = swift_isEscapingClosureAtFileLocation(v34, "", 129, 163, 40, 1);
    swift_release();
    if ((v30 & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      v36 = a1 + v11[9];
      if ((*(_BYTE *)(v36 + 8) & 1) == 0)
      {
        v37 = *(_QWORD *)v36;
        v38 = objc_msgSend(objc_allocWithZone((Class)UINotificationFeedbackGenerator), "init");
        objc_msgSend(v38, "notificationOccurred:", v37);

      }
      if (*(_BYTE *)(a1 + v11[10]) == 1)
      {
        v77 = sub_100C0F80C;
        v78 = v3;
        aBlock = _NSConcreteStackBlock;
        v74 = 1107296256;
        v75 = sub_1001DBD98;
        v76 = &unk_101108B80;
        v39 = _Block_copy(&aBlock);
        v70 = _swiftEmptyArrayStorage;
        v40 = sub_100048748((unint64_t *)&unk_1011E06D0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
        swift_retain();
        v41 = sub_100007E8C(&qword_1011DECE8);
        v42 = sub_100049F28((unint64_t *)&qword_1011E06E0, &qword_1011DECE8, (uint64_t)&protocol conformance descriptor for [A]);
        v43 = v67;
        dispatch thunk of SetAlgebra.init<A>(_:)(&v70, v41, v42, v66, v40);
        v44 = type metadata accessor for DispatchWorkItem(0);
        swift_allocObject(v44, *(unsigned int *)(v44 + 48), *(unsigned __int16 *)(v44 + 52));
        v45 = DispatchWorkItem.init(flags:block:)(v43, v39);
        swift_release();
        if (*(_QWORD *)(a1 + v11[8]))
          v46 = 3.0;
        else
          v46 = 1.5;
        v47 = sub_10004A07C(0, (unint64_t *)&qword_1011DF580, OS_dispatch_queue_ptr);
        v55 = (void *)static OS_dispatch_queue.main.getter(v47, v48, v49, v50, v51, v52, v53, v54);
        v56 = v68;
        static DispatchTime.now()(v55);
        v57 = v64;
        + infix(_:_:)(v56, v46);
        v58 = *(void (**)(char *, uint64_t))(v69 + 8);
        v59 = v56;
        v60 = v65;
        v58(v59, v65);
        OS_dispatch_queue.asyncAfter(deadline:execute:)(v57, v45);

        v58(v57, v60);
        v61 = *(_QWORD *)(v3 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_dismissalWorkItem);
        *(_QWORD *)(v3 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_dismissalWorkItem) = v45;
        v62 = swift_retain_n(v45, 2);
        if (v61)
        {
          dispatch thunk of DispatchWorkItem.cancel()(v62);
          swift_release();
        }
        v63 = swift_release();
        swift_release_n(v45, 2, v63);
      }
      else
      {
        swift_release();
      }
    }
  }
}

uint64_t sub_100C0EE88(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  __int128 v5;

  a3(a2, a1);
  *(_BYTE *)(a2 + 8) = *(_BYTE *)(a1 + 8);
  *(_QWORD *)(a2 + 16) = *(_QWORD *)(a1 + 16);
  v5 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(a2 + 24) = v5;
  return a2;
}

uint64_t sub_100C0EED8(uint64_t a1, uint64_t a2, __n128 a3)
{
  swift_unknownObjectWeakCopyAssign(a2, a1, a3);
  *(_BYTE *)(a2 + 8) = *(_BYTE *)(a1 + 8);
  *(_QWORD *)(a2 + 16) = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a2 + 24) = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a2 + 48) = *(_QWORD *)(a1 + 48);
  return a2;
}

uint64_t type metadata accessor for NoticePresenter.UIRootViewController()
{
  return objc_opt_self(_TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController);
}

uint64_t type metadata accessor for NoticePresenter(uint64_t a1)
{
  uint64_t result;

  result = qword_1011E0958;
  if (!qword_1011E0958)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for NoticePresenter);
  return result;
}

unint64_t sub_100C0EF94()
{
  unint64_t result;

  result = qword_1011E0918;
  if (!qword_1011E0918)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for NoticePresentingModifier, &type metadata for NoticePresentingModifier);
    atomic_store(result, (unint64_t *)&qword_1011E0918);
  }
  return result;
}

uint64_t sub_100C0EFD8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of NoticePresentingModifier.body(content:)>>, 1);
}

uint64_t sub_100C0EFF0()
{
  return type metadata accessor for NoticePresenter(0);
}

void sub_100C0EFF8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  sub_100C0F084(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = "\b";
    v4[2] = &unk_100EEC940;
    v4[3] = &unk_100EEC958;
    v4[4] = "\b";
    swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
  }
}

void sub_100C0F084(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1011E0968)
  {
    v2 = sub_100044B54(&qword_1011E08F0);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1011E0968);
  }
}

uint64_t initializeWithCopy for NoticePresentingModifier(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  *(_QWORD *)(a1 + 24) = a2[3];
  swift_retain(v3);
  return a1;
}

uint64_t *assignWithCopy for NoticePresentingModifier(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a1;
  v5 = *a2;
  *a1 = *a2;
  swift_retain(v5);
  swift_release(v4);
  a1[1] = a2[1];
  *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
  a1[3] = a2[3];
  return a1;
}

uint64_t *assignWithTake for NoticePresentingModifier(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  a1[1] = a2[1];
  *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
  a1[3] = a2[3];
  return a1;
}

ValueMetadata *type metadata accessor for NoticePresentingModifier()
{
  return &type metadata for NoticePresentingModifier;
}

double initializeWithCopy for NoticePresenter.UIKitConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double result;

  *(_QWORD *)&result = sub_100C0F238(a1, a2, a3, (uint64_t (*)(void))&_swift_unknownObjectWeakCopyInit).n128_u64[0];
  return result;
}

double assignWithCopy for NoticePresenter.UIKitConfiguration(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v4;
  double result;

  v4 = swift_unknownObjectWeakCopyAssign(a1, a2, a3);
  *(_BYTE *)(v4 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(v4 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v4 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(v4 + 40) = *(_QWORD *)(a2 + 40);
  result = *(double *)(a2 + 48);
  *(double *)(v4 + 48) = result;
  return result;
}

double initializeWithTake for NoticePresenter.UIKitConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double result;

  *(_QWORD *)&result = sub_100C0F238(a1, a2, a3, (uint64_t (*)(void))&_swift_unknownObjectWeakTakeInit).n128_u64[0];
  return result;
}

__n128 sub_100C0F238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v5;
  __n128 result;

  v5 = a4();
  *(_BYTE *)(v5 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(v5 + 24) = *(_OWORD *)(a2 + 24);
  result = *(__n128 *)(a2 + 40);
  *(__n128 *)(v5 + 40) = result;
  return result;
}

double assignWithTake for NoticePresenter.UIKitConfiguration(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v4;
  __int128 v5;
  double result;

  v4 = swift_unknownObjectWeakTakeAssign(a1, a2, a3);
  *(_BYTE *)(v4 + 8) = *(_BYTE *)(a2 + 8);
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v4 + 32) = v5;
  result = *(double *)(a2 + 48);
  *(double *)(v4 + 48) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for NoticePresenter.UIKitConfiguration(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 56))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = v3 >= 4;
  v5 = v3 - 4;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for NoticePresenter.UIKitConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 56) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 3;
  }
  return result;
}

ValueMetadata *type metadata accessor for NoticePresenter.UIKitConfiguration()
{
  return &type metadata for NoticePresenter.UIKitConfiguration;
}

uint64_t type metadata accessor for NoticePresenter.PassthroughWindow()
{
  return objc_opt_self(_TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C117PassthroughWindow);
}

uint64_t sub_100C0F374(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = type metadata accessor for ModifiedContent(255, *a1, &type metadata for NoticePresentingModifier);
  v2 = sub_100044B54(&qword_1011E0B28);
  v3 = type metadata accessor for ModifiedContent(255, v1, v2);
  sub_100C0EF94();
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
  sub_100049F28(&qword_1011E0B30, &qword_1011E0B28, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v3);
}

unint64_t sub_100C0F42C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E0B38;
  if (!qword_1011E0B38)
  {
    v1 = sub_100044B54(&qword_1011E0928);
    sub_100049F28(&qword_1011E0B40, &qword_1011E0920, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    sub_100049F28(&qword_1011E0B48, &qword_1011E0B50, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E0B38);
  }
  return result;
}

uint64_t initializeWithCopy for NoticePresentationView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  swift_retain(v3);
  return a1;
}

_QWORD *assignWithCopy for NoticePresentationView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  return a1;
}

uint64_t assignWithTake for NoticePresentationView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_release(v5);
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  return a1;
}

ValueMetadata *type metadata accessor for NoticePresentationView()
{
  return &type metadata for NoticePresentationView;
}

uint64_t sub_100C0F5B4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FBC36C, 1);
}

uint64_t sub_100C0F5C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Notice(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100C0F614@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_100C0D270(v1 + 32, a1);
}

uint64_t sub_100C0F624()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 80, 7);
}

_BYTE *sub_100C0F650(_BYTE *a1)
{
  uint64_t v1;

  return sub_100C0D374(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + 32);
}

uint64_t sub_100C0F65C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100C0F680()
{
  uint64_t v0;

  sub_100C0E0B0(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100C0F688()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100C0F698(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100C0F6A8(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_100C0F6B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v9;

  v1 = type metadata accessor for Notice(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  swift_release();
  swift_bridgeObjectRelease();
  v5 = v0 + v3 + *(int *)(v1 + 20);
  v6 = type metadata accessor for Notice.Thumbnail(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v5, v6);
    if (EnumCaseMultiPayload == 1)
    {
      v9 = type metadata accessor for Artwork(0);
      (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v5, v9);
    }
    else if (!EnumCaseMultiPayload)
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + v3 + *(int *)(v1 + 32)))
    swift_release();
  return swift_deallocObject(v0, v3 + v4);
}

void sub_100C0F7CC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Notice(0) - 8) + 80);
  sub_100C0B9D0(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_100C0F7FC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100C0F80C()
{
  NoticePresenter.dismiss(_:)(1);
}

unint64_t sub_100C0F818()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E0BA8;
  if (!qword_1011E0BA8)
  {
    v1 = sub_100044B54(&qword_1011E0BB0);
    sub_100049F28(&qword_1011E0BB8, (uint64_t *)&unk_1011E4D10, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E0BA8);
  }
  return result;
}

uint64_t sub_100C0F964()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;
  int *v7;

  v1 = (_QWORD *)v0[2];
  v2 = v1[3];
  v3 = v1[4];
  sub_100007E68(v1, v2);
  v4 = *(int **)(v3 + 24);
  v7 = (int *)((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc(v4[1]);
  v0[11] = v5;
  *v5 = v0;
  v5[1] = sub_100C0F9E4;
  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t))v7)(v0[4], v2, v3);
}

uint64_t sub_100C0F9E4()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 88));
  return swift_task_switch(sub_100C0FA30, *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80));
}

uint64_t sub_100C0FA30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = swift_release();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v2 + 48))(v3, 1, v1, v4) == 1)
  {
    sub_100BAAE84(*(_QWORD *)(v0 + 32));
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 48);
    v5 = *(_QWORD *)(v0 + 56);
    v7 = *(_QWORD *)(v0 + 40);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 32))(v5, *(_QWORD *)(v0 + 32), v7);
    PresentedViewState.present(_:animated:)(v5, 1);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  }
  v8 = *(_QWORD *)(v0 + 32);
  swift_task_dealloc(*(_QWORD *)(v0 + 56));
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100C0FAE4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1011E0BC4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10005AEE4;
  return PresentedViewState<A>.present(_:)(a1);
}

uint64_t sub_100C0FB34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t OpaqueTypeConformance2;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t KeyPath;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned __int8 v46;
  char v47[24];

  v37 = a2;
  v40 = a1;
  v43 = a4;
  v5 = sub_100007E8C(&qword_1011E0BE8);
  v38 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_100007E8C(&qword_1011E0BF0);
  __chkstk_darwin();
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_100007E8C(&qword_1011E0BF8);
  v39 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin();
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011DE770);
  __chkstk_darwin();
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for URL(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin();
  v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a3 + *(_QWORD *)(*(_QWORD *)a3 + 96);
  swift_beginAccess(v18, v47, 0, 0);
  sub_100C10090(v18, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_100BAAE84((uint64_t)v13);
    v19 = v38;
    v20 = *(void (**)(char *, uint64_t, uint64_t))(v38 + 16);
    v20(v7, v40, v5);
    v20(v9, (uint64_t)v7, v5);
    swift_storeEnumTagMultiPayload(v9, v41, 1);
    v21 = sub_100049F28(&qword_1011E0C00, &qword_1011E0BE8, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    v44 = v5;
    v45 = v21;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v44, &opaque type descriptor for <<opaque return type of View.sharingPicker(isPresented:item:subject:message:)>>, 1);
    _ConditionalContent<>.init(storage:)(v9, v42, v5, OpaqueTypeConformance2, v21);
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v7, v5);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
    v24 = sub_100007E8C(&qword_1011E0BC8);
    v25 = sub_100049F28(&qword_1011E0BD0, &qword_1011E0BC8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
    v26 = ObservedObject.projectedValue.getter(v37, a3, v24, v25);
    KeyPath = swift_getKeyPath(&unk_100EECB18);
    ObservedObject.Wrapper.subscript.getter(&v44, KeyPath, v26, v25);
    swift_release();
    swift_release();
    v28 = v44;
    v29 = v45;
    v30 = v46;
    v31 = sub_100049F28(&qword_1011E0C00, &qword_1011E0BE8, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    View.sharingPicker(isPresented:item:subject:message:)(v28, v29, v30, v17, 0, 0, 0, 0, 0, 0, 0, 0, v5, v31);
    swift_release();
    v32 = swift_release();
    v33 = v39;
    v34 = v42;
    (*(void (**)(char *, char *, uint64_t, __n128))(v39 + 16))(v9, v11, v42, v32);
    swift_storeEnumTagMultiPayload(v9, v41, 0);
    v44 = v5;
    v45 = v31;
    v35 = swift_getOpaqueTypeConformance2(&v44, &opaque type descriptor for <<opaque return type of View.sharingPicker(isPresented:item:subject:message:)>>, 1);
    _ConditionalContent<>.init(storage:)(v9, v34, v5, v35, v31);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v11, v34);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
}

uint64_t sub_100C0FF1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_100C0FB34(a1, *v2, v2[1], a2);
}

double View.shareSheetPresenting(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double result;
  _QWORD v12[2];

  swift_retain(a1);
  v6 = sub_100007E8C(&qword_1011E0BC8);
  v7 = sub_100049F28(&qword_1011E0BD0, &qword_1011E0BC8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  v8 = ObservedObject.init(wrappedValue:)(a1, v6, v7);
  v10 = v9;
  v12[0] = v8;
  v12[1] = v9;
  View.modifier<A>(_:)(v12, a2, &type metadata for ShareSheetModifier, a3);
  *(_QWORD *)&result = swift_release(v10).n128_u64[0];
  return result;
}

uint64_t sub_100C0FFD8(_QWORD *a1)
{
  uint64_t v1;

  v1 = type metadata accessor for ModifiedContent(255, *a1, &type metadata for ShareSheetModifier);
  sub_100C1002C();
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
}

unint64_t sub_100C1002C()
{
  unint64_t result;

  result = qword_1011E0BE0;
  if (!qword_1011E0BE0)
  {
    result = swift_getWitnessTable(&unk_100EECAC4, &type metadata for ShareSheetModifier);
    atomic_store(result, (unint64_t *)&qword_1011E0BE0);
  }
  return result;
}

ValueMetadata *type metadata accessor for ShareSheetModifier()
{
  return &type metadata for ShareSheetModifier;
}

uint64_t sub_100C10080(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FBC40C, 1);
}

uint64_t sub_100C10090(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011DE770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100C100D8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = PresentedViewState.isPresented.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100C10104(char *a1)
{
  return PresentedViewState.isPresented.setter(*a1);
}

unint64_t sub_100C1012C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011E0C08;
  if (!qword_1011E0C08)
  {
    v1 = sub_100044B54(&qword_1011E0C10);
    v2[0] = sub_100044B54(&qword_1011E0BE8);
    v2[1] = sub_100049F28(&qword_1011E0C00, &qword_1011E0BE8, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.sharingPicker(isPresented:item:subject:message:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E0C08);
  }
  return result;
}

uint64_t Optional<A>.fontTextStyle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = enum case for Font.TextStyle.body(_:);
  v3 = type metadata accessor for Font.TextStyle(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_100C10220@<X0>(uint64_t a1@<X8>)
{
  return Optional<A>.fontTextStyle.getter(a1);
}

uint64_t sub_100C10234(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, a2);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t MusicUIContentConfiguration.makeContentView()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v12;

  v5 = *(_QWORD *)(a1 - 8);
  __chkstk_darwin(a1);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v8, a1, &protocol requirements base descriptor for MusicUIContentConfiguration, &associated type descriptor for MusicUIContentConfiguration.View);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, a1);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(a2, a1, AssociatedTypeWitness, &protocol requirements base descriptor for MusicUIContentConfiguration, &associated conformance descriptor for MusicUIContentConfiguration.MusicUIContentConfiguration.View: MusicUIContentView);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(AssociatedConformanceWitness + 32))(v7, AssociatedTypeWitness, AssociatedConformanceWitness);
}

uint64_t MusicUIContentConfiguration.updated(for:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(a2, v2, a1);
}

uint64_t MusicUIContentView.configuration.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t AssociatedTypeWitness;

  v6 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 40);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, a2, a1, &protocol requirements base descriptor for MusicUIContentView, &associated type descriptor for MusicUIContentView.Configuration);
  a3[3] = AssociatedTypeWitness;
  a3[4] = *(_QWORD *)(swift_getAssociatedConformanceWitness(a2, a1, AssociatedTypeWitness, &protocol requirements base descriptor for MusicUIContentView, &associated conformance descriptor for MusicUIContentView.MusicUIContentView.Configuration: MusicUIContentConfiguration)+ 16);
  sub_100049F68(a3);
  return v6(a1, a2);
}

uint64_t MusicUIContentView.configuration.setter(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v12[40];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, a3, a2, &protocol requirements base descriptor for MusicUIContentView, &associated type descriptor for MusicUIContentView.Configuration);
  __chkstk_darwin(AssociatedTypeWitness);
  v8 = &v12[-v7 - 8];
  sub_100064C78((uint64_t)a1, (uint64_t)v12);
  v9 = sub_100007E8C(&qword_1011DECE0);
  swift_dynamicCast(v8, v12, v9, AssociatedTypeWitness, 7);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(a3 + 48))(v8, a2, a3);
  return _s5Music18DragDropToPlaylistV6OriginVwxx_0(a1);
}

void (*MusicUIContentView.configuration.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t *a1, char a2)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = malloc(0x68uLL);
  *a1 = v7;
  v7[11] = a3;
  v7[12] = v3;
  v7[10] = a2;
  MusicUIContentView.configuration.getter(a2, a3, v7);
  return sub_100C10528;
}

void sub_100C10528(uint64_t *a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = (_QWORD *)*a1;
  if ((a2 & 1) != 0)
  {
    v3 = v2[11];
    v4 = v2[10];
    sub_100064C78(*a1, (uint64_t)(v2 + 5));
    MusicUIContentView.configuration.setter(v2 + 5, v4, v3);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v2);
  }
  else
  {
    MusicUIContentView.configuration.setter((_QWORD *)*a1, v2[10], v2[11]);
  }
  free(v2);
}

uint64_t ArtistRazzmatazzView.init(artist:navigationHandler:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD v17[2];

  v8 = type metadata accessor for ArtistRazzmatazzView(0);
  v9 = (_QWORD *)(a4 + *(int *)(v8 + 24));
  v16 = _swiftEmptyArrayStorage;
  v10 = sub_100007E8C(&qword_1011DF450);
  State.init(wrappedValue:)(&v16, v10);
  v11 = v17[1];
  *v9 = v17[0];
  v9[1] = v11;
  v17[0] = 0x4052C00000000000;
  v12 = sub_100C10714();
  ScaledMetric.init(wrappedValue:)(v17, &type metadata for CGFloat, v12);
  v13 = type metadata accessor for Artist(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a4, a1, v13);
  v15 = (_QWORD *)(a4 + *(int *)(v8 + 20));
  *v15 = a2;
  v15[1] = a3;
  return result;
}

uint64_t type metadata accessor for ArtistRazzmatazzView(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011E0CC0, (uint64_t)&nominal type descriptor for ArtistRazzmatazzView);
}

uint64_t property wrapper backing initializer of ArtistRazzmatazzView.razzmatazz(uint64_t a1)
{
  uint64_t v1;
  _QWORD v3[2];

  v3[0] = a1;
  v1 = sub_100007E8C(&qword_1011DF450);
  State.init(wrappedValue:)(v3, v1);
  return v3[1];
}

uint64_t property wrapper backing initializer of ArtistRazzmatazzView.rowHeight(double a1)
{
  unint64_t v1;
  double v3;

  v3 = a1;
  v1 = sub_100C10714();
  return ScaledMetric.init(wrappedValue:)(&v3, &type metadata for CGFloat, v1);
}

unint64_t sub_100C10714()
{
  unint64_t result;

  result = qword_1011E0C28;
  if (!qword_1011E0C28)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_1011E0C28);
  }
  return result;
}

uint64_t ArtistRazzmatazzView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(_QWORD *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v41 = a1;
  v42 = type metadata accessor for TaskPriority(0);
  v40 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin();
  v39 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = *(_QWORD *)(type metadata accessor for ArtistRazzmatazzView(0) - 8);
  __chkstk_darwin();
  v36 = v3;
  v37 = (uint64_t)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011E0C30);
  __chkstk_darwin();
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for GridItem.Size(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = (uint64_t *)((char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_100007E8C(&qword_1011E0C38);
  v11 = type metadata accessor for GridItem(0);
  v12 = swift_allocObject(v10, ((*(unsigned __int8 *)(*(_QWORD *)(v11 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v11 - 8) + 80))+ 2 * *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v11 - 8) + 80) | 7);
  *(_OWORD *)(v12 + 16) = xmmword_100EA7A80;
  v38 = v1;
  v13 = sub_100007E8C(&qword_1011E0C40);
  ScaledMetric.wrappedValue.getter(&v43, v13);
  *v9 = v43;
  v14 = enum case for GridItem.Size.fixed(_:);
  v15 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v7 + 104);
  v15(v9, enum case for GridItem.Size.fixed(_:), v6);
  GridItem.init(_:spacing:alignment:)(v9, 0, 1, 0, 0, 1);
  ScaledMetric.wrappedValue.getter(&v43, v13);
  *v9 = v43;
  v15(v9, v14, v6);
  v16 = GridItem.init(_:spacing:alignment:)(v9, 0, 1, 0, 0, 1);
  v17 = static HorizontalAlignment.leading.getter(v16);
  if (qword_1011DE090 != -1)
    swift_once(&qword_1011DE090, sub_100C13050);
  v18 = qword_1011E0C20;
  *(_QWORD *)v5 = v17;
  *((_QWORD *)v5 + 1) = v18;
  v5[16] = 0;
  v19 = sub_100007E8C(&qword_1011E0C48);
  v20 = v38;
  sub_100C10AE0(v12, v38, (uint64_t)&v5[*(int *)(v19 + 44)]);
  swift_bridgeObjectRelease();
  v21 = v37;
  sub_10005B704(v20, v37, type metadata accessor for ArtistRazzmatazzView);
  v22 = *(unsigned __int8 *)(v35 + 80);
  v23 = (v22 + 16) & ~v22;
  v24 = swift_allocObject(&unk_101108D90, v23 + v36, v22 | 7);
  sub_10005B6C0(v21, v24 + v23, type metadata accessor for ArtistRazzmatazzView);
  v25 = v39;
  static TaskPriority.userInitiated.getter(v26);
  v27 = sub_100007E8C(&qword_1011E0C60);
  v28 = v41;
  v29 = (char *)(v41 + *(int *)(v27 + 36));
  v30 = type metadata accessor for _TaskModifier(0);
  v31 = v40;
  v32 = v42;
  (*(void (**)(char *, char *, uint64_t))(v40 + 16))(&v29[*(int *)(v30 + 20)], v25, v42);
  *(_QWORD *)v29 = &unk_1011E0C58;
  *((_QWORD *)v29 + 1) = v24;
  sub_10004A160((uint64_t)v5, v28, &qword_1011E0C30);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v25, v32);
  return sub_10004FF60((uint64_t)v5, &qword_1011E0C30);
}

void sub_100C10AE0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int v37;
  unsigned int v38;
  uint64_t v39;
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  double v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  __int128 v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  __int128 v90;
  uint64_t v91;
  char v92[16];
  uint64_t v93;
  uint64_t v94;
  _OWORD v95[5];
  uint64_t v96;
  char v97;

  *(_QWORD *)&v90 = a1;
  *(_QWORD *)&v80 = type metadata accessor for ScrollIndicatorVisibility(0);
  v79 = *(_QWORD *)(v80 - 8);
  __chkstk_darwin();
  v6 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = sub_100007E8C(&qword_1011E0ED0);
  v76 = *(_QWORD *)(v77 - 8);
  __chkstk_darwin();
  v8 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v85 = sub_100007E8C(&qword_1011E0ED8);
  *(_QWORD *)&v84 = *(_QWORD *)(v85 - 8);
  __chkstk_darwin();
  *(_QWORD *)&v81 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = sub_100007E8C(&qword_1011E0EE0);
  __chkstk_darwin();
  v11 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = sub_100007E8C(&qword_1011E0EE8);
  __chkstk_darwin();
  v91 = (uint64_t)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v83 = (uint64_t)&v73 - v13;
  __chkstk_darwin();
  v89 = (uint64_t)&v73 - v14;
  v16 = static Font.title2.getter(v15);
  v17 = Text.font(_:)(v16, 0x6174616D7A7A6152, 0xEA00000000007A7ALL, 0, _swiftEmptyArrayStorage);
  v19 = v18;
  v21 = v20;
  v23 = v22;
  swift_release();
  v25 = static Font.Weight.semibold.getter(v24);
  v87 = Text.fontWeight(_:)(*(_QWORD *)&v25, 0, v17, v19, v21 & 1, v23);
  v86 = v26;
  v74 = v27;
  v88 = v28;
  sub_100055BAC(v17, v19, v21 & 1);
  swift_bridgeObjectRelease();
  v30 = static Edge.Set.horizontal.getter(v29);
  v75 = v30;
  v31 = static Axis.Set.horizontal.getter(v30);
  v93 = v90;
  v94 = a2;
  *(_QWORD *)&v90 = a2;
  v32 = sub_100007E8C(&qword_1011E0EF0);
  v33 = sub_10005610C(&qword_1011E0EF8, &qword_1011E0EF0, (void (*)(void))sub_100C146D8);
  v34 = ScrollView.init(_:showsIndicators:content:)(v31, 1, sub_100C146D0, v92, v32, v33);
  v35 = static ScrollIndicatorVisibility.hidden.getter(v34);
  v36 = static Axis.Set.vertical.getter(v35);
  v37 = v36;
  v38 = static Axis.Set.horizontal.getter(v36);
  v39 = Axis.Set.init(rawValue:)(0);
  v40 = Axis.Set.init(rawValue:)(v39);
  if (Axis.Set.init(rawValue:)(v40 & v37) != v37)
    v39 = Axis.Set.init(rawValue:)(v39 | v37);
  v41 = Axis.Set.init(rawValue:)(v39);
  if (Axis.Set.init(rawValue:)(v41 & v38) != v38)
    v39 = Axis.Set.init(rawValue:)(v39 | v38);
  v42 = v81;
  v43 = sub_100049F28(&qword_1011E0F20, &qword_1011E0ED0, (uint64_t)&protocol conformance descriptor for ScrollView<A>);
  v44 = v77;
  View.scrollIndicators(_:axes:)(v6, v39, v77, v43);
  (*(void (**)(char *, _QWORD))(v79 + 8))(v6, v80);
  v45 = (*(uint64_t (**)(char *, uint64_t))(v76 + 8))(v8, v44);
  v46 = static Edge.Set.bottom.getter(v45);
  if (qword_1011DE088 != -1)
    swift_once(&qword_1011DE088, sub_100C13040);
  v47 = v74 & 1;
  v48 = EdgeInsets.init(_all:)(*(double *)&qword_1011E0C18);
  v50 = v49;
  v52 = v51;
  v54 = v53;
  v55 = v84;
  v56 = v85;
  (*(void (**)(char *, uint64_t, _QWORD))(v84 + 16))(v11, v42, v85);
  v57 = &v11[*(int *)(v78 + 36)];
  *v57 = v46;
  *((double *)v57 + 1) = v48;
  *((_QWORD *)v57 + 2) = v50;
  *((_QWORD *)v57 + 3) = v52;
  *((_QWORD *)v57 + 4) = v54;
  v57[40] = 0;
  v58 = (*(uint64_t (**)(uint64_t, uint64_t))(v55 + 8))(v42, v56);
  v59 = static Alignment.center.getter(v58);
  v61 = v60;
  sub_100C116A8(v90, (uint64_t)v95);
  v90 = v95[0];
  v85 = v95[1];
  v84 = v95[2];
  v81 = v95[3];
  v80 = v95[4];
  v62 = v96;
  v63 = v97;
  v64 = v83;
  sub_10004A160((uint64_t)v11, v83, &qword_1011E0EE0);
  v65 = v64 + *(int *)(v82 + 36);
  v66 = v85;
  *(_OWORD *)v65 = v90;
  *(_OWORD *)(v65 + 16) = v66;
  v67 = v81;
  *(_OWORD *)(v65 + 32) = v84;
  *(_OWORD *)(v65 + 48) = v67;
  *(_OWORD *)(v65 + 64) = v80;
  *(_QWORD *)(v65 + 80) = v62;
  *(_BYTE *)(v65 + 88) = v63;
  *(_QWORD *)(v65 + 96) = v59;
  *(_QWORD *)(v65 + 104) = v61;
  sub_10004FF60((uint64_t)v11, &qword_1011E0EE0);
  v68 = v89;
  sub_100065228(v64, v89, &qword_1011E0EE8);
  v69 = v91;
  sub_10004A160(v68, v91, &qword_1011E0EE8);
  v70 = v87;
  v71 = v86;
  *(_QWORD *)a3 = v87;
  *(_QWORD *)(a3 + 8) = v71;
  *(_BYTE *)(a3 + 16) = v47;
  *(_QWORD *)(a3 + 24) = v88;
  *(_BYTE *)(a3 + 32) = v75;
  *(_OWORD *)(a3 + 40) = 0u;
  *(_OWORD *)(a3 + 56) = 0u;
  *(_BYTE *)(a3 + 72) = 1;
  v72 = sub_100007E8C(&qword_1011E0F28);
  sub_10004A160(v69, a3 + *(int *)(v72 + 48), &qword_1011E0EE8);
  sub_100055BBC(v70, v71, v47);
  swift_bridgeObjectRetain();
  sub_10004FF60(v68, &qword_1011E0EE8);
  sub_10004FF60(v69, &qword_1011E0EE8);
  sub_100055BAC(v70, v71, v47);
  swift_bridgeObjectRelease();
}

uint64_t sub_100C11164@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _OWORD v34[3];

  v31 = a2;
  v33 = a3;
  v4 = type metadata accessor for PinnedScrollableViews(0);
  __chkstk_darwin();
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_100007E8C(&qword_1011E0F18);
  v30 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin();
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_100007E8C(&qword_1011E0F08);
  __chkstk_darwin();
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = swift_bridgeObjectRetain();
  v12 = static VerticalAlignment.center.getter(v11);
  if (qword_1011DE088 != -1)
    swift_once(&qword_1011DE088, sub_100C13040);
  v13 = qword_1011E0C18;
  __chkstk_darwin();
  LODWORD(v34[0]) = 0;
  v14 = sub_100048748(&qword_1011E0F30, (uint64_t (*)(uint64_t))&type metadata accessor for PinnedScrollableViews, (uint64_t)&protocol conformance descriptor for PinnedScrollableViews);
  dispatch thunk of OptionSet.init(rawValue:)(v34, v4, v14);
  sub_100007E8C(&qword_1011E0F38);
  sub_100C1476C();
  LazyHGrid.init(rows:alignment:spacing:pinnedViews:content:)(a1, v12, v13, 0, v6, sub_100C14764);
  type metadata accessor for ArtistRazzmatazzView(0);
  v15 = sub_100007E8C(&qword_1011E0C40);
  v16 = ScaledMetric.wrappedValue.getter(v34, v15);
  v17 = (*(double *)v34 + *(double *)&qword_1011E0C18) * (double)*(uint64_t *)(a1 + 16);
  v18 = static Alignment.center.getter(v16);
  _FrameLayout.init(width:height:alignment:)(v34, 0, 1, *(_QWORD *)&v17, 0, v18, v19);
  v20 = v30;
  v21 = v32;
  (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v10, v8, v32);
  v22 = &v10[*(int *)(v29 + 36)];
  v23 = v34[1];
  *(_OWORD *)v22 = v34[0];
  *((_OWORD *)v22 + 1) = v23;
  *((_OWORD *)v22 + 2) = v34[2];
  v24 = (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v8, v21);
  LOBYTE(v21) = static Edge.Set.horizontal.getter(v24);
  v25 = v33;
  sub_10004A160((uint64_t)v10, v33, &qword_1011E0F08);
  v26 = v25 + *(int *)(sub_100007E8C(&qword_1011E0EF0) + 36);
  *(_BYTE *)v26 = v21;
  *(_OWORD *)(v26 + 8) = 0u;
  *(_OWORD *)(v26 + 24) = 0u;
  *(_BYTE *)(v26 + 40) = 1;
  return sub_10004FF60((uint64_t)v10, &qword_1011E0F08);
}

uint64_t sub_100C11458(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v20[3];

  v2 = *(_QWORD *)(type metadata accessor for ArtistRazzmatazzView(0) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  __chkstk_darwin();
  v5 = (uint64_t *)(a1 + *(int *)(v4 + 24));
  v7 = *v5;
  v6 = v5[1];
  v20[1] = v7;
  v20[2] = v6;
  v8 = sub_100007E8C(&qword_1011E0EC8);
  State.wrappedValue.getter(v20, v8);
  KeyPath = swift_getKeyPath(&unk_100EECE58);
  sub_10005B704(a1, (uint64_t)&v20[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ArtistRazzmatazzView);
  v10 = *(unsigned __int8 *)(v2 + 80);
  v11 = (v10 + 16) & ~v10;
  v12 = swift_allocObject(&unk_101108DE0, v11 + v3, v10 | 7);
  sub_10005B6C0((uint64_t)&v20[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v12 + v11, type metadata accessor for ArtistRazzmatazzView);
  v13 = sub_100007E8C(&qword_1011DF450);
  v14 = type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell(0);
  v15 = sub_100049F28(&qword_1011E0F50, &qword_1011DF450, (uint64_t)&protocol conformance descriptor for [A]);
  v16 = sub_100048748(&qword_1011E0F58, type metadata accessor for Razzmatazz, (uint64_t)&protocol conformance descriptor for Razzmatazz);
  v17 = sub_100048748(&qword_1011E0F48, type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell, (uint64_t)&unk_100EECCC0);
  return ForEach<>.init(_:id:content:)(v20, KeyPath, sub_100C148B8, v12, v13, v14, v15, v16, v17);
}

uint64_t sub_100C11600@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _QWORD *v11;
  uint64_t v12;

  sub_10005B704(a1, a3, type metadata accessor for Razzmatazz);
  v5 = (uint64_t *)(a2 + *(int *)(type metadata accessor for ArtistRazzmatazzView(0) + 20));
  v7 = *v5;
  v6 = v5[1];
  swift_retain();
  v8 = sub_100007E8C(&qword_1011E0C40);
  ScaledMetric.wrappedValue.getter(&v12, v8);
  v9 = v12;
  result = type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell(0);
  v11 = (_QWORD *)(a3 + *(int *)(result + 20));
  *v11 = v7;
  v11[1] = v6;
  *(_QWORD *)(a3 + *(int *)(result + 24)) = v9;
  return result;
}

void sub_100C116A8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  int64x2_t v15;
  uint64_t v16;
  Swift::String v17;
  Swift::String v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t KeyPath;
  unsigned __int8 v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for ArtistRazzmatazzView(0) + 24));
  v5 = *v3;
  v4 = v3[1];
  v26 = v5;
  v27 = v4;
  v6 = sub_100007E8C(&qword_1011E0EC8);
  State.wrappedValue.getter(&v28, v6);
  v7 = *(_QWORD *)(v28 + 16);
  swift_bridgeObjectRelease();
  v8 = 0uLL;
  if (v7)
  {
    v9 = 0;
    v10 = 0;
    v11 = 0;
    v12 = 0;
    v13 = 0;
    v14 = 0;
    v15 = 0uLL;
  }
  else
  {
    _StringGuts.grow(_:)(25);
    swift_bridgeObjectRelease();
    HIDWORD(v26) = -805306368;
    v27 = 0x8000000100E56100;
    v17._countAndFlagsBits = Artist.name.getter(v16);
    String.append(_:)(v17);
    swift_bridgeObjectRelease();
    v18._countAndFlagsBits = 46;
    v18._object = (void *)0xE100000000000000;
    String.append(_:)(v18);
    LODWORD(v26) = static HierarchicalShapeStyle.secondary.getter(v19);
    v9 = Text.foregroundStyle<A>(_:)(&v26, 0xD000000000000016, 0x8000000100E56100, 0, _swiftEmptyArrayStorage, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
    v10 = v20;
    v22 = v21;
    v12 = v23;
    swift_bridgeObjectRelease();
    v11 = v22 & 1;
    KeyPath = swift_getKeyPath(&unk_100EECE20);
    v25 = static Edge.Set.horizontal.getter(KeyPath);
    v8 = 0uLL;
    v13 = v25;
    v14 = 1;
    v15 = vdupq_n_s64(1uLL);
    v15.i64[0] = KeyPath;
  }
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v10;
  *(_QWORD *)(a2 + 16) = v11;
  *(_QWORD *)(a2 + 24) = v12;
  *(int64x2_t *)(a2 + 32) = v15;
  *(_QWORD *)(a2 + 48) = v13;
  *(_OWORD *)(a2 + 56) = v8;
  *(_OWORD *)(a2 + 72) = v8;
  *(_BYTE *)(a2 + 88) = v14;
}

uint64_t sub_100C11840(uint64_t a1)
{
  _QWORD *v1;
  __n128 v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v1[6] = a1;
  v1[7] = type metadata accessor for MainActor(0);
  v1[8] = static MainActor.shared.getter(v3);
  v6 = (uint64_t (*)(uint64_t))((char *)&dword_1011E1488 + dword_1011E1488);
  v4 = (_QWORD *)swift_task_alloc(unk_1011E148C);
  v1[9] = v4;
  *v4 = v1;
  v4[1] = sub_100C118C0;
  return v6(a1);
}

uint64_t sub_100C118C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  *(_QWORD *)(*(_QWORD *)v1 + 80) = a1;
  swift_task_dealloc(v2);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  return swift_task_switch(sub_100C11938, v4, v5);
}

uint64_t sub_100C11938()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 48);
  swift_release();
  *(_QWORD *)(v0 + 32) = v1;
  KeyPath = swift_getKeyPath(&unk_100EECE00);
  v4 = sub_100007E8C(&qword_1011DF450);
  v5 = sub_100049F28((unint64_t *)&qword_1011E0EB8, &qword_1011DF450, (uint64_t)&protocol conformance descriptor for [A]);
  v6 = sub_100048748(&qword_1011E0EC0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  v7 = Sequence.sorted<A>(by:comparator:)(KeyPath, (uint64_t)sub_100C1EA04, 0, v4, v5, v6);
  swift_release();
  swift_bridgeObjectRelease();
  v8 = (uint64_t *)(v2 + *(int *)(type metadata accessor for ArtistRazzmatazzView(0) + 24));
  v10 = *v8;
  v9 = v8[1];
  *(_QWORD *)(v0 + 16) = v10;
  *(_QWORD *)(v0 + 24) = v9;
  *(_QWORD *)(v0 + 40) = v7;
  v11 = sub_100007E8C(&qword_1011E0EC8);
  State.wrappedValue.setter(v0 + 40, v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100C11A58@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  char v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  __int128 v34;
  id v35;
  uint64_t v36;
  char v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  _OWORD v47[3];

  v2 = v1;
  v46 = a1;
  sub_100007E8C(&qword_1011E0DB8);
  __chkstk_darwin();
  v4 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011E0DC0);
  __chkstk_darwin();
  v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011E0DC8);
  __chkstk_darwin();
  v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011E0DD0);
  __chkstk_darwin();
  v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1011DE088 != -1)
    v12 = swift_once(&qword_1011DE088, sub_100C13040);
  v15 = qword_1011E0C18;
  *(_QWORD *)v4 = static VerticalAlignment.center.getter(v12);
  *((_QWORD *)v4 + 1) = v15;
  v4[16] = 0;
  v16 = sub_100007E8C(&qword_1011E0DD8);
  v17 = sub_100C11DE0(v2, (uint64_t)&v4[*(int *)(v16 + 44)]);
  if (qword_1011DE090 != -1)
    v17 = swift_once(&qword_1011DE090, sub_100C13050);
  v18 = *(double *)&qword_1011E0C20;
  v19 = static Edge.Set.all.getter(v17);
  v20 = EdgeInsets.init(_all:)(v18);
  v22 = v21;
  v24 = v23;
  v26 = v25;
  sub_10004A160((uint64_t)v4, (uint64_t)v7, &qword_1011E0DB8);
  v27 = &v7[*(int *)(v5 + 36)];
  *v27 = v19;
  *((double *)v27 + 1) = v20;
  *((_QWORD *)v27 + 2) = v22;
  *((_QWORD *)v27 + 3) = v24;
  *((_QWORD *)v27 + 4) = v26;
  v27[40] = 0;
  sub_10004FF60((uint64_t)v4, &qword_1011E0DB8);
  v28 = type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell(0);
  v29 = *(double *)(v2 + *(int *)(v28 + 24)) * 4.0;
  v30 = *(_QWORD *)(v2 + *(int *)(v28 + 24));
  v31 = static Alignment.center.getter(v28);
  _FrameLayout.init(width:height:alignment:)(v47, *(_QWORD *)&v29, 0, v30, 0, v31, v32);
  sub_10004A160((uint64_t)v7, (uint64_t)v10, &qword_1011E0DC0);
  v33 = &v10[*(int *)(v8 + 36)];
  v34 = v47[1];
  *(_OWORD *)v33 = v47[0];
  *((_OWORD *)v33 + 1) = v34;
  *((_OWORD *)v33 + 2) = v47[2];
  sub_10004FF60((uint64_t)v7, &qword_1011E0DC0);
  v35 = objc_msgSend((id)objc_opt_self(UIColor), "secondarySystemBackgroundColor");
  v36 = Color.init(_:)(v35);
  v37 = static Edge.Set.all.getter(v36);
  sub_10004A160((uint64_t)v10, (uint64_t)v14, &qword_1011E0DC8);
  v38 = &v14[*(int *)(v11 + 36)];
  *(_QWORD *)v38 = v36;
  v38[8] = v37;
  sub_10004FF60((uint64_t)v10, &qword_1011E0DC8);
  if (qword_1011DE060 != -1)
    swift_once(&qword_1011DE060, sub_100C09EF4);
  v39 = static Corner.large;
  v40 = unk_10124FDE0;
  v41 = byte_10124FDE8;
  v42 = v46;
  sub_10004A160((uint64_t)v14, v46, &qword_1011E0DD0);
  v43 = v42 + *(int *)(sub_100007E8C(&qword_1011E0DE0) + 36);
  *(_QWORD *)v43 = v39;
  *(_QWORD *)(v43 + 8) = v40;
  *(_BYTE *)(v43 + 16) = v41;
  return sub_10004FF60((uint64_t)v14, &qword_1011E0DD0);
}

uint64_t sub_100C11DE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  __int128 v32;
  id v33;
  uint64_t v34;
  char v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char *v49;
  __n128 v50;
  uint64_t v51;
  uint64_t KeyPath;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _OWORD v72[3];

  v71 = a2;
  v3 = type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell(0);
  v61 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v62 = v4;
  v64 = (uint64_t)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011E0DE8);
  v68 = *(_QWORD *)(v5 - 8);
  v69 = v5;
  __chkstk_darwin();
  v67 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_100007E8C(&qword_1011E0DF0);
  __chkstk_darwin();
  v8 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v70 = (uint64_t)&v61 - v9;
  sub_100007E8C(&qword_1011E0DF8);
  __chkstk_darwin();
  v11 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011E0E00);
  __chkstk_darwin();
  v14 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(&qword_1011E0E08);
  __chkstk_darwin();
  v17 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100007E8C(&qword_1011E0E10);
  __chkstk_darwin();
  v20 = (char *)&v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v63 = (uint64_t)&v61 - v21;
  *(_QWORD *)v11 = static HorizontalAlignment.center.getter(v22);
  *((_QWORD *)v11 + 1) = 0;
  v11[16] = 1;
  v23 = sub_100007E8C(&qword_1011E0E18);
  v25 = sub_100C123A8(a1, (uint64_t)&v11[*(int *)(v23 + 44)], v24);
  v26 = *(int *)(v3 + 24);
  v65 = a1;
  v27 = *(double *)(a1 + v26);
  if (qword_1011DE090 != -1)
    v25 = swift_once(&qword_1011DE090, sub_100C13050);
  v28 = v27 - (*(double *)&qword_1011E0C20 + *(double *)&qword_1011E0C20);
  v29 = static Alignment.center.getter(v25);
  _FrameLayout.init(width:height:alignment:)(v72, *(_QWORD *)&v28, 0, *(_QWORD *)&v28, 0, v29, v30);
  sub_10004A160((uint64_t)v11, (uint64_t)v14, &qword_1011E0DF8);
  v31 = &v14[*(int *)(v12 + 36)];
  v32 = v72[1];
  *(_OWORD *)v31 = v72[0];
  *((_OWORD *)v31 + 1) = v32;
  *((_OWORD *)v31 + 2) = v72[2];
  sub_10004FF60((uint64_t)v11, &qword_1011E0DF8);
  v33 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
  v34 = Color.init(_:)(v33);
  v35 = static Edge.Set.all.getter(v34);
  sub_10004A160((uint64_t)v14, (uint64_t)v17, &qword_1011E0E00);
  v36 = &v17[*(int *)(v15 + 36)];
  *(_QWORD *)v36 = v34;
  v36[8] = v35;
  sub_10004FF60((uint64_t)v14, &qword_1011E0E00);
  if (qword_1011DE058 != -1)
    swift_once(&qword_1011DE058, sub_100C09E08);
  v37 = static Corner.medium;
  v38 = *(_QWORD *)algn_10124FDC8;
  v39 = byte_10124FDD0;
  sub_10004A160((uint64_t)v17, (uint64_t)v20, &qword_1011E0E08);
  v40 = &v20[*(int *)(v18 + 36)];
  *(_QWORD *)v40 = v37;
  *((_QWORD *)v40 + 1) = v38;
  v40[16] = v39;
  sub_10004FF60((uint64_t)v17, &qword_1011E0E08);
  v41 = v63;
  sub_100065228((uint64_t)v20, v63, &qword_1011E0E10);
  v42 = v64;
  v43 = v65;
  sub_10005B704(v65, v64, type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell);
  v44 = *(unsigned __int8 *)(v61 + 80);
  v45 = (v44 + 16) & ~v44;
  v46 = swift_allocObject(&unk_101108DB8, v45 + v62, v44 | 7);
  sub_10005B6C0(v42, v46 + v45, type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell);
  __chkstk_darwin();
  *(&v61 - 2) = v43;
  v47 = sub_100007E8C(&qword_1011E0E20);
  v48 = sub_100C14504();
  v49 = v67;
  Button.init(action:label:)(sub_100C144B4, v46, sub_100C144FC, &v61 - 4, v47, v48);
  v51 = static Color.primary.getter(v50);
  KeyPath = swift_getKeyPath(&unk_100EECD10);
  v54 = v68;
  v53 = v69;
  (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v8, v49, v69);
  v55 = (uint64_t *)&v8[*(int *)(v66 + 36)];
  *v55 = KeyPath;
  v55[1] = v51;
  (*(void (**)(char *, uint64_t))(v54 + 8))(v49, v53);
  v56 = v70;
  sub_100065228((uint64_t)v8, v70, &qword_1011E0DF0);
  sub_10004A160(v41, (uint64_t)v20, &qword_1011E0E10);
  sub_10004A160(v56, (uint64_t)v8, &qword_1011E0DF0);
  v57 = v71;
  sub_10004A160((uint64_t)v20, v71, &qword_1011E0E10);
  v58 = sub_100007E8C(&qword_1011E0E50);
  sub_10004A160((uint64_t)v8, v57 + *(int *)(v58 + 48), &qword_1011E0DF0);
  v59 = v57 + *(int *)(v58 + 64);
  *(_QWORD *)v59 = 0;
  *(_BYTE *)(v59 + 8) = 1;
  sub_10004FF60(v56, &qword_1011E0DF0);
  sub_10004FF60(v41, &qword_1011E0E10);
  sub_10004FF60((uint64_t)v8, &qword_1011E0DF0);
  return sub_10004FF60((uint64_t)v20, &qword_1011E0E10);
}

uint64_t sub_100C123A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, __n128 a3@<Q0>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t KeyPath;
  uint64_t *v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  double v54;
  unint64_t v55;
  char *v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(char *, uint64_t);
  char *v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  void (*v109)(char *);
  uint64_t (*v110)(char *);
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;

  v121 = a2;
  v4 = type metadata accessor for Date.FormatStyle.Symbol.Day(0, a3);
  v119 = *(_QWORD *)(v4 - 8);
  v120 = v4;
  __chkstk_darwin();
  v118 = (char *)&v96 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = sub_100007E8C(&qword_1011E0E58);
  __chkstk_darwin();
  v115 = (uint64_t *)((char *)&v96 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100007E8C(&qword_1011E0E60);
  v7 = __chkstk_darwin();
  v106 = (char *)&v96 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = type metadata accessor for Date.FormatStyle.Symbol.Month(0, v7);
  v104 = *(_QWORD *)(v105 - 8);
  __chkstk_darwin();
  v10 = (char *)&v96 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = type metadata accessor for TimeZone(0);
  v11 = *(_QWORD *)(v125 - 8);
  __chkstk_darwin();
  v13 = (char *)&v96 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = type metadata accessor for Date.FormatStyle(0);
  v103 = *(_QWORD *)(v123 - 8);
  __chkstk_darwin();
  v15 = (char *)&v96 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v122 = (char *)&v96 - v16;
  v17 = type metadata accessor for Date(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin();
  v20 = (char *)&v96 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = sub_100007E8C(&qword_1011E0E68);
  __chkstk_darwin();
  v22 = (char *)&v96 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = sub_100007E8C(&qword_1011E0E70);
  __chkstk_darwin();
  v99 = (uint64_t)&v96 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = sub_100007E8C(&qword_1011E0E78);
  v114 = *(_QWORD *)(v116 - 8);
  __chkstk_darwin();
  v101 = (char *)&v96 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = sub_100007E8C(&qword_1011E0E80);
  __chkstk_darwin();
  v124 = (uint64_t)&v96 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v112 = (uint64_t)&v96 - v26;
  v27 = type metadata accessor for Razzmatazz(0);
  v28 = a1 + *(int *)(v27 + 24);
  v110 = *(uint64_t (**)(char *))(v18 + 16);
  v111 = v28;
  v97 = v17;
  v29 = v110(v20);
  static ParseableFormatStyle<>.dateTime.getter(v29);
  v30 = a1 + *(int *)(v27 + 32);
  v108 = v30 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v109 = *(void (**)(char *))(v11 + 16);
  v107 = v13;
  v109(v13);
  v31 = Date.FormatStyle.timeZone.setter(v13);
  static Date.FormatStyle.Symbol.Month.abbreviated.getter(v31);
  v32 = v122;
  Date.FormatStyle.month(_:)(v10);
  (*(void (**)(char *, uint64_t))(v104 + 8))(v10, v105);
  v33 = *(void (**)(char *, uint64_t))(v103 + 8);
  v34 = v123;
  v33(v15, v123);
  v100 = v33;
  v105 = sub_100048748(&qword_1011E0E88, (uint64_t (*)(uint64_t))&type metadata accessor for Date.FormatStyle, (uint64_t)&protocol conformance descriptor for Date.FormatStyle);
  v96 = v20;
  Date.formatted<A>(_:)(&v128, v32, v34, v105);
  v33(v32, v34);
  v104 = *(_QWORD *)(v18 + 8);
  ((void (*)(char *, uint64_t))v104)(v20, v17);
  v126 = v128;
  v127 = v129;
  v103 = sub_100BBF2FC();
  v35 = Text.init<A>(_:)(&v126, &type metadata for String, v103);
  v37 = v36;
  v39 = v38;
  LOBYTE(v17) = v40 & 1;
  v41 = enum case for Text.Case.uppercase(_:);
  v42 = type metadata accessor for Text.Case(0);
  v43 = *(_QWORD *)(v42 - 8);
  v44 = (uint64_t)v106;
  (*(void (**)(char *, uint64_t, uint64_t))(v43 + 104))(v106, v41, v42);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v43 + 56))(v44, 0, 1, v42);
  KeyPath = swift_getKeyPath(&unk_100EECD70);
  v46 = v115;
  sub_10004A160(v44, (uint64_t)v115 + *(int *)(v117 + 28), &qword_1011E0E60);
  *v46 = KeyPath;
  sub_10004A160((uint64_t)v46, (uint64_t)&v22[*(int *)(v98 + 36)], &qword_1011E0E58);
  *(_QWORD *)v22 = v35;
  *((_QWORD *)v22 + 1) = v37;
  v22[16] = v17;
  *((_QWORD *)v22 + 3) = v39;
  sub_100055BBC(v35, v37, v17);
  swift_bridgeObjectRetain();
  sub_10004FF60((uint64_t)v46, &qword_1011E0E58);
  sub_10004FF60(v44, &qword_1011E0E60);
  sub_100055BAC(v35, v37, v17);
  v47 = swift_bridgeObjectRelease();
  v48 = static Font.caption.getter(v47);
  v49 = swift_getKeyPath(&unk_100EECDA0);
  v50 = v99;
  sub_10004A160((uint64_t)v22, v99, &qword_1011E0E68);
  v51 = v102;
  v52 = (uint64_t *)(v50 + *(int *)(v102 + 36));
  *v52 = v49;
  v52[1] = v48;
  v53 = sub_10004FF60((uint64_t)v22, &qword_1011E0E68);
  v54 = static Font.Weight.semibold.getter(v53);
  v55 = sub_100C145C0();
  v56 = v101;
  View.fontWeight(_:)(*(_QWORD *)&v54, 0, v51, v55);
  sub_10004FF60(v50, &qword_1011E0E70);
  v57 = objc_msgSend((id)objc_opt_self(UIColor), "systemRedColor");
  v58 = Color.init(_:)(v57);
  v59 = swift_getKeyPath(&unk_100EECDD0);
  v60 = v114;
  v61 = v124;
  v62 = v56;
  v63 = v56;
  v64 = v116;
  (*(void (**)(uint64_t, char *, uint64_t))(v114 + 16))(v124, v62, v116);
  v65 = (uint64_t *)(v61 + *(int *)(v113 + 36));
  *v65 = v59;
  v65[1] = v58;
  (*(void (**)(char *, uint64_t))(v60 + 8))(v63, v64);
  v66 = v61;
  v67 = v112;
  sub_100065228(v66, v112, &qword_1011E0E80);
  v68 = v96;
  v69 = v97;
  v70 = ((uint64_t (*)(char *, uint64_t, uint64_t))v110)(v96, v111, v97);
  static ParseableFormatStyle<>.dateTime.getter(v70);
  v71 = v107;
  ((void (*)(char *, uint64_t, uint64_t))v109)(v107, v108, v125);
  v72 = Date.FormatStyle.timeZone.setter(v71);
  v73 = v118;
  static Date.FormatStyle.Symbol.Day.defaultDigits.getter(v72);
  v74 = v122;
  Date.FormatStyle.day(_:)(v73);
  (*(void (**)(char *, uint64_t))(v119 + 8))(v73, v120);
  v75 = v15;
  v76 = v123;
  v77 = v100;
  v100(v75, v123);
  Date.formatted<A>(_:)(&v128, v74, v76, v105);
  v77(v74, v76);
  ((void (*)(char *, uint64_t))v104)(v68, v69);
  v126 = v128;
  v127 = v129;
  v78 = Text.init<A>(_:)(&v126, &type metadata for String, v103);
  v80 = v79;
  v82 = v81;
  v84 = v83 & 1;
  v85 = static Font.title3.getter(v78);
  v86 = Text.font(_:)(v85, v78, v80, v84, v82);
  v88 = v87;
  LOBYTE(v41) = v89;
  v91 = v90;
  swift_release();
  sub_100055BAC(v78, v80, v84);
  swift_bridgeObjectRelease();
  v92 = v124;
  sub_10004A160(v67, v124, &qword_1011E0E80);
  v93 = v121;
  sub_10004A160(v92, v121, &qword_1011E0E80);
  v94 = v93 + *(int *)(sub_100007E8C(&qword_1011E0EB0) + 48);
  *(_QWORD *)v94 = v86;
  *(_QWORD *)(v94 + 8) = v88;
  *(_BYTE *)(v94 + 16) = v41 & 1;
  *(_QWORD *)(v94 + 24) = v91;
  sub_100055BBC(v86, v88, v41 & 1);
  swift_bridgeObjectRetain();
  sub_10004FF60(v67, &qword_1011E0E80);
  sub_100055BAC(v86, v88, v41 & 1);
  swift_bridgeObjectRelease();
  return sub_10004FF60(v92, &qword_1011E0E80);
}

__n128 sub_100C12C90@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unsigned __int8 v7;
  unint64_t v8;
  unsigned __int8 v9;
  unint64_t v10;
  uint64_t KeyPath;
  __n128 result;
  __n128 v13;
  _QWORD v14[2];
  unsigned __int8 v15;
  __n128 v16;
  unint64_t v17;
  unsigned __int8 v18;
  unint64_t v19;

  v4 = static HorizontalAlignment.leading.getter(a1);
  sub_100C12D40(a1, (uint64_t)v14);
  v5 = v14[0];
  v6 = v14[1];
  v7 = v15;
  v13 = v16;
  v8 = v17;
  v9 = v18;
  v10 = v19;
  KeyPath = swift_getKeyPath(&unk_100EECD40);
  a2->n128_u64[0] = v4;
  a2->n128_u64[1] = 0x4000000000000000;
  a2[1].n128_u8[0] = 0;
  a2[1].n128_u64[1] = v5;
  a2[2].n128_u64[0] = v6;
  a2[2].n128_u8[8] = v7;
  result = v13;
  a2[3] = v13;
  a2[4].n128_u64[0] = v8;
  a2[4].n128_u8[8] = v9;
  a2[5].n128_u64[0] = v10;
  a2[5].n128_u64[1] = KeyPath;
  a2[6].n128_u64[0] = 1;
  a2[6].n128_u8[8] = 0;
  return result;
}

double sub_100C12D40@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  double result;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;

  v56 = Razzmatazz.shortName.getter();
  v57 = v3;
  v4 = sub_100BBF2FC();
  v5 = Text.init<A>(_:)(&v56, &type metadata for String, v4);
  v7 = v6;
  v9 = v8;
  v11 = v10 & 1;
  v12 = static Font.Weight.semibold.getter(v5);
  v13 = Text.fontWeight(_:)(*(_QWORD *)&v12, 0, v5, v7, v11, v9);
  v52 = v14;
  v53 = v13;
  v16 = v15;
  v54 = v17;
  sub_100055BAC(v5, v7, v11);
  swift_bridgeObjectRelease();
  v18 = (_QWORD *)(a1 + *(int *)(type metadata accessor for Razzmatazz(0) + 32));
  v20 = v18[6];
  v19 = v18[7];
  v21 = v18[9];
  if (!v21)
    goto LABEL_5;
  v22 = v18[8];
  swift_bridgeObjectRetain();
  if (String.count.getter(v22, v21) != 2)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    swift_bridgeObjectRetain();
    goto LABEL_6;
  }
  v23 = sub_100007E8C(&qword_1011DF560);
  v24 = swift_allocObject(v23, 64, 7);
  *(_OWORD *)(v24 + 16) = xmmword_100EA7A80;
  *(_QWORD *)(v24 + 32) = v20;
  *(_QWORD *)(v24 + 40) = v19;
  *(_QWORD *)(v24 + 48) = v22;
  *(_QWORD *)(v24 + 56) = v21;
  v56 = v24;
  swift_bridgeObjectRetain();
  v25 = sub_100007E8C(&qword_1011E01D8);
  v26 = sub_100049F28((unint64_t *)&qword_1011E01E0, &qword_1011E01D8, (uint64_t)&protocol conformance descriptor for [A]);
  v20 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v25, v26);
  v19 = v27;
  swift_bridgeObjectRelease();
LABEL_6:
  v28 = v16 & 1;
  v56 = v20;
  v57 = v19;
  v29 = Text.init<A>(_:)(&v56, &type metadata for String, v4);
  v31 = v30;
  v33 = v32;
  v35 = v34 & 1;
  LODWORD(v56) = static HierarchicalShapeStyle.secondary.getter(v29);
  v36 = Text.foregroundStyle<A>(_:)(&v56, v29, v31, v35, v33, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v38 = v37;
  v40 = v39;
  v42 = v41 & 1;
  sub_100055BAC(v29, v31, v35);
  swift_bridgeObjectRelease();
  v44 = static Font.subheadline.getter(v43);
  v45 = Text.font(_:)(v44, v36, v38, v42, v40);
  v47 = v46;
  LOBYTE(v35) = v48;
  v50 = v49;
  swift_release();
  sub_100055BAC(v36, v38, v42);
  swift_bridgeObjectRelease();
  LOBYTE(v56) = v28;
  *(_QWORD *)a2 = v53;
  *(_QWORD *)(a2 + 8) = v52;
  *(_BYTE *)(a2 + 16) = v28;
  *(_QWORD *)(a2 + 24) = v54;
  *(_QWORD *)(a2 + 32) = v45;
  *(_QWORD *)(a2 + 40) = v47;
  *(_BYTE *)(a2 + 48) = v35 & 1;
  *(_QWORD *)(a2 + 56) = v50;
  sub_100055BBC(v53, v52, v28);
  swift_bridgeObjectRetain();
  sub_100055BBC(v45, v47, v35 & 1);
  swift_bridgeObjectRetain();
  sub_100055BAC(v45, v47, v35 & 1);
  swift_bridgeObjectRelease();
  sub_100055BAC(v53, v52, v56);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

void sub_100C13040()
{
  qword_1011E0C18 = 0x4020000000000000;
}

void sub_100C13050()
{
  qword_1011E0C20 = 0x4028000000000000;
}

uint64_t sub_100C13064()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ArtistRazzmatazzView(0) - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = (_QWORD *)swift_task_alloc(dword_1011E0C54);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_10005AEE4;
  return sub_100C11840(v3);
}

uint64_t sub_100C130C8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of ArtistRazzmatazzView.body>>, 1);
}

uint64_t *initializeBufferWithCopyOfBuffer for ArtistRazzmatazzView(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for Artist(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)a1 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v19 = sub_100007E8C(&qword_1011E0C40);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for ArtistRazzmatazzView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  v5 = a1 + *(int *)(a2 + 28);
  v6 = sub_100007E8C(&qword_1011E0C40);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t initializeWithCopy for ArtistRazzmatazzView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  v18 = sub_100007E8C(&qword_1011E0C40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for ArtistRazzmatazzView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_retain();
  swift_release();
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
  swift_retain();
  swift_release();
  v14 = a3[7];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = sub_100007E8C(&qword_1011E0C40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  return a1;
}

uint64_t initializeWithTake for ArtistRazzmatazzView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[7];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_100007E8C(&qword_1011E0C40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  return a1;
}

uint64_t assignWithTake for ArtistRazzmatazzView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  swift_release();
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  swift_release();
  v10 = a3[7];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_100007E8C(&qword_1011E0C40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArtistRazzmatazzView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C13568);
}

uint64_t sub_100C13568(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = type metadata accessor for Artist(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_100007E8C(&qword_1011E0C40);
    v10 = a1 + *(int *)(a3 + 28);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for ArtistRazzmatazzView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C13620);
}

uint64_t sub_100C13620(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = type metadata accessor for Artist(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
      return result;
    }
    v10 = sub_100007E8C(&qword_1011E0C40);
    v12 = a1 + *(int *)(a4 + 28);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_100C136C8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[4];

  v2 = type metadata accessor for Artist(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = (char *)&value witness table for () + 64;
    v6[2] = &unk_100EECC98;
    sub_100C13764(319);
    if (v5 <= 0x3F)
    {
      v6[3] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 4, v6, a1 + 16);
    }
  }
}

void sub_100C13764(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1011E0CD0)
  {
    v2 = sub_100C10714();
    v3 = type metadata accessor for ScaledMetric(a1, &type metadata for CGFloat, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1011E0CD0);
  }
}

unint64_t sub_100C137C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E0D08;
  if (!qword_1011E0D08)
  {
    v1 = sub_100044B54(&qword_1011E0C60);
    sub_100049F28(&qword_1011E0D10, &qword_1011E0C30, (uint64_t)&protocol conformance descriptor for VStack<A>);
    sub_100048748(&qword_1011E0D18, (uint64_t (*)(uint64_t))&type metadata accessor for _TaskModifier, (uint64_t)&protocol conformance descriptor for _TaskModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E0D08);
  }
  return result;
}

uint64_t *sub_100C1385C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  id v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  char *v38;
  char *v39;
  void *v40;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v36 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v36 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    v8 = (int *)type metadata accessor for Razzmatazz(0);
    v9 = v8[6];
    v10 = (char *)v4 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for Date(0);
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    v14 = v8[7];
    v15 = (char *)v4 + v14;
    v16 = (char *)a2 + v14;
    v17 = type metadata accessor for Artist(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    v18 = v8[8];
    v19 = (uint64_t *)((char *)v4 + v18);
    v20 = (char *)a2 + v18;
    v21 = *(uint64_t *)((char *)a2 + v18 + 8);
    *v19 = *(uint64_t *)((char *)a2 + v18);
    v19[1] = v21;
    v22 = *(uint64_t *)((char *)a2 + v18 + 24);
    v19[2] = *(uint64_t *)((char *)a2 + v18 + 16);
    v19[3] = v22;
    v23 = *(uint64_t *)((char *)a2 + v18 + 40);
    v19[4] = *(uint64_t *)((char *)a2 + v18 + 32);
    v19[5] = v23;
    v24 = *(uint64_t *)((char *)a2 + v18 + 56);
    v19[6] = *(uint64_t *)((char *)a2 + v18 + 48);
    v19[7] = v24;
    v25 = *(uint64_t *)((char *)a2 + v18 + 72);
    v19[8] = *(uint64_t *)((char *)a2 + v18 + 64);
    v19[9] = v25;
    v26 = *(uint64_t *)((char *)a2 + v18 + 88);
    v19[10] = *(uint64_t *)((char *)a2 + v18 + 80);
    v19[11] = v26;
    v40 = *(void **)((char *)a2 + v18 + 96);
    v19[12] = v40;
    v27 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
    v38 = &v20[v27];
    v39 = (char *)v19 + v27;
    v28 = type metadata accessor for TimeZone(0);
    v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v30 = v40;
    v29(v39, v38, v28);
    v31 = *(int *)(a3 + 20);
    v32 = *(int *)(a3 + 24);
    v33 = (uint64_t *)((char *)v4 + v31);
    v34 = (uint64_t *)((char *)a2 + v31);
    v35 = v34[1];
    *v33 = *v34;
    v33[1] = v35;
    *(uint64_t *)((char *)v4 + v32) = *(uint64_t *)((char *)a2 + v32);
  }
  swift_retain();
  return v4;
}

double sub_100C13A38(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = (int *)type metadata accessor for Razzmatazz(0);
  v3 = a1 + v2[6];
  v4 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = a1 + v2[7];
  v6 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + v2[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v8 = v7 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v9 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

_QWORD *sub_100C13B3C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  id v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  char *v36;
  char *v37;
  void *v38;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = (int *)type metadata accessor for Razzmatazz(0);
  v8 = v7[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Date(0);
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  v13 = v7[7];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  v17 = v7[8];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (char *)a2 + v17;
  v20 = *(_QWORD *)((char *)a2 + v17 + 8);
  *v18 = *(_QWORD *)((char *)a2 + v17);
  v18[1] = v20;
  v21 = *(_QWORD *)((char *)a2 + v17 + 24);
  v18[2] = *(_QWORD *)((char *)a2 + v17 + 16);
  v18[3] = v21;
  v22 = *(_QWORD *)((char *)a2 + v17 + 40);
  v18[4] = *(_QWORD *)((char *)a2 + v17 + 32);
  v18[5] = v22;
  v23 = *(_QWORD *)((char *)a2 + v17 + 56);
  v18[6] = *(_QWORD *)((char *)a2 + v17 + 48);
  v18[7] = v23;
  v24 = *(_QWORD *)((char *)a2 + v17 + 72);
  v18[8] = *(_QWORD *)((char *)a2 + v17 + 64);
  v18[9] = v24;
  v25 = *(_QWORD *)((char *)a2 + v17 + 88);
  v18[10] = *(_QWORD *)((char *)a2 + v17 + 80);
  v18[11] = v25;
  v38 = *(void **)((char *)a2 + v17 + 96);
  v18[12] = v38;
  v26 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v36 = &v19[v26];
  v37 = (char *)v18 + v26;
  v27 = type metadata accessor for TimeZone(0);
  v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v29 = v38;
  v28(v37, v36, v27);
  v30 = *(int *)(a3 + 20);
  v31 = *(int *)(a3 + 24);
  v32 = (_QWORD *)((char *)a1 + v30);
  v33 = (_QWORD *)((char *)a2 + v30);
  v34 = v33[1];
  *v32 = *v33;
  v32[1] = v34;
  *(_QWORD *)((char *)a1 + v31) = *(_QWORD *)((char *)a2 + v31);
  swift_retain();
  return a1;
}

_QWORD *sub_100C13CF0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (int *)type metadata accessor for Razzmatazz(0);
  v7 = v6[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = v6[7];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = v6[8];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  *v16 = *(_QWORD *)((char *)a2 + v15);
  v16[1] = *(_QWORD *)((char *)a2 + v15 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[2] = v17[2];
  v16[3] = v17[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[4] = v17[4];
  v16[5] = v17[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[6] = v17[6];
  v16[7] = v17[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[8] = v17[8];
  v16[9] = v17[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[10] = v17[10];
  v16[11] = v17[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = (void *)v17[12];
  v19 = (void *)v16[12];
  v16[12] = v18;
  v20 = v18;

  v21 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v22 = (char *)v16 + v21;
  v23 = (char *)v17 + v21;
  v24 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 24))(v22, v23, v24);
  v25 = *(int *)(a3 + 20);
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (_QWORD *)((char *)a2 + v25);
  v28 = v27[1];
  *v26 = *v27;
  v26[1] = v28;
  swift_retain();
  swift_release();
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_OWORD *sub_100C13F10(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = (int *)type metadata accessor for Razzmatazz(0);
  v8 = v7[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = v7[7];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  v16 = v7[8];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = *(_OWORD *)((char *)a2 + v16 + 16);
  *(_OWORD *)v17 = *(_OWORD *)((char *)a2 + v16);
  *((_OWORD *)v17 + 1) = v19;
  v20 = *(_OWORD *)((char *)a2 + v16 + 48);
  *((_OWORD *)v17 + 2) = *(_OWORD *)((char *)a2 + v16 + 32);
  *((_OWORD *)v17 + 3) = v20;
  v21 = *(_OWORD *)((char *)a2 + v16 + 80);
  *((_OWORD *)v17 + 4) = *(_OWORD *)((char *)a2 + v16 + 64);
  *((_OWORD *)v17 + 5) = v21;
  *((_QWORD *)v17 + 12) = *(_QWORD *)((char *)a2 + v16 + 96);
  v22 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v23 = &v17[v22];
  v24 = &v18[v22];
  v25 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
  v26 = *(int *)(a3 + 24);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
  *(_QWORD *)((char *)a1 + v26) = *(_QWORD *)((char *)a2 + v26);
  return a1;
}

_QWORD *sub_100C14028(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = (int *)type metadata accessor for Razzmatazz(0);
  v9 = v8[6];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  v13 = v8[7];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  v17 = v8[8];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  v20 = *(_QWORD *)((char *)a2 + v17 + 8);
  *v18 = *(_QWORD *)((char *)a2 + v17);
  v18[1] = v20;
  swift_bridgeObjectRelease();
  v21 = v19[3];
  v18[2] = v19[2];
  v18[3] = v21;
  swift_bridgeObjectRelease();
  v22 = v19[5];
  v18[4] = v19[4];
  v18[5] = v22;
  swift_bridgeObjectRelease();
  v23 = v19[7];
  v18[6] = v19[6];
  v18[7] = v23;
  swift_bridgeObjectRelease();
  v24 = v19[9];
  v18[8] = v19[8];
  v18[9] = v24;
  swift_bridgeObjectRelease();
  v25 = v19[11];
  v18[10] = v19[10];
  v18[11] = v25;
  swift_bridgeObjectRelease();
  v26 = (void *)v18[12];
  v18[12] = v19[12];

  v27 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v28 = (char *)v18 + v27;
  v29 = (char *)v19 + v27;
  v30 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
  swift_release();
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_100C141B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C141C4);
}

uint64_t sub_100C141C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for Razzmatazz(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_100C14240(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C1424C);
}

uint64_t sub_100C1424C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Razzmatazz(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell(uint64_t a1)
{
  return sub_100055934(a1, qword_1011E0D78, (uint64_t)&nominal type descriptor for ArtistRazzmatazzView.RazzmatazzCell);
}

uint64_t sub_100C142D8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for Razzmatazz(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for () + 64;
    v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100C1435C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FBC5D0, 1);
}

uint64_t sub_100C1436C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = v2 + *(_QWORD *)(v1 + 64);
  v4 = v0 + v2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = (int *)type metadata accessor for Razzmatazz(0);
  v6 = v4 + v5[6];
  v7 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = v4 + v5[7];
  v9 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = v4 + v5[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v11 = v10 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v12 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  swift_release();
  return swift_deallocObject(v0, v3);
}

uint64_t sub_100C144B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return (*(uint64_t (**)(uint64_t))(v0 + ((v2 + 16) & ~v2) + *(int *)(v1 + 20)))(v0 + ((v2 + 16) & ~v2));
}

double sub_100C144FC@<D0>(__n128 *a1@<X8>)
{
  uint64_t v1;
  double result;

  *(_QWORD *)&result = sub_100C12C90(*(_QWORD *)(v1 + 16), a1).n128_u64[0];
  return result;
}

unint64_t sub_100C14504()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E0E28;
  if (!qword_1011E0E28)
  {
    v1 = sub_100044B54(&qword_1011E0E20);
    sub_100049F28(&qword_1011E0E30, &qword_1011E0E38, (uint64_t)&protocol conformance descriptor for VStack<A>);
    sub_100049F28((unint64_t *)&qword_1011E0E40, &qword_1011E0E48, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E0E28);
  }
  return result;
}

unint64_t sub_100C145C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E0E90;
  if (!qword_1011E0E90)
  {
    v1 = sub_100044B54(&qword_1011E0E70);
    sub_100C14644();
    sub_100049F28((unint64_t *)&unk_1011E3BD0, &qword_1011E0EA8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E0E90);
  }
  return result;
}

unint64_t sub_100C14644()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E0E98;
  if (!qword_1011E0E98)
  {
    v1 = sub_100044B54(&qword_1011E0E68);
    sub_100049F28(&qword_1011E0EA0, &qword_1011E0E58, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E0E98);
  }
  return result;
}

uint64_t sub_100C146D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100C11164(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_100C146D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E0F00;
  if (!qword_1011E0F00)
  {
    v1 = sub_100044B54(&qword_1011E0F08);
    sub_100049F28(&qword_1011E0F10, &qword_1011E0F18, (uint64_t)&protocol conformance descriptor for LazyHGrid<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E0F00);
  }
  return result;
}

uint64_t sub_100C14764()
{
  uint64_t v0;

  return sub_100C11458(*(_QWORD *)(v0 + 16));
}

unint64_t sub_100C1476C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E0F40;
  if (!qword_1011E0F40)
  {
    v1 = sub_100044B54(&qword_1011E0F38);
    sub_100048748(&qword_1011E0F48, type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell, (uint64_t)&unk_100EECCC0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E0F40);
  }
  return result;
}

uint64_t sub_100C147EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for ArtistRazzmatazzView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  v5 = v0 + v3;
  v6 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  v7 = v5 + *(int *)(v1 + 28);
  v8 = sub_100007E8C(&qword_1011E0C40);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  return swift_deallocObject(v0, v4);
}

uint64_t sub_100C148B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ArtistRazzmatazzView(0) - 8) + 80);
  return sub_100C11600(a1, v2 + ((v5 + 16) & ~v5), a2);
}

unint64_t sub_100C14908()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E0F60;
  if (!qword_1011E0F60)
  {
    v1 = sub_100044B54(&qword_1011E0DE0);
    sub_100C14974();
    sub_100C0A5E4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E0F60);
  }
  return result;
}

unint64_t sub_100C14974()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E0F68;
  if (!qword_1011E0F68)
  {
    v1 = sub_100044B54(&qword_1011E0DD0);
    sub_10005610C(&qword_1011E0F70, &qword_1011E0DC8, (void (*)(void))sub_100C14A18);
    sub_100049F28((unint64_t *)&unk_1011E4AE0, &qword_1011E42B0, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E0F68);
  }
  return result;
}

unint64_t sub_100C14A18()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E0F78;
  if (!qword_1011E0F78)
  {
    v1 = sub_100044B54(&qword_1011E0DC0);
    sub_100049F28(&qword_1011E0F80, &qword_1011E0DB8, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E0F78);
  }
  return result;
}

id sub_100C14A9C()
{
  return objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CitySearchController(0)), "init");
}

uint64_t sub_100C14AC0@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t OpaqueTypeConformance2;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t KeyPath;
  uint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v29;
  uint64_t v30;
  char v31[16];
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  unint64_t v35;
  unint64_t v36;

  v29 = a1;
  v30 = type metadata accessor for SearchFieldPlacement(0, a2);
  v3 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin();
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011E1088);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = v2;
  v10 = sub_100007E8C(&qword_1011E1090);
  v11 = sub_100044B54(&qword_1011E1098);
  v12 = sub_100C16C80();
  v13 = sub_100BBF2FC();
  v33 = v11;
  v34 = &type metadata for String;
  v35 = v12;
  v36 = v13;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v33, &opaque type descriptor for <<opaque return type of View.navigationTitle<A>(_:)>>, 1);
  NavigationStack.init<>(root:)(sub_100C16C78, v31, v10, OpaqueTypeConformance2);
  v15 = *(_QWORD *)(v2 + 16);
  v16 = *(_QWORD *)(v2 + 24);
  v17 = *(unsigned __int8 *)(v2 + 32);
  v18 = type metadata accessor for CitySearchController(0);
  v19 = sub_100048748(&qword_1011E10C8, type metadata accessor for CitySearchController, (uint64_t)&unk_100EECED8);
  v20 = (void *)StateObject.projectedValue.getter(v15, v16, v17, v18, v19);
  KeyPath = swift_getKeyPath(&unk_100EECF60);
  ObservedObject.Wrapper.subscript.getter(&v33, KeyPath, v20, v19);
  swift_release();

  v22 = v33;
  v23 = v34;
  v24 = v35;
  v25 = v36;
  static SearchFieldPlacement.navigationBarDrawer.getter();
  v26 = sub_100049F28(&qword_1011E10D0, &qword_1011E1088, (uint64_t)&protocol conformance descriptor for NavigationStack<A, B>);
  View.searchable(text:placement:prompt:)(v22, v23, v24, v25, v5, 2037672259, 0xE400000000000000, 0, _swiftEmptyArrayStorage, v6, v26);
  swift_bridgeObjectRelease();
  swift_release();
  v27 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v30, v27);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_100C14D10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD v32[2];
  char v33[16];
  _QWORD *v34;
  uint64_t v35;
  double (*v36)@<D0>(void **@<X0>, uint64_t@<X8>);
  uint64_t v37;
  _QWORD v38[2];

  v32[1] = a2;
  v3 = *(_QWORD *)(type metadata accessor for CitySelectionView(0) - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin();
  v5 = (char *)v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011E1098);
  __chkstk_darwin();
  v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(unsigned __int8 *)(a1 + 32);
  v12 = type metadata accessor for CitySearchController(0);
  v13 = sub_100048748(&qword_1011E10C8, type metadata accessor for CitySearchController, (uint64_t)&unk_100EECED8);
  v14 = (void *)StateObject.wrappedValue.getter(v9, v10, v11, v12, v13);
  KeyPath = swift_getKeyPath(&unk_100EECFA8);
  swift_getKeyPath(&unk_100EECFD0);
  static Published.subscript.getter(v38, v14, KeyPath);

  swift_release();
  swift_release();
  v16 = v38[0];
  v17 = swift_getKeyPath(&unk_100EECFF8);
  sub_100C16D64(a1, (uint64_t)v5);
  v18 = *(unsigned __int8 *)(v3 + 80);
  v19 = (v18 + 16) & ~v18;
  v20 = swift_allocObject(&unk_101108E70, v19 + v4, v18 | 7);
  sub_100C16E64((uint64_t)v5, v20 + v19);
  v37 = v20;
  v38[0] = v16;
  v34 = v38;
  v35 = v17;
  v36 = sub_100C16EA8;
  v21 = sub_100007E8C(&qword_1011E10D8);
  v22 = sub_100C171E8();
  List<>.init(content:)(sub_100C171DC, v33, v21, v22);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v24 = static Alignment.center.getter(v23);
  v26 = v25;
  v27 = (uint64_t)&v8[*(int *)(v6 + 36)];
  sub_100C158CC(a1, v27);
  v28 = (uint64_t *)(v27 + *(int *)(sub_100007E8C(&qword_1011E10C0) + 36));
  *v28 = v24;
  v28[1] = v26;
  v38[0] = 0x686372616553;
  v38[1] = 0xE600000000000000;
  v29 = sub_100C16C80();
  v30 = sub_100BBF2FC();
  View.navigationTitle<A>(_:)(v38, v6, &type metadata for String, v29, v30);
  return sub_10004FF60((uint64_t)v8, &qword_1011E1098);
}

uint64_t sub_100C14F98()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100EECFA8);
  v2 = swift_getKeyPath(&unk_100EECFD0);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

double sub_100C15008@<D0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void *v5;
  uint64_t v6;

  v5 = *a1;
  *(_QWORD *)a3 = static HorizontalAlignment.leading.getter(a1);
  *(_QWORD *)(a3 + 8) = 0;
  *(_BYTE *)(a3 + 16) = 0;
  v6 = sub_100007E8C(&qword_1011E1118);
  return sub_100C15060(v5, a2, (_QWORD *)(a3 + *(int *)(v6 + 44)));
}

double sub_100C15060@<D0>(void *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  double v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  double v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  id v72;
  char *v73;
  __n128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _OWORD *v81;
  __int128 v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  double result;
  void *v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  double v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _OWORD v121[3];

  v100 = a3;
  v104 = *(_QWORD *)(type metadata accessor for CitySelectionView(0) - 8);
  v5 = *(_QWORD *)(v104 + 64);
  __chkstk_darwin();
  v105 = (uint64_t)&v97 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = sub_100007E8C((uint64_t *)&unk_1011E3120);
  v108 = *(_QWORD *)(v109 - 8);
  __chkstk_darwin();
  v107 = (char *)&v97 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = sub_100007E8C(&qword_1011E1120);
  __chkstk_darwin();
  v111 = (char *)&v97 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v8 = __chkstk_darwin().n128_u64[0];
  v110 = (uint64_t)&v97 - v9;
  v10 = objc_msgSend(a1, "title", v8);
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v13 = v12;

  *(_QWORD *)&v121[0] = v11;
  *((_QWORD *)&v121[0] + 1) = v13;
  v14 = sub_100BBF2FC();
  v15 = Text.init<A>(_:)(v121, &type metadata for String, v14);
  v17 = v16;
  v19 = v18;
  v21 = v20 & 1;
  LODWORD(v121[0]) = static HierarchicalShapeStyle.primary.getter(v22);
  v116 = Text.foregroundStyle<A>(_:)(v121, v15, v17, v21, v19, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v119 = v23;
  v120 = v24;
  v26 = v25;
  sub_100055BAC(v15, v17, v21);
  v27 = objc_msgSend(a1, "subtitle", swift_bridgeObjectRelease().n128_f64[0]);
  v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
  v30 = v29;

  *(_QWORD *)&v31 = swift_bridgeObjectRelease().n128_u64[0];
  v32 = HIBYTE(v30) & 0xF;
  if ((v30 & 0x2000000000000000) == 0)
    v32 = v28 & 0xFFFFFFFFFFFFLL;
  if (v32)
  {
    v33 = objc_msgSend(a1, "subtitle", v31);
    v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
    v36 = v35;

    *(_QWORD *)&v121[0] = v34;
    *((_QWORD *)&v121[0] + 1) = v36;
    v37 = Text.init<A>(_:)(v121, &type metadata for String, v14);
    v39 = v38;
    v41 = v40;
    v43 = v42 & 1;
    LODWORD(v121[0]) = static HierarchicalShapeStyle.secondary.getter(v37);
    v44 = Text.foregroundStyle<A>(_:)(v121, v37, v39, v43, v41, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
    v97 = a1;
    v45 = v44;
    v46 = v14;
    v48 = v47;
    v99 = v5;
    v98 = a2;
    v50 = v49;
    v51 = v26;
    v53 = v52 & 1;
    sub_100055BAC(v37, v39, v43);
    swift_bridgeObjectRelease();
    v55 = static Font.subheadline.getter(v54);
    v115 = Text.font(_:)(v55, v45, v48, v53, v50);
    v118 = v56;
    LOBYTE(v39) = v57;
    v103 = v58;
    swift_release();
    v102 = v39 & 1;
    v59 = v48;
    v14 = v46;
    v60 = v53;
    v26 = v51;
    sub_100055BAC(v45, v59, v60);
    a2 = v98;
    v5 = v99;
    swift_bridgeObjectRelease();
    LOBYTE(v45) = static Edge.Set.top.getter(v61);
    v62 = EdgeInsets.init(_all:)(2.0);
    v113 = v63;
    v114 = v62;
    v112 = v64;
    v101 = v65;
    v117 = v45;
    a1 = v97;
  }
  else
  {
    v115 = 0;
    v118 = 0;
    v102 = 0;
    v103 = 0;
    v117 = 0;
    v113 = 0;
    v114 = 0.0;
    v112 = 0;
    v101 = 0;
  }
  v66 = v26 & 1;
  *(_QWORD *)&v121[0] = 0;
  *((_QWORD *)&v121[0] + 1) = 0xE000000000000000;
  v67 = v105;
  sub_100C16D64(a2, v105);
  v68 = *(unsigned __int8 *)(v104 + 80);
  v69 = (v68 + 16) & ~v68;
  v70 = (v5 + v69 + 7) & 0xFFFFFFFFFFFFFFF8;
  v71 = swift_allocObject(&unk_101108EC0, v70 + 8, v68 | 7);
  sub_100C16E64(v67, v71 + v69);
  *(_QWORD *)(v71 + v70) = a1;
  v72 = a1;
  v73 = v107;
  v75 = Button<>.init<A>(_:action:)(v121, sub_100C173D0, v71, &type metadata for String, v14, v74);
  v76 = static Alignment.center.getter(v75);
  _FrameLayout.init(width:height:alignment:)(v121, 0, 1, 0, 0, v76, v77);
  v78 = v108;
  v79 = (uint64_t)v111;
  v80 = v109;
  (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v111, v73, v109);
  v81 = (_OWORD *)(v79 + *(int *)(v106 + 36));
  v82 = v121[1];
  *v81 = v121[0];
  v81[1] = v82;
  v81[2] = v121[2];
  (*(void (**)(char *, uint64_t))(v78 + 8))(v73, v80);
  v83 = v110;
  sub_100C17410(v79, v110);
  sub_100C17458(v83, v79);
  v84 = v116;
  v85 = v100;
  v86 = v119;
  *v100 = v116;
  v85[1] = v86;
  LODWORD(v99) = v26 & 1;
  *((_BYTE *)v85 + 16) = v26 & 1;
  v87 = v115;
  v85[3] = v120;
  v85[4] = v87;
  v88 = v117;
  v89 = v118;
  v90 = v102;
  v85[5] = v118;
  v85[6] = v90;
  v91 = v103;
  v85[7] = v103;
  v85[8] = v88;
  v117 = v88;
  v92 = v113;
  *((double *)v85 + 9) = v114;
  v85[10] = v92;
  v93 = v101;
  v85[11] = v112;
  v85[12] = v93;
  *((_BYTE *)v85 + 104) = 0;
  v94 = sub_100007E8C(&qword_1011E1128);
  sub_100C17458(v79, (uint64_t)v85 + *(int *)(v94 + 64));
  sub_100055BBC(v84, v119, v66);
  swift_bridgeObjectRetain();
  v95 = v115;
  sub_1000E4440(v115, v89, v90, v91);
  sub_10004FF60(v83, &qword_1011E1120);
  sub_10004FF60(v79, &qword_1011E1120);
  sub_1000E450C(v95, v118, v90, v91);
  sub_100055BAC(v116, v119, v99);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_100C156B8(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;

  v24[1] = a1;
  v4 = type metadata accessor for DismissAction(0);
  v25 = *(_QWORD *)(v4 - 8);
  v26 = v4;
  __chkstk_darwin();
  v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 8);
  v8 = objc_msgSend(a2, "title", swift_retain().n128_f64[0]);
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v11 = v10;

  v12 = objc_msgSend(a2, "subtitle");
  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v15 = v14;

  objc_msgSend(a2, "coordinate");
  v17 = v16;
  objc_msgSend(a2, "coordinate");
  v19 = v18;
  KeyPath = swift_getKeyPath(&unk_100EED010);
  swift_getKeyPath(&unk_100EED038);
  static Published.subscript.getter(&v27, v7, KeyPath);
  swift_release();
  swift_release();
  v30 = v27;
  v31 = v28;
  v32 = v29;
  v21 = swift_getKeyPath(&unk_100EED010);
  v22 = swift_getKeyPath(&unk_100EED038);
  *(_QWORD *)&v27 = v9;
  *((_QWORD *)&v27 + 1) = v11;
  *(_QWORD *)&v28 = v13;
  *((_QWORD *)&v28 + 1) = v15;
  *(_QWORD *)&v29 = v17;
  *((_QWORD *)&v29 + 1) = v19;
  swift_retain();
  static Published.subscript.setter(&v27, v7, v21, v22);
  sub_100C1AE44((uint64_t)&v30);
  v33 = v30;
  sub_1001C7464((uint64_t)&v33);
  v27 = v31;
  sub_1001C7464((uint64_t)&v27);
  swift_release();
  type metadata accessor for CitySelectionView(0);
  sub_100C313F4((uint64_t)v6);
  DismissAction.callAsFunction()();
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v6, v26);
}

uint64_t sub_100C158CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t KeyPath;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(unsigned __int8 *)(a1 + 32);
  v6 = type metadata accessor for CitySearchController(0);
  v7 = sub_100048748(&qword_1011E10C8, type metadata accessor for CitySearchController, (uint64_t)&unk_100EECED8);
  v8 = (void *)StateObject.wrappedValue.getter(v3, v4, v5, v6, v7);
  KeyPath = swift_getKeyPath(&unk_100EECFA8);
  swift_getKeyPath(&unk_100EECFD0);
  static Published.subscript.getter(&v16, v8, KeyPath);

  swift_release();
  swift_release();
  if ((unint64_t)v16 >> 62)
  {
    if (v16 < 0)
      v15 = v16;
    else
      v15 = v16 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v10 = _CocoaArrayWrapper.endIndex.getter(v15);
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v11 = swift_bridgeObjectRelease();
  if (v10)
  {
    v12 = sub_100007E8C(&qword_1011E10F8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a2, 1, 1, v12);
  }
  else
  {
    static ContentUnavailableView<>.search.getter(v11);
    v14 = sub_100007E8C(&qword_1011E10F8);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a2, 0, 1, v14);
  }
}

uint64_t sub_100C15A34()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100EECF60);
  v2 = swift_getKeyPath(&unk_100EECF88);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

void sub_100C15AA4(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[2];

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100EECF60);
  v5 = swift_getKeyPath(&unk_100EECF88);
  static Published.subscript.getter(v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  v6 = v7[1];
  *a2 = v7[0];
  a2[1] = v6;
}

void sub_100C15B20(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t KeyPath;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSString v12;
  uint64_t v13;
  uint64_t v14;

  KeyPath = swift_getKeyPath(&unk_100EECF60);
  v6 = swift_getKeyPath(&unk_100EECF88);
  v13 = a1;
  v14 = a2;
  v7 = v2;
  static Published.subscript.setter(&v13, v7, KeyPath, v6);
  v8 = *(void **)&v7[OBJC_IVAR____TtC11MusicCoreUIP33_66D9DE5C50A23191A347FA0B4F8C41B820CitySearchController_searchCompleter];
  v9 = swift_getKeyPath(&unk_100EECF60);
  v10 = swift_getKeyPath(&unk_100EECF88);
  static Published.subscript.getter(&v13, v7, v9, v10);
  swift_release(v9);
  swift_release(v10);
  v11 = v14;
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v11);
  objc_msgSend(v8, "setQuery:", v12, v13);

}

void sub_100C15C24(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100EECFA8);
  v5 = swift_getKeyPath(&unk_100EECFD0);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  *a2 = v6;
}

uint64_t sub_100C15CA0(uint64_t *a1, void **a2)
{
  uint64_t v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100EECFA8);
  v5 = swift_getKeyPath(&unk_100EECFD0);
  v7 = v2;
  swift_bridgeObjectRetain();
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

char *sub_100C15D14()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  id v15;
  char *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  char *v20;
  id v21;
  void **aBlock;
  unint64_t v24;
  double (*v25)(uint64_t, uint64_t);
  void *v26;
  void (*v27)(uint64_t);
  uint64_t v28;
  objc_super v29;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = sub_100007E8C(&qword_1011E1130);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v6 = (char *)&aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011E1138);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin();
  v10 = (char *)&aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = &v1[OBJC_IVAR____TtC11MusicCoreUIP33_66D9DE5C50A23191A347FA0B4F8C41B820CitySearchController__query];
  aBlock = 0;
  v24 = 0xE000000000000000;
  v12 = v1;
  Published.init(initialValue:)(&aBlock, &type metadata for String);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v10, v7);
  v13 = &v12[OBJC_IVAR____TtC11MusicCoreUIP33_66D9DE5C50A23191A347FA0B4F8C41B820CitySearchController__completionResults];
  aBlock = (void **)_swiftEmptyArrayStorage;
  v14 = sub_100007E8C(&qword_1011E0FE8);
  Published.init(initialValue:)(&aBlock, v14);
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v13, v6, v3);
  v15 = objc_msgSend(objc_allocWithZone((Class)MusicMapKitLocalSearchWrapper), "init");
  *(_QWORD *)&v12[OBJC_IVAR____TtC11MusicCoreUIP33_66D9DE5C50A23191A347FA0B4F8C41B820CitySearchController_searchCompleter] = v15;

  v29.receiver = v12;
  v29.super_class = ObjectType;
  v16 = (char *)objc_msgSendSuper2(&v29, "init");
  v17 = *(void **)&v16[OBJC_IVAR____TtC11MusicCoreUIP33_66D9DE5C50A23191A347FA0B4F8C41B820CitySearchController_searchCompleter];
  v18 = swift_allocObject(&unk_101108EE8, 24, 7);
  *(_QWORD *)(v18 + 16) = v16;
  v27 = sub_100C174CC;
  v28 = v18;
  aBlock = _NSConcreteStackBlock;
  v24 = 1107296256;
  v25 = sub_100C16308;
  v26 = &unk_101108F00;
  v19 = _Block_copy(&aBlock);
  v20 = v16;
  v21 = v17;
  objc_msgSend(v21, "setDidUpdateResults:", v19, swift_release().n128_f64[0]);

  _Block_release(v19);
  return v20;
}

void sub_100C15F50(uint64_t a1, void *a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t i;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  __n128 v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  void *v26;
  char *v27;
  _QWORD v28[4];
  _QWORD *v29;

  sub_100007E8C(&qword_1011E0490);
  __chkstk_darwin();
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = _swiftEmptyArrayStorage;
  if (!((unint64_t)a1 >> 62))
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
      goto LABEL_3;
LABEL_17:
    swift_bridgeObjectRelease();
    v18 = _swiftEmptyArrayStorage;
LABEL_18:
    v20 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v5, 1, 1, v20);
    type metadata accessor for MainActor(0);
    swift_bridgeObjectRetain();
    v21 = a2;
    v23 = static MainActor.shared.getter(v22);
    v24 = (_QWORD *)swift_allocObject(&unk_101108F38, 56, 7);
    v24[2] = v23;
    v24[3] = &protocol witness table for MainActor;
    v24[4] = v21;
    v24[5] = v18;
    v24[6] = a1;
    sub_100BF76B8((uint64_t)v5, (uint64_t)&unk_1011E1148, (uint64_t)v24);
    swift_release();
    return;
  }
  if (a1 < 0)
    v19 = a1;
  else
    v19 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v6 = _CocoaArrayWrapper.endIndex.getter(v19);
  if (!v6)
    goto LABEL_17;
LABEL_3:
  if (v6 >= 1)
  {
    v26 = a2;
    v27 = v5;
    for (i = 0; i != v6; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
      else
        v10 = *(id *)(a1 + 8 * i + 32);
      v11 = v10;
      v12 = objc_msgSend(v10, "subtitle");
      v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
      v15 = v14;

      v28[2] = v13;
      v28[3] = v15;
      v28[0] = 44;
      v28[1] = 0xE100000000000000;
      v16 = sub_100BBF2FC();
      LOBYTE(v12) = StringProtocol.contains<A>(_:)(v28, &type metadata for String, &type metadata for String, v16, v16);
      swift_bridgeObjectRelease();
      if ((v12 & 1) != 0)
      {

      }
      else
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v17);
        v8 = v29[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v8);
        v9 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8, v11);
        specialized ContiguousArray._endMutation()(v9);
      }
    }
    swift_bridgeObjectRelease();
    v18 = v29;
    a2 = v26;
    v5 = v27;
    goto LABEL_18;
  }
  __break(1u);
}

uint64_t sub_100C161B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;

  v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  v7 = type metadata accessor for MainActor(0);
  v6[6] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  return swift_task_switch(sub_100C16224, v9, v10);
}

uint64_t sub_100C16224()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  void *v4;
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 32);
  swift_release(*(_QWORD *)(v0 + 48));
  if (v1 >> 62)
  {
    v9 = *(_QWORD *)(v0 + 32);
    if (v9 < 0)
      v10 = *(_QWORD *)(v0 + 32);
    else
      v10 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v2 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(v9);
  }
  else
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = (uint64_t *)(v0 + 40);
  v4 = *(void **)(v0 + 24);
  if (v2)
    v3 = (uint64_t *)(v0 + 32);
  v5 = *v3;
  swift_bridgeObjectRetain();
  KeyPath = swift_getKeyPath(&unk_100EECFA8);
  v7 = swift_getKeyPath(&unk_100EECFD0);
  *(_QWORD *)(v0 + 16) = v5;
  static Published.subscript.setter(v0 + 16, v4, KeyPath, v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_100C16308(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t, __n128);
  unint64_t v4;
  uint64_t v5;
  __n128 v6;
  double result;

  v3 = *(void (**)(uint64_t, __n128))(a1 + 32);
  v4 = sub_100C172BC();
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v4);
  v6 = swift_retain();
  v3(v5, v6);
  swift_release();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_100C16404()
{
  return type metadata accessor for CitySearchController(0);
}

uint64_t type metadata accessor for CitySearchController(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011E0FC8, (uint64_t)&nominal type descriptor for CitySearchController);
}

void sub_100C16420(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  sub_100C164B4();
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_100C16508(319);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
      swift_updateClassMetadata2(a1, 256, 3, v6, a1 + 80);
    }
  }
}

void sub_100C164B4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1011E0FD8)
  {
    v0 = type metadata accessor for Published(0, &type metadata for String);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1011E0FD8);
  }
}

void sub_100C16508(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1011E0FE0)
  {
    v2 = sub_100044B54(&qword_1011E0FE8);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1011E0FE0);
  }
}

uint64_t sub_100C16560(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v19 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[2];
    v9 = (void *)a2[3];
    v10 = *((_BYTE *)a2 + 32);
    swift_retain();
    sub_1003E2E90(v8, v9, v10);
    *(_QWORD *)(a1 + 16) = v8;
    *(_QWORD *)(a1 + 24) = v9;
    *(_BYTE *)(a1 + 32) = v10;
    v11 = *(int *)(a3 + 24);
    v12 = (_QWORD *)(a1 + v11);
    v13 = (uint64_t *)((char *)a2 + v11);
    v14 = sub_100007E8C(&qword_1011E4D50);
    if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
    {
      v15 = type metadata accessor for DismissAction(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v12, v13, v15);
      v16 = v12;
      v17 = v14;
      v18 = 1;
    }
    else
    {
      *v12 = *v13;
      swift_retain();
      v16 = v12;
      v17 = v14;
      v18 = 0;
    }
    swift_storeEnumTagMultiPayload(v16, v17, v18);
  }
  return a1;
}

double sub_100C1666C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  swift_release();
  sub_1003E2EA0(*(_QWORD *)(a1 + 16), *(void **)(a1 + 24), *(_BYTE *)(a1 + 32));
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_100007E8C(&qword_1011E4D50);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for DismissAction(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_100C166F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(void **)(a2 + 24);
  v9 = *(_BYTE *)(a2 + 32);
  swift_retain();
  sub_1003E2E90(v7, v8, v9);
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  *(_BYTE *)(a1 + 32) = v9;
  v10 = *(int *)(a3 + 24);
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  v13 = sub_100007E8C(&qword_1011E4D50);
  if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
  {
    v14 = type metadata accessor for DismissAction(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v11, v12, v14);
    v15 = 1;
  }
  else
  {
    *v11 = *v12;
    swift_retain();
    v15 = 0;
  }
  swift_storeEnumTagMultiPayload(v11, v13, v15);
  return a1;
}

uint64_t sub_100C167C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  char v8;
  uint64_t v9;
  void *v10;
  char v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(void **)(a2 + 24);
  v8 = *(_BYTE *)(a2 + 32);
  sub_1003E2E90(v6, v7, v8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(void **)(a1 + 24);
  v11 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  sub_1003E2EA0(v9, v10, v11);
  if (a1 != a2)
  {
    v12 = *(int *)(a3 + 24);
    v13 = (_QWORD *)(a1 + v12);
    v14 = (_QWORD *)(a2 + v12);
    sub_10004FF60(a1 + v12, &qword_1011E4D50);
    v15 = sub_100007E8C(&qword_1011E4D50);
    if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
    {
      v16 = type metadata accessor for DismissAction(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
      v17 = 1;
    }
    else
    {
      *v13 = *v14;
      swift_retain();
      v17 = 0;
    }
    swift_storeEnumTagMultiPayload(v13, v15, v17);
  }
  return a1;
}

uint64_t sub_100C168D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(int *)(a3 + 24);
  v6 = (void *)(a1 + v5);
  v7 = (const void *)(a2 + v5);
  v8 = sub_100007E8C(&qword_1011E4D50);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for DismissAction(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v6, v7, v9);
    swift_storeEnumTagMultiPayload(v6, v8, 1);
  }
  else
  {
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100C16988(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  void *v9;
  char v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_release();
  v7 = *(_BYTE *)(a2 + 32);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(void **)(a1 + 24);
  v10 = *(_BYTE *)(a1 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = v7;
  sub_1003E2EA0(v8, v9, v10);
  if (a1 != a2)
  {
    v11 = *(int *)(a3 + 24);
    v12 = (void *)(a1 + v11);
    v13 = (const void *)(a2 + v11);
    sub_10004FF60(a1 + v11, &qword_1011E4D50);
    v14 = sub_100007E8C(&qword_1011E4D50);
    if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
    {
      v15 = type metadata accessor for DismissAction(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v12, v13, v15);
      swift_storeEnumTagMultiPayload(v12, v14, 1);
    }
    else
    {
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100C16A74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C16A80);
}

uint64_t sub_100C16A80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011E3520);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_100C16B00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C16B0C);
}

uint64_t sub_100C16B0C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_100007E8C(&qword_1011E3520);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for CitySelectionView(uint64_t a1)
{
  return sub_100055934(a1, qword_1011E1048, (uint64_t)&nominal type descriptor for CitySelectionView);
}

void sub_100C16B98(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = &unk_100EECEA8;
  v4[1] = &unk_100EECEC0;
  sub_100C16C14(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
  }
}

void sub_100C16C14(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1011E35A0)
  {
    v2 = type metadata accessor for DismissAction(255);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1011E35A0);
  }
}

uint64_t sub_100C16C68(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FBC660, 1);
}

uint64_t sub_100C16C78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100C14D10(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_100C16C80()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E10A0;
  if (!qword_1011E10A0)
  {
    v1 = sub_100044B54(&qword_1011E1098);
    sub_100049F28(&qword_1011E10A8, &qword_1011E10B0, (uint64_t)&protocol conformance descriptor for List<A, B>);
    sub_100049F28(&qword_1011E10B8, &qword_1011E10C0, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E10A0);
  }
  return result;
}

void sub_100C16D20(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  sub_100C15B20(v1, v2);
}

uint64_t sub_100C16D64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CitySelectionView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100C16DA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for CitySelectionView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  swift_release();
  sub_1003E2EA0(*(_QWORD *)(v0 + v3 + 16), *(void **)(v0 + v3 + 24), *(_BYTE *)(v0 + v3 + 32));
  v5 = v0 + v3 + *(int *)(v1 + 24);
  v6 = sub_100007E8C(&qword_1011E4D50);
  if (swift_getEnumCaseMultiPayload(v5, v6) == 1)
  {
    v7 = type metadata accessor for DismissAction(0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject(v0, v3 + v4);
}

uint64_t sub_100C16E64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CitySelectionView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double sub_100C16EA8@<D0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CitySelectionView(0) - 8) + 80);
  return sub_100C15008(a1, v2 + ((v5 + 16) & ~v5), a2);
}

double sub_100C16EF4@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100EED010);
  v5 = swift_getKeyPath(&unk_100EED038);
  static Published.subscript.getter(&v10, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  result = *(double *)&v10;
  v7 = v11;
  v8 = v12;
  v9 = v13;
  *(_OWORD *)a2 = v10;
  *(_QWORD *)(a2 + 16) = v7;
  *(_QWORD *)(a2 + 24) = v8;
  *(_OWORD *)(a2 + 32) = v9;
  return result;
}

uint64_t sub_100C16F80(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;

  v3 = *a1;
  v2 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v6 = a1[4];
  v7 = a1[5];
  v8 = *a2;
  KeyPath = swift_getKeyPath(&unk_100EED010);
  swift_getKeyPath(&unk_100EED038);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  static Published.subscript.getter(&v13, v8, KeyPath);
  swift_release();
  swift_release();
  v16 = v13;
  v17 = v14;
  v18 = v15;
  v10 = swift_getKeyPath(&unk_100EED010);
  v11 = swift_getKeyPath(&unk_100EED038);
  *(_QWORD *)&v13 = v3;
  *((_QWORD *)&v13 + 1) = v2;
  *(_QWORD *)&v14 = v5;
  *((_QWORD *)&v14 + 1) = v4;
  *(_QWORD *)&v15 = v6;
  *((_QWORD *)&v15 + 1) = v7;
  swift_retain();
  static Published.subscript.setter(&v13, v8, v10, v11);
  sub_100C1AE44((uint64_t)&v16);
  v19 = v16;
  sub_1001C7464((uint64_t)&v19);
  v13 = v17;
  return sub_1001C7464((uint64_t)&v13);
}

uint64_t sub_100C170AC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v14 = *a1;
  v7 = swift_allocObject(&unk_101108E98, 32, 7);
  *(_QWORD *)(v7 + 16) = a3;
  *(_QWORD *)(v7 + 24) = a4;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  v8 = sub_100007E8C(&qword_1011E0FE8);
  v9 = sub_100007E8C(&qword_1011E10F0);
  v10 = sub_100049F28(&qword_1011E1100, &qword_1011E0FE8, (uint64_t)&protocol conformance descriptor for [A]);
  v11 = sub_100048748(&qword_1011E1108, (uint64_t (*)(uint64_t))sub_100C172BC, (uint64_t)&protocol conformance descriptor for NSObject);
  v12 = sub_100049F28(&qword_1011E10E8, &qword_1011E10F0, (uint64_t)&protocol conformance descriptor for VStack<A>);
  return ForEach<>.init(_:id:content:)(&v14, a2, sub_100C17288, v7, v8, v9, v10, v11, v12);
}

uint64_t sub_100C171DC()
{
  uint64_t v0;

  return sub_100C170AC(*(uint64_t **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

unint64_t sub_100C171E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E10E0;
  if (!qword_1011E10E0)
  {
    v1 = sub_100044B54(&qword_1011E10D8);
    sub_100049F28(&qword_1011E10E8, &qword_1011E10F0, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E10E0);
  }
  return result;
}

uint64_t sub_100C17264()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100C17288(uint64_t *a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t *);
  uint64_t v4;

  v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  v4 = *a1;
  return v2(&v4);
}

unint64_t sub_100C172BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E1110;
  if (!qword_1011E1110)
  {
    v1 = objc_opt_self(MusicMapKitLocalSearchCompletionWrapper);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1011E1110);
  }
  return result;
}

uint64_t sub_100C172F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v1 = type metadata accessor for CitySelectionView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  swift_release();
  sub_1003E2EA0(*(_QWORD *)(v0 + v3 + 16), *(void **)(v0 + v3 + 24), *(_BYTE *)(v0 + v3 + 32));
  v5 = v0 + v3 + *(int *)(v1 + 24);
  v6 = sub_100007E8C(&qword_1011E4D50);
  if (swift_getEnumCaseMultiPayload(v5, v6) == 1)
  {
    v7 = type metadata accessor for DismissAction(0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
  }
  else
  {
    swift_release();
  }
  v8 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v9 = v8 + 8;

  return swift_deallocObject(v0, v9);
}

uint64_t sub_100C173D0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for CitySelectionView(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_100C156B8(v0 + v2, *(void **)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100C17410(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011E1120);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100C17458(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011E1120);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100C174A8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100C174CC(uint64_t a1)
{
  uint64_t v1;

  sub_100C15F50(a1, *(void **)(v1 + 16));
}

uint64_t sub_100C174D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100C174E4(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_100C174EC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100C17528(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1011E1144);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10005AEE4;
  return sub_100C161B4(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_100C175A8()
{
  _QWORD v1[2];

  v1[0] = sub_100044B54(&qword_1011E1088);
  v1[1] = sub_100049F28(&qword_1011E10D0, &qword_1011E1088, (uint64_t)&protocol conformance descriptor for NavigationStack<A, B>);
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.searchable(text:placement:prompt:)>>, 1);
}

uint64_t Razzmatazz.shortName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v21;
  char v22[16];
  __n128 *v23;
  __n128 v24;
  unint64_t v25;
  unint64_t v26;

  v1 = v0;
  v2 = type metadata accessor for Razzmatazz(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CharacterSet(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v0 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v24.n128_u64[0] = 64;
  v24.n128_u64[1] = 0xE100000000000000;
  v23 = &v24;
  swift_bridgeObjectRetain_n(v10, 2);
  v11 = sub_100C18768(0x7FFFFFFFFFFFFFFFLL, 1, sub_100B5CFF4, (uint64_t)v22, v9, v10);
  swift_bridgeObjectRelease();
  v12 = *((_QWORD *)v11 + 2);
  if (!v12)
  {
    swift_bridgeObjectRelease();
    sub_100C18CD0(v1, (uint64_t)v4);
LABEL_5:
    v17 = *((_QWORD *)v4 + 2);
    swift_bridgeObjectRetain();
    goto LABEL_6;
  }
  v13 = (__n128 *)&v11[32 * v12];
  v21 = *v13;
  v15 = v13[1].n128_u64[0];
  v14 = v13[1].n128_u64[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24 = v21;
  v25 = v15;
  v26 = v14;
  static CharacterSet.whitespaces.getter(v21);
  v16 = sub_100C18C8C();
  v17 = StringProtocol.trimmingCharacters(in:)(v8, &type metadata for Substring, v16);
  v19 = v18;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRelease();
  sub_100C18CD0(v1, (uint64_t)v4);
  if (!v19)
    goto LABEL_5;
LABEL_6:
  sub_100C18D14((uint64_t)v4);
  return v17;
}

uint64_t sub_100C177C8(char a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  _OWORD *v44;
  __int128 v45;
  uint64_t v46;
  unint64_t v47;
  char *v49;
  char *v50;
  char *v51;
  char *v52;
  _QWORD v53[2];
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _OWORD *v60;
  __int128 v61;
  __int128 v62;

  if (!a1)
  {
    sub_100C1A228((uint64_t)v1, (uint64_t)&v62);
    sub_100C1A228((uint64_t)&v62, (uint64_t)v53);
    v9 = v1[3];
    v54 = v1[2];
    v55 = v9;
    sub_100C1A228((uint64_t)(v1 + 4), (uint64_t)&v61);
    sub_100C1A228((uint64_t)&v61, (uint64_t)&v56);
    v10 = v1[7];
    v58 = v1[6];
    v59 = v10;
    v12 = v53[0];
    v11 = v53[1];
    sub_100055CE4((uint64_t)&v62);
    swift_bridgeObjectRetain();
    sub_100055CE4((uint64_t)&v61);
    if (v11)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v13 = sub_100BCC0F8(0, 1, 1, (char *)_swiftEmptyArrayStorage);
      v15 = *((_QWORD *)v13 + 2);
      v14 = *((_QWORD *)v13 + 3);
      v16 = v15 + 1;
      if (v15 >= v14 >> 1)
      {
        v49 = sub_100BCC0F8((char *)(v14 > 1), v15 + 1, 1, v13);
        v16 = v15 + 1;
        v13 = v49;
      }
      *((_QWORD *)v13 + 2) = v16;
      v17 = &v13[16 * v15];
      *((_QWORD *)v17 + 4) = v12;
      *((_QWORD *)v17 + 5) = v11;
      v18 = v55;
      if (!v55)
        goto LABEL_21;
    }
    else
    {
      swift_bridgeObjectRetain();
      v13 = (char *)_swiftEmptyArrayStorage;
      v18 = v55;
      if (!v55)
      {
LABEL_21:
        v30 = v57;
        if (v57)
        {
          v31 = v56;
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0)
            v13 = sub_100BCC0F8(0, *((_QWORD *)v13 + 2) + 1, 1, v13);
          v33 = *((_QWORD *)v13 + 2);
          v32 = *((_QWORD *)v13 + 3);
          v34 = v33 + 1;
          if (v33 >= v32 >> 1)
          {
            v51 = sub_100BCC0F8((char *)(v32 > 1), v33 + 1, 1, v13);
            v34 = v33 + 1;
            v13 = v51;
          }
          *((_QWORD *)v13 + 2) = v34;
          v35 = &v13[16 * v33];
          *((_QWORD *)v35 + 4) = v31;
          *((_QWORD *)v35 + 5) = v30;
        }
        v36 = v59;
        if (v59)
        {
          v37 = v58;
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0)
            v13 = sub_100BCC0F8(0, *((_QWORD *)v13 + 2) + 1, 1, v13);
          v39 = *((_QWORD *)v13 + 2);
          v38 = *((_QWORD *)v13 + 3);
          v40 = v39 + 1;
          if (v39 >= v38 >> 1)
          {
            v52 = sub_100BCC0F8((char *)(v38 > 1), v39 + 1, 1, v13);
            v40 = v39 + 1;
            v13 = v52;
          }
          *((_QWORD *)v13 + 2) = v40;
          v41 = &v13[16 * v39];
          *((_QWORD *)v41 + 4) = v37;
          *((_QWORD *)v41 + 5) = v36;
        }
        v42 = sub_100007E8C(&qword_1011E66B0);
        swift_arrayDestroy(v53, 4, v42);
        v60 = v13;
        goto LABEL_38;
      }
    }
    v25 = v54;
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0)
      v13 = sub_100BCC0F8(0, *((_QWORD *)v13 + 2) + 1, 1, v13);
    v27 = *((_QWORD *)v13 + 2);
    v26 = *((_QWORD *)v13 + 3);
    v28 = v27 + 1;
    if (v27 >= v26 >> 1)
    {
      v50 = sub_100BCC0F8((char *)(v26 > 1), v27 + 1, 1, v13);
      v28 = v27 + 1;
      v13 = v50;
    }
    *((_QWORD *)v13 + 2) = v28;
    v29 = &v13[16 * v27];
    *((_QWORD *)v29 + 4) = v25;
    *((_QWORD *)v29 + 5) = v18;
    goto LABEL_21;
  }
  if (a1 != 1)
  {
    v19 = v1[5];
    if (v19)
    {
      v20 = v1[4];
      swift_bridgeObjectRetain();
      if (String.count.getter(v20, v19) == 2)
      {
        v21 = sub_100007E8C(&qword_1011DF560);
        v22 = swift_allocObject(v21, 80, 7);
        v23 = *((_OWORD *)v1 + 1);
        *(_OWORD *)(v22 + 16) = xmmword_100EA7AC0;
        *(_OWORD *)(v22 + 32) = v23;
        *(_QWORD *)(v22 + 48) = v20;
        *(_QWORD *)(v22 + 56) = v19;
        v61 = *((_OWORD *)v1 + 3);
        v62 = v23;
        *(_OWORD *)(v22 + 64) = v61;
        v60 = (_OWORD *)v22;
        sub_100055CE4((uint64_t)&v62);
        sub_100055CE4((uint64_t)&v61);
        v7 = sub_100007E8C(&qword_1011E01D8);
        v8 = sub_100BF1F38();
        goto LABEL_14;
      }
      swift_bridgeObjectRelease();
    }
    v43 = sub_100007E8C(&qword_1011DF560);
    v44 = (_OWORD *)swift_allocObject(v43, 64, 7);
    v45 = *((_OWORD *)v1 + 1);
    v44[1] = xmmword_100EA7A80;
    v44[2] = v45;
    v61 = *((_OWORD *)v1 + 3);
    v62 = v45;
    v44[3] = v61;
    v60 = v44;
    sub_100055CE4((uint64_t)&v62);
    sub_100055CE4((uint64_t)&v61);
LABEL_38:
    v46 = sub_100007E8C(&qword_1011E01D8);
    v47 = sub_100BF1F38();
    v24 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v46, v47);
    goto LABEL_39;
  }
  v2 = v1[5];
  if (v2)
  {
    v3 = v1[4];
    swift_bridgeObjectRetain();
    if (String.count.getter(v3, v2) == 2)
    {
      v4 = sub_100007E8C(&qword_1011DF560);
      v5 = swift_allocObject(v4, 64, 7);
      v62 = *((_OWORD *)v1 + 1);
      v6 = v62;
      *(_OWORD *)(v5 + 16) = xmmword_100EA7A80;
      *(_OWORD *)(v5 + 32) = v6;
      *(_QWORD *)(v5 + 48) = v3;
      *(_QWORD *)(v5 + 56) = v2;
      *(_QWORD *)&v61 = v5;
      sub_100055CE4((uint64_t)&v62);
      v7 = sub_100007E8C(&qword_1011E01D8);
      v8 = sub_100BF1F38();
LABEL_14:
      v24 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v7, v8);
LABEL_39:
      swift_bridgeObjectRelease();
      return v24;
    }
    swift_bridgeObjectRelease();
  }
  v24 = v1[2];
  swift_bridgeObjectRetain();
  return v24;
}

uint64_t Razzmatazz.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Razzmatazz(0) + 24);
  v4 = type metadata accessor for Date(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t Razzmatazz.performingArtist.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Razzmatazz(0) + 28);
  v4 = type metadata accessor for Artist(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for Razzmatazz(uint64_t a1)
{
  return sub_100055934(a1, qword_1011E11D0, (uint64_t)&nominal type descriptor for Razzmatazz);
}

uint64_t sub_100C17D40(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = v1;
  v4 = v2[1];
  if (v4)
  {
    v5 = *v2;
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)(a1, v5, v4);
    swift_bridgeObjectRelease(v4);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  v6 = v2[2];
  v7 = v2[3];
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v6, v7);
  swift_bridgeObjectRelease(v7);
  v8 = v2[5];
  if (v8)
  {
    v9 = v2[4];
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)(a1, v9, v8);
    swift_bridgeObjectRelease(v8);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  v11 = v2[6];
  v10 = v2[7];
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v11, v10);
  return swift_bridgeObjectRelease(v10);
}

uint64_t sub_100C17E2C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100C17E5C + 4 * byte_100EED058[*v0]))(0x73736572646461, 0xE700000000000000);
}

uint64_t sub_100C17E5C()
{
  return 2037672291;
}

uint64_t sub_100C17E6C()
{
  return 0x6E6F69676572;
}

uint64_t sub_100C17E80()
{
  return 0x7972746E756F63;
}

uint64_t sub_100C17E94@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100C1A338(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100C17EB8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C1A7B0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100C17EE0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C1A7B0();
  return CodingKey.debugDescription.getter(a1, v2);
}

Swift::Int sub_100C17F08()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[9];
  _OWORD v13[4];

  v1 = v0;
  Hasher.init(_seed:)(v12, 0);
  v2 = *v0;
  v3 = v1[1];
  swift_bridgeObjectRetain();
  String.hash(into:)(v12, v2, v3);
  swift_bridgeObjectRelease();
  v4 = v1[2];
  v5 = v1[3];
  swift_bridgeObjectRetain();
  String.hash(into:)(v12, v4, v5);
  swift_bridgeObjectRelease();
  v6 = *((_OWORD *)v1 + 3);
  v13[0] = *((_OWORD *)v1 + 2);
  v13[1] = v6;
  v7 = *((_OWORD *)v1 + 5);
  v13[2] = *((_OWORD *)v1 + 4);
  v13[3] = v7;
  sub_100C18D50((uint64_t)v13);
  sub_100C17D40((uint64_t)v12);
  sub_100C18DA4(v13);
  v8 = (id)v1[12];
  NSObject.hash(into:)(v12);

  type metadata accessor for Razzmatazz.Venue(0);
  v9 = type metadata accessor for TimeZone(0);
  v10 = sub_100048748(&qword_1011E1168, (uint64_t (*)(uint64_t))&type metadata accessor for TimeZone, (uint64_t)&protocol conformance descriptor for TimeZone);
  dispatch thunk of Hashable.hash(into:)(v12, v9, v10);
  return Hasher._finalize()();
}

double sub_100C18020@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[2];
  __int128 v8;
  __int128 v9;

  sub_100C1A4D8(a1, (uint64_t *)v7);
  if (!v2)
  {
    v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    result = *(double *)&v8;
    v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

Swift::Int sub_100C18060()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  sub_100C17D40((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_100C180A0(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  sub_100C17D40((uint64_t)v2);
  return Hasher._finalize()();
}

uint64_t sub_100C180D8(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[4];
  _OWORD v8[4];

  v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  v3 = a1[3];
  v7[2] = a1[2];
  v7[3] = v3;
  v4 = a2[1];
  v8[0] = *a2;
  v8[1] = v4;
  v5 = a2[3];
  v8[2] = a2[2];
  v8[3] = v5;
  return sub_100C18E0C((uint64_t *)v7, v8) & 1;
}

uint64_t sub_100C18124(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD v14[4];

  v2 = v1;
  v4 = *v1;
  v5 = v2[1];
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v4, v5);
  swift_bridgeObjectRelease();
  v6 = v2[2];
  v7 = v2[3];
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v6, v7);
  swift_bridgeObjectRelease();
  v8 = *((_OWORD *)v2 + 3);
  v14[0] = *((_OWORD *)v2 + 2);
  v14[1] = v8;
  v9 = *((_OWORD *)v2 + 5);
  v14[2] = *((_OWORD *)v2 + 4);
  v14[3] = v9;
  sub_100C18D50((uint64_t)v14);
  sub_100C17D40(a1);
  sub_100C18DA4(v14);
  v10 = (id)v2[12];
  NSObject.hash(into:)(a1);

  v11 = type metadata accessor for TimeZone(0);
  v12 = sub_100048748(&qword_1011E1168, (uint64_t (*)(uint64_t))&type metadata accessor for TimeZone, (uint64_t)&protocol conformance descriptor for TimeZone);
  return dispatch thunk of Hashable.hash(into:)(a1, v11, v12);
}

Swift::Int sub_100C18230(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[9];
  _OWORD v14[4];

  v2 = v1;
  Hasher.init(_seed:)(v13, a1);
  v3 = *v1;
  v4 = v2[1];
  swift_bridgeObjectRetain();
  String.hash(into:)(v13, v3, v4);
  swift_bridgeObjectRelease();
  v5 = v2[2];
  v6 = v2[3];
  swift_bridgeObjectRetain();
  String.hash(into:)(v13, v5, v6);
  swift_bridgeObjectRelease();
  v7 = *((_OWORD *)v2 + 3);
  v14[0] = *((_OWORD *)v2 + 2);
  v14[1] = v7;
  v8 = *((_OWORD *)v2 + 5);
  v14[2] = *((_OWORD *)v2 + 4);
  v14[3] = v8;
  sub_100C18D50((uint64_t)v14);
  sub_100C17D40((uint64_t)v13);
  sub_100C18DA4(v14);
  v9 = (id)v2[12];
  NSObject.hash(into:)(v13);

  v10 = type metadata accessor for TimeZone(0);
  v11 = sub_100048748(&qword_1011E1168, (uint64_t (*)(uint64_t))&type metadata accessor for TimeZone, (uint64_t)&protocol conformance descriptor for TimeZone);
  dispatch thunk of Hashable.hash(into:)(v13, v10, v11);
  return Hasher._finalize()();
}

uint64_t Razzmatazz.hash(into:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD v24[4];

  v2 = v1;
  v4 = *v1;
  v5 = v2[1];
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v4, v5);
  swift_bridgeObjectRelease();
  v6 = v2[2];
  v7 = v2[3];
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v6, v7);
  swift_bridgeObjectRelease();
  v8 = type metadata accessor for Razzmatazz(0);
  v9 = type metadata accessor for Date(0);
  v10 = sub_100048748(&qword_1011E1158, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  dispatch thunk of Hashable.hash(into:)(a1, v9, v10);
  v11 = type metadata accessor for Artist(0);
  v12 = sub_100048748(&qword_1011E1160, (uint64_t (*)(uint64_t))&type metadata accessor for Artist, (uint64_t)&protocol conformance descriptor for Artist);
  dispatch thunk of Hashable.hash(into:)(a1, v11, v12);
  v13 = (char *)v2 + *(int *)(v8 + 32);
  v14 = *(_QWORD *)v13;
  v15 = *((_QWORD *)v13 + 1);
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v14, v15);
  swift_bridgeObjectRelease();
  v16 = *((_QWORD *)v13 + 2);
  v17 = *((_QWORD *)v13 + 3);
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v16, v17);
  swift_bridgeObjectRelease();
  v18 = *((_OWORD *)v13 + 3);
  v24[0] = *((_OWORD *)v13 + 2);
  v24[1] = v18;
  v19 = *((_OWORD *)v13 + 5);
  v24[2] = *((_OWORD *)v13 + 4);
  v24[3] = v19;
  sub_100C18D50((uint64_t)v24);
  sub_100C17D40(a1);
  sub_100C18DA4(v24);
  v20 = *((id *)v13 + 12);
  NSObject.hash(into:)(a1);

  type metadata accessor for Razzmatazz.Venue(0);
  v21 = type metadata accessor for TimeZone(0);
  v22 = sub_100048748(&qword_1011E1168, (uint64_t (*)(uint64_t))&type metadata accessor for TimeZone, (uint64_t)&protocol conformance descriptor for TimeZone);
  return dispatch thunk of Hashable.hash(into:)(a1, v21, v22);
}

Swift::Int Razzmatazz.hashValue.getter()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[9];
  _OWORD v23[4];

  v1 = v0;
  Hasher.init(_seed:)(v22, 0);
  v2 = *v0;
  v3 = v1[1];
  swift_bridgeObjectRetain();
  String.hash(into:)(v22, v2, v3);
  swift_bridgeObjectRelease();
  v4 = v1[2];
  v5 = v1[3];
  swift_bridgeObjectRetain();
  String.hash(into:)(v22, v4, v5);
  swift_bridgeObjectRelease();
  v6 = type metadata accessor for Razzmatazz(0);
  v7 = type metadata accessor for Date(0);
  v8 = sub_100048748(&qword_1011E1158, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  dispatch thunk of Hashable.hash(into:)(v22, v7, v8);
  v9 = type metadata accessor for Artist(0);
  v10 = sub_100048748(&qword_1011E1160, (uint64_t (*)(uint64_t))&type metadata accessor for Artist, (uint64_t)&protocol conformance descriptor for Artist);
  dispatch thunk of Hashable.hash(into:)(v22, v9, v10);
  v11 = (char *)v1 + *(int *)(v6 + 32);
  v12 = *(_QWORD *)v11;
  v13 = *((_QWORD *)v11 + 1);
  swift_bridgeObjectRetain();
  String.hash(into:)(v22, v12, v13);
  swift_bridgeObjectRelease();
  v14 = *((_QWORD *)v11 + 2);
  v15 = *((_QWORD *)v11 + 3);
  swift_bridgeObjectRetain();
  String.hash(into:)(v22, v14, v15);
  swift_bridgeObjectRelease();
  v16 = *((_OWORD *)v11 + 3);
  v23[0] = *((_OWORD *)v11 + 2);
  v23[1] = v16;
  v17 = *((_OWORD *)v11 + 5);
  v23[2] = *((_OWORD *)v11 + 4);
  v23[3] = v17;
  sub_100C18D50((uint64_t)v23);
  sub_100C17D40((uint64_t)v22);
  sub_100C18DA4(v23);
  v18 = *((id *)v11 + 12);
  NSObject.hash(into:)(v22);

  type metadata accessor for Razzmatazz.Venue(0);
  v19 = type metadata accessor for TimeZone(0);
  v20 = sub_100048748(&qword_1011E1168, (uint64_t (*)(uint64_t))&type metadata accessor for TimeZone, (uint64_t)&protocol conformance descriptor for TimeZone);
  dispatch thunk of Hashable.hash(into:)(v22, v19, v20);
  return Hasher._finalize()();
}

Swift::Int sub_100C18730(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  Razzmatazz.hash(into:)((uint64_t)v2);
  return Hasher._finalize()();
}

char *sub_100C18768(uint64_t a1, char a2, uint64_t (*a3)(_QWORD *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char *v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  unint64_t v46;
  _QWORD v48[4];

  v48[3] = a4;
  if (a1 < 0)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  v11 = a5;
  v14 = swift_allocObject(&unk_101108FC0, 24, 7);
  *(_QWORD *)(v14 + 16) = _swiftEmptyArrayStorage;
  v45 = swift_allocObject(&unk_101108FE8, 24, 7);
  *(_QWORD *)(v45 + 16) = 15;
  v15 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (v16 = HIBYTE(a6) & 0xF) : (v16 = v11 & 0xFFFFFFFFFFFFLL), !v16))
  {
    if ((a6 & 0x2000000000000000) == 0)
      v15 = v11 & 0xFFFFFFFFFFFFLL;
    v31 = 7;
    if (((a6 >> 60) & ((v11 & 0x800000000000000) == 0)) != 0)
      v31 = 11;
    sub_100C18B80(v31 | (v15 << 16), v45, a2 & 1, v14, v11, a6);
    swift_bridgeObjectRelease();
    v10 = *(char **)(v14 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_40;
  }
  v40 = a1;
  v41 = v14;
  v17 = 7;
  if (((a6 >> 60) & ((v11 & 0x800000000000000) == 0)) != 0)
    v17 = 11;
  v39 = v17 | (v16 << 16);
  v46 = 4 * v16;
  v10 = (char *)_swiftEmptyArrayStorage;
  v9 = 15;
  v8 = 15;
  v18 = 15;
  while (1)
  {
    v48[0] = String.subscript.getter(v9, v11, a6);
    v48[1] = v19;
    v20 = a3(v48);
    if (v7)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v10;
    }
    v6 = v20;
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      break;
    v9 = String.index(after:)(v9, v11, a6);
LABEL_11:
    if (v46 == v9 >> 14)
      goto LABEL_31;
  }
  if (v8 >> 14 == v9 >> 14 && (a2 & 1) != 0)
  {
    v9 = String.index(after:)(v9, v11, a6);
    *(_QWORD *)(v45 + 16) = v9;
    v8 = v9;
    v18 = v9;
    goto LABEL_11;
  }
  if (v9 >> 14 < v8 >> 14)
  {
    __break(1u);
    goto LABEL_43;
  }
  v21 = String.subscript.getter(v8, v9, v11, a6);
  v42 = v22;
  v43 = v21;
  v24 = v23;
  v26 = v25;
  if ((swift_isUniquelyReferenced_nonNull_native(v10) & 1) == 0)
    v10 = sub_100BCC8F4(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
  v28 = *((_QWORD *)v10 + 2);
  v27 = *((_QWORD *)v10 + 3);
  v6 = v28 + 1;
  if (v28 >= v27 >> 1)
    v10 = sub_100BCC8F4((char *)(v27 > 1), v28 + 1, 1, v10);
  *((_QWORD *)v10 + 2) = v6;
  v29 = &v10[32 * v28];
  *((_QWORD *)v29 + 4) = v43;
  *((_QWORD *)v29 + 5) = v24;
  *((_QWORD *)v29 + 6) = v26;
  *((_QWORD *)v29 + 7) = v42;
  *(_QWORD *)(v41 + 16) = v10;
  v30 = String.index(after:)(v9, v11, a6);
  v9 = v30;
  *(_QWORD *)(v45 + 16) = v30;
  if (*((_QWORD *)v10 + 2) != v40)
  {
    v8 = v30;
    v18 = v30;
    goto LABEL_11;
  }
  v18 = v30;
  v8 = v30;
LABEL_31:
  if (v46 == v8 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_39;
  }
  if (v46 >= v18 >> 14)
  {
    v6 = String.subscript.getter(v18, v39, v11, a6);
    v8 = v32;
    v9 = v33;
    v11 = v34;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native(v10) & 1) == 0)
      goto LABEL_45;
    goto LABEL_36;
  }
LABEL_44:
  __break(1u);
LABEL_45:
  v10 = sub_100BCC8F4(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
LABEL_36:
  v36 = *((_QWORD *)v10 + 2);
  v35 = *((_QWORD *)v10 + 3);
  if (v36 >= v35 >> 1)
    v10 = sub_100BCC8F4((char *)(v35 > 1), v36 + 1, 1, v10);
  *((_QWORD *)v10 + 2) = v36 + 1;
  v37 = &v10[32 * v36];
  *((_QWORD *)v37 + 4) = v6;
  *((_QWORD *)v37 + 5) = v8;
  *((_QWORD *)v37 + 6) = v9;
  *((_QWORD *)v37 + 7) = v11;
  *(_QWORD *)(v41 + 16) = v10;
LABEL_39:
  swift_bridgeObjectRetain();
  swift_release();
LABEL_40:
  swift_release();
  return v10;
}

uint64_t sub_100C18B80(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v19;
  unint64_t v20;
  char *v21;

  v13 = *(_QWORD *)(a2 + 16);
  v14 = (v13 >> 14 == a1 >> 14) & a3;
  if (v14 == 1)
    return v14 ^ 1u;
  if (a1 >> 14 < v13 >> 14)
  {
    __break(1u);
    goto LABEL_9;
  }
  v6 = a4;
  v7 = String.subscript.getter(v13, a1, a5, a6);
  v8 = v15;
  v9 = v16;
  v10 = v17;
  v11 = *(char **)(v6 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v11);
  *(_QWORD *)(v6 + 16) = v11;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_9:
    v11 = sub_100BCC8F4(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    *(_QWORD *)(v6 + 16) = v11;
  }
  v20 = *((_QWORD *)v11 + 2);
  v19 = *((_QWORD *)v11 + 3);
  if (v20 >= v19 >> 1)
  {
    v11 = sub_100BCC8F4((char *)(v19 > 1), v20 + 1, 1, v11);
    *(_QWORD *)(v6 + 16) = v11;
  }
  *((_QWORD *)v11 + 2) = v20 + 1;
  v21 = &v11[32 * v20];
  *((_QWORD *)v21 + 4) = v7;
  *((_QWORD *)v21 + 5) = v8;
  *((_QWORD *)v21 + 6) = v9;
  *((_QWORD *)v21 + 7) = v10;
  return v14 ^ 1u;
}

unint64_t sub_100C18C8C()
{
  unint64_t result;

  result = qword_1011E1150;
  if (!qword_1011E1150)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Substring, &type metadata for Substring);
    atomic_store(result, (unint64_t *)&qword_1011E1150);
  }
  return result;
}

uint64_t sub_100C18CD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Razzmatazz(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100C18D14(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Razzmatazz(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100C18D50(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_100C18DA4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[5];
  swift_bridgeObjectRelease(a1[7]);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t type metadata accessor for Razzmatazz.Venue(uint64_t a1)
{
  return sub_100055934(a1, qword_1011E1270, (uint64_t)&nominal type descriptor for Razzmatazz.Venue);
}

uint64_t sub_100C18E0C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = a1[1];
  v5 = a2[1];
  if (!v4)
  {
    if (v5)
      return 0;
    goto LABEL_10;
  }
  if (!v5)
    return 0;
  v6 = *a1;
  v7 = *a1 == *a2 && v4 == v5;
  if (v7 || (v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v4, *a2, v5, 0), result = 0, (v8 & 1) != 0))
  {
LABEL_10:
    v10 = a1[2];
    v11 = a1[3];
    v12 = a2[2];
    v13 = a2[3];
    if (v10 != v12 || v11 != v13)
    {
      v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v11, v12, v13, 0);
      result = 0;
      if ((v15 & 1) == 0)
        return result;
    }
    v16 = a1[5];
    v17 = a2[5];
    if (v16)
    {
      if (v17)
      {
        v18 = a1[4];
        v19 = a2[4];
        if (v18 != v19 || v16 != v17)
        {
          v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v16, v19, v17, 0);
          result = 0;
          if ((v20 & 1) == 0)
            return result;
        }
LABEL_24:
        v21 = a1[6];
        v22 = a1[7];
        v23 = a2[6];
        v24 = a2[7];
        if (v21 == v23 && v22 == v24)
          return 1;
        else
          return _stringCompareWithSmolCheck(_:_:expecting:)(v21, v22, v23, v24, 0);
      }
    }
    else if (!v17)
    {
      goto LABEL_24;
    }
    return 0;
  }
  return result;
}

uint64_t sub_100C18F0C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  _OWORD v19[4];
  _OWORD v20[4];

  v4 = *a1;
  v5 = a1[1];
  v6 = *(_QWORD *)(a2 + 8);
  v7 = v4 == *(_QWORD *)a2 && v5 == v6;
  if (!v7 && (_stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *(_QWORD *)a2, v6, 0) & 1) == 0)
    return 0;
  v8 = a1[2];
  v9 = a1[3];
  v10 = *(_QWORD *)(a2 + 16);
  v11 = *(_QWORD *)(a2 + 24);
  v12 = v8 == v10 && v9 == v11;
  if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)(v8, v9, v10, v11, 0) & 1) == 0)
    return 0;
  v13 = *((_OWORD *)a1 + 3);
  v19[0] = *((_OWORD *)a1 + 2);
  v19[1] = v13;
  v14 = *((_OWORD *)a1 + 5);
  v19[2] = *((_OWORD *)a1 + 4);
  v19[3] = v14;
  v15 = *(_OWORD *)(a2 + 48);
  v20[0] = *(_OWORD *)(a2 + 32);
  v20[1] = v15;
  v16 = *(_OWORD *)(a2 + 80);
  v20[2] = *(_OWORD *)(a2 + 64);
  v20[3] = v16;
  if ((sub_100C18E0C((uint64_t *)v19, v20) & 1) == 0)
    return 0;
  sub_100C1A270();
  if ((static NSObject.== infix(_:_:)(a1[12], *(_QWORD *)(a2 + 96)) & 1) == 0)
    return 0;
  v17 = type metadata accessor for Razzmatazz.Venue(0);
  return static TimeZone.== infix(_:_:)((char *)a1 + *(int *)(v17 + 32), a2 + *(int *)(v17 + 32));
}

uint64_t _s11MusicCoreUI10RazzmatazzV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  int *v13;
  __n128 v14;

  v4 = *a1;
  v5 = a1[1];
  v6 = a2[1];
  v7 = v4 == *a2 && v5 == v6;
  if ((v7 || (_stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *a2, v6, 0) & 1) != 0)
    && ((v8 = a1[2], v9 = a1[3], v10 = a2[2], v11 = a2[3], v8 == v10) ? (v12 = v9 == v11) : (v12 = 0),
        (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)(v8, v9, v10, v11, 0) & 1) != 0)
     && (v13 = (int *)type metadata accessor for Razzmatazz(0),
         (static Date.== infix(_:_:)((char *)a1 + v13[6], (char *)a2 + v13[6], v14) & 1) != 0)
     && (static Artist.== infix(_:_:)((char *)a1 + v13[7], (char *)a2 + v13[7]) & 1) != 0))
  {
    return sub_100C18F0C((uint64_t *)((char *)a1 + v13[8]), (uint64_t)a2 + v13[8]);
  }
  else
  {
    return 0;
  }
}

uint64_t sub_100C190B8()
{
  return sub_100048748(&qword_1011E1170, type metadata accessor for Razzmatazz, (uint64_t)&protocol conformance descriptor for Razzmatazz);
}

uint64_t *initializeBufferWithCopyOfBuffer for Razzmatazz(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  id v32;
  uint64_t v33;
  char *v35;
  void *v36;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v33 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v33 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a3[6];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for Date(0);
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    v14 = a3[7];
    v15 = (char *)v4 + v14;
    v16 = (char *)a2 + v14;
    v17 = type metadata accessor for Artist(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    v18 = a3[8];
    v19 = (uint64_t *)((char *)v4 + v18);
    v20 = (uint64_t *)((char *)a2 + v18);
    v21 = *(uint64_t *)((char *)a2 + v18);
    v22 = v20[1];
    *v19 = v21;
    v19[1] = v22;
    v23 = v20[3];
    v19[2] = v20[2];
    v19[3] = v23;
    v24 = v20[5];
    v19[4] = v20[4];
    v19[5] = v24;
    v25 = v20[7];
    v19[6] = v20[6];
    v19[7] = v25;
    v26 = v20[9];
    v19[8] = v20[8];
    v19[9] = v26;
    v27 = v20[11];
    v19[10] = v20[10];
    v19[11] = v27;
    v36 = (void *)v20[12];
    v19[12] = v36;
    v28 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
    v35 = (char *)v19 + v28;
    v29 = (char *)v20 + v28;
    v30 = type metadata accessor for TimeZone(0);
    v31 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v32 = v36;
    v31(v35, v29, v30);
  }
  return v4;
}

uint64_t destroy for Razzmatazz(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[6];
  v5 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[7];
  v7 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = a1 + a2[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v9 = v8 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v10 = type metadata accessor for TimeZone(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

_QWORD *initializeWithCopy for Razzmatazz(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  id v31;
  char *v33;
  void *v34;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Date(0);
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  v13 = a3[7];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  v17 = a3[8];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  v20 = *(_QWORD *)((char *)a2 + v17 + 8);
  *v18 = *(_QWORD *)((char *)a2 + v17);
  v18[1] = v20;
  v21 = *(_QWORD *)((char *)a2 + v17 + 16);
  v22 = v19[3];
  v18[2] = v21;
  v18[3] = v22;
  v23 = v19[5];
  v18[4] = v19[4];
  v18[5] = v23;
  v24 = v19[7];
  v18[6] = v19[6];
  v18[7] = v24;
  v25 = v19[9];
  v18[8] = v19[8];
  v18[9] = v25;
  v26 = v19[11];
  v18[10] = v19[10];
  v18[11] = v26;
  v34 = (void *)v19[12];
  v18[12] = v34;
  v27 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v33 = (char *)v18 + v27;
  v28 = (char *)v19 + v27;
  v29 = type metadata accessor for TimeZone(0);
  v30 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v31 = v34;
  v30(v33, v28, v29);
  return a1;
}

_QWORD *assignWithCopy for Razzmatazz(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[7];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  v14 = a3[8];
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  *v15 = *(_QWORD *)((char *)a2 + v14);
  v15[1] = *(_QWORD *)((char *)a2 + v14 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[2] = v16[2];
  v15[3] = v16[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[4] = v16[4];
  v15[5] = v16[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[6] = v16[6];
  v15[7] = v16[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[8] = v16[8];
  v15[9] = v16[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[10] = v16[10];
  v15[11] = v16[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = (void *)v16[12];
  v18 = (void *)v15[12];
  v15[12] = v17;
  v19 = v17;

  v20 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v21 = (char *)v15 + v20;
  v22 = (char *)v16 + v20;
  v23 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 24))(v21, v22, v23);
  return a1;
}

_OWORD *initializeWithTake for Razzmatazz(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[7];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[8];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = *((_OWORD *)v17 + 1);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = v18;
  v19 = *((_OWORD *)v17 + 3);
  *((_OWORD *)v16 + 2) = *((_OWORD *)v17 + 2);
  *((_OWORD *)v16 + 3) = v19;
  v20 = *((_OWORD *)v17 + 5);
  *((_OWORD *)v16 + 4) = *((_OWORD *)v17 + 4);
  *((_OWORD *)v16 + 5) = v20;
  *((_QWORD *)v16 + 12) = *((_QWORD *)v17 + 12);
  v21 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v22 = &v16[v21];
  v23 = &v17[v21];
  v24 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
  return a1;
}

_QWORD *assignWithTake for Razzmatazz(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = a3[7];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = a3[8];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  v20 = v18[3];
  v17[2] = v18[2];
  v17[3] = v20;
  swift_bridgeObjectRelease();
  v21 = v18[5];
  v17[4] = v18[4];
  v17[5] = v21;
  swift_bridgeObjectRelease();
  v22 = v18[7];
  v17[6] = v18[6];
  v17[7] = v22;
  swift_bridgeObjectRelease();
  v23 = v18[9];
  v17[8] = v18[8];
  v17[9] = v23;
  swift_bridgeObjectRelease();
  v24 = v18[11];
  v17[10] = v18[10];
  v17[11] = v24;
  swift_bridgeObjectRelease();
  v25 = (void *)v17[12];
  v17[12] = v18[12];

  v26 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v27 = (char *)v17 + v26;
  v28 = (char *)v18 + v26;
  v29 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 40))(v27, v28, v29);
  return a1;
}

uint64_t getEnumTagSinglePayload for Razzmatazz(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C19950);
}

uint64_t sub_100C19950(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for Date(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[6];
    }
    else
    {
      v12 = type metadata accessor for Artist(0);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[7];
      }
      else
      {
        v10 = type metadata accessor for Razzmatazz.Venue(0);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a3[8];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for Razzmatazz(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C19A20);
}

uint64_t sub_100C19A20(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for Date(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[6];
    }
    else
    {
      v12 = type metadata accessor for Artist(0);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[7];
      }
      else
      {
        v10 = type metadata accessor for Razzmatazz.Venue(0);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[8];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_100C19AE0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  _QWORD v6[5];

  v6[0] = &unk_100EED0F0;
  v6[1] = &unk_100EED0F0;
  result = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v6[2] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for Artist(319);
    if (v4 <= 0x3F)
    {
      v6[3] = *(_QWORD *)(result - 8) + 64;
      result = type metadata accessor for Razzmatazz.Venue(319);
      if (v5 <= 0x3F)
      {
        v6[4] = *(_QWORD *)(result - 8) + 64;
        swift_initStructMetadata(a1, 256, 5, v6, a1 + 16);
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_100C19B8C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  id v15;
  uint64_t v16;
  char *v18;
  char *v19;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v16 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v16 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v16);
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    v8 = a2[7];
    a1[6] = a2[6];
    a1[7] = v8;
    v9 = a2[9];
    a1[8] = a2[8];
    a1[9] = v9;
    v10 = a2[11];
    a1[10] = a2[10];
    a1[11] = v10;
    v11 = (void *)a2[12];
    v12 = *(int *)(a3 + 32);
    v18 = (char *)a2 + v12;
    v19 = (char *)a1 + v12;
    a1[12] = (uint64_t)v11;
    v13 = type metadata accessor for TimeZone(0);
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = v11;
    v14(v19, v18, v13);
  }
  return v3;
}

uint64_t sub_100C19C9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 72));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 88));

  v4 = a1 + *(int *)(a2 + 32);
  v5 = type metadata accessor for TimeZone(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_100C19D14(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  id v14;
  char *v16;
  char *v17;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  v10 = (void *)a2[12];
  v11 = *(int *)(a3 + 32);
  v16 = (char *)a2 + v11;
  v17 = (char *)a1 + v11;
  a1[12] = v10;
  v12 = type metadata accessor for TimeZone(0);
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = v10;
  v13(v17, v16, v12);
  return a1;
}

_QWORD *sub_100C19DF8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  *a1 = *a2;
  v6 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  a1[2] = a2[2];
  v7 = a1[3];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v7);
  a1[4] = a2[4];
  v8 = a1[5];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v8);
  a1[6] = a2[6];
  v9 = a1[7];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v9);
  a1[8] = a2[8];
  v10 = a1[9];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v10);
  a1[10] = a2[10];
  v11 = a1[11];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v11);
  v12 = (void *)a2[12];
  v13 = (void *)a1[12];
  a1[12] = v12;
  v14 = v12;

  v15 = *(int *)(a3 + 32);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t sub_100C19F28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  v7 = *(int *)(a3 + 32);
  v8 = a2 + v7;
  v9 = a1 + v7;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  v10 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9, v8, v10);
  return a1;
}

_QWORD *sub_100C19F9C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a2[3];
  v9 = a1[3];
  a1[2] = a2[2];
  a1[3] = v8;
  swift_bridgeObjectRelease(v9);
  v10 = a2[5];
  v11 = a1[5];
  a1[4] = a2[4];
  a1[5] = v10;
  swift_bridgeObjectRelease(v11);
  v12 = a2[7];
  v13 = a1[7];
  a1[6] = a2[6];
  a1[7] = v12;
  swift_bridgeObjectRelease(v13);
  v14 = a2[9];
  v15 = a1[9];
  a1[8] = a2[8];
  a1[9] = v14;
  swift_bridgeObjectRelease(v15);
  v16 = a2[11];
  v17 = a1[11];
  a1[10] = a2[10];
  a1[11] = v16;
  swift_bridgeObjectRelease(v17);
  v18 = (void *)a1[12];
  a1[12] = a2[12];

  v19 = *(int *)(a3 + 32);
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t sub_100C1A068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C1A074);
}

uint64_t sub_100C1A074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for TimeZone(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t sub_100C1A0F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C1A0FC);
}

uint64_t sub_100C1A0FC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for TimeZone(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

uint64_t sub_100C1A170(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = &unk_100EED0F0;
  v4[1] = &unk_100EED0F0;
  v4[2] = "@";
  v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for TimeZone(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100C1A1FC()
{
  return sub_100048748(&qword_1011E12B8, type metadata accessor for Razzmatazz.Venue, (uint64_t)&unk_100EED128);
}

uint64_t sub_100C1A228(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011E66B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100C1A270()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011DF6A0;
  if (!qword_1011DF6A0)
  {
    v1 = objc_opt_self(NSObject);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1011DF6A0);
  }
  return result;
}

uint64_t sub_100C1A2AC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100C1A2D0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

ValueMetadata *type metadata accessor for Razzmatazz.Venue.Address()
{
  return &type metadata for Razzmatazz.Venue.Address;
}

unint64_t sub_100C1A2F4()
{
  unint64_t result;

  result = qword_1011E12C0;
  if (!qword_1011E12C0)
  {
    result = swift_getWitnessTable(&unk_100EED1D0, &type metadata for Razzmatazz.Venue.Address);
    atomic_store(result, (unint64_t *)&qword_1011E12C0);
  }
  return result;
}

uint64_t sub_100C1A338(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  char v9;

  if (a1 == 0x73736572646461 && a2 == 0xE700000000000000)
  {
    v5 = 0xE700000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x73736572646461, 0xE700000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 2037672291 && a2 == 0xE400000000000000)
  {
    v7 = 0xE400000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(2037672291, 0xE400000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x6E6F69676572 && a2 == 0xE600000000000000)
  {
    v8 = 0xE600000000000000;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F69676572, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0x7972746E756F63 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease(0xE700000000000000);
    return 3;
  }
  else
  {
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(0x7972746E756F63, 0xE700000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v9 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

void sub_100C1A4D8(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  char v34;

  v5 = sub_100007E8C(&qword_1011E12C8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_100007E68(a1, v9);
  v11 = sub_100C1A7B0();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for Razzmatazz.Venue.Address.CodingKeys, &type metadata for Razzmatazz.Venue.Address.CodingKeys, v11, v9, v10);
  if (v2)
  {
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(a1);
  }
  else
  {
    v34 = 0;
    v12 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v34, v5);
    v14 = v13;
    v29 = v12;
    v33 = 1;
    swift_bridgeObjectRetain();
    v15 = KeyedDecodingContainer.decode(_:forKey:)(&v33, v5);
    v30 = v16;
    v28 = v15;
    v32 = 2;
    swift_bridgeObjectRetain();
    v26 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v32, v5);
    v27 = v17;
    v31 = 3;
    swift_bridgeObjectRetain();
    v18 = KeyedDecodingContainer.decode(_:forKey:)(&v31, v5);
    v20 = v19;
    v21 = *(void (**)(char *, uint64_t))(v6 + 8);
    v22 = v18;
    v21(v8, v5);
    swift_bridgeObjectRetain();
    v23 = v30;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(a1);
    swift_bridgeObjectRelease();
    v24 = v27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *a2 = v29;
    a2[1] = v14;
    a2[2] = v28;
    a2[3] = v23;
    a2[4] = v26;
    a2[5] = v24;
    a2[6] = v22;
    a2[7] = v20;
  }
}

unint64_t sub_100C1A7B0()
{
  unint64_t result;

  result = qword_1011E12D0;
  if (!qword_1011E12D0)
  {
    result = swift_getWitnessTable(&unk_100EED324, &type metadata for Razzmatazz.Venue.Address.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E12D0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for Razzmatazz.Venue.Address.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_100C1A840 + 4 * byte_100EED061[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_100C1A874 + 4 * byte_100EED05C[v4]))();
}

uint64_t sub_100C1A874(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100C1A87C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100C1A884);
  return result;
}

uint64_t sub_100C1A890(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100C1A898);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_100C1A89C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100C1A8A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Razzmatazz.Venue.Address.CodingKeys()
{
  return &type metadata for Razzmatazz.Venue.Address.CodingKeys;
}

unint64_t sub_100C1A8C4()
{
  unint64_t result;

  result = qword_1011E12D8;
  if (!qword_1011E12D8)
  {
    result = swift_getWitnessTable(&unk_100EED2FC, &type metadata for Razzmatazz.Venue.Address.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E12D8);
  }
  return result;
}

unint64_t sub_100C1A90C()
{
  unint64_t result;

  result = qword_1011E12E0;
  if (!qword_1011E12E0)
  {
    result = swift_getWitnessTable(&unk_100EED26C, &type metadata for Razzmatazz.Venue.Address.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E12E0);
  }
  return result;
}

unint64_t sub_100C1A954()
{
  unint64_t result;

  result = qword_1011E12E8;
  if (!qword_1011E12E8)
  {
    result = swift_getWitnessTable(&unk_100EED294, &type metadata for Razzmatazz.Venue.Address.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E12E8);
  }
  return result;
}

uint64_t sub_100C1A998(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  void (*v49)(uint64_t);
  uint64_t v50;

  v49 = a1;
  sub_100007E8C(&qword_1011E14B0);
  __chkstk_darwin();
  v48 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Razzmatazz(0);
  v7 = *(_QWORD *)(v6 - 8);
  v44 = v6;
  v45 = v7;
  __chkstk_darwin();
  v40 = (uint64_t)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v39 = (uint64_t)&v38 - v9;
  v47 = sub_100007E8C(&qword_1011E14B8);
  __chkstk_darwin();
  v46 = (uint64_t)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v12 = (uint64_t *)((char *)&v38 - v11);
  v13 = *(_QWORD *)(a3 + 64);
  v42 = a3 + 64;
  v14 = 1 << *(_BYTE *)(a3 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v43 = (unint64_t)(v14 + 63) >> 6;
  v50 = a3;
  result = swift_bridgeObjectRetain();
  v18 = 0;
  v41 = (char *)_swiftEmptyArrayStorage;
  while (1)
  {
    if (v16)
    {
      v19 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v20 = v19 | (v18 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v18++, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v18 >= v43)
      goto LABEL_32;
    v22 = *(_QWORD *)(v42 + 8 * v18);
    if (!v22)
      break;
LABEL_18:
    v16 = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v18 << 6);
LABEL_19:
    v24 = *(_QWORD *)(v50 + 56);
    v25 = (uint64_t *)(*(_QWORD *)(v50 + 48) + 16 * v20);
    v26 = *v25;
    v27 = v25[1];
    v28 = type metadata accessor for ShazamEvent(0);
    sub_10005B704(v24 + *(_QWORD *)(*(_QWORD *)(v28 - 8) + 72) * v20, (uint64_t)v12 + *(int *)(v47 + 48), type metadata accessor for ShazamEvent);
    *v12 = v26;
    v12[1] = v27;
    v29 = v46;
    sub_100065228((uint64_t)v12, v46, &qword_1011E14B8);
    swift_bridgeObjectRetain();
    v30 = (uint64_t)v48;
    v49(v29);
    if (v3)
    {
      sub_10004FF60(v29, &qword_1011E14B8);
      v37 = v41;
      swift_bridgeObjectRelease();
LABEL_33:
      swift_release();
      return (uint64_t)v37;
    }
    sub_10004FF60(v29, &qword_1011E14B8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v30, 1, v44) == 1)
    {
      result = sub_10004FF60(v30, &qword_1011E14B0);
    }
    else
    {
      v31 = v30;
      v32 = v39;
      sub_10005B6C0(v31, v39, type metadata accessor for Razzmatazz);
      sub_10005B6C0(v32, v40, type metadata accessor for Razzmatazz);
      if ((swift_isUniquelyReferenced_nonNull_native(v41) & 1) == 0)
        v41 = (char *)sub_100BCC8E0(0, *((_QWORD *)v41 + 2) + 1, 1, v41);
      v34 = *((_QWORD *)v41 + 2);
      v33 = *((_QWORD *)v41 + 3);
      if (v34 >= v33 >> 1)
        v41 = (char *)sub_100BCC8E0(v33 > 1, v34 + 1, 1, v41);
      v35 = v40;
      v36 = v41;
      *((_QWORD *)v41 + 2) = v34 + 1;
      result = sub_10005B6C0(v35, (uint64_t)&v36[((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))+ *(_QWORD *)(v45 + 72) * v34], type metadata accessor for Razzmatazz);
    }
  }
  v23 = v18 + 1;
  if (v18 + 1 >= v43)
    goto LABEL_32;
  v22 = *(_QWORD *)(v42 + 8 * v23);
  if (v22)
    goto LABEL_17;
  v23 = v18 + 2;
  if (v18 + 2 >= v43)
    goto LABEL_32;
  v22 = *(_QWORD *)(v42 + 8 * v23);
  if (v22)
    goto LABEL_17;
  v23 = v18 + 3;
  if (v18 + 3 >= v43)
    goto LABEL_32;
  v22 = *(_QWORD *)(v42 + 8 * v23);
  if (v22)
    goto LABEL_17;
  v23 = v18 + 4;
  if (v18 + 4 >= v43)
  {
LABEL_32:
    v37 = v41;
    goto LABEL_33;
  }
  v22 = *(_QWORD *)(v42 + 8 * v23);
  if (v22)
  {
LABEL_17:
    v18 = v23;
    goto LABEL_18;
  }
  while (1)
  {
    v18 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v18 >= v43)
      goto LABEL_32;
    v22 = *(_QWORD *)(v42 + 8 * v18);
    ++v23;
    if (v22)
      goto LABEL_18;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_100C1ADD4()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100EED528);
  v2 = swift_getKeyPath(&unk_100EED550);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

void sub_100C1AE44(uint64_t a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;

  KeyPath = swift_getKeyPath(&unk_100EED4C0);
  v4 = swift_getKeyPath(&unk_100EED4E8);
  static Published.subscript.getter(&v15, v1, KeyPath, v4);
  swift_release();
  swift_release();
  v6 = v17;
  v5 = v18;
  v7 = v19;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = v15 == *(_QWORD *)a1 && v16 == v8;
  if (!v9 && (_stringCompareWithSmolCheck(_:_:expecting:)(v15, v16, *(_QWORD *)a1, v8, 0) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  if (v6 != v10 || v5 != v11)
  {
    v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v5, v10, v11, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v12 & 1) != 0)
      goto LABEL_10;
LABEL_14:
    v13 = swift_getKeyPath(&unk_100EED4C0);
    v14 = swift_getKeyPath(&unk_100EED4E8);
    static Published.subscript.getter(&v15, v1, v13, v14);
    swift_release();
    swift_release();
    sub_100C203D0((uint64_t)&v15);
    return;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_10:
  if (*(double *)&v7 != *(double *)(a1 + 32) || *((double *)&v7 + 1) != *(double *)(a1 + 40))
    goto LABEL_14;
}

double sub_100C1AFD0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  double result;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;

  KeyPath = swift_getKeyPath(&unk_100EED4C0);
  v4 = swift_getKeyPath(&unk_100EED4E8);
  static Published.subscript.getter(&v9, v1, KeyPath, v4);
  swift_release(KeyPath);
  swift_release(v4);
  result = *(double *)&v9;
  v6 = v10;
  v7 = v11;
  v8 = v12;
  *(_OWORD *)a1 = v9;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_OWORD *)(a1 + 32) = v8;
  return result;
}

uint64_t sub_100C1B058()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[48];
  _OWORD v16[3];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;

  v1 = sub_100007E8C(&qword_1011E13F8);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v0 + OBJC_IVAR____TtC11MusicCoreUI20RazzmatazzController__razzmatazz;
  *(_QWORD *)&v20 = _swiftEmptyArrayStorage;
  v6 = sub_100007E8C(&qword_1011DF450);
  Published.init(initialValue:)(&v20, v6);
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v5, v4, v1);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI20RazzmatazzController__location, &v17, 33, 0);
  strcpy((char *)&v20, "Cupertino, CA");
  HIWORD(v20) = -4864;
  strcpy((char *)&v21, "United States");
  HIWORD(v21) = -4864;
  v22 = xmmword_100EE8B00;
  Published.init(initialValue:)(&v20, &type metadata for RazzmatazzController.Location);
  swift_endAccess(&v17);
  sub_100C20784((uint64_t)v15);
  sub_100065228((uint64_t)v15, (uint64_t)v16, &qword_1011E13D0);
  if (*((_QWORD *)&v16[0] + 1))
  {
    v17 = v16[0];
    v18 = v16[1];
    v19 = v16[2];
    KeyPath = swift_getKeyPath(&unk_100EED4C0);
    v8 = swift_getKeyPath(&unk_100EED4E8);
    static Published.subscript.getter(&v12, v0, KeyPath, v8);
    swift_release();
    swift_release();
    v20 = v12;
    v21 = v13;
    v22 = v14;
    v9 = swift_getKeyPath(&unk_100EED4C0);
    v10 = swift_getKeyPath(&unk_100EED4E8);
    v12 = v17;
    v13 = v18;
    v14 = v19;
    swift_retain();
    static Published.subscript.setter(&v12, v0, v9, v10);
    sub_100C1AE44((uint64_t)&v20);
    v23 = v20;
    sub_1001C7464((uint64_t)&v23);
    v12 = v21;
    sub_1001C7464((uint64_t)&v12);
  }
  return v0;
}

uint64_t sub_100C1B2A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  __n128 v7;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t);

  v5[4] = a4;
  v5[5] = type metadata accessor for MainActor(0);
  v5[6] = static MainActor.shared.getter(v7);
  v10 = (uint64_t (*)(uint64_t))((char *)&dword_1011E1410 + dword_1011E1410);
  v8 = (_QWORD *)swift_task_alloc(unk_1011E1414);
  v5[7] = v8;
  *v8 = v5;
  v8[1] = sub_100C1B320;
  return v10(a5);
}

uint64_t sub_100C1B320(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  *(_QWORD *)(*(_QWORD *)v1 + 64) = a1;
  swift_task_dealloc(v2);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  return swift_task_switch(sub_100C1B398, v4, v5);
}

uint64_t sub_100C1B398()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 32);
  swift_release();
  *(_QWORD *)(v0 + 16) = v1;
  KeyPath = swift_getKeyPath(&unk_100EED508);
  v4 = sub_100007E8C(&qword_1011DF450);
  v5 = sub_100C211C0();
  v6 = sub_100048748(&qword_1011E0EC0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  v7 = Sequence.sorted<A>(by:comparator:)(KeyPath, (uint64_t)sub_100C1EA04, 0, v4, v5, v6);
  swift_release();
  swift_bridgeObjectRelease();
  v8 = swift_getKeyPath(&unk_100EED528);
  v9 = swift_getKeyPath(&unk_100EED550);
  *(_QWORD *)(v0 + 24) = v7;
  swift_retain();
  static Published.subscript.setter(v0 + 24, v2, v8, v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100C1B4A4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Swift::UInt64 v8;
  Swift::UInt64 v9;

  v2 = v1;
  v4 = *v2;
  v5 = v2[1];
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v4, v5);
  swift_bridgeObjectRelease(v5);
  v6 = v2[2];
  v7 = v2[3];
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v6, v7);
  swift_bridgeObjectRelease(v7);
  if ((v2[4] & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v8 = v2[4];
  else
    v8 = 0;
  Hasher._combine(_:)(v8);
  if ((v2[5] & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v9 = v2[5];
  else
    v9 = 0;
  Hasher._combine(_:)(v9);
}

uint64_t sub_100C1B534(_QWORD *a1)
{
  double *v1;
  uint64_t v2;
  double *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  double v17;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  char v23;

  v3 = v1;
  v5 = sub_100007E8C(&qword_1011E13F0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_100007E68(a1, v9);
  v11 = sub_100C2117C();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for RazzmatazzController.Location.CodingKeys, &type metadata for RazzmatazzController.Location.CodingKeys, v11, v9, v10);
  v12 = *v3;
  v13 = *((_QWORD *)v3 + 1);
  v23 = 0;
  KeyedEncodingContainer.encode(_:forKey:)(*(_QWORD *)&v12, v13, &v23, v5);
  if (!v2)
  {
    v14 = *((_QWORD *)v3 + 2);
    v15 = *((_QWORD *)v3 + 3);
    v22 = 1;
    KeyedEncodingContainer.encode(_:forKey:)(v14, v15, &v22, v5);
    v16 = v3[4];
    v21 = 2;
    KeyedEncodingContainer.encode(_:forKey:)(&v21, v5, v16);
    v17 = v3[5];
    v20 = 3;
    KeyedEncodingContainer.encode(_:forKey:)(&v20, v5, v17);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100C1B698()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100C1B6C4 + 4 * byte_100EED380[*v0]))(0x656C746974, 0xE500000000000000);
}

uint64_t sub_100C1B6C4()
{
  return 0x656C746974627573;
}

uint64_t sub_100C1B6DC()
{
  return 0x656475746974616CLL;
}

uint64_t sub_100C1B6F4()
{
  return 0x64757469676E6F6CLL;
}

uint64_t sub_100C1B710@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100C20D7C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100C1B734(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C2117C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100C1B75C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C2117C();
  return CodingKey.debugDescription.getter(a1, v2);
}

Swift::Int sub_100C1B784()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  sub_100C1B4A4((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_100C1B7C4(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  sub_100C1B4A4((uint64_t)v2);
  return Hasher._finalize()();
}

double sub_100C1B7FC@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;

  sub_100C20F38(a1, (uint64_t *)v6);
  if (!v2)
  {
    v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_100C1B83C(_QWORD *a1)
{
  return sub_100C1B534(a1);
}

BOOL sub_100C1B850(_OWORD *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[3];
  _OWORD v8[3];

  v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  v3 = *a2;
  v4 = a2[1];
  v7[2] = a1[2];
  v8[0] = v3;
  v5 = a2[2];
  v8[1] = v4;
  v8[2] = v5;
  return sub_100C1F4EC((double *)v7, (uint64_t)v8);
}

uint64_t sub_100C1B894()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI20RazzmatazzController__razzmatazz;
  v2 = sub_100007E8C(&qword_1011E13F8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC11MusicCoreUI20RazzmatazzController__location;
  v4 = sub_100007E8C(&qword_1011E1400);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100C1B914()
{
  return type metadata accessor for RazzmatazzController(0);
}

uint64_t type metadata accessor for RazzmatazzController(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011E1328, (uint64_t)&nominal type descriptor for RazzmatazzController);
}

void sub_100C1B930(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[2];

  sub_100C1B9B8(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_100C1BA10();
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      swift_updateClassMetadata2(a1, 256, 2, v6, a1 + 80);
    }
  }
}

void sub_100C1B9B8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1011E1338)
  {
    v2 = sub_100044B54(&qword_1011DF450);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1011E1338);
  }
}

void sub_100C1BA10()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1011E1340)
  {
    v0 = type metadata accessor for Published(0, &type metadata for RazzmatazzController.Location);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1011E1340);
  }
}

uint64_t initializeWithCopy for RazzmatazzController.Location(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for RazzmatazzController.Location(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  *a1 = *a2;
  v4 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  a1[2] = a2[2];
  v5 = a1[3];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v5);
  a1[4] = a2[4];
  a1[5] = a2[5];
  return a1;
}

uint64_t assignWithTake for RazzmatazzController.Location(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for RazzmatazzController.Location()
{
  return &type metadata for RazzmatazzController.Location;
}

unint64_t sub_100C1BB88()
{
  unint64_t result;

  result = qword_1011E13C8;
  if (!qword_1011E13C8)
  {
    result = swift_getWitnessTable(&unk_100EED3D0, &type metadata for RazzmatazzController.Location);
    atomic_store(result, (unint64_t *)&qword_1011E13C8);
  }
  return result;
}

uint64_t sub_100C1BBD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v9 = type metadata accessor for Artist(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011E14B8);
  __chkstk_darwin();
  v15 = *(int *)(v14 + 48);
  v16 = (uint64_t *)((char *)&v29 + v15 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10005B704(a1 + v15, (uint64_t)v16, type metadata accessor for ShazamEvent);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a3, v9);
  swift_bridgeObjectRetain();
  sub_100C1BEB8(v16, a2, (uint64_t)v12, a4);
  if (v4)
  {
    if (qword_1011DE098 != -1)
      swift_once(&qword_1011DE098, sub_100C1E8B0);
    v17 = type metadata accessor for Logger(0);
    sub_100048B14(v17, (uint64_t)qword_10124FE38);
    swift_errorRetain(v4);
    v18 = swift_errorRetain(v4);
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.error.getter(v19);
    if (os_log_type_enabled(v19, v20))
    {
      v21 = swift_slowAlloc(12, -1);
      v22 = swift_slowAlloc(32, -1);
      v31 = v22;
      *(_DWORD *)v21 = 136315138;
      v30 = v4;
      swift_errorRetain(v4);
      v23 = sub_100007E8C(&qword_1011DF550);
      v24 = (char *)String.init<A>(describing:)(&v30, v23);
      *(_QWORD *)(v21 + 4) = sub_100BBDE38(v24, v25, &v31);
      swift_bridgeObjectRelease();
      swift_errorRelease(v4);
      swift_errorRelease(v4);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Could not initialize Razzmatazz with error=%s", (uint8_t *)v21, 0xCu);
      swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v22, -1, -1);
      swift_slowDealloc(v21, -1, -1);

      swift_errorRelease(v4);
    }
    else
    {
      swift_errorRelease(v4);
      swift_errorRelease(v4);
      swift_errorRelease(v4);

    }
    v28 = type metadata accessor for Razzmatazz(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(a4, 1, 1, v28);
  }
  else
  {
    v26 = type metadata accessor for Razzmatazz(0);
    return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(a4, 0, 1, v26);
  }
}

uint64_t sub_100C1BEB8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  int *v48;
  char *v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  _QWORD v59[2];
  int *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v5 = v4;
  v83 = a3;
  v9 = type metadata accessor for TimeZone(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v12 = (char *)v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Date(0);
  v81 = *(_QWORD *)(v13 - 8);
  v82 = v13;
  __chkstk_darwin();
  v15 = (char *)v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for ShazamEvent(0);
  v17 = *(_QWORD **)((char *)a1 + *(int *)(v16 + 24) + 8);
  if (v17[2] && *(_QWORD *)(a2 + 16))
  {
    v18 = v16;
    v80 = a4;
    v19 = v17[4];
    v20 = v17[5];
    swift_bridgeObjectRetain();
    v21 = sub_10079C2C4(v19, v20);
    if ((v22 & 1) != 0)
    {
      v23 = (uint64_t *)(*(_QWORD *)(a2 + 56) + 104 * v21);
      v24 = *v23;
      v76 = v12;
      v25 = v23[2];
      v75 = v23[1];
      v71 = v25;
      v72 = v24;
      v78 = v10;
      v26 = v23[4];
      v77 = v23[3];
      v64 = v5;
      v27 = v23[5];
      v69 = v23[6];
      v70 = v26;
      v59[0] = v23[7];
      v29 = v23[8];
      v28 = v23[9];
      v67 = v23[10];
      v68 = v29;
      v79 = v9;
      v30 = (void *)v23[12];
      v62 = v23[11];
      v63 = v28;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v60 = v30;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v31 = v59[0];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v32 = *a1;
      v33 = a1[1];
      v34 = (char *)a1 + *(int *)(v18 + 20);
      v35 = *((_QWORD *)v34 + 1);
      v73 = *(_QWORD *)v34;
      v74 = v32;
      v65 = v35;
      v66 = v33;
      v36 = type metadata accessor for ShazamEvent.Attributes(0);
      (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v15, &v34[*(int *)(v36 + 20)], v82);
      (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v76, &v34[*(int *)(v36 + 24)], v79);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v37 = v75;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v59[1] = v27;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v61 = v15;
      v38 = v63;
      swift_bridgeObjectRetain();
      v39 = v62;
      swift_bridgeObjectRetain();
      v40 = v60;
      sub_10005B748((uint64_t)a1, type metadata accessor for ShazamEvent);
      v60 = (int *)type metadata accessor for Razzmatazz(0);
      v41 = v80;
      v42 = &v80[v60[8]];
      *(_QWORD *)v42 = v72;
      *((_QWORD *)v42 + 1) = v37;
      v43 = v77;
      *((_QWORD *)v42 + 2) = v71;
      *((_QWORD *)v42 + 3) = v43;
      *((_QWORD *)v42 + 4) = v70;
      *((_QWORD *)v42 + 5) = v27;
      *((_QWORD *)v42 + 6) = v69;
      *((_QWORD *)v42 + 7) = v31;
      *((_QWORD *)v42 + 8) = v68;
      *((_QWORD *)v42 + 9) = v38;
      *((_QWORD *)v42 + 10) = v67;
      *((_QWORD *)v42 + 11) = v39;
      *((_QWORD *)v42 + 12) = v40;
      v44 = type metadata accessor for Razzmatazz.Venue(0);
      (*(void (**)(char *, char *, uint64_t))(v78 + 32))(&v42[*(int *)(v44 + 32)], v76, v79);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v45 = swift_bridgeObjectRelease();
      v46 = v66;
      *(_QWORD *)v41 = v74;
      *((_QWORD *)v41 + 1) = v46;
      v47 = v65;
      *((_QWORD *)v41 + 2) = v73;
      *((_QWORD *)v41 + 3) = v47;
      v48 = v60;
      (*(void (**)(char *, char *, uint64_t, __n128))(v81 + 32))(&v41[v60[6]], v61, v82, v45);
      v49 = &v41[v48[7]];
      v50 = type metadata accessor for Artist(0);
      return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v49, v83, v50);
    }
    swift_bridgeObjectRelease();
  }
  v52 = type metadata accessor for RazzmatazzAPI.CustomError(0);
  v53 = sub_100048748(&qword_1011E14C0, type metadata accessor for RazzmatazzAPI.CustomError, (uint64_t)&unk_100EED734);
  swift_allocError(v52, v53, 0, 0);
  v55 = v54;
  v56 = *(int *)(sub_100007E8C(&qword_1011E14C8) + 48);
  sub_10005B704((uint64_t)a1, v55, type metadata accessor for ShazamEvent);
  *(_QWORD *)(v55 + v56) = a2;
  swift_storeEnumTagMultiPayload(v55, v52, 1);
  swift_willThrow(v57);
  v58 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 8))(v83, v58);
  return sub_10005B748((uint64_t)a1, type metadata accessor for ShazamEvent);
}

uint64_t sub_100C1C31C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  *(_QWORD *)(v2 + 16) = a1;
  v6 = (uint64_t (*)(uint64_t))((char *)&dword_1011E1488 + dword_1011E1488);
  v4 = (_QWORD *)swift_task_alloc(unk_1011E148C);
  *(_QWORD *)(v2 + 24) = v4;
  *v4 = v2;
  v4[1] = sub_100C1C380;
  return v6(a2);
}

uint64_t sub_100C1C380(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  *(_QWORD *)(*(_QWORD *)v1 + 32) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100C1C3DC, 0, 0);
}

uint64_t sub_100C1C3DC()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 16) = *(_QWORD *)(v0 + 32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100C1C3F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[38] = a2;
  v3[39] = a3;
  v3[37] = a1;
  v3[34] = a3;
  return swift_task_switch(sub_100C1C414, 0, 0);
}

uint64_t sub_100C1C414(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  __int128 v14;

  v14 = *(_OWORD *)(v9 + 296);
  *(_QWORD *)(v9 + 280) = sub_100C1EA70(0, *(_QWORD *)(*(_QWORD *)(v9 + 312) + 16));
  v10 = swift_task_alloc(48);
  *(_QWORD *)(v9 + 320) = v10;
  *(_QWORD *)(v10 + 16) = v9 + 272;
  *(_OWORD *)(v10 + 24) = v14;
  *(_QWORD *)(v10 + 40) = v9 + 280;
  v11 = sub_100007E8C(&qword_1011E1448);
  *(_QWORD *)(v9 + 328) = v11;
  if (!sub_100DE8EA8(2, 18, 0, 0))
    return swift_task_switch(sub_100C1C594, 0, 0);
  v12 = (_QWORD *)swift_task_alloc(async function pointer to withThrowingTaskGroup<A, B>(of:returning:isolation:body:)[1]);
  *(_QWORD *)(v9 + 336) = v12;
  *v12 = v9;
  v12[1] = sub_100C1C528;
  return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)(v12, v11, (char *)&type metadata for () + 8, 0, 0, &unk_1011E1440, v10, v11, a9);
}

uint64_t sub_100C1C528()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 336));
  if (v0)
  {
    *(_QWORD *)(v2 + 376) = v0;
    v3 = sub_100C1C9B8;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 320));
    v3 = sub_100C1C8A0;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100C1C594()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  swift_taskGroup_initialize(v0 + 2, v0[41]);
  v0[36] = v0 + 2;
  v1 = v0[34];
  v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1011E1450
                                                                                    + dword_1011E1450);
  v2 = (_QWORD *)swift_task_alloc(unk_1011E1454);
  v0[43] = v2;
  *v2 = v0;
  v2[1] = sub_100C1C624;
  return v4((uint64_t)v4, (uint64_t)(v0 + 36), v1, v0[37], v0[38], (uint64_t)(v0 + 35));
}

uint64_t sub_100C1C624()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;

  v2 = *(_QWORD *)(*v1 + 344);
  v3 = *v1;
  *(_QWORD *)(v3 + 352) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_100C1C768, 0, 0);
  v5 = (_QWORD *)swift_task_alloc(async function pointer to ThrowingTaskGroup.awaitAllRemainingTasks()[1]);
  *(_QWORD *)(v3 + 360) = v5;
  v6 = sub_100007E8C(&qword_1011E1458);
  *v5 = v3;
  v5[1] = sub_100C1C6D0;
  return ThrowingTaskGroup.awaitAllRemainingTasks()(v6);
}

uint64_t sub_100C1C6D0()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 360));
  return swift_task_switch(sub_100C1C724, 0, 0);
}

uint64_t sub_100C1C724()
{
  uint64_t v0;

  swift_taskGroup_destroy(v0 + 16);
  swift_task_dealloc(*(_QWORD *)(v0 + 320));
  return swift_task_switch(sub_100C1C8A0, 0, 0);
}

uint64_t sub_100C1C768()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_100007E8C(&qword_1011DF550);
  ThrowingTaskGroup.cancelAll()();
  v1 = (_QWORD *)swift_task_alloc(async function pointer to ThrowingTaskGroup.awaitAllRemainingTasks()[1]);
  *(_QWORD *)(v0 + 368) = v1;
  v2 = sub_100007E8C(&qword_1011E1458);
  *v1 = v0;
  v1[1] = sub_100C1C7F8;
  return ThrowingTaskGroup.awaitAllRemainingTasks()(v2);
}

uint64_t sub_100C1C7F8()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 368));
  return swift_task_switch(sub_100C1C84C, 0, 0);
}

uint64_t sub_100C1C84C()
{
  uint64_t v0;
  __n128 v1;

  v1.n128_f64[0] = swift_taskGroup_destroy(v0 + 16);
  swift_willThrow(v1);
  *(_QWORD *)(v0 + 376) = *(_QWORD *)(v0 + 352);
  return swift_task_switch(sub_100C1C9B8, 0, 0);
}

uint64_t sub_100C1C8A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  __n128 v8;

  v1 = *(_QWORD *)(v0 + 280);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain_n(*(_QWORD *)(v0 + 280), 2);
    v3 = 0;
    v4 = _swiftEmptyArrayStorage;
    do
    {
      v5 = *(_QWORD *)(v1 + 8 * v3 + 32);
      if (v5)
      {
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native(v4) & 1) == 0)
          v4 = sub_100BCC9F4(0, v4[2] + 1, 1, v4);
        v7 = v4[2];
        v6 = v4[3];
        if (v7 >= v6 >> 1)
          v4 = sub_100BCC9F4((_QWORD *)(v6 > 1), v7 + 1, 1, v4);
        v4[2] = v7 + 1;
        v4[v7 + 4] = v5;
      }
      ++v3;
    }
    while (v2 != v3);
    swift_bridgeObjectRelease_n(v1, 2);
  }
  else
  {
    v4 = _swiftEmptyArrayStorage;
  }
  v8 = swift_bridgeObjectRelease();
  return (*(uint64_t (**)(_QWORD *, __n128))(v0 + 8))(v4, v8);
}

uint64_t sub_100C1C9B8()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 320));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 280));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100C1C9F4()
{
  return 0x656372756F736572;
}

uint64_t sub_100C1CA10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v6;
  uint64_t result;
  char v8;

  if (a1 == 0x656372756F736572 && a2 == 0xE900000000000073)
  {
    result = swift_bridgeObjectRelease(0xE900000000000073);
    v8 = 0;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)(0x656372756F736572, 0xE900000000000073, a1, a2, 0);
    result = swift_bridgeObjectRelease(a2);
    v8 = v6 ^ 1;
  }
  *a3 = v8 & 1;
  return result;
}

uint64_t sub_100C1CAB0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C2309C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100C1CAD8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C2309C();
  return CodingKey.debugDescription.getter(a1, v2);
}

_QWORD *sub_100C1CB00@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;

  result = sub_100C22F78(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_100C1CB28(char *a1, char *a2)
{
  return sub_100BC668C(*a1, *a2);
}

Swift::Int sub_100C1CB34()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5, 0);
  if (v1)
    v2 = 0x7365756E6576;
  else
    v2 = 0x652D6D617A616873;
  if (v1)
    v3 = 0xE600000000000000;
  else
    v3 = 0xED000073746E6576;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_100C1CBBC(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0x7365756E6576;
  else
    v2 = 0x652D6D617A616873;
  if (*v1)
    v3 = 0xE600000000000000;
  else
    v3 = 0xED000073746E6576;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_100C1CC20(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD v6[9];

  v2 = *v1;
  Hasher.init(_seed:)(v6, a1);
  if (v2)
    v3 = 0x7365756E6576;
  else
    v3 = 0x652D6D617A616873;
  if (v2)
    v4 = 0xE600000000000000;
  else
    v4 = 0xED000073746E6576;
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

uint64_t sub_100C1CCA4@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::OpaquePointer v2;

  v2._rawValue = &off_101102988;
  return sub_100C1D998(v2, a1, a2);
}

void sub_100C1CCB0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x652D6D617A616873;
  if (*v1)
    v2 = 0x7365756E6576;
  v3 = 0xED000073746E6576;
  if (*v1)
    v3 = 0xE600000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_100C1CCF8()
{
  _BYTE *v0;

  if (*v0)
    return 0x7365756E6576;
  else
    return 0x652D6D617A616873;
}

uint64_t sub_100C1CD3C@<X0>(Swift::String a1@<X1:X0>, char *a2@<X8>)
{
  Swift::OpaquePointer v2;

  v2._rawValue = &off_101102988;
  return sub_100C1DA70(a1, v2, a2);
}

uint64_t sub_100C1CD48(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C24E60();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100C1CD70(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C24E60();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100C1CD98@<X0>(uint64_t *a1@<X8>)
{
  return sub_100C1E1E0((uint64_t (*)(void))sub_100C231AC, a1);
}

uint64_t sub_100C1CDB4(char *a1, char *a2)
{
  return sub_100BC69E8(*a1, *a2);
}

Swift::Int sub_100C1CDC0()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  _QWORD v4[9];

  v1 = *v0;
  Hasher.init(_seed:)(v4, 0);
  if (v1)
    v2 = 1701669236;
  else
    v2 = 1701667182;
  String.hash(into:)(v4, v2, 0xE400000000000000);
  swift_bridgeObjectRelease(0xE400000000000000);
  return Hasher._finalize()();
}

uint64_t sub_100C1CE20(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;

  if (*v1)
    v2 = 1701669236;
  else
    v2 = 1701667182;
  String.hash(into:)(a1, v2, 0xE400000000000000);
  return swift_bridgeObjectRelease(0xE400000000000000);
}

Swift::Int sub_100C1CE54(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  uint64_t v3;
  _QWORD v5[9];

  v2 = *v1;
  Hasher.init(_seed:)(v5, a1);
  if (v2)
    v3 = 1701669236;
  else
    v3 = 1701667182;
  String.hash(into:)(v5, v3, 0xE400000000000000);
  swift_bridgeObjectRelease(0xE400000000000000);
  return Hasher._finalize()();
}

uint64_t sub_100C1CEB0@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::OpaquePointer v2;

  v2._rawValue = &off_1011029D8;
  return sub_100C1D998(v2, a1, a2);
}

void sub_100C1CEBC(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;

  if (*v1)
    v2 = 1701669236;
  else
    v2 = 1701667182;
  *a1 = v2;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_100C1CEE0()
{
  _BYTE *v0;

  if (*v0)
    return 1701669236;
  else
    return 1701667182;
}

uint64_t sub_100C1CF00@<X0>(Swift::String a1@<X1:X0>, char *a2@<X8>)
{
  Swift::OpaquePointer v2;

  v2._rawValue = &off_1011029D8;
  return sub_100C1DA70(a1, v2, a2);
}

uint64_t sub_100C1CF0C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C23124();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100C1CF34(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C23124();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_100C1CF5C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  __n128 v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  unint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  __n128 v43;
  __n128 v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  __n128 v61;
  uint64_t v62;
  _QWORD v63[2];
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;

  v71 = a2;
  v70 = type metadata accessor for Date(0);
  v69 = *(_QWORD *)(v70 - 8);
  v3 = __chkstk_darwin();
  v78 = (char *)v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = type metadata accessor for Date.ISO8601FormatStyle.TimeZoneSeparator(0, v3);
  v85 = *(_QWORD *)(v88 - 8);
  v5 = __chkstk_darwin();
  v87 = (char *)v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Date.ISO8601FormatStyle.TimeSeparator(0, v5);
  v81 = *(_QWORD *)(v7 - 8);
  v82 = v7;
  v8 = __chkstk_darwin();
  v83 = (char *)v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = type metadata accessor for Date.ISO8601FormatStyle.DateTimeSeparator(0, v8);
  v75 = *(_QWORD *)(v77 - 8);
  v10 = __chkstk_darwin();
  v80 = (char *)v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = type metadata accessor for Date.ISO8601FormatStyle.DateSeparator(0, v10);
  v73 = *(_QWORD *)(v74 - 8);
  __chkstk_darwin();
  v76 = (char *)v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = type metadata accessor for Date.ISO8601FormatStyle(0);
  v86 = *(_QWORD *)(v89 - 8);
  __chkstk_darwin();
  v79 = (char *)v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v84 = (char *)v63 - v14;
  sub_100007E8C(&qword_1011E16E0);
  __chkstk_darwin();
  v92 = (char *)v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = type metadata accessor for TimeZone(0);
  v91 = *(_QWORD *)(v93 - 8);
  __chkstk_darwin();
  v72 = (char *)v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v90 = (char *)v63 - v17;
  v18 = sub_100007E8C(&qword_1011E16E8);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin();
  v21 = (char *)v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for ShazamEvent.Attributes(0);
  __chkstk_darwin();
  v24 = (char *)v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = a1[3];
  v26 = a1[4];
  v27 = a1;
  sub_100007E68(a1, v25);
  v28 = sub_100C23124();
  v29 = v94;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for ShazamEvent.Attributes.CodingKeys, &type metadata for ShazamEvent.Attributes.CodingKeys, v28, v25, v26);
  if (v29)
  {
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(a1);
  }
  else
  {
    v30 = v92;
    v94 = v19;
    v68 = v22;
    v31 = v91;
    v32 = v93;
    LOBYTE(v95) = 0;
    *(_QWORD *)v24 = KeyedDecodingContainer.decode(_:forKey:)(&v95, v18);
    *((_QWORD *)v24 + 1) = v33;
    v99 = 1;
    v34 = sub_100C23168();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v95, &type metadata for ShazamEvent.Attributes.Time, &v99, v18, &type metadata for ShazamEvent.Attributes.Time, v34);
    v66 = v21;
    v67 = v18;
    v64 = v95;
    v35 = v97;
    v65 = v96;
    v36 = v98;
    v37 = (uint64_t)v30;
    TimeZone.init(identifier:)(v97, v98);
    v38 = v30;
    v39 = v32;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v38, 1, v32) == 1)
    {
      sub_10004FF60(v37, &qword_1011E16E0);
      v40 = type metadata accessor for RazzmatazzAPI.CustomError(0);
      v41 = sub_100048748(&qword_1011E14C0, type metadata accessor for RazzmatazzAPI.CustomError, (uint64_t)&unk_100EED734);
      swift_allocError(v40, v41, 0, 0);
      *v42 = v35;
      v42[1] = v36;
      swift_storeEnumTagMultiPayload(v42, v40, 0);
      swift_bridgeObjectRetain();
      swift_willThrow(v43);
      swift_bridgeObjectRelease();
      v44 = swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t, __n128))(v94 + 8))(v66, v67, v44);
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(v27);
      swift_bridgeObjectRelease();
    }
    else
    {
      v63[1] = v36;
      v45 = v90;
      (*(void (**)(char *, uint64_t, uint64_t))(v31 + 32))(v90, v37, v39);
      v46 = *(int *)(v68 + 24);
      v92 = v24;
      v47 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
      v47(&v24[v46], v45, v39);
      v48 = v72;
      v47(v72, v45, v39);
      v49 = v76;
      (*(void (**)(char *, _QWORD, uint64_t))(v73 + 104))(v76, enum case for Date.ISO8601FormatStyle.DateSeparator.dash(_:), v74);
      v50 = v80;
      (*(void (**)(char *, _QWORD, uint64_t))(v75 + 104))(v80, enum case for Date.ISO8601FormatStyle.DateTimeSeparator.standard(_:), v77);
      v51 = v83;
      (*(void (**)(char *, _QWORD, uint64_t))(v81 + 104))(v83, enum case for Date.ISO8601FormatStyle.TimeSeparator.colon(_:), v82);
      v52 = v87;
      (*(void (**)(char *, _QWORD, uint64_t))(v85 + 104))(v87, enum case for Date.ISO8601FormatStyle.TimeZoneSeparator.omitted(_:), v88);
      v53 = v84;
      Date.ISO8601FormatStyle.init(dateSeparator:dateTimeSeparator:timeSeparator:timeZoneSeparator:includingFractionalSeconds:timeZone:)(v49, v50, v51, v52, 0, v48);
      v95 = v64;
      v96 = v65;
      v54 = v86;
      v55 = v79;
      v56 = v89;
      (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v79, v53, v89);
      v57 = sub_100048748(&qword_1011E1700, (uint64_t (*)(uint64_t))&type metadata accessor for Date.ISO8601FormatStyle, (uint64_t)&protocol conformance descriptor for Date.ISO8601FormatStyle);
      v58 = v78;
      Date.init<A>(_:strategy:)(&v95, v55, v56, v57);
      v59 = v93;
      v60 = v94;
      v61 = swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t, __n128))(v54 + 8))(v53, v56, v61);
      (*(void (**)(char *, uint64_t))(v31 + 8))(v90, v59);
      (*(void (**)(char *, uint64_t))(v60 + 8))(v66, v67);
      v62 = (uint64_t)v92;
      (*(void (**)(char *, char *, uint64_t))(v69 + 32))(&v92[*(int *)(v68 + 20)], v58, v70);
      sub_10005B704(v62, v71, type metadata accessor for ShazamEvent.Attributes);
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(v27);
      sub_10005B748(v62, type metadata accessor for ShazamEvent.Attributes);
    }
  }
}

uint64_t sub_100C1D740()
{
  _BYTE *v0;

  if (*v0)
    return 0x656E6F7A656D6974;
  else
    return 0x6D69547472617473;
}

uint64_t sub_100C1D780@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100C23380(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100C1D7A4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C24FD8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100C1D7CC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C24FD8();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100C1D7F4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = sub_100C2347C(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

void sub_100C1D820(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100C1CF5C(a1, a2);
}

uint64_t sub_100C1D834(char *a1, char *a2)
{
  return sub_100BC6948(*a1, *a2);
}

Swift::Int sub_100C1D840()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5, 0);
  if (v1)
    v2 = 0x7365756E6576;
  else
    v2 = 0x73747369747261;
  if (v1)
    v3 = 0xE600000000000000;
  else
    v3 = 0xE700000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_100C1D8BC(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0x7365756E6576;
  else
    v2 = 0x73747369747261;
  if (*v1)
    v3 = 0xE600000000000000;
  else
    v3 = 0xE700000000000000;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_100C1D914(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD v6[9];

  v2 = *v1;
  Hasher.init(_seed:)(v6, a1);
  if (v2)
    v3 = 0x7365756E6576;
  else
    v3 = 0x73747369747261;
  if (v2)
    v4 = 0xE600000000000000;
  else
    v4 = 0xE700000000000000;
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

uint64_t sub_100C1D98C@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::OpaquePointer v2;

  v2._rawValue = &off_101102A28;
  return sub_100C1D998(v2, a1, a2);
}

uint64_t sub_100C1D998@<X0>(Swift::OpaquePointer cases@<0:X3>, uint64_t *a2@<X0>, char *a3@<X8>)
{
  Swift::String v4;
  void *v5;
  Swift::Int v6;
  uint64_t result;
  char v8;

  v4._countAndFlagsBits = *a2;
  v5 = (void *)a2[1];
  v4._object = v5;
  v6 = _findStringSwitchCase(cases:string:)(cases, v4);
  result = swift_bridgeObjectRelease(v5);
  if (v6 == 1)
    v8 = 1;
  else
    v8 = 2;
  if (!v6)
    v8 = 0;
  *a3 = v8;
  return result;
}

void sub_100C1D9F0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x73747369747261;
  if (*v1)
    v2 = 0x7365756E6576;
  v3 = 0xE700000000000000;
  if (*v1)
    v3 = 0xE600000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_100C1DA2C()
{
  _BYTE *v0;

  if (*v0)
    return 0x7365756E6576;
  else
    return 0x73747369747261;
}

uint64_t sub_100C1DA64@<X0>(Swift::String a1@<X1:X0>, char *a2@<X8>)
{
  Swift::OpaquePointer v2;

  v2._rawValue = &off_101102A28;
  return sub_100C1DA70(a1, v2, a2);
}

uint64_t sub_100C1DA70@<X0>(Swift::String string@<0:X0, 8:X1>, Swift::OpaquePointer cases@<0:X4>, char *a3@<X8>)
{
  void *object;
  Swift::String v4;
  Swift::Int v6;
  uint64_t result;
  char v8;

  object = string._object;
  v4._countAndFlagsBits = string._countAndFlagsBits;
  v4._object = object;
  v6 = _findStringSwitchCase(cases:string:)(cases, v4);
  result = swift_bridgeObjectRelease(object);
  if (v6 == 1)
    v8 = 1;
  else
    v8 = 2;
  if (!v6)
    v8 = 0;
  *a3 = v8;
  return result;
}

uint64_t sub_100C1DACC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C250E8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100C1DAF4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C250E8();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_100C1DB1C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  __int128 v25;
  char v26;

  v20 = a2;
  v3 = type metadata accessor for ShazamEvent.Attributes(0);
  __chkstk_darwin();
  v5 = (uint64_t *)((char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v22 = sub_100007E8C(&qword_1011E1720);
  v6 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin();
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ShazamEvent(0);
  __chkstk_darwin();
  v11 = (uint64_t *)((char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = a1[3];
  v12 = a1[4];
  v23 = a1;
  sub_100007E68(a1, v13);
  v14 = sub_100C247B8();
  v21 = v8;
  v15 = v24;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for ShazamEvent.CodingKeys, &type metadata for ShazamEvent.CodingKeys, v14, v13, v12);
  if (v15)
  {
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v23);
  }
  else
  {
    LOBYTE(v25) = 0;
    *v11 = KeyedDecodingContainer.decode(_:forKey:)(&v25, v22);
    v11[1] = v16;
    LOBYTE(v25) = 1;
    v17 = sub_100048748(&qword_1011E1730, type metadata accessor for ShazamEvent.Attributes, (uint64_t)&unk_100EED70C);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v5, v3, &v25, v22, v3, v17);
    sub_10005B6C0((uint64_t)v5, (uint64_t)v11 + *(int *)(v9 + 20), type metadata accessor for ShazamEvent.Attributes);
    v26 = 2;
    v18 = sub_100C247FC();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v25, &type metadata for ShazamEvent.Relationships, &v26, v22, &type metadata for ShazamEvent.Relationships, v18);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v21, v22);
    *(_OWORD *)((char *)v11 + *(int *)(v9 + 24)) = v25;
    sub_10005B704((uint64_t)v11, v20, type metadata accessor for ShazamEvent);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v23);
    sub_10005B748((uint64_t)v11, type metadata accessor for ShazamEvent);
  }
}

uint64_t sub_100C1DDD0()
{
  return 25705;
}

uint64_t sub_100C1DDDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v6;
  uint64_t result;
  char v8;

  if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    result = swift_bridgeObjectRelease(0xE200000000000000);
    v8 = 0;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)(25705, 0xE200000000000000, a1, a2, 0);
    result = swift_bridgeObjectRelease(a2);
    v8 = v6 ^ 1;
  }
  *a3 = v8 & 1;
  return result;
}

uint64_t sub_100C1DE58(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C25AD4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100C1DE80(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C25AD4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100C1DEA8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;

  v5 = sub_100007E8C(&qword_1011E1920);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_100007E68(a1, v9);
  v11 = sub_100C25AD4();
  v12 = dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for ShazamEvent.Relationships.Data.ID.CodingKeys, &type metadata for ShazamEvent.Relationships.Data.ID.CodingKeys, v11, v9, v10);
  if (v2)
    return _s5Music18DragDropToPlaylistV6OriginVwxx_0(a1);
  v13 = KeyedDecodingContainer.decode(_:forKey:)(v12, v5);
  v15 = v14;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  result = _s5Music18DragDropToPlaylistV6OriginVwxx_0(a1);
  *a2 = v13;
  a2[1] = v15;
  return result;
}

uint64_t sub_100C1DFCC(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v3 = sub_100007E8C(&qword_1011E1930);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v8 = v1[1];
  v9 = a1[3];
  v10 = a1[4];
  sub_100007E68(a1, v9);
  v11 = sub_100C25AD4();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for ShazamEvent.Relationships.Data.ID.CodingKeys, &type metadata for ShazamEvent.Relationships.Data.ID.CodingKeys, v11, v9, v10);
  KeyedEncodingContainer.encode(_:forKey:)(v7, v8, v12, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_100C1E0B8()
{
  return 1635017060;
}

uint64_t sub_100C1E0C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v6;
  uint64_t result;
  char v8;

  if (a1 == 1635017060 && a2 == 0xE400000000000000)
  {
    result = swift_bridgeObjectRelease(0xE400000000000000);
    v8 = 0;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)(1635017060, 0xE400000000000000, a1, a2, 0);
    result = swift_bridgeObjectRelease(a2);
    v8 = v6 ^ 1;
  }
  *a3 = v8 & 1;
  return result;
}

uint64_t sub_100C1E14C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C256C8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100C1E174(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C256C8();
  return CodingKey.debugDescription.getter(a1, v2);
}

_QWORD *sub_100C1E19C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_100C23984(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_100C1E1C4@<X0>(uint64_t *a1@<X8>)
{
  return sub_100C1E1E0((uint64_t (*)(void))sub_100C23628, a1);
}

uint64_t sub_100C1E1E0@<X0>(uint64_t (*a1)(void)@<X3>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = a1();
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_100C1E208()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x7475626972747461;
  if (*v0 != 1)
    v1 = 0x6E6F6974616C6572;
  if (*v0)
    return v1;
  else
    return 25705;
}

uint64_t sub_100C1E268@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100C23AD0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100C1E28C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C247B8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100C1E2B4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C247B8();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_100C1E2DC(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100C1DB1C(a1, a2);
}

uint64_t sub_100C1E2F0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_100BC6850(*a1, *a2);
}

Swift::Int sub_100C1E2FC()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7, 0);
  v2 = 0xE700000000000000;
  v3 = 0x73736572646461;
  if (v1 != 1)
  {
    v3 = 7300455;
    v2 = 0xE300000000000000;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 1701667182;
  if (v1)
    v5 = v2;
  else
    v5 = 0xE400000000000000;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

uint64_t sub_100C1E38C(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = 0xE700000000000000;
  v3 = 0x73736572646461;
  if (*v1 != 1)
  {
    v3 = 7300455;
    v2 = 0xE300000000000000;
  }
  if (*v1)
    v4 = v3;
  else
    v4 = 1701667182;
  if (*v1)
    v5 = v2;
  else
    v5 = 0xE400000000000000;
  String.hash(into:)(a1, v4, v5);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_100C1E3F8(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD v8[9];

  v2 = *v1;
  Hasher.init(_seed:)(v8, a1);
  v3 = 0xE700000000000000;
  v4 = 0x73736572646461;
  if (v2 != 1)
  {
    v4 = 7300455;
    v3 = 0xE300000000000000;
  }
  if (v2)
    v5 = v4;
  else
    v5 = 1701667182;
  if (v2)
    v6 = v3;
  else
    v6 = 0xE400000000000000;
  String.hash(into:)(v8, v5, v6);
  swift_bridgeObjectRelease(v6);
  return Hasher._finalize()();
}

unint64_t sub_100C1E484@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100C23C3C(*a1);
  *a2 = result;
  return result;
}

void sub_100C1E4B0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE400000000000000;
  v4 = 0xE700000000000000;
  v5 = 0x73736572646461;
  if (v2 != 1)
  {
    v5 = 7300455;
    v4 = 0xE300000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 1701667182;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_100C1E500()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x73736572646461;
  if (*v0 != 1)
    v1 = 7300455;
  if (*v0)
    return v1;
  else
    return 1701667182;
}

unint64_t sub_100C1E54C@<X0>(Swift::String a1@<X1:X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100C23C3C(a1);
  *a2 = result;
  return result;
}

uint64_t sub_100C1E570(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C2501C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100C1E598(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C2501C();
  return CodingKey.debugDescription.getter(a1, v2);
}

unint64_t sub_100C1E5C0()
{
  return 0xD000000000000011;
}

uint64_t sub_100C1E5DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100C23FE0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_100C1E604(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C255FC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100C1E62C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C255FC();
  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_100C1E654@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[2];
  __int128 v8;
  __int128 v9;

  sub_100C24064(a1, (uint64_t)v7);
  if (!v2)
  {
    v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    result = *(double *)&v8;
    v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

uint64_t sub_100C1E694()
{
  _BYTE *v0;

  if (*v0)
    return 6778476;
  else
    return 7627116;
}

uint64_t sub_100C1E6B8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100C241B8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100C1E6DC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C25684();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100C1E704(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C25684();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_100C1E72C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double v4;
  uint64_t v5;

  v4 = sub_100C24288(a1);
  if (!v2)
  {
    *(double *)a2 = v4;
    *(_QWORD *)(a2 + 8) = v5;
  }
}

double sub_100C1E754@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[5];
  uint64_t v8;

  sub_100C23C84(a1, (uint64_t *)v7);
  if (!v2)
  {
    v5 = v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_QWORD *)(a2 + 80) = v8;
    result = *(double *)v7;
    v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_100C1E7AC()
{
  _BYTE *v0;

  if (*v0)
    return 0x7475626972747461;
  else
    return 25705;
}

uint64_t sub_100C1E7E0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100C243E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100C1E804(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C24730();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100C1E82C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C24730();
  return CodingKey.debugDescription.getter(a1, v2);
}

__n128 sub_100C1E854@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[6];
  uint64_t v8;

  sub_100C244C4(a1, (uint64_t *)v7);
  if (!v2)
  {
    v5 = v7[5];
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_OWORD *)(a2 + 80) = v5;
    *(_QWORD *)(a2 + 96) = v8;
    v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
    result = (__n128)v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(__n128 *)(a2 + 48) = result;
  }
  return result;
}

uint64_t sub_100C1E8B0()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10004FACC(v0, qword_10124FE38);
  sub_100048B14(v0, (uint64_t)qword_10124FE38);
  return static Logger.music(_:)(0x6174616D7A7A6152, 0xEA00000000007A7ALL);
}

void sub_100C1E910(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100EED528);
  v5 = swift_getKeyPath(&unk_100EED550);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  *a2 = v6;
}

uint64_t sub_100C1E98C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100EED528);
  v5 = swift_getKeyPath(&unk_100EED550);
  v7 = v2;
  swift_bridgeObjectRetain();
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_100C1EA04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for Date(0);
  v5 = sub_100048748(&qword_1011E0EC0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  return dispatch thunk of static Comparable.< infix(_:_:)(a1, a2, v4, v5) & 1;
}

_QWORD *sub_100C1EA70(_QWORD *result, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;

  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    v3 = result;
    if (a2)
    {
      v4 = sub_100007E8C(&qword_1011DF440);
      v5 = (_QWORD *)static Array._allocateBufferUninitialized(minimumCapacity:)(a2, v4);
      v6 = v5;
      v5[2] = a2;
      v5[4] = v3;
      if (a2 != 1)
      {
        v5[5] = v3;
        v7 = a2 - 2;
        if (v7)
        {
          v8 = v5 + 6;
          do
          {
            *v8++ = v3;
            swift_bridgeObjectRetain();
            --v7;
          }
          while (v7);
        }
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      return _swiftEmptyArrayStorage;
    }
    return v6;
  }
  return result;
}

uint64_t sub_100C1EB14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;

  v6[15] = a5;
  v6[16] = a6;
  v6[13] = a3;
  v6[14] = a4;
  v6[12] = a2;
  v7 = sub_100007E8C(&qword_1011E1460);
  v6[17] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[18] = v8;
  v6[19] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Artist(0);
  v6[20] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v6[21] = v10;
  v11 = *(_QWORD *)(v10 + 64);
  v6[22] = v11;
  v6[23] = swift_task_alloc((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011E0490) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[24] = swift_task_alloc(v12);
  v6[25] = swift_task_alloc(v12);
  v13 = sub_100007E8C(&qword_1011E1468);
  v6[26] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v6[27] = v14;
  v6[28] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011E1470) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[29] = swift_task_alloc(v15);
  v6[30] = swift_task_alloc(v15);
  return swift_task_switch(sub_100C1EC40, 0, 0);
}

uint64_t sub_100C1EC40()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t ObjectType;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned __int8 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v46;
  char v47;
  _QWORD *v48;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;

  v2 = *(_QWORD *)(v1 + 216);
  v52 = *(_QWORD *)(v1 + 168);
  v53 = *(_QWORD *)(v1 + 208);
  v3 = *(_QWORD *)(*(_QWORD *)(v1 + 104) + 16);
  swift_bridgeObjectRetain();
  v4 = 0;
  v51 = v2;
  v50 = v3;
  while (1)
  {
    if (v4 == v3)
    {
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v2 + 56))(*(_QWORD *)(v1 + 232), 1, 1, *(_QWORD *)(v1 + 208));
      v5 = v3;
    }
    else
    {
      if (v4 >= v3)
      {
        __break(1u);
        goto LABEL_20;
      }
      v6 = *(unint64_t **)(v1 + 232);
      v58 = *(_QWORD *)(v1 + 208);
      v7 = *(_QWORD *)(v1 + 160);
      v5 = v4 + 1;
      v8 = *(_QWORD *)(v1 + 224) + *(int *)(v53 + 48);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v52 + 16))(v8, *(_QWORD *)(v1 + 104)+ ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80))+ *(_QWORD *)(v52 + 72) * v4, v7);
      v9 = (char *)v6 + *(int *)(v53 + 48);
      *v6 = v4;
      (*(void (**)(char *, uint64_t, uint64_t))(v52 + 32))(v9, v8, v7);
      (*(void (**)(unint64_t *, _QWORD, uint64_t, uint64_t))(v2 + 56))(v6, 0, 1, v58);
    }
    v10 = *(_QWORD *)(v1 + 240);
    v11 = *(_QWORD *)(v1 + 208);
    sub_100065228(*(_QWORD *)(v1 + 232), v10, &qword_1011E1470);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v10, 1, v11) == 1)
      break;
    v59 = v5;
    v12 = *(uint64_t **)(v1 + 240);
    v13 = *(_QWORD *)(v1 + 200);
    v14 = *(_QWORD *)(v1 + 176);
    v15 = *(char **)(v1 + 184);
    v16 = *(_QWORD *)(v1 + 160);
    v17 = *(_QWORD *)(v1 + 120);
    v56 = *(_QWORD *)(v1 + 112);
    v57 = *(_QWORD *)(v1 + 192);
    v54 = v13;
    v55 = *v12;
    v18 = (char *)v12 + *(int *)(v53 + 48);
    v19 = type metadata accessor for TaskPriority(0);
    v20 = *(_QWORD *)(v19 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56))(v13, 1, 1, v19);
    v21 = *(void (**)(uint64_t, char *, uint64_t))(v52 + 32);
    v21((uint64_t)v15, v18, v16);
    v22 = *(unsigned __int8 *)(v52 + 80);
    v23 = (v22 + 56) & ~v22;
    v24 = (_QWORD *)swift_allocObject(&unk_101109270, v23 + v14, v22 | 7);
    v24[2] = 0;
    v25 = v24 + 2;
    v24[3] = 0;
    v24[4] = v55;
    v24[5] = v56;
    v24[6] = v17;
    v21((uint64_t)v24 + v23, v15, v16);
    sub_100C21444(v54, v57);
    LODWORD(v16) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v57, 1, v19);
    v26 = swift_retain();
    v27 = *(_QWORD *)(v1 + 192);
    if ((_DWORD)v16 == 1)
    {
      sub_10004FF60(*(_QWORD *)(v1 + 192), &qword_1011E0490);
      v28 = 0;
      v29 = *v25;
      if (*v25)
        goto LABEL_10;
    }
    else
    {
      v36 = TaskPriority.rawValue.getter(v26);
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v27, v19);
      v28 = v36;
      v29 = *v25;
      if (*v25)
      {
LABEL_10:
        v30 = v24[3];
        ObjectType = swift_getObjectType();
        swift_unknownObjectRetain(v29, v32);
        v33 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v30);
        v35 = v34;
        swift_unknownObjectRelease(v29);
        goto LABEL_13;
      }
    }
    v33 = 0;
    v35 = 0;
LABEL_13:
    v2 = v51;
    v37 = **(_QWORD **)(v1 + 96);
    v38 = sub_100007E8C(&qword_1011E1448);
    v39 = v35 | v33;
    if (v35 | v33)
    {
      v39 = v1 + 16;
      *(_QWORD *)(v1 + 16) = 0;
      *(_QWORD *)(v1 + 24) = 0;
      *(_QWORD *)(v1 + 32) = v33;
      *(_QWORD *)(v1 + 40) = v35;
    }
    v0 = *(_QWORD **)(v1 + 200);
    *(_QWORD *)(v1 + 48) = 1;
    *(_QWORD *)(v1 + 56) = v39;
    *(_QWORD *)(v1 + 64) = v37;
    swift_task_create(v28 | 0x3100, v1 + 48, v38, &unk_1011E1480, v24);
    swift_release();
    sub_10004FF60((uint64_t)v0, &qword_1011E0490);
    v3 = v50;
    v4 = v59;
  }
  v40 = *(_QWORD **)(v1 + 128);
  v41 = *(uint64_t **)(v1 + 96);
  swift_bridgeObjectRelease();
  v42 = *v41;
  v43 = sub_100007E8C(&qword_1011E1448);
  v44 = sub_100007E8C(&qword_1011DF550);
  ThrowingTaskGroup.makeAsyncIterator()(v42, v43, v44, &protocol self-conformance witness table for Error);
  v0 = (_QWORD *)*v40;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v40);
  *v40 = v0;
  if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    goto LABEL_16;
LABEL_20:
  v0 = sub_100CE9394(v0);
LABEL_16:
  v46 = *(_QWORD **)(v1 + 128);
  v47 = swift_isUniquelyReferenced_nonNull_native(v0);
  *v46 = v0;
  if ((v47 & 1) == 0)
    v0 = sub_100CE9394(v0);
  **(_QWORD **)(v1 + 128) = v0;
  v48 = (_QWORD *)swift_task_alloc(_sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
  *(_QWORD *)(v1 + 248) = v48;
  *v48 = v1;
  v48[1] = sub_100C1F07C;
  return _sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v1 + 72, 0, 0, *(_QWORD *)(v1 + 136), v1 + 88);
}

uint64_t sub_100C1F07C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 248));
  if (v0)
    v2 = sub_100C1F248;
  else
    v2 = sub_100C1F0E0;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_100C1F0E0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  _QWORD *v4;
  uint64_t result;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;

  v1 = *(_QWORD *)(v0 + 80);
  if (!v1)
  {
    v7 = *(_QWORD *)(v0 + 232);
    v8 = *(_QWORD *)(v0 + 240);
    v9 = *(_QWORD *)(v0 + 224);
    v11 = *(_QWORD *)(v0 + 192);
    v10 = *(_QWORD *)(v0 + 200);
    v12 = *(_QWORD *)(v0 + 184);
    v13 = *(_QWORD *)(v0 + 152);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 144) + 8))(v13, *(_QWORD *)(v0 + 136));
    swift_task_dealloc(v8);
    swift_task_dealloc(v7);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v2 = *(_QWORD **)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 72);
  v4 = (_QWORD *)*v2;
  result = swift_isUniquelyReferenced_nonNull_native(*v2);
  *v2 = v4;
  if ((result & 1) != 0)
  {
    if ((v3 & 0x8000000000000000) == 0)
      goto LABEL_4;
  }
  else
  {
    v14 = *(uint64_t **)(v0 + 128);
    result = (uint64_t)sub_100CE9394(v4);
    v4 = (_QWORD *)result;
    *v14 = result;
    if ((v3 & 0x8000000000000000) == 0)
    {
LABEL_4:
      if (v3 < v4[2])
      {
        swift_bridgeObjectRelease();
        v4[v3 + 4] = v1;
        v6 = (_QWORD *)swift_task_alloc(_sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
        *(_QWORD *)(v0 + 256) = v6;
        *v6 = v0;
        v6[1] = sub_100C1F2E8;
        return _sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0 + 72, 0, 0, *(_QWORD *)(v0 + 136), v0 + 88);
      }
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_100C1F248()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 232);
  v2 = *(_QWORD *)(v0 + 240);
  v3 = *(_QWORD *)(v0 + 224);
  v5 = *(_QWORD *)(v0 + 192);
  v4 = *(_QWORD *)(v0 + 200);
  v6 = *(_QWORD *)(v0 + 184);
  v7 = *(_QWORD *)(v0 + 152);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 144) + 8))(v7, *(_QWORD *)(v0 + 136));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100C1F2E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 256));
  if (v0)
    v2 = sub_100C1F248;
  else
    v2 = sub_100C1F0E0;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_100C1F34C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v12;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v12 = *a3;
  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1011E1450
                                                                                     + dword_1011E1450);
  v13 = (_QWORD *)swift_task_alloc(unk_1011E1454);
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_10005AEE4;
  return v15(a1, a2, v12, a4, a5, a6);
}

uint64_t sub_100C1F3EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int *a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  _QWORD *v9;
  int *v11;

  v7[3] = a1;
  v7[4] = a4;
  v11 = (int *)((char *)a5 + *a5);
  v9 = (_QWORD *)swift_task_alloc(a5[1]);
  v7[5] = v9;
  *v9 = v7;
  v9[1] = sub_100C1F464;
  return ((uint64_t (*)(_QWORD *, uint64_t))v11)(v7 + 2, a7);
}

uint64_t sub_100C1F464()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100C1F4E0;
  else
    v3 = sub_100C1F4C8;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100C1F4C8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = *(_QWORD **)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 16);
  *v1 = *(_QWORD *)(v0 + 32);
  v1[1] = v2;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100C1F4E0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

BOOL sub_100C1F4EC(double *a1, uint64_t a2)
{
  double v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  _BOOL8 result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;

  v4 = *a1;
  v5 = *((_QWORD *)a1 + 1);
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)&v4 == *(_QWORD *)a2 && v5 == v6;
  if (v7
    || (v8 = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)&v4, v5, *(_QWORD *)a2, v6, 0),
        result = 0,
        (v8 & 1) != 0))
  {
    v10 = *((_QWORD *)a1 + 2);
    v11 = *((_QWORD *)a1 + 3);
    v12 = *(_QWORD *)(a2 + 16);
    v13 = *(_QWORD *)(a2 + 24);
    if (v10 == v12 && v11 == v13)
      return a1[4] == *(double *)(a2 + 32) && a1[5] == *(double *)(a2 + 40);
    v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v11, v12, v13, 0);
    result = 0;
    if ((v15 & 1) != 0)
      return a1[4] == *(double *)(a2 + 32) && a1[5] == *(double *)(a2 + 40);
  }
  return result;
}

uint64_t sub_100C1F588(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1[7] = a1;
  v2 = type metadata accessor for URLRequest(0);
  v1[8] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[9] = v3;
  v1[10] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for URL(0);
  v1[11] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[12] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[13] = swift_task_alloc(v6);
  v1[14] = swift_task_alloc(v6);
  v7 = type metadata accessor for Date.ISO8601FormatStyle(0);
  v1[15] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v1[16] = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[17] = swift_task_alloc(v9);
  v1[18] = swift_task_alloc(v9);
  v1[19] = swift_task_alloc(v9);
  v1[20] = swift_task_alloc(v9);
  v10 = type metadata accessor for Date(0);
  v1[21] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v1[22] = v11;
  v1[23] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Locale(0);
  v1[24] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v1[25] = v13;
  v1[26] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011DE770) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[27] = swift_task_alloc(v14);
  v1[28] = swift_task_alloc(v14);
  v15 = sub_100007E8C(&qword_1011E1490);
  v1[29] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v15 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for URLComponents(0);
  v1[30] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v1[31] = v17;
  v1[32] = swift_task_alloc((*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100C1F740, 0, 0);
}

uint64_t sub_100C1F740(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t (*v66)(uint64_t, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;

  v2 = Artist.catalogID.getter(a1);
  *(_QWORD *)(v1 + 264) = v2;
  *(_QWORD *)(v1 + 272) = v3;
  if (!v3)
    goto LABEL_6;
  v4 = v2;
  v5 = v3;
  v6 = *(_QWORD *)(v1 + 224);
  v7 = *(_QWORD *)(v1 + 88);
  v8 = *(_QWORD *)(v1 + 96);
  URL.init(string:)(0xD000000000000030, 0x8000000100E56210);
  v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  result = v9(v6, 1, v7);
  if ((_DWORD)result == 1)
  {
    __break(1u);
    goto LABEL_9;
  }
  v64 = v4;
  v66 = v9;
  v11 = *(_QWORD *)(v1 + 240);
  v12 = *(_QWORD *)(v1 + 248);
  v14 = *(_QWORD *)(v1 + 224);
  v13 = *(_QWORD *)(v1 + 232);
  v15 = *(_QWORD *)(v1 + 88);
  v16 = *(_QWORD *)(v1 + 96);
  URLComponents.init(url:resolvingAgainstBaseURL:)(v14, 0);
  v17 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
  *(_QWORD *)(v1 + 280) = v17;
  v17(v14, v15);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v13, 1, v11);
  if ((_DWORD)result == 1)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  v18 = *(_QWORD *)(v1 + 208);
  v63 = *(_QWORD *)(v1 + 216);
  v53 = *(_QWORD *)(v1 + 200);
  v54 = *(_QWORD *)(v1 + 192);
  v60 = *(_QWORD *)(v1 + 176);
  v61 = *(_QWORD *)(v1 + 168);
  v19 = *(_QWORD *)(v1 + 144);
  v57 = *(_QWORD *)(v1 + 152);
  v58 = *(_QWORD *)(v1 + 160);
  v20 = *(_QWORD *)(v1 + 136);
  v55 = *(_QWORD *)(v1 + 184);
  v56 = *(_QWORD *)(v1 + 128);
  v21 = *(_QWORD *)(v1 + 120);
  v62 = *(_QWORD *)(v1 + 88);
  (*(void (**)(void))(*(_QWORD *)(v1 + 248) + 32))();
  v22 = sub_100007E8C(&qword_1011E1498);
  v23 = *(_QWORD *)(type metadata accessor for URLQueryItem(0) - 8);
  v59 = swift_allocObject(v22, ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ 3 * *(_QWORD *)(v23 + 72), *(unsigned __int8 *)(v23 + 80) | 7);
  *(_OWORD *)(v59 + 16) = xmmword_100EA7AC0;
  v24 = static Locale.current.getter(v59);
  v25 = Locale.identifier.getter(v24);
  v27 = v26;
  (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v18, v54);
  URLQueryItem.init(name:value:)(108, 0xE100000000000000, v25, v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  URLQueryItem.init(name:value:)(0x6449747369747261, 0xE800000000000000, v64, v5);
  swift_bridgeObjectRelease();
  v29 = static Date.now.getter(v28);
  v30 = static FormatStyle<>.iso8601.getter(v29);
  Date.ISO8601FormatStyle.day()(v30);
  v31 = *(uint64_t (**)(uint64_t, uint64_t))(v56 + 8);
  v32 = v31(v20, v21);
  Date.ISO8601FormatStyle.month()(v32);
  v33 = v31(v19, v21);
  Date.ISO8601FormatStyle.year()(v33);
  v31(v57, v21);
  v34 = sub_100048748(&qword_1011E14A0, (uint64_t (*)(uint64_t))&type metadata accessor for Date.ISO8601FormatStyle, (uint64_t)&protocol conformance descriptor for Date.ISO8601FormatStyle);
  Date.formatted<A>(_:)((_QWORD *)(v1 + 16), v58, v21, v34);
  v31(v58, v21);
  (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v55, v61);
  URLQueryItem.init(name:value:)(1836020326, 0xE400000000000000, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
  v35 = swift_bridgeObjectRelease();
  v36 = URLComponents.queryItems.setter(v59, v35);
  URLComponents.url.getter(v36);
  v37 = v66(v63, 1, v62);
  v38 = *(_QWORD *)(v1 + 216);
  if (v37 == 1)
  {
    swift_bridgeObjectRelease();
    sub_10004FF60(v38, &qword_1011DE770);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 248) + 8))(*(_QWORD *)(v1 + 256), *(_QWORD *)(v1 + 240));
LABEL_6:
    v39 = *(_QWORD *)(v1 + 224);
    v40 = *(_QWORD *)(v1 + 232);
    v42 = *(_QWORD *)(v1 + 208);
    v41 = *(_QWORD *)(v1 + 216);
    v43 = *(_QWORD *)(v1 + 184);
    v45 = *(_QWORD *)(v1 + 152);
    v44 = *(_QWORD *)(v1 + 160);
    v47 = *(_QWORD *)(v1 + 136);
    v46 = *(_QWORD *)(v1 + 144);
    v65 = *(_QWORD *)(v1 + 112);
    v67 = *(_QWORD *)(v1 + 104);
    v68 = *(_QWORD *)(v1 + 80);
    swift_task_dealloc(*(_QWORD *)(v1 + 256));
    swift_task_dealloc(v40);
    swift_task_dealloc(v39);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    swift_task_dealloc(v44);
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
    swift_task_dealloc(v47);
    swift_task_dealloc(v65);
    swift_task_dealloc(v67);
    swift_task_dealloc(v68);
    return (*(uint64_t (**)(_QWORD *))(v1 + 8))(_swiftEmptyArrayStorage);
  }
  v49 = *(_QWORD *)(v1 + 104);
  v48 = *(_QWORD *)(v1 + 112);
  v50 = *(_QWORD *)(v1 + 88);
  v51 = *(_QWORD *)(v1 + 96);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v51 + 32))(v48, *(_QWORD *)(v1 + 216), v50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 16))(v49, v48, v50);
  URLRequest.init(url:cachePolicy:timeoutInterval:)(v49, 0, 60.0);
  *(_QWORD *)(v1 + 288) = objc_msgSend((id)objc_opt_self(NSURLSession), "sharedSession");
  v52 = (_QWORD *)swift_task_alloc(async function pointer to NSURLSession.data(for:delegate:)[1]);
  *(_QWORD *)(v1 + 296) = v52;
  *v52 = v1;
  v52[1] = sub_100C1FC18;
  return NSURLSession.data(for:delegate:)(*(_QWORD *)(v1 + 80), 0);
}

uint64_t sub_100C1FC18(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v6;
  uint64_t v7;
  uint64_t (*v8)();
  void *v9;

  v6 = *(_QWORD **)v4;
  v7 = *(_QWORD *)(*(_QWORD *)v4 + 296);
  v6[38] = a1;
  v6[39] = a2;
  v6[40] = v3;
  swift_task_dealloc(v7);
  if (v3)
  {
    v8 = sub_100C200C4;
  }
  else
  {
    v9 = (void *)v6[36];

    v8 = sub_100C1FCA0;
  }
  return swift_task_switch(v8, 0, 0);
}

uint64_t sub_100C1FCA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t);
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53[2];

  v2 = *(_QWORD *)(v0 + 312);
  v1 = *(_QWORD *)(v0 + 320);
  v3 = *(_QWORD *)(v0 + 304);
  v4 = type metadata accessor for JSONDecoder(0);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  JSONDecoder.init()();
  v5 = sub_100C2148C();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)((_QWORD *)(v0 + 32), &type metadata for Root, v3, v2, &type metadata for Root, v5);
  v7 = *(_QWORD *)(v0 + 304);
  v6 = *(_QWORD *)(v0 + 312);
  if (v1)
  {
    sub_1000652DC(*(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 312));
    swift_release();
    if (qword_1011DE098 != -1)
      swift_once(&qword_1011DE098, sub_100C1E8B0);
    v8 = type metadata accessor for Logger(0);
    sub_100048B14(v8, (uint64_t)qword_10124FE38);
    swift_errorRetain(v1);
    swift_bridgeObjectRetain();
    v9 = swift_errorRetain(v1);
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.error.getter(v10);
    v12 = os_log_type_enabled(v10, v11);
    v13 = *(_QWORD *)(v0 + 272);
    if (v12)
    {
      v14 = *(_QWORD *)(v0 + 264);
      v15 = swift_slowAlloc(22, -1);
      v16 = swift_slowAlloc(64, -1);
      v53[0] = v16;
      *(_DWORD *)v15 = 136315394;
      swift_bridgeObjectRetain();
      v17 = (char *)MusicItemID.description.getter(v14, v13);
      v19 = v18;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v15 + 4) = sub_100BBDE38(v17, v19, v53);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n(v13, 2);
      *(_WORD *)(v15 + 12) = 2080;
      *(_QWORD *)(v0 + 48) = v1;
      swift_errorRetain(v1);
      v20 = sub_100007E8C(&qword_1011DF550);
      v21 = (char *)String.init<A>(describing:)(v0 + 48, v20);
      *(_QWORD *)(v15 + 14) = sub_100BBDE38(v21, v22, v53);
      swift_bridgeObjectRelease();
      swift_errorRelease(v1);
      swift_errorRelease(v1);
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Could not load for artistID=%s with error=%s", (uint8_t *)v15, 0x16u);
      swift_arrayDestroy(v16, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v16, -1, -1);
      swift_slowDealloc(v15, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 272), 2);
      swift_errorRelease(v1);
      swift_errorRelease(v1);
    }

    v28 = *(void (**)(uint64_t, uint64_t))(v0 + 280);
    v29 = *(_QWORD *)(v0 + 112);
    v31 = *(_QWORD *)(v0 + 80);
    v30 = *(_QWORD *)(v0 + 88);
    v32 = *(_QWORD *)(v0 + 64);
    v33 = *(_QWORD *)(v0 + 72);
    swift_errorRelease(v1);
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v31, v32);
    v28(v29, v30);
    v52 = _swiftEmptyArrayStorage;
  }
  else
  {
    v48 = *(_QWORD *)(v0 + 112);
    v50 = *(void (**)(uint64_t, uint64_t))(v0 + 280);
    v23 = *(_QWORD *)(v0 + 72);
    v45 = *(_QWORD *)(v0 + 80);
    v46 = *(_QWORD *)(v0 + 88);
    v24 = *(_QWORD *)(v0 + 56);
    v44 = *(_QWORD *)(v0 + 64);
    swift_release();
    swift_bridgeObjectRelease();
    v26 = *(_QWORD *)(v0 + 32);
    v25 = *(_QWORD *)(v0 + 40);
    v27 = (_QWORD *)swift_task_alloc(48);
    v27[2] = v26;
    v27[3] = v25;
    v27[4] = v24;
    swift_bridgeObjectRetain();
    v52 = (_QWORD *)sub_100C1A998((void (*)(uint64_t))sub_100C214D0, (uint64_t)v27, v26);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000652DC(v7, v6);
    swift_bridgeObjectRelease();
    swift_task_dealloc(v27);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v45, v44);
    v50(v48, v46);
  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 248) + 8))(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 240));
  v35 = *(_QWORD *)(v0 + 224);
  v34 = *(_QWORD *)(v0 + 232);
  v37 = *(_QWORD *)(v0 + 208);
  v36 = *(_QWORD *)(v0 + 216);
  v38 = *(_QWORD *)(v0 + 184);
  v40 = *(_QWORD *)(v0 + 152);
  v39 = *(_QWORD *)(v0 + 160);
  v41 = *(_QWORD *)(v0 + 136);
  v42 = *(_QWORD *)(v0 + 144);
  v47 = *(_QWORD *)(v0 + 112);
  v49 = *(_QWORD *)(v0 + 104);
  v51 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 256));
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v42);
  swift_task_dealloc(v41);
  swift_task_dealloc(v47);
  swift_task_dealloc(v49);
  swift_task_dealloc(v51);
  return (*(uint64_t (**)(_QWORD *))(v0 + 8))(v52);
}

uint64_t sub_100C200C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v1 = *(_QWORD *)(v0 + 320);
  if (qword_1011DE098 != -1)
    swift_once(&qword_1011DE098, sub_100C1E8B0);
  v2 = type metadata accessor for Logger(0);
  sub_100048B14(v2, (uint64_t)qword_10124FE38);
  swift_errorRetain(v1);
  swift_bridgeObjectRetain();
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 272);
  if (v6)
  {
    v8 = *(_QWORD *)(v0 + 264);
    v9 = swift_slowAlloc(22, -1);
    v10 = swift_slowAlloc(64, -1);
    v36 = v10;
    *(_DWORD *)v9 = 136315394;
    swift_bridgeObjectRetain();
    v11 = (char *)MusicItemID.description.getter(v8, v7);
    v13 = v12;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v9 + 4) = sub_100BBDE38(v11, v13, &v36);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n(v7, 2);
    *(_WORD *)(v9 + 12) = 2080;
    *(_QWORD *)(v0 + 48) = v1;
    swift_errorRetain(v1);
    v14 = sub_100007E8C(&qword_1011DF550);
    v15 = (char *)String.init<A>(describing:)(v0 + 48, v14);
    *(_QWORD *)(v9 + 14) = sub_100BBDE38(v15, v16, &v36);
    swift_bridgeObjectRelease();
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Could not load for artistID=%s with error=%s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy(v10, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 272), 2);
    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }

  v17 = *(void (**)(uint64_t, uint64_t))(v0 + 280);
  v18 = *(_QWORD *)(v0 + 112);
  v20 = *(_QWORD *)(v0 + 80);
  v19 = *(_QWORD *)(v0 + 88);
  v21 = *(_QWORD *)(v0 + 64);
  v22 = *(_QWORD *)(v0 + 72);
  swift_errorRelease(v1);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
  v17(v18, v19);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 248) + 8))(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 240));
  v23 = *(_QWORD *)(v0 + 224);
  v24 = *(_QWORD *)(v0 + 232);
  v26 = *(_QWORD *)(v0 + 208);
  v25 = *(_QWORD *)(v0 + 216);
  v27 = *(_QWORD *)(v0 + 184);
  v29 = *(_QWORD *)(v0 + 152);
  v28 = *(_QWORD *)(v0 + 160);
  v31 = *(_QWORD *)(v0 + 136);
  v30 = *(_QWORD *)(v0 + 144);
  v33 = *(_QWORD *)(v0 + 112);
  v34 = *(_QWORD *)(v0 + 104);
  v35 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 256));
  swift_task_dealloc(v24);
  swift_task_dealloc(v23);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  return (*(uint64_t (**)(_QWORD *))(v0 + 8))(_swiftEmptyArrayStorage);
}

void sub_100C203D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  id v4;
  NSString v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id v9;
  Class isa;
  NSString v11;
  _OWORD v12[3];
  _OWORD v13[3];
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;

  sub_100065228(a1, (uint64_t)v13, &qword_1011E13D0);
  if (*((_QWORD *)&v13[0] + 1))
  {
    v14 = v13[0];
    v15 = v13[1];
    v16 = v13[2];
    v1 = type metadata accessor for JSONEncoder(0);
    v2 = swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
    JSONEncoder.init()(v2);
    v12[0] = v14;
    v12[1] = v15;
    v12[2] = v16;
    v3 = sub_100C20740();
    v6 = dispatch thunk of JSONEncoder.encode<A>(_:)(v12, &type metadata for RazzmatazzController.Location, v3);
    v8 = v7;
    swift_release();
    v17 = v14;
    sub_1001C7464((uint64_t)&v17);
    v18 = v15;
    sub_1001C7464((uint64_t)&v18);
    v9 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    isa = Data._bridgeToObjectiveC()().super.isa;
    v11 = String._bridgeToObjectiveC()();
    objc_msgSend(v9, "setValue:forKey:", isa, v11);

    sub_1000652DC(v6, v8);
  }
  else
  {
    v4 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v5 = String._bridgeToObjectiveC()();
    objc_msgSend(v4, "setValue:forKey:", 0, v5);

  }
}

unint64_t sub_100C20740()
{
  unint64_t result;

  result = qword_1011E13D8;
  if (!qword_1011E13D8)
  {
    result = swift_getWitnessTable(&unk_100EED3F8, &type metadata for RazzmatazzController.Location);
    atomic_store(result, (unint64_t *)&qword_1011E13D8);
  }
  return result;
}

void sub_100C20784(uint64_t a1@<X8>)
{
  id v2;
  NSString v3;
  id v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  _QWORD v14[3];
  uint64_t v15;
  __int128 v16;
  _QWORD v17[2];
  _OWORD v18[2];

  v2 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v2, "valueForKey:", v3);

  if (v4)
  {
    _bridgeAnyObjectToAny(_:)(v18, v4);
    swift_unknownObjectRelease(v4);
  }
  else
  {
    memset(v18, 0, sizeof(v18));
  }
  sub_100065228((uint64_t)v18, (uint64_t)v14, &qword_1011E0700);
  if (!v15)
  {
    sub_10004FF60((uint64_t)v14, &qword_1011E0700);
    goto LABEL_8;
  }
  if ((swift_dynamicCast(v17, v14, (char *)&type metadata for Any + 8, &type metadata for Data, 6) & 1) == 0)
  {
LABEL_8:
    v9 = 0;
    v10 = 0;
    v11 = 0;
    v12 = 0;
    v13 = 0uLL;
    goto LABEL_9;
  }
  v6 = v17[0];
  v5 = v17[1];
  v7 = type metadata accessor for JSONDecoder(0);
  swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  JSONDecoder.init()();
  v8 = sub_100C21528();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)(v14, &type metadata for RazzmatazzController.Location, v6, v5, &type metadata for RazzmatazzController.Location, v8);
  sub_1000652DC(v6, v5);
  swift_release();
  v9 = v14[0];
  v10 = v14[1];
  v11 = v14[2];
  v12 = v15;
  v13 = v16;
LABEL_9:
  *(_QWORD *)a1 = v9;
  *(_QWORD *)(a1 + 8) = v10;
  *(_QWORD *)(a1 + 16) = v11;
  *(_QWORD *)(a1 + 24) = v12;
  *(_OWORD *)(a1 + 32) = v13;
}

uint64_t sub_100C20AD0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_100C20AE8, 0, 0);
}

uint64_t sub_100C20AE8()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *KeyPath;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  _QWORD *v6;
  char *v8;

  v1 = v0[2];
  KeyPath = (_QWORD *)swift_getKeyPath(&unk_100EED570);
  v3 = sub_1000E4570(&qword_1011E1418, (uint64_t *)&unk_1011DF7F0, (void (*)(void))sub_100C2123C, (uint64_t)&protocol conformance descriptor for <A> A?);
  v5 = Array.removingDuplicates<A>(with:)(KeyPath, v1, v3, v4);
  v0[3] = v5;
  swift_release();
  v8 = (char *)&dword_1011E1430 + dword_1011E1430;
  v6 = (_QWORD *)swift_task_alloc(unk_1011E1434);
  v0[4] = v6;
  *v6 = v0;
  v6[1] = sub_100C20BB0;
  return ((uint64_t (*)(void *, _QWORD, uint64_t))v8)(&unk_1011E1428, 0, v5);
}

uint64_t sub_100C20BB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  *(_QWORD *)(*(_QWORD *)v1 + 40) = a1;
  swift_task_dealloc(v2);
  swift_bridgeObjectRelease();
  return swift_task_switch(sub_100C20C14, 0, 0);
}

void sub_100C20C14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  int64_t v8;
  size_t isUniquelyReferenced_nonNull_native;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  __n128 v17;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
  {
    v4 = (char *)_swiftEmptyArrayStorage;
LABEL_20:
    v17 = swift_bridgeObjectRelease();
    (*(void (**)(char *, __n128))(v0 + 8))(v4, v17);
    return;
  }
  v3 = (uint64_t *)(v1 + 32);
  swift_bridgeObjectRetain();
  v4 = (char *)_swiftEmptyArrayStorage;
  while (1)
  {
    v5 = *v3;
    v6 = *(_QWORD *)(*v3 + 16);
    v7 = *((_QWORD *)v4 + 2);
    v8 = v7 + v6;
    if (__OFADD__(v7, v6))
      break;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v4);
    if ((_DWORD)isUniquelyReferenced_nonNull_native && v8 <= *((_QWORD *)v4 + 3) >> 1)
    {
      if (*(_QWORD *)(v5 + 16))
        goto LABEL_14;
    }
    else
    {
      if (v7 <= v8)
        v10 = v7 + v6;
      else
        v10 = v7;
      v4 = (char *)sub_100BCC8E0(isUniquelyReferenced_nonNull_native, v10, 1, v4);
      if (*(_QWORD *)(v5 + 16))
      {
LABEL_14:
        v11 = *((_QWORD *)v4 + 2);
        v12 = (*((_QWORD *)v4 + 3) >> 1) - v11;
        v13 = type metadata accessor for Razzmatazz(0);
        if (v12 < v6)
          goto LABEL_23;
        swift_arrayInitWithCopy(&v4[((*(unsigned __int8 *)(*(_QWORD *)(v13 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v13 - 8) + 80))
                                  + *(_QWORD *)(*(_QWORD *)(v13 - 8) + 72) * v11]);
        if (v6)
        {
          v14 = *((_QWORD *)v4 + 2);
          v15 = __OFADD__(v14, v6);
          v16 = v14 + v6;
          if (v15)
            goto LABEL_24;
          *((_QWORD *)v4 + 2) = v16;
        }
        goto LABEL_4;
      }
    }
    if (v6)
    {
      __break(1u);
      break;
    }
LABEL_4:
    swift_bridgeObjectRelease();
    ++v3;
    if (!--v2)
    {
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
}

uint64_t sub_100C20D7C(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  char v9;

  if (a1 == 0x656C746974 && a2 == 0xE500000000000000)
  {
    v5 = 0xE500000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656C746974, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000)
  {
    v7 = 0xE800000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656C746974627573, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x656475746974616CLL && a2 == 0xE800000000000000)
  {
    v8 = 0xE800000000000000;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656475746974616CLL, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0x64757469676E6F6CLL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease(0xE900000000000065);
    return 3;
  }
  else
  {
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(0x64757469676E6F6CLL, 0xE900000000000065, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v9 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

void sub_100C20F38(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;
  char v26;

  v5 = sub_100007E8C(&qword_1011E13E0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_100007E68(a1, v9);
  v11 = sub_100C2117C();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for RazzmatazzController.Location.CodingKeys, &type metadata for RazzmatazzController.Location.CodingKeys, v11, v9, v10);
  if (v2)
  {
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(a1);
  }
  else
  {
    v26 = 0;
    v12 = KeyedDecodingContainer.decode(_:forKey:)(&v26, v5);
    v14 = v13;
    v25 = 1;
    swift_bridgeObjectRetain();
    v21 = KeyedDecodingContainer.decode(_:forKey:)(&v25, v5);
    v22 = v15;
    v24 = 2;
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode(_:forKey:)(&v24, v5);
    v17 = v16;
    v23 = 3;
    KeyedDecodingContainer.decode(_:forKey:)(&v23, v5);
    v19 = v18;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(a1);
    v20 = v22;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *a2 = v12;
    a2[1] = v14;
    a2[2] = v21;
    a2[3] = v20;
    a2[4] = v17;
    a2[5] = v19;
  }
}

unint64_t sub_100C2117C()
{
  unint64_t result;

  result = qword_1011E13E8;
  if (!qword_1011E13E8)
  {
    result = swift_getWitnessTable(&unk_100EED79C, &type metadata for RazzmatazzController.Location.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E13E8);
  }
  return result;
}

unint64_t sub_100C211C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E0EB8;
  if (!qword_1011E0EB8)
  {
    v1 = sub_100044B54(&qword_1011DF450);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1011E0EB8);
  }
  return result;
}

uint64_t sub_100C21214@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = Artist.catalogID.getter(a1);
  *a2 = result;
  a2[1] = v4;
  return result;
}

unint64_t sub_100C2123C()
{
  unint64_t result;

  result = qword_1011E1420;
  if (!qword_1011E1420)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MusicItemID, &type metadata for MusicItemID);
    atomic_store(result, (unint64_t *)&qword_1011E1420);
  }
  return result;
}

uint64_t sub_100C21280(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v6 = (uint64_t *)v2[2];
  v7 = v2[3];
  v9 = v2[4];
  v8 = v2[5];
  v10 = (_QWORD *)swift_task_alloc(dword_1011E143C);
  *(_QWORD *)(v3 + 16) = v10;
  *v10 = v3;
  v10[1] = sub_10005AEE4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t))((char *)&dword_1011E1438
                                                                                         + dword_1011E1438))(a1, a2, v6, v7, v9, v8);
}

uint64_t sub_100C21314()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = type metadata accessor for Artist(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 56) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v7 = swift_release(*(_QWORD *)(v0 + 48));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100C21390(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Artist(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (int *)v1[5];
  v9 = v1[6];
  v10 = (uint64_t)v1 + ((v4 + 56) & ~v4);
  v11 = (_QWORD *)swift_task_alloc(dword_1011E147C);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_1011E1478
                                                                                              + dword_1011E1478))(a1, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_100C21444(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011E0490);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100C2148C()
{
  unint64_t result;

  result = qword_1011E14A8;
  if (!qword_1011E14A8)
  {
    result = swift_getWitnessTable(&unk_100EED774, &type metadata for Root);
    atomic_store(result, (unint64_t *)&qword_1011E14A8);
  }
  return result;
}

uint64_t sub_100C214D0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;

  return sub_100C1BBD4(a1, *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), a2);
}

uint64_t type metadata accessor for ShazamEvent(uint64_t a1)
{
  return sub_100055934(a1, qword_1011E1670, (uint64_t)&nominal type descriptor for ShazamEvent);
}

uint64_t type metadata accessor for RazzmatazzAPI.CustomError(uint64_t a1)
{
  return sub_100055934(a1, qword_1011E15E0, (uint64_t)&nominal type descriptor for RazzmatazzAPI.CustomError);
}

uint64_t type metadata accessor for ShazamEvent.Attributes(uint64_t a1)
{
  return sub_100055934(a1, qword_1011E1530, (uint64_t)&nominal type descriptor for ShazamEvent.Attributes);
}

unint64_t sub_100C21528()
{
  unint64_t result;

  result = qword_1011E14D0;
  if (!qword_1011E14D0)
  {
    result = swift_getWitnessTable(&unk_100EED420, &type metadata for RazzmatazzController.Location);
    atomic_store(result, (unint64_t *)&qword_1011E14D0);
  }
  return result;
}

uint64_t *sub_100C2156C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v17);
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for Date(0);
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = *(int *)(a3 + 24);
    v14 = (char *)v4 + v13;
    v15 = (char *)a2 + v13;
    v16 = type metadata accessor for TimeZone(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  }
  return v4;
}

uint64_t sub_100C21644(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 24);
  v7 = type metadata accessor for TimeZone(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

_QWORD *sub_100C216B8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Date(0);
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = *(int *)(a3 + 24);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  return a1;
}

_QWORD *sub_100C21764(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  *a1 = *a2;
  v6 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

_OWORD *sub_100C21814(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

_QWORD *sub_100C218AC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = *(int *)(a3 + 24);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t sub_100C2194C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C21958);
}

uint64_t sub_100C21958(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for Date(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = type metadata accessor for TimeZone(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_100C219F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C21A04);
}

uint64_t sub_100C21A04(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for Date(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = type metadata accessor for TimeZone(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_100C21AA0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[3];

  v5[0] = &unk_100EED5A8;
  result = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v5[1] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for TimeZone(319);
    if (v4 <= 0x3F)
    {
      v5[2] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 256, 3, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

void destroy for VenueElement(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 72));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 88));

}

_QWORD *initializeWithCopy for VenueElement(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  v9 = (void *)a2[12];
  a1[12] = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10 = v9;
  return a1;
}

_QWORD *assignWithCopy for VenueElement(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;

  *a1 = *a2;
  v4 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  a1[2] = a2[2];
  v5 = a1[3];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v5);
  a1[4] = a2[4];
  v6 = a1[5];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  a1[6] = a2[6];
  v7 = a1[7];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v7);
  a1[8] = a2[8];
  v8 = a1[9];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v8);
  a1[10] = a2[10];
  v9 = a1[11];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v9);
  v10 = (void *)a2[12];
  v11 = (void *)a1[12];
  a1[12] = v10;
  v12 = v10;

  return a1;
}

_QWORD *assignWithTake for VenueElement(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = a1[1];
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = a1[3];
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = a1[5];
  a1[4] = *(_QWORD *)(a2 + 32);
  a1[5] = v8;
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = a1[7];
  a1[6] = *(_QWORD *)(a2 + 48);
  a1[7] = v10;
  swift_bridgeObjectRelease(v11);
  v12 = *(_QWORD *)(a2 + 72);
  v13 = a1[9];
  a1[8] = *(_QWORD *)(a2 + 64);
  a1[9] = v12;
  swift_bridgeObjectRelease(v13);
  a1[10] = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease(a1[11]);
  v14 = (void *)a1[12];
  *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 88);

  return a1;
}

ValueMetadata *type metadata accessor for VenueElement()
{
  return &type metadata for VenueElement;
}

uint64_t *sub_100C21DC4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v31;
  char *v32;
  uint64_t v33;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v29 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    if (EnumCaseMultiPayload == 1)
    {
      v33 = type metadata accessor for ShazamEvent(0);
      v9 = *(int *)(v33 + 20);
      v10 = (uint64_t *)((char *)a1 + v9);
      v11 = (char *)a2 + v9;
      v12 = *(uint64_t *)((char *)a2 + v9 + 8);
      *v10 = *(uint64_t *)((char *)a2 + v9);
      v10[1] = v12;
      v13 = type metadata accessor for ShazamEvent.Attributes(0);
      v14 = *(int *)(v13 + 20);
      v31 = &v11[v14];
      v32 = (char *)v10 + v14;
      v15 = type metadata accessor for Date(0);
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v16(v32, v31, v15);
      v17 = *(int *)(v13 + 24);
      v18 = (char *)v10 + v17;
      v19 = &v11[v17];
      v20 = type metadata accessor for TimeZone(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
      v21 = *(int *)(v33 + 24);
      v22 = (uint64_t *)((char *)a1 + v21);
      v23 = (uint64_t *)((char *)a2 + v21);
      v24 = v23[1];
      *v22 = *v23;
      v22[1] = v24;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v25 = sub_100007E8C(&qword_1011E14C8);
      *(uint64_t *)((char *)a1 + *(int *)(v25 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v25 + 48));
      swift_bridgeObjectRetain();
      v26 = a1;
      v27 = a3;
      v28 = 1;
    }
    else
    {
      swift_bridgeObjectRetain();
      v26 = a1;
      v27 = a3;
      v28 = 0;
    }
    swift_storeEnumTagMultiPayload(v26, v27, v28);
  }
  return a1;
}

double sub_100C21F5C(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  double result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, a2);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  if (EnumCaseMultiPayload == 1)
  {
    v5 = a1 + *(int *)(type metadata accessor for ShazamEvent(0) + 20);
    swift_bridgeObjectRelease();
    v6 = type metadata accessor for ShazamEvent.Attributes(0);
    v7 = v5 + *(int *)(v6 + 20);
    v8 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
    v9 = v5 + *(int *)(v6 + 24);
    v10 = type metadata accessor for TimeZone(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100007E8C(&qword_1011E14C8);
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  return result;
}

_QWORD *sub_100C22050(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v28;
  uint64_t v29;
  uint64_t v30;

  v3 = a3;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  v7 = a2[1];
  *a1 = *a2;
  a1[1] = v7;
  if (EnumCaseMultiPayload == 1)
  {
    v29 = type metadata accessor for ShazamEvent(0);
    v30 = v3;
    v8 = *(int *)(v29 + 20);
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (char *)a2 + v8;
    v11 = *(_QWORD *)((char *)a2 + v8 + 8);
    *v9 = *(_QWORD *)((char *)a2 + v8);
    v9[1] = v11;
    v12 = type metadata accessor for ShazamEvent.Attributes(0);
    v13 = *(int *)(v12 + 20);
    v28 = (char *)v9 + v13;
    v14 = &v10[v13];
    v15 = type metadata accessor for Date(0);
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16(v28, v14, v15);
    v17 = *(int *)(v12 + 24);
    v18 = (char *)v9 + v17;
    v19 = &v10[v17];
    v3 = v30;
    v20 = type metadata accessor for TimeZone(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    v21 = *(int *)(v29 + 24);
    v22 = (_QWORD *)((char *)a1 + v21);
    v23 = (_QWORD *)((char *)a2 + v21);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v25 = sub_100007E8C(&qword_1011E14C8);
    *(_QWORD *)((char *)a1 + *(int *)(v25 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v25 + 48));
    v26 = 1;
  }
  else
  {
    v26 = 0;
  }
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload(a1, v3, v26);
  return a1;
}

_QWORD *sub_100C221BC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char *v25;
  uint64_t v26;
  uint64_t v27;

  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, type metadata accessor for RazzmatazzAPI.CustomError);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    *a1 = *a2;
    a1[1] = a2[1];
    if (EnumCaseMultiPayload == 1)
    {
      v26 = type metadata accessor for ShazamEvent(0);
      v27 = a3;
      v7 = *(int *)(v26 + 20);
      v8 = (_QWORD *)((char *)a1 + v7);
      v9 = (char *)a2 + v7;
      *v8 = *(_QWORD *)((char *)a2 + v7);
      v8[1] = *(_QWORD *)((char *)a2 + v7 + 8);
      v10 = type metadata accessor for ShazamEvent.Attributes(0);
      v11 = *(int *)(v10 + 20);
      v25 = (char *)v8 + v11;
      v12 = &v9[v11];
      v13 = type metadata accessor for Date(0);
      v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v14(v25, v12, v13);
      v15 = *(int *)(v10 + 24);
      v16 = (char *)v8 + v15;
      v17 = &v9[v15];
      a3 = v27;
      v18 = type metadata accessor for TimeZone(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
      v19 = *(int *)(v26 + 24);
      v20 = (_QWORD *)((char *)a1 + v19);
      v21 = (_QWORD *)((char *)a2 + v19);
      *v20 = *v21;
      v20[1] = v21[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v22 = sub_100007E8C(&qword_1011E14C8);
      *(_QWORD *)((char *)a1 + *(int *)(v22 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v22 + 48));
      v23 = 1;
    }
    else
    {
      v23 = 0;
    }
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload(a1, a3, v23);
  }
  return a1;
}

_OWORD *sub_100C22358(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    *a1 = *a2;
    v6 = type metadata accessor for ShazamEvent(0);
    v7 = *(int *)(v6 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    *(_OWORD *)((char *)a1 + v7) = *(_OWORD *)((char *)a2 + v7);
    v10 = type metadata accessor for ShazamEvent.Attributes(0);
    v11 = *(int *)(v10 + 20);
    v12 = &v8[v11];
    v13 = &v9[v11];
    v14 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    v15 = *(int *)(v10 + 24);
    v16 = &v8[v15];
    v17 = &v9[v15];
    v18 = type metadata accessor for TimeZone(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
    *(_OWORD *)((char *)a1 + *(int *)(v6 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(v6 + 24));
    v19 = sub_100007E8C(&qword_1011E14C8);
    *(_QWORD *)((char *)a1 + *(int *)(v19 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v19 + 48));
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_100C2248C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;

  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, type metadata accessor for RazzmatazzAPI.CustomError);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      *a1 = *a2;
      v6 = type metadata accessor for ShazamEvent(0);
      v7 = *(int *)(v6 + 20);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      *(_OWORD *)((char *)a1 + v7) = *(_OWORD *)((char *)a2 + v7);
      v10 = type metadata accessor for ShazamEvent.Attributes(0);
      v11 = *(int *)(v10 + 20);
      v12 = &v8[v11];
      v13 = &v9[v11];
      v14 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
      v15 = *(int *)(v10 + 24);
      v16 = &v8[v15];
      v17 = &v9[v15];
      v18 = type metadata accessor for TimeZone(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
      *(_OWORD *)((char *)a1 + *(int *)(v6 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(v6 + 24));
      v19 = sub_100007E8C(&qword_1011E14C8);
      *(_QWORD *)((char *)a1 + *(int *)(v19 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v19 + 48));
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100C225D8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _BYTE v4[32];
  _QWORD v5[2];

  v5[0] = &unk_100EED5A8;
  result = type metadata accessor for ShazamEvent(319);
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2(v4, *(_QWORD *)(result - 8) + 64, (char *)&value witness table for Builtin.BridgeObject + 64);
    v5[1] = v4;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v5);
    return 0;
  }
  return result;
}

uint64_t *sub_100C22660(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  char *v26;
  char *v27;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (char *)a2 + v8;
    v11 = *(uint64_t *)((char *)a2 + v8 + 8);
    *v9 = *(uint64_t *)((char *)a2 + v8);
    v9[1] = v11;
    v12 = type metadata accessor for ShazamEvent.Attributes(0);
    v13 = *(int *)(v12 + 20);
    v26 = &v10[v13];
    v27 = (char *)v9 + v13;
    v14 = type metadata accessor for Date(0);
    v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15(v27, v26, v14);
    v16 = *(int *)(v12 + 24);
    v17 = (char *)v9 + v16;
    v18 = &v10[v16];
    v19 = type metadata accessor for TimeZone(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = *(int *)(a3 + 24);
    v21 = (uint64_t *)((char *)v4 + v20);
    v22 = (uint64_t *)((char *)a2 + v20);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

double sub_100C22790(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  v5 = type metadata accessor for ShazamEvent.Attributes(0);
  v6 = v4 + *(int *)(v5 + 20);
  v7 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = v4 + *(int *)(v5 + 24);
  v9 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

_QWORD *sub_100C22840(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  char *v24;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (char *)a2 + v6;
  v9 = *(_QWORD *)((char *)a2 + v6 + 8);
  *v7 = *(_QWORD *)((char *)a2 + v6);
  v7[1] = v9;
  v10 = type metadata accessor for ShazamEvent.Attributes(0);
  v11 = *(int *)(v10 + 20);
  v24 = (char *)v7 + v11;
  v12 = &v8[v11];
  v13 = type metadata accessor for Date(0);
  v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14(v24, v12, v13);
  v15 = *(int *)(v10 + 24);
  v16 = (char *)v7 + v15;
  v17 = &v8[v15];
  v18 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = *(int *)(a3 + 24);
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_100C2294C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (char *)a2 + v6;
  *v7 = *(_QWORD *)((char *)a2 + v6);
  v7[1] = *(_QWORD *)((char *)a2 + v6 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = type metadata accessor for ShazamEvent.Attributes(0);
  v10 = *(int *)(v9 + 20);
  v11 = (char *)v7 + v10;
  v12 = &v8[v10];
  v13 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  v14 = *(int *)(v9 + 24);
  v15 = (char *)v7 + v14;
  v16 = &v8[v14];
  v17 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  v18 = *(int *)(a3 + 24);
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  *(_QWORD *)((char *)a1 + v18) = *(_QWORD *)((char *)a2 + v18);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_100C22A78(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_OWORD *)((char *)a1 + v6) = *(_OWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for ShazamEvent.Attributes(0);
  v10 = *(int *)(v9 + 20);
  v11 = &v7[v10];
  v12 = &v8[v10];
  v13 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = *(int *)(v9 + 24);
  v15 = &v7[v14];
  v16 = &v8[v14];
  v17 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *sub_100C22B44(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  _QWORD *v22;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (char *)a2 + v7;
  v10 = *(_QWORD *)((char *)a2 + v7 + 8);
  *v8 = *(_QWORD *)((char *)a2 + v7);
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v11 = type metadata accessor for ShazamEvent.Attributes(0);
  v12 = *(int *)(v11 + 20);
  v13 = (char *)v8 + v12;
  v14 = &v9[v12];
  v15 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = *(int *)(v11 + 24);
  v17 = (char *)v8 + v16;
  v18 = &v9[v16];
  v19 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(v17, v18, v19);
  v20 = *(int *)(a3 + 24);
  v21 = (char *)a1 + v20;
  v22 = (_QWORD *)((char *)a2 + v20);
  *(_QWORD *)((char *)a1 + v20) = *v22;
  swift_bridgeObjectRelease();
  *((_QWORD *)v21 + 1) = v22[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100C22C40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C22C4C);
}

uint64_t sub_100C22C4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for ShazamEvent.Attributes(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_100C22CC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C22CD4);
}

uint64_t sub_100C22CD4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for ShazamEvent.Attributes(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_100C22D48(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = &unk_100EED5A8;
  result = type metadata accessor for ShazamEvent.Attributes(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = &unk_100EED5A8;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for Root()
{
  return &type metadata for Root;
}

uint64_t storeEnumTagSinglePayload for RazzmatazzController.Location.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_100C22E20 + 4 * byte_100EED389[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_100C22E54 + 4 * byte_100EED384[v4]))();
}

uint64_t sub_100C22E54(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100C22E5C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100C22E64);
  return result;
}

uint64_t sub_100C22E70(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100C22E78);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_100C22E7C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100C22E84(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RazzmatazzController.Location.CodingKeys()
{
  return &type metadata for RazzmatazzController.Location.CodingKeys;
}

unint64_t sub_100C22EA4()
{
  unint64_t result;

  result = qword_1011E16B0;
  if (!qword_1011E16B0)
  {
    result = swift_getWitnessTable(&unk_100EED694, &type metadata for RazzmatazzController.Location.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E16B0);
  }
  return result;
}

unint64_t sub_100C22EEC()
{
  unint64_t result;

  result = qword_1011E16B8;
  if (!qword_1011E16B8)
  {
    result = swift_getWitnessTable(&unk_100EED604, &type metadata for RazzmatazzController.Location.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E16B8);
  }
  return result;
}

unint64_t sub_100C22F34()
{
  unint64_t result;

  result = qword_1011E16C0;
  if (!qword_1011E16C0)
  {
    result = swift_getWitnessTable(&unk_100EED62C, &type metadata for RazzmatazzController.Location.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E16C0);
  }
  return result;
}

_QWORD *sub_100C22F78(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v14;

  v3 = sub_100007E8C(&qword_1011E16C8);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v8 = a1[4];
  v9 = sub_100007E68(a1, v7);
  v10 = sub_100C2309C();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for Root.CodingKeys, &type metadata for Root.CodingKeys, v10, v7, v8);
  if (v1)
  {
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(a1);
  }
  else
  {
    v11 = sub_100C230E0();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v14, &type metadata for Resources, v12, v3, &type metadata for Resources, v11);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v9 = v14;
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(a1);
  }
  return v9;
}

unint64_t sub_100C2309C()
{
  unint64_t result;

  result = qword_1011E16D0;
  if (!qword_1011E16D0)
  {
    result = swift_getWitnessTable(&unk_100EEDCB4, &type metadata for Root.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E16D0);
  }
  return result;
}

unint64_t sub_100C230E0()
{
  unint64_t result;

  result = qword_1011E16D8;
  if (!qword_1011E16D8)
  {
    result = swift_getWitnessTable(&unk_100EEDC8C, &type metadata for Resources);
    atomic_store(result, (unint64_t *)&qword_1011E16D8);
  }
  return result;
}

unint64_t sub_100C23124()
{
  unint64_t result;

  result = qword_1011E16F0;
  if (!qword_1011E16F0)
  {
    result = swift_getWitnessTable(&unk_100EEDC3C, &type metadata for ShazamEvent.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E16F0);
  }
  return result;
}

unint64_t sub_100C23168()
{
  unint64_t result;

  result = qword_1011E16F8;
  if (!qword_1011E16F8)
  {
    result = swift_getWitnessTable(&unk_100EEDC14, &type metadata for ShazamEvent.Attributes.Time);
    atomic_store(result, (unint64_t *)&qword_1011E16F8);
  }
  return result;
}

uint64_t sub_100C231AC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = sub_100007E8C(&qword_1011E17A0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v8 = a1[4];
  sub_100007E68(a1, v7);
  v9 = sub_100C24E60();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for Resources.CodingKeys, &type metadata for Resources.CodingKeys, v9, v7, v8);
  if (v1)
  {
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(a1);
  }
  else
  {
    v10 = sub_100007E8C(&qword_1011E17B0);
    HIBYTE(v15) = 0;
    v11 = sub_100C24EA4();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v16, v10, (char *)&v15 + 7, v3, v10, v11);
    v7 = v16;
    v13 = sub_100007E8C(&qword_1011E17C8);
    HIBYTE(v15) = 1;
    v14 = sub_100C24F28();
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v16, v13, (char *)&v15 + 7, v3, v13, v14);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t sub_100C23380(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 0x6D69547472617473 && a2 == 0xE900000000000065)
  {
    v5 = 0xE900000000000065;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6D69547472617473, 0xE900000000000065, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x656E6F7A656D6974 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease(0xE800000000000000);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x656E6F7A656D6974, 0xE800000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_100C2347C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  char v12;
  char v13;

  v3 = sub_100007E8C(&qword_1011E17E0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v8 = a1[4];
  sub_100007E68(a1, v7);
  v9 = sub_100C24FD8();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for ShazamEvent.Attributes.Time.CodingKeys, &type metadata for ShazamEvent.Attributes.Time.CodingKeys, v9, v7, v8);
  if (v1)
  {
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(a1);
  }
  else
  {
    v13 = 0;
    v8 = KeyedDecodingContainer.decode(_:forKey:)(&v13, v3);
    v12 = 1;
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode(_:forKey:)(&v12, v3);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8;
}

_QWORD *sub_100C23628(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  int64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  __n128 v30;
  uint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char v38;
  _QWORD *v39;

  v2 = v1;
  v4 = sub_100007E8C(&qword_1011E1810);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (_QWORD *)a1[3];
  v9 = a1[4];
  sub_100007E68(a1, (uint64_t)v8);
  v10 = sub_100C250E8();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for ShazamEvent.Relationships.CodingKeys, &type metadata for ShazamEvent.Relationships.CodingKeys, v10, v8, v9);
  if (v1)
  {
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(a1);
  }
  else
  {
    v38 = 0;
    v11 = sub_100C2512C();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v39, &type metadata for ShazamEvent.Relationships.Data, &v38, v4, &type metadata for ShazamEvent.Relationships.Data, v11);
    v13 = v39;
    v14 = v39[2];
    v37 = v7;
    if (v14)
    {
      v32 = v11;
      v34 = v5;
      v35 = v4;
      v36 = 0;
      v39 = _swiftEmptyArrayStorage;
      v33 = v13;
      sub_100BCD30C(0, v14, 0);
      v8 = v39;
      v15 = v33 + 5;
      do
      {
        v16 = *(v15 - 1);
        v17 = *v15;
        v39 = v8;
        v19 = v8[2];
        v18 = v8[3];
        swift_bridgeObjectRetain();
        if (v19 >= v18 >> 1)
        {
          sub_100BCD30C((char *)(v18 > 1), v19 + 1, 1);
          v8 = v39;
        }
        v15 += 2;
        v8[2] = v19 + 1;
        v20 = &v8[2 * v19];
        v20[4] = v16;
        v20[5] = v17;
        --v14;
      }
      while (v14);
      swift_bridgeObjectRelease();
      v4 = v35;
      v2 = v36;
      v5 = v34;
      v7 = v37;
      v11 = v32;
    }
    else
    {
      swift_bridgeObjectRelease();
      v8 = _swiftEmptyArrayStorage;
    }
    v38 = 1;
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v39, &type metadata for ShazamEvent.Relationships.Data, &v38, v4, &type metadata for ShazamEvent.Relationships.Data, v11);
    if (v2)
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      swift_bridgeObjectRelease();
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(a1);
      swift_bridgeObjectRelease();
    }
    else
    {
      v21 = v39;
      v22 = v39[2];
      if (v22)
      {
        v34 = v5;
        v35 = v4;
        v36 = 0;
        v39 = _swiftEmptyArrayStorage;
        sub_100BCD30C(0, v22, 0);
        v23 = v39;
        v33 = v21;
        v24 = v21 + 5;
        do
        {
          v25 = *(v24 - 1);
          v26 = *v24;
          v39 = v23;
          v28 = v23[2];
          v27 = v23[3];
          swift_bridgeObjectRetain();
          if (v28 >= v27 >> 1)
          {
            sub_100BCD30C((char *)(v27 > 1), v28 + 1, 1);
            v23 = v39;
          }
          v24 += 2;
          v23[2] = v28 + 1;
          v29 = &v23[2 * v28];
          v29[4] = v25;
          v29[5] = v26;
          --v22;
        }
        while (v22);
        v30 = swift_bridgeObjectRelease();
        v4 = v35;
        v5 = v34;
      }
      else
      {
        v30 = swift_bridgeObjectRelease();
      }
      (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v37, v4, v30);
      swift_bridgeObjectRetain();
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(a1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  return v8;
}

_QWORD *sub_100C23984(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  _QWORD *v16;

  v3 = sub_100007E8C(&qword_1011E18B0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v8 = a1[4];
  v9 = sub_100007E68(a1, v7);
  v10 = sub_100C256C8();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for ShazamEvent.Relationships.Data.CodingKeys, &type metadata for ShazamEvent.Relationships.Data.CodingKeys, v10, v7, v8);
  if (v1)
  {
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(a1);
  }
  else
  {
    v11 = sub_100007E8C(&qword_1011E18C0);
    v12 = sub_1000E4570(&qword_1011E18C8, &qword_1011E18C0, (void (*)(void))sub_100C2570C, (uint64_t)&protocol conformance descriptor for <A> [A]);
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v16, v11, v13, v3, v11, v12);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v9 = v16;
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(a1);
  }
  return v9;
}

uint64_t sub_100C23AD0(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  char v8;

  if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    v5 = 0xE200000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(25705, 0xE200000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x7475626972747461 && a2 == 0xEA00000000007365)
  {
    v7 = 0xEA00000000007365;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7475626972747461, 0xEA00000000007365, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x6E6F6974616C6572 && a2 == 0xED00007370696873)
  {
    swift_bridgeObjectRelease(0xED00007370696873);
    return 2;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F6974616C6572, 0xED00007370696873, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v8 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_100C23C3C(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_101102A78, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3)
    return 3;
  else
    return v3;
}

void sub_100C23C84(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  double v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;

  v5 = sub_100007E8C(&qword_1011E17F0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_100007E68(a1, v9);
  v11 = sub_100C2501C();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for VenueElement.Attributes.CodingKeys, &type metadata for VenueElement.Attributes.CodingKeys, v11, v9, v10);
  if (v2)
  {
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(a1);
  }
  else
  {
    LOBYTE(v38) = 0;
    v12 = KeyedDecodingContainer.decode(_:forKey:)(&v38, v5);
    v14 = v13;
    v37 = v12;
    v46 = 1;
    v15 = sub_100C25060();
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v38, &type metadata for VenueElement.Attributes.StructuredAddress, &v46, v5, &type metadata for VenueElement.Attributes.StructuredAddress, v15);
    v16 = v39;
    v31 = v38;
    v32 = v14;
    v17 = v41;
    v18 = v43;
    v29 = v42;
    v30 = v40;
    v28 = v44;
    v36 = v45;
    v46 = 2;
    v19 = sub_100C250A4();
    v35 = v16;
    swift_bridgeObjectRetain();
    v34 = v17;
    swift_bridgeObjectRetain();
    v33 = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v38, &type metadata for VenueElement.Attributes.Geo, &v46, v5, &type metadata for VenueElement.Attributes.Geo, v19);
    v20 = objc_msgSend(objc_allocWithZone((Class)CLLocation), "initWithLatitude:longitude:", v38, v39);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v21 = v32;
    swift_bridgeObjectRetain();
    v22 = v20;
    swift_bridgeObjectRelease();
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(a1);

    v23 = v36;
    swift_bridgeObjectRelease();
    v24 = v33;
    swift_bridgeObjectRelease();
    v25 = v34;
    swift_bridgeObjectRelease();
    v26 = v35;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *a2 = v37;
    a2[1] = v21;
    *((double *)a2 + 2) = v31;
    *((double *)a2 + 3) = v26;
    a2[4] = v30;
    a2[5] = v25;
    a2[6] = v29;
    a2[7] = v24;
    a2[8] = v28;
    a2[9] = v23;
    a2[10] = (uint64_t)v22;
  }
}

uint64_t sub_100C23FE0(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0xD000000000000011 && a2 == 0x8000000100E56250)
  {
    swift_bridgeObjectRelease(0x8000000100E56250);
    v3 = 0;
  }
  else
  {
    v4 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011, 0x8000000100E56250, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    v3 = v4 ^ 1;
  }
  return v3 & 1;
}

uint64_t sub_100C24064@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _OWORD v21[3];
  uint64_t v22;
  uint64_t v23;

  v5 = sub_100007E8C(&qword_1011E1888);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_100007E68(a1, v9);
  v11 = sub_100C255FC();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for VenueElement.Attributes.StructuredAddress.CodingKeys, &type metadata for VenueElement.Attributes.StructuredAddress.CodingKeys, v11, v9, v10);
  if (v2)
    return _s5Music18DragDropToPlaylistV6OriginVwxx_0(a1);
  v12 = sub_100C25640();
  KeyedDecodingContainer.decode<A>(_:forKey:)(v21, &type metadata for Razzmatazz.Venue.Address, v13, v5, &type metadata for Razzmatazz.Venue.Address, v12);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v19 = v21[1];
  v20 = v21[0];
  v18 = v21[2];
  v14 = v22;
  v15 = v23;
  result = _s5Music18DragDropToPlaylistV6OriginVwxx_0(a1);
  v17 = v19;
  *(_OWORD *)a2 = v20;
  *(_OWORD *)(a2 + 16) = v17;
  *(_OWORD *)(a2 + 32) = v18;
  *(_QWORD *)(a2 + 48) = v14;
  *(_QWORD *)(a2 + 56) = v15;
  return result;
}

uint64_t sub_100C241B8(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 7627116 && a2 == 0xE300000000000000)
  {
    v5 = 0xE300000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(7627116, 0xE300000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 6778476 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease(0xE300000000000000);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(6778476, 0xE300000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

double sub_100C24288(_QWORD *a1)
{
  uint64_t v1;
  double v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  double v11;
  uint64_t v13;
  char v14;
  char v15;

  v4 = sub_100007E8C(&qword_1011E18A0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1[3];
  v9 = a1[4];
  sub_100007E68(a1, v8);
  v10 = sub_100C25684();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for VenueElement.Attributes.Geo.CodingKeys, &type metadata for VenueElement.Attributes.Geo.CodingKeys, v10, v8, v9);
  if (!v1)
  {
    v15 = 0;
    KeyedDecodingContainer.decode(_:forKey:)(&v15, v4);
    v2 = v11;
    v14 = 1;
    KeyedDecodingContainer.decode(_:forKey:)(&v14, v4);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(a1);
  return v2;
}

uint64_t sub_100C243E0(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    v5 = 0xE200000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(25705, 0xE200000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x7475626972747461 && a2 == 0xEA00000000007365)
  {
    swift_bridgeObjectRelease(0xEA00000000007365);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x7475626972747461, 0xEA00000000007365, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void sub_100C244C4(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[11];
  char v33;

  v5 = sub_100007E8C(&qword_1011E1708);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_100007E68(a1, v9);
  v11 = sub_100C24730();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for VenueElement.CodingKeys, &type metadata for VenueElement.CodingKeys, v11, v9, v10);
  if (v2)
  {
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(a1);
  }
  else
  {
    LOBYTE(v32[0]) = 0;
    v12 = KeyedDecodingContainer.decode(_:forKey:)(v32, v5);
    v14 = v13;
    v33 = 1;
    v15 = sub_100C24774();
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode<A>(_:forKey:)(v32, &type metadata for VenueElement.Attributes, &v33, v5, &type metadata for VenueElement.Attributes, v15);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v29 = v32[2];
    v30 = v32[0];
    v24 = v32[3];
    v25 = v32[1];
    v16 = v32[5];
    v27 = v32[6];
    v28 = v32[4];
    v31 = v32[7];
    v17 = v32[9];
    v26 = v32[8];
    v18 = (void *)v32[10];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v19 = v18;
    swift_bridgeObjectRetain();
    v20 = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(a1);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v21 = v25;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *a2 = v12;
    a2[1] = v14;
    a2[2] = v30;
    a2[3] = v21;
    a2[4] = v29;
    a2[5] = v20;
    a2[6] = v28;
    a2[7] = v16;
    v22 = v31;
    a2[8] = v27;
    a2[9] = v22;
    a2[10] = v26;
    a2[11] = v17;
    a2[12] = (uint64_t)v19;
  }
}

unint64_t sub_100C24730()
{
  unint64_t result;

  result = qword_1011E1710;
  if (!qword_1011E1710)
  {
    result = swift_getWitnessTable(&unk_100EEDBC4, &type metadata for VenueElement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E1710);
  }
  return result;
}

unint64_t sub_100C24774()
{
  unint64_t result;

  result = qword_1011E1718;
  if (!qword_1011E1718)
  {
    result = swift_getWitnessTable(&unk_100EEDB9C, &type metadata for VenueElement.Attributes);
    atomic_store(result, (unint64_t *)&qword_1011E1718);
  }
  return result;
}

unint64_t sub_100C247B8()
{
  unint64_t result;

  result = qword_1011E1728;
  if (!qword_1011E1728)
  {
    result = swift_getWitnessTable(&unk_100EEDB4C, &type metadata for ShazamEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E1728);
  }
  return result;
}

unint64_t sub_100C247FC()
{
  unint64_t result;

  result = qword_1011E1738;
  if (!qword_1011E1738)
  {
    result = swift_getWitnessTable(&unk_100EEDB24, &type metadata for ShazamEvent.Relationships);
    atomic_store(result, (unint64_t *)&qword_1011E1738);
  }
  return result;
}

ValueMetadata *type metadata accessor for ShazamEvent.CodingKeys()
{
  return &type metadata for ShazamEvent.CodingKeys;
}

ValueMetadata *type metadata accessor for VenueElement.CodingKeys()
{
  return &type metadata for VenueElement.CodingKeys;
}

ValueMetadata *type metadata accessor for ShazamEvent.Attributes.Time()
{
  return &type metadata for ShazamEvent.Attributes.Time;
}

ValueMetadata *type metadata accessor for ShazamEvent.Attributes.CodingKeys()
{
  return &type metadata for ShazamEvent.Attributes.CodingKeys;
}

ValueMetadata *type metadata accessor for Root.CodingKeys()
{
  return &type metadata for Root.CodingKeys;
}

void destroy for VenueElement.Attributes(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 72));

}

_QWORD *initializeWithCopy for VenueElement.Attributes(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v8 = (void *)a2[10];
  a1[10] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = v8;
  return a1;
}

_QWORD *assignWithCopy for VenueElement.Attributes(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;

  *a1 = *a2;
  v4 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  a1[2] = a2[2];
  v5 = a1[3];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v5);
  a1[4] = a2[4];
  v6 = a1[5];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  a1[6] = a2[6];
  v7 = a1[7];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v7);
  a1[8] = a2[8];
  v8 = a1[9];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v8);
  v9 = (void *)a2[10];
  v10 = (void *)a1[10];
  a1[10] = v9;
  v11 = v9;

  return a1;
}

_QWORD *assignWithTake for VenueElement.Attributes(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = a1[1];
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = a1[3];
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = a1[5];
  a1[4] = *(_QWORD *)(a2 + 32);
  a1[5] = v8;
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = a1[7];
  a1[6] = *(_QWORD *)(a2 + 48);
  a1[7] = v10;
  swift_bridgeObjectRelease(v11);
  a1[8] = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease(a1[9]);
  v12 = (void *)a1[10];
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 72);

  return a1;
}

ValueMetadata *type metadata accessor for VenueElement.Attributes()
{
  return &type metadata for VenueElement.Attributes;
}

ValueMetadata *type metadata accessor for ShazamEvent.Relationships()
{
  return &type metadata for ShazamEvent.Relationships;
}

ValueMetadata *type metadata accessor for Resources()
{
  return &type metadata for Resources;
}

unint64_t sub_100C24B04()
{
  unint64_t result;

  result = qword_1011E1740;
  if (!qword_1011E1740)
  {
    result = swift_getWitnessTable(&unk_100EED89C, &type metadata for Root.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E1740);
  }
  return result;
}

unint64_t sub_100C24B4C()
{
  unint64_t result;

  result = qword_1011E1748;
  if (!qword_1011E1748)
  {
    result = swift_getWitnessTable(&unk_100EED98C, &type metadata for ShazamEvent.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E1748);
  }
  return result;
}

unint64_t sub_100C24B94()
{
  unint64_t result;

  result = qword_1011E1750;
  if (!qword_1011E1750)
  {
    result = swift_getWitnessTable(&unk_100EEDA44, &type metadata for VenueElement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E1750);
  }
  return result;
}

unint64_t sub_100C24BDC()
{
  unint64_t result;

  result = qword_1011E1758;
  if (!qword_1011E1758)
  {
    result = swift_getWitnessTable(&unk_100EEDAFC, &type metadata for ShazamEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E1758);
  }
  return result;
}

unint64_t sub_100C24C24()
{
  unint64_t result;

  result = qword_1011E1760;
  if (!qword_1011E1760)
  {
    result = swift_getWitnessTable(&unk_100EEDA6C, &type metadata for ShazamEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E1760);
  }
  return result;
}

unint64_t sub_100C24C6C()
{
  unint64_t result;

  result = qword_1011E1768;
  if (!qword_1011E1768)
  {
    result = swift_getWitnessTable(&unk_100EEDA94, &type metadata for ShazamEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E1768);
  }
  return result;
}

unint64_t sub_100C24CB4()
{
  unint64_t result;

  result = qword_1011E1770;
  if (!qword_1011E1770)
  {
    result = swift_getWitnessTable(&unk_100EED9B4, &type metadata for VenueElement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E1770);
  }
  return result;
}

unint64_t sub_100C24CFC()
{
  unint64_t result;

  result = qword_1011E1778;
  if (!qword_1011E1778)
  {
    result = swift_getWitnessTable(&unk_100EED9DC, &type metadata for VenueElement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E1778);
  }
  return result;
}

unint64_t sub_100C24D44()
{
  unint64_t result;

  result = qword_1011E1780;
  if (!qword_1011E1780)
  {
    result = swift_getWitnessTable(&unk_100EED8C4, &type metadata for ShazamEvent.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E1780);
  }
  return result;
}

unint64_t sub_100C24D8C()
{
  unint64_t result;

  result = qword_1011E1788;
  if (!qword_1011E1788)
  {
    result = swift_getWitnessTable(&unk_100EED8EC, &type metadata for ShazamEvent.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E1788);
  }
  return result;
}

unint64_t sub_100C24DD4()
{
  unint64_t result;

  result = qword_1011E1790;
  if (!qword_1011E1790)
  {
    result = swift_getWitnessTable(&unk_100EED80C, &type metadata for Root.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E1790);
  }
  return result;
}

unint64_t sub_100C24E1C()
{
  unint64_t result;

  result = qword_1011E1798;
  if (!qword_1011E1798)
  {
    result = swift_getWitnessTable(&unk_100EED834, &type metadata for Root.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E1798);
  }
  return result;
}

unint64_t sub_100C24E60()
{
  unint64_t result;

  result = qword_1011E17A8;
  if (!qword_1011E17A8)
  {
    result = swift_getWitnessTable(&unk_100EEE214, &type metadata for Resources.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E17A8);
  }
  return result;
}

unint64_t sub_100C24EA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E17B8;
  if (!qword_1011E17B8)
  {
    v1 = sub_100044B54(&qword_1011E17B0);
    sub_100048748(&qword_1011E17C0, type metadata accessor for ShazamEvent, (uint64_t)&unk_100EED6BC);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> [A : B], v1);
    atomic_store(result, (unint64_t *)&qword_1011E17B8);
  }
  return result;
}

unint64_t sub_100C24F28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E17D0;
  if (!qword_1011E17D0)
  {
    v1 = sub_100044B54(&qword_1011E17C8);
    sub_100C24F94();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> [A : B], v1);
    atomic_store(result, (unint64_t *)&qword_1011E17D0);
  }
  return result;
}

unint64_t sub_100C24F94()
{
  unint64_t result;

  result = qword_1011E17D8;
  if (!qword_1011E17D8)
  {
    result = swift_getWitnessTable(&unk_100EED6E4, &type metadata for VenueElement);
    atomic_store(result, (unint64_t *)&qword_1011E17D8);
  }
  return result;
}

unint64_t sub_100C24FD8()
{
  unint64_t result;

  result = qword_1011E17E8;
  if (!qword_1011E17E8)
  {
    result = swift_getWitnessTable(&unk_100EEE1C4, &type metadata for ShazamEvent.Attributes.Time.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E17E8);
  }
  return result;
}

unint64_t sub_100C2501C()
{
  unint64_t result;

  result = qword_1011E17F8;
  if (!qword_1011E17F8)
  {
    result = swift_getWitnessTable(&unk_100EEE174, &type metadata for VenueElement.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E17F8);
  }
  return result;
}

unint64_t sub_100C25060()
{
  unint64_t result;

  result = qword_1011E1800;
  if (!qword_1011E1800)
  {
    result = swift_getWitnessTable(&unk_100EEE14C, &type metadata for VenueElement.Attributes.StructuredAddress);
    atomic_store(result, (unint64_t *)&qword_1011E1800);
  }
  return result;
}

unint64_t sub_100C250A4()
{
  unint64_t result;

  result = qword_1011E1808;
  if (!qword_1011E1808)
  {
    result = swift_getWitnessTable(&unk_100EEE124, &type metadata for VenueElement.Attributes.Geo);
    atomic_store(result, (unint64_t *)&qword_1011E1808);
  }
  return result;
}

unint64_t sub_100C250E8()
{
  unint64_t result;

  result = qword_1011E1818;
  if (!qword_1011E1818)
  {
    result = swift_getWitnessTable(&unk_100EEE0D4, &type metadata for ShazamEvent.Relationships.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E1818);
  }
  return result;
}

unint64_t sub_100C2512C()
{
  unint64_t result;

  result = qword_1011E1820;
  if (!qword_1011E1820)
  {
    result = swift_getWitnessTable(&unk_100EEE0AC, &type metadata for ShazamEvent.Relationships.Data);
    atomic_store(result, (unint64_t *)&qword_1011E1820);
  }
  return result;
}

ValueMetadata *type metadata accessor for ShazamEvent.Relationships.Data()
{
  return &type metadata for ShazamEvent.Relationships.Data;
}

ValueMetadata *type metadata accessor for ShazamEvent.Relationships.CodingKeys()
{
  return &type metadata for ShazamEvent.Relationships.CodingKeys;
}

ValueMetadata *type metadata accessor for VenueElement.Attributes.Geo()
{
  return &type metadata for VenueElement.Attributes.Geo;
}

ValueMetadata *type metadata accessor for VenueElement.Attributes.StructuredAddress()
{
  return &type metadata for VenueElement.Attributes.StructuredAddress;
}

uint64_t _s11MusicCoreUI11ShazamEventV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100C251FC + 4 * byte_100EED393[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100C25230 + 4 * byte_100EED38E[v4]))();
}

uint64_t sub_100C25230(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100C25238(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100C25240);
  return result;
}

uint64_t sub_100C2524C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100C25254);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100C25258(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100C25260(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VenueElement.Attributes.CodingKeys()
{
  return &type metadata for VenueElement.Attributes.CodingKeys;
}

ValueMetadata *type metadata accessor for ShazamEvent.Attributes.Time.CodingKeys()
{
  return &type metadata for ShazamEvent.Attributes.Time.CodingKeys;
}

ValueMetadata *type metadata accessor for Resources.CodingKeys()
{
  return &type metadata for Resources.CodingKeys;
}

unint64_t sub_100C252A0()
{
  unint64_t result;

  result = qword_1011E1828;
  if (!qword_1011E1828)
  {
    result = swift_getWitnessTable(&unk_100EEDDEC, &type metadata for Resources.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E1828);
  }
  return result;
}

unint64_t sub_100C252E8()
{
  unint64_t result;

  result = qword_1011E1830;
  if (!qword_1011E1830)
  {
    result = swift_getWitnessTable(&unk_100EEDEA4, &type metadata for ShazamEvent.Attributes.Time.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E1830);
  }
  return result;
}

unint64_t sub_100C25330()
{
  unint64_t result;

  result = qword_1011E1838;
  if (!qword_1011E1838)
  {
    result = swift_getWitnessTable(&unk_100EEDF94, &type metadata for VenueElement.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E1838);
  }
  return result;
}

unint64_t sub_100C25378()
{
  unint64_t result;

  result = qword_1011E1840;
  if (!qword_1011E1840)
  {
    result = swift_getWitnessTable(&unk_100EEE084, &type metadata for ShazamEvent.Relationships.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E1840);
  }
  return result;
}

unint64_t sub_100C253C0()
{
  unint64_t result;

  result = qword_1011E1848;
  if (!qword_1011E1848)
  {
    result = swift_getWitnessTable(&unk_100EEDFBC, &type metadata for ShazamEvent.Relationships.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E1848);
  }
  return result;
}

unint64_t sub_100C25408()
{
  unint64_t result;

  result = qword_1011E1850;
  if (!qword_1011E1850)
  {
    result = swift_getWitnessTable(&unk_100EEDFE4, &type metadata for ShazamEvent.Relationships.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E1850);
  }
  return result;
}

unint64_t sub_100C25450()
{
  unint64_t result;

  result = qword_1011E1858;
  if (!qword_1011E1858)
  {
    result = swift_getWitnessTable(&unk_100EEDECC, &type metadata for VenueElement.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E1858);
  }
  return result;
}

unint64_t sub_100C25498()
{
  unint64_t result;

  result = qword_1011E1860;
  if (!qword_1011E1860)
  {
    result = swift_getWitnessTable(&unk_100EEDEF4, &type metadata for VenueElement.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E1860);
  }
  return result;
}

unint64_t sub_100C254E0()
{
  unint64_t result;

  result = qword_1011E1868;
  if (!qword_1011E1868)
  {
    result = swift_getWitnessTable(&unk_100EEDE14, &type metadata for ShazamEvent.Attributes.Time.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E1868);
  }
  return result;
}

unint64_t sub_100C25528()
{
  unint64_t result;

  result = qword_1011E1870;
  if (!qword_1011E1870)
  {
    result = swift_getWitnessTable(&unk_100EEDE3C, &type metadata for ShazamEvent.Attributes.Time.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E1870);
  }
  return result;
}

unint64_t sub_100C25570()
{
  unint64_t result;

  result = qword_1011E1878;
  if (!qword_1011E1878)
  {
    result = swift_getWitnessTable(&unk_100EEDD24, &type metadata for Resources.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E1878);
  }
  return result;
}

unint64_t sub_100C255B8()
{
  unint64_t result;

  result = qword_1011E1880;
  if (!qword_1011E1880)
  {
    result = swift_getWitnessTable(&unk_100EEDD4C, &type metadata for Resources.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E1880);
  }
  return result;
}

unint64_t sub_100C255FC()
{
  unint64_t result;

  result = qword_1011E1890;
  if (!qword_1011E1890)
  {
    result = swift_getWitnessTable(&unk_100EEE580, &type metadata for VenueElement.Attributes.StructuredAddress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E1890);
  }
  return result;
}

unint64_t sub_100C25640()
{
  unint64_t result;

  result = qword_1011E1898;
  if (!qword_1011E1898)
  {
    result = swift_getWitnessTable(&unk_100EED238, &type metadata for Razzmatazz.Venue.Address);
    atomic_store(result, (unint64_t *)&qword_1011E1898);
  }
  return result;
}

unint64_t sub_100C25684()
{
  unint64_t result;

  result = qword_1011E18A8;
  if (!qword_1011E18A8)
  {
    result = swift_getWitnessTable(&unk_100EEE530, &type metadata for VenueElement.Attributes.Geo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E18A8);
  }
  return result;
}

unint64_t sub_100C256C8()
{
  unint64_t result;

  result = qword_1011E18B8;
  if (!qword_1011E18B8)
  {
    result = swift_getWitnessTable(&unk_100EEE4E0, &type metadata for ShazamEvent.Relationships.Data.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E18B8);
  }
  return result;
}

unint64_t sub_100C2570C()
{
  unint64_t result;

  result = qword_1011E18D0;
  if (!qword_1011E18D0)
  {
    result = swift_getWitnessTable(&unk_100EEE4B8, &type metadata for ShazamEvent.Relationships.Data.ID);
    atomic_store(result, (unint64_t *)&qword_1011E18D0);
  }
  return result;
}

ValueMetadata *type metadata accessor for ShazamEvent.Relationships.Data.CodingKeys()
{
  return &type metadata for ShazamEvent.Relationships.Data.CodingKeys;
}

uint64_t _s11MusicCoreUI12VenueElementV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100C257AC + 4 * byte_100EED39D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100C257E0 + 4 * byte_100EED398[v4]))();
}

uint64_t sub_100C257E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100C257E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100C257F0);
  return result;
}

uint64_t sub_100C257FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100C25804);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100C25808(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100C25810(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VenueElement.Attributes.Geo.CodingKeys()
{
  return &type metadata for VenueElement.Attributes.Geo.CodingKeys;
}

ValueMetadata *type metadata accessor for VenueElement.Attributes.StructuredAddress.CodingKeys()
{
  return &type metadata for VenueElement.Attributes.StructuredAddress.CodingKeys;
}

ValueMetadata *type metadata accessor for ShazamEvent.Relationships.Data.ID()
{
  return &type metadata for ShazamEvent.Relationships.Data.ID;
}

unint64_t sub_100C25850()
{
  unint64_t result;

  result = qword_1011E18D8;
  if (!qword_1011E18D8)
  {
    result = swift_getWitnessTable(&unk_100EEE320, &type metadata for VenueElement.Attributes.StructuredAddress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E18D8);
  }
  return result;
}

unint64_t sub_100C25898()
{
  unint64_t result;

  result = qword_1011E18E0;
  if (!qword_1011E18E0)
  {
    result = swift_getWitnessTable(&unk_100EEE3D8, &type metadata for VenueElement.Attributes.Geo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E18E0);
  }
  return result;
}

unint64_t sub_100C258E0()
{
  unint64_t result;

  result = qword_1011E18E8;
  if (!qword_1011E18E8)
  {
    result = swift_getWitnessTable(&unk_100EEE490, &type metadata for ShazamEvent.Relationships.Data.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E18E8);
  }
  return result;
}

unint64_t sub_100C25928()
{
  unint64_t result;

  result = qword_1011E18F0;
  if (!qword_1011E18F0)
  {
    result = swift_getWitnessTable(&unk_100EEE400, &type metadata for ShazamEvent.Relationships.Data.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E18F0);
  }
  return result;
}

unint64_t sub_100C25970()
{
  unint64_t result;

  result = qword_1011E18F8;
  if (!qword_1011E18F8)
  {
    result = swift_getWitnessTable(&unk_100EEE428, &type metadata for ShazamEvent.Relationships.Data.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E18F8);
  }
  return result;
}

unint64_t sub_100C259B8()
{
  unint64_t result;

  result = qword_1011E1900;
  if (!qword_1011E1900)
  {
    result = swift_getWitnessTable(&unk_100EEE348, &type metadata for VenueElement.Attributes.Geo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E1900);
  }
  return result;
}

unint64_t sub_100C25A00()
{
  unint64_t result;

  result = qword_1011E1908;
  if (!qword_1011E1908)
  {
    result = swift_getWitnessTable(&unk_100EEE370, &type metadata for VenueElement.Attributes.Geo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E1908);
  }
  return result;
}

unint64_t sub_100C25A48()
{
  unint64_t result;

  result = qword_1011E1910;
  if (!qword_1011E1910)
  {
    result = swift_getWitnessTable(&unk_100EEE290, &type metadata for VenueElement.Attributes.StructuredAddress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E1910);
  }
  return result;
}

unint64_t sub_100C25A90()
{
  unint64_t result;

  result = qword_1011E1918;
  if (!qword_1011E1918)
  {
    result = swift_getWitnessTable(&unk_100EEE2B8, &type metadata for VenueElement.Attributes.StructuredAddress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E1918);
  }
  return result;
}

unint64_t sub_100C25AD4()
{
  unint64_t result;

  result = qword_1011E1928;
  if (!qword_1011E1928)
  {
    result = swift_getWitnessTable(&unk_100EEE688, &type metadata for ShazamEvent.Relationships.Data.ID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E1928);
  }
  return result;
}

uint64_t _s11MusicCoreUI4RootV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_100C25B58 + 4 * byte_100EED3A2[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_100C25B78 + 4 * byte_100EED3A7[v4]))();
}

_BYTE *sub_100C25B58(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_100C25B78(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100C25B80(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100C25B88(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100C25B90(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100C25B98(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ShazamEvent.Relationships.Data.ID.CodingKeys()
{
  return &type metadata for ShazamEvent.Relationships.Data.ID.CodingKeys;
}

unint64_t sub_100C25BB8()
{
  unint64_t result;

  result = qword_1011E1938;
  if (!qword_1011E1938)
  {
    result = swift_getWitnessTable(&unk_100EEE660, &type metadata for ShazamEvent.Relationships.Data.ID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E1938);
  }
  return result;
}

unint64_t sub_100C25C00()
{
  unint64_t result;

  result = qword_1011E1940;
  if (!qword_1011E1940)
  {
    result = swift_getWitnessTable(&unk_100EEE5D0, &type metadata for ShazamEvent.Relationships.Data.ID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E1940);
  }
  return result;
}

unint64_t sub_100C25C48()
{
  unint64_t result;

  result = qword_1011E1948;
  if (!qword_1011E1948)
  {
    result = swift_getWitnessTable(&unk_100EEE5F8, &type metadata for ShazamEvent.Relationships.Data.ID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E1948);
  }
  return result;
}

uint64_t RazzmatazzDetailView.init(razzmatazz:noticePresenter:navigateToArtistHandler:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t result;
  _QWORD *v10;

  sub_10005B6C0(a1, a5, type metadata accessor for Razzmatazz);
  result = type metadata accessor for RazzmatazzDetailView(0);
  *(_QWORD *)(a5 + *(int *)(result + 20)) = a2;
  v10 = (_QWORD *)(a5 + *(int *)(result + 24));
  *v10 = a3;
  v10[1] = a4;
  return result;
}

uint64_t type metadata accessor for RazzmatazzDetailView(uint64_t a1)
{
  uint64_t result;

  result = qword_1011E19C0;
  if (!qword_1011E19C0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for RazzmatazzDetailView);
  return result;
}

uint64_t RazzmatazzDetailView.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  v0 = sub_100007E8C(&qword_1011E1958);
  v1 = sub_100049F28(&qword_1011E1960, &qword_1011E1958, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  return List<>.init(content:)(sub_100C26390, &v3, v0, v1);
}

uint64_t sub_100C25DA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t OpaqueTypeConformance2;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  char *v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  int *v47;
  char *v48;
  void (*v49)(char *, uint64_t);
  void (*v50)(char *, uint64_t);
  void (*v51)(char *, uint64_t);
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  _QWORD v70[2];
  uint64_t v71;
  unint64_t v72;

  v56 = a2;
  v59 = sub_100007E8C(&qword_1011E1A48);
  v69 = *(_QWORD *)(v59 - 8);
  __chkstk_darwin();
  v58 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v67 = (char *)&v53 - v4;
  v57 = sub_100007E8C(&qword_1011E1A50);
  v66 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin();
  v68 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v64 = (char *)&v53 - v6;
  v55 = sub_100007E8C(&qword_1011E1A58);
  v63 = *(_QWORD *)(v55 - 8);
  __chkstk_darwin();
  v65 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v9 = (char *)&v53 - v8;
  sub_100007E8C(&qword_1011E1A60);
  __chkstk_darwin();
  v62 = (uint64_t)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v12 = (char *)&v53 - v11;
  v13 = Razzmatazz.shortName.getter();
  v15 = *(_QWORD *)(a1 + 16);
  v16 = *(_QWORD *)(a1 + 24);
  v61 = v12;
  if (v13 == v15 && v14 == v16)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v14, v15, v16, 0);
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0)
    {
      __chkstk_darwin();
      *(&v53 - 2) = a1;
      Section<>.init(content:)(sub_100C2A06C, &v53 - 4, &type metadata for Text, &protocol witness table for Text);
      v19 = sub_100007E8C(&qword_1011E1A68);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v12, 0, 1, v19);
      goto LABEL_7;
    }
  }
  v18 = sub_100007E8C(&qword_1011E1A68);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v12, 1, 1, v18);
LABEL_7:
  v71 = 1702125892;
  v72 = 0xE400000000000000;
  __chkstk_darwin();
  *(&v53 - 2) = a1;
  v20 = sub_100007E8C(&qword_1011E1A70);
  v21 = sub_100049F28(&qword_1011E1A78, &qword_1011E1A70, (uint64_t)&protocol conformance descriptor for VStack<A>);
  v54 = sub_100BBF2FC();
  Section<>.init<A>(_:content:)(&v71, sub_100C2A074, &v53 - 4, v20, &type metadata for String, v21, v54);
  v22 = LocalizedStringKey.init(stringLiteral:)(0x747369747241, 0xE600000000000000);
  v24 = v23;
  LOBYTE(v20) = v25;
  v27 = v26;
  __chkstk_darwin();
  *(&v53 - 2) = a1;
  v60 = v9;
  v28 = sub_100007E8C(&qword_1011E1A80);
  v29 = sub_100049F28(&qword_1011E1A88, &qword_1011E1A80, (uint64_t)&protocol conformance descriptor for HStack<A>);
  v30 = v64;
  Section<>.init(_:content:)(v22, v24, v20 & 1, v27, sub_100C2A0A4, &v53 - 4, v28, v29);
  v71 = 0x6E6F697461636F4CLL;
  v72 = 0xE800000000000000;
  __chkstk_darwin();
  *(&v53 - 2) = a1;
  v31 = sub_100007E8C(&qword_1011E1A90);
  v32 = sub_100044B54(&qword_1011E1A98);
  v33 = sub_100C2A0DC();
  v70[0] = v32;
  v70[1] = v33;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v70, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v35 = v67;
  Section<>.init<A>(_:content:)(&v71, sub_100C2A0D4, &v53 - 4, v31, &type metadata for String, OpaqueTypeConformance2, v54);
  v36 = v62;
  sub_10004A160((uint64_t)v61, v62, &qword_1011E1A60);
  v37 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
  v38 = v65;
  v39 = v55;
  v37(v65, v60, v55);
  v40 = *(void (**)(char *, char *, uint64_t))(v66 + 16);
  v41 = v57;
  v40(v68, v30, v57);
  v42 = *(void (**)(char *, char *, uint64_t))(v69 + 16);
  v43 = v58;
  v44 = v35;
  v45 = v59;
  v42(v58, v44, v59);
  v46 = v56;
  sub_10004A160(v36, v56, &qword_1011E1A60);
  v47 = (int *)sub_100007E8C(&qword_1011E1AC0);
  v37((char *)(v46 + v47[12]), v38, v39);
  v48 = v68;
  v40((char *)(v46 + v47[16]), v68, v41);
  v42((char *)(v46 + v47[20]), v43, v45);
  v49 = *(void (**)(char *, uint64_t))(v69 + 8);
  v49(v67, v45);
  v50 = *(void (**)(char *, uint64_t))(v66 + 8);
  v50(v64, v41);
  v51 = *(void (**)(char *, uint64_t))(v63 + 8);
  v51(v60, v39);
  sub_10004FF60((uint64_t)v61, &qword_1011E1A60);
  v49(v43, v45);
  v50(v48, v41);
  v51(v65, v39);
  return sub_10004FF60(v62, &qword_1011E1A60);
}

uint64_t sub_100C26390@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100C25DA0(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_100C26398(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of RazzmatazzDetailView.body>>, 1);
}

void sub_100C263A8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[2];

  v3 = *(_QWORD *)(a1 + 24);
  v19[0] = *(_QWORD *)(a1 + 16);
  v19[1] = v3;
  v4 = sub_100BBF2FC();
  swift_bridgeObjectRetain();
  v5 = Text.init<A>(_:)(v19, &type metadata for String, v4);
  v7 = v6;
  v9 = v8;
  v11 = v10 & 1;
  LODWORD(v19[0]) = static HierarchicalShapeStyle.secondary.getter(v5);
  v12 = Text.foregroundStyle<A>(_:)(v19, v5, v7, v11, v9, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v14 = v13;
  v16 = v15;
  v18 = v17;
  sub_100055BAC(v5, v7, v11);
  swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v12;
  *(_QWORD *)(a2 + 8) = v14;
  *(_BYTE *)(a2 + 16) = v16 & 1;
  *(_QWORD *)(a2 + 24) = v18;
}

double sub_100C26490@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  __n128 v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  __n128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t OpaqueTypeConformance2;
  char *v98;
  void (*v99)(char *, char *, uint64_t);
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  void (*v108)(char *, uint64_t);
  double result;
  char *v110;
  char *v111;
  uint64_t v112;
  void (*v113)(char *);
  uint64_t v114;
  uint64_t (*v115)(char *);
  char *v116;
  unint64_t v117;
  void (*v118)(char *, uint64_t);
  uint64_t v119;
  char *v120;
  char *v121;
  _QWORD *v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  unsigned __int8 v162;
  uint64_t v163;
  char *v164;

  v122 = a2;
  v145 = *(_QWORD *)(type metadata accessor for RazzmatazzDetailView(0) - 8);
  v146 = *(_QWORD *)(v145 + 64);
  __chkstk_darwin();
  v144 = (uint64_t)&v110 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = sub_100007E8C(&qword_1011E1AF0);
  v154 = *(_QWORD *)(v148 - 8);
  __chkstk_darwin();
  v147 = (char *)&v110 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin();
  v153 = (char *)&v110 - v6;
  v143 = type metadata accessor for Date.FormatStyle.Symbol.Minute(0, v5);
  v142 = *(_QWORD *)(v143 - 8);
  v7 = __chkstk_darwin();
  v141 = (char *)&v110 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = type metadata accessor for Date.FormatStyle.Symbol.Hour.AMPMStyle(0, v7);
  v139 = *(_QWORD *)(v140 - 8);
  v9 = __chkstk_darwin();
  v136 = (char *)&v110 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = type metadata accessor for Date.FormatStyle.Symbol.Hour(0, v9);
  v137 = *(_QWORD *)(v138 - 8);
  __chkstk_darwin();
  v135 = (char *)&v110 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = type metadata accessor for Date.FormatStyle.Symbol.Year(0);
  v133 = *(_QWORD *)(v134 - 8);
  v12 = __chkstk_darwin();
  v131 = (char *)&v110 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = type metadata accessor for Date.FormatStyle.Symbol.Month(0, v12);
  v128 = *(_QWORD *)(v129 - 8);
  v14 = __chkstk_darwin();
  v127 = (char *)&v110 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = type metadata accessor for Date.FormatStyle.Symbol.Day(0, v14);
  v125 = *(_QWORD *)(v126 - 8);
  v16 = __chkstk_darwin();
  v124 = (char *)&v110 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Date.FormatStyle.Symbol.Weekday(0, v16);
  v151 = *(_QWORD *)(v18 - 8);
  v152 = v18;
  __chkstk_darwin();
  v20 = (char *)&v110 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149 = type metadata accessor for TimeZone(0);
  v21 = *(_QWORD *)(v149 - 8);
  __chkstk_darwin();
  v23 = (char *)&v110 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for Date.FormatStyle(0);
  v150 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin();
  v116 = (char *)&v110 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v120 = (char *)&v110 - v26;
  __chkstk_darwin();
  v121 = (char *)&v110 - v27;
  __chkstk_darwin();
  v123 = (char *)&v110 - v28;
  __chkstk_darwin();
  v30 = (char *)&v110 - v29;
  __chkstk_darwin();
  v110 = (char *)&v110 - v31;
  v32 = type metadata accessor for Date(0);
  v33 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin();
  v35 = (char *)&v110 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = type metadata accessor for Razzmatazz(0);
  v37 = *(int *)(v36 + 24);
  v132 = a1;
  v114 = a1 + v37;
  v115 = *(uint64_t (**)(char *))(v33 + 16);
  v38 = v115(v35);
  static ParseableFormatStyle<>.dateTime.getter(v38);
  v39 = a1 + *(int *)(v36 + 32);
  v112 = v39 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v113 = *(void (**)(char *))(v21 + 16);
  v111 = v23;
  v113(v23);
  v40 = Date.FormatStyle.timeZone.setter(v23);
  static Date.FormatStyle.Symbol.Weekday.wide.getter(v40);
  v41 = v110;
  Date.FormatStyle.weekday(_:)(v20);
  (*(void (**)(char *, uint64_t))(v151 + 8))(v20, v152);
  v42 = *(void (**)(char *, uint64_t))(v150 + 8);
  v42(v30, v24);
  v119 = sub_100048748(&qword_1011E0E88, (uint64_t (*)(uint64_t))&type metadata accessor for Date.FormatStyle, (uint64_t)&protocol conformance descriptor for Date.FormatStyle);
  Date.formatted<A>(_:)(&v159, v41, v24, v119);
  v42(v41, v24);
  v118 = *(void (**)(char *, uint64_t))(v33 + 8);
  v43 = v32;
  v118(v35, v32);
  v155 = (uint64_t)v159;
  v156 = v160;
  v117 = sub_100BBF2FC();
  v44 = Text.init<A>(_:)(&v155, &type metadata for String, v117);
  v46 = v45;
  v48 = v47;
  v50 = v49 & 1;
  LODWORD(v159) = static HierarchicalShapeStyle.secondary.getter(v44);
  v51 = Text.foregroundStyle<A>(_:)(&v159, v44, v46, v50, v48, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v151 = v52;
  v152 = v51;
  v130 = v53;
  LODWORD(v150) = v54 & 1;
  sub_100055BAC(v44, v46, v50);
  v55 = swift_bridgeObjectRelease();
  v56 = ((uint64_t (*)(char *, uint64_t, uint64_t, __n128))v115)(v35, v114, v43, v55);
  v57 = v116;
  static ParseableFormatStyle<>.dateTime.getter(v56);
  v58 = v111;
  ((void (*)(char *, uint64_t, uint64_t))v113)(v111, v112, v149);
  v59 = Date.FormatStyle.timeZone.setter(v58);
  v60 = v124;
  static Date.FormatStyle.Symbol.Day.defaultDigits.getter(v59);
  v61 = v120;
  Date.FormatStyle.day(_:)(v60);
  (*(void (**)(char *, uint64_t))(v125 + 8))(v60, v126);
  v62 = ((uint64_t (*)(char *, uint64_t))v42)(v57, v24);
  v63 = v127;
  static Date.FormatStyle.Symbol.Month.wide.getter(v62);
  v64 = v121;
  Date.FormatStyle.month(_:)(v63);
  (*(void (**)(char *, uint64_t))(v128 + 8))(v63, v129);
  v65 = ((uint64_t (*)(char *, uint64_t))v42)(v61, v24);
  v66 = v131;
  static Date.FormatStyle.Symbol.Year.defaultDigits.getter(v65);
  v67 = v123;
  Date.FormatStyle.year(_:)(v66);
  (*(void (**)(char *, uint64_t))(v133 + 8))(v66, v134);
  v68 = ((uint64_t (*)(char *, uint64_t))v42)(v64, v24);
  v69 = v136;
  static Date.FormatStyle.Symbol.Hour.AMPMStyle.abbreviated.getter(v68);
  v70 = v135;
  static Date.FormatStyle.Symbol.Hour.defaultDigits(amPM:)(v69);
  (*(void (**)(char *, uint64_t))(v139 + 8))(v69, v140);
  Date.FormatStyle.hour(_:)(v70);
  (*(void (**)(char *, uint64_t))(v137 + 8))(v70, v138);
  v71 = ((uint64_t (*)(char *, uint64_t))v42)(v67, v24);
  v72 = v141;
  static Date.FormatStyle.Symbol.Minute.defaultDigits.getter(v71);
  Date.FormatStyle.minute(_:)(v72);
  (*(void (**)(char *, uint64_t))(v142 + 8))(v72, v143);
  v42(v30, v24);
  Date.formatted<A>(_:)(&v159, v41, v24, v119);
  v42(v41, v24);
  v118(v35, v43);
  v155 = (uint64_t)v159;
  v156 = v160;
  v73 = Text.init<A>(_:)(&v155, &type metadata for String, v117);
  v75 = v74;
  v77 = v76;
  v79 = v78 & 1;
  LODWORD(v159) = static HierarchicalShapeStyle.primary.getter(v80);
  v81 = Text.foregroundStyle<A>(_:)(&v159, v73, v75, v79, v77, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v143 = v82;
  v149 = v83;
  LODWORD(v142) = v84 & 1;
  sub_100055BAC(v73, v75, v79);
  swift_bridgeObjectRelease();
  v86 = static Alignment.center.getter(v85);
  _FrameLayout.init(width:height:alignment:)(&v159, 0, 1, 0x4024000000000000, 0, v86, v87);
  v141 = v159;
  LODWORD(v140) = v160;
  v139 = v161;
  LODWORD(v138) = v162;
  v137 = v163;
  v136 = v164;
  v88 = v144;
  sub_100C2A178(v132, v144);
  v89 = *(unsigned __int8 *)(v145 + 80);
  v90 = (v89 + 16) & ~v89;
  v91 = swift_allocObject(&unk_10110A108, v90 + v146, v89 | 7);
  sub_10005B6C0(v88, v91 + v90, type metadata accessor for RazzmatazzDetailView);
  v92 = sub_100007E8C(&qword_1011E1AF8);
  v93 = sub_100044B54(&qword_1011E1B00);
  v94 = type metadata accessor for TitleAndIconLabelStyle(255);
  v95 = sub_100049F28(&qword_1011E1B08, &qword_1011E1B00, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  v96 = sub_100048748(&qword_1011E1B10, (uint64_t (*)(uint64_t))&type metadata accessor for TitleAndIconLabelStyle, (uint64_t)&protocol conformance descriptor for TitleAndIconLabelStyle);
  v155 = v93;
  v156 = v94;
  v157 = v95;
  v158 = v96;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v155, &opaque type descriptor for <<opaque return type of View.labelStyle<A>(_:)>>, 1);
  v98 = v153;
  Button.init(action:label:)(sub_100C2A3B8, v91, sub_100C27A28, 0, v92, OpaqueTypeConformance2);
  LOBYTE(v35) = v150;
  LOBYTE(v155) = v150;
  v99 = *(void (**)(char *, char *, uint64_t))(v154 + 16);
  v101 = v147;
  v100 = v148;
  v99(v147, v98, v148);
  v103 = v151;
  v102 = v152;
  v104 = v122;
  *v122 = v152;
  v104[1] = v103;
  *((_BYTE *)v104 + 16) = (_BYTE)v35;
  v104[3] = v130;
  v104[4] = v81;
  v105 = v143;
  v104[5] = v143;
  LOBYTE(v95) = v142;
  *((_BYTE *)v104 + 48) = v142;
  v104[7] = v149;
  v104[8] = 0;
  *((_BYTE *)v104 + 72) = 1;
  v104[10] = v141;
  *((_BYTE *)v104 + 88) = v140;
  v104[12] = v139;
  *((_BYTE *)v104 + 104) = v138;
  v106 = v136;
  v104[14] = v137;
  v104[15] = v106;
  v107 = sub_100007E8C(&qword_1011E1B18);
  v99((char *)v104 + *(int *)(v107 + 80), v101, v100);
  sub_100055BBC(v102, v103, v150);
  swift_bridgeObjectRetain();
  sub_100055BBC(v81, v105, v95);
  v108 = *(void (**)(char *, uint64_t))(v154 + 8);
  swift_bridgeObjectRetain();
  v108(v153, v100);
  v108(v101, v100);
  sub_100055BAC(v81, v105, v95);
  swift_bridgeObjectRelease();
  sub_100055BAC(v152, v151, v155);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

void sub_100C27054(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  _QWORD aBlock[6];

  v2 = *(_QWORD *)(type metadata accessor for RazzmatazzDetailView(0) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  __chkstk_darwin();
  v4 = objc_msgSend(objc_allocWithZone((Class)EKEventStore), "init");
  sub_100C2A178(a1, (uint64_t)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(unsigned __int8 *)(v2 + 80);
  v6 = (v5 + 24) & ~v5;
  v7 = swift_allocObject(&unk_10110A130, v6 + v3, v5 | 7);
  *(_QWORD *)(v7 + 16) = v4;
  sub_10005B6C0((uint64_t)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6, type metadata accessor for RazzmatazzDetailView);
  aBlock[4] = sub_100C2A55C;
  aBlock[5] = v7;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100A4509C;
  aBlock[3] = &unk_10110A148;
  v8 = _Block_copy(aBlock);
  v9 = v4;
  objc_msgSend(v9, "requestWriteOnlyAccessToEventsWithCompletion:", v8, swift_release().n128_f64[0]);
  _Block_release(v8);

}

void sub_100C2719C(char a1, void *a2, void *a3, uint64_t a4)
{
  Class isa;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  NSString v16;
  uint64_t v17;
  Class v18;
  uint64_t v19;
  Class v20;
  _OWORD *v21;
  __int128 v22;
  __int128 v23;
  id v24;
  NSString v25;
  id v26;
  id v27;
  unsigned int v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  __n128 v35;
  uint64_t v36;
  uint64_t isa_low;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  os_log_type_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  id v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  NSObject *v62;
  uint64_t v63;
  id v64;
  _OWORD v65[4];

  v62 = *(NSObject **)(type metadata accessor for RazzmatazzDetailView(0) - 8);
  isa = v62[8].isa;
  __chkstk_darwin();
  sub_100007E8C(&qword_1011E0490);
  __chkstk_darwin();
  v10 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Date(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin();
  v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    v60 = v10;
    v61 = (uint64_t)&v60 - (((unint64_t)isa + 15) & 0xFFFFFFFFFFFFFFF0);
    v15 = objc_msgSend((id)objc_opt_self(EKEvent), "eventWithEventStore:", a3);
    v16 = String._bridgeToObjectiveC()();
    objc_msgSend(v15, "setTitle:", v16);

    v17 = type metadata accessor for Razzmatazz(0);
    v18 = Date._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v15, "setStartDate:", v18);

    Date.addingTimeInterval(_:)(v19, 7200.0);
    v20 = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    objc_msgSend(v15, "setEndDate:", v20);

    v21 = (_OWORD *)(a4 + *(int *)(v17 + 32));
    v22 = v21[3];
    v65[0] = v21[2];
    v65[1] = v22;
    v23 = v21[5];
    v65[2] = v21[4];
    v65[3] = v23;
    v24 = v15;
    sub_100C177C8(0);
    v25 = String._bridgeToObjectiveC()();
    objc_msgSend(v24, "setLocation:", v25, swift_bridgeObjectRelease().n128_f64[0]);

    v26 = v24;
    v27 = objc_msgSend(a3, "defaultCalendarForNewEvents");
    objc_msgSend(v26, "setCalendar:", v27);

    v64 = 0;
    v28 = objc_msgSend(a3, "saveEvent:span:error:", v26, 0, &v64);
    v29 = v64;
    if (v28)
    {
      v30 = type metadata accessor for TaskPriority(0);
      v31 = (uint64_t)v60;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v60, 1, 1, v30);
      v32 = a4;
      v33 = v61;
      sub_100C2A178(v32, v61);
      type metadata accessor for MainActor(0);
      v34 = v29;
      v36 = static MainActor.shared.getter(v35);
      isa_low = LOBYTE(v62[10].isa);
      v38 = (isa_low + 32) & ~isa_low;
      v39 = swift_allocObject(&unk_10110A180, (char *)isa + v38, isa_low | 7);
      *(_QWORD *)(v39 + 16) = v36;
      *(_QWORD *)(v39 + 24) = &protocol witness table for MainActor;
      sub_10005B6C0(v33, v39 + v38, type metadata accessor for RazzmatazzDetailView);
      sub_100BF7804(v31, (uint64_t)&unk_1011E1B28, v39);
      swift_release();

    }
    else
    {
      v48 = v64;
      v49 = _convertNSErrorToError(_:)(v29);

      swift_willThrow(v50);
      if (qword_1011DE098 != -1)
        swift_once(&qword_1011DE098, sub_100C1E8B0);
      v51 = type metadata accessor for Logger(0);
      sub_100048B14(v51, (uint64_t)qword_10124FE38);
      swift_errorRetain(v49);
      v52 = swift_errorRetain(v49);
      v53 = Logger.logObject.getter(v52);
      v54 = static os_log_type_t.error.getter(v53);
      if (os_log_type_enabled(v53, v54))
      {
        v55 = swift_slowAlloc(12, -1);
        v56 = (void *)swift_slowAlloc(32, -1);
        v64 = v56;
        *(_DWORD *)v55 = 136315138;
        v63 = v49;
        swift_errorRetain(v49);
        v57 = sub_100007E8C(&qword_1011DF550);
        v58 = (char *)String.init<A>(describing:)(&v63, v57);
        *(_QWORD *)(v55 + 4) = sub_100BBDE38(v58, v59, (uint64_t *)&v64);
        swift_bridgeObjectRelease();
        swift_errorRelease(v49);
        swift_errorRelease(v49);
        _os_log_impl((void *)&_mh_execute_header, v53, v54, "Failed to save event: %s", (uint8_t *)v55, 0xCu);
        swift_arrayDestroy(v56, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v56, -1, -1);
        swift_slowDealloc(v55, -1, -1);

        swift_errorRelease(v49);
      }
      else
      {

        swift_errorRelease(v49);
        swift_errorRelease(v49);
        swift_errorRelease(v49);

      }
    }
  }
  else
  {
    if (qword_1011DE098 != -1)
      swift_once(&qword_1011DE098, sub_100C1E8B0);
    v40 = type metadata accessor for Logger(0);
    sub_100048B14(v40, (uint64_t)qword_10124FE38);
    swift_errorRetain(a2);
    v41 = swift_errorRetain(a2);
    v62 = Logger.logObject.getter(v41);
    v42 = static os_log_type_t.error.getter(v62);
    if (os_log_type_enabled(v62, v42))
    {
      v43 = swift_slowAlloc(12, -1);
      v44 = swift_slowAlloc(32, -1);
      v64 = a2;
      *(_QWORD *)&v65[0] = v44;
      *(_DWORD *)v43 = 136315138;
      swift_errorRetain(a2);
      v45 = sub_100007E8C((uint64_t *)&unk_1011E56A0);
      v46 = (char *)String.init<A>(describing:)(&v64, v45);
      *(_QWORD *)(v43 + 4) = sub_100BBDE38(v46, v47, (uint64_t *)v65);
      swift_bridgeObjectRelease();
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v62, v42, "No Calendar access: %s", (uint8_t *)v43, 0xCu);
      swift_arrayDestroy(v44, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v44, -1, -1);
      swift_slowDealloc(v43, -1, -1);
    }
    else
    {
      swift_errorRelease(a2);
      swift_errorRelease(a2);
    }

  }
}

uint64_t sub_100C27858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;

  v4[2] = a1;
  v4[3] = a4;
  v5 = type metadata accessor for UUID(0);
  v4[4] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[5] = v6;
  v4[6] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Notice(0);
  v4[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  v4[8] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  return swift_task_switch(sub_100C2790C, v10, v11);
}

uint64_t sub_100C2790C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 24);
  swift_release();
  v2 = type metadata accessor for RazzmatazzDetailView(0);
  v3 = *(_QWORD *)(v1 + *(int *)(v2 + 20));
  if (v3)
  {
    v4 = *(_QWORD *)(v0 + 48);
    v5 = *(_QWORD **)(v0 + 56);
    v6 = *(_QWORD *)(v0 + 32);
    v7 = *(_QWORD *)(v0 + 40);
    v8 = UUID.init()(v2);
    v9 = UUID.uuidString.getter(v8);
    v11 = v10;
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v4, v6);
    Notice.init(id:symbol:message:headnote:link:hapticFeedback:)(v9, v11, 0x7261646E656C6163, 0xE800000000000000, 0xD000000000000011, 0x8000000100E562C0, 0, 0, v5, 0, 0, 0, 0);
    _s11MusicCoreUI15NoticePresenterC7present_12internalOnlyy0aB00D0V_SbtF_0((uint64_t)v5, 0);
    sub_10005B748((uint64_t)v5, type metadata accessor for Notice);
  }
  v13 = *(_QWORD *)(v0 + 48);
  v12 = *(_QWORD *)(v0 + 56);
  **(_BYTE **)(v0 + 16) = v3 == 0;
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100C27A28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];

  v0 = type metadata accessor for TitleAndIconLabelStyle(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin();
  v3 = (char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_1011E1B00);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[0] = 0x43206F7420646441;
  v13[1] = 0xEF7261646E656C61;
  v8 = sub_100BBF2FC();
  v9 = Label<>.init<A>(_:systemImage:)(v13, 0xD000000000000013, 0x8000000100E562A0, &type metadata for String, v8);
  TitleAndIconLabelStyle.init()(v9);
  v10 = sub_100049F28(&qword_1011E1B08, &qword_1011E1B00, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  v11 = sub_100048748(&qword_1011E1B10, (uint64_t (*)(uint64_t))&type metadata accessor for TitleAndIconLabelStyle, (uint64_t)&protocol conformance descriptor for TitleAndIconLabelStyle);
  View.labelStyle<A>(_:)(v3, v4, v0, v10, v11);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_100C27BC0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t *a3@<X2>, uint64_t (*a4)(uint64_t)@<X3>, uint64_t a5@<X8>)
{
  *(_QWORD *)a5 = a2();
  *(_QWORD *)(a5 + 8) = 0;
  *(_BYTE *)(a5 + 16) = 1;
  sub_100007E8C(a3);
  return a4(a1);
}

uint64_t sub_100C27C18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD v57[2];
  uint64_t v58;
  char v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  __int16 v63;

  v55 = a2;
  v53 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v3 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin();
  v5 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C((uint64_t *)&unk_1011E4DA0);
  __chkstk_darwin();
  v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_100007E8C(&qword_1011E1AD0);
  v10 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin();
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_100007E8C(&qword_1011E3AB0);
  __chkstk_darwin();
  v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_100007E8C(&qword_1011E1AD8);
  __chkstk_darwin();
  v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v56 = (uint64_t)&v49 - v17;
  type metadata accessor for Razzmatazz(0);
  v54 = a1;
  sub_100BBA96C(v9);
  v18 = sub_100007E8C(&qword_1011E4DE0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v7, 6, 10, v18);
  if (qword_1011DE0A0 != -1)
    swift_once(&qword_1011DE0A0, sub_100C290F4);
  v58 = qword_1011E1950;
  v59 = 0;
  v60 = qword_1011E1950;
  v61 = 0;
  v62 = 0;
  v63 = 513;
  v19 = v53;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v53);
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)((uint64_t)v9, (uint64_t)v7, (uint64_t)&v58, (uint64_t)v5, (uint64_t)v12);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v19);
  sub_10005B748((uint64_t)v7, type metadata accessor for ArtworkImage.Placeholder);
  sub_10004FF60((uint64_t)v9, (uint64_t *)&unk_1011E4DA0);
  v20 = v52;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v14, v12, v52);
  v21 = &v14[*(int *)(v50 + 36)];
  *(_QWORD *)v21 = 0;
  *((_QWORD *)v21 + 1) = 0;
  v21[16] = 1;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v20);
  if (qword_1011DE070 != -1)
    swift_once(&qword_1011DE070, sub_100C0A0CC);
  v22 = static Border.artwork;
  v23 = qword_10124FE10;
  v24 = byte_10124FE18;
  sub_10004A160((uint64_t)v14, (uint64_t)v16, &qword_1011E3AB0);
  v25 = &v16[*(int *)(v51 + 36)];
  *(_QWORD *)v25 = v22;
  *((_QWORD *)v25 + 1) = v23;
  v25[16] = v24;
  *((_QWORD *)v25 + 3) = 0;
  *((_QWORD *)v25 + 4) = 0;
  v25[40] = 1;
  swift_retain();
  sub_10004FF60((uint64_t)v14, &qword_1011E3AB0);
  v26 = sub_100065228((uint64_t)v16, v56, &qword_1011E1AD8);
  v57[0] = Artist.name.getter(v26);
  v57[1] = v27;
  v28 = sub_100BBF2FC();
  v29 = Text.init<A>(_:)(v57, &type metadata for String, v28);
  v31 = v30;
  v33 = v32;
  v53 = v34;
  v35 = (uint64_t *)(v54 + *(int *)(type metadata accessor for RazzmatazzDetailView(0) + 24));
  v36 = *v35;
  v37 = (uint64_t)v16;
  if (*v35)
  {
    v38 = v35[1];
    swift_retain();
    sub_100048AAC(v36, v38);
    swift_release();
    v39 = 1;
  }
  else
  {
    v39 = 0;
    v38 = 0;
  }
  v40 = v33 & 1;
  v41 = v56;
  v42 = v37;
  sub_10004A160(v56, v37, &qword_1011E1AD8);
  v43 = v37;
  v44 = v55;
  sub_10004A160(v43, v55, &qword_1011E1AD8);
  v45 = sub_100007E8C(&qword_1011E1AE0);
  v46 = v44 + *(int *)(v45 + 48);
  *(_QWORD *)v46 = v29;
  *(_QWORD *)(v46 + 8) = v31;
  *(_BYTE *)(v46 + 16) = v40;
  *(_QWORD *)(v46 + 24) = v53;
  v47 = (_QWORD *)(v44 + *(int *)(v45 + 64));
  *v47 = 0;
  v47[1] = v39;
  v47[2] = v36;
  v47[3] = v38;
  sub_100055BBC(v29, v31, v40);
  swift_bridgeObjectRetain();
  sub_100C2A240(0, v39, v36, v38);
  sub_10004FF60(v41, &qword_1011E1AD8);
  sub_100C2A250(0, v39, v36, v38);
  sub_100055BAC(v29, v31, v40);
  swift_bridgeObjectRelease();
  return sub_10004FF60(v42, &qword_1011E1AD8);
}

uint64_t sub_100C28120(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  __int128 v13;
  _OWORD v14[14];
  _OWORD v15[9];
  _OWORD v16[2];
  _OWORD v17[11];
  char v18;
  char v19;
  _OWORD v20[13];
  _OWORD v21[2];

  v2 = *(_QWORD *)(type metadata accessor for RazzmatazzDetailView(0) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  __chkstk_darwin();
  v4 = (char *)&v14[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = static HorizontalAlignment.leading.getter(v5);
  sub_100C28370(a1, (uint64_t)v15);
  *(_OWORD *)((char *)&v17[7] + 7) = v15[7];
  *(_OWORD *)((char *)&v17[8] + 7) = v15[8];
  *(_OWORD *)((char *)&v17[9] + 7) = v16[0];
  v17[10] = *(_OWORD *)((char *)v16 + 9);
  *(_OWORD *)((char *)&v17[3] + 7) = v15[3];
  *(_OWORD *)((char *)&v17[4] + 7) = v15[4];
  *(_OWORD *)((char *)&v17[5] + 7) = v15[5];
  *(_OWORD *)((char *)&v17[6] + 7) = v15[6];
  *(_OWORD *)((char *)v17 + 7) = v15[0];
  *(_OWORD *)((char *)&v17[1] + 7) = v15[1];
  v18 = 0;
  *(_OWORD *)((char *)&v17[2] + 7) = v15[2];
  if (qword_1011DDEE0 != -1)
    swift_once(&qword_1011DDEE0, sub_100BBE79C);
  *(_OWORD *)((char *)&v14[7] + 1) = v17[7];
  *(_OWORD *)((char *)&v14[8] + 1) = v17[8];
  *(_OWORD *)((char *)&v14[9] + 1) = v17[9];
  *(_OWORD *)((char *)&v14[10] + 1) = v17[10];
  *(_OWORD *)((char *)&v14[3] + 1) = v17[3];
  *(_OWORD *)((char *)&v14[4] + 1) = v17[4];
  *(_OWORD *)((char *)&v14[5] + 1) = v17[5];
  *(_OWORD *)((char *)&v14[6] + 1) = v17[6];
  *(_OWORD *)((char *)v14 + 1) = v17[0];
  *(_OWORD *)((char *)&v14[1] + 1) = v17[1];
  *(_OWORD *)((char *)&v14[2] + 1) = v17[2];
  *(_OWORD *)((char *)&v14[11] + 8) = static EdgeInsets.zero;
  v19 = 0;
  v13 = (unint64_t)v6;
  LOBYTE(v14[0]) = 0;
  *(_OWORD *)((char *)&v14[12] + 8) = *(_OWORD *)&qword_10124F278;
  BYTE8(v14[13]) = 0;
  sub_100C2A178(a1, (uint64_t)&v14[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *(unsigned __int8 *)(v2 + 80);
  v8 = (v7 + 16) & ~v7;
  v9 = swift_allocObject(&unk_10110A0E0, v8 + v3, v7 | 7);
  sub_10005B6C0((uint64_t)v4, v9 + v8, type metadata accessor for RazzmatazzDetailView);
  v10 = sub_100007E8C(&qword_1011E1A98);
  v11 = sub_100C2A0DC();
  View.onTapGesture(count:perform:)(1, sub_100C2A1C0, v9, v10, v11);
  swift_release();
  v20[12] = v14[11];
  v21[0] = v14[12];
  *(_OWORD *)((char *)v21 + 9) = *(_OWORD *)((char *)&v14[12] + 9);
  v20[8] = v14[7];
  v20[9] = v14[8];
  v20[10] = v14[9];
  v20[11] = v14[10];
  v20[4] = v14[3];
  v20[5] = v14[4];
  v20[6] = v14[5];
  v20[7] = v14[6];
  v20[0] = v13;
  v20[1] = v14[0];
  v20[2] = v14[1];
  v20[3] = v14[2];
  return sub_100C2A1CC((uint64_t)v20);
}

void sub_100C28370(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  double v32;
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[2];
  uint64_t v48;
  char v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  char v58;
  _BYTE v59[7];
  _BYTE v60[7];
  char v61;
  _BYTE v62[7];
  char v63;
  char v64;

  v3 = a1 + *(int *)(type metadata accessor for Razzmatazz(0) + 32);
  objc_msgSend(*(id *)(v3 + 96), "coordinate");
  v5 = v4;
  v7 = v6;
  v45 = *(_QWORD *)(v3 + 24);
  v46 = *(_QWORD *)(v3 + 16);
  v48 = 0;
  swift_bridgeObjectRetain();
  v8 = sub_100007E8C(&qword_1011DED30);
  v9 = State.init(wrappedValue:)(&v48, v8);
  v44 = v54;
  v10 = static Alignment.center.getter(v9);
  _FrameLayout.init(width:height:alignment:)(&v48, 0, 1, 0x4069000000000000, 0, v10, v11);
  v12 = v49;
  v42 = v50;
  v43 = v48;
  v39 = v51;
  v40 = v53;
  v41 = v52;
  v13 = *(_OWORD *)(v3 + 48);
  v54 = *(_OWORD *)(v3 + 32);
  v55 = v13;
  v14 = *(_OWORD *)(v3 + 80);
  v56 = *(_OWORD *)(v3 + 64);
  v57 = v14;
  v47[0] = sub_100C177C8(0);
  v47[1] = v15;
  v16 = sub_100BBF2FC();
  v17 = Text.init<A>(_:)(v47, &type metadata for String, v16);
  v19 = v18;
  v21 = v20;
  v23 = v22 & 1;
  LODWORD(v47[0]) = static HierarchicalShapeStyle.secondary.getter(v17);
  v24 = Text.foregroundStyle<A>(_:)(v47, v17, v19, v23, v21, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v26 = v25;
  v28 = v27;
  v30 = v29 & 1;
  sub_100055BAC(v17, v19, v23);
  swift_bridgeObjectRelease();
  LOBYTE(v23) = static Edge.Set.all.getter(v31);
  v32 = EdgeInsets.init(_all:)(8.0);
  v64 = v12;
  v63 = v39;
  v61 = v30;
  v58 = 0;
  *(_DWORD *)(a2 + 57) = v47[0];
  *(_DWORD *)(a2 + 60) = *(_DWORD *)((char *)v47 + 3);
  *(_DWORD *)(a2 + 73) = *(_DWORD *)v62;
  *(_DWORD *)(a2 + 76) = *(_DWORD *)&v62[3];
  v33 = *(_DWORD *)v60;
  *(_DWORD *)(a2 + 116) = *(_DWORD *)&v60[3];
  *(_DWORD *)(a2 + 113) = v33;
  v34 = *(_DWORD *)v59;
  *(_DWORD *)(a2 + 132) = *(_DWORD *)&v59[3];
  *(_DWORD *)(a2 + 129) = v34;
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v7;
  *(_QWORD *)(a2 + 16) = v46;
  *(_QWORD *)(a2 + 24) = v45;
  *(_OWORD *)(a2 + 32) = v44;
  *(_QWORD *)(a2 + 48) = v43;
  *(_BYTE *)(a2 + 56) = v12;
  *(_QWORD *)(a2 + 64) = v42;
  *(_BYTE *)(a2 + 72) = v39;
  *(_QWORD *)(a2 + 80) = v41;
  *(_QWORD *)(a2 + 88) = v40;
  *(_QWORD *)(a2 + 96) = v24;
  *(_QWORD *)(a2 + 104) = v26;
  *(_BYTE *)(a2 + 112) = v30;
  *(_QWORD *)(a2 + 120) = v28;
  *(_BYTE *)(a2 + 128) = v23;
  *(double *)(a2 + 136) = v32;
  *(_QWORD *)(a2 + 144) = v35;
  *(_QWORD *)(a2 + 152) = v36;
  *(_QWORD *)(a2 + 160) = v37;
  *(_BYTE *)(a2 + 168) = 0;
  swift_retain();
  swift_bridgeObjectRetain();
  v38 = (id)v44;
  sub_100055BBC(v24, v26, v30);
  swift_bridgeObjectRetain();
  sub_100055BAC(v24, v26, v30);
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t sub_100C28624(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  double v10;
  double v11;
  double v12;
  Swift::String v13;
  uint64_t v14;
  void *v15;
  Swift::String v16;
  Swift::String v17;
  Swift::String v18;
  Swift::String v19;
  __n128 v20;
  void *v22;
  id v23;
  NSURL *v24;
  void *v25;
  void *v26;
  unsigned int v27;
  id v28;
  NSURL *v29;
  void *v30;
  void *v31;
  Class isa;
  uint64_t v33;
  unint64_t v34;

  sub_100007E8C(&qword_1011DE770);
  __chkstk_darwin();
  v3 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1 + *(int *)(type metadata accessor for Razzmatazz(0) + 32);
  objc_msgSend(*(id *)(v8 + 96), "coordinate");
  v10 = v9;
  v12 = v11;
  v33 = 0;
  v34 = 0xE000000000000000;
  _StringGuts.grow(_:)(25);
  v13._countAndFlagsBits = 0x3F2F2F3A7370616DLL;
  v13._object = (void *)0xEA00000000003D71;
  String.append(_:)(v13);
  v14 = *(_QWORD *)(v8 + 16);
  v15 = *(void **)(v8 + 24);
  swift_bridgeObjectRetain();
  v16._countAndFlagsBits = v14;
  v16._object = v15;
  String.append(_:)(v16);
  swift_bridgeObjectRelease();
  v17._countAndFlagsBits = 1030515750;
  v17._object = (void *)0xE400000000000000;
  String.append(_:)(v17);
  Double.write<A>(to:)(&v33, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v10);
  v18._countAndFlagsBits = 44;
  v18._object = (void *)0xE100000000000000;
  String.append(_:)(v18);
  Double.write<A>(to:)(&v33, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v12);
  v19._countAndFlagsBits = 893221414;
  v19._object = (void *)0xE400000000000000;
  String.append(_:)(v19);
  URL.init(string:)(v33, v34);
  v20 = swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v5 + 48))(v3, 1, v4, v20) == 1)
    return sub_10004FF60((uint64_t)v3, &qword_1011DE770);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
  v22 = (void *)objc_opt_self(UIApplication);
  v23 = objc_msgSend(v22, "sharedApplication");
  URL._bridgeToObjectiveC()(v24);
  v26 = v25;
  v27 = objc_msgSend(v23, "canOpenURL:", v25);

  if (v27)
  {
    v28 = objc_msgSend(v22, "sharedApplication");
    URL._bridgeToObjectiveC()(v29);
    v31 = v30;
    sub_100BA80BC((uint64_t)_swiftEmptyArrayStorage);
    _s3__C25OpenExternalURLOptionsKeyVMa_1(0);
    sub_100048748(&qword_1011DE818, (uint64_t (*)(uint64_t))_s3__C25OpenExternalURLOptionsKeyVMa_1, (uint64_t)&unk_100EEA24C);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v28, "openURL:options:completionHandler:", v31, isa, 0, swift_bridgeObjectRelease().n128_f64[0]);

  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

double sub_100C2892C@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  void *v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  __n128 v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double result;
  __int128 v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  char v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  id v50[2];

  v37 = a1;
  v5 = type metadata accessor for Image.ResizingMode(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for GeometryProxy(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin();
  v48 = a2[2];
  v43 = a2[2];
  v12 = sub_100007E8C(&qword_1011E1A18);
  State.wrappedValue.getter(&v38, v12);
  if (v38)
  {
    v13 = v38;
    v14 = Image.init(uiImage:)(v13);
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for Image.ResizingMode.stretch(_:), v5);
    v15 = (void *)Image.resizable(capInsets:resizingMode:)(v8, v14, 0.0, 0.0, 0.0, 0.0);
    v16 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v16);
    v38 = v15;
    v39 = xmmword_100EA85A0;
    v40 = 0;
    v41 = 0;
    v42 = 0;
    swift_retain();
    v17 = sub_100007E8C(&qword_1011E1A20);
    v18 = sub_100007E8C(&qword_1011E1A28);
    v19 = sub_1004D9D80(&qword_1011E1A30, &qword_1011E1A20);
    v20 = sub_1004D9D80(&qword_1011E1A38, &qword_1011E1A28);
    _ConditionalContent<>.init(storage:)(&v38, v17, v18, v19, v20);
    swift_release();

  }
  else
  {
    sub_100065228((uint64_t)&v48, (uint64_t)v50, &qword_1011DED30);
    sub_100065228((uint64_t)&v48 + 8, (uint64_t)&v49, &qword_1011E1A10);
    v21 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.97, 0.96, 0.93, 1.0);
    v23 = (void *)Color.init(uiColor:)(v21, v22);
    v47 = a2[1];
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v37, v9);
    v24 = *(unsigned __int8 *)(v10 + 80);
    v25 = (v24 + 64) & ~v24;
    v26 = (char *)swift_allocObject(&unk_10110A068, v25 + v11, v24 | 7);
    v27 = a2[1];
    *((_OWORD *)v26 + 1) = *a2;
    *((_OWORD *)v26 + 2) = v27;
    *((_OWORD *)v26 + 3) = a2[2];
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v26[v25], (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
    v38 = v23;
    *(_QWORD *)&v39 = sub_100C29FA8;
    v40 = 0;
    v41 = 0;
    *((_QWORD *)&v39 + 1) = v26;
    v42 = 1;
    sub_100055CE4((uint64_t)&v47);
    sub_1005518D0(v50);
    sub_1000F4330(&v49);
    v28 = sub_100007E8C(&qword_1011E1A20);
    v29 = sub_100007E8C(&qword_1011E1A28);
    v30 = sub_1004D9D80(&qword_1011E1A30, &qword_1011E1A20);
    v31 = sub_1004D9D80(&qword_1011E1A38, &qword_1011E1A28);
    _ConditionalContent<>.init(storage:)(&v38, v28, v29, v30, v31);
  }
  result = *(double *)&v43;
  v33 = v44;
  v34 = v45;
  v35 = v46;
  *(_OWORD *)a3 = v43;
  *(_OWORD *)(a3 + 16) = v33;
  *(_QWORD *)(a3 + 32) = v34;
  *(_BYTE *)(a3 + 40) = v35;
  return result;
}

void sub_100C28CD4(uint64_t a1)
{
  double v1;
  uint64_t v2;
  double v3;

  v1 = GeometryProxy.size.getter(a1);
  GeometryProxy.size.getter(v2);
  sub_100C28D14(v1, v3);
}

void sub_100C28D14(double a1, double a2)
{
  double *v2;
  double *v3;
  id v6;
  id v7;
  NSString v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  Class isa;
  id v14;
  _OWORD *v15;
  __int128 v16;
  void *v17;
  _QWORD v18[6];
  __int128 v19;
  uint64_t v20;
  id v21;

  v3 = v2;
  v6 = objc_msgSend(objc_allocWithZone((Class)MKPlacemark), "initWithCoordinate:", *v2, v2[1]);
  v7 = objc_msgSend(objc_allocWithZone((Class)MKMapItem), "initWithPlacemark:", v6);

  v8 = String._bridgeToObjectiveC()();
  objc_msgSend(v7, "setName:", v8);

  v9 = sub_100007E8C(&qword_1011DF520);
  v10 = swift_allocObject(v9, 40, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100EA7A90;
  *(_QWORD *)(v10 + 32) = v7;
  v18[0] = v10;
  specialized Array._endMutation()(v10);
  v11 = objc_allocWithZone((Class)MusicMapKitAnnotatedMapSnapshotter);
  sub_100C29FD8();
  v12 = v7;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v11, "initWithMapItems:mapSize:distance:", isa, a1, a2, 5000.0, v18[0]);

  v19 = *((_OWORD *)v3 + 2);
  sub_100065228((uint64_t)&v19, (uint64_t)&v21, &qword_1011DED30);
  sub_100065228((uint64_t)&v19 + 8, (uint64_t)&v20, &qword_1011E1A10);
  v15 = (_OWORD *)swift_allocObject(&unk_10110A090, 64, 7);
  v16 = *((_OWORD *)v3 + 1);
  v15[1] = *(_OWORD *)v3;
  v15[2] = v16;
  v15[3] = *((_OWORD *)v3 + 2);
  v18[4] = sub_100C2A04C;
  v18[5] = v15;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 1107296256;
  v18[2] = sub_10004E2F4;
  v18[3] = &unk_10110A0A8;
  v17 = _Block_copy(v18);
  swift_bridgeObjectRetain();
  sub_1005518D0(&v21);
  sub_1000F4330(&v20);
  objc_msgSend(v14, "startWithCompletionHandler:", v17, swift_release().n128_f64[0]);
  _Block_release(v17);

}

_QWORD *sub_100C28F64(_QWORD *result, uint64_t a2, uint64_t a3)
{
  _QWORD *v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  __int128 v9;
  __int128 v10;
  id v11;
  uint64_t v12;

  if (result)
  {
    v4 = result;
    v5 = objc_msgSend(v4, "image");
    v10 = *(_OWORD *)(a3 + 32);
    sub_100065228((uint64_t)&v10 + 8, (uint64_t)&v12, &qword_1011E1A10);
    sub_100065228((uint64_t)&v10, (uint64_t)&v11, &qword_1011DED30);
    v9 = v10;
    v8 = v5;
    sub_1005518D0(&v11);
    sub_1000F4330(&v12);
    v6 = v5;
    v7 = sub_100007E8C(&qword_1011E1A18);
    State.wrappedValue.setter(&v8, v7);

    sub_100065200(&v11);
    return sub_1000F4038(&v12);
  }
  return result;
}

_QWORD *sub_100C29040@<X0>(double (**a1)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  _OWORD *v1;
  double (*v3)@<D0>(uint64_t@<X0>, uint64_t@<X8>);
  __int128 v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  id v10;

  v6 = v1[2];
  v7 = v1[1];
  v8 = v6;
  sub_100065228((uint64_t)&v8, (uint64_t)&v10, &qword_1011DED30);
  sub_100065228((uint64_t)&v8 + 8, (uint64_t)&v9, &qword_1011E1A10);
  v3 = (double (*)@<D0>(uint64_t@<X0>, uint64_t@<X8>))swift_allocObject(&unk_10110A040, 64, 7);
  v4 = v1[1];
  *((_OWORD *)v3 + 1) = *v1;
  *((_OWORD *)v3 + 2) = v4;
  *((_OWORD *)v3 + 3) = v1[2];
  *a1 = sub_100C29F1C;
  a1[1] = v3;
  sub_100055CE4((uint64_t)&v7);
  sub_1005518D0(&v10);
  return sub_1000F4330(&v9);
}

void sub_100C290F4()
{
  qword_1011E1950 = 0x4046000000000000;
}

uint64_t sub_100C29104()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  v0 = sub_100007E8C(&qword_1011E1958);
  v1 = sub_100049F28(&qword_1011E1960, &qword_1011E1958, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  return List<>.init(content:)(sub_100C2A7B8, &v3, v0, v1);
}

uint64_t *initializeBufferWithCopyOfBuffer for RazzmatazzDetailView(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  id v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v38;
  char *v39;
  void *v40;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v36 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v36 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    v8 = (int *)type metadata accessor for Razzmatazz(0);
    v9 = v8[6];
    v10 = (char *)v4 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for Date(0);
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    v14 = v8[7];
    v15 = (char *)v4 + v14;
    v16 = (char *)a2 + v14;
    v17 = type metadata accessor for Artist(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    v18 = v8[8];
    v19 = (uint64_t *)((char *)v4 + v18);
    v20 = (char *)a2 + v18;
    v21 = *(uint64_t *)((char *)a2 + v18 + 8);
    *v19 = *(uint64_t *)((char *)a2 + v18);
    v19[1] = v21;
    v22 = *(uint64_t *)((char *)a2 + v18 + 24);
    v19[2] = *(uint64_t *)((char *)a2 + v18 + 16);
    v19[3] = v22;
    v23 = *(uint64_t *)((char *)a2 + v18 + 40);
    v19[4] = *(uint64_t *)((char *)a2 + v18 + 32);
    v19[5] = v23;
    v24 = *(uint64_t *)((char *)a2 + v18 + 56);
    v19[6] = *(uint64_t *)((char *)a2 + v18 + 48);
    v19[7] = v24;
    v25 = *(uint64_t *)((char *)a2 + v18 + 72);
    v19[8] = *(uint64_t *)((char *)a2 + v18 + 64);
    v19[9] = v25;
    v26 = *(uint64_t *)((char *)a2 + v18 + 88);
    v19[10] = *(uint64_t *)((char *)a2 + v18 + 80);
    v19[11] = v26;
    v40 = *(void **)((char *)a2 + v18 + 96);
    v19[12] = v40;
    v27 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
    v38 = &v20[v27];
    v39 = (char *)v19 + v27;
    v28 = type metadata accessor for TimeZone(0);
    v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v30 = v40;
    v29(v39, v38, v28);
    v31 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    v32 = (uint64_t *)((char *)v4 + v31);
    v33 = (uint64_t *)((char *)a2 + v31);
    v34 = *v33;
    swift_retain();
    if (v34)
    {
      v35 = v33[1];
      *v32 = v34;
      v32[1] = v35;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v32 = *(_OWORD *)v33;
    }
  }
  return v4;
}

double destroy for RazzmatazzDetailView(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = (int *)type metadata accessor for Razzmatazz(0);
  v5 = a1 + v4[6];
  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + v4[7];
  v8 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + v4[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v10 = v9 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v11 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  if (*(_QWORD *)(a1 + *(int *)(a2 + 24)))
    *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

_QWORD *initializeWithCopy for RazzmatazzDetailView(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  id v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  char *v36;
  char *v37;
  void *v38;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = (int *)type metadata accessor for Razzmatazz(0);
  v8 = v7[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Date(0);
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  v13 = v7[7];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  v17 = v7[8];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (char *)a2 + v17;
  v20 = *(_QWORD *)((char *)a2 + v17 + 8);
  *v18 = *(_QWORD *)((char *)a2 + v17);
  v18[1] = v20;
  v21 = *(_QWORD *)((char *)a2 + v17 + 24);
  v18[2] = *(_QWORD *)((char *)a2 + v17 + 16);
  v18[3] = v21;
  v22 = *(_QWORD *)((char *)a2 + v17 + 40);
  v18[4] = *(_QWORD *)((char *)a2 + v17 + 32);
  v18[5] = v22;
  v23 = *(_QWORD *)((char *)a2 + v17 + 56);
  v18[6] = *(_QWORD *)((char *)a2 + v17 + 48);
  v18[7] = v23;
  v24 = *(_QWORD *)((char *)a2 + v17 + 72);
  v18[8] = *(_QWORD *)((char *)a2 + v17 + 64);
  v18[9] = v24;
  v25 = *(_QWORD *)((char *)a2 + v17 + 88);
  v18[10] = *(_QWORD *)((char *)a2 + v17 + 80);
  v18[11] = v25;
  v38 = *(void **)((char *)a2 + v17 + 96);
  v18[12] = v38;
  v26 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v36 = &v19[v26];
  v37 = (char *)v18 + v26;
  v27 = type metadata accessor for TimeZone(0);
  v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v29 = v38;
  v28(v37, v36, v27);
  v30 = *(int *)(a3 + 24);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  v31 = (_QWORD *)((char *)a1 + v30);
  v32 = (_QWORD *)((char *)a2 + v30);
  v33 = *v32;
  swift_retain();
  if (v33)
  {
    v34 = v32[1];
    *v31 = v33;
    v31[1] = v34;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v31 = *(_OWORD *)v32;
  }
  return a1;
}

_QWORD *assignWithCopy for RazzmatazzDetailView(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (int *)type metadata accessor for Razzmatazz(0);
  v7 = v6[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = v6[7];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = v6[8];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  *v16 = *(_QWORD *)((char *)a2 + v15);
  v16[1] = *(_QWORD *)((char *)a2 + v15 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[2] = v17[2];
  v16[3] = v17[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[4] = v17[4];
  v16[5] = v17[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[6] = v17[6];
  v16[7] = v17[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[8] = v17[8];
  v16[9] = v17[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[10] = v17[10];
  v16[11] = v17[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = (void *)v17[12];
  v19 = (void *)v16[12];
  v16[12] = v18;
  v20 = v18;

  v21 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v22 = (char *)v16 + v21;
  v23 = (char *)v17 + v21;
  v24 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 24))(v22, v23, v24);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  v25 = *(int *)(a3 + 24);
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (_QWORD *)((char *)a2 + v25);
  v28 = *(_QWORD *)((char *)a1 + v25);
  v29 = *v27;
  if (!v28)
  {
    if (v29)
    {
      v31 = v27[1];
      *v26 = v29;
      v26[1] = v31;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)v26 = *(_OWORD *)v27;
    return a1;
  }
  if (!v29)
  {
    swift_release();
    goto LABEL_7;
  }
  v30 = v27[1];
  *v26 = v29;
  v26[1] = v30;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *initializeWithTake for RazzmatazzDetailView(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = (int *)type metadata accessor for Razzmatazz(0);
  v8 = v7[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = v7[7];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  v16 = v7[8];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = *(_OWORD *)((char *)a2 + v16 + 16);
  *(_OWORD *)v17 = *(_OWORD *)((char *)a2 + v16);
  *((_OWORD *)v17 + 1) = v19;
  v20 = *(_OWORD *)((char *)a2 + v16 + 48);
  *((_OWORD *)v17 + 2) = *(_OWORD *)((char *)a2 + v16 + 32);
  *((_OWORD *)v17 + 3) = v20;
  v21 = *(_OWORD *)((char *)a2 + v16 + 80);
  *((_OWORD *)v17 + 4) = *(_OWORD *)((char *)a2 + v16 + 64);
  *((_OWORD *)v17 + 5) = v21;
  *((_QWORD *)v17 + 12) = *(_QWORD *)((char *)a2 + v16 + 96);
  v22 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v23 = &v17[v22];
  v24 = &v18[v22];
  v25 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
  v26 = *(int *)(a3 + 24);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  v27 = (_QWORD *)((char *)a1 + v26);
  v28 = (uint64_t *)((char *)a2 + v26);
  v29 = *v28;
  if (*v28)
  {
    v30 = v28[1];
    *v27 = v29;
    v27[1] = v30;
  }
  else
  {
    *(_OWORD *)v27 = *(_OWORD *)v28;
  }
  return a1;
}

_QWORD *assignWithTake for RazzmatazzDetailView(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = (int *)type metadata accessor for Razzmatazz(0);
  v9 = v8[6];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  v13 = v8[7];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  v17 = v8[8];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  v20 = *(_QWORD *)((char *)a2 + v17 + 8);
  *v18 = *(_QWORD *)((char *)a2 + v17);
  v18[1] = v20;
  swift_bridgeObjectRelease();
  v21 = v19[3];
  v18[2] = v19[2];
  v18[3] = v21;
  swift_bridgeObjectRelease();
  v22 = v19[5];
  v18[4] = v19[4];
  v18[5] = v22;
  swift_bridgeObjectRelease();
  v23 = v19[7];
  v18[6] = v19[6];
  v18[7] = v23;
  swift_bridgeObjectRelease();
  v24 = v19[9];
  v18[8] = v19[8];
  v18[9] = v24;
  swift_bridgeObjectRelease();
  v25 = v19[11];
  v18[10] = v19[10];
  v18[11] = v25;
  swift_bridgeObjectRelease();
  v26 = (void *)v18[12];
  v18[12] = v19[12];

  v27 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v28 = (char *)v18 + v27;
  v29 = (char *)v19 + v27;
  v30 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  swift_release();
  v31 = *(int *)(a3 + 24);
  v32 = (_QWORD *)((char *)a1 + v31);
  v33 = (_QWORD *)((char *)a2 + v31);
  v34 = *(_QWORD *)((char *)a1 + v31);
  v35 = *v33;
  if (!v34)
  {
    if (v35)
    {
      v37 = v33[1];
      *v32 = v35;
      v32[1] = v37;
      return a1;
    }
LABEL_7:
    *(_OWORD *)v32 = *(_OWORD *)v33;
    return a1;
  }
  if (!v35)
  {
    swift_release();
    goto LABEL_7;
  }
  v36 = v33[1];
  *v32 = v35;
  v32[1] = v36;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for RazzmatazzDetailView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C29BE0);
}

uint64_t sub_100C29BE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = type metadata accessor for Razzmatazz(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for RazzmatazzDetailView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C29C74);
}

uint64_t sub_100C29C74(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Razzmatazz(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = a2;
  return result;
}

uint64_t sub_100C29CEC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for Razzmatazz(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = "\b";
    v4[2] = &unk_100EEE770;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100C29D68()
{
  return sub_100049F28(&qword_1011E1A00, &qword_1011E1A08, (uint64_t)&protocol conformance descriptor for List<A, B>);
}

double destroy for RazzmatazzDetailView.MapImage(uint64_t a1)
{
  double result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for RazzmatazzDetailView.MapImage(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  v5 = *(void **)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  v6 = v5;
  swift_retain(v4);
  return a1;
}

_QWORD *assignWithCopy for RazzmatazzDetailView.MapImage(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  v4 = a1[3];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  v5 = (void *)a1[4];
  v6 = (void *)a2[4];
  a1[4] = v6;
  v7 = v6;

  v8 = a1[5];
  v9 = a2[5];
  a1[5] = v9;
  swift_retain(v9);
  swift_release(v8);
  return a1;
}

uint64_t assignWithTake for RazzmatazzDetailView.MapImage(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  v4 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  v5 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release(v5);
  return a1;
}

ValueMetadata *type metadata accessor for RazzmatazzDetailView.MapImage()
{
  return &type metadata for RazzmatazzDetailView.MapImage;
}

uint64_t sub_100C29F08(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FBCB38, 1);
}

double sub_100C29F1C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_100C2892C(a1, (_OWORD *)(v2 + 16), a2);
}

uint64_t sub_100C29F24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = type metadata accessor for GeometryProxy(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 64) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));

  v7 = swift_release(*(_QWORD *)(v0 + 56));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  return swift_deallocObject(v0, v5, v6);
}

void sub_100C29FA8()
{
  uint64_t v0;

  type metadata accessor for GeometryProxy(0);
  sub_100C28CD4(v0 + 16);
}

unint64_t sub_100C29FD8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E1A40;
  if (!qword_1011E1A40)
  {
    v1 = objc_opt_self(MKMapItem);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1011E1A40);
  }
  return result;
}

uint64_t sub_100C2A018()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));

  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

_QWORD *sub_100C2A04C(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100C28F64(a1, a2, v2 + 16);
}

uint64_t sub_100C2A054(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100C2A064(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

void sub_100C2A06C(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_100C263A8(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_100C2A074@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100C27BC0(*(_QWORD *)(v1 + 16), (uint64_t (*)(void))&static HorizontalAlignment.leading.getter, &qword_1011E1AE8, (uint64_t (*)(uint64_t))sub_100C26490, a1);
}

uint64_t sub_100C2A0A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100C27BC0(*(_QWORD *)(v1 + 16), (uint64_t (*)(void))&static VerticalAlignment.center.getter, &qword_1011E1AC8, (uint64_t (*)(uint64_t))sub_100C27C18, a1);
}

uint64_t sub_100C2A0D4()
{
  uint64_t v0;

  return sub_100C28120(*(_QWORD *)(v0 + 16));
}

unint64_t sub_100C2A0DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E1AA0;
  if (!qword_1011E1AA0)
  {
    v1 = sub_100044B54(&qword_1011E1A98);
    sub_100049F28(&qword_1011E1AA8, &qword_1011E1AB0, (uint64_t)&protocol conformance descriptor for VStack<A>);
    sub_100049F28(&qword_1011E1AB8, &qword_1011E3EC0, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E1AA0);
  }
  return result;
}

uint64_t sub_100C2A178(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RazzmatazzDetailView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100C2A1C0()
{
  return sub_100C2A3C4(sub_100C28624);
}

uint64_t sub_100C2A1CC(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v2 = *(void **)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 120);
  v4 = *(_QWORD *)(a1 + 128);
  v5 = *(_BYTE *)(a1 + 136);
  swift_bridgeObjectRelease();

  swift_release();
  sub_100055BAC(v3, v4, v5);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100C2A240(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a3)
    return swift_retain(a4);
  return result;
}

double sub_100C2A250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  double result;

  if (a3)
    *(_QWORD *)&result = swift_release(a4).n128_u64[0];
  return result;
}

uint64_t sub_100C2A264()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  int *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v1 = type metadata accessor for RazzmatazzDetailView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = (int *)type metadata accessor for Razzmatazz(0);
  v6 = v0 + v3 + v5[6];
  v7 = type metadata accessor for Date(0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = v0 + v3 + v5[7];
  v9 = type metadata accessor for Artist(0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = v0 + v3 + v5[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v11 = v10 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v12 = type metadata accessor for TimeZone(0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  swift_release();
  if (*(_QWORD *)(v0 + v3 + *(int *)(v1 + 24)))
    swift_release();
  return swift_deallocObject(v0, v3 + v4);
}

uint64_t sub_100C2A3B8()
{
  return sub_100C2A3C4((uint64_t (*)(uint64_t))sub_100C27054);
}

uint64_t sub_100C2A3C4(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for RazzmatazzDetailView(0) - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

uint64_t sub_100C2A400()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  int *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v1 = type metadata accessor for RazzmatazzDetailView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = (int *)type metadata accessor for Razzmatazz(0);
  v6 = v0 + v3 + v5[6];
  v7 = type metadata accessor for Date(0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = v0 + v3 + v5[7];
  v9 = type metadata accessor for Artist(0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = v0 + v3 + v5[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v11 = v10 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v12 = type metadata accessor for TimeZone(0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  swift_release();
  if (*(_QWORD *)(v0 + v3 + *(int *)(v1 + 24)))
    swift_release();
  return swift_deallocObject(v0, v3 + v4);
}

void sub_100C2A55C(char a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for RazzmatazzDetailView(0) - 8) + 80);
  sub_100C2719C(a1, a2, *(void **)(v2 + 16), v2 + ((v5 + 24) & ~v5));
}

uint64_t sub_100C2A5AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  int *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v1 = type metadata accessor for RazzmatazzDetailView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = (int *)type metadata accessor for Razzmatazz(0);
  v6 = v0 + v3 + v5[6];
  v7 = type metadata accessor for Date(0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = v0 + v3 + v5[7];
  v9 = type metadata accessor for Artist(0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = v0 + v3 + v5[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v11 = v10 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v12 = type metadata accessor for TimeZone(0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  swift_release();
  if (*(_QWORD *)(v0 + v3 + *(int *)(v1 + 24)))
    swift_release();
  return swift_deallocObject(v0, v3 + v4);
}

uint64_t sub_100C2A708(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for RazzmatazzDetailView(0) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + ((v4 + 32) & ~v4);
  v8 = (_QWORD *)swift_task_alloc(dword_1011E1B24);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10005AEE4;
  return sub_100C27858(a1, v5, v6, v7);
}

uint64_t sub_100C2A78C()
{
  return sub_100049F28(&qword_1011E1B30, &qword_1011E1B38, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
}

uint64_t RazzmatazzView.init(navigationHandler:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v6;
  uint64_t v7;
  uint64_t result;
  _BYTE v9[9];
  uint64_t v10;

  v9[0] = 0;
  State.init(wrappedValue:)(v9, &type metadata for Bool);
  v6 = v9[1];
  v7 = v10;
  result = AppStorage.init<A>(wrappedValue:_:store:)(0, 0xD000000000000010, 0x8000000100E562E0, 0);
  *(_QWORD *)a3 = a1;
  *(_QWORD *)(a3 + 8) = a2;
  *(_QWORD *)(a3 + 16) = sub_100C2A8D0;
  *(_QWORD *)(a3 + 24) = 0;
  *(_BYTE *)(a3 + 32) = 0;
  *(_BYTE *)(a3 + 40) = v6;
  *(_QWORD *)(a3 + 48) = v7;
  *(_QWORD *)(a3 + 56) = result;
  return result;
}

uint64_t (*variable initialization expression of RazzmatazzView._controller())()
{
  return sub_100C2A8D0;
}

uint64_t property wrapper backing initializer of Radiosity.ViewModifier.isRadiosityEnabled(char a1)
{
  _BYTE v2[9];

  v2[0] = a1;
  State.init(wrappedValue:)(v2, &type metadata for Bool);
  return v2[1];
}

uint64_t property wrapper backing initializer of RazzmatazzView.isFilteringToFavorites(uint64_t a1)
{
  return AppStorage.init<A>(wrappedValue:_:store:)(a1, 0xD000000000000010, 0x8000000100E562E0, 0);
}

uint64_t sub_100C2A8D0()
{
  uint64_t v0;

  v0 = type metadata accessor for RazzmatazzController(0);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  return sub_100C1B058();
}

uint64_t RazzmatazzView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  _OWORD *v17;
  __int128 v18;
  __int128 v19;
  __n128 v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _OWORD *v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t OpaqueTypeConformance2;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  _OWORD *v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char v71[16];
  _OWORD *v72;
  char v73[16];
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  char v82;

  v2 = (_OWORD *)v1;
  v69 = a1;
  v62 = type metadata accessor for TaskPriority(0);
  v3 = *(_QWORD *)(v62 - 8);
  __chkstk_darwin();
  v5 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_100007E8C(&qword_1011E1B58);
  v59 = *(_QWORD *)(v60 - 8);
  __chkstk_darwin();
  v7 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011E1B60);
  v58 = v8;
  __chkstk_darwin();
  v70 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_100007E8C(&qword_1011E1B68);
  v66 = *(_QWORD *)(v65 - 8);
  __chkstk_darwin();
  v63 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = sub_100007E8C(&qword_1011E1B70);
  v68 = *(_QWORD *)(v67 - 8);
  __chkstk_darwin();
  v64 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = v1;
  v12 = sub_100007E8C(&qword_1011E1B78);
  v13 = sub_100049F28(&qword_1011E1B80, &qword_1011E1B78, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  List<>.init(content:)(sub_100C2B274, v73, v12, v13);
  v14 = *(_QWORD *)(v1 + 8);
  v15 = *(_OWORD *)(v1 + 16);
  v82 = *(_BYTE *)(v1 + 32);
  v80 = *(_OWORD *)(v1 + 40);
  v81 = v15;
  v16 = *(_QWORD *)(v1 + 56);
  v17 = (_OWORD *)swift_allocObject(&unk_10110A1E0, 80, 7);
  v18 = *(_OWORD *)(v1 + 16);
  v17[1] = *(_OWORD *)v1;
  v17[2] = v18;
  v19 = *(_OWORD *)(v1 + 48);
  v17[3] = *(_OWORD *)(v1 + 32);
  v17[4] = v19;
  v61 = v14;
  swift_retain();
  sub_1001DBCC0((uint64_t *)&v81);
  sub_1003E3468((uint64_t)&v80);
  v57 = v16;
  v20 = swift_retain();
  static TaskPriority.userInitiated.getter(v20);
  v21 = v70;
  v22 = &v70[*(int *)(v8 + 36)];
  v23 = type metadata accessor for _TaskModifier(0);
  v24 = v62;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(&v22[*(int *)(v23 + 20)], v5, v62);
  *(_QWORD *)v22 = &unk_1011E1B90;
  *((_QWORD *)v22 + 1) = v17;
  v25 = v59;
  v26 = v21;
  v27 = v60;
  (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v26, v7, v60);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v24);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v27);
  v79 = v80;
  v28 = sub_100007E8C(&qword_1011E1B98);
  State.projectedValue.getter(&v75, v28);
  v29 = v75;
  v30 = v76;
  v31 = v77;
  v32 = (_OWORD *)swift_allocObject(&unk_10110A208, 80, 7);
  v33 = v2[1];
  v32[1] = *v2;
  v32[2] = v33;
  v34 = v2[3];
  v32[3] = v2[2];
  v32[4] = v34;
  swift_retain();
  sub_1001DBCC0((uint64_t *)&v81);
  sub_1003E3468((uint64_t)&v80);
  v35 = type metadata accessor for CitySelectionView(0);
  v36 = sub_100C2C8B4();
  v37 = sub_100048748(&qword_1011E1BB0, type metadata accessor for CitySelectionView, (uint64_t)&unk_100EECF10);
  swift_retain();
  v38 = v63;
  v39 = v31;
  v40 = v58;
  v41 = (uint64_t)v70;
  View.sheet<A>(isPresented:onDismiss:content:)(v29, v30, v39, 0, 0, sub_100C2C8AC, v32, v58, v35, v36, v37);
  swift_release();
  swift_release();
  swift_release();
  sub_10004FF60(v41, &qword_1011E1B60);
  v72 = v2;
  v42 = sub_100007E8C(&qword_1011E1BB8);
  v75 = v40;
  v76 = v35;
  v77 = v36;
  v78 = v37;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v75, &opaque type descriptor for <<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>, 1);
  v44 = sub_100044B54(&qword_1011E1BC0);
  v45 = sub_100049F28(&qword_1011E1BC8, &qword_1011E1BC0, (uint64_t)&protocol conformance descriptor for ToolbarItem<A, B>);
  v75 = v44;
  v76 = v45;
  v46 = swift_getOpaqueTypeConformance2(&v75, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
  v47 = v64;
  v48 = v65;
  View.toolbar<A>(content:)(sub_100C2CAFC, v71, v65, v42, OpaqueTypeConformance2, v46);
  v49 = v48;
  (*(void (**)(char *, uint64_t))(v66 + 8))(v38, v48);
  AppStorage.wrappedValue.getter(&v75, v57, &type metadata for Bool);
  LOBYTE(v79) = v75;
  v50 = (_OWORD *)swift_allocObject(&unk_10110A230, 80, 7);
  v51 = v2[1];
  v50[1] = *v2;
  v50[2] = v51;
  v52 = v2[3];
  v50[3] = v2[2];
  v50[4] = v52;
  swift_retain();
  sub_1001DBCC0((uint64_t *)&v81);
  sub_1003E3468((uint64_t)&v80);
  swift_retain();
  v75 = v49;
  v76 = v42;
  v77 = OpaqueTypeConformance2;
  v78 = v46;
  v53 = swift_getOpaqueTypeConformance2(&v75, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 1);
  v54 = v67;
  View.onChange<A>(of:initial:_:)(&v79, 0, sub_100C2D354, v50, v67, &type metadata for Bool, v53, &protocol witness table for Bool);
  v55 = swift_release();
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v68 + 8))(v47, v54, v55);
}

uint64_t sub_100C2AEE4@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  void (*v37)(char *, uint64_t);
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char v47[16];
  uint64_t v48;
  char v49[16];
  uint64_t v50;

  v40 = a1;
  v46 = a2;
  v44 = sub_100007E8C(&qword_1011E1DA0);
  __chkstk_darwin();
  v3 = (char *)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_100007E8C(&qword_1011E1DA8);
  v45 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin();
  v43 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v6 = (char *)&v39 - v5;
  sub_100007E8C(&qword_1011E1DB0);
  __chkstk_darwin();
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011E1DB8);
  __chkstk_darwin();
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v13 = (char *)&v39 - v12;
  v14 = sub_100007E8C(&qword_1011E1DC0);
  v41 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin();
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v18 = (char *)&v39 - v17;
  v19 = v40;
  v50 = v40;
  *(_QWORD *)v8 = static VerticalAlignment.center.getter(v20);
  *((_QWORD *)v8 + 1) = 0;
  v8[16] = 0;
  v21 = sub_100007E8C(&qword_1011E1DC8);
  sub_100C2B888(v19, (uint64_t)&v8[*(int *)(v21 + 44)]);
  sub_100C2BB50((uint64_t)v11);
  sub_10004FF60((uint64_t)v8, &qword_1011E1DB0);
  sub_100065228((uint64_t)v11, (uint64_t)v13, &qword_1011E1DB8);
  v22 = sub_100007E8C(&qword_1011E1DD0);
  v23 = sub_100C30948();
  v24 = sub_100C30B2C();
  v39 = v18;
  Section<>.init(header:content:)(v13, sub_100C30940, v49, v9, v22, v23, v24);
  v48 = v19;
  sub_100C2BEEC(0x6F637055206C6C41, 0xEC000000676E696DLL, 0, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v3);
  v25 = sub_100007E8C(&qword_1011E1E58);
  v26 = sub_100C30CC0();
  v27 = sub_100C30C3C();
  Section<>.init(header:content:)(v3, sub_100C30CB8, v47, v44, v25, v26, v27);
  v28 = v41;
  v29 = *(void (**)(char *, char *, uint64_t))(v41 + 16);
  v29(v16, v18, v14);
  v30 = v45;
  v31 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
  v32 = v42;
  v33 = v43;
  v31(v43, v6, v42);
  v34 = v46;
  v29(v46, v16, v14);
  v35 = sub_100007E8C(&qword_1011E1EA0);
  v31(&v34[*(int *)(v35 + 48)], v33, v32);
  v36 = *(void (**)(char *, uint64_t))(v30 + 8);
  v36(v6, v32);
  v37 = *(void (**)(char *, uint64_t))(v28 + 8);
  v37(v39, v14);
  v36(v33, v32);
  return ((uint64_t (*)(char *, uint64_t))v37)(v16, v14);
}

uint64_t sub_100C2B274@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_100C2AEE4(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_100C2B27C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _OWORD *v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  Swift::String v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  _OWORD v71[2];

  v64 = a2;
  v65 = sub_100007E8C(&qword_1011E1E58);
  v61 = *(_QWORD *)(v65 - 8);
  __chkstk_darwin();
  v60 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_100007E8C(&qword_1011E1EC0);
  __chkstk_darwin();
  v63 = (uint64_t *)((char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(unsigned __int8 *)(a1 + 32);
  v8 = type metadata accessor for RazzmatazzController(0);
  v9 = sub_100048748(&qword_1011E1CE8, type metadata accessor for RazzmatazzController, (uint64_t)&unk_100EED488);
  v10 = StateObject.wrappedValue.getter(v5, v6, v7, v8, v9);
  KeyPath = swift_getKeyPath(&unk_100EEEA00);
  swift_getKeyPath(&unk_100EEEA28);
  static Published.subscript.getter(&v66, v10, KeyPath);
  swift_release();
  swift_release();
  swift_release();
  v12 = (uint64_t)v66;
  v71[0] = *(_OWORD *)(a1 + 40);
  v70 = *(_QWORD *)(a1 + 56);
  swift_retain();
  KeyValueObservationTrigger.keyPath.getter(v5, v6);
  sub_1003E3468((uint64_t)v71);
  sub_1000F4330(&v70);
  v13 = sub_100C2FDC8(v12, v5, v6, v7);
  swift_release();
  sub_1000A6174(v5, v6);
  sub_1003E34C0((uint64_t)v71);
  sub_1000F4038(&v70);
  swift_bridgeObjectRelease();
  v14 = v13[2];
  swift_bridgeObjectRelease();
  if (v14)
  {
    v15 = StateObject.wrappedValue.getter(v5, v6, v7, v8, v9);
    v16 = swift_getKeyPath(&unk_100EEEA00);
    swift_getKeyPath(&unk_100EEEA28);
    static Published.subscript.getter(&v66, v15, v16);
    swift_release();
    swift_release();
    swift_release();
    v17 = (uint64_t)v66;
    swift_retain();
    KeyValueObservationTrigger.keyPath.getter(v5, v6);
    sub_1003E3468((uint64_t)v71);
    sub_1000F4330(&v70);
    v18 = sub_100C2FDC8(v17, v5, v6, v7);
    swift_release();
    sub_1000A6174(v5, v6);
    sub_1003E34C0((uint64_t)v71);
    sub_1000F4038(&v70);
    swift_bridgeObjectRelease();
    v66 = v18;
    v19 = swift_getKeyPath(&unk_100EEEA50);
    v20 = (_OWORD *)swift_allocObject(&unk_10110A3D0, 80, 7);
    v21 = *(_OWORD *)(a1 + 16);
    v20[1] = *(_OWORD *)a1;
    v20[2] = v21;
    v22 = *(_OWORD *)(a1 + 48);
    v20[3] = *(_OWORD *)(a1 + 32);
    v20[4] = v22;
    swift_retain();
    KeyValueObservationTrigger.keyPath.getter(v5, v6);
    sub_1003E3468((uint64_t)v71);
    sub_1000F4330(&v70);
    v23 = sub_100007E8C(&qword_1011DF450);
    v24 = type metadata accessor for RazzmatazzView.CompactListCell(0);
    v25 = sub_100049F28(&qword_1011E0F50, &qword_1011DF450, (uint64_t)&protocol conformance descriptor for [A]);
    v26 = sub_100048748(&qword_1011E0F58, type metadata accessor for Razzmatazz, (uint64_t)&protocol conformance descriptor for Razzmatazz);
    v27 = sub_100048748(&qword_1011E1E60, type metadata accessor for RazzmatazzView.CompactListCell, (uint64_t)&unk_100EEE868);
    v28 = v60;
    ForEach<>.init(_:id:content:)(&v66, v19, sub_100C310AC, v20, v23, v24, v25, v26, v27);
    v29 = v61;
    v30 = v63;
    v31 = v65;
    (*(void (**)(uint64_t *, char *, uint64_t))(v61 + 16))(v63, v28, v65);
    swift_storeEnumTagMultiPayload(v30, v62, 1);
    v32 = sub_100007E8C(&qword_1011E1E28);
    v33 = sub_100C30B98();
    v34 = sub_100C30C3C();
    _ConditionalContent<>.init(storage:)(v30, v32, v31, v33, v34);
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v28, v31);
  }
  else
  {
    v66 = 0;
    v67 = 0xE000000000000000;
    _StringGuts.grow(_:)(25);
    swift_bridgeObjectRelease();
    v68 = 0xD000000000000017;
    v69 = 0x8000000100E56300;
    v36 = StateObject.wrappedValue.getter(v5, v6, v7, v8, v9);
    v37 = swift_getKeyPath(&unk_100EEEA68);
    swift_getKeyPath(&unk_100EEEA90);
    static Published.subscript.getter(&v66, v36, v37);
    swift_release();
    swift_release();
    swift_release();
    v38 = (uint64_t)v66;
    v39 = (void *)v67;
    swift_bridgeObjectRelease();
    v40._countAndFlagsBits = v38;
    v40._object = v39;
    String.append(_:)(v40);
    swift_bridgeObjectRelease();
    v41 = v68;
    v42 = v69;
    LODWORD(v66) = static HierarchicalShapeStyle.secondary.getter(v43);
    v44 = Text.foregroundStyle<A>(_:)(&v66, v41, v42, 0, _swiftEmptyArrayStorage, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
    v46 = v45;
    v48 = v47;
    v50 = v49;
    swift_bridgeObjectRelease();
    v51 = swift_getKeyPath(&unk_100EEEAB0);
    v52 = static Font.subheadline.getter(v51);
    v53 = swift_getKeyPath(&unk_100EEE8B8);
    v54 = v62;
    v55 = v63;
    *v63 = v44;
    v55[1] = v46;
    *((_BYTE *)v55 + 16) = v48 & 1;
    v55[3] = v50;
    v55[4] = v51;
    *((_BYTE *)v55 + 40) = 1;
    v55[6] = v53;
    v55[7] = v52;
    swift_storeEnumTagMultiPayload(v55, v54, 0);
    v56 = sub_100007E8C(&qword_1011E1E28);
    v57 = sub_100C30B98();
    v58 = sub_100C30C3C();
    return _ConditionalContent<>.init(storage:)(v55, v56, v65, v57, v58);
  }
}

double sub_100C2B888@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  __int128 v15;
  _OWORD *v16;
  __int128 v17;
  __int128 v18;
  unint64_t v19;
  __n128 v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  double result;
  char *v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;

  v4 = sub_100007E8C((uint64_t *)&unk_1011E3120);
  v28 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v27 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v7 = (char *)&v27 - v6;
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(unsigned __int8 *)(a1 + 32);
  v11 = type metadata accessor for RazzmatazzController(0);
  v12 = sub_100048748(&qword_1011E1CE8, type metadata accessor for RazzmatazzController, (uint64_t)&unk_100EED488);
  v13 = StateObject.wrappedValue.getter(v8, v9, v10, v11, v12);
  KeyPath = swift_getKeyPath(&unk_100EEEA68);
  swift_getKeyPath(&unk_100EEEA90);
  static Published.subscript.getter(&v30, v13, KeyPath);
  swift_release();
  swift_release();
  swift_release();
  v15 = v30;
  swift_bridgeObjectRelease();
  v29 = v15;
  v30 = *(_OWORD *)(a1 + 40);
  v31 = *(_QWORD *)(a1 + 56);
  v16 = (_OWORD *)swift_allocObject(&unk_10110A3A8, 80, 7);
  v17 = *(_OWORD *)(a1 + 16);
  v16[1] = *(_OWORD *)a1;
  v16[2] = v17;
  v18 = *(_OWORD *)(a1 + 48);
  v16[3] = *(_OWORD *)(a1 + 32);
  v16[4] = v18;
  swift_retain();
  KeyValueObservationTrigger.keyPath.getter(v8, v9);
  sub_1003E3468((uint64_t)&v30);
  sub_1000F4330(&v31);
  v19 = sub_100BBF2FC();
  Button<>.init<A>(_:action:)(&v29, sub_100C30E68, v16, &type metadata for String, v19, v20);
  v21 = v27;
  v22 = v28;
  v23 = *(void (**)(char *, char *, uint64_t))(v28 + 16);
  v23(v27, v7, v4);
  *(_OWORD *)a2 = xmmword_100EE8B10;
  *(_BYTE *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = _swiftEmptyArrayStorage;
  *(_OWORD *)(a2 + 32) = xmmword_100EE8B20;
  *(_BYTE *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 56) = _swiftEmptyArrayStorage;
  v24 = sub_100007E8C(&qword_1011E1EB8);
  v23((char *)(a2 + *(int *)(v24 + 64)), v21, v4);
  sub_100055BBC(1918985550, 0xE400000000000000, 0);
  swift_bridgeObjectRetain();
  sub_100055BBC(32, 0xE100000000000000, 0);
  v25 = *(void (**)(char *, uint64_t))(v22 + 8);
  swift_bridgeObjectRetain();
  v25(v7, v4);
  v25(v21, v4);
  sub_100055BAC(32, 0xE100000000000000, 0);
  swift_bridgeObjectRelease();
  sub_100055BAC(1918985550, 0xE400000000000000, 0);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_100C2BB50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t *v18;
  double v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;

  v44 = a1;
  sub_100007E8C(&qword_1011E0E60);
  __chkstk_darwin();
  v2 = (char *)&v41 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100007E8C(&qword_1011E1E00);
  __chkstk_darwin();
  v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_100007E8C(&qword_1011E1EB0);
  v6 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin();
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011E1DF8);
  __chkstk_darwin();
  v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v43 = sub_100007E8C(&qword_1011E1DE8);
  v12 = __chkstk_darwin();
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = static Font.callout.getter(v12);
  KeyPath = swift_getKeyPath(&unk_100EEE8B8);
  v17 = sub_10004A160(v41, (uint64_t)v5, &qword_1011E1DB0);
  v18 = (uint64_t *)&v5[*(int *)(v3 + 36)];
  *v18 = KeyPath;
  v18[1] = v15;
  v19 = static Font.Weight.semibold.getter(v17);
  v20 = sub_100C30A90();
  View.fontWeight(_:)(*(_QWORD *)&v19, 0, v3, v20);
  sub_10004FF60((uint64_t)v5, &qword_1011E1E00);
  v21 = type metadata accessor for Text.Case(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v2, 1, 1, v21);
  v22 = swift_getKeyPath(&unk_100EEE9D0);
  v23 = (uint64_t *)&v11[*(int *)(v9 + 36)];
  v24 = sub_100007E8C(&qword_1011E0E58);
  sub_10004A160((uint64_t)v2, (uint64_t)v23 + *(int *)(v24 + 28), &qword_1011E0E60);
  *v23 = v22;
  v25 = v42;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v11, v8, v42);
  sub_10004FF60((uint64_t)v2, &qword_1011E0E60);
  v26 = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v25);
  v27 = static Edge.Set.horizontal.getter(v26);
  if (qword_1011DE0B8 != -1)
    swift_once(&qword_1011DE0B8, sub_100C2F9C8);
  v28 = EdgeInsets.init(_all:)(*(double *)&qword_1011E1B50);
  v30 = v29;
  v32 = v31;
  v34 = v33;
  sub_10004A160((uint64_t)v11, (uint64_t)v14, &qword_1011E1DF8);
  v35 = &v14[*(int *)(v43 + 36)];
  *v35 = v27;
  *((double *)v35 + 1) = v28;
  *((_QWORD *)v35 + 2) = v30;
  *((_QWORD *)v35 + 3) = v32;
  *((_QWORD *)v35 + 4) = v34;
  v35[40] = 0;
  sub_10004FF60((uint64_t)v11, &qword_1011E1DF8);
  if (qword_1011DDEE0 != -1)
    swift_once(&qword_1011DDEE0, sub_100BBE79C);
  v43 = static EdgeInsets.zero;
  v36 = qword_10124F278;
  v37 = unk_10124F280;
  v38 = v44;
  sub_10004A160((uint64_t)v14, v44, &qword_1011E1DE8);
  v39 = v38 + *(int *)(sub_100007E8C(&qword_1011E1DB8) + 36);
  *(_OWORD *)v39 = v43;
  *(_QWORD *)(v39 + 16) = v36;
  *(_QWORD *)(v39 + 24) = v37;
  *(_BYTE *)(v39 + 32) = 0;
  return sub_10004FF60((uint64_t)v14, &qword_1011E1DE8);
}

uint64_t sub_100C2BEEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v54 = a5;
  sub_100007E8C(&qword_1011E0E60);
  __chkstk_darwin();
  v49 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011E1EA8);
  v50 = *(_QWORD *)(v10 - 8);
  v51 = v10;
  __chkstk_darwin();
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_100007E8C(&qword_1011E1E88);
  __chkstk_darwin();
  v47 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v52 = sub_100007E8C(&qword_1011E1E78);
  v14 = __chkstk_darwin();
  v53 = (uint64_t)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = static Font.callout.getter(v14);
  KeyPath = swift_getKeyPath(&unk_100EEE8B8);
  v55 = a1;
  v56 = a2;
  v57 = a3 & 1;
  v58 = a4;
  v59 = KeyPath;
  v60 = v16;
  sub_100055BBC(a1, a2, a3 & 1);
  v18 = swift_bridgeObjectRetain();
  v19 = static Font.Weight.semibold.getter(v18);
  v20 = sub_100007E8C(&qword_1011E1E90);
  v21 = sub_1008511F8(&qword_1011E1E98, &qword_1011E1E90, (unint64_t *)&unk_1011E3BD0, &qword_1011E0EA8);
  View.fontWeight(_:)(*(_QWORD *)&v19, 0, v20, v21);
  sub_100055BAC(a1, a2, a3 & 1);
  v22 = (uint64_t)v47;
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v23 = type metadata accessor for Text.Case(0);
  v24 = (uint64_t)v49;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v49, 1, 1, v23);
  v25 = swift_getKeyPath(&unk_100EEE9D0);
  v26 = (uint64_t *)(v22 + *(int *)(v48 + 36));
  v27 = sub_100007E8C(&qword_1011E0E58);
  sub_10004A160(v24, (uint64_t)v26 + *(int *)(v27 + 28), &qword_1011E0E60);
  *v26 = v25;
  v29 = v50;
  v28 = v51;
  (*(void (**)(uint64_t, char *, uint64_t))(v50 + 16))(v22, v12, v51);
  sub_10004FF60(v24, &qword_1011E0E60);
  v30 = (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v12, v28);
  v31 = static Edge.Set.horizontal.getter(v30);
  if (qword_1011DE0B8 != -1)
    swift_once(&qword_1011DE0B8, sub_100C2F9C8);
  v32 = EdgeInsets.init(_all:)(*(double *)&qword_1011E1B50);
  v34 = v33;
  v36 = v35;
  v38 = v37;
  v39 = v53;
  sub_10004A160(v22, v53, &qword_1011E1E88);
  v40 = v39 + *(int *)(v52 + 36);
  *(_BYTE *)v40 = v31;
  *(double *)(v40 + 8) = v32;
  *(_QWORD *)(v40 + 16) = v34;
  *(_QWORD *)(v40 + 24) = v36;
  *(_QWORD *)(v40 + 32) = v38;
  *(_BYTE *)(v40 + 40) = 0;
  sub_10004FF60(v22, &qword_1011E1E88);
  if (qword_1011DDEE0 != -1)
    swift_once(&qword_1011DDEE0, sub_100BBE79C);
  v52 = static EdgeInsets.zero;
  v41 = qword_10124F278;
  v42 = unk_10124F280;
  v43 = v54;
  sub_10004A160(v39, v54, &qword_1011E1E78);
  v44 = v43 + *(int *)(sub_100007E8C(&qword_1011E1DA0) + 36);
  *(_OWORD *)v44 = v52;
  *(_QWORD *)(v44 + 16) = v41;
  *(_QWORD *)(v44 + 24) = v42;
  *(_BYTE *)(v44 + 32) = 0;
  return sub_10004FF60(v39, &qword_1011E1E78);
}

uint64_t sub_100C2C2D4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  _OWORD *v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(unsigned __int8 *)(a1 + 32);
  v5 = type metadata accessor for RazzmatazzController(0);
  v6 = sub_100048748(&qword_1011E1CE8, type metadata accessor for RazzmatazzController, (uint64_t)&unk_100EED488);
  v7 = StateObject.wrappedValue.getter(v2, v3, v4, v5, v6);
  KeyPath = swift_getKeyPath(&unk_100EEEA00);
  swift_getKeyPath(&unk_100EEEA28);
  static Published.subscript.getter(&v21, v7, KeyPath);
  swift_release();
  swift_release();
  swift_release();
  v19 = v21;
  v9 = swift_getKeyPath(&unk_100EEEA50);
  v21 = *(_OWORD *)(a1 + 40);
  v20 = *(_QWORD *)(a1 + 56);
  v10 = (_OWORD *)swift_allocObject(&unk_10110A380, 80, 7);
  v11 = *(_OWORD *)(a1 + 16);
  v10[1] = *(_OWORD *)a1;
  v10[2] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v10[3] = *(_OWORD *)(a1 + 32);
  v10[4] = v12;
  swift_retain();
  KeyValueObservationTrigger.keyPath.getter(v2, v3);
  sub_1003E3468((uint64_t)&v21);
  sub_1000F4330(&v20);
  v13 = sub_100007E8C(&qword_1011DF450);
  v14 = type metadata accessor for RazzmatazzView.CompactListCell(0);
  v15 = sub_100049F28(&qword_1011E0F50, &qword_1011DF450, (uint64_t)&protocol conformance descriptor for [A]);
  v16 = sub_100048748(&qword_1011E0F58, type metadata accessor for Razzmatazz, (uint64_t)&protocol conformance descriptor for Razzmatazz);
  v17 = sub_100048748(&qword_1011E1E60, type metadata accessor for RazzmatazzView.CompactListCell, (uint64_t)&unk_100EEE868);
  return ForEach<>.init(_:id:content:)(&v19, v9, sub_100C30E44, v10, v13, v14, v15, v16, v17);
}

double sub_100C2C4D4@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  double result;

  sub_10005B704(a1, a3, type metadata accessor for Razzmatazz);
  v6 = *a2;
  v5 = a2[1];
  v7 = (_QWORD *)(a3 + *(int *)(type metadata accessor for RazzmatazzView.CompactListCell(0) + 20));
  *v7 = v6;
  v7[1] = v5;
  *(_QWORD *)&result = swift_retain().n128_u64[0];
  return result;
}

uint64_t sub_100C2C528(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  __n128 v4;
  __n128 v5;
  uint64_t v6;
  _QWORD *v7;

  v1[2] = a1;
  v3 = sub_100007E8C(&qword_1011E0490);
  v1[3] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v1[4] = type metadata accessor for MainActor(0);
  v1[5] = static MainActor.shared.getter(v4);
  v1[6] = static MainActor.shared.getter(v5);
  v6 = *(_QWORD *)(a1 + 56);
  v7 = (_QWORD *)swift_task_alloc(dword_1011E1CE4);
  v1[7] = v7;
  *v7 = v1;
  v7[1] = sub_100C2C5C0;
  return sub_100C3008C(v6);
}

uint64_t sub_100C2C5C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  *(_QWORD *)(*(_QWORD *)v1 + 64) = a1;
  swift_task_dealloc(v2);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  return swift_task_switch(sub_100C2C638, v4, v5);
}

uint64_t sub_100C2C638()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  v1 = v0[8];
  v3 = v0[3];
  v2 = v0[4];
  v4 = v0[2];
  swift_release();
  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = *(unsigned __int8 *)(v4 + 32);
  v8 = type metadata accessor for RazzmatazzController(0);
  v9 = sub_100048748(&qword_1011E1CE8, type metadata accessor for RazzmatazzController, (uint64_t)&unk_100EED488);
  v10 = StateObject.wrappedValue.getter(v5, v6, v7, v8, v9);
  v11 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v3, 1, 1, v11);
  swift_retain();
  swift_bridgeObjectRetain();
  v13 = static MainActor.shared.getter(v12);
  v14 = (_QWORD *)swift_allocObject(&unk_10110A358, 48, 7);
  v14[2] = v13;
  v14[3] = &protocol witness table for MainActor;
  v14[4] = v10;
  v14[5] = v1;
  sub_100BF76B8(v3, (uint64_t)&unk_1011E1D98, (uint64_t)v14);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v15 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_100C310A8, v15, v16);
}

uint64_t sub_100C2C78C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_1011E1B8C);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10006AEE4;
  return sub_100C2C528(v0 + 16);
}

uint64_t sub_100C2C7D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(unsigned __int8 *)(a1 + 32);
  v6 = type metadata accessor for RazzmatazzController(0);
  v7 = sub_100048748(&qword_1011E1CE8, type metadata accessor for RazzmatazzController, (uint64_t)&unk_100EED488);
  v8 = StateObject.wrappedValue.getter(v3, v4, v5, v6, v7);
  *(_QWORD *)a2 = ObservedObject.init(wrappedValue:)(v8, v6, v7);
  *(_QWORD *)(a2 + 8) = v9;
  *(_QWORD *)(a2 + 16) = sub_100C14A9C;
  *(_QWORD *)(a2 + 24) = 0;
  *(_BYTE *)(a2 + 32) = 0;
  v10 = (_QWORD *)(a2 + *(int *)(type metadata accessor for CitySelectionView(0) + 24));
  *v10 = swift_getKeyPath(&unk_100EEE9A0);
  v11 = sub_100007E8C(&qword_1011E4D50);
  return swift_storeEnumTagMultiPayload(v10, v11, 0);
}

uint64_t sub_100C2C8AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100C2C7D8(v1 + 16, a1);
}

unint64_t sub_100C2C8B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E1BA0;
  if (!qword_1011E1BA0)
  {
    v1 = sub_100044B54(&qword_1011E1B60);
    sub_100049F28(&qword_1011E1BA8, &qword_1011E1B58, (uint64_t)&protocol conformance descriptor for List<A, B>);
    sub_100048748(&qword_1011E0D18, (uint64_t (*)(uint64_t))&type metadata accessor for _TaskModifier, (uint64_t)&protocol conformance descriptor for _TaskModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E1BA0);
  }
  return result;
}

uint64_t sub_100C2C950(uint64_t a1)
{
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t OpaqueTypeConformance2;
  uint64_t v15;
  _BYTE v17[16];
  uint64_t v18;
  _QWORD v19[4];

  type metadata accessor for ToolbarItemPlacement(0);
  __chkstk_darwin();
  v3 = &v17[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_100007E8C(&qword_1011E1BC0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin();
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  static ToolbarItemPlacement.topBarTrailing.getter(v6);
  v18 = a1;
  v9 = sub_100007E8C(&qword_1011E1D20);
  v10 = sub_100044B54(&qword_1011E1D28);
  v11 = type metadata accessor for ButtonMenuStyle(255);
  v12 = sub_100049F28(&qword_1011E1D30, &qword_1011E1D28, (uint64_t)&protocol conformance descriptor for Menu<A, B>);
  v13 = sub_100048748(&qword_1011E1D38, (uint64_t (*)(uint64_t))&type metadata accessor for ButtonMenuStyle, (uint64_t)&protocol conformance descriptor for ButtonMenuStyle);
  v19[0] = v10;
  v19[1] = v11;
  v19[2] = v12;
  v19[3] = v13;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v19, &opaque type descriptor for <<opaque return type of View.menuStyle<A>(_:)>>, 1);
  ToolbarItem<>.init(placement:content:)(v3, sub_100C30868, v17, v9, OpaqueTypeConformance2);
  v15 = sub_100049F28(&qword_1011E1BC8, &qword_1011E1BC0, (uint64_t)&protocol conformance descriptor for ToolbarItem<A, B>);
  static ToolbarContentBuilder.buildBlock<A>(_:)(v8, v4, v15);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_100C2CAFC()
{
  uint64_t v0;

  return sub_100C2C950(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100C2CB04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[2];
  _BYTE v19[16];
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;

  v18[1] = a2;
  v3 = type metadata accessor for ButtonMenuStyle(0);
  v18[0] = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011E1D28);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = a1;
  v20 = a1;
  v10 = sub_100007E8C(&qword_1011E1D40);
  v11 = sub_100007E8C(&qword_1011E1D48);
  v12 = sub_100C30880();
  v13 = sub_100049F28(&qword_1011E1D68, &qword_1011E1D48, (uint64_t)&protocol conformance descriptor for Picker<A, B, C>);
  v14 = Menu.init(content:label:)(sub_100C30870, v21, sub_100C30878, v19, v10, v11, v12, v13);
  ButtonMenuStyle.init()(v14);
  v15 = sub_100049F28(&qword_1011E1D30, &qword_1011E1D28, (uint64_t)&protocol conformance descriptor for Menu<A, B>);
  v16 = sub_100048748(&qword_1011E1D38, (uint64_t (*)(uint64_t))&type metadata accessor for ButtonMenuStyle, (uint64_t)&protocol conformance descriptor for ButtonMenuStyle);
  View.menuStyle<A>(_:)(v5, v6, v3, v15, v16);
  (*(void (**)(char *, uint64_t))(v18[0] + 8))(v5, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_100C2CCC8(uint64_t a1, __n128 a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  _QWORD v7[2];

  v7[0] = 0;
  v7[1] = 0xE000000000000000;
  AppStorage.projectedValue.getter(&v6, *(_QWORD *)(a1 + 56), &type metadata for Bool, a2);
  v2 = sub_100007E8C(&qword_1011E1D70);
  v3 = sub_100049F28(&qword_1011E1D78, &qword_1011E1D70, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  v4 = sub_100BBF2FC();
  return Picker<>.init<A>(_:selection:content:)(v7, &v6, sub_100C2CD90, 0, &type metadata for Bool, v2, &type metadata for String, &protocol witness table for Bool, v3, v4);
}

uint64_t sub_100C2CD90@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v27 = a1;
  v1 = sub_100007E8C(&qword_1011E1D80);
  v25 = v1;
  __chkstk_darwin();
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_1011E1B00);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011E1D88);
  __chkstk_darwin();
  v26 = (uint64_t)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v11 = (char *)&v24 - v10;
  __chkstk_darwin();
  v13 = (char *)&v24 - v12;
  __chkstk_darwin();
  v15 = (char *)&v24 - v14;
  v16 = LocalizedStringKey.init(stringLiteral:)(7105601, 0xE300000000000000);
  Label<>.init(_:systemImage:)(v16);
  v17 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v17(v3, v7, v4);
  v3[*(int *)(v1 + 36)] = 0;
  sub_10004A160((uint64_t)v3, (uint64_t)v13, &qword_1011E1D80);
  v13[*(int *)(v8 + 36)] = 0;
  sub_10004FF60((uint64_t)v3, &qword_1011E1D80);
  v18 = *(void (**)(char *, uint64_t))(v5 + 8);
  v18(v7, v4);
  sub_100065228((uint64_t)v13, (uint64_t)v15, &qword_1011E1D88);
  v19 = LocalizedStringKey.init(stringLiteral:)(0x657469726F766146, 0xE900000000000073);
  Label<>.init(_:systemImage:)(v19);
  v17(v3, v7, v4);
  v3[*(int *)(v25 + 36)] = 1;
  sub_10004A160((uint64_t)v3, (uint64_t)v11, &qword_1011E1D80);
  v11[*(int *)(v8 + 36)] = 1;
  sub_10004FF60((uint64_t)v3, &qword_1011E1D80);
  v18(v7, v4);
  sub_100065228((uint64_t)v11, (uint64_t)v13, &qword_1011E1D88);
  sub_10004A160((uint64_t)v15, (uint64_t)v11, &qword_1011E1D88);
  v20 = v26;
  sub_10004A160((uint64_t)v13, v26, &qword_1011E1D88);
  v21 = v27;
  sub_10004A160((uint64_t)v11, v27, &qword_1011E1D88);
  v22 = sub_100007E8C(&qword_1011E1D90);
  sub_10004A160(v20, v21 + *(int *)(v22 + 48), &qword_1011E1D88);
  sub_10004FF60((uint64_t)v13, &qword_1011E1D88);
  sub_10004FF60((uint64_t)v15, &qword_1011E1D88);
  sub_10004FF60(v20, &qword_1011E1D88);
  return sub_10004FF60((uint64_t)v11, &qword_1011E1D88);
}

uint64_t sub_100C2D0AC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t result;
  id v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;

  sub_100007E8C(&qword_1011E4240);
  __chkstk_darwin();
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = Image.init(systemName:)(0xD000000000000026, 0x8000000100E2BF40);
  static SymbolRenderingMode.palette.getter();
  v7 = type metadata accessor for SymbolRenderingMode(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 0, 1, v7);
  v8 = Image.symbolRenderingMode(_:)(v5, v6);
  swift_release();
  sub_10004FF60((uint64_t)v5, &qword_1011E4240);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = AppStorage.wrappedValue.getter((uint64_t *)((char *)&v20 + 1), v9, &type metadata for Bool);
  if (BYTE1(v20) == 1)
    v12 = static Color.white.getter(v10);
  else
    v12 = static Color.accentColor.getter(v10, v11);
  v13 = v12;
  v14 = AppStorage.wrappedValue.getter(&v20, v9, &type metadata for Bool);
  if (v20 == 1)
  {
    result = static Color.accentColor.getter(v14, v15);
  }
  else
  {
    v17 = objc_msgSend((id)objc_opt_self(UIColor), "tertiarySystemFillColor");
    result = Color.init(uiColor:)(v17, v18);
  }
  *a2 = v8;
  a2[1] = v13;
  a2[2] = result;
  return result;
}

double sub_100C2D218(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  double result;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __int128 v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  char v20;

  sub_100007E8C(&qword_1011E0490);
  *(_QWORD *)&result = __chkstk_darwin().n128_u64[0];
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1 != *a2)
  {
    v9 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
    type metadata accessor for MainActor(0);
    v10 = *(_OWORD *)(a3 + 16);
    v20 = *(_BYTE *)(a3 + 32);
    v18 = *(_OWORD *)(a3 + 40);
    v19 = v10;
    v17 = *(_QWORD *)(a3 + 56);
    swift_retain();
    sub_1001DBCC0((uint64_t *)&v19);
    sub_1003E3468((uint64_t)&v18);
    sub_1000F4330(&v17);
    v12 = static MainActor.shared.getter(v11);
    v13 = swift_allocObject(&unk_10110A308, 96, 7);
    *(_QWORD *)(v13 + 16) = v12;
    *(_QWORD *)(v13 + 24) = &protocol witness table for MainActor;
    v14 = *(_OWORD *)(a3 + 16);
    *(_OWORD *)(v13 + 32) = *(_OWORD *)a3;
    *(_OWORD *)(v13 + 48) = v14;
    v15 = *(_OWORD *)(a3 + 48);
    *(_OWORD *)(v13 + 64) = *(_OWORD *)(a3 + 32);
    *(_OWORD *)(v13 + 80) = v15;
    sub_100BF76B8((uint64_t)v8, (uint64_t)&unk_1011E1CD8, v13);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_100C2D354(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2;

  return sub_100C2D218(a1, a2, v2 + 16);
}

uint64_t sub_100C2D35C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of RazzmatazzView.body>>, 1);
}

uint64_t sub_100C2D36C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  __n128 v7;
  __n128 v8;
  uint64_t v9;
  _QWORD *v10;

  v4[2] = a4;
  v6 = sub_100007E8C(&qword_1011E0490);
  v4[3] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4[4] = type metadata accessor for MainActor(0);
  v4[5] = static MainActor.shared.getter(v7);
  v4[6] = static MainActor.shared.getter(v8);
  v9 = *(_QWORD *)(a4 + 56);
  v10 = (_QWORD *)swift_task_alloc(dword_1011E1CE4);
  v4[7] = v10;
  *v10 = v4;
  v10[1] = sub_100C2D404;
  return sub_100C3008C(v9);
}

uint64_t sub_100C2D404(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  *(_QWORD *)(*(_QWORD *)v1 + 64) = a1;
  swift_task_dealloc(v2);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  return swift_task_switch(sub_100C2D47C, v4, v5);
}

uint64_t sub_100C2D47C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  v1 = v0[8];
  v3 = v0[3];
  v2 = v0[4];
  v4 = v0[2];
  swift_release();
  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = *(unsigned __int8 *)(v4 + 32);
  v8 = type metadata accessor for RazzmatazzController(0);
  v9 = sub_100048748(&qword_1011E1CE8, type metadata accessor for RazzmatazzController, (uint64_t)&unk_100EED488);
  v10 = StateObject.wrappedValue.getter(v5, v6, v7, v8, v9);
  v11 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v3, 1, 1, v11);
  swift_retain();
  swift_bridgeObjectRetain();
  v13 = static MainActor.shared.getter(v12);
  v14 = (_QWORD *)swift_allocObject(&unk_10110A330, 48, 7);
  v14[2] = v13;
  v14[3] = &protocol witness table for MainActor;
  v14[4] = v10;
  v14[5] = v1;
  sub_100BF76B8(v3, (uint64_t)&unk_1011E1CF0, (uint64_t)v14);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v15 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_100C2D5CC, v15, v16);
}

uint64_t sub_100C2D5CC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 40));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100C2D608@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  double *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  __int128 v49;
  uint64_t v50;

  v50 = a1;
  sub_100007E8C(&qword_1011E1C60);
  __chkstk_darwin();
  v3 = (double *)((char *)&v49 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_100007E8C(&qword_1011E1C68);
  __chkstk_darwin();
  v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011E1C70);
  __chkstk_darwin();
  v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011E1C78);
  __chkstk_darwin();
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = static VerticalAlignment.center.getter(v13);
  if (qword_1011DE0B8 != -1)
    swift_once(&qword_1011DE0B8, sub_100C2F9C8);
  v15 = *(double *)&qword_1011E1B50;
  *(_QWORD *)v3 = v14;
  v3[1] = v15;
  *((_BYTE *)v3 + 16) = 0;
  v16 = sub_100007E8C(&qword_1011E1C80);
  v17 = sub_100C2D960(v1, (uint64_t)v3 + *(int *)(v16 + 44));
  v18 = static Edge.Set.all.getter(v17);
  v19 = EdgeInsets.init(_all:)(v15);
  v21 = v20;
  v23 = v22;
  v25 = v24;
  sub_10004A160((uint64_t)v3, (uint64_t)v6, &qword_1011E1C60);
  v26 = &v6[*(int *)(v4 + 36)];
  *v26 = v18;
  *((double *)v26 + 1) = v19;
  *((_QWORD *)v26 + 2) = v21;
  *((_QWORD *)v26 + 3) = v23;
  *((_QWORD *)v26 + 4) = v25;
  v26[40] = 0;
  v27 = sub_10004FF60((uint64_t)v3, &qword_1011E1C60);
  v28 = static Edge.Set.leading.getter(v27);
  if (qword_1011DE0B0 != -1)
    swift_once(&qword_1011DE0B0, sub_100C2F9B8);
  v29 = EdgeInsets.init(_all:)(*(double *)&qword_1011E1B48);
  v31 = v30;
  v33 = v32;
  v35 = v34;
  sub_10004A160((uint64_t)v6, (uint64_t)v9, &qword_1011E1C68);
  v36 = &v9[*(int *)(v7 + 36)];
  *v36 = v28;
  *((double *)v36 + 1) = v29;
  *((_QWORD *)v36 + 2) = v31;
  *((_QWORD *)v36 + 3) = v33;
  *((_QWORD *)v36 + 4) = v35;
  v36[40] = 0;
  sub_10004FF60((uint64_t)v6, &qword_1011E1C68);
  if (qword_1011DDEE0 != -1)
    swift_once(&qword_1011DDEE0, sub_100BBE79C);
  v49 = static EdgeInsets.zero;
  v37 = qword_10124F278;
  v38 = unk_10124F280;
  sub_10004A160((uint64_t)v9, (uint64_t)v12, &qword_1011E1C70);
  v39 = &v12[*(int *)(v10 + 36)];
  *(_OWORD *)v39 = v49;
  *((_QWORD *)v39 + 2) = v37;
  *((_QWORD *)v39 + 3) = v38;
  v39[32] = 0;
  v40 = sub_10004FF60((uint64_t)v9, &qword_1011E1C70);
  v41 = static Alignment.leading.getter(v40);
  v43 = v42;
  v44 = sub_100007E8C(&qword_1011E1C88);
  v45 = v50;
  v46 = v50 + *(int *)(v44 + 36);
  sub_100C2E760(v46);
  v47 = (uint64_t *)(v46 + *(int *)(sub_100007E8C(&qword_1011E1C90) + 36));
  *v47 = v41;
  v47[1] = v43;
  return sub_100065228((uint64_t)v12, v45, &qword_1011E1C78);
}

uint64_t sub_100C2D960@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  unsigned __int8 v31;
  unsigned __int8 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int8 v37;
  unsigned __int8 v38;
  unsigned __int8 v39;
  unsigned __int8 v40;
  uint64_t v41;
  uint64_t v42;
  int *v43;
  _OWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  uint64_t (**v58)();
  uint64_t v60;
  uint64_t KeyPath;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  __int16 v85;
  char v86;
  _BYTE v87[7];
  unsigned __int8 v88;
  _BYTE v89[7];
  unsigned __int8 v90;
  _BYTE v91[7];
  unsigned __int8 v92;
  _BYTE v93[7];
  unsigned __int8 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  _OWORD v102[2];
  uint64_t v103;
  uint64_t v104;
  unsigned __int8 v105;
  _BYTE v106[7];
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  _BYTE v118[7];
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char v122;

  v70 = a2;
  v66 = *(_QWORD *)(type metadata accessor for RazzmatazzView.CompactListCell(0) - 8);
  __chkstk_darwin();
  v67 = v3;
  v69 = (uint64_t)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v4 = *(_QWORD *)(v77 - 8);
  __chkstk_darwin();
  v6 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C((uint64_t *)&unk_1011E4DA0);
  __chkstk_darwin();
  v10 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011E1AD0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin();
  v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = sub_100007E8C(&qword_1011E3AB0);
  __chkstk_darwin();
  v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_100007E8C(&qword_1011E1AD8);
  __chkstk_darwin();
  v79 = (uint64_t)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v78 = (uint64_t)&v60 - v18;
  type metadata accessor for Razzmatazz(0);
  v68 = a1;
  sub_100BBA96C(v10);
  v19 = sub_100007E8C(&qword_1011E4DE0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v8, 6, 10, v19);
  if (qword_1011DE0A8 != -1)
    swift_once(&qword_1011DE0A8, sub_100C2EC3C);
  v80 = qword_1011E1B40;
  v81 = 0;
  v82 = qword_1011E1B40;
  v83 = 0;
  v84 = 0;
  v85 = 513;
  v20 = v77;
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v77);
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)((uint64_t)v10, (uint64_t)v8, (uint64_t)&v80, (uint64_t)v6, (uint64_t)v14);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v20);
  sub_10005B748((uint64_t)v8, type metadata accessor for ArtworkImage.Placeholder);
  sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_1011E4DA0);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v14, v11);
  v21 = &v16[*(int *)(v75 + 36)];
  *(_QWORD *)v21 = 0;
  *((_QWORD *)v21 + 1) = 0;
  v21[16] = 1;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (qword_1011DE070 != -1)
    swift_once(&qword_1011DE070, sub_100C0A0CC);
  v22 = static Border.artwork;
  v23 = qword_10124FE10;
  v24 = byte_10124FE18;
  v25 = v79;
  sub_10004A160((uint64_t)v16, v79, &qword_1011E3AB0);
  v26 = v25 + *(int *)(v76 + 36);
  *(_QWORD *)v26 = v22;
  *(_QWORD *)(v26 + 8) = v23;
  *(_BYTE *)(v26 + 16) = v24;
  *(_QWORD *)(v26 + 24) = 0;
  *(_QWORD *)(v26 + 32) = 0;
  *(_BYTE *)(v26 + 40) = 1;
  swift_retain();
  sub_10004FF60((uint64_t)v16, &qword_1011E3AB0);
  v27 = v78;
  v28 = sub_100065228(v25, v78, &qword_1011E1AD8);
  v65 = static HorizontalAlignment.leading.getter(v28);
  if (qword_1011DE0B0 != -1)
    swift_once(&qword_1011DE0B0, sub_100C2F9B8);
  v75 = qword_1011E1B48;
  v29 = v68;
  sub_100C2E0A4(v68, &v103);
  v30 = v105;
  v73 = v104;
  v74 = v107;
  v76 = v109;
  v77 = v108;
  v31 = v110;
  v62 = v112;
  v63 = v111;
  v71 = v103;
  v72 = v113;
  v32 = v114;
  v64 = v115;
  KeyPath = swift_getKeyPath(&unk_100EEE948);
  v94 = 0;
  v92 = v30;
  v90 = v31;
  v88 = v32;
  v86 = 0;
  v33 = v69;
  sub_10005B704(v29, v69, type metadata accessor for RazzmatazzView.CompactListCell);
  v34 = *(unsigned __int8 *)(v66 + 80);
  v35 = (v34 + 16) & ~v34;
  v36 = swift_allocObject(&unk_10110A2E0, v35 + v67, v34 | 7);
  sub_10005B6C0(v33, v36 + v35, type metadata accessor for RazzmatazzView.CompactListCell);
  sub_10004A160(v27, v25, &qword_1011E1AD8);
  v37 = v94;
  LODWORD(v66) = v94;
  v38 = v92;
  LODWORD(v67) = v92;
  v39 = v90;
  LODWORD(v68) = v90;
  v40 = v88;
  LODWORD(v69) = v88;
  LOBYTE(v33) = v86;
  v41 = v25;
  v42 = v70;
  sub_10004A160(v41, v70, &qword_1011E1AD8);
  v43 = (int *)sub_100007E8C(&qword_1011E1CB8);
  v44 = (_OWORD *)(v42 + v43[12]);
  v45 = v65;
  *(_QWORD *)&v95 = v65;
  *((_QWORD *)&v95 + 1) = v75;
  LOBYTE(v96) = v37;
  *(_DWORD *)((char *)&v96 + 1) = *(_DWORD *)v93;
  DWORD1(v96) = *(_DWORD *)&v93[3];
  *((_QWORD *)&v96 + 1) = v71;
  *(_QWORD *)&v97 = v73;
  BYTE8(v97) = v38;
  *(_DWORD *)((char *)&v97 + 9) = *(_DWORD *)v91;
  HIDWORD(v97) = *(_DWORD *)&v91[3];
  *(_QWORD *)&v98 = v74;
  *((_QWORD *)&v98 + 1) = v77;
  *(_QWORD *)&v99 = v76;
  BYTE8(v99) = v39;
  *(_DWORD *)((char *)&v99 + 9) = *(_DWORD *)v89;
  HIDWORD(v99) = *(_DWORD *)&v89[3];
  v47 = v62;
  v46 = v63;
  *(_QWORD *)&v100 = v63;
  *((_QWORD *)&v100 + 1) = v62;
  *(_QWORD *)&v101 = v72;
  BYTE8(v101) = v40;
  *(_DWORD *)((char *)&v101 + 9) = *(_DWORD *)v87;
  HIDWORD(v101) = *(_DWORD *)&v87[3];
  v48 = v64;
  v49 = KeyPath;
  *(_QWORD *)&v102[0] = v64;
  *((_QWORD *)&v102[0] + 1) = KeyPath;
  *(_QWORD *)&v102[1] = 1;
  BYTE8(v102[1]) = v33;
  v50 = v95;
  v51 = v96;
  v52 = v98;
  v53 = v99;
  v44[2] = v97;
  v44[3] = v52;
  *v44 = v50;
  v44[1] = v51;
  v54 = v100;
  v55 = v101;
  *(_OWORD *)((char *)v44 + 121) = *(_OWORD *)((char *)v102 + 9);
  v56 = v102[0];
  v44[6] = v55;
  v44[7] = v56;
  v44[4] = v53;
  v44[5] = v54;
  v57 = v42 + v43[16];
  *(_QWORD *)v57 = 0;
  *(_BYTE *)(v57 + 8) = 0;
  v58 = (uint64_t (**)())(v42 + v43[20]);
  *v58 = sub_100C2FB5C;
  v58[1] = (uint64_t (*)())v36;
  sub_100C2FBA4((uint64_t)&v95);
  swift_retain();
  sub_10004FF60(v78, &qword_1011E1AD8);
  swift_release();
  v103 = v45;
  v104 = v75;
  v105 = v66;
  *(_DWORD *)v106 = *(_DWORD *)v93;
  *(_DWORD *)&v106[3] = *(_DWORD *)&v93[3];
  v107 = v71;
  v108 = v73;
  LOBYTE(v109) = v67;
  *(_DWORD *)((char *)&v109 + 1) = *(_DWORD *)v91;
  HIDWORD(v109) = *(_DWORD *)&v91[3];
  v110 = v74;
  v111 = v77;
  v112 = v76;
  LOBYTE(v113) = v68;
  HIDWORD(v113) = *(_DWORD *)&v89[3];
  *(_DWORD *)((char *)&v113 + 1) = *(_DWORD *)v89;
  v114 = v46;
  v115 = v47;
  v116 = v72;
  v117 = v69;
  *(_DWORD *)&v118[3] = *(_DWORD *)&v87[3];
  *(_DWORD *)v118 = *(_DWORD *)v87;
  v119 = v48;
  v120 = v49;
  v121 = 1;
  v122 = v33;
  sub_100C2FC5C((uint64_t)&v103);
  return sub_10004FF60(v79, &qword_1011E1AD8);
}

double sub_100C2E0A4@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  double (*v32)(char *, char *, uint64_t);
  char *v33;
  __n128 v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  Swift::String v42;
  Swift::String v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char v55;
  char *v56;
  char v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(char *, uint64_t);
  double result;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  char *v95;
  char *v96;
  char *v97;
  unint64_t v98;
  int v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  char v107;
  __int128 v108;
  _OWORD v109[4];

  v92 = a1;
  v93 = a2;
  type metadata accessor for FormatStyleCapitalizationContext(0);
  __chkstk_darwin();
  v97 = (char *)&v91 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Calendar(0);
  __chkstk_darwin();
  v96 = (char *)&v91 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v95 = (char *)&v91 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = type metadata accessor for TimeZone(0);
  v5 = *(_QWORD *)(v94 - 8);
  __chkstk_darwin();
  v7 = (char *)&v91 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011E1CC0);
  __chkstk_darwin();
  v9 = (char *)&v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011E1CC8);
  __chkstk_darwin();
  v11 = (char *)&v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = type metadata accessor for Date.FormatStyle(0);
  v102 = *(_QWORD *)(v105 - 8);
  __chkstk_darwin();
  v103 = (char *)&v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Razzmatazz(0);
  *(_QWORD *)&v109[0] = Artist.name.getter(v13);
  *((_QWORD *)&v109[0] + 1) = v14;
  v98 = sub_100BBF2FC();
  v15 = Text.init<A>(_:)(v109, &type metadata for String, v98);
  v17 = v16;
  v19 = v18;
  v21 = v20 & 1;
  LODWORD(v109[0]) = static HierarchicalShapeStyle.primary.getter(v22);
  v104 = Text.foregroundStyle<A>(_:)(v109, v15, v17, v21, v19, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v100 = v23;
  v101 = v24;
  v99 = v25 & 1;
  sub_100055BAC(v15, v17, v21);
  v26 = swift_bridgeObjectRelease();
  static Date.FormatStyle.DateStyle.abbreviated.getter(v26);
  v27 = type metadata accessor for Date.FormatStyle.DateStyle(0);
  v28 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v11, 0, 1, v27);
  static Date.FormatStyle.TimeStyle.omitted.getter(v28);
  v29 = type metadata accessor for Date.FormatStyle.TimeStyle(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v9, 0, 1, v29);
  v30 = (char *)(v92 + *(int *)(v13 + 32));
  v31 = type metadata accessor for Razzmatazz.Venue(0);
  v32 = *(double (**)(char *, char *, uint64_t))(v5 + 16);
  v33 = v7;
  v34.n128_f64[0] = v32(v7, &v30[*(int *)(v31 + 32)], v94);
  v35 = v95;
  v36 = static Locale.autoupdatingCurrent.getter(v34);
  v37 = v96;
  v38 = static Calendar.autoupdatingCurrent.getter(v36);
  v39 = v97;
  static FormatStyleCapitalizationContext.unknown.getter(v38);
  v40 = v103;
  Date.FormatStyle.init(date:time:locale:calendar:timeZone:capitalizationContext:)(v11, v9, v35, v37, v33, v39);
  v41 = sub_100048748(&qword_1011E0E88, (uint64_t (*)(uint64_t))&type metadata accessor for Date.FormatStyle, (uint64_t)&protocol conformance descriptor for Date.FormatStyle);
  Date.formatted<A>(_:)(&v108, v40, v105, v41);
  v109[0] = v108;
  v42._countAndFlagsBits = 12288995;
  v42._object = (void *)0xA300000000000000;
  String.append(_:)(v42);
  v43._countAndFlagsBits = Razzmatazz.shortName.getter();
  String.append(_:)(v43);
  swift_bridgeObjectRelease();
  v44 = v109[0];
  LODWORD(v109[0]) = static HierarchicalShapeStyle.secondary.getter(v45);
  v46 = Text.foregroundStyle<A>(_:)(v109, v44, *((_QWORD *)&v44 + 1), 0, _swiftEmptyArrayStorage, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v48 = v47;
  LOBYTE(v9) = v49;
  v51 = v50;
  swift_bridgeObjectRelease();
  v53 = static Font.footnote.getter(v52);
  v96 = (char *)Text.font(_:)(v53, v46, v48, v9 & 1, v51);
  v95 = v54;
  LOBYTE(v33) = v55;
  v97 = v56;
  swift_release();
  v57 = v33 & 1;
  sub_100055BAC(v46, v48, v9 & 1);
  swift_bridgeObjectRelease();
  v58 = *((_OWORD *)v30 + 3);
  v109[0] = *((_OWORD *)v30 + 2);
  v109[1] = v58;
  v59 = *((_OWORD *)v30 + 5);
  v109[2] = *((_OWORD *)v30 + 4);
  v109[3] = v59;
  *(_QWORD *)&v108 = sub_100C177C8(2);
  *((_QWORD *)&v108 + 1) = v60;
  v61 = Text.init<A>(_:)(&v108, &type metadata for String, v98);
  v63 = v62;
  v65 = v64;
  v67 = v66 & 1;
  LODWORD(v108) = static HierarchicalShapeStyle.secondary.getter(v61);
  v68 = Text.foregroundStyle<A>(_:)(&v108, v61, v63, v67, v65, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v70 = v69;
  v72 = v71;
  v74 = v73 & 1;
  sub_100055BAC(v61, v63, v67);
  swift_bridgeObjectRelease();
  v76 = static Font.footnote.getter(v75);
  v77 = Text.font(_:)(v76, v68, v70, v74, v72);
  v79 = v78;
  LOBYTE(v9) = v80;
  v82 = v81;
  swift_release();
  LOBYTE(v9) = v9 & 1;
  sub_100055BAC(v68, v70, v74);
  swift_bridgeObjectRelease();
  v83 = v99;
  LOBYTE(v108) = v99;
  v107 = v57;
  v106 = (char)v9;
  v84 = v104;
  v85 = v93;
  v86 = v100;
  *v93 = v104;
  v85[1] = v86;
  *((_BYTE *)v85 + 16) = v83;
  v87 = (uint64_t)v96;
  v85[3] = v101;
  v85[4] = v87;
  v88 = (uint64_t)v95;
  v85[5] = v95;
  *((_BYTE *)v85 + 48) = v57;
  v85[7] = v97;
  v85[8] = v77;
  v85[9] = v79;
  *((_BYTE *)v85 + 80) = (_BYTE)v9;
  v85[11] = v82;
  sub_100055BBC(v84, v86, v83);
  swift_bridgeObjectRetain();
  sub_100055BBC(v87, v88, v57);
  swift_bridgeObjectRetain();
  sub_100055BBC(v77, v79, (char)v9);
  v89 = *(void (**)(char *, uint64_t))(v102 + 8);
  swift_bridgeObjectRetain();
  v89(v103, v105);
  sub_100055BAC(v77, v79, v106);
  swift_bridgeObjectRelease();
  sub_100055BAC(v87, v88, v107);
  swift_bridgeObjectRelease();
  sub_100055BAC(v104, v86, v108);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_100C2E760@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t KeyPath;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  char v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v60 = a1;
  v53 = sub_100007E8C(&qword_1011E3D20);
  __chkstk_darwin();
  v2 = (uint64_t *)((char *)&v51 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = type metadata accessor for Image.Scale(0);
  v55 = *(_QWORD *)(v3 - 8);
  v56 = v3;
  __chkstk_darwin();
  v5 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011E1C98);
  __chkstk_darwin();
  v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_100007E8C(&qword_1011E1CA0);
  __chkstk_darwin();
  v9 = (uint64_t *)((char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v54 = sub_100007E8C(&qword_1011E1CA8);
  __chkstk_darwin();
  v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011E1CB0);
  v58 = *(_QWORD *)(v12 - 8);
  v59 = v12;
  __chkstk_darwin();
  v57 = (uint64_t)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for MusicFavoriteStatus(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin();
  v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v19 = (char *)&v51 - v18;
  v20 = type metadata accessor for Razzmatazz(0);
  Artist.favoriteStatus.getter(v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v17, enum case for MusicFavoriteStatus.favorited(_:), v14);
  v21 = static MusicFavoriteStatus.== infix(_:_:)(v19, v17);
  v22 = *(void (**)(char *, uint64_t))(v15 + 8);
  v22(v17, v14);
  v22(v19, v14);
  if ((v21 & 1) != 0)
  {
    v23 = Image.init(systemName:)(0x6C69662E72617473, 0xE90000000000006CLL);
    v24 = static Font.Weight.semibold.getter(v23);
    v25 = type metadata accessor for Font.Design(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v7, 1, 1, v25);
    v26 = static Font.system(size:weight:design:)(*(_QWORD *)&v24, 0, v7, 7.0);
    sub_10004FF60((uint64_t)v7, &qword_1011E1C98);
    KeyPath = swift_getKeyPath(&unk_100EEE8B8);
    v29 = v55;
    v28 = v56;
    (*(void (**)(char *, _QWORD, uint64_t))(v55 + 104))(v5, enum case for Image.Scale.medium(_:), v56);
    v30 = swift_getKeyPath(&unk_100EEE8E8);
    (*(void (**)(char *, char *, uint64_t))(v29 + 16))((char *)v2 + *(int *)(v53 + 28), v5, v28);
    *v2 = v30;
    sub_10004A160((uint64_t)v2, (uint64_t)v9 + *(int *)(v52 + 36), &qword_1011E3D20);
    *v9 = v23;
    v9[1] = KeyPath;
    v9[2] = v26;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_10004FF60((uint64_t)v2, &qword_1011E3D20);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v5, v28);
    swift_release();
    swift_release();
    swift_release();
    v33 = static Color.accentColor.getter(v31, v32);
    v34 = swift_getKeyPath(&unk_100EEE918);
    sub_10004A160((uint64_t)v9, (uint64_t)v11, &qword_1011E1CA0);
    v35 = (uint64_t *)&v11[*(int *)(v54 + 36)];
    *v35 = v34;
    v35[1] = v33;
    v36 = sub_10004FF60((uint64_t)v9, &qword_1011E1CA0);
    v37 = static Edge.Set.leading.getter(v36);
    if (qword_1011DE0B0 != -1)
      swift_once(&qword_1011DE0B0, sub_100C2F9B8);
    v38 = EdgeInsets.init(_all:)(*(double *)&qword_1011E1B48);
    v40 = v39;
    v42 = v41;
    v44 = v43;
    v45 = v57;
    sub_10004A160((uint64_t)v11, v57, &qword_1011E1CA8);
    v46 = v59;
    v47 = v45 + *(int *)(v59 + 36);
    *(_BYTE *)v47 = v37;
    *(double *)(v47 + 8) = v38;
    *(_QWORD *)(v47 + 16) = v40;
    *(_QWORD *)(v47 + 24) = v42;
    *(_QWORD *)(v47 + 32) = v44;
    *(_BYTE *)(v47 + 40) = 0;
    sub_10004FF60((uint64_t)v11, &qword_1011E1CA8);
    v48 = v60;
    sub_100065228(v45, v60, &qword_1011E1CB0);
    v49 = 0;
  }
  else
  {
    v49 = 1;
    v46 = v59;
    v48 = v60;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 56))(v48, v49, 1, v46);
}

void sub_100C2EC3C()
{
  qword_1011E1B40 = 0x404B000000000000;
}

uint64_t sub_100C2EC4C@<X0>(uint64_t a1@<X8>)
{
  return RazzmatazzView.body.getter(a1);
}

double destroy for RazzmatazzView(uint64_t a1)
{
  double result;

  swift_release();
  sub_1000A6174(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for RazzmatazzView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  swift_retain();
  KeyValueObservationTrigger.keyPath.getter(v5, v6);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for RazzmatazzView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  KeyValueObservationTrigger.keyPath.getter(v5, v6);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  sub_1000A6174(v8, v9);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for RazzmatazzView(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  v4 = *(_BYTE *)(a2 + 32);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = v4;
  sub_1000A6174(v5, v6);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  swift_release();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for RazzmatazzView()
{
  return &type metadata for RazzmatazzView;
}

uint64_t sub_100C2EE6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  void *v10;
  unint64_t v11;
  void *v12;

  v0 = sub_100044B54(&qword_1011E1B70);
  v1 = sub_100044B54(&qword_1011E1B68);
  v2 = sub_100044B54(&qword_1011E1BB8);
  v9 = sub_100044B54(&qword_1011E1B60);
  v10 = (void *)type metadata accessor for CitySelectionView(255);
  v11 = sub_100C2C8B4();
  v12 = (void *)sub_100048748(&qword_1011E1BB0, type metadata accessor for CitySelectionView, (uint64_t)&unk_100EECF10);
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v9, &opaque type descriptor for <<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>, 1);
  v4 = sub_100044B54(&qword_1011E1BC0);
  v5 = sub_100049F28(&qword_1011E1BC8, &qword_1011E1BC0, (uint64_t)&protocol conformance descriptor for ToolbarItem<A, B>);
  v9 = v4;
  v10 = (void *)v5;
  v6 = swift_getOpaqueTypeConformance2(&v9, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
  v9 = v1;
  v10 = (void *)v2;
  v11 = OpaqueTypeConformance2;
  v12 = (void *)v6;
  v7 = swift_getOpaqueTypeConformance2(&v9, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 1);
  v9 = v0;
  v10 = &type metadata for Bool;
  v11 = v7;
  v12 = &protocol witness table for Bool;
  return swift_getOpaqueTypeConformance2(&v9, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
}

uint64_t *sub_100C2EFC4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  id v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  char *v37;
  char *v38;
  void *v39;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v35 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v35 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    v8 = (int *)type metadata accessor for Razzmatazz(0);
    v9 = v8[6];
    v10 = (char *)v4 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for Date(0);
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    v14 = v8[7];
    v15 = (char *)v4 + v14;
    v16 = (char *)a2 + v14;
    v17 = type metadata accessor for Artist(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    v18 = v8[8];
    v19 = (uint64_t *)((char *)v4 + v18);
    v20 = (char *)a2 + v18;
    v21 = *(uint64_t *)((char *)a2 + v18 + 8);
    *v19 = *(uint64_t *)((char *)a2 + v18);
    v19[1] = v21;
    v22 = *(uint64_t *)((char *)a2 + v18 + 24);
    v19[2] = *(uint64_t *)((char *)a2 + v18 + 16);
    v19[3] = v22;
    v23 = *(uint64_t *)((char *)a2 + v18 + 40);
    v19[4] = *(uint64_t *)((char *)a2 + v18 + 32);
    v19[5] = v23;
    v24 = *(uint64_t *)((char *)a2 + v18 + 56);
    v19[6] = *(uint64_t *)((char *)a2 + v18 + 48);
    v19[7] = v24;
    v25 = *(uint64_t *)((char *)a2 + v18 + 72);
    v19[8] = *(uint64_t *)((char *)a2 + v18 + 64);
    v19[9] = v25;
    v26 = *(uint64_t *)((char *)a2 + v18 + 88);
    v19[10] = *(uint64_t *)((char *)a2 + v18 + 80);
    v19[11] = v26;
    v39 = *(void **)((char *)a2 + v18 + 96);
    v19[12] = v39;
    v27 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
    v37 = &v20[v27];
    v38 = (char *)v19 + v27;
    v28 = type metadata accessor for TimeZone(0);
    v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v30 = v39;
    v29(v38, v37, v28);
    v31 = *(int *)(a3 + 20);
    v32 = (uint64_t *)((char *)v4 + v31);
    v33 = (uint64_t *)((char *)a2 + v31);
    v34 = v33[1];
    *v32 = *v33;
    v32[1] = v34;
  }
  swift_retain();
  return v4;
}

_QWORD *sub_100C2F198(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  id v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  char *v35;
  char *v36;
  void *v37;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = (int *)type metadata accessor for Razzmatazz(0);
  v8 = v7[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Date(0);
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  v13 = v7[7];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  v17 = v7[8];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (char *)a2 + v17;
  v20 = *(_QWORD *)((char *)a2 + v17 + 8);
  *v18 = *(_QWORD *)((char *)a2 + v17);
  v18[1] = v20;
  v21 = *(_QWORD *)((char *)a2 + v17 + 24);
  v18[2] = *(_QWORD *)((char *)a2 + v17 + 16);
  v18[3] = v21;
  v22 = *(_QWORD *)((char *)a2 + v17 + 40);
  v18[4] = *(_QWORD *)((char *)a2 + v17 + 32);
  v18[5] = v22;
  v23 = *(_QWORD *)((char *)a2 + v17 + 56);
  v18[6] = *(_QWORD *)((char *)a2 + v17 + 48);
  v18[7] = v23;
  v24 = *(_QWORD *)((char *)a2 + v17 + 72);
  v18[8] = *(_QWORD *)((char *)a2 + v17 + 64);
  v18[9] = v24;
  v25 = *(_QWORD *)((char *)a2 + v17 + 88);
  v18[10] = *(_QWORD *)((char *)a2 + v17 + 80);
  v18[11] = v25;
  v37 = *(void **)((char *)a2 + v17 + 96);
  v18[12] = v37;
  v26 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v35 = &v19[v26];
  v36 = (char *)v18 + v26;
  v27 = type metadata accessor for TimeZone(0);
  v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v29 = v37;
  v28(v36, v35, v27);
  v30 = *(int *)(a3 + 20);
  v31 = (_QWORD *)((char *)a1 + v30);
  v32 = (_QWORD *)((char *)a2 + v30);
  v33 = v32[1];
  *v31 = *v32;
  v31[1] = v33;
  swift_retain();
  return a1;
}

_QWORD *sub_100C2F344(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (int *)type metadata accessor for Razzmatazz(0);
  v7 = v6[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = v6[7];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = v6[8];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  *v16 = *(_QWORD *)((char *)a2 + v15);
  v16[1] = *(_QWORD *)((char *)a2 + v15 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[2] = v17[2];
  v16[3] = v17[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[4] = v17[4];
  v16[5] = v17[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[6] = v17[6];
  v16[7] = v17[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[8] = v17[8];
  v16[9] = v17[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[10] = v17[10];
  v16[11] = v17[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = (void *)v17[12];
  v19 = (void *)v16[12];
  v16[12] = v18;
  v20 = v18;

  v21 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v22 = (char *)v16 + v21;
  v23 = (char *)v17 + v21;
  v24 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 24))(v22, v23, v24);
  v25 = *(int *)(a3 + 20);
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (_QWORD *)((char *)a2 + v25);
  v28 = v27[1];
  *v26 = *v27;
  v26[1] = v28;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_100C2F558(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = (int *)type metadata accessor for Razzmatazz(0);
  v8 = v7[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = v7[7];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  v16 = v7[8];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = *(_OWORD *)((char *)a2 + v16 + 16);
  *(_OWORD *)v17 = *(_OWORD *)((char *)a2 + v16);
  *((_OWORD *)v17 + 1) = v19;
  v20 = *(_OWORD *)((char *)a2 + v16 + 48);
  *((_OWORD *)v17 + 2) = *(_OWORD *)((char *)a2 + v16 + 32);
  *((_OWORD *)v17 + 3) = v20;
  v21 = *(_OWORD *)((char *)a2 + v16 + 80);
  *((_OWORD *)v17 + 4) = *(_OWORD *)((char *)a2 + v16 + 64);
  *((_OWORD *)v17 + 5) = v21;
  *((_QWORD *)v17 + 12) = *(_QWORD *)((char *)a2 + v16 + 96);
  v22 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v23 = &v17[v22];
  v24 = &v18[v22];
  v25 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

_QWORD *sub_100C2F668(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = (int *)type metadata accessor for Razzmatazz(0);
  v9 = v8[6];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  v13 = v8[7];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  v17 = v8[8];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  v20 = *(_QWORD *)((char *)a2 + v17 + 8);
  *v18 = *(_QWORD *)((char *)a2 + v17);
  v18[1] = v20;
  swift_bridgeObjectRelease();
  v21 = v19[3];
  v18[2] = v19[2];
  v18[3] = v21;
  swift_bridgeObjectRelease();
  v22 = v19[5];
  v18[4] = v19[4];
  v18[5] = v22;
  swift_bridgeObjectRelease();
  v23 = v19[7];
  v18[6] = v19[6];
  v18[7] = v23;
  swift_bridgeObjectRelease();
  v24 = v19[9];
  v18[8] = v19[8];
  v18[9] = v24;
  swift_bridgeObjectRelease();
  v25 = v19[11];
  v18[10] = v19[10];
  v18[11] = v25;
  swift_bridgeObjectRelease();
  v26 = (void *)v18[12];
  v18[12] = v19[12];

  v27 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v28 = (char *)v18 + v27;
  v29 = (char *)v19 + v27;
  v30 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
  swift_release();
  return a1;
}

uint64_t sub_100C2F7EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C2F7F8);
}

uint64_t sub_100C2F7F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for Razzmatazz(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_100C2F874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C2F880);
}

uint64_t sub_100C2F880(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Razzmatazz(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for RazzmatazzView.CompactListCell(uint64_t a1)
{
  uint64_t result;

  result = qword_1011E1C28;
  if (!qword_1011E1C28)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for RazzmatazzView.CompactListCell);
  return result;
}

uint64_t sub_100C2F934(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for Razzmatazz(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for () + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100C2F9A8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FBCBD4, 1);
}

void sub_100C2F9B8()
{
  qword_1011E1B48 = 0x4010000000000000;
}

void sub_100C2F9C8()
{
  qword_1011E1B50 = 0x4028000000000000;
}

uint64_t sub_100C2F9E0()
{
  return EnvironmentValues.imageScale.getter();
}

uint64_t sub_100C2FA14()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(type metadata accessor for RazzmatazzView.CompactListCell(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = v2 + *(_QWORD *)(v1 + 64);
  v4 = v0 + v2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = (int *)type metadata accessor for Razzmatazz(0);
  v6 = v4 + v5[6];
  v7 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = v4 + v5[7];
  v9 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = v4 + v5[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v11 = v10 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v12 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  swift_release();
  return swift_deallocObject(v0, v3);
}

uint64_t sub_100C2FB5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = type metadata accessor for RazzmatazzView.CompactListCell(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return (*(uint64_t (**)(uint64_t))(v0 + ((v2 + 16) & ~v2) + *(int *)(v1 + 20)))(v0 + ((v2 + 16) & ~v2));
}

uint64_t sub_100C2FBA4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 64);
  v4 = *(_BYTE *)(a1 + 72);
  v5 = *(_QWORD *)(a1 + 88);
  v6 = *(_QWORD *)(a1 + 96);
  v7 = *(_BYTE *)(a1 + 104);
  sub_100055BBC(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRetain();
  sub_100055BBC(v2, v3, v4);
  swift_bridgeObjectRetain();
  sub_100055BBC(v5, v6, v7);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_100C2FC5C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 64);
  v4 = *(_BYTE *)(a1 + 72);
  v5 = *(_QWORD *)(a1 + 88);
  v6 = *(_QWORD *)(a1 + 96);
  v7 = *(_BYTE *)(a1 + 104);
  sub_100055BAC(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRelease();
  sub_100055BAC(v2, v3, v4);
  swift_bridgeObjectRelease();
  sub_100055BAC(v5, v6, v7);
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100C2FD14()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release();
  sub_1000A6174(v0[6], v0[7]);
  swift_release();
  swift_release();
  return swift_deallocObject(v0, 96);
}

uint64_t sub_100C2FD5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1011E1CD4);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10005AEE4;
  return sub_100C2D36C(a1, v4, v5, v1 + 32);
}

_QWORD *sub_100C2FDC8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t KeyPath;
  id v20;
  double v21;
  double v22;
  _QWORD *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[6];
  _QWORD *v35;

  v32 = a2;
  v33 = a3;
  v31 = type metadata accessor for Razzmatazz(0);
  __chkstk_darwin();
  v30 = (uint64_t)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v10 = (char *)&v26 - v9;
  result = _swiftEmptyArrayStorage;
  v35 = _swiftEmptyArrayStorage;
  v12 = *(_QWORD *)(a1 + 16);
  if (v12)
  {
    v26 = v4;
    v29 = a4 & 1;
    v28 = v10 + 96;
    v27 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v13 = a1 + v27;
    v14 = *(_QWORD *)(v8 + 72);
    do
    {
      sub_10005B704(v13, (uint64_t)v10, type metadata accessor for Razzmatazz);
      v15 = *(void **)&v28[*(int *)(v31 + 32)];
      v16 = type metadata accessor for RazzmatazzController(0);
      v17 = sub_100048748(&qword_1011E1CE8, type metadata accessor for RazzmatazzController, (uint64_t)&unk_100EED488);
      v18 = StateObject.wrappedValue.getter(v32, v33, v29, v16, v17);
      KeyPath = swift_getKeyPath(&unk_100EEEA68);
      swift_getKeyPath(&unk_100EEEA90);
      static Published.subscript.getter(v34, v18, KeyPath);
      swift_release();
      swift_release();
      swift_release();
      v20 = objc_msgSend(objc_allocWithZone((Class)CLLocation), "initWithLatitude:longitude:", *(double *)&v34[4], *(double *)&v34[5]);
      swift_bridgeObjectRelease();
      objc_msgSend(v15, "distanceFromLocation:", v20, swift_bridgeObjectRelease().n128_f64[0]);
      v22 = v21;

      if (v22 > 85000.0)
      {
        sub_10005B748((uint64_t)v10, type metadata accessor for Razzmatazz);
      }
      else
      {
        sub_10005B6C0((uint64_t)v10, v30, type metadata accessor for Razzmatazz);
        v23 = v35;
        if ((swift_isUniquelyReferenced_nonNull_native(v35) & 1) == 0)
        {
          sub_100BCD3EC(0, v23[2] + 1, 1);
          v23 = v35;
        }
        v25 = v23[2];
        v24 = v23[3];
        if (v25 >= v24 >> 1)
        {
          sub_100BCD3EC(v24 > 1, v25 + 1, 1);
          v23 = v35;
        }
        v23[2] = v25 + 1;
        sub_10005B6C0(v30, (uint64_t)v23 + v27 + v25 * v14, type metadata accessor for Razzmatazz);
      }
      v13 += v14;
      --v12;
    }
    while (v12);
    return v35;
  }
  return result;
}

uint64_t sub_100C3008C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;

  v1[8] = a1;
  v2 = type metadata accessor for Artist(0);
  v1[9] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[10] = v3;
  v1[11] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_1011E1CF8);
  v1[12] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[13] = v5;
  v1[14] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011E1D00);
  v1[15] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v1[16] = v7;
  v1[17] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MusicFavoriteStatus(0);
  v1[18] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v1[19] = v9;
  v1[20] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011E1D08);
  v1[21] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v1[22] = v11;
  v1[23] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MainActor(0);
  v1[24] = static MainActor.shared.getter(v13);
  v14 = dispatch thunk of Actor.unownedExecutor.getter(v12, &protocol witness table for MainActor);
  v1[25] = v14;
  v1[26] = v15;
  return swift_task_switch(sub_100C301CC, v14, v15);
}

uint64_t sub_100C301CC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;
  __n128 v8;
  _QWORD *v9;

  v1 = v0[8];
  MusicLibraryRequest.init()(v0[9], &protocol witness table for Artist);
  AppStorage.wrappedValue.getter(v0 + 29, v1, &type metadata for Bool);
  if (*((_BYTE *)v0 + 232) == 1)
  {
    v3 = v0[20];
    v2 = v0[21];
    v4 = v0[18];
    v5 = v0[19];
    KeyPath = swift_getKeyPath(&unk_100EEE978);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v3, enum case for MusicFavoriteStatus.favorited(_:), v4);
    v7 = sub_100048748(&qword_1011E1D18, (uint64_t (*)(uint64_t))&type metadata accessor for MusicFavoriteStatus, (uint64_t)&protocol conformance descriptor for MusicFavoriteStatus);
    MusicLibraryRequest<>.filter<A>(matching:equalTo:)(KeyPath, v3, v2, &protocol witness table for Artist, v7);
    v8 = swift_release();
    (*(void (**)(uint64_t, uint64_t, __n128))(v5 + 8))(v3, v4, v8);
  }
  v9 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibraryRequest.response()[1]);
  v0[27] = v9;
  *v9 = v0;
  v9[1] = sub_100C302F4;
  return MusicLibraryRequest.response()(v0[17], v0[21]);
}

uint64_t sub_100C302F4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 216);
  *(_QWORD *)(*v1 + 224) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100C30590;
  else
    v4 = sub_100C30354;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 200), *(_QWORD *)(v2 + 208));
}

uint64_t sub_100C30354()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, _QWORD);
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = *(_QWORD *)(v0 + 128);
  v1 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 96);
  swift_release();
  MusicLibraryResponse.items.getter(v3);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v5 = sub_100049F28(&qword_1011E1D10, &qword_1011E1CF8, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  v6 = dispatch thunk of Collection.count.getter(v4, v5);
  if (!v6)
  {
LABEL_7:
    v22 = *(_QWORD *)(v0 + 176);
    v21 = *(_QWORD *)(v0 + 184);
    v23 = *(_QWORD *)(v0 + 168);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 96));
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
    v24 = *(_QWORD *)(v0 + 160);
    v25 = *(_QWORD *)(v0 + 136);
    v26 = *(_QWORD *)(v0 + 112);
    v27 = *(_QWORD *)(v0 + 88);
    swift_task_dealloc(*(_QWORD *)(v0 + 184));
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    return (*(uint64_t (**)(_QWORD *))(v0 + 8))(_swiftEmptyArrayStorage);
  }
  v7 = v6;
  v8 = v0 + 56;
  v9 = *(_QWORD *)(v0 + 96);
  sub_100BCD418(0, v6 & ~(v6 >> 63), 0);
  result = dispatch thunk of Collection.startIndex.getter(v9);
  if ((v7 & 0x8000000000000000) == 0)
  {
    v28 = v0 + 16;
    v11 = *(_QWORD *)(v0 + 80);
    do
    {
      v12 = *(_QWORD *)(v0 + 88);
      v13 = (void (*)(uint64_t, _QWORD))dispatch thunk of Collection.subscript.read(v28, v8, *(_QWORD *)(v0 + 96), v5);
      (*(void (**)(uint64_t))(v11 + 16))(v12);
      v13(v28, 0);
      v14 = v8;
      v15 = v5;
      v17 = _swiftEmptyArrayStorage[2];
      v16 = _swiftEmptyArrayStorage[3];
      if (v17 >= v16 >> 1)
        sub_100BCD418(v16 > 1, v17 + 1, 1);
      v18 = *(_QWORD *)(v0 + 88);
      v19 = *(_QWORD *)(v0 + 96);
      v20 = *(_QWORD *)(v0 + 72);
      _swiftEmptyArrayStorage[2] = v17 + 1;
      (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))((char *)_swiftEmptyArrayStorage+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v17, v18, v20);
      dispatch thunk of Collection.formIndex(after:)(v14, v19, v15);
      --v7;
      v5 = v15;
      v8 = v14;
    }
    while (v7);
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_100C30590()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  swift_release();
  if (qword_1011DE098 != -1)
    swift_once(&qword_1011DE098, sub_100C1E8B0);
  v1 = *(_QWORD *)(v0 + 224);
  v2 = type metadata accessor for Logger(0);
  sub_100048B14(v2, (uint64_t)qword_10124FE38);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 224);
  if (v6)
  {
    v8 = swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v21 = v9;
    *(_DWORD *)v8 = 136315138;
    *(_QWORD *)(v0 + 48) = v7;
    swift_errorRetain(v7);
    v10 = sub_100007E8C(&qword_1011DF550);
    v11 = (char *)String.init<A>(describing:)(v0 + 48, v10);
    *(_QWORD *)(v8 + 4) = sub_100BBDE38(v11, v12, &v21);
    swift_bridgeObjectRelease();
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Could not load favorite artists error=%s", (uint8_t *)v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 224));
    swift_errorRelease(v7);
  }

  v14 = *(_QWORD *)(v0 + 176);
  v13 = *(_QWORD *)(v0 + 184);
  v15 = *(_QWORD *)(v0 + 168);
  swift_errorRelease(*(_QWORD *)(v0 + 224));
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  v16 = *(_QWORD *)(v0 + 160);
  v17 = *(_QWORD *)(v0 + 136);
  v18 = *(_QWORD *)(v0 + 112);
  v19 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 184));
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(_QWORD *))(v0 + 8))(_swiftEmptyArrayStorage);
}

uint64_t sub_100C307AC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1011E140C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10006AEE4;
  return sub_100C1B2A0(a1, v4, v5, v7, v6);
}

uint64_t sub_100C30824(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  sub_100007E68(a1, v1);
  return dispatch thunk of LibraryArtistInternalFilter.favoriteStatus.getter(v1, v2);
}

uint64_t sub_100C30868@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100C2CB04(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_100C30870(__n128 a1)
{
  uint64_t v1;

  return sub_100C2CCC8(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_100C30878@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_100C2D0AC(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_100C30880()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E1D50;
  if (!qword_1011E1D50)
  {
    v1 = sub_100044B54(&qword_1011E1D40);
    sub_100049F28(&qword_1011E1D58, &qword_1011E1D60, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier2<A, B>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E1D50);
  }
  return result;
}

uint64_t sub_100C3090C()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_bridgeObjectRelease(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100C30940@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100C2B27C(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_100C30948()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E1DD8;
  if (!qword_1011E1DD8)
  {
    v1 = sub_100044B54(&qword_1011E1DB8);
    sub_1002CF61C(&qword_1011E1DE0, &qword_1011E1DE8, (void (*)(void))sub_100C309E4);
    sub_100049F28(&qword_1011E1AB8, &qword_1011E3EC0, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E1DD8);
  }
  return result;
}

unint64_t sub_100C309E4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011E1DF0;
  if (!qword_1011E1DF0)
  {
    v1 = sub_100044B54(&qword_1011E1DF8);
    v2[0] = sub_100044B54(&qword_1011E1E00);
    v2[1] = sub_100C30A90();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
    sub_100049F28(&qword_1011E0EA0, &qword_1011E0E58, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E1DF0);
  }
  return result;
}

unint64_t sub_100C30A90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E1E08;
  if (!qword_1011E1E08)
  {
    v1 = sub_100044B54(&qword_1011E1E00);
    sub_100049F28(&qword_1011E1E10, &qword_1011E1DB0, (uint64_t)&protocol conformance descriptor for HStack<A>);
    sub_100049F28((unint64_t *)&unk_1011E3BD0, &qword_1011E0EA8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E1E08);
  }
  return result;
}

unint64_t sub_100C30B2C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E1E18;
  if (!qword_1011E1E18)
  {
    v1 = sub_100044B54(&qword_1011E1DD0);
    sub_100C30B98();
    sub_100C30C3C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E1E18);
  }
  return result;
}

unint64_t sub_100C30B98()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E1E20;
  if (!qword_1011E1E20)
  {
    v1 = sub_100044B54(&qword_1011E1E28);
    sub_1008511F8(&qword_1011E1E30, &qword_1011E1E38, &qword_1011E1E40, &qword_1011E1E48);
    sub_100049F28((unint64_t *)&unk_1011E3BD0, &qword_1011E0EA8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E1E20);
  }
  return result;
}

unint64_t sub_100C30C3C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E1E50;
  if (!qword_1011E1E50)
  {
    v1 = sub_100044B54(&qword_1011E1E58);
    sub_100048748(&qword_1011E1E60, type metadata accessor for RazzmatazzView.CompactListCell, (uint64_t)&unk_100EEE868);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E1E50);
  }
  return result;
}

uint64_t sub_100C30CB8()
{
  uint64_t v0;

  return sub_100C2C2D4(*(_QWORD *)(v0 + 16));
}

unint64_t sub_100C30CC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E1E68;
  if (!qword_1011E1E68)
  {
    v1 = sub_100044B54(&qword_1011E1DA0);
    sub_1002CF61C(&qword_1011E1E70, &qword_1011E1E78, (void (*)(void))sub_100C30D5C);
    sub_100049F28(&qword_1011E1AB8, &qword_1011E3EC0, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E1E68);
  }
  return result;
}

unint64_t sub_100C30D5C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011E1E80;
  if (!qword_1011E1E80)
  {
    v1 = sub_100044B54(&qword_1011E1E88);
    v2[0] = sub_100044B54(&qword_1011E1E90);
    v2[1] = sub_1008511F8(&qword_1011E1E98, &qword_1011E1E90, (unint64_t *)&unk_1011E3BD0, &qword_1011E0EA8);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
    sub_100049F28(&qword_1011E0EA0, &qword_1011E0E58, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E1E80);
  }
  return result;
}

double sub_100C30E44@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_100C2C4D4(a1, (uint64_t *)(v2 + 16), a2);
}

uint64_t sub_100C30E68()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  __int128 v4;

  v4 = *(_OWORD *)(v0 + 56);
  v3 = 1;
  v1 = sub_100007E8C(&qword_1011E1B98);
  return State.wrappedValue.setter(&v3, v1);
}

uint64_t sub_100C30EB8()
{
  uint64_t v0;

  swift_release();
  sub_1000A6174(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  swift_release();
  swift_release();
  return swift_deallocObject(v0, 80);
}

unint64_t sub_100C30F04()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E1EC8;
  if (!qword_1011E1EC8)
  {
    v1 = sub_100044B54(&qword_1011E1C88);
    sub_100C30F88();
    sub_100049F28(&qword_1011E1EF0, &qword_1011E1C90, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E1EC8);
  }
  return result;
}

unint64_t sub_100C30F88()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E1ED0;
  if (!qword_1011E1ED0)
  {
    v1 = sub_100044B54(&qword_1011E1C78);
    sub_1002CF61C(&qword_1011E1ED8, &qword_1011E1C70, (void (*)(void))sub_100C31024);
    sub_100049F28(&qword_1011E1AB8, &qword_1011E3EC0, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E1ED0);
  }
  return result;
}

unint64_t sub_100C31024()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E1EE0;
  if (!qword_1011E1EE0)
  {
    v1 = sub_100044B54(&qword_1011E1C68);
    sub_100049F28(&qword_1011E1EE8, &qword_1011E1C60, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E1EE0);
  }
  return result;
}

uint64_t Logger.artwork.unsafeMutableAddressor()
{
  return sub_100C3138C(&qword_1011DE0F0, (uint64_t (*)(_QWORD))&type metadata accessor for Logger, (uint64_t)static Logger.artwork, (uint64_t)sub_100C39C4C);
}

uint64_t MPModelPlaylistType.variant.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned int *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  switch(a1)
  {
    case 0:
      v3 = (unsigned int *)&enum case for Playlist.Variant.regular(_:);
      goto LABEL_10;
    case 1:
      v3 = (unsigned int *)&enum case for Playlist.Variant.smart(_:);
      goto LABEL_10;
    case 2:
      v3 = (unsigned int *)&enum case for Playlist.Variant.genius(_:);
      goto LABEL_10;
    case 3:
      v3 = (unsigned int *)&enum case for Playlist.Variant.folder(_:);
      goto LABEL_10;
    case 4:
    case 5:
    case 6:
    case 8:
      v3 = (unsigned int *)&enum case for Playlist.Variant.subscribed(_:);
      goto LABEL_10;
    case 7:
      v3 = (unsigned int *)&enum case for Playlist.Variant.personalMix(_:);
      goto LABEL_10;
    case 9:
      v3 = (unsigned int *)&enum case for Playlist.Variant.favoriteSongs(_:);
LABEL_10:
      v8 = *v3;
      v9 = type metadata accessor for Playlist.Variant(0);
      v10 = *(_QWORD *)(v9 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 104))(a2, v8, v9);
      v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
      v6 = a2;
      v7 = 0;
      v4 = v9;
      break;
    default:
      v4 = type metadata accessor for Playlist.Variant(0);
      v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56);
      v6 = a2;
      v7 = 1;
      break;
  }
  return v5(v6, v7, 1, v4);
}

uint64_t Playlist.Variant.symbolName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  uint64_t v8;

  v1 = v0;
  v2 = type metadata accessor for Playlist.Variant(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == enum case for Playlist.Variant.smart(_:))
    return 0x7061687372616567;
  if (v6 == enum case for Playlist.Variant.genius(_:))
    return 0x7375696E6567;
  if (v6 == enum case for Playlist.Variant.folder(_:))
    return 0x7265646C6F66;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return 0x6F6E2E636973756DLL;
}

uint64_t ArtworkImage.ViewModel.init(artwork:cropStyle:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a3, a1, v6);
  v7 = type metadata accessor for ArtworkImage.ViewModel(0);
  return sub_100065228(a2, a3 + *(int *)(v7 + 20), &qword_1011DEFB0);
}

uint64_t Artwork.CropStyle.fallback.unsafeMutableAddressor()
{
  return sub_100C3138C(&qword_1011DE0E0, (uint64_t (*)(_QWORD))&type metadata accessor for Artwork.CropStyle, (uint64_t)static Artwork.CropStyle.fallback, (uint64_t)sub_100C39A7C);
}

uint64_t sub_100C3138C(_QWORD *a1, uint64_t (*a2)(_QWORD), uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  if (*a1 != -1)
    swift_once(a1, a4);
  v6 = a2(0);
  return sub_100048B14(v6, a3);
}

uint64_t Artwork.ImageFormat.fallback.unsafeMutableAddressor()
{
  return sub_100C3138C(&qword_1011DE0E8, (uint64_t (*)(_QWORD))&type metadata accessor for Artwork.ImageFormat, (uint64_t)static Artwork.ImageFormat.fallback, (uint64_t)sub_100C39AE8);
}

uint64_t sub_100C313F4@<X0>(uint64_t a1@<X8>)
{
  return sub_100C31608(&qword_1011E4D50, (uint64_t (*)(_QWORD))&type metadata accessor for DismissAction, (char *)0x417373696D736944, (char *)0xED00006E6F697463, a1);
}

uint64_t sub_100C31428(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __n128 v8;
  os_log_type_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 0x100) == 0)
  {
    v8 = swift_retain();
    v9 = static os_log_type_t.fault.getter(v8);
    v10 = static Log.runtimeIssuesLog.getter();
    if (os_log_type_enabled(v10, v9))
    {
      v11 = swift_slowAlloc(12, -1);
      v12 = swift_slowAlloc(32, -1);
      v14 = v12;
      *(_DWORD *)v11 = 136315138;
      *(_QWORD *)(v11 + 4) = sub_100BBDE38((char *)0xD000000000000011, (char *)0x8000000100E563B0, &v14);
      _os_log_impl((void *)&_mh_execute_header, v10, v9, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v11, 0xCu);
      swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v12, -1, -1);
      swift_slowDealloc(v11, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v7, a1);
    sub_10006B5F8(a1, a2, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v14;
  }
  return a1;
}

uint64_t sub_100C315D4@<X0>(uint64_t a1@<X8>)
{
  return sub_100C31608((uint64_t *)&unk_1011DE420, (uint64_t (*)(_QWORD))&type metadata accessor for LayoutDirection, (char *)0x694474756F79614CLL, (char *)0xEF6E6F6974636572, a1);
}

uint64_t sub_100C31608@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, char *a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v21;
  os_log_type_t v22;
  NSObject *v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  char *v27;
  uint64_t v28;

  v27 = a4;
  v9 = v5;
  v11 = type metadata accessor for EnvironmentValues(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin();
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(a1);
  __chkstk_darwin();
  v17 = (uint64_t *)((char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10004A160(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload(v17, v15) == 1)
  {
    v19 = a2(0);
    return (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a5, v17, v19);
  }
  else
  {
    v21 = *v17;
    v22 = static os_log_type_t.fault.getter(v18);
    v23 = static Log.runtimeIssuesLog.getter();
    if (os_log_type_enabled(v23, v22))
    {
      v24 = swift_slowAlloc(12, -1);
      v25 = swift_slowAlloc(32, -1);
      v28 = v25;
      *(_DWORD *)v24 = 136315138;
      *(_QWORD *)(v24 + 4) = sub_100BBDE38(a3, v27, &v28);
      _os_log_impl((void *)&_mh_execute_header, v23, v22, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v24, 0xCu);
      swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v25, -1, -1);
      swift_slowDealloc(v24, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v14, v21);
    v26 = swift_release();
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v26);
  }
}

uint64_t sub_100C31810@<X0>(uint64_t a1@<X8>)
{
  return sub_100C31608(&qword_1011DE430, (uint64_t (*)(_QWORD))&type metadata accessor for DynamicTypeSize, (char *)0x5463696D616E7944, (char *)0xEF657A6953657079, a1);
}

uint64_t sub_100C31844(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __n128 v8;
  os_log_type_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  unsigned __int8 v15;

  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    return a1 & 1;
  v8 = swift_retain();
  v9 = static os_log_type_t.fault.getter(v8);
  v10 = static Log.runtimeIssuesLog.getter();
  if (os_log_type_enabled(v10, v9))
  {
    v11 = swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    v14 = v12;
    *(_DWORD *)v11 = 136315138;
    *(_QWORD *)(v11 + 4) = sub_100BBDE38((char *)0x6C6F6F42, (char *)0xE400000000000000, &v14);
    _os_log_impl((void *)&_mh_execute_header, v10, v9, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath(v7, a1);
  sub_10006B604(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v15;
}

uint64_t sub_100C319D0@<X0>(uint64_t a1@<X8>)
{
  return sub_100C31608(&qword_1011DE4A8, (uint64_t (*)(_QWORD))&type metadata accessor for ColorScheme, (char *)0x686353726F6C6F43, (char *)0xEB00000000656D65, a1);
}

uint64_t sub_100C31A00@<X0>(uint64_t a1@<X8>)
{
  return sub_100C31A2C(&qword_1011DE440, &qword_1011DE740, (char *)0xD000000000000020, (char *)0x8000000100E465E0, a1);
}

uint64_t sub_100C31A2C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, char *a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  __n128 v18;
  uint64_t v20;
  os_log_type_t v21;
  NSObject *v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  char *v26;
  uint64_t v27;

  v26 = a4;
  v9 = v5;
  v11 = type metadata accessor for EnvironmentValues(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(a1);
  __chkstk_darwin(v15);
  v17 = (uint64_t *)((char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10004A160(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload(v17, v15) == 1)
    return sub_100065228((uint64_t)v17, a5, a2);
  v20 = *v17;
  v21 = static os_log_type_t.fault.getter(v18);
  v22 = static Log.runtimeIssuesLog.getter();
  if (os_log_type_enabled(v22, v21))
  {
    v23 = swift_slowAlloc(12, -1);
    v24 = swift_slowAlloc(32, -1);
    v27 = v24;
    *(_DWORD *)v23 = 136315138;
    *(_QWORD *)(v23 + 4) = sub_100BBDE38(a3, v26, &v27);
    _os_log_impl((void *)&_mh_execute_header, v22, v21, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v23, 0xCu);
    swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v23, -1, -1);
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath(v14, v20);
  v25 = swift_release();
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v25);
}

uint64_t sub_100C31C24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __n128 v10;
  os_log_type_t v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v17;
  uint64_t v18;

  v6 = type metadata accessor for EnvironmentValues(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 0x100) != 0)
  {
    sub_1002CF810(a1, a2);
  }
  else
  {
    v10 = swift_retain();
    v11 = static os_log_type_t.fault.getter(v10);
    v12 = static Log.runtimeIssuesLog.getter();
    if (os_log_type_enabled(v12, v11))
    {
      v13 = swift_slowAlloc(12, -1);
      v14 = swift_slowAlloc(32, -1);
      v18 = v14;
      *(_DWORD *)v13 = 136315138;
      *(_QWORD *)(v13 + 4) = sub_100BBDE38((char *)0xD000000000000019, (char *)0x8000000100E56390, &v18);
      _os_log_impl((void *)&_mh_execute_header, v12, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v13, 0xCu);
      swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v14, -1, -1);
      swift_slowDealloc(v13, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v9, a1);
    v15 = sub_100C43AEC(a1, a2, a3, 0);
    (*(void (**)(char *, uint64_t, double))(v7 + 8))(v9, v6, v15);
    return v18;
  }
  return a1;
}

uint64_t sub_100C31DE8(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __n128 v8;
  os_log_type_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  unsigned __int8 v15;

  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0)
  {
    v8 = swift_retain();
    v9 = static os_log_type_t.fault.getter(v8);
    v10 = static Log.runtimeIssuesLog.getter();
    if (os_log_type_enabled(v10, v9))
    {
      v11 = swift_slowAlloc(12, -1);
      v12 = swift_slowAlloc(32, -1);
      v14 = v12;
      *(_DWORD *)v11 = 136315138;
      *(_QWORD *)(v11 + 4) = sub_100BBDE38((char *)0xD000000000000017, (char *)0x8000000100E56370, &v14);
      _os_log_impl((void *)&_mh_execute_header, v10, v9, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v11, 0xCu);
      swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v12, -1, -1);
      swift_slowDealloc(v11, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v7, a1);
    sub_10006B604(a1, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v15;
  }
  return a1;
}

uint64_t sub_100C31F7C(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __n128 v8;
  os_log_type_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v15;
  uint64_t v16;

  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = swift_retain();
  if ((a2 & 1) == 0)
  {
    v9 = static os_log_type_t.fault.getter(v8);
    v10 = static Log.runtimeIssuesLog.getter();
    if (os_log_type_enabled(v10, v9))
    {
      v11 = swift_slowAlloc(12, -1);
      v12 = swift_slowAlloc(32, -1);
      v16 = v12;
      *(_DWORD *)v11 = 136315138;
      *(_QWORD *)(v11 + 4) = sub_100BBDE38((char *)0x6C616E6F6974704FLL, (char *)0xEF3E726F6C6F433CLL, &v16);
      _os_log_impl((void *)&_mh_execute_header, v10, v9, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v11, 0xCu);
      swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v12, -1, -1);
      swift_slowDealloc(v11, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v7, a1);
    v13 = j__swift_release_1(a1);
    (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v13);
    return v16;
  }
  return a1;
}

uint64_t sub_100C32118@<X0>(uint64_t a1@<X8>)
{
  return sub_100C31608((uint64_t *)&unk_1011DE410, (uint64_t (*)(_QWORD))&type metadata accessor for ColorSchemeContrast, (char *)0xD000000000000013, (char *)0x8000000100E56350, a1);
}

uint64_t ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, char a7@<W6>, uint64_t a8@<X8>)
{
  *(_QWORD *)a8 = result;
  *(_BYTE *)(a8 + 8) = a2 & 1;
  *(_QWORD *)(a8 + 16) = a3;
  *(_BYTE *)(a8 + 24) = a4 & 1;
  *(_QWORD *)(a8 + 32) = a5;
  *(_BYTE *)(a8 + 40) = a6 & 1;
  *(_BYTE *)(a8 + 41) = a7;
  return result;
}

uint64_t static ArtworkImage.with(_:placeholder:size:reusePolicy:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _OWORD *v56;
  __int128 v57;
  uint64_t v58;
  unint64_t v59;
  char *v60;
  __n128 v61;
  char *v63;
  uint64_t v64;
  unsigned int (*v65)(char *, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;

  v67 = a4;
  v78 = a2;
  v75 = a5;
  v7 = type metadata accessor for ArtworkImage.Placeholder(0);
  v76 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v77 = v8;
  v71 = (uint64_t)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011DEFB0);
  __chkstk_darwin(v9);
  v11 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Artwork.CropStyle(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C(&qword_1011E1AD0);
  v72 = *(_QWORD *)(v16 - 8);
  v73 = v16;
  __chkstk_darwin(v16);
  v70 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100007E8C((uint64_t *)&unk_1011E4DA0);
  v19 = __chkstk_darwin(v18);
  v66 = (uint64_t)&v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v22 = (char *)&v63 - v21;
  v23 = sub_100007E8C((uint64_t *)&unk_1011E4A00);
  __chkstk_darwin(v23);
  v25 = (char *)&v63 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = type metadata accessor for ArtworkImage(0);
  v26 = *(_QWORD *)(v74 - 8);
  v27 = __chkstk_darwin(v74);
  v79 = (char *)&v63 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __chkstk_darwin(v27);
  v69 = (char *)&v63 - v30;
  v31 = __chkstk_darwin(v29);
  v33 = (char *)&v63 - v32;
  __chkstk_darwin(v31);
  v80 = (char *)&v63 - v34;
  v68 = a1;
  sub_10004A160(a1, (uint64_t)v22, (uint64_t *)&unk_1011E4DA0);
  v35 = type metadata accessor for ArtworkImage.ViewModel(0);
  v65 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 48);
  if (v65(v22, 1, v35) == 1)
  {
    sub_10004FF60((uint64_t)v22, (uint64_t *)&unk_1011E4DA0);
    v36 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v25, 1, 1, v36);
  }
  else
  {
    v37 = type metadata accessor for Artwork(0);
    v63 = v33;
    v64 = a3;
    v38 = v11;
    v39 = v15;
    v40 = v13;
    v41 = v12;
    v42 = v37;
    v43 = v26;
    v44 = *(_QWORD *)(v37 - 8);
    (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v25, v22, v37);
    sub_10005B748((uint64_t)v22, type metadata accessor for ArtworkImage.ViewModel);
    v45 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56);
    v26 = v43;
    v46 = v42;
    v12 = v41;
    v13 = v40;
    v15 = v39;
    v11 = v38;
    v33 = v63;
    a3 = v64;
    v45(v25, 0, 1, v46);
  }
  sub_100C32B74((uint64_t)v25, *(_QWORD *)a3, *(_BYTE *)(a3 + 8), *(_QWORD *)(a3 + 16), *(_BYTE *)(a3 + 24));
  ArtworkImage.artworkReusablePolicy(_:)(v67);
  v47 = v66;
  sub_10004A160(v68, v66, (uint64_t *)&unk_1011E4DA0);
  if (v65((char *)v47, 1, v35) == 1)
  {
    sub_10004FF60(v47, (uint64_t *)&unk_1011E4DA0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
  }
  else
  {
    sub_10004A160(v47 + *(int *)(v35 + 20), (uint64_t)v11, &qword_1011DEFB0);
    sub_10005B748(v47, type metadata accessor for ArtworkImage.ViewModel);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
      goto LABEL_11;
    }
  }
  if (qword_1011DE0E0 != -1)
    swift_once(&qword_1011DE0E0, sub_100C39A7C);
  v48 = sub_100048B14(v12, (uint64_t)static Artwork.CropStyle.fallback);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v48, v12);
  sub_10004FF60((uint64_t)v11, &qword_1011DEFB0);
LABEL_11:
  v49 = v69;
  v50 = v79;
  ArtworkImage.artworkCropStyle(_:)(v15);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v51 = *(void (**)(char *, uint64_t))(v26 + 8);
  v52 = v74;
  v51(v50, v74);
  ArtworkImage.artworkIdealAspectRatio(_:contentMode:)(*(_QWORD *)(a3 + 32), *(unsigned __int8 *)(a3 + 40), *(unsigned __int8 *)(a3 + 41));
  v51(v49, v52);
  v53 = v71;
  sub_10005B704(v78, v71, type metadata accessor for ArtworkImage.Placeholder);
  v54 = *(unsigned __int8 *)(v76 + 80);
  v55 = (v54 + 58) & ~v54;
  v56 = (_OWORD *)swift_allocObject(&unk_10110A478, v55 + v77, v54 | 7);
  v57 = *(_OWORD *)(a3 + 16);
  v56[1] = *(_OWORD *)a3;
  v56[2] = v57;
  *(_OWORD *)((char *)v56 + 42) = *(_OWORD *)(a3 + 26);
  sub_10005B6C0(v53, (uint64_t)v56 + v55, type metadata accessor for ArtworkImage.Placeholder);
  v58 = sub_100007E8C((uint64_t *)&unk_1011E3D90);
  v59 = sub_100C39DFC();
  v60 = v70;
  ArtworkImage.artworkPlaceholder<A>(_:)(sub_100C39D8C, v56, v58, v59);
  v61 = swift_release(v56);
  ((void (*)(char *, uint64_t, __n128))v51)(v33, v52, v61);
  v51(v80, v52);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v72 + 32))(v75, v60, v73);
}

uint64_t ArtworkImage.ViewModel.artwork.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Artwork(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t ArtworkImage.ViewModel.cropStyle.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100C32840(type metadata accessor for ArtworkImage.ViewModel, (uint64_t)&qword_1011DEFB0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, a1);
}

uint64_t ArtworkImage.ViewModel.calculatedAspectRatio.getter()
{
  double v0;
  uint64_t result;

  if (Artwork.maximumWidth.getter() < 1 || Artwork.maximumHeight.getter() < 1)
  {
    *(double *)&result = 0.0;
  }
  else
  {
    v0 = (double)Artwork.maximumWidth.getter();
    *(double *)&result = v0 / (double)Artwork.maximumHeight.getter();
  }
  return result;
}

uint64_t ArtworkImage.Info.viewModel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10004A160(v1, a1, (uint64_t *)&unk_1011E4DA0);
}

uint64_t ArtworkImage.Info.placeholder.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100C32840(type metadata accessor for ArtworkImage.Info, (uint64_t)type metadata accessor for ArtworkImage.Placeholder, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10005B704, a1);
}

uint64_t sub_100C32840@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;

  v8 = a1(0);
  return a3(v4 + *(int *)(v8 + 20), a4, a2);
}

uint64_t ArtworkImage.Info.aspectRatio.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for ArtworkImage.Info(0) + 24));
}

uint64_t ArtworkImage.Info.size.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;

  result = type metadata accessor for ArtworkImage.Info(0);
  v4 = (uint64_t *)(v1 + *(int *)(result + 28));
  v5 = *v4;
  v6 = *((_BYTE *)v4 + 8);
  v7 = v4[2];
  v8 = *((_BYTE *)v4 + 24);
  v9 = v4[4];
  v10 = *((_BYTE *)v4 + 40);
  LOBYTE(v4) = *((_BYTE *)v4 + 41);
  *(_QWORD *)a1 = v5;
  *(_BYTE *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = v7;
  *(_BYTE *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = v9;
  *(_BYTE *)(a1 + 40) = v10;
  *(_BYTE *)(a1 + 41) = (_BYTE)v4;
  return result;
}

uint64_t ArtworkImage.Info.corner.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for ArtworkImage.Info(0) + 32));
}

__n128 ArtworkImage.Info.init(viewModel:placeholder:aspectRatio:size:corner:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>)
{
  int *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __n128 result;
  uint64_t v22;

  sub_100065228(a1, a9, (uint64_t *)&unk_1011E4DA0);
  v17 = (int *)type metadata accessor for ArtworkImage.Info(0);
  sub_10005B6C0(a2, a9 + v17[5], type metadata accessor for ArtworkImage.Placeholder);
  v18 = a9 + v17[6];
  *(_QWORD *)v18 = a3;
  *(_BYTE *)(v18 + 8) = a4 & 1;
  v19 = a9 + v17[7];
  v20 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)v19 = *(_OWORD *)a5;
  *(_OWORD *)(v19 + 16) = v20;
  result = *(__n128 *)(a5 + 26);
  *(__n128 *)(v19 + 26) = result;
  v22 = a9 + v17[8];
  *(_QWORD *)v22 = a6;
  *(_QWORD *)(v22 + 8) = a7;
  *(_BYTE *)(v22 + 16) = a8 & 1;
  return result;
}

uint64_t ArtworkImage.Size.height.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t ArtworkImage.Size.height.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = result;
  *(_BYTE *)(v2 + 24) = a2 & 1;
  return result;
}

uint64_t ArtworkImage.Size.fittingAspectRatio.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = result;
  *(_BYTE *)(v2 + 40) = a2 & 1;
  return result;
}

uint64_t ArtworkImage.Size.init(cgSize:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  char v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a3 & 1;
  if ((a3 & 1) != 0)
    v5 = 0;
  else
    v5 = result;
  *(_QWORD *)a4 = v5;
  *(_BYTE *)(a4 + 8) = v4;
  if ((a3 & 1) != 0)
    v6 = 0;
  else
    v6 = a2;
  *(_QWORD *)(a4 + 16) = v6;
  *(_BYTE *)(a4 + 24) = v4;
  *(_QWORD *)(a4 + 32) = 0;
  *(_WORD *)(a4 + 40) = 513;
  return result;
}

void *CGFloat.squareAspectRatio.unsafeMutableAddressor()
{
  return &static CGFloat.squareAspectRatio;
}

uint64_t ArtworkImage.Size.init(width:aspectRatio:fittingAspectRatio:)@<X0>(uint64_t result@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, uint64_t a5@<X8>, double a6@<D0>)
{
  double v6;

  v6 = 0.0;
  if ((a2 & 1) == 0)
  {
    v6 = *(double *)&result / a6;
    if ((a4 & 1) == 0 && a3 > a6)
    {
      v6 = *(double *)&result / a3;
      *(double *)&result = *(double *)&result / a3 * a6;
    }
  }
  *(double *)a5 = *(double *)&result;
  *(_BYTE *)(a5 + 8) = a2 & 1;
  *(double *)(a5 + 16) = v6;
  *(_BYTE *)(a5 + 24) = a2 & 1;
  *(double *)(a5 + 32) = a3;
  *(_BYTE *)(a5 + 40) = a4 & 1;
  *(_BYTE *)(a5 + 41) = 2;
  return result;
}

uint64_t ArtworkImage.Size.init(height:aspectRatio:fittingAspectRatio:)@<X0>(uint64_t result@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, uint64_t a5@<X8>, double a6@<D0>)
{
  double v6;

  v6 = 0.0;
  if ((a2 & 1) == 0)
  {
    v6 = *(double *)&result * a6;
    if ((a4 & 1) == 0 && a3 < a6)
    {
      v6 = *(double *)&result * a3;
      *(double *)&result = *(double *)&result * a3 / a6;
    }
  }
  *(double *)a5 = v6;
  *(_BYTE *)(a5 + 8) = a2 & 1;
  *(double *)(a5 + 16) = *(double *)&result;
  *(_BYTE *)(a5 + 24) = a2 & 1;
  *(double *)(a5 + 32) = a3;
  *(_BYTE *)(a5 + 40) = a4 & 1;
  *(_BYTE *)(a5 + 41) = 2;
  return result;
}

uint64_t sub_100C32B2C(__int128 *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;
  _OWORD v8[2];

  v2 = a1[1];
  v5 = *a1;
  v6[0] = v2;
  *(_OWORD *)((char *)v6 + 10) = *(__int128 *)((char *)a1 + 26);
  v3 = a2[1];
  v7 = *a2;
  v8[0] = v3;
  *(_OWORD *)((char *)v8 + 10) = *(__int128 *)((char *)a2 + 26);
  return _s17_MusicKit_SwiftUI12ArtworkImageV0a4CoreD0E4SizeV23__derived_struct_equalsySbAF_AFtFZ_0((uint64_t)&v5, (uint64_t)&v7) & 1;
}

uint64_t sub_100C32B74(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  uint64_t v15;

  v10 = sub_100007E8C((uint64_t *)&unk_1011E4A00);
  __chkstk_darwin(v10);
  v12 = (v11 + 15) & 0xFFFFFFFFFFFFFFF0;
  v13 = (char *)&v15 - v12;
  if ((a3 & 1) != 0)
  {
    sub_10004A160(a1, (uint64_t)&v15 - v12, (uint64_t *)&unk_1011E4A00);
    if ((a5 & 1) != 0)
      ArtworkImage.init(_:)(v13);
    else
      ArtworkImage.init(_:height:)(v13, *(double *)&a4);
  }
  else
  {
    sub_10004A160(a1, (uint64_t)&v15 - v12, (uint64_t *)&unk_1011E4A00);
    if ((a5 & 1) != 0)
      ArtworkImage.init(_:width:)(v13, *(double *)&a2);
    else
      ArtworkImage.init(_:width:height:)(v13, *(double *)&a2, *(double *)&a4);
  }
  return sub_10004FF60(a1, (uint64_t *)&unk_1011E4A00);
}

uint64_t sub_100C32CC4@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t (**v9)@<X0>(uint64_t@<X8>);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  __int128 v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _OWORD *v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _OWORD v65[3];
  _BYTE v66[16];
  uint64_t v67;
  char v68;

  v61 = a2;
  v64 = a3;
  v4 = type metadata accessor for ArtworkImage.Placeholder(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_100007E8C(&qword_1011E2728);
  __chkstk_darwin(v63);
  v9 = (uint64_t (**)@<X0>(uint64_t@<X8>))((char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = type metadata accessor for ArtworkImage.Placeholder.View(0);
  v11 = __chkstk_darwin(v10);
  v13 = (uint64_t *)((char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  v15 = (char *)&v58 - v14;
  v58 = sub_100007E8C(&qword_1011E1F20);
  __chkstk_darwin(v58);
  v17 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_100007E8C(&qword_1011E1F18);
  v18 = __chkstk_darwin(v62);
  v59 = (uint64_t)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v60 = (uint64_t)&v58 - v20;
  sub_100065228(a1, (uint64_t)v66, &qword_1011E2760);
  sub_100065228((uint64_t)v66, (uint64_t)&v67, &qword_1011E2760);
  if ((v68 & 1) != 0 || (*(_BYTE *)(a1 + 24) & 1) != 0)
  {
    sub_10005B704(v61, (uint64_t)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ArtworkImage.Placeholder);
    v21 = *(unsigned __int8 *)(v5 + 80);
    v22 = (v21 + 16) & ~v21;
    v23 = (v6 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
    v24 = swift_allocObject(&unk_10110A868, v23 + 42, v21 | 7);
    sub_10005B6C0((uint64_t)v7, v24 + v22, type metadata accessor for ArtworkImage.Placeholder);
    v25 = (_OWORD *)(v24 + v23);
    v26 = *(_OWORD *)(a1 + 16);
    *v25 = *(_OWORD *)a1;
    v25[1] = v26;
    *(_OWORD *)((char *)v25 + 26) = *(_OWORD *)(a1 + 26);
    *v9 = sub_100C43FB8;
    v9[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v24;
    swift_storeEnumTagMultiPayload(v9, v63, 1);
    v27 = sub_100007E8C((uint64_t *)&unk_1011E3DE0);
    v28 = sub_100C39E80();
    v29 = sub_100049F28(&qword_1011E1F30, (uint64_t *)&unk_1011E3DE0, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
    return _ConditionalContent<>.init(storage:)(v9, v62, v27, v28, v29);
  }
  else
  {
    v31 = *(_QWORD *)(a1 + 16);
    v32 = v67;
    sub_100C34998();
    v34 = v33;
    v36 = v35;
    sub_100C34998();
    v38 = v37;
    swift_bridgeObjectRelease(v39);
    sub_100C34998();
    v41 = v40;
    swift_bridgeObjectRelease(v42);
    v43 = (_QWORD *)((char *)v13 + *(int *)(v10 + 32));
    *v43 = swift_getKeyPath(&unk_100EEEB70);
    v44 = sub_100007E8C(&qword_1011DE408);
    swift_storeEnumTagMultiPayload(v43, v44, 0);
    v45 = (_QWORD *)((char *)v13 + *(int *)(v10 + 36));
    *v45 = swift_getKeyPath(&unk_100EEEB98);
    v46 = sub_100007E8C((uint64_t *)&unk_1011DE410);
    swift_storeEnumTagMultiPayload(v45, v46, 0);
    *v13 = v34;
    v13[1] = v36;
    v13[2] = v38;
    v13[3] = v32;
    v13[4] = v31;
    v13[5] = v41;
    sub_10005B6C0((uint64_t)v13, (uint64_t)v15, type metadata accessor for ArtworkImage.Placeholder.View);
    sub_10005B704((uint64_t)v15, (uint64_t)v17, type metadata accessor for ArtworkImage.Placeholder.View);
    v17[*(int *)(v58 + 36)] = 0;
    v47 = sub_10005B748((uint64_t)v15, type metadata accessor for ArtworkImage.Placeholder.View);
    v48 = static Alignment.center.getter(v47);
    _FrameLayout.init(width:height:alignment:)(v65, v32, 0, v31, 0, v48, v49);
    v50 = v59;
    sub_10004A160((uint64_t)v17, v59, &qword_1011E1F20);
    v51 = v62;
    v52 = (_OWORD *)(v50 + *(int *)(v62 + 36));
    v53 = v65[1];
    *v52 = v65[0];
    v52[1] = v53;
    v52[2] = v65[2];
    sub_10004FF60((uint64_t)v17, &qword_1011E1F20);
    v54 = v60;
    sub_100065228(v50, v60, &qword_1011E1F18);
    sub_10004A160(v54, (uint64_t)v9, &qword_1011E1F18);
    swift_storeEnumTagMultiPayload(v9, v63, 0);
    v55 = sub_100007E8C((uint64_t *)&unk_1011E3DE0);
    v56 = sub_100C39E80();
    v57 = sub_100049F28(&qword_1011E1F30, (uint64_t *)&unk_1011E3DE0, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
    _ConditionalContent<>.init(storage:)(v9, v51, v55, v56, v57);
    return sub_10004FF60(v54, &qword_1011E1F18);
  }
}

uint64_t ArtworkImage.Placeholder.view(availableSize:)@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v27;

  v6 = type metadata accessor for ArtworkImage.Placeholder.View(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v27 - v10;
  sub_100C34998();
  v13 = v12;
  v15 = v14;
  sub_100C34998();
  v17 = v16;
  swift_bridgeObjectRelease(v18);
  sub_100C34998();
  v20 = v19;
  swift_bridgeObjectRelease(v21);
  v22 = &v8[*(int *)(v6 + 32)];
  *(_QWORD *)v22 = swift_getKeyPath(&unk_100EEEB70);
  v23 = sub_100007E8C(&qword_1011DE408);
  swift_storeEnumTagMultiPayload(v22, v23, 0);
  v24 = &v8[*(int *)(v6 + 36)];
  *(_QWORD *)v24 = swift_getKeyPath(&unk_100EEEB98);
  v25 = sub_100007E8C((uint64_t *)&unk_1011DE410);
  swift_storeEnumTagMultiPayload(v24, v25, 0);
  *(_QWORD *)v8 = v13;
  *((_QWORD *)v8 + 1) = v15;
  *((_QWORD *)v8 + 2) = v17;
  *((double *)v8 + 3) = a2;
  *((double *)v8 + 4) = a3;
  *((_QWORD *)v8 + 5) = v20;
  sub_10005B6C0((uint64_t)v8, (uint64_t)v11, type metadata accessor for ArtworkImage.Placeholder.View);
  sub_10005B704((uint64_t)v11, a1, type metadata accessor for ArtworkImage.Placeholder.View);
  *(_BYTE *)(a1 + *(int *)(sub_100007E8C(&qword_1011E1F20) + 36)) = 0;
  return sub_10005B748((uint64_t)v11, type metadata accessor for ArtworkImage.Placeholder.View);
}

uint64_t sub_100C33318@<X0>(uint64_t *a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _OWORD *v38;
  __int128 v39;
  uint64_t v41;
  uint64_t v42;
  _OWORD v43[3];

  v42 = a2;
  v3 = type metadata accessor for ArtworkImage.Placeholder.View(0);
  v4 = __chkstk_darwin(v3);
  v6 = (double *)((char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v4);
  v8 = (char *)&v41 - v7;
  v9 = sub_100007E8C(&qword_1011E1F20);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = GeometryProxy.size.getter(v10);
  v15 = v14;
  sub_100C34998();
  v17 = v16;
  v19 = v18;
  sub_100C34998();
  v21 = v20;
  swift_bridgeObjectRelease(v22);
  sub_100C34998();
  v24 = v23;
  swift_bridgeObjectRelease(v25);
  v26 = (_QWORD *)((char *)v6 + *(int *)(v3 + 32));
  *v26 = swift_getKeyPath(&unk_100EEEB70);
  v27 = sub_100007E8C(&qword_1011DE408);
  swift_storeEnumTagMultiPayload(v26, v27, 0);
  v28 = (_QWORD *)((char *)v6 + *(int *)(v3 + 36));
  *v28 = swift_getKeyPath(&unk_100EEEB98);
  v29 = sub_100007E8C((uint64_t *)&unk_1011DE410);
  swift_storeEnumTagMultiPayload(v28, v29, 0);
  *(_QWORD *)v6 = v17;
  *((_QWORD *)v6 + 1) = v19;
  *((_QWORD *)v6 + 2) = v21;
  v6[3] = v13;
  *((_QWORD *)v6 + 4) = v15;
  *((_QWORD *)v6 + 5) = v24;
  sub_10005B6C0((uint64_t)v6, (uint64_t)v8, type metadata accessor for ArtworkImage.Placeholder.View);
  sub_10005B704((uint64_t)v8, (uint64_t)v12, type metadata accessor for ArtworkImage.Placeholder.View);
  v12[*(int *)(v9 + 36)] = 0;
  v30 = sub_10005B748((uint64_t)v8, type metadata accessor for ArtworkImage.Placeholder.View);
  v31 = *a1;
  v32 = *((unsigned __int8 *)a1 + 8);
  v33 = a1[2];
  v34 = *((unsigned __int8 *)a1 + 24);
  v35 = static Alignment.center.getter(v30);
  _FrameLayout.init(width:height:alignment:)(v43, v31, v32, v33, v34, v35, v36);
  v37 = v42;
  sub_10004A160((uint64_t)v12, v42, &qword_1011E1F20);
  v38 = (_OWORD *)(v37 + *(int *)(sub_100007E8C(&qword_1011E1F18) + 36));
  v39 = v43[1];
  *v38 = v43[0];
  v38[1] = v39;
  v38[2] = v43[2];
  return sub_10004FF60((uint64_t)v12, &qword_1011E1F20);
}

uint64_t ArtworkMotionView.init(videoArtwork:artwork:cropStyle:size:placeholder:reusePolicy:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  int *v13;
  _OWORD *v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  sub_100065228(a1, a7, &qword_1011E1F38);
  v13 = (int *)type metadata accessor for ArtworkMotionView(0);
  sub_100065228(a2, a7 + v13[5], (uint64_t *)&unk_1011E4A00);
  sub_100065228(a3, a7 + v13[6], &qword_1011DEFB0);
  v14 = (_OWORD *)(a7 + v13[7]);
  v15 = a4[1];
  *v14 = *a4;
  v14[1] = v15;
  *(_OWORD *)((char *)v14 + 26) = *(_OWORD *)((char *)a4 + 26);
  sub_100065228(a5, a7 + v13[8], &qword_1011E1F40);
  v16 = a7 + v13[9];
  v17 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v16, a6, v17);
}

uint64_t ArtworkMotionView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  int *v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char *v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v2 = v1;
  v79 = a1;
  sub_100007E8C(&qword_1011DEFB0);
  __chkstk_darwin();
  v70 = (uint64_t)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = type metadata accessor for Artwork.CropStyle(0);
  v73 = *(_QWORD *)(v75 - 8);
  __chkstk_darwin();
  v71 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = type metadata accessor for ArtworkMotionView(0);
  v76 = *(_QWORD *)(v72 - 8);
  __chkstk_darwin();
  v77 = v5;
  v78 = (uint64_t)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v7 = (char *)&v61 - v6;
  sub_100007E8C(&qword_1011E1F38);
  __chkstk_darwin();
  v9 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C((uint64_t *)&unk_1011E4A00);
  __chkstk_darwin();
  v11 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v13 = (char *)&v61 - v12;
  v74 = type metadata accessor for ArtworkImage(0);
  v61 = *(_QWORD *)(v74 - 8);
  __chkstk_darwin();
  v15 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v17 = (char *)&v61 - v16;
  __chkstk_darwin();
  v19 = (char *)&v61 - v18;
  __chkstk_darwin();
  v64 = (char *)&v61 - v20;
  v21 = sub_100007E8C(&qword_1011E1F48);
  v67 = *(_QWORD *)(v21 - 8);
  v68 = v21;
  __chkstk_darwin();
  v65 = (char *)&v61 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_100007E8C(&qword_1011E1F50);
  __chkstk_darwin();
  v69 = (char *)&v61 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_100007E8C(&qword_1011E1F58);
  __chkstk_darwin();
  v66 = (char *)&v61 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(v2, (uint64_t)v9, &qword_1011E1F38);
  v25 = type metadata accessor for VideoArtwork(0);
  v26 = *(_QWORD *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v9, 1, v25) == 1)
  {
    sub_10004FF60((uint64_t)v9, &qword_1011E1F38);
    v28 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v11, 1, 1, v28);
  }
  else
  {
    VideoArtwork.previewFrame.getter(v27);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v25);
    v28 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v11, 0, 1, v28);
  }
  sub_10005B704(v2, (uint64_t)v7, type metadata accessor for ArtworkMotionView);
  type metadata accessor for Artwork(0);
  v29 = *(_QWORD *)(v28 - 8);
  v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48))(v11, 1, v28);
  v31 = v74;
  if (v30 == 1)
  {
    v32 = (int *)v72;
    sub_10004A160((uint64_t)&v7[*(int *)(v72 + 20)], (uint64_t)v13, (uint64_t *)&unk_1011E4A00);
    sub_10005B748((uint64_t)v7, type metadata accessor for ArtworkMotionView);
    sub_10004FF60((uint64_t)v11, (uint64_t *)&unk_1011E4A00);
  }
  else
  {
    sub_10005B748((uint64_t)v7, type metadata accessor for ArtworkMotionView);
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v13, v11, v28);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v13, 0, 1, v28);
    v32 = (int *)v72;
  }
  ArtworkImage.init(_:)(v13);
  ArtworkImage.artworkReusablePolicy(_:)(v2 + v32[9]);
  v33 = *(void (**)(char *, uint64_t))(v61 + 8);
  v33(v15, v31);
  v34 = v70;
  sub_10004A160(v2 + v32[6], v70, &qword_1011DEFB0);
  v35 = v73;
  v36 = v75;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v73 + 48))(v34, 1, v75) == 1)
  {
    v37 = v71;
    if (qword_1011DE0E0 != -1)
      swift_once(&qword_1011DE0E0, sub_100C39A7C);
    v38 = sub_100048B14(v36, (uint64_t)static Artwork.CropStyle.fallback);
    (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v37, v38, v36);
    sub_10004FF60(v34, &qword_1011DEFB0);
  }
  else
  {
    v37 = v71;
    (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v71, v34, v36);
  }
  ArtworkImage.artworkCropStyle(_:)(v37);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v36);
  v33(v17, v31);
  v39 = v64;
  ArtworkImage.artworkIdealAspectRatio(_:contentMode:)(*(_QWORD *)(v2 + v32[7] + 32), *(unsigned __int8 *)(v2 + v32[7] + 40), *(unsigned __int8 *)(v2 + v32[7] + 41));
  v33(v19, v31);
  v40 = v78;
  sub_10005B704(v2, v78, type metadata accessor for ArtworkMotionView);
  v41 = *(unsigned __int8 *)(v76 + 80);
  v42 = (v41 + 16) & ~v41;
  v43 = swift_allocObject(&unk_10110A4A0, v42 + v77, v41 | 7);
  sub_10005B6C0(v40, v43 + v42, type metadata accessor for ArtworkMotionView);
  v44 = sub_100007E8C(&qword_1011E1F60);
  v45 = sub_100C3BCA4();
  v46 = v65;
  ArtworkImage.artworkPlaceholder<A>(_:)(sub_100C3BC38, v43, v44, v45);
  v47 = swift_release();
  v48 = ((uint64_t (*)(char *, uint64_t, __n128))v33)(v39, v31, v47);
  v49 = static Alignment.center.getter(v48);
  v51 = v50;
  v52 = (uint64_t)v69;
  v53 = (uint64_t)&v69[*(int *)(v62 + 36)];
  sub_100C3465C(v2, v53);
  v54 = (uint64_t *)(v53 + *(int *)(sub_100007E8C(&qword_1011E1F70) + 36));
  *v54 = v49;
  v54[1] = v51;
  v55 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v67 + 32))(v52, v46, v68);
  v56 = static Animation.default.getter(v55);
  v57 = (uint64_t)v66;
  v58 = (uint64_t *)&v66[*(int *)(v63 + 36)];
  v59 = sub_100007E8C(&qword_1011E1F78);
  sub_10004A160(v2, (uint64_t)v58 + *(int *)(v59 + 36), &qword_1011E1F38);
  *v58 = v56;
  sub_100065228(v52, v57, &qword_1011E1F50);
  return sub_100065228(v57, v79, &qword_1011E1F58);
}

uint64_t sub_100C33D78@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (**v32)@<X0>(uint64_t@<X8>);
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  char *v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _OWORD *v60;
  __int128 v61;
  uint64_t v62;
  uint64_t (**v63)@<X0>(uint64_t@<X8>);
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t (**v81)@<X0>(uint64_t@<X8>);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _OWORD v85[3];

  v84 = a2;
  v3 = type metadata accessor for ArtworkMotionView(0);
  v76 = *(_QWORD *)(v3 - 8);
  v4 = *(_QWORD *)(v76 + 64);
  __chkstk_darwin();
  v77 = (uint64_t)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = sub_100007E8C(&qword_1011E2728);
  __chkstk_darwin();
  v81 = (uint64_t (**)@<X0>(uint64_t@<X8>))((char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v69 = type metadata accessor for ArtworkImage.Placeholder.View(0);
  __chkstk_darwin();
  v71 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v72 = (uint64_t)&v68 - v7;
  v70 = sub_100007E8C(&qword_1011E1F20);
  __chkstk_darwin();
  v74 = (uint64_t)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = sub_100007E8C(&qword_1011E1F18);
  __chkstk_darwin();
  v73 = (uint64_t)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v75 = (uint64_t)&v68 - v10;
  v11 = sub_100007E8C((uint64_t *)&unk_1011E3D90);
  v82 = *(_QWORD *)(v11 - 8);
  v83 = v11;
  __chkstk_darwin();
  v78 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011E1F40);
  __chkstk_darwin();
  v14 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ArtworkImage.Placeholder(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  __chkstk_darwin();
  v18 = (char *)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v20 = (char *)&v68 - v19;
  sub_10004A160(a1 + *(int *)(v3 + 32), (uint64_t)v14, &qword_1011E1F40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_10004FF60((uint64_t)v14, &qword_1011E1F40);
    v21 = 1;
    v22 = v84;
  }
  else
  {
    sub_10005B6C0((uint64_t)v14, (uint64_t)v20, type metadata accessor for ArtworkImage.Placeholder);
    v23 = a1 + *(int *)(v3 + 28);
    if ((*(_BYTE *)(v23 + 8) & 1) != 0 || (*(_BYTE *)(v23 + 24) & 1) != 0)
    {
      sub_10005B704((uint64_t)v20, (uint64_t)v18, type metadata accessor for ArtworkImage.Placeholder);
      v24 = a1;
      v25 = v77;
      sub_10005B704(v24, v77, type metadata accessor for ArtworkMotionView);
      v26 = *(unsigned __int8 *)(v16 + 80);
      v27 = (v26 + 16) & ~v26;
      v28 = *(unsigned __int8 *)(v76 + 80);
      v29 = (v17 + v28 + v27) & ~v28;
      v30 = swift_allocObject(&unk_10110A840, v29 + v4, v26 | v28 | 7);
      sub_10005B6C0((uint64_t)v18, v30 + v27, type metadata accessor for ArtworkImage.Placeholder);
      sub_10005B6C0(v25, v30 + v29, type metadata accessor for ArtworkMotionView);
      v31 = v80;
      v32 = v81;
      *v81 = sub_100C43E78;
      v32[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v30;
      swift_storeEnumTagMultiPayload(v32, v31, 1);
      v33 = sub_100007E8C((uint64_t *)&unk_1011E3DE0);
      v34 = sub_100C39E80();
      v35 = sub_100049F28(&qword_1011E1F30, (uint64_t *)&unk_1011E3DE0, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
      v36 = (uint64_t)v78;
      _ConditionalContent<>.init(storage:)(v32, v79, v33, v34, v35);
    }
    else
    {
      v37 = *(_QWORD *)v23;
      v38 = *(_QWORD *)(v23 + 16);
      sub_100C34998();
      v40 = v39;
      v42 = v41;
      sub_100C34998();
      v44 = v43;
      swift_bridgeObjectRelease();
      sub_100C34998();
      v46 = v45;
      swift_bridgeObjectRelease();
      v47 = v69;
      v48 = v71;
      v49 = &v71[*(int *)(v69 + 32)];
      *(_QWORD *)v49 = swift_getKeyPath(&unk_100EEEB70);
      v50 = sub_100007E8C(&qword_1011DE408);
      swift_storeEnumTagMultiPayload(v49, v50, 0);
      v51 = (_QWORD *)((char *)v48 + *(int *)(v47 + 36));
      *v51 = swift_getKeyPath(&unk_100EEEB98);
      v52 = sub_100007E8C((uint64_t *)&unk_1011DE410);
      swift_storeEnumTagMultiPayload(v51, v52, 0);
      *v48 = v40;
      v48[1] = v42;
      v48[2] = v44;
      v48[3] = v37;
      v48[4] = v38;
      v48[5] = v46;
      v53 = v72;
      sub_10005B6C0((uint64_t)v48, v72, type metadata accessor for ArtworkImage.Placeholder.View);
      v54 = v74;
      sub_10005B704(v53, v74, type metadata accessor for ArtworkImage.Placeholder.View);
      *(_BYTE *)(v54 + *(int *)(v70 + 36)) = 0;
      v55 = sub_10005B748(v53, type metadata accessor for ArtworkImage.Placeholder.View);
      v56 = static Alignment.center.getter(v55);
      _FrameLayout.init(width:height:alignment:)(v85, v37, 0, v38, 0, v56, v57);
      v58 = v73;
      sub_10004A160(v54, v73, &qword_1011E1F20);
      v59 = v79;
      v60 = (_OWORD *)(v58 + *(int *)(v79 + 36));
      v61 = v85[1];
      *v60 = v85[0];
      v60[1] = v61;
      v60[2] = v85[2];
      sub_10004FF60(v54, &qword_1011E1F20);
      v62 = v75;
      sub_100065228(v58, v75, &qword_1011E1F18);
      v63 = v81;
      sub_10004A160(v62, (uint64_t)v81, &qword_1011E1F18);
      swift_storeEnumTagMultiPayload(v63, v80, 0);
      v64 = sub_100007E8C((uint64_t *)&unk_1011E3DE0);
      v65 = sub_100C39E80();
      v66 = sub_100049F28(&qword_1011E1F30, (uint64_t *)&unk_1011E3DE0, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
      v36 = (uint64_t)v78;
      _ConditionalContent<>.init(storage:)(v63, v59, v64, v65, v66);
      sub_10004FF60(v62, &qword_1011E1F18);
    }
    sub_10005B748((uint64_t)v20, type metadata accessor for ArtworkImage.Placeholder);
    v22 = v84;
    sub_100065228(v36, v84, (uint64_t *)&unk_1011E3D90);
    v21 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v82 + 56))(v22, v21, 1, v83);
}

uint64_t sub_100C343F0@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  double *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD *v35;
  __int128 v36;
  uint64_t v38;
  uint64_t v39;
  _OWORD v40[3];

  v39 = a1;
  v3 = type metadata accessor for ArtworkImage.Placeholder.View(0);
  __chkstk_darwin();
  v5 = (double *)((char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  v7 = (char *)&v38 - v6;
  v8 = sub_100007E8C(&qword_1011E1F20);
  __chkstk_darwin();
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = GeometryProxy.size.getter(v11);
  v14 = v13;
  sub_100C34998();
  v16 = v15;
  v18 = v17;
  sub_100C34998();
  v20 = v19;
  swift_bridgeObjectRelease();
  sub_100C34998();
  v22 = v21;
  swift_bridgeObjectRelease();
  v23 = (_QWORD *)((char *)v5 + *(int *)(v3 + 32));
  *v23 = swift_getKeyPath(&unk_100EEEB70);
  v24 = sub_100007E8C(&qword_1011DE408);
  swift_storeEnumTagMultiPayload(v23, v24, 0);
  v25 = (_QWORD *)((char *)v5 + *(int *)(v3 + 36));
  *v25 = swift_getKeyPath(&unk_100EEEB98);
  v26 = sub_100007E8C((uint64_t *)&unk_1011DE410);
  swift_storeEnumTagMultiPayload(v25, v26, 0);
  *(_QWORD *)v5 = v16;
  *((_QWORD *)v5 + 1) = v18;
  *((_QWORD *)v5 + 2) = v20;
  v5[3] = v12;
  *((_QWORD *)v5 + 4) = v14;
  *((_QWORD *)v5 + 5) = v22;
  sub_10005B6C0((uint64_t)v5, (uint64_t)v7, type metadata accessor for ArtworkImage.Placeholder.View);
  sub_10005B704((uint64_t)v7, (uint64_t)v10, type metadata accessor for ArtworkImage.Placeholder.View);
  v10[*(int *)(v8 + 36)] = 0;
  sub_10005B748((uint64_t)v7, type metadata accessor for ArtworkImage.Placeholder.View);
  v27 = type metadata accessor for ArtworkMotionView(0);
  v28 = (uint64_t *)(v39 + *(int *)(v27 + 28));
  v29 = *v28;
  v30 = *((unsigned __int8 *)v28 + 8);
  v31 = v28[2];
  v32 = *((unsigned __int8 *)v28 + 24);
  v33 = static Alignment.center.getter(v27);
  _FrameLayout.init(width:height:alignment:)(v40, v29, v30, v31, v32, v33, v34);
  sub_10004A160((uint64_t)v10, a2, &qword_1011E1F20);
  v35 = (_OWORD *)(a2 + *(int *)(sub_100007E8C(&qword_1011E1F18) + 36));
  v36 = v40[1];
  *v35 = v40[0];
  v35[1] = v36;
  v35[2] = v40[2];
  return sub_10004FF60((uint64_t)v10, &qword_1011E1F20);
}

uint64_t sub_100C3465C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v33 = a1;
  v34 = a2;
  v2 = sub_100007E8C(&qword_1011E2708);
  v31 = *(_QWORD *)(v2 - 8);
  v32 = v2;
  __chkstk_darwin();
  v30 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for URL(0);
  __chkstk_darwin();
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011E2710);
  v28 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011E2718);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v29 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011E1F38);
  __chkstk_darwin();
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for VideoArtwork(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin();
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(v33, (uint64_t)v13, &qword_1011E1F38);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_10004FF60((uint64_t)v13, &qword_1011E1F38);
    v18 = 1;
    v19 = v34;
  }
  else
  {
    v20 = (*(uint64_t (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
    VideoArtwork.url.getter(v20);
    MotionView.init(url:previewFrame:fallback:)(v5, sub_100C44018, 0, sub_100C34970, 0, &type metadata for Color, &type metadata for Color);
    v21 = sub_100049F28(&qword_1011E2720, &qword_1011E2710, (uint64_t)&protocol conformance descriptor for MotionView<A, B>);
    v22 = v30;
    View.mcui.getter(v6, v21);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v6);
    v23 = v29;
    v24 = v32;
    MCUINamespace<A>.motionShouldResetOnSizeChange(_:)(0, v32, v21);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v22, v24);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    v25 = v34;
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v34, v23, v9);
    v18 = 0;
    v19 = v25;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v19, v18, 1, v9);
}

uint64_t sub_100C34970@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = static Color.clear.getter();
  *a1 = result;
  return result;
}

void sub_100C34998()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v9;
  char *v10;
  uint64_t v11;

  v1 = type metadata accessor for Playlist.Variant(0);
  v2 = __chkstk_darwin(v1);
  __chkstk_darwin(v2);
  v3 = sub_100007E8C(&qword_1011DED48);
  v4 = __chkstk_darwin(v3);
  __chkstk_darwin(v4);
  v5 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704(v0, (uint64_t)v7, v8);
  v9 = sub_100007E8C(&qword_1011E4DE0);
  v10 = (char *)sub_100C34AE8
      + 4
      * byte_100EEEAEA[(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v7, 10, v9)];
  __asm { BR              X10 }
}

double sub_100C34AE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v8;
  uint64_t v9;
  double v10;

  sub_100065228(v5, v4, &qword_1011DED48);
  sub_10004A160(v4, v2, &qword_1011DED48);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v0) == 1)
  {
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v1, enum case for Playlist.Variant.regular(_:), v0);
    sub_10004FF60(v2, &qword_1011DED48);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v1, v2, v0);
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v3, v1, v0);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 88))(v3, v0);
  if (v8 != enum case for Playlist.Variant.smart(_:)
    && v8 != enum case for Playlist.Variant.genius(_:)
    && v8 != enum case for Playlist.Variant.folder(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v3, v0);
  }
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v1, v0);
  v10 = ((double (*)(uint64_t))static Font.Weight.light.getter)(v9);
  sub_10004FF60(v4, &qword_1011DED48);
  return v10;
}

uint64_t ArtworkImage.Placeholder.View.init(name:weight:availableSize:scaleFactor:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>, double a7@<D3>)
{
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t result;

  v14 = type metadata accessor for ArtworkImage.Placeholder.View(0);
  v15 = (_QWORD *)(a3 + *(int *)(v14 + 32));
  *v15 = swift_getKeyPath(&unk_100EEEB70);
  v16 = sub_100007E8C(&qword_1011DE408);
  swift_storeEnumTagMultiPayload(v15, v16, 0);
  v17 = (_QWORD *)(a3 + *(int *)(v14 + 36));
  *v17 = swift_getKeyPath(&unk_100EEEB98);
  v18 = sub_100007E8C((uint64_t *)&unk_1011DE410);
  result = swift_storeEnumTagMultiPayload(v17, v18, 0);
  *(_QWORD *)a3 = a1;
  *(_QWORD *)(a3 + 8) = a2;
  *(double *)(a3 + 16) = a4;
  *(double *)(a3 + 24) = a5;
  *(double *)(a3 + 32) = a6;
  *(double *)(a3 + 40) = a7;
  return result;
}

_QWORD *EnvironmentValues.placeholderStyle.getter@<X0>(_QWORD *a1@<X8>)
{
  unint64_t v2;

  v2 = sub_100C3BD08();
  return EnvironmentValues.subscript.getter(a1, &_s19PlaceholderStyleKeyVN, &_s19PlaceholderStyleKeyVN, v2);
}

_QWORD *sub_100C34EE4@<X0>(_QWORD *a1@<X8>)
{
  unint64_t v2;

  v2 = sub_100C3BD08();
  return EnvironmentValues.subscript.getter(a1, &_s19PlaceholderStyleKeyVN, &_s19PlaceholderStyleKeyVN, v2);
}

uint64_t sub_100C34F20(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  uint64_t v8;

  sub_100007E8C(&qword_1011E1F88);
  __chkstk_darwin();
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v5 = (char *)&v8 - v4;
  sub_10004A160(a1, (uint64_t)&v8 - v4, &qword_1011E1F88);
  sub_10004A160((uint64_t)v5, (uint64_t)v3, &qword_1011E1F88);
  v6 = sub_100C3BD08();
  EnvironmentValues.subscript.setter(v3, &_s19PlaceholderStyleKeyVN, &_s19PlaceholderStyleKeyVN, v6);
  return sub_10004FF60((uint64_t)v5, &qword_1011E1F88);
}

uint64_t EnvironmentValues.placeholderStyle.setter(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v6;

  sub_100007E8C(&qword_1011E1F88);
  __chkstk_darwin();
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(a1, (uint64_t)v3, &qword_1011E1F88);
  v4 = sub_100C3BD08();
  EnvironmentValues.subscript.setter(v3, &_s19PlaceholderStyleKeyVN, &_s19PlaceholderStyleKeyVN, v4);
  return sub_10004FF60(a1, &qword_1011E1F88);
}

uint64_t ArtworkImage.Placeholder.View.body.getter@<X0>(uint64_t a1@<X8>)
{
  double *v1;
  uint64_t *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  double v11;
  double v12;
  double v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  double v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  _QWORD v50[3];
  uint64_t v51;
  uint64_t v52;

  v2 = (uint64_t *)v1;
  v46 = a1;
  v45 = sub_100007E8C(&qword_1011E1F90);
  __chkstk_darwin();
  v4 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_100007E8C(&qword_1011E1F98);
  __chkstk_darwin();
  v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011E1F88);
  __chkstk_darwin();
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v10 = (char *)&v43 - v9;
  v11 = v1[3];
  v12 = v1[4];
  v13 = v1[5];
  type metadata accessor for ArtworkImage.Placeholder.View(0);
  sub_100C31A2C(&qword_1011DE408, &qword_1011E1F88, (char *)0x6C616E6F6974704FLL, (char *)0xEF3E656C7974533CLL, (uint64_t)v10);
  v14 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48);
  if (v15(v10, 1, v14) == 1)
  {
    sub_10004FF60((uint64_t)v10, &qword_1011E1F88);
    v47 = 0u;
    v48 = 0u;
    v49 = 0;
  }
  else
  {
    sub_10004A160((uint64_t)(v10 + 40), (uint64_t)&v47, (uint64_t *)&unk_1011E3E20);
    sub_10005B748((uint64_t)v10, type metadata accessor for ArtworkImage.Placeholder.View.Style);
    if (*((_QWORD *)&v48 + 1))
    {
      sub_100064C48(&v47, (uint64_t)v50);
      v16 = v51;
      v43 = v52;
      sub_100007E68(v50, v51);
      v17 = __chkstk_darwin();
      v19 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v20 + 16))(v19, v17);
      v21 = AnyShapeStyle.init<A>(_:)(v19, v16, v43);
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(v50);
      goto LABEL_6;
    }
  }
  sub_10004FF60((uint64_t)&v47, (uint64_t *)&unk_1011E3E20);
  v21 = 0;
LABEL_6:
  sub_100C31A2C(&qword_1011DE408, &qword_1011E1F88, (char *)0x6C616E6F6974704FLL, (char *)0xEF3E656C7974533CLL, (uint64_t)v8);
  if (v15(v8, 1, v14) == 1)
  {
    sub_10004FF60((uint64_t)v8, &qword_1011E1F88);
    v47 = 0u;
    v48 = 0u;
    v49 = 0;
  }
  else
  {
    sub_10004A160((uint64_t)v8, (uint64_t)&v47, (uint64_t *)&unk_1011E3E20);
    sub_10005B748((uint64_t)v8, type metadata accessor for ArtworkImage.Placeholder.View.Style);
    if (*((_QWORD *)&v48 + 1))
    {
      sub_100064C48(&v47, (uint64_t)v50);
      v22 = v51;
      v23 = v52;
      sub_100007E68(v50, v51);
      v24 = __chkstk_darwin();
      v26 = (char *)&v43 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v27 + 16))(v26, v24);
      v28 = AnyShapeStyle.init<A>(_:)(v26, v22, v23);
      v29 = _s5Music18DragDropToPlaylistV6OriginVwxx_0(v50);
      goto LABEL_11;
    }
  }
  v29 = sub_10004FF60((uint64_t)&v47, (uint64_t *)&unk_1011E3E20);
  v28 = 0;
LABEL_11:
  v30 = static Color.clear.getter(v29);
  if (v21)
  {
    v31 = v21;
  }
  else
  {
    v32 = objc_msgSend((id)objc_opt_self(UIColor), "secondarySystemFillColor");
    v50[0] = Color.init(_:)(v32);
    v31 = AnyShapeStyle.init<A>(_:)(v50, &type metadata for Color, &protocol witness table for Color);
  }
  if (v12 >= v11)
    v33 = v11;
  else
    v33 = v12;
  v34 = v13 * v33;
  swift_retain();
  v36 = static Edge.Set.all.getter(v35);
  v37 = v36;
  v38 = static Alignment.center.getter(v36);
  v40 = v39;
  sub_100C35568(v2, v28, (uint64_t)v4, v34);
  v41 = (uint64_t *)&v4[*(int *)(v45 + 36)];
  *v41 = v38;
  v41[1] = v40;
  sub_10004A160((uint64_t)v4, (uint64_t)&v6[*(int *)(v44 + 36)], &qword_1011E1F90);
  *(_QWORD *)v6 = v30;
  *((_QWORD *)v6 + 1) = v31;
  v6[16] = v37;
  swift_retain();
  swift_retain();
  sub_10004FF60((uint64_t)v4, &qword_1011E1F90);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return sub_100065228((uint64_t)v6, v46, &qword_1011E1F98);
}

uint64_t sub_100C35568@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t KeyPath;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t OpaqueTypeConformance2;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v53 = a3;
  sub_100007E8C(&qword_1011E1F88);
  __chkstk_darwin();
  v48 = (uint64_t)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011E1FA0);
  __chkstk_darwin();
  v49 = (uint64_t)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for BlendMode(0);
  v9 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin();
  v50 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011E1C98);
  __chkstk_darwin();
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011E26C0);
  v43 = *(_QWORD *)(v13 - 8);
  v44 = v13;
  __chkstk_darwin();
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011E26C8);
  __chkstk_darwin();
  v47 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_100007E8C(&qword_1011E26D0);
  __chkstk_darwin();
  v46 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *a1;
  v19 = a1[1];
  swift_bridgeObjectRetain();
  v20 = Image.init(_internalSystemName:)(v18, v19);
  v51 = v9;
  if (a2)
  {
    v21 = a2;
  }
  else
  {
    v22 = objc_msgSend((id)objc_opt_self(UIColor), "tertiaryLabelColor");
    v54 = Color.init(_:)(v22);
    v21 = AnyShapeStyle.init<A>(_:)(&v54, &type metadata for Color, &protocol witness table for Color);
  }
  v23 = type metadata accessor for Font.Design(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v12, 1, 1, v23);
  swift_retain();
  v24 = static Font.system(size:weight:design:)(0, 1, v12, a4);
  sub_10004FF60((uint64_t)v12, &qword_1011E1C98);
  KeyPath = swift_getKeyPath(&unk_100EEF8F0);
  v54 = v20;
  v55 = v21;
  v56 = KeyPath;
  v57 = v24;
  v26 = a1[2];
  v27 = sub_100007E8C(&qword_1011E26D8);
  v28 = sub_100C43B00();
  View.fontWeight(_:)(v26, 0, v27, v28);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v54 = v27;
  v55 = v28;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v54, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
  v30 = (uint64_t)v47;
  v31 = v44;
  View.accessibility(hidden:)(1, v44, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v15, v31);
  type metadata accessor for ArtworkImage.Placeholder.View(0);
  v32 = v48;
  sub_100C31A2C(&qword_1011DE408, &qword_1011E1F88, (char *)0x6C616E6F6974704FLL, (char *)0xEF3E656C7974533CLL, v48);
  v33 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v32, 1, v33) == 1)
  {
    sub_10004FF60(v32, &qword_1011E1F88);
    v35 = v51;
    v34 = v52;
    v36 = v49;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 56))(v49, 1, 1, v52);
    v37 = v50;
  }
  else
  {
    v38 = v32 + *(int *)(v33 + 24);
    v36 = v49;
    sub_10004A160(v38, v49, &qword_1011E1FA0);
    sub_10005B748(v32, type metadata accessor for ArtworkImage.Placeholder.View.Style);
    v35 = v51;
    v34 = v52;
    v39 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v36, 1, v52);
    v37 = v50;
    if (v39 != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v50, v36, v34);
      goto LABEL_9;
    }
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v35 + 104))(v37, enum case for BlendMode.normal(_:), v34);
  sub_10004FF60(v36, &qword_1011E1FA0);
LABEL_9:
  v40 = (uint64_t)v46;
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))(&v46[*(int *)(v45 + 36)], v37, v34);
  sub_10004A160(v30, v40, &qword_1011E26C8);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v34);
  sub_10004FF60(v30, &qword_1011E26C8);
  return sub_100065228(v40, v53, &qword_1011E26D0);
}

uint64_t sub_100C35A8C()
{
  return EnvironmentValues.colorSchemeContrast.getter();
}

uint64_t ArtworkImage.Placeholder.View.Style.foreground.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10004A160(v1, a1, (uint64_t *)&unk_1011E3E20);
}

uint64_t ArtworkImage.Placeholder.View.Style.foreground.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1000A5508(a1, v1, (uint64_t *)&unk_1011E3E20);
}

uint64_t ArtworkImage.Placeholder.View.Style.background.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10004A160(v1 + 40, a1, (uint64_t *)&unk_1011E3E20);
}

uint64_t ArtworkImage.Placeholder.View.Style.background.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1000A5508(a1, v1 + 40, (uint64_t *)&unk_1011E3E20);
}

uint64_t ArtworkImage.Placeholder.View.Style.blendMode.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  return sub_10004A160(v1 + *(int *)(v3 + 24), a1, &qword_1011E1FA0);
}

uint64_t ArtworkImage.Placeholder.View.Style.blendMode.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  return sub_1000A5508(a1, v1 + *(int *)(v3 + 24), &qword_1011E1FA0);
}

double (*ArtworkImage.Placeholder.View.Style.blendMode.modify())(_QWORD)
{
  type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t ArtworkImage.Placeholder.View.Style.init(foreground:background:blendMode:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = (uint64_t)a4 + 40;
  v9 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  *a4 = 0u;
  a4[1] = 0u;
  a4[2] = 0u;
  a4[3] = 0u;
  a4[4] = 0u;
  v10 = (uint64_t)a4 + *(int *)(v9 + 24);
  v11 = type metadata accessor for BlendMode(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  sub_1000A5508(a1, (uint64_t)a4, (uint64_t *)&unk_1011E3E20);
  sub_1000A5508(a2, v8, (uint64_t *)&unk_1011E3E20);
  return sub_1000A5508(a3, v10, &qword_1011E1FA0);
}

uint64_t sub_100C35C98()
{
  uint64_t v0;
  uint64_t v1;
  _OWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  _QWORD v13[5];
  _QWORD v14[5];

  v0 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  __chkstk_darwin();
  v2 = (_OWORD *)((char *)v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100007E8C(&qword_1011E1FA0);
  __chkstk_darwin();
  v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004FACC(v0, static ArtworkImage.Placeholder.View.Style.nowPlaying);
  v5 = sub_100048B14(v0, (uint64_t)static ArtworkImage.Placeholder.View.Style.nowPlaying);
  static Color.white.getter(v5);
  v6 = Color.opacity(_:)(0.12);
  swift_release();
  v14[3] = &type metadata for Color;
  v14[4] = &protocol witness table for Color;
  v14[0] = v6;
  static Color.black.getter(v7);
  v8 = Color.opacity(_:)(0.1);
  swift_release();
  v13[3] = &type metadata for Color;
  v13[4] = &protocol witness table for Color;
  v13[0] = v8;
  v9 = type metadata accessor for BlendMode(0);
  v10 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56);
  v10(v4, 1, 1, v9);
  v2[3] = 0u;
  v2[4] = 0u;
  v2[1] = 0u;
  v2[2] = 0u;
  *v2 = 0u;
  v11 = (uint64_t)v2 + *(int *)(v0 + 24);
  v10((char *)v11, 1, 1, v9);
  sub_1000A5508((uint64_t)v14, (uint64_t)v2, (uint64_t *)&unk_1011E3E20);
  sub_1000A5508((uint64_t)v13, (uint64_t)v2 + 40, (uint64_t *)&unk_1011E3E20);
  sub_1000A5508((uint64_t)v4, v11, &qword_1011E1FA0);
  return sub_10005B6C0((uint64_t)v2, v5, type metadata accessor for ArtworkImage.Placeholder.View.Style);
}

uint64_t ArtworkImage.Placeholder.View.Style.nowPlaying.unsafeMutableAddressor()
{
  return sub_100C3138C(&qword_1011DE0C0, type metadata accessor for ArtworkImage.Placeholder.View.Style, (uint64_t)static ArtworkImage.Placeholder.View.Style.nowPlaying, (uint64_t)sub_100C35C98);
}

uint64_t static ArtworkImage.Placeholder.View.Style.nowPlaying.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100C36500(&qword_1011DE0C0, (uint64_t)static ArtworkImage.Placeholder.View.Style.nowPlaying, (uint64_t)sub_100C35C98, a1);
}

uint64_t sub_100C35EB8()
{
  uint64_t v0;
  uint64_t v1;
  _OWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  _QWORD v13[5];
  _QWORD v14[5];

  v0 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  __chkstk_darwin();
  v2 = (_OWORD *)((char *)v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100007E8C(&qword_1011E1FA0);
  __chkstk_darwin();
  v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004FACC(v0, static ArtworkImage.Placeholder.View.Style.miniPlayer);
  v5 = sub_100048B14(v0, (uint64_t)static ArtworkImage.Placeholder.View.Style.miniPlayer);
  v6 = (void *)objc_opt_self(UIColor);
  v7 = Color.init(_:)(objc_msgSend(v6, "quaternaryLabelColor"));
  v14[3] = &type metadata for Color;
  v14[4] = &protocol witness table for Color;
  v14[0] = v7;
  v8 = Color.init(_:)(objc_msgSend(v6, "tertiarySystemFillColor"));
  v13[3] = &type metadata for Color;
  v13[4] = &protocol witness table for Color;
  v13[0] = v8;
  v9 = type metadata accessor for BlendMode(0);
  v10 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56);
  v10(v4, 1, 1, v9);
  v2[3] = 0u;
  v2[4] = 0u;
  v2[1] = 0u;
  v2[2] = 0u;
  *v2 = 0u;
  v11 = (uint64_t)v2 + *(int *)(v0 + 24);
  v10((char *)v11, 1, 1, v9);
  sub_1000A5508((uint64_t)v14, (uint64_t)v2, (uint64_t *)&unk_1011E3E20);
  sub_1000A5508((uint64_t)v13, (uint64_t)v2 + 40, (uint64_t *)&unk_1011E3E20);
  sub_1000A5508((uint64_t)v4, v11, &qword_1011E1FA0);
  return sub_10005B6C0((uint64_t)v2, v5, type metadata accessor for ArtworkImage.Placeholder.View.Style);
}

uint64_t ArtworkImage.Placeholder.View.Style.miniPlayer.unsafeMutableAddressor()
{
  return sub_100C3138C(&qword_1011DE0C8, type metadata accessor for ArtworkImage.Placeholder.View.Style, (uint64_t)static ArtworkImage.Placeholder.View.Style.miniPlayer, (uint64_t)sub_100C35EB8);
}

uint64_t static ArtworkImage.Placeholder.View.Style.miniPlayer.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100C36500(&qword_1011DE0C8, (uint64_t)static ArtworkImage.Placeholder.View.Style.miniPlayer, (uint64_t)sub_100C35EB8, a1);
}

uint64_t sub_100C360DC()
{
  uint64_t v0;
  uint64_t v1;
  _OWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  _QWORD v15[5];
  _QWORD v16[5];

  v0 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  __chkstk_darwin();
  v2 = (_OWORD *)((char *)v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100007E8C(&qword_1011E1FA0);
  __chkstk_darwin();
  v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004FACC(v0, static ArtworkImage.Placeholder.View.Style.widgets);
  v5 = sub_100048B14(v0, (uint64_t)static ArtworkImage.Placeholder.View.Style.widgets);
  static Color.white.getter(v5);
  v6 = Color.opacity(_:)(0.25);
  swift_release();
  v16[3] = &type metadata for Color;
  v16[4] = &protocol witness table for Color;
  v16[0] = v6;
  static Color.white.getter(v7);
  v8 = Color.opacity(_:)(0.07);
  swift_release();
  v15[3] = &type metadata for Color;
  v15[4] = &protocol witness table for Color;
  v15[0] = v8;
  v9 = enum case for BlendMode.plusLighter(_:);
  v10 = type metadata accessor for BlendMode(0);
  v11 = *(_QWORD *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 104))(v4, v9, v10);
  v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v12(v4, 0, 1, v10);
  v2[3] = 0u;
  v2[4] = 0u;
  v2[1] = 0u;
  v2[2] = 0u;
  *v2 = 0u;
  v13 = (uint64_t)v2 + *(int *)(v0 + 24);
  v12((char *)v13, 1, 1, v10);
  sub_1000A5508((uint64_t)v16, (uint64_t)v2, (uint64_t *)&unk_1011E3E20);
  sub_1000A5508((uint64_t)v15, (uint64_t)v2 + 40, (uint64_t *)&unk_1011E3E20);
  sub_1000A5508((uint64_t)v4, v13, &qword_1011E1FA0);
  return sub_10005B6C0((uint64_t)v2, v5, type metadata accessor for ArtworkImage.Placeholder.View.Style);
}

uint64_t ArtworkImage.Placeholder.View.Style.widgets.unsafeMutableAddressor()
{
  return sub_100C3138C(&qword_1011DE0D0, type metadata accessor for ArtworkImage.Placeholder.View.Style, (uint64_t)static ArtworkImage.Placeholder.View.Style.widgets, (uint64_t)sub_100C360DC);
}

uint64_t static ArtworkImage.Placeholder.View.Style.widgets.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100C36500(&qword_1011DE0D0, (uint64_t)static ArtworkImage.Placeholder.View.Style.widgets, (uint64_t)sub_100C360DC, a1);
}

uint64_t sub_100C36318()
{
  uint64_t v0;
  uint64_t v1;
  _OWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  _OWORD v12[2];
  uint64_t v13;
  _QWORD v14[5];

  v0 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  __chkstk_darwin();
  v2 = (_OWORD *)((char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100007E8C(&qword_1011E1FA0);
  __chkstk_darwin();
  v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004FACC(v0, static ArtworkImage.Placeholder.View.Style.accentuated);
  v5 = sub_100048B14(v0, (uint64_t)static ArtworkImage.Placeholder.View.Style.accentuated);
  v7 = static Color.accentColor.getter(v5, v6);
  v14[3] = &type metadata for Color;
  v14[4] = &protocol witness table for Color;
  v14[0] = v7;
  v8 = type metadata accessor for BlendMode(0);
  memset(v12, 0, sizeof(v12));
  v13 = 0;
  v9 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56);
  v9(v4, 1, 1, v8);
  v2[3] = 0u;
  v2[4] = 0u;
  v2[1] = 0u;
  v2[2] = 0u;
  *v2 = 0u;
  v10 = (uint64_t)v2 + *(int *)(v0 + 24);
  v9((char *)v10, 1, 1, v8);
  sub_1000A5508((uint64_t)v14, (uint64_t)v2, (uint64_t *)&unk_1011E3E20);
  sub_1000A5508((uint64_t)v12, (uint64_t)v2 + 40, (uint64_t *)&unk_1011E3E20);
  sub_1000A5508((uint64_t)v4, v10, &qword_1011E1FA0);
  return sub_10005B6C0((uint64_t)v2, v5, type metadata accessor for ArtworkImage.Placeholder.View.Style);
}

uint64_t ArtworkImage.Placeholder.View.Style.accentuated.unsafeMutableAddressor()
{
  return sub_100C3138C(&qword_1011DE0D8, type metadata accessor for ArtworkImage.Placeholder.View.Style, (uint64_t)static ArtworkImage.Placeholder.View.Style.accentuated, (uint64_t)sub_100C36318);
}

uint64_t static ArtworkImage.Placeholder.View.Style.accentuated.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100C36500(&qword_1011DE0D8, (uint64_t)static ArtworkImage.Placeholder.View.Style.accentuated, (uint64_t)sub_100C36318, a1);
}

uint64_t sub_100C36500@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  if (*a1 != -1)
    swift_once(a1, a3);
  v6 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  v7 = sub_100048B14(v6, a2);
  return sub_10005B704(v7, a4, type metadata accessor for ArtworkImage.Placeholder.View.Style);
}

void ArtworkImage.Placeholder.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t (*v3)(_QWORD);
  uint64_t v4;
  char *v5;
  uint64_t v6;

  type metadata accessor for Playlist.Variant(0);
  __chkstk_darwin();
  sub_100007E8C(&qword_1011DED48);
  __chkstk_darwin();
  __chkstk_darwin();
  type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704(v0, (uint64_t)v2, v3);
  v4 = sub_100007E8C(&qword_1011E4DE0);
  v5 = (char *)sub_100C3669C
     + 4
     * byte_100EEEAF5[(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v2, 10, v4)];
  __asm { BR              X10 }
}

uint64_t sub_100C3669C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_100065228(v5, v3, &qword_1011DED48);
  Hasher._combine(_:)(3uLL);
  sub_10004A160(v3, v4, &qword_1011DED48);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v0) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v2, v4, v0);
    Hasher._combine(_:)(1u);
    v7 = sub_100048748(&qword_1011E1FA8, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Variant, (uint64_t)&protocol conformance descriptor for Playlist.Variant);
    dispatch thunk of Hashable.hash(into:)(v1, v0, v7);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v2, v0);
  }
  return sub_10004FF60(v3, &qword_1011DED48);
}

uint64_t sub_100C367D0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100C36800 + 4 * byte_100EEEB00[a1]))(0x636973756DLL, 0xE500000000000000);
}

uint64_t sub_100C36800()
{
  return 0x6979616C50776F6ELL;
}

uint64_t sub_100C36820()
{
  return 0x6C79616C5077656ELL;
}

uint64_t sub_100C36840()
{
  return 0x7473696C79616C70;
}

uint64_t sub_100C36858()
{
  return 0x646956636973756DLL;
}

uint64_t sub_100C36878()
{
  return 30324;
}

uint64_t sub_100C36884()
{
  return 0x6F68706F7263696DLL;
}

uint64_t sub_100C368A0()
{
  return 0x6E6F73726570;
}

uint64_t sub_100C368B4()
{
  return 0x65726E6567;
}

uint64_t sub_100C368C4()
{
  return 0x7265736F706D6F63;
}

uint64_t sub_100C368DC()
{
  return 0x6F69646172;
}

uint64_t sub_100C368EC()
{
  unsigned __int8 *v0;

  return sub_100C367D0(*v0);
}

uint64_t sub_100C368F4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100C43684(a1, a2);
  *a3 = result;
  return result;
}

void sub_100C36918(_BYTE *a1@<X8>)
{
  *a1 = 11;
}

uint64_t sub_100C36924(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C3BD60();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100C3694C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C3BD60();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100C36974(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C3BDA4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100C3699C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C3BDA4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100C369C4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C3BDE8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100C369EC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C3BDE8();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100C36A14(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C3BEB4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100C36A3C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C3BEB4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100C36A64@<X0>(uint64_t a1@<X1>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease(a1);
  *a2 = 1;
  return result;
}

uint64_t sub_100C36A90(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C3C04C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100C36AB8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C3C04C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100C36AE0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C3BF3C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100C36B08(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C3BF3C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100C36B30(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C3BFC4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100C36B58(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C3BFC4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100C36B80(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C3C008();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100C36BA8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C3C008();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100C36BD0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C3BE70();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100C36BF8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C3BE70();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100C36C20()
{
  return 1701869940;
}

uint64_t sub_100C36C30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v6;
  uint64_t result;
  char v8;

  if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    result = swift_bridgeObjectRelease(0xE400000000000000);
    v8 = 0;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)(1701869940, 0xE400000000000000, a1, a2, 0);
    result = swift_bridgeObjectRelease(a2);
    v8 = v6 ^ 1;
  }
  *a3 = v8 & 1;
  return result;
}

uint64_t sub_100C36CB4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C3BF80();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100C36CDC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C3BF80();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100C36D04(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C3BE2C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100C36D2C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C3BE2C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100C36D54(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C3BEF8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100C36D7C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C3BEF8();
  return CodingKey.debugDescription.getter(a1, v2);
}

void ArtworkImage.Placeholder.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char *v25;
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;

  v2 = sub_100007E8C(&qword_1011E1FB0);
  v53 = *(_QWORD *)(v2 - 8);
  v54 = v2;
  __chkstk_darwin();
  v52 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_1011E1FB8);
  v50 = *(_QWORD *)(v4 - 8);
  v51 = v4;
  __chkstk_darwin();
  v49 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_100007E8C(&qword_1011E1FC0);
  v26[2] = *(_QWORD *)(v27 - 8);
  __chkstk_darwin();
  v26[1] = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011E1FC8);
  v47 = *(_QWORD *)(v7 - 8);
  v48 = v7;
  __chkstk_darwin();
  v46 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011E1FD0);
  v44 = *(_QWORD *)(v9 - 8);
  v45 = v9;
  __chkstk_darwin();
  v43 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011E1FD8);
  v41 = *(_QWORD *)(v11 - 8);
  v42 = v11;
  __chkstk_darwin();
  v38 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_100007E8C(&qword_1011E1FE0);
  v35 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin();
  v33 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_100007E8C(&qword_1011E1FE8);
  v39 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin();
  v37 = (char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011DED48);
  __chkstk_darwin();
  v34 = (char *)v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_100007E8C(&qword_1011E1FF0);
  v31 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin();
  v30 = (char *)v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_100007E8C(&qword_1011E1FF8);
  v28 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin();
  sub_100007E8C(&qword_1011E2000);
  __chkstk_darwin();
  type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  v18 = (char *)v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_100007E8C(&qword_1011E2008);
  v55 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin();
  v20 = (char *)v26 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = a1[3];
  v22 = a1[4];
  sub_100007E68(a1, v21);
  v23 = sub_100C3BD60();
  v56 = v20;
  dispatch thunk of Encoder.container<A>(keyedBy:)(&_s11PlaceholderO10CodingKeysON, &_s11PlaceholderO10CodingKeysON, v23, v21, v22);
  sub_10005B704(v58, (uint64_t)v18, type metadata accessor for ArtworkImage.Placeholder);
  v24 = sub_100007E8C(&qword_1011E4DE0);
  v25 = (char *)sub_100C37214
      + 4
      * byte_100EEEB0B[(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v18, 10, v24)];
  __asm { BR              X10 }
}

uint64_t sub_100C37214()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(v1 - 304);
  sub_100065228(v0, v2, &qword_1011DED48);
  *(_BYTE *)(v1 - 72) = 3;
  v3 = sub_100C3BF80();
  v4 = *(_QWORD *)(v1 - 280);
  v6 = *(_QWORD *)(v1 - 128);
  v5 = *(_QWORD *)(v1 - 120);
  ((void (*)(ValueMetadata *, uint64_t, uint64_t, ValueMetadata *, unint64_t))KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:))(&_s11PlaceholderO18PlaylistCodingKeysON, v1 - 72, v5, &_s11PlaceholderO18PlaylistCodingKeysON, v3);
  v7 = type metadata accessor for Playlist.Variant(0);
  v8 = sub_100048748(&qword_1011E2058, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Variant, (uint64_t)&protocol conformance descriptor for Playlist.Variant);
  v9 = *(_QWORD *)(v1 - 256);
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v2, v10, v9, v7, v8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 264) + 8))(v4, v9);
  sub_10004FF60(v2, &qword_1011DED48);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 136) + 8))(v6, v5);
}

Swift::Int ArtworkImage.Placeholder.hashValue.getter()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  ArtworkImage.Placeholder.hash(into:)();
  return Hasher._finalize()();
}

uint64_t ArtworkImage.Placeholder.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t *v32;
  char *v33;
  uint64_t v34;
  __n128 v35;
  __n128 v36;
  _QWORD v38[4];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  _QWORD *v73;
  uint64_t v74;

  v65 = a2;
  v3 = sub_100007E8C(&qword_1011E2078);
  v70 = *(_QWORD *)(v3 - 8);
  v71 = v3;
  __chkstk_darwin();
  v64 = (char *)v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011E2080);
  v66 = *(_QWORD *)(v5 - 8);
  v67 = v5;
  __chkstk_darwin();
  v63 = (char *)v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_100007E8C(&qword_1011E2088);
  v53 = *(_QWORD *)(v54 - 8);
  __chkstk_darwin();
  v62 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_100007E8C(&qword_1011E2090);
  v51 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin();
  v61 = (char *)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_100007E8C(&qword_1011E2098);
  v49 = *(_QWORD *)(v50 - 8);
  __chkstk_darwin();
  v69 = (char *)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_100007E8C(&qword_1011E20A0);
  v46 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin();
  v59 = (char *)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_100007E8C(&qword_1011E20A8);
  v44 = *(_QWORD *)(v45 - 8);
  __chkstk_darwin();
  v58 = (char *)v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_100007E8C(&qword_1011E20B0);
  v55 = *(_QWORD *)(v48 - 8);
  __chkstk_darwin();
  v60 = (char *)v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_100007E8C(&qword_1011E20B8);
  v42 = *(_QWORD *)(v43 - 8);
  __chkstk_darwin();
  v57 = (char *)v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_100007E8C(&qword_1011E20C0);
  v40 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin();
  v56 = (char *)v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_100007E8C(&qword_1011E20C8);
  v38[3] = *(_QWORD *)(v39 - 8);
  __chkstk_darwin();
  v68 = (char *)v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C(&qword_1011E20D0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin();
  v19 = (char *)v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  v22 = (char *)v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v24 = (char *)v38 - v23;
  v25 = a1[3];
  v26 = a1[4];
  v73 = a1;
  sub_100007E68(a1, v25);
  v27 = sub_100C3BD60();
  v72 = v19;
  v28 = v74;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&_s11PlaceholderO10CodingKeysON, &_s11PlaceholderO10CodingKeysON, v27, v25, v26);
  if (!v28)
  {
    v38[0] = v22;
    v38[2] = 0;
    v74 = v17;
    v38[1] = v24;
    v29 = KeyedDecodingContainer.allKeys.getter(v16);
    if (*(_QWORD *)(v29 + 16) == 1)
      __asm { BR              X10 }
    v30 = type metadata accessor for DecodingError(0);
    swift_allocError(v30, &protocol witness table for DecodingError, 0, 0);
    v32 = v31;
    sub_100007E8C(&qword_1011E20D8);
    *v32 = v20;
    v33 = v72;
    v34 = KeyedDecodingContainer.codingPath.getter(v16);
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)(v34, 0xD00000000000002BLL, 0x8000000100E56320, 0);
    v35.n128_f64[0] = (*(double (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v32, enum case for DecodingError.typeMismatch(_:), v30);
    swift_willThrow(v35);
    v36 = swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, __n128))(v74 + 8))(v33, v16, v36);
  }
  return _s5Music18DragDropToPlaylistV6OriginVwxx_0(v73);
}

void sub_100C37C54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v2 - 90) = 1;
  v3 = sub_100C3C008();
  v4 = *(_QWORD *)(v2 - 248);
  v5 = *(_QWORD *)(v2 - 400);
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&_s11PlaceholderO20NowPlayingCodingKeysON, v2 - 90, v1, &_s11PlaceholderO20NowPlayingCodingKeysON, v3);
  if (!v5)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 376) + 8))(v4, *(_QWORD *)(v2 - 368));
    v6 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v2 - 104) + 8))(v0, v1, v6);
    v7 = sub_100007E8C(&qword_1011E4DE0);
    v8 = *(_QWORD *)(v2 - 408);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v8, 2, 10, v7);
    sub_10005B6C0(v8, *(_QWORD *)(v2 - 176), type metadata accessor for ArtworkImage.Placeholder);
    JUMPOUT(0x100C37C2CLL);
  }
  JUMPOUT(0x100C37C0CLL);
}

void sub_100C37CF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v2 - 89) = 2;
  v3 = sub_100C3BFC4();
  v4 = *(_QWORD *)(v2 - 240);
  v5 = *(_QWORD *)(v2 - 400);
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&_s11PlaceholderO21NewPlaylistCodingKeysON, v2 - 89, v1, &_s11PlaceholderO21NewPlaylistCodingKeysON, v3);
  if (!v5)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 360) + 8))(v4, *(_QWORD *)(v2 - 352));
    v6 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v2 - 104) + 8))(v0, v1, v6);
    v7 = sub_100007E8C(&qword_1011E4DE0);
    v8 = *(_QWORD *)(v2 - 408);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v8, 3, 10, v7);
    sub_10005B6C0(v8, *(_QWORD *)(v2 - 176), type metadata accessor for ArtworkImage.Placeholder);
    JUMPOUT(0x100C37C2CLL);
  }
  JUMPOUT(0x100C37C0CLL);
}

void sub_100C37D9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;

  *(_BYTE *)(v2 - 72) = 3;
  v3 = sub_100C3BF80();
  v4 = *(_QWORD *)(v2 - 216);
  v5 = *(_QWORD *)(v2 - 400);
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&_s11PlaceholderO18PlaylistCodingKeysON, v2 - 72, v1, &_s11PlaceholderO18PlaylistCodingKeysON, v3);
  if (!v5)
  {
    v6 = type metadata accessor for Playlist.Variant(0);
    v7 = sub_100048748(&qword_1011E20E0, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Variant, (uint64_t)&protocol conformance descriptor for Playlist.Variant);
    v8 = *(_QWORD **)(v2 - 416);
    v9 = *(_QWORD *)(v2 - 312);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v8, v6, v10, v9, v6, v7);
    v11 = *(_QWORD *)(v2 - 104);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 256) + 8))(v4, v9);
    v12 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, __n128))(v11 + 8))(v0, v1, v12);
    v13 = sub_100007E8C(&qword_1011E4DE0);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 10, v13);
    sub_10005B6C0((uint64_t)v8, *(_QWORD *)(v2 - 408), type metadata accessor for ArtworkImage.Placeholder);
    JUMPOUT(0x100C3823CLL);
  }
  JUMPOUT(0x100C37C0CLL);
}

void sub_100C37E70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v2 - 71) = 4;
  v3 = sub_100C3BF3C();
  v4 = *(_QWORD *)(v2 - 232);
  v5 = *(_QWORD *)(v2 - 400);
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&_s11PlaceholderO20MusicVideoCodingKeysON, v2 - 71, v1, &_s11PlaceholderO20MusicVideoCodingKeysON, v3);
  if (!v5)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 344) + 8))(v4, *(_QWORD *)(v2 - 336));
    v6 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v2 - 104) + 8))(v0, v1, v6);
    v7 = sub_100007E8C(&qword_1011E4DE0);
    v8 = *(_QWORD *)(v2 - 408);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v8, 4, 10, v7);
    sub_10005B6C0(v8, *(_QWORD *)(v2 - 176), type metadata accessor for ArtworkImage.Placeholder);
    JUMPOUT(0x100C37C2CLL);
  }
  JUMPOUT(0x100C37C0CLL);
}

void sub_100C37F14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v2 - 70) = 5;
  v3 = sub_100C3BEF8();
  v4 = *(_QWORD *)(v2 - 224);
  v5 = *(_QWORD *)(v2 - 400);
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&_s11PlaceholderO12TvCodingKeysON, v2 - 70, v1, &_s11PlaceholderO12TvCodingKeysON, v3);
  if (!v5)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 328) + 8))(v4, *(_QWORD *)(v2 - 320));
    v6 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v2 - 104) + 8))(v0, v1, v6);
    v7 = sub_100007E8C(&qword_1011E4DE0);
    v8 = *(_QWORD *)(v2 - 408);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v8, 5, 10, v7);
    sub_10005B6C0(v8, *(_QWORD *)(v2 - 176), type metadata accessor for ArtworkImage.Placeholder);
    JUMPOUT(0x100C37C2CLL);
  }
  JUMPOUT(0x100C37C0CLL);
}

void sub_100C37FB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v3 - 69) = 6;
  v4 = sub_100C3BEB4();
  v5 = *(_QWORD *)(v3 - 400);
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&_s11PlaceholderO20MicrophoneCodingKeysON, v3 - 69, v1, &_s11PlaceholderO20MicrophoneCodingKeysON, v4);
  if (!v5)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 304) + 8))(v2, *(_QWORD *)(v3 - 296));
    v6 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v3 - 104) + 8))(v0, v1, v6);
    v7 = sub_100007E8C(&qword_1011E4DE0);
    v8 = *(_QWORD *)(v3 - 408);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v8, 6, 10, v7);
    sub_10005B6C0(v8, *(_QWORD *)(v3 - 176), type metadata accessor for ArtworkImage.Placeholder);
    JUMPOUT(0x100C37C2CLL);
  }
  JUMPOUT(0x100C37C0CLL);
}

void sub_100C38058()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v2 - 68) = 7;
  v3 = sub_100C3BE70();
  v4 = *(_QWORD *)(v2 - 208);
  v5 = *(_QWORD *)(v2 - 400);
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&_s11PlaceholderO16PersonCodingKeysON, v2 - 68, v1, &_s11PlaceholderO16PersonCodingKeysON, v3);
  if (!v5)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 288) + 8))(v4, *(_QWORD *)(v2 - 280));
    v6 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v2 - 104) + 8))(v0, v1, v6);
    v7 = sub_100007E8C(&qword_1011E4DE0);
    v8 = *(_QWORD *)(v2 - 408);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v8, 7, 10, v7);
    sub_10005B6C0(v8, *(_QWORD *)(v2 - 176), type metadata accessor for ArtworkImage.Placeholder);
    JUMPOUT(0x100C37C2CLL);
  }
  JUMPOUT(0x100C37C0CLL);
}

void sub_100C380FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v2 - 67) = 8;
  v3 = sub_100C3BE2C();
  v4 = *(_QWORD *)(v2 - 200);
  v5 = *(_QWORD *)(v2 - 400);
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&_s11PlaceholderO15RadioCodingKeysON, v2 - 67, v1, &_s11PlaceholderO15RadioCodingKeysON, v3);
  if (!v5)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 272) + 8))(v4, *(_QWORD *)(v2 - 264));
    v6 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v2 - 104) + 8))(v0, v1, v6);
    v7 = sub_100007E8C(&qword_1011E4DE0);
    v8 = *(_QWORD *)(v2 - 408);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v8, 8, 10, v7);
    sub_10005B6C0(v8, *(_QWORD *)(v2 - 176), type metadata accessor for ArtworkImage.Placeholder);
    JUMPOUT(0x100C37C2CLL);
  }
  JUMPOUT(0x100C37C0CLL);
}

void sub_100C381A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;

  *(_BYTE *)(v4 - 66) = 9;
  v5 = sub_100C3BDE8();
  v6 = *(_QWORD *)(v4 - 192);
  v7 = *(_QWORD *)(v4 - 400);
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&_s11PlaceholderO15GenreCodingKeysON, v4 - 66, v3, &_s11PlaceholderO15GenreCodingKeysON, v5);
  if (!v7)
  {
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v6, v1);
    v8 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v4 - 104) + 8))(v0, v3, v8);
    sub_100007E8C(&qword_1011E4DE0);
    JUMPOUT(0x100C38234);
  }
  JUMPOUT(0x100C37C0CLL);
}

void sub_100C3825C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  __n128 v9;
  uint64_t v10;

  *(_BYTE *)(v4 - 65) = 10;
  v5 = sub_100C3BDA4();
  v6 = *(_QWORD *)(v4 - 184);
  v7 = *(_QWORD *)(v4 - 400);
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&_s11PlaceholderO18ComposerCodingKeysON, v4 - 65, v1, &_s11PlaceholderO18ComposerCodingKeysON, v5);
  if (v7)
  {
    v8 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v4 - 104) + 8))(v0, v1, v8);
    JUMPOUT(0x100C37C2CLL);
  }
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v6, v2);
  v9 = swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v4 - 104) + 8))(v0, v1, v9);
  v10 = sub_100007E8C(&qword_1011E4DE0);
  (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(*(_QWORD *)(v4 - 408), 10, 10, v10);
  JUMPOUT(0x100C38244);
}

uint64_t sub_100C383A4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ArtworkImage.Placeholder.init(from:)(a1, a2);
}

void sub_100C383B8(_QWORD *a1)
{
  ArtworkImage.Placeholder.encode(to:)(a1);
}

Swift::Int sub_100C383D0(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  ArtworkImage.Placeholder.hash(into:)();
  return Hasher._finalize()();
}

uint64_t GenericMusicItem.placeholder.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, uint64_t, uint64_t, __n128);
  int v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  __n128 v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  __n128 v40;
  void (*v41)(char *, uint64_t, __n128);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v3 = type metadata accessor for Playlist(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for GenericMusicItem(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v43 - v13;
  v15 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16);
  v15((char *)&v43 - v13, v1, v7, v12);
  v16 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v14, v7);
  if (v16 == enum case for GenericMusicItem.album(_:))
    goto LABEL_2;
  if (v16 == enum case for GenericMusicItem.artist(_:))
    goto LABEL_13;
  if (v16 == enum case for GenericMusicItem.composer(_:))
  {
    v19 = sub_100007E8C(&qword_1011E4DE0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(a1, 10, 10, v19);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v14, v7);
  }
  if (v16 == enum case for GenericMusicItem.creditArtist(_:) || v16 == enum case for GenericMusicItem.curator(_:))
    goto LABEL_13;
  if (v16 == enum case for GenericMusicItem.editorialItem(_:))
    goto LABEL_2;
  if (v16 == enum case for GenericMusicItem.genre(_:))
  {
    v22 = sub_100007E8C(&qword_1011E4DE0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(a1, 9, 10, v22);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v14, v7);
  }
  if (v16 == enum case for GenericMusicItem.musicMovie(_:))
    goto LABEL_18;
  if (v16 == enum case for GenericMusicItem.musicVideo(_:))
  {
    v24 = sub_100007E8C(&qword_1011E4DE0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(a1, 4, 10, v24);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v14, v7);
  }
  if (v16 == enum case for GenericMusicItem.playlist(_:))
  {
    (*(void (**)(char *, uint64_t))(v8 + 96))(v14, v7);
    v25 = (*(uint64_t (**)(char *, char *, uint64_t))(v4 + 32))(v6, v14, v3);
    Playlist.variant.getter(v25);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v26 = sub_100007E8C(&qword_1011E4DE0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(a1, 0, 10, v26);
  }
  if (v16 == enum case for GenericMusicItem.radioShow(_:))
    goto LABEL_24;
  if (v16 == enum case for GenericMusicItem.recordLabel(_:))
  {
LABEL_13:
    (*(void (**)(char *, uint64_t))(v8 + 8))(v14, v7);
    v21 = sub_100007E8C(&qword_1011E4DE0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a1, 6, 10, v21);
  }
  if (v16 == enum case for GenericMusicItem.socialProfile(_:))
  {
    v28 = sub_100007E8C(&qword_1011E4DE0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(a1, 7, 10, v28);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v14, v7);
  }
  if (v16 == enum case for GenericMusicItem.song(_:))
    goto LABEL_2;
  if (v16 == enum case for GenericMusicItem.station(_:))
  {
LABEL_24:
    (*(void (**)(char *, uint64_t))(v8 + 8))(v14, v7);
    v27 = sub_100007E8C(&qword_1011E4DE0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(a1, 8, 10, v27);
  }
  if (v16 == enum case for GenericMusicItem.tvEpisode(_:)
    || v16 == enum case for GenericMusicItem.tvSeason(_:)
    || v16 == enum case for GenericMusicItem.tvShow(_:))
  {
LABEL_18:
    (*(void (**)(char *, uint64_t))(v8 + 8))(v14, v7);
    v23 = sub_100007E8C(&qword_1011E4DE0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(a1, 5, 10, v23);
  }
  if (v16 == enum case for GenericMusicItem.uploadedAudio(_:))
  {
LABEL_2:
    (*(void (**)(char *, uint64_t))(v8 + 8))(v14, v7);
LABEL_3:
    v17 = sub_100007E8C(&qword_1011E4DE0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a1, 1, 10, v17);
  }
  if (v16 == enum case for GenericMusicItem.uploadedVideo(_:))
    goto LABEL_18;
  if (v16 == enum case for GenericMusicItem.other(_:))
  {
    (*(void (**)(char *, uint64_t))(v8 + 96))(v14, v7);
    swift_bridgeObjectRelease(*((_QWORD *)v14 + 1));
    goto LABEL_3;
  }
  if (qword_1011DE0F0 != -1)
    swift_once(&qword_1011DE0F0, sub_100C39C4C);
  v29 = type metadata accessor for Logger(0);
  sub_100048B14(v29, (uint64_t)static Logger.artwork);
  v30 = ((uint64_t (*)(char *, uint64_t, uint64_t))v15)(v10, v1, v7);
  v31 = Logger.logObject.getter(v30);
  v33 = static os_log_type_t.fault.getter(v32);
  if (os_log_type_enabled(v31, v33))
  {
    v34 = swift_slowAlloc(22, -1);
    v35 = swift_slowAlloc(64, -1);
    v44 = v35;
    *(_DWORD *)v34 = 136315394;
    *(_QWORD *)(v34 + 4) = sub_100BBDE38((char *)0xD000000000000010, (char *)0x8000000100E32610, &v44);
    *(_WORD *)(v34 + 12) = 2080;
    v36 = sub_100048748((unint64_t *)&qword_1011DEFB8, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t)&protocol conformance descriptor for GenericMusicItem);
    v37 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v7, v36);
    v39 = v38;
    *(_QWORD *)(v34 + 14) = sub_100BBDE38(v37, v38, &v44);
    v40 = swift_bridgeObjectRelease(v39);
    v41 = *(void (**)(char *, uint64_t, __n128))(v8 + 8);
    v41(v10, v7, v40);
    _os_log_impl((void *)&_mh_execute_header, v31, v33, "Unhandled case for %s: %s", (uint8_t *)v34, 0x16u);
    swift_arrayDestroy(v35, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v35, -1, -1);
    swift_slowDealloc(v34, -1, -1);
  }
  else
  {
    v41 = *(void (**)(char *, uint64_t, __n128))(v8 + 8);
    ((void (*)(char *, uint64_t))v41)(v10, v7);
  }

  v42 = sub_100007E8C(&qword_1011E4DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(a1, 1, 10, v42);
  return ((uint64_t (*)(char *, uint64_t))v41)(v14, v7);
}

void GenericMusicItem.aspectRatio.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, uint64_t, uint64_t, __n128);
  int v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  __n128 v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  __n128 v31;
  void (*v32)(char *, uint64_t, __n128);
  double v33;
  uint64_t v34;

  v1 = sub_100007E8C((uint64_t *)&unk_1011E4DA0);
  __chkstk_darwin(v1);
  v3 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UploadedVideo(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for GenericMusicItem(0);
  v9 = *(double *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v33 - v14;
  v16 = *(void (**)(char *, uint64_t, uint64_t, __n128))(*(_QWORD *)&v9 + 16);
  v16((char *)&v33 - v14, v0, v8, v13);
  v17 = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)&v9 + 88))(v15, v8);
  if (v17 == enum case for GenericMusicItem.album(_:)
    || v17 == enum case for GenericMusicItem.artist(_:)
    || v17 == enum case for GenericMusicItem.composer(_:)
    || v17 == enum case for GenericMusicItem.creditArtist(_:)
    || v17 == enum case for GenericMusicItem.curator(_:)
    || v17 == enum case for GenericMusicItem.editorialItem(_:)
    || v17 == enum case for GenericMusicItem.genre(_:)
    || v17 == enum case for GenericMusicItem.musicMovie(_:)
    || v17 == enum case for GenericMusicItem.musicVideo(_:)
    || v17 == enum case for GenericMusicItem.playlist(_:)
    || v17 == enum case for GenericMusicItem.radioShow(_:)
    || v17 == enum case for GenericMusicItem.recordLabel(_:)
    || v17 == enum case for GenericMusicItem.socialProfile(_:)
    || v17 == enum case for GenericMusicItem.song(_:))
  {
    goto LABEL_10;
  }
  v33 = v9;
  if (v17 == enum case for GenericMusicItem.station(_:))
  {
LABEL_23:
    (*(void (**)(char *, uint64_t))(*(_QWORD *)&v33 + 8))(v15, v8);
    return;
  }
  v9 = v33;
  if (v17 == enum case for GenericMusicItem.tvEpisode(_:))
  {
LABEL_10:
    (*(void (**)(char *, uint64_t))(*(_QWORD *)&v9 + 8))(v15, v8);
    return;
  }
  if (v17 == enum case for GenericMusicItem.tvSeason(_:)
    || v17 == enum case for GenericMusicItem.tvShow(_:)
    || v17 == enum case for GenericMusicItem.uploadedAudio(_:))
  {
    goto LABEL_23;
  }
  if (v17 == enum case for GenericMusicItem.uploadedVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(*(_QWORD *)&v33 + 96))(v15, v8);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v15, v4);
    sub_100BBA958(v3);
    v18 = type metadata accessor for ArtworkImage.ViewModel(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v3, 1, v18) == 1)
    {
      sub_10004FF60((uint64_t)v3, (uint64_t *)&unk_1011E4DA0);
    }
    else
    {
      if (Artwork.maximumWidth.getter() >= 1 && Artwork.maximumHeight.getter() >= 1)
      {
        v19 = (double)Artwork.maximumWidth.getter();
        v33 = v19 / (double)Artwork.maximumHeight.getter();
        sub_10005B748((uint64_t)v3, type metadata accessor for ArtworkImage.ViewModel);
LABEL_38:
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        return;
      }
      sub_10005B748((uint64_t)v3, type metadata accessor for ArtworkImage.ViewModel);
    }
    v33 = 1.77777778;
    goto LABEL_38;
  }
  if (v17 == enum case for GenericMusicItem.other(_:))
  {
    (*(void (**)(char *, uint64_t))(*(_QWORD *)&v33 + 96))(v15, v8);
    swift_bridgeObjectRelease(*((_QWORD *)v15 + 1));
  }
  else
  {
    if (qword_1011DE0F0 != -1)
      swift_once(&qword_1011DE0F0, sub_100C39C4C);
    v20 = type metadata accessor for Logger(0);
    sub_100048B14(v20, (uint64_t)static Logger.artwork);
    v21 = ((uint64_t (*)(char *, uint64_t, uint64_t))v16)(v11, v0, v8);
    v22 = Logger.logObject.getter(v21);
    v24 = static os_log_type_t.fault.getter(v23);
    if (os_log_type_enabled(v22, v24))
    {
      v25 = swift_slowAlloc(22, -1);
      v26 = swift_slowAlloc(64, -1);
      v34 = v26;
      *(_DWORD *)v25 = 136315394;
      *(_QWORD *)(v25 + 4) = sub_100BBDE38((char *)0xD000000000000010, (char *)0x8000000100E32610, &v34);
      *(_WORD *)(v25 + 12) = 2080;
      v27 = sub_100048748((unint64_t *)&qword_1011DEFB8, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t)&protocol conformance descriptor for GenericMusicItem);
      v28 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v8, v27);
      v30 = v29;
      *(_QWORD *)(v25 + 14) = sub_100BBDE38(v28, v29, &v34);
      v31 = swift_bridgeObjectRelease(v30);
      v32 = *(void (**)(char *, uint64_t, __n128))(*(_QWORD *)&v33 + 8);
      v32(v11, v8, v31);
      _os_log_impl((void *)&_mh_execute_header, v22, v24, "Unhandled case for %s: %s", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy(v26, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v26, -1, -1);
      swift_slowDealloc(v25, -1, -1);
    }
    else
    {
      v32 = *(void (**)(char *, uint64_t, __n128))(*(_QWORD *)&v33 + 8);
      ((void (*)(char *, uint64_t))v32)(v11, v8);
    }

    ((void (*)(char *, uint64_t))v32)(v15, v8);
  }
}

void *CGFloat.videoAspectRatio.unsafeMutableAddressor()
{
  return &static CGFloat.videoAspectRatio;
}

void *CGFloat.moviePosterAspectRatio.unsafeMutableAddressor()
{
  return &static CGFloat.moviePosterAspectRatio;
}

void Playlist.Variant.symbolImage.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  unint64_t v7;
  NSString v8;
  id v9;
  uint64_t v10;

  v1 = v0;
  v2 = type metadata accessor for Playlist.Variant(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == enum case for Playlist.Variant.smart(_:))
  {
    v7 = 0xE900000000000065;
  }
  else if (v6 == enum case for Playlist.Variant.genius(_:))
  {
    v7 = 0xE600000000000000;
  }
  else if (v6 == enum case for Playlist.Variant.folder(_:))
  {
    v7 = 0xE600000000000000;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v7 = 0xEF7473696C2E6574;
  }
  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v7);
  v9 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v8);

  if (!v9)
    __break(1u);
}

uint64_t ArtworkImage.ViewModel.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  NSString v26;
  uint64_t v27;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  _QWORD v35[4];

  v4 = sub_100007E8C(&qword_1011DEFB0);
  __chkstk_darwin(v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Artwork(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v31 - v12;
  v14 = type metadata accessor for ArtworkImage.ViewModel(0);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v15 + 56))(a2, 1, 1, v14, v16);
  v33 = v15;
  v19 = a1;
  Artwork.init(_:)();
  v20 = objc_msgSend(v19, "token");
  _bridgeAnyObjectToAny(_:)(v35, v20);
  swift_unknownObjectRelease(v20);
  v21 = sub_10004A07C(0, &qword_1011E20E8, MPStoreArtworkRequestToken_ptr);
  if ((swift_dynamicCast(&v34, v35, (char *)&type metadata for Any + 8, v21, 6) & 1) == 0)
  {

LABEL_8:
    v29 = &v18[*(int *)(v14 + 20)];
    v30 = type metadata accessor for Artwork.CropStyle(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v29, 1, 1, v30);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v18, v13, v7);
    goto LABEL_9;
  }
  v32 = a2;
  v22 = v34;
  v23 = objc_msgSend(v34, "cropStyle");

  if (!v23)
  {

    a2 = v32;
    goto LABEL_8;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
  v31 = v6;
  v25 = v24;

  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v13, v7);
  v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v25);
  v27 = (uint64_t)v31;
  Artwork.CropStyle.init(_:)(v26, (uint64_t)v31);

  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v18, v10, v7);
  sub_100065228(v27, (uint64_t)&v18[*(int *)(v14 + 20)], &qword_1011DEFB0);
  a2 = v32;
LABEL_9:
  sub_10005B6C0((uint64_t)v18, a2, type metadata accessor for ArtworkImage.ViewModel);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v33 + 56))(a2, 0, 1, v14);
}

uint64_t Artwork.CropStyle.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  char v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v85;

  v4 = type metadata accessor for Artwork.CropStyle(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v85 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a2, 1, 1, v4);
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(ICStoreArtworkInfoCropStyleBoundedBox);
  v10 = v9;
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  if (v8 == v11 && v10 == v12)
  {
    v34 = a1;
    v17 = swift_bridgeObjectRelease_n(v10, 2);
    goto LABEL_16;
  }
  v14 = v12;
  v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v10, v11, v12, 0);
  v16 = a1;
  swift_bridgeObjectRelease(v10);
  v17 = swift_bridgeObjectRelease(v14);
  if ((v15 & 1) != 0)
  {
LABEL_16:
    static Artwork.CropStyle.boundedBox.getter(v17);
LABEL_17:

    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v7, v4);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, v4);
  }
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(ICStoreArtworkInfoCropStyleConstrainedWidth);
  v20 = v19;
  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  if (v18 == v21 && v20 == v22)
  {
    v26 = swift_bridgeObjectRelease_n(v20, 2);
    goto LABEL_19;
  }
  v24 = v22;
  v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v20, v21, v22, 0);
  swift_bridgeObjectRelease(v20);
  v26 = swift_bridgeObjectRelease(v24);
  if ((v25 & 1) != 0)
  {
LABEL_19:
    static Artwork.CropStyle.constrainedWidth.getter(v26);
    goto LABEL_17;
  }
  v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(ICStoreArtworkInfoCropStyleConstrainedHeight);
  v29 = v28;
  v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v32 = v30;
  if (v27 == v31 && v29 == v30)
  {
    v33 = swift_bridgeObjectRelease_n(v29, 2);
LABEL_21:
    static Artwork.CropStyle.constrainedHeight.getter(v33);
    goto LABEL_17;
  }
  v36 = _stringCompareWithSmolCheck(_:_:expecting:)(v27, v29, v31, v30, 0);
  swift_bridgeObjectRelease(v29);
  v33 = swift_bridgeObjectRelease(v32);
  if ((v36 & 1) != 0)
    goto LABEL_21;
  v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(ICStoreArtworkInfoCropStyleFCCrop270);
  v39 = v38;
  v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v42 = v40;
  if (v37 == v41 && v39 == v40)
  {
    v43 = swift_bridgeObjectRelease_n(v39, 2);
LABEL_26:
    static Artwork.CropStyle.featuredContentCrop270.getter(v43);
    goto LABEL_17;
  }
  v44 = _stringCompareWithSmolCheck(_:_:expecting:)(v37, v39, v41, v40, 0);
  swift_bridgeObjectRelease(v39);
  v43 = swift_bridgeObjectRelease(v42);
  if ((v44 & 1) != 0)
    goto LABEL_26;
  v45 = static String._unconditionallyBridgeFromObjectiveC(_:)(ICStoreArtworkInfoCropStyleFCCrop44);
  v47 = v46;
  v49 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v50 = v48;
  if (v45 == v49 && v47 == v48)
  {
    v51 = swift_bridgeObjectRelease_n(v47, 2);
LABEL_31:
    static Artwork.CropStyle.featuredContentCrop44.getter(v51);
    goto LABEL_17;
  }
  v52 = _stringCompareWithSmolCheck(_:_:expecting:)(v45, v47, v49, v48, 0);
  swift_bridgeObjectRelease(v47);
  v51 = swift_bridgeObjectRelease(v50);
  if ((v52 & 1) != 0)
    goto LABEL_31;
  v53 = static String._unconditionallyBridgeFromObjectiveC(_:)(ICStoreArtworkInfoCropStyleFCCrop170T100B);
  v55 = v54;
  v57 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v58 = v56;
  if (v53 == v57 && v55 == v56)
  {
    v59 = swift_bridgeObjectRelease_n(v55, 2);
LABEL_36:
    static Artwork.CropStyle.featuredContentCrop170T100B.getter(v59);
    goto LABEL_17;
  }
  v60 = _stringCompareWithSmolCheck(_:_:expecting:)(v53, v55, v57, v56, 0);
  swift_bridgeObjectRelease(v55);
  v59 = swift_bridgeObjectRelease(v58);
  if ((v60 & 1) != 0)
    goto LABEL_36;
  v61 = static String._unconditionallyBridgeFromObjectiveC(_:)(ICStoreArtworkInfoCropStyleSourceSize);
  v63 = v62;
  v65 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v66 = v64;
  if (v61 == v65 && v63 == v64)
  {
    v67 = swift_bridgeObjectRelease_n(v63, 2);
LABEL_41:
    static Artwork.CropStyle.sourceSize.getter(v67);
    goto LABEL_17;
  }
  v68 = _stringCompareWithSmolCheck(_:_:expecting:)(v61, v63, v65, v64, 0);
  swift_bridgeObjectRelease(v63);
  v67 = swift_bridgeObjectRelease(v66);
  if ((v68 & 1) != 0)
    goto LABEL_41;
  v69 = static String._unconditionallyBridgeFromObjectiveC(_:)(ICStoreArtworkInfoCropStyleSpecificRectangle);
  v71 = v70;
  v73 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v74 = v72;
  if (v69 == v73 && v71 == v72)
  {
    v75 = swift_bridgeObjectRelease_n(v71, 2);
LABEL_46:
    static Artwork.CropStyle.specificRectangle.getter(v75);
    goto LABEL_17;
  }
  v76 = _stringCompareWithSmolCheck(_:_:expecting:)(v69, v71, v73, v72, 0);
  swift_bridgeObjectRelease(v71);
  v75 = swift_bridgeObjectRelease(v74);
  if ((v76 & 1) != 0)
    goto LABEL_46;
  v77 = static String._unconditionallyBridgeFromObjectiveC(_:)(ICStoreArtworkInfoCropStyleSquareCenterCrop);
  v79 = v78;
  v81 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v82 = v80;
  if (v77 == v81 && v79 == v80)
  {
    v83 = swift_bridgeObjectRelease_n(v79, 2);
LABEL_51:
    static Artwork.CropStyle.squareCenterCrop.getter(v83);
    goto LABEL_17;
  }
  v84 = _stringCompareWithSmolCheck(_:_:expecting:)(v77, v79, v81, v80, 0);
  swift_bridgeObjectRelease(v79);
  v83 = swift_bridgeObjectRelease(v82);
  if ((v84 & 1) != 0)
    goto LABEL_51;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a2, 1, 1, v4);
}

uint64_t sub_100C39A7C()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for Artwork.CropStyle(0);
  sub_10004FACC(v0, static Artwork.CropStyle.fallback);
  v1 = sub_100048B14(v0, (uint64_t)static Artwork.CropStyle.fallback);
  return static Artwork.CropStyle.boundedBox.getter(v1);
}

uint64_t static Artwork.CropStyle.fallback.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100C39FC0(&qword_1011DE0E0, (uint64_t (*)(_QWORD))&type metadata accessor for Artwork.CropStyle, (uint64_t)static Artwork.CropStyle.fallback, (uint64_t)sub_100C39A7C, a1);
}

uint64_t sub_100C39AE8()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for Artwork.ImageFormat(0);
  sub_10004FACC(v0, static Artwork.ImageFormat.fallback);
  v1 = sub_100048B14(v0, (uint64_t)static Artwork.ImageFormat.fallback);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, enum case for Artwork.ImageFormat.heic(_:), v0);
}

uint64_t static Artwork.ImageFormat.fallback.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100C39FC0(&qword_1011DE0E8, (uint64_t (*)(_QWORD))&type metadata accessor for Artwork.ImageFormat, (uint64_t)static Artwork.ImageFormat.fallback, (uint64_t)sub_100C39AE8, a1);
}

double static CGFloat.videoAspectRatio.getter()
{
  return 1.77777778;
}

void *CGFloat.verticalVideoAspectRatio.unsafeMutableAddressor()
{
  return &static CGFloat.verticalVideoAspectRatio;
}

double static CGFloat.verticalVideoAspectRatio.getter()
{
  return 0.5625;
}

double static CGFloat.moviePosterAspectRatio.getter()
{
  return 0.666666667;
}

uint64_t static Artwork.monogramArtwork(for:layoutDirection:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  char v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;

  v9 = a4 & 1;
  sub_10004A07C(0, (unint64_t *)&qword_1011E3B10, MPArtworkCatalog_ptr);
  if (static MPArtworkCatalog.monogram(for:layoutDirection:)(a1, a2, a3, v9))
  {
    Artwork.init(_:)();
    v10 = type metadata accessor for Artwork(0);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
    v12 = a5;
    v13 = 0;
  }
  else
  {
    v10 = type metadata accessor for Artwork(0);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
    v12 = a5;
    v13 = 1;
  }
  return v11(v12, v13, 1, v10);
}

uint64_t sub_100C39C4C()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10004FACC(v0, static Logger.artwork);
  sub_100048B14(v0, (uint64_t)static Logger.artwork);
  return static Logger.music(_:)(0x6B726F77747241, 0xE700000000000000);
}

uint64_t type metadata accessor for ArtworkImage.ViewModel(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011E2168, (uint64_t)&nominal type descriptor for ArtworkImage.ViewModel);
}

uint64_t type metadata accessor for ArtworkImage.Placeholder(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011E2378, (uint64_t)&nominal type descriptor for ArtworkImage.Placeholder);
}

uint64_t sub_100C39CD0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(type metadata accessor for ArtworkImage.Placeholder(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 58) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = sub_100007E8C(&qword_1011E4DE0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v0 + v2, 10, v4))
  {
    v5 = type metadata accessor for Playlist.Variant(0);
    v6 = *(_QWORD *)(v5 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v2, 1, v5))
      (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v2, v5);
  }
  return swift_deallocObject(v0, v2 + v3);
}

uint64_t sub_100C39D8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ArtworkImage.Placeholder(0) - 8) + 80);
  return sub_100C32CC4(v1 + 16, v1 + ((v3 + 58) & ~v3), a1);
}

unint64_t sub_100C39DFC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E1F10;
  if (!qword_1011E1F10)
  {
    v1 = sub_100044B54((uint64_t *)&unk_1011E3D90);
    sub_100C39E80();
    sub_100049F28(&qword_1011E1F30, (uint64_t *)&unk_1011E3DE0, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E1F10);
  }
  return result;
}

unint64_t sub_100C39E80()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E3DA0;
  if (!qword_1011E3DA0)
  {
    v1 = sub_100044B54(&qword_1011E1F18);
    sub_100C39EEC();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E3DA0);
  }
  return result;
}

unint64_t sub_100C39EEC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E3DB0;
  if (!qword_1011E3DB0)
  {
    v1 = sub_100044B54(&qword_1011E1F20);
    sub_100048748((unint64_t *)&unk_1011E3DC0, type metadata accessor for ArtworkImage.Placeholder.View, (uint64_t)&protocol conformance descriptor for ArtworkImage.Placeholder.View);
    sub_100049F28(&qword_1011E1F28, (uint64_t *)&unk_1011E3DD0, (uint64_t)&protocol conformance descriptor for _PreferenceWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E3DB0);
  }
  return result;
}

uint64_t type metadata accessor for ArtworkImage.Placeholder.View(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011E23F8, (uint64_t)&nominal type descriptor for ArtworkImage.Placeholder.View);
}

uint64_t static Logger.artwork.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100C39FC0(&qword_1011DE0F0, (uint64_t (*)(_QWORD))&type metadata accessor for Logger, (uint64_t)static Logger.artwork, (uint64_t)sub_100C39C4C, a1);
}

uint64_t sub_100C39FC0@<X0>(_QWORD *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;

  if (*a1 != -1)
    swift_once(a1, a4);
  v8 = a2(0);
  v9 = sub_100048B14(v8, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a5, v9, v8);
}

uint64_t sub_100C3A02C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_100007E8C(&qword_1011E1F88);
  sub_10004FACC(v0, qword_1011E1EF8);
  v1 = sub_100048B14(v0, (uint64_t)qword_1011E1EF8);
  v2 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
}

uint64_t sub_100C3A094@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1011DE0F8 != -1)
    swift_once(&qword_1011DE0F8, sub_100C3A02C);
  v2 = sub_100007E8C(&qword_1011E1F88);
  v3 = sub_100048B14(v2, (uint64_t)qword_1011E1EF8);
  return sub_10004A160(v3, a1, &qword_1011E1F88);
}

void (*EnvironmentValues.placeholderStyle.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  _QWORD *v5;
  unint64_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011E1F88) - 8) + 64);
  v3[1] = malloc(v4);
  v3[2] = malloc(v4);
  v5 = malloc(v4);
  v3[3] = v5;
  v6 = sub_100C3BD08();
  v3[4] = v6;
  EnvironmentValues.subscript.getter(v5, &_s19PlaceholderStyleKeyVN, &_s19PlaceholderStyleKeyVN, v6);
  return sub_100C3A1A0;
}

void sub_100C3A1A0(uint64_t **a1, char a2)
{
  uint64_t *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;

  v3 = *a1;
  sub_10004A160((*a1)[3], (*a1)[2], &qword_1011E1F88);
  v4 = (void *)v3[3];
  v5 = v3[4];
  v6 = (void *)v3[1];
  v7 = (void *)v3[2];
  if ((a2 & 1) != 0)
  {
    sub_10004A160(v3[2], v3[1], &qword_1011E1F88);
    EnvironmentValues.subscript.setter(v6, &_s19PlaceholderStyleKeyVN, &_s19PlaceholderStyleKeyVN, v5);
    sub_10004FF60((uint64_t)v7, &qword_1011E1F88);
  }
  else
  {
    EnvironmentValues.subscript.setter(v3[2], &_s19PlaceholderStyleKeyVN, &_s19PlaceholderStyleKeyVN, v3[4]);
  }
  sub_10004FF60((uint64_t)v4, &qword_1011E1F88);
  free(v4);
  free(v7);
  free(v6);
  free(v3);
}

uint64_t sub_100C3A27C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23[2];

  v20 = a1;
  sub_100007E8C(&qword_1011E1FA0);
  __chkstk_darwin();
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for BlendMode(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011E1F88);
  __chkstk_darwin();
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin();
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(a2, (uint64_t)v10, &qword_1011E1F88);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    return sub_10004FF60((uint64_t)v10, &qword_1011E1F88);
  sub_10005B6C0((uint64_t)v10, (uint64_t)v14, type metadata accessor for ArtworkImage.Placeholder.View.Style);
  sub_10004A160((uint64_t)v14, (uint64_t)&v21, (uint64_t *)&unk_1011E3E20);
  if (v22)
  {
    sub_100064C48(&v21, (uint64_t)v23);
    v16 = v20;
    sub_10004FF60(v20, (uint64_t *)&unk_1011E3E20);
    sub_100064C48(v23, v16);
  }
  else
  {
    sub_10004FF60((uint64_t)&v21, (uint64_t *)&unk_1011E3E20);
    v16 = v20;
  }
  sub_10004A160((uint64_t)(v14 + 40), (uint64_t)&v21, (uint64_t *)&unk_1011E3E20);
  if (v22)
  {
    sub_100064C48(&v21, (uint64_t)v23);
    sub_10004FF60(v16 + 40, (uint64_t *)&unk_1011E3E20);
    sub_100064C48(v23, v16 + 40);
  }
  else
  {
    sub_10004FF60((uint64_t)&v21, (uint64_t *)&unk_1011E3E20);
  }
  sub_10004A160((uint64_t)&v14[*(int *)(v11 + 24)], (uint64_t)v4, &qword_1011E1FA0);
  sub_10005B748((uint64_t)v14, type metadata accessor for ArtworkImage.Placeholder.View.Style);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    return sub_10004FF60((uint64_t)v4, &qword_1011E1FA0);
  v17 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v17(v8, v4, v5);
  v18 = v16 + *(int *)(v11 + 24);
  sub_10004FF60(v18, &qword_1011E1FA0);
  v17((char *)v18, v8, v5);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))(v18, 0, 1, v5);
}

uint64_t PlaceholderStyleModifier.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  char *v5;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  sub_100007E8C(&qword_1011E1F88);
  __chkstk_darwin();
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100EEEB70);
  sub_100C3A678((uint64_t)v5);
  v7 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 0, 1, v7);
  v8 = (uint64_t *)(a2 + *(int *)(sub_100007E8C(&qword_1011E20F0) + 36));
  v9 = sub_100007E8C(&qword_1011E20F8);
  sub_10004A160((uint64_t)v5, (uint64_t)v8 + *(int *)(v9 + 28), &qword_1011E1F88);
  *v8 = KeyPath;
  v10 = sub_100007E8C(&qword_1011E2100);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a2, a1, v10);
  return sub_10004FF60((uint64_t)v5, &qword_1011E1F88);
}

uint64_t sub_100C3A678@<X0>(uint64_t a1@<X8>)
{
  uint64_t (**v1)(uint64_t);
  uint64_t (**v2)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  _OWORD v16[2];
  uint64_t v17;
  _OWORD v18[2];
  uint64_t v19;

  v2 = v1;
  v4 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (_OWORD *)((char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100007E8C(&qword_1011E1FA0);
  __chkstk_darwin();
  v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011E1F88);
  __chkstk_darwin();
  v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PlaceholderStyleModifier(0);
  sub_100C31A2C(&qword_1011DE408, &qword_1011E1F88, (char *)0x6C616E6F6974704FLL, (char *)0xEF3E656C7974533CLL, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4) == 1)
  {
    v19 = 0;
    memset(v18, 0, sizeof(v18));
    v12 = type metadata accessor for BlendMode(0);
    memset(v16, 0, sizeof(v16));
    v17 = 0;
    v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
    v13(v9, 1, 1, v12);
    v7[3] = 0u;
    v7[4] = 0u;
    v7[1] = 0u;
    v7[2] = 0u;
    *v7 = 0u;
    v14 = (uint64_t)v7 + *(int *)(v4 + 24);
    v13((char *)v14, 1, 1, v12);
    sub_1000A5508((uint64_t)v18, (uint64_t)v7, (uint64_t *)&unk_1011E3E20);
    sub_1000A5508((uint64_t)v16, (uint64_t)v7 + 40, (uint64_t *)&unk_1011E3E20);
    sub_1000A5508((uint64_t)v9, v14, &qword_1011E1FA0);
    sub_10005B6C0((uint64_t)v7, a1, type metadata accessor for ArtworkImage.Placeholder.View.Style);
    sub_10004FF60((uint64_t)v11, &qword_1011E1F88);
  }
  else
  {
    sub_10005B6C0((uint64_t)v11, a1, type metadata accessor for ArtworkImage.Placeholder.View.Style);
  }
  return (*v2)(a1);
}

uint64_t View.placeholderStyle(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v18 = a3;
  v5 = *(_QWORD *)(sub_100007E8C(&qword_1011E1F88) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin();
  v7 = type metadata accessor for PlaceholderStyleModifier(0);
  __chkstk_darwin();
  v9 = (uint64_t *)((char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  v11 = (char *)&v18 - v10;
  sub_10004A160(a1, (uint64_t)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1011E1F88);
  v12 = (_QWORD *)((char *)v9 + *(int *)(v7 + 20));
  *v12 = swift_getKeyPath(&unk_100EEEB70);
  v13 = sub_100007E8C(&qword_1011DE408);
  swift_storeEnumTagMultiPayload(v12, v13, 0);
  v14 = *(unsigned __int8 *)(v5 + 80);
  v15 = (v14 + 16) & ~v14;
  v16 = swift_allocObject(&unk_10110A4C8, v15 + v6, v14 | 7);
  sub_100065228((uint64_t)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15, &qword_1011E1F88);
  *v9 = sub_100C3C0A8;
  v9[1] = v16;
  sub_10005B6C0((uint64_t)v9, (uint64_t)v11, type metadata accessor for PlaceholderStyleModifier);
  View.modifier<A>(_:)(v11, a2, v7, v18);
  return sub_10005B748((uint64_t)v11, type metadata accessor for PlaceholderStyleModifier);
}

uint64_t View.placeholderStyle(_:)(void (*a1)(__n128), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v20 = a4;
  v6 = *(_QWORD *)(sub_100007E8C(&qword_1011E1F88) - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin();
  v8 = type metadata accessor for PlaceholderStyleModifier(0);
  __chkstk_darwin();
  v10 = (uint64_t *)((char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = __chkstk_darwin();
  v13 = (char *)&v20 - v12;
  a1(v11);
  v14 = (_QWORD *)((char *)v10 + *(int *)(v8 + 20));
  *v14 = swift_getKeyPath(&unk_100EEEB70);
  v15 = sub_100007E8C(&qword_1011DE408);
  swift_storeEnumTagMultiPayload(v14, v15, 0);
  v16 = *(unsigned __int8 *)(v6 + 80);
  v17 = (v16 + 16) & ~v16;
  v18 = swift_allocObject(&unk_10110A4F0, v17 + v7, v16 | 7);
  sub_100065228((uint64_t)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17, &qword_1011E1F88);
  *v10 = sub_100C3C0A8;
  v10[1] = v18;
  sub_10005B6C0((uint64_t)v10, (uint64_t)v13, type metadata accessor for PlaceholderStyleModifier);
  View.modifier<A>(_:)(v13, a3, v8, v20);
  return sub_10005B748((uint64_t)v13, type metadata accessor for PlaceholderStyleModifier);
}

uint64_t View.placeholderStyle(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v18;

  v8 = type metadata accessor for PlaceholderStyleModifier(0);
  __chkstk_darwin(v8);
  v10 = (uint64_t *)((char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  v13 = (char *)&v18 - v12;
  v15 = (_QWORD *)((char *)v10 + *(int *)(v14 + 20));
  *v15 = swift_getKeyPath(&unk_100EEEB70);
  v16 = sub_100007E8C(&qword_1011DE408);
  swift_storeEnumTagMultiPayload(v15, v16, 0);
  *v10 = a1;
  v10[1] = a2;
  sub_10005B6C0((uint64_t)v10, (uint64_t)v13, type metadata accessor for PlaceholderStyleModifier);
  swift_retain();
  View.modifier<A>(_:)(v13, a3, v8, a4);
  return sub_10005B748((uint64_t)v13, type metadata accessor for PlaceholderStyleModifier);
}

uint64_t _s17_MusicKit_SwiftUI12ArtworkImageV0a4CoreD0E4SizeV23__derived_struct_equalsySbAF_AFtFZ_0(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;
  char v4;
  int v5;
  int v6;

  v2 = *(_BYTE *)(a2 + 8);
  if ((*(_BYTE *)(a1 + 8) & 1) == 0)
  {
    if (*(double *)a1 != *(double *)a2)
      v2 = 1;
    if ((v2 & 1) != 0)
      return 0;
LABEL_7:
    v3 = *(_BYTE *)(a2 + 24);
    if ((*(_BYTE *)(a1 + 24) & 1) != 0)
    {
      if (!*(_BYTE *)(a2 + 24))
        return 0;
    }
    else
    {
      if (*(double *)(a1 + 16) != *(double *)(a2 + 16))
        v3 = 1;
      if ((v3 & 1) != 0)
        return 0;
    }
    v4 = *(_BYTE *)(a2 + 40);
    if ((*(_BYTE *)(a1 + 40) & 1) != 0)
    {
      if (!*(_BYTE *)(a2 + 40))
        return 0;
    }
    else
    {
      if (*(double *)(a1 + 32) != *(double *)(a2 + 32))
        v4 = 1;
      if ((v4 & 1) != 0)
        return 0;
    }
    v5 = *(unsigned __int8 *)(a1 + 41);
    v6 = *(unsigned __int8 *)(a2 + 41);
    if (v5 == 2)
    {
      if (v6 != 2)
        return 0;
    }
    else if (v6 == 2 || (static ContentMode.== infix(_:_:)(v5 & 1, v6 & 1) & 1) == 0)
    {
      return 0;
    }
    return 1;
  }
  if (*(_BYTE *)(a2 + 8))
    goto LABEL_7;
  return 0;
}

BOOL _s17_MusicKit_SwiftUI12ArtworkImageV0a4CoreD0E9ViewModelV23__derived_struct_equalsySbAF_AFtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(uint64_t, uint64_t, uint64_t);
  char *v20;
  uint64_t v21;
  char v22;
  void (*v23)(char *, uint64_t);
  uint64_t v25;
  char *v26;

  v4 = type metadata accessor for Artwork.CropStyle(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011E2750);
  __chkstk_darwin();
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011DEFB0);
  __chkstk_darwin();
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v14 = (char *)&v25 - v13;
  __chkstk_darwin();
  v16 = (char *)&v25 - v15;
  if ((static Artwork.== infix(_:_:)(a1, a2) & 1) == 0)
    return 0;
  v26 = v7;
  v17 = type metadata accessor for ArtworkImage.ViewModel(0);
  sub_10004A160(a1 + *(int *)(v17 + 20), (uint64_t)v16, &qword_1011DEFB0);
  sub_10004A160(a2 + *(int *)(v17 + 20), (uint64_t)v14, &qword_1011DEFB0);
  v18 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_10004A160((uint64_t)v16, (uint64_t)v10, &qword_1011DEFB0);
  sub_10004A160((uint64_t)v14, v18, &qword_1011DEFB0);
  v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v19((uint64_t)v10, 1, v4) == 1)
  {
    sub_10004FF60((uint64_t)v14, &qword_1011DEFB0);
    sub_10004FF60((uint64_t)v16, &qword_1011DEFB0);
    if (v19(v18, 1, v4) == 1)
    {
      sub_10004FF60((uint64_t)v10, &qword_1011DEFB0);
      return 1;
    }
    goto LABEL_7;
  }
  sub_10004A160((uint64_t)v10, (uint64_t)v12, &qword_1011DEFB0);
  if (v19(v18, 1, v4) == 1)
  {
    sub_10004FF60((uint64_t)v14, &qword_1011DEFB0);
    sub_10004FF60((uint64_t)v16, &qword_1011DEFB0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v12, v4);
LABEL_7:
    sub_10004FF60((uint64_t)v10, &qword_1011E2750);
    return 0;
  }
  v20 = v26;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v26, v18, v4);
  v21 = sub_100048748(&qword_1011E2758, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork.CropStyle, (uint64_t)&protocol conformance descriptor for Artwork.CropStyle);
  v22 = dispatch thunk of static Equatable.== infix(_:_:)(v12, v20, v4, v21);
  v23 = *(void (**)(char *, uint64_t))(v5 + 8);
  v23(v20, v4);
  sub_10004FF60((uint64_t)v14, &qword_1011DEFB0);
  sub_10004FF60((uint64_t)v16, &qword_1011DEFB0);
  v23(v12, v4);
  sub_10004FF60((uint64_t)v10, &qword_1011DEFB0);
  return (v22 & 1) != 0;
}

uint64_t type metadata accessor for ArtworkImage.Info(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011E2200, (uint64_t)&nominal type descriptor for ArtworkImage.Info);
}

uint64_t _s17_MusicKit_SwiftUI12ArtworkImageV0a4CoreD0E4InfoV23__derived_struct_equalsySbAF_AFtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unsigned int (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  BOOL v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  double *v25;
  char v26;
  double *v27;
  int v28;
  __int128 *v29;
  __int128 v30;
  __int128 v31;
  __int128 *v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  _OWORD v44[2];
  __int128 v45;
  _BYTE v46[26];

  v4 = type metadata accessor for ArtworkImage.ViewModel(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v40 = (uint64_t)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011E2748);
  __chkstk_darwin();
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C((uint64_t *)&unk_1011E4DA0);
  __chkstk_darwin();
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v13 = (char *)&v39 - v12;
  __chkstk_darwin();
  v15 = (char *)&v39 - v14;
  v41 = a1;
  sub_10004A160(a1, (uint64_t)&v39 - v14, (uint64_t *)&unk_1011E4DA0);
  v42 = a2;
  sub_10004A160(a2, (uint64_t)v13, (uint64_t *)&unk_1011E4DA0);
  v16 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_10004A160((uint64_t)v15, (uint64_t)v9, (uint64_t *)&unk_1011E4DA0);
  sub_10004A160((uint64_t)v13, v16, (uint64_t *)&unk_1011E4DA0);
  v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v17((uint64_t)v9, 1, v4) != 1)
  {
    sub_10004A160((uint64_t)v9, (uint64_t)v11, (uint64_t *)&unk_1011E4DA0);
    if (v17(v16, 1, v4) != 1)
    {
      v18 = v40;
      sub_10005B6C0(v16, v40, type metadata accessor for ArtworkImage.ViewModel);
      v19 = _s17_MusicKit_SwiftUI12ArtworkImageV0a4CoreD0E9ViewModelV23__derived_struct_equalsySbAF_AFtFZ_0((uint64_t)v11, v18);
      sub_10005B748(v18, type metadata accessor for ArtworkImage.ViewModel);
      sub_10004FF60((uint64_t)v13, (uint64_t *)&unk_1011E4DA0);
      sub_10004FF60((uint64_t)v15, (uint64_t *)&unk_1011E4DA0);
      sub_10005B748((uint64_t)v11, type metadata accessor for ArtworkImage.ViewModel);
      sub_10004FF60((uint64_t)v9, (uint64_t *)&unk_1011E4DA0);
      if (!v19)
        return 0;
      goto LABEL_8;
    }
    sub_10004FF60((uint64_t)v13, (uint64_t *)&unk_1011E4DA0);
    sub_10004FF60((uint64_t)v15, (uint64_t *)&unk_1011E4DA0);
    sub_10005B748((uint64_t)v11, type metadata accessor for ArtworkImage.ViewModel);
LABEL_6:
    sub_10004FF60((uint64_t)v9, &qword_1011E2748);
    return 0;
  }
  sub_10004FF60((uint64_t)v13, (uint64_t *)&unk_1011E4DA0);
  sub_10004FF60((uint64_t)v15, (uint64_t *)&unk_1011E4DA0);
  if (v17(v16, 1, v4) != 1)
    goto LABEL_6;
  sub_10004FF60((uint64_t)v9, (uint64_t *)&unk_1011E4DA0);
LABEL_8:
  v20 = (int *)type metadata accessor for ArtworkImage.Info(0);
  v22 = v41;
  v21 = v42;
  _s17_MusicKit_SwiftUI12ArtworkImageV0a4CoreD0E11PlaceholderO21__derived_enum_equalsySbAF_AFtFZ_0(v41 + v20[5], v42 + v20[5]);
  if ((v23 & 1) != 0)
  {
    v24 = v20[6];
    v25 = (double *)(v22 + v24);
    v26 = *(_BYTE *)(v22 + v24 + 8);
    v27 = (double *)(v21 + v24);
    v28 = *(unsigned __int8 *)(v21 + v24 + 8);
    if ((v26 & 1) != 0)
    {
      if (!v28)
        return 0;
    }
    else
    {
      if (*v25 != *v27)
        LOBYTE(v28) = 1;
      if ((v28 & 1) != 0)
        return 0;
    }
    v29 = (__int128 *)(v22 + v20[7]);
    v30 = *(__int128 *)((char *)v29 + 26);
    v31 = v29[1];
    v43 = *v29;
    v44[0] = v31;
    *(_OWORD *)((char *)v44 + 10) = v30;
    v32 = (__int128 *)(v21 + v20[7]);
    *(_OWORD *)&v46[10] = *(__int128 *)((char *)v32 + 26);
    v33 = v32[1];
    v45 = *v32;
    *(_OWORD *)v46 = v33;
    if ((_s17_MusicKit_SwiftUI12ArtworkImageV0a4CoreD0E4SizeV23__derived_struct_equalsySbAF_AFtFZ_0((uint64_t)&v43, (uint64_t)&v45) & 1) != 0)
    {
      v34 = v20[8];
      v35 = v22 + v34;
      v36 = *(_BYTE *)(v22 + v34 + 16);
      v37 = v21 + v34;
      if ((v36 & 1) != 0)
      {
        if ((*(_BYTE *)(v37 + 16) & 1) == 0)
          return 0;
      }
      else if ((*(_BYTE *)(v37 + 16) & 1) != 0
             || *(double *)v35 != *(double *)v37
             || *(_QWORD *)(v35 + 8) != *(_QWORD *)(v37 + 8))
      {
        return 0;
      }
      return 1;
    }
  }
  return 0;
}

void _s17_MusicKit_SwiftUI12ArtworkImageV0a4CoreD0E11PlaceholderO21__derived_enum_equalsySbAF_AFtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD v11[3];
  uint64_t v12;

  v12 = type metadata accessor for Playlist.Variant(0);
  v11[1] = *(_QWORD *)(v12 - 8);
  __chkstk_darwin();
  sub_100007E8C(&qword_1011E2730);
  __chkstk_darwin();
  v11[2] = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011DED48);
  __chkstk_darwin();
  __chkstk_darwin();
  type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  sub_100007E8C(&qword_1011E2738);
  __chkstk_darwin();
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t)&v6[*(int *)(v7 + 48)];
  sub_10005B704(a1, (uint64_t)v6, type metadata accessor for ArtworkImage.Placeholder);
  sub_10005B704(a2, v8, type metadata accessor for ArtworkImage.Placeholder);
  v9 = sub_100007E8C(&qword_1011E4DE0);
  v10 = (char *)sub_100C3B6AC
      + 4
      * byte_100EEEB2C[(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v6, 10, v9)];
  __asm { BR              X10 }
}

uint64_t sub_100C3B6AC()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  char v17;
  void (*v18)(uint64_t, uint64_t);

  sub_10005B704(v0, v8, type metadata accessor for ArtworkImage.Placeholder);
  if (!v2(v1, 10, v7))
  {
    sub_100065228(v1, v5, &qword_1011DED48);
    v11 = *(_QWORD *)(v9 - 96);
    v12 = v11 + *(int *)(v6 + 48);
    sub_100065228(v8, v11, &qword_1011DED48);
    sub_10004A160(v5, v12, &qword_1011DED48);
    v13 = *(_QWORD *)(v9 - 104);
    v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
    v15 = *(_QWORD *)(v9 - 88);
    if (v14(v11, 1, v15) == 1)
    {
      sub_10004FF60(v5, &qword_1011DED48);
      if (v14(v12, 1, v15) == 1)
      {
        sub_10004FF60(v11, &qword_1011DED48);
LABEL_3:
        sub_10005B748(v0, type metadata accessor for ArtworkImage.Placeholder);
        return 1;
      }
    }
    else
    {
      sub_10004A160(v11, v4, &qword_1011DED48);
      if (v14(v12, 1, v15) != 1)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v3, v12, v15);
        v16 = sub_100048748(&qword_1011E2740, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Variant, (uint64_t)&protocol conformance descriptor for Playlist.Variant);
        v17 = dispatch thunk of static Equatable.== infix(_:_:)(v4, v3, v15, v16);
        v18 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
        v18(v3, v15);
        sub_10004FF60(v5, &qword_1011DED48);
        v18(v4, v15);
        sub_10004FF60(v11, &qword_1011DED48);
        if ((v17 & 1) != 0)
          goto LABEL_3;
LABEL_12:
        sub_10005B748(v0, type metadata accessor for ArtworkImage.Placeholder);
        return 0;
      }
      sub_10004FF60(v5, &qword_1011DED48);
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v4, v15);
    }
    sub_10004FF60(v11, &qword_1011E2730);
    goto LABEL_12;
  }
  sub_10004FF60(v8, &qword_1011DED48);
  sub_10004FF60(v0, &qword_1011E2738);
  return 0;
}

_QWORD *sub_100C3B9EC@<X0>(_QWORD *a1@<X8>)
{
  unint64_t v2;

  v2 = sub_100C3BD08();
  return EnvironmentValues.subscript.getter(a1, &_s19PlaceholderStyleKeyVN, &_s19PlaceholderStyleKeyVN, v2);
}

uint64_t sub_100C3BA2C()
{
  return EnvironmentValues.colorSchemeContrast.getter();
}

uint64_t type metadata accessor for ArtworkMotionView(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011E22A8, (uint64_t)&nominal type descriptor for ArtworkMotionView);
}

uint64_t sub_100C3BA60()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = (int *)type metadata accessor for ArtworkMotionView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = v0 + v3;
  v6 = type metadata accessor for VideoArtwork(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v0 + v3, 1, v6))
    (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v0 + v3, v6);
  v8 = v5 + v1[5];
  v9 = type metadata accessor for Artwork(0);
  v10 = *(_QWORD *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  v11 = v5 + v1[6];
  v12 = type metadata accessor for Artwork.CropStyle(0);
  v13 = *(_QWORD *)(v12 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  v14 = v5 + v1[8];
  v15 = type metadata accessor for ArtworkImage.Placeholder(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15))
  {
    v16 = sub_100007E8C(&qword_1011E4DE0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v14, 10, v16))
    {
      v17 = type metadata accessor for Playlist.Variant(0);
      v18 = *(_QWORD *)(v17 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v14, 1, v17))
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v14, v17);
    }
  }
  v19 = v5 + v1[9];
  v20 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  return swift_deallocObject(v0, v3 + v4);
}

uint64_t sub_100C3BC38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ArtworkMotionView(0) - 8) + 80);
  return sub_100C33D78(v1 + ((v3 + 16) & ~v3), a1);
}

unint64_t sub_100C3BCA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E1F68;
  if (!qword_1011E1F68)
  {
    v1 = sub_100044B54(&qword_1011E1F60);
    sub_100C39DFC();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1011E1F68);
  }
  return result;
}

unint64_t sub_100C3BD08()
{
  unint64_t result;

  result = qword_1011E1F80;
  if (!qword_1011E1F80)
  {
    result = swift_getWitnessTable(&unk_100EEF8B4, &_s19PlaceholderStyleKeyVN);
    atomic_store(result, (unint64_t *)&qword_1011E1F80);
  }
  return result;
}

uint64_t type metadata accessor for ArtworkImage.Placeholder.View.Style(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011E24A8, (uint64_t)&nominal type descriptor for ArtworkImage.Placeholder.View.Style);
}

unint64_t sub_100C3BD60()
{
  unint64_t result;

  result = qword_1011E2010;
  if (!qword_1011E2010)
  {
    result = swift_getWitnessTable(&unk_100EEF864, &_s11PlaceholderO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1011E2010);
  }
  return result;
}

unint64_t sub_100C3BDA4()
{
  unint64_t result;

  result = qword_1011E2018;
  if (!qword_1011E2018)
  {
    result = swift_getWitnessTable(&unk_100EEF814, &_s11PlaceholderO18ComposerCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1011E2018);
  }
  return result;
}

unint64_t sub_100C3BDE8()
{
  unint64_t result;

  result = qword_1011E2020;
  if (!qword_1011E2020)
  {
    result = swift_getWitnessTable(&unk_100EEF7C4, &_s11PlaceholderO15GenreCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1011E2020);
  }
  return result;
}

unint64_t sub_100C3BE2C()
{
  unint64_t result;

  result = qword_1011E2028;
  if (!qword_1011E2028)
  {
    result = swift_getWitnessTable(&unk_100EEF774, &_s11PlaceholderO15RadioCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1011E2028);
  }
  return result;
}

unint64_t sub_100C3BE70()
{
  unint64_t result;

  result = qword_1011E2030;
  if (!qword_1011E2030)
  {
    result = swift_getWitnessTable(&unk_100EEF724, &_s11PlaceholderO16PersonCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1011E2030);
  }
  return result;
}

unint64_t sub_100C3BEB4()
{
  unint64_t result;

  result = qword_1011E2038;
  if (!qword_1011E2038)
  {
    result = swift_getWitnessTable(&unk_100EEF6D4, &_s11PlaceholderO20MicrophoneCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1011E2038);
  }
  return result;
}

unint64_t sub_100C3BEF8()
{
  unint64_t result;

  result = qword_1011E2040;
  if (!qword_1011E2040)
  {
    result = swift_getWitnessTable(&unk_100EEF684, &_s11PlaceholderO12TvCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1011E2040);
  }
  return result;
}

unint64_t sub_100C3BF3C()
{
  unint64_t result;

  result = qword_1011E2048;
  if (!qword_1011E2048)
  {
    result = swift_getWitnessTable(&unk_100EEF634, &_s11PlaceholderO20MusicVideoCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1011E2048);
  }
  return result;
}

unint64_t sub_100C3BF80()
{
  unint64_t result;

  result = qword_1011E2050;
  if (!qword_1011E2050)
  {
    result = swift_getWitnessTable(&unk_100EEF5E4, &_s11PlaceholderO18PlaylistCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1011E2050);
  }
  return result;
}

unint64_t sub_100C3BFC4()
{
  unint64_t result;

  result = qword_1011E2060;
  if (!qword_1011E2060)
  {
    result = swift_getWitnessTable(&unk_100EEF594, &_s11PlaceholderO21NewPlaylistCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1011E2060);
  }
  return result;
}

unint64_t sub_100C3C008()
{
  unint64_t result;

  result = qword_1011E2068;
  if (!qword_1011E2068)
  {
    result = swift_getWitnessTable(&unk_100EEF544, &_s11PlaceholderO20NowPlayingCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1011E2068);
  }
  return result;
}

unint64_t sub_100C3C04C()
{
  unint64_t result;

  result = qword_1011E2070;
  if (!qword_1011E2070)
  {
    result = swift_getWitnessTable(&unk_100EEF4F4, &_s11PlaceholderO15MusicCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1011E2070);
  }
  return result;
}

uint64_t type metadata accessor for PlaceholderStyleModifier(uint64_t a1)
{
  return sub_100055934(a1, qword_1011E2548, (uint64_t)&nominal type descriptor for PlaceholderStyleModifier);
}

uint64_t sub_100C3C0B0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(sub_100007E8C(&qword_1011E1F88) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = (_QWORD *)(v0 + v2);
  v5 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v0 + v2, 1, v5))
  {
    if (v4[3])
      _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + v2));
    if (v4[8])
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(v4 + 5);
    v6 = (char *)v4 + *(int *)(v5 + 24);
    v7 = type metadata accessor for BlendMode(0);
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
  }
  return swift_deallocObject(v0, v2 + v3);
}

uint64_t sub_100C3C198(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_100007E8C(&qword_1011E1F88) - 8) + 80);
  return sub_100C3A27C(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_100C3C1D8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of ArtworkMotionView.body>>, 1);
}

uint64_t sub_100C3C1E8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of ArtworkImage.Placeholder.View.body>>, 1);
}

uint64_t sub_100C3C1F8()
{
  return sub_100048748(&qword_1011E2108, type metadata accessor for ArtworkImage.Placeholder, (uint64_t)&protocol conformance descriptor for ArtworkImage.Placeholder);
}

uint64_t sub_100C3C224(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of PlaceholderStyleModifier.body(content:)>>, 1);
}

uint64_t *_s9ViewModelVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for Artwork.CropStyle(0);
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      v13 = sub_100007E8C(&qword_1011DEFB0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
  }
  return a1;
}

uint64_t _s9ViewModelVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v4 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = type metadata accessor for Artwork.CropStyle(0);
  v7 = *(_QWORD *)(v6 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  return result;
}

uint64_t _s9ViewModelVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for Artwork.CropStyle(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_100007E8C(&qword_1011DEFB0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  return a1;
}

uint64_t _s9ViewModelVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = type metadata accessor for Artwork.CropStyle(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = sub_100007E8C(&qword_1011DEFB0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t _s9ViewModelVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for Artwork.CropStyle(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_100007E8C(&qword_1011DEFB0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  return a1;
}

uint64_t _s9ViewModelVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = type metadata accessor for Artwork.CropStyle(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = sub_100007E8C(&qword_1011DEFB0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t _s9ViewModelVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C3C7E0);
}

uint64_t sub_100C3C7E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for Artwork(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011DEFB0);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t _s9ViewModelVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C3C864);
}

uint64_t sub_100C3C864(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for Artwork(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_100007E8C(&qword_1011DEFB0);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_100C3C8E4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[2];

  v2 = type metadata accessor for Artwork(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1000E3A44(319, (unint64_t *)&unk_1011E2178, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork.CropStyle, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 2, v6, a1 + 16);
    }
  }
}

uint64_t *_s4InfoVwCP(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  _OWORD *v31;
  _OWORD *v32;
  __int128 v33;
  uint64_t v34;
  char *v35;
  char *v36;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for ArtworkImage.ViewModel(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_100007E8C((uint64_t *)&unk_1011E4DA0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      v12 = *(int *)(v7 + 20);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = type metadata accessor for Artwork.CropStyle(0);
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        v17 = sub_100007E8C(&qword_1011DEFB0);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v18 = a3[5];
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    v21 = sub_100007E8C(&qword_1011E4DE0);
    v22 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 10, v21))
    {
      v23 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      v24 = type metadata accessor for Playlist.Variant(0);
      v25 = *(_QWORD *)(v24 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v20, 1, v24))
      {
        v26 = sub_100007E8C(&qword_1011DED48);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v19, v20, v24);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v19, 0, 1, v24);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 10, v21);
    }
    v27 = a3[6];
    v28 = a3[7];
    v29 = (char *)a1 + v27;
    v30 = (char *)a2 + v27;
    *(_QWORD *)v29 = *(_QWORD *)v30;
    v29[8] = v30[8];
    v31 = (_OWORD *)((char *)a1 + v28);
    v32 = (_OWORD *)((char *)a2 + v28);
    v33 = v32[1];
    *v31 = *v32;
    v31[1] = v33;
    *(_OWORD *)((char *)v31 + 26) = *(_OWORD *)((char *)v32 + 26);
    v34 = a3[8];
    v35 = (char *)a1 + v34;
    v36 = (char *)a2 + v34;
    *(_OWORD *)v35 = *(_OWORD *)v36;
    v35[16] = v36[16];
  }
  return a1;
}

uint64_t _s4InfoVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;

  v4 = type metadata accessor for ArtworkImage.ViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4))
  {
    v5 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
    v6 = a1 + *(int *)(v4 + 20);
    v7 = type metadata accessor for Artwork.CropStyle(0);
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  v9 = a1 + *(int *)(a2 + 20);
  v10 = sub_100007E8C(&qword_1011E4DE0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 10, v10);
  if (!(_DWORD)result)
  {
    v12 = type metadata accessor for Playlist.Variant(0);
    v13 = *(_QWORD *)(v12 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v9, v12);
  }
  return result;
}

char *_s4InfoVwcp(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  char *v30;
  __int128 v31;
  uint64_t v32;
  char *v33;
  char *v34;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011E4DA0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    v10 = *(int *)(v6 + 20);
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = type metadata accessor for Artwork.CropStyle(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = sub_100007E8C(&qword_1011DEFB0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v16 = a3[5];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = sub_100007E8C(&qword_1011E4DE0);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 10, v19))
  {
    v21 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v22 = type metadata accessor for Playlist.Variant(0);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v18, 1, v22))
    {
      v24 = sub_100007E8C(&qword_1011DED48);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v17, v18, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v17, 0, 1, v22);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 10, v19);
  }
  v25 = a3[6];
  v26 = a3[7];
  v27 = &a1[v25];
  v28 = &a2[v25];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v27[8] = v28[8];
  v29 = &a1[v26];
  v30 = &a2[v26];
  v31 = *((_OWORD *)v30 + 1);
  *(_OWORD *)v29 = *(_OWORD *)v30;
  *((_OWORD *)v29 + 1) = v31;
  *(_OWORD *)(v29 + 26) = *(_OWORD *)(v30 + 26);
  v32 = a3[8];
  v33 = &a1[v32];
  v34 = &a2[v32];
  *(_OWORD *)v33 = *(_OWORD *)v34;
  v33[16] = v34[16];
  return a1;
}

uint64_t _s4InfoVwca(uint64_t a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void *, uint64_t, uint64_t);
  int v28;
  int v29;
  uint64_t v30;
  void *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(void *, uint64_t, uint64_t);
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(void *, uint64_t, uint64_t);
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  __int128 v60;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8((uint64_t)a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v21 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(a1, a2, v21);
      v22 = *(int *)(v6 + 20);
      v23 = (void *)(a1 + v22);
      v24 = &a2[v22];
      v25 = type metadata accessor for Artwork.CropStyle(0);
      v26 = *(_QWORD *)(v25 - 8);
      v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
      v28 = v27(v23, 1, v25);
      v29 = v27(v24, 1, v25);
      if (v28)
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 24))(v23, v24, v25);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011DEFB0) - 8) + 64);
      v19 = v23;
      v20 = v24;
LABEL_8:
      memcpy(v19, v20, v18);
      goto LABEL_14;
    }
    sub_10005B748(a1, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011E4DA0) - 8) + 64);
    v19 = (void *)a1;
    v20 = a2;
    goto LABEL_8;
  }
  if (v10)
    goto LABEL_7;
  v11 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
  v12 = *(int *)(v6 + 20);
  v13 = (void *)(a1 + v12);
  v14 = &a2[v12];
  v15 = type metadata accessor for Artwork.CropStyle(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_100007E8C(&qword_1011DEFB0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  v30 = a3[5];
  v31 = (void *)(a1 + v30);
  v32 = &a2[v30];
  v33 = sub_100007E8C(&qword_1011E4DE0);
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v34 + 48);
  v36 = v35(v31, 10, v33);
  v37 = v35(v32, 10, v33);
  if (!v36)
  {
    if (!v37)
    {
      v42 = type metadata accessor for Playlist.Variant(0);
      v43 = *(_QWORD *)(v42 - 8);
      v44 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v43 + 48);
      v45 = v44(v31, 1, v42);
      v46 = v44(v32, 1, v42);
      if (v45)
      {
        if (!v46)
        {
          (*(void (**)(void *, char *, uint64_t))(v43 + 16))(v31, v32, v42);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v31, 0, 1, v42);
          goto LABEL_27;
        }
      }
      else
      {
        if (!v46)
        {
          (*(void (**)(void *, char *, uint64_t))(v43 + 24))(v31, v32, v42);
          goto LABEL_27;
        }
        (*(void (**)(void *, uint64_t))(v43 + 8))(v31, v42);
      }
      v41 = sub_100007E8C(&qword_1011DED48);
      goto LABEL_21;
    }
    sub_10004FF60((uint64_t)v31, &qword_1011E4DE0);
LABEL_20:
    v41 = type metadata accessor for ArtworkImage.Placeholder(0);
LABEL_21:
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    goto LABEL_27;
  }
  if (v37)
    goto LABEL_20;
  v38 = type metadata accessor for Playlist.Variant(0);
  v39 = *(_QWORD *)(v38 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v32, 1, v38))
  {
    v40 = sub_100007E8C(&qword_1011DED48);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v39 + 16))(v31, v32, v38);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v31, 0, 1, v38);
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 10, v33);
LABEL_27:
  v47 = a3[6];
  v48 = a1 + v47;
  v49 = &a2[v47];
  v50 = *(_QWORD *)v49;
  *(_BYTE *)(v48 + 8) = v49[8];
  *(_QWORD *)v48 = v50;
  v51 = a3[7];
  v52 = a1 + v51;
  v53 = &a2[v51];
  v54 = *(_QWORD *)v53;
  *(_BYTE *)(v52 + 8) = v53[8];
  *(_QWORD *)v52 = v54;
  v55 = *((_QWORD *)v53 + 2);
  *(_BYTE *)(v52 + 24) = v53[24];
  *(_QWORD *)(v52 + 16) = v55;
  v56 = *((_QWORD *)v53 + 4);
  *(_BYTE *)(v52 + 40) = v53[40];
  *(_QWORD *)(v52 + 32) = v56;
  *(_BYTE *)(v52 + 41) = v53[41];
  v57 = a3[8];
  v58 = a1 + v57;
  v59 = &a2[v57];
  v60 = *(_OWORD *)v59;
  *(_BYTE *)(v58 + 16) = v59[16];
  *(_OWORD *)v58 = v60;
  return a1;
}

char *_s4InfoVwtk(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  char *v30;
  __int128 v31;
  uint64_t v32;
  char *v33;
  char *v34;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011E4DA0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
    v10 = *(int *)(v6 + 20);
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = type metadata accessor for Artwork.CropStyle(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = sub_100007E8C(&qword_1011DEFB0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v16 = a3[5];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = sub_100007E8C(&qword_1011E4DE0);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 10, v19))
  {
    v21 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v22 = type metadata accessor for Playlist.Variant(0);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v18, 1, v22))
    {
      v24 = sub_100007E8C(&qword_1011DED48);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v17, v18, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v17, 0, 1, v22);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 10, v19);
  }
  v25 = a3[6];
  v26 = a3[7];
  v27 = &a1[v25];
  v28 = &a2[v25];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v27[8] = v28[8];
  v29 = &a1[v26];
  v30 = &a2[v26];
  v31 = *((_OWORD *)v30 + 1);
  *(_OWORD *)v29 = *(_OWORD *)v30;
  *((_OWORD *)v29 + 1) = v31;
  *(_OWORD *)(v29 + 26) = *(_OWORD *)(v30 + 26);
  v32 = a3[8];
  v33 = &a1[v32];
  v34 = &a2[v32];
  *(_OWORD *)v33 = *(_OWORD *)v34;
  v33[16] = v34[16];
  return a1;
}

uint64_t _s4InfoVwta(uint64_t a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void *, uint64_t, uint64_t);
  int v28;
  int v29;
  uint64_t v30;
  void *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(void *, uint64_t, uint64_t);
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(void *, uint64_t, uint64_t);
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8((uint64_t)a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v21 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(a1, a2, v21);
      v22 = *(int *)(v6 + 20);
      v23 = (void *)(a1 + v22);
      v24 = &a2[v22];
      v25 = type metadata accessor for Artwork.CropStyle(0);
      v26 = *(_QWORD *)(v25 - 8);
      v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
      v28 = v27(v23, 1, v25);
      v29 = v27(v24, 1, v25);
      if (v28)
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 40))(v23, v24, v25);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011DEFB0) - 8) + 64);
      v19 = v23;
      v20 = v24;
LABEL_8:
      memcpy(v19, v20, v18);
      goto LABEL_14;
    }
    sub_10005B748(a1, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011E4DA0) - 8) + 64);
    v19 = (void *)a1;
    v20 = a2;
    goto LABEL_8;
  }
  if (v10)
    goto LABEL_7;
  v11 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
  v12 = *(int *)(v6 + 20);
  v13 = (void *)(a1 + v12);
  v14 = &a2[v12];
  v15 = type metadata accessor for Artwork.CropStyle(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_100007E8C(&qword_1011DEFB0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  v30 = a3[5];
  v31 = (void *)(a1 + v30);
  v32 = &a2[v30];
  v33 = sub_100007E8C(&qword_1011E4DE0);
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v34 + 48);
  v36 = v35(v31, 10, v33);
  v37 = v35(v32, 10, v33);
  if (!v36)
  {
    if (!v37)
    {
      v42 = type metadata accessor for Playlist.Variant(0);
      v43 = *(_QWORD *)(v42 - 8);
      v44 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v43 + 48);
      v45 = v44(v31, 1, v42);
      v46 = v44(v32, 1, v42);
      if (v45)
      {
        if (!v46)
        {
          (*(void (**)(void *, char *, uint64_t))(v43 + 32))(v31, v32, v42);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v31, 0, 1, v42);
          goto LABEL_27;
        }
      }
      else
      {
        if (!v46)
        {
          (*(void (**)(void *, char *, uint64_t))(v43 + 40))(v31, v32, v42);
          goto LABEL_27;
        }
        (*(void (**)(void *, uint64_t))(v43 + 8))(v31, v42);
      }
      v41 = sub_100007E8C(&qword_1011DED48);
      goto LABEL_21;
    }
    sub_10004FF60((uint64_t)v31, &qword_1011E4DE0);
LABEL_20:
    v41 = type metadata accessor for ArtworkImage.Placeholder(0);
LABEL_21:
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    goto LABEL_27;
  }
  if (v37)
    goto LABEL_20;
  v38 = type metadata accessor for Playlist.Variant(0);
  v39 = *(_QWORD *)(v38 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v32, 1, v38))
  {
    v40 = sub_100007E8C(&qword_1011DED48);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v39 + 32))(v31, v32, v38);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v31, 0, 1, v38);
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 10, v33);
LABEL_27:
  v47 = a3[6];
  v48 = a3[7];
  v49 = a1 + v47;
  v50 = &a2[v47];
  *(_QWORD *)v49 = *(_QWORD *)v50;
  *(_BYTE *)(v49 + 8) = v50[8];
  v51 = a1 + v48;
  v52 = &a2[v48];
  *(_QWORD *)v51 = *(_QWORD *)v52;
  *(_BYTE *)(v51 + 8) = v52[8];
  *(_QWORD *)(v51 + 16) = *((_QWORD *)v52 + 2);
  *(_BYTE *)(v51 + 24) = v52[24];
  *(_BYTE *)(v51 + 40) = v52[40];
  *(_QWORD *)(v51 + 32) = *((_QWORD *)v52 + 4);
  *(_BYTE *)(v51 + 41) = v52[41];
  v53 = a3[8];
  v54 = a1 + v53;
  v55 = &a2[v53];
  *(_OWORD *)v54 = *(_OWORD *)v55;
  *(_BYTE *)(v54 + 16) = v55[16];
  return a1;
}

uint64_t _s4InfoVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C3DBA0);
}

uint64_t sub_100C3DBA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v14;
  unsigned int v15;

  v6 = sub_100007E8C((uint64_t *)&unk_1011E4DA0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for ArtworkImage.Placeholder(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 28) + 41) <= 2u)
    v14 = 2;
  else
    v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28) + 41);
  v15 = v14 - 2;
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 28) + 41) >= 2u)
    return v15;
  else
    return 0;
}

uint64_t _s4InfoVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C3DC64);
}

uint64_t sub_100C3DC64(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_100007E8C((uint64_t *)&unk_1011E4DA0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = type metadata accessor for ArtworkImage.Placeholder(0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 28) + 41) = a2 + 2;
  return result;
}

void sub_100C3DD10(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[5];

  sub_1000E3A44(319, (unint64_t *)&unk_1011E2210, type metadata accessor for ArtworkImage.ViewModel, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for ArtworkImage.Placeholder(319);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = "\t";
      v6[3] = &unk_100EEEE20;
      v6[4] = &unk_100EEEE38;
      swift_initStructMetadata(a1, 256, 5, v6, a1 + 16);
    }
  }
}

uint64_t _s4SizeVwet(uint64_t a1, unsigned int a2)
{
  int v3;
  int v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 42))
    return (*(_DWORD *)a1 + 254);
  if (*(unsigned __int8 *)(a1 + 41) <= 2u)
    v3 = 2;
  else
    v3 = *(unsigned __int8 *)(a1 + 41);
  v4 = v3 - 3;
  if (*(unsigned __int8 *)(a1 + 41) < 2u)
    v5 = -1;
  else
    v5 = v4;
  return (v5 + 1);
}

uint64_t _s4SizeVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 42) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 42) = 0;
    if (a2)
      *(_BYTE *)(result + 41) = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ArtworkImage.Size()
{
  return &type metadata for ArtworkImage.Size;
}

uint64_t *initializeBufferWithCopyOfBuffer for ArtworkMotionView(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  _OWORD *v26;
  __int128 v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v42;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for VideoArtwork(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_100007E8C(&qword_1011E1F38);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = a3[5];
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = type metadata accessor for Artwork(0);
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      v16 = sub_100007E8C((uint64_t *)&unk_1011E4A00);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    v17 = a3[6];
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v20 = type metadata accessor for Artwork.CropStyle(0);
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      v22 = sub_100007E8C(&qword_1011DEFB0);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    v23 = a3[7];
    v24 = a3[8];
    v25 = (_OWORD *)((char *)a1 + v23);
    v26 = (_OWORD *)((char *)a2 + v23);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    *(_OWORD *)((char *)v25 + 26) = *(_OWORD *)((char *)v26 + 26);
    v28 = (char *)a1 + v24;
    v29 = (char *)a2 + v24;
    v30 = type metadata accessor for ArtworkImage.Placeholder(0);
    v31 = *(_QWORD *)(v30 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
    {
      v32 = sub_100007E8C(&qword_1011E1F40);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      v33 = sub_100007E8C(&qword_1011E4DE0);
      v34 = *(_QWORD *)(v33 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v29, 10, v33))
      {
        memcpy(v28, v29, *(_QWORD *)(v31 + 64));
      }
      else
      {
        v35 = type metadata accessor for Playlist.Variant(0);
        v42 = *(_QWORD *)(v35 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v29, 1, v35))
        {
          v36 = sub_100007E8C(&qword_1011DED48);
          memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v28, v29, v35);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v28, 0, 1, v35);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v28, 0, 10, v33);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
    }
    v37 = a3[9];
    v38 = (char *)a1 + v37;
    v39 = (char *)a2 + v37;
    v40 = type metadata accessor for ArtworkImage.ReusePolicy(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
  }
  return a1;
}

uint64_t destroy for ArtworkMotionView(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = type metadata accessor for VideoArtwork(0);
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = a1 + a2[5];
  v7 = type metadata accessor for Artwork(0);
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  v9 = a1 + a2[6];
  v10 = type metadata accessor for Artwork.CropStyle(0);
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  v12 = a1 + a2[8];
  v13 = type metadata accessor for ArtworkImage.Placeholder(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13))
  {
    v14 = sub_100007E8C(&qword_1011E4DE0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v12, 10, v14))
    {
      v15 = type metadata accessor for Playlist.Variant(0);
      v16 = *(_QWORD *)(v15 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v12, 1, v15))
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v12, v15);
    }
  }
  v17 = a1 + a2[9];
  v18 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
}

char *initializeWithCopy for ArtworkMotionView(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  __int128 v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v40;

  v6 = type metadata accessor for VideoArtwork(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100007E8C(&qword_1011E1F38);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = type metadata accessor for Artwork(0);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = sub_100007E8C((uint64_t *)&unk_1011E4A00);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v15 = a3[6];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = type metadata accessor for Artwork.CropStyle(0);
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    v20 = sub_100007E8C(&qword_1011DEFB0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  v21 = a3[7];
  v22 = a3[8];
  v23 = &a1[v21];
  v24 = &a2[v21];
  v25 = *((_OWORD *)v24 + 1);
  *(_OWORD *)v23 = *(_OWORD *)v24;
  *((_OWORD *)v23 + 1) = v25;
  *(_OWORD *)(v23 + 26) = *(_OWORD *)(v24 + 26);
  v26 = &a1[v22];
  v27 = &a2[v22];
  v28 = type metadata accessor for ArtworkImage.Placeholder(0);
  v29 = *(_QWORD *)(v28 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
  {
    v30 = sub_100007E8C(&qword_1011E1F40);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    v31 = sub_100007E8C(&qword_1011E4DE0);
    v32 = *(_QWORD *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v27, 10, v31))
    {
      memcpy(v26, v27, *(_QWORD *)(v29 + 64));
    }
    else
    {
      v33 = type metadata accessor for Playlist.Variant(0);
      v40 = *(_QWORD *)(v33 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v27, 1, v33))
      {
        v34 = sub_100007E8C(&qword_1011DED48);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v26, v27, v33);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v26, 0, 1, v33);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v26, 0, 10, v31);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  }
  v35 = a3[9];
  v36 = &a1[v35];
  v37 = &a2[v35];
  v38 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  return a1;
}

char *assignWithCopy for ArtworkMotionView(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t (*v41)(char *, uint64_t, uint64_t);
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  size_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(char *, uint64_t, uint64_t);
  int v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t (*v65)(char *, uint64_t, uint64_t);
  int v66;
  int v67;
  uint64_t v68;

  v6 = type metadata accessor for VideoArtwork(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_100007E8C(&qword_1011E1F38);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = type metadata accessor for Artwork(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
LABEL_12:
    v20 = sub_100007E8C((uint64_t *)&unk_1011E4A00);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v13, v14, v15);
LABEL_13:
  v21 = a3[6];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = type metadata accessor for Artwork.CropStyle(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
  v27 = v26(v22, 1, v24);
  v28 = v26(v23, 1, v24);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v22, v24);
LABEL_18:
    v29 = sub_100007E8C(&qword_1011DEFB0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v25 + 24))(v22, v23, v24);
LABEL_19:
  v30 = a3[7];
  v31 = &a1[v30];
  v32 = &a2[v30];
  v33 = *(_QWORD *)v32;
  v31[8] = v32[8];
  *(_QWORD *)v31 = v33;
  v34 = *((_QWORD *)v32 + 2);
  v31[24] = v32[24];
  *((_QWORD *)v31 + 2) = v34;
  v35 = *((_QWORD *)v32 + 4);
  v31[40] = v32[40];
  *((_QWORD *)v31 + 4) = v35;
  v31[41] = v32[41];
  v36 = a3[8];
  v37 = &a1[v36];
  v38 = &a2[v36];
  v39 = type metadata accessor for ArtworkImage.Placeholder(0);
  v40 = *(_QWORD **)(v39 - 8);
  v41 = (uint64_t (*)(char *, uint64_t, uint64_t))v40[6];
  v42 = v41(v37, 1, v39);
  v43 = v41(v38, 1, v39);
  if (v42)
  {
    if (!v43)
    {
      v44 = sub_100007E8C(&qword_1011E4DE0);
      v45 = *(_QWORD *)(v44 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v38, 10, v44))
      {
        memcpy(v37, v38, v40[8]);
      }
      else
      {
        v56 = type metadata accessor for Playlist.Variant(0);
        v68 = *(_QWORD *)(v56 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v38, 1, v56))
        {
          v57 = sub_100007E8C(&qword_1011DED48);
          memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v37, v38, v56);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v37, 0, 1, v56);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v37, 0, 10, v44);
      }
      v58 = (void (*)(char *, _QWORD, uint64_t, uint64_t))v40[7];
      goto LABEL_43;
    }
    goto LABEL_25;
  }
  if (v43)
  {
    sub_10005B748((uint64_t)v37, type metadata accessor for ArtworkImage.Placeholder);
LABEL_25:
    v46 = &qword_1011E1F40;
LABEL_26:
    v47 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(v46) - 8) + 64);
LABEL_27:
    memcpy(v37, v38, v47);
    goto LABEL_44;
  }
  v48 = sub_100007E8C(&qword_1011E4DE0);
  v49 = *(_QWORD *)(v48 - 8);
  v50 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v49 + 48);
  v51 = v50(v37, 10, v48);
  v52 = v50(v38, 10, v48);
  if (!v51)
  {
    if (!v52)
    {
      v39 = type metadata accessor for Playlist.Variant(0);
      v64 = *(_QWORD *)(v39 - 8);
      v65 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v64 + 48);
      v66 = v65(v37, 1, v39);
      v67 = v65(v38, 1, v39);
      if (v66)
      {
        if (!v67)
        {
          (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v37, v38, v39);
          v58 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56);
LABEL_43:
          v58(v37, 0, 1, v39);
          goto LABEL_44;
        }
      }
      else
      {
        if (!v67)
        {
          (*(void (**)(char *, char *, uint64_t))(v64 + 24))(v37, v38, v39);
          goto LABEL_44;
        }
        (*(void (**)(char *, uint64_t))(v64 + 8))(v37, v39);
      }
      v46 = &qword_1011DED48;
      goto LABEL_26;
    }
    sub_10004FF60((uint64_t)v37, &qword_1011E4DE0);
LABEL_39:
    v47 = v40[8];
    goto LABEL_27;
  }
  if (v52)
    goto LABEL_39;
  v53 = type metadata accessor for Playlist.Variant(0);
  v54 = *(_QWORD *)(v53 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v38, 1, v53))
  {
    v55 = sub_100007E8C(&qword_1011DED48);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v37, v38, v53);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v37, 0, 1, v53);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v37, 0, 10, v48);
LABEL_44:
  v59 = a3[9];
  v60 = &a1[v59];
  v61 = &a2[v59];
  v62 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 24))(v60, v61, v62);
  return a1;
}

char *initializeWithTake for ArtworkMotionView(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  __int128 v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v40;

  v6 = type metadata accessor for VideoArtwork(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100007E8C(&qword_1011E1F38);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = type metadata accessor for Artwork(0);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = sub_100007E8C((uint64_t *)&unk_1011E4A00);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v15 = a3[6];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = type metadata accessor for Artwork.CropStyle(0);
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    v20 = sub_100007E8C(&qword_1011DEFB0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  v21 = a3[7];
  v22 = a3[8];
  v23 = &a1[v21];
  v24 = &a2[v21];
  v25 = *((_OWORD *)v24 + 1);
  *(_OWORD *)v23 = *(_OWORD *)v24;
  *((_OWORD *)v23 + 1) = v25;
  *(_OWORD *)(v23 + 26) = *(_OWORD *)(v24 + 26);
  v26 = &a1[v22];
  v27 = &a2[v22];
  v28 = type metadata accessor for ArtworkImage.Placeholder(0);
  v29 = *(_QWORD *)(v28 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
  {
    v30 = sub_100007E8C(&qword_1011E1F40);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    v31 = sub_100007E8C(&qword_1011E4DE0);
    v32 = *(_QWORD *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v27, 10, v31))
    {
      memcpy(v26, v27, *(_QWORD *)(v29 + 64));
    }
    else
    {
      v33 = type metadata accessor for Playlist.Variant(0);
      v40 = *(_QWORD *)(v33 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v27, 1, v33))
      {
        v34 = sub_100007E8C(&qword_1011DED48);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v26, v27, v33);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v26, 0, 1, v33);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v26, 0, 10, v31);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  }
  v35 = a3[9];
  v36 = &a1[v35];
  v37 = &a2[v35];
  v38 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  return a1;
}

char *assignWithTake for ArtworkMotionView(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t (*v38)(char *, uint64_t, uint64_t);
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  size_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(char *, uint64_t, uint64_t);
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v61;
  uint64_t (*v62)(char *, uint64_t, uint64_t);
  int v63;
  int v64;
  uint64_t v65;

  v6 = type metadata accessor for VideoArtwork(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_100007E8C(&qword_1011E1F38);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = type metadata accessor for Artwork(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
LABEL_12:
    v20 = sub_100007E8C((uint64_t *)&unk_1011E4A00);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v13, v14, v15);
LABEL_13:
  v21 = a3[6];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = type metadata accessor for Artwork.CropStyle(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
  v27 = v26(v22, 1, v24);
  v28 = v26(v23, 1, v24);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v22, v24);
LABEL_18:
    v29 = sub_100007E8C(&qword_1011DEFB0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v25 + 40))(v22, v23, v24);
LABEL_19:
  v30 = a3[7];
  v31 = a3[8];
  v32 = &a1[v30];
  v33 = &a2[v30];
  *(_QWORD *)v32 = *(_QWORD *)v33;
  v32[8] = v33[8];
  *((_QWORD *)v32 + 2) = *((_QWORD *)v33 + 2);
  v32[24] = v33[24];
  *((_QWORD *)v32 + 4) = *((_QWORD *)v33 + 4);
  *((_WORD *)v32 + 20) = *((_WORD *)v33 + 20);
  v34 = &a1[v31];
  v35 = &a2[v31];
  v36 = type metadata accessor for ArtworkImage.Placeholder(0);
  v37 = *(_QWORD **)(v36 - 8);
  v38 = (uint64_t (*)(char *, uint64_t, uint64_t))v37[6];
  v39 = v38(v34, 1, v36);
  v40 = v38(v35, 1, v36);
  if (v39)
  {
    if (!v40)
    {
      v41 = sub_100007E8C(&qword_1011E4DE0);
      v42 = *(_QWORD *)(v41 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v35, 10, v41))
      {
        memcpy(v34, v35, v37[8]);
      }
      else
      {
        v53 = type metadata accessor for Playlist.Variant(0);
        v65 = *(_QWORD *)(v53 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v35, 1, v53))
        {
          v54 = sub_100007E8C(&qword_1011DED48);
          memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v34, v35, v53);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v34, 0, 1, v53);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v34, 0, 10, v41);
      }
      v55 = (void (*)(char *, _QWORD, uint64_t, uint64_t))v37[7];
      goto LABEL_43;
    }
    goto LABEL_25;
  }
  if (v40)
  {
    sub_10005B748((uint64_t)v34, type metadata accessor for ArtworkImage.Placeholder);
LABEL_25:
    v43 = &qword_1011E1F40;
LABEL_26:
    v44 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(v43) - 8) + 64);
LABEL_27:
    memcpy(v34, v35, v44);
    goto LABEL_44;
  }
  v45 = sub_100007E8C(&qword_1011E4DE0);
  v46 = *(_QWORD *)(v45 - 8);
  v47 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v46 + 48);
  v48 = v47(v34, 10, v45);
  v49 = v47(v35, 10, v45);
  if (!v48)
  {
    if (!v49)
    {
      v36 = type metadata accessor for Playlist.Variant(0);
      v61 = *(_QWORD *)(v36 - 8);
      v62 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v61 + 48);
      v63 = v62(v34, 1, v36);
      v64 = v62(v35, 1, v36);
      if (v63)
      {
        if (!v64)
        {
          (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v34, v35, v36);
          v55 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56);
LABEL_43:
          v55(v34, 0, 1, v36);
          goto LABEL_44;
        }
      }
      else
      {
        if (!v64)
        {
          (*(void (**)(char *, char *, uint64_t))(v61 + 40))(v34, v35, v36);
          goto LABEL_44;
        }
        (*(void (**)(char *, uint64_t))(v61 + 8))(v34, v36);
      }
      v43 = &qword_1011DED48;
      goto LABEL_26;
    }
    sub_10004FF60((uint64_t)v34, &qword_1011E4DE0);
LABEL_39:
    v44 = v37[8];
    goto LABEL_27;
  }
  if (v49)
    goto LABEL_39;
  v50 = type metadata accessor for Playlist.Variant(0);
  v51 = *(_QWORD *)(v50 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v35, 1, v50))
  {
    v52 = sub_100007E8C(&qword_1011DED48);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v34, v35, v50);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v34, 0, 1, v50);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v34, 0, 10, v45);
LABEL_44:
  v56 = a3[9];
  v57 = &a1[v56];
  v58 = &a2[v56];
  v59 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 40))(v57, v58, v59);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArtworkMotionView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C3F664);
}

uint64_t sub_100C3F664(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  unsigned int v15;
  uint64_t v16;

  v6 = sub_100007E8C(&qword_1011E1F38);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = sub_100007E8C((uint64_t *)&unk_1011E4A00);
  v10 = *(_QWORD *)(v9 - 8);
  if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
  {
    v11 = v9;
    v12 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
  v13 = sub_100007E8C(&qword_1011DEFB0);
  v10 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
  {
    v11 = v13;
    v12 = a3[6];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
  if ((_DWORD)a2 != 253)
  {
    v16 = sub_100007E8C(&qword_1011E1F40);
    v10 = *(_QWORD *)(v16 - 8);
    if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
    {
      v11 = v16;
      v12 = a3[8];
    }
    else
    {
      v11 = type metadata accessor for ArtworkImage.ReusePolicy(0);
      v10 = *(_QWORD *)(v11 - 8);
      v12 = a3[9];
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
  if (*(unsigned __int8 *)(a1 + a3[7] + 41) <= 2u)
    v14 = 2;
  else
    v14 = *(unsigned __int8 *)(a1 + a3[7] + 41);
  v15 = v14 - 2;
  if (*(unsigned __int8 *)(a1 + a3[7] + 41) >= 2u)
    return v15;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ArtworkMotionView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C3F79C);
}

uint64_t sub_100C3F79C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;

  v8 = sub_100007E8C(&qword_1011E1F38);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v13 = sub_100007E8C((uint64_t *)&unk_1011E4A00);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      result = sub_100007E8C(&qword_1011DEFB0);
      v14 = *(_QWORD *)(result - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = result;
        v15 = a4[6];
      }
      else
      {
        if (a3 == 253)
        {
          *(_BYTE *)(a1 + a4[7] + 41) = a2 + 2;
          return result;
        }
        v17 = sub_100007E8C(&qword_1011E1F40);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[8];
        }
        else
        {
          v10 = type metadata accessor for ArtworkImage.ReusePolicy(0);
          v14 = *(_QWORD *)(v10 - 8);
          v15 = a4[9];
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_100C3F8BC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD v12[6];

  sub_1000E3A44(319, &qword_1011E22B8, (uint64_t (*)(uint64_t))&type metadata accessor for VideoArtwork, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
  {
    v12[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1000E3A44(319, &qword_1011E22C0, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    if (v5 <= 0x3F)
    {
      v12[1] = *(_QWORD *)(v4 - 8) + 64;
      sub_1000E3A44(319, (unint64_t *)&unk_1011E2178, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork.CropStyle, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
      if (v7 <= 0x3F)
      {
        v12[2] = *(_QWORD *)(v6 - 8) + 64;
        v12[3] = &unk_100EEEE20;
        sub_1000E3A44(319, (unint64_t *)&unk_1011E22C8, type metadata accessor for ArtworkImage.Placeholder, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
        if (v9 <= 0x3F)
        {
          v12[4] = *(_QWORD *)(v8 - 8) + 64;
          v10 = type metadata accessor for ArtworkImage.ReusePolicy(319);
          if (v11 <= 0x3F)
          {
            v12[5] = *(_QWORD *)(v10 - 8) + 64;
            swift_initStructMetadata(a1, 256, 6, v12, a1 + 16);
          }
        }
      }
    }
  }
}

uint64_t *_s11PlaceholderOwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_100007E8C(&qword_1011E4DE0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 10, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = type metadata accessor for Playlist.Variant(0);
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
      {
        v12 = sub_100007E8C(&qword_1011DED48);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v11 + 16))(a1, a2, v10);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 10, v7);
    }
  }
  return a1;
}

uint64_t _s11PlaceholderOwxx(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v2 = sub_100007E8C(&qword_1011E4DE0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 10, v2);
  if (!(_DWORD)result)
  {
    v4 = type metadata accessor for Playlist.Variant(0);
    v5 = *(_QWORD *)(v4 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  return result;
}

void *_s11PlaceholderOwcp(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_100007E8C(&qword_1011E4DE0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 10, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for Playlist.Variant(0);
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
    {
      v10 = sub_100007E8C(&qword_1011DED48);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(a1, a2, v8);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 10, v6);
  }
  return a1;
}

void *_s11PlaceholderOwca(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void *, uint64_t, uint64_t);
  int v18;
  int v19;

  v6 = sub_100007E8C(&qword_1011E4DE0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 10, v6);
  v10 = v8(a2, 10, v6);
  if (!v9)
  {
    if (!v10)
    {
      v15 = type metadata accessor for Playlist.Variant(0);
      v16 = *(_QWORD *)(v15 - 8);
      v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
      v18 = v17(a1, 1, v15);
      v19 = v17(a2, 1, v15);
      if (v18)
      {
        if (!v19)
        {
          (*(void (**)(void *, void *, uint64_t))(v16 + 16))(a1, a2, v15);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
          return a1;
        }
      }
      else
      {
        if (!v19)
        {
          (*(void (**)(void *, void *, uint64_t))(v16 + 24))(a1, a2, v15);
          return a1;
        }
        (*(void (**)(void *, uint64_t))(v16 + 8))(a1, v15);
      }
      v14 = *(_QWORD *)(sub_100007E8C(&qword_1011DED48) - 8);
      goto LABEL_8;
    }
    sub_10004FF60((uint64_t)a1, &qword_1011E4DE0);
LABEL_7:
    v14 = *(_QWORD *)(a3 - 8);
LABEL_8:
    memcpy(a1, a2, *(_QWORD *)(v14 + 64));
    return a1;
  }
  if (v10)
    goto LABEL_7;
  v11 = type metadata accessor for Playlist.Variant(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
  {
    v13 = sub_100007E8C(&qword_1011DED48);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v12 + 16))(a1, a2, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 10, v6);
  return a1;
}

void *_s11PlaceholderOwtk(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_100007E8C(&qword_1011E4DE0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 10, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for Playlist.Variant(0);
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
    {
      v10 = sub_100007E8C(&qword_1011DED48);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(a1, a2, v8);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 10, v6);
  }
  return a1;
}

void *_s11PlaceholderOwta(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void *, uint64_t, uint64_t);
  int v18;
  int v19;

  v6 = sub_100007E8C(&qword_1011E4DE0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 10, v6);
  v10 = v8(a2, 10, v6);
  if (!v9)
  {
    if (!v10)
    {
      v15 = type metadata accessor for Playlist.Variant(0);
      v16 = *(_QWORD *)(v15 - 8);
      v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
      v18 = v17(a1, 1, v15);
      v19 = v17(a2, 1, v15);
      if (v18)
      {
        if (!v19)
        {
          (*(void (**)(void *, void *, uint64_t))(v16 + 32))(a1, a2, v15);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
          return a1;
        }
      }
      else
      {
        if (!v19)
        {
          (*(void (**)(void *, void *, uint64_t))(v16 + 40))(a1, a2, v15);
          return a1;
        }
        (*(void (**)(void *, uint64_t))(v16 + 8))(a1, v15);
      }
      v14 = *(_QWORD *)(sub_100007E8C(&qword_1011DED48) - 8);
      goto LABEL_8;
    }
    sub_10004FF60((uint64_t)a1, &qword_1011E4DE0);
LABEL_7:
    v14 = *(_QWORD *)(a3 - 8);
LABEL_8:
    memcpy(a1, a2, *(_QWORD *)(v14 + 64));
    return a1;
  }
  if (v10)
    goto LABEL_7;
  v11 = type metadata accessor for Playlist.Variant(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
  {
    v13 = sub_100007E8C(&qword_1011DED48);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v12 + 32))(a1, a2, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 10, v6);
  return a1;
}

uint64_t _s11PlaceholderOwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C401B0);
}

uint64_t sub_100C401B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_100007E8C(&qword_1011E4DE0);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 0xB)
    return v5 - 10;
  else
    return 0;
}

uint64_t _s11PlaceholderOwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C4020C);
}

uint64_t sub_100C4020C(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 10);
  else
    v5 = 0;
  v6 = sub_100007E8C(&qword_1011E4DE0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_100C40264(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100007E8C(&qword_1011E4DE0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 10, v2);
}

uint64_t sub_100C402A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011E4DE0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 10, v4);
}

void sub_100C402E4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  sub_1000E3A44(319, &qword_1011E2388, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Variant, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
    swift_initEnumMetadataSinglePayload(a1, 256, *(_QWORD *)(v2 - 8) + 64, 10);
}

uint64_t _s11PlaceholderO4ViewVwCP(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  _OWORD *v20;
  _OWORD *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  char *__dst;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v16 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    v8 = *(int *)(a3 + 32);
    v9 = (_OWORD *)(a1 + v8);
    v10 = (_OWORD *)((char *)a2 + v8);
    *(_QWORD *)(a1 + 40) = a2[5];
    swift_bridgeObjectRetain();
    v11 = sub_100007E8C(&qword_1011DE408);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
      {
        v14 = sub_100007E8C(&qword_1011E1F88);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
        v15 = 1;
      }
      else
      {
        v17 = *((_QWORD *)v10 + 3);
        if (v17)
        {
          v18 = *((_QWORD *)v10 + 4);
          *((_QWORD *)v9 + 3) = v17;
          *((_QWORD *)v9 + 4) = v18;
          (**(void (***)(_OWORD *, _OWORD *))(v17 - 8))(v9, v10);
        }
        else
        {
          v19 = v10[1];
          *v9 = *v10;
          v9[1] = v19;
          *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
        }
        v20 = (_OWORD *)((char *)v9 + 40);
        v21 = (_OWORD *)((char *)v10 + 40);
        v22 = *((_QWORD *)v10 + 8);
        if (v22)
        {
          v23 = *((_QWORD *)v10 + 9);
          *((_QWORD *)v9 + 8) = v22;
          *((_QWORD *)v9 + 9) = v23;
          (**(void (***)(_OWORD *, _OWORD *))(v22 - 8))(v20, v21);
        }
        else
        {
          v24 = *(_OWORD *)((char *)v10 + 56);
          *v20 = *v21;
          *(_OWORD *)((char *)v9 + 56) = v24;
          *((_QWORD *)v9 + 9) = *((_QWORD *)v10 + 9);
        }
        v25 = *(int *)(v12 + 24);
        __dst = (char *)v9 + v25;
        v26 = (char *)v10 + v25;
        v27 = type metadata accessor for BlendMode(0);
        v28 = *(_QWORD *)(v27 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
        {
          v29 = sub_100007E8C(&qword_1011E1FA0);
          memcpy(__dst, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v28 + 16))(__dst, v26, v27);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(__dst, 0, 1, v27);
        }
        v15 = 1;
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
      }
    }
    else
    {
      *(_QWORD *)v9 = *(_QWORD *)v10;
      swift_retain();
      v15 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v15);
    v30 = *(int *)(a3 + 36);
    v31 = (_QWORD *)(a1 + v30);
    v32 = (uint64_t *)((char *)a2 + v30);
    v33 = sub_100007E8C((uint64_t *)&unk_1011DE410);
    if (swift_getEnumCaseMultiPayload(v32, v33) == 1)
    {
      v34 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v31, v32, v34);
      v35 = v31;
      v36 = v33;
      v37 = 1;
    }
    else
    {
      *v31 = *v32;
      swift_retain();
      v35 = v31;
      v36 = v33;
      v37 = 0;
    }
    swift_storeEnumTagMultiPayload(v35, v36, v37);
  }
  return a1;
}

double _s11PlaceholderO4ViewVwxx(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double result;

  swift_bridgeObjectRelease();
  v4 = (_QWORD *)(a1 + *(int *)(a2 + 32));
  v5 = sub_100007E8C(&qword_1011DE408);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v4, 1, v6))
    {
      if (v4[3])
        _s5Music18DragDropToPlaylistV6OriginVwxx_0(v4);
      if (v4[8])
        _s5Music18DragDropToPlaylistV6OriginVwxx_0(v4 + 5);
      v7 = (char *)v4 + *(int *)(v6 + 24);
      v8 = type metadata accessor for BlendMode(0);
      v9 = *(_QWORD *)(v8 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
        (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
    }
  }
  else
  {
    swift_release();
  }
  v10 = a1 + *(int *)(a2 + 36);
  v11 = sub_100007E8C((uint64_t *)&unk_1011DE410);
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v12 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v10, v12);
  }
  else
  {
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t _s11PlaceholderO4ViewVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  _OWORD *v18;
  _OWORD *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *__dst;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v7 = *(int *)(a3 + 32);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  swift_bridgeObjectRetain();
  v10 = sub_100007E8C(&qword_1011DE408);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
    {
      v13 = sub_100007E8C(&qword_1011E1F88);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      v14 = 1;
    }
    else
    {
      v15 = *((_QWORD *)v9 + 3);
      if (v15)
      {
        v16 = *((_QWORD *)v9 + 4);
        *((_QWORD *)v8 + 3) = v15;
        *((_QWORD *)v8 + 4) = v16;
        (**(void (***)(_OWORD *, _OWORD *))(v15 - 8))(v8, v9);
      }
      else
      {
        v17 = v9[1];
        *v8 = *v9;
        v8[1] = v17;
        *((_QWORD *)v8 + 4) = *((_QWORD *)v9 + 4);
      }
      v18 = (_OWORD *)((char *)v8 + 40);
      v19 = (_OWORD *)((char *)v9 + 40);
      v20 = *((_QWORD *)v9 + 8);
      if (v20)
      {
        v21 = *((_QWORD *)v9 + 9);
        *((_QWORD *)v8 + 8) = v20;
        *((_QWORD *)v8 + 9) = v21;
        (**(void (***)(_OWORD *, _OWORD *))(v20 - 8))(v18, v19);
      }
      else
      {
        v22 = *(_OWORD *)((char *)v9 + 56);
        *v18 = *v19;
        *(_OWORD *)((char *)v8 + 56) = v22;
        *((_QWORD *)v8 + 9) = *((_QWORD *)v9 + 9);
      }
      v23 = *(int *)(v11 + 24);
      __dst = (char *)v8 + v23;
      v24 = (char *)v9 + v23;
      v25 = type metadata accessor for BlendMode(0);
      v26 = *(_QWORD *)(v25 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
      {
        v27 = sub_100007E8C(&qword_1011E1FA0);
        memcpy(__dst, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 16))(__dst, v24, v25);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v25);
      }
      v14 = 1;
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
    }
  }
  else
  {
    *(_QWORD *)v8 = *(_QWORD *)v9;
    swift_retain();
    v14 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v10, v14);
  v28 = *(int *)(a3 + 36);
  v29 = (_QWORD *)(a1 + v28);
  v30 = (_QWORD *)(a2 + v28);
  v31 = sub_100007E8C((uint64_t *)&unk_1011DE410);
  if (swift_getEnumCaseMultiPayload(v30, v31) == 1)
  {
    v32 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v29, v30, v32);
    v33 = 1;
  }
  else
  {
    *v29 = *v30;
    swift_retain();
    v33 = 0;
  }
  swift_storeEnumTagMultiPayload(v29, v31, v33);
  return a1;
}

_QWORD *_s11PlaceholderO4ViewVwca(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _OWORD *v7;
  __int128 *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  _OWORD *v17;
  __int128 *v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *__dst;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 32);
    v7 = (_OWORD *)((char *)a1 + v6);
    v8 = (__int128 *)((char *)a2 + v6);
    sub_10004FF60((uint64_t)a1 + v6, &qword_1011DE408);
    v9 = sub_100007E8C(&qword_1011DE408);
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v10 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(__int128 *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
      {
        v12 = sub_100007E8C(&qword_1011E1F88);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        v13 = 1;
      }
      else
      {
        v14 = *((_QWORD *)v8 + 3);
        if (v14)
        {
          *((_QWORD *)v7 + 3) = v14;
          *((_QWORD *)v7 + 4) = *((_QWORD *)v8 + 4);
          (**(void (***)(_OWORD *, __int128 *))(v14 - 8))(v7, v8);
        }
        else
        {
          v15 = *v8;
          v16 = v8[1];
          *((_QWORD *)v7 + 4) = *((_QWORD *)v8 + 4);
          *v7 = v15;
          v7[1] = v16;
        }
        v17 = (_OWORD *)((char *)v7 + 40);
        v18 = (__int128 *)((char *)v8 + 40);
        v19 = *((_QWORD *)v8 + 8);
        if (v19)
        {
          *((_QWORD *)v7 + 8) = v19;
          *((_QWORD *)v7 + 9) = *((_QWORD *)v8 + 9);
          (**(void (***)(_OWORD *, __int128 *))(v19 - 8))(v17, v18);
        }
        else
        {
          v20 = *v18;
          v21 = *(__int128 *)((char *)v8 + 56);
          *((_QWORD *)v7 + 9) = *((_QWORD *)v8 + 9);
          *v17 = v20;
          *(_OWORD *)((char *)v7 + 56) = v21;
        }
        v22 = *(int *)(v10 + 24);
        __dst = (char *)v7 + v22;
        v23 = (char *)v8 + v22;
        v24 = type metadata accessor for BlendMode(0);
        v25 = *(_QWORD *)(v24 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
        {
          v26 = sub_100007E8C(&qword_1011E1FA0);
          memcpy(__dst, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v25 + 16))(__dst, v23, v24);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(__dst, 0, 1, v24);
        }
        v13 = 1;
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
      }
    }
    else
    {
      *(_QWORD *)v7 = *(_QWORD *)v8;
      swift_retain();
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v7, v9, v13);
    v27 = *(int *)(a3 + 36);
    v28 = (_QWORD *)((char *)a1 + v27);
    v29 = (_QWORD *)((char *)a2 + v27);
    sub_10004FF60((uint64_t)a1 + v27, (uint64_t *)&unk_1011DE410);
    v30 = sub_100007E8C((uint64_t *)&unk_1011DE410);
    if (swift_getEnumCaseMultiPayload(v29, v30) == 1)
    {
      v31 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v28, v29, v31);
      v32 = 1;
    }
    else
    {
      *v28 = *v29;
      swift_retain();
      v32 = 0;
    }
    swift_storeEnumTagMultiPayload(v28, v30, v32);
  }
  return a1;
}

uint64_t _s11PlaceholderO4ViewVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  char *__dst;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v6 = *(int *)(a3 + 32);
  v7 = (_OWORD *)(a1 + v6);
  v8 = (_OWORD *)(a2 + v6);
  v9 = sub_100007E8C(&qword_1011DE408);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
    {
      v12 = sub_100007E8C(&qword_1011E1F88);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v13 = v8[1];
      *v7 = *v8;
      v7[1] = v13;
      *((_QWORD *)v7 + 4) = *((_QWORD *)v8 + 4);
      *(_OWORD *)((char *)v7 + 40) = *(_OWORD *)((char *)v8 + 40);
      *(_OWORD *)((char *)v7 + 56) = *(_OWORD *)((char *)v8 + 56);
      *((_QWORD *)v7 + 9) = *((_QWORD *)v8 + 9);
      v14 = *(int *)(v10 + 24);
      __dst = (char *)v7 + v14;
      v15 = (char *)v8 + v14;
      v16 = type metadata accessor for BlendMode(0);
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
        v18 = sub_100007E8C(&qword_1011E1FA0);
        memcpy(__dst, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 32))(__dst, v15, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v16);
      }
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    }
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v19 = *(int *)(a3 + 36);
  v20 = (void *)(a1 + v19);
  v21 = (const void *)(a2 + v19);
  v22 = sub_100007E8C((uint64_t *)&unk_1011DE410);
  if (swift_getEnumCaseMultiPayload(v21, v22) == 1)
  {
    v23 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v20, v21, v23);
    swift_storeEnumTagMultiPayload(v20, v22, 1);
  }
  else
  {
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  return a1;
}

uint64_t _s11PlaceholderO4ViewVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  char *__dst;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v7;
  if (a1 != a2)
  {
    v8 = *(int *)(a3 + 32);
    v9 = (_OWORD *)(a1 + v8);
    v10 = (_OWORD *)(a2 + v8);
    sub_10004FF60(a1 + v8, &qword_1011DE408);
    v11 = sub_100007E8C(&qword_1011DE408);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
      {
        v14 = sub_100007E8C(&qword_1011E1F88);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        v15 = v10[1];
        *v9 = *v10;
        v9[1] = v15;
        *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
        *(_OWORD *)((char *)v9 + 40) = *(_OWORD *)((char *)v10 + 40);
        *(_OWORD *)((char *)v9 + 56) = *(_OWORD *)((char *)v10 + 56);
        *((_QWORD *)v9 + 9) = *((_QWORD *)v10 + 9);
        v16 = *(int *)(v12 + 24);
        __dst = (char *)v9 + v16;
        v17 = (char *)v10 + v16;
        v18 = type metadata accessor for BlendMode(0);
        v19 = *(_QWORD *)(v18 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
        {
          v20 = sub_100007E8C(&qword_1011E1FA0);
          memcpy(__dst, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v19 + 32))(__dst, v17, v18);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
        }
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
      }
      swift_storeEnumTagMultiPayload(v9, v11, 1);
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    v21 = *(int *)(a3 + 36);
    v22 = (void *)(a1 + v21);
    v23 = (const void *)(a2 + v21);
    sub_10004FF60(a1 + v21, (uint64_t *)&unk_1011DE410);
    v24 = sub_100007E8C((uint64_t *)&unk_1011DE410);
    if (swift_getEnumCaseMultiPayload(v23, v24) == 1)
    {
      v25 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v22, v23, v25);
      swift_storeEnumTagMultiPayload(v22, v24, 1);
    }
    else
    {
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
  }
  return a1;
}

uint64_t _s11PlaceholderO4ViewVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C411D0);
}

uint64_t sub_100C411D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011E2390);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 32);
    }
    else
    {
      v10 = sub_100007E8C(&qword_1011E2398);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 36);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t _s11PlaceholderO4ViewVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C41284);
}

uint64_t sub_100C41284(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011E2390);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 32);
    }
    else
    {
      v10 = sub_100007E8C(&qword_1011E2398);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 36);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_100C41328(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[6];

  v6[0] = &unk_100EEEEA8;
  v6[1] = (char *)&value witness table for Builtin.Int64 + 64;
  v6[2] = &unk_100EEEEC0;
  v6[3] = (char *)&value witness table for Builtin.Int64 + 64;
  sub_100C413E8(319);
  if (v3 <= 0x3F)
  {
    v6[4] = *(_QWORD *)(v2 - 8) + 64;
    sub_1000E3A44(319, (unint64_t *)&unk_1011E2410, (uint64_t (*)(uint64_t))&type metadata accessor for ColorSchemeContrast, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v5 <= 0x3F)
    {
      v6[5] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 6, v6, a1 + 16);
    }
  }
}

void sub_100C413E8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1011E2408)
  {
    v2 = sub_100044B54(&qword_1011E1F88);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1011E2408);
  }
}

uint64_t _s11PlaceholderO4ViewV5StyleVwCP(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  _OWORD *v11;
  _OWORD *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  void *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = v9 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[3];
    if (v7)
    {
      v8 = a2[4];
      *(_QWORD *)(a1 + 24) = v7;
      *(_QWORD *)(a1 + 32) = v8;
      (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    }
    else
    {
      v10 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v10;
      *(_QWORD *)(a1 + 32) = a2[4];
    }
    v11 = (_OWORD *)(v4 + 40);
    v12 = a2 + 5;
    v13 = a2[8];
    if (v13)
    {
      v14 = a2[9];
      *(_QWORD *)(v4 + 64) = v13;
      *(_QWORD *)(v4 + 72) = v14;
      (**(void (***)(_OWORD *, _OWORD *))(v13 - 8))(v11, v12);
    }
    else
    {
      v15 = *(_OWORD *)(a2 + 7);
      *v11 = *v12;
      *(_OWORD *)(v4 + 56) = v15;
      *(_QWORD *)(v4 + 72) = a2[9];
    }
    v16 = *(int *)(a3 + 24);
    v17 = (void *)(v4 + v16);
    v18 = (char *)a2 + v16;
    v19 = type metadata accessor for BlendMode(0);
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      v21 = sub_100007E8C(&qword_1011E1FA0);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
  }
  return v4;
}

uint64_t _s11PlaceholderO4ViewV5StyleVwxx(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  if (a1[3])
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(a1);
  if (a1[8])
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(a1 + 5);
  v4 = (char *)a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for BlendMode(0);
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

uint64_t _s11PlaceholderO4ViewV5StyleVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = *(_QWORD *)(a2 + 24);
  if (v6)
  {
    v7 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = v7;
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
  }
  else
  {
    v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  }
  v9 = (_OWORD *)(a1 + 40);
  v10 = (_OWORD *)(a2 + 40);
  v11 = *(_QWORD *)(a2 + 64);
  if (v11)
  {
    v12 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v11;
    *(_QWORD *)(a1 + 72) = v12;
    (**(void (***)(_OWORD *, _OWORD *))(v11 - 8))(v9, v10);
  }
  else
  {
    v13 = *(_OWORD *)(a2 + 56);
    *v9 = *v10;
    *(_OWORD *)(a1 + 56) = v13;
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  }
  v14 = *(int *)(a3 + 24);
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  v17 = type metadata accessor for BlendMode(0);
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    v19 = sub_100007E8C(&qword_1011E1FA0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 16))(v15, v16, v17);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  return a1;
}

uint64_t _s11PlaceholderO4ViewV5StyleVwca(uint64_t a1, __int128 *a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;

  v6 = *((_QWORD *)a2 + 3);
  if (*(_QWORD *)(a1 + 24))
  {
    if (v6)
    {
      sub_100625DD8((_QWORD *)a1, a2);
      goto LABEL_8;
    }
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)a1);
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    (**(void (***)(uint64_t, __int128 *))(v6 - 8))(a1, a2);
    goto LABEL_8;
  }
  v7 = *a2;
  v8 = a2[1];
  *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
  *(_OWORD *)a1 = v7;
  *(_OWORD *)(a1 + 16) = v8;
LABEL_8:
  v9 = *((_QWORD *)a2 + 8);
  if (*(_QWORD *)(a1 + 64))
  {
    if (v9)
    {
      sub_100625DD8((_QWORD *)(a1 + 40), (_QWORD *)a2 + 5);
      goto LABEL_15;
    }
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(a1 + 40));
  }
  else if (v9)
  {
    *(_QWORD *)(a1 + 64) = v9;
    *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
    (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 40, (uint64_t)a2 + 40);
    goto LABEL_15;
  }
  v10 = *(__int128 *)((char *)a2 + 40);
  v11 = *(__int128 *)((char *)a2 + 56);
  *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
  *(_OWORD *)(a1 + 40) = v10;
  *(_OWORD *)(a1 + 56) = v11;
LABEL_15:
  v12 = *(int *)(a3 + 24);
  v13 = (void *)(a1 + v12);
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for BlendMode(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, char *, uint64_t))(v16 + 24))(v13, v14, v15);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_20;
  }
  if (v19)
  {
LABEL_20:
    v20 = sub_100007E8C(&qword_1011E1FA0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t _s11PlaceholderO4ViewV5StyleVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  const void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v5 = *(int *)(a3 + 24);
  v6 = (const void *)(a2 + v5);
  v7 = (void *)(a1 + v5);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v8 = type metadata accessor for BlendMode(0);
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
  {
    v10 = sub_100007E8C(&qword_1011E1FA0);
    memcpy(v7, v6, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v7, v6, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  }
  return a1;
}

uint64_t _s11PlaceholderO4ViewV5StyleVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;

  if (*(_QWORD *)(a1 + 24))
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 64))
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(a1 + 40));
  v7 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v7;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v8 = *(int *)(a3 + 24);
  v9 = (void *)(a1 + v8);
  v10 = (void *)(a2 + v8);
  v11 = type metadata accessor for BlendMode(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_10;
  }
  if (v15)
  {
LABEL_10:
    v16 = sub_100007E8C(&qword_1011E1FA0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return a1;
}

uint64_t _s11PlaceholderO4ViewV5StyleVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C41B5C);
}

uint64_t sub_100C41B5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = sub_100007E8C(&qword_1011E1FA0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v9);
  }
}

uint64_t _s11PlaceholderO4ViewV5StyleVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C41BF4);
}

uint64_t sub_100C41BF4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 24) = a2;
  }
  else
  {
    v7 = sub_100007E8C(&qword_1011E1FA0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

void sub_100C41C6C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = "(";
  v4[1] = "(";
  sub_1000E3A44(319, (unint64_t *)&unk_1011E24B8, (uint64_t (*)(uint64_t))&type metadata accessor for BlendMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for PlaceholderStyleModifier(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  _OWORD *v20;
  _OWORD *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    a1 = (_QWORD *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *a1 = v5;
    a1[1] = v6;
    v7 = *(int *)(a3 + 20);
    v8 = (_OWORD *)((char *)a1 + v7);
    v9 = (_OWORD *)((char *)a2 + v7);
    swift_retain();
    v10 = sub_100007E8C(&qword_1011DE408);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
      {
        v13 = sub_100007E8C(&qword_1011E1F88);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        v17 = *((_QWORD *)v9 + 3);
        if (v17)
        {
          v18 = *((_QWORD *)v9 + 4);
          *((_QWORD *)v8 + 3) = v17;
          *((_QWORD *)v8 + 4) = v18;
          (**(void (***)(_OWORD *, _OWORD *))(v17 - 8))(v8, v9);
        }
        else
        {
          v19 = v9[1];
          *v8 = *v9;
          v8[1] = v19;
          *((_QWORD *)v8 + 4) = *((_QWORD *)v9 + 4);
        }
        v20 = (_OWORD *)((char *)v8 + 40);
        v21 = (_OWORD *)((char *)v9 + 40);
        v22 = *((_QWORD *)v9 + 8);
        if (v22)
        {
          v23 = *((_QWORD *)v9 + 9);
          *((_QWORD *)v8 + 8) = v22;
          *((_QWORD *)v8 + 9) = v23;
          (**(void (***)(_OWORD *, _OWORD *))(v22 - 8))(v20, v21);
        }
        else
        {
          v24 = *(_OWORD *)((char *)v9 + 56);
          *v20 = *v21;
          *(_OWORD *)((char *)v8 + 56) = v24;
          *((_QWORD *)v8 + 9) = *((_QWORD *)v9 + 9);
        }
        v25 = *(int *)(v11 + 24);
        v26 = (char *)v8 + v25;
        v27 = (char *)v9 + v25;
        v28 = type metadata accessor for BlendMode(0);
        v29 = *(_QWORD *)(v28 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
        {
          v30 = sub_100007E8C(&qword_1011E1FA0);
          memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
        }
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
      }
      v14 = v8;
      v15 = v10;
      v16 = 1;
    }
    else
    {
      *(_QWORD *)v8 = *(_QWORD *)v9;
      swift_retain();
      v14 = v8;
      v15 = v10;
      v16 = 0;
    }
    swift_storeEnumTagMultiPayload(v14, v15, v16);
  }
  return a1;
}

void destroy for PlaceholderStyleModifier(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  swift_release();
  v4 = (_QWORD *)(a1 + *(int *)(a2 + 20));
  v5 = sub_100007E8C(&qword_1011DE408);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v4, 1, v6))
    {
      if (v4[3])
        _s5Music18DragDropToPlaylistV6OriginVwxx_0(v4);
      if (v4[8])
        _s5Music18DragDropToPlaylistV6OriginVwxx_0(v4 + 5);
      v7 = (char *)v4 + *(int *)(v6 + 24);
      v8 = type metadata accessor for BlendMode(0);
      v9 = *(_QWORD *)(v8 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
        (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
    }
  }
  else
  {
    swift_release();
  }
}

_QWORD *initializeWithCopy for PlaceholderStyleModifier(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (_OWORD *)((char *)a1 + v5);
  v7 = (_OWORD *)((char *)a2 + v5);
  swift_retain();
  v8 = sub_100007E8C(&qword_1011DE408);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
    v10 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9))
    {
      v11 = sub_100007E8C(&qword_1011E1F88);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      v12 = 1;
    }
    else
    {
      v13 = *((_QWORD *)v7 + 3);
      if (v13)
      {
        v14 = *((_QWORD *)v7 + 4);
        *((_QWORD *)v6 + 3) = v13;
        *((_QWORD *)v6 + 4) = v14;
        (**(void (***)(_OWORD *, _OWORD *))(v13 - 8))(v6, v7);
      }
      else
      {
        v15 = v7[1];
        *v6 = *v7;
        v6[1] = v15;
        *((_QWORD *)v6 + 4) = *((_QWORD *)v7 + 4);
      }
      v16 = (_OWORD *)((char *)v6 + 40);
      v17 = (_OWORD *)((char *)v7 + 40);
      v18 = *((_QWORD *)v7 + 8);
      if (v18)
      {
        v19 = *((_QWORD *)v7 + 9);
        *((_QWORD *)v6 + 8) = v18;
        *((_QWORD *)v6 + 9) = v19;
        (**(void (***)(_OWORD *, _OWORD *))(v18 - 8))(v16, v17);
      }
      else
      {
        v20 = *(_OWORD *)((char *)v7 + 56);
        *v16 = *v17;
        *(_OWORD *)((char *)v6 + 56) = v20;
        *((_QWORD *)v6 + 9) = *((_QWORD *)v7 + 9);
      }
      v21 = *(int *)(v9 + 24);
      v22 = (char *)v6 + v21;
      v23 = (char *)v7 + v21;
      v24 = type metadata accessor for BlendMode(0);
      v25 = *(_QWORD *)(v24 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
      {
        v26 = sub_100007E8C(&qword_1011E1FA0);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      }
      v12 = 1;
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
    }
  }
  else
  {
    *(_QWORD *)v6 = *(_QWORD *)v7;
    swift_retain();
    v12 = 0;
  }
  swift_storeEnumTagMultiPayload(v6, v8, v12);
  return a1;
}

_QWORD *assignWithCopy for PlaceholderStyleModifier(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  __int128 *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  _OWORD *v18;
  __int128 *v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 20);
    v8 = (_OWORD *)((char *)a1 + v7);
    v9 = (__int128 *)((char *)a2 + v7);
    sub_10004FF60((uint64_t)a1 + v7, &qword_1011DE408);
    v10 = sub_100007E8C(&qword_1011DE408);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(__int128 *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
      {
        v13 = sub_100007E8C(&qword_1011E1F88);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        v14 = 1;
      }
      else
      {
        v15 = *((_QWORD *)v9 + 3);
        if (v15)
        {
          *((_QWORD *)v8 + 3) = v15;
          *((_QWORD *)v8 + 4) = *((_QWORD *)v9 + 4);
          (**(void (***)(_OWORD *, __int128 *))(v15 - 8))(v8, v9);
        }
        else
        {
          v16 = *v9;
          v17 = v9[1];
          *((_QWORD *)v8 + 4) = *((_QWORD *)v9 + 4);
          *v8 = v16;
          v8[1] = v17;
        }
        v18 = (_OWORD *)((char *)v8 + 40);
        v19 = (__int128 *)((char *)v9 + 40);
        v20 = *((_QWORD *)v9 + 8);
        if (v20)
        {
          *((_QWORD *)v8 + 8) = v20;
          *((_QWORD *)v8 + 9) = *((_QWORD *)v9 + 9);
          (**(void (***)(_OWORD *, __int128 *))(v20 - 8))(v18, v19);
        }
        else
        {
          v21 = *v19;
          v22 = *(__int128 *)((char *)v9 + 56);
          *((_QWORD *)v8 + 9) = *((_QWORD *)v9 + 9);
          *v18 = v21;
          *(_OWORD *)((char *)v8 + 56) = v22;
        }
        v23 = *(int *)(v11 + 24);
        v24 = (char *)v8 + v23;
        v25 = (char *)v9 + v23;
        v26 = type metadata accessor for BlendMode(0);
        v27 = *(_QWORD *)(v26 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
        {
          v28 = sub_100007E8C(&qword_1011E1FA0);
          memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
        }
        v14 = 1;
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
      }
    }
    else
    {
      *(_QWORD *)v8 = *(_QWORD *)v9;
      swift_retain();
      v14 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v10, v14);
  }
  return a1;
}

_OWORD *initializeWithTake for PlaceholderStyleModifier(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  _OWORD *v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (_OWORD *)((char *)a1 + v4);
  v6 = (_OWORD *)((char *)a2 + v4);
  v7 = sub_100007E8C(&qword_1011DE408);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
    {
      v10 = sub_100007E8C(&qword_1011E1F88);
      memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      v11 = v6[1];
      *v5 = *v6;
      v5[1] = v11;
      *((_QWORD *)v5 + 4) = *((_QWORD *)v6 + 4);
      *(_OWORD *)((char *)v5 + 40) = *(_OWORD *)((char *)v6 + 40);
      *(_OWORD *)((char *)v5 + 56) = *(_OWORD *)((char *)v6 + 56);
      *((_QWORD *)v5 + 9) = *((_QWORD *)v6 + 9);
      v12 = *(int *)(v8 + 24);
      v13 = (char *)v5 + v12;
      v14 = (char *)v6 + v12;
      v15 = type metadata accessor for BlendMode(0);
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        v17 = sub_100007E8C(&qword_1011E1FA0);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
    }
    swift_storeEnumTagMultiPayload(v5, v7, 1);
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

_OWORD *assignWithTake for PlaceholderStyleModifier(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *a1 = *a2;
  swift_release();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (_OWORD *)((char *)a1 + v6);
    v8 = (_OWORD *)((char *)a2 + v6);
    sub_10004FF60((uint64_t)a1 + v6, &qword_1011DE408);
    v9 = sub_100007E8C(&qword_1011DE408);
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v10 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
      {
        v12 = sub_100007E8C(&qword_1011E1F88);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        v13 = v8[1];
        *v7 = *v8;
        v7[1] = v13;
        *((_QWORD *)v7 + 4) = *((_QWORD *)v8 + 4);
        *(_OWORD *)((char *)v7 + 40) = *(_OWORD *)((char *)v8 + 40);
        *(_OWORD *)((char *)v7 + 56) = *(_OWORD *)((char *)v8 + 56);
        *((_QWORD *)v7 + 9) = *((_QWORD *)v8 + 9);
        v14 = *(int *)(v10 + 24);
        v15 = (char *)v7 + v14;
        v16 = (char *)v8 + v14;
        v17 = type metadata accessor for BlendMode(0);
        v18 = *(_QWORD *)(v17 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
        {
          v19 = sub_100007E8C(&qword_1011E1FA0);
          memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
        }
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
      }
      swift_storeEnumTagMultiPayload(v7, v9, 1);
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaceholderStyleModifier(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C427F0);
}

uint64_t sub_100C427F0(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011E2390);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PlaceholderStyleModifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C4287C);
}

char *sub_100C4287C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_100007E8C(&qword_1011E2390);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

void sub_100C428F4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for () + 64;
  sub_100C413E8(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
  }
}

uint64_t sub_100C4296C()
{
  _QWORD v1[2];

  v1[0] = sub_100044B54((uint64_t *)&unk_1011E3D90);
  v1[1] = sub_100C39DFC();
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>, 1);
}

unint64_t sub_100C429BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E2580;
  if (!qword_1011E2580)
  {
    v1 = sub_100044B54(&qword_1011E1F58);
    sub_100C42A40();
    sub_100049F28(&qword_1011E2598, &qword_1011E1F78, (uint64_t)&protocol conformance descriptor for _AnimationModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E2580);
  }
  return result;
}

unint64_t sub_100C42A40()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011E2588;
  if (!qword_1011E2588)
  {
    v1 = sub_100044B54(&qword_1011E1F50);
    v2[0] = sub_100044B54(&qword_1011E1F60);
    v2[1] = sub_100C3BCA4();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>, 1);
    sub_100049F28(&qword_1011E2590, &qword_1011E1F70, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E2588);
  }
  return result;
}

unint64_t sub_100C42AF4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E25A0;
  if (!qword_1011E25A0)
  {
    v1 = sub_100044B54(&qword_1011E1F98);
    sub_100C42B78();
    sub_100049F28(&qword_1011E25C8, &qword_1011E1F90, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E25A0);
  }
  return result;
}

unint64_t sub_100C42B78()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E25A8;
  if (!qword_1011E25A8)
  {
    v1 = sub_100044B54(&qword_1011E25B0);
    sub_100049F28(&qword_1011E25B8, &qword_1011E25C0, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E25A8);
  }
  return result;
}

unint64_t sub_100C42C00()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E25D0;
  if (!qword_1011E25D0)
  {
    v1 = sub_100044B54(&qword_1011E20F0);
    sub_100049F28(&qword_1011E25D8, &qword_1011E2100, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    sub_100049F28(&qword_1011E25E0, &qword_1011E20F8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E25D0);
  }
  return result;
}

uint64_t sub_100C42C9C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *a1;
  v2 = type metadata accessor for PlaceholderStyleModifier(255);
  v3 = type metadata accessor for ModifiedContent(255, v1, v2);
  sub_100048748(&qword_1011E25E8, type metadata accessor for PlaceholderStyleModifier, (uint64_t)&protocol conformance descriptor for PlaceholderStyleModifier);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v3);
}

uint64_t _s11PlaceholderO10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_100C42D68 + 4 * byte_100EEEB3C[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_100C42D9C + 4 * byte_100EEEB37[v4]))();
}

uint64_t sub_100C42D9C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100C42DA4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100C42DACLL);
  return result;
}

uint64_t sub_100C42DB8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100C42DC0);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_100C42DC4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100C42DCC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s11PlaceholderO10CodingKeysOMa()
{
  return &_s11PlaceholderO10CodingKeysON;
}

ValueMetadata *_s11PlaceholderO15MusicCodingKeysOMa()
{
  return &_s11PlaceholderO15MusicCodingKeysON;
}

ValueMetadata *_s11PlaceholderO20NowPlayingCodingKeysOMa()
{
  return &_s11PlaceholderO20NowPlayingCodingKeysON;
}

ValueMetadata *_s11PlaceholderO21NewPlaylistCodingKeysOMa()
{
  return &_s11PlaceholderO21NewPlaylistCodingKeysON;
}

uint64_t _s11PlaceholderO18PlaylistCodingKeysOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_100C42E58 + 4 * byte_100EEEB41[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_100C42E78 + 4 * byte_100EEEB46[v4]))();
}

_BYTE *sub_100C42E58(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_100C42E78(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100C42E80(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100C42E88(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100C42E90(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100C42E98(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s11PlaceholderO18PlaylistCodingKeysOMa()
{
  return &_s11PlaceholderO18PlaylistCodingKeysON;
}

ValueMetadata *_s11PlaceholderO20MusicVideoCodingKeysOMa()
{
  return &_s11PlaceholderO20MusicVideoCodingKeysON;
}

ValueMetadata *_s11PlaceholderO12TvCodingKeysOMa()
{
  return &_s11PlaceholderO12TvCodingKeysON;
}

ValueMetadata *_s11PlaceholderO20MicrophoneCodingKeysOMa()
{
  return &_s11PlaceholderO20MicrophoneCodingKeysON;
}

ValueMetadata *_s11PlaceholderO16PersonCodingKeysOMa()
{
  return &_s11PlaceholderO16PersonCodingKeysON;
}

ValueMetadata *_s11PlaceholderO15RadioCodingKeysOMa()
{
  return &_s11PlaceholderO15RadioCodingKeysON;
}

ValueMetadata *_s11PlaceholderO15GenreCodingKeysOMa()
{
  return &_s11PlaceholderO15GenreCodingKeysON;
}

ValueMetadata *_s11PlaceholderO18ComposerCodingKeysOMa()
{
  return &_s11PlaceholderO18ComposerCodingKeysON;
}

ValueMetadata *_s19PlaceholderStyleKeyVMa()
{
  return &_s19PlaceholderStyleKeyVN;
}

unint64_t sub_100C42F38()
{
  unint64_t result;

  result = qword_1011E25F0;
  if (!qword_1011E25F0)
  {
    result = swift_getWitnessTable(&unk_100EEF324, &_s11PlaceholderO18PlaylistCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1011E25F0);
  }
  return result;
}

unint64_t sub_100C42F80()
{
  unint64_t result;

  result = qword_1011E25F8;
  if (!qword_1011E25F8)
  {
    result = swift_getWitnessTable(&unk_100EEF4CC, &_s11PlaceholderO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1011E25F8);
  }
  return result;
}

unint64_t sub_100C42FC8()
{
  unint64_t result;

  result = qword_1011E2600;
  if (!qword_1011E2600)
  {
    result = swift_getWitnessTable(&unk_100EEF3EC, &_s11PlaceholderO15MusicCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1011E2600);
  }
  return result;
}

unint64_t sub_100C43010()
{
  unint64_t result;

  result = qword_1011E2608;
  if (!qword_1011E2608)
  {
    result = swift_getWitnessTable(&unk_100EEF414, &_s11PlaceholderO15MusicCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1011E2608);
  }
  return result;
}

unint64_t sub_100C43058()
{
  unint64_t result;

  result = qword_1011E2610;
  if (!qword_1011E2610)
  {
    result = swift_getWitnessTable(&unk_100EEF39C, &_s11PlaceholderO20NowPlayingCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1011E2610);
  }
  return result;
}

unint64_t sub_100C430A0()
{
  unint64_t result;

  result = qword_1011E2618;
  if (!qword_1011E2618)
  {
    result = swift_getWitnessTable(&unk_100EEF3C4, &_s11PlaceholderO20NowPlayingCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1011E2618);
  }
  return result;
}

unint64_t sub_100C430E8()
{
  unint64_t result;

  result = qword_1011E2620;
  if (!qword_1011E2620)
  {
    result = swift_getWitnessTable(&unk_100EEF34C, &_s11PlaceholderO21NewPlaylistCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1011E2620);
  }
  return result;
}

unint64_t sub_100C43130()
{
  unint64_t result;

  result = qword_1011E2628;
  if (!qword_1011E2628)
  {
    result = swift_getWitnessTable(&unk_100EEF374, &_s11PlaceholderO21NewPlaylistCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1011E2628);
  }
  return result;
}

unint64_t sub_100C43178()
{
  unint64_t result;

  result = qword_1011E2630;
  if (!qword_1011E2630)
  {
    result = swift_getWitnessTable(&unk_100EEF294, &_s11PlaceholderO18PlaylistCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1011E2630);
  }
  return result;
}

unint64_t sub_100C431C0()
{
  unint64_t result;

  result = qword_1011E2638;
  if (!qword_1011E2638)
  {
    result = swift_getWitnessTable(&unk_100EEF2BC, &_s11PlaceholderO18PlaylistCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1011E2638);
  }
  return result;
}

unint64_t sub_100C43208()
{
  unint64_t result;

  result = qword_1011E2640;
  if (!qword_1011E2640)
  {
    result = swift_getWitnessTable(&unk_100EEF244, &_s11PlaceholderO20MusicVideoCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1011E2640);
  }
  return result;
}

unint64_t sub_100C43250()
{
  unint64_t result;

  result = qword_1011E2648;
  if (!qword_1011E2648)
  {
    result = swift_getWitnessTable(&unk_100EEF26C, &_s11PlaceholderO20MusicVideoCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1011E2648);
  }
  return result;
}

unint64_t sub_100C43298()
{
  unint64_t result;

  result = qword_1011E2650;
  if (!qword_1011E2650)
  {
    result = swift_getWitnessTable(&unk_100EEF1F4, &_s11PlaceholderO12TvCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1011E2650);
  }
  return result;
}

unint64_t sub_100C432E0()
{
  unint64_t result;

  result = qword_1011E2658;
  if (!qword_1011E2658)
  {
    result = swift_getWitnessTable(&unk_100EEF21C, &_s11PlaceholderO12TvCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1011E2658);
  }
  return result;
}

unint64_t sub_100C43328()
{
  unint64_t result;

  result = qword_1011E2660;
  if (!qword_1011E2660)
  {
    result = swift_getWitnessTable(&unk_100EEF1A4, &_s11PlaceholderO20MicrophoneCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1011E2660);
  }
  return result;
}

unint64_t sub_100C43370()
{
  unint64_t result;

  result = qword_1011E2668;
  if (!qword_1011E2668)
  {
    result = swift_getWitnessTable(&unk_100EEF1CC, &_s11PlaceholderO20MicrophoneCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1011E2668);
  }
  return result;
}

unint64_t sub_100C433B8()
{
  unint64_t result;

  result = qword_1011E2670;
  if (!qword_1011E2670)
  {
    result = swift_getWitnessTable(&unk_100EEF154, &_s11PlaceholderO16PersonCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1011E2670);
  }
  return result;
}

unint64_t sub_100C43400()
{
  unint64_t result;

  result = qword_1011E2678;
  if (!qword_1011E2678)
  {
    result = swift_getWitnessTable(&unk_100EEF17C, &_s11PlaceholderO16PersonCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1011E2678);
  }
  return result;
}

unint64_t sub_100C43448()
{
  unint64_t result;

  result = qword_1011E2680;
  if (!qword_1011E2680)
  {
    result = swift_getWitnessTable(&unk_100EEF104, &_s11PlaceholderO15RadioCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1011E2680);
  }
  return result;
}

unint64_t sub_100C43490()
{
  unint64_t result;

  result = qword_1011E2688;
  if (!qword_1011E2688)
  {
    result = swift_getWitnessTable(&unk_100EEF12C, &_s11PlaceholderO15RadioCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1011E2688);
  }
  return result;
}

unint64_t sub_100C434D8()
{
  unint64_t result;

  result = qword_1011E2690;
  if (!qword_1011E2690)
  {
    result = swift_getWitnessTable(&unk_100EEF0B4, &_s11PlaceholderO15GenreCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1011E2690);
  }
  return result;
}

unint64_t sub_100C43520()
{
  unint64_t result;

  result = qword_1011E2698;
  if (!qword_1011E2698)
  {
    result = swift_getWitnessTable(&unk_100EEF0DC, &_s11PlaceholderO15GenreCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1011E2698);
  }
  return result;
}

unint64_t sub_100C43568()
{
  unint64_t result;

  result = qword_1011E26A0;
  if (!qword_1011E26A0)
  {
    result = swift_getWitnessTable(&unk_100EEF064, &_s11PlaceholderO18ComposerCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1011E26A0);
  }
  return result;
}

unint64_t sub_100C435B0()
{
  unint64_t result;

  result = qword_1011E26A8;
  if (!qword_1011E26A8)
  {
    result = swift_getWitnessTable(&unk_100EEF08C, &_s11PlaceholderO18ComposerCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1011E26A8);
  }
  return result;
}

unint64_t sub_100C435F8()
{
  unint64_t result;

  result = qword_1011E26B0;
  if (!qword_1011E26B0)
  {
    result = swift_getWitnessTable(&unk_100EEF43C, &_s11PlaceholderO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1011E26B0);
  }
  return result;
}

unint64_t sub_100C43640()
{
  unint64_t result;

  result = qword_1011E26B8;
  if (!qword_1011E26B8)
  {
    result = swift_getWitnessTable(&unk_100EEF464, &_s11PlaceholderO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1011E26B8);
  }
  return result;
}

uint64_t sub_100C43684(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;

  if (a1 == 0x636973756DLL && a2 == 0xE500000000000000)
  {
    v5 = 0xE500000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x636973756DLL, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x6979616C50776F6ELL && a2 == 0xEA0000000000676ELL)
  {
    v7 = 0xEA0000000000676ELL;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6979616C50776F6ELL, 0xEA0000000000676ELL, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x6C79616C5077656ELL && a2 == 0xEB00000000747369)
  {
    v8 = 0xEB00000000747369;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6C79616C5077656ELL, 0xEB00000000747369, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0x7473696C79616C70 && a2 == 0xE800000000000000)
  {
    v9 = 0xE800000000000000;
LABEL_26:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7473696C79616C70, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
    goto LABEL_26;
  }
  if (a1 == 0x646956636973756DLL && a2 == 0xEA00000000006F65)
  {
    v10 = 0xEA00000000006F65;
LABEL_32:
    swift_bridgeObjectRelease(v10);
    return 4;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x646956636973756DLL, 0xEA00000000006F65, a1, a2, 0) & 1) != 0)
  {
    v10 = a2;
    goto LABEL_32;
  }
  if (a1 == 30324 && a2 == 0xE200000000000000)
  {
    v11 = 0xE200000000000000;
LABEL_38:
    swift_bridgeObjectRelease(v11);
    return 5;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(30324, 0xE200000000000000, a1, a2, 0) & 1) != 0)
  {
    v11 = a2;
    goto LABEL_38;
  }
  if (a1 == 0x6F68706F7263696DLL && a2 == 0xEA0000000000656ELL)
  {
    v12 = 0xEA0000000000656ELL;
LABEL_44:
    swift_bridgeObjectRelease(v12);
    return 6;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6F68706F7263696DLL, 0xEA0000000000656ELL, a1, a2, 0) & 1) != 0)
  {
    v12 = a2;
    goto LABEL_44;
  }
  if (a1 == 0x6E6F73726570 && a2 == 0xE600000000000000)
  {
    v13 = 0xE600000000000000;
LABEL_50:
    swift_bridgeObjectRelease(v13);
    return 7;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F73726570, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v13 = a2;
    goto LABEL_50;
  }
  if (a1 == 0x6F69646172 && a2 == 0xE500000000000000)
  {
    v14 = 0xE500000000000000;
LABEL_56:
    swift_bridgeObjectRelease(v14);
    return 8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6F69646172, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v14 = a2;
    goto LABEL_56;
  }
  if (a1 == 0x65726E6567 && a2 == 0xE500000000000000)
  {
    v15 = 0xE500000000000000;
LABEL_62:
    swift_bridgeObjectRelease(v15);
    return 9;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x65726E6567, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v15 = a2;
    goto LABEL_62;
  }
  if (a1 == 0x7265736F706D6F63 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease(0xE800000000000000);
    return 10;
  }
  else
  {
    v16 = _stringCompareWithSmolCheck(_:_:expecting:)(0x7265736F706D6F63, 0xE800000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v16 & 1) != 0)
      return 10;
    else
      return 11;
  }
}

double sub_100C43AEC(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  double v4;

  if ((a4 & 1) != 0)
    sub_1002CF744(result, a2);
  else
    *(_QWORD *)&v4 = swift_release().n128_u64[0];
  return v4;
}

unint64_t sub_100C43B00()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E26E0;
  if (!qword_1011E26E0)
  {
    v1 = sub_100044B54(&qword_1011E26D8);
    sub_100C43B84();
    sub_100049F28((unint64_t *)&unk_1011E3BD0, &qword_1011E0EA8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E26E0);
  }
  return result;
}

unint64_t sub_100C43B84()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E26E8;
  if (!qword_1011E26E8)
  {
    v1 = sub_100044B54(&qword_1011E26F0);
    sub_100049F28(&qword_1011E26F8, &qword_1011E2700, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E26E8);
  }
  return result;
}

uint64_t sub_100C43C08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;

  v1 = type metadata accessor for ArtworkImage.Placeholder(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = (int *)type metadata accessor for ArtworkMotionView(0);
  v6 = *((_QWORD *)v5 - 1);
  v29 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v27 = *(_QWORD *)(v6 + 64);
  v7 = v0 + v3;
  v8 = sub_100007E8C(&qword_1011E4DE0);
  v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  if (!v26(v7, 10, v8))
  {
    v9 = type metadata accessor for Playlist.Variant(0);
    v10 = *(_QWORD *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9))
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v7, v9);
  }
  v28 = v0;
  v11 = v0 + v29;
  v12 = type metadata accessor for VideoArtwork(0);
  v13 = *(_QWORD *)(v12 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v13 + 48))(v0 + v29, 1, v12))
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  v14 = v11 + v5[5];
  v15 = type metadata accessor for Artwork(0);
  v16 = *(_QWORD *)(v15 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  v17 = v11 + v5[6];
  v18 = type metadata accessor for Artwork.CropStyle(0);
  v19 = *(_QWORD *)(v18 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
  v20 = v11 + v5[8];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v20, 1, v1) && !v26(v20, 10, v8))
  {
    v21 = type metadata accessor for Playlist.Variant(0);
    v22 = *(_QWORD *)(v21 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
  }
  v23 = v11 + v5[9];
  v24 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
  return swift_deallocObject(v28, v29 + v27);
}

uint64_t sub_100C43E78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(type metadata accessor for ArtworkImage.Placeholder(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ArtworkMotionView(0) - 8) + 80);
  return sub_100C343F0(v1 + ((v4 + v5 + v6) & ~v6), a1);
}

uint64_t sub_100C43EF0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(type metadata accessor for ArtworkImage.Placeholder(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = sub_100007E8C(&qword_1011E4DE0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v0 + v2, 10, v4))
  {
    v5 = type metadata accessor for Playlist.Variant(0);
    v6 = *(_QWORD *)(v5 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v2, 1, v5))
      (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v2, v5);
  }
  return swift_deallocObject(v0, ((v3 + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 42);
}

uint64_t sub_100C43FB8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ArtworkImage.Placeholder(0);
  return sub_100C33318((uint64_t *)(v1+ ((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64)+ ((*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80))+ 7) & 0xFFFFFFFFFFFFFFF8)), a1);
}

uint64_t TextBadge.init(immersive:)(char a1)
{
  if ((a1 & 1) != 0)
    return 4;
  else
    return 2;
}

uint64_t TextBadge.view.getter(char a1)
{
  id v2;
  double v3;
  double v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v9;
  _QWORD v10[5];

  v2 = objc_msgSend(objc_allocWithZone((Class)UIFontMetrics), "initForTextStyle:", UIFontTextStyleLargeTitle);
  objc_msgSend(v2, "scaledValueForValue:", 10.0);
  v4 = v3;

  v5 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:weight:", 7, v4);
  v10[3] = type metadata accessor for TintShapeStyle(0);
  v10[4] = &protocol witness table for TintShapeStyle;
  sub_100049F68(v10);
  TintShapeStyle.init()();
  v9 = v5;
  TextBadge.view(favoriteBadgeConfiguration:)(&v9, a1);
  v7 = v6;
  sub_100C465B8(&v9);
  return v7;
}

void TextBadge.view(favoriteBadgeConfiguration:)(_QWORD *a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  NSString v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t *v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  Swift::String v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD v79[3];
  uint64_t v80;
  uint64_t v81;

  if (a2 != 2)
  {
    if (a2 == 3)
    {
      sub_100064C78((uint64_t)(a1 + 1), (uint64_t)v79);
      v32 = v80;
      v76 = v81;
      v75 = sub_100007E68(v79, v80);
      v33 = (uint64_t *)String.nonBreakingSpace.unsafeMutableAddressor();
      v35 = *v33;
      v34 = v33[1];
      swift_bridgeObjectRetain();
      v36 = String._bridgeToObjectiveC()();
      v37 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v36);

      if (v37)
      {
        v38 = objc_msgSend(v37, "imageWithConfiguration:", *a1);

        v39 = objc_msgSend(v38, "imageWithRenderingMode:", 2);
        v40 = Image.init(uiImage:)(v39);
        v41 = Text.init(_:)(v40);
        v43 = v42;
        v45 = v44;
        v47 = v46 & 1;
        v48 = static Text.+ infix(_:_:)(v35, v34, 0, _swiftEmptyArrayStorage, v41, v42, v47, v44);
        v50 = v49;
        v52 = v51;
        v54 = v53 & 1;
        sub_100055BAC(v41, v43, v47);
        swift_bridgeObjectRelease(v34);
        swift_bridgeObjectRelease(v45);
        v55 = Text.foregroundStyle<A>(_:)(v75, v48, v50, v54, v52, v32, v76);
        v57 = v56;
        v59 = v58;
        LOBYTE(v47) = v60 & 1;
        sub_100055BAC(v48, v50, v54);
        swift_bridgeObjectRelease(v52);
        v61 = AccessibilityString.favoriteBadgeLabel.unsafeMutableAddressor();
        v62 = *v61;
        v63 = v61[1];
        swift_bridgeObjectRetain();
        Text.accessibilityLabel(_:)(v62, v63, v55, v57, v47, v59);
        swift_bridgeObjectRelease(v63);
        sub_100055BAC(v55, v57, v47);
        swift_bridgeObjectRelease(v59);
        _s5Music18DragDropToPlaylistV6OriginVwxx_0(v79);
      }
      else
      {
        __break(1u);
      }
    }
    else if (a2 == 4)
    {
      v2 = (uint64_t *)String.nonBreakingSpace.unsafeMutableAddressor();
      v3 = *v2;
      v4 = v2[1];
      swift_bridgeObjectRetain();
      v5 = Image.init(_internalSystemName:)(0x6461622E3130336ELL, 0xEF79616C702E6567);
      v6 = Text.init(_:)(v5);
      v8 = v7;
      v10 = v9;
      v12 = v11 & 1;
      v13 = static Text.+ infix(_:_:)(v3, v4, 0, _swiftEmptyArrayStorage, v6, v7, v12, v9);
      v15 = v14;
      v17 = v16;
      v19 = v18 & 1;
      sub_100055BAC(v6, v8, v12);
      swift_bridgeObjectRelease(v4);
      swift_bridgeObjectRelease(v10);
      LODWORD(v79[0]) = static HierarchicalShapeStyle.secondary.getter(v20);
      v21 = Text.foregroundStyle<A>(_:)(v79, v13, v15, v19, v17, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
      v23 = v22;
      v25 = v24;
      v27 = v26 & 1;
      sub_100055BAC(v13, v15, v19);
      swift_bridgeObjectRelease(v17);
      v28 = AccessibilityString.immersiveBadgeLabel.unsafeMutableAddressor();
      v29 = *v28;
      v30 = v28[1];
      swift_bridgeObjectRetain();
      Text.accessibilityLabel(_:)(v29, v30, v21, v23, v27, v25);
      swift_bridgeObjectRelease(v30);
      sub_100055BAC(v21, v23, v27);
      swift_bridgeObjectRelease(v25);
    }
    else
    {
      v64 = a2 & 1;
      v65 = (uint64_t *)String.nonBreakingSpace.unsafeMutableAddressor();
      v67 = *v65;
      v66 = v65[1];
      v77 = v67;
      v78 = v66;
      swift_bridgeObjectRetain();
      v68 = *ExplicitRestrictionsController.shared.unsafeMutableAddressor();
      swift_beginAccess(v68 + 32, v79, 0, 0);
      v69 = *(_QWORD *)(v68 + 32);
      v70 = *(void **)(v68 + 40);
      swift_bridgeObjectRetain();
      v71._countAndFlagsBits = v69;
      v71._object = v70;
      String.append(_:)(v71);
      swift_bridgeObjectRelease(v70);
      v72 = v77;
      v73 = v78;
      LODWORD(v77) = static HierarchicalShapeStyle.secondary.getter(v74);
      Text.playableForegroundStyle<A>(_:isPlayable:)((int *)&v77, v64, v72, v78, 0, (uint64_t)_swiftEmptyArrayStorage, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
      swift_bridgeObjectRelease(v73);
    }
  }
}

uint64_t static FavoriteBadgeConfiguration.default.getter@<X0>(_QWORD *a1@<X8>)
{
  id v2;
  double v3;
  double v4;
  id v5;
  _QWORD *v6;
  uint64_t result;

  v2 = objc_msgSend(objc_allocWithZone((Class)UIFontMetrics), "initForTextStyle:", UIFontTextStyleLargeTitle);
  objc_msgSend(v2, "scaledValueForValue:", 10.0);
  v4 = v3;

  v5 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:weight:", 7, v4);
  a1[4] = type metadata accessor for TintShapeStyle(0);
  a1[5] = &protocol witness table for TintShapeStyle;
  v6 = sub_100049F68(a1 + 1);
  result = TintShapeStyle.init()(v6);
  *a1 = v5;
  return result;
}

uint64_t sub_100C44698()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100C446C4 + 4 * byte_100EEF920[*v0]))(0x7974706D65, 0xE500000000000000);
}

uint64_t sub_100C446C4()
{
  return 0x746963696C707865;
}

uint64_t sub_100C446DC()
{
  return 0x657469726F766166;
}

uint64_t sub_100C446F4()
{
  return 0x76697372656D6D69;
}

uint64_t sub_100C44710@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100C46740(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100C44734(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C465EC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100C4475C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C465EC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100C44784(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C466FC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100C447AC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C466FC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100C447D4()
{
  return 0x626179616C507369;
}

uint64_t sub_100C447F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v6;
  uint64_t result;
  char v8;

  if (a1 == 0x626179616C507369 && a2 == 0xEA0000000000656CLL)
  {
    result = swift_bridgeObjectRelease(0xEA0000000000656CLL);
    v8 = 0;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)(0x626179616C507369, 0xEA0000000000656CLL, a1, a2, 0);
    result = swift_bridgeObjectRelease(a2);
    v8 = v6 ^ 1;
  }
  *a3 = v8 & 1;
  return result;
}

uint64_t sub_100C44890(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C466B8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100C448B8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C466B8();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100C448E0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C46674();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100C44908(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C46674();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100C44930(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C46630();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100C44958(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C46630();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t TextBadge.encode(to:)(_QWORD *a1, unsigned __int8 a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  char v43;
  char v44;

  v3 = a2;
  v4 = sub_100007E8C(&qword_1011E2768);
  v37 = *(_QWORD *)(v4 - 8);
  v38 = v4;
  __chkstk_darwin();
  v36 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_100007E8C(&qword_1011E2770);
  v33 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin();
  v31 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_100007E8C(&qword_1011E2778);
  v32 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin();
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011E2780);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011E2788);
  v39 = *(_QWORD *)(v13 - 8);
  v40 = v13;
  __chkstk_darwin();
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v17 = a1[4];
  sub_100007E68(a1, v16);
  v18 = sub_100C465EC();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for TextBadge.CodingKeys, &type metadata for TextBadge.CodingKeys, v18, v16, v17);
  switch(v3)
  {
    case 2:
      v41 = 0;
      v22 = sub_100C466FC();
      v21 = v40;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for TextBadge.EmptyCodingKeys, &v41, v40, &type metadata for TextBadge.EmptyCodingKeys, v22);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v15, v21);
    case 3:
      v43 = 2;
      v23 = sub_100C46674();
      v24 = v31;
      v21 = v40;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for TextBadge.FavoriteCodingKeys, &v43, v40, &type metadata for TextBadge.FavoriteCodingKeys, v23);
      (*(void (**)(char *, uint64_t))(v33 + 8))(v24, v35);
      return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v15, v21);
    case 4:
      v44 = 3;
      v19 = sub_100C46630();
      v20 = v36;
      v21 = v40;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for TextBadge.ImmersiveCodingKeys, &v44, v40, &type metadata for TextBadge.ImmersiveCodingKeys, v19);
      (*(void (**)(char *, uint64_t))(v37 + 8))(v20, v38);
      return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v15, v21);
  }
  v42 = 1;
  v26 = sub_100C466B8();
  v27 = v40;
  KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for TextBadge.ExplicitCodingKeys, &v42, v40, &type metadata for TextBadge.ExplicitCodingKeys, v26);
  v28 = v34;
  KeyedEncodingContainer.encode(_:forKey:)(v3 & 1, v29, v34);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v8, v28);
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v15, v27);
}

char *TextBadge.init(from:)(_QWORD *a1)
{
  return sub_100C468FC(a1);
}

char *sub_100C44CDC@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  char *result;

  result = sub_100C468FC(a1);
  if (!v2)
    *a2 = (_BYTE)result;
  return result;
}

uint64_t sub_100C44D04(_QWORD *a1)
{
  unsigned __int8 *v1;

  return TextBadge.encode(to:)(a1, *v1);
}

uint64_t GenericMusicItem.favoriteBadge.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  char *v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t (*v29)(char *, uint64_t, uint64_t);
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  __n128 v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  __n128 v57;
  void (*v58)(char *, uint64_t, __n128);
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v63 = *(_QWORD *)(v2 - 8);
  v64 = v2;
  __chkstk_darwin(v2);
  v62 = (char *)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = type metadata accessor for Artist(0);
  v4 = *(_QWORD *)(v74 - 8);
  __chkstk_darwin(v74);
  v6 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Playlist(0);
  v69 = *(_QWORD *)(v7 - 8);
  v70 = v7;
  __chkstk_darwin(v7);
  v68 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Song(0);
  v66 = *(_QWORD *)(v9 - 8);
  v67 = v9;
  __chkstk_darwin(v9);
  v65 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MusicVideo(0);
  v72 = *(_QWORD *)(v11 - 8);
  v73 = v11;
  __chkstk_darwin(v11);
  v71 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011E27B8);
  __chkstk_darwin(v13);
  v15 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Album(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for GenericMusicItem(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v61 = (char *)&v60 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v23);
  v26 = (char *)&v60 - v25;
  v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 16);
  v60 = v1;
  v28 = v1;
  v29 = v27;
  ((void (*)(char *, uint64_t, uint64_t, __n128))v27)((char *)&v60 - v25, v28, v20, v24);
  v30 = (*(uint64_t (**)(char *, uint64_t))(v21 + 88))(v26, v20);
  if (v30 != enum case for GenericMusicItem.album(_:))
  {
    if (v30 == enum case for GenericMusicItem.artist(_:))
    {
      (*(void (**)(char *, uint64_t))(v21 + 96))(v26, v20);
      v34 = v26;
      v35 = v74;
      v36 = (*(uint64_t (**)(char *, char *, uint64_t))(v4 + 32))(v6, v34, v74);
      Artist.favoriteStatus.getter(v36);
      v37 = type metadata accessor for MusicFavoriteStatus(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v15, 0, 1, v37);
      v33 = _s11MusicCoreUI9TextBadgeO3forAC0A11KitInternal0A14FavoriteStatusOSg_tcfC_0((uint64_t)v15);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v35);
      return v33;
    }
    if (v30 == enum case for GenericMusicItem.composer(_:)
      || v30 == enum case for GenericMusicItem.creditArtist(_:)
      || v30 == enum case for GenericMusicItem.curator(_:)
      || v30 == enum case for GenericMusicItem.editorialItem(_:)
      || v30 == enum case for GenericMusicItem.genre(_:)
      || v30 == enum case for GenericMusicItem.musicMovie(_:))
    {
      goto LABEL_11;
    }
    if (v30 == enum case for GenericMusicItem.musicVideo(_:))
    {
      (*(void (**)(char *, uint64_t))(v21 + 96))(v26, v20);
      v39 = v71;
      v40 = v72;
      v41 = v73;
      v42 = (*(uint64_t (**)(char *, char *, uint64_t))(v72 + 32))(v71, v26, v73);
      MusicVideo.favoriteStatus.getter(v42);
    }
    else
    {
      if (v30 != enum case for GenericMusicItem.playlist(_:))
      {
        if (v30 != enum case for GenericMusicItem.radioShow(_:)
          && v30 != enum case for GenericMusicItem.recordLabel(_:)
          && v30 != enum case for GenericMusicItem.socialProfile(_:))
        {
          if (v30 == enum case for GenericMusicItem.song(_:))
          {
            (*(void (**)(char *, uint64_t))(v21 + 96))(v26, v20);
            v39 = v65;
            v40 = v66;
            v41 = v67;
            v45 = (*(uint64_t (**)(char *, char *, uint64_t))(v66 + 32))(v65, v26, v67);
            Song.favoriteStatus.getter(v45);
            goto LABEL_18;
          }
          if (v30 != enum case for GenericMusicItem.station(_:)
            && v30 != enum case for GenericMusicItem.tvEpisode(_:)
            && v30 != enum case for GenericMusicItem.tvSeason(_:)
            && v30 != enum case for GenericMusicItem.tvShow(_:)
            && v30 != enum case for GenericMusicItem.uploadedAudio(_:)
            && v30 != enum case for GenericMusicItem.uploadedVideo(_:))
          {
            if (v30 == enum case for GenericMusicItem.other(_:))
            {
              (*(void (**)(char *, uint64_t))(v21 + 96))(v26, v20);
              swift_bridgeObjectRelease(*((_QWORD *)v26 + 1));
            }
            else
            {
              v46 = Logger.badging.unsafeMutableAddressor();
              (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v62, v46, v64);
              v47 = v29(v61, v60, v20);
              v48 = Logger.logObject.getter(v47);
              v50 = static os_log_type_t.fault.getter(v49);
              if (os_log_type_enabled(v48, v50))
              {
                v51 = swift_slowAlloc(22, -1);
                v74 = swift_slowAlloc(64, -1);
                v75 = v74;
                *(_DWORD *)v51 = 136315394;
                *(_QWORD *)(v51 + 4) = sub_100BBDE38((char *)0xD000000000000010, (char *)0x8000000100E32610, &v75);
                *(_WORD *)(v51 + 12) = 2080;
                v52 = sub_100048748((unint64_t *)&qword_1011DEFB8, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t)&protocol conformance descriptor for GenericMusicItem);
                v53 = v61;
                v54 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v20, v52);
                v56 = v55;
                *(_QWORD *)(v51 + 14) = sub_100BBDE38(v54, v55, &v75);
                v57 = swift_bridgeObjectRelease(v56);
                v58 = *(void (**)(char *, uint64_t, __n128))(v21 + 8);
                v58(v53, v20, v57);
                _os_log_impl((void *)&_mh_execute_header, v48, v50, "Unhandled case for favorite badge with item: %s, %s", (uint8_t *)v51, 0x16u);
                v59 = v74;
                swift_arrayDestroy(v74, 2, (char *)&type metadata for Any + 8);
                swift_slowDealloc(v59, -1, -1);
                swift_slowDealloc(v51, -1, -1);
              }
              else
              {
                v58 = *(void (**)(char *, uint64_t, __n128))(v21 + 8);
                ((void (*)(char *, uint64_t))v58)(v61, v20);
              }

              (*(void (**)(char *, uint64_t))(v63 + 8))(v62, v64);
              ((void (*)(char *, uint64_t))v58)(v26, v20);
            }
            return 2;
          }
        }
LABEL_11:
        (*(void (**)(char *, uint64_t))(v21 + 8))(v26, v20);
        return 2;
      }
      (*(void (**)(char *, uint64_t))(v21 + 96))(v26, v20);
      v39 = v68;
      v40 = v69;
      v41 = v70;
      v43 = (*(uint64_t (**)(char *, char *, uint64_t))(v69 + 32))(v68, v26, v70);
      Playlist.favoriteStatus.getter(v43);
    }
LABEL_18:
    v44 = type metadata accessor for MusicFavoriteStatus(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v15, 0, 1, v44);
    v33 = _s11MusicCoreUI9TextBadgeO3forAC0A11KitInternal0A14FavoriteStatusOSg_tcfC_0((uint64_t)v15);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v39, v41);
    return v33;
  }
  (*(void (**)(char *, uint64_t))(v21 + 96))(v26, v20);
  v31 = (*(uint64_t (**)(char *, char *, uint64_t))(v17 + 32))(v19, v26, v16);
  Album.favoriteStatus.getter(v31);
  v32 = type metadata accessor for MusicFavoriteStatus(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v15, 0, 1, v32);
  v33 = _s11MusicCoreUI9TextBadgeO3forAC0A11KitInternal0A14FavoriteStatusOSg_tcfC_0((uint64_t)v15);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  return v33;
}

uint64_t GenericMusicItem.explicitBadge(_:)(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, uint64_t, uint64_t, __n128);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  NSObject *v73;
  os_log_type_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  char *v80;
  char *v81;
  __n128 v82;
  void (*v83)(char *, uint64_t, __n128);
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  int v119;
  uint64_t v120;

  v2 = v1;
  v119 = a1;
  v92 = type metadata accessor for Logger(0);
  v91 = *(_QWORD *)(v92 - 8);
  __chkstk_darwin(v92);
  v90 = (char *)&v84 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TVSeason(0);
  v100 = *(_QWORD *)(v4 - 8);
  v101 = v4;
  __chkstk_darwin(v4);
  v99 = (char *)&v84 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MusicMovie(0);
  v116 = *(_QWORD *)(v6 - 8);
  v117 = v6;
  __chkstk_darwin(v6);
  v115 = (char *)&v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = type metadata accessor for TVShow(0);
  v97 = *(_QWORD *)(v98 - 8);
  __chkstk_darwin(v98);
  v96 = (char *)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011E27C0);
  __chkstk_darwin(v9);
  v118 = (char *)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TVEpisode(0);
  v103 = *(_QWORD *)(v11 - 8);
  v104 = v11;
  __chkstk_darwin(v11);
  v102 = (char *)&v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = type metadata accessor for UploadedVideo(0);
  v88 = *(_QWORD *)(v89 - 8);
  __chkstk_darwin(v89);
  v87 = (char *)&v84 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = type metadata accessor for UploadedAudio(0);
  v94 = *(_QWORD *)(v95 - 8);
  __chkstk_darwin(v95);
  v93 = (char *)&v84 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Playlist(0);
  v112 = *(_QWORD *)(v15 - 8);
  v113 = v15;
  __chkstk_darwin(v15);
  v111 = (char *)&v84 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Station(0);
  v106 = *(_QWORD *)(v17 - 8);
  v107 = v17;
  __chkstk_darwin(v17);
  v105 = (char *)&v84 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for Song(0);
  v109 = *(_QWORD *)(v19 - 8);
  v110 = v19;
  __chkstk_darwin(v19);
  v108 = (char *)&v84 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = type metadata accessor for MusicVideo(0);
  v21 = *(_QWORD *)(v114 - 8);
  __chkstk_darwin(v114);
  v23 = (char *)&v84 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_100007E8C(&qword_1011E27C8);
  __chkstk_darwin(v24);
  v26 = (char *)&v84 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for Album(0);
  v28 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v30 = (char *)&v84 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for GenericMusicItem(0);
  v32 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v86 = (char *)&v84 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __chkstk_darwin(v34);
  v37 = (char *)&v84 - v36;
  v38 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v32 + 16);
  v85 = v2;
  v39 = v2;
  v41 = v40;
  v38((char *)&v84 - v36, v39, v40, v35);
  v42 = (*(uint64_t (**)(char *, uint64_t))(v32 + 88))(v37, v41);
  if (v42 != enum case for GenericMusicItem.album(_:))
  {
    v45 = v119;
    if (v42 == enum case for GenericMusicItem.artist(_:)
      || v42 == enum case for GenericMusicItem.composer(_:)
      || v42 == enum case for GenericMusicItem.creditArtist(_:)
      || v42 == enum case for GenericMusicItem.curator(_:)
      || v42 == enum case for GenericMusicItem.editorialItem(_:)
      || v42 == enum case for GenericMusicItem.genre(_:))
    {
      goto LABEL_9;
    }
    if (v42 == enum case for GenericMusicItem.musicMovie(_:))
    {
      (*(void (**)(char *, uint64_t))(v32 + 96))(v37, v41);
      v47 = v115;
      v48 = v116;
      v49 = v117;
      v50 = (*(uint64_t (**)(char *, char *, uint64_t))(v116 + 32))(v115, v37, v117);
      v51 = (uint64_t)v118;
      MusicMovie.contentRating.getter(v50);
LABEL_14:
      v44 = _s11MusicCoreUI9TextBadgeO3for10isPlayableAC0A11KitInternal18VideoContentRatingVSg_SbtcfC_0(v51, v45 & 1);
      (*(void (**)(char *, uint64_t))(v48 + 8))(v47, v49);
      return v44;
    }
    v52 = v119;
    if (v42 == enum case for GenericMusicItem.musicVideo(_:))
    {
      (*(void (**)(char *, uint64_t))(v32 + 96))(v37, v41);
      v53 = v114;
      v54 = (*(uint64_t (**)(char *, char *, uint64_t))(v21 + 32))(v23, v37, v114);
      MusicVideo.contentRating.getter(v54);
      v44 = _s11MusicCoreUI9TextBadgeO3for10isPlayableAC0A3Kit13ContentRatingOSg_SbtcfC_0((uint64_t)v26, v52 & 1);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v53);
      return v44;
    }
    v55 = (uint64_t)v26;
    if (v42 == enum case for GenericMusicItem.playlist(_:))
    {
      (*(void (**)(char *, uint64_t))(v32 + 96))(v37, v41);
      v56 = v111;
      v57 = v112;
      v58 = v113;
      v59 = (*(uint64_t (**)(char *, char *, uint64_t))(v112 + 32))(v111, v37, v113);
      Playlist.contentRating.getter(v59);
    }
    else
    {
      if (v42 == enum case for GenericMusicItem.radioShow(_:)
        || v42 == enum case for GenericMusicItem.recordLabel(_:)
        || v42 == enum case for GenericMusicItem.socialProfile(_:))
      {
LABEL_9:
        (*(void (**)(char *, uint64_t))(v32 + 8))(v37, v41);
        return 2;
      }
      if (v42 != enum case for GenericMusicItem.song(_:))
      {
        v61 = v41;
        if (v42 == enum case for GenericMusicItem.station(_:))
        {
          (*(void (**)(char *, uint64_t))(v32 + 96))(v37, v41);
          v62 = v105;
          v63 = v106;
          v64 = v107;
          v65 = (*(uint64_t (**)(char *, char *, uint64_t))(v106 + 32))(v105, v37, v107);
          Station.contentRating.getter(v65);
        }
        else
        {
          if (v42 == enum case for GenericMusicItem.tvEpisode(_:))
          {
            (*(void (**)(char *, uint64_t))(v32 + 96))(v37, v41);
            v47 = v102;
            v48 = v103;
            v49 = v104;
            v66 = (*(uint64_t (**)(char *, char *, uint64_t))(v103 + 32))(v102, v37, v104);
            v51 = (uint64_t)v118;
            TVEpisode.contentRating.getter(v66);
            goto LABEL_14;
          }
          if (v42 == enum case for GenericMusicItem.tvSeason(_:))
          {
            (*(void (**)(char *, uint64_t))(v32 + 96))(v37, v41);
            v48 = v100;
            v49 = v101;
            v47 = v99;
            v67 = (*(uint64_t (**)(char *, char *, uint64_t))(v100 + 32))(v99, v37, v101);
            v51 = (uint64_t)v118;
            TVSeason.contentRating.getter(v67);
            goto LABEL_14;
          }
          if (v42 == enum case for GenericMusicItem.tvShow(_:))
          {
            (*(void (**)(char *, uint64_t))(v32 + 96))(v37, v41);
            v48 = v97;
            v47 = v96;
            v49 = v98;
            v68 = (*(uint64_t (**)(char *, char *, uint64_t))(v97 + 32))(v96, v37, v98);
            v51 = (uint64_t)v118;
            TVShow.contentRating.getter(v68);
            goto LABEL_14;
          }
          if (v42 == enum case for GenericMusicItem.uploadedAudio(_:))
          {
            (*(void (**)(char *, uint64_t))(v32 + 96))(v37, v41);
            v63 = v94;
            v62 = v93;
            v64 = v95;
            v69 = (*(uint64_t (**)(char *, char *, uint64_t))(v94 + 32))(v93, v37, v95);
            UploadedAudio.contentRating.getter(v69);
          }
          else
          {
            if (v42 != enum case for GenericMusicItem.uploadedVideo(_:))
            {
              if (v42 == enum case for GenericMusicItem.other(_:))
              {
                (*(void (**)(char *, uint64_t))(v32 + 96))(v37, v41);
                swift_bridgeObjectRelease(*((_QWORD *)v37 + 1));
              }
              else
              {
                v71 = Logger.badging.unsafeMutableAddressor();
                (*(void (**)(char *, uint64_t, uint64_t))(v91 + 16))(v90, v71, v92);
                v72 = ((uint64_t (*)(char *, uint64_t, uint64_t))v38)(v86, v85, v41);
                v73 = Logger.logObject.getter(v72);
                v74 = static os_log_type_t.info.getter();
                if (os_log_type_enabled(v73, v74))
                {
                  v75 = swift_slowAlloc(22, -1);
                  v76 = swift_slowAlloc(64, -1);
                  v120 = v76;
                  *(_DWORD *)v75 = 136315394;
                  *(_QWORD *)(v75 + 4) = sub_100BBDE38((char *)0xD000000000000010, (char *)0x8000000100E32610, &v120);
                  *(_WORD *)(v75 + 12) = 2080;
                  v77 = sub_100048748((unint64_t *)&qword_1011DEFB8, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t)&protocol conformance descriptor for GenericMusicItem);
                  v78 = v86;
                  v79 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v61, v77);
                  v81 = v80;
                  *(_QWORD *)(v75 + 14) = sub_100BBDE38(v79, v80, &v120);
                  v82 = swift_bridgeObjectRelease(v81);
                  v83 = *(void (**)(char *, uint64_t, __n128))(v32 + 8);
                  v83(v78, v61, v82);
                  _os_log_impl((void *)&_mh_execute_header, v73, v74, "Unhandled case for explicit badge with item: %s, %s", (uint8_t *)v75, 0x16u);
                  swift_arrayDestroy(v76, 2, (char *)&type metadata for Any + 8);
                  swift_slowDealloc(v76, -1, -1);
                  swift_slowDealloc(v75, -1, -1);
                }
                else
                {
                  v83 = *(void (**)(char *, uint64_t, __n128))(v32 + 8);
                  ((void (*)(char *, uint64_t))v83)(v86, v41);
                }

                (*(void (**)(char *, uint64_t))(v91 + 8))(v90, v92);
                ((void (*)(char *, uint64_t))v83)(v37, v61);
              }
              return 2;
            }
            (*(void (**)(char *, uint64_t))(v32 + 96))(v37, v41);
            v63 = v88;
            v62 = v87;
            v64 = v89;
            v70 = (*(uint64_t (**)(char *, char *, uint64_t))(v88 + 32))(v87, v37, v89);
            UploadedVideo.contentRating.getter(v70);
          }
        }
        v44 = _s11MusicCoreUI9TextBadgeO3for10isPlayableAC0A3Kit13ContentRatingOSg_SbtcfC_0((uint64_t)v26, v45 & 1);
        (*(void (**)(char *, uint64_t))(v63 + 8))(v62, v64);
        return v44;
      }
      (*(void (**)(char *, uint64_t))(v32 + 96))(v37, v41);
      v56 = v108;
      v57 = v109;
      v58 = v110;
      v60 = (*(uint64_t (**)(char *, char *, uint64_t))(v109 + 32))(v108, v37, v110);
      Song.contentRating.getter(v60);
    }
    v44 = _s11MusicCoreUI9TextBadgeO3for10isPlayableAC0A3Kit13ContentRatingOSg_SbtcfC_0(v55, v52 & 1);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v56, v58);
    return v44;
  }
  (*(void (**)(char *, uint64_t))(v32 + 96))(v37, v41);
  v43 = (*(uint64_t (**)(char *, char *, uint64_t))(v28 + 32))(v30, v37, v27);
  Album.contentRating.getter(v43);
  v44 = _s11MusicCoreUI9TextBadgeO3for10isPlayableAC0A3Kit13ContentRatingOSg_SbtcfC_0((uint64_t)v26, v119 & 1);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
  return v44;
}

uint64_t FavoriteBadgeConfiguration.foregroundStyle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100064C78(v1 + 8, a1);
}

uint64_t FavoriteBadgeConfiguration.init(symbolConfiguration:foregroundStyle:)@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = a1;
  return sub_100064C48(a2, (uint64_t)(a3 + 1));
}

uint64_t _s11MusicCoreUI9TextBadgeO3for10isPlayableAC0A3Kit13ContentRatingOSg_SbtcfC_0(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unsigned int (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v24;

  v4 = type metadata accessor for ContentRating(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011E2858);
  __chkstk_darwin(v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011E27C8);
  __chkstk_darwin(v11);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v24 - v16;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v5 + 104))((char *)&v24 - v16, enum case for ContentRating.explicit(_:), v4, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v17, 0, 1, v4);
  v18 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_10004A160(a1, (uint64_t)v10, &qword_1011E27C8);
  sub_10004A160((uint64_t)v17, v18, &qword_1011E27C8);
  v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v19((uint64_t)v10, 1, v4) == 1)
  {
    sub_10004FF60(a1, &qword_1011E27C8);
    sub_10004FF60((uint64_t)v17, &qword_1011E27C8);
    if (v19(v18, 1, v4) == 1)
    {
      sub_10004FF60((uint64_t)v10, &qword_1011E27C8);
      return a2 & 1;
    }
    goto LABEL_6;
  }
  sub_10004A160((uint64_t)v10, (uint64_t)v13, &qword_1011E27C8);
  if (v19(v18, 1, v4) == 1)
  {
    sub_10004FF60(a1, &qword_1011E27C8);
    sub_10004FF60((uint64_t)v17, &qword_1011E27C8);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
LABEL_6:
    sub_10004FF60((uint64_t)v10, &qword_1011E2858);
    return 2;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v18, v4);
  v20 = sub_100048748(&qword_1011E2860, (uint64_t (*)(uint64_t))&type metadata accessor for ContentRating, (uint64_t)&protocol conformance descriptor for ContentRating);
  v21 = dispatch thunk of static Equatable.== infix(_:_:)(v13, v7, v4, v20);
  sub_10004FF60(a1, &qword_1011E27C8);
  v22 = *(void (**)(char *, uint64_t))(v5 + 8);
  v22(v7, v4);
  sub_10004FF60((uint64_t)v17, &qword_1011E27C8);
  v22(v13, v4);
  sub_10004FF60((uint64_t)v10, &qword_1011E27C8);
  if ((v21 & 1) != 0)
    return a2 & 1;
  return 2;
}

uint64_t _s11MusicCoreUI9TextBadgeO3for10isPlayableAC0A11KitInternal18VideoContentRatingVSg_SbtcfC_0(uint64_t a1, char a2)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  char v14;
  uint64_t v15;

  v4 = sub_100007E8C(&qword_1011E27C0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for VideoContentRating(0, v5);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(a1, (uint64_t)v7, &qword_1011E27C0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_10004FF60(a1, &qword_1011E27C0);
    sub_10004FF60((uint64_t)v7, &qword_1011E27C0);
    return 2;
  }
  else
  {
    v13 = (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    v14 = VideoContentRating.isExplicit.getter(v13);
    sub_10004FF60(a1, &qword_1011E27C0);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    result = 2;
    if (v14 != 2)
    {
      if ((v14 & 1) != 0)
        return a2 & 1;
      else
        return 2;
    }
  }
  return result;
}

uint64_t _s11MusicCoreUI9TextBadgeO3forAC0A11KitInternal0A14FavoriteStatusOSg_tcfC_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v13;

  v2 = sub_100007E8C(&qword_1011E27B8);
  __chkstk_darwin(v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v13 - v6;
  sub_10004A160(a1, (uint64_t)&v13 - v6, &qword_1011E27B8);
  v8 = type metadata accessor for MusicFavoriteStatus(0);
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1
    || (sub_10004A160((uint64_t)v7, (uint64_t)v4, &qword_1011E27B8),
        v10 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v4, v8),
        v10 == enum case for MusicFavoriteStatus.neutral(_:)))
  {
LABEL_7:
    v11 = 2;
    goto LABEL_8;
  }
  if (v10 != enum case for MusicFavoriteStatus.favorited(_:))
  {
    if (v10 != enum case for MusicFavoriteStatus.disliked(_:))
      (*(void (**)(char *, uint64_t))(v9 + 8))(v4, v8);
    goto LABEL_7;
  }
  v11 = 3;
LABEL_8:
  sub_10004FF60(a1, &qword_1011E27B8);
  sub_10004FF60((uint64_t)v7, &qword_1011E27B8);
  return v11;
}

id *sub_100C465B8(id *a1)
{
  _QWORD *v2;

  v2 = a1 + 1;

  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v2);
  return a1;
}

unint64_t sub_100C465EC()
{
  unint64_t result;

  result = qword_1011E2790;
  if (!qword_1011E2790)
  {
    result = swift_getWitnessTable(&unk_100EEFDF4, &type metadata for TextBadge.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E2790);
  }
  return result;
}

unint64_t sub_100C46630()
{
  unint64_t result;

  result = qword_1011E2798;
  if (!qword_1011E2798)
  {
    result = swift_getWitnessTable(&unk_100EEFDA4, &type metadata for TextBadge.ImmersiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E2798);
  }
  return result;
}

unint64_t sub_100C46674()
{
  unint64_t result;

  result = qword_1011E27A0;
  if (!qword_1011E27A0)
  {
    result = swift_getWitnessTable(&unk_100EEFD54, &type metadata for TextBadge.FavoriteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E27A0);
  }
  return result;
}

unint64_t sub_100C466B8()
{
  unint64_t result;

  result = qword_1011E27A8;
  if (!qword_1011E27A8)
  {
    result = swift_getWitnessTable(&unk_100EEFD04, &type metadata for TextBadge.ExplicitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E27A8);
  }
  return result;
}

unint64_t sub_100C466FC()
{
  unint64_t result;

  result = qword_1011E27B0;
  if (!qword_1011E27B0)
  {
    result = swift_getWitnessTable(&unk_100EEFCB4, &type metadata for TextBadge.EmptyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E27B0);
  }
  return result;
}

uint64_t sub_100C46740(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  char v9;

  if (a1 == 0x7974706D65 && a2 == 0xE500000000000000)
  {
    v5 = 0xE500000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7974706D65, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x746963696C707865 && a2 == 0xE800000000000000)
  {
    v7 = 0xE800000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x746963696C707865, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x657469726F766166 && a2 == 0xE800000000000000)
  {
    v8 = 0xE800000000000000;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x657469726F766166, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0x76697372656D6D69 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease(0xE900000000000065);
    return 3;
  }
  else
  {
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(0x76697372656D6D69, 0xE900000000000065, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v9 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

char *sub_100C468FC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  __n128 v29;
  __n128 v30;
  _QWORD v32[10];
  _QWORD *v33;
  uint64_t v34;

  v2 = sub_100007E8C(&qword_1011E2830);
  v3 = *(_QWORD *)(v2 - 8);
  v32[5] = v2;
  v32[6] = v3;
  __chkstk_darwin();
  v32[9] = (char *)v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011E2838);
  v6 = *(_QWORD *)(v5 - 8);
  v32[3] = v5;
  v32[4] = v6;
  __chkstk_darwin();
  v32[8] = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011E2840);
  v9 = *(_QWORD *)(v8 - 8);
  v32[1] = v8;
  v32[2] = v9;
  __chkstk_darwin();
  v32[7] = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011E2848);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin();
  v13 = sub_100007E8C(&qword_1011E2850);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin();
  v16 = (char *)v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a1[3];
  v17 = a1[4];
  v33 = a1;
  sub_100007E68(a1, v18);
  v19 = sub_100C465EC();
  v20 = v34;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for TextBadge.CodingKeys, &type metadata for TextBadge.CodingKeys, v19, v18, v17);
  if (!v20)
  {
    v32[0] = v12;
    v34 = v11;
    v21 = v14;
    v22 = KeyedDecodingContainer.allKeys.getter(v13);
    v23 = v13;
    v24 = v16;
    if (*(_QWORD *)(v22 + 16) == 1)
      __asm { BR              X10 }
    v16 = (char *)type metadata accessor for DecodingError(0);
    swift_allocError(v16, &protocol witness table for DecodingError, 0, 0);
    v25 = v23;
    v27 = v26;
    sub_100007E8C(&qword_1011E20D8);
    *v27 = &type metadata for TextBadge;
    v28 = KeyedDecodingContainer.codingPath.getter(v25);
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)(v28, 0xD00000000000002BLL, 0x8000000100E56320, 0);
    v29.n128_f64[0] = (*(double (**)(_QWORD *, _QWORD, char *))(*((_QWORD *)v16 - 1) + 104))(v27, enum case for DecodingError.typeMismatch(_:), v16);
    swift_willThrow(v29);
    v30 = swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, __n128))(v21 + 8))(v24, v25, v30);
  }
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v33);
  return v16;
}

uint64_t getEnumTagSinglePayload for TextBadge(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t result;
  unsigned int v6;
  unsigned int v7;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
  {
    v6 = *a1;
    if (v6 >= 2)
    {
      v7 = (v6 + 2147483646) & 0x7FFFFFFF;
      result = v7 - 2;
      if (v7 > 2)
        return result;
    }
    return 0;
  }
  v2 = a2 + 4;
  if (a2 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if (v2 >> 8 < 0xFF)
    v3 = 1;
  if (v2 >= 0x100)
    v4 = v3;
  else
    v4 = 0;
  return ((uint64_t (*)(void))((char *)&loc_100C46E38 + 4 * byte_100EEF928[v4]))();
}

uint64_t storeEnumTagSinglePayload for TextBadge(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 4;
  if (a3 + 4 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFC)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_100C46EE4 + 4 * byte_100EEF932[v5]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_100C46F18 + 4 * byte_100EEF92D[v5]))();
}

uint64_t sub_100C46F18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100C46F20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100C46F28);
  return result;
}

uint64_t sub_100C46F34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100C46F3CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_100C46F40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100C46F48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TextBadge()
{
  return &type metadata for TextBadge;
}

uint64_t destroy for FavoriteBadgeConfiguration(id *a1)
{
  _QWORD *v1;

  v1 = a1 + 1;

  return _s5Music18DragDropToPlaylistV6OriginVwxx_0(v1);
}

uint64_t initializeWithCopy for FavoriteBadgeConfiguration(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  id v9;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = a1 + 8;
  v5 = a2 + 8;
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  v9 = v3;
  v8(v4, v5, v7);
  return a1;
}

void **assignWithCopy for FavoriteBadgeConfiguration(void **a1, void **a2)
{
  void *v3;
  _QWORD *v4;
  void *v5;
  _QWORD *v6;
  id v7;

  v4 = a2 + 1;
  v3 = *a2;
  v5 = *a1;
  *a1 = *a2;
  v6 = a1 + 1;
  v7 = v3;

  sub_100625DD8(v6, v4);
  return a1;
}

uint64_t assignWithTake for FavoriteBadgeConfiguration(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(a1 + 8));
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for FavoriteBadgeConfiguration()
{
  return &type metadata for FavoriteBadgeConfiguration;
}

uint64_t storeEnumTagSinglePayload for TextBadge.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_100C470F4 + 4 * byte_100EEF93C[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_100C47128 + 4 * byte_100EEF937[v4]))();
}

uint64_t sub_100C47128(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100C47130(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100C47138);
  return result;
}

uint64_t sub_100C47144(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100C4714CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_100C47150(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100C47158(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TextBadge.CodingKeys()
{
  return &type metadata for TextBadge.CodingKeys;
}

ValueMetadata *type metadata accessor for TextBadge.EmptyCodingKeys()
{
  return &type metadata for TextBadge.EmptyCodingKeys;
}

uint64_t storeEnumTagSinglePayload for TextBadge.ExplicitCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_100C471C4 + 4 * byte_100EEF941[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_100C471E4 + 4 * byte_100EEF946[v4]))();
}

_BYTE *sub_100C471C4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_100C471E4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100C471EC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100C471F4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100C471FC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100C47204(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for TextBadge.ExplicitCodingKeys()
{
  return &type metadata for TextBadge.ExplicitCodingKeys;
}

ValueMetadata *type metadata accessor for TextBadge.FavoriteCodingKeys()
{
  return &type metadata for TextBadge.FavoriteCodingKeys;
}

ValueMetadata *type metadata accessor for TextBadge.ImmersiveCodingKeys()
{
  return &type metadata for TextBadge.ImmersiveCodingKeys;
}

unint64_t sub_100C47244()
{
  unint64_t result;

  result = qword_1011E27D0;
  if (!qword_1011E27D0)
  {
    result = swift_getWitnessTable(&unk_100EEFB84, &type metadata for TextBadge.ExplicitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E27D0);
  }
  return result;
}

unint64_t sub_100C4728C()
{
  unint64_t result;

  result = qword_1011E27D8;
  if (!qword_1011E27D8)
  {
    result = swift_getWitnessTable(&unk_100EEFC8C, &type metadata for TextBadge.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E27D8);
  }
  return result;
}

unint64_t sub_100C472D4()
{
  unint64_t result;

  result = qword_1011E27E0;
  if (!qword_1011E27E0)
  {
    result = swift_getWitnessTable(&unk_100EEFBAC, &type metadata for TextBadge.EmptyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E27E0);
  }
  return result;
}

unint64_t sub_100C4731C()
{
  unint64_t result;

  result = qword_1011E27E8;
  if (!qword_1011E27E8)
  {
    result = swift_getWitnessTable(&unk_100EEFBD4, &type metadata for TextBadge.EmptyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E27E8);
  }
  return result;
}

unint64_t sub_100C47364()
{
  unint64_t result;

  result = qword_1011E27F0;
  if (!qword_1011E27F0)
  {
    result = swift_getWitnessTable(&unk_100EEFAF4, &type metadata for TextBadge.ExplicitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E27F0);
  }
  return result;
}

unint64_t sub_100C473AC()
{
  unint64_t result;

  result = qword_1011E27F8;
  if (!qword_1011E27F8)
  {
    result = swift_getWitnessTable(&unk_100EEFB1C, &type metadata for TextBadge.ExplicitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E27F8);
  }
  return result;
}

unint64_t sub_100C473F4()
{
  unint64_t result;

  result = qword_1011E2800;
  if (!qword_1011E2800)
  {
    result = swift_getWitnessTable(&unk_100EEFAA4, &type metadata for TextBadge.FavoriteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E2800);
  }
  return result;
}

unint64_t sub_100C4743C()
{
  unint64_t result;

  result = qword_1011E2808;
  if (!qword_1011E2808)
  {
    result = swift_getWitnessTable(&unk_100EEFACC, &type metadata for TextBadge.FavoriteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E2808);
  }
  return result;
}

unint64_t sub_100C47484()
{
  unint64_t result;

  result = qword_1011E2810;
  if (!qword_1011E2810)
  {
    result = swift_getWitnessTable(&unk_100EEFA54, &type metadata for TextBadge.ImmersiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E2810);
  }
  return result;
}

unint64_t sub_100C474CC()
{
  unint64_t result;

  result = qword_1011E2818;
  if (!qword_1011E2818)
  {
    result = swift_getWitnessTable(&unk_100EEFA7C, &type metadata for TextBadge.ImmersiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E2818);
  }
  return result;
}

unint64_t sub_100C47514()
{
  unint64_t result;

  result = qword_1011E2820;
  if (!qword_1011E2820)
  {
    result = swift_getWitnessTable(&unk_100EEFBFC, &type metadata for TextBadge.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E2820);
  }
  return result;
}

unint64_t sub_100C4755C()
{
  unint64_t result;

  result = qword_1011E2828;
  if (!qword_1011E2828)
  {
    result = swift_getWitnessTable(&unk_100EEFC24, &type metadata for TextBadge.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011E2828);
  }
  return result;
}

void sub_100C475A0()
{
  qword_1011E2868 = 0x403E000000000000;
}

void sub_100C475B0()
{
  qword_1011E2870 = 0x4018000000000000;
}

void sub_100C475C0()
{
  qword_1011E2878 = 0x402A000000000000;
}

void sub_100C475D0()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  v1 = objc_msgSend(v0, "userInterfaceIdiom");

  byte_1011E2880 = v1 == (id)6;
}

uint64_t sub_100C47630()
{
  double v0;
  double v1;
  uint64_t result;

  if (qword_1011DE118 != -1)
    result = swift_once(&qword_1011DE118, sub_100C475D0);
  v0 = 20.0;
  if (byte_1011E2880)
    v1 = 20.0;
  else
    v1 = 0.0;
  *(_QWORD *)&xmmword_1011E2888 = 0x4034000000000000;
  *((double *)&xmmword_1011E2888 + 1) = v1;
  if (byte_1011E2880)
    v0 = 0.0;
  qword_1011E2898 = 0;
  qword_1011E28A0 = *(_QWORD *)&v0;
  return result;
}

void sub_100C476A0(__n128 a1)
{
  uint64_t v1;

  if (qword_1011DE118 != -1)
    swift_once(&qword_1011DE118, sub_100C475D0);
  if (byte_1011E2880 == 1)
  {
    v1 = static Font.headline.getter(a1);
  }
  else
  {
    static Font.caption.getter(a1);
    v1 = Font.bold()();
    swift_release();
  }
  qword_1011E28A8 = v1;
}

void sub_100C4771C()
{
  qword_1011E28B0 = 0x4018000000000000;
}

uint64_t sub_100C4772C()
{
  double v0;
  uint64_t result;

  if (qword_1011DE118 != -1)
    result = swift_once(&qword_1011DE118, sub_100C475D0);
  v0 = 44.0;
  if (!byte_1011E2880)
    v0 = 24.0;
  qword_1011E28B8 = *(_QWORD *)&v0;
  unk_1011E28C0 = *(_QWORD *)&v0;
  return result;
}

uint64_t sub_100C4778C(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  if (qword_1011DE118 != -1)
    a1 = swift_once(&qword_1011DE118, sub_100C475D0);
  if (byte_1011E2880 == 1)
    result = static Alignment.topLeading.getter(a1);
  else
    result = static Alignment.topTrailing.getter(a1);
  qword_1011E28C8 = result;
  unk_1011E28D0 = v2;
  return result;
}

uint64_t Card.DisplayStyle.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  char v33;
  double v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int v44;
  unsigned int v45;
  uint64_t v46;
  int v47;
  int v48;
  unsigned __int8 v49;
  char *v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int v54;
  uint64_t v55;
  int v56;
  uint64_t OpaqueTypeConformance2;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  __n128 v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  double v73;
  char v74;
  double v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD v85[2];
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char v106[16];
  uint64_t v107;
  _QWORD v108[4];

  v104 = a2;
  v3 = type metadata accessor for ScrollBounceBehavior(0);
  v102 = *(_QWORD *)(v3 - 8);
  v103 = v3;
  __chkstk_darwin();
  v101 = (char *)v85 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = type metadata accessor for ScrollIndicatorVisibility(0);
  v94 = *(_QWORD *)(v96 - 8);
  __chkstk_darwin();
  v90 = (char *)v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin();
  v7 = (double *)((char *)v85 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_100007E8C(&qword_1011E28D8);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin();
  v11 = (char *)v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011E28E0);
  __chkstk_darwin();
  v14 = (char *)v85 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = sub_100007E8C(&qword_1011E28E8);
  __chkstk_darwin();
  v16 = (char *)v85 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = sub_100007E8C(&qword_1011E28F0);
  v89 = *(_QWORD *)(v93 - 8);
  __chkstk_darwin();
  v88 = (char *)v85 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = sub_100007E8C(&qword_1011E28F8);
  v95 = *(_QWORD *)(v97 - 8);
  __chkstk_darwin();
  v92 = (char *)v85 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = sub_100007E8C(&qword_1011E2900);
  __chkstk_darwin();
  v98 = (char *)v85 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = sub_100007E8C(&qword_1011E2908);
  __chkstk_darwin();
  v21 = (char *)v85 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = sub_100007E8C(&qword_1011E2910);
  __chkstk_darwin();
  v100 = (uint64_t)v85 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = a1;
  v24 = static Axis.Set.vertical.getter(v23);
  v25 = sub_100007E8C(&qword_1011E2918);
  v26 = sub_100C480D8();
  v27 = ScrollView.init(_:showsIndicators:content:)(v24, 1, sub_100C480D0, v106, v25, v26);
  LOBYTE(v24) = static Edge.Set.all.getter(v27);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v14, v11, v8);
  v14[*(int *)(v12 + 36)] = v24;
  v28 = *(void (**)(char *, uint64_t))(v9 + 8);
  v29 = v85[1];
  v28(v11, v8);
  v30 = *(_QWORD *)v29;
  v31 = *(unsigned __int8 *)(v29 + 8);
  LODWORD(v12) = *(unsigned __int8 *)(v29 + 9);
  sub_10006B3EC(*(_QWORD *)v29, v31, *(_BYTE *)(v29 + 9));
  v32 = COERCE_DOUBLE(sub_100C31428(v30, v31 | ((_DWORD)v12 << 8)));
  LOBYTE(v11) = v33;
  sub_10006B5F8(v30, v31, v12);
  if ((v11 & 1) != 0 || v32 <= 0.0)
  {
    if (qword_1011DE110 != -1)
      swift_once(&qword_1011DE110, sub_100C475C0);
    v34 = *(double *)&qword_1011E2878;
  }
  else
  {
    if (qword_1011DE108 != -1)
      swift_once(&qword_1011DE108, sub_100C475B0);
    v34 = v32 - *(double *)&qword_1011E2870;
  }
  v35 = v88;
  v36 = (char *)v7 + *(int *)(v86 + 20);
  v37 = enum case for RoundedCornerStyle.continuous(_:);
  v38 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 104))(v36, v37, v38);
  *v7 = v34;
  v7[1] = v34;
  v39 = (uint64_t)&v16[*(int *)(v105 + 36)];
  sub_10005B704((uint64_t)v7, v39, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v39 + *(int *)(sub_100007E8C((uint64_t *)&unk_1011E4AA0) + 36)) = 256;
  sub_10004A160((uint64_t)v14, (uint64_t)v16, &qword_1011E28E0);
  sub_10005B748((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v40 = sub_10004FF60((uint64_t)v14, &qword_1011E28E0);
  v41 = v90;
  v42 = static ScrollIndicatorVisibility.never.getter(v40);
  v43 = static Axis.Set.vertical.getter(v42);
  v44 = v43;
  v45 = static Axis.Set.horizontal.getter(v43);
  v46 = Axis.Set.init(rawValue:)(0);
  v47 = Axis.Set.init(rawValue:)(v46);
  if (Axis.Set.init(rawValue:)(v47 & v44) != v44)
    v46 = Axis.Set.init(rawValue:)(v46 | v44);
  v48 = Axis.Set.init(rawValue:)(v46);
  v49 = Axis.Set.init(rawValue:)(v48 & v45);
  v50 = v101;
  if (v49 != v45)
    v46 = Axis.Set.init(rawValue:)(v46 | v45);
  v51 = sub_100C4815C();
  View.scrollIndicators(_:axes:)(v41, v46, v105, v51);
  (*(void (**)(char *, uint64_t))(v94 + 8))(v41, v96);
  v52 = sub_10004FF60((uint64_t)v16, &qword_1011E28E8);
  v53 = static ScrollBounceBehavior.basedOnSize.getter(v52);
  v54 = static Axis.Set.vertical.getter(v53);
  v55 = Axis.Set.init(rawValue:)(0);
  v56 = Axis.Set.init(rawValue:)(v55);
  if (Axis.Set.init(rawValue:)(v56 & v54) != v54)
    v55 = Axis.Set.init(rawValue:)(v55 | v54);
  v108[0] = v105;
  v108[1] = v51;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v108, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 1);
  v58 = v92;
  v59 = v55;
  v60 = v93;
  View.scrollBounceBehavior(_:axes:)(v50, v59, v93, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v102 + 8))(v50, v103);
  v61.n128_f64[0] = (*(double (**)(char *, uint64_t))(v89 + 8))(v35, v60);
  v62 = static SafeAreaRegions.all.getter(v61);
  v63 = static Edge.Set.all.getter(v62);
  v64 = v95;
  v65 = v97;
  v66 = (uint64_t)v98;
  (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v98, v58, v97);
  v67 = v66 + *(int *)(v87 + 36);
  *(_QWORD *)v67 = v62;
  *(_BYTE *)(v67 + 8) = v63;
  (*(void (**)(char *, uint64_t))(v64 + 8))(v58, v65);
  if (qword_1011DE140 != -1)
    swift_once(&qword_1011DE140, sub_100C4778C);
  v68 = qword_1011E28C8;
  v69 = unk_1011E28D0;
  v70 = (uint64_t)&v21[*(int *)(v91 + 36)];
  sub_100C4827C(v29, v70);
  v71 = (uint64_t *)(v70 + *(int *)(sub_100007E8C(&qword_1011E2960) + 36));
  *v71 = v68;
  v71[1] = v69;
  v72 = sub_100065228(v66, (uint64_t)v21, &qword_1011E2900);
  if (qword_1011DE108 != -1)
    v72 = swift_once(&qword_1011DE108, sub_100C475B0);
  v73 = *(double *)&qword_1011E2870;
  v74 = static Edge.Set.all.getter(v72);
  v75 = EdgeInsets.init(_all:)(v73);
  v77 = v76;
  v79 = v78;
  v81 = v80;
  v82 = v100;
  sub_10004A160((uint64_t)v21, v100, &qword_1011E2908);
  v83 = v82 + *(int *)(v99 + 36);
  *(_BYTE *)v83 = v74;
  *(double *)(v83 + 8) = v75;
  *(_QWORD *)(v83 + 16) = v77;
  *(_QWORD *)(v83 + 24) = v79;
  *(_QWORD *)(v83 + 32) = v81;
  *(_BYTE *)(v83 + 40) = 0;
  sub_10004FF60((uint64_t)v21, &qword_1011E2908);
  return sub_100065228(v82, v104, &qword_1011E2910);
}

uint64_t sub_100C48000@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double v4;
  char v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v2 = a1;
  if (qword_1011DE100 != -1)
    a1 = swift_once(&qword_1011DE100, sub_100C475A0);
  v4 = *(double *)&qword_1011E2868;
  v5 = static Edge.Set.all.getter(a1);
  v6 = EdgeInsets.init(_all:)(v4);
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v13 = sub_100007E8C(&qword_1011E2930);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a2, v2, v13);
  result = sub_100007E8C(&qword_1011E2918);
  v15 = a2 + *(int *)(result + 36);
  *(_BYTE *)v15 = v5;
  *(double *)(v15 + 8) = v6;
  *(_QWORD *)(v15 + 16) = v8;
  *(_QWORD *)(v15 + 24) = v10;
  *(_QWORD *)(v15 + 32) = v12;
  *(_BYTE *)(v15 + 40) = 0;
  return result;
}

uint64_t sub_100C480D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100C48000(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_100C480D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E2920;
  if (!qword_1011E2920)
  {
    v1 = sub_100044B54(&qword_1011E2918);
    sub_100049F28(&qword_1011E2928, &qword_1011E2930, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E2920);
  }
  return result;
}

unint64_t sub_100C4815C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E2938;
  if (!qword_1011E2938)
  {
    v1 = sub_100044B54(&qword_1011E28E8);
    sub_100C481E0();
    sub_100049F28((unint64_t *)&unk_1011E4AF0, (uint64_t *)&unk_1011E4AA0, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E2938);
  }
  return result;
}

unint64_t sub_100C481E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E2940;
  if (!qword_1011E2940)
  {
    v1 = sub_100044B54(&qword_1011E28E0);
    sub_100049F28(&qword_1011E2948, &qword_1011E28D8, (uint64_t)&protocol conformance descriptor for ScrollView<A>);
    sub_100049F28(&qword_1011E2950, &qword_1011E2958, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E2940);
  }
  return result;
}

uint64_t sub_100C4827C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  double v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;

  v47 = a1;
  v55 = a2;
  v2 = type metadata accessor for PlainButtonStyle(0);
  v53 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)&v54 = v2;
  v3 = __chkstk_darwin();
  v52 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ContentShapeKinds(0, v3);
  v48 = *(_QWORD *)(v5 - 8);
  v49 = v5;
  __chkstk_darwin();
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(type metadata accessor for Card.DisplayStyle(0) - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin();
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011E2AB8);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin();
  v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(&qword_1011E2AC0);
  __chkstk_darwin();
  v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100007E8C(&qword_1011E2AC8);
  v50 = *(_QWORD *)(v18 - 8);
  v51 = v18;
  __chkstk_darwin();
  v20 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704(v47, (uint64_t)v10, type metadata accessor for Card.DisplayStyle);
  v21 = *(unsigned __int8 *)(v8 + 80);
  v22 = (v21 + 16) & ~v21;
  v23 = swift_allocObject(&unk_10110AE98, v22 + v9, v21 | 7);
  sub_100C49C74((uint64_t)v10, v23 + v22);
  v24 = sub_100007E8C(&qword_1011E2AD0);
  v25 = sub_100C4A700();
  v26 = Button.init(action:label:)(sub_100C4A6D4, v23, sub_100C48708, 0, v24, v25);
  static ContentShapeKinds.interaction.getter(v26);
  if (qword_1011DE138 != -1)
    swift_once(&qword_1011DE138, sub_100C4772C);
  v27 = (*(double *)&qword_1011E28B8 + -44.0) * 0.5;
  v28 = &v17[*(int *)(v15 + 36)];
  v29 = sub_100007E8C(&qword_1011E2B48);
  v31 = v48;
  v30 = v49;
  (*(void (**)(char *, char *, uint64_t))(v48 + 16))(&v28[*(int *)(v29 + 40)], v7, v49);
  *(double *)v28 = v27;
  v28[8] = 0;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v17, v14, v11);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v7, v30);
  v32 = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v33 = v52;
  PlainButtonStyle.init()(v32);
  v34 = sub_100C4A954();
  v35 = sub_100048748((unint64_t *)&qword_1011E2B68, (uint64_t (*)(uint64_t))&type metadata accessor for PlainButtonStyle, (uint64_t)&protocol conformance descriptor for PlainButtonStyle);
  v36 = v54;
  View.buttonStyle<A>(_:)(v33, v15, v54, v34, v35);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v33, v36);
  v37 = sub_10004FF60((uint64_t)v17, &qword_1011E2AC0);
  if (qword_1011DE120 != -1)
    v37 = swift_once(&qword_1011DE120, sub_100C47630);
  v54 = xmmword_1011E2888;
  v38 = qword_1011E2898;
  v39 = qword_1011E28A0;
  v40 = static Edge.Set.all.getter(v37);
  v42 = v50;
  v41 = v51;
  v43 = v55;
  (*(void (**)(uint64_t, char *, uint64_t))(v50 + 16))(v55, v20, v51);
  v44 = v43 + *(int *)(sub_100007E8C(&qword_1011E2B70) + 36);
  *(_BYTE *)v44 = v40;
  *(_OWORD *)(v44 + 8) = v54;
  *(_QWORD *)(v44 + 24) = v38;
  *(_QWORD *)(v44 + 32) = v39;
  *(_BYTE *)(v44 + 40) = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v20, v41);
}

uint64_t sub_100C48670()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = type metadata accessor for DismissAction(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin();
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Card.DisplayStyle(0);
  sub_100C313F4((uint64_t)v3);
  DismissAction.callAsFunction()();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_100C48708@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  char v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  _BYTE v63[24];
  uint64_t v64;
  char v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  char v75;
  __int128 v76;

  v47 = a1;
  v48 = sub_100007E8C(&qword_1011E2B40);
  __chkstk_darwin();
  v2 = (char *)&v40 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = type metadata accessor for Material(0);
  v50 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin();
  v49 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_100007E8C(&qword_1011E2AE8);
  __chkstk_darwin();
  v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_100007E8C(&qword_1011E2AD0);
  __chkstk_darwin();
  v43 = (uint64_t)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = Image.init(systemName:)(0x6B72616D78, 0xE500000000000000);
  v46 = static Color.secondary.getter(v51);
  KeyPath = swift_getKeyPath(&unk_100EEFF40);
  if (qword_1011DE128 != -1)
    swift_once(&qword_1011DE128, sub_100C476A0);
  v8 = qword_1011E28A8;
  v41 = swift_getKeyPath(&unk_100EEFF70);
  v9 = qword_1011DE130;
  swift_retain();
  if (v9 != -1)
    v10 = swift_once(&qword_1011DE130, sub_100C4771C);
  v11 = *(double *)&qword_1011E28B0;
  v12 = static Edge.Set.all.getter(v10);
  v14 = EdgeInsets.init(_all:)(v11);
  v16 = v15;
  v18 = v17;
  v20 = v19;
  if (qword_1011DE138 != -1)
    v13 = swift_once(&qword_1011DE138, sub_100C4772C);
  v21 = qword_1011E28B8;
  v22 = unk_1011E28C0;
  v23 = static Alignment.center.getter(v13);
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(&v64, v21, 0, 0, 1, 0, 1, v22, 0, 0, 1, 0, 1, v23, v24);
  *(_QWORD *)&v52 = v51;
  *((_QWORD *)&v52 + 1) = KeyPath;
  *(_QWORD *)&v53 = v46;
  *((_QWORD *)&v53 + 1) = v41;
  *(_QWORD *)&v54 = v8;
  BYTE8(v54) = v12;
  *(double *)&v55 = v14;
  *((_QWORD *)&v55 + 1) = v16;
  *(_QWORD *)&v56 = v18;
  *((_QWORD *)&v56 + 1) = v20;
  LOBYTE(v57) = 0;
  *((_QWORD *)&v57 + 1) = v64;
  LOBYTE(v58) = v65;
  *((_QWORD *)&v58 + 1) = v66;
  LOBYTE(v59) = v67;
  *((_QWORD *)&v59 + 1) = v68;
  LOBYTE(v60) = v69;
  *((_QWORD *)&v60 + 1) = v70;
  LOBYTE(v61) = v71;
  *((_QWORD *)&v61 + 1) = v72;
  LOBYTE(v62) = v73;
  *((_QWORD *)&v62 + 1) = v74;
  v63[0] = v75;
  *(_OWORD *)&v63[8] = v76;
  v25 = v49;
  v26 = static Material.thin.getter();
  v27 = static Edge.Set.all.getter(v26);
  v40 = KeyPath;
  v28 = v50;
  v29 = (uint64_t)v2;
  v30 = v2;
  v31 = v44;
  (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v30, v25, v44);
  *(_BYTE *)(v29 + *(int *)(v48 + 36)) = v27;
  sub_10004A160(v29, (uint64_t)&v5[*(int *)(v42 + 36)], &qword_1011E2B40);
  v32 = *(_OWORD *)v63;
  *((_OWORD *)v5 + 10) = v62;
  *((_OWORD *)v5 + 11) = v32;
  *((_QWORD *)v5 + 24) = *(_QWORD *)&v63[16];
  v33 = v59;
  *((_OWORD *)v5 + 6) = v58;
  *((_OWORD *)v5 + 7) = v33;
  v34 = v61;
  *((_OWORD *)v5 + 8) = v60;
  *((_OWORD *)v5 + 9) = v34;
  v35 = v55;
  *((_OWORD *)v5 + 2) = v54;
  *((_OWORD *)v5 + 3) = v35;
  v36 = v57;
  *((_OWORD *)v5 + 4) = v56;
  *((_OWORD *)v5 + 5) = v36;
  v37 = v53;
  *(_OWORD *)v5 = v52;
  *((_OWORD *)v5 + 1) = v37;
  sub_100C4AA00((uint64_t *)&v52);
  sub_10004FF60(v29, &qword_1011E2B40);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v25, v31);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v38 = v43;
  sub_10004A160((uint64_t)v5, v43, &qword_1011E2AE8);
  *(_WORD *)(v38 + *(int *)(v45 + 36)) = 256;
  sub_10004FF60((uint64_t)v5, &qword_1011E2AE8);
  return sub_100065228(v38, v47, &qword_1011E2AD0);
}

uint64_t Card.ViewController.__allocating_init(content:)(uint64_t a1)
{
  objc_class *v1;
  objc_class *v2;
  id v4;
  uint64_t v5;
  uint64_t v6;

  v2 = v1;
  v4 = objc_allocWithZone(v1);
  sub_100C495EC(a1);
  v6 = v5;
  (*(void (**)(uint64_t))(*(_QWORD *)(*((_QWORD *)v2 + 10) - 8) + 8))(a1);
  return v6;
}

uint64_t Card.ViewController.init(content:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = swift_isaMask & *v1;
  sub_100C495EC(a1);
  v5 = v4;
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 8))(a1);
  return v5;
}

uint64_t sub_100C48C90(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  _BYTE v11[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    Card.ViewController.preferredContentSize(forWidth:)(0, 1);
    v7 = v6;

    return v7;
  }
  else
  {
    v9 = objc_msgSend((id)objc_opt_self(UISheetPresentationControllerDetent), "largeDetent");
    v8 = UISheetPresentationControllerDetent.resolvedValue(in:)(a1);

  }
  return v8;
}

void sub_100C48D50(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  _s11MusicCoreUI4CardO14ViewControllerC5coderAEy_xGSgSo7NSCoderC_tcfc_0();
}

Swift::Void __swiftcall Card.ViewController.viewDidLoad()()
{
  _QWORD *v0;
  uint64_t ObjectType;
  uint64_t v2;
  objc_class *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  objc_super v8;

  ObjectType = swift_getObjectType();
  v3 = (objc_class *)type metadata accessor for Card.ViewController(0, *(_QWORD *)((swift_isaMask & *v0) + 0x50), *(_QWORD *)((swift_isaMask & *v0) + 0x58), v2);
  v8.receiver = v0;
  v8.super_class = v3;
  objc_msgSendSuper2(&v8, "viewDidLoad");
  Card.ViewController.preferredContentSize(forWidth:)(0, 1);
  objc_msgSend(v0, "setPreferredContentSize:");
  v4 = sub_100007E8C(&qword_1011E04A0);
  v5 = swift_allocObject(v4, 48, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v5 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
  *(_QWORD *)(v5 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  v6 = swift_allocObject(&unk_10110AD20, 24, 7);
  *(_QWORD *)(v6 + 16) = ObjectType;
  v7 = UIViewController.registerForTraitChanges<A>(_:handler:)(v5, sub_100C49BC8, v6, ObjectType);
  swift_unknownObjectRelease(v7);
  swift_bridgeObjectRelease();
  swift_release();
}

void sub_100C48E7C(void *a1)
{
  id v1;

  v1 = a1;
  Card.ViewController.viewDidLoad()();

}

id Card.ViewController.viewWillTransition(to:with:)(uint64_t a1, double a2, double a3)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;
  objc_class *v9;
  objc_super v11;

  v7 = swift_isaMask & *v3;
  Card.ViewController.preferredContentSize(forWidth:)(*(uint64_t *)&a2, 0);
  objc_msgSend(v3, "setPreferredContentSize:");
  v9 = (objc_class *)type metadata accessor for Card.ViewController(0, *(_QWORD *)(v7 + 80), *(_QWORD *)(v7 + 88), v8);
  v11.receiver = v3;
  v11.super_class = v9;
  return objc_msgSendSuper2(&v11, "viewWillTransitionToSize:withTransitionCoordinator:", a1, a2, a3);
}

void sub_100C48F48(void *a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  id v9;

  swift_unknownObjectRetain(a3, a2);
  v9 = a1;
  Card.ViewController.viewWillTransition(to:with:)(a3, a4, a5);
  swift_unknownObjectRelease(a3);

}

Swift::Void __swiftcall Card.ViewController.viewDidLayoutSubviews()()
{
  uint64_t v0;
  _QWORD *v1;
  objc_class *v2;
  id v3;
  void *v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  uint64_t v13;
  double v14;
  double v15;
  CGFloat v16;
  double Height;
  id v18;
  void *v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  double v28;
  id v29;
  void *v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  double v35;
  CGFloat v36;
  double v37;
  CGFloat v38;
  double MaxY;
  double v40;
  id v41;
  void *v42;
  id v43;
  void *v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  objc_super v52;
  CGRect v53;
  CGRect v54;
  CGRect v55;
  CGRect v56;
  CGRect v57;

  v2 = (objc_class *)type metadata accessor for Card.ViewController(0, *(_QWORD *)((swift_isaMask & *v1) + 0x50), *(_QWORD *)((swift_isaMask & *v1) + 0x58), v0);
  v52.receiver = v1;
  v52.super_class = v2;
  objc_msgSendSuper2(&v52, "viewDidLayoutSubviews");
  v3 = objc_msgSend(v1, "view");
  if (!v3)
  {
    __break(1u);
    goto LABEL_10;
  }
  v4 = v3;
  objc_msgSend(v3, "bounds");
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;

  v53.origin.x = v6;
  v53.origin.y = v8;
  v53.size.width = v10;
  v53.size.height = v12;
  *(double *)&v13 = CGRectGetWidth(v53);
  Card.ViewController.preferredContentSize(forWidth:)(v13, 0);
  v15 = v14;
  v54.size.height = v16;
  v54.origin.x = 0.0;
  v54.origin.y = 0.0;
  v54.size.width = v15;
  Height = CGRectGetHeight(v54);
  v18 = objc_msgSend(v1, "view");
  if (!v18)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v19 = v18;
  objc_msgSend(v18, "bounds");
  v21 = v20;
  v23 = v22;
  v25 = v24;
  v27 = v26;

  v55.origin.x = v21;
  v55.origin.y = v23;
  v55.size.width = v25;
  v55.size.height = v27;
  v28 = CGRectGetHeight(v55);
  if (v28 < Height)
    Height = v28;
  v29 = objc_msgSend(v1, "view");
  if (!v29)
    goto LABEL_11;
  v30 = v29;
  objc_msgSend(v29, "bounds");
  v32 = v31;
  v34 = v33;
  v36 = v35;
  v38 = v37;

  v56.origin.x = v32;
  v56.origin.y = v34;
  v56.size.width = v36;
  v56.size.height = v38;
  MaxY = CGRectGetMaxY(v56);
  v57.origin.x = 0.0;
  v57.origin.y = 0.0;
  v57.size.width = v15;
  v57.size.height = Height;
  v40 = CGRectGetHeight(v57);
  v41 = objc_msgSend(*(id *)((char *)v1 + qword_1011E2A00), "view");
  if (!v41)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v42 = v41;
  v43 = objc_msgSend(v1, "view");
  if (v43)
  {
    v44 = v43;
    v45 = CGRect.centeringAlong(axes:in:)(1, 0.0, MaxY - v40, v15, Height);
    v47 = v46;
    v49 = v48;
    v51 = v50;

    objc_msgSend(v42, "setFrame:", v45, v47, v49, v51);
    return;
  }
LABEL_13:
  __break(1u);
}

void sub_100C49208(void *a1)
{
  id v1;

  v1 = a1;
  Card.ViewController.viewDidLayoutSubviews()();

}

uint64_t sub_100C4923C()
{
  return 1;
}

void Card.ViewController.preferredContentSize(forWidth:)(uint64_t a1, char a2)
{
  char *v2;
  id v4;
  void *v5;
  id v6;
  id v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  double v22;
  id v23;
  CGRect v24;

  if ((a2 & 1) == 0)
  {
LABEL_8:
    v16 = objc_msgSend(v2, "presentingViewController");
    if (v16)
    {
      v17 = v16;
      v18 = objc_msgSend(v16, "traitCollection");

      if (v18)
        goto LABEL_12;
    }
    v19 = objc_msgSend(v2, "presentationController");
    v20 = v19;
    if (v19)
    {
      v18 = objc_msgSend(v19, "traitCollection");

      if (v18)
      {
LABEL_12:
        v20 = v18;
        v21 = objc_msgSend(v20, "horizontalSizeClass");

        v22 = 414.0;
        if (*(double *)&a1 <= 414.0)
          v22 = *(double *)&a1;
        if (v21 == (id)2)
          *(double *)&a1 = v22;
        goto LABEL_16;
      }
      v20 = 0;
    }
LABEL_16:
    v23 = *(id *)&v2[qword_1011E2A00];
    dispatch thunk of UIHostingController.sizeThatFits(in:)(v23, *(double *)&a1, INFINITY);

    return;
  }
  v4 = objc_msgSend(v2, "presentationController");
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v4, "containerView");

    if (v6)
    {
LABEL_7:
      objc_msgSend(v6, "bounds");
      v9 = v8;
      v11 = v10;
      v13 = v12;
      v15 = v14;

      v24.origin.x = v9;
      v24.origin.y = v11;
      v24.size.width = v13;
      v24.size.height = v15;
      *(double *)&a1 = CGRectGetWidth(v24);
      goto LABEL_8;
    }
  }
  v7 = objc_msgSend(v2, "view");
  if (v7)
  {
    v6 = v7;
    goto LABEL_7;
  }
  __break(1u);
}

void Card.ViewController.init(nibName:bundle:)()
{
  sub_100C49C00();
}

void sub_100C49438(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v4;

  v4 = a4;
  sub_100C49C00();
}

id Card.ViewController.__deallocating_deinit(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for Card.ViewController(0, *(_QWORD *)((swift_isaMask & *v4) + 0x50), *(_QWORD *)((swift_isaMask & *v4) + 0x58), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, "dealloc");
}

void sub_100C494C0(uint64_t a1)
{

}

uint64_t View.cardDisplayStyle()(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v4 = type metadata accessor for Card.DisplayStyle(0);
  __chkstk_darwin();
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v8 = (char *)&v12 - v7;
  *(_QWORD *)v6 = swift_getKeyPath(&unk_100EEFE48);
  *((_WORD *)v6 + 4) = 0;
  v9 = &v6[*(int *)(v4 + 20)];
  *(_QWORD *)v9 = swift_getKeyPath(&unk_100EEFE78);
  v10 = sub_100007E8C(&qword_1011E4D50);
  swift_storeEnumTagMultiPayload(v9, v10, 0);
  sub_100C49C74((uint64_t)v6, (uint64_t)v8);
  View.modifier<A>(_:)(v8, a1, v4, a2);
  return sub_10005B748((uint64_t)v8, type metadata accessor for Card.DisplayStyle);
}

void sub_100C495EC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t WitnessTable;
  char *v27;
  void (*v28)(char *, char *, uint64_t);
  void *v29;
  uint64_t v30;
  id v31;
  id v32;
  void *v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  objc_class *v38;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  Class isa;
  id v50;
  void *v51;
  id v52;
  uint64_t v53;
  id v54;
  void *v55;
  id v56;
  void *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  objc_super v64;
  uint64_t v65;
  uint64_t v66;

  v60 = swift_isaMask & *v1;
  v3 = v60;
  v4 = type metadata accessor for Card.DisplayStyle(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v5);
  v10 = (char *)&v58 - v9;
  v11 = *(_QWORD *)(v3 + 80);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v8);
  v14 = (char *)&v58 - v13;
  v15 = type metadata accessor for ModifiedContent(0, v11, v4);
  v62 = *(_QWORD *)(v15 - 8);
  v16 = __chkstk_darwin(v15);
  v61 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v19 = (char *)&v58 - v18;
  *(_QWORD *)((char *)v1 + qword_1011E29F8) = 0x4079E00000000000;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a1, v11);
  *(_QWORD *)v7 = swift_getKeyPath(&unk_100EEFE48);
  *((_WORD *)v7 + 4) = 0;
  v20 = &v7[*(int *)(v4 + 20)];
  *(_QWORD *)v20 = swift_getKeyPath(&unk_100EEFE78);
  v21 = sub_100007E8C(&qword_1011E4D50);
  swift_storeEnumTagMultiPayload(v20, v21, 0);
  sub_100C49C74((uint64_t)v7, (uint64_t)v10);
  v22 = v1;
  v23 = v11;
  ModifiedContent.init(content:modifier:)(v14, v10, v11, v4);
  v24 = *(_QWORD *)(v60 + 88);
  v25 = sub_100048748(&qword_1011E2AA8, type metadata accessor for Card.DisplayStyle, (uint64_t)&protocol conformance descriptor for Card.DisplayStyle);
  v65 = v24;
  v66 = v25;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v15);
  type metadata accessor for UIHostingController(0, v15, WitnessTable);
  v27 = v61;
  v28 = *(void (**)(char *, char *, uint64_t))(v62 + 16);
  v59 = v19;
  v60 = v15;
  v28(v61, v19, v15);
  v29 = (void *)UIHostingController.__allocating_init(rootView:)(v27);
  v30 = qword_1011E2A00;
  *(_QWORD *)((char *)v22 + qword_1011E2A00) = v29;
  v31 = v29;
  UIHostingController.safeAreaRegions.setter(0);

  v32 = objc_msgSend(*(id *)((char *)v22 + v30), "view");
  if (!v32)
  {

    __break(1u);
LABEL_9:

    __break(1u);
    goto LABEL_10;
  }
  v33 = v32;
  v34 = (void *)objc_opt_self(UIColor);
  v35 = objc_msgSend(v34, "clearColor");
  objc_msgSend(v33, "setBackgroundColor:", v35);

  v36 = v23;
  v38 = (objc_class *)type metadata accessor for Card.ViewController(0, v23, v24, v37);
  v64.receiver = v22;
  v64.super_class = v38;
  v22 = objc_msgSendSuper2(&v64, "initWithNibName:bundle:", 0, 0);
  objc_msgSend(v22, "setModalPresentationStyle:", 2);
  v39 = objc_msgSend(v22, "sheetPresentationController");
  if (v39)
  {
    v40 = v39;
    v41 = sub_100007E8C(&qword_1011DF520);
    v42 = swift_allocObject(v41, 40, 7);
    *(_OWORD *)(v42 + 16) = xmmword_100EA7A90;
    sub_100C4A58C();
    v43 = swift_allocObject(&unk_10110AE48, 24, 7);
    swift_unknownObjectWeakInit(v43 + 16, v22);
    v44 = (_QWORD *)swift_allocObject(&unk_10110AE70, 40, 7);
    v44[2] = v36;
    v44[3] = v24;
    v44[4] = v43;
    v45 = swift_retain(v43);
    v46 = static UISheetPresentationControllerDetent.custom(identifier:resolver:)(0, sub_100C4A610, v44, v45);
    swift_release(v43);
    swift_release(v44);
    *(_QWORD *)(v42 + 32) = v46;
    v63 = v42;
    specialized Array._endMutation()(v47);
    v48 = v63;
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v40, "setDetents:", isa, swift_bridgeObjectRelease(v48).n128_f64[0]);

    objc_msgSend(v40, "setWidthFollowsPreferredContentSizeWhenEdgeAttached:", 1);
  }
  v50 = objc_msgSend(v22, "view");
  if (!v50)
    goto LABEL_9;
  v51 = v50;
  v52 = objc_msgSend(v34, "clearColor");
  objc_msgSend(v51, "setBackgroundColor:", v52);

  v53 = qword_1011E2A00;
  objc_msgSend(v22, "addChildViewController:", *(_QWORD *)((char *)v22 + qword_1011E2A00));
  v54 = objc_msgSend(v22, "view");
  if (!v54)
  {
LABEL_10:

    __break(1u);
    goto LABEL_11;
  }
  v55 = v54;
  v56 = objc_msgSend(*(id *)((char *)v22 + v53), "view");
  if (v56)
  {
    v57 = v56;
    objc_msgSend(v55, "addSubview:", v56);

    (*(void (**)(char *, uint64_t))(v62 + 8))(v59, v60);
    return;
  }
LABEL_11:

  __break(1u);
}

void _s11MusicCoreUI4CardO14ViewControllerC5coderAEy_xGSgSo7NSCoderC_tcfc_0()
{
  char *v0;

  *(_QWORD *)&v0[qword_1011E29F8] = 0x4079E00000000000;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E2B820, "MusicCoreUI/Card.swift", 22, 2, 123, 0);
  __break(1u);
}

uint64_t type metadata accessor for Card.ViewController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Card.ViewController);
}

uint64_t sub_100C49BB8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_100C49BCC(void *a1)
{
  Card.ViewController.preferredContentSize(forWidth:)(0, 1);
  return objc_msgSend(a1, "setPreferredContentSize:");
}

void sub_100C49C00()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicCoreUI.ViewController", 26, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

uint64_t type metadata accessor for Card.DisplayStyle(uint64_t a1)
{
  uint64_t result;

  result = qword_1011E29C0;
  if (!qword_1011E29C0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for Card.DisplayStyle);
  return result;
}

uint64_t sub_100C49C74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Card.DisplayStyle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100C49CB8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of Card.DisplayStyle.body(content:)>>, 1);
}

ValueMetadata *type metadata accessor for Card()
{
  return &type metadata for Card;
}

unint64_t initializeBufferWithCopyOfBuffer for Card.DisplayStyle(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  char v8;
  unsigned __int8 v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v18 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_BYTE *)(a2 + 9);
    v9 = *(_BYTE *)(a2 + 8);
    sub_10006B3EC(*(_QWORD *)a2, v9, v8);
    *(_QWORD *)a1 = v7;
    *(_BYTE *)(a1 + 8) = v9;
    *(_BYTE *)(a1 + 9) = v8;
    v10 = *(int *)(a3 + 20);
    v11 = (_QWORD *)(a1 + v10);
    v12 = (_QWORD *)(a2 + v10);
    v13 = sub_100007E8C(&qword_1011E4D50);
    if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
    {
      v14 = type metadata accessor for DismissAction(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v11, v12, v14);
      v15 = v11;
      v16 = v13;
      v17 = 1;
    }
    else
    {
      *v11 = *v12;
      swift_retain();
      v15 = v11;
      v16 = v13;
      v17 = 0;
    }
    swift_storeEnumTagMultiPayload(v15, v16, v17);
  }
  return a1;
}

double destroy for Card.DisplayStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  sub_10006B5F8(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8), *(_BYTE *)(a1 + 9));
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_100007E8C(&qword_1011E4D50);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for DismissAction(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t initializeWithCopy for Card.DisplayStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  unsigned __int8 v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 9);
  v8 = *(_BYTE *)(a2 + 8);
  sub_10006B3EC(*(_QWORD *)a2, v8, v7);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v8;
  *(_BYTE *)(a1 + 9) = v7;
  v9 = *(int *)(a3 + 20);
  v10 = (_QWORD *)(a1 + v9);
  v11 = (_QWORD *)(a2 + v9);
  v12 = sub_100007E8C(&qword_1011E4D50);
  if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
  {
    v13 = type metadata accessor for DismissAction(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v10, v11, v13);
    v14 = 1;
  }
  else
  {
    *v10 = *v11;
    swift_retain();
    v14 = 0;
  }
  swift_storeEnumTagMultiPayload(v10, v12, v14);
  return a1;
}

uint64_t assignWithCopy for Card.DisplayStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  unsigned __int8 v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 9);
  v8 = *(_BYTE *)(a2 + 8);
  sub_10006B3EC(*(_QWORD *)a2, v8, v7);
  v9 = *(_QWORD *)a1;
  v10 = *(_BYTE *)(a1 + 9);
  *(_QWORD *)a1 = v6;
  v11 = *(unsigned __int8 *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v8;
  *(_BYTE *)(a1 + 9) = v7;
  sub_10006B5F8(v9, v11, v10);
  if (a1 != a2)
  {
    v12 = *(int *)(a3 + 20);
    v13 = (_QWORD *)(a1 + v12);
    v14 = (_QWORD *)(a2 + v12);
    sub_10004FF60(a1 + v12, &qword_1011E4D50);
    v15 = sub_100007E8C(&qword_1011E4D50);
    if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
    {
      v16 = type metadata accessor for DismissAction(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
      v17 = 1;
    }
    else
    {
      *v13 = *v14;
      swift_retain();
      v17 = 0;
    }
    swift_storeEnumTagMultiPayload(v13, v15, v17);
  }
  return a1;
}

uint64_t initializeWithTake for Card.DisplayStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  v4 = *(int *)(a3 + 20);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = sub_100007E8C(&qword_1011E4D50);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for DismissAction(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload(v5, v7, 1);
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t assignWithTake for Card.DisplayStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;

  v6 = *(_BYTE *)(a2 + 8);
  v7 = *(_BYTE *)(a2 + 9);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 9);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v10 = *(unsigned __int8 *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 9) = v7;
  sub_10006B5F8(v8, v10, v9);
  if (a1 != a2)
  {
    v11 = *(int *)(a3 + 20);
    v12 = (void *)(a1 + v11);
    v13 = (const void *)(a2 + v11);
    sub_10004FF60(a1 + v11, &qword_1011E4D50);
    v14 = sub_100007E8C(&qword_1011E4D50);
    if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
    {
      v15 = type metadata accessor for DismissAction(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v12, v13, v15);
      swift_storeEnumTagMultiPayload(v12, v14, 1);
    }
    else
    {
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for Card.DisplayStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C4A1D4);
}

uint64_t sub_100C4A1D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 9);
    if (v4 > 1)
      return (v4 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011E3520);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for Card.DisplayStyle(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C4A258);
}

uint64_t sub_100C4A258(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 9) = -(char)a2;
  }
  else
  {
    v7 = sub_100007E8C(&qword_1011E3520);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

void sub_100C4A2CC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = "\n";
  sub_100C16C14(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
  }
}

uint64_t sub_100C4A340(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = (char *)&value witness table for Builtin.Int64 + 64;
  v2[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  return swift_initClassMetadata2(a1, 0, 2, v2, a1 + 96);
}

uint64_t sub_100C4A390()
{
  return sub_10005610C(&qword_1011E2A88, &qword_1011E2910, (void (*)(void))sub_100C4A3C4);
}

unint64_t sub_100C4A3C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E2A90;
  if (!qword_1011E2A90)
  {
    v1 = sub_100044B54(&qword_1011E2908);
    sub_100C4A448();
    sub_100049F28(&qword_1011E2AA0, &qword_1011E2960, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E2A90);
  }
  return result;
}

unint64_t sub_100C4A448()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  unint64_t v5;

  result = qword_1011E2A98;
  if (!qword_1011E2A98)
  {
    v1 = sub_100044B54(&qword_1011E2900);
    v2 = sub_100044B54(&qword_1011E28F0);
    v4 = sub_100044B54(&qword_1011E28E8);
    v5 = sub_100C4815C();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 1);
    v4 = v2;
    v5 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.scrollBounceBehavior(_:axes:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E2A98);
  }
  return result;
}

uint64_t sub_100C4A50C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *a1;
  v2 = type metadata accessor for Card.DisplayStyle(255);
  v3 = type metadata accessor for ModifiedContent(255, v1, v2);
  sub_100048748(&qword_1011E2AA8, type metadata accessor for Card.DisplayStyle, (uint64_t)&protocol conformance descriptor for Card.DisplayStyle);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v3);
}

unint64_t sub_100C4A58C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E2AB0;
  if (!qword_1011E2AB0)
  {
    v1 = objc_opt_self(UISheetPresentationControllerDetent);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1011E2AB0);
  }
  return result;
}

uint64_t sub_100C4A5C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

uint64_t sub_100C4A5EC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100C4A610(uint64_t a1)
{
  uint64_t v1;

  return sub_100C48C90(a1, *(_QWORD *)(v1 + 32));
}

uint64_t sub_100C4A61C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for Card.DisplayStyle(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  sub_10006B5F8(*(_QWORD *)(v0 + v3), *(unsigned __int8 *)(v0 + v3 + 8), *(_BYTE *)(v0 + v3 + 9));
  v5 = v0 + v3 + *(int *)(v1 + 20);
  v6 = sub_100007E8C(&qword_1011E4D50);
  if (swift_getEnumCaseMultiPayload(v5, v6) == 1)
  {
    v7 = type metadata accessor for DismissAction(0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject(v0, v3 + v4);
}

uint64_t sub_100C4A6D4()
{
  type metadata accessor for Card.DisplayStyle(0);
  return sub_100C48670();
}

unint64_t sub_100C4A700()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E2AD8;
  if (!qword_1011E2AD8)
  {
    v1 = sub_100044B54(&qword_1011E2AD0);
    sub_100C4A784();
    sub_100049F28((unint64_t *)&unk_1011E4420, &qword_1011E4E20, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E2AD8);
  }
  return result;
}

unint64_t sub_100C4A784()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E2AE0;
  if (!qword_1011E2AE0)
  {
    v1 = sub_100044B54(&qword_1011E2AE8);
    sub_10005610C(&qword_1011E2AF0, &qword_1011E2AF8, (void (*)(void))sub_100C4A828);
    sub_100049F28(&qword_1011E2B38, &qword_1011E2B40, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E2AE0);
  }
  return result;
}

uint64_t sub_100C4A828()
{
  return sub_10005610C(&qword_1011E2B00, &qword_1011E2B08, (void (*)(void))sub_100C4A84C);
}

unint64_t sub_100C4A84C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E2B10;
  if (!qword_1011E2B10)
  {
    v1 = sub_100044B54(&qword_1011E2B18);
    sub_100C4A8D0();
    sub_100049F28((unint64_t *)&unk_1011E3BD0, &qword_1011E0EA8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E2B10);
  }
  return result;
}

unint64_t sub_100C4A8D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E2B20;
  if (!qword_1011E2B20)
  {
    v1 = sub_100044B54(&qword_1011E2B28);
    sub_100049F28(&qword_1011E2B30, (uint64_t *)&unk_1011E3A60, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E2B20);
  }
  return result;
}

unint64_t sub_100C4A954()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E2B50;
  if (!qword_1011E2B50)
  {
    v1 = sub_100044B54(&qword_1011E2AC0);
    sub_100049F28(&qword_1011E2B58, &qword_1011E2AB8, (uint64_t)&protocol conformance descriptor for Button<A>);
    sub_100049F28(&qword_1011E2B60, &qword_1011E2B48, (uint64_t)&protocol conformance descriptor for _ContentShapeKindModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E2B50);
  }
  return result;
}

uint64_t *sub_100C4AA00(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  swift_retain(a1[4]);
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  return a1;
}

double CarouselView.init(items:selectedIndex:selectedItem:animatesProgrammaticSelection:itemSize:horizontalSpacing:carouselToPageIndicatorSpacing:content:didSelect:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, double a13@<D3>, uint64_t a14, uint64_t a15, uint64_t a16, __int128 a17, uint64_t a18, uint64_t a19)
{
  uint64_t v26;
  uint64_t v27;
  char *v28;
  int *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  double *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  double result;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE v54[24];
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v52 = a7;
  v53 = a8;
  v49 = a6;
  v47 = a4;
  v48 = a5;
  v46 = a3;
  v50 = a14;
  v51 = a15;
  v45 = a17;
  v26 = sub_100007E8C(&qword_1011E2B80);
  __chkstk_darwin(v26);
  v28 = (char *)&v45 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  a9[1] = 0;
  a9[2] = 0;
  a9[3] = 0;
  *(_QWORD *)v54 = a16;
  *(_OWORD *)&v54[8] = v45;
  v55 = a18;
  v56 = a19;
  v29 = (int *)type metadata accessor for CarouselView(0, (uint64_t)v54);
  v30 = (char *)a9 + v29[16];
  v31 = type metadata accessor for Binding(0, a16);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v30, 1, 1, v31);
  v32 = v29[17];
  *((_BYTE *)a9 + v32) = 1;
  v33 = (_QWORD *)((char *)a9 + v29[22]);
  *v33 = 0;
  v33[1] = 0;
  v34 = v29[23];
  v57 = 0;
  State.init(wrappedValue:)(&v57, &type metadata for Int);
  *(_OWORD *)((char *)a9 + v34) = *(_OWORD *)v54;
  v35 = type metadata accessor for ScrollViewProxy(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v28, 1, 1, v35);
  property wrapper backing initializer of CarouselView.scrollViewProxy((uint64_t)v28);
  v36 = (_QWORD *)((char *)a9 + v29[26]);
  *v36 = swift_getKeyPath(&unk_100EEFFE0);
  v37 = sub_100007E8C((uint64_t *)&unk_1011DE420);
  swift_storeEnumTagMultiPayload(v36, v37, 0);
  *a9 = a1;
  v38 = (double *)((char *)a9 + v29[18]);
  *v38 = a10;
  v38[1] = a11;
  sub_1002CF744(a9[1], a9[2]);
  v39 = v46;
  a9[1] = a2;
  a9[2] = v39;
  a9[3] = v47;
  v40 = type metadata accessor for Optional(0, v31);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 40))(v30, v48, v40);
  *((_BYTE *)a9 + v32) = v49;
  *(double *)((char *)a9 + v29[20]) = a12;
  *(double *)((char *)a9 + v29[21]) = a13;
  v41 = (_QWORD *)((char *)a9 + v29[19]);
  v42 = v53;
  *v41 = v52;
  v41[1] = v42;
  sub_10004BA30(*v33, v33[1]);
  v43 = v51;
  *v33 = v50;
  v33[1] = v43;
  result = *v38 + a12;
  *(double *)((char *)a9 + v29[25]) = result;
  return result;
}

uint64_t type metadata accessor for CarouselView(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for CarouselView);
}

uint64_t property wrapper backing initializer of CarouselView.currentIndex(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = a1;
  State.init(wrappedValue:)(v2, &type metadata for Int);
  return v2[1];
}

uint64_t property wrapper backing initializer of CarouselView.scrollViewProxy(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = sub_100007E8C(&qword_1011E2B80);
  __chkstk_darwin(v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(a1, (uint64_t)v4, &qword_1011E2B80);
  State.init(wrappedValue:)(v4, v2);
  return sub_10004FF60(a1, &qword_1011E2B80);
}

uint64_t CarouselView.body.getter@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  void *v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  __n128 v7;
  uint64_t v8;
  uint64_t WitnessTable;
  uint64_t OpaqueTypeMetadata2;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t TupleTypeMetadata2;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(char *, char *, uint64_t);
  void (*v71)(char *, uint64_t);
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  char *v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t OpaqueTypeConformance2;
  uint64_t v102;
  void *v103;
  unint64_t v104;
  void *v105;
  uint64_t v106;

  v80 = a2;
  v3 = (void *)a1[2];
  swift_getTupleTypeMetadata2(255, &type metadata for Int, v3, 0, 0);
  v4 = type metadata accessor for Array(255);
  v77 = a1[3];
  v5 = a1[6];
  v6 = a1;
  v74 = a1;
  v78 = v5;
  v102 = v77;
  v103 = &type metadata for Int;
  v104 = v5;
  v105 = &protocol witness table for Int;
  v8 = type metadata accessor for IDView(255, &v102, v7);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for IDView<A, B>, v8);
  v102 = v8;
  v103 = (void *)WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v102, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 0);
  v76 = v4;
  v75 = swift_getWitnessTable(&protocol conformance descriptor for [A], v4);
  v73 = v6[5];
  v102 = v4;
  v103 = v3;
  v11 = v3;
  v104 = OpaqueTypeMetadata2;
  v105 = (void *)v75;
  v106 = v73;
  v12 = type metadata accessor for ForEach(255, &v102);
  v102 = v8;
  v103 = (void *)WitnessTable;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v102, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v13 = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v12);
  v14 = type metadata accessor for LazyHStack(255, v12, v13);
  v15 = sub_100044B54(&qword_1011E2B88);
  v16 = type metadata accessor for ModifiedContent(255, v14, v15);
  v17 = type metadata accessor for ModifiedContent(255, v16, &type metadata for _PaddingLayout);
  v18 = sub_100044B54(&qword_1011E2B90);
  v19 = type metadata accessor for ModifiedContent(255, v17, v18);
  v20 = type metadata accessor for ModifiedContent(255, v19, &type metadata for _AppearanceActionModifier);
  v21 = sub_100044B54(&qword_1011E2B98);
  v99 = swift_getWitnessTable(&protocol conformance descriptor for LazyHStack<A>, v14);
  v100 = sub_100049F28(&qword_1011E2BA0, &qword_1011E2B88, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
  v97 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v16);
  v98 = &protocol witness table for _PaddingLayout;
  v95 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v17);
  v96 = sub_100049F28(&qword_1011E2BA8, &qword_1011E2B90, (uint64_t)&protocol conformance descriptor for _PreferenceActionModifier<A>);
  v93 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v19);
  v94 = &protocol witness table for _AppearanceActionModifier;
  v22 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v20);
  v23 = sub_100C50BC4();
  v102 = v20;
  v103 = (void *)v21;
  v104 = v22;
  v105 = (void *)v23;
  v24 = swift_getOpaqueTypeMetadata2(255, &v102, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v25 = type metadata accessor for Optional(255, v3);
  v102 = v20;
  v103 = (void *)v21;
  v104 = v22;
  v105 = (void *)v23;
  v26 = swift_getOpaqueTypeConformance2(&v102, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v27 = v73;
  v92 = *(_QWORD *)(v73 + 8);
  v28 = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v25);
  v102 = v24;
  v103 = (void *)v25;
  v104 = v26;
  v105 = (void *)v28;
  v29 = swift_getOpaqueTypeMetadata2(255, &v102, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v102 = v24;
  v103 = (void *)v25;
  v104 = v26;
  v105 = (void *)v28;
  v30 = swift_getOpaqueTypeConformance2(&v102, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v31 = type metadata accessor for PagingScrollView(255, v29, v30);
  v32 = sub_100044B54(&qword_1011E2BB8);
  v33 = type metadata accessor for ModifiedContent(255, v31, v32);
  v90 = swift_getWitnessTable(&protocol conformance descriptor for PagingScrollView<A>, v31);
  v91 = sub_100049F28(&qword_1011E2BC0, &qword_1011E2BB8, (uint64_t)&protocol conformance descriptor for _CoordinateSpaceModifier<A>);
  v34 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v33);
  v102 = v33;
  v103 = (void *)v34;
  v35 = swift_getOpaqueTypeMetadata2(255, &v102, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 0);
  v102 = v33;
  v103 = (void *)v34;
  v36 = swift_getOpaqueTypeConformance2(&v102, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 1);
  v102 = v35;
  v103 = (void *)v36;
  v37 = swift_getOpaqueTypeMetadata2(255, &v102, &opaque type descriptor for <<opaque return type of View.scrollClipDisabled(_:)>>, 0);
  v102 = v35;
  v103 = (void *)v36;
  v38 = swift_getOpaqueTypeConformance2(&v102, &opaque type descriptor for <<opaque return type of View.scrollClipDisabled(_:)>>, 1);
  v102 = v37;
  v103 = (void *)v38;
  v39 = swift_getOpaqueTypeMetadata2(255, &v102, &opaque type descriptor for <<opaque return type of View.scrollDisabled(_:)>>, 0);
  v102 = v37;
  v103 = (void *)v38;
  v40 = swift_getOpaqueTypeConformance2(&v102, &opaque type descriptor for <<opaque return type of View.scrollDisabled(_:)>>, 1);
  v41 = type metadata accessor for GeometryReader(255, v39, v40);
  v42 = type metadata accessor for ModifiedContent(255, v41, &type metadata for _FrameLayout);
  v88 = swift_getWitnessTable(&protocol conformance descriptor for GeometryReader<A>, v41);
  v89 = &protocol witness table for _FrameLayout;
  v43 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v42);
  v44 = type metadata accessor for ScrollViewReader(255, v42, v43);
  v45 = type metadata accessor for ModifiedContent(255, v44, &type metadata for _FrameLayout);
  v46 = sub_100044B54(&qword_1011E2BC8);
  v102 = v76;
  v103 = v11;
  v104 = v46;
  v105 = (void *)v75;
  v106 = v73;
  v47 = type metadata accessor for ForEach(255, &v102);
  v48 = sub_100044B54(&qword_1011E2BD0);
  v49 = sub_100044B54(&qword_1011E2BD8);
  v51 = type metadata accessor for AutomaticHoverEffect(255, v50);
  v52 = sub_100C50C20();
  v53 = sub_100048748(qword_1011E2C58, (uint64_t (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect, (uint64_t)&protocol conformance descriptor for AutomaticHoverEffect);
  v102 = v49;
  v103 = (void *)v51;
  v104 = v52;
  v105 = (void *)v53;
  v54 = swift_getOpaqueTypeConformance2(&v102, &opaque type descriptor for <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>, 1);
  v102 = v48;
  v103 = (void *)v54;
  v87 = swift_getOpaqueTypeConformance2(&v102, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v55 = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v47);
  v56 = type metadata accessor for HStack(255, v47, v55);
  v57 = type metadata accessor for ModifiedContent(255, v56, &type metadata for _FrameLayout);
  v58 = type metadata accessor for Optional(255, v57);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v45, v58, 0, 0);
  v60 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v60);
  v61 = type metadata accessor for VStack(0, v60);
  v62 = *(_QWORD *)(v61 - 8);
  __chkstk_darwin();
  v64 = (char *)&v73 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v66 = (char *)&v73 - v65;
  v67 = *(_QWORD *)(v79 + *((int *)v74 + 21));
  v81 = v11;
  v82 = v77;
  v83 = v74[4];
  v84 = v27;
  v85 = v78;
  v86 = v79;
  v69 = static HorizontalAlignment.center.getter(v68);
  VStack.init(alignment:spacing:content:)(v69, v67, 0, sub_100C50FD8);
  swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v61);
  v70 = *(void (**)(char *, char *, uint64_t))(v62 + 16);
  v70(v66, v64, v61);
  v71 = *(void (**)(char *, uint64_t))(v62 + 8);
  v71(v64, v61);
  v70(v80, v66, v61);
  return ((uint64_t (*)(char *, uint64_t))v71)(v66, v61);
}

double sub_100C4B558@<D0>(_QWORD *a1@<X0>, char *a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t OpaqueTypeConformance2;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  char *v36;
  void (*v37)(char *, _QWORD *, uint64_t, __n128);
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  unint64_t v42;
  _QWORD *v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  id v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  void (*v117)(char *, char *, uint64_t);
  char *v118;
  void (*v119)(char *, uint64_t);
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  void (*v124)(char *, char *, uint64_t);
  uint64_t v125;
  void (*v126)(char *, uint64_t);
  __n128 v127;
  double result;
  uint64_t v129;
  char *v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t WitnessTable;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  _QWORD *v148;
  uint64_t v149;
  _QWORD *v150;
  char *v151;
  uint64_t v152;
  void *v153;
  uint64_t v154;
  uint64_t v155;
  void *v156;
  uint64_t v157;
  uint64_t v158;
  _QWORD v159[6];
  uint64_t *v160;
  char *v161;
  unint64_t v162;
  char v163;
  uint64_t v164;
  char v165;
  __int128 v166;
  uint64_t v167;
  void *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  void *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  void *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  unint64_t v183;
  char v184;
  uint64_t v185;
  char v186;
  __int128 v187;
  uint64_t v188;
  char *v189;
  unint64_t v190;
  void *v191;
  uint64_t v192;
  char v193;
  __int128 v194;
  uint64_t v195;

  v146 = a4;
  v147 = a6;
  v148 = a1;
  v145 = a7;
  swift_getTupleTypeMetadata2(255, &type metadata for Int, a2, 0, 0);
  v137 = type metadata accessor for Array(255);
  v10 = sub_100044B54(&qword_1011E2BC8);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v137);
  v188 = v137;
  v189 = a2;
  v11 = (uint64_t)a2;
  v190 = v10;
  v191 = (void *)WitnessTable;
  v192 = (uint64_t)a5;
  v150 = a5;
  v12 = type metadata accessor for ForEach(255, &v188);
  v13 = sub_100044B54(&qword_1011E2BD0);
  v14 = sub_100044B54(&qword_1011E2BD8);
  v16 = type metadata accessor for AutomaticHoverEffect(255, v15);
  v17 = sub_100C50C20();
  v18 = sub_100048748(qword_1011E2C58, (uint64_t (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect, (uint64_t)&protocol conformance descriptor for AutomaticHoverEffect);
  v188 = v14;
  v189 = (char *)v16;
  v190 = v17;
  v191 = (void *)v18;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v188, &opaque type descriptor for <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>, 1);
  v188 = v13;
  v189 = (char *)OpaqueTypeConformance2;
  v195 = swift_getOpaqueTypeConformance2(&v188, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v134 = v12;
  v129 = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v12);
  v133 = *(_QWORD *)(type metadata accessor for HStack(0, v12, v129) - 8);
  __chkstk_darwin();
  v130 = (char *)&v129 - v20;
  v143 = v21;
  v139 = *(_QWORD *)(type metadata accessor for ModifiedContent(0, v21, &type metadata for _FrameLayout) - 8);
  __chkstk_darwin();
  v131 = (char *)&v129 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v132 = (char *)&v129 - v23;
  v149 = v24;
  v144 = type metadata accessor for Optional(0, v24);
  v140 = *(_QWORD *)(v144 - 8);
  __chkstk_darwin();
  v142 = (char *)&v129 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v141 = (char *)&v129 - v26;
  v27 = v11;
  v151 = (char *)v11;
  v188 = v11;
  v189 = a3;
  v28 = (uint64_t)a3;
  v29 = v146;
  v30 = v147;
  v190 = v146;
  v191 = a5;
  v192 = v147;
  v31 = type metadata accessor for CarouselView(0, (uint64_t)&v188);
  v32 = *(_QWORD *)(v31 - 8);
  v33 = *(_QWORD *)(v32 + 64);
  v34 = __chkstk_darwin();
  v36 = (char *)&v129 - v35;
  v37 = *(void (**)(char *, _QWORD *, uint64_t, __n128))(v32 + 16);
  v138 = v31;
  v37(v36, v148, v31, v34);
  v38 = *(unsigned __int8 *)(v32 + 80);
  v39 = (v38 + 56) & ~v38;
  v40 = (_QWORD *)swift_allocObject(&unk_10110B028, v39 + v33, v38 | 7);
  v40[2] = v27;
  v40[3] = v28;
  v41 = v150;
  v40[4] = v29;
  v40[5] = v41;
  v42 = v30;
  v40[6] = v30;
  v43 = v40;
  v44.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v32 + 32))((char *)v40 + v39, v36, v31);
  v135 = v28;
  v188 = v28;
  v189 = (char *)&type metadata for Int;
  v190 = v42;
  v191 = &protocol witness table for Int;
  v45 = type metadata accessor for IDView(255, &v188, v44);
  v46 = swift_getWitnessTable(&protocol conformance descriptor for IDView<A, B>, v45);
  v188 = v45;
  v189 = (char *)v46;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v188, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 0);
  v188 = v137;
  v189 = v151;
  v190 = OpaqueTypeMetadata2;
  v191 = (void *)WitnessTable;
  v192 = (uint64_t)v41;
  v48 = type metadata accessor for ForEach(255, &v188);
  v188 = v45;
  v189 = (char *)v46;
  v180 = swift_getOpaqueTypeConformance2(&v188, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v49 = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v48);
  v50 = type metadata accessor for LazyHStack(255, v48, v49);
  v51 = sub_100044B54(&qword_1011E2B88);
  v52 = type metadata accessor for ModifiedContent(255, v50, v51);
  v53 = type metadata accessor for ModifiedContent(255, v52, &type metadata for _PaddingLayout);
  v54 = sub_100044B54(&qword_1011E2B90);
  v55 = type metadata accessor for ModifiedContent(255, v53, v54);
  v56 = type metadata accessor for ModifiedContent(255, v55, &type metadata for _AppearanceActionModifier);
  v57 = sub_100044B54(&qword_1011E2B98);
  v58 = swift_getWitnessTable(&protocol conformance descriptor for LazyHStack<A>, v50);
  v59 = sub_100049F28(&qword_1011E2BA0, &qword_1011E2B88, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
  v178 = v58;
  v179 = v59;
  v176 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v52);
  v177 = &protocol witness table for _PaddingLayout;
  v60 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v53);
  v61 = sub_100049F28(&qword_1011E2BA8, &qword_1011E2B90, (uint64_t)&protocol conformance descriptor for _PreferenceActionModifier<A>);
  v174 = v60;
  v175 = v61;
  v172 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v55);
  v173 = &protocol witness table for _AppearanceActionModifier;
  v62 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v56);
  v63 = sub_100C50BC4();
  v188 = v56;
  v189 = (char *)v57;
  v190 = v62;
  v191 = (void *)v63;
  v64 = swift_getOpaqueTypeMetadata2(255, &v188, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v65 = type metadata accessor for Optional(255, v151);
  v188 = v56;
  v189 = (char *)v57;
  v190 = v62;
  v191 = (void *)v63;
  v66 = swift_getOpaqueTypeConformance2(&v188, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v171 = v150[1];
  v67 = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v65);
  v188 = v64;
  v189 = (char *)v65;
  v190 = v66;
  v191 = (void *)v67;
  v68 = swift_getOpaqueTypeMetadata2(255, &v188, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v188 = v64;
  v189 = (char *)v65;
  v190 = v66;
  v191 = (void *)v67;
  v69 = swift_getOpaqueTypeConformance2(&v188, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v70 = type metadata accessor for PagingScrollView(255, v68, v69);
  v71 = sub_100044B54(&qword_1011E2BB8);
  v72 = type metadata accessor for ModifiedContent(255, v70, v71);
  v73 = swift_getWitnessTable(&protocol conformance descriptor for PagingScrollView<A>, v70);
  v74 = sub_100049F28(&qword_1011E2BC0, &qword_1011E2BB8, (uint64_t)&protocol conformance descriptor for _CoordinateSpaceModifier<A>);
  v169 = v73;
  v170 = v74;
  v75 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v72);
  v188 = v72;
  v189 = (char *)v75;
  v76 = swift_getOpaqueTypeMetadata2(255, &v188, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 0);
  v188 = v72;
  v189 = (char *)v75;
  v77 = swift_getOpaqueTypeConformance2(&v188, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 1);
  v188 = v76;
  v189 = (char *)v77;
  v78 = swift_getOpaqueTypeMetadata2(255, &v188, &opaque type descriptor for <<opaque return type of View.scrollClipDisabled(_:)>>, 0);
  v188 = v76;
  v189 = (char *)v77;
  v79 = swift_getOpaqueTypeConformance2(&v188, &opaque type descriptor for <<opaque return type of View.scrollClipDisabled(_:)>>, 1);
  v188 = v78;
  v189 = (char *)v79;
  v80 = swift_getOpaqueTypeMetadata2(255, &v188, &opaque type descriptor for <<opaque return type of View.scrollDisabled(_:)>>, 0);
  v188 = v78;
  v189 = (char *)v79;
  v81 = swift_getOpaqueTypeConformance2(&v188, &opaque type descriptor for <<opaque return type of View.scrollDisabled(_:)>>, 1);
  v82 = type metadata accessor for GeometryReader(255, v80, v81);
  v83 = type metadata accessor for ModifiedContent(0, v82, &type metadata for _FrameLayout);
  v167 = swift_getWitnessTable(&protocol conformance descriptor for GeometryReader<A>, v82);
  v168 = &protocol witness table for _FrameLayout;
  v84 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v83);
  v188 = ScrollViewReader.init(content:)(sub_100C53EAC, v43, v83, v84);
  v189 = v85;
  v86 = v148;
  v87 = *(_QWORD *)((char *)v148 + *(int *)(v138 + 72) + 8);
  v88 = static Alignment.center.getter(v188);
  v90 = v89;
  v91 = type metadata accessor for ScrollViewReader(0, v83, v84);
  v92 = swift_getWitnessTable(&protocol conformance descriptor for ScrollViewReader<A>, v91);
  v93 = v87;
  v94 = v86;
  v95 = v90;
  v96 = (uint64_t)v151;
  View.frame(width:height:alignment:)(0, 1, v93, 0, v88, v95, v91, v92);
  swift_release();
  v160 = (uint64_t *)v181;
  v161 = v182;
  v162 = v183;
  v163 = v184;
  v164 = v185;
  v165 = v186;
  v166 = v187;
  v97 = type metadata accessor for ModifiedContent(0, v91, &type metadata for _FrameLayout);
  v159[4] = v92;
  v159[5] = &protocol witness table for _FrameLayout;
  v138 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v97);
  (*(void (**)(uint64_t *, uint64_t **, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(&v188, &v160, v97);
  swift_release();
  if (Array.count.getter(*v94, v96) < 2)
  {
    v120 = v142;
    v121 = v149;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v139 + 56))(v142, 1, 1, v149);
    v112 = v143;
    v159[2] = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v143);
    v159[3] = &protocol witness table for _FrameLayout;
    swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v121);
  }
  else
  {
    v98 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
    v99 = objc_msgSend(v98, "userInterfaceIdiom");

    if (v99 == (id)6)
      v100 = 0x4024000000000000;
    else
      v100 = 0x4020000000000000;
    __chkstk_darwin();
    v101 = v135;
    *(&v129 - 6) = v96;
    *(&v129 - 5) = v101;
    v102 = (uint64_t)v150;
    *(&v129 - 4) = v146;
    *(&v129 - 3) = v102;
    *(&v129 - 2) = v147;
    *(&v129 - 1) = (uint64_t)v94;
    v104 = static VerticalAlignment.center.getter(v103);
    v105 = v130;
    HStack.init(alignment:spacing:content:)(v104, v100, 0, sub_100C53F40, &v129 - 8, v134, v129);
    sub_100C53F4C();
    v107 = v106;
    v109 = static Alignment.center.getter(v108);
    v111 = v110;
    v112 = v143;
    v113 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v143);
    v114 = v131;
    View.frame(width:height:alignment:)(0, 1, v107, 0, v109, v111, v112, v113);
    (*(void (**)(char *, uint64_t))(v133 + 8))(v105, v112);
    v152 = v113;
    v153 = &protocol witness table for _FrameLayout;
    v115 = v149;
    swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v149);
    v116 = v139;
    v117 = *(void (**)(char *, char *, uint64_t))(v139 + 16);
    v118 = v132;
    v117(v132, v114, v115);
    v119 = *(void (**)(char *, uint64_t))(v116 + 8);
    v119(v114, v115);
    v120 = v142;
    v117(v142, v118, v115);
    v119(v118, v115);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v116 + 56))(v120, 0, 1, v115);
  }
  v122 = v140;
  v123 = v141;
  v124 = *(void (**)(char *, char *, uint64_t))(v140 + 16);
  v125 = v144;
  v124(v141, v120, v144);
  v126 = *(void (**)(char *, uint64_t))(v122 + 8);
  v126(v120, v125);
  v181 = v188;
  v182 = v189;
  v183 = v190;
  v184 = (char)v191;
  v185 = v192;
  v186 = v193;
  v187 = v194;
  v160 = &v181;
  v124(v120, v123, v125);
  v161 = v120;
  swift_retain();
  v159[0] = v97;
  v159[1] = v125;
  v157 = v138;
  v155 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v112);
  v156 = &protocol witness table for _FrameLayout;
  v154 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v149);
  v158 = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v125);
  sub_1004D49B8((uint64_t *)&v160, 2uLL, (uint64_t)v159);
  v126(v123, v125);
  v127 = swift_release();
  ((void (*)(char *, uint64_t, __n128))v126)(v120, v125, v127);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

double sub_100C4C15C@<D0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X5>, _QWORD *a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  void (*v23)(char *, uint64_t, uint64_t, __n128);
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  _QWORD *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t WitnessTable;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(uint64_t *, uint64_t *, uint64_t);
  double result;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  void *v95;
  _QWORD *v96;
  uint64_t v97;
  void *v98;
  _QWORD v99[3];
  char v100;
  _QWORD *v101;
  char v102;
  __int128 v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  void *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t OpaqueTypeConformance2;
  uint64_t v116;
  void *v117;
  uint64_t v118;
  char v119;
  _QWORD *v120;
  char v121;
  __int128 v122;
  uint64_t v123;
  void *v124;
  uint64_t v125;
  void *v126;
  _QWORD *v127;
  char v128;
  __int128 v129;

  v88 = (uint64_t)a7;
  v89 = a5;
  v95 = (void *)a3;
  v96 = a6;
  v93 = a8;
  v94 = (uint64_t)a4;
  v92 = a2;
  v90 = a1;
  v14 = type metadata accessor for ScrollViewProxy(0);
  v15 = *(_QWORD *)(v14 - 8);
  v87 = v14;
  v16 = *(_QWORD *)(v15 + 64);
  __chkstk_darwin();
  v86 = (char *)&v86 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = a3;
  v124 = a4;
  v125 = a5;
  v126 = a6;
  v127 = a7;
  v17 = type metadata accessor for CarouselView(0, (uint64_t)&v123);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  v20 = __chkstk_darwin();
  v22 = (char *)&v86 - v21;
  v23 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v18 + 16);
  v91 = v17;
  v23(v22, a2, v17, v20);
  v24 = v86;
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v86, v90, v14);
  v25 = *(unsigned __int8 *)(v18 + 80);
  v26 = (v25 + 56) & ~v25;
  v27 = *(unsigned __int8 *)(v15 + 80);
  v28 = (v19 + v27 + v26) & ~v27;
  v29 = (char *)swift_allocObject(&unk_10110B0C8, v28 + v16, v25 | v27 | 7);
  v30 = v94;
  v31 = v95;
  *((_QWORD *)v29 + 2) = v95;
  *((_QWORD *)v29 + 3) = v30;
  v32 = v88;
  v33 = v96;
  *((_QWORD *)v29 + 4) = v89;
  *((_QWORD *)v29 + 5) = v33;
  *((_QWORD *)v29 + 6) = v32;
  v34 = &v29[v26];
  v35 = v29;
  v90 = v29;
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v34, v22, v17);
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v35[v28], v24, v87);
  swift_getTupleTypeMetadata2(255, &type metadata for Int, v31, 0, 0);
  v36 = type metadata accessor for Array(255);
  v123 = v94;
  v124 = &type metadata for Int;
  v125 = v32;
  v126 = &protocol witness table for Int;
  v38 = type metadata accessor for IDView(255, &v123, v37);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for IDView<A, B>, v38);
  v123 = v38;
  v124 = (void *)WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v123, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 0);
  v41 = swift_getWitnessTable(&protocol conformance descriptor for [A], v36);
  v123 = v36;
  v124 = v31;
  v125 = OpaqueTypeMetadata2;
  v126 = (void *)v41;
  v127 = v96;
  v42 = type metadata accessor for ForEach(255, &v123);
  v123 = v38;
  v124 = (void *)WitnessTable;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v123, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v43 = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v42);
  v44 = type metadata accessor for LazyHStack(255, v42, v43);
  v45 = sub_100044B54(&qword_1011E2B88);
  v46 = type metadata accessor for ModifiedContent(255, v44, v45);
  v47 = type metadata accessor for ModifiedContent(255, v46, &type metadata for _PaddingLayout);
  v48 = sub_100044B54(&qword_1011E2B90);
  v49 = type metadata accessor for ModifiedContent(255, v47, v48);
  v50 = type metadata accessor for ModifiedContent(255, v49, &type metadata for _AppearanceActionModifier);
  v51 = sub_100044B54(&qword_1011E2B98);
  v52 = swift_getWitnessTable(&protocol conformance descriptor for LazyHStack<A>, v44);
  v53 = sub_100049F28(&qword_1011E2BA0, &qword_1011E2B88, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
  v113 = v52;
  v114 = v53;
  v111 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v46);
  v112 = &protocol witness table for _PaddingLayout;
  v54 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v47);
  v55 = sub_100049F28(&qword_1011E2BA8, &qword_1011E2B90, (uint64_t)&protocol conformance descriptor for _PreferenceActionModifier<A>);
  v109 = v54;
  v110 = v55;
  v107 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v49);
  v108 = &protocol witness table for _AppearanceActionModifier;
  v56 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v50);
  v57 = sub_100C50BC4();
  v123 = v50;
  v124 = (void *)v51;
  v125 = v56;
  v126 = (void *)v57;
  v58 = swift_getOpaqueTypeMetadata2(255, &v123, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v59 = type metadata accessor for Optional(255, v95);
  v123 = v50;
  v124 = (void *)v51;
  v125 = v56;
  v126 = (void *)v57;
  v60 = swift_getOpaqueTypeConformance2(&v123, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v106 = v96[1];
  v61 = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v59);
  v123 = v58;
  v124 = (void *)v59;
  v125 = v60;
  v126 = (void *)v61;
  v62 = swift_getOpaqueTypeMetadata2(255, &v123, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v123 = v58;
  v124 = (void *)v59;
  v125 = v60;
  v126 = (void *)v61;
  v63 = swift_getOpaqueTypeConformance2(&v123, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v64 = type metadata accessor for PagingScrollView(255, v62, v63);
  v65 = sub_100044B54(&qword_1011E2BB8);
  v66 = type metadata accessor for ModifiedContent(255, v64, v65);
  v67 = swift_getWitnessTable(&protocol conformance descriptor for PagingScrollView<A>, v64);
  v68 = sub_100049F28(&qword_1011E2BC0, &qword_1011E2BB8, (uint64_t)&protocol conformance descriptor for _CoordinateSpaceModifier<A>);
  v104 = v67;
  v105 = v68;
  v69 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v66);
  v123 = v66;
  v124 = (void *)v69;
  v70 = swift_getOpaqueTypeMetadata2(255, &v123, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 0);
  v123 = v66;
  v124 = (void *)v69;
  v71 = swift_getOpaqueTypeConformance2(&v123, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 1);
  v123 = v70;
  v124 = (void *)v71;
  v72 = swift_getOpaqueTypeMetadata2(255, &v123, &opaque type descriptor for <<opaque return type of View.scrollClipDisabled(_:)>>, 0);
  v123 = v70;
  v124 = (void *)v71;
  v73 = swift_getOpaqueTypeConformance2(&v123, &opaque type descriptor for <<opaque return type of View.scrollClipDisabled(_:)>>, 1);
  v123 = v72;
  v124 = (void *)v73;
  v74 = swift_getOpaqueTypeMetadata2(0, &v123, &opaque type descriptor for <<opaque return type of View.scrollDisabled(_:)>>, 0);
  v123 = v72;
  v124 = (void *)v73;
  v75 = swift_getOpaqueTypeConformance2(&v123, &opaque type descriptor for <<opaque return type of View.scrollDisabled(_:)>>, 1);
  v123 = GeometryReader.init(content:)(sub_100C54098, v90, v74, v75);
  v124 = v76;
  v77 = *(_QWORD *)(v92 + *(int *)(v91 + 72) + 8);
  v78 = static Alignment.center.getter(v123);
  v80 = v79;
  v81 = type metadata accessor for GeometryReader(0, v74, v75);
  v82 = swift_getWitnessTable(&protocol conformance descriptor for GeometryReader<A>, v81);
  View.frame(width:height:alignment:)(0, 1, v77, 0, v78, v80, v81, v82);
  swift_release();
  v99[0] = v116;
  v99[1] = v117;
  v99[2] = v118;
  v100 = v119;
  v101 = v120;
  v102 = v121;
  v103 = v122;
  v83 = type metadata accessor for ModifiedContent(0, v81, &type metadata for _FrameLayout);
  v97 = v82;
  v98 = &protocol witness table for _FrameLayout;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v83);
  v84 = *(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v83 - 8) + 16);
  v84(&v123, v99, v83);
  swift_release();
  v116 = v123;
  v117 = v124;
  v118 = v125;
  v119 = (char)v126;
  v120 = v127;
  v121 = v128;
  v122 = v129;
  v84(v93, &v116, v83);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100C4C88C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X6>, uint64_t a8@<X7>, char *a9@<X8>)
{
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t WitnessTable;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  double v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  double v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unsigned int v78;
  unsigned int v79;
  uint64_t v80;
  int v81;
  int v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  _BOOL8 v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(char *, char *, uint64_t);
  char *v94;
  void (*v95)(char *, uint64_t);
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  _QWORD *v127;
  uint64_t v128;
  char v129[8];
  uint64_t v130;
  void *v131;
  uint64_t v132;
  void *v133;
  uint64_t v134;
  _QWORD *v135;
  double v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  void *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  void *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t OpaqueTypeConformance2;
  uint64_t v150;
  void *v151;
  uint64_t v152;
  void *v153;
  _QWORD *v154;

  v118 = a8;
  v121 = a6;
  v119 = (void *)a5;
  v122 = a3;
  v127 = a2;
  v117 = a1;
  v125 = a9;
  v124 = type metadata accessor for ScrollIndicatorVisibility(0);
  v123 = *(_QWORD *)(v124 - 8);
  v13 = __chkstk_darwin();
  v126 = (char *)&v97 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ScrollPagingBehavior(0, v13);
  __chkstk_darwin();
  v120 = (char *)&v97 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getTupleTypeMetadata2(255, &type metadata for Int, a4, 0, 0);
  v16 = type metadata accessor for Array(255);
  v150 = a5;
  v151 = &type metadata for Int;
  v152 = a8;
  v153 = &protocol witness table for Int;
  v18 = type metadata accessor for IDView(255, &v150, v17);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for IDView<A, B>, v18);
  v150 = v18;
  v151 = (void *)WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v150, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 0);
  v21 = swift_getWitnessTable(&protocol conformance descriptor for [A], v16);
  v150 = v16;
  v151 = a4;
  v128 = (uint64_t)a4;
  v152 = OpaqueTypeMetadata2;
  v153 = (void *)v21;
  v154 = a7;
  v22 = a7;
  v23 = type metadata accessor for ForEach(255, &v150);
  v150 = v18;
  v151 = (void *)WitnessTable;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v150, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v24 = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v23);
  v25 = type metadata accessor for LazyHStack(255, v23, v24);
  v26 = sub_100044B54(&qword_1011E2B88);
  v27 = type metadata accessor for ModifiedContent(255, v25, v26);
  v28 = type metadata accessor for ModifiedContent(255, v27, &type metadata for _PaddingLayout);
  v29 = sub_100044B54(&qword_1011E2B90);
  v30 = type metadata accessor for ModifiedContent(255, v28, v29);
  v31 = type metadata accessor for ModifiedContent(255, v30, &type metadata for _AppearanceActionModifier);
  v32 = sub_100044B54(&qword_1011E2B98);
  v33 = swift_getWitnessTable(&protocol conformance descriptor for LazyHStack<A>, v25);
  v34 = sub_100049F28(&qword_1011E2BA0, &qword_1011E2B88, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
  v147 = v33;
  v148 = v34;
  v145 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v27);
  v146 = &protocol witness table for _PaddingLayout;
  v35 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v28);
  v36 = sub_100049F28(&qword_1011E2BA8, &qword_1011E2B90, (uint64_t)&protocol conformance descriptor for _PreferenceActionModifier<A>);
  v143 = v35;
  v144 = v36;
  v141 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v30);
  v142 = &protocol witness table for _AppearanceActionModifier;
  v37 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v31);
  v38 = sub_100C50BC4();
  v150 = v31;
  v151 = (void *)v32;
  v152 = v37;
  v153 = (void *)v38;
  v39 = swift_getOpaqueTypeMetadata2(255, &v150, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v40 = type metadata accessor for Optional(255, a4);
  v150 = v31;
  v151 = (void *)v32;
  v152 = v37;
  v153 = (void *)v38;
  v41 = swift_getOpaqueTypeConformance2(&v150, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v42 = v22;
  v140 = v22[1];
  v43 = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v40);
  v150 = v39;
  v151 = (void *)v40;
  v152 = v41;
  v153 = (void *)v43;
  v44 = swift_getOpaqueTypeMetadata2(255, &v150, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v101 = v44;
  v150 = v39;
  v151 = (void *)v40;
  v152 = v41;
  v153 = (void *)v43;
  v100 = swift_getOpaqueTypeConformance2(&v150, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v45 = type metadata accessor for PagingScrollView(0, v44, v100);
  v102 = *(_QWORD *)(v45 - 8);
  __chkstk_darwin();
  v47 = (char *)&v97 - v46;
  v48 = sub_100044B54(&qword_1011E2BB8);
  v49 = type metadata accessor for ModifiedContent(0, v45, v48);
  v115 = *(_QWORD *)(v49 - 8);
  __chkstk_darwin();
  v98 = (char *)&v97 - v50;
  v51 = swift_getWitnessTable(&protocol conformance descriptor for PagingScrollView<A>, v45);
  v99 = v51;
  v52 = sub_100049F28(&qword_1011E2BC0, &qword_1011E2BB8, (uint64_t)&protocol conformance descriptor for _CoordinateSpaceModifier<A>);
  v138 = v51;
  v139 = v52;
  v53 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v49);
  v150 = v49;
  v151 = (void *)v53;
  v54 = swift_getOpaqueTypeMetadata2(0, &v150, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 0);
  v113 = *(_QWORD *)(v54 - 8);
  __chkstk_darwin();
  v112 = (char *)&v97 - v55;
  v116 = v49;
  v150 = v49;
  v151 = (void *)v53;
  v109 = v53;
  v56 = swift_getOpaqueTypeConformance2(&v150, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 1);
  v150 = v54;
  v151 = (void *)v56;
  v57 = swift_getOpaqueTypeMetadata2(0, &v150, &opaque type descriptor for <<opaque return type of View.scrollClipDisabled(_:)>>, 0);
  v110 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin();
  v108 = (char *)&v97 - v58;
  v114 = v54;
  v150 = v54;
  v151 = (void *)v56;
  v107 = v56;
  v59 = swift_getOpaqueTypeConformance2(&v150, &opaque type descriptor for <<opaque return type of View.scrollClipDisabled(_:)>>, 1);
  v111 = v57;
  v150 = v57;
  v151 = (void *)v59;
  v104 = v59;
  v60 = swift_getOpaqueTypeMetadata2(0, &v150, &opaque type descriptor for <<opaque return type of View.scrollDisabled(_:)>>, 0);
  v106 = *(_QWORD *)(v60 - 8);
  __chkstk_darwin();
  v103 = (char *)&v97 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v105 = (char *)&v97 - v62;
  v64 = GeometryProxy.size.getter(v63);
  v65 = v128;
  v66 = v119;
  v150 = v128;
  v151 = v119;
  v67 = v121;
  v152 = v121;
  v153 = v42;
  v68 = v42;
  v69 = v118;
  v154 = (_QWORD *)v118;
  v70 = type metadata accessor for CarouselView(0, (uint64_t)&v150);
  v71 = v127;
  v72 = (v64 - *(double *)((char *)v127 + *(int *)(v70 + 72))) * 0.5;
  v73 = v120;
  static ScrollPagingBehavior.childPaging.getter();
  v130 = v65;
  v131 = v66;
  v74 = v98;
  v132 = v67;
  v133 = v68;
  v134 = v69;
  v135 = v71;
  v136 = v72;
  v137 = v122;
  PagingScrollView.init(behavior:axis:content:)(v73, 0, sub_100C54158, v129, v101, v100);
  v150 = 0x6C6C6F726373;
  v151 = (void *)0xE600000000000000;
  View.coordinateSpace<A>(name:)(&v150, v45, &type metadata for String, v99, &protocol witness table for String);
  v75 = (*(uint64_t (**)(char *, uint64_t))(v102 + 8))(v47, v45);
  v76 = static ScrollIndicatorVisibility.hidden.getter(v75);
  v77 = static Axis.Set.vertical.getter(v76);
  v78 = v77;
  v79 = static Axis.Set.horizontal.getter(v77);
  v80 = Axis.Set.init(rawValue:)(0);
  v81 = Axis.Set.init(rawValue:)(v80);
  if (Axis.Set.init(rawValue:)(v81 & v78) != v78)
    v80 = Axis.Set.init(rawValue:)(v80 | v78);
  v82 = Axis.Set.init(rawValue:)(v80);
  if (Axis.Set.init(rawValue:)(v82 & v79) != v79)
    v80 = Axis.Set.init(rawValue:)(v80 | v79);
  v83 = v112;
  v84 = v126;
  v85 = v80;
  v86 = v116;
  View.scrollIndicators(_:axes:)(v126, v85, v116, v109);
  (*(void (**)(char *, uint64_t))(v123 + 8))(v84, v124);
  (*(void (**)(char *, uint64_t))(v115 + 8))(v74, v86);
  v87 = v108;
  v88 = v114;
  View.scrollClipDisabled(_:)(1, v114, v107);
  (*(void (**)(char *, uint64_t))(v113 + 8))(v83, v88);
  v89 = Array.count.getter(*v127, v128) < 2;
  v90 = v103;
  v91 = v111;
  View.scrollDisabled(_:)(v89, v111, v104);
  (*(void (**)(char *, uint64_t))(v110 + 8))(v87, v91);
  v92 = v106;
  v93 = *(void (**)(char *, char *, uint64_t))(v106 + 16);
  v94 = v105;
  v93(v105, v90, v60);
  v95 = *(void (**)(char *, uint64_t))(v92 + 8);
  v95(v90, v60);
  v93(v125, v94, v60);
  return ((uint64_t (*)(char *, uint64_t))v95)(v94, v60);
}

uint64_t sub_100C4D244@<X0>(_QWORD *a1@<X0>, void (*a2)(char *, char *, uint64_t)@<X1>, double (*a3)@<D0>(uint64_t a1@<X8>)@<X2>, void *a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X5>, uint64_t a7@<X6>, char *a8@<X8>, double a9@<D0>)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double (*v21)@<D0>(uint64_t@<X8>);
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t WitnessTable;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t OpaqueTypeConformance2;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  void *v82;
  _QWORD *v83;
  uint64_t v84;
  char *v85;
  void (*v86)(char *, char *, uint64_t);
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  __n128 v90;
  _QWORD *v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  _QWORD *v101;
  char *v102;
  char *v103;
  uint64_t v104;
  _QWORD *v105;
  __n128 v106;
  __n128 v107;
  void *v108;
  uint64_t v109;
  uint64_t v110;
  double (*v111)@<D0>(uint64_t@<X8>);
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  double (*v115)@<D0>(uint64_t@<X8>);
  void *v116;
  _QWORD *v117;
  char *v118;
  uint64_t v119;
  _QWORD *v120;
  __n128 v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  uint64_t v132;
  void *v133;
  _QWORD *v134;
  char *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  __n128 v140;
  uint64_t v141;
  void (*v142)(char *, char *, uint64_t);
  char *v143;
  uint64_t v144;
  void (*v145)(char *, uint64_t);
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  _QWORD *v155;
  _QWORD *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  _QWORD *v187;
  void (*v188)(char *, char *, uint64_t);
  uint64_t v189;
  _QWORD *v190;
  _QWORD *v191;
  _QWORD *v192;
  char *v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  _QWORD *v197;
  double (*v198)@<D0>(uint64_t@<X8>);
  _QWORD *v199;
  uint64_t v200;
  void *v201;
  uint64_t v202;
  char v203[8];
  double (*v204)@<D0>(uint64_t@<X8>);
  void *v205;
  uint64_t v206;
  _QWORD *v207;
  uint64_t v208;
  _QWORD *v209;
  _QWORD v210[11];
  double (*v211)@<D0>(uint64_t@<X8>);
  void *v212;
  uint64_t v213;
  void *v214;
  _QWORD *v215;

  v202 = a5;
  v188 = a2;
  v197 = a1;
  v186 = a8;
  v183 = type metadata accessor for Binding(255, a3);
  v182 = type metadata accessor for Optional(0, v183);
  v180 = *(_QWORD *)(v182 - 8);
  __chkstk_darwin();
  v181 = (char *)&v147 - v15;
  v16 = type metadata accessor for Optional(0, a3);
  v184 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin();
  v187 = (uint64_t *)((char *)&v147 - v17);
  v178 = type metadata accessor for ScrollViewProxy(0);
  v177 = *(_QWORD *)(v178 - 8);
  v179 = *(_QWORD *)(v177 + 64);
  __chkstk_darwin();
  v176 = (char *)&v147 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v211 = a3;
  v212 = a4;
  v201 = a4;
  v213 = a5;
  v214 = a6;
  v215 = (_QWORD *)a7;
  v200 = a7;
  v196 = type metadata accessor for CarouselView(0, (uint64_t)&v211);
  v190 = *(_QWORD **)(v196 - 8);
  v195 = v190[8];
  __chkstk_darwin();
  v164 = (char *)&v147 - v19;
  type metadata accessor for PinnedScrollableViews(0);
  __chkstk_darwin();
  v194 = (char *)&v147 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = a3;
  v198 = a3;
  swift_getTupleTypeMetadata2(255, &type metadata for Int, a3, 0, 0);
  v22 = type metadata accessor for Array(255);
  v211 = (double (*)@<D0>(uint64_t@<X8>))a4;
  v212 = &type metadata for Int;
  v213 = a7;
  v214 = &protocol witness table for Int;
  v24 = type metadata accessor for IDView(255, &v211, v23);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for IDView<A, B>, v24);
  v211 = (double (*)@<D0>(uint64_t@<X8>))v24;
  v212 = (void *)WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v211, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 0);
  v27 = swift_getWitnessTable(&protocol conformance descriptor for [A], v22);
  v211 = (double (*)@<D0>(uint64_t@<X8>))v22;
  v212 = v21;
  v213 = OpaqueTypeMetadata2;
  v214 = (void *)v27;
  v215 = a6;
  v28 = type metadata accessor for ForEach(255, &v211);
  v211 = (double (*)@<D0>(uint64_t@<X8>))v24;
  v212 = (void *)WitnessTable;
  v210[10] = swift_getOpaqueTypeConformance2(&v211, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v153 = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v28);
  v29 = type metadata accessor for LazyHStack(0, v28, v153);
  v189 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin();
  v154 = (char *)&v147 - v30;
  v31 = sub_100044B54(&qword_1011E2B88);
  v148 = v29;
  v32 = type metadata accessor for ModifiedContent(0, v29, v31);
  v159 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin();
  v155 = (uint64_t *)((char *)&v147 - v33);
  v150 = v32;
  v34 = type metadata accessor for ModifiedContent(0, v32, &type metadata for _PaddingLayout);
  v160 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin();
  v156 = (uint64_t *)((char *)&v147 - v35);
  v36 = sub_100044B54(&qword_1011E2B90);
  v152 = v34;
  v37 = type metadata accessor for ModifiedContent(0, v34, v36);
  v162 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin();
  v191 = (uint64_t *)((char *)&v147 - v38);
  v158 = v37;
  v39 = type metadata accessor for ModifiedContent(0, v37, &type metadata for _AppearanceActionModifier);
  v172 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin();
  v192 = (uint64_t *)((char *)&v147 - v40);
  v41 = sub_100044B54(&qword_1011E2B98);
  v42 = swift_getWitnessTable(&protocol conformance descriptor for LazyHStack<A>, v29);
  v43 = sub_100049F28(&qword_1011E2BA0, &qword_1011E2B88, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
  v210[8] = v42;
  v210[9] = v43;
  v149 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v32);
  v210[6] = v149;
  v210[7] = &protocol witness table for _PaddingLayout;
  v44 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v34);
  v151 = v44;
  v45 = sub_100049F28(&qword_1011E2BA8, &qword_1011E2B90, (uint64_t)&protocol conformance descriptor for _PreferenceActionModifier<A>);
  v210[4] = v44;
  v210[5] = v45;
  v157 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v37);
  v210[2] = v157;
  v210[3] = &protocol witness table for _AppearanceActionModifier;
  v46 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v39);
  v47 = sub_100C50BC4();
  v211 = (double (*)@<D0>(uint64_t@<X8>))v39;
  v212 = (void *)v41;
  v213 = v46;
  v214 = (void *)v47;
  v48 = swift_getOpaqueTypeMetadata2(0, &v211, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v174 = *(_QWORD *)(v48 - 8);
  __chkstk_darwin();
  v193 = (char *)&v147 - v49;
  v173 = v39;
  v211 = (double (*)@<D0>(uint64_t@<X8>))v39;
  v212 = (void *)v41;
  v169 = v41;
  v163 = v46;
  v213 = v46;
  v214 = (void *)v47;
  v161 = v47;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v211, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v199 = a6;
  v210[1] = a6[1];
  v51 = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v16);
  v175 = v48;
  v211 = (double (*)@<D0>(uint64_t@<X8>))v48;
  v212 = (void *)v16;
  v185 = v16;
  v167 = OpaqueTypeConformance2;
  v213 = OpaqueTypeConformance2;
  v214 = (void *)v51;
  v165 = v51;
  v171 = swift_getOpaqueTypeMetadata2(0, &v211, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v170 = *(_QWORD *)(v171 - 8);
  __chkstk_darwin();
  v166 = (char *)&v147 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v168 = (char *)&v147 - v53;
  v55 = static VerticalAlignment.center.getter(v54);
  v56 = v196;
  v57 = *(_QWORD *)((char *)v197 + *(int *)(v196 + 80));
  v204 = v198;
  v205 = v201;
  v206 = v202;
  v207 = a6;
  v208 = v200;
  v209 = v197;
  v58 = v194;
  v59 = v153;
  sub_100C4E9B4();
  v60 = v154;
  v61 = LazyHStack.init(alignment:spacing:pinnedViews:content:)(v55, v57, 0, v58, sub_100C54170, v203, v28, v59);
  v211 = sub_100C4EA18;
  v212 = 0;
  v62 = static Alignment.center.getter(v61);
  v64 = v63;
  v65 = sub_100007E8C(&qword_1011E2D30);
  v66 = sub_100049F28(&qword_1011E2D38, &qword_1011E2D30, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
  v67 = v155;
  v68 = v56;
  v69 = v64;
  v70 = v148;
  View.background<A>(_:alignment:)(v155, &v211, v62, v69, v148, v65, v42, v66);
  v71 = v164;
  v72 = (*(uint64_t (**)(char *, uint64_t))(v189 + 8))(v60, v70);
  v73 = static Edge.Set.horizontal.getter(v72);
  v74 = v156;
  v75 = v150;
  View.padding(_:_:)(v156, v73, *(_QWORD *)&a9, 0, v150, v149);
  (*(void (**)(_QWORD *, uint64_t))(v159 + 8))(v67, v75);
  v76 = v190;
  v77 = (_QWORD *)v190[2];
  v78 = v68;
  ((void (*)(char *, _QWORD *, uint64_t))v77)(v71, v197, v68);
  v79 = *((unsigned __int8 *)v76 + 80);
  v189 = ((v79 + 56) & ~v79) + v195;
  v80 = (v79 + 56) & ~v79;
  v194 = (char *)v80;
  v195 = v79 | 7;
  v81 = (_QWORD *)swift_allocObject(&unk_10110B0F0, v189, v79 | 7);
  v82 = v201;
  v81[2] = v198;
  v81[3] = v82;
  v83 = v199;
  v81[4] = v202;
  v81[5] = v83;
  v84 = v200;
  v81[6] = v200;
  v85 = (char *)v81 + v80;
  v86 = (void (*)(char *, char *, uint64_t))v76[4];
  v86(v85, v71, v68);
  v87 = sub_100C5420C();
  v88 = sub_100C54250();
  v89 = v152;
  View.onPreferenceChange<A>(_:perform:)(v191, &type metadata for ScrollViewOffsetKey, sub_100C54180, v81, v152, &type metadata for ScrollViewOffsetKey, v151, v87, v88);
  v90 = swift_release();
  v91 = v74;
  v92 = v84;
  (*(void (**)(_QWORD *, uint64_t, __n128))(v160 + 8))(v91, v89, v90);
  v93 = v197;
  v190 = v77;
  ((void (*)(char *, _QWORD *, uint64_t))v77)(v71, v197, v78);
  v94 = v177;
  v95 = v176;
  v96 = v178;
  (*(void (**)(char *, _QWORD, uint64_t))(v177 + 16))(v176, v188, v178);
  v97 = *(unsigned __int8 *)(v94 + 80);
  v98 = (v189 + v97) & ~v97;
  v99 = swift_allocObject(&unk_10110B118, v98 + v179, v195 | v97);
  v100 = v201;
  *(_QWORD *)(v99 + 16) = v198;
  *(_QWORD *)(v99 + 24) = v100;
  v101 = v199;
  *(_QWORD *)(v99 + 32) = v202;
  *(_QWORD *)(v99 + 40) = v101;
  v102 = &v194[v99];
  *(_QWORD *)(v99 + 48) = v92;
  v103 = v71;
  v188 = v86;
  v86(v102, v71, v196);
  (*(void (**)(uint64_t, char *, uint64_t))(v94 + 32))(v99 + v98, v95, v96);
  v104 = v158;
  v105 = v191;
  View.onAppear(perform:)(v192, sub_100C544CC, v99, v158, v157);
  v106 = swift_release();
  (*(void (**)(_QWORD *, uint64_t, __n128))(v162 + 8))(v105, v104, v106);
  v108 = (void *)v93[2];
  if (v108)
  {
    v109 = v93[3];
    v211 = (double (*)@<D0>(uint64_t@<X8>))v93[1];
    v212 = v108;
    v213 = v109;
    swift_retain();
    swift_retain();
    v110 = sub_100007E8C(&qword_1011E2D18);
    Binding.wrappedValue.getter(v210, v110);
    swift_release();
    v107 = swift_release();
    v111 = (double (*)@<D0>(uint64_t@<X8>))v210[0];
  }
  else
  {
    v111 = 0;
  }
  v211 = v111;
  LOBYTE(v212) = v108 == 0;
  v112 = v196;
  ((void (*)(char *, _QWORD *, uint64_t, __n128))v190)(v71, v93, v196, v107);
  v113 = v189;
  v114 = swift_allocObject(&unk_10110B140, v189, v195);
  v115 = v198;
  v116 = v201;
  *(_QWORD *)(v114 + 16) = v198;
  *(_QWORD *)(v114 + 24) = v116;
  v117 = v199;
  *(_QWORD *)(v114 + 32) = v202;
  *(_QWORD *)(v114 + 40) = v117;
  v118 = &v194[v114];
  *(_QWORD *)(v114 + 48) = v200;
  v188(v118, v103, v112);
  v119 = v173;
  v120 = v192;
  View.onChange<A>(of:initial:_:)(&v211, 0, sub_100C54578, v114, v173, v169, v163, v161);
  v121 = swift_release();
  (*(void (**)(_QWORD *, uint64_t, __n128))(v172 + 8))(v120, v119, v121);
  v122 = (char *)v93 + *(int *)(v112 + 64);
  v123 = v180;
  v124 = v112;
  v125 = v181;
  v126 = v182;
  (*(void (**)(char *, char *, uint64_t))(v180 + 16))(v181, v122, v182);
  v127 = v103;
  v128 = v183;
  v129 = *(_QWORD *)(v183 - 8);
  v130 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v129 + 48))(v125, 1, v183) != 1)
  {
    Binding.wrappedValue.getter(v187, v128);
    v130 = 0;
    v123 = v129;
    v126 = v128;
  }
  (*(void (**)(char *, uint64_t))(v123 + 8))(v125, v126);
  v131 = v187;
  (*(void (**)(_QWORD *, uint64_t, uint64_t, double (*)@<D0>(uint64_t@<X8>)))(*((_QWORD *)v115 - 1)
                                                                                               + 56))(v187, v130, 1, v115);
  ((void (*)(char *, _QWORD *, uint64_t))v190)(v127, v197, v124);
  v132 = swift_allocObject(&unk_10110B168, v113, v195);
  v133 = v201;
  *(_QWORD *)(v132 + 16) = v115;
  *(_QWORD *)(v132 + 24) = v133;
  v134 = v199;
  *(_QWORD *)(v132 + 32) = v202;
  *(_QWORD *)(v132 + 40) = v134;
  v135 = &v194[v132];
  *(_QWORD *)(v132 + 48) = v200;
  v188(v135, v127, v124);
  v136 = v166;
  v137 = v175;
  v138 = v185;
  v139 = v193;
  View.onChange<A>(of:initial:_:)(v131, 0, sub_100C54610, v132, v175, v185, v167, v165);
  v140 = swift_release();
  (*(void (**)(_QWORD *, uint64_t, __n128))(v184 + 8))(v131, v138, v140);
  (*(void (**)(char *, uint64_t))(v174 + 8))(v139, v137);
  v141 = v170;
  v142 = *(void (**)(char *, char *, uint64_t))(v170 + 16);
  v143 = v168;
  v144 = v171;
  v142(v168, v136, v171);
  v145 = *(void (**)(char *, uint64_t))(v141 + 8);
  v145(v136, v144);
  v142(v186, v143, v144);
  return ((uint64_t (*)(char *, uint64_t))v145)(v143, v144);
}

uint64_t sub_100C4E118@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  uint64_t v12;
  uint64_t TupleTypeMetadata2;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  char *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  _QWORD *v40;
  uint64_t OpaqueTypeConformance2;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  char *v46;
  void (*v47)(char *, uint64_t);
  uint64_t v49;
  uint64_t KeyPath;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t WitnessTable;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  uint64_t v74;
  void *v75;
  unint64_t v76;
  uint64_t v77;
  __int128 v78;
  uint64_t v79;
  __int128 v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;

  v52 = a4;
  v66 = a7;
  *(_QWORD *)&v80 = a2;
  *((_QWORD *)&v80 + 1) = a3;
  v51 = a3;
  v81 = a4;
  v82 = a5;
  v83 = a6;
  v57 = type metadata accessor for CarouselView(0, (uint64_t)&v80);
  v56 = *(_QWORD *)(v57 - 8);
  v59 = *(_QWORD *)(v56 + 64);
  __chkstk_darwin();
  v54 = (char *)&v49 - v12;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, &type metadata for Int, a2, 0, 0);
  v14 = type metadata accessor for Array(255);
  v63 = v14;
  *(_QWORD *)&v80 = a3;
  *((_QWORD *)&v80 + 1) = &type metadata for Int;
  v81 = a6;
  v82 = &protocol witness table for Int;
  v15 = a6;
  v17 = type metadata accessor for IDView(255, &v80, v16);
  v60 = v17;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for IDView<A, B>, v17);
  *(_QWORD *)&v80 = v17;
  *((_QWORD *)&v80 + 1) = WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v80, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 0);
  v62 = OpaqueTypeMetadata2;
  v61 = swift_getWitnessTable(&protocol conformance descriptor for [A], v14);
  *(_QWORD *)&v80 = v14;
  *((_QWORD *)&v80 + 1) = a2;
  v81 = OpaqueTypeMetadata2;
  v82 = (void *)v61;
  v83 = (uint64_t)a5;
  v64 = type metadata accessor for ForEach(0, &v80);
  v65 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin();
  v53 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v55 = (char *)&v49 - v20;
  *(_QWORD *)&v78 = *a1;
  v21 = v78;
  v22 = type metadata accessor for Array(0);
  v23 = swift_getWitnessTable(&protocol conformance descriptor for [A], v22);
  RandomAccessCollection<>.indices.getter(v22, v23, &protocol witness table for Int);
  v73 = v80;
  v77 = v21;
  v24 = sub_100007E8C(&qword_1011E2CF8);
  v25 = sub_100C54000();
  v75 = &protocol witness table for Int;
  v76 = v25;
  v26 = swift_getWitnessTable(&protocol conformance descriptor for <> Range<A>, v24);
  v27 = swift_getWitnessTable(&protocol conformance descriptor for [A], v22);
  zip<A, B>(_:_:)(&v78, &v73, &v77, v24, v22, v26, v27);
  v73 = v78;
  v74 = v79;
  *(_QWORD *)&v80 = v24;
  *((_QWORD *)&v80 + 1) = v22;
  v81 = v26;
  v82 = (void *)v27;
  v28 = type metadata accessor for Zip2Sequence(0, &v80);
  v29 = swift_getWitnessTable(&protocol conformance descriptor for Zip2Sequence<A, B>, v28);
  *(_QWORD *)&v78 = Array.init<A>(_:)(&v73, TupleTypeMetadata2, v28, v29);
  v30 = v51;
  v67 = a2;
  v68 = v51;
  v31 = v52;
  v69 = v52;
  v70 = a5;
  v32 = a5;
  v71 = v15;
  KeyPath = swift_getKeyPath(&unk_100EF0180);
  v33 = v56;
  v34 = v54;
  v35 = a1;
  v36 = v57;
  (*(void (**)(char *, _QWORD *, uint64_t))(v56 + 16))(v54, v35, v57);
  v37 = *(unsigned __int8 *)(v33 + 80);
  v38 = (v37 + 56) & ~v37;
  v39 = (char *)swift_allocObject(&unk_10110B190, v38 + v59, v37 | 7);
  *((_QWORD *)v39 + 2) = a2;
  *((_QWORD *)v39 + 3) = v30;
  *((_QWORD *)v39 + 4) = v31;
  *((_QWORD *)v39 + 5) = v32;
  *((_QWORD *)v39 + 6) = v15;
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(&v39[v38], v34, v36);
  v40 = (_QWORD *)swift_allocObject(&unk_10110B1B8, 72, 7);
  v40[2] = a2;
  v40[3] = v30;
  v40[4] = v31;
  v40[5] = v32;
  v40[6] = v15;
  v40[7] = sub_100C54898;
  v40[8] = v39;
  *(_QWORD *)&v80 = v60;
  *((_QWORD *)&v80 + 1) = WitnessTable;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v80, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v42 = v53;
  ForEach<>.init(_:id:content:)(&v78, KeyPath, sub_100C54054, v40, v63, v62, v61, v32, OpaqueTypeConformance2);
  v72 = OpaqueTypeConformance2;
  v43 = v64;
  swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v64);
  v44 = v65;
  v45 = *(void (**)(char *, char *, uint64_t))(v65 + 16);
  v46 = v55;
  v45(v55, v42, v43);
  v47 = *(void (**)(char *, uint64_t))(v44 + 8);
  v47(v42, v43);
  v45(v66, v46, v43);
  return ((uint64_t (*)(char *, uint64_t))v47)(v46, v43);
}

uint64_t sub_100C4E5F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, void *a7@<X6>, uint64_t a8@<X7>, char *a9@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v22;
  char *v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char *v33;
  void *v34;
  char *v35;
  __n128 v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  char *v39;
  void (*v40)(char *, uint64_t);
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t WitnessTable;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;

  v53 = a6;
  v54 = a7;
  v52 = a4;
  v57 = a1;
  v58 = a4;
  v55 = a9;
  v59 = a5;
  v60 = a6;
  v61 = a7;
  v62 = a8;
  v44 = a8;
  v13 = type metadata accessor for CarouselView(0, (uint64_t)&v58);
  v14 = *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64);
  v49 = *(_QWORD *)(v13 - 8);
  v50 = v14;
  __chkstk_darwin();
  v56 = (char *)&v42 - v15;
  v46 = *((_QWORD *)a5 - 1);
  v16 = __chkstk_darwin();
  v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = (uint64_t)a5;
  v59 = &type metadata for Int;
  v60 = a8;
  v61 = &protocol witness table for Int;
  v19 = type metadata accessor for IDView(0, &v58, v16);
  v51 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin();
  v43 = (char *)&v42 - v20;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for IDView<A, B>, v19);
  v58 = v19;
  v59 = (void *)WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v58, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 0);
  v48 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin();
  v23 = (char *)&v42 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin();
  v45 = (char *)&v42 - v25;
  (*(void (**)(uint64_t, __n128))(a3 + *(int *)(v13 + 76)))(a2, v24);
  v58 = v57;
  v26 = v44;
  View.id<A>(_:)(&v58, a5, &type metadata for Int, v44, &protocol witness table for Int);
  (*(void (**)(char *, void *))(v46 + 8))(v18, a5);
  v27 = v49;
  v28 = a3;
  v29 = v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v56, v28, v13);
  v30 = *(unsigned __int8 *)(v27 + 80);
  v31 = (v30 + 56) & ~v30;
  v32 = (v50 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
  v33 = (char *)swift_allocObject(&unk_10110B1E0, v32 + 8, v30 | 7);
  *((_QWORD *)v33 + 2) = v52;
  *((_QWORD *)v33 + 3) = a5;
  v34 = v54;
  *((_QWORD *)v33 + 4) = v53;
  *((_QWORD *)v33 + 5) = v34;
  *((_QWORD *)v33 + 6) = v26;
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))(&v33[v31], v56, v29);
  *(_QWORD *)&v33[v32] = v57;
  v35 = v43;
  View.onTapGesture(count:perform:)(1, sub_100C5405C, v33, v19, WitnessTable);
  v36 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v51 + 8))(v35, v19, v36);
  v37 = v48;
  v38 = *(void (**)(char *, char *, uint64_t))(v48 + 16);
  v39 = v45;
  v38(v45, v23, OpaqueTypeMetadata2);
  v40 = *(void (**)(char *, uint64_t))(v37 + 8);
  v40(v23, OpaqueTypeMetadata2);
  v38(v55, v39, OpaqueTypeMetadata2);
  return ((uint64_t (*)(char *, uint64_t))v40)(v39, OpaqueTypeMetadata2);
}

double sub_100C4E91C(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  __int128 v7;
  double result;
  _OWORD v9[3];
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = 0;
  if ((a2 & 1) != 0)
    v6 = static Animation.default.getter(a1);
  __chkstk_darwin();
  v7 = *(_OWORD *)(a3 + 32);
  v9[1] = *(_OWORD *)(a3 + 16);
  v9[2] = v7;
  v10 = *(_QWORD *)(a3 + 48);
  v11 = v3;
  v12 = a1;
  withAnimation<A>(_:_:)(v6, sub_100C54060, v9, (char *)&type metadata for () + 8);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100C4E9B4()
{
  uint64_t v0;
  uint64_t v1;
  int v3;

  v0 = type metadata accessor for PinnedScrollableViews(0);
  v3 = 0;
  v1 = sub_100048748(&qword_1011E0F30, (uint64_t (*)(uint64_t))&type metadata accessor for PinnedScrollableViews, (uint64_t)&protocol conformance descriptor for PinnedScrollableViews);
  return dispatch thunk of OptionSet.init(rawValue:)(&v3, v0, v1);
}

double sub_100C4EA18@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  double result;
  _QWORD v10[2];

  v2 = type metadata accessor for NamedCoordinateSpace(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = static Color.clear.getter(v4);
  v10[0] = 0x6C6C6F726373;
  v10[1] = 0xE600000000000000;
  static CoordinateSpaceProtocol<>.named<A>(_:)(v10, &type metadata for String, &protocol witness table for String);
  v8 = GeometryProxy.frame<A>(in:)(v6, v2, &protocol witness table for NamedCoordinateSpace);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  result = -v8;
  *(_QWORD *)a1 = v7;
  *(double *)(a1 + 8) = -v8;
  return result;
}

uint64_t sub_100C4EAFC(double *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  double v19;
  uint64_t v20;
  uint64_t result;
  double v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  _QWORD v30[5];

  v29 = a7;
  v13 = type metadata accessor for LayoutDirection(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin();
  v16 = (char *)&v30[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v18 = (char *)&v30[-1] - v17;
  v19 = *a1;
  v20 = a3;
  v30[0] = a3;
  v30[1] = a4;
  v30[2] = a5;
  v30[3] = a6;
  v30[4] = v29;
  result = type metadata accessor for CarouselView(0, (uint64_t)v30);
  v22 = ceil(v19 / *(double *)((char *)a2 + *(int *)(result + 100)));
  if ((~*(_QWORD *)&v22 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v22 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v22 >= 9.22337204e18)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v23 = result;
  v24 = (uint64_t)v22;
  sub_100C315D4((uint64_t)v18);
  (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, enum case for LayoutDirection.rightToLeft(_:), v13);
  v25 = static LayoutDirection.== infix(_:_:)(v18, v16);
  v26 = *(void (**)(char *, uint64_t))(v14 + 8);
  v26(v16, v13);
  v26(v18, v13);
  if ((v25 & 1) == 0)
    return sub_100C4ECC0(v24, v23);
  result = Array.count.getter(*a2, v20);
  v27 = result - 1;
  if (__OFSUB__(result, 1))
    goto LABEL_11;
  v28 = __OFSUB__(v27, v24);
  v24 = v27 - v24;
  if (!v28)
    return sub_100C4ECC0(v24, v23);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_100C4ECC0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t WitnessTable;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  __int128 *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  void (**v22)(uint64_t, char *);
  void (*v23)(uint64_t, char *);
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, char *);
  uint64_t v40;
  __int128 *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;

  v3 = v2;
  v6 = *(_QWORD *)(a2 + 16);
  v46 = type metadata accessor for Binding(255, v6);
  v7 = type metadata accessor for Optional(0, v46);
  v43 = *(_QWORD *)(v7 - 8);
  v44 = v7;
  __chkstk_darwin();
  v45 = (char *)&v37 - v8;
  v9 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v42 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v2;
  *(_QWORD *)&v47 = *v2;
  v12 = type metadata accessor for Array(0);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v12);
  result = Collection.isEmpty.getter(v12, WitnessTable);
  if ((result & 1) != 0)
    return result;
  result = Array.count.getter(v11, v6);
  v15 = result - 1;
  if (__OFSUB__(result, 1))
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v15 < 0)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  if (v15 >= (a1 & ~(a1 >> 63)))
    v16 = a1 & ~(a1 >> 63);
  else
    v16 = result - 1;
  v17 = (__int128 *)((char *)v2 + *(int *)(a2 + 92));
  v19 = *(_QWORD *)v17;
  v18 = *((_QWORD *)v17 + 1);
  v41 = v17;
  *(_QWORD *)&v47 = v19;
  *((_QWORD *)&v47 + 1) = v18;
  v20 = sub_100007E8C(&qword_1011E2D10);
  result = (uint64_t)State.wrappedValue.getter(&v49, v20);
  if (v16 != v49)
  {
    *(_QWORD *)&v47 = v19;
    *((_QWORD *)&v47 + 1) = v18;
    v49 = v16;
    State.wrappedValue.setter(&v49, v20);
    v22 = (void (**)(uint64_t, char *))((char *)v2 + *(int *)(a2 + 88));
    v23 = *v22;
    v24 = v42;
    if (*v22)
    {
      v25 = (uint64_t)v22[1];
      v39 = v23;
      v40 = v25;
      *(_QWORD *)&v47 = v19;
      *((_QWORD *)&v47 + 1) = v18;
      State.wrappedValue.getter(&v49, v20);
      v38 = v49;
      *(_QWORD *)&v47 = v19;
      *((_QWORD *)&v47 + 1) = v18;
      State.wrappedValue.getter(&v49, v20);
      Array.subscript.getter(v49, v11, v6);
      v39(v38, v24);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v24, v6);
    }
    v40 = v20;
    v26 = v2[2];
    if (v26)
    {
      v27 = v2[3];
      v28 = v2[1];
      *(_QWORD *)&v47 = v19;
      *((_QWORD *)&v47 + 1) = v18;
      swift_retain();
      swift_retain();
      State.wrappedValue.getter(&v49, v40);
      *(_QWORD *)&v47 = v28;
      *((_QWORD *)&v47 + 1) = v26;
      v48 = v27;
      v29 = sub_100007E8C(&qword_1011E2D18);
      Binding.wrappedValue.setter(&v49, v29);
      swift_release();
      v21 = swift_release();
    }
    v30 = (char *)v2 + *(int *)(a2 + 64);
    v32 = v43;
    v31 = v44;
    v33 = v45;
    (*(void (**)(char *, char *, uint64_t, __n128))(v43 + 16))(v45, v30, v44, v21);
    v34 = v46;
    v35 = *(_QWORD *)(v46 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v46) != 1)
    {
      v36 = *v3;
      v47 = *v41;
      State.wrappedValue.getter(&v49, v40);
      Array.subscript.getter(v49, v36, v6);
      Binding.wrappedValue.setter(v24, v34);
      v32 = v35;
      v31 = v34;
    }
    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v33, v31);
  }
  return result;
}

uint64_t sub_100C4EFBC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t TupleTypeMetadata2;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t *, uint64_t);
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  char *v53;
  uint64_t v54;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t WitnessTable;
  uint64_t v60;
  uint64_t v61;
  __n128 v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  void (*v68)(char *, uint64_t);
  char *v69;
  char *v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;

  v81 = a2;
  v78 = *(_QWORD *)(a3 - 8);
  __chkstk_darwin();
  v77 = (char **)((char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = type metadata accessor for Binding(0, v14);
  v82 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin();
  v75 = (char *)&v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v79 = (char *)&v71 - v17;
  v80 = a3;
  v84 = a3;
  v85 = a4;
  v86 = a5;
  v87 = a6;
  v76 = a6;
  v88 = a7;
  v18 = type metadata accessor for CarouselView(0, (uint64_t)&v84);
  v73 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin();
  v71 = (char *)&v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v72 = (char *)&v71 - v20;
  v21 = sub_100044B54((uint64_t *)&unk_1011E2D50);
  v22 = type metadata accessor for Optional(255, v15);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, v21, v22, 0, 0);
  v74 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  __chkstk_darwin();
  v25 = (uint64_t *)((char *)&v71 - v24);
  sub_100007E8C(&qword_1011E2B80);
  __chkstk_darwin();
  v27 = (char *)&v71 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v29 = (char *)&v71 - v28;
  v30 = type metadata accessor for ScrollViewProxy(0);
  v31 = *(_QWORD *)(v30 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v29, v81, v30);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v29, 0, 1, v30);
  sub_10004A160((uint64_t)v29, (uint64_t)v27, &qword_1011E2B80);
  v32 = sub_100007E8C(&qword_1011E2CF0);
  State.wrappedValue.setter(v27, v32);
  sub_10004FF60((uint64_t)v29, &qword_1011E2B80);
  v34 = a1[1];
  v33 = a1[2];
  v35 = a1[3];
  v81 = v18;
  v36 = *(int *)(v18 + 64);
  v37 = a1;
  v38 = (char *)v25 + *(int *)(TupleTypeMetadata2 + 48);
  *v25 = v34;
  v25[1] = v33;
  v25[2] = v35;
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v38, (char *)a1 + v36, v22);
  if (v33)
  {
    v39 = v82;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v38, 1, v15) == 1)
    {
      v84 = v34;
      v85 = v33;
      v86 = v35;
      sub_1002CF810(v34, v33);
      swift_retain();
      swift_retain();
      v40 = sub_100007E8C(&qword_1011E2D18);
      Binding.wrappedValue.getter(&v83, v40);
      v41 = v83;
      v42 = v72;
      v43 = v73;
      v44 = *(void (**)(char *, uint64_t *, uint64_t))(v73 + 16);
      v45 = a1;
      v46 = v81;
      v44(v72, a1, v81);
      v47 = v80;
      if (v41 < 0)
      {
        v68 = *(void (**)(char *, uint64_t))(v43 + 8);
        v68(v42, v46);
        v69 = v71;
        v44(v71, v45, v46);
        v68(v69, v46);
      }
      else
      {
        v48 = Array.count.getter(*(_QWORD *)v42, v80);
        v49 = v42;
        v50 = v48;
        v51 = *(void (**)(char *, uint64_t))(v43 + 8);
        v51(v49, v46);
        if (v41 >= v50)
        {
          v70 = v71;
          v44(v71, v45, v46);
          if (!v41)
            Array.count.getter(*v70, v47);
          v51((char *)v70, v46);
        }
        else
        {
          sub_100C4E91C(v41, 1, v46);
        }
      }
      swift_release();
      swift_release();
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v79, v38, v15);
      v83 = *a1;
      sub_1002CF810(v34, v33);
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      v56 = v77;
      Binding.wrappedValue.getter(v77, v15);
      v57 = v80;
      v58 = type metadata accessor for Array(0);
      WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v58);
      Collection<>.firstIndex(of:)(&v84, v56, v58, WitnessTable, *(_QWORD *)(v76 + 8));
      (*(void (**)(_QWORD *, uint64_t))(v78 + 8))(v56, v57);
      swift_bridgeObjectRelease();
      if (v85 != 1)
      {
        v60 = v84;
        v84 = v34;
        v85 = v33;
        v86 = v35;
        v61 = sub_100007E8C(&qword_1011E2D18);
        Binding.wrappedValue.getter(&v83, v61);
        if (v60 == v83)
          sub_100C4E91C(v60, 1, v81);
      }
      swift_release();
      v62 = swift_release();
      (*(void (**)(char *, uint64_t, __n128))(v82 + 8))(v79, v15, v62);
    }
  }
  else
  {
    v52 = v74;
    v53 = v75;
    v54 = v82;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v38, 1, v15) == 1)
      return (*(uint64_t (**)(uint64_t *, uint64_t))(v52 + 8))(v25, TupleTypeMetadata2);
    (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v53, v38, v15);
    v83 = *v37;
    swift_bridgeObjectRetain();
    v63 = v77;
    Binding.wrappedValue.getter(v77, v15);
    v64 = v80;
    v65 = type metadata accessor for Array(0);
    v66 = swift_getWitnessTable(&protocol conformance descriptor for [A], v65);
    Collection<>.firstIndex(of:)(&v84, v63, v65, v66, *(_QWORD *)(v76 + 8));
    (*(void (**)(_QWORD *, uint64_t))(v78 + 8))(v63, v64);
    v67 = swift_bridgeObjectRelease();
    if (v85 != 1)
      v67.n128_f64[0] = sub_100C4E91C(v84, 1, v81);
    (*(void (**)(char *, uint64_t, __n128))(v54 + 8))(v53, v15, v67);
  }
  return sub_1002CF744(*v25, v25[1]);
}

double sub_100C4F614(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if ((*(_BYTE *)(a2 + 8) & 1) == 0)
  {
    v9 = *(_QWORD *)a2;
    *(_QWORD *)&v14 = a4;
    *((_QWORD *)&v14 + 1) = a5;
    v15 = a6;
    v16 = a7;
    v17 = a8;
    v10 = type metadata accessor for CarouselView(0, (uint64_t)&v14);
    v14 = *(_OWORD *)(a3 + *(int *)(v10 + 92));
    v11 = sub_100007E8C(&qword_1011E2D10);
    State.wrappedValue.getter(&v13, v11);
    if (v9 != v13)
      return sub_100C4E91C(v9, *(_BYTE *)(a3 + *(int *)(v10 + 68)), v10);
  }
  return result;
}

uint64_t sub_100C4F6B0(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v22;
  uint64_t WitnessTable;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v27 = a6;
  v28 = a8;
  v13 = type metadata accessor for Optional(0, a4);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin();
  v16 = (char *)&v27 - v15;
  v17 = *(_QWORD *)(a4 - 8);
  v18 = __chkstk_darwin();
  v20 = (char *)&v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v14 + 16))(v16, a2, v13, v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v16, 1, a4) == 1)
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v20, v16, a4);
  v33 = *a3;
  v22 = type metadata accessor for Array(0);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v22);
  Collection<>.firstIndex(of:)(&v29, v20, v22, WitnessTable, *(_QWORD *)(a7 + 8));
  if (BYTE8(v29) != 1)
  {
    v24 = v29;
    *(_QWORD *)&v29 = a4;
    *((_QWORD *)&v29 + 1) = a5;
    v30 = v27;
    v31 = a7;
    v32 = v28;
    v25 = type metadata accessor for CarouselView(0, (uint64_t)&v29);
    v29 = *(_OWORD *)((char *)a3 + *(int *)(v25 + 92));
    v26 = sub_100007E8C(&qword_1011E2D10);
    State.wrappedValue.getter(&v33, v26);
    if (v24 != v33)
      sub_100C4E91C(v24, *((_BYTE *)a3 + *(int *)(v25 + 68)), v25);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v20, a4);
}

uint64_t sub_100C4F890@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t TupleTypeMetadata2;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, _QWORD *, uint64_t);
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t OpaqueTypeConformance2;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  char *v53;
  void (*v54)(char *, uint64_t);
  uint64_t KeyPath;
  uint64_t v57;
  char *v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t WitnessTable;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  uint64_t v77;
  void *v78;
  unint64_t v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  __int128 v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;

  v60 = a6;
  v59 = a4;
  v57 = a3;
  v69 = a7;
  *(_QWORD *)&v83 = a2;
  *((_QWORD *)&v83 + 1) = a3;
  v84 = a4;
  v85 = a5;
  v86 = a6;
  v61 = type metadata accessor for CarouselView(0, (uint64_t)&v83);
  v10 = *(_QWORD *)(v61 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin();
  v58 = (char *)&KeyPath - v12;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, &type metadata for Int, a2, 0, 0);
  v14 = type metadata accessor for Array(255);
  v67 = v14;
  v15 = sub_100044B54(&qword_1011E2BC8);
  v66 = v15;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v14);
  *(_QWORD *)&v83 = v14;
  *((_QWORD *)&v83 + 1) = a2;
  v84 = v15;
  v85 = WitnessTable;
  v86 = a5;
  v62 = type metadata accessor for ForEach(0, &v83);
  v68 = *(_QWORD *)(v62 - 8);
  __chkstk_darwin();
  v63 = (char *)&KeyPath - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v64 = (char *)&KeyPath - v17;
  v19 = a1;
  *(_QWORD *)&v81 = *a1;
  v18 = v81;
  v20 = type metadata accessor for Array(0);
  v21 = swift_getWitnessTable(&protocol conformance descriptor for [A], v20);
  RandomAccessCollection<>.indices.getter(v20, v21, &protocol witness table for Int);
  v76 = v83;
  v80 = v18;
  v22 = sub_100007E8C(&qword_1011E2CF8);
  v23 = sub_100C54000();
  v78 = &protocol witness table for Int;
  v79 = v23;
  v24 = swift_getWitnessTable(&protocol conformance descriptor for <> Range<A>, v22);
  v25 = swift_getWitnessTable(&protocol conformance descriptor for [A], v20);
  zip<A, B>(_:_:)(&v81, &v76, &v80, v22, v20, v24, v25);
  v76 = v81;
  v77 = v82;
  *(_QWORD *)&v83 = v22;
  *((_QWORD *)&v83 + 1) = v20;
  v84 = v24;
  v85 = v25;
  v26 = type metadata accessor for Zip2Sequence(0, &v83);
  v27 = swift_getWitnessTable(&protocol conformance descriptor for Zip2Sequence<A, B>, v26);
  *(_QWORD *)&v81 = Array.init<A>(_:)(&v76, TupleTypeMetadata2, v26, v27);
  v28 = v57;
  v70 = a2;
  v71 = v57;
  v29 = v59;
  v72 = v59;
  v73 = a5;
  v30 = a5;
  v31 = v60;
  v74 = v60;
  KeyPath = swift_getKeyPath(&unk_100EF0180);
  v32 = v10;
  v33 = *(void (**)(char *, _QWORD *, uint64_t))(v10 + 16);
  v34 = v58;
  v35 = v61;
  v33(v58, v19, v61);
  v36 = *(unsigned __int8 *)(v32 + 80);
  v37 = v32;
  v38 = (v36 + 56) & ~v36;
  v39 = (char *)swift_allocObject(&unk_10110B050, v38 + v11, v36 | 7);
  *((_QWORD *)v39 + 2) = a2;
  *((_QWORD *)v39 + 3) = v28;
  *((_QWORD *)v39 + 4) = v29;
  *((_QWORD *)v39 + 5) = v30;
  *((_QWORD *)v39 + 6) = v31;
  (*(void (**)(char *, char *, uint64_t))(v37 + 32))(&v39[v38], v34, v35);
  v40 = (_QWORD *)swift_allocObject(&unk_10110B078, 72, 7);
  v40[2] = a2;
  v40[3] = v28;
  v40[4] = v29;
  v40[5] = v30;
  v40[6] = v31;
  v40[7] = sub_100C54048;
  v40[8] = v39;
  v41 = sub_100044B54(&qword_1011E2BD0);
  v42 = sub_100044B54(&qword_1011E2BD8);
  v44 = type metadata accessor for AutomaticHoverEffect(255, v43);
  v45 = sub_100C50C20();
  v46 = sub_100048748(qword_1011E2C58, (uint64_t (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect, (uint64_t)&protocol conformance descriptor for AutomaticHoverEffect);
  *(_QWORD *)&v83 = v42;
  *((_QWORD *)&v83 + 1) = v44;
  v84 = v45;
  v85 = v46;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v83, &opaque type descriptor for <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>, 1);
  *(_QWORD *)&v83 = v41;
  *((_QWORD *)&v83 + 1) = OpaqueTypeConformance2;
  v48 = swift_getOpaqueTypeConformance2(&v83, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v49 = v63;
  ForEach<>.init(_:id:content:)(&v81, KeyPath, sub_100C54054, v40, v67, v66, WitnessTable, v30, v48);
  v75 = v48;
  v50 = v62;
  swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v62);
  v51 = v68;
  v52 = *(void (**)(char *, char *, uint64_t))(v68 + 16);
  v53 = v64;
  v52(v64, v49, v50);
  v54 = *(void (**)(char *, uint64_t))(v51 + 8);
  v54(v49, v50);
  v52(v69, v53, v50);
  return ((uint64_t (*)(char *, uint64_t))v54)(v53, v50);
}

uint64_t sub_100C4FD70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  unint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t OpaqueTypeConformance2;
  char *v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD v82[4];
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;

  v73 = a8;
  v83 = a3;
  v84 = a4;
  v85 = a5;
  v86 = a6;
  v87 = a7;
  v77 = type metadata accessor for CarouselView(0, (uint64_t)&v83);
  v72 = *(_QWORD *)(v77 - 8);
  v66 = *(_QWORD *)(v72 + 64);
  v15 = __chkstk_darwin();
  v69 = (char *)&v54 - v16;
  v68 = type metadata accessor for AutomaticHoverEffect(0, v15);
  v58 = *(_QWORD *)(v68 - 8);
  __chkstk_darwin();
  v57 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011E2BF0);
  __chkstk_darwin();
  v19 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_100007E8C(&qword_1011E2BD8);
  __chkstk_darwin();
  v21 = (char *)&v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_100007E8C(&qword_1011E2BD0);
  v64 = *(_QWORD *)(v65 - 8);
  __chkstk_darwin();
  v63 = (char *)&v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_100007E8C(&qword_1011E2BC8);
  v60 = *(_QWORD *)(v61 - 8);
  __chkstk_darwin();
  v59 = (char *)&v54 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = a2;
  v75 = a4;
  v70 = a6;
  v71 = a7;
  sub_100C502E8(a2, a1, a3, a4, a5, a6, a7, (uint64_t)v19);
  v24 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a5 + 8);
  v74 = a3;
  v76 = a5;
  v24(v82, a3, a5);
  sub_100065228((uint64_t)v82, (uint64_t)&v83, &qword_1011E2D08);
  if (v83)
  {
    v25 = v84;
    v26 = v85;
    v28 = v86;
    v27 = v87;
    v88 = v83;
    swift_retain();
    sub_1000F4038(&v88);
    v89 = v25;
    sub_1000F4038(&v89);
    swift_release();
    v90 = v28;
    sub_1000F4038(&v90);
    v91 = v27;
    sub_1000F4038(&v91);
  }
  else
  {
    v26 = static Animation.spring(response:dampingFraction:blendDuration:)(0.5, 1.0, 0.0);
  }
  v29 = v67;
  v78 = *(_OWORD *)(v67 + *(int *)(v77 + 92));
  v30 = sub_100007E8C(&qword_1011E2D10);
  State.wrappedValue.getter(&v81, v30);
  v56 = a1;
  v31 = v81 == a1;
  sub_10004A160((uint64_t)v19, (uint64_t)v21, &qword_1011E2BF0);
  v32 = v62;
  v33 = &v21[*(int *)(v62 + 36)];
  *(_QWORD *)v33 = v26;
  v33[8] = v31;
  v34 = sub_10004FF60((uint64_t)v19, &qword_1011E2BF0);
  v35 = v57;
  static CustomHoverEffect<>.automatic.getter(v34);
  v36 = sub_100C50C20();
  v55 = v36;
  v37 = sub_100048748(qword_1011E2C58, (uint64_t (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect, (uint64_t)&protocol conformance descriptor for AutomaticHoverEffect);
  v38 = v63;
  v39 = v68;
  View.hoverEffect<A>(_:isEnabled:)(v35, 1, v32, v68, v36, v37);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v35, v39);
  sub_10004FF60((uint64_t)v21, &qword_1011E2BD8);
  v40 = v72;
  v41 = v69;
  v42 = v77;
  (*(void (**)(char *, uint64_t, uint64_t))(v72 + 16))(v69, v29, v77);
  v43 = *(unsigned __int8 *)(v40 + 80);
  v44 = (v43 + 56) & ~v43;
  v45 = (v66 + v44 + 7) & 0xFFFFFFFFFFFFFFF8;
  v46 = (char *)swift_allocObject(&unk_10110B0A0, v45 + 8, v43 | 7);
  v47 = v75;
  *((_QWORD *)v46 + 2) = v74;
  *((_QWORD *)v46 + 3) = v47;
  v48 = v70;
  *((_QWORD *)v46 + 4) = v76;
  *((_QWORD *)v46 + 5) = v48;
  *((_QWORD *)v46 + 6) = v71;
  (*(void (**)(char *, char *, uint64_t))(v40 + 32))(&v46[v44], v41, v42);
  *(_QWORD *)&v46[v45] = v56;
  *(_QWORD *)&v78 = v32;
  *((_QWORD *)&v78 + 1) = v39;
  v79 = v55;
  v80 = v37;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v78, &opaque type descriptor for <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>, 1);
  v50 = v59;
  v51 = v65;
  View.onTapGesture(count:perform:)(1, sub_100C5405C, v46, v65, OpaqueTypeConformance2);
  v52 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v64 + 8))(v38, v51, v52);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v60 + 32))(v73, v50, v61);
}

uint64_t sub_100C502E8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  void (*v23)(_QWORD *__return_ptr, uint64_t, uint64_t, __n128);
  uint64_t v24;
  uint64_t v25;
  uint64_t KeyPath;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  double v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  double v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD v85[5];
  __int128 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD v91[5];
  uint64_t v92;

  v75 = a7;
  v74 = a6;
  *((_QWORD *)&v73 + 1) = a4;
  v77 = a2;
  v76 = a1;
  v80 = a8;
  v79 = sub_100007E8C(&qword_1011E2D20);
  __chkstk_darwin();
  v11 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DynamicTypeSize(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin();
  v15 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_100007E8C(&qword_1011E2D28);
  v70 = *(_QWORD *)(v71 - 8);
  __chkstk_darwin();
  v17 = (char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = sub_100007E8C(&qword_1011E2C10);
  __chkstk_darwin();
  v19 = (char *)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin();
  v22 = (char *)&v66 - v21;
  v23 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, __n128))(a5 + 8);
  *(_QWORD *)&v73 = a3;
  v23(v85, a3, a5, v20);
  sub_100065228((uint64_t)v85, (uint64_t)v91, &qword_1011E2D08);
  v24 = v91[0];
  if (v91[0])
  {
    v25 = v91[1];
    v69 = v91[2];
    v67 = v91[3];
    v72 = v91[4];
    KeyPath = swift_getKeyPath(&unk_100EF01D0);
    *(_QWORD *)&v86 = v24;
    *((_QWORD *)&v86 + 1) = KeyPath;
    v87 = v25;
    v68 = v25;
    (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for DynamicTypeSize.large(_:), v12);
    swift_retain();
    swift_retain();
    v27 = sub_100007E8C((uint64_t *)&unk_1011E3BC0);
    v66 = v22;
    v28 = v27;
    v29 = sub_100C50E20();
    View.dynamicTypeSize(_:)(v15, v28, v29);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    swift_release();
    swift_release();
    swift_release();
    v86 = v73;
    v87 = a5;
    v88 = v74;
    v89 = v75;
    v30 = type metadata accessor for CarouselView(0, (uint64_t)&v86);
    v86 = *(_OWORD *)(v76 + *(int *)(v30 + 92));
    v31 = sub_100007E8C(&qword_1011E2D10);
    State.wrappedValue.getter(&v81, v31);
    v32 = v67;
    if ((_QWORD)v81 == v77)
      v33 = v67;
    else
      v33 = v72;
    swift_retain();
    v34 = swift_getKeyPath(&unk_100EF01A0);
    v35 = v70;
    v36 = v71;
    (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v19, v17, v71);
    v37 = v78;
    v38 = (uint64_t *)&v19[*(int *)(v78 + 36)];
    *v38 = v34;
    v38[1] = v33;
    (*(void (**)(char *, uint64_t))(v35 + 8))(v17, v36);
    v39 = (uint64_t)v19;
    v40 = (uint64_t)v66;
    sub_100065228(v39, (uint64_t)v66, &qword_1011E2C10);
    sub_10004A160(v40, (uint64_t)v11, &qword_1011E2C10);
    swift_storeEnumTagMultiPayload(v11, v79, 0);
    v41 = sub_100007E8C(&qword_1011E2C28);
    v42 = sub_100C50D74();
    v43 = sub_100C50EA4();
    _ConditionalContent<>.init(storage:)(v11, v37, v41, v42, v43);
    swift_release();
    swift_release();
    v92 = v69;
    sub_1000F4038(&v92);
    *(_QWORD *)&v81 = v32;
    sub_1000F4038(&v81);
    *(_QWORD *)&v86 = v72;
    sub_1000F4038(&v86);
    return sub_10004FF60(v40, &qword_1011E2C10);
  }
  else
  {
    v45 = sub_100C53F4C();
    sub_100C53F4C();
    v47 = v46;
    v49 = static Alignment.center.getter(v48);
    _FrameLayout.init(width:height:alignment:)(&v86, *(_QWORD *)&v45, 0, v47, 0, v49, v50);
    v51 = v86;
    v52 = BYTE8(v86);
    v53 = v87;
    v54 = v88;
    v55 = v89;
    v56 = v90;
    static Color.primary.getter(v57);
    v81 = v73;
    v82 = a5;
    v83 = v74;
    v84 = v75;
    v58 = type metadata accessor for CarouselView(0, (uint64_t)&v81);
    v81 = *(_OWORD *)(v76 + *(int *)(v58 + 92));
    v59 = sub_100007E8C(&qword_1011E2D10);
    State.wrappedValue.getter(&v92, v59);
    v60 = 0.25;
    if (v92 == v77)
      v60 = 1.0;
    v61 = Color.opacity(_:)(v60);
    swift_release();
    v62 = swift_getKeyPath(&unk_100EF01A0);
    *(_QWORD *)v11 = v51;
    v11[8] = v52;
    *((_QWORD *)v11 + 2) = v53;
    v11[24] = v54;
    *((_QWORD *)v11 + 4) = v55;
    *((_QWORD *)v11 + 5) = v56;
    *((_QWORD *)v11 + 6) = v62;
    *((_QWORD *)v11 + 7) = v61;
    swift_storeEnumTagMultiPayload(v11, v79, 1);
    v63 = sub_100007E8C(&qword_1011E2C28);
    v64 = sub_100C50D74();
    v65 = sub_100C50EA4();
    return _ConditionalContent<>.init(storage:)(v11, v78, v63, v64, v65);
  }
}

uint64_t sub_100C508B0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  BOOL v32;
  double v33;
  double v34;
  double *v35;
  double v36;
  double v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  double v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v45 = a6;
  v46 = a7;
  v47 = a2;
  v11 = type metadata accessor for ScrollViewProxy(0);
  v12 = *(_QWORD *)(v11 - 8);
  v48 = v11;
  v49 = v12;
  __chkstk_darwin();
  v43 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011E2B80);
  __chkstk_darwin();
  v15 = (char **)((char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = type metadata accessor for LayoutDirection(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin();
  v19 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v21 = (char *)&v43 - v20;
  v44 = a3;
  *(_QWORD *)&v50 = a3;
  *((_QWORD *)&v50 + 1) = a4;
  v51 = a5;
  v52 = v45;
  v53 = v46;
  v22 = (int *)type metadata accessor for CarouselView(0, (uint64_t)&v50);
  sub_100C4ECC0(v47, (uint64_t)v22);
  v50 = *(_OWORD *)((char *)a1 + v22[23]);
  v23 = sub_100007E8C(&qword_1011E2D10);
  State.wrappedValue.getter(&v54, v23);
  v24 = v54;
  sub_100C315D4((uint64_t)v21);
  (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v19, enum case for LayoutDirection.rightToLeft(_:), v16);
  LOBYTE(a4) = static LayoutDirection.== infix(_:_:)(v21, v19);
  v25 = *(void (**)(char *, uint64_t))(v17 + 8);
  v26 = v19;
  v27 = v48;
  v25(v26, v16);
  v28 = v21;
  v29 = v49;
  v25(v28, v16);
  if ((a4 & 1) == 0)
    goto LABEL_4;
  result = Array.count.getter(*a1, v44);
  v31 = result - 1;
  if (__OFSUB__(result, 1))
  {
    __break(1u);
    goto LABEL_8;
  }
  v32 = __OFSUB__(v31, v24);
  v24 = v31 - v24;
  if (v32)
  {
LABEL_8:
    __break(1u);
    return result;
  }
LABEL_4:
  v33 = *(double *)((char *)a1 + v22[25]);
  v34 = Int.seconds.getter(v24);
  v35 = (double *)((char *)a1 + v22[18]);
  v36 = *v35;
  v37 = v35[1];
  v38 = sub_100007E8C(&qword_1011E2CF0);
  State.wrappedValue.getter(v15, v38);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v29 + 48))(v15, 1, v27))
    return sub_10004FF60((uint64_t)v15, &qword_1011E2B80);
  v39 = v43;
  (*(void (**)(char *, _QWORD *, uint64_t))(v29 + 16))(v43, v15, v27);
  v40 = sub_10004FF60((uint64_t)v15, &qword_1011E2B80);
  v41 = static UnitPoint.leading.getter(v40);
  ScrollViewProxy.scrollTo(rect:anchor:)(*(_QWORD *)&v41, v42, 0, v33 * v34, 0.0, v36, v37);
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v39, v27);
}

uint64_t sub_100C50BA0()
{
  return EnvironmentValues.layoutDirection.getter();
}

unint64_t sub_100C50BC4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E2BB0;
  if (!qword_1011E2BB0)
  {
    v1 = sub_100044B54(&qword_1011E2B98);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1011E2BB0);
  }
  return result;
}

unint64_t sub_100C50C20()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E2BE0;
  if (!qword_1011E2BE0)
  {
    v1 = sub_100044B54(&qword_1011E2BD8);
    sub_100C50CA4();
    sub_100049F28(&qword_1011E2C48, &qword_1011E2C50, (uint64_t)&protocol conformance descriptor for _AnimationModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E2BE0);
  }
  return result;
}

unint64_t sub_100C50CA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E2BE8;
  if (!qword_1011E2BE8)
  {
    v1 = sub_100044B54(&qword_1011E2BF0);
    sub_100C50D08();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E2BE8);
  }
  return result;
}

unint64_t sub_100C50D08()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E2BF8;
  if (!qword_1011E2BF8)
  {
    v1 = sub_100044B54(&qword_1011E2C00);
    sub_100C50D74();
    sub_100C50EA4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E2BF8);
  }
  return result;
}

unint64_t sub_100C50D74()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011E2C08;
  if (!qword_1011E2C08)
  {
    v1 = sub_100044B54(&qword_1011E2C10);
    v2[0] = sub_100044B54((uint64_t *)&unk_1011E3BC0);
    v2[1] = sub_100C50E20();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize(_:)>>, 1);
    sub_100049F28(&qword_1011E2B30, (uint64_t *)&unk_1011E3A60, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E2C08);
  }
  return result;
}

unint64_t sub_100C50E20()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E2C18;
  if (!qword_1011E2C18)
  {
    v1 = sub_100044B54((uint64_t *)&unk_1011E3BC0);
    sub_100049F28((unint64_t *)&unk_1011E3BD0, &qword_1011E0EA8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E2C18);
  }
  return result;
}

unint64_t sub_100C50EA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E2C20;
  if (!qword_1011E2C20)
  {
    v1 = sub_100044B54(&qword_1011E2C28);
    sub_100C50F28();
    sub_100049F28(&qword_1011E2B30, (uint64_t *)&unk_1011E3A60, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E2C20);
  }
  return result;
}

unint64_t sub_100C50F28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E2C30;
  if (!qword_1011E2C30)
  {
    v1 = sub_100044B54(&qword_1011E2C38);
    sub_100C50F94();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E2C30);
  }
  return result;
}

unint64_t sub_100C50F94()
{
  unint64_t result;

  result = qword_1011E2C40;
  if (!qword_1011E2C40)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Circle, &type metadata for Circle);
    atomic_store(result, (unint64_t *)&qword_1011E2C40);
  }
  return result;
}

uint64_t sub_100C50FD8()
{
  return sub_1004D9A80((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100C4B558);
}

uint64_t sub_100C50FE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  __int128 v3;
  _OWORD v5[2];
  uint64_t v6;

  v2 = *(_QWORD *)(a2 + 48);
  v3 = *(_OWORD *)(a2 + 32);
  v5[0] = *(_OWORD *)(a2 + 16);
  v5[1] = v3;
  v6 = v2;
  return swift_getOpaqueTypeConformance2(v5, &opaque type descriptor for <<opaque return type of CarouselView.body>>, 1);
}

double destroy for PageIndicator(_QWORD *a1)
{
  double result;

  swift_release(*a1);
  swift_release(a1[1]);
  swift_release(a1[2]);
  swift_release(a1[3]);
  *(_QWORD *)&result = swift_release(a1[4]).n128_u64[0];
  return result;
}

uint64_t *initializeWithCopy for PageIndicator(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[2];
  v6 = a2[3];
  a1[2] = v5;
  a1[3] = v6;
  v7 = a2[4];
  a1[4] = v7;
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  return a1;
}

uint64_t *assignWithCopy for PageIndicator(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[2];
  v9 = a1[2];
  a1[2] = v8;
  swift_retain(v8);
  swift_release(v9);
  v10 = a2[3];
  v11 = a1[3];
  a1[3] = v10;
  swift_retain(v10);
  swift_release(v11);
  v12 = a2[4];
  v13 = a1[4];
  a1[4] = v12;
  swift_retain(v12);
  swift_release(v13);
  return a1;
}

_QWORD *assignWithTake for PageIndicator(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_release(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  swift_release(a1[2]);
  v5 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  swift_release(v5);
  v6 = a1[4];
  a1[4] = *(_QWORD *)(a2 + 32);
  swift_release(v6);
  return a1;
}

ValueMetadata *type metadata accessor for PageIndicator()
{
  return &type metadata for PageIndicator;
}

void sub_100C511E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD v9[13];

  v9[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v9[1] = &unk_100EF00A8;
  v2 = type metadata accessor for Binding(255, *(_QWORD *)(a1 + 16));
  v3 = type metadata accessor for Optional(319, v2);
  if (v4 <= 0x3F)
  {
    v9[2] = *(_QWORD *)(v3 - 8) + 64;
    v9[3] = &unk_100EF00C0;
    v9[4] = &unk_100EF00D8;
    v9[5] = (char *)&value witness table for () + 64;
    v9[6] = (char *)&value witness table for Builtin.Int64 + 64;
    v9[7] = (char *)&value witness table for Builtin.Int64 + 64;
    v9[8] = &unk_100EF00F0;
    v9[9] = &unk_100EF00F0;
    sub_100C53718(319);
    if (v6 <= 0x3F)
    {
      v9[10] = *(_QWORD *)(v5 - 8) + 64;
      v9[11] = (char *)&value witness table for Builtin.Int64 + 64;
      sub_100C53770(319);
      if (v8 <= 0x3F)
      {
        v9[12] = *(_QWORD *)(v7 - 8) + 64;
        swift_initStructMetadata(a1, 0, 13, v9, a1 + 56);
      }
    }
  }
}

uint64_t *sub_100C512EC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  size_t v14;
  size_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  size_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  void (*v45)(uint64_t, unint64_t, uint64_t);
  unint64_t v46;
  unint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  _QWORD *v53;
  _QWORD *v54;
  unint64_t v55;
  unint64_t *v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  unsigned int (*v65)(char *, uint64_t, uint64_t);
  uint64_t v66;
  _QWORD *v67;
  uint64_t *v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  size_t v77;
  unint64_t v78;
  uint64_t v79;
  size_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;

  v84 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v84 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v85 = *(_DWORD *)(v5 + 84);
  v7 = v6;
  v8 = *(_QWORD *)(v5 + 64);
  v9 = type metadata accessor for ScrollViewProxy(0);
  v10 = *(_QWORD *)(v9 - 8);
  v12 = *(_DWORD *)(v10 + 80);
  v11 = *(_DWORD *)(v10 + 84);
  v13 = v12 & 0xF8;
  v86 = v10;
  v88 = v9;
  v14 = *(_QWORD *)(v10 + 64);
  if (v11)
    v15 = v14;
  else
    v15 = v14 + 1;
  v16 = type metadata accessor for LayoutDirection(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_DWORD *)(v17 + 80);
  v19 = v18 & 0xF8;
  v20 = v19 | 7;
  if (*(_QWORD *)(v17 + 64) <= 8uLL)
    v21 = 8;
  else
    v21 = *(_QWORD *)(v17 + 64);
  v22 = v13 | v20 | v6;
  v23 = (v12 | v18 | v6) & 0x100000;
  v24 = *a2;
  *a1 = *a2;
  v25 = v22 == 7 && v23 == 0;
  if (!v25
    || (v26 = v6 | 7,
        v27 = ((v6 + 16) & ~(unint64_t)v6) + v8,
        v21
      + ((v19
        + 15
        + ((v15 + 7) & 0xFFFFFFFFFFFFFFF8)
        + 8
        + ((v13
          + 23
          + ((((((((((((v27 + ((v6 + 32) & ~v26)) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)
                  + 23) & 0xFFFFFFFFFFFFFFF8)
                + 15) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v13 & 0xFFFFFFFFFFFFFFF8)) & ~v20)
      + 1 > 0x18))
  {
    v34 = v24 + ((v22 + 16) & ~v22);
    swift_retain(v24);
    return (uint64_t *)v34;
  }
  v74 = v13 + 23;
  v75 = ~v13 & 0xFFFFFFFFFFFFFFF8;
  v76 = v19 | 7;
  v77 = v15 + 7;
  v78 = ((v15 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v79 = v19 + 15;
  v80 = v15;
  v81 = v17;
  v82 = v21;
  v83 = a1;
  v73 = v16;
  v28 = ~v26;
  v29 = ((unint64_t)v83 + 15) & 0xFFFFFFFFFFFFFFF8;
  v30 = ((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8;
  v31 = *(_QWORD *)(v30 + 8);
  swift_bridgeObjectRetain();
  if (v31 < 0xFFFFFFFF)
  {
    v35 = *(_OWORD *)v30;
    *(_QWORD *)(v29 + 16) = *(_QWORD *)(v30 + 16);
    *(_OWORD *)v29 = v35;
  }
  else
  {
    v32 = *(_QWORD *)v30;
    *(_QWORD *)v29 = *(_QWORD *)v30;
    v33 = *(_QWORD *)(v30 + 8);
    *(_QWORD *)(v29 + 8) = v33;
    *(_QWORD *)(v29 + 16) = *(_QWORD *)(v30 + 16);
    swift_retain(v32);
    swift_retain(v33);
  }
  v36 = v86;
  v37 = ~v7;
  v38 = (_QWORD *)((v29 + v26 + 24) & v28);
  v39 = (uint64_t *)((v30 + v26 + 24) & v28);
  v40 = (uint64_t *)(((unint64_t)v39 + 15) & 0xFFFFFFFFFFFFFFF8);
  if ((v85 & 0x80000000) == 0)
  {
    v41 = *v40;
    if ((unint64_t)*v40 >= 0xFFFFFFFF)
      LODWORD(v41) = -1;
    if ((_DWORD)v41 != -1)
      goto LABEL_21;
LABEL_23:
    v42 = *v39;
    *v38 = *v39;
    v43 = (_QWORD *)(((unint64_t)v38 + 15) & 0xFFFFFFFFFFFFFFF8);
    v44 = *v40;
    *v43 = *v40;
    v87 = ((unint64_t)v43 + v7 + 8) & v37;
    v45 = *(void (**)(uint64_t, unint64_t, uint64_t))(v5 + 16);
    swift_retain(v42);
    swift_retain(v44);
    v45(v87, ((unint64_t)v40 + v7 + 8) & v37, v84);
    goto LABEL_24;
  }
  if (!(*(unsigned int (**)(unint64_t))(v5 + 48))(((unint64_t)v40 + v7 + 8) & v37))
    goto LABEL_23;
LABEL_21:
  memcpy(v38, v39, v27);
LABEL_24:
  *((_BYTE *)v38 + v27) = *((_BYTE *)v39 + v27);
  v46 = ((unint64_t)v38 + v27) & 0xFFFFFFFFFFFFFFF8;
  v47 = ((unint64_t)v39 + v27) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)(v46 + 8) = *(_OWORD *)(v47 + 8);
  v48 = (_QWORD *)((v46 + 31) & 0xFFFFFFFFFFFFFFF8);
  v49 = (_QWORD *)((v47 + 31) & 0xFFFFFFFFFFFFFFF8);
  v50 = v49[1];
  *v48 = *v49;
  v48[1] = v50;
  v51 = (_QWORD *)(((unint64_t)v49 + 23) & 0xFFFFFFFFFFFFF8);
  v52 = (_QWORD *)(((unint64_t)v48 + 23) & 0xFFFFFFFFFFFFF8);
  *v52 = *v51;
  v53 = (_QWORD *)(((unint64_t)v51 + 15) & 0xFFFFFFFFFFFFF8);
  v54 = (_QWORD *)(((unint64_t)v52 + 15) & 0xFFFFFFFFFFFFF8);
  *v54 = *v53;
  v55 = ((unint64_t)v54 + 15) & 0xFFFFFFFFFFFFFFF8;
  v56 = (unint64_t *)(((unint64_t)v53 + 15) & 0xFFFFFFFFFFFFFFF8);
  v57 = *v56;
  swift_retain(v50);
  if (v57 < 0xFFFFFFFF)
  {
    *(_OWORD *)v55 = *(_OWORD *)v56;
  }
  else
  {
    v58 = v56[1];
    *(_QWORD *)v55 = v57;
    *(_QWORD *)(v55 + 8) = v58;
    swift_retain(v58);
  }
  v59 = ~v76;
  v60 = (_QWORD *)((v55 + 23) & 0xFFFFFFFFFFFFFFF8);
  v61 = (_QWORD *)(((unint64_t)v56 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v60 = *v61;
  v62 = v61[1];
  v60[1] = v62;
  v63 = (char *)(((unint64_t)v60 + v74) & v75);
  v64 = (char *)(((unint64_t)v61 + v74) & v75);
  v65 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
  swift_retain(v62);
  if (v65(v64, 1, v88))
  {
    memcpy(v63, v64, v80);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v63, v64, v88);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v63, 0, 1, v88);
  }
  v66 = *(_QWORD *)((unint64_t)&v64[v77] & 0xFFFFFFFFFFFFF8);
  *(_QWORD *)((unint64_t)&v63[v77] & 0xFFFFFFFFFFFFF8) = v66;
  *(_QWORD *)&v63[v78] = *(_QWORD *)&v64[v78];
  v67 = (_QWORD *)((unint64_t)&v63[v78 + v79] & v59);
  v68 = (uint64_t *)((unint64_t)&v64[v78 + v79] & v59);
  v69 = *((unsigned __int8 *)v68 + v82);
  swift_retain(v66);
  if (v69 >= 2)
  {
    if (v82 <= 3)
      v70 = v82;
    else
      v70 = 4;
    __asm { BR              X11 }
  }
  if (v69 == 1)
  {
    (*(void (**)(_QWORD *, uint64_t *, uint64_t))(v81 + 16))(v67, v68, v73);
    *((_BYTE *)v67 + v82) = 1;
  }
  else
  {
    v71 = *v68;
    *v67 = *v68;
    *((_BYTE *)v67 + v82) = 0;
    swift_retain(v71);
  }
  return v83;
}

double sub_100C517F4(_QWORD *a1, uint64_t a2)
{
  unint64_t v3;
  __n128 v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  unint64_t v28;
  unsigned int v29;
  uint64_t v30;
  double result;

  v3 = (unint64_t)a1 + 15;
  swift_bridgeObjectRelease(*a1);
  v5 = (_QWORD *)(v3 & 0xFFFFFFFFFFFFFFF8);
  if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFFFF8) + 8) >= 0xFFFFFFFFuLL)
  {
    swift_release(*v5);
    v4 = swift_release(v5[1]);
  }
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (_QWORD *)(((unint64_t)v5 + (v8 | 7) + 24) & ~(v8 | 7));
  v10 = ~v8;
  v11 = (v8 + 16) & ~v8;
  v12 = *(_QWORD *)(v7 + 64);
  v13 = (_QWORD *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  if ((*(_DWORD *)(v7 + 84) & 0x80000000) != 0)
  {
    v15 = v11 + v12;
    if (!(*(unsigned int (**)(unint64_t, __n128))(v7 + 48))(((unint64_t)v13 + v8 + 8) & v10, v4))
    {
LABEL_7:
      swift_release(*v9);
      v16 = swift_release(*v13);
      (*(void (**)(unint64_t, uint64_t, __n128))(v7 + 8))(((unint64_t)v13 + v8 + 8) & v10, v6, v16);
    }
  }
  else
  {
    v14 = *v13;
    if (*v13 >= 0xFFFFFFFFuLL)
      LODWORD(v14) = -1;
    v15 = v11 + v12;
    if ((_DWORD)v14 == -1)
      goto LABEL_7;
  }
  v17 = ((((unint64_t)v9 + v15) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v17 + 8));
  v18 = (_QWORD *)((((((v17 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  if (*v18 >= 0xFFFFFFFFuLL)
    swift_release(v18[1]);
  v19 = ((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v19 + 8));
  v20 = type metadata accessor for ScrollViewProxy(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_DWORD *)(v21 + 80) & 0xF8 | 7;
  v23 = (v19 + v22 + 16) & ~v22;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v23, 1, v20))
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v23, v20);
  if (*(_DWORD *)(v21 + 84))
    v24 = *(_QWORD *)(v21 + 64);
  else
    v24 = *(_QWORD *)(v21 + 64) + 1;
  swift_release(*(_QWORD *)(((v23 | 7) + v24) & 0xFFFFFFFFFFFFF8));
  v25 = *(_QWORD *)(type metadata accessor for LayoutDirection(0) - 8);
  v26 = *(_DWORD *)(v25 + 80) & 0xF8 | 7;
  v27 = (_QWORD *)((v23 + ((v24 + 7) & 0xFFFFFFFFFFFFFFF8) + v26 + 16) & ~v26);
  v28 = *(_QWORD *)(v25 + 64);
  if (v28 <= 8)
    v28 = 8;
  v29 = *((unsigned __int8 *)v27 + v28);
  if (v29 >= 2)
  {
    if (v28 <= 3)
      v30 = v28;
    else
      v30 = 4;
    __asm { BR              X14 }
  }
  if (v29 == 1)
    (*(void (**)(void))(v25 + 8))();
  else
    *(_QWORD *)&result = swift_release(*v27).n128_u64[0];
  return result;
}

_QWORD *sub_100C51AA4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  size_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  void (*v28)(uint64_t, unint64_t, uint64_t);
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  _QWORD *v36;
  _QWORD *v37;
  unint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unsigned int (*v53)(unint64_t, uint64_t, uint64_t);
  int v54;
  uint64_t v55;
  size_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  unint64_t v60;
  _QWORD *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  _QWORD *v69;
  uint64_t *v70;
  uint64_t v71;
  unsigned int v72;
  uint64_t v73;
  char v74;
  uint64_t v75;

  *a1 = *a2;
  v5 = ((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8;
  v6 = ((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(_QWORD *)(v6 + 8);
  swift_bridgeObjectRetain();
  if (v7 < 0xFFFFFFFF)
  {
    v10 = *(_OWORD *)v6;
    *(_QWORD *)(v5 + 16) = *(_QWORD *)(v6 + 16);
    *(_OWORD *)v5 = v10;
  }
  else
  {
    v8 = *(_QWORD *)v6;
    *(_QWORD *)v5 = *(_QWORD *)v6;
    v9 = *(_QWORD *)(v6 + 8);
    *(_QWORD *)(v5 + 8) = v9;
    *(_QWORD *)(v5 + 16) = *(_QWORD *)(v6 + 16);
    swift_retain(v8);
    swift_retain(v9);
  }
  v11 = *(_QWORD *)(a3 + 16);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = (_QWORD *)((v5 + (v13 | 7) + 24) & ~(v13 | 7));
  v15 = (uint64_t *)((v6 + (v13 | 7) + 24) & ~(v13 | 7));
  v16 = ~v13;
  v17 = (v13 + 16) & ~v13;
  v18 = *(_QWORD *)(v12 + 64);
  v19 = (uint64_t *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
  if ((*(_DWORD *)(v12 + 84) & 0x80000000) != 0)
  {
    v21 = v17 + v18;
    if ((*(unsigned int (**)(unint64_t))(v12 + 48))(((unint64_t)v19 + v13 + 8) & v16))
    {
LABEL_8:
      memcpy(v14, v15, v21);
      goto LABEL_11;
    }
  }
  else
  {
    v20 = *v19;
    if ((unint64_t)*v19 >= 0xFFFFFFFF)
      LODWORD(v20) = -1;
    v21 = v17 + v18;
    if ((_DWORD)v20 != -1)
      goto LABEL_8;
  }
  v22 = *v15;
  *v14 = *v15;
  v23 = (_QWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8);
  v24 = *v19;
  *v23 = *v19;
  v25 = v13 + 8;
  v26 = ((unint64_t)v23 + v13 + 8) & v16;
  v27 = ((unint64_t)v19 + v25) & v16;
  v28 = *(void (**)(uint64_t, unint64_t, uint64_t))(v12 + 16);
  swift_retain(v22);
  swift_retain(v24);
  v28(v26, v27, v11);
LABEL_11:
  *((_BYTE *)v14 + v21) = *((_BYTE *)v15 + v21);
  v29 = ((unint64_t)v14 + v21) & 0xFFFFFFFFFFFFFFF8;
  v30 = ((unint64_t)v15 + v21) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)(v29 + 8) = *(_OWORD *)(v30 + 8);
  v31 = (_QWORD *)((v29 + 31) & 0xFFFFFFFFFFFFFFF8);
  v32 = (_QWORD *)((v30 + 31) & 0xFFFFFFFFFFFFFFF8);
  v33 = v32[1];
  *v31 = *v32;
  v31[1] = v33;
  v34 = (_QWORD *)(((unint64_t)v32 + 23) & 0xFFFFFFFFFFFFF8);
  v35 = (_QWORD *)(((unint64_t)v31 + 23) & 0xFFFFFFFFFFFFF8);
  *v35 = *v34;
  v36 = (_QWORD *)(((unint64_t)v34 + 15) & 0xFFFFFFFFFFFFF8);
  v37 = (_QWORD *)(((unint64_t)v35 + 15) & 0xFFFFFFFFFFFFF8);
  *v37 = *v36;
  v38 = ((unint64_t)v37 + 15) & 0xFFFFFFFFFFFFFFF8;
  v39 = (unint64_t *)(((unint64_t)v36 + 15) & 0xFFFFFFFFFFFFFFF8);
  v40 = *v39;
  swift_retain(v33);
  if (v40 < 0xFFFFFFFF)
  {
    *(_OWORD *)v38 = *(_OWORD *)v39;
  }
  else
  {
    v41 = v39[1];
    *(_QWORD *)v38 = v40;
    *(_QWORD *)(v38 + 8) = v41;
    swift_retain(v41);
  }
  v42 = (_QWORD *)((v38 + 23) & 0xFFFFFFFFFFFFFFF8);
  v43 = (_QWORD *)(((unint64_t)v39 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v42 = *v43;
  v44 = v43[1];
  v42[1] = v44;
  v45 = type metadata accessor for ScrollViewProxy(0);
  v46 = *(_QWORD *)(v45 - 8);
  v47 = *(_DWORD *)(v46 + 80) & 0xF8;
  v48 = v47 + 23;
  v49 = (unint64_t)v42 + v47 + 23;
  v50 = ~v47 & 0xFFFFFFFFFFFFFFF8;
  v51 = v49 & v50;
  v52 = ((unint64_t)v43 + v48) & v50;
  v53 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v46 + 48);
  swift_retain(v44);
  if (v53(v52, 1, v45))
  {
    v54 = *(_DWORD *)(v46 + 84);
    v55 = *(_QWORD *)(v46 + 64);
    if (v54)
      v56 = *(_QWORD *)(v46 + 64);
    else
      v56 = v55 + 1;
    memcpy((void *)v51, (const void *)v52, v56);
  }
  else
  {
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v46 + 16))(v51, v52, v45);
    (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v46 + 56))(v51, 0, 1, v45);
    v54 = *(_DWORD *)(v46 + 84);
    v55 = *(_QWORD *)(v46 + 64);
  }
  if (v54)
    v57 = v55;
  else
    v57 = v55 + 1;
  v58 = (uint64_t *)(((v52 | 7) + v57) & 0xFFFFFFFFFFFFF8);
  v59 = *v58;
  *(_QWORD *)(((v51 | 7) + v57) & 0xFFFFFFFFFFFFF8) = *v58;
  v60 = ((v57 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v61 = (_QWORD *)(v60 + v51);
  v62 = (char *)(v60 + v52);
  *v61 = *(_QWORD *)(v60 + v52);
  v63 = type metadata accessor for LayoutDirection(0);
  v64 = *(_QWORD *)(v63 - 8);
  v65 = *(_DWORD *)(v64 + 80) & 0xF8;
  v66 = v65 + 15;
  v67 = (unint64_t)v61 + v65 + 15;
  v68 = ~v65 & 0xFFFFFFFFFFFFFFF8;
  v69 = (_QWORD *)(v67 & v68);
  v70 = (uint64_t *)((unint64_t)&v62[v66] & v68);
  if (*(_QWORD *)(v64 + 64) <= 8uLL)
    v71 = 8;
  else
    v71 = *(_QWORD *)(v64 + 64);
  v72 = *((unsigned __int8 *)v70 + v71);
  swift_retain(v59);
  if (v72 >= 2)
  {
    if (v71 <= 3)
      v73 = v71;
    else
      v73 = 4;
    __asm { BR              X11 }
  }
  if (v72 == 1)
  {
    (*(void (**)(_QWORD *, uint64_t *, uint64_t))(v64 + 16))(v69, v70, v63);
    v74 = 1;
  }
  else
  {
    v75 = *v70;
    *v69 = *v70;
    swift_retain(v75);
    v74 = 0;
  }
  *((_BYTE *)v69 + v71) = v74;
  return a1;
}

_QWORD *sub_100C51EC0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  size_t v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  __n128 v30;
  uint64_t (*v31)(unint64_t, uint64_t, uint64_t, __n128);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  size_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  unint64_t v44;
  unint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  _QWORD *v52;
  _QWORD *v53;
  _QWORD *v54;
  unint64_t *v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t (*v72)(unint64_t, uint64_t, uint64_t);
  int v73;
  size_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  unint64_t v88;
  _QWORD *v89;
  char *v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  unsigned int v94;
  uint64_t v95;
  __n128 v96;
  unsigned int v97;
  uint64_t v98;
  uint64_t v99;
  int v101;
  size_t v102;
  _QWORD *v103;
  uint64_t v104;

  v4 = a1;
  v5 = (unint64_t)a2 + 15;
  v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  v7 = (_QWORD *)(((unint64_t)v4 + 15) & 0xFFFFFFFFFFFFFFF8);
  v8 = (uint64_t *)(v5 & 0xFFFFFFFFFFFFFFF8);
  v9 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v7[1] < 0xFFFFFFFFuLL)
  {
    if (v9 >= 0xFFFFFFFF)
    {
      v15 = *v8;
      *v7 = *v8;
      v16 = v8[1];
      v7[1] = v16;
      v7[2] = v8[2];
      swift_retain(v15);
      swift_retain(v16);
      goto LABEL_8;
    }
  }
  else
  {
    v10 = *v7;
    if (v9 >= 0xFFFFFFFF)
    {
      v11 = *v8;
      *v7 = *v8;
      swift_retain(v11);
      swift_release(v10);
      v12 = v8[1];
      v13 = v7[1];
      v7[1] = v12;
      swift_retain(v12);
      v14 = swift_release(v13);
      v7[2] = v8[2];
      goto LABEL_8;
    }
    swift_release(*v7);
    swift_release(v7[1]);
  }
  v14 = *(__n128 *)v8;
  v7[2] = v8[2];
  *(__n128 *)v7 = v14;
LABEL_8:
  v17 = *(_QWORD *)(a3 + 16);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = (_QWORD *)(((unint64_t)v7 + (v19 | 7) + 24) & ~(v19 | 7));
  v21 = (uint64_t *)(((unint64_t)v8 + (v19 | 7) + 24) & ~(v19 | 7));
  v22 = *(unsigned int *)(v18 + 84);
  v23 = *(_QWORD *)(v18 + 64);
  v24 = ((v19 + 16) & ~v19) + v23;
  v25 = (_QWORD *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8);
  v104 = ~v19;
  if ((v22 & 0x80000000) == 0)
  {
    v26 = (uint64_t *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8);
    v27 = *v26;
    if ((unint64_t)*v26 >= 0xFFFFFFFF)
      LODWORD(v27) = -1;
    v28 = v27 + 1;
    if (*v25 > 0xFFFFFFFEuLL)
      goto LABEL_12;
LABEL_15:
    if (v28)
      goto LABEL_16;
    v32 = *v21;
    *v20 = *v21;
    v33 = *v26;
    *v25 = *v26;
    v34 = ((unint64_t)v25 + v19 + 8) & v104;
    v35 = ((unint64_t)v26 + v19 + 8) & v104;
    v36 = v24;
    v37 = v17;
    v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
    swift_retain(v32);
    swift_retain(v33);
    v39 = v37;
    v24 = v36;
    v38(v34, v35, v39);
    goto LABEL_19;
  }
  v102 = ((v19 + 16) & ~v19) + v23;
  v103 = v4;
  v31 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v18 + 48);
  v101 = v31(((unint64_t)v25 + v19 + 8) & ~v19, v22, v17, v14);
  v26 = (uint64_t *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8);
  v24 = v102;
  v28 = ((uint64_t (*)(unint64_t, uint64_t, uint64_t))v31)(((unint64_t)v26 + v19 + 8) & ~v19, v22, v17);
  v4 = v103;
  if (v101)
    goto LABEL_15;
LABEL_12:
  v29 = *v20;
  if (v28)
  {
    swift_release(*v20);
    v30 = swift_release(*v25);
    (*(void (**)(unint64_t, uint64_t, __n128))(v18 + 8))(((unint64_t)v25 + v19 + 8) & v104, v17, v30);
LABEL_16:
    memcpy(v20, v21, v24);
    goto LABEL_19;
  }
  v40 = *v21;
  *v20 = *v21;
  swift_retain(v40);
  swift_release(v29);
  v41 = *v26;
  v42 = *v25;
  *v25 = *v26;
  swift_retain(v41);
  v43 = swift_release(v42);
  (*(void (**)(unint64_t, unint64_t, uint64_t, __n128))(v18 + 24))(((unint64_t)v25 + v19 + 8) & v104, ((unint64_t)v26 + v19 + 8) & v104, v17, v43);
LABEL_19:
  *((_BYTE *)v20 + v24) = *((_BYTE *)v21 + v24);
  v44 = ((unint64_t)v20 + v24) & 0xFFFFFFFFFFFFFFF8;
  v45 = ((unint64_t)v21 + v24) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v44 + 8) = *(_QWORD *)(v45 + 8);
  *(_QWORD *)(v44 + 16) = *(_QWORD *)(v45 + 16);
  v46 = (_QWORD *)((v44 + 31) & 0xFFFFFFFFFFFFFFF8);
  v47 = (_QWORD *)((v45 + 31) & 0xFFFFFFFFFFFFFFF8);
  v48 = v47[1];
  v49 = v46[1];
  *v46 = *v47;
  v46[1] = v48;
  swift_retain(v48);
  swift_release(v49);
  v50 = (_QWORD *)(((unint64_t)v46 + 23) & 0xFFFFFFFFFFFFF8);
  v51 = (_QWORD *)(((unint64_t)v47 + 23) & 0xFFFFFFFFFFFFF8);
  *v50 = *v51;
  v52 = (_QWORD *)(((unint64_t)v50 + 15) & 0xFFFFFFFFFFFFF8);
  v53 = (_QWORD *)(((unint64_t)v51 + 15) & 0xFFFFFFFFFFFFF8);
  *v52 = *v53;
  v54 = (_QWORD *)(((unint64_t)v52 + 15) & 0xFFFFFFFFFFFFFFF8);
  v55 = (unint64_t *)(((unint64_t)v53 + 15) & 0xFFFFFFFFFFFFFFF8);
  v56 = *v55;
  if (*v54 < 0xFFFFFFFFuLL)
  {
    if (v56 >= 0xFFFFFFFF)
    {
      v59 = v55[1];
      *v54 = v56;
      v54[1] = v59;
      swift_retain(v59);
      goto LABEL_26;
    }
  }
  else
  {
    if (v56 >= 0xFFFFFFFF)
    {
      v57 = v55[1];
      v58 = v54[1];
      *v54 = v56;
      v54[1] = v57;
      swift_retain(v57);
      swift_release(v58);
      goto LABEL_26;
    }
    swift_release(v54[1]);
  }
  *(_OWORD *)v54 = *(_OWORD *)v55;
LABEL_26:
  v60 = (_QWORD *)(((unint64_t)v54 + 23) & 0xFFFFFFFFFFFFFFF8);
  v61 = (_QWORD *)(((unint64_t)v55 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v60 = *v61;
  v62 = v60[1];
  v63 = v61[1];
  v60[1] = v63;
  swift_retain(v63);
  swift_release(v62);
  v64 = type metadata accessor for ScrollViewProxy(0);
  v65 = *(_QWORD *)(v64 - 8);
  v66 = *(_DWORD *)(v65 + 80) & 0xF8;
  v67 = v66 + 23;
  v68 = (unint64_t)v60 + v66 + 23;
  v69 = ~v66 & 0xFFFFFFFFFFFFFFF8;
  v70 = v68 & v69;
  v71 = ((unint64_t)v61 + v67) & v69;
  v72 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v65 + 48);
  LODWORD(v60) = v72(v68 & v69, 1, v64);
  v73 = v72(v71, 1, v64);
  if ((_DWORD)v60)
  {
    if (!v73)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v65 + 16))(v70, v71, v64);
      (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v65 + 56))(v70, 0, 1, v64);
      goto LABEL_35;
    }
  }
  else
  {
    if (!v73)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v65 + 24))(v70, v71, v64);
      goto LABEL_35;
    }
    (*(void (**)(unint64_t, uint64_t))(v65 + 8))(v70, v64);
  }
  if (*(_DWORD *)(v65 + 84))
    v74 = *(_QWORD *)(v65 + 64);
  else
    v74 = *(_QWORD *)(v65 + 64) + 1;
  memcpy((void *)v70, (const void *)v71, v74);
LABEL_35:
  if (*(_DWORD *)(v65 + 84))
    v75 = *(_QWORD *)(v65 + 64);
  else
    v75 = *(_QWORD *)(v65 + 64) + 1;
  v76 = (uint64_t *)(((v70 | 7) + v75) & 0xFFFFFFFFFFFFFFF8);
  v77 = (uint64_t *)(((v71 | 7) + v75) & 0xFFFFFFFFFFFFF8);
  v78 = *v77;
  v79 = *v76;
  *v76 = *v77;
  swift_retain(v78);
  swift_release(v79);
  v80 = ((v75 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v81 = (char *)(v80 + v70);
  v82 = (char *)(v80 + v71);
  *(_QWORD *)(v80 + v70) = *(_QWORD *)(v80 + v71);
  v83 = type metadata accessor for LayoutDirection(0);
  v84 = *(_QWORD *)(v83 - 8);
  v85 = *(_DWORD *)(v84 + 80) & 0xF8;
  v86 = v85 + 15;
  v87 = &v81[v85 + 15];
  v88 = ~v85 & 0xFFFFFFFFFFFFFFF8;
  v89 = (_QWORD *)((unint64_t)v87 & v88);
  v90 = &v82[v86];
  v91 = (uint64_t *)((unint64_t)v90 & v88);
  if (((unint64_t)v87 & v88) != ((unint64_t)v90 & v88))
  {
    v92 = v83;
    if (*(_QWORD *)(v84 + 64) <= 8uLL)
      v93 = 8;
    else
      v93 = *(_QWORD *)(v84 + 64);
    v94 = *((unsigned __int8 *)v89 + v93);
    if (v94 >= 2)
    {
      if (v93 <= 3)
        v95 = v93;
      else
        v95 = 4;
      __asm { BR              X12 }
    }
    if (v94 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v84 + 8))(v89, v83);
    else
      v96 = swift_release(*v89);
    v97 = *((unsigned __int8 *)v91 + v93);
    if (v97 >= 2)
    {
      if (v93 <= 3)
        v98 = v93;
      else
        v98 = 4;
      __asm { BR              X12 }
    }
    if (v97 == 1)
    {
      (*(void (**)(_QWORD *, uint64_t *, uint64_t, __n128))(v84 + 16))(v89, v91, v92, v96);
      *((_BYTE *)v89 + v93) = 1;
    }
    else
    {
      v99 = *v91;
      *v89 = *v91;
      *((_BYTE *)v89 + v93) = 0;
      swift_retain(v99);
    }
  }
  return v4;
}

