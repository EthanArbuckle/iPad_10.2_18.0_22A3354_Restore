void sub_1007A5D60(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  Swift::Int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  Swift::UInt v29;
  uint64_t v30;
  uint64_t *v31;
  _QWORD *v32;
  __int128 v33;
  uint64_t v34[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100007E8C(&qword_10119D570);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 0;
    v31 = v3;
    v32 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = v7 + 64;
    while (1)
    {
      if (v12)
      {
        v20 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v21 = v20 | (v9 << 6);
      }
      else
      {
        v22 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
          return;
        }
        if (v22 >= v13)
          goto LABEL_36;
        v23 = v32[v22];
        ++v9;
        if (!v23)
        {
          v9 = v22 + 1;
          if (v22 + 1 >= v13)
            goto LABEL_36;
          v23 = v32[v9];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v13)
            {
LABEL_36:
              if ((a2 & 1) == 0)
              {
                swift_release(v5);
                v3 = v31;
                goto LABEL_43;
              }
              v30 = 1 << *(_BYTE *)(v5 + 32);
              if (v30 >= 64)
                bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v32 = -1 << v30;
              v3 = v31;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v23 = v32[v24];
            if (!v23)
            {
              while (1)
              {
                v9 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_45;
                if (v9 >= v13)
                  goto LABEL_36;
                v23 = v32[v9];
                ++v24;
                if (v23)
                  goto LABEL_33;
              }
            }
            v9 = v24;
          }
        }
LABEL_33:
        v12 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v9 << 6);
      }
      v29 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v21);
      v33 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + 16 * v21);
      if ((a2 & 1) == 0)
        swift_retain(*((_QWORD *)&v33 + 1));
      Hasher.init(_seed:)(v34, *(_QWORD *)(v8 + 40));
      Hasher._combine(_:)(v29);
      v15 = Hasher._finalize()();
      v16 = -1 << *(_BYTE *)(v8 + 32);
      v17 = v15 & ~v16;
      v18 = v17 >> 6;
      if (((-1 << v17) & ~*(_QWORD *)(v14 + 8 * (v17 >> 6))) != 0)
      {
        v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v14 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v16) >> 6;
        do
        {
          if (++v18 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_44;
          }
          v27 = v18 == v26;
          if (v18 == v26)
            v18 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v14 + 8 * v18);
        }
        while (v28 == -1);
        v19 = __clz(__rbit64(~v28)) + (v18 << 6);
      }
      *(_QWORD *)(v14 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      *(_BYTE *)(*(_QWORD *)(v8 + 48) + v19) = v29;
      *(_OWORD *)(*(_QWORD *)(v8 + 56) + 16 * v19) = v33;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
LABEL_43:
  *v3 = v8;
}

void sub_1007A6034(uint64_t a1, uint64_t a2)
{
  sub_1007A604C(a1, a2, &qword_10119D230);
}

void sub_1007A6040(uint64_t a1, uint64_t a2)
{
  sub_1007A604C(a1, a2, &qword_10119D238);
}

void sub_1007A604C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int64_t v14;
  Swift::Int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  char v38;
  _QWORD v39[9];

  v4 = v3;
  v6 = *v3;
  if (*(_QWORD *)(*v3 + 24) <= a1)
    v7 = a1;
  else
    v7 = *(_QWORD *)(*v3 + 24);
  sub_100007E8C(a3);
  v38 = a2;
  v8 = static _DictionaryStorage.resize(original:capacity:move:)(v6, v7, a2);
  v9 = v8;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_43;
  v10 = 1 << *(_BYTE *)(v6 + 32);
  v37 = v6 + 64;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v12 = v11 & *(_QWORD *)(v6 + 64);
  v36 = (unint64_t)(v10 + 63) >> 6;
  v13 = v8 + 64;
  swift_retain(v6);
  v14 = 0;
  while (1)
  {
    if (v12)
    {
      v21 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v22 = v21 | (v14 << 6);
      goto LABEL_34;
    }
    v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v23 >= v36)
      break;
    v24 = (_QWORD *)(v6 + 64);
    v25 = *(_QWORD *)(v37 + 8 * v23);
    ++v14;
    if (!v25)
    {
      v14 = v23 + 1;
      if (v23 + 1 >= v36)
        goto LABEL_36;
      v25 = *(_QWORD *)(v37 + 8 * v14);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v36)
        {
LABEL_36:
          swift_release(v6);
          if ((v38 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v25 = *(_QWORD *)(v37 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v14 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_45;
            if (v14 >= v36)
              goto LABEL_36;
            v25 = *(_QWORD *)(v37 + 8 * v14);
            ++v26;
            if (v25)
              goto LABEL_33;
          }
        }
        v14 = v26;
      }
    }
LABEL_33:
    v12 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_34:
    v31 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v22);
    v33 = *v31;
    v32 = v31[1];
    v34 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v22);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain(v34);
    }
    Hasher.init(_seed:)(v39, *(_QWORD *)(v9 + 40));
    swift_bridgeObjectRetain();
    String.hash(into:)(v39, v33, v32);
    swift_bridgeObjectRelease(v32);
    v15 = Hasher._finalize()();
    v16 = -1 << *(_BYTE *)(v9 + 32);
    v17 = v15 & ~v16;
    v18 = v17 >> 6;
    if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v29 = v18 == v28;
        if (v18 == v28)
          v18 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v20 = (_QWORD *)(*(_QWORD *)(v9 + 48) + 16 * v19);
    *v20 = v33;
    v20[1] = v32;
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v19) = v34;
    ++*(_QWORD *)(v9 + 16);
  }
  swift_release(v6);
  v24 = (_QWORD *)(v6 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v35 = 1 << *(_BYTE *)(v6 + 32);
  if (v35 >= 64)
    bzero(v24, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v35;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_43:
  swift_release(v6);
  *v4 = v9;
}

void sub_1007A636C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  sub_100007E8C(&qword_10119D1F8);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    swift_release(v2);
LABEL_28:
    *v1 = v4;
    return;
  }
  v25 = v1;
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_10004FA40(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_100048ABC(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    swift_release(v2);
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_1007A6550()
{
  sub_1007A947C(&qword_10119D5A0);
}

void sub_1007A655C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  __int128 v19;

  v1 = v0;
  sub_100007E8C(&qword_10119D4D0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v16 >= v13)
      goto LABEL_26;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_26;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
        break;
    }
LABEL_25:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    v19 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + 16 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + 16 * v15) = v19;
    swift_retain(v19);
    swift_retain(*((_QWORD *)&v19 + 1));
  }
  v18 = v16 + 2;
  if (v18 >= v13)
    goto LABEL_26;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1007A6718()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  sub_100007E8C((uint64_t *)&unk_10119D260);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1007A68D0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  sub_100007E8C(&qword_10119D368);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1007A6A84()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  sub_100007E8C(&qword_10119D360);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 16 * v15;
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v18);
    v21 = *v19;
    v20 = v19[1];
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v18);
    *v22 = v21;
    v22[1] = v20;
    swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1007A6C30()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  sub_100007E8C(&qword_10119D8E8);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v16) = v20;
    swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1007A6DD8()
{
  sub_1007AA4B0(&qword_10119D210);
}

void sub_1007A6DE4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v1 = v0;
  v2 = type metadata accessor for SidebarMenu.Item(0);
  v27 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_10119D4E0);
  v5 = *v0;
  v6 = static _DictionaryStorage.copy(original:)(*v0);
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    swift_release(v5);
LABEL_28:
    *v1 = v7;
    return;
  }
  v26 = v1;
  v8 = (void *)(v6 + 64);
  v9 = v5 + 64;
  v10 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)v8 >= v5 + 64 + 8 * v10)
    memmove(v8, (const void *)(v5 + 64), 8 * v10);
  v12 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v13 = 1 << *(_BYTE *)(v5 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v5 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v23 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v23 >= v16)
      goto LABEL_26;
    v24 = *(_QWORD *)(v9 + 8 * v23);
    ++v12;
    if (!v24)
    {
      v12 = v23 + 1;
      if (v23 + 1 >= v16)
        goto LABEL_26;
      v24 = *(_QWORD *)(v9 + 8 * v12);
      if (!v24)
        break;
    }
LABEL_25:
    v15 = (v24 - 1) & v24;
    v18 = __clz(__rbit64(v24)) + (v12 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v27 + 72) * v18;
    sub_1001FFA40(*(_QWORD *)(v5 + 48) + v19, (uint64_t)v4);
    v20 = 8 * v18;
    v21 = *(void **)(*(_QWORD *)(v5 + 56) + v20);
    sub_10004A0B4((uint64_t)v4, *(_QWORD *)(v7 + 48) + v19);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v20) = v21;
    v22 = v21;
  }
  v25 = v23 + 2;
  if (v25 >= v16)
  {
LABEL_26:
    swift_release(v5);
    v1 = v26;
    goto LABEL_28;
  }
  v24 = *(_QWORD *)(v9 + 8 * v25);
  if (v24)
  {
    v12 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v24 = *(_QWORD *)(v9 + 8 * v12);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_1007A7000()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_100007E8C((uint64_t *)&unk_10119D460);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = *v16;
    v17 = v16[1];
    LOBYTE(v16) = *(_BYTE *)(*(_QWORD *)(v2 + 56) + v15);
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v15);
    *v19 = v18;
    v19[1] = v17;
    *(_BYTE *)(*(_QWORD *)(v4 + 56) + v15) = (_BYTE)v16;
    swift_bridgeObjectRetain();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1007A71A8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  id v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  sub_100007E8C(&qword_10119D620);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = *(void **)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
    v17 = v16;
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1007A7348()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  sub_100007E8C(&qword_10119D240);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    swift_release(v2);
LABEL_28:
    *v1 = v4;
    return;
  }
  v25 = v1;
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_10004FA40(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_100048ABC(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    swift_release(v2);
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_1007A752C()
{
  sub_1007A7A78(&qword_10119D580);
}

void sub_1007A7538()
{
  sub_1007A90E8(&qword_10119D588);
}

void sub_1007A7544()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  unint64_t v5;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;
  char v27[8];

  sub_100007E8C(&qword_10119D218);
  v24 = v0;
  v1 = *v0;
  v2 = static _DictionaryStorage.copy(original:)(*v0);
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
LABEL_26:
    swift_release(v1);
    *v24 = v3;
    return;
  }
  v4 = (void *)(v2 + 64);
  v5 = (unint64_t)((1 << *(_BYTE *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)v4 >= v1 + 64 + 8 * v5)
    memmove(v4, (const void *)(v1 + 64), 8 * v5);
  v7 = 0;
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v1 + 16);
  v8 = 1 << *(_BYTE *)(v1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(v1 + 64);
  v25 = v1 + 64;
  v26 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      v11 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v12 = v11 | (v7 << 6);
      goto LABEL_12;
    }
    v21 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v26)
      goto LABEL_26;
    v22 = *(_QWORD *)(v25 + 8 * v21);
    ++v7;
    if (!v22)
    {
      v7 = v21 + 1;
      if (v21 + 1 >= v26)
        goto LABEL_26;
      v22 = *(_QWORD *)(v25 + 8 * v7);
      if (!v22)
        break;
    }
LABEL_25:
    v10 = (v22 - 1) & v22;
    v12 = __clz(__rbit64(v22)) + (v7 << 6);
LABEL_12:
    v13 = 32 * v12;
    v14 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 32 * v12);
    v15 = *v14;
    v16 = v14[1];
    v17 = v14[2];
    v18 = v14[3];
    v19 = 8 * v12;
    sub_1007AC8E4(*(_QWORD *)(v1 + 56) + 8 * v12, (uint64_t)v27);
    v20 = (_QWORD *)(*(_QWORD *)(v3 + 48) + v13);
    *v20 = v15;
    v20[1] = v16;
    v20[2] = v17;
    v20[3] = v18;
    sub_100048ACC((uint64_t)v27, *(_QWORD *)(v3 + 56) + v19);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v23 = v21 + 2;
  if (v23 >= v26)
    goto LABEL_26;
  v22 = *(_QWORD *)(v25 + 8 * v23);
  if (v22)
  {
    v7 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v7 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v7 >= v26)
      goto LABEL_26;
    v22 = *(_QWORD *)(v25 + 8 * v7);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1007A7738()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;

  v1 = v0;
  sub_100007E8C(&qword_10119D318);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v20 = __clz(__rbit64(v18));
    v12 = (v18 - 1) & v18;
    v15 = v20 + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1007A78C4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_100007E8C((uint64_t *)&unk_10119D490);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = *v16;
    v17 = v16[1];
    LOBYTE(v16) = *(_BYTE *)(*(_QWORD *)(v2 + 56) + v15);
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v15);
    *v19 = v18;
    v19[1] = v17;
    *(_BYTE *)(*(_QWORD *)(v4 + 56) + v15) = (_BYTE)v16;
    swift_bridgeObjectRetain();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1007A7A6C()
{
  sub_1007A7A78(&qword_1011A8F80);
}

void sub_1007A7A78(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v2 = v1;
  sub_100007E8C(a1);
  v3 = *v1;
  v4 = static _DictionaryStorage.copy(original:)(*v1);
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    swift_release(v3);
    *v2 = v5;
    return;
  }
  v6 = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)v6 >= v3 + 64 + 8 * v8)
    memmove(v6, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v19 = v18[1];
    v20 = 8 * v16;
    v21 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v22 = *v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1007A7C24()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  sub_100007E8C((uint64_t *)&unk_10119D340);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 8 * v15;
    v21 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v22 = v19;
    v22[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1007A7DD0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  sub_100007E8C(&qword_10119D4A0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1007A7F88()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;

  v34 = type metadata accessor for Album(0);
  v1 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_10119D568);
  v31 = v0;
  v4 = *v0;
  v5 = static _DictionaryStorage.copy(original:)(*v0);
  v6 = *(_QWORD *)(v4 + 16);
  v35 = v5;
  if (!v6)
  {
    swift_release();
    v29 = v35;
    v28 = v31;
LABEL_28:
    *v28 = v29;
    return;
  }
  v7 = v5;
  v8 = (void *)(v5 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v4 || (unint64_t)v8 >= v4 + 64 + 8 * v9)
  {
    memmove(v8, (const void *)(v4 + 64), 8 * v9);
    v7 = v35;
  }
  v32 = v4 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v4 + 16);
  v12 = 1 << *(_BYTE *)(v4 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v4 + 64);
  v33 = (unint64_t)(v12 + 63) >> 6;
  v15 = v34;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v25 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v33)
      goto LABEL_26;
    v26 = *(_QWORD *)(v32 + 8 * v25);
    ++v11;
    if (!v26)
    {
      v11 = v25 + 1;
      if (v25 + 1 >= v33)
        goto LABEL_26;
      v26 = *(_QWORD *)(v32 + 8 * v11);
      if (!v26)
        break;
    }
LABEL_25:
    v14 = (v26 - 1) & v26;
    v17 = __clz(__rbit64(v26)) + (v11 << 6);
LABEL_12:
    v18 = 16 * v17;
    v19 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v17);
    v21 = *v19;
    v20 = v19[1];
    v22 = *(_QWORD *)(v1 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v3, *(_QWORD *)(v4 + 56) + v22, v15);
    v23 = v35;
    v24 = (_QWORD *)(*(_QWORD *)(v35 + 48) + v18);
    *v24 = v21;
    v24[1] = v20;
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(_QWORD *)(v23 + 56) + v22, v3, v15);
    swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v33)
  {
LABEL_26:
    swift_release();
    v28 = v31;
    v29 = v35;
    goto LABEL_28;
  }
  v26 = *(_QWORD *)(v32 + 8 * v27);
  if (v26)
  {
    v11 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v11 >= v33)
      goto LABEL_26;
    v26 = *(_QWORD *)(v32 + 8 * v11);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_1007A81E4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  char v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;

  v1 = v0;
  sub_100007E8C(&qword_1011C8958);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release();
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13)
      goto LABEL_26;
    v28 = *(_QWORD *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      v9 = v27 + 1;
      if (v27 + 1 >= v13)
        goto LABEL_26;
      v28 = *(_QWORD *)(v6 + 8 * v9);
      if (!v28)
        break;
    }
LABEL_25:
    v12 = (v28 - 1) & v28;
    v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 24 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v22 = *(_QWORD *)v21;
    v23 = *(_QWORD *)(v21 + 8);
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    v25 = *(_BYTE *)(v21 + 16);
    *v24 = v19;
    v24[1] = v18;
    v26 = *(_QWORD *)(v4 + 56) + v20;
    *(_QWORD *)v26 = v22;
    *(_QWORD *)(v26 + 8) = v23;
    *(_BYTE *)(v26 + 16) = v25;
    swift_bridgeObjectRetain();
    sub_1007AC8CC(v22, v23, v25);
  }
  v29 = v27 + 2;
  if (v29 >= v13)
    goto LABEL_26;
  v28 = *(_QWORD *)(v6 + 8 * v29);
  if (v28)
  {
    v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v28 = *(_QWORD *)(v6 + 8 * v9);
    ++v29;
    if (v28)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1007A83BC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  sub_100007E8C(&qword_10119D1F0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(v2 + 56) + 24 * v15;
    v17 = *(_BYTE *)v16;
    v18 = *(_BYTE *)(v16 + 1);
    v19 = *(_QWORD *)(v16 + 8);
    v20 = *(_QWORD *)(v16 + 16);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    v21 = *(_QWORD *)(v4 + 56) + 24 * v15;
    *(_BYTE *)v21 = v17;
    *(_BYTE *)(v21 + 1) = v18;
    *(_QWORD *)(v21 + 8) = v19;
    *(_QWORD *)(v21 + 16) = v20;
    sub_100048AAC(v19, v20);
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1007A8578()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  int64_t v24;

  v1 = sub_100007E8C((uint64_t *)&unk_1011CEE50);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011C8960);
  v22 = v0;
  v5 = *v0;
  v6 = static _DictionaryStorage.copy(original:)(*v0);
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_23:
    swift_release();
    *v22 = v7;
    return;
  }
  v8 = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)v8 >= v5 + 64 + 8 * v9)
    memmove(v8, (const void *)(v5 + 64), 8 * v9);
  v10 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v11 = 1 << *(_BYTE *)(v5 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v5 + 64);
  v23 = v5 + 64;
  v24 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v18 >= v24)
      goto LABEL_23;
    v19 = *(_QWORD *)(v23 + 8 * v18);
    ++v10;
    if (!v19)
    {
      v10 = v18 + 1;
      if (v18 + 1 >= v24)
        goto LABEL_23;
      v19 = *(_QWORD *)(v23 + 8 * v10);
      if (!v19)
        break;
    }
LABEL_22:
    v13 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v10 << 6);
LABEL_9:
    v16 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v15);
    v17 = *(_QWORD *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 56) + v17, v1);
    *(_BYTE *)(*(_QWORD *)(v7 + 48) + v15) = v16;
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 56) + v17, v4, v1);
  }
  v20 = v18 + 2;
  if (v20 >= v24)
    goto LABEL_23;
  v19 = *(_QWORD *)(v23 + 8 * v20);
  if (v19)
  {
    v10 = v20;
    goto LABEL_22;
  }
  while (1)
  {
    v10 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v10 >= v24)
      goto LABEL_23;
    v19 = *(_QWORD *)(v23 + 8 * v10);
    ++v20;
    if (v19)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

void sub_1007A879C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  _OWORD v24[2];
  _OWORD v25[2];
  uint64_t v26;

  v1 = v0;
  sub_100007E8C((uint64_t *)&unk_10119D250);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_26;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
        break;
    }
LABEL_25:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 40 * v15;
    sub_100051FEC(*(_QWORD *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    v17 = 32 * v15;
    sub_10004FA40(*(_QWORD *)(v2 + 56) + v17, (uint64_t)v24);
    v18 = *(_QWORD *)(v4 + 48) + v16;
    v19 = v25[0];
    v20 = v25[1];
    *(_QWORD *)(v18 + 32) = v26;
    *(_OWORD *)v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    sub_100048ABC(v24, (_OWORD *)(*(_QWORD *)(v4 + 56) + v17));
  }
  v23 = v21 + 2;
  if (v23 >= v13)
    goto LABEL_26;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1007A8980()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  sub_100007E8C((uint64_t *)&unk_1011C5BC0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release();
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    swift_retain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1007A8B34()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;

  v1 = v0;
  sub_100007E8C(&qword_10119D550);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release();
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_26;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
        break;
    }
LABEL_25:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(v2 + 56) + 24 * v15;
    v17 = *(_BYTE *)v16;
    v18 = *(_QWORD *)(v16 + 8);
    v19 = *(_QWORD *)(v16 + 16);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    v20 = *(_QWORD *)(v4 + 56) + 24 * v15;
    *(_BYTE *)v20 = v17;
    *(_QWORD *)(v20 + 8) = v18;
    *(_QWORD *)(v20 + 16) = v19;
    sub_100048AAC(v18, v19);
  }
  v23 = v21 + 2;
  if (v23 >= v13)
    goto LABEL_26;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1007A8CE8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;

  v1 = v0;
  sub_100007E8C(&qword_10119D418);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release();
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      v9 = v24 + 1;
      if (v24 + 1 >= v13)
        goto LABEL_26;
      v25 = *(_QWORD *)(v6 + 8 * v9);
      if (!v25)
        break;
    }
LABEL_25:
    v12 = (v25 - 1) & v25;
    v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = *(_QWORD *)(v2 + 56) + v16;
    v21 = *(_QWORD *)v20;
    LOBYTE(v20) = *(_BYTE *)(v20 + 8);
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v22 = v19;
    v22[1] = v18;
    v23 = *(_QWORD *)(v4 + 56) + v16;
    *(_QWORD *)v23 = v21;
    *(_BYTE *)(v23 + 8) = v20;
    swift_bridgeObjectRetain();
  }
  v26 = v24 + 2;
  if (v26 >= v13)
    goto LABEL_26;
  v25 = *(_QWORD *)(v6 + 8 * v26);
  if (v25)
  {
    v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v9);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1007A8EA0()
{
  sub_1007AA4B0(&qword_10119D208);
}

void sub_1007A8EAC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C((uint64_t *)&unk_10119D440);
  v24 = v0;
  v5 = *v0;
  v6 = static _DictionaryStorage.copy(original:)(*v0);
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    swift_release();
    *v24 = v7;
    return;
  }
  v8 = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)v8 >= v5 + 64 + 8 * v9)
    memmove(v8, (const void *)(v5 + 64), 8 * v9);
  v25 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 8 * v16;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
    swift_retain();
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1007A90DC()
{
  sub_1007A90E8(&qword_10119D5D8);
}

void sub_1007A90E8(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;

  v2 = v1;
  sub_100007E8C(a1);
  v3 = *v1;
  v4 = static _DictionaryStorage.copy(original:)(*v1);
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    swift_release(v3);
    *v2 = v5;
    return;
  }
  v6 = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)v6 >= v3 + 64 + 8 * v8)
    memmove(v6, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v14)
      goto LABEL_26;
    v22 = *(_QWORD *)(v7 + 8 * v21);
    ++v10;
    if (!v22)
    {
      v10 = v21 + 1;
      if (v21 + 1 >= v14)
        goto LABEL_26;
      v22 = *(_QWORD *)(v7 + 8 * v10);
      if (!v22)
        break;
    }
LABEL_25:
    v13 = (v22 - 1) & v22;
    v16 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v3 + 48) + v17);
    v19 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v17) = v19;
    v20 = v18;
    swift_bridgeObjectRetain();
  }
  v23 = v21 + 2;
  if (v23 >= v14)
    goto LABEL_26;
  v22 = *(_QWORD *)(v7 + 8 * v23);
  if (v22)
  {
    v10 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v22 = *(_QWORD *)(v7 + 8 * v10);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1007A9288()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  sub_100007E8C(&qword_10119D4B0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release();
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(v2 + 56) + 48 * v15;
    v17 = *(_BYTE *)v16;
    v18 = *(_QWORD *)(v16 + 40);
    v19 = *(_OWORD *)(v16 + 8);
    v20 = *(_OWORD *)(v16 + 24);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    v21 = *(_QWORD *)(v4 + 56) + 48 * v15;
    *(_BYTE *)v21 = v17;
    *(_OWORD *)(v21 + 8) = v19;
    *(_OWORD *)(v21 + 24) = v20;
    *(_QWORD *)(v21 + 40) = v18;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1007A9470()
{
  sub_1007A947C(&qword_1011C8968);
}

void sub_1007A947C(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;

  v2 = v1;
  sub_100007E8C(a1);
  v3 = *v1;
  v4 = static _DictionaryStorage.copy(original:)(*v1);
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    swift_release(v3);
    *v2 = v5;
    return;
  }
  v6 = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)v6 >= v3 + 64 + 8 * v8)
    memmove(v6, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v24 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v14)
      goto LABEL_26;
    v25 = *(_QWORD *)(v7 + 8 * v24);
    ++v10;
    if (!v25)
    {
      v10 = v24 + 1;
      if (v24 + 1 >= v14)
        goto LABEL_26;
      v25 = *(_QWORD *)(v7 + 8 * v10);
      if (!v25)
        break;
    }
LABEL_25:
    v13 = (v25 - 1) & v25;
    v16 = __clz(__rbit64(v25)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v20 = *v18;
    v19 = v18[1];
    v21 = 8 * v16;
    v22 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v21);
    v23 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v23 = v20;
    v23[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v21) = v22;
    swift_bridgeObjectRetain();
  }
  v26 = v24 + 2;
  if (v26 >= v14)
    goto LABEL_26;
  v25 = *(_QWORD *)(v7 + 8 * v26);
  if (v25)
  {
    v10 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v25 = *(_QWORD *)(v7 + 8 * v10);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1007A9620()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  _OWORD v23[2];

  v1 = v0;
  sub_100007E8C(&qword_1011AD4E0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release();
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 32 * v15;
    sub_10004FA40(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v23);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    sub_100048ABC(v23, (_OWORD *)(*(_QWORD *)(v4 + 56) + v18));
    v19 = v17;
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1007A97E4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  int64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;

  v41 = type metadata accessor for VideoArtwork(0);
  v37 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v40 = (char *)&v33 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for EditorialVideoArtworkFlavor(0);
  v36 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v38 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_10119D1E0);
  v33 = v0;
  v3 = *v0;
  v4 = static _DictionaryStorage.copy(original:)(*v0);
  v5 = *(_QWORD *)(v3 + 16);
  v43 = v4;
  if (!v5)
  {
    swift_release(v3);
    v32 = v43;
    v31 = v33;
LABEL_25:
    *v31 = v32;
    return;
  }
  v6 = v4;
  v7 = (char *)(v4 + 64);
  v8 = (char *)(v3 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v6 + 32)) + 63) >> 6;
  v34 = v3 + 64;
  if (v6 != v3 || v7 >= &v8[8 * v9])
  {
    memmove(v7, v8, 8 * v9);
    v6 = v43;
  }
  v10 = 0;
  *(_QWORD *)(v6 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v42 = v3;
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v35 = (unint64_t)(v11 + 63) >> 6;
  v14 = v36;
  v15 = v37;
  v17 = v38;
  v16 = v39;
  v18 = v41;
  v19 = v43;
  while (1)
  {
    if (v13)
    {
      v20 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v44 = v10;
      v21 = v20 | (v10 << 6);
      v22 = v42;
      goto LABEL_9;
    }
    v27 = v10 + 1;
    v22 = v42;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v27 >= v35)
      goto LABEL_23;
    v28 = *(_QWORD *)(v34 + 8 * v27);
    v29 = v10 + 1;
    if (!v28)
    {
      v29 = v27 + 1;
      if (v27 + 1 >= v35)
        goto LABEL_23;
      v28 = *(_QWORD *)(v34 + 8 * v29);
      if (!v28)
        break;
    }
LABEL_22:
    v13 = (v28 - 1) & v28;
    v44 = v29;
    v21 = __clz(__rbit64(v28)) + (v29 << 6);
LABEL_9:
    v23 = *(_QWORD *)(v14 + 72) * v21;
    (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v17, *(_QWORD *)(v22 + 48) + v23, v16);
    v24 = *(_QWORD *)(v15 + 72) * v21;
    v25 = *(_QWORD *)(v22 + 56) + v24;
    v26 = v40;
    (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(v40, v25, v18);
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(*(_QWORD *)(v19 + 48) + v23, v17, v16);
    (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(*(_QWORD *)(v19 + 56) + v24, v26, v18);
    v10 = v44;
  }
  v30 = v27 + 2;
  if (v30 >= v35)
  {
LABEL_23:
    swift_release(v42);
    v31 = v33;
    v32 = v43;
    goto LABEL_25;
  }
  v28 = *(_QWORD *)(v34 + 8 * v30);
  if (v28)
  {
    v29 = v30;
    goto LABEL_22;
  }
  while (1)
  {
    v29 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v29 >= v35)
      goto LABEL_23;
    v28 = *(_QWORD *)(v34 + 8 * v29);
    ++v30;
    if (v28)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
}

void sub_1007A9AC4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;

  v1 = v0;
  sub_100007E8C((uint64_t *)&unk_10119D480);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release();
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v20 = __clz(__rbit64(v18));
    v12 = (v18 - 1) & v18;
    v15 = v20 + (v9 << 6);
LABEL_12:
    v16 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + 16 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + 16 * v15) = v16;
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1007A9C50()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v1 = v0;
  sub_100007E8C(&qword_10119D428);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release();
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    sub_10004A06C(v17);
    swift_bridgeObjectRetain();
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1007A9DF8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  id v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  sub_100007E8C(&qword_10119D3C8);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release();
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(void **)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    v22 = v20;
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1007A9FA8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;

  v1 = v0;
  sub_100007E8C((uint64_t *)&unk_1011CE790);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release();
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_26;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
        break;
    }
LABEL_25:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(void **)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    v19 = v17;
    v20 = v18;
  }
  v23 = v21 + 2;
  if (v23 >= v13)
    goto LABEL_26;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1007AA14C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_100007E8C((uint64_t *)&unk_10119D3B0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release();
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    v19 = v17;
    swift_retain();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1007AA2F4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  sub_100007E8C(&qword_10119D570);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + 16 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + 16 * v15) = v16;
    swift_retain(*((_QWORD *)&v16 + 1));
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1007AA498()
{
  sub_1007AA4B0(&qword_10119D230);
}

void sub_1007AA4A4()
{
  sub_1007AA4B0(&qword_10119D238);
}

void sub_1007AA4B0(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v2 = v1;
  sub_100007E8C(a1);
  v3 = *v1;
  v4 = static _DictionaryStorage.copy(original:)(*v1);
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    swift_release(v3);
    *v2 = v5;
    return;
  }
  v6 = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)v6 >= v3 + 64 + 8 * v8)
    memmove(v6, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v19 = v18[1];
    v20 = 8 * v16;
    v21 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v22 = *v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    swift_retain(v21);
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

unint64_t sub_1007AA65C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  unint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  _QWORD v26[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v6);
        v10 = *v9;
        v11 = v9[1];
        Hasher.init(_seed:)(v26, *(_QWORD *)(a2 + 40));
        swift_bridgeObjectRetain(v11);
        String.hash(into:)(v26, v10, v11);
        v12 = Hasher._finalize()();
        result = swift_bridgeObjectRelease(v11);
        v13 = v12 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 < v8)
            goto LABEL_5;
        }
        else if (v13 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v13)
        {
LABEL_11:
          v14 = *(_QWORD *)(a2 + 48);
          v15 = (_OWORD *)(v14 + 16 * v3);
          v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || v15 >= v16 + 1)
            *v15 = *v16;
          v17 = *(_QWORD *)(a2 + 56);
          v18 = (_QWORD *)(v17 + 8 * v3);
          v19 = (_QWORD *)(v17 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v18 >= v19 + 1))
          {
            *v18 = *v19;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1007AA830(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  unint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  _QWORD v26[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v6);
        v10 = *v9;
        v11 = v9[1];
        Hasher.init(_seed:)(v26, *(_QWORD *)(a2 + 40));
        swift_bridgeObjectRetain(v11);
        String.hash(into:)(v26, v10, v11);
        v12 = Hasher._finalize()();
        result = swift_bridgeObjectRelease(v11);
        v13 = v12 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 < v8)
            goto LABEL_5;
        }
        else if (v13 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v13)
        {
LABEL_11:
          v14 = *(_QWORD *)(a2 + 48);
          v15 = (_OWORD *)(v14 + 16 * v3);
          v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || v15 >= v16 + 1)
            *v15 = *v16;
          v17 = *(_QWORD *)(a2 + 56);
          v18 = (_OWORD *)(v17 + 16 * v3);
          v19 = (_OWORD *)(v17 + 16 * v6);
          if (v3 != v6 || (v3 = v6, v18 >= v19 + 1))
          {
            *v18 = *v19;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1007AAA04(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  _QWORD v29[21];
  uint64_t v30;
  uint64_t v31[10];

  v4 = type metadata accessor for Playlist.Folder.Item(0);
  v29[17] = *(_QWORD *)(v4 - 8);
  v29[18] = v4;
  __chkstk_darwin(v4);
  v29[16] = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SidebarMenu.Item(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)v29 - v11;
  v13 = a2 + 64;
  v30 = a2;
  v14 = -1 << *(_BYTE *)(a2 + 32);
  v15 = (a1 + 1) & ~v14;
  if (((1 << v15) & *(_QWORD *)(a2 + 64 + 8 * (v15 >> 6))) != 0)
  {
    v16 = ~v14;
    v17 = _HashTable.previousHole(before:)(a1, v13, ~v14);
    if ((*(_QWORD *)(v13 + 8 * (v15 >> 6)) & (1 << v15)) != 0)
    {
      v29[20] = (v17 + 1) & v16;
      v18 = v16;
      v19 = *(_QWORD *)(v7 + 72);
      v29[12] = "LibraryView.RecentlyAdded";
      v29[13] = "account";
      v29[10] = "LibraryView.Artists";
      v29[11] = "LibraryView.Playlists";
      v29[9] = "LibraryView.Albums";
      v29[8] = "LibraryView.Songs";
      v29[7] = "LibraryView.MadeForYou";
      v29[6] = "LibraryView.MusicVideos";
      v29[5] = "LibraryView.Genres";
      v29[4] = "LibraryView.Compilations";
      v29[3] = "LibraryView.Composers";
      v29[2] = "LibraryView.Shows";
      v29[1] = "LibraryView.Downloaded";
      v29[19] = v18;
      v20 = v30;
      v29[14] = v13;
      v29[15] = v6;
      sub_1001FFA40(*(_QWORD *)(v30 + 48) + v19 * v15, (uint64_t)v12);
      Hasher.init(_seed:)(v31, *(_QWORD *)(v20 + 40));
      sub_1001FFA40((uint64_t)v12, (uint64_t)v9);
      v21 = (char *)&loc_1007AAC8C + *((int *)qword_1007AAFD0 + swift_getEnumCaseMultiPayload(v9, v6));
      __asm { BR              X9 }
    }
    v25 = v30;
    v22 = (uint64_t *)(v13 + 8 * (a1 >> 6));
    v24 = *v22;
    v23 = (-1 << a1) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v13 + 8 * (a1 >> 6));
    v23 = *v22;
    v24 = (-1 << a1) - 1;
    v25 = v30;
  }
  *v22 = v23 & v24;
  v26 = *(_QWORD *)(v25 + 16);
  v27 = __OFSUB__(v26, 1);
  v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
    JUMPOUT(0x1007AAFD0);
  }
  *(_QWORD *)(v25 + 16) = v28;
  ++*(_DWORD *)(v25 + 36);
}

unint64_t sub_1007AB01C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  _QWORD v25[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + v6);
        Hasher.init(_seed:)(v25, *(_QWORD *)(a2 + 40));
        if (v9)
          v10 = 0x6F4E6E657473696CLL;
        else
          v10 = 0x487972617262696CLL;
        if (v9)
          v11 = 0xEF72656461654877;
        else
          v11 = 0xED00007265646165;
        String.hash(into:)(v25, v10, v11);
        swift_bridgeObjectRelease(v11);
        result = Hasher._finalize()();
        v12 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8)
            goto LABEL_5;
        }
        else if (v12 >= v8)
        {
          goto LABEL_17;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_17:
          v13 = *(_QWORD *)(a2 + 48);
          v14 = (_BYTE *)(v13 + v3);
          v15 = (_BYTE *)(v13 + v6);
          if (v3 != v6 || v14 >= v15 + 1)
            *v14 = *v15;
          v16 = *(_QWORD *)(a2 + 56);
          v17 = (_QWORD *)(v16 + 8 * v3);
          v18 = (_QWORD *)(v16 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v17 >= v18 + 1))
          {
            *v17 = *v18;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1007AB230(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  unint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  _QWORD v27[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v10 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v6);
        v11 = *v10;
        v12 = v10[1];
        Hasher.init(_seed:)(v27, *(_QWORD *)(a2 + 40));
        swift_bridgeObjectRetain(v12);
        String.hash(into:)(v27, v11, v12);
        v13 = Hasher._finalize()();
        result = swift_bridgeObjectRelease(v12);
        v14 = v13 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v14 < v8)
            goto LABEL_5;
        }
        else if (v14 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v14)
        {
LABEL_11:
          v15 = *(_QWORD *)(a2 + 48);
          v16 = (_OWORD *)(v15 + 16 * v3);
          v17 = (_OWORD *)(v15 + 16 * v6);
          if (v3 != v6 || v16 >= v17 + 1)
            *v16 = *v17;
          v18 = *(_QWORD *)(a2 + 56);
          v19 = (_OWORD *)(v18 + 32 * v3);
          v20 = (_OWORD *)(v18 + 32 * v6);
          if (v3 != v6 || (v3 = v6, v19 >= v20 + 2))
          {
            v9 = v20[1];
            *v19 = *v20;
            v19[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    v23 = *v21;
    v22 = (-1 << result) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1007AB404(unint64_t a1, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Swift::Int v15;
  unint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  __int128 v20;
  uint64_t v21;
  unint64_t v22;
  BOOL v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  _QWORD v30[9];

  v3 = a1;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    v8 = _HashTable.previousHole(before:)(a1, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      while (1)
      {
        v10 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 32 * v6);
        v12 = *v10;
        v11 = v10[1];
        v13 = v10[2];
        v14 = v10[3];
        Hasher.init(_seed:)(v30, *(_QWORD *)(a2 + 40));
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        String.hash(into:)(v30, v12, v11);
        if (v14)
        {
          swift_bridgeObjectRetain();
          String.hash(into:)(v30, v13, v14);
          swift_bridgeObjectRelease(v14);
        }
        v15 = Hasher._finalize()();
        swift_bridgeObjectRelease(v14);
        swift_bridgeObjectRelease(v11);
        v16 = v15 & v7;
        if (v3 >= (uint64_t)v9)
          break;
        if (v16 < v9)
          goto LABEL_13;
LABEL_14:
        v17 = *(_QWORD *)(a2 + 48);
        v18 = (_OWORD *)(v17 + 32 * v3);
        v19 = (_OWORD *)(v17 + 32 * v6);
        if (v3 != v6 || v18 >= v19 + 2)
        {
          v20 = v19[1];
          *v18 = *v19;
          v18[1] = v20;
        }
        v21 = *(_QWORD *)(a2 + 56);
        v22 = v21 + 8 * v3;
        if (v3 < (uint64_t)v6 || v22 >= v21 + 8 * v6 + 8)
        {
          sub_100007E8C(&qword_1011B8D70);
          swift_arrayInitWithTakeFrontToBack(v22);
        }
        else
        {
          v23 = v3 == v6;
          v3 = v6;
          if (v23)
            goto LABEL_6;
          sub_100007E8C(&qword_1011B8D70);
          swift_arrayInitWithTakeBackToFront(v22);
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          goto LABEL_21;
      }
      if (v16 < v9)
        goto LABEL_6;
LABEL_13:
      if (v3 < (uint64_t)v16)
        goto LABEL_6;
      goto LABEL_14;
    }
LABEL_21:
    v24 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v25 = *v24;
    v26 = (-1 << v3) - 1;
  }
  else
  {
    v24 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    v26 = *v24;
    v25 = (-1 << a1) - 1;
  }
  *v24 = v26 & v25;
  v27 = *(_QWORD *)(a2 + 16);
  v28 = __OFSUB__(v27, 1);
  v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v29;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_1007AB658(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  unint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  _QWORD v26[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v6);
        v10 = *v9;
        v11 = v9[1];
        Hasher.init(_seed:)(v26, *(_QWORD *)(a2 + 40));
        swift_bridgeObjectRetain(v11);
        String.hash(into:)(v26, v10, v11);
        v12 = Hasher._finalize()();
        result = swift_bridgeObjectRelease(v11);
        v13 = v12 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 < v8)
            goto LABEL_5;
        }
        else if (v13 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v13)
        {
LABEL_11:
          v14 = *(_QWORD *)(a2 + 48);
          v15 = (_OWORD *)(v14 + 16 * v3);
          v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || v15 >= v16 + 1)
            *v15 = *v16;
          v17 = *(_QWORD *)(a2 + 56);
          v18 = (_BYTE *)(v17 + v3);
          v19 = (_BYTE *)(v17 + v6);
          if (v3 != v6 || (v3 = v6, v18 >= v19 + 1))
          {
            *v18 = *v19;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1007AB82C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  Swift::UInt v10;
  unint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  unint64_t v16;
  __int128 *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  _QWORD v24[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v10 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + v6);
        Hasher.init(_seed:)(v24, *(_QWORD *)(a2 + 40));
        Hasher._combine(_:)(v10);
        result = Hasher._finalize()();
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8)
            goto LABEL_5;
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(a2 + 48);
          v13 = (_BYTE *)(v12 + v3);
          v14 = (_BYTE *)(v12 + v6);
          if (v3 != v6 || v13 >= v14 + 1)
            *v13 = *v14;
          v15 = *(_QWORD *)(a2 + 56);
          v16 = v15 + 24 * v3;
          v17 = (__int128 *)(v15 + 24 * v6);
          if (v3 != v6 || (v3 = v6, v16 >= (unint64_t)v17 + 24))
          {
            v9 = *v17;
            *(_QWORD *)(v16 + 16) = *((_QWORD *)v17 + 2);
            *(_OWORD *)v16 = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1007AB9F8(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  Swift::UInt v9;
  unint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  int64_t v17;
  unint64_t v18;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      while (1)
      {
        v9 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + v6);
        Hasher.init(_seed:)(v26, *(_QWORD *)(a2 + 40));
        Hasher._combine(_:)(v9);
        result = Hasher._finalize()();
        v10 = result & v7;
        if (v3 >= (uint64_t)v8)
          break;
        if (v10 < v8)
          goto LABEL_11;
LABEL_12:
        v11 = *(_QWORD *)(a2 + 48);
        v12 = (_BYTE *)(v11 + v3);
        v13 = (_BYTE *)(v11 + v6);
        if (v3 != v6 || v12 >= v13 + 1)
          *v12 = *v13;
        v14 = *(_QWORD *)(a2 + 56);
        v15 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011CEE50) - 8) + 72);
        v16 = v15 * v3;
        result = v14 + v15 * v3;
        v17 = v15 * v6;
        v18 = v14 + v15 * v6 + v15;
        if (v16 < v17 || result >= v18)
        {
          result = swift_arrayInitWithTakeFrontToBack(result);
        }
        else
        {
          v3 = v6;
          if (v16 == v17)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront(result);
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          goto LABEL_21;
      }
      if (v10 < v8)
        goto LABEL_6;
LABEL_11:
      if (v3 < (uint64_t)v10)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1007ABBE8(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  Swift::Int v10;
  Swift::Int v11;
  uint64_t v14;
  unint64_t v15;
  __int128 *v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  _BYTE v28[40];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_100051FEC(*(_QWORD *)(a2 + 48) + 40 * v6, (uint64_t)v28);
        v10 = AnyHashable._rawHashValue(seed:)(*(_QWORD *)(a2 + 40));
        result = sub_10004FF2C((uint64_t)v28);
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= v11)
          {
LABEL_16:
            v14 = *(_QWORD *)(a2 + 48);
            v15 = v14 + 40 * v3;
            v16 = (__int128 *)(v14 + 40 * v6);
            if (v3 != v6 || v15 >= (unint64_t)v16 + 40)
            {
              v17 = *v16;
              v18 = v16[1];
              *(_QWORD *)(v15 + 32) = *((_QWORD *)v16 + 4);
              *(_OWORD *)v15 = v17;
              *(_OWORD *)(v15 + 16) = v18;
            }
            v19 = *(_QWORD *)(a2 + 56);
            v20 = (_OWORD *)(v19 + 32 * v3);
            v21 = (_OWORD *)(v19 + 32 * v6);
            if (v3 != v6 || (v3 = v6, v20 >= v21 + 2))
            {
              v9 = v21[1];
              *v20 = *v21;
              v20[1] = v9;
              v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= v11)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v23 = *v22;
    v24 = (-1 << v3) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v4 + 8 * (result >> 6));
    v24 = *v22;
    v23 = (-1 << result) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1007ABDB0(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  unint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  _QWORD v26[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v6);
        v10 = *v9;
        v11 = v9[1];
        Hasher.init(_seed:)(v26, *(_QWORD *)(a2 + 40));
        swift_bridgeObjectRetain(v11);
        String.hash(into:)(v26, v10, v11);
        v12 = Hasher._finalize()();
        result = swift_bridgeObjectRelease(v11);
        v13 = v12 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 < v8)
            goto LABEL_5;
        }
        else if (v13 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v13)
        {
LABEL_11:
          v14 = *(_QWORD *)(a2 + 48);
          v15 = (_OWORD *)(v14 + 16 * v3);
          v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || v15 >= v16 + 1)
            *v15 = *v16;
          v17 = *(_QWORD *)(a2 + 56);
          v18 = (_OWORD *)(v17 + 16 * v3);
          v19 = (_OWORD *)(v17 + 16 * v6);
          if (16 * v3 != 16 * v6 || (v3 = v6, v18 >= v19 + 1))
          {
            *v18 = *v19;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1007ABF8C(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, unint64_t, uint64_t);
  unint64_t v37;
  uint64_t v38;

  v4 = type metadata accessor for IndexPath(0);
  v38 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a2 + 64;
  v8 = -1 << *(_BYTE *)(a2 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    v10 = ~v8;
    v11 = _HashTable.previousHole(before:)(a1, a2 + 64, ~v8);
    if ((*(_QWORD *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v37 = (v11 + 1) & v10;
      v12 = *(_QWORD *)(v38 + 72);
      v36 = *(void (**)(char *, unint64_t, uint64_t))(v38 + 16);
      v13 = v10;
      do
      {
        v14 = v7;
        v15 = v12;
        v16 = v12 * v9;
        v17 = v13;
        v36(v6, *(_QWORD *)(a2 + 48) + v12 * v9, v4);
        v18 = *(_QWORD *)(a2 + 40);
        v19 = sub_100048748(&qword_1011B5D98, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
        v20 = dispatch thunk of Hashable._rawHashValue(seed:)(v18, v4, v19);
        (*(void (**)(char *, uint64_t))(v38 + 8))(v6, v4);
        v13 = v17;
        v21 = v20 & v17;
        if (a1 >= (uint64_t)v37)
        {
          if (v21 >= v37 && a1 >= (uint64_t)v21)
          {
LABEL_16:
            v24 = *(_QWORD *)(a2 + 48);
            v25 = v24 + v15 * a1;
            v7 = v14;
            if (v15 * a1 < v16 || (v12 = v15, v25 >= v24 + v16 + v15))
            {
              swift_arrayInitWithTakeFrontToBack(v25);
LABEL_21:
              v13 = v17;
              v12 = v15;
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront(v25);
              goto LABEL_21;
            }
            v26 = *(_QWORD *)(a2 + 56);
            v27 = (_QWORD *)(v26 + 8 * a1);
            v28 = (_QWORD *)(v26 + 8 * v9);
            if (a1 != v9 || (a1 = v9, v27 >= v28 + 1))
            {
              *v27 = *v28;
              a1 = v9;
            }
            goto LABEL_5;
          }
        }
        else if (v21 >= v37 || a1 >= (uint64_t)v21)
        {
          goto LABEL_16;
        }
        v7 = v14;
        v12 = v15;
LABEL_5:
        v9 = (v9 + 1) & v13;
      }
      while (((*(_QWORD *)(v7 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    v29 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v30 = *v29;
    v31 = (-1 << a1) - 1;
  }
  else
  {
    v29 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v31 = *v29;
    v30 = (-1 << a1) - 1;
  }
  *v29 = v31 & v30;
  v32 = *(_QWORD *)(a2 + 16);
  v33 = __OFSUB__(v32, 1);
  v34 = v32 - 1;
  if (v33)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v34;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_1007AC22C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  int v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  uint64_t v18;
  __int128 *v19;
  __int128 *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  _QWORD v27[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v11 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + v6);
        Hasher.init(_seed:)(v27, *(_QWORD *)(a2 + 40));
        if (v11)
        {
          if (v11 == 1)
          {
            v12 = 0xE600000000000000;
            v13 = 0x7478654E7075;
          }
          else
          {
            v12 = 0xE800000000000000;
            v13 = 0x79616C506F747561;
          }
        }
        else
        {
          v12 = 0xE700000000000000;
          v13 = 0x79726F74736968;
        }
        String.hash(into:)(v27, v13, v12);
        swift_bridgeObjectRelease(v12);
        result = Hasher._finalize()();
        v14 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v14 < v8)
            goto LABEL_5;
        }
        else if (v14 >= v8)
        {
          goto LABEL_16;
        }
        if (v3 >= (uint64_t)v14)
        {
LABEL_16:
          v15 = *(_QWORD *)(a2 + 48);
          v16 = (_BYTE *)(v15 + v3);
          v17 = (_BYTE *)(v15 + v6);
          if (v3 != v6 || v16 >= v17 + 1)
            *v16 = *v17;
          v18 = *(_QWORD *)(a2 + 56);
          v19 = (__int128 *)(v18 + 48 * v3);
          v20 = (__int128 *)(v18 + 48 * v6);
          if (v3 != v6 || (v3 = v6, v19 >= v20 + 3))
          {
            v9 = *v20;
            v10 = v20[2];
            v19[1] = v20[1];
            v19[2] = v10;
            *v19 = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    v23 = *v21;
    v22 = (-1 << result) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1007AC444(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  int64_t v29;
  unint64_t v30;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, unint64_t, uint64_t);
  unint64_t v40;
  uint64_t v41;

  v4 = type metadata accessor for EditorialVideoArtworkFlavor(0);
  v41 = *(_QWORD *)(v4 - 8);
  result = __chkstk_darwin(v4);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = _HashTable.previousHole(before:)(a1, a2 + 64, ~v9);
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v40 = (result + 1) & v11;
      v12 = *(_QWORD *)(v41 + 72);
      v39 = *(void (**)(char *, unint64_t, uint64_t))(v41 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v39(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        v18 = *(_QWORD *)(a2 + 40);
        v19 = sub_100048748(&qword_1011C8950, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialVideoArtworkFlavor, (uint64_t)&protocol conformance descriptor for EditorialVideoArtworkFlavor);
        v20 = dispatch thunk of Hashable._rawHashValue(seed:)(v18, v4, v19);
        result = (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v7, v4);
        v13 = v17;
        v21 = v20 & v17;
        if (a1 >= (uint64_t)v40)
        {
          if (v21 >= v40 && a1 >= (uint64_t)v21)
          {
LABEL_16:
            v24 = *(_QWORD *)(a2 + 48);
            v25 = v24 + v15 * a1;
            v8 = v14;
            if (v15 * a1 < v16 || v25 >= v24 + v16 + v15)
            {
              swift_arrayInitWithTakeFrontToBack(v25);
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront(v25);
            }
            v26 = *(_QWORD *)(a2 + 56);
            v27 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for VideoArtwork(0) - 8) + 72);
            v28 = v27 * a1;
            result = v26 + v27 * a1;
            v29 = v27 * v10;
            v30 = v26 + v27 * v10 + v27;
            if (v28 < v29 || result >= v30)
            {
              result = swift_arrayInitWithTakeFrontToBack(result);
              a1 = v10;
              v13 = v17;
            }
            else
            {
              a1 = v10;
              v13 = v17;
              if (v28 != v29)
              {
                result = swift_arrayInitWithTakeBackToFront(result);
                v13 = v17;
                a1 = v10;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v21 >= v40 || a1 >= (uint64_t)v21)
        {
          goto LABEL_16;
        }
        v8 = v14;
LABEL_5:
        v10 = (v10 + 1) & v13;
        v12 = v15;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v32 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v33 = *v32;
    v34 = (-1 << a1) - 1;
  }
  else
  {
    v32 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v34 = *v32;
    v33 = (-1 << a1) - 1;
  }
  *v32 = v34 & v33;
  v35 = *(_QWORD *)(a2 + 16);
  v36 = __OFSUB__(v35, 1);
  v37 = v35 - 1;
  if (v36)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v37;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1007AC71C(unint64_t a1, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  Swift::Int v10;
  id v11;
  Swift::Int v12;
  Swift::Int v13;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v3 = a1;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    v8 = _HashTable.previousHole(before:)(a1, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(_QWORD *)(a2 + 40);
        v11 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v6);
        v12 = NSObject._rawHashValue(seed:)(v10);

        v13 = v12 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v13 >= v9 && v3 >= v13)
          {
LABEL_16:
            v16 = *(_QWORD *)(a2 + 48);
            v17 = (_QWORD *)(v16 + 8 * v3);
            v18 = (_QWORD *)(v16 + 8 * v6);
            if (v3 != v6 || v17 >= v18 + 1)
              *v17 = *v18;
            v19 = *(_QWORD *)(a2 + 56);
            v20 = (_QWORD *)(v19 + 8 * v3);
            v21 = (_QWORD *)(v19 + 8 * v6);
            if (v3 != v6 || (v3 = v6, v20 >= v21 + 1))
            {
              *v20 = *v21;
              v3 = v6;
            }
          }
        }
        else if (v13 >= v9 || v3 >= v13)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v23 = *v22;
    v24 = (-1 << v3) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    v24 = *v22;
    v23 = (-1 << a1) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
}

uint64_t sub_1007AC8CC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (a3 == 3)
    return swift_bridgeObjectRetain(a2);
  return result;
}

uint64_t sub_1007AC8E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011B8D70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t _s14DataParseErrorOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1007AC96C + 4 * byte_100ECFB20[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1007AC98C + 4 * byte_100ECFB25[v4]))();
}

_BYTE *sub_1007AC96C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1007AC98C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1007AC994(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1007AC99C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1007AC9A4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1007AC9AC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s14DataParseErrorOMa()
{
  return &_s14DataParseErrorON;
}

unint64_t sub_1007AC9CC()
{
  unint64_t result;

  result = qword_1011C8970;
  if (!qword_1011C8970)
  {
    result = swift_getWitnessTable(&unk_100ECFBCC, &_s14DataParseErrorON);
    atomic_store(result, (unint64_t *)&qword_1011C8970);
  }
  return result;
}

uint64_t sub_1007ACA14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  __n128 v27;
  uint64_t result;
  uint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  char v39;
  void (*v40)(char *, char *, uint64_t, __n128);
  _QWORD *v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  char *v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  _QWORD *v64;

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011C8978);
  __chkstk_darwin(v2);
  v4 = (char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URLQueryItem(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v55 - v10;
  __chkstk_darwin(v12);
  v14 = (char *)&v55 - v13;
  v15 = sub_100007E8C((uint64_t *)&unk_1011AD410);
  __chkstk_darwin(v15);
  v17 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for URLComponents(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = v1;
  v24 = v23;
  URLComponents.init(url:resolvingAgainstBaseURL:)(v22, 0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v24) == 1)
  {
    v25 = (uint64_t *)&unk_1011AD410;
    v26 = (uint64_t)v17;
LABEL_26:
    sub_10004FF60(v26, v25);
    return 0;
  }
  v60 = v4;
  v63 = v8;
  v27.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v19 + 32))(v21, v17, v24);
  result = URLComponents.queryItems.getter(v27);
  if (!result)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v24);
    return 0;
  }
  v29 = result;
  v57 = v21;
  v58 = v24;
  v59 = v19;
  v30 = _swiftEmptyArrayStorage;
  v64 = _swiftEmptyArrayStorage;
  v62 = *(_QWORD *)(result + 16);
  if (v62)
  {
    v56 = v14;
    v31 = 0;
    v61 = v5;
    while (1)
    {
      if (v31 >= *(_QWORD *)(v29 + 16))
      {
        __break(1u);
        return result;
      }
      v32 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      v33 = *(_QWORD *)(v6 + 72);
      v34 = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v6 + 16))(v11, v29 + v32 + v33 * v31, v5);
      v35 = URLQueryItem.name.getter(v34);
      v37 = v36;
      if (v35 == 0x7542656372756F73 && v36 == 0xEE006449656C646ELL)
        break;
      v39 = _stringCompareWithSmolCheck(_:_:expecting:)(v35, v36, 0x7542656372756F73, 0xEE006449656C646ELL, 0);
      v38 = swift_bridgeObjectRelease(v37);
      if ((v39 & 1) != 0)
        goto LABEL_13;
      result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
LABEL_7:
      if (v62 == ++v31)
      {
        v30 = v64;
        v45 = (uint64_t)v60;
        v46 = v56;
        goto LABEL_21;
      }
    }
    v38 = swift_bridgeObjectRelease(0xEE006449656C646ELL);
LABEL_13:
    v40 = *(void (**)(char *, char *, uint64_t, __n128))(v6 + 32);
    v40(v63, v11, v5, v38);
    v41 = v64;
    if ((swift_isUniquelyReferenced_nonNull_native(v64) & 1) == 0)
    {
      sub_10035C8CC(0, v41[2] + 1, 1);
      v41 = v64;
    }
    v43 = v41[2];
    v42 = v41[3];
    if (v43 >= v42 >> 1)
    {
      sub_10035C8CC(v42 > 1, v43 + 1, 1);
      v41 = v64;
    }
    v41[2] = v43 + 1;
    v44 = (unint64_t)v41 + v32 + v43 * v33;
    v5 = v61;
    result = ((uint64_t (*)(unint64_t))v40)(v44);
    v64 = v41;
    goto LABEL_7;
  }
  v46 = v14;
  v45 = (uint64_t)v60;
LABEL_21:
  v47 = swift_bridgeObjectRelease(v29);
  v48 = v59;
  if (v30[2])
  {
    (*(void (**)(uint64_t, unint64_t, uint64_t, __n128))(v6 + 16))(v45, (unint64_t)v30+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), v5, v47);
    v49 = 0;
  }
  else
  {
    v49 = 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v45, v49, 1, v5);
  v50 = swift_release();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v6 + 48))(v45, 1, v5, v50) == 1)
  {
    (*(void (**)(char *, uint64_t))(v48 + 8))(v57, v58);
    v25 = &qword_1011C8978;
    v26 = v45;
    goto LABEL_26;
  }
  v51 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 32))(v46, v45, v5);
  v52 = URLQueryItem.value.getter(v51);
  v54 = v53;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v46, v5);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v57, v58);
  if (v54)
    return v52;
  else
    return 0;
}

uint64_t sub_1007ACEA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  __n128 v23;
  void (*v24)(__n128);
  uint64_t v25;
  __n128 v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  void (*v42)(char *, char *, uint64_t, __n128);
  _QWORD *v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  _QWORD *v71;

  v66 = a1;
  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v65 = (char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = type metadata accessor for URLQueryItem(0);
  v4 = *(_QWORD *)(v68 - 8);
  __chkstk_darwin(v68);
  v70 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v56 - v7;
  v9 = sub_100007E8C((uint64_t *)&unk_1011AD410);
  __chkstk_darwin(v9);
  v11 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for URLComponents(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v16);
  v18 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v56 - v20;
  v23 = __chkstk_darwin(v22);
  v24 = *(void (**)(__n128))(v2 + 56);
  v64 = (uint64_t)&v56 - v25;
  v24(v23);
  URLComponents.init(url:resolvingAgainstBaseURL:)(v69, 0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
  {
    v63 = v21;
    v26.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    result = URLComponents.queryItems.getter(v26);
    v28 = v12;
    if (!result)
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      goto LABEL_20;
    }
    v29 = result;
    v61 = v13;
    v62 = v28;
    v30 = _swiftEmptyArrayStorage;
    v71 = _swiftEmptyArrayStorage;
    v67 = *(_QWORD *)(result + 16);
    if (!v67)
    {
      v48 = v65;
      v47 = v66;
LABEL_22:
      v50 = swift_bridgeObjectRelease(v29);
      v51 = v61;
      v52 = (uint64_t)v63;
      if (!v30[2])
      {
        v50 = swift_release();
        v30 = 0;
      }
      v53 = v62;
      v54 = URLComponents.queryItems.setter(v30, v50);
      URLComponents.url.getter(v54);
      (*(void (**)(char *, uint64_t))(v51 + 8))(v15, v53);
      v49 = v64;
      sub_10004FF60(v64, &qword_10119E460);
      sub_1004620E4(v52, v49);
      goto LABEL_25;
    }
    v57 = v15;
    v58 = v18;
    v59 = v2;
    v60 = v1;
    v31 = 0;
    v32 = v67;
    v33 = v68;
    while (1)
    {
      if (v31 >= *(_QWORD *)(v29 + 16))
      {
        __break(1u);
        return result;
      }
      v35 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      v36 = *(_QWORD *)(v4 + 72);
      v37 = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v4 + 16))(v8, v29 + v35 + v36 * v31, v33);
      v38 = URLQueryItem.name.getter(v37);
      v40 = v39;
      if (v38 == 0x7542656372756F73 && v39 == 0xEE006449656C646ELL)
      {
        v34 = swift_bridgeObjectRelease(0xEE006449656C646ELL);
      }
      else
      {
        v41 = _stringCompareWithSmolCheck(_:_:expecting:)(v38, v39, 0x7542656372756F73, 0xEE006449656C646ELL, 0);
        v34 = swift_bridgeObjectRelease(v40);
        if ((v41 & 1) == 0)
        {
          v42 = *(void (**)(char *, char *, uint64_t, __n128))(v4 + 32);
          v42(v70, v8, v33, v34);
          v43 = v71;
          if ((swift_isUniquelyReferenced_nonNull_native(v71) & 1) == 0)
          {
            sub_10035C8CC(0, v43[2] + 1, 1);
            v43 = v71;
          }
          v45 = v43[2];
          v44 = v43[3];
          if (v45 >= v44 >> 1)
          {
            sub_10035C8CC(v44 > 1, v45 + 1, 1);
            v43 = v71;
          }
          v43[2] = v45 + 1;
          v46 = (unint64_t)v43 + v35 + v45 * v36;
          v33 = v68;
          result = ((uint64_t (*)(unint64_t))v42)(v46);
          v71 = v43;
          v32 = v67;
          goto LABEL_8;
        }
      }
      result = (*(uint64_t (**)(char *, uint64_t, __n128))(v4 + 8))(v8, v33, v34);
LABEL_8:
      if (v32 == ++v31)
      {
        v30 = v71;
        v48 = v65;
        v47 = v66;
        v2 = v59;
        v1 = v60;
        v15 = v57;
        v18 = v58;
        goto LABEL_22;
      }
    }
  }
  sub_10004FF60((uint64_t)v11, (uint64_t *)&unk_1011AD410);
LABEL_20:
  v49 = v64;
  v48 = v65;
  v47 = v66;
LABEL_25:
  v55 = v69;
  sub_1004620E4(v49, (uint64_t)v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v48, v55, v1);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v18, 1, v1) == 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v47, v48, v1);
    return sub_10004FF60((uint64_t)v18, &qword_10119E460);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v2 + 8))(v48, v1);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v2 + 32))(v47, v18, v1);
  }
}

_QWORD *sub_1007AD3B0(uint64_t a1)
{
  int64_t v2;
  _QWORD *result;

  v2 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (v2)
  {
    sub_10035C6F8(0, v2, 0);
    __asm { BR              X9 }
  }
  return result;
}

char *sub_1007AD508()
{
  char *v0;
  char *v1;
  id v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  objc_super v15;
  _QWORD v16[15];
  _QWORD v17[11];
  char v18;
  _QWORD v19[15];

  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music20CarPlaySceneDelegate_accountSubscription] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music20CarPlaySceneDelegate_tabsSubscription] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music20CarPlaySceneDelegate_window] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music20CarPlaySceneDelegate_carPlayManager] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music20CarPlaySceneDelegate_remoteRadioController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music20CarPlaySceneDelegate_allowsRadioContentNotificationObserver] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music20CarPlaySceneDelegate_userSubscriptionStateNotificationObserver] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music20CarPlaySceneDelegate_subscriptionCapabilitiesNotificationObserver] = 0;
  v15.receiver = v0;
  v15.super_class = (Class)type metadata accessor for CarPlaySceneDelegate();
  v1 = (char *)objc_msgSendSuper2(&v15, "init");
  v2 = (id)*ApplicationCapabilities.NotificationNames.allowsRadioContentDidChange.unsafeMutableAddressor();
  v3 = ApplicationCapabilities.Controller.shared.unsafeMutableAddressor();
  v4 = *v3;
  v5 = type metadata accessor for NotificationObserver();
  swift_allocObject(v5, 64, 7);
  swift_retain();
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music20CarPlaySceneDelegate_allowsRadioContentNotificationObserver] = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v2, v4, 1, 1, (uint64_t)sub_1007AD7DC, 0);
  swift_release();
  v6 = (void *)*ApplicationCapabilities.NotificationNames.userSubscriptionStateDidChange.unsafeMutableAddressor();
  v7 = *v3;
  swift_allocObject(v5, 64, 7);
  v8 = v6;
  swift_retain();
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music20CarPlaySceneDelegate_userSubscriptionStateNotificationObserver] = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v8, v7, 1, 1, (uint64_t)sub_1007AD874, 0);
  swift_release();
  v9 = (void *)*ApplicationCapabilities.NotificationNames.subscriptionCapabilitiesDidChange.unsafeMutableAddressor();
  v10 = *v3;
  swift_allocObject(v5, 64, 7);
  v11 = v9;
  swift_retain();
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music20CarPlaySceneDelegate_subscriptionCapabilitiesNotificationObserver] = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v11, v10, 1, 1, (uint64_t)sub_1007AD8EC, 0);
  swift_release();
  v12 = objc_msgSend((id)objc_opt_self(MusicCarPlayApplicationCapabilitiesController), "sharedController");
  static ApplicationCapabilities.shared.getter((uint64_t)v16);
  v13 = v16[3];
  swift_bridgeObjectRetain();
  sub_100065184(v16);
  LOBYTE(v11) = sub_10075BDAC(4u, v13);
  objc_msgSend(v12, "setAllowsRadioContent:", v11 & 1, swift_bridgeObjectRelease().n128_f64[0]);
  static ApplicationCapabilities.shared.getter((uint64_t)v17);
  sub_100065184(v17);
  objc_msgSend(v12, "setUserSubscriptionState:", qword_100ECFCA8[v18]);
  static ApplicationCapabilities.shared.getter((uint64_t)v19);
  sub_100065184(v19);
  objc_msgSend(v12, "setSubscriptionCapabilities:", v19[1]);

  return v1;
}

void sub_1007AD7DC()
{
  id v0;
  uint64_t v1;
  char v2;
  _QWORD v3[15];

  v0 = objc_msgSend((id)objc_opt_self(MusicCarPlayApplicationCapabilitiesController), "sharedController");
  static ApplicationCapabilities.shared.getter((uint64_t)v3);
  v1 = v3[3];
  swift_bridgeObjectRetain();
  sub_100065184(v3);
  v2 = sub_10075BDAC(4u, v1);
  objc_msgSend(v0, "setAllowsRadioContent:", v2 & 1, swift_bridgeObjectRelease().n128_f64[0]);

}

void sub_1007AD874()
{
  id v0;
  _QWORD v1[11];
  char v2;

  v0 = objc_msgSend((id)objc_opt_self(MusicCarPlayApplicationCapabilitiesController), "sharedController");
  static ApplicationCapabilities.shared.getter((uint64_t)v1);
  sub_100065184(v1);
  objc_msgSend(v0, "setUserSubscriptionState:", qword_100ECFCA8[v2]);

}

void sub_1007AD8EC()
{
  id v0;
  _QWORD v1[15];

  v0 = objc_msgSend((id)objc_opt_self(MusicCarPlayApplicationCapabilitiesController), "sharedController");
  static ApplicationCapabilities.shared.getter((uint64_t)v1);
  sub_100065184(v1);
  objc_msgSend(v0, "setSubscriptionCapabilities:", v1[1]);

}

double sub_1007AD9BC(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t KeyPath;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  unint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __n128 v75;
  double result;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v82;
  void (*v83)(char *, uint64_t, __n128);
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  id v99[2];

  v2 = v1;
  v4 = sub_100007E8C(&qword_1011C89E8);
  v90 = *(_QWORD *)(v4 - 8);
  v91 = v4;
  __chkstk_darwin(v4);
  v89 = (char *)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011C89F0);
  v93 = *(_QWORD *)(v6 - 8);
  v94 = v6;
  __chkstk_darwin(v6);
  v92 = (char *)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011C89F8);
  v96 = *(_QWORD *)(v8 - 8);
  v97 = v8;
  __chkstk_darwin(v8);
  v95 = (char *)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011A08F0);
  __chkstk_darwin(v10);
  v88 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = sub_100007E8C((uint64_t *)&unk_1011A9B80);
  v12 = *(_QWORD *)(v98 - 8);
  __chkstk_darwin(v98);
  v14 = (char *)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(&qword_1011C8A00);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v77 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100007E8C(&qword_1011C8A08);
  v87 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v21 = (char *)&v77 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100007E8C((uint64_t *)&unk_1011C8A10);
  __chkstk_darwin(v22);
  v26 = (char *)&v77 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    v82 = v23;
    v84 = v24;
    v86 = ApplicationCapabilities.Controller.shared.unsafeMutableAddressor();
    swift_retain();
    ApplicationCapabilities.Controller.$capabilities.getter();
    swift_release();
    KeyPath = swift_getKeyPath(&unk_100ECFC68);
    v79 = v2;
    v28 = KeyPath;
    v85 = sub_100049F28(&qword_1011A1620, (uint64_t *)&unk_1011A9B80, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    v78 = v19;
    v29 = v98;
    Publisher.map<A>(_:)(v28);
    v30 = swift_release();
    v83 = *(void (**)(char *, uint64_t, __n128))(v12 + 8);
    v83(v14, v29, v30);
    v31 = sub_100049F28((unint64_t *)&unk_1011C8A20, &qword_1011C8A00, (uint64_t)&protocol conformance descriptor for Publishers.MapKeyPath<A, B>);
    Publisher<>.removeDuplicates()(v15, v31, &protocol witness table for Bool);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    v32 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
    v99[0] = (id)static OS_dispatch_queue.main.getter(v32, v33, v34, v35, v36, v37, v38, v39);
    v40 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
    v41 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56);
    v80 = v40;
    v81 = v41;
    v42 = (uint64_t)v88;
    v41((uint64_t)v88, 1, 1, v40);
    v43 = sub_100049F28((unint64_t *)&unk_1011C8A30, &qword_1011C8A08, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
    v44 = sub_1000EA1BC((unint64_t *)&qword_1011A89B0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
    v45 = v78;
    Publisher.receive<A>(on:options:)(v99, v42, v78, v32, v43, v44);
    sub_10004FF60(v42, &qword_1011A08F0);

    (*(void (**)(char *, uint64_t))(v87 + 8))(v21, v45);
    v46 = swift_allocObject(&unk_1010DBF98, 24, 7);
    v47 = v79;
    swift_unknownObjectWeakInit(v46 + 16);
    v48 = sub_100049F28(&qword_1011C8A40, (uint64_t *)&unk_1011C8A10, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v49 = v82;
    v50 = Publisher<>.sink(receiveValue:)(sub_1007AE4CC, v46, v82, v48);
    v51 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v84 + 8))(v26, v49, v51);
    *(_QWORD *)(v47 + OBJC_IVAR____TtC5Music20CarPlaySceneDelegate_accountSubscription) = v50;
    swift_release();
    swift_retain();
    ApplicationCapabilities.Controller.$capabilities.getter();
    swift_release();
    v52 = swift_getKeyPath(&unk_100ECFC88);
    v53 = v89;
    v54 = v98;
    Publisher.map<A>(_:)(v52);
    v55 = swift_release();
    v83(v14, v54, v55);
    v56 = sub_100049F28(&qword_1011C8A48, &qword_1011C89E8, (uint64_t)&protocol conformance descriptor for Publishers.MapKeyPath<A, B>);
    v57 = sub_1007AE4D4();
    v59 = v91;
    v58 = v92;
    Publisher<>.removeDuplicates()(v91, v56, v57);
    v60 = (*(uint64_t (**)(char *, uint64_t))(v90 + 8))(v53, v59);
    v99[0] = (id)static OS_dispatch_queue.main.getter(v60, v61, v62, v63, v64, v65, v66, v67);
    v81(v42, 1, 1, v80);
    v68 = sub_100049F28(&qword_1011C8A58, &qword_1011C89F0, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
    v69 = v94;
    v70 = v95;
    Publisher.receive<A>(on:options:)(v99, v42, v94, v32, v68, v44);
    sub_10004FF60(v42, &qword_1011A08F0);

    (*(void (**)(char *, uint64_t))(v93 + 8))(v58, v69);
    v71 = swift_allocObject(&unk_1010DBF98, 24, 7);
    swift_unknownObjectWeakInit(v71 + 16);
    v72 = sub_100049F28((unint64_t *)&unk_1011C8A60, &qword_1011C89F8, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v73 = v97;
    v74 = Publisher<>.sink(receiveValue:)(sub_1007AE518, v71, v97, v72);
    v75 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v96 + 8))(v70, v73, v75);
    *(_QWORD *)(v47 + OBJC_IVAR____TtC5Music20CarPlaySceneDelegate_tabsSubscription) = v74;
  }
  else
  {
    *(_QWORD *)(v2 + OBJC_IVAR____TtC5Music20CarPlaySceneDelegate_accountSubscription) = 0;
    swift_release();
    *(_QWORD *)(v2 + OBJC_IVAR____TtC5Music20CarPlaySceneDelegate_tabsSubscription) = 0;
  }
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_1007AE088(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  id v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = *(id *)(Strong + OBJC_IVAR____TtC5Music20CarPlaySceneDelegate_carPlayManager);

    objc_msgSend(v5, "reloadTabsContent");
  }
}

void sub_1007AE0FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  Class isa;
  _BYTE v9[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = *(void **)(Strong + OBJC_IVAR____TtC5Music20CarPlaySceneDelegate_carPlayManager);
    v6 = v5;

    if (v5)
    {
      v7 = swift_bridgeObjectRetain();
      sub_1007AD3B0(v7);
      swift_bridgeObjectRelease();
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v6, "setTabIdentifiers:", isa, swift_bridgeObjectRelease().n128_f64[0]);

    }
  }
}

id sub_1007AE3C0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CarPlaySceneDelegate();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CarPlaySceneDelegate()
{
  return objc_opt_self(_TtC5Music20CarPlaySceneDelegate);
}

uint64_t sub_1007AE4A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

void sub_1007AE4CC(uint64_t a1)
{
  uint64_t v1;

  sub_1007AE088(a1, v1);
}

unint64_t sub_1007AE4D4()
{
  unint64_t result;

  result = qword_1011C8A50;
  if (!qword_1011C8A50)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ApplicationCapabilities.Tabs, &type metadata for ApplicationCapabilities.Tabs);
    atomic_store(result, (unint64_t *)&qword_1011C8A50);
  }
  return result;
}

void sub_1007AE518(uint64_t a1)
{
  uint64_t v1;

  sub_1007AE0FC(a1, v1);
}

void sub_1007AE520(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  Class isa;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  NSString v19;
  _QWORD v20[15];

  objc_opt_self(UIWindowScene);
  v3 = swift_dynamicCastObjCClass(a1);
  if (v3)
  {
    v4 = v3;
    v5 = objc_allocWithZone((Class)UIWindow);
    v6 = a1;
    v7 = objc_msgSend(v5, "initWithWindowScene:", v4);
    v8 = objc_msgSend((id)objc_opt_self(MusicCarPlayManager), "sharedManager");
    static ApplicationCapabilities.shared.getter((uint64_t)v20);
    v9 = v20[12];
    swift_bridgeObjectRetain();
    sub_100065184(v20);
    sub_1007AD3B0(v9);
    swift_bridgeObjectRelease();
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v8, "setTabIdentifiers:", isa, swift_bridgeObjectRelease().n128_f64[0]);

    objc_msgSend(v8, "attachToWindow:", v7);
    objc_msgSend(v7, "makeKeyAndVisible");
    v11 = OBJC_IVAR____TtC5Music20CarPlaySceneDelegate_window;
    v12 = *(void **)(v1 + OBJC_IVAR____TtC5Music20CarPlaySceneDelegate_window);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music20CarPlaySceneDelegate_window) = v7;
    v13 = v7;

    v14 = OBJC_IVAR____TtC5Music20CarPlaySceneDelegate_carPlayManager;
    v15 = *(void **)(v1 + OBJC_IVAR____TtC5Music20CarPlaySceneDelegate_carPlayManager);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music20CarPlaySceneDelegate_carPlayManager) = v8;
    v16 = v8;

    sub_1007AD9BC(*(_QWORD *)(v1 + v14) != 0);
    v17 = *(void **)(v1 + v11);
    if (v17)
    {
      v18 = v17;
      v19 = String._bridgeToObjectiveC()();
      objc_msgSend(v18, "setAccessibilityIdentifier:", v19);

    }
  }
}

void sub_1007AE710(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  double v39;
  int64_t v40;
  unint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  id v47;
  char *v48;
  unint64_t v49;
  Swift::String v50;
  Swift::Bool v51;
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(char *, unint64_t, uint64_t);
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __n128 v68;
  Swift::String v69;
  Swift::Bool v70;
  double v71;
  id v72;
  uint64_t v73;
  __n128 v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  void *v81;
  NSString v82;
  char *v83;
  char *v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  int64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void *v102;
  _QWORD v103[6];

  v2 = type metadata accessor for URLQueryItem(0);
  v3 = *(_QWORD *)(v2 - 8);
  v87 = v2;
  v88 = v3;
  __chkstk_darwin(v2);
  v86 = (char *)&v83 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011C8978);
  __chkstk_darwin(v5);
  v7 = (char *)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v84 = (char *)&v83 - v9;
  v10 = sub_100007E8C((uint64_t *)&unk_1011AD410);
  __chkstk_darwin(v10);
  v12 = (char *)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for URLComponents(0);
  v99 = *(_QWORD *)(v13 - 8);
  v100 = v13;
  __chkstk_darwin(v13);
  v85 = (char *)&v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for URL(0);
  v97 = *(_QWORD *)(v15 - 8);
  v98 = v15;
  __chkstk_darwin(v15);
  v17 = (char *)&v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = objc_msgSend((id)objc_opt_self(MusicCarPlayManager), "sharedManager");
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v18 = a1;
    else
      v18 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v19 = __CocoaSet.makeIterator()(v18);
    v20 = sub_10004A07C(0, &qword_1011B4DE0, UIOpenURLContext_ptr);
    v21 = sub_1000EA1BC(&qword_1011C8A70, &qword_1011B4DE0, UIOpenURLContext_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    v22 = Set.Iterator.init(_cocoa:)(v103, v19, v20, v21);
    a1 = v103[0];
    v94 = v103[1];
    v23 = v103[2];
    v24 = v103[3];
    v25 = v103[4];
  }
  else
  {
    v26 = -1 << *(_BYTE *)(a1 + 32);
    v27 = *(_QWORD *)(a1 + 56);
    v94 = a1 + 56;
    v28 = ~v26;
    v29 = -v26;
    if (v29 < 64)
      v30 = ~(-1 << v29);
    else
      v30 = -1;
    v25 = v30 & v27;
    v22 = (_QWORD *)swift_bridgeObjectRetain();
    v23 = v28;
    v24 = 0;
  }
  v90 = v23;
  v92 = a1 & 0x7FFFFFFFFFFFFFFFLL;
  v93 = (unint64_t)(v23 + 64) >> 6;
  v91 = (char *)&type metadata for Swift.AnyObject + 8;
  v83 = v7;
  if (a1 < 0)
    goto LABEL_13;
LABEL_11:
  if (v25)
  {
    v31 = (v25 - 1) & v25;
    v32 = __clz(__rbit64(v25)) | (v24 << 6);
    v33 = v24;
    goto LABEL_30;
  }
  v40 = v24 + 1;
  if (__OFADD__(v24, 1))
  {
    __break(1u);
    goto LABEL_62;
  }
  if (v40 >= v93)
    goto LABEL_45;
  v41 = *(_QWORD *)(v94 + 8 * v40);
  v33 = v24 + 1;
  if (!v41)
  {
    v33 = v24 + 2;
    if (v24 + 2 >= v93)
      goto LABEL_45;
    v41 = *(_QWORD *)(v94 + 8 * v33);
    if (!v41)
    {
      v33 = v24 + 3;
      if (v24 + 3 >= v93)
        goto LABEL_45;
      v41 = *(_QWORD *)(v94 + 8 * v33);
      if (!v41)
      {
        v33 = v24 + 4;
        if (v24 + 4 < v93)
        {
          v41 = *(_QWORD *)(v94 + 8 * v33);
          if (!v41)
          {
            v42 = v24 + 5;
            while (v93 != v42)
            {
              v41 = *(_QWORD *)(v94 + 8 * v42++);
              if (v41)
              {
                v33 = v42 - 1;
                goto LABEL_29;
              }
            }
            goto LABEL_45;
          }
          goto LABEL_29;
        }
LABEL_45:
        sub_10004FA7C(a1);

        return;
      }
    }
  }
LABEL_29:
  v31 = (v41 - 1) & v41;
  v32 = __clz(__rbit64(v41)) + (v33 << 6);
LABEL_30:
  v38 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v32);
  if (!v38)
    goto LABEL_45;
  while (1)
  {
    v95 = v24;
    v96 = v25;
    v43 = objc_msgSend(v38, "URL", v39, v83);
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v43);

    v44 = URL.pathComponents.getter();
    v45 = v98;
    v46 = *(void (**)(char *, uint64_t))(v97 + 8);
    v46(v17, v98);
    v47 = objc_msgSend(v38, "URL");
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v47);

    URLComponents.init(url:resolvingAgainstBaseURL:)(v17, 0);
    v46(v17, v45);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v99 + 48))(v12, 1, v100) != 1)
      break;
    swift_bridgeObjectRelease();

    v22 = (_QWORD *)sub_10004FF60((uint64_t)v12, (uint64_t *)&unk_1011AD410);
    v24 = v33;
    v25 = v31;
    if ((a1 & 0x8000000000000000) == 0)
      goto LABEL_11;
LABEL_13:
    v34 = __CocoaSet.Iterator.next()(v22);
    if (v34)
    {
      v35 = v34;
      v101 = v34;
      v36 = sub_10004A07C(0, &qword_1011B4DE0, UIOpenURLContext_ptr);
      swift_unknownObjectRetain(v35, v37);
      swift_dynamicCast(&v102, &v101, v91, v36, 7);
      v38 = v102;
      *(_QWORD *)&v39 = swift_unknownObjectRelease(v35).n128_u64[0];
      v33 = v24;
      v31 = v25;
      if (v38)
        continue;
    }
    goto LABEL_45;
  }
  v48 = v85;
  (*(void (**)(char *, char *, uint64_t))(v99 + 32))(v85, v12, v100);
  v49 = *(_QWORD *)(v44 + 16);
  if (!v49)
  {

    v68 = swift_bridgeObjectRelease();
    goto LABEL_51;
  }
  swift_bridgeObjectRetain();
  v50._object = (void *)0x8000000100E33F10;
  v50._countAndFlagsBits = 0xD000000000000010;
  v51 = String.hasPrefix(_:)(v50);
  swift_bridgeObjectRelease();
  if (v51)
  {
    v52 = swift_bridgeObjectRelease();
    v53 = URLComponents.queryItems.getter(v52);
    if (v53)
    {
      v54 = *(_QWORD *)(v53 + 16);
      v55 = v87;
      if (v54)
      {
        v56 = v53 + ((*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80));
        v57 = *(_QWORD *)(v88 + 72);
        v58 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v88 + 16);
        swift_bridgeObjectRetain();
        v59 = v86;
        while (1)
        {
          v60 = v58(v59, v56, v55);
          v61 = URLQueryItem.name.getter(v60);
          if (v61 == 0x646574616D696E61 && v62 == 0xE800000000000000)
            break;
          v63 = _stringCompareWithSmolCheck(_:_:expecting:)(v61, v62, 0x646574616D696E61, 0xE800000000000000, 0);
          v64 = swift_bridgeObjectRelease();
          if ((v63 & 1) != 0)
            goto LABEL_54;
          v55 = v87;
          v59 = v86;
          (*(void (**)(char *, uint64_t, __n128))(v88 + 8))(v86, v87, v64);
          v56 += v57;
          if (!--v54)
          {
            swift_bridgeObjectRelease();
            v48 = v85;
            goto LABEL_44;
          }
        }
        swift_bridgeObjectRelease();
LABEL_54:
        v55 = v87;
        v74 = swift_bridgeObjectRelease();
        v75 = v88;
        v66 = (uint64_t)v84;
        (*(void (**)(char *, char *, uint64_t, __n128))(v88 + 32))(v84, v86, v55, v74);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v75 + 56))(v66, 0, 1, v55);
        v67 = v75;
        swift_bridgeObjectRelease();
        v48 = v85;
      }
      else
      {
LABEL_44:
        v65 = v88;
        v66 = (uint64_t)v84;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v88 + 56))(v84, 1, 1, v55);
        v67 = v65;
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      v55 = v87;
      v67 = v88;
      v66 = (uint64_t)v84;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v88 + 56))(v84, 1, 1, v87);
    }
    v76 = v89;
    v77 = (uint64_t)v83;
    sub_1007AF59C(v66, (uint64_t)v83);
    v78 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v67 + 48))(v77, 1, v55);
    if ((_DWORD)v78 == 1)
    {
      sub_10004FF60(v77, &qword_1011C8978);
      v79 = 0;
    }
    else
    {
      v80 = v55;
      URLQueryItem.value.getter(v78);
      v79 = v81;
      (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v77, v80);
      if (v79)
      {
        v82 = String._bridgeToObjectiveC()();
        v79 = objc_msgSend(v82, "BOOLValue", swift_bridgeObjectRelease().n128_f64[0]);

      }
    }
    objc_msgSend(v76, "showNowPlaying:", v79);

    sub_10004FF60(v66, &qword_1011C8978);
    (*(void (**)(char *, uint64_t))(v99 + 8))(v48, v100);
    v73 = a1;
    goto LABEL_60;
  }
  if (v49 <= *(_QWORD *)(v44 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v69._countAndFlagsBits = 0x73676E6974746573;
    v69._object = (void *)0xE800000000000000;
    v70 = String.hasPrefix(_:)(v69);
    *(_QWORD *)&v71 = swift_bridgeObjectRelease().n128_u64[0];
    if (v70)
    {
      v72 = v89;
      objc_msgSend(v89, "showSharePlayTogetherSettings", v71);

      (*(void (**)(char *, uint64_t))(v99 + 8))(v48, v100);
      v73 = a1;
LABEL_60:
      sub_10004FA7C(v73);
      return;
    }

LABEL_51:
    (*(void (**)(char *, uint64_t, __n128))(v99 + 8))(v48, v100, v68);
    v73 = a1;
    goto LABEL_60;
  }
LABEL_62:
  __break(1u);
}

void sub_1007AF020()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;

  v1 = OBJC_IVAR____TtC5Music20CarPlaySceneDelegate_window;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Music20CarPlaySceneDelegate_window);
  if (v2)
  {
    v3 = (void *)objc_opt_self(MusicCarPlayManager);
    v4 = v2;
    v5 = objc_msgSend(v3, "sharedManager");
    objc_msgSend(v5, "detachFromWindow:", v4);
    v6 = *(id *)(v0 + v1);
    *(_QWORD *)(v0 + v1) = 0;

  }
}

void sub_1007AF0C8(void *a1)
{
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;

  if (qword_10119C728 != -1)
    swift_once(&qword_10119C728, sub_1006DD7C0);
  v2 = type metadata accessor for Logger(0);
  sub_100048B14(v2, (uint64_t)qword_10124D830);
  v3 = a1;
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v15 = v7;
    *(_DWORD *)v6 = 136446210;
    v8 = objc_msgSend(v3, "description");
    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v11 = v10;

    v14 = sub_100322200(v9, v11, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, &v15);

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "CarPlay scene will enter foreground %{public}s", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

  }
  else
  {

  }
  v12 = objc_msgSend((id)objc_opt_self(MPCloudController), "sharedCloudController");
  if (v12)
  {
    v13 = v12;
    objc_msgSend(v12, "becomeActive");

  }
  else
  {
    __break(1u);
  }
}

void sub_1007AF2C8(void *a1)
{
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22[2];

  if (qword_10119C728 != -1)
    swift_once(&qword_10119C728, sub_1006DD7C0);
  v2 = type metadata accessor for Logger(0);
  sub_100048B14(v2, (uint64_t)qword_10124D830);
  v3 = a1;
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v22[0] = v7;
    *(_DWORD *)v6 = 136446210;
    v8 = objc_msgSend(v3, "description");
    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v11 = v10;

    v21 = sub_100322200(v9, v11, v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, v22);

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "CarPlay scene did enter background %{public}s", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

  }
  else
  {

  }
  BackgroundRefreshController.shared.unsafeMutableAddressor();
  swift_retain();
  BackgroundRefreshController.scheduleAllTasks()();
  swift_release();
  v12 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v13 = objc_msgSend(v12, "connectedScenes");

  v14 = sub_10004A07C(0, &qword_1011A4630, UIScene_ptr);
  v15 = sub_1000EA1BC((unint64_t *)&qword_1011A2190, &qword_1011A4630, UIScene_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
  v16 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v13, v14, v15);

  sub_10045C144(v16);
  v18 = v17;
  swift_bridgeObjectRelease();

  if (!v18)
  {
    v19 = objc_msgSend((id)objc_opt_self(MPCloudController), "sharedCloudController");
    if (v19)
    {
      v20 = v19;
      objc_msgSend(v19, "resignActive");

    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_1007AF59C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011C8978);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

Swift::Void __swiftcall PrivacyDisclaimerPresenter.beginPresentation(from:preferredDisplayMode:)(UIViewController from, Music::PrivacyDisclaimerPresenter::DisplayMode preferredDisplayMode)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;

  v3 = v2;
  v6 = type metadata accessor for DispatchPredicate(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (uint64_t *)((char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_1000A9B84();
  *v9 = static OS_dispatch_queue.main.getter(v10, v11, v12, v13, v14, v15, v16, v17);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v6);
  v18 = _dispatchPreconditionTest(_:)(v9);
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if ((v18 & 1) != 0)
  {
    *(_BYTE *)(v3 + 32) = preferredDisplayMode & 1;
    sub_1007AF974(from.super.super.isa, preferredDisplayMode & 1);
  }
  else
  {
    __break(1u);
  }
}

Music::PrivacyDisclaimerPresenter::DisplayMode_optional __swiftcall PrivacyDisclaimerPresenter.DisplayMode.init(rawValue:)(Swift::String rawValue)
{
  void *object;
  Swift::String v2;
  Swift::Int v3;
  Music::PrivacyDisclaimerPresenter::DisplayMode_optional v4;

  object = rawValue._object;
  v2._countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010AD4F8, v2);
  swift_bridgeObjectRelease(object);
  if (v3 == 1)
    v4.value = Music_PrivacyDisclaimerPresenter_DisplayMode_generic;
  else
    v4.value = Music_PrivacyDisclaimerPresenter_DisplayMode_unknownDefault;
  if (v3)
    return v4;
  else
    return 0;
}

uint64_t PrivacyDisclaimerPresenter.DisplayMode.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x636972656E6567;
  else
    return 0x6572506563696F76;
}

uint64_t sub_1007AF754(char *a1, char *a2)
{
  return sub_1005D10AC(*a1, *a2);
}

Swift::Int sub_1007AF760()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5, 0);
  if (v1)
    v2 = 0x636972656E6567;
  else
    v2 = 0x6572506563696F76;
  if (v1)
    v3 = 0xE700000000000000;
  else
    v3 = 0xEC00000077656976;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_1007AF7E8(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0x636972656E6567;
  else
    v2 = 0x6572506563696F76;
  if (*v1)
    v3 = 0xE700000000000000;
  else
    v3 = 0xEC00000077656976;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_1007AF84C(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD v6[9];

  v2 = *v1;
  Hasher.init(_seed:)(v6, a1);
  if (v2)
    v3 = 0x636972656E6567;
  else
    v3 = 0x6572506563696F76;
  if (v2)
    v4 = 0xE700000000000000;
  else
    v4 = 0xEC00000077656976;
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

uint64_t sub_1007AF8D0@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010AD4F8, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

void sub_1007AF92C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x6572506563696F76;
  if (*v1)
    v2 = 0x636972656E6567;
  v3 = 0xEC00000077656976;
  if (*v1)
    v3 = 0xE700000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1007AF974(void *a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t result;
  char v28;
  _QWORD *v29;
  uint64_t v30;
  void (*v31)(double (*)(void **), uint64_t, __n128);
  _QWORD *v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  id v39;
  void *v40;
  char *v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  double (**v47)(uint64_t);
  uint64_t v48;
  uint64_t v49;
  id v50;
  void *v51;
  id v52;
  void *v53;
  char *v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  _BYTE v58[24];

  v3 = v2;
  LODWORD(v56) = a2;
  v5 = sub_100007E8C(&qword_1011C8A98);
  __chkstk_darwin(v5);
  v7 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for WelcomeViewModel(0);
  v8 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v10 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (uint64_t *)((char *)&v55 - v12);
  v14 = type metadata accessor for DispatchPredicate(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (uint64_t *)((char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = sub_1000A9B84();
  *v17 = static OS_dispatch_queue.main.getter(v18, v19, v20, v21, v22, v23, v24, v25);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v15 + 104))(v17, enum case for DispatchPredicate.onQueue(_:), v14);
  v26 = _dispatchPreconditionTest(_:)(v17);
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v15 + 8))(v17, v14);
  if ((v26 & 1) != 0)
  {
    v28 = v56 & 1;
    v29 = (_QWORD *)*JSBridge.shared.unsafeMutableAddressor();
    v30 = swift_allocObject(&unk_1010DC050, 40, 7);
    *(_BYTE *)(v30 + 16) = 1;
    *(_QWORD *)(v30 + 24) = a1;
    *(_QWORD *)(v30 + 32) = v3;
    v31 = *(void (**)(double (*)(void **), uint64_t, __n128))((swift_isaMask & *v29) + 0xD8);
    v32 = v29;
    v56 = a1;
    v33 = swift_retain();
    v31(sub_1007B1964, v30, v33);

    swift_release();
    sub_1007AFD98(v28, (uint64_t)v13);
    v34 = *v13;
    v35 = v13[1];
    swift_retain();
    sub_10004BA30(v34, v35);
    *v13 = (uint64_t)sub_1007B1970;
    v13[1] = v3;
    sub_10005B704((uint64_t)v13, (uint64_t)v7, type metadata accessor for WelcomeViewModel);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v7, 0, 1, v57);
    v36 = v3 + OBJC_IVAR____TtC5Music26PrivacyDisclaimerPresenter_welcomeViewModel;
    swift_beginAccess(v3 + OBJC_IVAR____TtC5Music26PrivacyDisclaimerPresenter_welcomeViewModel, v58, 33, 0);
    sub_1000A5508((uint64_t)v7, v36, &qword_1011C8A98);
    swift_endAccess(v58);
    sub_10005B704((uint64_t)v13, (uint64_t)v10, type metadata accessor for WelcomeViewModel);
    v37 = objc_allocWithZone((Class)type metadata accessor for WelcomeViewController(0));
    v38 = (void *)sub_100140C78((uint64_t)v10);
    v39 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for PrivacyOnboardingNavigationController()), "initWithRootViewController:", v38);
    objc_msgSend(v39, "setModalPresentationStyle:", 2);
    v40 = (void *)objc_opt_self(ICPrivacyInfo);
    v41 = (char *)v39;
    v42 = objc_msgSend(v40, "sharedPrivacyInfo");
    v43 = objc_msgSend(v42, "privacyAcknowledgementRequiredForMusic");

    objc_msgSend(v41, "setModalInPresentation:", v43);
    objc_msgSend(v41, "setNavigationBarHidden:", 1);
    v44 = swift_allocObject(&unk_1010DC078, 24, 7);
    swift_weakInit(v44 + 16, v3);
    v45 = swift_allocObject(&unk_1010DC0A0, 32, 7);
    v46 = v56;
    *(_QWORD *)(v45 + 16) = v44;
    *(_QWORD *)(v45 + 24) = v46;
    v47 = (double (**)(uint64_t))&v41[OBJC_IVAR____TtC5MusicP33_8995DE762EDB3B0CA6E03DE2F9BEA1B637PrivacyOnboardingNavigationController_dismissCallback];
    v48 = *(_QWORD *)&v41[OBJC_IVAR____TtC5MusicP33_8995DE762EDB3B0CA6E03DE2F9BEA1B637PrivacyOnboardingNavigationController_dismissCallback];
    v49 = *(_QWORD *)&v41[OBJC_IVAR____TtC5MusicP33_8995DE762EDB3B0CA6E03DE2F9BEA1B637PrivacyOnboardingNavigationController_dismissCallback
                        + 8];
    *v47 = sub_1007B19C8;
    v47[1] = (double (*)(uint64_t))v45;
    v50 = v46;
    sub_10004BA30(v48, v49);
    v51 = *(void **)(v3 + OBJC_IVAR____TtC5Music26PrivacyDisclaimerPresenter_contentViewController);
    *(_QWORD *)(v3 + OBJC_IVAR____TtC5Music26PrivacyDisclaimerPresenter_contentViewController) = v38;
    v52 = v38;

    v53 = *(void **)(v3 + 24);
    *(_QWORD *)(v3 + 24) = v41;
    v54 = v41;

    objc_msgSend(v50, "presentViewController:animated:completion:", v54, 1, 0);
    return sub_10005B748((uint64_t)v13, type metadata accessor for WelcomeViewModel);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1007AFD98@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t result;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  void (*v57)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t KeyPath;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  void (*v74)(_QWORD *, _QWORD);
  unint64_t v75;
  void (*v76)(char *, char *, uint64_t);
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  char *v98;
  _QWORD v99[4];
  uint64_t v100[3];

  v4 = sub_100007E8C(&qword_1011BC170);
  __chkstk_darwin(v4);
  v95 = (char *)&v87 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011BAAA8);
  __chkstk_darwin(v6);
  v96 = (char *)&v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = sub_100007E8C(&qword_1011A6CA0);
  v94 = *(_QWORD *)(v97 - 8);
  __chkstk_darwin(v97);
  v92 = (uint64_t)&v87 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v91 = (uint64_t)&v87 - v10;
  v11 = type metadata accessor for AttributedString(0);
  v93 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v87 - v15;
  __chkstk_darwin(v17);
  v98 = (char *)&v87 - v18;
  v19 = type metadata accessor for AttributeContainer(0);
  __chkstk_darwin(v19);
  v21 = (char *)&v87 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for Locale(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v25 = (char *)&v87 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v26);
  v28 = (char *)&v87 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    v90 = a2;
    v44 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000016, 0x8000000100E450D0);
    static Locale.current.getter(v44);
    v89 = String.init(localized:table:bundle:locale:comment:)(v28, 0, 0, 0, v25, 0, 0, 256);
    v45 = v16;
    v47 = v46;
    v48 = String.LocalizationValue.init(stringLiteral:)(0x754D20656C707041, 0xEB00000000636973);
    static Locale.current.getter(v48);
    v87 = v25;
    v49 = String.init(localized:table:bundle:locale:comment:)(v28, 0, 0, 0, v25, 0, 0, 256);
    v50 = v11;
    v52 = v51;
    v53 = swift_bridgeObjectRetain();
    AttributeContainer.init()(v53);
    v54 = v89;
    v89 = v47;
    AttributedString.init(_:attributes:)(v54, v47, v21);
    v55 = v93;
    v56 = v45;
    (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v13, v45, v50);
    v99[0] = v49;
    v99[1] = v52;
    v88 = v52;
    v57 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
    v58 = (uint64_t)v95;
    v57(v95, 1, 1, v22);
    v59 = sub_10057B900();
    v60 = sub_100055B68();
    v61 = (uint64_t)v96;
    AttributedStringProtocol.range<A>(of:options:locale:)(v99, 0, v58, v50, &type metadata for String, v59, v60);
    sub_10004FF60(v58, &qword_1011BC170);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v13, v50);
    v62 = v97;
    v63 = v55;
    v64 = v56;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v94 + 48))(v61, 1, v97) == 1)
    {
      v65 = &qword_1011BAAA8;
      v66 = v61;
    }
    else
    {
      v67 = v91;
      sub_10057B990(v61, v91);
      v68 = v92;
      sub_1007B1A98(v67, v92);
      KeyPath = swift_getKeyPath(&unk_100ECFE28);
      __chkstk_darwin(KeyPath);
      *(&v87 - 2) = v70;
      v71 = swift_getKeyPath(&unk_100ECFE58);
      v100[0] = static Color.accentColor.getter(v71, v72);
      v73 = sub_10057B9D8();
      v74 = (void (*)(_QWORD *, _QWORD))AttributedString.subscript.modify(v99, v68, v62, v73);
      v75 = sub_1007B1AFC();
      AttributedSubstring.subscript.setter(v100, v71, v75);
      v74(v99, 0);
      sub_10004FF60(v68, &qword_1011A6CA0);
      v66 = v67;
      v65 = &qword_1011A6CA0;
    }
    sub_10004FF60(v66, v65);
    a2 = v90;
    v76 = *(void (**)(char *, char *, uint64_t))(v63 + 32);
    v77 = v98;
    v76(v98, v64, v50);
    swift_bridgeObjectRelease(v89);
    swift_bridgeObjectRelease(v88);
    v78 = String.LocalizationValue.init(stringLiteral:)(0xD0000000000000A4, 0x8000000100E450F0);
    v79 = v87;
    static Locale.current.getter(v78);
    v36 = String.init(localized:table:bundle:locale:comment:)(v28, 0, 0, 0, v79, 0, 0, 256);
    v38 = v80;
    v81 = String.LocalizationValue.init(stringLiteral:)(0x65756E69746E6F43, 0xE800000000000000);
    static Locale.current.getter(v81);
    v82 = String.init(localized:table:bundle:locale:comment:)(v28, 0, 0, 0, v79, 0, 0, 256);
    v83 = v50;
    v41 = v82;
    v43 = v84;
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = 0;
    *(_QWORD *)(a2 + 16) = 0x656D6F636C6577;
    *(_QWORD *)(a2 + 24) = 0xE700000000000000;
    v34 = (int *)type metadata accessor for WelcomeViewModel(0);
    result = ((uint64_t (*)(uint64_t, char *, uint64_t))v76)(a2 + v34[6], v77, v83);
  }
  else
  {
    v29 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001ELL, 0x8000000100E451A0);
    static Locale.current.getter(v29);
    v30 = String.init(localized:table:bundle:locale:comment:)(v28, 0, 0, 0, v25, 0, 0, 256);
    v32 = v31;
    v33 = swift_bridgeObjectRetain();
    AttributeContainer.init()(v33);
    v34 = (int *)type metadata accessor for WelcomeViewModel(0);
    AttributedString.init(_:attributes:)(v30, v32, v21);
    swift_bridgeObjectRelease(v32);
    v35 = String.LocalizationValue.init(stringLiteral:)(0x1000000000000092, 0x8000000100E451C0);
    static Locale.current.getter(v35);
    v36 = String.init(localized:table:bundle:locale:comment:)(v28, 0, 0, 0, v25, 0, 0, 256);
    v38 = v37;
    v39 = String.LocalizationValue.init(stringLiteral:)(0x65756E69746E6F43, 0xE800000000000000);
    static Locale.current.getter(v39);
    result = String.init(localized:table:bundle:locale:comment:)(v28, 0, 0, 0, v25, 0, 0, 256);
    v41 = result;
    v43 = v42;
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = 0;
    strcpy((char *)(a2 + 16), "voiceWelcome");
    *(_BYTE *)(a2 + 29) = 0;
    *(_WORD *)(a2 + 30) = -5120;
  }
  v85 = (uint64_t *)(a2 + v34[7]);
  *v85 = v36;
  v85[1] = v38;
  v86 = (uint64_t *)(a2 + v34[8]);
  *v86 = v41;
  v86[1] = v43;
  return result;
}

void sub_1007B04F4()
{
  uint64_t v0;
  uint64_t v1;
  os_log_type_t v2;
  uint8_t *v3;
  NSObject *oslog;

  sub_1007B05C8();
  if (qword_10119C7D8 != -1)
    swift_once(&qword_10119C7D8, sub_1007B161C);
  v0 = type metadata accessor for Logger(0);
  v1 = sub_100048B14(v0, (uint64_t)qword_1011C8A78);
  oslog = Logger.logObject.getter(v1);
  v2 = static os_log_type_t.default.getter(oslog);
  if (os_log_type_enabled(oslog, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v2, "Accept privacy terms button was tapped.", v3, 2u);
    swift_slowDealloc(v3, -1, -1);
  }

}

void sub_1007B05C8()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  id *v4;
  uint64_t (*v5)(void);
  unint64_t v6;
  uint64_t v7;
  void (*v8)(double (*)(void **), uint64_t, __n128);
  __n128 v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  char v23[24];

  v1 = objc_msgSend((id)objc_opt_self(ICPrivacyInfo), "sharedPrivacyInfo");
  objc_msgSend(v1, "acknowledgePrivacyPolicyForIdentifier:completionHandler:", ICPrivacyIdentifierMusic, 0);

  v2 = *(void **)(v0 + 24);
  if (v2)
    v3 = objc_msgSend(v2, "presentingViewController");
  else
    v3 = 0;
  v4 = (id *)JSBridge.shared.unsafeMutableAddressor();
  v5 = *(uint64_t (**)(void))((swift_isaMask & *(_QWORD *)*v4) + 0xC8);
  v22 = *v4;
  if ((v5() & 1) == 0)
  {
    if (qword_10119C7D8 != -1)
      swift_once(&qword_10119C7D8, sub_1007B161C);
    v14 = type metadata accessor for Logger(0);
    v15 = sub_100048B14(v14, (uint64_t)qword_1011C8A78);
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.default.getter(v16);
    if (!os_log_type_enabled(v16, v17))
      goto LABEL_20;
    v18 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v18 = 0;
    v19 = "JavaScript external script is not deployed. Dismissing presentation.";
    goto LABEL_19;
  }
  if ((*(_BYTE *)(v0 + 32) & 1) != 0)
  {
    v23[0] = 6;
    v6 = sub_10004D63C();
    if ((FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v6) & 1) == 0)
    {
      v7 = swift_allocObject(&unk_1010DC0F0, 32, 7);
      *(_QWORD *)(v7 + 16) = v3;
      *(_QWORD *)(v7 + 24) = v0;
      v8 = *(void (**)(double (*)(void **), uint64_t, __n128))((swift_isaMask & *v22) + 0xD8);
      v3 = v3;
      v9 = swift_retain();
      v8(sub_1007B1A2C, v7, v9);
      swift_release();
    }

    v10 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Music26PrivacyDisclaimerPresenter_welcomeViewModel);
    swift_beginAccess(v0 + OBJC_IVAR____TtC5Music26PrivacyDisclaimerPresenter_welcomeViewModel, v23, 1, 0);
    v11 = type metadata accessor for WelcomeViewModel(0);
    if (!(*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
    {
      v12 = *v10;
      v13 = v10[1];
      *v10 = 0;
      v10[1] = 0;
      sub_10004BA30(v12, v13);
    }
    return;
  }
  if (qword_10119C7D8 != -1)
    swift_once(&qword_10119C7D8, sub_1007B161C);
  v20 = type metadata accessor for Logger(0);
  v21 = sub_100048B14(v20, (uint64_t)qword_1011C8A78);
  v16 = Logger.logObject.getter(v21);
  v17 = static os_log_type_t.default.getter(v16);
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v18 = 0;
    v19 = "DisplayMode is voiceOver, dismissing privacy presentation.";
LABEL_19:
    _os_log_impl((void *)&_mh_execute_header, v16, v17, v19, v18, 2u);
    swift_slowDealloc(v18, -1, -1);
  }
LABEL_20:

  if (v3)
  {
    objc_msgSend(v3, "dismissViewControllerAnimated:completion:", 1, 0);

  }
}

double sub_1007B08F0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t Strong;
  double result;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  void (*v10)(double (*)(void **), uint64_t, __n128);
  _QWORD *v11;
  id v12;
  __n128 v13;
  _BYTE v14[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v14, 0, 0);
  Strong = swift_weakLoadStrong(v4);
  if (Strong)
  {
    v7 = Strong;
    v8 = (_QWORD *)*JSBridge.shared.unsafeMutableAddressor();
    v9 = swift_allocObject(&unk_1010DC0C8, 40, 7);
    *(_BYTE *)(v9 + 16) = 0;
    *(_QWORD *)(v9 + 24) = a3;
    *(_QWORD *)(v9 + 32) = v7;
    v10 = *(void (**)(double (*)(void **), uint64_t, __n128))((swift_isaMask & *v8) + 0xD8);
    v11 = v8;
    v12 = a3;
    v13 = swift_retain();
    v10(sub_1007B1C1C, v9, v13);
    swift_release();

    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_1007B09C4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v2 = *a2;
  v5 = *a1;
  v6 = v2;
  v3 = sub_100007E8C(&qword_1011C8BC0);
  return dispatch thunk of static Equatable.== infix(_:_:)(&v6, &v5, v3, &protocol witness table for AnyKeyPath) & 1;
}

double sub_1007B0A1C(void **a1, char a2, uint64_t a3, uint64_t a4)
{
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  double result;

  v7 = *a1;
  v8 = swift_allocObject(&unk_1010DC118, 24, 7);
  swift_unknownObjectWeakInit(v8 + 16, a3);
  v9 = swift_allocObject(&unk_1010DC188, 48, 7);
  *(_QWORD *)(v9 + 16) = v8;
  *(_BYTE *)(v9 + 24) = a2;
  *(_QWORD *)(v9 + 32) = v7;
  *(_QWORD *)(v9 + 40) = a4;
  v10 = v7;
  swift_retain();
  swift_retain();
  JSApplication.updatePrivacyOnboardingPresentationStatus(isPresented:completionHandler:)(a2, (uint64_t)sub_1007B1C0C, v9);

  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_1007B0ADC(void *a1, uint64_t a2, char a3, void *a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void *Strong;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  _QWORD *v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  __int128 v35;
  _BYTE v36[40];
  _QWORD v37[4];
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  __int128 v42;
  _BYTE v43[24];

  v10 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v10);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011A9580);
  __chkstk_darwin(v13);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = _s18PerformanceConteXtVMa(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v19 = a2 + 16;
    swift_beginAccess(v19, v43, 0, 0);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v19);
    if (Strong)
    {
      v21 = Strong;
      if ((a3 & 1) != 0)
      {

      }
      else
      {
        v41 = 0;
        v39 = 0u;
        v40 = 0u;
        v38 = 0u;
        v42 = xmmword_100EA93A0;
        v22 = type metadata accessor for OpenURLAction(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v15, 1, 1, v22);
        v23 = type metadata accessor for GenericMusicItem(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v12, 1, 1, v23);
        v24 = *(_QWORD *)(a5 + 16);
        v25 = a1;
        swift_retain();
        sub_1005F5640((uint64_t)&v38, 0, (uint64_t)v15, (uint64_t)v12, 0, v24, 0, 0, (uint64_t)v18, 0, 0, 0, 0, 0, 0, 0xF000000000000000);
        v37[3] = v16;
        v26 = sub_100049F68(v37);
        sub_10005B704((uint64_t)v18, (uint64_t)v26, _s18PerformanceConteXtVMa);
        memset(v36, 0, sizeof(v36));
        v35 = (unint64_t)a4;
        v27 = a4;
        sub_1000A5508((uint64_t)v37, (uint64_t)&v36[8], &qword_10119DCC0);
        v38 = v35;
        v39 = *(_OWORD *)v36;
        v40 = *(_OWORD *)&v36[16];
        v41 = *(_QWORD *)&v36[32];
        sub_10005B748((uint64_t)v18, _s18PerformanceConteXtVMa);
        v28 = (id)*JSSegueCoordinator.shared.unsafeMutableAddressor();
        JSSegueCoordinator.perform(segue:with:)((uint64_t)v25, (uint64_t)&v38);

        if (qword_10119C7D8 != -1)
          swift_once(&qword_10119C7D8, sub_1007B161C);
        v29 = type metadata accessor for Logger(0);
        v30 = sub_100048B14(v29, (uint64_t)qword_1011C8A78);
        v31 = Logger.logObject.getter(v30);
        v32 = static os_log_type_t.default.getter(v31);
        if (os_log_type_enabled(v31, v32))
        {
          v33 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v33 = 0;
          _os_log_impl((void *)&_mh_execute_header, v31, v32, "Performing Segue from privacy onboarding presentation status change.", v33, 2u);
          swift_slowDealloc(v33, -1, -1);
        }

        sub_1000A554C((uint64_t)&v38);
      }
    }
  }
}

double sub_1007B0E2C(void **a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  double result;

  v5 = *a1;
  v6 = swift_allocObject(&unk_1010DC118, 24, 7);
  swift_unknownObjectWeakInit(v6 + 16, a2);
  v7 = (_QWORD *)swift_allocObject(&unk_1010DC140, 40, 7);
  v7[2] = v6;
  v7[3] = v5;
  v7[4] = a3;
  v8 = v5;
  swift_retain();
  swift_retain();
  JSApplication.updatePrivacyTermsAccepted(completionHandler:)((uint64_t)sub_1007B1A8C, (uint64_t)v7);

  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_1007B0EE0(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t Strong;
  void *v18;
  id *v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  _QWORD *v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  const char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  _BYTE v40[40];
  _QWORD v41[4];
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  __int128 v46;
  _BYTE v47[24];
  _BYTE v48[32];

  v8 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v8);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011A9580);
  __chkstk_darwin(v11);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = _s18PerformanceConteXtVMa(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v48, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v18 = (void *)Strong;
    v19 = (id *)JSSegueCoordinator.shared.unsafeMutableAddressor();
    v20 = (uint64_t)*v19 + OBJC_IVAR____TtC11MusicJSCore18JSSegueCoordinator_seguePerformingDelegate;
    swift_beginAccess(v20, v47, 0, 0);
    v21 = swift_unknownObjectWeakLoadStrong(v20);
    *(_QWORD *)&v22 = swift_unknownObjectRelease(v21).n128_u64[0];
    if (v21)
    {
      if (a1)
      {
        v45 = 0;
        v43 = 0u;
        v44 = 0u;
        v42 = 0u;
        v46 = xmmword_100EA93A0;
        v23 = type metadata accessor for OpenURLAction(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v13, 1, 1, v23);
        v24 = type metadata accessor for GenericMusicItem(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v10, 1, 1, v24);
        v25 = *(_QWORD *)(a4 + 16);
        v26 = a1;
        swift_retain();
        sub_1005F5640((uint64_t)&v42, 0, (uint64_t)v13, (uint64_t)v10, 0, v25, 0, 0, (uint64_t)v16, 0, 0, 0, 0, 0, 0, 0xF000000000000000);
        v41[3] = v14;
        v27 = sub_100049F68(v41);
        sub_10005B704((uint64_t)v16, (uint64_t)v27, _s18PerformanceConteXtVMa);
        memset(v40, 0, sizeof(v40));
        v39 = (unint64_t)a3;
        v28 = a3;
        sub_1000A5508((uint64_t)v41, (uint64_t)&v40[8], &qword_10119DCC0);
        v42 = v39;
        v43 = *(_OWORD *)v40;
        v44 = *(_OWORD *)&v40[16];
        v45 = *(_QWORD *)&v40[32];
        sub_10005B748((uint64_t)v16, _s18PerformanceConteXtVMa);
        v29 = *v19;
        JSSegueCoordinator.perform(segue:with:)((uint64_t)v26, (uint64_t)&v42);

        sub_1000A554C((uint64_t)&v42);
        return;
      }
      objc_msgSend(v18, "dismissViewControllerAnimated:completion:", 1, 0, v22);
      if (qword_10119C7D8 != -1)
        swift_once(&qword_10119C7D8, sub_1007B161C);
      v36 = type metadata accessor for Logger(0);
      v37 = sub_100048B14(v36, (uint64_t)qword_1011C8A78);
      v32 = Logger.logObject.getter(v37);
      v33 = static os_log_type_t.default.getter(v32);
      if (!os_log_type_enabled(v32, v33))
        goto LABEL_14;
      v34 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v34 = 0;
      v35 = "Segue not provided by scripting environment, dismissing privacy presentation.";
    }
    else
    {
      objc_msgSend(v18, "dismissViewControllerAnimated:completion:", 1, 0, v22);
      if (qword_10119C7D8 != -1)
        swift_once(&qword_10119C7D8, sub_1007B161C);
      v30 = type metadata accessor for Logger(0);
      v31 = sub_100048B14(v30, (uint64_t)qword_1011C8A78);
      v32 = Logger.logObject.getter(v31);
      v33 = static os_log_type_t.default.getter(v32);
      if (!os_log_type_enabled(v32, v33))
        goto LABEL_14;
      v34 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v34 = 0;
      v35 = "JSSegueCoordinator seguePerformingDelegate is nil, dismissing privacy presentation.";
    }
    _os_log_impl((void *)&_mh_execute_header, v32, v33, v35, v34, 2u);
    swift_slowDealloc(v34, -1, -1);
LABEL_14:

  }
}

uint64_t PrivacyDisclaimerPresenter.deinit()
{
  uint64_t v0;

  swift_release();

  sub_10004FF60(v0 + OBJC_IVAR____TtC5Music26PrivacyDisclaimerPresenter_welcomeViewModel, &qword_1011C8A98);
  return v0;
}

uint64_t PrivacyDisclaimerPresenter.__deallocating_deinit()
{
  id *v0;

  swift_release();

  sub_10004FF60((uint64_t)v0 + OBJC_IVAR____TtC5Music26PrivacyDisclaimerPresenter_welcomeViewModel, &qword_1011C8A98);
  return swift_deallocClassInstance(v0, *((unsigned int *)*v0 + 12), *((unsigned __int16 *)*v0 + 26));
}

unint64_t sub_1007B13E4()
{
  unint64_t result;

  result = qword_1011C8AA8;
  if (!qword_1011C8AA8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PrivacyDisclaimerPresenter.DisplayMode, &type metadata for PrivacyDisclaimerPresenter.DisplayMode);
    atomic_store(result, (unint64_t *)&qword_1011C8AA8);
  }
  return result;
}

uint64_t sub_1007B1428()
{
  return type metadata accessor for PrivacyDisclaimerPresenter(0);
}

uint64_t type metadata accessor for PrivacyDisclaimerPresenter(uint64_t a1)
{
  uint64_t result;

  result = qword_1011C8AD8;
  if (!qword_1011C8AD8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PrivacyDisclaimerPresenter);
  return result;
}

void sub_1007B146C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = "\b";
  v4[2] = &unk_100ECFDD8;
  sub_1007B14FC(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    v4[4] = "\b";
    swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
  }
}

void sub_1007B14FC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1011C8AE8)
  {
    v2 = type metadata accessor for WelcomeViewModel(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1011C8AE8);
  }
}

uint64_t storeEnumTagSinglePayload for PrivacyDisclaimerPresenter.DisplayMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1007B159C + 4 * byte_100ECFCD5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1007B15D0 + 4 * byte_100ECFCD0[v4]))();
}

uint64_t sub_1007B15D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1007B15D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1007B15E0);
  return result;
}

uint64_t sub_1007B15EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1007B15F4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1007B15F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1007B1600(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PrivacyDisclaimerPresenter.DisplayMode()
{
  return &type metadata for PrivacyDisclaimerPresenter.DisplayMode;
}

uint64_t sub_1007B161C()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10004FACC(v0, qword_1011C8A78);
  sub_100048B14(v0, (uint64_t)qword_1011C8A78);
  return static Logger.music(_:)(0xD000000000000011, 0x8000000100E450B0);
}

id sub_1007B18F8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PrivacyOnboardingNavigationController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for PrivacyOnboardingNavigationController()
{
  return objc_opt_self(_TtC5MusicP33_8995DE762EDB3B0CA6E03DE2F9BEA1B637PrivacyOnboardingNavigationController);
}

double sub_1007B1964(void **a1)
{
  uint64_t v1;

  return sub_1007B0A1C(a1, *(_BYTE *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

void sub_1007B1970()
{
  sub_1007B04F4();
}

uint64_t sub_1007B1978()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1007B199C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

double sub_1007B19C8(uint64_t a1)
{
  uint64_t v1;

  return sub_1007B08F0(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1007B19D4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1007B1A00()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_1007B1A2C(void **a1)
{
  uint64_t v1;

  return sub_1007B0E2C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1007B1A34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

uint64_t sub_1007B1A58()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_1007B1A8C(void *a1)
{
  uint64_t v1;

  sub_1007B0EE0(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1007B1A98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011A6CA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1007B1AE0()
{
  AttributeScopes.SwiftUIAttributes.foregroundColor.getter();
  __break(1u);
}

unint64_t sub_1007B1AFC()
{
  unint64_t result;

  result = qword_1011C8BB8;
  if (!qword_1011C8BB8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AttributeScopes.SwiftUIAttributes.ForegroundColorAttribute, &type metadata for AttributeScopes.SwiftUIAttributes.ForegroundColorAttribute);
    atomic_store(result, (unint64_t *)&qword_1011C8BB8);
  }
  return result;
}

void sub_1007B1B40(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a2;
  v3 = sub_1007B1AFC();
  AttributeDynamicLookup.subscript.getter(v2, v3);
  __break(1u);
}

uint64_t sub_1007B1B64()
{
  return 8;
}

uint64_t sub_1007B1B70(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t sub_1007B1B78(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_1007B1B88()
{
  uint64_t v0;

  v0 = sub_100007E8C(&qword_1011C8BC0);
  return dispatch thunk of Hashable.hashValue.getter(v0, &protocol witness table for AnyKeyPath);
}

_QWORD *sub_1007B1BCC(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1007B1BD8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_1007B1C0C(void *a1)
{
  uint64_t v1;

  sub_1007B0ADC(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(void **)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1007B1C20()
{
  uint64_t v0;
  uint64_t result;

  v0 = type metadata accessor for RoutingControllerWorkaround();
  swift_allocObject(v0, 40, 7);
  result = sub_1007B1D74();
  qword_10124D9D8 = result;
  return result;
}

void sub_1007B1C58()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  void *v6;
  void *v7;
  _QWORD aBlock[6];
  _BYTE v9[24];

  v1 = swift_beginAccess(v0 + 16, v9, 0, 0).n128_u64[0];
  v2 = *(_QWORD *)(v0 + 16);
  if ((v2 & 0xC000000000000001) != 0)
  {
    if (v2 < 0)
      v3 = *(_QWORD *)(v0 + 16);
    else
      v3 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v5 = __CocoaSet.count.getter(v3, v4);
    v1 = swift_bridgeObjectRelease(v2).n128_u64[0];
    if (v5)
      goto LABEL_6;
  }
  else if (*(_QWORD *)(v2 + 16))
  {
LABEL_6:
    v6 = (void *)objc_opt_self(MPAVRoutingController);
    aBlock[4] = sub_1007B1FD8;
    aBlock[5] = v0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001E5304;
    aBlock[3] = &unk_1010DC208;
    v7 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v6, "getActiveRouteWithTimeout:completion:", v7, 1.0);
    _Block_release(v7);
    return;
  }
  objc_msgSend(*(id *)(v0 + 24), "setDiscoveryMode:", 0, *(double *)&v1);
}

uint64_t sub_1007B1D74()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  NSString v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = v0;
  *(_QWORD *)(v0 + 16) = &_swiftEmptySetSingleton;
  v2 = objc_msgSend(objc_allocWithZone((Class)MPAVEndpointRoutingDataSource), "init");
  v3 = objc_allocWithZone((Class)MPAVRoutingController);
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(v3, "initWithDataSource:name:", v2, v4);

  *(_QWORD *)(v1 + 24) = v5;
  *(_QWORD *)(v1 + 32) = 0;
  sub_1007B1C58();
  v6 = (void *)MPAVRoutingControllerActiveSystemRouteDidChangeNotification;
  v7 = swift_allocObject(&unk_1010DC240, 24, 7);
  swift_weakInit(v7 + 16, v1);
  v8 = type metadata accessor for NotificationObserver();
  swift_allocObject(v8, 64, 7);
  *(_QWORD *)(v1 + 32) = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v6, 0, 1, 1, (uint64_t)sub_1007B201C, v7);
  swift_release();
  return v1;
}

double sub_1007B1EA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;
  _BYTE v4[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v4, 0, 0);
  if (swift_weakLoadStrong(v2))
  {
    sub_1007B1C58();
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

void sub_1007B1EF4(void *a1, uint64_t a2)
{
  void *v4;
  id v5;
  uint64_t v6;
  id v7;

  if (a1)
    v7 = a1;
  else
    v7 = objc_msgSend((id)objc_opt_self(MPAVRoutingController), "systemRoute");
  v4 = *(void **)(a2 + 24);
  v5 = a1;
  if (objc_msgSend(v7, "isDeviceRoute"))
    v6 = 0;
  else
    v6 = 2;
  objc_msgSend(v4, "setDiscoveryMode:", v6);

}

uint64_t sub_1007B1F84()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for RoutingControllerWorkaround()
{
  return objc_opt_self(_TtC5Music27RoutingControllerWorkaround);
}

void sub_1007B1FD8(void *a1)
{
  uint64_t v1;

  sub_1007B1EF4(a1, v1);
}

uint64_t sub_1007B1FE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1007B1FF0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1007B1FF8()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_1007B201C(uint64_t a1)
{
  uint64_t v1;

  return sub_1007B1EA0(a1, v1);
}

uint64_t sub_1007B2024(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v6 + 152) = a5;
  *(_QWORD *)(v6 + 160) = v5;
  *(_QWORD *)(v6 + 136) = a2;
  *(_QWORD *)(v6 + 144) = a4;
  *(_BYTE *)(v6 + 296) = a3;
  *(_QWORD *)(v6 + 128) = a1;
  v7 = type metadata accessor for Logger(0);
  *(_QWORD *)(v6 + 168) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v6 + 176) = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v6 + 184) = swift_task_alloc(v9);
  *(_QWORD *)(v6 + 192) = swift_task_alloc(v9);
  *(_QWORD *)(v6 + 200) = swift_task_alloc(v9);
  v10 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  *(_QWORD *)(v6 + 208) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v6 + 216) = v11;
  *(_QWORD *)(v6 + 224) = static MainActor.shared.getter(v12);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor);
  *(_QWORD *)(v6 + 232) = v13;
  *(_QWORD *)(v6 + 240) = v14;
  return swift_task_switch(sub_1007B2108, v13, v14);
}

uint64_t sub_1007B2108()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  unsigned __int8 v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  id v23;
  uint64_t v24;
  _QWORD *v25;
  __n128 v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  void *v32;
  void *v33;
  uint64_t v34;
  id v35;
  id v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v1 = (void *)objc_opt_self(ICMediaUserStateCenter);
  v2 = objc_msgSend(v1, "shared");
  v3 = objc_msgSend(v2, "activeUserState");

  if (v3)
  {
    v4 = objc_msgSend(v3, "music", swift_release().n128_f64[0]);
    if (v4 && (v5 = v4, v6 = objc_msgSend(v4, "userProfile"), v5, v6))
    {
      v7 = objc_msgSend(v6, "collaborationAllowed");

      v8 = v7 ^ 1;
    }
    else
    {
      v8 = 1;
    }
    v28 = *(_QWORD *)(v0 + 208);
    v30 = *(_QWORD *)(v0 + 144);
    v29 = *(_QWORD *)(v0 + 152);
    v31 = *(_BYTE *)(v0 + 296);
    v32 = *(void **)(v0 + 128);
    v33 = *(void **)(v0 + 136);
    v34 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v28, 1, 1, v34);
    v35 = v32;
    sub_100048AAC(v30, v29);
    v36 = v33;
    v38 = static MainActor.shared.getter(v37);
    v39 = swift_allocObject(&unk_1010DC618, 66, 7);
    *(_QWORD *)(v39 + 16) = v38;
    *(_QWORD *)(v39 + 24) = &protocol witness table for MainActor;
    *(_QWORD *)(v39 + 32) = v35;
    *(_QWORD *)(v39 + 40) = v30;
    *(_QWORD *)(v39 + 48) = v29;
    *(_QWORD *)(v39 + 56) = v36;
    *(_BYTE *)(v39 + 64) = v8;
    *(_BYTE *)(v39 + 65) = v31;
    sub_100166D14(v28, (uint64_t)&unk_1011C8FE8, v39);

    swift_release();
    v40 = *(_QWORD *)(v0 + 200);
    v42 = *(_QWORD *)(v0 + 184);
    v41 = *(_QWORD *)(v0 + 192);
    swift_task_dealloc(*(_QWORD *)(v0 + 208));
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 200);
    v10 = *(_QWORD *)(v0 + 168);
    v11 = *(_QWORD *)(v0 + 176);
    v12 = Logger.sharePlayTogether.unsafeMutableAddressor();
    *(_QWORD *)(v0 + 248) = v12;
    v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    *(_QWORD *)(v0 + 256) = v13;
    v14 = v13(v9, v12, v10);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.default.getter(v15);
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Couldn't get activeUserState, reloading", v17, 2u);
      swift_slowDealloc(v17, -1, -1);
    }
    v18 = v0 + 16;
    v19 = *(_QWORD *)(v0 + 200);
    v20 = *(_QWORD *)(v0 + 168);
    v21 = *(_QWORD *)(v0 + 176);

    v22 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
    *(_QWORD *)(v0 + 264) = v22;
    v22(v19, v20);
    v23 = objc_msgSend(v1, "shared");
    *(_QWORD *)(v0 + 272) = v23;
    *(_QWORD *)(v0 + 56) = v0 + 120;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_1007B242C;
    v24 = swift_continuation_init(v0 + 16, 1);
    *(_QWORD *)(v0 + 80) = _NSConcreteStackBlock;
    v25 = (_QWORD *)(v0 + 80);
    v25[1] = 0x40000000;
    v25[2] = sub_1003AE984;
    v25[3] = &unk_1010DC5C8;
    v25[4] = v24;
    objc_msgSend(v23, "refreshUserStatesWithCompletion:", v25);
    return swift_continuation_await(v18, v26);
  }
}

uint64_t sub_1007B242C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 280) = v2;
  if (v2)
    v3 = sub_1007B27EC;
  else
    v3 = sub_1007B2488;
  return swift_task_switch(v3, *(_QWORD *)(v1 + 232), *(_QWORD *)(v1 + 240));
}

uint64_t sub_1007B2488()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  __n128 v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;
  uint8_t *v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  __n128 v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v1 = *(_QWORD *)(v0 + 120);

  if ((unint64_t)v1 >> 62)
  {
    if (v1 < 0)
      v31 = v1;
    else
      v31 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v2 = _CocoaArrayWrapper.endIndex.getter(v31);
    swift_bridgeObjectRelease(v1);
  }
  else
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = swift_bridgeObjectRelease(v1);
  if (v2)
  {
    v4 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, __n128))(v0 + 256))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 168), v3);
    v5 = Logger.logObject.getter(v4);
    v6 = static os_log_type_t.default.getter(v5);
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Got activeUserState, retrying", v7, 2u);
      swift_slowDealloc(v7, -1, -1);
    }
    v8 = *(void (**)(uint64_t, uint64_t))(v0 + 264);
    v9 = *(_QWORD *)(v0 + 192);
    v10 = *(_QWORD *)(v0 + 168);

    v8(v9, v10);
    v11 = (_QWORD *)swift_task_alloc(dword_1011C8FCC);
    *(_QWORD *)(v0 + 288) = v11;
    *v11 = v0;
    v11[1] = sub_1007B2744;
    return sub_1007B2024(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), 0, 0, 0);
  }
  else
  {
    v13 = swift_release();
    v14 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, __n128))(v0 + 256))(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 168), v13);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v15, (os_log_type_t)v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, (os_log_type_t)v16, "Failed to refresh activeUserState, returning", v17, 2u);
      swift_slowDealloc(v17, -1, -1);
    }
    v18 = *(void (**)(uint64_t, uint64_t))(v0 + 264);
    v19 = *(_QWORD *)(v0 + 208);
    v20 = *(_QWORD *)(v0 + 184);
    v21 = *(_QWORD *)(v0 + 168);
    v22 = *(void **)(v0 + 136);

    v18(v20, v21);
    v23 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v19, 1, 1, v23);
    v24 = v22;
    v26 = static MainActor.shared.getter(v25);
    v27 = (_QWORD *)swift_allocObject(&unk_1010DC5F0, 40, 7);
    v27[2] = v26;
    v27[3] = &protocol witness table for MainActor;
    v27[4] = v24;
    sub_100166D14(v19, (uint64_t)&unk_1011C8FD8, (uint64_t)v27);
    swift_release();
    v28 = *(_QWORD *)(v0 + 200);
    v30 = *(_QWORD *)(v0 + 184);
    v29 = *(_QWORD *)(v0 + 192);
    swift_task_dealloc(*(_QWORD *)(v0 + 208));
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1007B2744()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 288));
  return swift_task_switch(sub_1007B2790, *(_QWORD *)(v1 + 232), *(_QWORD *)(v1 + 240));
}

uint64_t sub_1007B2790()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_release(*(_QWORD *)(v0 + 224));
  v1 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  swift_task_dealloc(*(_QWORD *)(v0 + 208));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1007B27EC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  __n128 v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(void **)(v0 + 272);
  v2 = *(_QWORD *)(v0 + 280);
  v3 = swift_release();
  swift_willThrow(v3);
  swift_errorRelease(v2);

  v4 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0 + 256))(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 168));
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Failed to refresh activeUserState, returning", v7, 2u);
    swift_slowDealloc(v7, -1, -1);
  }
  v8 = *(void (**)(uint64_t, uint64_t))(v0 + 264);
  v9 = *(_QWORD *)(v0 + 208);
  v10 = *(_QWORD *)(v0 + 184);
  v11 = *(_QWORD *)(v0 + 168);
  v12 = *(void **)(v0 + 136);

  v8(v10, v11);
  v13 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v9, 1, 1, v13);
  v14 = v12;
  v16 = static MainActor.shared.getter(v15);
  v17 = (_QWORD *)swift_allocObject(&unk_1010DC5F0, 40, 7);
  v17[2] = v16;
  v17[3] = &protocol witness table for MainActor;
  v17[4] = v14;
  sub_100166D14(v9, (uint64_t)&unk_1011C8FD8, (uint64_t)v17);
  swift_release();
  v18 = *(_QWORD *)(v0 + 200);
  v20 = *(_QWORD *)(v0 + 184);
  v19 = *(_QWORD *)(v0 + 192);
  swift_task_dealloc(*(_QWORD *)(v0 + 208));
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_1007B2980()
{
  double result;

  result = 0.0;
  xmmword_1011C8C80 = xmmword_100EAFF60;
  *(_OWORD *)algn_1011C8C90 = xmmword_100EAFF60;
  return result;
}

void sub_1007B2998()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  char *v8;
  uint64_t v9;

  v1 = sub_100007E8C(&qword_1011C8D50);
  __chkstk_darwin(v1);
  v2 = type metadata accessor for SocialProfile(0);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for SharePlayTogetherSession.Participant(0);
  __chkstk_darwin(v3);
  v4 = type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704(v0, (uint64_t)v6, v7);
  v8 = (char *)sub_1007B2AD4 + 4 * byte_100ECFEE0[swift_getEnumCaseMultiPayload(v6, v4)];
  __asm { BR              X10 }
}

void sub_1007B2AD4()
{
  Swift::UInt *v0;
  Swift::UInt v1;

  v1 = *v0;
  Hasher._combine(_:)(2uLL);
  Hasher._combine(_:)(v1);
}

Swift::Int sub_1007B2C48()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  sub_1007B2998();
  return Hasher._finalize()();
}

Swift::Int sub_1007B2C88(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  sub_1007B2998();
  return Hasher._finalize()();
}

id sub_1007B2CC4(uint64_t a1)
{
  _BYTE *v1;
  char *v3;
  _QWORD *v4;
  _OWORD *v5;
  char *v6;
  uint64_t v7;
  objc_super v9;

  v3 = &v1[OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_preferredWidth];
  *(_QWORD *)v3 = 0;
  v3[8] = 1;
  v4 = &v1[OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_onDismiss];
  *v4 = 0;
  v4[1] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController____lazy_storage___collectionView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_dataSource] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_observables] = &_swiftEmptySetSingleton;
  v5 = &v1[OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_lastSeenSafeAreaLayoutFrame];
  *v5 = 0u;
  v5[1] = 0u;
  v6 = &v1[OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_lastPendingParticipantScrolledTo];
  v7 = type metadata accessor for SharePlayTogetherSession.Participant(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_contentSizeObserver] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_discoveryPreferenceObserver] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_sessionAssertion] = 0;
  v1[OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_viewDidAppearOnce] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_session] = a1;
  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for SharePlayTogetherSessionManagementViewController(0);
  return objc_msgSendSuper2(&v9, "initWithNibName:bundle:", 0, 0);
}

id sub_1007B2E0C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t ObjectType;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController____lazy_storage___collectionView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController____lazy_storage___collectionView);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController____lazy_storage___collectionView);
  }
  else
  {
    ObjectType = swift_getObjectType();
    v5 = sub_1007B2E78(v0, ObjectType);
    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

id sub_1007B2E78(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  _QWORD v10[6];

  v3 = swift_allocObject(&unk_1010DC268, 24, 7);
  swift_unknownObjectWeakInit(v3 + 16);
  v4 = swift_allocObject(&unk_1010DC380, 32, 7);
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = a2;
  v5 = objc_allocWithZone((Class)UICollectionViewCompositionalLayout);
  v10[4] = sub_1007C4A04;
  v10[5] = v4;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_1008E31AC;
  v10[3] = &unk_1010DC398;
  v6 = _Block_copy(v10);
  v7 = objc_msgSend(v5, "initWithSectionProvider:", v6, swift_retain().n128_f64[0]);
  _Block_release(v6);
  swift_release();
  swift_release();
  v8 = objc_msgSend(objc_allocWithZone((Class)UICollectionView), "initWithFrame:collectionViewLayout:", v7, 0.0, 0.0, 0.0, 0.0);

  return v8;
}

uint64_t sub_1007B2FB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *Strong;
  void *v15;
  id v16;
  id v17;
  unsigned int *v18;
  id v19;
  double v20;
  double v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  double v29;
  double v30;
  double v31;
  uint64_t result;
  uint64_t v33;
  _BYTE v34[24];

  v33 = a2;
  v6 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v34[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = type metadata accessor for UICollectionLayoutListConfiguration(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = &v34[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a3 += 16;
  swift_beginAccess(a3, v34, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a3);
  if (Strong)
  {
    v15 = Strong;
    v16 = objc_msgSend(Strong, "traitCollection");
    v17 = objc_msgSend(v16, "userInterfaceIdiom");

    v18 = (unsigned int *)&enum case for UICollectionLayoutListConfiguration.Appearance.insetGrouped(_:);
    if (v17 != (id)3)
      v18 = (unsigned int *)&enum case for UICollectionLayoutListConfiguration.Appearance.plain(_:);
    (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *v18, v6);
    UICollectionLayoutListConfiguration.init(appearance:)(v9);
    v19 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    UICollectionLayoutListConfiguration.backgroundColor.setter(v19);
    if (qword_10119C7E8 != -1)
      swift_once(&qword_10119C7E8, sub_1007B2980);
    v20 = *((double *)&xmmword_1011C8C80 + 1);
    if (qword_10119C7F0 != -1)
      swift_once(&qword_10119C7F0, sub_1007BE068);
    v21 = v20 + *(double *)&qword_10124D9E0;
    if (qword_10119C7F8 != -1)
      swift_once(&qword_10119C7F8, sub_1007BE088);
    v22 = v21 + *(double *)&qword_10124D9E8;
    v23 = swift_allocObject(&unk_1010DC268, 24, 7);
    swift_unknownObjectWeakInit(v23 + 16);
    v24 = swift_allocObject(&unk_1010DC3D0, 64, 7);
    *(_QWORD *)(v24 + 16) = v23;
    *(_QWORD *)(v24 + 24) = 0;
    *(double *)(v24 + 32) = v22;
    *(_QWORD *)(v24 + 40) = 0;
    *(_QWORD *)(v24 + 48) = 0;
    *(_QWORD *)(v24 + 56) = a4;
    UICollectionLayoutListConfiguration.itemSeparatorHandler.setter(sub_1007C4A30, v24);
    v25 = swift_allocObject(&unk_1010DC268, 24, 7);
    swift_unknownObjectWeakInit(v25 + 16);
    UICollectionLayoutListConfiguration.trailingSwipeActionsConfigurationProvider.setter(sub_1007C4A44, v25);
    sub_10004A07C(0, (unint64_t *)&unk_1011B5670, NSCollectionLayoutSection_ptr);
    v26 = (void *)static NSCollectionLayoutSection.list(using:layoutEnvironment:)(v13, v33);
    v27 = objc_msgSend(v15, "traitCollection");
    v28 = objc_msgSend(v27, "userInterfaceIdiom");

    if (v28 == (id)3)
    {
      objc_msgSend(v26, "contentInsets");
      sub_1007B8FD0();
      objc_msgSend(v26, "setContentInsets:", 0.0, v29, v30, v31, v33);
    }
    else
    {
      objc_msgSend(v26, "setContentInsets:", NSDirectionalEdgeInsetsZero.top, NSDirectionalEdgeInsetsZero.leading, NSDirectionalEdgeInsetsZero.bottom, NSDirectionalEdgeInsetsZero.trailing, v33);
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    return (uint64_t)v26;
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x20736920666C6573, 0xEB000000006C696ELL, "Music/SharePlayTogetherSessionManagementViewController.swift", 60, 2, 100, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_1007B3370@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t Strong;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  _QWORD v46[2];
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char v59[32];

  v8 = type metadata accessor for UIListSeparatorConfiguration.Visibility(0);
  v49 = *(_QWORD *)(v8 - 8);
  v50 = v8;
  __chkstk_darwin(v8);
  v47 = sub_100007E8C(&qword_1011C8E38);
  __chkstk_darwin(v47);
  v48 = (char *)v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C((uint64_t *)&unk_1011C8E40);
  __chkstk_darwin(v10);
  v46[1] = (char *)v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v51 = (char *)v46 - v13;
  __chkstk_darwin(v14);
  v57 = (char *)v46 - v15;
  v16 = type metadata accessor for SharePlayTogetherSession.Participant(0);
  v52 = *(_QWORD *)(v16 - 8);
  v53 = v16;
  __chkstk_darwin(v16);
  v46[0] = (char *)v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v54 = (char *)v46 - v19;
  v20 = sub_100007E8C((uint64_t *)&unk_1011C8E10);
  __chkstk_darwin(v20);
  v22 = (char *)v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v23);
  v26 = (char *)v46 - v25;
  v27 = type metadata accessor for UIListSeparatorConfiguration(0, v24);
  v28 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v30 = (char *)v46 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3 += 16;
  swift_beginAccess(a3, v59, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a3);
  v58 = v28;
  v32 = *(void (**)(char *, char *, uint64_t))(v28 + 16);
  if (Strong)
  {
    v33 = (char *)Strong;
    v55 = v27;
    v56 = v30;
    v32(v30, a2, v27);
    v34 = *(void **)&v33[OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_dataSource];
    if (!v34)
    {
      __break(1u);
      JUMPOUT(0x1007B3A6CLL);
    }
    v35 = v34;
    dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(a1);

    v36 = type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 48))(v26, 1, v36) != 1)
    {
      sub_10004A160((uint64_t)v26, (uint64_t)v22, (uint64_t *)&unk_1011C8E10);
      v41 = (char *)&loc_1007B3688 + dword_1007B3A6C[swift_getEnumCaseMultiPayload(v22, v36)];
      __asm { BR              X10 }
    }

    v37 = a4;
    v39 = v55;
    v38 = v56;
    v40 = v58;
    sub_10004FF60((uint64_t)v26, (uint64_t *)&unk_1011C8E10);
    v32 = *(void (**)(char *, char *, uint64_t))(v40 + 32);
    v42 = v37;
    v43 = v38;
    v44 = v39;
  }
  else
  {
    v42 = a4;
    v43 = a2;
    v44 = v27;
  }
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v32)(v42, v43, v44);
}

uint64_t sub_1007B3A80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t result;
  char *v21;
  void *v22;
  id v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t (*v26)(void);
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSString v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  Class isa;
  id v40;
  Class v41;
  _QWORD aBlock[7];
  _BYTE v43[24];

  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C((uint64_t *)&unk_1011C8E10);
  __chkstk_darwin(v10);
  v12 = (char *)aBlock - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for SharePlayTogetherSession.Participant(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  __chkstk_darwin(v13);
  v16 = (char *)aBlock - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)aBlock - v18;
  a2 += 16;
  swift_beginAccess(a2, v43, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a2);
  if (!result)
    goto LABEL_12;
  v21 = (char *)result;
  v22 = *(void **)(result + OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_dataSource);
  if (v22)
  {
    v23 = v22;
    dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(a1);

    v24 = type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v12, 1, v24) == 1)
    {

      sub_10004FF60((uint64_t)v12, (uint64_t *)&unk_1011C8E10);
    }
    else if (swift_getEnumCaseMultiPayload(v12, v24) == 1)
    {
      sub_10005B6C0((uint64_t)v12, (uint64_t)v19, type metadata accessor for SharePlayTogetherSession.Participant);
      v25 = *(_QWORD **)&v21[OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_session];
      v26 = *(uint64_t (**)(void))((swift_isaMask & *v25) + 0x118);
      v27 = v25;
      LOBYTE(v26) = v26();

      if ((v26 & 1) != 0 && (v19[32] & 1) == 0 && v19[33] == 1)
      {
        v28 = String.LocalizationValue.init(stringLiteral:)(0x65766F6D6552, 0xE600000000000000);
        static Locale.current.getter(v28);
        String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, 0, v6, 0, 0, 256);
        v29 = swift_allocObject(&unk_1010DC268, 24, 7);
        swift_unknownObjectWeakInit(v29 + 16);
        sub_10005B704((uint64_t)v19, (uint64_t)v16, type metadata accessor for SharePlayTogetherSession.Participant);
        v30 = *(unsigned __int8 *)(v14 + 80);
        v31 = (v30 + 24) & ~v30;
        v32 = swift_allocObject(&unk_1010DC3F8, v31 + v15, v30 | 7);
        *(_QWORD *)(v32 + 16) = v29;
        sub_10005B6C0((uint64_t)v16, v32 + v31, type metadata accessor for SharePlayTogetherSession.Participant);
        swift_retain();
        v33 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        aBlock[4] = sub_1007C4B04;
        aBlock[5] = v32;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10014279C;
        aBlock[3] = &unk_1010DC410;
        v34 = _Block_copy(aBlock);
        v35 = objc_msgSend((id)objc_opt_self(UIContextualAction), "contextualActionWithStyle:title:handler:", 1, v33, v34);

        _Block_release(v34);
        swift_release();
        swift_release();
        v36 = sub_100007E8C((uint64_t *)&unk_1011A1470);
        v37 = swift_allocObject(v36, 40, 7);
        *(_OWORD *)(v37 + 16) = xmmword_100EA7A90;
        *(_QWORD *)(v37 + 32) = v35;
        aBlock[0] = v37;
        specialized Array._endMutation()(v37);
        sub_10004A07C(0, &qword_1011B8DC0, UIContextualAction_ptr);
        v38 = v35;
        isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        v40 = objc_msgSend((id)objc_opt_self(UISwipeActionsConfiguration), "configurationWithActions:", isa);

        sub_10005B748((uint64_t)v19, type metadata accessor for SharePlayTogetherSession.Participant);
        return (uint64_t)v40;
      }
      sub_10005B748((uint64_t)v19, type metadata accessor for SharePlayTogetherSession.Participant);

    }
    else
    {

      sub_10005B748((uint64_t)v12, type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier);
    }
LABEL_12:
    sub_10004A07C(0, &qword_1011B8DC0, UIContextualAction_ptr);
    v41 = Array._bridgeToObjectiveC()().super.isa;
    v40 = objc_msgSend((id)objc_opt_self(UISwipeActionsConfiguration), "configurationWithActions:", v41);

    return (uint64_t)v40;
  }
  __break(1u);
  return result;
}

uint64_t sub_1007B3F80(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t Strong;
  void *v10;
  _QWORD *v11;
  _BYTE v13[24];

  v8 = a5 + 16;
  swift_beginAccess(a5 + 16, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v8);
  if (Strong)
  {
    v10 = (void *)Strong;
    v11 = *(id *)(Strong + OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_session);

    (*(void (**)(uint64_t))((swift_isaMask & *v11) + 0x338))(a6);
  }
  return a3(1);
}

id sub_1007B4030()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  objc_class *v25;
  _QWORD *v26;
  uint64_t (*v27)(void);
  _QWORD *v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  _QWORD *v42;
  void (*v43)(char *, char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, char *, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  void *v68;
  id result;
  void *v70;
  id v71;
  id v72;
  uint64_t KeyPath;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  void (*v79)(char *, uint64_t, __n128);
  uint64_t v80;
  char *v81;
  char *v82;
  char *v83;
  char *v84;
  uint64_t v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  char *v97;
  char *v98;
  char *v99;
  _QWORD *v100;
  uint64_t v101;
  _QWORD v102[5];
  objc_super v103;

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011C8E60);
  v96 = *(_QWORD *)(v2 - 8);
  v3 = *(_QWORD *)(v96 + 64);
  v89 = v2;
  v90 = v3;
  __chkstk_darwin(v2);
  v99 = (char *)&v80 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v92 = (char *)&v80 - v6;
  v91 = sub_100007E8C(&qword_1011C8E68);
  v101 = *(_QWORD *)(v91 - 8);
  v88 = *(_QWORD *)(v101 + 64);
  __chkstk_darwin(v91);
  v95 = (char *)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v80 - v9;
  v93 = sub_100007E8C((uint64_t *)&unk_1011C8E70);
  v100 = *(_QWORD **)(v93 - 8);
  v87 = v100[8];
  __chkstk_darwin(v93);
  v98 = (char *)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v97 = (char *)&v80 - v13;
  __chkstk_darwin(v14);
  v94 = (char *)&v80 - v15;
  __chkstk_darwin(v16);
  v18 = (char *)&v80 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v80 - v20;
  __chkstk_darwin(v22);
  v24 = (char *)&v80 - v23;
  v25 = (objc_class *)type metadata accessor for SharePlayTogetherSessionManagementViewController(0);
  v103.receiver = v0;
  v103.super_class = v25;
  objc_msgSendSuper2(&v103, "viewDidLoad");
  sub_1007B6BF0();
  v26 = *(_QWORD **)&v0[OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_session];
  v27 = *(uint64_t (**)(void))((swift_isaMask & *v26) + 0x368);
  v28 = v26;
  v29 = v27();

  v30 = *(void **)&v1[OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_sessionAssertion];
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_sessionAssertion] = v29;

  v31 = sub_1007B2E0C();
  objc_msgSend(v31, "setDelegate:", v1);

  v32 = swift_allocObject(&unk_1010DC268, 24, 7);
  swift_unknownObjectWeakInit(v32 + 16);
  v33 = sub_10004A07C(0, (unint64_t *)&unk_1011A9B70, UICollectionViewCell_ptr);
  v34 = type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier(0);
  UICollectionView.CellRegistration.init(handler:)(sub_1007C4B6C, v32, v33, v34);
  v35 = swift_allocObject(&unk_1010DC268, 24, 7);
  swift_unknownObjectWeakInit(v35 + 16);
  UICollectionView.CellRegistration.init(handler:)(sub_1007C4B74, v35, v33, &type metadata for Int);
  v36 = swift_allocObject(&unk_1010DC268, 24, 7);
  swift_unknownObjectWeakInit(v36 + 16);
  v37 = type metadata accessor for SharePlayTogetherSession.Participant(0);
  UICollectionView.CellRegistration.init(handler:)(sub_1007C4B7C, v36, v33, v37);
  v38 = swift_allocObject(&unk_1010DC268, 24, 7);
  swift_unknownObjectWeakInit(v38 + 16);
  v39 = v21;
  UICollectionView.CellRegistration.init(handler:)(sub_1007C4B84, v38, v33, v34);
  v40 = swift_allocObject(&unk_1010DC268, 24, 7);
  swift_unknownObjectWeakInit(v40 + 16);
  v41 = v18;
  UICollectionView.CellRegistration.init(handler:)(sub_1007C4B8C, v40, v33, v34);
  v86 = sub_1007B2E0C();
  v85 = swift_allocObject(&unk_1010DC268, 24, 7);
  swift_unknownObjectWeakInit(v85 + 16);
  v42 = v100;
  v43 = (void (*)(char *, char *, uint64_t))v100[2];
  v83 = v24;
  v44 = v93;
  v43(v94, v24, v93);
  v45 = v101;
  v46 = *(void (**)(char *, char *, uint64_t))(v101 + 16);
  v84 = v10;
  v47 = v91;
  v46(v95, v10, v91);
  v48 = v96;
  v49 = v89;
  (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v99, v92, v89);
  v81 = v39;
  v43(v97, v39, v44);
  v82 = v41;
  v43(v98, v41, v44);
  v50 = *((unsigned __int8 *)v42 + 80);
  v51 = (v50 + 24) & ~v50;
  v52 = *(unsigned __int8 *)(v45 + 80);
  v53 = (v87 + v52 + v51) & ~v52;
  v54 = *(unsigned __int8 *)(v48 + 80);
  v55 = (v88 + v54 + v53) & ~v54;
  v56 = (v90 + v50 + v55) & ~v50;
  v57 = (v87 + v50 + v56) & ~v50;
  v58 = v47;
  v59 = swift_allocObject(&unk_1010DC448, v57 + v87, v50 | v52 | v54 | 7);
  *(_QWORD *)(v59 + 16) = v85;
  v60 = v59 + v51;
  v61 = v49;
  v62 = (void (*)(uint64_t, char *, uint64_t))v100[4];
  v63 = v93;
  v62(v60, v94, v93);
  v64 = v59 + v53;
  v65 = v96;
  (*(void (**)(uint64_t, char *, uint64_t))(v101 + 32))(v64, v95, v58);
  (*(void (**)(uint64_t, char *, uint64_t))(v65 + 32))(v59 + v55, v99, v61);
  v62(v59 + v56, v97, v63);
  v62(v59 + v57, v98, v63);
  v66 = objc_allocWithZone((Class)sub_100007E8C(&qword_1011C8E80));
  v67 = UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)(v86, sub_1007C4CD8, v59);
  v68 = *(void **)&v1[OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_dataSource];
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_dataSource] = v67;

  result = objc_msgSend(v1, "view");
  if (result)
  {
    v70 = result;
    v71 = sub_1007B2E0C();
    objc_msgSend(v70, "addSubview:", v71);

    type metadata accessor for Whitetail.Binding();
    v72 = sub_1007B2E0C();
    KeyPath = swift_getKeyPath(&unk_100ED0028);
    v102[3] = sub_100007E8C((uint64_t *)&unk_1011C8E88);
    v102[4] = &protocol witness table for KeyValueObservationTrigger<A, B>;
    v102[0] = v72;
    v102[1] = KeyPath;
    v74 = swift_allocObject(&unk_1010DC268, 24, 7);
    swift_unknownObjectWeakInit(v74 + 16);
    *(_QWORD *)&v1[OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_contentSizeObserver] = Whitetail.Binding.__allocating_init(_:needsInitialConfiguration:configurationBlock:)(v102, 1, (uint64_t)sub_1007C4E14, v74);
    swift_release();
    v75 = (void *)MRGroupSessionNearbyContactDiscoveryPreferenceDidChangeNotification;
    v76 = swift_allocObject(&unk_1010DC268, 24, 7);
    swift_unknownObjectWeakInit(v76 + 16);
    v77 = type metadata accessor for NotificationObserver();
    swift_allocObject(v77, 64, 7);
    *(_QWORD *)&v1[OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_discoveryPreferenceObserver] = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v75, 0, 1, 1, (uint64_t)sub_1007C493C, v76);
    v78 = swift_release();
    v79 = (void (*)(char *, uint64_t, __n128))v100[1];
    v79(v82, v63, v78);
    ((void (*)(char *, uint64_t))v79)(v81, v63);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v92, v61);
    (*(void (**)(char *, uint64_t))(v101 + 8))(v84, v91);
    return (id)((uint64_t (*)(char *, uint64_t))v79)(v83, v63);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1007B47D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *Strong;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[24];

  v5 = sub_100007E8C(&qword_1011C8F38);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011C8F40);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  a4 += 16;
  swift_beginAccess(a4, v30, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a4);
  if (Strong)
  {
    v14 = Strong;
    v15 = objc_msgSend(Strong, "traitCollection");
    v16 = objc_msgSend(v15, "userInterfaceIdiom");

    if (v16 == (id)3)
    {
      v17 = swift_allocObject(&unk_1010DC268, 24, 7);
      v18 = swift_unknownObjectWeakInit(v17 + 16);
      __chkstk_darwin(v18);
      v27[-4] = v14;
      v27[-3] = sub_1007C5150;
      v27[-2] = v17;
      v19 = sub_1007C5184();
      swift_retain();
      v20 = UIHostingConfiguration<>.init(content:)(sub_1007C5178, &v27[-6], &type metadata for SharePlayTogetherSessionManagementViewController.CarPlayHeaderView, v19);
      v21 = static Edge.Set.horizontal.getter(v20);
      v28 = v9;
      v29 = sub_100049F28(&qword_1011C8F68, &qword_1011C8F40, (uint64_t)&protocol conformance descriptor for UIHostingConfiguration<A, B>);
      sub_100049F68(v27);
      UIHostingConfiguration.margins(_:_:)(v21, v9, 0.0);
      v22.n128_f64[0] = (*(double (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      swift_release_n(v17, 2, v22);
    }
    else
    {
      v23 = sub_100007E8C(&qword_1011C8F48);
      v24 = sub_100049F28(&qword_1011C8F50, &qword_1011C8F48, (uint64_t)&protocol conformance descriptor for VStack<A>);
      v25 = UIHostingConfiguration<>.init(content:)(sub_1007BA188, 0, v23, v24);
      v26 = static Edge.Set.all.getter(v25);
      v28 = v5;
      v29 = sub_100049F28(&qword_1011C8F58, &qword_1011C8F38, (uint64_t)&protocol conformance descriptor for UIHostingConfiguration<A, B>);
      sub_100049F68(v27);
      UIHostingConfiguration.margins(_:_:)(v26, v5, 0.0);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    UICollectionViewCell.contentConfiguration.setter(v27);

  }
}

uint64_t sub_1007B4A98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;

  v4[17] = a4;
  v5 = type metadata accessor for Locale(0);
  v4[18] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for String.LocalizationValue(0);
  v4[19] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MainActor(0);
  v4[20] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  return swift_task_switch(sub_1007B4B44, v9, v10);
}

uint64_t sub_1007B4B44()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  void (*v3)(void);
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  __int128 v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  char *v16;
  id v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 136);
  swift_release();
  v2 = *(_QWORD **)(v1 + OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_session);
  v3 = *(void (**)(void))((swift_isaMask & *v2) + 0x258);
  v4 = v2;
  v3();
  v5 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 112);
  v7 = *(void **)(v0 + 120);

  sub_100065228(v0 + 96, v0 + 56, &qword_1011C8F00);
  if (*(_QWORD *)(v0 + 80))
  {
    v8 = *(_QWORD *)(v0 + 144);
    v9 = *(_QWORD *)(v0 + 152);
    v10 = *(void **)(v0 + 136);
    v11 = *(_OWORD *)(v0 + 72);
    *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 56);
    *(_OWORD *)(v0 + 32) = v11;
    *(_QWORD *)(v0 + 48) = *(_QWORD *)(v0 + 88);
    sub_100079DE4(v5, v6);
    v12 = v7;
    v13 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000014, 0x8000000100E454E0);
    static Locale.current.getter(v13);
    String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, 0, v8, 0, 0, 256);
    v14 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000047, 0x8000000100E45500);
    static Locale.current.getter(v14);
    String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, 0, v8, 0, 0, 256);
    v15 = objc_allocWithZone((Class)type metadata accessor for QRCodeOverlayViewController());
    v16 = QRCodeOverlayViewController.init(qrCode:title:subtitle:)((_QWORD *)(v0 + 16));
    v17 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v16);

    objc_msgSend(v17, "setModalPresentationStyle:", 5);
    objc_msgSend(v10, "presentViewController:animated:completion:", v17, 0, 0);

    sub_1007C5020(v0 + 96);
  }
  v18 = *(_QWORD *)(v0 + 144);
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v18);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1007B4D74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *Strong;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  _QWORD v20[5];
  _BYTE v21[24];

  v5 = sub_100007E8C(&qword_1011C8F20);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  a4 += 16;
  swift_beginAccess(a4, v21, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a4);
  if (Strong)
  {
    v10 = Strong;
    v11 = objc_msgSend(Strong, "traitCollection");
    v12 = objc_msgSend(v11, "userInterfaceIdiom");

    v13 = swift_allocObject(&unk_1010DC268, 24, 7);
    v14 = swift_unknownObjectWeakInit(v13 + 16);
    __chkstk_darwin(v14);
    v20[-4] = v10;
    LOBYTE(v20[-3]) = v12 == (id)3;
    v20[-2] = sub_1007C50A4;
    v20[-1] = v13;
    v15 = type metadata accessor for SharePlayTogetherSessionManagementViewController.StatusHeaderView(0);
    v16 = sub_100048748(&qword_1011C8F28, type metadata accessor for SharePlayTogetherSessionManagementViewController.StatusHeaderView, (uint64_t)&unk_100ED021C);
    swift_retain();
    v17 = UIHostingConfiguration<>.init(content:)(sub_1007C50AC, &v20[-6], v15, v16);
    v18 = static Edge.Set.all.getter(v17);
    v20[3] = v5;
    v20[4] = sub_100049F28(&qword_1011C8F30, &qword_1011C8F20, (uint64_t)&protocol conformance descriptor for UIHostingConfiguration<A, B>);
    sub_100049F68(v20);
    UIHostingConfiguration.margins(_:_:)(v18, v5, 0.0);
    v19.n128_f64[0] = (*(double (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_release_n(v13, 2, v19);
    UICollectionViewCell.contentConfiguration.setter(v20);

  }
}

void sub_1007B4F74(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t Strong;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  NSString v14;
  NSString v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  NSString v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  NSString v25;
  id v26;
  _BYTE v27[16];
  _QWORD aBlock[7];
  char v29[24];

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = &v27[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v7 = &v27[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a1 += 16;
  swift_beginAccess(a1, v29, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v9 = (char *)Strong;
    v10 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000029, 0x8000000100E45550);
    static Locale.current.getter(v10);
    String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, 0, 0, 256);
    if (*(_BYTE *)(*(_QWORD *)&v9[OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_session]
                  + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_isHost) == 1)
    {
      v11 = 0x8000000100E455D0;
      v12 = 0xD00000000000001CLL;
    }
    else
    {
      v12 = 0xD000000000000043;
      v11 = 0x8000000100E45580;
    }
    v13 = String.LocalizationValue.init(stringLiteral:)(v12, v11);
    static Locale.current.getter(v13);
    String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, 0, 0, 256);
    v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v16 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v14, v15, 1);

    v17 = String.LocalizationValue.init(stringLiteral:)(6581829, 0xE300000000000000);
    static Locale.current.getter(v17);
    String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, 0, 0, 256);
    v18 = swift_allocObject(&unk_1010DC510, 24, 7);
    *(_QWORD *)(v18 + 16) = v9;
    v19 = v9;
    v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    aBlock[4] = sub_1007C50F4;
    aBlock[5] = v18;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100223938;
    aBlock[3] = &unk_1010DC528;
    v21 = _Block_copy(aBlock);
    swift_release();
    v22 = (void *)objc_opt_self(UIAlertAction);
    v23 = objc_msgSend(v22, "actionWithTitle:style:handler:", v20, 0, v21);
    _Block_release(v21);

    objc_msgSend(v16, "addAction:", v23);
    v24 = String.LocalizationValue.init(stringLiteral:)(0x6C65636E6143, 0xE600000000000000);
    static Locale.current.getter(v24);
    String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, 0, 0, 256);
    v25 = String._bridgeToObjectiveC()();
    v26 = objc_msgSend(v22, "actionWithTitle:style:handler:", v25, 1, 0, swift_bridgeObjectRelease().n128_f64[0]);

    objc_msgSend(v16, "addAction:", v26);
    objc_msgSend(v19, "presentViewController:animated:completion:", v16, 1, 0);

  }
}

void sub_1007B5380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *Strong;
  void *v11;
  id v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[5];
  _BYTE v20[24];

  v6 = sub_100007E8C(&qword_1011C8F08);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a4 += 16;
  swift_beginAccess(a4, v20, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a4);
  if (Strong)
  {
    v11 = Strong;
    v12 = objc_msgSend(Strong, "traitCollection");
    objc_msgSend(v12, "userInterfaceIdiom");

    __chkstk_darwin(v13);
    v19[-4] = v11;
    v19[-3] = a3;
    LOBYTE(v19[-2]) = v14;
    v15 = type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView(0);
    v16 = sub_100048748(&qword_1011C8F10, type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView, (uint64_t)&unk_100ED026C);
    v17 = UIHostingConfiguration<>.init(content:)(sub_1007C5084, &v19[-6], v15, v16);
    v18 = static Edge.Set.all.getter(v17);
    v19[3] = v6;
    v19[4] = sub_100049F28(&qword_1011C8F18, &qword_1011C8F08, (uint64_t)&protocol conformance descriptor for UIHostingConfiguration<A, B>);
    sub_100049F68(v19);
    UIHostingConfiguration.margins(_:_:)(v18, v6, 0.0);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    UICollectionViewCell.contentConfiguration.setter(v19);

  }
}

void sub_1007B553C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  _QWORD v12[6];
  _QWORD v13[5];
  _BYTE v14[24];

  v4 = a4 + 16;
  swift_beginAccess(a4 + 16, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = swift_allocObject(&unk_1010DC268, 24, 7);
    v8 = swift_unknownObjectWeakInit(v7 + 16);
    __chkstk_darwin(v8);
    v12[2] = v6;
    v12[3] = sub_1007C4F60;
    v12[4] = v7;
    v13[3] = sub_100007E8C(&qword_1011C8ED8);
    v13[4] = sub_100049F28(&qword_1011C8EE0, &qword_1011C8ED8, (uint64_t)&protocol conformance descriptor for UIHostingConfiguration<A, B>);
    sub_100049F68(v13);
    v9 = type metadata accessor for SharePlayTogetherSessionManagementViewController.QRCodeCell(0);
    v10 = sub_100048748(&qword_1011C8EE8, type metadata accessor for SharePlayTogetherSessionManagementViewController.QRCodeCell, (uint64_t)&unk_100ED02BC);
    swift_retain();
    UIHostingConfiguration<>.init(content:)(sub_1007C4F88, v12, v9, v10);
    swift_release_n(v7, 2, v11);
    UICollectionViewCell.contentConfiguration.setter(v13);

  }
}

void sub_1007B569C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t Strong;
  void *v10;
  uint64_t v11;
  id v12;
  __n128 v13;
  uint64_t v14;
  _QWORD *v15;
  _BYTE v17[24];

  v6 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v6);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a1 += 16;
  swift_beginAccess(a1, v17, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v10 = (void *)Strong;
    v11 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v8, 1, 1, v11);
    type metadata accessor for MainActor(0);
    v12 = v10;
    v14 = static MainActor.shared.getter(v13);
    v15 = (_QWORD *)swift_allocObject(a2, 40, 7);
    v15[2] = v14;
    v15[3] = &protocol witness table for MainActor;
    v15[4] = v12;
    sub_100166D14((uint64_t)v8, a3, (uint64_t)v15);
    swift_release();

  }
}

uint64_t sub_1007B57B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;

  v4[17] = a4;
  v5 = type metadata accessor for Locale(0);
  v4[18] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for String.LocalizationValue(0);
  v4[19] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MainActor(0);
  v4[20] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  return swift_task_switch(sub_1007B5860, v9, v10);
}

uint64_t sub_1007B5860()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  void (*v3)(void);
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  __int128 v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  char *v16;
  uint64_t v17;

  v1 = *(_QWORD *)(v0 + 136);
  swift_release();
  v2 = *(_QWORD **)(v1 + OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_session);
  v3 = *(void (**)(void))((swift_isaMask & *v2) + 0x258);
  v4 = v2;
  v3();
  v5 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 112);
  v7 = *(void **)(v0 + 120);

  sub_100065228(v0 + 96, v0 + 56, &qword_1011C8F00);
  if (*(_QWORD *)(v0 + 80))
  {
    v8 = *(_QWORD *)(v0 + 144);
    v9 = *(_QWORD *)(v0 + 152);
    v10 = *(void **)(v0 + 136);
    v11 = *(_OWORD *)(v0 + 72);
    *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 56);
    *(_OWORD *)(v0 + 32) = v11;
    *(_QWORD *)(v0 + 48) = *(_QWORD *)(v0 + 88);
    sub_100079DE4(v5, v6);
    v12 = v7;
    v13 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000014, 0x8000000100E454E0);
    static Locale.current.getter(v13);
    String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, 0, v8, 0, 0, 256);
    v14 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000047, 0x8000000100E45500);
    static Locale.current.getter(v14);
    String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, 0, v8, 0, 0, 256);
    v15 = objc_allocWithZone((Class)type metadata accessor for QRCodeOverlayViewController());
    v16 = QRCodeOverlayViewController.init(qrCode:title:subtitle:)((_QWORD *)(v0 + 16));
    objc_msgSend(v16, "setModalPresentationStyle:", 5);
    objc_msgSend(v10, "presentViewController:animated:completion:", v16, 0, 0);

    sub_1007C5020(v0 + 96);
  }
  v17 = *(_QWORD *)(v0 + 144);
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v17);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1007B5A68(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t Strong;
  void *v11;
  id v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[5];
  _BYTE v18[24];

  v6 = type metadata accessor for UICellConfigurationState(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a4 += 16;
  swift_beginAccess(a4, v18, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a4);
  if (Strong)
  {
    v11 = (void *)Strong;
    v12 = objc_msgSend(a1, "_bridgedConfigurationState");
    static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)();

    LOBYTE(v12) = UICellConfigurationState.isFocused.getter(v13);
    v14 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    __chkstk_darwin(v14);
    LOBYTE(v17[-2]) = v12 & 1;
    v17[3] = sub_100007E8C(&qword_1011C8E98);
    v17[4] = sub_100049F28(&qword_1011C8EA0, &qword_1011C8E98, (uint64_t)&protocol conformance descriptor for UIHostingConfiguration<A, B>);
    sub_100049F68(v17);
    v15 = sub_100007E8C(&qword_1011C8EA8);
    v16 = sub_1007C74E0(&qword_1011C8EB0, &qword_1011C8EA8, (void (*)(void))sub_1007C4E64);
    UIHostingConfiguration<>.init(content:)(sub_1007C8B68, &v17[-4], v15, v16);
    UICollectionViewCell.contentConfiguration.setter(v17);

  }
}

id sub_1007B5C08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t Strong;
  id v25;
  id v26;
  id v27;
  char *v28;
  _QWORD v30[2];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE v49[32];

  v35 = a8;
  v36 = a7;
  v32 = a6;
  v33 = a5;
  v48 = a3;
  v43 = a2;
  v44 = a1;
  v10 = type metadata accessor for UICellConfigurationState(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v41 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C((uint64_t *)&unk_1011C8E40);
  __chkstk_darwin(v13);
  v31 = type metadata accessor for SharePlayTogetherSession.Participant(0);
  __chkstk_darwin(v31);
  v34 = (char *)v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(&qword_1011AD7F0);
  __chkstk_darwin(v15);
  v45 = (char *)v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C((uint64_t *)&unk_1011C8E10);
  __chkstk_darwin(v17);
  v18 = type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier(0);
  __chkstk_darwin(v18);
  v20 = (char *)v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for UIBackgroundConfiguration(0);
  v46 = *(_QWORD *)(v21 - 8);
  v47 = v21;
  __chkstk_darwin(v21);
  v23 = (char *)v30 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  a4 += 16;
  swift_beginAccess(a4, v49, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a4);
  if (Strong)
  {
    v38 = Strong;
    v39 = v11;
    v40 = v10;
    v30[1] = a9;
    static UIBackgroundConfiguration.clear()(Strong);
    v25 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
    v26 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
    v27 = objc_msgSend(v26, "colorWithAlphaComponent:", 0.1);

    objc_msgSend(v25, "setBackgroundColor:", v27);
    objc_msgSend(v25, "_setDrawsAsBackdropOverlayWithBlendMode:", 1);
    v37 = v25;
    v42 = v23;
    UIBackgroundConfiguration.customView.setter(v25);
    sub_10005B704(v48, (uint64_t)v20, type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier);
    v28 = (char *)&loc_1007B5EF4 + *((int *)qword_1007B6388 + swift_getEnumCaseMultiPayload(v20, v18));
    __asm { BR              X10 }
  }
  return objc_msgSend(objc_allocWithZone((Class)UICollectionViewCell), "init");
}

void sub_1007B639C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t Strong;
  void *v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  id v34;
  char *v35;
  id v36;
  _QWORD v37[2];
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[5];
  char v41[24];

  v39 = a3;
  v6 = sub_100007E8C(&qword_1011AD7F0);
  __chkstk_darwin(v6);
  v8 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)v37 - v10;
  __chkstk_darwin(v12);
  v14 = (char *)v37 - v13;
  v15 = type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier(0);
  __chkstk_darwin(v15);
  v17 = (char *)v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)v37 - v19;
  a4 += 16;
  swift_beginAccess(a4, v41, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a4);
  if (Strong)
  {
    v22 = (void *)Strong;
    swift_storeEnumTagMultiPayload(v20, v15, 3);
    sub_1007C38DC(a2, (uint64_t)v20);
    v24 = v23;
    v25 = sub_10005B748((uint64_t)v20, type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier);
    if ((v24 & 1) == 0)
    {
      static UIBackgroundConfiguration.listGroupedCell()(v25);
      v26 = type metadata accessor for UIBackgroundConfiguration(0);
      v38 = *(_QWORD *)(v26 - 8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v14, 0, 1, v26);
      UICollectionViewCell.backgroundConfiguration.setter(v14);
      sub_10005B704(a2, (uint64_t)v17, type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier);
      if (swift_getEnumCaseMultiPayload(v17, v15) == 2)
      {
        v28 = UICellConfigurationState.isFocused.getter(v27);
        v37[1] = v37;
        __chkstk_darwin(v28);
        LOBYTE(v37[-2]) = v29 & 1;
        v40[3] = sub_100007E8C(&qword_1011C8E98);
        v40[4] = sub_100049F28(&qword_1011C8EA0, &qword_1011C8E98, (uint64_t)&protocol conformance descriptor for UIHostingConfiguration<A, B>);
        sub_100049F68(v40);
        v30 = sub_100007E8C(&qword_1011C8EA8);
        v31 = sub_1007C74E0(&qword_1011C8EB0, &qword_1011C8EA8, (void (*)(void))sub_1007C4E64);
        UIHostingConfiguration<>.init(content:)(sub_1007C4E5C, &v37[-4], v30, v31);
        UICollectionViewCell.contentConfiguration.setter(v40);
      }
      else
      {
        sub_10005B748((uint64_t)v17, type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier);
      }
      if ((UICellConfigurationState.isFocused.getter(v32) & 1) != 0)
      {
        UICollectionViewCell.backgroundConfiguration.getter();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v11, 1, v26))
        {
          sub_10004A160((uint64_t)v11, (uint64_t)v14, &qword_1011AD7F0);
          UICollectionViewCell.backgroundConfiguration.setter(v14);

          v33 = (uint64_t)v11;
LABEL_11:
          sub_10004FF60(v33, &qword_1011AD7F0);
          return;
        }
        v34 = objc_msgSend((id)objc_opt_self(UIColor), "_carSystemFocusColor");
        UIBackgroundConfiguration.backgroundColor.setter(v34);
        v35 = v11;
      }
      else
      {
        UICollectionViewCell.backgroundConfiguration.getter();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v8, 1, v26))
        {
          sub_10004A160((uint64_t)v8, (uint64_t)v14, &qword_1011AD7F0);
          UICollectionViewCell.backgroundConfiguration.setter(v14);

          v33 = (uint64_t)v8;
          goto LABEL_11;
        }
        v36 = objc_msgSend((id)objc_opt_self(UIColor), "tableCellPlainBackgroundColor");
        UIBackgroundConfiguration.backgroundColor.setter(v36);
        v35 = v8;
      }
      UICollectionViewCell.backgroundConfiguration.setter(v35);
    }

  }
}

uint64_t sub_1007B6780(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t), uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t result;
  char *v24;
  id v25;
  id v26;
  void (*v27)(char *, char *, uint64_t);
  void *v28;
  id v29;
  char *v30;
  int v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char v44[24];

  v41 = a2;
  v9 = sub_100007E8C((uint64_t *)&unk_1011C8E10);
  __chkstk_darwin(v9);
  v43 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier(0);
  v11 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin(v42);
  v40 = (uint64_t)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  __chkstk_darwin(v13);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for IndexPath(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v37 - v21;
  a3 += 16;
  swift_beginAccess(a3, v44, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a3);
  if (result)
  {
    v24 = (char *)result;
    v39 = a5;
    v37 = a4;
    v25 = sub_1007B2E0C();
    v38 = a1;
    v26 = objc_msgSend(v25, "indexPathForCell:", a1);

    if (v26)
    {
      static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v26);

      v27 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
      v27(v15, v19, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v16);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) != 1)
      {
        result = ((uint64_t (*)(char *, char *, uint64_t))v27)(v22, v15, v16);
        v28 = *(void **)&v24[OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_dataSource];
        if (!v28)
        {
          __break(1u);
          return result;
        }
        v29 = v28;
        v30 = v43;
        dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(v22);

        v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v30, 1, v42);
        v32 = v38;
        if (v31 != 1)
        {
          v35 = (uint64_t)v30;
          v36 = v40;
          sub_10005B6C0(v35, v40, type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier);
          v37(v32, v36, v41);

          sub_10005B748(v36, type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier);
          return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v22, v16);
        }
        (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);

        v33 = (uint64_t *)&unk_1011C8E10;
        v34 = (uint64_t)v30;
        return sub_10004FF60(v34, v33);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, 1, 1, v16);
    }

    v33 = (uint64_t *)&unk_1011A3D50;
    v34 = (uint64_t)v15;
    return sub_10004FF60(v34, v33);
  }
  return result;
}

void sub_1007B6A98(uint64_t a1)
{
  uint64_t v1;
  char *Strong;
  void *v3;
  char *v4;
  id v5;
  double v6;
  double v7;
  double v8;
  char *v9;
  double v10;
  char v11[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v11, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    if ((Strong[OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_preferredWidth + 8] & 1) != 0)
    {
      v4 = Strong;
      v5 = sub_1007B2E0C();
      objc_msgSend(v5, "contentSize");
      v8 = v7;
    }
    else
    {
      v8 = *(double *)&Strong[OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_preferredWidth];
      v9 = Strong;
      v5 = sub_1007B2E0C();
      objc_msgSend(v5, "contentSize");
    }
    v10 = v6;

    objc_msgSend(v3, "setPreferredContentSize:", v8, v10);
  }
}

void sub_1007B6B68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_1007B83B0(0);

  }
}

double sub_1007B6BF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  void *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  __n128 v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t (*)(uint64_t), uint64_t, __n128);
  _QWORD *v45;
  __n128 v46;
  _QWORD *v47;
  uint64_t (*v48)(void);
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __n128 v72;
  _QWORD *v73;
  __n128 v74;
  double result;
  void *v76;
  void (*v77)(char *, uint64_t, uint64_t);
  uint64_t v78;
  unint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  char *v90;
  id v91[3];
  id v92;
  char v93[32];

  v1 = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A21E0);
  v81 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v80 = (char *)&v77 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C((uint64_t *)&unk_1011A8ED0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v82 = (char *)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011C8E50);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011A08F0);
  __chkstk_darwin(v11);
  v90 = (char *)&v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C((uint64_t *)&unk_1011A23C0);
  v14 = *(_QWORD **)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = v8;
  v88 = v7;
  v85 = v4;
  v86 = v10;
  v83 = v2;
  v84 = v5;
  v89 = v14;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
    && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    sub_100047938((uint64_t)_swiftEmptyArrayStorage);
    v17 = v76;
  }
  else
  {
    v17 = &_swiftEmptySetSingleton;
  }
  v18 = (_QWORD *)(v1 + OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_observables);
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_observables, v93, 1, 0);
  *v18 = v17;
  swift_bridgeObjectRelease();
  v19 = swift_allocObject(&unk_1010DC290, 17, 7);
  *(_BYTE *)(v19 + 16) = 0;
  v20 = OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_session;
  v21 = *(void **)(v1 + OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_session);
  v22 = type metadata accessor for SharePlayTogetherSession(0);
  sub_100048748(&qword_10119F838, type metadata accessor for SharePlayTogetherSession, (uint64_t)&protocol conformance descriptor for SharePlayTogetherSession);
  v23 = v21;
  v24 = (void *)ObservableObject<>.objectWillChange.getter(v22);

  v91[0] = v24;
  v25 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
  v92 = (id)static OS_dispatch_queue.main.getter(v25, v26, v27, v28, v29, v30, v31, v32);
  v33 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v34 = (uint64_t)v90;
  v77 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56);
  v78 = v33;
  v77(v90, 1, 1);
  v35 = type metadata accessor for ObservableObjectPublisher(0);
  v79 = sub_10006A92C();
  Publisher.receive<A>(on:options:)(&v92, v34, v35, v25, &protocol witness table for ObservableObjectPublisher, v79);
  sub_10004FF60(v34, &qword_1011A08F0);

  swift_release();
  v36 = v1;
  v37 = swift_allocObject(&unk_1010DC268, 24, 7);
  swift_unknownObjectWeakInit(v37 + 16);
  v38 = sub_100049F28((unint64_t *)&qword_1011A23D0, (uint64_t *)&unk_1011A23C0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  Publisher<>.sink(receiveValue:)(sub_1007C493C, v37, v13, v38);
  v39 = swift_release();
  ((void (*)(char *, uint64_t, __n128))v89[1])(v16, v13, v39);
  v40 = swift_beginAccess(v18, v91, 33, 0);
  v89 = v18;
  AnyCancellable.store(in:)(v18, v40);
  swift_endAccess(v91);
  swift_release();
  v41 = *(_QWORD **)(v36 + v20);
  v42 = swift_allocObject(&unk_1010DC268, 24, 7);
  swift_unknownObjectWeakInit(v42 + 16);
  v43 = swift_allocObject(&unk_1010DC2B8, 32, 7);
  *(_QWORD *)(v43 + 16) = v19;
  *(_QWORD *)(v43 + 24) = v42;
  v44 = *(void (**)(uint64_t (*)(uint64_t), uint64_t, __n128))((swift_isaMask & *v41) + 0x360);
  v45 = v41;
  swift_retain();
  v46 = swift_retain();
  v44(sub_1007C4948, v43, v46);

  swift_release();
  swift_release();
  v47 = *(_QWORD **)(v36 + v20);
  v48 = *(uint64_t (**)(void))((swift_isaMask & *v47) + 0x110);
  v49 = v47;
  LOBYTE(v42) = v48();

  if ((v42 & 1) != 0)
  {
    if (qword_10119B8B0 != -1)
      swift_once(&qword_10119B8B0, sub_1000E948C);
    v50 = qword_10124C788;
    v51 = (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)qword_10124C788 + 720))(0, 0);
    v52 = v80;
    v53 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v50 + 552))(v51);
    v91[0] = (id)static OS_dispatch_queue.main.getter(v53, v54, v55, v56, v57, v58, v59, v60);
    v61 = (uint64_t)v90;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v77)(v90, 1, 1, v78);
    v62 = sub_100049F28((unint64_t *)&unk_1011A21F0, (uint64_t *)&unk_1011A21E0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    v64 = v82;
    v63 = v83;
    Publisher.receive<A>(on:options:)(v91, v61, v83, v25, v62, v79);
    sub_10004FF60(v61, &qword_1011A08F0);

    (*(void (**)(char *, uint64_t))(v81 + 8))(v52, v63);
    v65 = sub_100049F28(&qword_1011A2200, (uint64_t *)&unk_1011A8ED0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v66 = v85;
    v67 = v86;
    Publisher.dropFirst(_:)(1, v85, v65);
    (*(void (**)(char *, uint64_t))(v84 + 8))(v64, v66);
    v68 = swift_allocObject(&unk_1010DC268, 24, 7);
    swift_unknownObjectWeakInit(v68 + 16);
    v69 = swift_allocObject(&unk_1010DC2E0, 32, 7);
    *(_QWORD *)(v69 + 16) = v68;
    *(_QWORD *)(v69 + 24) = v19;
    v70 = sub_100049F28(&qword_1011C8E58, &qword_1011C8E50, (uint64_t)&protocol conformance descriptor for Publishers.Drop<A>);
    swift_retain();
    v71 = v88;
    Publisher<>.sink(receiveValue:)(sub_1007C4954, v69, v88, v70);
    v72 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v87 + 8))(v67, v71, v72);
    v73 = v89;
    v74 = swift_beginAccess(v89, v91, 33, 0);
    AnyCancellable.store(in:)(v73, v74);
    swift_endAccess(v91);
    swift_release();
  }
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_1007B72A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  _QWORD aBlock[6];

  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v28 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
  v19 = (void *)static OS_dispatch_queue.main.getter(v11, v12, v13, v14, v15, v16, v17, v18);
  v20 = swift_allocObject(&unk_1010DC330, 32, 7);
  *(_QWORD *)(v20 + 16) = a2;
  *(_QWORD *)(v20 + 24) = a3;
  aBlock[4] = sub_1007C49C0;
  aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001DBD98;
  aBlock[3] = &unk_1010DC348;
  v21 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  v22 = swift_release();
  static DispatchQoS.unspecified.getter(v22);
  aBlock[0] = _swiftEmptyArrayStorage;
  v23 = sub_100048748((unint64_t *)&qword_1011A30C0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v24 = sub_100007E8C((uint64_t *)&unk_1011A2120);
  v25 = sub_100049F28(&qword_1011A30D0, (uint64_t *)&unk_1011A2120, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v24, v25, v5, v23);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v7, v21);
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v27);
}

void sub_1007B74C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t (*v12)(_BYTE *, uint64_t, uint64_t);
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  void *Strong;
  void *v23;
  _BYTE v24[24];
  _BYTE v25[24];

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v10 = &v24[-v9];
  swift_beginAccess(a1 + 16, v25, 0, 0);
  LOBYTE(a1) = *(_BYTE *)(a1 + 16);
  v11 = Logger.sharePlayTogether.unsafeMutableAddressor();
  v12 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16);
  if ((a1 & 1) != 0)
  {
    v13 = v12(v7, v11, v4);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "[SharePlayTogetherSessionManagementViewcontroller] Session ended observer called, but we have a pending session. Not dismissing.", v16, 2u);
      swift_slowDealloc(v16, -1, -1);
    }

    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    v17 = a2 + 16;
    v18 = v12(v10, v11, v4);
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "[SharePlayTogetherSessionManagementViewcontroller] Session ended observer called, dismissing.", v21, 2u);
      swift_slowDealloc(v21, -1, -1);
    }

    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v10, v4);
    swift_beginAccess(v17, v24, 0, 0);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v17);
    if (Strong)
    {
      v23 = Strong;
      objc_msgSend(Strong, "dismissViewControllerAnimated:completion:", 1, 0);

    }
  }
}

void sub_1007B76DC(_QWORD **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _QWORD *v10;
  char *Strong;
  void *v12;
  void *v13;
  uint64_t (*v14)(void);
  _QWORD *v15;
  id v16;
  char v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(void (*)(), uint64_t, __n128);
  _QWORD *v27;
  __n128 v28;
  _BYTE v29[24];
  _BYTE v30[24];

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v29[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = *a1;
  a2 += 16;
  swift_beginAccess(a2, v30, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v12 = Strong;
    if (v10)
    {
      v13 = *(void **)&Strong[OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_session];
      v14 = *(uint64_t (**)(void))((swift_isaMask & *v10) + 0x378);
      v15 = v10;
      v16 = v13;
      v17 = v14();

      if ((v17 & 1) != 0)
      {
        v18 = (_BYTE *)(a3 + 16);
        v19 = Logger.sharePlayTogether.unsafeMutableAddressor();
        v20 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v9, v19, v6);
        v21 = Logger.logObject.getter(v20);
        v22 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v21, v22))
        {
          v23 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v23 = 0;
          _os_log_impl((void *)&_mh_execute_header, v21, v22, "[SharePlayTogetherSessionManagementViewcontroller] Got new equivalent session, waiting for connection.", v23, 2u);
          swift_slowDealloc(v23, -1, -1);
        }

        (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
        swift_beginAccess(v18, v29, 1, 0);
        *v18 = 1;
        v24 = swift_allocObject(&unk_1010DC268, 24, 7);
        swift_unknownObjectWeakInit(v24 + 16);
        v25 = swift_allocObject(&unk_1010DC308, 32, 7);
        *(_QWORD *)(v25 + 16) = v24;
        *(_QWORD *)(v25 + 24) = v15;
        v26 = *(void (**)(void (*)(), uint64_t, __n128))((swift_isaMask & *v15) + 0x358);
        v27 = v15;
        v28 = swift_retain();
        v26(sub_1007C4988, v25, v28);

        swift_release();
        swift_release();
      }
      else
      {

      }
    }
    else
    {

    }
  }
}

void sub_1007B792C(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t Strong;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  void *v19;
  _BYTE v20[24];
  _BYTE v21[24];

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = a1 + 16;
  v9 = Logger.sharePlayTogether.unsafeMutableAddressor();
  v10 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v7, v9, v4);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "[SharePlayTogetherSessionManagementViewcontroller] New session connected, updating.", v13, 2u);
    swift_slowDealloc(v13, -1, -1);
  }

  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  swift_beginAccess(v8, v21, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v8);
  if (Strong)
  {
    v15 = (void *)Strong;
    v16 = *(void **)(Strong + OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_session);
    *(_QWORD *)(Strong + OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_session) = a2;
    v17 = a2;

    sub_1007B83B0(1);
  }
  swift_beginAccess(v8, v20, 0, 0);
  v18 = swift_unknownObjectWeakLoadStrong(v8);
  if (v18)
  {
    v19 = (void *)v18;
    sub_1007B6BF0();

  }
}

void sub_1007B7ABC(char a1)
{
  void *v1;
  id v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  objc_super v13;

  v13.receiver = v1;
  v13.super_class = (Class)type metadata accessor for SharePlayTogetherSessionManagementViewController(0);
  objc_msgSendSuper2(&v13, "viewIsAppearing:", a1 & 1);
  v3 = objc_msgSend(v1, "traitCollection");
  v4 = objc_msgSend(v3, "userInterfaceIdiom");

  v5 = sub_1007B2E0C();
  v6 = (void *)objc_opt_self(UIColor);
  v7 = v6;
  if (v4 == (id)3)
  {
    v8 = objc_msgSend(v6, "tableBackgroundColor");
    objc_msgSend(v5, "setBackgroundColor:", v8);

LABEL_5:
    sub_1007B83B0(0);
    return;
  }
  v9 = objc_msgSend(v6, "clearColor");
  objc_msgSend(v5, "setBackgroundColor:", v9);

  v10 = objc_msgSend(v1, "view");
  if (v10)
  {
    v11 = v10;
    v12 = objc_msgSend(v7, "clearColor");
    objc_msgSend(v11, "setBackgroundColor:", v12);

    objc_msgSend(v1, "setOverrideUserInterfaceStyle:", 2);
    goto LABEL_5;
  }
  __break(1u);
}

void sub_1007B7CF8()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  objc_super v18;
  CGRect v19;

  v18.receiver = v0;
  v18.super_class = (Class)type metadata accessor for SharePlayTogetherSessionManagementViewController(0);
  objc_msgSendSuper2(&v18, "viewDidLayoutSubviews");
  v1 = objc_msgSend(v0, "view");
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, "safeAreaLayoutGuide");

    objc_msgSend(v3, "layoutFrame");
    v5 = v4;
    v7 = v6;
    v9 = v8;
    v11 = v10;

    v12 = (double *)&v0[OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_lastSeenSafeAreaLayoutFrame];
    v19.origin.x = v5;
    v19.origin.y = v7;
    v19.size.width = v9;
    v19.size.height = v11;
    if (!CGRectEqualToRect(v19, *(CGRect *)&v0[OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_lastSeenSafeAreaLayoutFrame]))
    {
      *v12 = v5;
      v12[1] = v7;
      v12[2] = v9;
      v12[3] = v11;
      v13 = sub_1007B2E0C();
      objc_msgSend(v13, "setFrame:", v5, v7, v9, v11);

      v14 = objc_msgSend(v0, "traitCollection");
      v15 = objc_msgSend(v14, "userInterfaceIdiom");

      if (v15 == (id)3)
      {
        v16 = sub_1007B2E0C();
        v17 = objc_msgSend(v16, "collectionViewLayout");

        objc_msgSend(v17, "invalidateLayout");
      }
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1007B7F40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t (*v20)(void);
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  __n128 v27;
  uint64_t result;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  Class isa;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE v49[24];

  v1 = v0;
  v44 = type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier(0);
  __chkstk_darwin(v44);
  v3 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  __chkstk_darwin(v4);
  v45 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for IndexPath(0);
  v46 = *(_QWORD *)(v6 - 8);
  v47 = v6;
  __chkstk_darwin(v6);
  v42 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C((uint64_t *)&unk_1011C8E40);
  __chkstk_darwin(v8);
  v41 = (uint64_t)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v40 - v11;
  v13 = type metadata accessor for SharePlayTogetherSession.Participant(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v48 = (uint64_t)&v40 - v18;
  v19 = *(_QWORD **)(v0 + OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_session);
  v20 = *(uint64_t (**)(void))((swift_isaMask & *v19) + 0x180);
  v21 = v19;
  v22 = v20();

  v23 = *(_QWORD *)(v22 + 16);
  if (v23)
  {
    v43 = v1;
    v24 = v22 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    v25 = *(_QWORD *)(v14 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_10005B704(v24, (uint64_t)v16, type metadata accessor for SharePlayTogetherSession.Participant);
      if (v16[32] == 1)
        break;
      sub_10005B748((uint64_t)v16, type metadata accessor for SharePlayTogetherSession.Participant);
      v24 += v25;
      if (!--v23)
      {
        swift_bridgeObjectRelease();
        v1 = v43;
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    sub_10005B6C0((uint64_t)v16, (uint64_t)v12, type metadata accessor for SharePlayTogetherSession.Participant);
    v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
    v26(v12, 0, 1, v13);
    v1 = v43;
  }
  else
  {
LABEL_6:
    v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
    v26(v12, 1, 1, v13);
  }
  v27 = swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v14 + 48))(v12, 1, v13, v27) == 1)
    return sub_10004FF60((uint64_t)v12, (uint64_t *)&unk_1011C8E40);
  v29 = v48;
  result = sub_10005B6C0((uint64_t)v12, v48, type metadata accessor for SharePlayTogetherSession.Participant);
  v30 = *(void **)(v1 + OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_dataSource);
  if (v30)
  {
    sub_10005B704(v29, (uint64_t)v3, type metadata accessor for SharePlayTogetherSession.Participant);
    swift_storeEnumTagMultiPayload(v3, v44, 1);
    v31 = v30;
    v32 = (uint64_t)v45;
    dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(v3);

    sub_10005B748((uint64_t)v3, type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier);
    v34 = v46;
    v33 = v47;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v32, 1, v47) == 1)
    {
      sub_10005B748(v29, type metadata accessor for SharePlayTogetherSession.Participant);
      return sub_10004FF60(v32, (uint64_t *)&unk_1011A3D50);
    }
    else
    {
      v35 = v42;
      (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v42, v32, v33);
      v36 = v41;
      sub_10005B704(v29, v41, type metadata accessor for SharePlayTogetherSession.Participant);
      v26((char *)v36, 0, 1, v13);
      v37 = v1
          + OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_lastPendingParticipantScrolledTo;
      swift_beginAccess(v1 + OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_lastPendingParticipantScrolledTo, v49, 33, 0);
      sub_1007C48E4(v36, v37);
      swift_endAccess(v49);
      v38 = sub_1007B2E0C();
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v38, "scrollToItemAtIndexPath:atScrollPosition:animated:", isa, 1, 1);

      (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v33);
      return sub_10005B748(v29, type metadata accessor for SharePlayTogetherSession.Participant);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1007B83B0(int a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  char *v23;
  _QWORD *v24;
  uint64_t (*v25)(void);
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t (*v31)(void);
  _QWORD *v32;
  uint64_t v33;
  int64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  id v46;
  id v47;
  __n128 v48;
  _QWORD *v49;
  uint64_t (*v50)(_QWORD *);
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  void *v55;
  id v56;
  char *v57;
  uint64_t v58;
  id v59;
  __n128 v60;
  void (*v61)(char *, uint64_t, __n128);
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;

  v70 = a1;
  v1 = type metadata accessor for SharePlayTogetherSession.Participant(0);
  v65 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v3 = (char *)&v62 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v76 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011C8E20);
  v72 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v64 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v62 - v10;
  v12 = sub_100048748((unint64_t *)&unk_1011C8E28, type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier, (uint64_t)&unk_100ECFFDC);
  NSDiffableDataSourceSnapshot.init()(&type metadata for String, v4, &protocol witness table for String, v12);
  v73 = v7;
  NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_1010AD548);
  v13 = sub_100007E8C((uint64_t *)&unk_1011AE0D0);
  v14 = *(_QWORD *)(v5 + 72);
  v15 = *(unsigned __int8 *)(v5 + 80);
  v16 = (v15 + 32) & ~v15;
  v77 = v14;
  v17 = v16 + v14;
  v18 = v15 | 7;
  v19 = swift_allocObject(v13, v16 + v14, v15 | 7);
  v74 = xmmword_100EA7AA0;
  *(_OWORD *)(v19 + 16) = xmmword_100EA7AA0;
  swift_storeEnumTagMultiPayload(v19 + v16, v4, 3);
  v80 = 0;
  v81 = 0;
  NSDiffableDataSourceSnapshot.appendItems(_:toSection:)(v19, &v80, v7);
  swift_bridgeObjectRelease();
  v67 = v17;
  v68 = v13;
  v66 = v18;
  v20 = swift_allocObject(v13, v17, v18);
  *(_OWORD *)(v20 + 16) = v74;
  v78 = v16;
  v21 = (uint64_t *)(v20 + v16);
  v22 = OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_session;
  v23 = v75;
  v24 = *(_QWORD **)&v75[OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_session];
  v25 = *(uint64_t (**)(void))((swift_isaMask & *v24) + 0x1B0);
  v26 = v24;
  v27 = v25();

  *v21 = v27;
  v69 = v4;
  v28 = v4;
  v29 = v73;
  swift_storeEnumTagMultiPayload(v21, v28, 0);
  v80 = 0;
  v81 = 0;
  v71 = v11;
  NSDiffableDataSourceSnapshot.appendItems(_:toSection:)(v20, &v80, v29);
  swift_bridgeObjectRelease();
  v30 = *(_QWORD **)&v23[v22];
  v31 = *(uint64_t (**)(void))((swift_isaMask & *v30) + 0x180);
  v32 = v30;
  v33 = v31();

  swift_unknownObjectWeakInit(&v80);
  v34 = *(_QWORD *)(v33 + 16);
  if (v34)
  {
    v63 = v22;
    v79 = _swiftEmptyArrayStorage;
    sub_10035CC18(0, v34, 0);
    v35 = (*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
    v62 = v33;
    v36 = v33 + v35;
    v37 = *(_QWORD *)(v65 + 72);
    v38 = (uint64_t)v76;
    do
    {
      sub_10005B704(v36, (uint64_t)v3, type metadata accessor for SharePlayTogetherSession.Participant);
      sub_1007B8A2C((uint64_t)v3, (uint64_t)&v80, v38);
      sub_10005B748((uint64_t)v3, type metadata accessor for SharePlayTogetherSession.Participant);
      v39 = v79;
      if ((swift_isUniquelyReferenced_nonNull_native(v79) & 1) == 0)
      {
        sub_10035CC18(0, v39[2] + 1, 1);
        v38 = (uint64_t)v76;
        v39 = v79;
      }
      v41 = v39[2];
      v40 = v39[3];
      if (v41 >= v40 >> 1)
      {
        sub_10035CC18(v40 > 1, v41 + 1, 1);
        v38 = (uint64_t)v76;
        v39 = v79;
      }
      v39[2] = v41 + 1;
      sub_10005B6C0(v38, (uint64_t)v39 + v78 + v41 * v77, type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier);
      v36 += v37;
      --v34;
    }
    while (v34);
    swift_bridgeObjectRelease();
    v43 = v72;
    v29 = v73;
    v22 = v63;
  }
  else
  {
    swift_bridgeObjectRelease();
    v39 = _swiftEmptyArrayStorage;
    v43 = v72;
  }
  swift_unknownObjectWeakDestroy(&v80, v42);
  v80 = 0;
  v81 = 0;
  v44 = v71;
  NSDiffableDataSourceSnapshot.appendItems(_:toSection:)(v39, &v80, v29);
  swift_bridgeObjectRelease();
  NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_1010AD578);
  v45 = v75;
  v46 = objc_msgSend(v75, "traitCollection");
  v47 = objc_msgSend(v46, "userInterfaceIdiom");

  if (v47 != (id)3)
  {
    v49 = *(_QWORD **)&v45[v22];
    v50 = *(uint64_t (**)(_QWORD *))((swift_isaMask & *v49) + 0x110);
    v51 = v49;
    LOBYTE(v50) = v50(v51);

    if ((v50 & 1) == 0)
    {
      v52 = swift_allocObject(v68, v67, v66);
      *(_OWORD *)(v52 + 16) = v74;
      swift_storeEnumTagMultiPayload(v52 + v78, v69, 4);
      v80 = 0;
      v81 = 0;
      NSDiffableDataSourceSnapshot.appendItems(_:toSection:)(v52, &v80, v29);
      v48 = swift_bridgeObjectRelease();
    }
  }
  if (*(_BYTE *)(*(_QWORD *)&v45[v22] + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_isHost) == 1)
  {
    v53 = swift_allocObject(v68, v67, v66);
    *(_OWORD *)(v53 + 16) = v74;
    v54 = (_BYTE *)(v53 + v78);
    *v54 = MRGroupSessionNearbyContactDiscoveryEnabled(v53);
    swift_storeEnumTagMultiPayload(v54, v69, 2);
    v80 = 0;
    v81 = 0;
    NSDiffableDataSourceSnapshot.appendItems(_:toSection:)(v53, &v80, v29);
    v48 = swift_bridgeObjectRelease();
  }
  v55 = *(void **)&v45[OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_dataSource];
  if ((v70 & 1) != 0)
  {
    if (v55)
    {
      v56 = v55;
      dispatch thunk of UICollectionViewDiffableDataSource.applySnapshotUsingReloadData(_:completion:)(v44, 0, 0);

      (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v29);
      return;
    }
    __break(1u);
  }
  else if (v55)
  {
    v57 = v64;
    (*(void (**)(char *, char *, uint64_t, __n128))(v43 + 16))(v64, v44, v29, v48);
    v58 = swift_allocObject(&unk_1010DC268, 24, 7);
    swift_unknownObjectWeakInit(v58 + 16);
    v59 = v55;
    swift_retain();
    dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)(v57, 1, sub_1007C48DC, v58);

    v60 = swift_release();
    v61 = *(void (**)(char *, uint64_t, __n128))(v43 + 8);
    v61(v57, v29, v60);
    ((void (*)(char *, uint64_t))v61)(v44, v29);
    swift_release();
    return;
  }
  __break(1u);
  swift_release();
  __break(1u);
}

uint64_t sub_1007B8A2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void (*v23)(__objc2_class *__return_ptr, char *, uint64_t, uint64_t, uint64_t);
  uint64_t Strong;
  void *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _BYTE v60[24];
  _BYTE v61[24];
  _BYTE v62[24];
  _BYTE v63[24];
  _BYTE v64[32];

  v59 = a3;
  v5 = type metadata accessor for SharePlayTogetherSession.Participant(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v53 = (uint64_t)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011C8E38);
  __chkstk_darwin(v8);
  v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C((uint64_t *)&unk_1011C8E40);
  __chkstk_darwin(v11);
  v56 = (uint64_t)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v55 = (char *)&v52 - v14;
  __chkstk_darwin(v15);
  v54 = (uint64_t)&v52 - v16;
  __chkstk_darwin(v17);
  v19 = (char *)&v52 - v18;
  __chkstk_darwin(v20);
  v22 = (char *)&v52 - v21;
  v58 = a1;
  sub_10005B704(a1, (uint64_t)&v52 - v21, type metadata accessor for SharePlayTogetherSession.Participant);
  v23 = *(void (**)(__objc2_class *__return_ptr, char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v23)(v22, 0, 1, v5);
  swift_beginAccess(a2, v64, 0, 0);
  v57 = a2;
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v25 = (void *)Strong;
    v26 = Strong
        + OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_lastPendingParticipantScrolledTo;
    swift_beginAccess(Strong + OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_lastPendingParticipantScrolledTo, v63, 0, 0);
    sub_10004A160(v26, (uint64_t)v19, (uint64_t *)&unk_1011C8E40);

  }
  else
  {
    v23(_TtCC5Music32RecentlyPlayedWidgetDataProviderP33_23E5867D7557CCAE0A35FCF9C1439AE75Cache, v19, 1, 1, v5);
  }
  v27 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v23;
  v28 = v5;
  v29 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_10004A160((uint64_t)v22, (uint64_t)v10, (uint64_t *)&unk_1011C8E40);
  sub_10004A160((uint64_t)v19, v29, (uint64_t *)&unk_1011C8E40);
  v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v30((uint64_t)v10, 1, v5) != 1)
  {
    v33 = v54;
    sub_10004A160((uint64_t)v10, v54, (uint64_t *)&unk_1011C8E40);
    if (v30(v29, 1, v28) != 1)
    {
      v34 = v33;
      v35 = v53;
      sub_10005B6C0(v29, v53, type metadata accessor for SharePlayTogetherSession.Participant);
      v36 = static SharePlayTogetherSession.Participant.__derived_struct_equals(_:_:)(v34, v35);
      sub_10005B748(v35, type metadata accessor for SharePlayTogetherSession.Participant);
      sub_10004FF60((uint64_t)v19, (uint64_t *)&unk_1011C8E40);
      sub_10004FF60((uint64_t)v22, (uint64_t *)&unk_1011C8E40);
      sub_10005B748(v34, type metadata accessor for SharePlayTogetherSession.Participant);
      sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_1011C8E40);
      v32 = v58;
      if ((v36 & 1) == 0)
        goto LABEL_14;
      goto LABEL_11;
    }
    sub_10004FF60((uint64_t)v19, (uint64_t *)&unk_1011C8E40);
    sub_10004FF60((uint64_t)v22, (uint64_t *)&unk_1011C8E40);
    sub_10005B748(v33, type metadata accessor for SharePlayTogetherSession.Participant);
    v32 = v58;
LABEL_9:
    sub_10004FF60((uint64_t)v10, &qword_1011C8E38);
    goto LABEL_14;
  }
  sub_10004FF60((uint64_t)v19, (uint64_t *)&unk_1011C8E40);
  sub_10004FF60((uint64_t)v22, (uint64_t *)&unk_1011C8E40);
  v31 = v30(v29, 1, v5);
  v32 = v58;
  if (v31 != 1)
    goto LABEL_9;
  sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_1011C8E40);
LABEL_11:
  if ((*(_BYTE *)(v32 + 32) & 1) != 0)
    goto LABEL_16;
  v37 = v57;
  swift_beginAccess(v57, v60, 0, 0);
  v38 = swift_unknownObjectWeakLoadStrong(v37);
  if (v38)
  {
    v39 = (char *)v38;
    v40 = (uint64_t)v55;
    v27(v55, 1, 1, v28);
    v41 = v56;
    sub_100065228(v40, v56, (uint64_t *)&unk_1011C8E40);
    v42 = (uint64_t)&v39[OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_lastPendingParticipantScrolledTo];
    swift_beginAccess(&v39[OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_lastPendingParticipantScrolledTo], v62, 33, 0);
    sub_1007C48E4(v41, v42);
    swift_endAccess(v62);

  }
LABEL_14:
  v43 = v57;
  swift_beginAccess(v57, v62, 0, 0);
  v44 = swift_unknownObjectWeakLoadStrong(v43);
  if (v44)
  {
    v45 = (char *)v44;
    v46 = (uint64_t)v55;
    v27(v55, 1, 1, v28);
    v47 = v56;
    sub_100065228(v46, v56, (uint64_t *)&unk_1011C8E40);
    v48 = (uint64_t)&v45[OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_lastPendingParticipantScrolledTo];
    swift_beginAccess(&v45[OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_lastPendingParticipantScrolledTo], v61, 33, 0);
    sub_1007C48E4(v47, v48);
    swift_endAccess(v61);

  }
LABEL_16:
  v49 = v59;
  sub_10005B704(v32, v59, type metadata accessor for SharePlayTogetherSession.Participant);
  v50 = type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier(0);
  return swift_storeEnumTagMultiPayload(v49, v50, 1);
}

void sub_1007B8F6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    if (*(_BYTE *)(Strong + OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_viewDidAppearOnce) == 1)
      sub_1007B7F40();

  }
}

void sub_1007B8FD0()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  void *v4;
  unsigned int v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  CGRect v21;

  v1 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v2 = objc_msgSend(v1, "userInterfaceLayoutDirection");

  v3 = objc_msgSend((id)objc_opt_self(AVExternalDevice), "currentCarPlayExternalDevice");
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, "rightHandDrive");

    Int.seconds.getter(44);
    if (v5)
      goto LABEL_11;
  }
  else
  {
    Int.seconds.getter(44);
  }
  if (v2 == (id)1)
  {
    v6 = (void *)sub_1007B2E0C();
    v7 = objc_msgSend(v6, "accessoryViewAtEdge:", 1);

    if (v7)
    {
      objc_opt_self(_UIStaticScrollBar);
      v8 = (void *)swift_dynamicCastObjCClass(v7);
      if (v8)
      {
        objc_msgSend(v8, "desiredAccessoryEdge");

      }
      else
      {

      }
    }
  }
LABEL_11:
  v9 = objc_msgSend(v0, "view");
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v9, "safeAreaInsets");

    v11 = objc_msgSend(v0, "view");
    if (v11)
    {
      v12 = v11;
      objc_msgSend(v11, "bounds");
      v14 = v13;
      v16 = v15;
      v18 = v17;
      v20 = v19;

      v21.origin.x = v14;
      v21.origin.y = v16;
      v21.size.width = v18;
      v21.size.height = v20;
      CGRectGetWidth(v21);
      Int.seconds.getter(480);
      Int.seconds.getter(12);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1007B9230()
{
  void *v0;
  id v1;
  double v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;

  v1 = objc_msgSend(v0, "presentedViewController");
  if (!v1)
    goto LABEL_17;
  v3 = v1;
  objc_opt_self(UINavigationController);
  v4 = (void *)swift_dynamicCastObjCClass(v3);
  if (!v4)
  {

    goto LABEL_17;
  }
  v5 = objc_msgSend(v4, "viewControllers");
  v6 = sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
  v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0)
      v11 = v7;
    else
      v11 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v12 = _CocoaArrayWrapper.endIndex.getter(v11);
    swift_bridgeObjectRelease();
    if (v12)
      goto LABEL_5;
LABEL_16:

    *(_QWORD *)&v2 = swift_bridgeObjectRelease().n128_u64[0];
    goto LABEL_17;
  }
  if (!*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_16;
LABEL_5:
  if ((v7 & 0xC000000000000001) != 0)
  {
    v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v7);
  }
  else
  {
    if (!*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v8 = *(id *)(v7 + 32);
  }
  v16 = v8;
  swift_bridgeObjectRelease();
  v9 = type metadata accessor for QRCodeOverlayViewController();
  v10 = (_QWORD *)swift_dynamicCastClass(v16, v9);
  if (v10)
  {
    (*(void (**)(void))((swift_isaMask & *v10) + 0x1D8))();

LABEL_20:
    return;
  }

LABEL_17:
  v13 = objc_msgSend(v0, "presentedViewController", v2);
  if (v13)
  {
    v16 = v13;
    v14 = type metadata accessor for QRCodeOverlayViewController();
    v15 = (_QWORD *)swift_dynamicCastClass(v16, v14);
    if (v15)
      (*(void (**)(void))((swift_isaMask & *v15) + 0x1D8))();
    goto LABEL_20;
  }
}

id sub_1007B9460()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SharePlayTogetherSessionManagementViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1007B9548()
{
  return type metadata accessor for SharePlayTogetherSessionManagementViewController(0);
}

uint64_t type metadata accessor for SharePlayTogetherSessionManagementViewController(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011C8D38, (uint64_t)&nominal type descriptor for SharePlayTogetherSessionManagementViewController);
}

void sub_1007B9564(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[12];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = "\t";
  v4[2] = &unk_100ECFF40;
  v4[3] = &unk_100ECFF58;
  v4[4] = &unk_100ECFF58;
  v4[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[6] = &unk_100ECFF70;
  sub_1000E3A44(319, &qword_1011C8D48, type metadata accessor for SharePlayTogetherSession.Participant, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
  {
    v4[7] = *(_QWORD *)(v2 - 8) + 64;
    v4[8] = &unk_100ECFF58;
    v4[9] = &unk_100ECFF58;
    v4[10] = &unk_100ECFF58;
    v4[11] = &unk_100ECFF88;
    swift_updateClassMetadata2(a1, 256, 12, v4, a1 + 80);
  }
}

void sub_1007B9724(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  id v12;
  uint64_t v13;
  Class isa;
  uint64_t v15;

  v5 = sub_100007E8C((uint64_t *)&unk_1011C8E10);
  __chkstk_darwin(v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v15 - v9;
  v11 = *(void **)(v2 + OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_dataSource);
  if (v11)
  {
    v12 = v11;
    dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(a2);

    v13 = type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v10, 1, v13) != 1)
    {
      sub_10004A160((uint64_t)v10, (uint64_t)v7, (uint64_t *)&unk_1011C8E10);
      if (swift_getEnumCaseMultiPayload(v7, v13) == 2)
      {
        MRSetGroupSessionNearbyContactDiscoveryEnabled((*v7 & 1) == 0);
        sub_1007B83B0(0);
      }
      else
      {
        sub_10005B748((uint64_t)v7, type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier);
      }
    }
    sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_1011C8E10);
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    objc_msgSend(a1, "deselectItemAtIndexPath:animated:", isa, 0);

  }
  else
  {
    __break(1u);
  }
}

_QWORD *sub_1007B9A00(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v17 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    v9 = a2[3];
    a1[2] = a2[2];
    a1[3] = v9;
    *((_WORD *)a1 + 16) = *((_WORD *)a2 + 16);
    v10 = *(int *)(type metadata accessor for SharePlayTogetherSession.Participant(0) + 32);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = type metadata accessor for SocialProfile(0);
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v15(v12, 1, v13))
    {
      v16 = sub_100007E8C(&qword_1011C8D50);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t sub_1007B9B60(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  result = swift_getEnumCaseMultiPayload(a1, a2);
  if ((_DWORD)result == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v4 = a1 + *(int *)(type metadata accessor for SharePlayTogetherSession.Participant(0) + 32);
    v5 = type metadata accessor for SocialProfile(0);
    v6 = *(_QWORD *)(v5 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  return result;
}

_QWORD *sub_1007B9BF4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    *((_WORD *)a1 + 16) = *((_WORD *)a2 + 16);
    v8 = *(int *)(type metadata accessor for SharePlayTogetherSession.Participant(0) + 32);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for SocialProfile(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = sub_100007E8C(&qword_1011C8D50);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_1007B9D2C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;

  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
      *((_BYTE *)a1 + 33) = *((_BYTE *)a2 + 33);
      v6 = *(int *)(type metadata accessor for SharePlayTogetherSession.Participant(0) + 32);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = type metadata accessor for SocialProfile(0);
      v10 = *(_QWORD *)(v9 - 8);
      v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v11(v8, 1, v9))
      {
        v12 = sub_100007E8C(&qword_1011C8D50);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier(uint64_t a1)
{
  return sub_100055934(a1, qword_1011C8DC8, (uint64_t)&nominal type descriptor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier);
}

_OWORD *sub_1007B9EA8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    *((_WORD *)a1 + 16) = *((_WORD *)a2 + 16);
    v7 = *(int *)(type metadata accessor for SharePlayTogetherSession.Participant(0) + 32);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for SocialProfile(0);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = sub_100007E8C(&qword_1011C8D50);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_1007B9FB8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      *((_WORD *)a1 + 16) = *((_WORD *)a2 + 16);
      v7 = *(int *)(type metadata accessor for SharePlayTogetherSession.Participant(0) + 32);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = type metadata accessor for SocialProfile(0);
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        v12 = sub_100007E8C(&qword_1011C8D50);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1007BA0E0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = (char *)&value witness table for Builtin.Int64 + 64;
  result = type metadata accessor for SharePlayTogetherSession.Participant(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = &unk_100ECFF88;
    swift_initEnumMetadataMultiPayload(a1, 256, 3, v4);
    return 0;
  }
  return result;
}

uint64_t sub_1007BA15C()
{
  return sub_100048748(&qword_1011C8E00, type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier, (uint64_t)&unk_100ECFFB4);
}

uint64_t sub_1007BA188@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  *(_QWORD *)a2 = static HorizontalAlignment.center.getter(a1);
  *(_QWORD *)(a2 + 8) = 0x4000000000000000;
  *(_BYTE *)(a2 + 16) = 0;
  v3 = sub_100007E8C((uint64_t *)&unk_1011C8F80);
  return sub_1007BA1CC(a2 + *(int *)(v3 + 44));
}

uint64_t sub_1007BA1CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t KeyPath;
  double v19;
  uint64_t v20;
  unint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  double v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  double v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;

  v86 = a1;
  v1 = type metadata accessor for Locale(0);
  __chkstk_darwin(v1);
  v85 = (char *)&v79 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v3);
  v84 = (char *)&v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011BE2D0);
  __chkstk_darwin(v5);
  v7 = (char *)&v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = sub_100007E8C(&qword_1011C8F90);
  v81 = *(_QWORD *)(v83 - 8);
  __chkstk_darwin(v83);
  v9 = (char *)&v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = sub_100007E8C(&qword_1011C8F98);
  __chkstk_darwin(v80);
  v11 = (char *)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = sub_100007E8C(&qword_1011C8FA0);
  __chkstk_darwin(v82);
  v13 = (char *)&v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v87 = (uint64_t)&v79 - v15;
  v16 = Image.init(systemName:)(0x616C706572616873, 0xE900000000000079);
  v17 = static Font.body.getter(v16);
  KeyPath = swift_getKeyPath(&unk_100ED0050);
  v88 = v16;
  v89 = KeyPath;
  v90 = v17;
  v19 = static Font.Weight.semibold.getter(KeyPath);
  v20 = sub_100007E8C(&qword_1011AC700);
  v21 = sub_100318590();
  View.fontWeight(_:)(*(_QWORD *)&v19, 0, v20, v21);
  swift_release();
  swift_release();
  v22 = swift_release();
  static SymbolRenderingMode.hierarchical.getter(v22);
  v23 = type metadata accessor for SymbolRenderingMode(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v7, 0, 1, v23);
  v24 = swift_getKeyPath(&unk_100ED00E0);
  v25 = (uint64_t *)&v11[*(int *)(v80 + 36)];
  v26 = sub_100007E8C((uint64_t *)&unk_1011C8FA8);
  sub_10004A160((uint64_t)v7, (uint64_t)v25 + *(int *)(v26 + 28), &qword_1011BE2D0);
  *v25 = v24;
  v27 = v81;
  v28 = v83;
  (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v11, v9, v83);
  sub_10004FF60((uint64_t)v7, &qword_1011BE2D0);
  v29 = (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v9, v28);
  LOBYTE(v7) = static Edge.Set.top.getter(v29);
  v30 = EdgeInsets.init(_all:)(17.0);
  v32 = v31;
  v34 = v33;
  v36 = v35;
  sub_10004A160((uint64_t)v11, (uint64_t)v13, &qword_1011C8F98);
  v37 = &v13[*(int *)(v82 + 36)];
  *v37 = (char)v7;
  *((double *)v37 + 1) = v30;
  *((_QWORD *)v37 + 2) = v32;
  *((_QWORD *)v37 + 3) = v34;
  *((_QWORD *)v37 + 4) = v36;
  v37[40] = 0;
  sub_10004FF60((uint64_t)v11, &qword_1011C8F98);
  sub_100065228((uint64_t)v13, v87, &qword_1011C8FA0);
  v38 = v84;
  v39 = String.LocalizationValue.init(stringLiteral:)(0x616C506572616853, 0xE900000000000079);
  v40 = v85;
  static Locale.current.getter(v39);
  v88 = String.init(localized:table:bundle:locale:comment:)(v38, 0, 0, 0, v40, 0, 0, 256);
  v89 = v41;
  v42 = sub_100055B68();
  v43 = Text.init<A>(_:)(&v88, &type metadata for String, v42);
  v45 = v44;
  v47 = v46;
  v49 = v48 & 1;
  v50 = static Font.body.getter(v43);
  v51 = Text.font(_:)(v50, v43, v45, v49, v47);
  v53 = v52;
  v55 = v54;
  v57 = v56;
  swift_release();
  v58 = v55 & 1;
  sub_100055BAC(v43, v45, v49);
  swift_bridgeObjectRelease();
  v60 = static Font.Weight.bold.getter(v59);
  v61 = Text.fontWeight(_:)(*(_QWORD *)&v60, 0, v51, v53, v58, v57);
  v63 = v62;
  v65 = v64;
  LOBYTE(v20) = v66 & 1;
  sub_100055BAC(v51, v53, v58);
  swift_bridgeObjectRelease();
  LOBYTE(v49) = static Edge.Set.bottom.getter(v67);
  v68 = EdgeInsets.init(_all:)(20.0);
  v70 = v69;
  v72 = v71;
  v74 = v73;
  v75 = v87;
  sub_10004A160(v87, (uint64_t)v13, &qword_1011C8FA0);
  v76 = v86;
  sub_10004A160((uint64_t)v13, v86, &qword_1011C8FA0);
  v77 = v76 + *(int *)(sub_100007E8C((uint64_t *)&unk_1011C8FB8) + 48);
  *(_QWORD *)v77 = v61;
  *(_QWORD *)(v77 + 8) = v63;
  *(_BYTE *)(v77 + 16) = v20;
  *(_QWORD *)(v77 + 24) = v65;
  *(_BYTE *)(v77 + 32) = v49;
  *(double *)(v77 + 40) = v68;
  *(_QWORD *)(v77 + 48) = v70;
  *(_QWORD *)(v77 + 56) = v72;
  *(_QWORD *)(v77 + 64) = v74;
  *(_BYTE *)(v77 + 72) = 0;
  sub_100055BBC(v61, v63, v20);
  swift_bridgeObjectRetain();
  sub_10004FF60(v75, &qword_1011C8FA0);
  sub_100055BAC(v61, v63, v20);
  swift_bridgeObjectRelease();
  return sub_10004FF60((uint64_t)v13, &qword_1011C8FA0);
}

uint64_t sub_1007BA730@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  void *v7;
  id v8;
  char v9;
  uint64_t v10;
  _BYTE v12[9];
  uint64_t v13;

  v7 = *(void **)(a1 + OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_session);
  v12[0] = 0;
  v8 = v7;
  State.init(wrappedValue:)(v12, &type metadata for Bool);
  v9 = v12[1];
  v10 = v13;
  *(_QWORD *)a4 = v8;
  *(_BYTE *)(a4 + 8) = v9;
  *(_QWORD *)(a4 + 16) = v10;
  *(_QWORD *)(a4 + 24) = a2;
  *(_QWORD *)(a4 + 32) = a3;
  return swift_retain(a3);
}

uint64_t sub_1007BA7B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  void *v11;
  id v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v20[9];
  uint64_t v21;

  v8 = type metadata accessor for SharePlayTogetherSessionManagementViewController.QRCodeCell(0);
  __chkstk_darwin(v8);
  v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 1];
  v11 = *(void **)(a1 + OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_session);
  *(_QWORD *)v10 = v11;
  v20[0] = 0;
  v12 = v11;
  State.init(wrappedValue:)(v20, &type metadata for Bool);
  v13 = v21;
  v10[8] = v20[1];
  *((_QWORD *)v10 + 3) = 0;
  *((_QWORD *)v10 + 4) = 0;
  *((_QWORD *)v10 + 2) = v13;
  v14 = &v10[*(int *)(v8 + 28)];
  *v14 = swift_getKeyPath(&unk_100ED00B0);
  v15 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  swift_storeEnumTagMultiPayload(v14, v15, 0);
  sub_10005B704((uint64_t)v10, a4, type metadata accessor for SharePlayTogetherSessionManagementViewController.QRCodeCell);
  v16 = *(_QWORD *)(a4 + 24);
  v17 = *(_QWORD *)(a4 + 32);
  swift_retain();
  sub_10004BA30(v16, v17);
  *(_QWORD *)(a4 + 24) = a2;
  *(_QWORD *)(a4 + 32) = a3;
  return sub_10005B748((uint64_t)v10, type metadata accessor for SharePlayTogetherSessionManagementViewController.QRCodeCell);
}

uint64_t sub_1007BA8E4@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v10 = type metadata accessor for SharePlayTogetherSessionManagementViewController.StatusHeaderView(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(void **)(a1 + OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_session);
  v14 = type metadata accessor for SharePlayTogetherSession(0);
  v15 = sub_100048748(&qword_10119F838, type metadata accessor for SharePlayTogetherSession, (uint64_t)&protocol conformance descriptor for SharePlayTogetherSession);
  *(_QWORD *)v12 = ObservedObject.init(wrappedValue:)(v13, v14, v15);
  *((_QWORD *)v12 + 1) = v16;
  v12[16] = a2;
  *((_QWORD *)v12 + 3) = 0;
  *((_QWORD *)v12 + 4) = 0;
  v17 = &v12[*(int *)(v10 + 28)];
  *(_QWORD *)v17 = swift_getKeyPath(&unk_100ED00B0);
  v18 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  swift_storeEnumTagMultiPayload(v17, v18, 0);
  sub_10005B704((uint64_t)v12, a5, type metadata accessor for SharePlayTogetherSessionManagementViewController.StatusHeaderView);
  v19 = *(_QWORD *)(a5 + 24);
  v20 = *(_QWORD *)(a5 + 32);
  swift_retain();
  sub_10004BA30(v19, v20);
  *(_QWORD *)(a5 + 24) = a3;
  *(_QWORD *)(a5 + 32) = a4;
  return sub_10005B748((uint64_t)v12, type metadata accessor for SharePlayTogetherSessionManagementViewController.StatusHeaderView);
}

id sub_1007BAA34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v17;
  id v18;

  v8 = (int *)type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView(0);
  __chkstk_darwin(v8);
  v10 = (uint64_t *)((char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = type metadata accessor for SharePlayTogetherSession.Participant(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(id *)(a1 + OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_session);
  sub_10005B704(a2, (uint64_t)v13, type metadata accessor for SharePlayTogetherSession.Participant);
  v14 = (_QWORD *)((char *)v10 + v8[7]);
  *v14 = swift_getKeyPath(&unk_100ED00B0);
  v15 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  swift_storeEnumTagMultiPayload(v14, v15, 0);
  *v10 = v18;
  sub_10005B6C0((uint64_t)v13, (uint64_t)v10 + v8[5], type metadata accessor for SharePlayTogetherSession.Participant);
  *((_BYTE *)v10 + v8[6]) = a3;
  sub_10005B6C0((uint64_t)v10, a4, type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView);
  return v18;
}

uint64_t sub_1007BAB8C@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t v23;
  uint64_t *v24;
  __n128 v25;
  id v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[2];
  unsigned __int8 v41;

  v37 = a1;
  v39 = a2;
  v36 = sub_100007E8C(&qword_1011C8ED0);
  v2 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_100007E8C((uint64_t *)&unk_1011C8EC0);
  __chkstk_darwin(v35);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_100007E8C(&qword_1011C8EA8);
  __chkstk_darwin(v38);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = LocalizedStringKey.init(stringLiteral:)(0xD00000000000001FLL, 0x8000000100E454C0);
  v33 = v11;
  v34 = v10;
  v13 = v12;
  type metadata accessor for MainActor(0);
  v15 = static MainActor.shared.getter(v14);
  v16 = swift_allocObject(&unk_1010DC498, 32, 7);
  *(_QWORD *)(v16 + 16) = v15;
  *(_QWORD *)(v16 + 24) = &protocol witness table for MainActor;
  v18 = static MainActor.shared.getter(v17);
  v19 = swift_allocObject(&unk_1010DC4C0, 32, 7);
  *(_QWORD *)(v19 + 16) = v18;
  *(_QWORD *)(v19 + 24) = &protocol witness table for MainActor;
  Binding.init(get:set:)(v40, sub_1007C4F24, v16, sub_1007C4F48, v19, &type metadata for Bool);
  v20 = Toggle<>.init(_:isOn:)(v9, v34, v13 & 1, v33, v40[0], v40[1], v41);
  v21 = static Font.subheadline.getter(v20);
  KeyPath = swift_getKeyPath(&unk_100ED0050);
  v23 = v36;
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v6, v4, v36);
  v24 = (uint64_t *)&v6[*(int *)(v35 + 36)];
  *v24 = KeyPath;
  v24[1] = v21;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v23);
  if ((v37 & 1) != 0)
  {
    v26 = objc_msgSend((id)objc_opt_self(UIColor), "_carSystemFocusPrimaryColor");
    v28 = Color.init(uiColor:)(v26, v27);
  }
  else
  {
    v28 = static Color.primary.getter(v25);
  }
  v29 = v28;
  v30 = swift_getKeyPath(&unk_100ED0080);
  sub_10004A160((uint64_t)v6, (uint64_t)v8, (uint64_t *)&unk_1011C8EC0);
  v31 = (uint64_t *)&v8[*(int *)(v38 + 36)];
  *v31 = v30;
  v31[1] = v29;
  sub_10004FF60((uint64_t)v6, (uint64_t *)&unk_1011C8EC0);
  return sub_100065228((uint64_t)v8, v39, &qword_1011C8EA8);
}

uint64_t sub_1007BAE2C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t v37;
  char *v38;
  uint64_t KeyPath;
  __n128 v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char *v47;
  uint64_t v48;
  __n128 v49;
  _OWORD *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD v76[3];
  uint64_t v77;
  char *v78;
  void *v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _BYTE v94[280];
  _QWORD v95[35];
  _QWORD v96[5];
  __int128 v97;
  __int128 v98;
  uint64_t v99;
  _OWORD v100[2];
  uint64_t v101;
  __int128 v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  _OWORD v115[7];
  _OWORD v116[2];
  _OWORD v117[9];
  char v118;
  _BYTE v119[296];

  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v90 = (char *)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v83);
  v84 = (char *)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011C94D8);
  v81 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v80 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011C94E0);
  v85 = *(_QWORD *)(v12 - 8);
  v86 = v12;
  __chkstk_darwin(v12);
  v82 = (char *)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = sub_100007E8C(&qword_1011C94E8);
  __chkstk_darwin(v88);
  v89 = (char *)&v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(&qword_1011C94F0);
  v91 = *(_QWORD *)(v15 - 8);
  v92 = v15;
  __chkstk_darwin(v15);
  v87 = (char *)&v77 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C(&qword_1011C94F8);
  __chkstk_darwin(v17);
  v93 = (uint64_t)&v77 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v77 - v20;
  v23 = static HorizontalAlignment.center.getter(v22);
  sub_1007BB5CC((uint64_t)v115);
  *(_OWORD *)((char *)&v117[6] + 7) = v115[6];
  *(_OWORD *)((char *)&v117[5] + 7) = v115[5];
  *(_OWORD *)((char *)&v117[2] + 7) = v115[2];
  *(_OWORD *)((char *)&v117[1] + 7) = v115[1];
  *(_OWORD *)((char *)&v117[7] + 7) = v116[0];
  v117[8] = *(_OWORD *)((char *)v116 + 9);
  *(_OWORD *)((char *)&v117[3] + 7) = v115[3];
  *(_OWORD *)((char *)&v117[4] + 7) = v115[4];
  *(_OWORD *)((char *)v117 + 7) = v115[0];
  v111 = v117[5];
  v112 = v117[6];
  v113 = v117[7];
  v114 = *(_OWORD *)((char *)v116 + 9);
  v107 = v117[1];
  v108 = v117[2];
  v109 = v117[3];
  v110 = v117[4];
  v118 = 0;
  v103 = v23;
  v104 = 0x4014000000000000;
  v105 = 0;
  v106 = v117[0];
  v25 = static Alignment.center.getter(v24);
  v26 = 1;
  sub_10014BFA0(0, 1, 0.0, 1, INFINITY, 0, 0, 1, (uint64_t)v119, v28, 0.0, 1, 0.0, 1, v25, v27);
  v29 = sub_1007C7C60((uint64_t)v115);
  v30 = *(_QWORD **)a1;
  (*(void (**)(_QWORD *__return_ptr, uint64_t))((swift_isaMask & **(_QWORD **)a1) + 0x258))(v96, v29);
  sub_100065228((uint64_t)v96, (uint64_t)&v97, &qword_1011C8F00);
  if (*((_QWORD *)&v98 + 1))
  {
    v77 = v10;
    v78 = v6;
    v100[0] = v97;
    v100[1] = v98;
    v101 = v99;
    v102 = *(_OWORD *)(a1 + 8);
    v31 = *(_QWORD *)(a1 + 24);
    v32 = *(_QWORD *)(a1 + 32);
    v33 = swift_allocObject(&unk_1010DC948, 56, 7);
    v79 = a2;
    v34 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v33 + 16) = *(_OWORD *)a1;
    *(_OWORD *)(v33 + 32) = v34;
    *(_QWORD *)(v33 + 48) = *(_QWORD *)(a1 + 32);
    __chkstk_darwin(v33);
    v76[2] = v100;
    v35 = v30;
    sub_1003E3468((uint64_t)&v102);
    sub_100048AAC(v31, v32);
    v36 = sub_100007E8C(&qword_1011C9508);
    v37 = sub_1007C7DDC();
    v38 = v80;
    Button.init(action:label:)(sub_1007C7DAC, v33, sub_1007C7DD4, v76, v36, v37);
    KeyPath = swift_getKeyPath(&unk_100ED0310);
    v41 = static Color.primary.getter(v40);
    v42 = (void *)objc_opt_self(UIColor);
    v43 = Color.init(_:)(objc_msgSend(v42, "systemBackgroundColor"));
    v44 = Color.init(_:)(objc_msgSend(v42, "_carSystemFocusColor"));
    v95[0] = KeyPath;
    LOBYTE(v95[1]) = 0;
    v95[2] = v41;
    v95[3] = v43;
    v95[4] = 0;
    v95[5] = v44;
    v45 = sub_100049F28(&qword_1011C9528, &qword_1011C94D8, (uint64_t)&protocol conformance descriptor for Button<A>);
    v46 = sub_1007C7884();
    v47 = v82;
    v48 = v77;
    View.buttonStyle<A>(_:)(v95, v77, &type metadata for SharePlayTogetherSessionManagementViewController.FocusableButtonStyle, v45, v46);
    swift_release();
    swift_release();
    swift_release();
    v49 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v81 + 8))(v38, v48, v49);
    v50 = v84;
    v51 = &v84[*(int *)(v83 + 20)];
    v52 = enum case for RoundedCornerStyle.continuous(_:);
    v53 = type metadata accessor for RoundedCornerStyle(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 104))(v51, v52, v53);
    __asm { FMOV            V0.2D, #8.0 }
    *v50 = _Q0;
    v60 = v88;
    v59 = (uint64_t)v89;
    v61 = (uint64_t)&v89[*(int *)(v88 + 36)];
    sub_10005B704((uint64_t)v50, v61, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
    *(_WORD *)(v61 + *(int *)(sub_100007E8C((uint64_t *)&unk_1011C9530) + 36)) = 256;
    v63 = v85;
    v62 = v86;
    (*(void (**)(uint64_t, char *, uint64_t))(v85 + 16))(v59, v47, v86);
    sub_10005B748((uint64_t)v50, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v47, v62);
    v64 = sub_100007E8C((uint64_t *)&unk_1011A6110);
    v65 = swift_allocObject(v64, 48, 7);
    *(_OWORD *)(v65 + 16) = xmmword_100EA7AA0;
    v66 = v90;
    v67 = String.LocalizationValue.init(stringLiteral:)(0x65646F43205251, 0xE700000000000000);
    v68 = v78;
    static Locale.current.getter(v67);
    *(_QWORD *)(v65 + 32) = String.init(localized:table:bundle:locale:comment:)(v66, 0, 0, 0, v68, 0, 0, 256);
    *(_QWORD *)(v65 + 40) = v69;
    v70 = sub_1007C7E60();
    v71 = sub_100055B68();
    v72 = (uint64_t)v87;
    View.accessibilityInputLabels<A>(_:)(v65, v60, &type metadata for String, v70, v71);
    sub_1007C5020((uint64_t)v96);
    a2 = v79;
    swift_bridgeObjectRelease();
    sub_10004FF60(v59, &qword_1011C94E8);
    sub_100065228(v72, (uint64_t)v21, &qword_1011C94F0);
    v26 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v91 + 56))(v21, v26, 1, v92);
  v73 = v93;
  sub_10004A160((uint64_t)v21, v93, &qword_1011C94F8);
  memcpy(v94, v119, sizeof(v94));
  memcpy(a2, v119, 0x118uLL);
  v74 = sub_100007E8C(&qword_1011C9500);
  sub_10004A160(v73, (uint64_t)a2 + *(int *)(v74 + 48), &qword_1011C94F8);
  sub_100154674((uint64_t)v94);
  sub_10004FF60((uint64_t)v21, &qword_1011C94F8);
  sub_10004FF60(v73, &qword_1011C94F8);
  memcpy(v95, v119, sizeof(v95));
  return sub_1007C7CE8((uint64_t)v95);
}

void sub_1007BB5CC(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  uint64_t v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  _BYTE *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  __n128 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  int v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _BYTE v84[12];
  int v85;
  _BYTE *v86;
  _BYTE *v87;
  int v88;
  uint64_t KeyPath;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  _BYTE v97[7];
  char v98;
  _BYTE v99[7];
  char v100;
  _BYTE v101[7];
  _BYTE v102[7];
  char v103;

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = &v84[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v87 = v4;
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v7 = &v84[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v86 = v7;
  v8 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000003CLL, 0x8000000100E45AA0);
  static Locale.current.getter(v8);
  v95 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, 0, 0, 256);
  v96 = v9;
  v90 = sub_100055B68();
  v10 = Text.init<A>(_:)(&v95, &type metadata for String, v90);
  v12 = v11;
  v14 = v13;
  v16 = v15 & 1;
  v17 = static Font.footnote.getter(v10);
  v18 = Text.font(_:)(v17, v10, v12, v16, v14);
  v20 = v19;
  v22 = v21;
  v24 = v23;
  swift_release();
  v25 = v22 & 1;
  sub_100055BAC(v10, v12, v16);
  swift_bridgeObjectRelease();
  v27 = static Font.Weight.semibold.getter(v26);
  v28 = Text.fontWeight(_:)(*(_QWORD *)&v27, 0, v18, v20, v25, v24);
  v30 = v29;
  v32 = v31;
  v34 = v33 & 1;
  sub_100055BAC(v18, v20, v25);
  v35 = swift_bridgeObjectRelease();
  v36 = static Color.primary.getter(v35);
  v37 = Text.foregroundColor(_:)(v36, v28, v30, v34, v32);
  v91 = v38;
  v92 = v37;
  v40 = v39;
  v93 = v41;
  swift_release();
  v85 = v40 & 1;
  sub_100055BAC(v28, v30, v34);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath(&unk_100ED03A0);
  v88 = static Edge.Set.horizontal.getter(KeyPath);
  v42 = EdgeInsets.init(_all:)(12.0);
  v44 = v43;
  v46 = v45;
  v48 = v47;
  v49 = v86;
  v50 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000018, 0x8000000100E45AE0);
  v51 = v87;
  static Locale.current.getter(v50);
  v95 = String.init(localized:table:bundle:locale:comment:)(v49, 0, 0, 0, v51, 0, 0, 256);
  v96 = v52;
  v53 = Text.init<A>(_:)(&v95, &type metadata for String, v90);
  v55 = v54;
  v57 = v56;
  v59 = v58 & 1;
  v61 = static Font.caption.getter(v60);
  v62 = Text.font(_:)(v61, v53, v55, v59, v57);
  v64 = v63;
  LOBYTE(v20) = v65;
  v67 = v66;
  swift_release();
  LOBYTE(v24) = v20 & 1;
  sub_100055BAC(v53, v55, v59);
  v68 = swift_bridgeObjectRelease();
  v69 = static Color.primary.getter(v68);
  v70 = Text.foregroundColor(_:)(v69, v62, v64, v20 & 1, v67);
  v72 = v71;
  LOBYTE(v55) = v73;
  v75 = v74;
  swift_release();
  LOBYTE(v55) = v55 & 1;
  sub_100055BAC(v62, v64, v24);
  swift_bridgeObjectRelease();
  v76 = swift_getKeyPath(&unk_100ED03A0);
  v77 = v85;
  v94 = v85;
  v103 = v85;
  v100 = 0;
  v98 = v55;
  *(_DWORD *)(a1 + 17) = v95;
  *(_DWORD *)(a1 + 20) = *(_DWORD *)((char *)&v95 + 3);
  *(_DWORD *)(a1 + 41) = *(_DWORD *)v102;
  *(_DWORD *)(a1 + 44) = *(_DWORD *)&v102[3];
  *(_DWORD *)(a1 + 49) = *(_DWORD *)v101;
  *(_DWORD *)(a1 + 52) = *(_DWORD *)&v101[3];
  v78 = *(_DWORD *)v99;
  *(_DWORD *)(a1 + 92) = *(_DWORD *)&v99[3];
  *(_DWORD *)(a1 + 89) = v78;
  v79 = *(_DWORD *)v97;
  *(_DWORD *)(a1 + 116) = *(_DWORD *)&v97[3];
  *(_DWORD *)(a1 + 113) = v79;
  v81 = v91;
  v80 = v92;
  *(_QWORD *)a1 = v92;
  *(_QWORD *)(a1 + 8) = v81;
  *(_BYTE *)(a1 + 16) = v77;
  v82 = KeyPath;
  *(_QWORD *)(a1 + 24) = v93;
  *(_QWORD *)(a1 + 32) = v82;
  *(_BYTE *)(a1 + 40) = 1;
  *(_BYTE *)(a1 + 48) = v88;
  *(double *)(a1 + 56) = v42;
  *(_QWORD *)(a1 + 64) = v44;
  *(_QWORD *)(a1 + 72) = v46;
  *(_QWORD *)(a1 + 80) = v48;
  *(_BYTE *)(a1 + 88) = 0;
  *(_QWORD *)(a1 + 96) = v70;
  *(_QWORD *)(a1 + 104) = v72;
  *(_BYTE *)(a1 + 112) = v55;
  *(_QWORD *)(a1 + 120) = v75;
  *(_QWORD *)(a1 + 128) = v76;
  *(_BYTE *)(a1 + 136) = 1;
  v83 = v80;
  sub_100055BBC(v80, v81, v77);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100055BBC(v70, v72, v55);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100055BAC(v70, v72, v55);
  swift_release();
  swift_bridgeObjectRelease();
  sub_100055BAC(v83, v81, v94);
  swift_release();
  swift_bridgeObjectRelease();
}

double sub_1007BBAA8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  double result;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  __int128 v30;

  v4 = static VerticalAlignment.center.getter(a1);
  v5 = *(void **)(a1 + 24);
  v6 = QRCodeOverlayViewController.ImageViewRepresentable.init(image:)();
  v8 = v7;
  v10 = v9;
  LOBYTE(v5) = static Edge.Set.all.getter(v5);
  v11 = EdgeInsets.init(_all:)(5.0);
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v19 = static Alignment.center.getter(v18);
  _FrameLayout.init(width:height:alignment:)(&v26, 0x4054000000000000, 0, 0x4054000000000000, 0, v19, v20);
  v21 = v26;
  v22 = v27;
  v23 = v28;
  v24 = v29;
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  *(_QWORD *)(a2 + 24) = v6;
  *(_BYTE *)(a2 + 32) = v8 & 1;
  *(_QWORD *)(a2 + 40) = v10;
  *(_BYTE *)(a2 + 48) = (_BYTE)v5;
  *(double *)(a2 + 56) = v11;
  *(_QWORD *)(a2 + 64) = v13;
  *(_QWORD *)(a2 + 72) = v15;
  *(_QWORD *)(a2 + 80) = v17;
  *(_BYTE *)(a2 + 88) = 0;
  *(_QWORD *)(a2 + 96) = v21;
  *(_BYTE *)(a2 + 104) = v22;
  *(_QWORD *)(a2 + 112) = v23;
  *(_BYTE *)(a2 + 120) = v24;
  result = *(double *)&v30;
  *(_OWORD *)(a2 + 128) = v30;
  return result;
}

uint64_t sub_1007BBBC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int128 v4;
  uint64_t v5;
  _OWORD v7[2];
  uint64_t v8;

  v4 = *(_OWORD *)(v2 + 16);
  v7[0] = *(_OWORD *)v2;
  v7[1] = v4;
  v8 = *(_QWORD *)(v2 + 32);
  *(_QWORD *)a2 = static VerticalAlignment.center.getter(a1);
  *(_QWORD *)(a2 + 8) = 0x4024000000000000;
  *(_BYTE *)(a2 + 16) = 0;
  v5 = sub_100007E8C(&qword_1011C94D0);
  return sub_1007BAE2C((uint64_t)v7, (void *)(a2 + *(int *)(v5 + 44)));
}

uint64_t sub_1007BBC24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  double v28;
  char v29;
  double v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;

  v45 = a1;
  v2 = sub_100007E8C(&qword_1011C93B0);
  __chkstk_darwin(v2);
  v4 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011C93B8);
  __chkstk_darwin(v5);
  v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C((uint64_t *)&unk_1011C93C0);
  __chkstk_darwin(v8);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011A2DB8);
  __chkstk_darwin(v11);
  v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10119C7F0 != -1)
    v12 = swift_once(&qword_10119C7F0, sub_1007BE068);
  v15 = qword_10124D9E0;
  *(_QWORD *)v4 = static VerticalAlignment.center.getter(v12);
  *((_QWORD *)v4 + 1) = v15;
  v4[16] = 0;
  v16 = sub_100007E8C(&qword_1011C93D0);
  v17 = sub_1007BBF64(v1, (uint64_t)&v4[*(int *)(v16 + 44)]);
  v18 = static Edge.Set.leading.getter(v17);
  v19 = 8.0;
  if ((*(_BYTE *)(v1 + 16) & 1) == 0)
  {
    if (qword_10119C7E8 != -1)
      swift_once(&qword_10119C7E8, sub_1007B2980);
    v19 = *((double *)&xmmword_1011C8C80 + 1);
  }
  v20 = EdgeInsets.init(_all:)(v19);
  v22 = v21;
  v24 = v23;
  v26 = v25;
  sub_10004A160((uint64_t)v4, (uint64_t)v7, &qword_1011C93B0);
  v27 = &v7[*(int *)(v5 + 36)];
  *v27 = v18;
  *((double *)v27 + 1) = v20;
  *((_QWORD *)v27 + 2) = v22;
  *((_QWORD *)v27 + 3) = v24;
  *((_QWORD *)v27 + 4) = v26;
  v27[40] = 0;
  sub_10004FF60((uint64_t)v4, &qword_1011C93B0);
  v29 = static Edge.Set.trailing.getter(v28);
  v30 = 4.0;
  if ((*(_BYTE *)(v1 + 16) & 1) == 0)
  {
    if (qword_10119C7E8 != -1)
      swift_once(&qword_10119C7E8, sub_1007B2980);
    v30 = *((double *)&xmmword_1011C8C80 + 1);
  }
  v31 = EdgeInsets.init(_all:)(v30);
  v33 = v32;
  v35 = v34;
  v37 = v36;
  sub_10004A160((uint64_t)v7, (uint64_t)v10, &qword_1011C93B8);
  v38 = &v10[*(int *)(v8 + 36)];
  *v38 = v29;
  *((double *)v38 + 1) = v31;
  *((_QWORD *)v38 + 2) = v33;
  *((_QWORD *)v38 + 3) = v35;
  *((_QWORD *)v38 + 4) = v37;
  v38[40] = 0;
  v39 = sub_10004FF60((uint64_t)v7, &qword_1011C93B8);
  if (*(_BYTE *)(v1 + 16))
    v40 = 44.0;
  else
    v40 = 60.0;
  v41 = static Alignment.center.getter(v39);
  sub_10014C174(0.0, 1, 0.0, 1, 0.0, 1, v40, 0, (uint64_t)v14, 0.0, 1, 0.0, 1, v41, v42);
  sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_1011C93C0);
  return sub_100065228((uint64_t)v14, v45, &qword_1011A2DB8);
}

uint64_t sub_1007BBF64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  __int128 v28;
  uint64_t v29;
  char v30;
  uint64_t (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  int v47;
  unsigned __int8 v48;
  double v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  int v59;
  unsigned __int8 v60;
  BOOL v61;
  BOOL v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v71;
  uint64_t v72;
  int v73;
  char *v74;
  __int128 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _OWORD v79[3];
  char v80[8];
  __int128 v81;
  uint64_t v82;
  unsigned __int8 v83;
  uint64_t v84;
  uint64_t v85;

  v78 = a2;
  v74 = (char *)type metadata accessor for SharePlayTogetherSessionManagementViewController.StatusHeaderView(0);
  *(_QWORD *)&v75 = *((_QWORD *)v74 - 1);
  __chkstk_darwin(v74);
  v76 = v3;
  v4 = (char *)&v71 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DynamicTypeSize(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011C93D8);
  __chkstk_darwin(v9);
  v11 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011C93E0);
  __chkstk_darwin(v12);
  v77 = (uint64_t)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v71 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v71 - v18;
  *(_QWORD *)v11 = static VerticalAlignment.center.getter(v20);
  *((_QWORD *)v11 + 1) = 0;
  v11[16] = 1;
  v21 = sub_100007E8C(&qword_1011C93E8);
  v22 = sub_1007BC4A4(a1, &v11[*(int *)(v21 + 44)]);
  if (*(_BYTE *)(a1 + 16) == 1)
  {
    if (qword_10119C800 != -1)
      v22 = swift_once(&qword_10119C800, sub_1007BE0A8);
    v23 = &qword_10124D9F0;
  }
  else
  {
    if (qword_10119C7F8 != -1)
      v22 = swift_once(&qword_10119C7F8, sub_1007BE088);
    v23 = &qword_10124D9E8;
  }
  v24 = *v23;
  v25 = static Alignment.center.getter(v22);
  _FrameLayout.init(width:height:alignment:)(v79, v24, 0, 0, 1, v25, v26);
  sub_10004A160((uint64_t)v11, (uint64_t)v16, &qword_1011C93D8);
  v27 = &v16[*(int *)(v12 + 36)];
  v28 = v79[1];
  *(_OWORD *)v27 = v79[0];
  *((_OWORD *)v27 + 1) = v28;
  *((_OWORD *)v27 + 2) = v79[2];
  sub_10004FF60((uint64_t)v11, &qword_1011C93D8);
  sub_100065228((uint64_t)v16, (uint64_t)v19, &qword_1011C93E0);
  v29 = sub_1008237B8((uint64_t)v8);
  v30 = DynamicTypeSize.isAccessibilitySize.getter(v29);
  v74 = v19;
  v31 = *(uint64_t (**)(char *, uint64_t))(v6 + 8);
  v32 = v31(v8, v5);
  v33 = static Alignment.leading.getter(v32);
  v35 = v34;
  sub_10005B704(a1, (uint64_t)v4, type metadata accessor for SharePlayTogetherSessionManagementViewController.StatusHeaderView);
  v36 = *(unsigned __int8 *)(v75 + 80);
  v72 = v5;
  v37 = (v36 + 16) & ~v36;
  v38 = swift_allocObject(&unk_1010DC8D0, v37 + v76, v36 | 7);
  sub_10005B6C0((uint64_t)v4, v38 + v37, type metadata accessor for SharePlayTogetherSessionManagementViewController.StatusHeaderView);
  sub_100007E8C(&qword_1011C93F0);
  sub_100049F28(&qword_1011C93F8, &qword_1011C93F0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  v39 = AxisStack.init(axis:alignment:spacing:content:)(v30 & 1, v33, v35, 0, 1, (uint64_t)sub_1007C798C, v38, (uint64_t)v80);
  LODWORD(v76) = v80[0];
  v75 = v81;
  v40 = v82;
  v73 = v83;
  v42 = v84;
  v41 = v85;
  v43 = static Edge.Set.bottom.getter(v39);
  v44 = sub_1008237B8((uint64_t)v8);
  v45 = DynamicTypeSize.isAccessibilitySize.getter(v44);
  v46 = v72;
  v31(v8, v72);
  v47 = Axis.rawValue.getter(v45 & 1);
  v48 = Axis.rawValue.getter(1);
  v49 = 0.0;
  if (v47 == v48)
    v49 = 8.0;
  v50 = EdgeInsets.init(_all:)(v49);
  v52 = v51;
  v54 = v53;
  v56 = v55;
  v57 = sub_1008237B8((uint64_t)v8);
  v58 = DynamicTypeSize.isAccessibilitySize.getter(v57);
  v31(v8, v46);
  v59 = Axis.rawValue.getter(v58 & 1);
  v60 = Axis.rawValue.getter(1);
  v61 = v59 == v60;
  v62 = v59 != v60;
  v63 = v61;
  v64 = (uint64_t)v74;
  v65 = v77;
  sub_10004A160((uint64_t)v74, v77, &qword_1011C93E0);
  v66 = v78;
  sub_10004A160(v65, v78, &qword_1011C93E0);
  v67 = sub_100007E8C(&qword_1011C9400);
  v68 = v66 + *(int *)(v67 + 48);
  *(_BYTE *)v68 = v76;
  *(_OWORD *)(v68 + 8) = v75;
  *(_QWORD *)(v68 + 24) = v40;
  *(_BYTE *)(v68 + 32) = v73;
  *(_QWORD *)(v68 + 40) = v42;
  *(_QWORD *)(v68 + 48) = v41;
  *(_BYTE *)(v68 + 56) = v43;
  *(double *)(v68 + 64) = v50;
  *(_QWORD *)(v68 + 72) = v52;
  *(_QWORD *)(v68 + 80) = v54;
  *(_QWORD *)(v68 + 88) = v56;
  *(_BYTE *)(v68 + 96) = 0;
  v69 = v66 + *(int *)(v67 + 64);
  *(_QWORD *)v69 = 0;
  *(_BYTE *)(v69 + 8) = v63;
  *(_BYTE *)(v69 + 9) = v62;
  swift_retain();
  sub_10004FF60(v64, &qword_1011C93E0);
  swift_release();
  return sub_10004FF60(v65, &qword_1011C93E0);
}

uint64_t sub_1007BC4A4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t (*v21)(void);
  _QWORD *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t KeyPath;
  unsigned int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  unint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  void (*v39)(char *, char *, uint64_t);
  char *v40;
  _QWORD *v41;
  uint64_t v42;
  char *v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;

  v51 = a2;
  v50 = sub_100007E8C(&qword_1011C92A0);
  __chkstk_darwin(v50);
  v53 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_100007E8C((uint64_t *)&unk_1011C94A0);
  __chkstk_darwin(v52);
  v5 = (uint64_t *)((char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = type metadata accessor for Image.Scale(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_100007E8C(&qword_1011BE2D8);
  __chkstk_darwin(v54);
  v11 = (uint64_t *)((char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = sub_100007E8C((uint64_t *)&unk_1011C94B0);
  v49 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v48 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v46 = (char *)&v45 - v15;
  __chkstk_darwin(v16);
  v47 = (char *)&v45 - v17;
  if ((*(_BYTE *)(a1 + 16) & 1) != 0)
  {
    v18 = 0xED00006C6C69662ELL;
    v19 = 0x322E6E6F73726570;
  }
  else
  {
    v20 = *(_QWORD **)(a1 + 8);
    v21 = *(uint64_t (**)(void))((swift_isaMask & *v20) + 0x150);
    v22 = v20;
    v19 = v21();
    v18 = v23;

  }
  v24 = Image.init(_internalSystemName:)(v19, v18);
  v25 = static Font.title3.getter(v24);
  KeyPath = swift_getKeyPath(&unk_100ED0050);
  if (*(_BYTE *)(a1 + 16))
    v27 = (unsigned int *)&enum case for Image.Scale.medium(_:);
  else
    v27 = (unsigned int *)&enum case for Image.Scale.large(_:);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *v27, v6);
  v28 = swift_getKeyPath(&unk_100ED0370);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))((char *)v5 + *(int *)(v52 + 28), v9, v6);
  *v5 = v28;
  sub_10004A160((uint64_t)v5, (uint64_t)v11 + *(int *)(v54 + 36), (uint64_t *)&unk_1011C94A0);
  *v11 = v24;
  v11[1] = KeyPath;
  v11[2] = v25;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10004FF60((uint64_t)v5, (uint64_t *)&unk_1011C94A0);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_release();
  swift_release();
  swift_release();
  v29 = enum case for DynamicTypeSize.large(_:);
  v30 = type metadata accessor for DynamicTypeSize(0);
  v31 = (uint64_t)v53;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v53, v29, v30);
  v32 = sub_100048748((unint64_t *)&qword_1011A5A50, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  result = dispatch thunk of static Equatable.== infix(_:_:)(v31, v31, v30, v32);
  if ((result & 1) != 0)
  {
    v34 = sub_100629D70();
    v35 = sub_100049F28(&qword_1011A5A80, &qword_1011C92A0, (uint64_t)&protocol conformance descriptor for PartialRangeThrough<A>);
    v36 = v46;
    View.dynamicTypeSize<A>(_:)(v31, v54, v50, v34, v35);
    sub_10004FF60(v31, &qword_1011C92A0);
    sub_10004FF60((uint64_t)v11, &qword_1011BE2D8);
    v37 = v49;
    v38 = v47;
    (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v47, v36, v12);
    v39 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
    v40 = v48;
    v39(v48, v38, v12);
    v41 = v51;
    *v51 = 0;
    *((_BYTE *)v41 + 8) = 1;
    v42 = sub_100007E8C(&qword_1011C94C8);
    v39((char *)v41 + *(int *)(v42 + 48), v40, v12);
    v43 = (char *)v41 + *(int *)(v42 + 64);
    *(_QWORD *)v43 = 0;
    v43[8] = 1;
    v44 = *(void (**)(char *, uint64_t))(v37 + 8);
    v44(v38, v12);
    return ((uint64_t (*)(char *, uint64_t))v44)(v40, v12);
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_1007BC92C@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  char v36;
  void *v37;
  _QWORD *v38;
  uint64_t (*v39)(void);
  _QWORD *v40;
  uint64_t v41;
  uint64_t (*v42)(void);
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t KeyPath;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char *v58;
  uint64_t v59;
  __n128 v60;
  uint64_t OpaqueTypeConformance2;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  char *v87;
  uint64_t v88;
  __n128 v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char v133;
  uint64_t v134;
  uint64_t v135;
  char v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  char *v144;
  char *v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  int v165;
  int v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  ValueMetadata *v173;
  uint64_t *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  ValueMetadata *v183;
  uint64_t v184;
  unint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;

  v174 = a2;
  v162 = sub_100007E8C(&qword_1011C9408);
  __chkstk_darwin(v162);
  v163 = (uint64_t)&v140 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Capsule(0);
  __chkstk_darwin(v4);
  v150 = (char *)&v140 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v151);
  v149 = (char *)&v140 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SharePlayTogetherSessionManagementViewController.StatusHeaderView(0);
  v152 = *(_QWORD *)(v7 - 8);
  v8 = *(_QWORD *)(v152 + 64);
  __chkstk_darwin(v7);
  v155 = sub_100007E8C(&qword_1011C9410);
  v154 = *(_QWORD *)(v155 - 8);
  __chkstk_darwin(v155);
  v153 = (char *)&v140 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v158 = sub_100007E8C(&qword_1011C9418);
  v157 = *(_QWORD *)(v158 - 8);
  __chkstk_darwin(v158);
  v156 = (char *)&v140 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v160 = sub_100007E8C(&qword_1011C9420);
  v159 = *(_QWORD *)(v160 - 8);
  __chkstk_darwin(v160);
  v147 = (char *)&v140 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v145 = (char *)&v140 - v13;
  v14 = sub_100007E8C(&qword_1011C9428);
  __chkstk_darwin(v14);
  v144 = (char *)&v140 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v148 = (uint64_t)&v140 - v17;
  __chkstk_darwin(v18);
  v143 = (char *)&v140 - v19;
  __chkstk_darwin(v20);
  v146 = (uint64_t)&v140 - v21;
  v22 = sub_100007E8C(&qword_1011C9430);
  v169 = *(_QWORD *)(v22 - 8);
  v170 = v22;
  __chkstk_darwin(v22);
  v161 = (char *)&v140 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_100007E8C(&qword_1011C9438);
  __chkstk_darwin(v24);
  v179 = (uint64_t)&v140 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v28 = (char *)&v140 - v27;
  v29 = type metadata accessor for DynamicTypeSize(0);
  v30 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  v32 = (char *)&v140 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v168 = static HorizontalAlignment.leading.getter(v33);
  sub_1007BD788(a1, &v182, v34);
  v167 = v182;
  v172 = v184;
  v173 = v183;
  v171 = v185;
  v177 = v187;
  v178 = v186;
  v175 = v189;
  v176 = v188;
  v35 = sub_1008237B8((uint64_t)v32);
  v36 = DynamicTypeSize.isAccessibilitySize.getter(v35);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v29);
  v166 = Axis.rawValue.getter(v36 & 1);
  v165 = Axis.rawValue.getter(0);
  v37 = (void *)objc_opt_self(UIColor);
  v181 = Color.init(_:)(objc_msgSend(v37, "_carSystemFocusColor"));
  v164 = a1;
  v38 = *(_QWORD **)(a1 + 8);
  v39 = *(uint64_t (**)(void))((swift_isaMask & *v38) + 0x268);
  v40 = v38;
  LOBYTE(v39) = v39();

  v41 = 1;
  v180 = v28;
  if ((v39 & 1) != 0)
  {
    v141 = v4;
    v142 = v14;
    v42 = *(uint64_t (**)(void))((swift_isaMask & *v40) + 0x118);
    v43 = v40;
    LOBYTE(v42) = v42();

    sub_10005B704(v164, (uint64_t)&v140 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SharePlayTogetherSessionManagementViewController.StatusHeaderView);
    v44 = *(unsigned __int8 *)(v152 + 80);
    v45 = (v44 + 16) & ~v44;
    v46 = v45 + v8;
    v47 = v44 | 7;
    if ((v42 & 1) != 0)
    {
      v48 = swift_allocObject(&unk_1010DC920, v46, v47);
      sub_10005B6C0((uint64_t)&v140 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v48 + v45, type metadata accessor for SharePlayTogetherSessionManagementViewController.StatusHeaderView);
      v49 = sub_100007E8C(&qword_1011C9448);
      v50 = sub_10005610C((unint64_t *)&unk_1011C9450, &qword_1011C9448, (void (*)(void))sub_10062D18C);
      v51 = v153;
      Button.init(action:label:)(sub_1007C7C2C, v48, sub_1007BDD38, 0, v49, v50);
      KeyPath = swift_getKeyPath(&unk_100ED0310);
      v152 = KeyPath;
      v53 = static Color.white.getter(KeyPath);
      v54 = Color.init(_:)(objc_msgSend(v37, "_carSystemFocusPrimaryColor"));
      v55 = static Color.red.getter();
      v182 = KeyPath;
      LOBYTE(v183) = 0;
      v184 = v53;
      v185 = v54;
      v186 = v55;
      v187 = v181;
      v56 = sub_100049F28(&qword_1011C9478, &qword_1011C9410, (uint64_t)&protocol conformance descriptor for Button<A>);
      v57 = sub_1007C7884();
      swift_retain();
      v58 = v156;
      v59 = v155;
      View.buttonStyle<A>(_:)(&v182, v155, &type metadata for SharePlayTogetherSessionManagementViewController.FocusableButtonStyle, v56, v57);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v60 = swift_release();
      (*(void (**)(char *, uint64_t, __n128))(v154 + 8))(v51, v59, v60);
      v182 = v59;
      v183 = &type metadata for SharePlayTogetherSessionManagementViewController.FocusableButtonStyle;
      v184 = v56;
      v185 = v57;
      OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v182, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
      v62 = v145;
      v63 = v158;
      View.bold(_:)(1, v158, OpaqueTypeConformance2);
      (*(void (**)(char *, uint64_t))(v157 + 8))(v58, v63);
      if (*(_BYTE *)(v164 + 16) == 1)
      {
        v64 = v151;
        v65 = v149;
        v66 = &v149[*(int *)(v151 + 20)];
        v67 = enum case for RoundedCornerStyle.continuous(_:);
        v68 = type metadata accessor for RoundedCornerStyle(0);
        (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 104))(v66, v67, v68);
        __asm { FMOV            V0.2D, #6.0 }
        *(_OWORD *)v65 = _Q0;
        v74 = sub_100048748(&qword_1011C9370, (uint64_t (*)(uint64_t))&type metadata accessor for RoundedRectangle, (uint64_t)&protocol conformance descriptor for RoundedRectangle);
        v75 = v65;
        v76 = v64;
      }
      else
      {
        v102 = enum case for RoundedCornerStyle.continuous(_:);
        v103 = type metadata accessor for RoundedCornerStyle(0);
        v104 = v150;
        (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 104))(v150, v102, v103);
        v74 = sub_100048748(&qword_1011C9480, (uint64_t (*)(uint64_t))&type metadata accessor for Capsule, (uint64_t)&protocol conformance descriptor for Capsule);
        v75 = v104;
        v76 = v141;
      }
      v105 = AnyShape.init<A>(_:)(v75, v76, v74);
      v28 = v180;
      v106 = v159;
      v107 = v143;
      v108 = v160;
      (*(void (**)(char *, char *, uint64_t))(v159 + 16))(v143, v62, v160);
      v109 = v142;
      v110 = &v107[*(int *)(v142 + 36)];
      *(_QWORD *)v110 = v105;
      *((_WORD *)v110 + 4) = 256;
      (*(void (**)(char *, uint64_t))(v106 + 8))(v62, v108);
      v111 = (uint64_t)v107;
      v112 = v146;
      sub_100065228(v111, v146, &qword_1011C9428);
      v113 = v163;
      sub_10004A160(v112, v163, &qword_1011C9428);
      v114 = v113;
      v115 = v162;
      v116 = 0;
    }
    else
    {
      v77 = swift_allocObject(&unk_1010DC8F8, v46, v47);
      sub_10005B6C0((uint64_t)&v140 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v77 + v45, type metadata accessor for SharePlayTogetherSessionManagementViewController.StatusHeaderView);
      v78 = sub_100007E8C(&qword_1011C9448);
      v79 = sub_10005610C((unint64_t *)&unk_1011C9450, &qword_1011C9448, (void (*)(void))sub_10062D18C);
      v80 = v153;
      Button.init(action:label:)(sub_1007C7AB4, v77, sub_1007BDD48, 0, v78, v79);
      v81 = swift_getKeyPath(&unk_100ED0310);
      v152 = v81;
      v82 = static Color.white.getter(v81);
      v83 = Color.init(_:)(objc_msgSend(v37, "_carSystemFocusPrimaryColor"));
      v84 = static Color.red.getter();
      v182 = v81;
      LOBYTE(v183) = 0;
      v184 = v82;
      v185 = v83;
      v186 = v84;
      v187 = v181;
      v85 = sub_100049F28(&qword_1011C9478, &qword_1011C9410, (uint64_t)&protocol conformance descriptor for Button<A>);
      v86 = sub_1007C7884();
      swift_retain();
      v87 = v156;
      v88 = v155;
      View.buttonStyle<A>(_:)(&v182, v155, &type metadata for SharePlayTogetherSessionManagementViewController.FocusableButtonStyle, v85, v86);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v89 = swift_release();
      (*(void (**)(char *, uint64_t, __n128))(v154 + 8))(v80, v88, v89);
      v182 = v88;
      v183 = &type metadata for SharePlayTogetherSessionManagementViewController.FocusableButtonStyle;
      v184 = v85;
      v185 = v86;
      v90 = swift_getOpaqueTypeConformance2(&v182, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
      v91 = v147;
      v92 = v158;
      View.bold(_:)(1, v158, v90);
      (*(void (**)(char *, uint64_t))(v157 + 8))(v87, v92);
      if (*(_BYTE *)(v164 + 16) == 1)
      {
        v93 = v151;
        v94 = v149;
        v95 = &v149[*(int *)(v151 + 20)];
        v96 = enum case for RoundedCornerStyle.continuous(_:);
        v97 = type metadata accessor for RoundedCornerStyle(0);
        (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v97 - 8) + 104))(v95, v96, v97);
        __asm { FMOV            V0.2D, #6.0 }
        *(_OWORD *)v94 = _Q0;
        v99 = sub_100048748(&qword_1011C9370, (uint64_t (*)(uint64_t))&type metadata accessor for RoundedRectangle, (uint64_t)&protocol conformance descriptor for RoundedRectangle);
        v100 = v94;
        v101 = v93;
      }
      else
      {
        v117 = enum case for RoundedCornerStyle.continuous(_:);
        v118 = type metadata accessor for RoundedCornerStyle(0);
        v119 = v150;
        (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v118 - 8) + 104))(v150, v117, v118);
        v99 = sub_100048748(&qword_1011C9480, (uint64_t (*)(uint64_t))&type metadata accessor for Capsule, (uint64_t)&protocol conformance descriptor for Capsule);
        v100 = v119;
        v101 = v141;
      }
      v120 = AnyShape.init<A>(_:)(v100, v101, v99);
      v28 = v180;
      v121 = v159;
      v122 = v144;
      v123 = v160;
      (*(void (**)(char *, char *, uint64_t))(v159 + 16))(v144, v91, v160);
      v109 = v142;
      v124 = &v122[*(int *)(v142 + 36)];
      *(_QWORD *)v124 = v120;
      *((_WORD *)v124 + 4) = 256;
      (*(void (**)(char *, uint64_t))(v121 + 8))(v91, v123);
      v125 = (uint64_t)v122;
      v112 = v148;
      sub_100065228(v125, v148, &qword_1011C9428);
      v113 = v163;
      sub_10004A160(v112, v163, &qword_1011C9428);
      v114 = v113;
      v115 = v162;
      v116 = 1;
    }
    swift_storeEnumTagMultiPayload(v114, v115, v116);
    v126 = sub_1007C7B20();
    v127 = (uint64_t)v161;
    _ConditionalContent<>.init(storage:)(v113, v109, v109, v126, v126);
    sub_10004FF60(v112, &qword_1011C9428);
    sub_100065228(v127, (uint64_t)v28, &qword_1011C9430);
    v41 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v169 + 56))(v28, v41, 1, v170);
  LODWORD(v170) = v166 != v165;
  LODWORD(v169) = v166 == v165;
  v128 = v179;
  sub_10004A160((uint64_t)v28, v179, &qword_1011C9438);
  v130 = (uint64_t)v173;
  v129 = v174;
  *v174 = v168;
  v129[1] = 0;
  *((_BYTE *)v129 + 16) = 1;
  v131 = v167;
  v129[3] = v167;
  v129[4] = v130;
  v132 = v171;
  v133 = v172;
  v129[5] = v172;
  v129[6] = v132;
  v135 = v177;
  v134 = v178;
  v129[7] = v178;
  v129[8] = v135;
  v137 = v175;
  v136 = v176;
  v129[9] = v176;
  v129[10] = v137;
  v129[11] = 0;
  *((_BYTE *)v129 + 96) = v169;
  *((_BYTE *)v129 + 97) = v170;
  v138 = sub_100007E8C(&qword_1011C9440);
  sub_10004A160(v128, (uint64_t)v129 + *(int *)(v138 + 64), &qword_1011C9438);
  sub_1000E4440(v131, v130, v133, v132);
  sub_1000E4440(v134, v135, v136, v137);
  sub_1000E4440(v131, v130, v133, v132);
  sub_1000E4440(v134, v135, v136, v137);
  swift_release();
  sub_10004FF60((uint64_t)v180, &qword_1011C9438);
  sub_1000E450C(v131, v130, v133, v132);
  sub_1000E450C(v134, v135, v136, v137);
  sub_10004FF60(v128, &qword_1011C9438);
  sub_1000E450C(v131, v130, v133, v132);
  return sub_1000E450C(v134, v135, v136, v137);
}

double sub_1007BD788@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X8>, __n128 a3@<Q0>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t (*v23)(void);
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  _QWORD *v35;
  uint64_t (*v36)(void);
  _QWORD *v37;
  _QWORD *v38;
  uint64_t (*v39)(void);
  _QWORD *v40;
  uint64_t v41;
  __n128 v42;
  Swift::String v43;
  _QWORD *v44;
  uint64_t v45;
  Swift::String v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  char v75;
  _QWORD *v77;
  uint64_t (*v78)(void);
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  _QWORD v86[3];

  v5 = type metadata accessor for LocalizedStringKey.StringInterpolation(0, a3);
  __chkstk_darwin(v5);
  v7 = (char *)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SharePlayTogetherSessionManagementViewController.StatusHeaderView(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v81 - v12;
  v14 = type metadata accessor for Locale(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v81 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v81 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v18) = *(_BYTE *)(a1 + 16);
  v85 = a2;
  if ((v18 & 1) != 0)
  {
    sub_10005B704(a1, (uint64_t)v13, type metadata accessor for SharePlayTogetherSessionManagementViewController.StatusHeaderView);
    sub_10005B748((uint64_t)v13, type metadata accessor for SharePlayTogetherSessionManagementViewController.StatusHeaderView);
    sub_10005B704(a1, (uint64_t)v10, type metadata accessor for SharePlayTogetherSessionManagementViewController.StatusHeaderView);
    v20 = 0;
    v83 = 0;
    v84 = 0;
    v21 = 0;
LABEL_6:
    sub_10005B748((uint64_t)v10, type metadata accessor for SharePlayTogetherSessionManagementViewController.StatusHeaderView);
    goto LABEL_7;
  }
  v22 = *(_QWORD **)(a1 + 8);
  v23 = *(uint64_t (**)(void))((swift_isaMask & *v22) + 0x128);
  v24 = v22;
  v25 = v23();
  v27 = v26;

  if (!v27)
  {
    v28 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000011, 0x8000000100E45A60);
    static Locale.current.getter(v28);
    v25 = String.init(localized:table:bundle:locale:comment:)(v19, v25, 0, 0, v16, 0, 0, 256);
    v27 = v29;
  }
  v86[0] = v25;
  v86[1] = v27;
  v30 = sub_100055B68();
  v31 = Text.init<A>(_:)(v86, &type metadata for String, v30);
  v21 = v32;
  v20 = v33;
  v83 = v34 & 1;
  v84 = v31;
  sub_10005B704(a1, (uint64_t)v13, type metadata accessor for SharePlayTogetherSessionManagementViewController.StatusHeaderView);
  v35 = (_QWORD *)*((_QWORD *)v13 + 1);
  v36 = *(uint64_t (**)(void))((swift_isaMask & *v35) + 0x268);
  v37 = v35;
  LOBYTE(v36) = v36();

  sub_10005B748((uint64_t)v13, type metadata accessor for SharePlayTogetherSessionManagementViewController.StatusHeaderView);
  sub_10005B704(a1, (uint64_t)v10, type metadata accessor for SharePlayTogetherSessionManagementViewController.StatusHeaderView);
  if ((v36 & 1) != 0)
    goto LABEL_6;
  v77 = (_QWORD *)*((_QWORD *)v10 + 1);
  v78 = *(uint64_t (**)(void))((swift_isaMask & *v77) + 0x1E0);
  v79 = v77;
  v80 = v78();

  sub_10005B748((uint64_t)v10, type metadata accessor for SharePlayTogetherSessionManagementViewController.StatusHeaderView);
  if (v80 < 1)
  {
    v66 = 0;
    v68 = 0;
    v72 = 0;
    v71 = 0;
    goto LABEL_11;
  }
LABEL_7:
  v38 = *(_QWORD **)(a1 + 8);
  v39 = *(uint64_t (**)(void))((swift_isaMask & *v38) + 0x1B0);
  v40 = v38;
  v41 = v39();

  v81 = v21;
  v82 = v20;
  if (v41 < 1)
  {
    v47 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000012, 0x8000000100E45A80);
  }
  else
  {
    LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)(15, 1, v42);
    v43._countAndFlagsBits = 0;
    v43._object = (void *)0xE000000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v43);
    v44 = v40;
    v45 = v39();

    v86[0] = v45;
    LocalizedStringKey.StringInterpolation.appendInterpolation<A>(_:specifier:)(v86, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
    v46._countAndFlagsBits = 0x6963697472615020;
    v46._object = (void *)0xEF297328746E6170;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v46);
    v47 = LocalizedStringKey.init(stringInterpolation:)(v7);
  }
  v48 = Text.init(_:tableName:bundle:comment:)(v47);
  v50 = v49;
  v52 = v51;
  v54 = v53 & 1;
  v55 = static Color.secondary.getter(v48);
  v56 = Text.foregroundColor(_:)(v55, v48, v50, v54, v52);
  v58 = v57;
  v60 = v59;
  v62 = v61;
  swift_release();
  v63 = v60 & 1;
  sub_100055BAC(v48, v50, v54);
  v64 = swift_bridgeObjectRelease();
  v65 = static Font.caption.getter(v64);
  v66 = Text.font(_:)(v65, v56, v58, v60 & 1, v62);
  v68 = v67;
  LOBYTE(v52) = v69;
  v71 = v70;
  swift_release();
  v72 = v52 & 1;
  sub_100055BAC(v56, v58, v63);
  swift_bridgeObjectRelease();
  v21 = v81;
  v20 = v82;
LABEL_11:
  v74 = v84;
  v73 = v85;
  *v85 = v84;
  v73[1] = v21;
  v75 = v83;
  v73[2] = v83;
  v73[3] = v20;
  v73[4] = v66;
  v73[5] = v68;
  v73[6] = v72;
  v73[7] = v71;
  sub_1000E4440(v74, v21, v75, v20);
  sub_1000E4440(v66, v68, v72, v71);
  sub_1000E450C(v66, v68, v72, v71);
  return sub_1000E450C(v74, v21, v75, v20);
}

void sub_1007BDCBC(uint64_t a1)
{
  _QWORD *v1;
  void (*v2)(void);
  void (*v3)(void);
  _QWORD *v4;

  if (*(_BYTE *)(a1 + 16) == 1)
  {
    v1 = *(_QWORD **)(a1 + 8);
    v2 = *(void (**)(void))((swift_isaMask & *v1) + 0x340);
    v4 = v1;
    v2();

  }
  else
  {
    v3 = *(void (**)(void))(a1 + 24);
    if (v3)
      v3();
  }
}

double sub_1007BDD38@<D0>(uint64_t a1@<X8>)
{
  return sub_1007BDD5C(6581829, 0xE300000000000000, a1);
}

double sub_1007BDD48@<D0>(uint64_t a1@<X8>)
{
  return sub_1007BDD5C(0x657661654CLL, 0xE500000000000000, a1);
}

double sub_1007BDD5C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  id v9;
  double v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  char v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  double result;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  char v76;
  double v77[3];

  v4 = LocalizedStringKey.init(stringLiteral:)(a1, a2);
  v5 = Text.init(_:tableName:bundle:comment:)(v4);
  v43 = v6;
  v44 = v5;
  v40 = v7;
  v42 = v8;
  v41 = static Edge.Set.horizontal.getter();
  v9 = objc_msgSend((id)objc_opt_self(UIFontMetrics), "defaultMetrics");
  objc_msgSend(v9, "scaledValueForValue:", 12.0);
  v11 = v10;

  v12 = EdgeInsets.init(_all:)(v11);
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v19 = ((uint64_t (*)(void))static Alignment.center.getter)();
  v21 = _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(&v51, 0, 1, 0, 1, 0, 1, 0x4042000000000000, 0, 0, 257, 0, 1, v19, v20);
  v22 = v52;
  v38 = v53;
  v39 = v51;
  v23 = v54;
  v24 = v55;
  v25 = v56;
  v26 = v57;
  v27 = v58;
  LOBYTE(v9) = v60;
  v36 = v61;
  v37 = v59;
  v28 = v62;
  v34 = v64;
  v35 = v63;
  v29 = static Alignment.center.getter(v21);
  LOBYTE(v33) = 1;
  LOBYTE(v32) = 1;
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(&v65, 0x4051800000000000, 0, 0, 1, 0, 1, 0, 1, 0, v32, 0, v33, v29, v30);
  v50 = v66;
  v49 = v68;
  v48 = v70;
  v47 = v72;
  v46 = v74;
  v45 = v76;
  *(_QWORD *)a3 = v44;
  *(_QWORD *)(a3 + 8) = v43;
  *(_BYTE *)(a3 + 16) = v40 & 1;
  *(_QWORD *)(a3 + 24) = v42;
  *(_BYTE *)(a3 + 32) = v41;
  *(_BYTE *)(a3 + 72) = 0;
  *(_QWORD *)(a3 + 80) = v39;
  *(_BYTE *)(a3 + 88) = v22;
  *(_QWORD *)(a3 + 96) = v38;
  *(_BYTE *)(a3 + 104) = v23;
  *(_QWORD *)(a3 + 112) = v24;
  *(_BYTE *)(a3 + 120) = v25;
  *(_QWORD *)(a3 + 128) = v26;
  *(_BYTE *)(a3 + 136) = v27;
  *(_QWORD *)(a3 + 144) = v37;
  *(_BYTE *)(a3 + 152) = (_BYTE)v9;
  *(_QWORD *)(a3 + 160) = v36;
  *(_BYTE *)(a3 + 168) = v28;
  *(_QWORD *)(a3 + 176) = v35;
  *(_QWORD *)(a3 + 184) = v34;
  *(_QWORD *)(a3 + 192) = v65;
  *(_BYTE *)(a3 + 200) = v50;
  *(_QWORD *)(a3 + 208) = v67;
  *(_BYTE *)(a3 + 216) = v49;
  *(_QWORD *)(a3 + 224) = v69;
  *(_BYTE *)(a3 + 232) = v48;
  *(_QWORD *)(a3 + 240) = v71;
  *(_BYTE *)(a3 + 248) = v47;
  *(_QWORD *)(a3 + 256) = v73;
  *(_BYTE *)(a3 + 264) = v46;
  *(_QWORD *)(a3 + 272) = v75;
  *(_BYTE *)(a3 + 280) = v45;
  *(double *)(a3 + 40) = v12;
  *(_QWORD *)(a3 + 48) = v14;
  *(_QWORD *)(a3 + 56) = v16;
  *(_QWORD *)(a3 + 64) = v18;
  result = v77[0];
  *(_OWORD *)(a3 + 288) = *(_OWORD *)v77;
  return result;
}

void sub_1007BE068()
{
  qword_10124D9E0 = Int.seconds.getter(12);
}

void sub_1007BE088()
{
  qword_10124D9E8 = Int.seconds.getter(38);
}

void sub_1007BE0A8()
{
  qword_10124D9F0 = Int.seconds.getter(30);
}

void sub_1007BE0C8()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  char v4;

  v0 = static Color.white.getter();
  v1 = Color.opacity(_:)(0.1);
  swift_release(v0);
  v2 = UIScreen.Dimensions.size.getter(v1);
  qword_1011C8CA0 = v3;
  qword_1011C8CA8 = *(_QWORD *)&v2;
  byte_1011C8CB0 = v4;
}

uint64_t sub_1007BE124@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  double v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  double v41;
  char v42;
  double v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v53;
  uint64_t v54;
  _OWORD v55[3];

  v2 = v1;
  v54 = a1;
  v3 = sub_100007E8C((uint64_t *)&unk_1011C9220);
  __chkstk_darwin(v3);
  v5 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011A2DB0);
  __chkstk_darwin(v6);
  v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011C9230);
  __chkstk_darwin(v9);
  v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011C9238);
  __chkstk_darwin(v12);
  v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_100007E8C(&qword_1011C9240);
  __chkstk_darwin(v53);
  v17 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10119C7F0 != -1)
    v15 = swift_once(&qword_10119C7F0, sub_1007BE068);
  v18 = qword_10124D9E0;
  *(_QWORD *)v5 = static VerticalAlignment.center.getter(v15);
  *((_QWORD *)v5 + 1) = v18;
  v5[16] = 0;
  v19 = sub_100007E8C(&qword_1011C9248);
  v20 = sub_1007BE50C(v2, &v5[*(int *)(v19 + 44)]);
  v21 = static Alignment.trailing.getter(v20);
  _FrameLayout.init(width:height:alignment:)(v55, 0, 1, 0, 1, v21, v22);
  sub_10004A160((uint64_t)v5, (uint64_t)v8, (uint64_t *)&unk_1011C9220);
  v23 = &v8[*(int *)(v6 + 36)];
  v24 = v55[1];
  *(_OWORD *)v23 = v55[0];
  *((_OWORD *)v23 + 1) = v24;
  *((_OWORD *)v23 + 2) = v55[2];
  sub_10004FF60((uint64_t)v5, (uint64_t *)&unk_1011C9220);
  v25 = type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView(0);
  v26 = *(int *)(v25 + 24);
  if (*(_BYTE *)(v2 + v26))
    v27 = 44.0;
  else
    v27 = 60.0;
  v28 = static Alignment.center.getter(v25);
  sub_10014C1D8(0.0, 1, 0.0, 1, 0.0, 1, v27, 0, (uint64_t)v11, 0.0, 1, 0.0, 1, v28, v29);
  v30 = sub_10004FF60((uint64_t)v8, &qword_1011A2DB0);
  v31 = static Edge.Set.leading.getter(v30);
  v32 = 8.0;
  if ((*(_BYTE *)(v2 + v26) & 1) == 0)
  {
    if (qword_10119C7E8 != -1)
      swift_once(&qword_10119C7E8, sub_1007B2980);
    v32 = *((double *)&xmmword_1011C8C80 + 1);
  }
  v33 = EdgeInsets.init(_all:)(v32);
  v35 = v34;
  v37 = v36;
  v39 = v38;
  sub_10004A160((uint64_t)v11, (uint64_t)v14, &qword_1011C9230);
  v40 = &v14[*(int *)(v12 + 36)];
  *v40 = v31;
  *((double *)v40 + 1) = v33;
  *((_QWORD *)v40 + 2) = v35;
  *((_QWORD *)v40 + 3) = v37;
  *((_QWORD *)v40 + 4) = v39;
  v40[40] = 0;
  sub_10004FF60((uint64_t)v11, &qword_1011C9230);
  v42 = static Edge.Set.trailing.getter(v41);
  v43 = 4.0;
  if ((*(_BYTE *)(v2 + v26) & 1) == 0)
  {
    if (qword_10119C7E8 != -1)
      swift_once(&qword_10119C7E8, sub_1007B2980);
    v43 = *((double *)&xmmword_1011C8C80 + 1);
  }
  v44 = EdgeInsets.init(_all:)(v43);
  v46 = v45;
  v48 = v47;
  v50 = v49;
  sub_10004A160((uint64_t)v14, (uint64_t)v17, &qword_1011C9238);
  v51 = &v17[*(int *)(v53 + 36)];
  *v51 = v42;
  *((double *)v51 + 1) = v44;
  *((_QWORD *)v51 + 2) = v46;
  *((_QWORD *)v51 + 3) = v48;
  *((_QWORD *)v51 + 4) = v50;
  v51[40] = 0;
  sub_10004FF60((uint64_t)v14, &qword_1011C9238);
  return sub_100065228((uint64_t)v17, v54, &qword_1011C9240);
}

uint64_t sub_1007BE50C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t OpaqueTypeConformance2;
  uint64_t v33;
  double v34;
  char v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  char v58;
  void (*v59)(uint64_t, uint64_t);
  int v60;
  unsigned __int8 v61;
  double v62;
  double v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  int v72;
  unsigned __int8 v73;
  BOOL v74;
  BOOL v75;
  char v76;
  char *v77;
  uint64_t v78;
  void (*v79)(char *, char *, uint64_t);
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  void (*v86)(char *, uint64_t, __n128);
  __n128 v87;
  __n128 v88;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  __int128 v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  _BYTE v109[48];
  uint64_t v110;
  __int128 v111;
  uint64_t v112;
  unsigned __int8 v113;
  uint64_t v114;
  uint64_t v115;

  v105 = a2;
  v3 = type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView(0);
  v98 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v99 = v4;
  v102 = (uint64_t)&v90 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = type metadata accessor for DynamicTypeSize(0);
  v96 = *(_QWORD *)(v104 - 8);
  __chkstk_darwin(v104);
  v101 = (uint64_t)&v90 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v6 = *(_QWORD *)(v93 - 8);
  __chkstk_darwin(v93);
  v8 = (char *)&v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v90 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v12);
  v14 = (char *)&v90 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C((uint64_t *)&unk_1011C4FE0);
  v91 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v17 = (char *)&v90 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = sub_100007E8C((uint64_t *)&unk_1011C9250);
  v94 = *(_QWORD *)(v95 - 8);
  __chkstk_darwin(v95);
  v19 = (char *)&v90 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100007E8C((uint64_t *)&unk_1011C6960);
  v107 = *(_QWORD *)(v20 - 8);
  v108 = v20;
  __chkstk_darwin(v20);
  v103 = (char *)&v90 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v92 = (char *)&v90 - v23;
  __chkstk_darwin(v24);
  v106 = (char *)&v90 - v25;
  sub_1007BED20((uint64_t)v14);
  v26 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v11, 7, 10, v26);
  v97 = v3;
  v27 = *(int *)(v3 + 24);
  *(_QWORD *)&v100 = a1;
  if (*(_BYTE *)(a1 + v27) == 1)
  {
    if (qword_10119C800 != -1)
      swift_once(&qword_10119C800, sub_1007BE0A8);
    v28 = &qword_10124D9F0;
  }
  else
  {
    if (qword_10119C7F8 != -1)
      swift_once(&qword_10119C7F8, sub_1007BE088);
    v28 = &qword_10124D9E8;
  }
  ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(*v28, 0, *v28, 0, 0, 1, 2, (uint64_t)v109);
  v29 = v93;
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v93);
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)((uint64_t)v14, (uint64_t)v11, (uint64_t)v109, (uint64_t)v8, (uint64_t)v17);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v29);
  sub_10005B748((uint64_t)v11, type metadata accessor for ArtworkImage.Placeholder);
  sub_10004FF60((uint64_t)v14, (uint64_t *)&unk_1011A3E10);
  v30 = sub_100044B54((uint64_t *)&unk_1011C5080);
  v31 = sub_1000E4264();
  v110 = v30;
  *(_QWORD *)&v111 = v31;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v110, &opaque type descriptor for <<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>, 1);
  View.corner(_:)(0, 0, 1, v15, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v91 + 8))(v17, v15);
  if (qword_10119C808 != -1)
    swift_once(&qword_10119C808, sub_1007BE0C8);
  v33 = qword_1011C8CA0;
  v34 = *(double *)&qword_1011C8CA8;
  v35 = byte_1011C8CB0;
  v110 = v15;
  *(_QWORD *)&v111 = OpaqueTypeConformance2;
  v36 = swift_getOpaqueTypeConformance2(&v110, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
  v37 = v92;
  v38 = v33;
  v39 = v95;
  View.border(_:corner:)(v38, v35, 0, 0, 1, v95, v36, v34);
  (*(void (**)(char *, uint64_t))(v94 + 8))(v19, v39);
  (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v106, v37, v108);
  v40 = v100;
  v41 = v101;
  v42 = sub_1008237B8(v101);
  v43 = DynamicTypeSize.isAccessibilitySize.getter(v42);
  v96 = *(_QWORD *)(v96 + 8);
  v44 = v104;
  v45 = ((uint64_t (*)(uint64_t, uint64_t))v96)(v41, v104);
  v46 = static Alignment.leading.getter(v45);
  v48 = v47;
  v49 = v40;
  v50 = v102;
  sub_10005B704(v49, v102, type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView);
  v51 = *(unsigned __int8 *)(v98 + 80);
  v52 = (v51 + 16) & ~v51;
  v53 = swift_allocObject(&unk_1010DC858, v52 + v99, v51 | 7);
  sub_10005B6C0(v50, v53 + v52, type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView);
  sub_100007E8C(&qword_1011C9288);
  sub_100049F28(&qword_1011C9290, &qword_1011C9288, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  v54 = AxisStack.init(axis:alignment:spacing:content:)(v43 & 1, v46, v48, 0, 1, (uint64_t)sub_1007C75AC, v53, (uint64_t)&v110);
  LODWORD(v102) = v110;
  v100 = v111;
  v99 = v112;
  LODWORD(v98) = v113;
  v55 = v115;
  v97 = v114;
  v56 = static Edge.Set.bottom.getter(v54);
  v57 = sub_1008237B8(v41);
  v58 = DynamicTypeSize.isAccessibilitySize.getter(v57);
  v59 = (void (*)(uint64_t, uint64_t))v96;
  ((void (*)(uint64_t, uint64_t))v96)(v41, v44);
  v60 = Axis.rawValue.getter(v58 & 1);
  v61 = Axis.rawValue.getter(1);
  v62 = 0.0;
  if (v60 == v61)
    v62 = 8.0;
  v63 = EdgeInsets.init(_all:)(v62);
  v65 = v64;
  v67 = v66;
  v69 = v68;
  v70 = sub_1008237B8(v41);
  v71 = DynamicTypeSize.isAccessibilitySize.getter(v70);
  v59(v41, v44);
  v72 = Axis.rawValue.getter(v71 & 1);
  v73 = Axis.rawValue.getter(1);
  v74 = v72 == v73;
  v75 = v72 != v73;
  v76 = v74;
  v77 = v106;
  v78 = v107;
  v79 = *(void (**)(char *, char *, uint64_t))(v107 + 16);
  v80 = v103;
  v81 = v108;
  v79(v103, v106, v108);
  v82 = v105;
  v79(v105, v80, v81);
  v83 = sub_100007E8C(&qword_1011C9298);
  v84 = &v82[*(int *)(v83 + 48)];
  *v84 = v102;
  *(_OWORD *)(v84 + 8) = v100;
  *((_QWORD *)v84 + 3) = v99;
  v84[32] = v98;
  *((_QWORD *)v84 + 5) = v97;
  *((_QWORD *)v84 + 6) = v55;
  v84[56] = v56;
  *((double *)v84 + 8) = v63;
  *((_QWORD *)v84 + 9) = v65;
  *((_QWORD *)v84 + 10) = v67;
  *((_QWORD *)v84 + 11) = v69;
  v84[96] = 0;
  v85 = &v82[*(int *)(v83 + 64)];
  *(_QWORD *)v85 = 0;
  v85[8] = v76;
  v85[9] = v75;
  v86 = *(void (**)(char *, uint64_t, __n128))(v78 + 8);
  v87 = swift_retain();
  v86(v77, v81, v87);
  v88 = swift_release();
  return ((uint64_t (*)(char *, uint64_t, __n128))v86)(v80, v81, v88);
}

uint64_t sub_1007BED20@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v18;
  uint64_t v19;

  v2 = v1;
  v4 = sub_100007E8C(&qword_1011C8D50);
  __chkstk_darwin(v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for SharePlayTogetherSession.Participant(0);
  sub_10004A160(v2 + *(int *)(v10 + 32), (uint64_t)v6, &qword_1011C8D50);
  v11 = type metadata accessor for SocialProfile(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v6, 1, v11) == 1)
  {
    sub_10004FF60((uint64_t)v6, &qword_1011C8D50);
    v13 = type metadata accessor for ArtworkImage.ViewModel(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v9, 1, 1, v13);
  }
  else
  {
    ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v11, (uint64_t)&protocol witness table for SocialProfile, v9);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v6, v11);
    v14 = type metadata accessor for ArtworkImage.ViewModel(0);
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v9, 1, v14) != 1)
    {
      sub_10005B6C0((uint64_t)v9, a1, type metadata accessor for ArtworkImage.ViewModel);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(a1, 0, 1, v14);
    }
  }
  sub_10004FF60((uint64_t)v9, (uint64_t *)&unk_1011A3E10);
  sub_10004A07C(0, (unint64_t *)&qword_1011A6850, MPArtworkCatalog_ptr);
  v16 = static MPArtworkCatalog.monogram(for:layoutDirection:)(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), 0, 1);
  if (v16)
    return ArtworkImage.ViewModel.init(_:)(v16, a1);
  v18 = type metadata accessor for ArtworkImage.ViewModel(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a1, 1, 1, v18);
}

uint64_t sub_1007BEF30@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char *v39;
  uint64_t v40;
  _QWORD **v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t result;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  void (*v64)(char *, char *, uint64_t);
  char *v65;
  uint64_t v66;
  void (*v67)(char *, char *, uint64_t);
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  __n128 v72;
  void (*v73)(char *, uint64_t, __n128);
  void (*v74)(char *, uint64_t);
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  uint64_t v88;
  char *v89;
  _QWORD **v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  __int128 v101;
  _BYTE v102[32];
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  _OWORD v109[2];
  char v110;
  char v111;
  char v112;
  char v113;
  __int128 v114;
  _OWORD v115[2];
  _OWORD v116[3];
  __int128 v117;
  __int128 v118;
  __int128 v119;
  _OWORD v120[3];

  v90 = (_QWORD **)a1;
  v84 = a2;
  v79 = sub_100007E8C(&qword_1011C92A0);
  __chkstk_darwin(v79);
  v93 = (char *)&v75 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = sub_100007E8C(&qword_1011C92A8);
  __chkstk_darwin(v78);
  v97 = (char *)&v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = sub_100007E8C(&qword_1011C92B0);
  v81 = *(_QWORD *)(v83 - 8);
  __chkstk_darwin(v83);
  v82 = (char *)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v76 = (char *)&v75 - v7;
  __chkstk_darwin(v8);
  v80 = (char *)&v75 - v9;
  v10 = type metadata accessor for DynamicTypeSize(0);
  v95 = *(_QWORD *)(v10 - 8);
  v96 = v10;
  __chkstk_darwin(v10);
  v94 = (uint64_t)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for AccessibilityChildBehavior(0);
  v91 = *(_QWORD *)(v12 - 8);
  v92 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(&qword_1011C92B8);
  v16 = *(_QWORD *)(v15 - 8);
  v98 = v15;
  v99 = v16;
  __chkstk_darwin(v15);
  v77 = (char *)&v75 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v89 = (char *)&v75 - v19;
  __chkstk_darwin(v20);
  v100 = (char *)&v75 - v21;
  v88 = static HorizontalAlignment.leading.getter(v22);
  sub_1007BF568(a1, (uint64_t)&v114);
  v23 = v114;
  v24 = v115[0];
  v25 = *((_QWORD *)&v115[1] + 1);
  v26 = v116[0];
  v86 = *(_OWORD *)((char *)&v116[1] + 8);
  v87 = *(_OWORD *)((char *)v116 + 8);
  v27 = *((_QWORD *)&v116[2] + 1);
  v28 = v117;
  v85 = *(_OWORD *)((char *)v115 + 8);
  v112 = 1;
  v111 = v115[0];
  v110 = v116[0];
  v30 = static Edge.Set.vertical.getter(v29);
  v31 = EdgeInsets.init(_all:)(7.0);
  v113 = 0;
  v101 = (unint64_t)v88;
  v102[0] = 1;
  *(_OWORD *)&v102[8] = v23;
  v102[24] = v24;
  v103 = v85;
  *(_QWORD *)&v104 = v25;
  BYTE8(v104) = v26;
  v32 = (uint64_t)v93;
  v105 = v87;
  v106 = v86;
  *(_QWORD *)&v107 = v27;
  *((_QWORD *)&v107 + 1) = v28;
  LOBYTE(v108) = v30;
  *((double *)&v108 + 1) = v31;
  *(_QWORD *)&v109[0] = v33;
  *((_QWORD *)&v109[0] + 1) = v34;
  *(_QWORD *)&v109[1] = v35;
  BYTE8(v109[1]) = 0;
  static AccessibilityChildBehavior.combine.getter(v36);
  v37 = sub_100007E8C(&qword_1011C92C0);
  v38 = sub_1007C75C0();
  v39 = v89;
  View.accessibilityElement(children:)(v14, v37, v38);
  (*(void (**)(char *, uint64_t))(v91 + 8))(v14, v92);
  v119 = v108;
  v120[0] = v109[0];
  *(_OWORD *)((char *)v120 + 9) = *(_OWORD *)((char *)v109 + 9);
  v116[1] = v104;
  v116[2] = v105;
  v117 = v106;
  v118 = v107;
  v114 = v101;
  v115[0] = *(_OWORD *)v102;
  v115[1] = *(_OWORD *)&v102[16];
  v116[0] = v103;
  sub_1007C7644((uint64_t)&v114);
  (*(void (**)(char *, char *, uint64_t))(v99 + 32))(v100, v39, v98);
  v40 = type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView(0);
  v41 = v90;
  v42 = v94;
  v43 = sub_1008237B8(v94);
  LOBYTE(v28) = DynamicTypeSize.isAccessibilitySize.getter(v43);
  v44 = v95;
  v45 = v96;
  (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v42, v96);
  v46 = Axis.rawValue.getter(v28 & 1);
  v47 = Axis.rawValue.getter(0);
  v48 = objc_msgSend((id)objc_opt_self(UIColor), "_carSystemFocusColor");
  v49 = Color.init(_:)(v48);
  v50 = v49;
  v51 = *(int *)(v40 + 24);
  v52 = (uint64_t)v97;
  if (*((_BYTE *)v41 + v51))
    v53 = 0x4014000000000000;
  else
    v53 = 0x4030000000000000;
  *(_QWORD *)v52 = static VerticalAlignment.center.getter(v49);
  *(_QWORD *)(v52 + 8) = v53;
  *(_BYTE *)(v52 + 16) = 0;
  v54 = v52 + *(int *)(sub_100007E8C((uint64_t *)&unk_1011C92E0) + 44);
  v94 = v50;
  sub_1007BF9C8(v41, v50, v54);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v44 + 104))(v32, enum case for DynamicTypeSize.accessibility2(_:), v45);
  v55 = sub_100048748((unint64_t *)&qword_1011A5A50, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  result = dispatch thunk of static Equatable.== infix(_:_:)(v32, v32, v45, v55);
  if ((result & 1) != 0)
  {
    LODWORD(v96) = v46 != v47;
    LODWORD(v95) = v46 == v47;
    v57 = sub_100049F28((unint64_t *)&unk_1011C92F0, &qword_1011C92A8, (uint64_t)&protocol conformance descriptor for HStack<A>);
    v58 = sub_100049F28(&qword_1011A5A80, &qword_1011C92A0, (uint64_t)&protocol conformance descriptor for PartialRangeThrough<A>);
    v59 = v76;
    View.dynamicTypeSize<A>(_:)(v32, v78, v79, v57, v58);
    sub_10004FF60(v32, &qword_1011C92A0);
    sub_10004FF60(v52, &qword_1011C92A8);
    v60 = v80;
    v61 = v81;
    v62 = v59;
    v63 = v83;
    (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v80, v62, v83);
    v64 = *(void (**)(char *, char *, uint64_t))(v99 + 16);
    v65 = v77;
    v66 = v98;
    v64(v77, v100, v98);
    v67 = *(void (**)(char *, char *, uint64_t))(v61 + 16);
    v68 = v82;
    v67(v82, v60, v63);
    v69 = v84;
    v64(v84, v65, v66);
    v70 = sub_100007E8C(&qword_1011C9300);
    v71 = &v69[*(int *)(v70 + 48)];
    *(_QWORD *)v71 = 0;
    v71[8] = v95;
    v71[9] = v96;
    v67(&v69[*(int *)(v70 + 64)], v68, v63);
    v72 = swift_release();
    v73 = *(void (**)(char *, uint64_t, __n128))(v61 + 8);
    v73(v60, v63, v72);
    v74 = *(void (**)(char *, uint64_t))(v99 + 8);
    v74(v100, v66);
    ((void (*)(char *, uint64_t))v73)(v68, v63);
    return ((uint64_t (*)(char *, uint64_t))v74)(v65, v66);
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_1007BF568@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(_QWORD);
  uint64_t v18;
  uint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t KeyPath;
  __n128 v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  const char *v31;
  _BYTE *v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __n128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  double result;
  _BYTE v73[12];
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;

  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v73[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v73[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView(0);
  __chkstk_darwin(v10);
  v12 = (uint64_t)&v73[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = a1 + *(int *)(v13 + 20);
  v16 = *(_QWORD *)(v14 + 16);
  v15 = *(_QWORD *)(v14 + 24);
  sub_10005B704(a1, v12, v17);
  if (v15)
  {
    v18 = v15;
  }
  else
  {
    v19 = (uint64_t *)(v12 + *(int *)(v10 + 20));
    v16 = *v19;
    v18 = v19[1];
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_10005B748(v12, type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView);
  v84 = v16;
  v85 = v18;
  v20 = sub_100055B68();
  v21 = Text.init<A>(_:)(&v84, &type metadata for String, v20);
  v80 = v22;
  v81 = v21;
  LODWORD(v12) = v23;
  v25 = v24;
  KeyPath = swift_getKeyPath(&unk_100ED0340);
  v79 = static Color.primary.getter(v27);
  v78 = swift_getKeyPath(&unk_100ED0080);
  v28 = *(_BYTE *)(a1 + *(int *)(v10 + 24));
  v82 = KeyPath;
  v83 = v25;
  if ((v28 & 1) != 0)
  {
    v76 = 0;
    v77 = 0;
    v29 = 0;
    v75 = 0;
  }
  else
  {
    if (*(_BYTE *)(v14 + 33) == 1)
    {
      v30 = String.LocalizationValue.init(stringLiteral:)(0x7473657547, 0xE500000000000000);
      static Locale.current.getter(v30);
      v31 = "Subtitle for SharePlay participant";
      v32 = v9;
      v33 = v6;
      v34 = 34;
      v35 = 2;
    }
    else
    {
      v36 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000015, 0x8000000100E459E0);
      static Locale.current.getter(v36);
      v32 = v9;
      v33 = v6;
      v31 = 0;
      v34 = 0;
      v35 = 256;
    }
    v37 = String.init(localized:table:bundle:locale:comment:)(v32, 0, 0, 0, v33, v31, v34, v35);
    v39 = *(unsigned __int8 *)(v14 + 32);
    v74 = v12;
    if (v39 == 1)
    {
      swift_bridgeObjectRelease();
      v40 = String.LocalizationValue.init(stringLiteral:)(0x6F742073746E6157, 0xED00006E696F4A20);
      static Locale.current.getter(v40);
      v37 = String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, 0, v6, "Subtitle for pending SharePlay participant", 42, 2);
    }
    v84 = v37;
    v85 = v38;
    v41 = Text.init<A>(_:)(&v84, &type metadata for String, v20);
    v43 = v42;
    v45 = v44;
    v47 = v46 & 1;
    v48 = static Color.secondary.getter(v41);
    v12 = Text.foregroundColor(_:)(v48, v41, v43, v47, v45);
    v50 = v49;
    v52 = v51;
    v54 = v53;
    swift_release();
    v55 = v52 & 1;
    sub_100055BAC(v41, v43, v47);
    v56 = swift_bridgeObjectRelease();
    v57 = static Font.caption.getter(v56);
    v58 = Text.font(_:)(v57, v12, v50, v55, v54);
    v76 = v59;
    v77 = v58;
    v61 = v60;
    v75 = v62;
    swift_release();
    v29 = v61 & 1;
    sub_100055BAC(v12, v50, v55);
    swift_bridgeObjectRelease();
    KeyPath = v82;
    v25 = v83;
    LOBYTE(v12) = v74;
  }
  v63 = v12 & 1;
  v65 = v80;
  v64 = v81;
  *(_QWORD *)a2 = v81;
  *(_QWORD *)(a2 + 8) = v65;
  *(_BYTE *)(a2 + 16) = v63;
  *(_QWORD *)(a2 + 24) = v25;
  *(_QWORD *)(a2 + 32) = KeyPath;
  v66 = a2;
  *(_QWORD *)(a2 + 40) = 2;
  *(_BYTE *)(a2 + 48) = 0;
  v67 = v79;
  *(_QWORD *)(a2 + 56) = v78;
  *(_QWORD *)(a2 + 64) = v67;
  v69 = v76;
  v68 = v77;
  *(_QWORD *)(a2 + 72) = v77;
  *(_QWORD *)(a2 + 80) = v69;
  *(_QWORD *)(a2 + 88) = v29;
  v70 = v29;
  v71 = v75;
  *(_QWORD *)(v66 + 96) = v75;
  sub_100055BBC(v64, v65, v63);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000E4440(v68, v69, v70, v71);
  sub_1000E450C(v68, v69, v70, v71);
  sub_100055BAC(v64, v65, v63);
  swift_release();
  swift_release();
  swift_release();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_1007BF9C8@<X0>(_QWORD **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  id *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  char v38;
  int v39;
  uint64_t (*v40)(void);
  id v41;
  char v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t KeyPath;
  uint64_t v52;
  id v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  void *v59;
  _OWORD *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v69;
  unint64_t v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD **v98;
  unint64_t v99;
  char *v100;
  void *v101;
  _OWORD *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v107;
  unint64_t v108;
  void *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD **v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  double v153;
  char v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;

  v142 = a2;
  v149 = a3;
  v139 = sub_100007E8C(&qword_1011C9308);
  __chkstk_darwin(v139);
  v125 = (char *)&v122 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = sub_100007E8C(&qword_1011C9310);
  v129 = *(_QWORD *)(v130 - 8);
  __chkstk_darwin(v130);
  v128 = (char *)&v122 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v152 = sub_100007E8C(&qword_1011C9318);
  v147 = *(_QWORD *)(v152 - 8);
  __chkstk_darwin(v152);
  v127 = (char *)&v122 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v126 = (uint64_t)&v122 - v8;
  v9 = sub_100007E8C(&qword_1011C9320);
  __chkstk_darwin(v9);
  v11 = (char *)&v122 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v151 = (uint64_t)&v122 - v13;
  v133 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v133);
  v132 = (char *)&v122 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = sub_100007E8C(&qword_1011C9328);
  __chkstk_darwin(v136);
  v16 = (char *)&v122 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = sub_100007E8C(&qword_1011C9330);
  v134 = *(_QWORD *)(v135 - 8);
  __chkstk_darwin(v135);
  v143 = (char *)&v122 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100007E8C(&qword_1011C9338);
  v144 = *(_QWORD *)(v18 - 8);
  v145 = v18;
  __chkstk_darwin(v18);
  v138 = (char *)&v122 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v137 = (uint64_t)&v122 - v21;
  v22 = type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView(0);
  v140 = *(_QWORD *)(v22 - 8);
  v23 = *(_QWORD *)(v140 + 64);
  __chkstk_darwin(v22);
  v141 = (uint64_t)&v122 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v26 = (char *)&v122 - v25;
  __chkstk_darwin(v27);
  v29 = (id *)((char *)&v122 - v28);
  __chkstk_darwin(v30);
  v32 = (char *)&v122 - v31;
  v33 = sub_100007E8C(&qword_1011C9340);
  __chkstk_darwin(v33);
  v146 = (uint64_t)&v122 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __chkstk_darwin(v35);
  v150 = (char *)&v122 - v37;
  v38 = (*(uint64_t (**)(__n128))((swift_isaMask & **a1) + 0x120))(v36);
  sub_10005B704((uint64_t)a1, (uint64_t)v32, type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView);
  v148 = v11;
  if ((v38 & 1) == 0)
  {
    sub_10005B748((uint64_t)v32, type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView);
    sub_10005B704((uint64_t)a1, (uint64_t)v29, type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView);
LABEL_5:
    v40 = *(uint64_t (**)(void))((swift_isaMask & *(_QWORD *)*v29) + 0x118);
    v41 = *v29;
    v42 = v40();

    sub_10005B6C0((uint64_t)v29, (uint64_t)v26, type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView);
    if ((v42 & 1) != 0)
    {
      v43 = v26[*(int *)(v22 + 20) + 33];
      sub_10005B748((uint64_t)v26, type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView);
      if ((v43 & 1) != 0)
        goto LABEL_7;
    }
    else
    {
      sub_10005B748((uint64_t)v26, type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView);
    }
    v72 = 1;
    v73 = (uint64_t)v150;
    v75 = v144;
    v74 = v145;
    goto LABEL_13;
  }
  v39 = v32[*(int *)(v22 + 20) + 32];
  sub_10005B748((uint64_t)v32, type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView);
  sub_10005B704((uint64_t)a1, (uint64_t)v29, type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView);
  if (v39 != 1)
    goto LABEL_5;
  sub_10005B748((uint64_t)v29, type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView);
LABEL_7:
  v131 = a1;
  v123 = v22;
  v124 = *(int *)(v22 + 24);
  v44 = *((_BYTE *)a1 + v124);
  v45 = v141;
  sub_10005B704((uint64_t)a1, v141, type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView);
  v46 = *(unsigned __int8 *)(v140 + 80);
  v47 = (v46 + 16) & ~v46;
  v48 = swift_allocObject(&unk_1010DC8A8, v47 + v23, v46 | 7);
  sub_10005B6C0(v45, v48 + v47, type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView);
  v49 = v136;
  v153 = Int.seconds.getter(32);
  v50 = sub_1000E4360();
  ScaledMetric.init(wrappedValue:)(&v153, &type metadata for CGFloat, v50);
  *v16 = v44;
  *((_QWORD *)v16 + 1) = sub_1007C7910;
  *((_QWORD *)v16 + 2) = v48;
  *((_QWORD *)v16 + 3) = sub_1007C05B8;
  *((_QWORD *)v16 + 4) = 0;
  KeyPath = swift_getKeyPath(&unk_100ED0310);
  v52 = static Color.white.getter(KeyPath);
  v53 = objc_msgSend((id)objc_opt_self(UIColor), "_carSystemFocusPrimaryColor");
  v54 = Color.init(_:)(v53);
  static Color.primary.getter(v55);
  v56 = Color.opacity(_:)(0.1);
  swift_release();
  v153 = *(double *)&KeyPath;
  v154 = 0;
  v155 = v52;
  v156 = v54;
  v157 = v56;
  v158 = v142;
  v57 = sub_100049F28(&qword_1011C9378, &qword_1011C9328, (uint64_t)&unk_100ED0440);
  v58 = sub_1007C7884();
  swift_retain();
  View.buttonStyle<A>(_:)(&v153, v49, &type metadata for SharePlayTogetherSessionManagementViewController.FocusableButtonStyle, v57, v58);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_10004FF60((uint64_t)v16, &qword_1011C9328);
  if (*((_BYTE *)v131 + v124) == 1)
  {
    v59 = (void *)v133;
    v60 = v132;
    v61 = &v132[*(int *)(v133 + 20)];
    v62 = enum case for RoundedCornerStyle.continuous(_:);
    v63 = type metadata accessor for RoundedCornerStyle(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 104))(v61, v62, v63);
    __asm { FMOV            V0.2D, #6.0 }
    *v60 = _Q0;
    v69 = sub_100048748(&qword_1011C9370, (uint64_t (*)(uint64_t))&type metadata accessor for RoundedRectangle, (uint64_t)&protocol conformance descriptor for RoundedRectangle);
    v70 = (unint64_t)v60;
    v71 = v59;
  }
  else
  {
    v70 = sub_1007C78C8();
    v71 = &type metadata for Circle;
    v69 = v70;
  }
  v76 = AnyShape.init<A>(_:)(v70, v71, v69);
  v73 = (uint64_t)v150;
  v22 = v123;
  v75 = v144;
  v74 = v145;
  v77 = v135;
  v78 = v134;
  v79 = (uint64_t)v138;
  v80 = v143;
  (*(void (**)(char *, char *, uint64_t))(v134 + 16))(v138, v143, v135);
  v81 = v79 + *(int *)(v74 + 36);
  *(_QWORD *)v81 = v76;
  *(_WORD *)(v81 + 8) = 256;
  (*(void (**)(char *, uint64_t))(v78 + 8))(v80, v77);
  v82 = v137;
  sub_100065228(v79, v137, &qword_1011C9338);
  sub_100065228(v82, v73, &qword_1011C9338);
  v72 = 0;
  a1 = v131;
LABEL_13:
  v83 = 1;
  v84 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v75 + 56))(v73, v72, 1, v74);
  if (((*(uint64_t (**)(uint64_t))((swift_isaMask & **a1) + 0x120))(v84) & 1) != 0
    && *((_BYTE *)a1 + *(int *)(v22 + 20) + 32) == 1)
  {
    v145 = *(int *)(v22 + 24);
    v85 = *((_BYTE *)a1 + v145);
    v86 = v141;
    sub_10005B704((uint64_t)a1, v141, type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView);
    v87 = *(unsigned __int8 *)(v140 + 80);
    v88 = (v87 + 16) & ~v87;
    v89 = swift_allocObject(&unk_1010DC880, v88 + v23, v87 | 7);
    sub_10005B6C0(v86, v89 + v88, type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView);
    v90 = (uint64_t)v125;
    v153 = Int.seconds.getter(32);
    v91 = sub_1000E4360();
    ScaledMetric.init(wrappedValue:)(&v153, &type metadata for CGFloat, v91);
    *(_BYTE *)v90 = v85;
    *(_QWORD *)(v90 + 8) = sub_1007C77FC;
    *(_QWORD *)(v90 + 16) = v89;
    *(_QWORD *)(v90 + 24) = sub_1007C0764;
    *(_QWORD *)(v90 + 32) = 0;
    v92 = swift_getKeyPath(&unk_100ED0310);
    v93 = static Color.white.getter(v92);
    v94 = objc_msgSend((id)objc_opt_self(UIColor), "_carSystemFocusPrimaryColor");
    v95 = Color.init(_:)(v94);
    v96 = static Color.green.getter();
    v153 = *(double *)&v92;
    v154 = 0;
    v155 = v93;
    v156 = v95;
    v157 = v96;
    v158 = v142;
    v97 = sub_100049F28(&qword_1011C9358, &qword_1011C9308, (uint64_t)&unk_100ED0440);
    v98 = a1;
    v99 = sub_1007C7884();
    swift_retain();
    v100 = v128;
    View.buttonStyle<A>(_:)(&v153, v139, &type metadata for SharePlayTogetherSessionManagementViewController.FocusableButtonStyle, v97, v99);
    v73 = (uint64_t)v150;
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_10004FF60(v90, &qword_1011C9308);
    if (*((_BYTE *)v98 + v145) == 1)
    {
      v101 = (void *)v133;
      v102 = v132;
      v103 = &v132[*(int *)(v133 + 20)];
      v104 = enum case for RoundedCornerStyle.continuous(_:);
      v105 = type metadata accessor for RoundedCornerStyle(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v105 - 8) + 104))(v103, v104, v105);
      __asm { FMOV            V0.2D, #6.0 }
      *v102 = _Q0;
      v107 = sub_100048748(&qword_1011C9370, (uint64_t (*)(uint64_t))&type metadata accessor for RoundedRectangle, (uint64_t)&protocol conformance descriptor for RoundedRectangle);
      v108 = (unint64_t)v102;
      v109 = v101;
    }
    else
    {
      v108 = sub_1007C78C8();
      v109 = &type metadata for Circle;
      v107 = v108;
    }
    v110 = AnyShape.init<A>(_:)(v108, v109, v107);
    v111 = v129;
    v112 = (uint64_t)v127;
    v113 = v130;
    (*(void (**)(char *, char *, uint64_t))(v129 + 16))(v127, v100, v130);
    v114 = v112 + *(int *)(v152 + 36);
    *(_QWORD *)v114 = v110;
    *(_WORD *)(v114 + 8) = 256;
    (*(void (**)(char *, uint64_t))(v111 + 8))(v100, v113);
    v115 = v126;
    sub_100065228(v112, v126, &qword_1011C9318);
    sub_100065228(v115, v151, &qword_1011C9318);
    v83 = 0;
  }
  v116 = v151;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v147 + 56))(v151, v83, 1, v152);
  v117 = v146;
  sub_10004A160(v73, v146, &qword_1011C9340);
  v118 = (uint64_t)v148;
  sub_10004A160(v116, (uint64_t)v148, &qword_1011C9320);
  v119 = v149;
  sub_10004A160(v117, v149, &qword_1011C9340);
  v120 = sub_100007E8C((uint64_t *)&unk_1011C9348);
  sub_10004A160(v118, v119 + *(int *)(v120 + 48), &qword_1011C9320);
  sub_10004FF60(v116, &qword_1011C9320);
  sub_10004FF60(v73, &qword_1011C9340);
  sub_10004FF60(v118, &qword_1011C9320);
  return sub_10004FF60(v117, &qword_1011C9340);
}

uint64_t sub_1007C05B8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t KeyPath;
  double v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD v12[4];

  v0 = sub_100007E8C(&qword_1011C9380);
  __chkstk_darwin(v0);
  v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v2 = static VerticalAlignment.center.getter(v3);
  *((_QWORD *)v2 + 1) = 0;
  v2[16] = 1;
  sub_100007E8C(&qword_1011C9388);
  v4 = Image.init(systemName:)(0x6B72616D78, 0xE500000000000000);
  v5 = static Font.subheadline.getter(v4);
  KeyPath = swift_getKeyPath(&unk_100ED0050);
  v12[1] = v4;
  v12[2] = KeyPath;
  v12[3] = v5;
  v7 = static Font.Weight.bold.getter(KeyPath);
  v8 = sub_100007E8C(&qword_1011AC700);
  v9 = sub_100318590();
  View.fontWeight(_:)(*(_QWORD *)&v7, 0, v8, v9);
  swift_release();
  swift_release();
  swift_release();
  v10 = LocalizedStringKey.init(stringLiteral:)(2037278020, 0xE400000000000000);
  sub_100049F28(&qword_1011C9390, &qword_1011C9380, (uint64_t)&protocol conformance descriptor for HStack<A>);
  View.accessibilityLabel(_:)(v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_10004FF60((uint64_t)v2, &qword_1011C9380);
}

uint64_t sub_1007C0764@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  *(_QWORD *)a2 = static VerticalAlignment.center.getter(a1);
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  v3 = sub_100007E8C(&qword_1011C9398);
  return sub_1007C07A8(a2 + *(int *)(v3 + 44));
}

uint64_t sub_1007C07A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t KeyPath;
  double v13;
  uint64_t v14;
  unint64_t v15;
  __n128 v16;
  uint64_t OpaqueTypeConformance2;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;

  v27 = a1;
  v1 = type metadata accessor for AccessibilityTraits(0);
  v25 = *(_QWORD *)(v1 - 8);
  v26 = v1;
  __chkstk_darwin(v1);
  v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_1011C8F90);
  v5 = *(_QWORD *)(v4 - 8);
  v22 = v4;
  v23 = v5;
  __chkstk_darwin(v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_100007E8C((uint64_t *)&unk_1011C93A0);
  __chkstk_darwin(v24);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = Image.init(systemName:)(0x72616D6B63656863, 0xE90000000000006BLL);
  v11 = static Font.subheadline.getter(v10);
  KeyPath = swift_getKeyPath(&unk_100ED0050);
  v28 = v10;
  v29 = KeyPath;
  v30 = v11;
  v13 = static Font.Weight.bold.getter(KeyPath);
  v14 = sub_100007E8C(&qword_1011AC700);
  v15 = sub_100318590();
  View.fontWeight(_:)(*(_QWORD *)&v13, 0, v14, v15);
  swift_release();
  swift_release();
  v16 = swift_release();
  static AccessibilityTraits.isSelected.getter(v16);
  v28 = v14;
  v29 = v15;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v28, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
  v18 = v22;
  View.accessibilityRemoveTraits(_:)(v3, v22, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v3, v26);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v18);
  v19 = LocalizedStringKey.init(stringLiteral:)(0x747065636341, 0xE600000000000000);
  ModifiedContent<>.accessibilityLabel(_:)(v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_10004FF60((uint64_t)v9, (uint64_t *)&unk_1011C93A0);
}

uint64_t sub_1007C09E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t WitnessTable;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[16];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;

  v19 = a2;
  v4 = *(_QWORD *)(a1 + 16);
  v5 = type metadata accessor for ModifiedContent(255, v4, &type metadata for _FrameLayout);
  v24 = *(_QWORD *)(a1 + 24);
  v6 = v24;
  v25 = &protocol witness table for _FrameLayout;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v5);
  v8 = type metadata accessor for Button(0, v5, WitnessTable);
  v18 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v18 - v12;
  v14 = *(_QWORD *)(v2 + 8);
  v15 = *(_QWORD *)(v2 + 16);
  v21 = v4;
  v22 = v6;
  v23 = v2;
  swift_retain();
  Button.init(action:label:)(v14, v15, sub_1007C89E8, v20, v5, WitnessTable);
  swift_getWitnessTable(&protocol conformance descriptor for Button<A>, v8);
  sub_10081EB14((uint64_t)v10, v8, (uint64_t)v13);
  v16 = *(void (**)(char *, uint64_t))(v18 + 8);
  v16(v10, v8);
  sub_1000EA744((uint64_t)v13, v8, v19);
  return ((uint64_t (*)(char *, uint64_t))v16)(v13, v8);
}

uint64_t sub_1007C0B64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;

  v30 = a4;
  v7 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(a1);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ModifiedContent(0, v10, &type metadata for _FrameLayout);
  v29 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v28 - v16;
  v18 = (_QWORD *)(*(uint64_t (**)(__n128))(a1 + 24))(v15);
  if ((*(_BYTE *)a1 & 1) != 0)
  {
    v20 = 0x4051800000000000;
    v21 = 0x4041000000000000;
  }
  else
  {
    type metadata accessor for SharePlayTogetherSessionManagementViewController.ScaledButton(0, a2, a3, v19);
    v28 = a3;
    v22 = sub_100007E8C(qword_1011C9550);
    ScaledMetric.wrappedValue.getter(&v33, v22);
    v20 = v33;
    a3 = v28;
    v23 = sub_100007E8C(qword_1011C9550);
    v18 = ScaledMetric.wrappedValue.getter(&v33, v23);
    v21 = v33;
  }
  v24 = static Alignment.center.getter(v18);
  View.frame(width:height:alignment:)(v20, 0, v21, 0, v24, v25, a2, a3);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, a2);
  v31 = a3;
  v32 = &protocol witness table for _FrameLayout;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v11);
  sub_10081EB14((uint64_t)v13, v11, (uint64_t)v17);
  v26 = *(void (**)(char *, uint64_t))(v29 + 8);
  v26(v13, v11);
  sub_1000EA744((uint64_t)v17, v11, v30);
  return ((uint64_t (*)(char *, uint64_t))v26)(v17, v11);
}

uint64_t sub_1007C0D78@<X0>(uint64_t a1@<X8>)
{
  _QWORD **v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;
  char v52;
  char v53;
  _BYTE v54[8];
  __int128 v55;
  uint64_t v56;
  char v57;
  __int128 v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  char v70;
  id v71;
  uint64_t v72;
  _QWORD v73[5];
  _BYTE v74[8];
  __int128 v75;
  uint64_t v76;
  char v77;
  __int128 v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  char v90;
  void *v91;
  uint64_t v92;
  __int128 v93;
  __int128 v94;
  uint64_t v95;
  __int128 v96;
  __int128 v97;
  uint64_t v98;
  _BYTE v99[184];

  v2 = (uint64_t)v1;
  v46 = a1;
  v3 = type metadata accessor for SharePlayTogetherSessionManagementViewController.QRCodeCell(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DynamicTypeSize(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(_QWORD *__return_ptr, __n128))((swift_isaMask & **v1) + 0x258))(v73, v9);
  v45 = v73[1];
  v12 = (void *)v73[3];
  *(_QWORD *)&v44 = v73[2];
  sub_100065228((uint64_t)v73, (uint64_t)&v93, &qword_1011C8F00);
  if (*((_QWORD *)&v94 + 1))
  {
    v98 = v95;
    v96 = v93;
    v97 = v94;
    v42 = v12;
    v13 = sub_1008237B8((uint64_t)v11);
    LODWORD(v43) = DynamicTypeSize.isAccessibilitySize.getter(v13);
    v14 = *(void (**)(char *, uint64_t))(v8 + 8);
    v14(v11, v7);
    v15 = sub_1008237B8((uint64_t)v11);
    v16 = DynamicTypeSize.isAccessibilitySize.getter(v15);
    v14(v11, v7);
    if ((v16 & 1) != 0)
      v17 = 0;
    else
      v17 = 0x4034000000000000;
    sub_10005B704(v2, (uint64_t)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SharePlayTogetherSessionManagementViewController.QRCodeCell);
    v18 = *(unsigned __int8 *)(v4 + 80);
    v19 = (v18 + 16) & ~v18;
    v20 = (v5 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
    v21 = swift_allocObject(&unk_1010DC808, v20 + 40, v18 | 7);
    sub_10005B6C0((uint64_t)v6, v21 + v19, type metadata accessor for SharePlayTogetherSessionManagementViewController.QRCodeCell);
    v22 = v21 + v20;
    v23 = v97;
    *(_OWORD *)v22 = v96;
    *(_OWORD *)(v22 + 16) = v23;
    *(_QWORD *)(v22 + 32) = v98;
    sub_100079DE4(v45, v44);
    v24 = static Alignment.center.getter(v42);
    v26 = v25;
    sub_100007E8C(&qword_1011C91C8);
    sub_100049F28(&qword_1011C91D0, &qword_1011C91C8, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    v27 = AxisStack.init(axis:alignment:spacing:content:)(v43 & 1, v24, v26, v17, 0, (uint64_t)sub_1007C72F8, v21, (uint64_t)v74);
    LODWORD(v45) = v74[0];
    v44 = v75;
    v43 = v76;
    LOBYTE(v24) = v77;
    v28 = static Alignment.center.getter(v27);
    _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(&v79, 0, 1, 0, 1, 0, 1, 0x405C800000000000, 0, 0, 1, 0, 1, v28, v29);
    LOBYTE(v19) = v80;
    v30 = v81;
    v31 = v82;
    v32 = v83;
    v33 = v84;
    v37 = v85;
    v38 = v79;
    LOBYTE(v21) = v86;
    v34 = v88;
    v39 = v87;
    v40 = v89;
    LOBYTE(v26) = v90;
    v41 = v92;
    v42 = v91;
    sub_1007C5020((uint64_t)v73);
    v53 = v24;
    v52 = v19;
    v51 = v31;
    v50 = v33;
    v49 = v21;
    v48 = v34;
    v47 = v26;
    v54[0] = v45;
    v55 = v44;
    v56 = v43;
    v57 = v24;
    v58 = v78;
    v59 = v38;
    v60 = v19;
    v61 = v30;
    v62 = v31;
    v63 = v32;
    v64 = v33;
    v65 = v37;
    v66 = v21;
    v67 = v39;
    v68 = v34;
    v69 = v40;
    v70 = v26;
    v71 = v42;
    v72 = v41;
    UIScreen.Dimensions.size.getter(v54);
  }
  else
  {
    sub_1007C71E8((uint64_t)v54);
  }
  sub_100065228((uint64_t)v54, (uint64_t)v99, &qword_1011C91C0);
  return sub_100065228((uint64_t)v99, v46, &qword_1011C91C0);
}

double sub_1007C1190@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  _BYTE *v33;
  uint64_t *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  double result;
  _BYTE v45[12];
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  uint64_t v53;
  _BYTE *v54;
  uint64_t v55;
  uint64_t v56;
  char v57[16];
  uint64_t v58;

  v53 = a2;
  v51 = a1;
  v4 = type metadata accessor for SharePlayTogetherSessionManagementViewController.QRCodeCell(0);
  v50 = *(_QWORD *)(v4 - 8);
  v5 = *(_QWORD *)(v50 + 64);
  __chkstk_darwin(v4);
  v6 = sub_100007E8C(&qword_1011C91D8);
  v7 = *(_QWORD *)(v6 - 8);
  v55 = v6;
  v56 = v7;
  __chkstk_darwin(v6);
  v52 = &v45[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_100007E8C(&qword_1011C91E0);
  __chkstk_darwin(v9);
  v11 = &v45[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  v54 = &v45[-v13];
  v14 = LocalizedStringKey.init(stringLiteral:)(0xD00000000000004DLL, 0x8000000100E45990);
  v15 = Text.init(_:tableName:bundle:comment:)(v14);
  v17 = v16;
  v19 = v18;
  v21 = v20 & 1;
  v22 = static Font.subheadline.getter(v15);
  v23 = Text.font(_:)(v22, v15, v17, v21, v19);
  v47 = v24;
  v48 = v23;
  v26 = v25;
  v49 = v27;
  swift_release();
  v46 = v26 & 1;
  sub_100055BAC(v15, v17, v21);
  swift_bridgeObjectRelease();
  sub_10005B704(v51, (uint64_t)&v45[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], type metadata accessor for SharePlayTogetherSessionManagementViewController.QRCodeCell);
  v28 = *(unsigned __int8 *)(v50 + 80);
  v29 = (v28 + 16) & ~v28;
  v30 = swift_allocObject(&unk_1010DC830, v29 + v5, v28 | 7);
  sub_10005B6C0((uint64_t)&v45[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], v30 + v29, type metadata accessor for SharePlayTogetherSessionManagementViewController.QRCodeCell);
  v58 = v53;
  v31 = sub_100007E8C(&qword_1011C91E8);
  v32 = sub_1007C745C();
  v33 = v52;
  Button.init(action:label:)(sub_1007C7410, v30, sub_1007C7454, v57, v31, v32);
  v34 = AccessibilityString.qrCodeButtonLabel.unsafeMutableAddressor();
  v35 = *v34;
  v36 = v34[1];
  v37 = sub_100049F28(&qword_1011C9210, &qword_1011C91D8, (uint64_t)&protocol conformance descriptor for Button<A>);
  swift_bridgeObjectRetain();
  v38 = v55;
  View.accessibilityLabel(_:)(v35, v36, v55, v37);
  v39 = swift_bridgeObjectRelease();
  (*(void (**)(_BYTE *, uint64_t, __n128))(v56 + 8))(v33, v38, v39);
  v40 = v54;
  sub_100065228((uint64_t)v11, (uint64_t)v54, &qword_1011C91E0);
  sub_10004A160((uint64_t)v40, (uint64_t)v11, &qword_1011C91E0);
  v42 = v47;
  v41 = v48;
  *(_QWORD *)a3 = v48;
  *(_QWORD *)(a3 + 8) = v42;
  LOBYTE(v15) = v46;
  *(_BYTE *)(a3 + 16) = v46;
  *(_QWORD *)(a3 + 24) = v49;
  *(_QWORD *)(a3 + 32) = 0;
  *(_BYTE *)(a3 + 40) = 1;
  v43 = sub_100007E8C(&qword_1011C9218);
  sub_10004A160((uint64_t)v11, a3 + *(int *)(v43 + 64), &qword_1011C91E0);
  sub_100055BBC(v41, v42, v15);
  swift_bridgeObjectRetain();
  sub_10004FF60((uint64_t)v40, &qword_1011C91E0);
  sub_10004FF60((uint64_t)v11, &qword_1011C91E0);
  sub_100055BAC(v41, v42, v15);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

double sub_1007C150C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  double result;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  __int128 v22;

  v3 = *(void **)(a1 + 24);
  v4 = QRCodeOverlayViewController.ImageViewRepresentable.init(image:)();
  v6 = v5;
  v8 = v7;
  v9 = static Color.white.getter(v3);
  KeyPath = swift_getKeyPath(&unk_100ED0080);
  v11 = static Alignment.center.getter(KeyPath);
  _FrameLayout.init(width:height:alignment:)(&v18, 0x4059000000000000, 0, 0x4059000000000000, 0, v11, v12);
  v13 = v18;
  v14 = v19;
  v15 = v20;
  v16 = v21;
  *(_QWORD *)a2 = v4;
  *(_BYTE *)(a2 + 8) = v6 & 1;
  *(_QWORD *)(a2 + 16) = v8;
  *(_QWORD *)(a2 + 24) = KeyPath;
  *(_QWORD *)(a2 + 32) = v9;
  *(_QWORD *)(a2 + 40) = v13;
  *(_BYTE *)(a2 + 48) = v14;
  *(_QWORD *)(a2 + 56) = v15;
  *(_BYTE *)(a2 + 64) = v16;
  result = *(double *)&v22;
  *(_OWORD *)(a2 + 72) = v22;
  return result;
}

uint64_t sub_1007C15D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t *v19;
  void (*v20)(char *, uint64_t, __n128);
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char *v26;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v2 = v1;
  v32 = a1;
  v3 = type metadata accessor for ButtonStyleConfiguration.Label(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011C9660);
  __chkstk_darwin(v7);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011C9668);
  v30 = *(_QWORD *)(v10 - 8);
  v31 = v10;
  v11 = __chkstk_darwin(v10);
  v29 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  ButtonStyleConfiguration.label.getter(v11);
  v13 = *v1;
  v14 = *((_BYTE *)v2 + 8);
  sub_10006B3F8(*v2, v14);
  v15 = sub_10082568C(v13, v14);
  sub_10006B604(v13, v14);
  v16 = 2;
  if ((v15 & 1) != 0)
    v16 = 3;
  v17 = v2[v16];
  KeyPath = swift_getKeyPath(&unk_100ED0080);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v9, v6, v3);
  v19 = (uint64_t *)&v9[*(int *)(v7 + 36)];
  *v19 = KeyPath;
  v19[1] = v17;
  v20 = *(void (**)(char *, uint64_t, __n128))(v4 + 8);
  v21 = swift_retain();
  v20(v6, v3, v21);
  sub_10006B3F8(v13, v14);
  LOBYTE(v17) = sub_10082568C(v13, v14);
  sub_10006B604(v13, v14);
  v22 = 4;
  if ((v17 & 1) != 0)
    v22 = 5;
  v33 = v2[v22];
  swift_retain();
  v24 = static Edge.Set.all.getter(v23);
  v25 = sub_1007C89F4();
  v26 = v29;
  View.background<A>(_:ignoresSafeAreaEdges:)(&v33, v24, v7, &type metadata for Color, v25, &protocol witness table for Color);
  swift_release();
  sub_10004FF60((uint64_t)v9, &qword_1011C9660);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v30 + 32))(v32, v26, v31);
}

uint64_t sub_1007C181C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;

  v4[14] = a4;
  v5 = type metadata accessor for AppInterfaceContext.Activity(0);
  v4[15] = v5;
  v4[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  v4[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for String.LocalizationValue(0);
  v4[18] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  v4[19] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  return swift_task_switch(sub_1007C18EC, v10, v11);
}

uint64_t sub_1007C18EC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  NSString v6;
  NSString v7;
  id v8;
  NSString v9;
  void *v10;
  id v11;
  uint64_t v12;
  NSString v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;

  v1 = v0[18];
  v2 = v0[17];
  v3 = (void *)v0[14];
  swift_release();
  v4 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001ALL, 0x8000000100E45920);
  static Locale.current.getter(v4);
  String.init(localized:table:bundle:locale:comment:)(v1, 0, 0, 0, v2, 0, 0, 256);
  v5 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000048, 0x8000000100E45940);
  static Locale.current.getter(v5);
  String.init(localized:table:bundle:locale:comment:)(v1, 0, 0, 0, v2, 0, 0, 256);
  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v6, v7, 1);

  String.cancelButtonTitle.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v10 = (void *)objc_opt_self(UIAlertAction);
  v11 = objc_msgSend(v10, "actionWithTitle:style:handler:", v9, 1, 0);

  objc_msgSend(v8, "addAction:", v11);
  v12 = String.LocalizationValue.init(stringLiteral:)(0x73676E6974746553, 0xE800000000000000);
  static Locale.current.getter(v12);
  String.init(localized:table:bundle:locale:comment:)(v1, 0, 0, 0, v2, 0, 0, 256);
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v0[2] = _NSConcreteStackBlock;
  v0[6] = sub_1006730F4;
  v0[7] = 0;
  v0[3] = 1107296256;
  v0[4] = sub_100223938;
  v0[5] = &unk_1010DC748;
  v14 = _Block_copy(v0 + 2);
  v15 = objc_msgSend(v10, "actionWithTitle:style:handler:", v13, 0, v14, swift_release().n128_f64[0]);
  _Block_release(v14);

  objc_msgSend(v8, "addAction:", v15);
  v16 = objc_msgSend(v3, "delegate");
  if (!v16
    || (v0[13] = v16,
        v17 = sub_100007E8C(&qword_1011A9300),
        v18 = sub_100007E8C(&qword_1011A3120),
        (swift_dynamicCast(v0 + 8, v0 + 13, v17, v18, 6) & 1) == 0))
  {
    v0[12] = 0;
    *((_OWORD *)v0 + 4) = 0u;
    *((_OWORD *)v0 + 5) = 0u;
    goto LABEL_7;
  }
  v19 = v0[11];
  if (!v19)
  {
LABEL_7:
    sub_10004FF60((uint64_t)(v0 + 8), (uint64_t *)&unk_1011A3110);
    goto LABEL_8;
  }
  v20 = *(_QWORD *)(*sub_100007E68(v0 + 8, v19) + OBJC_IVAR____TtC5Music17MainSceneDelegate_interfaceContext);
  swift_retain();
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v0 + 8);
  if (!v20)
  {
LABEL_8:

    goto LABEL_9;
  }
  v21 = v0[15];
  v22 = v0[16];
  *(_QWORD *)v22 = v8;
  *(_BYTE *)(v22 + 8) = 1;
  *(_QWORD *)(v22 + 16) = &_swiftEmptySetSingleton;
  swift_storeEnumTagMultiPayload(v22, v21, 2);
  v23 = v8;
  sub_100770824(v22, 0, 0);
  swift_release();

  sub_10005B748(v22, type metadata accessor for AppInterfaceContext.Activity);
LABEL_9:
  v24 = v0[17];
  v25 = v0[16];
  swift_task_dealloc(v0[18]);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_1007C1CF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  char v22;

  *(_BYTE *)(v8 + 289) = v22;
  *(_BYTE *)(v8 + 288) = a8;
  *(_QWORD *)(v8 + 96) = a6;
  *(_QWORD *)(v8 + 104) = a7;
  *(_QWORD *)(v8 + 80) = a4;
  *(_QWORD *)(v8 + 88) = a5;
  v9 = type metadata accessor for AppInterfaceContext.Activity(0);
  *(_QWORD *)(v8 + 112) = v9;
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 120) = v10;
  *(_QWORD *)(v8 + 128) = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011B6C70);
  *(_QWORD *)(v8 + 136) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Logger(0);
  *(_QWORD *)(v8 + 144) = v12;
  v13 = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v8 + 152) = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v8 + 160) = swift_task_alloc(v14);
  *(_QWORD *)(v8 + 168) = swift_task_alloc(v14);
  *(_QWORD *)(v8 + 176) = swift_task_alloc(v14);
  *(_QWORD *)(v8 + 184) = swift_task_alloc(v14);
  v15 = type metadata accessor for Locale(0);
  *(_QWORD *)(v8 + 192) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v15 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for String.LocalizationValue(0);
  *(_QWORD *)(v8 + 200) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v16 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v8 + 208) = static MainActor.shared.getter(v18);
  v19 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
  *(_QWORD *)(v8 + 216) = v19;
  *(_QWORD *)(v8 + 224) = v20;
  return swift_task_switch(sub_1007C1E54, v19, v20);
}

uint64_t sub_1007C1E54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  os_log_type_t v66;
  uint8_t *v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(uint64_t, uint64_t);
  id v71;
  unsigned int v72;
  double v73;
  id v74;
  unsigned int v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  Swift::Int v84;
  _QWORD *v85;
  __n128 v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unsigned __int8 v99;
  _QWORD *v100;

  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 200);
  v99 = *(_BYTE *)(v0 + 288);
  v4 = *(_QWORD *)(v0 + 96);
  v3 = *(void **)(v0 + 104);
  v6 = *(void **)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 88);
  v100 = (_QWORD *)swift_allocObject(&unk_1010DC640, 48, 7);
  *(_QWORD *)(v0 + 232) = v100;
  v100[2] = v6;
  v100[3] = v5;
  v100[4] = v4;
  v100[5] = v3;
  v7 = v3;
  sub_100048AAC(v5, v4);
  v8 = v6;
  v98 = Image.init(_internalSystemName:)(0x616C706572616873, 0xE900000000000079);
  v9 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000010, 0x8000000100E45860);
  static Locale.current.getter(v9);
  v10 = String.init(localized:table:bundle:locale:comment:)(v2, 0, 0, 0, v1, 0, 0, 256);
  v12 = v11;
  v13 = sub_100007E8C(&qword_1011E7E30);
  v14 = swift_allocObject(v13, 72, 7);
  *(_OWORD *)(v14 + 16) = xmmword_100EA7AA0;
  v15 = objc_msgSend(v8, "hostDisplayName");
  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v18 = v17;

  *(_QWORD *)(v14 + 56) = &type metadata for String;
  *(_QWORD *)(v14 + 64) = sub_10021F388();
  *(_QWORD *)(v14 + 32) = v16;
  *(_QWORD *)(v14 + 40) = v18;
  v19 = String.init(format:_:)(v10, v12, v14);
  v96 = v20;
  v97 = v19;
  swift_bridgeObjectRelease();
  v21 = String.LocalizationValue.init(stringLiteral:)(0x100000000000004DLL, 0x8000000100E45880);
  static Locale.current.getter(v21);
  v22 = String.init(localized:table:bundle:locale:comment:)(v2, 0, 0, 0, v1, 0, 0, 256);
  v24 = v23;
  v25 = String.LocalizationValue.init(stringLiteral:)(0x7341206E696F4ALL, 0xE700000000000000);
  static Locale.current.getter(v25);
  v26 = String.init(localized:table:bundle:locale:comment:)(v2, 0, 0, 0, v1, 0, 0, 256);
  v28 = v27;
  v29 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000042, 0x8000000100E458D0);
  static Locale.current.getter(v29);
  v30 = String.init(localized:table:bundle:locale:comment:)(v2, 0, 0, 0, v1, 0, 0, 256);
  v32 = v31;
  v33 = swift_allocObject(&unk_1010DC668, 32, 7);
  *(_QWORD *)(v33 + 16) = sub_1007C53C8;
  *(_QWORD *)(v33 + 24) = v100;
  v34 = objc_allocWithZone((Class)type metadata accessor for SharePlayProxCardViewController(0));
  swift_retain();
  v35 = (char *)sub_1006EA9E4(v98, v97, v96, v22, v24, v26, v28, v30, v32, (uint64_t)sub_1007C36D4, 0, 0, v99, (uint64_t)sub_10004D5F4, v33, 0, 0);
  *(_QWORD *)(v0 + 240) = v35;
  if ((v99 & 1) != 0)
  {
    v36 = *(_QWORD *)(v0 + 176);
    v37 = *(_QWORD *)(v0 + 144);
    v38 = *(_QWORD *)(v0 + 152);
    v39 = Logger.sharePlayTogether.unsafeMutableAddressor();
    v40 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v38 + 16);
    v41 = v40(v36, v39, v37);
    v42 = Logger.logObject.getter(v41);
    v43 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v44 = 0;
      _os_log_impl((void *)&_mh_execute_header, v42, v43, "Presenting identity creation card", v44, 2u);
      swift_slowDealloc(v44, -1, -1);
    }
    v45 = *(_QWORD *)(v0 + 176);
  }
  else
  {
    if (*(_BYTE *)(v0 + 289) == 1)
    {
      v46 = *(_QWORD *)(v0 + 184);
      v47 = *(_QWORD *)(v0 + 144);
      v48 = *(_QWORD *)(v0 + 152);
      v49 = Logger.sharePlayTogether.unsafeMutableAddressor();
      v50 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v46, v49, v47);
      v51 = Logger.logObject.getter(v50);
      v52 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v51, v52))
      {
        v53 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v53 = 0;
        _os_log_impl((void *)&_mh_execute_header, v51, v52, "Auto connecting", v53, 2u);
        swift_slowDealloc(v53, -1, -1);
      }
      v54 = *(_QWORD *)(v0 + 184);
      v55 = *(_QWORD *)(v0 + 144);
      v56 = *(_QWORD *)(v0 + 152);
      v58 = *(_QWORD *)(v0 + 96);
      v57 = *(void **)(v0 + 104);
      v60 = *(_QWORD *)(v0 + 80);
      v59 = *(_QWORD *)(v0 + 88);

      (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v54, v55);
      sub_1007C2A10(v35, v60, v59, v58, v57);
    }
    v61 = *(_QWORD *)(v0 + 168);
    v62 = *(_QWORD *)(v0 + 144);
    v63 = *(_QWORD *)(v0 + 152);
    v64 = Logger.sharePlayTogether.unsafeMutableAddressor();
    v40 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v63 + 16);
    v65 = v40(v61, v64, v62);
    v42 = Logger.logObject.getter(v65);
    v66 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v42, v66))
    {
      v67 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v67 = 0;
      _os_log_impl((void *)&_mh_execute_header, v42, v66, "Presenting join card", v67, 2u);
      swift_slowDealloc(v67, -1, -1);
    }
    v45 = *(_QWORD *)(v0 + 168);
  }
  v68 = *(_QWORD *)(v0 + 144);
  v69 = *(_QWORD *)(v0 + 152);

  v70 = *(void (**)(uint64_t, uint64_t))(v69 + 8);
  v70(v45, v68);
  *(_QWORD *)(v0 + 248) = v70;
  *(_QWORD *)(v0 + 256) = v40;
  v71 = objc_msgSend(*(id *)(v0 + 80), "hostInfo");
  v72 = objc_msgSend(v71, "routeType");

  if (v72 != 1)
  {
    v74 = objc_msgSend(*(id *)(v0 + 80), "hostInfo");
    v75 = objc_msgSend(v74, "routeType");

    if (v75 != 2)
    {
      if (qword_10119C288 != -1)
        swift_once(&qword_10119C288, sub_100594184);
      swift_retain();
      sub_100595160(2, 2u);
      *(_QWORD *)&v73 = swift_release().n128_u64[0];
    }
  }
  v76 = objc_msgSend(*(id *)(v0 + 104), "delegate", v73);
  if (!v76
    || (*(_QWORD *)(v0 + 56) = v76,
        v77 = sub_100007E8C(&qword_1011A9300),
        v78 = sub_100007E8C(&qword_1011A3120),
        (swift_dynamicCast(v0 + 16, v0 + 56, v77, v78, 6) & 1) == 0))
  {
    *(_QWORD *)(v0 + 48) = 0;
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    goto LABEL_23;
  }
  v79 = *(_QWORD *)(v0 + 40);
  if (!v79)
  {
LABEL_23:
    sub_10004FF60(v0 + 16, (uint64_t *)&unk_1011A3110);
    swift_release();

    goto LABEL_24;
  }
  v80 = *(_QWORD *)(*sub_100007E68((_QWORD *)(v0 + 16), v79) + OBJC_IVAR____TtC5Music17MainSceneDelegate_interfaceContext);
  *(_QWORD *)(v0 + 264) = v80;
  swift_retain();
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 16));
  if (v80)
  {
    v81 = *(_QWORD *)(v0 + 128);
    v82 = *(_QWORD *)(v0 + 112);
    v83 = v35;
    v84 = sub_100047BCC((uint64_t)&off_1010AD5A8);
    swift_arrayDestroy(&unk_1010AD5C8, 2, &type metadata for AppInterfaceContext.Activity.PresentationOptions);
    *(_QWORD *)v81 = v83;
    *(_BYTE *)(v81 + 8) = 1;
    *(_QWORD *)(v81 + 16) = v84;
    swift_storeEnumTagMultiPayload(v81, v82, 2);
    v85 = (_QWORD *)swift_task_alloc(dword_1011C791C);
    *(_QWORD *)(v0 + 272) = v85;
    *v85 = v0;
    v85[1] = sub_1007C2640;
    return sub_100771208(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 128));
  }
  swift_release();

LABEL_24:
  v87 = swift_release();
  v88 = *(_QWORD *)(v0 + 136);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD, __n128))(*(_QWORD *)(v0 + 120) + 56))(v88, 1, 1, *(_QWORD *)(v0 + 112), v87);
  sub_10004FF60(v88, &qword_1011B6C70);
  v89 = *(_QWORD *)(v0 + 192);
  v91 = *(_QWORD *)(v0 + 176);
  v90 = *(_QWORD *)(v0 + 184);
  v93 = *(_QWORD *)(v0 + 160);
  v92 = *(_QWORD *)(v0 + 168);
  v95 = *(_QWORD *)(v0 + 128);
  v94 = *(_QWORD *)(v0 + 136);
  swift_task_dealloc(*(_QWORD *)(v0 + 200));
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1007C2640()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 272);
  v4 = *(_QWORD *)(*v1 + 128);
  *(_QWORD *)(*v1 + 280) = v0;
  swift_task_dealloc(v3);
  sub_10005B748(v4, type metadata accessor for AppInterfaceContext.Activity);
  swift_release();
  if (v0)
    v5 = sub_1007C2794;
  else
    v5 = sub_1007C26C4;
  return swift_task_switch(v5, *(_QWORD *)(v2 + 216), *(_QWORD *)(v2 + 224));
}

uint64_t sub_1007C26C4()
{
  uint64_t v0;
  void *v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(void **)(v0 + 240);
  swift_release();

  v2 = swift_release();
  v3 = *(_QWORD *)(v0 + 136);
  (*(void (**)(uint64_t, _QWORD, uint64_t, _QWORD, __n128))(*(_QWORD *)(v0 + 120) + 56))(v3, 0, 1, *(_QWORD *)(v0 + 112), v2);
  sub_10004FF60(v3, &qword_1011B6C70);
  v4 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 176);
  v5 = *(_QWORD *)(v0 + 184);
  v8 = *(_QWORD *)(v0 + 160);
  v7 = *(_QWORD *)(v0 + 168);
  v10 = *(_QWORD *)(v0 + 128);
  v9 = *(_QWORD *)(v0 + 136);
  swift_task_dealloc(*(_QWORD *)(v0 + 200));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1007C2794()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  void *v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  __n128 v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, __n128);
  uint64_t v33;

  v1 = *(_QWORD *)(v0 + 280);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 256);
  v3 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 144);
  swift_release();
  v5 = Logger.sharePlayTogether.unsafeMutableAddressor();
  v2(v3, v5, v4);
  swift_errorRetain(v1);
  v6 = swift_errorRetain(v1);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.error.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v9 = *(_QWORD *)(v0 + 280);
    v10 = *(void **)(v0 + 240);
    v31 = *(_QWORD *)(v0 + 160);
    v32 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 248);
    v30 = *(_QWORD *)(v0 + 144);
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    *(_DWORD *)v11 = 136446210;
    v33 = v12;
    *(_QWORD *)(v0 + 64) = v9;
    swift_errorRetain(v9);
    v13 = sub_100007E8C(&qword_1011A14B0);
    v14 = String.init<A>(describing:)(v0 + 64, v13);
    *(_QWORD *)(v0 + 72) = sub_100322200(v14, v15, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 72, v0 + 80);
    swift_bridgeObjectRelease();
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Unable to present join card: %{public}s", v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);

    swift_errorRelease(v9);
    v16 = swift_release();
    v32(v31, v30, v16);
  }
  else
  {
    v17 = *(_QWORD *)(v0 + 280);
    v19 = *(void **)(v0 + 240);
    v18 = *(void (**)(uint64_t, uint64_t))(v0 + 248);
    v20 = *(_QWORD *)(v0 + 160);
    v21 = *(_QWORD *)(v0 + 144);
    swift_release();

    swift_errorRelease(v17);
    swift_errorRelease(v17);
    swift_errorRelease(v17);

    v18(v20, v21);
  }
  v22 = *(_QWORD *)(v0 + 192);
  v24 = *(_QWORD *)(v0 + 176);
  v23 = *(_QWORD *)(v0 + 184);
  v26 = *(_QWORD *)(v0 + 160);
  v25 = *(_QWORD *)(v0 + 168);
  v28 = *(_QWORD *)(v0 + 128);
  v27 = *(_QWORD *)(v0 + 136);
  swift_task_dealloc(*(_QWORD *)(v0 + 200));
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_1007C2A10(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  _QWORD *v22;
  void (*v23)(uint64_t, double (*)(uint64_t), _QWORD *);
  char *v24;
  id v25;
  double result;
  uint64_t v27;
  char v28;

  v27 = a2;
  v9 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)&a1[qword_1011C48D0];
  KeyPath = swift_getKeyPath(&unk_100ED0118);
  v15 = swift_getKeyPath(&unk_100ED0140);
  v28 = 1;
  swift_retain();
  static Published.subscript.setter(&v28, v13, KeyPath, v15);
  v16 = Logger.sharePlayTogether.unsafeMutableAddressor();
  v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v16, v9);
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v20 = 0;
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Connecting to session", v20, 2u);
    swift_slowDealloc(v20, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (qword_10119B8B0 != -1)
    swift_once(&qword_10119B8B0, sub_1000E948C);
  v21 = qword_10124C788;
  v22 = (_QWORD *)swift_allocObject(&unk_1010DC690, 48, 7);
  v22[2] = a1;
  v22[3] = a3;
  v22[4] = a4;
  v22[5] = a5;
  v23 = *(void (**)(uint64_t, double (*)(uint64_t), _QWORD *))(*(_QWORD *)v21 + 712);
  v24 = a1;
  sub_100048AAC(a3, a4);
  v25 = a5;
  v23(v27, sub_1007C5438, v22);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

double sub_1007C2C08(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  void *v25;
  id v26;
  id v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  double result;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD aBlock[6];

  v10 = type metadata accessor for DispatchWorkItemFlags(0);
  v38 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchQoS(0);
  v36 = *(_QWORD *)(v13 - 8);
  v37 = v13;
  __chkstk_darwin(v13);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
  v35 = static OS_dispatch_queue.main.getter(v16, v17, v18, v19, v20, v21, v22, v23);
  v24 = (_QWORD *)swift_allocObject(&unk_1010DC6B8, 56, 7);
  v24[2] = a1;
  v24[3] = a2;
  v24[4] = a3;
  v24[5] = a4;
  v24[6] = a5;
  aBlock[4] = sub_1007C5488;
  aBlock[5] = v24;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001DBD98;
  aBlock[3] = &unk_1010DC6D0;
  v25 = _Block_copy(aBlock);
  swift_errorRetain(a1);
  v26 = a2;
  sub_100048AAC(a3, a4);
  v27 = a5;
  static DispatchQoS.unspecified.getter(v28);
  v39 = _swiftEmptyArrayStorage;
  v29 = sub_100048748((unint64_t *)&qword_1011A30C0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v30 = sub_100007E8C((uint64_t *)&unk_1011A2120);
  v31 = sub_100049F28(&qword_1011A30D0, (uint64_t *)&unk_1011A2120, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v39, v30, v31, v10, v29);
  v32 = (void *)v35;
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v15, v12, v25);
  _Block_release(v25);

  (*(void (**)(char *, uint64_t))(v38 + 8))(v12, v10);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v37);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_1007C2E44(uint64_t a1, char *a2, void (*a3)(_QWORD), uint64_t a4, void *a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  BOOL v28;
  uint8_t *v29;
  void (*v30)(_QWORD);
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t KeyPath;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  Swift::String v48;
  uint64_t v49;
  NSString v50;
  NSString v51;
  id v52;
  id v53;
  NSString v54;
  id v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSString v60;
  id v61;
  NSString v62;
  id v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  char *v74;
  id v75;
  char *v76;
  char *v77;
  uint64_t v78;
  _QWORD v79[2];
  __int128 aBlock;
  __int128 v81;
  uint64_t (*v82)();
  uint64_t v83;

  v78 = a4;
  v9 = type metadata accessor for AppInterfaceContext.Activity(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Locale(0);
  __chkstk_darwin(v12);
  v77 = (char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v14);
  v76 = (char *)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Logger(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v70 - v21;
  if (a1)
  {
    v74 = a2;
    v75 = a5;
    swift_errorRetain(a1);
    v23 = Logger.sharePlayTogether.unsafeMutableAddressor();
    v24 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
    v73 = v16;
    v24(v19, v23, v16);
    swift_errorRetain(a1);
    v25 = swift_errorRetain(a1);
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.error.getter(v26);
    v28 = os_log_type_enabled(v26, v27);
    v71 = v9;
    v72 = v11;
    if (v28)
    {
      v29 = (uint8_t *)swift_slowAlloc(12, -1);
      v70 = (uint64_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v29 = 138543362;
      swift_errorRetain(a1);
      v30 = a3;
      v31 = _swift_stdlib_bridgeErrorToNSError(a1);
      *(_QWORD *)&aBlock = v31;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, (char *)&aBlock + 8);
      v32 = v70;
      *v70 = v31;
      a3 = v30;
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Failed to join session: %{public}@", v29, 0xCu);
      v33 = sub_100007E8C((uint64_t *)&unk_1011A33E0);
      swift_arrayDestroy(v32, 1, v33);
      swift_slowDealloc(v32, -1, -1);
      swift_slowDealloc(v29, -1, -1);
    }
    else
    {
      swift_errorRelease(a1);
      swift_errorRelease(a1);
    }

    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v73);
    v42 = *(_QWORD *)&v74[qword_1011C48D0];
    KeyPath = swift_getKeyPath(&unk_100ED0118);
    v44 = swift_getKeyPath(&unk_100ED0140);
    LOBYTE(aBlock) = 0;
    swift_retain();
    static Published.subscript.setter(&aBlock, v42, KeyPath, v44);
    LODWORD(v42) = *DeviceCapabilities.isInternalInstall.unsafeMutableAddressor();
    v45 = v76;
    v46 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000027, 0x8000000100E34160);
    v47 = v77;
    static Locale.current.getter(v46);
    if ((_DWORD)v42 == 1)
    {
      String.init(localized:table:bundle:locale:comment:)(v45, 0, 0, 0, v47, 0, 0, 256);
      *(_QWORD *)&aBlock = 0;
      *((_QWORD *)&aBlock + 1) = 0xE000000000000000;
      v48._countAndFlagsBits = 0x414E5245544E495BLL;
      v48._object = (void *)0xEB00000000205D4CLL;
      String.append(_:)(v48);
      v79[0] = a1;
      v49 = sub_100007E8C(&qword_1011A14B0);
      _print_unlocked<A, B>(_:_:)(v79, &aBlock, v49, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      v50 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      v51 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      v52 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v50, v51, 1);

      v53 = v52;
      String.okButtonTitle.unsafeMutableAddressor();
      swift_bridgeObjectRetain();
      v54 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      v55 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v54, 0, 0);

      objc_msgSend(v53, "addAction:", v55);
      v56 = objc_msgSend(v75, "delegate");
      if (v56)
      {
        v79[0] = v56;
        v57 = sub_100007E8C(&qword_1011A9300);
        v58 = sub_100007E8C(&qword_1011A3120);
        if ((swift_dynamicCast(&aBlock, v79, v57, v58, 6) & 1) != 0)
        {
          v59 = *((_QWORD *)&v81 + 1);
          if (!*((_QWORD *)&v81 + 1))
            goto LABEL_21;
LABEL_16:
          v67 = *(_QWORD *)(*sub_100007E68(&aBlock, v59) + OBJC_IVAR____TtC5Music17MainSceneDelegate_interfaceContext);
          swift_retain();
          _s5Music18DragDropToPlaylistV6OriginVwxx_0(&aBlock);
          if (v67)
          {
            v68 = v71;
            v69 = (uint64_t)v72;
            *v72 = v53;
            *(_BYTE *)(v69 + 8) = 1;
            *(_QWORD *)(v69 + 16) = &_swiftEmptySetSingleton;
            swift_storeEnumTagMultiPayload(v69, v68, 2);
            sub_100770824(v69, 0, 0);
            swift_release();
            sub_10005B748(v69, type metadata accessor for AppInterfaceContext.Activity);
            if (a3)
            {
LABEL_23:
              swift_errorRetain(a1);
              a3(a1);

              swift_errorRelease(a1);
              goto LABEL_24;
            }
LABEL_18:

LABEL_24:
            swift_errorRelease(a1);
            return;
          }
LABEL_22:

          if (a3)
            goto LABEL_23;
          goto LABEL_18;
        }
      }
      v82 = 0;
      aBlock = 0u;
      v81 = 0u;
    }
    else
    {
      String.init(localized:table:bundle:locale:comment:)(v45, 0, 0, 0, v47, 0, 0, 256);
      v60 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      v61 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", 0, v60, 1);

      v53 = v61;
      String.okButtonTitle.unsafeMutableAddressor();
      swift_bridgeObjectRetain();
      v62 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      v63 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v62, 0, 0);

      objc_msgSend(v53, "addAction:", v63);
      v64 = objc_msgSend(v75, "delegate");
      if (v64
        && (v79[0] = v64,
            v65 = sub_100007E8C(&qword_1011A9300),
            v66 = sub_100007E8C(&qword_1011A3120),
            (swift_dynamicCast(&aBlock, v79, v65, v66, 6) & 1) != 0))
      {
        v59 = *((_QWORD *)&v81 + 1);
        if (*((_QWORD *)&v81 + 1))
          goto LABEL_16;
      }
      else
      {
        v82 = 0;
        aBlock = 0u;
        v81 = 0u;
      }
    }
LABEL_21:
    sub_10004FF60((uint64_t)&aBlock, (uint64_t *)&unk_1011A3110);
    goto LABEL_22;
  }
  v34 = Logger.sharePlayTogether.unsafeMutableAddressor();
  v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 16))(v22, v34, v16);
  v36 = Logger.logObject.getter(v35);
  v37 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v36, v37))
  {
    v38 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v38 = 0;
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "Joined session", v38, 2u);
    swift_slowDealloc(v38, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);
  v39 = swift_allocObject(&unk_1010DC708, 32, 7);
  v40 = v78;
  *(_QWORD *)(v39 + 16) = a3;
  *(_QWORD *)(v39 + 24) = v40;
  v82 = sub_1007C549C;
  v83 = v39;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v81 = sub_1001DBD98;
  *((_QWORD *)&v81 + 1) = &unk_1010DC720;
  v41 = _Block_copy(&aBlock);
  sub_100048AAC((uint64_t)a3, v40);
  objc_msgSend(a2, "dismissViewControllerAnimated:completion:", 1, v41, swift_release().n128_f64[0]);
  _Block_release(v41);
}

uint64_t sub_1007C36D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[15];
  uint64_t v18;

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  KeyPath = swift_getKeyPath(&unk_100ED0118);
  v9 = swift_getKeyPath(&unk_100ED0140);
  static Published.subscript.getter(&v18, a1, KeyPath, v9);
  swift_release(KeyPath);
  swift_release(v9);
  if (v18 == 1)
  {
    v10 = String.LocalizationValue.init(stringLiteral:)(0x697463656E6E6F43, 0xEA0000000000676ELL);
    static Locale.current.getter(v10);
    v11 = "Shown when attempting to join a SharePlay session.";
    v12 = v7;
    v13 = v4;
    v14 = 50;
  }
  else
  {
    v15 = String.LocalizationValue.init(stringLiteral:)(0x7463656E6E6F43, 0xE700000000000000);
    static Locale.current.getter(v15);
    v11 = "Button action for connecting to a SharePlay session.";
    v12 = v7;
    v13 = v4;
    v14 = 52;
  }
  return String.init(localized:table:bundle:locale:comment:)(v12, 0, 0, 0, v13, v11, v14, 2);
}

uint64_t sub_1007C385C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = sub_100007E8C(&qword_1011BE2D0);
  __chkstk_darwin(v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(a1, (uint64_t)v4, &qword_1011BE2D0);
  return EnvironmentValues.symbolRenderingMode.setter(v4);
}

void sub_1007C38DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  _QWORD v27[2];
  uint64_t v28;
  char *v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;

  v4 = sub_100007E8C(&qword_1011C8D50);
  __chkstk_darwin(v4);
  v27[0] = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v27[1] = (char *)v27 - v7;
  v28 = type metadata accessor for SharePlayTogetherSession.Participant(0);
  __chkstk_darwin(v28);
  v29 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v30 = (char *)v27 - v10;
  __chkstk_darwin(v11);
  v31 = (char *)v27 - v12;
  __chkstk_darwin(v13);
  __chkstk_darwin(v14);
  v33 = (char *)v27 - v15;
  __chkstk_darwin(v16);
  v32 = (char *)v27 - v17;
  v18 = type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier(0);
  __chkstk_darwin(v18);
  __chkstk_darwin(v19);
  __chkstk_darwin(v20);
  v21 = sub_100007E8C(&qword_1011C8E08);
  __chkstk_darwin(v21);
  v23 = (char *)v27 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = (uint64_t)&v23[*(int *)(v24 + 48)];
  sub_10005B704(a1, (uint64_t)v23, type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier);
  sub_10005B704(a2, v25, type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier);
  v26 = (char *)sub_1007C3B38 + 4 * byte_100ECFEE5[swift_getEnumCaseMultiPayload(v23, v18)];
  __asm { BR              X10 }
}

BOOL sub_1007C3B38()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  BOOL v4;

  sub_10005B704(v0, (uint64_t)v1, type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier);
  if (swift_getEnumCaseMultiPayload(v3, v2))
  {
    sub_10004FF60(v0, &qword_1011C8E08);
    return 0;
  }
  else
  {
    v4 = *v1 == *v3;
    sub_10005B748(v0, type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier);
  }
  return v4;
}

void sub_1007C4014(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t (*v46)();
  uint64_t v47;
  void *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  id v55;
  Swift::Int v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t (*v65)();
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _BOOL4 v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  int v78;
  id v79;
  __int128 v80;
  __int128 v81;
  uint64_t v82;

  v76 = a4;
  v78 = a2 & 1;
  v11 = type metadata accessor for AppInterfaceContext.Activity(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Locale(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = v13;
  v63 = v11;
  v77 = a1;
  if ((a2 & 1) != 0)
  {
    v28 = String.LocalizationValue.init(stringLiteral:)(0x616C506572616853, 0xE900000000000079);
    static Locale.current.getter(v28);
    v29 = String.init(localized:table:bundle:locale:comment:)(v19, 0, 0, 0, v16, 0, 0, 256);
    v69 = v30;
    v70 = v29;
    v31 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000055, 0x8000000100E45780);
    static Locale.current.getter(v31);
    v32 = String.init(localized:table:bundle:locale:comment:)(v19, 0, 0, 0, v16, 0, 0, 256);
    v67 = v33;
    v68 = v32;
    v66 = 0;
    v65 = sub_1007C36D4;
  }
  else
  {
    v20 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000020, 0x8000000100E455F0);
    static Locale.current.getter(v20);
    v21 = String.init(localized:table:bundle:locale:comment:)(v19, 0, 0, 0, v16, 0, 0, 256);
    v69 = v22;
    v70 = v21;
    v23 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000005DLL, 0x8000000100E45620);
    static Locale.current.getter(v23);
    v24 = String.init(localized:table:bundle:locale:comment:)(v19, 0, 0, 0, v16, 0, 0, 256);
    v67 = v25;
    v68 = v24;
    v26 = String.LocalizationValue.init(stringLiteral:)(19279, 0xE200000000000000);
    static Locale.current.getter(v26);
    v65 = (uint64_t (*)())String.init(localized:table:bundle:locale:comment:)(v19, 0, 0, 0, v16, 0, 0, 256);
    v66 = v27;
  }
  v74 = v78 == 0;
  v75 = Image.init(_internalSystemName:)(0x616C706572616873, 0xE900000000000079);
  v34 = String.LocalizationValue.init(stringLiteral:)(0x4120726165707041, 0xE900000000000073);
  static Locale.current.getter(v34);
  v35 = String.init(localized:table:bundle:locale:comment:)(v19, 0, 0, 0, v16, 0, 0, 256);
  v72 = v36;
  v73 = v35;
  v37 = String.LocalizationValue.init(stringLiteral:)(0xD0000000000000AALL, 0x8000000100E45680);
  static Locale.current.getter(v37);
  v71 = String.init(localized:table:bundle:locale:comment:)(v19, 0, 0, 0, v16, "{{userName}} will be replaced by the user's actual name, please do not remove.", 78, 2);
  v39 = v38;
  v40 = swift_allocObject(&unk_1010DC588, 32, 7);
  v41 = a3;
  v42 = v76;
  *(_QWORD *)(v40 + 16) = a3;
  *(_QWORD *)(v40 + 24) = v42;
  v43 = swift_allocObject(&unk_1010DC5B0, 32, 7);
  v44 = a5;
  *(_QWORD *)(v43 + 16) = a5;
  *(_QWORD *)(v43 + 24) = a6;
  v45 = objc_allocWithZone((Class)type metadata accessor for SharePlayProxCardViewController(0));
  v46 = v65;
  v47 = v66;
  sub_1006EC874((uint64_t)v65, v66, v74);
  sub_100048AAC(v41, v42);
  sub_100048AAC(v44, a6);
  v48 = (void *)sub_1006EA9E4(v75, v70, v69, v68, v67, v73, v72, v71, v39, (uint64_t)v46, v47, v78 ^ 1u, 1u, (uint64_t)sub_10013C214, v40, (uint64_t)sub_10013C214, v43);
  v49 = objc_msgSend(v77, "delegate");
  v50 = v47;
  if (!v49
    || (v79 = v49,
        v51 = sub_100007E8C(&qword_1011A9300),
        v52 = sub_100007E8C(&qword_1011A3120),
        (swift_dynamicCast(&v80, &v79, v51, v52, 6) & 1) == 0))
  {
    v82 = 0;
    v80 = 0u;
    v81 = 0u;
    goto LABEL_10;
  }
  if (!*((_QWORD *)&v81 + 1))
  {
LABEL_10:
    v58 = v78 == 0;
    sub_10004FF60((uint64_t)&v80, (uint64_t *)&unk_1011A3110);
    v59 = (uint64_t)v46;
    v60 = v47;
    v61 = v58;
    goto LABEL_11;
  }
  v53 = *(_QWORD *)(*sub_100007E68(&v80, *((uint64_t *)&v81 + 1))
                  + OBJC_IVAR____TtC5Music17MainSceneDelegate_interfaceContext);
  swift_retain(v53);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v80);
  if (v53)
  {
    v54 = v78 == 0;
    v55 = v48;
    v56 = sub_100047BCC((uint64_t)&off_1010AA5F0);
    swift_arrayDestroy(&unk_1010AA610, 2, &type metadata for AppInterfaceContext.Activity.PresentationOptions);
    v57 = (uint64_t)v64;
    *v64 = v55;
    *(_BYTE *)(v57 + 8) = 1;
    *(_QWORD *)(v57 + 16) = v56;
    swift_storeEnumTagMultiPayload(v57, v63, 2);
    sub_100770824(v57, 0, 0);

    swift_release(v53);
    sub_1006EC948((uint64_t)v46, v50, v54);
    sub_10005B748(v57, type metadata accessor for AppInterfaceContext.Activity);
    return;
  }
  v61 = v78 == 0;
  v59 = (uint64_t)v46;
  v60 = v47;
LABEL_11:
  sub_1006EC948(v59, v60, v61);

}

void sub_1007C4614()
{
  _BYTE *v0;
  char *v1;
  _QWORD *v2;
  _OWORD *v3;
  char *v4;
  uint64_t v5;

  v1 = &v0[OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_preferredWidth];
  *(_QWORD *)v1 = 0;
  v1[8] = 1;
  v2 = &v0[OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_onDismiss];
  *v2 = 0;
  v2[1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController____lazy_storage___collectionView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_dataSource] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_observables] = &_swiftEmptySetSingleton;
  v3 = &v0[OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_lastSeenSafeAreaLayoutFrame];
  *v3 = 0u;
  v3[1] = 0u;
  v4 = &v0[OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_lastPendingParticipantScrolledTo];
  v5 = type metadata accessor for SharePlayTogetherSession.Participant(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_contentSizeObserver] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_discoveryPreferenceObserver] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_sessionAssertion] = 0;
  v0[OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_viewDidAppearOnce] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E2B820, "Music/SharePlayTogetherSessionManagementViewController.swift", 60, 2, 95, 0);
  __break(1u);
}

void sub_1007C473C(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;

  v2 = v1;
  v4 = sub_100007E8C((uint64_t *)&unk_1011C8E10);
  __chkstk_darwin(v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v8 = __chkstk_darwin(v7).n128_u64[0];
  v10 = (char *)&v16 - v9;
  v11 = objc_msgSend(v2, "traitCollection", v8);
  v12 = objc_msgSend(v11, "userInterfaceIdiom");

  if (v12 == (id)3)
  {
    v13 = *(void **)&v2[OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_dataSource];
    if (v13)
    {
      v14 = v13;
      dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(a1);

      v15 = type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier(0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v10, 1, v15) != 1)
      {
        sub_10004A160((uint64_t)v10, (uint64_t)v6, (uint64_t *)&unk_1011C8E10);
        if (swift_getEnumCaseMultiPayload(v6, v15) != 2)
          sub_10005B748((uint64_t)v6, type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier);
      }
      sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_1011C8E10);
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_1007C48B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

void sub_1007C48DC()
{
  uint64_t v0;

  sub_1007B8F6C(v0);
}

uint64_t sub_1007C48E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C((uint64_t *)&unk_1011C8E40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1007C492C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

void sub_1007C493C(uint64_t a1)
{
  uint64_t v1;

  sub_1007B6B68(a1, v1);
}

uint64_t sub_1007C4948(uint64_t a1)
{
  uint64_t v1;

  return sub_1007B72A4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1007C4954(_QWORD **a1)
{
  uint64_t v1;

  sub_1007B76DC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1007C495C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_1007C4988()
{
  uint64_t v0;

  sub_1007B792C(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1007C4994()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1007C49C0()
{
  uint64_t v0;

  sub_1007B74C8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1007C49C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1007C49D8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1007C49E0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1007C4A04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1007B2FB0(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1007C4A0C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1007C4A30@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_1007B3370(a1, a2, *(_QWORD *)(v3 + 16), a3);
}

uint64_t sub_1007C4A44(uint64_t a1)
{
  uint64_t v1;

  return sub_1007B3A80(a1, v1);
}

uint64_t sub_1007C4A4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for SharePlayTogetherSession.Participant(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = v0 + v3 + *(int *)(v1 + 32);
  v6 = type metadata accessor for SocialProfile(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v5, v6);
  return swift_deallocObject(v0, v3 + v4);
}

uint64_t sub_1007C4B04(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;

  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SharePlayTogetherSession.Participant(0) - 8) + 80);
  return sub_1007B3F80(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), v4 + ((v9 + 24) & ~v9));
}

void sub_1007C4B6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1007B47D8(a1, a2, a3, v3);
}

void sub_1007C4B74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1007B4D74(a1, a2, a3, v3);
}

void sub_1007C4B7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1007B5380(a1, a2, a3, v3);
}

void sub_1007C4B84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1007B553C(a1, a2, a3, v3);
}

void sub_1007C4B8C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1007B5A68(a1, a2, a3, v3);
}

uint64_t sub_1007C4B94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  __n128 v12;
  void (*v13)(uint64_t, uint64_t, __n128);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = sub_100007E8C((uint64_t *)&unk_1011C8E70);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v15 = (v3 + 24) & ~v3;
  v4 = *(_QWORD *)(v2 + 64);
  v17 = sub_100007E8C(&qword_1011C8E68);
  v5 = *(_QWORD *)(v17 - 8);
  v6 = (v15 + v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v16 = sub_100007E8C(&qword_1011C8E60);
  v8 = *(_QWORD *)(v16 - 8);
  v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = (*(_QWORD *)(v8 + 64) + v3 + v9) & ~v3;
  v11 = (v4 + v3 + v10) & ~v3;
  v12 = swift_release();
  v13 = *(void (**)(uint64_t, uint64_t, __n128))(v2 + 8);
  v13(v0 + v15, v1, v12);
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v17);
  (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v0 + v9, v16);
  ((void (*)(unint64_t, uint64_t))v13)(v0 + v10, v1);
  ((void (*)(unint64_t, uint64_t))v13)(v0 + v11, v1);
  return swift_deallocObject(v0, v11 + v4);
}

id sub_1007C4CD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;

  v7 = *(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011C8E70) - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v8 + 24) & ~v8;
  v10 = *(_QWORD *)(v7 + 64);
  v11 = *(_QWORD *)(sub_100007E8C(&qword_1011C8E68) - 8);
  v12 = (v9 + v10 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 64);
  v14 = *(_QWORD *)(sub_100007E8C(&qword_1011C8E60) - 8);
  v15 = (v12 + v13 + *(unsigned __int8 *)(v14 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v16 = (*(_QWORD *)(v14 + 64) + v8 + v15) & ~v8;
  return sub_1007B5C08(a1, a2, a3, *(_QWORD *)(v3 + 16), v3 + v9, v3 + v12, v3 + v15, v3 + v16, v3 + ((v10 + v8 + v16) & ~v8));
}

id sub_1007C4DD0@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;
  uint64_t v5;

  result = objc_msgSend(*a1, "contentSize");
  *a2 = v4;
  a2[1] = v5;
  return result;
}

id sub_1007C4E00(double *a1, id *a2)
{
  return objc_msgSend(*a2, "setContentSize:", *a1, a1[1]);
}

void sub_1007C4E14()
{
  uint64_t v0;

  sub_1007B6A98(v0);
}

void sub_1007C4E1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1007B639C(a1, a2, a3, v3);
}

uint64_t sub_1007C4E24()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1007C4E50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1007B6780(a1, a2, *(_QWORD *)(v2 + 16), *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_1007C4E5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1007BAB8C(*(unsigned __int8 *)(v1 + 16), a1);
}

unint64_t sub_1007C4E64()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C8EB8;
  if (!qword_1011C8EB8)
  {
    v1 = sub_100044B54((uint64_t *)&unk_1011C8EC0);
    sub_100049F28(&qword_1011BBAF0, &qword_1011C8ED0, (uint64_t)&protocol conformance descriptor for Toggle<A>);
    sub_100049F28(&qword_1011A0FB0, &qword_1011A43F0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C8EB8);
  }
  return result;
}

uint64_t sub_1007C4F00()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1007C4F24@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = MRGroupSessionNearbyContactDiscoveryEnabled();
  *a1 = result;
  return result;
}

uint64_t sub_1007C4F48(unsigned __int8 *a1)
{
  return MRSetGroupSessionNearbyContactDiscoveryEnabled(*a1);
}

void sub_1007C4F60()
{
  uint64_t v0;

  sub_1007B569C(v0, (uint64_t)&unk_1010DC4E8, (uint64_t)&unk_1011C8EF8);
}

uint64_t sub_1007C4F88@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1007BA7B0(v1[2], v1[3], v1[4], a1);
}

uint64_t type metadata accessor for SharePlayTogetherSessionManagementViewController.QRCodeCell(uint64_t a1)
{
  return sub_100055934(a1, qword_1011C9180, (uint64_t)&nominal type descriptor for SharePlayTogetherSessionManagementViewController.QRCodeCell);
}

uint64_t sub_1007C4FB4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1011C8EF4);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10005AEE4;
  return sub_1007B57B4(a1, v4, v5, v6);
}

uint64_t sub_1007C5020(uint64_t a1)
{
  sub_1007C5050(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(void **)(a1 + 24));
  return a1;
}

void sub_1007C5050(uint64_t a1, uint64_t a2, unint64_t a3, void *a4)
{
  if (a4)
  {
    sub_1000652DC(a2, a3);

  }
}

id sub_1007C5084@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1007BAA34(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32), a1);
}

uint64_t type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView(uint64_t a1)
{
  return sub_100055934(a1, qword_1011C90E8, (uint64_t)&nominal type descriptor for SharePlayTogetherSessionManagementViewController.ParticipantView);
}

void sub_1007C50A4()
{
  uint64_t v0;

  sub_1007B4F74(v0);
}

uint64_t sub_1007C50AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1007BA8E4(*(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), a1);
}

uint64_t type metadata accessor for SharePlayTogetherSessionManagementViewController.StatusHeaderView(uint64_t a1)
{
  return sub_100055934(a1, qword_1011C9048, (uint64_t)&nominal type descriptor for SharePlayTogetherSessionManagementViewController.StatusHeaderView);
}

uint64_t sub_1007C50D0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1007C50F4()
{
  uint64_t v0;
  _QWORD *v1;
  void (*v2)(void);
  _QWORD *v3;

  v1 = *(_QWORD **)(*(_QWORD *)(v0 + 16)
                  + OBJC_IVAR____TtC5Music48SharePlayTogetherSessionManagementViewController_session);
  v2 = *(void (**)(void))((swift_isaMask & *v1) + 0x340);
  v3 = v1;
  v2();

}

void sub_1007C5150()
{
  uint64_t v0;

  sub_1007B569C(v0, (uint64_t)&unk_1010DC560, (uint64_t)&unk_1011C8F78);
}

uint64_t sub_1007C5178@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1007BA730(v1[2], v1[3], v1[4], a1);
}

unint64_t sub_1007C5184()
{
  unint64_t result;

  result = qword_1011C8F60;
  if (!qword_1011C8F60)
  {
    result = swift_getWitnessTable(&unk_100ED01CC, &type metadata for SharePlayTogetherSessionManagementViewController.CarPlayHeaderView);
    atomic_store(result, (unint64_t *)&qword_1011C8F60);
  }
  return result;
}

uint64_t sub_1007C51CC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1011C8F74);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10006AEE4;
  return sub_1007B4A98(a1, v4, v5, v6);
}

uint64_t sub_1007C5238()
{
  return EnvironmentValues.symbolRenderingMode.getter();
}

uint64_t sub_1007C5270(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1011C8FD4);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10006AEE4;
  return sub_1007C181C(a1, v4, v5, v6);
}

uint64_t sub_1007C52DC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  if (*(_QWORD *)(v0 + 40))
    swift_release(*(_QWORD *)(v0 + 48));

  return swift_deallocObject(v0, 66, 7);
}

uint64_t sub_1007C5320(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _QWORD *v11;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_QWORD *)(v1 + 48);
  v9 = *(_QWORD *)(v1 + 56);
  v10 = *(_BYTE *)(v1 + 64);
  v11 = (_QWORD *)swift_task_alloc(dword_1011C8FE4);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_10006AEE4;
  return sub_1007C1CF8(a1, v4, v5, v6, v7, v8, v9, v10);
}

double sub_1007C53C8(char *a1)
{
  uint64_t v1;

  return sub_1007C2A10(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_1007C53D4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1007C53FC()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
    swift_release(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 48, 7);
}

double sub_1007C5438(uint64_t a1)
{
  uint64_t v1;

  return sub_1007C2C08(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_1007C5444()
{
  uint64_t v0;

  swift_errorRelease(*(_QWORD *)(v0 + 16));

  if (*(_QWORD *)(v0 + 32))
    swift_release(*(_QWORD *)(v0 + 40));

  return swift_deallocObject(v0, 56, 7);
}

void sub_1007C5488()
{
  uint64_t v0;

  sub_1007C2E44(*(_QWORD *)(v0 + 16), *(char **)(v0 + 24), *(void (**)(_QWORD))(v0 + 32), *(_QWORD *)(v0 + 40), *(void **)(v0 + 48));
}

uint64_t sub_1007C549C()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);
  uint64_t result;

  v1 = *(uint64_t (**)(_QWORD))(v0 + 16);
  if (v1)
    return v1(0);
  return result;
}

uint64_t destroy for SharePlayTogetherSessionManagementViewController.CarPlayHeaderView(uint64_t a1)
{
  uint64_t result;

  result = swift_release(*(_QWORD *)(a1 + 16));
  if (*(_QWORD *)(a1 + 24))
    return swift_release(*(_QWORD *)(a1 + 32));
  return result;
}

uint64_t initializeWithCopy for SharePlayTogetherSessionManagementViewController.CarPlayHeaderView(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  id v8;
  uint64_t v9;

  v4 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v5;
  v7 = (_OWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 24);
  v8 = v4;
  swift_retain(v5);
  if (v6)
  {
    v9 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = v9;
    swift_retain(v9);
  }
  else
  {
    *(_OWORD *)(a1 + 24) = *v7;
  }
  return a1;
}

uint64_t assignWithCopy for SharePlayTogetherSessionManagementViewController.CarPlayHeaderView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v8;
  swift_retain(v8);
  swift_release(v7);
  v9 = *(_QWORD *)(a2 + 24);
  if (!*(_QWORD *)(a1 + 24))
  {
    if (v9)
    {
      v12 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 24) = v9;
      *(_QWORD *)(a1 + 32) = v12;
      swift_retain(v12);
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    return a1;
  }
  if (!v9)
  {
    swift_release(*(_QWORD *)(a1 + 32));
    goto LABEL_7;
  }
  v10 = *(_QWORD *)(a2 + 32);
  v11 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v9;
  *(_QWORD *)(a1 + 32) = v10;
  swift_retain(v10);
  swift_release(v11);
  return a1;
}

uint64_t assignWithTake for SharePlayTogetherSessionManagementViewController.CarPlayHeaderView(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release(v5);
  v6 = *(_QWORD *)(a2 + 24);
  if (!*(_QWORD *)(a1 + 24))
  {
    if (v6)
    {
      v9 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 24) = v6;
      *(_QWORD *)(a1 + 32) = v9;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    return a1;
  }
  if (!v6)
  {
    swift_release(*(_QWORD *)(a1 + 32));
    goto LABEL_7;
  }
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  swift_release(v8);
  return a1;
}

ValueMetadata *type metadata accessor for SharePlayTogetherSessionManagementViewController.CarPlayHeaderView()
{
  return &type metadata for SharePlayTogetherSessionManagementViewController.CarPlayHeaderView;
}

_QWORD *sub_1007C56F4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  void *v7;
  uint64_t v8;
  _OWORD *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = (void *)a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v9 = a2 + 3;
    v8 = a2[3];
    v10 = v7;
    if (v8)
    {
      v11 = a2[4];
      v4[3] = v8;
      v4[4] = v11;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(v4 + 3) = *v9;
    }
    v13 = *(int *)(a3 + 28);
    v14 = (_QWORD *)((char *)v4 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    v16 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
    {
      v17 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v14, v15, v17);
      v18 = v14;
      v19 = v16;
      v20 = 1;
    }
    else
    {
      *v14 = *v15;
      swift_retain();
      v18 = v14;
      v19 = v16;
      v20 = 0;
    }
    swift_storeEnumTagMultiPayload(v18, v19, v20);
  }
  return v4;
}

double sub_1007C5810(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  if (*(_QWORD *)(a1 + 24))
    swift_release();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_1007C5898(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  _OWORD *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v8 = (_OWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 24);
  v9 = v6;
  if (v7)
  {
    v10 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v7;
    *(_QWORD *)(a1 + 32) = v10;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 24) = *v8;
  }
  v11 = *(int *)(a3 + 28);
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  v14 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
  {
    v15 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v12, v13, v15);
    v16 = 1;
  }
  else
  {
    *v12 = *v13;
    swift_retain();
    v16 = 0;
  }
  swift_storeEnumTagMultiPayload(v12, v14, v16);
  return a1;
}

uint64_t sub_1007C5980(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(void **)(a2 + 8);
  v7 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  v8 = v6;

  v9 = *(_QWORD *)(a1 + 24);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v10 = *(_QWORD *)(a2 + 24);
  if (v9)
  {
    if (v10)
    {
      v11 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 24) = v10;
      *(_QWORD *)(a1 + 32) = v11;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v10)
  {
    v12 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v10;
    *(_QWORD *)(a1 + 32) = v12;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
LABEL_8:
  if (a1 != a2)
  {
    v13 = *(int *)(a3 + 28);
    v14 = (_QWORD *)(a1 + v13);
    v15 = (_QWORD *)(a2 + v13);
    sub_10004FF60(a1 + v13, (uint64_t *)&unk_1011ACE40);
    v16 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
    {
      v17 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v14, v15, v17);
      v18 = 1;
    }
    else
    {
      *v14 = *v15;
      swift_retain();
      v18 = 0;
    }
    swift_storeEnumTagMultiPayload(v14, v16, v18);
  }
  return a1;
}

uint64_t sub_1007C5AC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  if (v4)
  {
    v5 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = v5;
  }
  else
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  }
  v6 = *(int *)(a3 + 28);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1007C5B94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(void **)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;

  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a1 + 24);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  if (v9)
  {
    if (v8)
    {
      v10 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 24) = v8;
      *(_QWORD *)(a1 + 32) = v10;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v8)
  {
    v11 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v8;
    *(_QWORD *)(a1 + 32) = v11;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
LABEL_8:
  if (a1 != a2)
  {
    v12 = *(int *)(a3 + 28);
    v13 = (void *)(a1 + v12);
    v14 = (const void *)(a2 + v12);
    sub_10004FF60(a1 + v12, (uint64_t *)&unk_1011ACE40);
    v15 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
    {
      v16 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v13, v14, v16);
      swift_storeEnumTagMultiPayload(v13, v15, 1);
    }
    else
    {
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1007C5CC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1007C5CCC);
}

uint64_t sub_1007C5CCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011C6890);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t sub_1007C5D4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1007C5D58);
}

uint64_t sub_1007C5D58(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_100007E8C(&qword_1011C6890);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

void sub_1007C5DD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1007C7118(a1, a2, a3, (uint64_t)&unk_100ED0198, (uint64_t)&unk_100ECFF88);
}

void **sub_1007C5DE4(void **a1, void **a2, int *a3)
{
  int v3;
  char *v4;
  void **v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  char *__dst;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *(uint64_t *)((char *)a2 + v8 + 8);
    *(_QWORD *)v9 = *(void **)((char *)a2 + v8);
    *((_QWORD *)v9 + 1) = v11;
    v12 = *(uint64_t *)((char *)a2 + v8 + 24);
    *((_QWORD *)v9 + 2) = *(void **)((char *)a2 + v8 + 16);
    *((_QWORD *)v9 + 3) = v12;
    *((_WORD *)v9 + 16) = *(_WORD *)((char *)a2 + v8 + 32);
    v13 = *(int *)(type metadata accessor for SharePlayTogetherSession.Participant(0) + 32);
    __dst = &v9[v13];
    v14 = &v10[v13];
    v15 = type metadata accessor for SocialProfile(0);
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
    v18 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v17(v14, 1, v15))
    {
      v19 = sub_100007E8C(&qword_1011C8D50);
      memcpy(__dst, v14, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(__dst, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
    }
    v20 = a3[7];
    *((_BYTE *)v7 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    v21 = (void **)((char *)v7 + v20);
    v22 = (void **)((char *)a2 + v20);
    v23 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v22, v23) == 1)
    {
      v24 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v21, v22, v24);
      v25 = v21;
      v26 = v23;
      v27 = 1;
    }
    else
    {
      *v21 = *v22;
      swift_retain();
      v25 = v21;
      v26 = v23;
      v27 = 0;
    }
    swift_storeEnumTagMultiPayload(v25, v26, v27);
  }
  return v7;
}

double sub_1007C5FB4(id *a1, uint64_t a2)
{
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  double result;

  v4 = (char *)a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = &v4[*(int *)(type metadata accessor for SharePlayTogetherSession.Participant(0) + 32)];
  v6 = type metadata accessor for SocialProfile(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
  v8 = (char *)a1 + *(int *)(a2 + 28);
  v9 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
  }
  else
  {
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

void **sub_1007C60A4(void **a1, void **a2, int *a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  id v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *__dst;

  v6 = *a2;
  *a1 = *a2;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = *(uint64_t *)((char *)a2 + v7 + 8);
  *(_QWORD *)v8 = *(void **)((char *)a2 + v7);
  *((_QWORD *)v8 + 1) = v10;
  v11 = *(uint64_t *)((char *)a2 + v7 + 24);
  *((_QWORD *)v8 + 2) = *(void **)((char *)a2 + v7 + 16);
  *((_QWORD *)v8 + 3) = v11;
  *((_WORD *)v8 + 16) = *(_WORD *)((char *)a2 + v7 + 32);
  v12 = *(int *)(type metadata accessor for SharePlayTogetherSession.Participant(0) + 32);
  __dst = &v8[v12];
  v13 = &v9[v12];
  v14 = type metadata accessor for SocialProfile(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  v17 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v16(v13, 1, v14))
  {
    v18 = sub_100007E8C(&qword_1011C8D50);
    memcpy(__dst, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(__dst, v13, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v14);
  }
  v19 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v20 = (void **)((char *)a1 + v19);
  v21 = (void **)((char *)a2 + v19);
  v22 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v21, v22) == 1)
  {
    v23 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v20, v21, v23);
    v24 = 1;
  }
  else
  {
    *v20 = *v21;
    swift_retain();
    v24 = 0;
  }
  swift_storeEnumTagMultiPayload(v20, v22, v24);
  return a1;
}

void **sub_1007C6244(void **a1, void **a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  v8 = v6;

  v9 = a3[5];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  *(_QWORD *)v10 = *(void **)((char *)a2 + v9);
  *((_QWORD *)v10 + 1) = *(void **)((char *)a2 + v9 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
  *((_QWORD *)v10 + 3) = *((_QWORD *)v11 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10[32] = v11[32];
  v10[33] = v11[33];
  v12 = *(int *)(type metadata accessor for SharePlayTogetherSession.Participant(0) + 32);
  v13 = &v10[v12];
  v14 = &v11[v12];
  v15 = type metadata accessor for SocialProfile(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
LABEL_6:
    v20 = sub_100007E8C(&qword_1011C8D50);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v13, v14, v15);
LABEL_7:
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  if (a1 != a2)
  {
    v21 = a3[7];
    v22 = (void **)((char *)a1 + v21);
    v23 = (void **)((char *)a2 + v21);
    sub_10004FF60((uint64_t)a1 + v21, (uint64_t *)&unk_1011ACE40);
    v24 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v23, v24) == 1)
    {
      v25 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v22, v23, v25);
      v26 = 1;
    }
    else
    {
      *v22 = *v23;
      swift_retain();
      v26 = 0;
    }
    swift_storeEnumTagMultiPayload(v22, v24, v26);
  }
  return a1;
}

_QWORD *sub_1007C6464(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = *(_OWORD *)((char *)a2 + v6 + 16);
  *(_OWORD *)v7 = *(_OWORD *)((char *)a2 + v6);
  *((_OWORD *)v7 + 1) = v9;
  *((_WORD *)v7 + 16) = *(_WORD *)((char *)a2 + v6 + 32);
  v10 = *(int *)(type metadata accessor for SharePlayTogetherSession.Participant(0) + 32);
  v11 = &v7[v10];
  v12 = &v8[v10];
  v13 = type metadata accessor for SocialProfile(0);
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    v15 = sub_100007E8C(&qword_1011C8D50);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  v16 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v18, v19) == 1)
  {
    v20 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v17, v18, v20);
    swift_storeEnumTagMultiPayload(v17, v19, 1);
  }
  else
  {
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  return a1;
}

void **sub_1007C65D4(void **a1, void **a2, int *a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;

  v6 = *a1;
  *a1 = *a2;

  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = *(uint64_t *)((char *)a2 + v7 + 8);
  *(_QWORD *)v8 = *(void **)((char *)a2 + v7);
  *((_QWORD *)v8 + 1) = v10;
  swift_bridgeObjectRelease();
  v11 = *((_QWORD *)v9 + 3);
  *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
  *((_QWORD *)v8 + 3) = v11;
  swift_bridgeObjectRelease();
  v8[32] = v9[32];
  v8[33] = v9[33];
  v12 = *(int *)(type metadata accessor for SharePlayTogetherSession.Participant(0) + 32);
  v13 = &v8[v12];
  v14 = &v9[v12];
  v15 = type metadata accessor for SocialProfile(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
LABEL_6:
    v20 = sub_100007E8C(&qword_1011C8D50);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v13, v14, v15);
LABEL_7:
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  if (a1 != a2)
  {
    v21 = a3[7];
    v22 = (char *)a1 + v21;
    v23 = (char *)a2 + v21;
    sub_10004FF60((uint64_t)a1 + v21, (uint64_t *)&unk_1011ACE40);
    v24 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v23, v24) == 1)
    {
      v25 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v22, v23, v25);
      swift_storeEnumTagMultiPayload(v22, v24, 1);
    }
    else
    {
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1007C67D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1007C67E0);
}

uint64_t sub_1007C67E0(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for SharePlayTogetherSession.Participant(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = sub_100007E8C(&qword_1011C6890);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_1007C6884(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1007C6890);
}

char *sub_1007C6890(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for SharePlayTogetherSession.Participant(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = sub_100007E8C(&qword_1011C6890);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 28);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_1007C6930(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[4];

  v6[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2 = type metadata accessor for SharePlayTogetherSession.Participant(319);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    v6[2] = &unk_100ECFF88;
    sub_1000E3A44(319, (unint64_t *)&qword_1011C6900, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v5 <= 0x3F)
    {
      v6[3] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 4, v6, a1 + 16);
    }
  }
}

char *sub_1007C69E4(char *a1, char **a2, uint64_t a3)
{
  int v4;
  char *v5;
  _OWORD *v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    v8 = a2 + 3;
    v9 = a2[3];
    a1[8] = *((_BYTE *)a2 + 8);
    *((_QWORD *)a1 + 2) = a2[2];
    v10 = v5;
    swift_retain();
    if (v9)
    {
      v11 = a2[4];
      *((_QWORD *)a1 + 3) = v9;
      *((_QWORD *)a1 + 4) = v11;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(a1 + 24) = *v8;
    }
    v12 = *(int *)(a3 + 28);
    v13 = &a1[v12];
    v14 = (char **)((char *)a2 + v12);
    v15 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
    {
      v16 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
      v17 = v13;
      v18 = v15;
      v19 = 1;
    }
    else
    {
      *(_QWORD *)v13 = *v14;
      swift_retain();
      v17 = v13;
      v18 = v15;
      v19 = 0;
    }
    swift_storeEnumTagMultiPayload(v17, v18, v19);
  }
  return a1;
}

double sub_1007C6B08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  swift_release();
  if (*(_QWORD *)(a1 + 24))
    swift_release();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_1007C6B98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  _OWORD *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v8 = (_OWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 24);
  v9 = v6;
  swift_retain();
  if (v7)
  {
    v10 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v7;
    *(_QWORD *)(a1 + 32) = v10;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 24) = *v8;
  }
  v11 = *(int *)(a3 + 28);
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  v14 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
  {
    v15 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v12, v13, v15);
    v16 = 1;
  }
  else
  {
    *v12 = *v13;
    swift_retain();
    v16 = 0;
  }
  swift_storeEnumTagMultiPayload(v12, v14, v16);
  return a1;
}

uint64_t sub_1007C6C90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  v9 = *(_QWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 24))
  {
    if (v9)
    {
      v10 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 24) = v9;
      *(_QWORD *)(a1 + 32) = v10;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v9)
  {
    v11 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v9;
    *(_QWORD *)(a1 + 32) = v11;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
LABEL_8:
  if (a1 != a2)
  {
    v12 = *(int *)(a3 + 28);
    v13 = (_QWORD *)(a1 + v12);
    v14 = (_QWORD *)(a2 + v12);
    sub_10004FF60(a1 + v12, (uint64_t *)&unk_1011ACE40);
    v15 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
    {
      v16 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
      v17 = 1;
    }
    else
    {
      *v13 = *v14;
      swift_retain();
      v17 = 0;
    }
    swift_storeEnumTagMultiPayload(v13, v15, v17);
  }
  return a1;
}

uint64_t sub_1007C6DE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 24);
  if (v4)
  {
    v5 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = v5;
  }
  else
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  }
  v6 = *(int *)(a3 + 28);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1007C6EB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  v7 = *(_QWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 24))
  {
    if (v7)
    {
      v8 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 24) = v7;
      *(_QWORD *)(a1 + 32) = v8;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v7)
  {
    v9 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v7;
    *(_QWORD *)(a1 + 32) = v9;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
LABEL_8:
  if (a1 != a2)
  {
    v10 = *(int *)(a3 + 28);
    v11 = (void *)(a1 + v10);
    v12 = (const void *)(a2 + v10);
    sub_10004FF60(a1 + v10, (uint64_t *)&unk_1011ACE40);
    v13 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
    {
      v14 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v11, v12, v14);
      swift_storeEnumTagMultiPayload(v11, v13, 1);
    }
    else
    {
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1007C6FF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1007C6FFC);
}

uint64_t sub_1007C6FFC(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011C6890);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 28)], a2, v8);
  }
}

uint64_t sub_1007C707C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1007C7088);
}

char *sub_1007C7088(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_100007E8C(&qword_1011C6890);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 28)], a2, a2, v7);
  }
  return result;
}

void sub_1007C7100(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1007C7118(a1, a2, a3, (uint64_t)&value witness table for Builtin.UnknownObject + 64, (uint64_t)&unk_100ECFF40);
}

void sub_1007C7118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[4];

  v8[0] = a4;
  v8[1] = a5;
  v8[2] = &unk_100ECFF40;
  sub_1000E3A44(319, (unint64_t *)&qword_1011C6900, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v7 <= 0x3F)
  {
    v8[3] = *(_QWORD *)(v6 - 8) + 64;
    swift_initStructMetadata(a1, 256, 4, v8, a1 + 16);
  }
}

uint64_t sub_1007C71A8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAD3F0, 1);
}

uint64_t sub_1007C71B8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAD3C8, 1);
}

uint64_t sub_1007C71C8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAD3A0, 1);
}

uint64_t sub_1007C71D8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAD378, 1);
}

double sub_1007C71E8(uint64_t a1)
{
  double result;

  *(_QWORD *)(a1 + 160) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_1007C7208()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  v1 = type metadata accessor for SharePlayTogetherSessionManagementViewController.QRCodeCell(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);

  swift_release();
  if (*(_QWORD *)(v0 + v3 + 24))
    swift_release();
  v5 = v0 + v3 + *(int *)(v1 + 28);
  v6 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v5, v6) == 1)
  {
    v7 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
  }
  else
  {
    swift_release();
  }
  v8 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v9 = v8 + 40;
  v10 = v0 + v8;
  sub_1000652DC(*(_QWORD *)(v0 + v8 + 8), *(_QWORD *)(v0 + v8 + 16));

  return swift_deallocObject(v0, v9);
}

double sub_1007C72F8@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for SharePlayTogetherSessionManagementViewController.QRCodeCell(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_1007C1190(v1 + v4, v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8), a1);
}

uint64_t sub_1007C7348()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for SharePlayTogetherSessionManagementViewController.QRCodeCell(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);

  swift_release();
  if (*(_QWORD *)(v0 + v3 + 24))
    swift_release();
  v5 = v0 + v3 + *(int *)(v1 + 28);
  v6 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v5, v6) == 1)
  {
    v7 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject(v0, v3 + v4);
}

uint64_t sub_1007C7410()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t (*v3)(void);

  result = type metadata accessor for SharePlayTogetherSessionManagementViewController.QRCodeCell(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(result - 8) + 80);
  v3 = *(uint64_t (**)(void))(v0 + ((v2 + 16) & ~v2) + 24);
  if (v3)
    return v3();
  return result;
}

double sub_1007C7454@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1007C150C(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1007C745C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C91F0;
  if (!qword_1011C91F0)
  {
    v1 = sub_100044B54(&qword_1011C91E8);
    sub_1007C74E0(&qword_1011C91F8, &qword_1011C9200, (void (*)(void))sub_1007C7564);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C91F0);
  }
  return result;
}

uint64_t sub_1007C74E0(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_100044B54(a2);
    a3();
    sub_100049F28((unint64_t *)&qword_1011A4620, &qword_1011B5800, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1007C7564()
{
  unint64_t result;

  result = qword_1011C9208;
  if (!qword_1011C9208)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for QRCodeOverlayViewController.ImageViewRepresentable, &type metadata for QRCodeOverlayViewController.ImageViewRepresentable);
    atomic_store(result, (unint64_t *)&qword_1011C9208);
  }
  return result;
}

uint64_t sub_1007C75AC()
{
  return sub_1007C79A0(type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView, (uint64_t (*)(uint64_t))sub_1007BEF30);
}

unint64_t sub_1007C75C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C92C8;
  if (!qword_1011C92C8)
  {
    v1 = sub_100044B54(&qword_1011C92C0);
    sub_100049F28(&qword_1011C92D0, &qword_1011C92D8, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C92C8);
  }
  return result;
}

uint64_t sub_1007C7644(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 96);
  v3 = *(_QWORD *)(a1 + 104);
  v4 = *(_QWORD *)(a1 + 112);
  v5 = *(_QWORD *)(a1 + 120);
  sub_100055BAC(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1000E450C(v2, v3, v4, v5);
  return a1;
}

uint64_t sub_1007C76DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);

  v5 = v0 + v3 + *(int *)(v1 + 20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = v5 + *(int *)(type metadata accessor for SharePlayTogetherSession.Participant(0) + 32);
  v7 = type metadata accessor for SocialProfile(0);
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v6, v7);
  v9 = v0 + v3 + *(int *)(v1 + 28);
  v10 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v9, v11);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject(v0, v3 + v4);
}

uint64_t sub_1007C77FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return (*(uint64_t (**)(uint64_t))((swift_isaMask & **(_QWORD **)(v0 + ((v2 + 16) & ~v2))) + 0x328))(v0 + ((v2 + 16) & ~v2) + *(int *)(v1 + 20));
}

uint64_t sub_1007C7858@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.isFocused.getter();
  *a1 = result & 1;
  return result;
}

unint64_t sub_1007C7884()
{
  unint64_t result;

  result = qword_1011C9360;
  if (!qword_1011C9360)
  {
    result = swift_getWitnessTable(&unk_100ED0408, &type metadata for SharePlayTogetherSessionManagementViewController.FocusableButtonStyle);
    atomic_store(result, (unint64_t *)&qword_1011C9360);
  }
  return result;
}

unint64_t sub_1007C78C8()
{
  unint64_t result;

  result = qword_1011C9368;
  if (!qword_1011C9368)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Circle, &type metadata for Circle);
    atomic_store(result, (unint64_t *)&qword_1011C9368);
  }
  return result;
}

uint64_t sub_1007C7910()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD **v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (_QWORD **)(v0 + ((v2 + 16) & ~v2));
  v4 = (char *)v3 + *(int *)(v1 + 20);
  v5 = swift_isaMask & **v3;
  v6 = 824;
  if (v4[32])
    v6 = 816;
  return (*(uint64_t (**)(void))(v5 + v6))();
}

uint64_t sub_1007C798C()
{
  return sub_1007C79A0(type metadata accessor for SharePlayTogetherSessionManagementViewController.StatusHeaderView, (uint64_t (*)(uint64_t))sub_1007BC92C);
}

uint64_t sub_1007C79A0(uint64_t (*a1)(_QWORD), uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(a1(0) - 8) + 80);
  return a2(v2 + ((v3 + 16) & ~v3));
}

uint64_t sub_1007C79F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for SharePlayTogetherSessionManagementViewController.StatusHeaderView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);

  if (*(_QWORD *)(v0 + v3 + 24))
    swift_release();
  v5 = v0 + v3 + *(int *)(v1 + 28);
  v6 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v5, v6) == 1)
  {
    v7 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject(v0, v3 + v4);
}

void sub_1007C7AB4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  void (*v3)(void);
  _QWORD *v4;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SharePlayTogetherSessionManagementViewController.StatusHeaderView(0)
                                      - 8)
                          + 80);
  v2 = *(_QWORD **)(v0 + ((v1 + 16) & ~v1) + 8);
  v3 = *(void (**)(void))((swift_isaMask & *v2) + 0x348);
  v4 = v2;
  v3();

}

unint64_t sub_1007C7B20()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  ValueMetadata *v5;
  uint64_t v6;
  unint64_t v7;

  result = qword_1011C9488;
  if (!qword_1011C9488)
  {
    v1 = sub_100044B54(&qword_1011C9428);
    v2 = sub_100044B54(&qword_1011C9418);
    v4 = sub_100044B54(&qword_1011C9410);
    v5 = &type metadata for SharePlayTogetherSessionManagementViewController.FocusableButtonStyle;
    v6 = sub_100049F28(&qword_1011C9478, &qword_1011C9410, (uint64_t)&protocol conformance descriptor for Button<A>);
    v7 = sub_1007C7884();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    v4 = v2;
    v5 = (ValueMetadata *)OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.bold(_:)>>, 1);
    sub_100049F28(&qword_1011C9490, &qword_1011C9498, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C9488);
  }
  return result;
}

void sub_1007C7C2C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SharePlayTogetherSessionManagementViewController.StatusHeaderView(0)
                                      - 8)
                          + 80);
  sub_1007BDCBC(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_1007C7C60(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 96);
  v3 = *(_QWORD *)(a1 + 104);
  v4 = *(_BYTE *)(a1 + 112);
  sub_100055BAC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release();
  swift_bridgeObjectRelease();
  sub_100055BAC(v2, v3, v4);
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1007C7CE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 120);
  v3 = *(_QWORD *)(a1 + 128);
  v4 = *(_BYTE *)(a1 + 136);
  sub_100055BAC(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_release();
  swift_bridgeObjectRelease();
  sub_100055BAC(v2, v3, v4);
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1007C7D70()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  if (*(_QWORD *)(v0 + 40))
    swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1007C7DAC()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t result;

  v1 = *(uint64_t (**)(void))(v0 + 40);
  if (v1)
    return v1();
  return result;
}

double sub_1007C7DD4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1007BBAA8(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1007C7DDC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C9510;
  if (!qword_1011C9510)
  {
    v1 = sub_100044B54(&qword_1011C9508);
    sub_100049F28(&qword_1011C9518, &qword_1011C9520, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C9510);
  }
  return result;
}

unint64_t sub_1007C7E60()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1011C9540;
  if (!qword_1011C9540)
  {
    v1 = sub_100044B54(&qword_1011C94E8);
    v2[0] = sub_100044B54(&qword_1011C94D8);
    v2[1] = &type metadata for SharePlayTogetherSessionManagementViewController.FocusableButtonStyle;
    v2[2] = sub_100049F28(&qword_1011C9528, &qword_1011C94D8, (uint64_t)&protocol conformance descriptor for Button<A>);
    v2[3] = sub_1007C7884();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    sub_100049F28(&qword_1011A49B8, (uint64_t *)&unk_1011C9530, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C9540);
  }
  return result;
}

void sub_1007C7F48(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_100ECFF88;
  v4[1] = (char *)&value witness table for () + 64;
  v4[2] = (char *)&value witness table for () + 64;
  sub_1000F6458(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 0, 4, v4, a1 + 32);
  }
}

_QWORD *sub_1007C7FCC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v10 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    *(_QWORD *)(a1 + 8) = a2[1];
    v5 = a2[4];
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    *(_QWORD *)(a1 + 32) = v5;
    v6 = *(int *)(a3 + 44);
    v7 = a1 + v6;
    v8 = (uint64_t)a2 + v6;
    swift_retain();
    swift_retain();
    v9 = sub_100007E8C(qword_1011C9550);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_1007C8080(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 44);
  v5 = sub_100007E8C(qword_1011C9550);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_1007C80D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(int *)(a3 + 44);
  v6 = a1 + v5;
  v7 = a2 + v5;
  swift_retain();
  swift_retain();
  v8 = sub_100007E8C(qword_1011C9550);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  return a1;
}

uint64_t sub_1007C815C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_retain();
  swift_release();
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  swift_retain();
  swift_release();
  v8 = *(int *)(a3 + 44);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_100007E8C(qword_1011C9550);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  return a1;
}

uint64_t sub_1007C81F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = *(int *)(a3 + 44);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_100007E8C(qword_1011C9550);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_1007C8264(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  v6 = *(int *)(a3 + 44);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_100007E8C(qword_1011C9550);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_1007C82EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1007C82F8);
}

uint64_t sub_1007C82F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C(qword_1011C9550);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 44), a2, v8);
  }
}

uint64_t sub_1007C8378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1007C8384);
}

uint64_t sub_1007C8384(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_100007E8C(qword_1011C9550);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 44), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for SharePlayTogetherSessionManagementViewController.ScaledButton(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SharePlayTogetherSessionManagementViewController.ScaledButton);
}

double destroy for SharePlayTogetherSessionManagementViewController.FocusableButtonStyle(uint64_t a1)
{
  double result;

  sub_10006B604(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  swift_release();
  swift_release();
  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for SharePlayTogetherSessionManagementViewController.FocusableButtonStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_10006B3F8(*(_QWORD *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  v8 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v7;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for SharePlayTogetherSessionManagementViewController.FocusableButtonStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_10006B3F8(*(_QWORD *)a2, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_10006B604(v6, v7);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for SharePlayTogetherSessionManagementViewController.FocusableButtonStyle(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_10006B604(v6, v7);
  swift_release();
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SharePlayTogetherSessionManagementViewController.FocusableButtonStyle(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SharePlayTogetherSessionManagementViewController.FocusableButtonStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SharePlayTogetherSessionManagementViewController.FocusableButtonStyle()
{
  return &type metadata for SharePlayTogetherSessionManagementViewController.FocusableButtonStyle;
}

unint64_t sub_1007C86B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C95E0;
  if (!qword_1011C95E0)
  {
    v1 = sub_100044B54(&qword_1011C91C0);
    sub_1007C8718();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1011C95E0);
  }
  return result;
}

unint64_t sub_1007C8718()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C95E8;
  if (!qword_1011C95E8)
  {
    v1 = sub_100044B54(&qword_1011C95F0);
    sub_100049F28(&qword_1011C95F8, &qword_1011C9600, (uint64_t)&protocol conformance descriptor for AxisStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C95E8);
  }
  return result;
}

uint64_t sub_1007C879C()
{
  return sub_10005610C(&qword_1011C9608, &qword_1011C9240, (void (*)(void))sub_1007C87D0);
}

uint64_t sub_1007C87D0()
{
  return sub_10005610C(&qword_1011C9610, &qword_1011C9238, (void (*)(void))sub_1007C87F4);
}

uint64_t sub_1007C87F4()
{
  return sub_10005610C(&qword_1011C9618, &qword_1011C9230, (void (*)(void))sub_1007C8818);
}

unint64_t sub_1007C8818()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C9620;
  if (!qword_1011C9620)
  {
    v1 = sub_100044B54(&qword_1011A2DB0);
    sub_100049F28(&qword_1011C9628, (uint64_t *)&unk_1011C9220, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C9620);
  }
  return result;
}

uint64_t sub_1007C889C()
{
  return sub_10005610C(&qword_1011C9630, &qword_1011A2DB8, (void (*)(void))sub_1007C88D0);
}

uint64_t sub_1007C88D0()
{
  return sub_10005610C(&qword_1011C9638, (uint64_t *)&unk_1011C93C0, (void (*)(void))sub_1007C88F4);
}

unint64_t sub_1007C88F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C9640;
  if (!qword_1011C9640)
  {
    v1 = sub_100044B54(&qword_1011C93B8);
    sub_100049F28(&qword_1011C9648, &qword_1011C93B0, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C9640);
  }
  return result;
}

uint64_t sub_1007C8978()
{
  return sub_100049F28(&qword_1011C9650, &qword_1011C9658, (uint64_t)&protocol conformance descriptor for HStack<A>);
}

uint64_t sub_1007C89A4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAD44C, 1);
}

uint64_t sub_1007C89B4(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_100FAD418, 1);
}

uint64_t sub_1007C89E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1007C0B64(v1[4], v1[2], v1[3], a1);
}

unint64_t sub_1007C89F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C9670;
  if (!qword_1011C9670)
  {
    v1 = sub_100044B54(&qword_1011C9660);
    sub_100048748(&qword_1011C9678, (uint64_t (*)(uint64_t))&type metadata accessor for ButtonStyleConfiguration.Label, (uint64_t)&protocol conformance descriptor for ButtonStyleConfiguration.Label);
    sub_100049F28((unint64_t *)&qword_1011A4620, &qword_1011B5800, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C9670);
  }
  return result;
}

uint64_t sub_1007C8A90(_QWORD *a1)
{
  uint64_t v1;
  uint64_t WitnessTable;
  uint64_t v3;

  v1 = type metadata accessor for ModifiedContent(255, *a1, &type metadata for _FrameLayout);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
  v3 = type metadata accessor for Button(255, v1, WitnessTable);
  return swift_getWitnessTable(&protocol conformance descriptor for Button<A>, v3);
}

uint64_t sub_1007C8B08()
{
  _QWORD v1[4];

  v1[0] = sub_100044B54(&qword_1011C9660);
  v1[1] = &type metadata for Color;
  v1[2] = sub_1007C89F4();
  v1[3] = &protocol witness table for Color;
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.background<A>(_:ignoresSafeAreaEdges:)>>, 1);
}

ValueMetadata *_s13PlaylistsViewVMa()
{
  return &_s13PlaylistsViewVN;
}

ValueMetadata *_s14MadeForYouViewVMa()
{
  return &_s14MadeForYouViewVN;
}

uint64_t sub_1007C8BC0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAD504, 1);
}

uint64_t sub_1007C8BD0@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t KeyPath;
  int *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];
  char v21;

  v3 = sub_100007E8C(&qword_1011BFDB0);
  __chkstk_darwin(v3);
  v5 = (char *)&v20[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v7 = _s15LegacyPlaylistsV5ScopeOMa(0);
  v8.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 1, 1, v7);
  AppStorage.projectedValue.getter(v20, v6, &type metadata for Library.ContentFilterOption, v8);
  v9 = v20[0];
  v10 = v20[1];
  v11 = v21;
  KeyPath = swift_getKeyPath(&unk_100ED0558);
  v13 = (int *)_s11ContentViewVMa_2(0);
  v14 = (uint64_t *)(a1 + v13[8]);
  *v14 = KeyPath;
  v15 = sub_100007E8C(&qword_10119F030);
  swift_storeEnumTagMultiPayload(v14, v15, 0);
  result = sub_100065228((uint64_t)v5, a1, &qword_1011BFDB0);
  *(_BYTE *)(a1 + v13[5]) = 5;
  v17 = a1 + v13[6];
  *(_QWORD *)v17 = v9;
  *(_QWORD *)(v17 + 8) = v10;
  *(_BYTE *)(v17 + 16) = v11;
  v18 = a1 + v13[7];
  *(_QWORD *)v18 = sub_1007C8E94;
  *(_QWORD *)(v18 + 8) = 0;
  *(_BYTE *)(v18 + 16) = 0;
  return result;
}

uint64_t sub_1007C8D1C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAD4DC, 1);
}

uint64_t sub_1007C8D2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t KeyPath;
  int *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];
  char v21;

  v4 = sub_100007E8C(&qword_1011BFDB0);
  __chkstk_darwin(v4);
  v6 = (char *)&v20[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = _s15LegacyPlaylistsV5ScopeOMa(0);
  swift_storeEnumTagMultiPayload(v6, v7, 2);
  v8.n128_f64[0] = (*(double (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 0, 1, v7);
  AppStorage.projectedValue.getter(v20, a1, &type metadata for Library.ContentFilterOption, v8);
  v9 = v20[0];
  v10 = v20[1];
  v11 = v21;
  KeyPath = swift_getKeyPath(&unk_100ED0558);
  v13 = (int *)_s11ContentViewVMa_2(0);
  v14 = (uint64_t *)(a2 + v13[8]);
  *v14 = KeyPath;
  v15 = sub_100007E8C(&qword_10119F030);
  swift_storeEnumTagMultiPayload(v14, v15, 0);
  result = sub_100065228((uint64_t)v6, a2, &qword_1011BFDB0);
  *(_BYTE *)(a2 + v13[5]) = 3;
  v17 = a2 + v13[6];
  *(_QWORD *)v17 = v9;
  *(_QWORD *)(v17 + 8) = v10;
  *(_BYTE *)(v17 + 16) = v11;
  v18 = a2 + v13[7];
  *(_QWORD *)v18 = sub_1007C8E94;
  *(_QWORD *)(v18 + 8) = 0;
  *(_BYTE *)(v18 + 16) = 0;
  return result;
}

uint64_t sub_1007C8E8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1007C8D2C(*v1, a1);
}

uint64_t sub_1007C8E94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v0 = sub_100007E8C((uint64_t *)&unk_1011B5718);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TitledSection(0);
  v5 = type metadata accessor for Playlist(0);
  MusicLibrarySectionedRequest.init()(v4, v5, &protocol witness table for TitledSection, &protocol witness table for Playlist);
  v6 = sub_100049F28((unint64_t *)&unk_1011B5788, (uint64_t *)&unk_1011B5718, (uint64_t)&protocol conformance descriptor for MusicLibrarySectionedRequest<A, B>);
  v7 = MusicAutoupdatableRequest.autoupdatingResponse.getter(v0, v6);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v7;
}

uint64_t _s11ContentViewVMa_2(uint64_t a1)
{
  uint64_t result;

  result = qword_1011C96D8;
  if (!qword_1011C96D8)
    return swift_getSingletonMetadata(a1, &_s11ContentViewVMn_2);
  return result;
}

uint64_t *sub_1007C8FB4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  int v28;
  int *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(char *, uint64_t, uint64_t, __n128);
  __n128 v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v82;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = _s15LegacyPlaylistsV5ScopeOMa(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_100007E8C(&qword_1011BFDB0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v7);
      if (EnumCaseMultiPayload == 1)
      {
        v13 = type metadata accessor for Playlist(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
        swift_storeEnumTagMultiPayload(a1, v7, 1);
      }
      else if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(v8 + 64));
      }
      else
      {
        v12 = type metadata accessor for Curator(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
        swift_storeEnumTagMultiPayload(a1, v7, 0);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v14 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = *((_QWORD *)v16 + 1);
    *(_QWORD *)v15 = *(_QWORD *)v16;
    *((_QWORD *)v15 + 1) = v17;
    v15[16] = v16[16];
    v18 = a3[7];
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    v21 = *(_QWORD *)v20;
    v22 = *((_QWORD *)v20 + 1);
    v23 = v20[16];
    swift_retain();
    swift_retain();
    KeyValueObservationTrigger.keyPath.getter(v21, v22);
    *(_QWORD *)v19 = v21;
    *((_QWORD *)v19 + 1) = v22;
    v19[16] = v23;
    v24 = a3[8];
    v25 = (uint64_t *)((char *)a1 + v24);
    v26 = (uint64_t *)((char *)a2 + v24);
    v27 = sub_100007E8C(&qword_10119F030);
    v28 = swift_getEnumCaseMultiPayload(v26, v27);
    *v25 = *v26;
    if (v28 == 1)
    {
      v82 = v27;
      v29 = (int *)type metadata accessor for Library.Context(0);
      v30 = v29[5];
      v31 = (char *)v25 + v30;
      v32 = (char *)v26 + v30;
      v33 = type metadata accessor for Album(0);
      v34 = *(_QWORD *)(v33 - 8);
      v35 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v34 + 48);
      v36 = swift_retain();
      if (v35(v32, 1, v33, v36))
      {
        v37 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
      }
      v41 = v29[6];
      v42 = (char *)v25 + v41;
      v43 = (char *)v26 + v41;
      v44 = type metadata accessor for Artist(0);
      v45 = *(_QWORD *)(v44 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
      {
        v46 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v42, v43, v44);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
      }
      v47 = v29[7];
      v48 = (char *)v25 + v47;
      v49 = (char *)v26 + v47;
      v50 = type metadata accessor for Composer(0);
      v51 = *(_QWORD *)(v50 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
      {
        v52 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v48, v49, v50);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
      }
      v53 = v29[8];
      v54 = (char *)v25 + v53;
      v55 = (char *)v26 + v53;
      v56 = type metadata accessor for Genre(0);
      v57 = *(_QWORD *)(v56 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
      {
        v58 = sub_100007E8C(&qword_10119ED08);
        memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v54, v55, v56);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
      }
      v59 = v29[9];
      v60 = (char *)v25 + v59;
      v61 = (char *)v26 + v59;
      v62 = type metadata accessor for Playlist(0);
      v63 = *(_QWORD *)(v62 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v61, 1, v62))
      {
        v64 = sub_100007E8C(&qword_1011A30F0);
        memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v60, v61, v62);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
      }
      v65 = v29[10];
      v66 = (char *)v25 + v65;
      v67 = (char *)v26 + v65;
      v68 = type metadata accessor for TVShow(0);
      v69 = *(_QWORD *)(v68 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v67, 1, v68))
      {
        v70 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v66, v67, v68);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v66, 0, 1, v68);
      }
      v71 = v29[11];
      v72 = (char *)v25 + v71;
      v73 = (char *)v26 + v71;
      v74 = type metadata accessor for TVSeason(0);
      v75 = *(_QWORD *)(v74 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48))(v73, 1, v74))
      {
        v76 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v72, v73, v74);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
      }
      *((_BYTE *)v25 + v29[12]) = *((_BYTE *)v26 + v29[12]);
      *((_BYTE *)v25 + v29[13]) = *((_BYTE *)v26 + v29[13]);
      *((_BYTE *)v25 + v29[14]) = *((_BYTE *)v26 + v29[14]);
      v77 = v29[15];
      v78 = (_QWORD *)((char *)v25 + v77);
      v79 = (_QWORD *)((char *)v26 + v77);
      v80 = v79[1];
      *v78 = *v79;
      v78[1] = v80;
      *(_QWORD *)((char *)v25 + v29[16]) = *(_QWORD *)((char *)v26 + v29[16]);
      *((_BYTE *)v25 + v29[17]) = *((_BYTE *)v26 + v29[17]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v38 = v25;
      v39 = v82;
      v40 = 1;
    }
    else
    {
      swift_retain();
      v38 = v25;
      v39 = v27;
      v40 = 0;
    }
    swift_storeEnumTagMultiPayload(v38, v39, v40);
  }
  return a1;
}

double sub_1007C95F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  double result;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v4 = _s15LegacyPlaylistsV5ScopeOMa(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, v4);
    if (EnumCaseMultiPayload == 1)
    {
      v6 = type metadata accessor for Playlist(0);
    }
    else
    {
      if (EnumCaseMultiPayload)
        goto LABEL_7;
      v6 = type metadata accessor for Curator(0);
    }
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  }
LABEL_7:
  swift_release();
  swift_release();
  sub_1000A6174(*(_QWORD *)(a1 + *(int *)(a2 + 28)), *(_QWORD *)(a1 + *(int *)(a2 + 28) + 8));
  v7 = a1 + *(int *)(a2 + 32);
  v8 = sub_100007E8C(&qword_10119F030);
  v9 = swift_getEnumCaseMultiPayload(v7, v8);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  if (v9 == 1)
  {
    v11 = (int *)type metadata accessor for Library.Context(0);
    v12 = v7 + v11[5];
    v13 = type metadata accessor for Album(0);
    v14 = *(_QWORD *)(v13 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
    v15 = v7 + v11[6];
    v16 = type metadata accessor for Artist(0);
    v17 = *(_QWORD *)(v16 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
    v18 = v7 + v11[7];
    v19 = type metadata accessor for Composer(0);
    v20 = *(_QWORD *)(v19 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    v21 = v7 + v11[8];
    v22 = type metadata accessor for Genre(0);
    v23 = *(_QWORD *)(v22 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
    v24 = v7 + v11[9];
    v25 = type metadata accessor for Playlist(0);
    v26 = *(_QWORD *)(v25 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
    v27 = v7 + v11[10];
    v28 = type metadata accessor for TVShow(0);
    v29 = *(_QWORD *)(v28 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
    v30 = v7 + v11[11];
    v31 = type metadata accessor for TVSeason(0);
    v32 = *(_QWORD *)(v31 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
    swift_bridgeObjectRelease();
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  return result;
}

char *sub_1007C98E4(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  int v26;
  int *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(char *, uint64_t, uint64_t, __n128);
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v78;

  v6 = _s15LegacyPlaylistsV5ScopeOMa(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100007E8C(&qword_1011BFDB0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v6);
    if (EnumCaseMultiPayload == 1)
    {
      v11 = type metadata accessor for Playlist(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v7 + 64));
    }
    else
    {
      v10 = type metadata accessor for Curator(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      swift_storeEnumTagMultiPayload(a1, v6, 0);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v12 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = *((_QWORD *)v14 + 1);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *((_QWORD *)v13 + 1) = v15;
  v13[16] = v14[16];
  v16 = a3[7];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = *(_QWORD *)v18;
  v20 = *((_QWORD *)v18 + 1);
  v21 = v18[16];
  swift_retain();
  swift_retain();
  KeyValueObservationTrigger.keyPath.getter(v19, v20);
  *(_QWORD *)v17 = v19;
  *((_QWORD *)v17 + 1) = v20;
  v17[16] = v21;
  v22 = a3[8];
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = sub_100007E8C(&qword_10119F030);
  v26 = swift_getEnumCaseMultiPayload(v24, v25);
  *(_QWORD *)v23 = *(_QWORD *)v24;
  if (v26 == 1)
  {
    v78 = v25;
    v27 = (int *)type metadata accessor for Library.Context(0);
    v28 = v27[5];
    v29 = &v23[v28];
    v30 = &v24[v28];
    v31 = type metadata accessor for Album(0);
    v32 = *(_QWORD *)(v31 - 8);
    v33 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v32 + 48);
    v34 = swift_retain();
    if (v33(v30, 1, v31, v34))
    {
      v35 = sub_100007E8C(&qword_1011A8FA0);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v29, v30, v31);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
    }
    v37 = v27[6];
    v38 = &v23[v37];
    v39 = &v24[v37];
    v40 = type metadata accessor for Artist(0);
    v41 = *(_QWORD *)(v40 - 8);
    v25 = v78;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
    {
      v42 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v38, v39, v40);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
    }
    v43 = v27[7];
    v44 = &v23[v43];
    v45 = &v24[v43];
    v46 = type metadata accessor for Composer(0);
    v47 = *(_QWORD *)(v46 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
    {
      v48 = sub_100007E8C((uint64_t *)&unk_1011C7310);
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v44, v45, v46);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
    }
    v49 = v27[8];
    v50 = &v23[v49];
    v51 = &v24[v49];
    v52 = type metadata accessor for Genre(0);
    v53 = *(_QWORD *)(v52 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
    {
      v54 = sub_100007E8C(&qword_10119ED08);
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v50, v51, v52);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
    }
    v55 = v27[9];
    v56 = &v23[v55];
    v57 = &v24[v55];
    v58 = type metadata accessor for Playlist(0);
    v59 = *(_QWORD *)(v58 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58))
    {
      v60 = sub_100007E8C(&qword_1011A30F0);
      memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v56, v57, v58);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
    }
    v61 = v27[10];
    v62 = &v23[v61];
    v63 = &v24[v61];
    v64 = type metadata accessor for TVShow(0);
    v65 = *(_QWORD *)(v64 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v63, 1, v64))
    {
      v66 = sub_100007E8C((uint64_t *)&unk_1011D1410);
      memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v62, v63, v64);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
    }
    v67 = v27[11];
    v68 = &v23[v67];
    v69 = &v24[v67];
    v70 = type metadata accessor for TVSeason(0);
    v71 = *(_QWORD *)(v70 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v69, 1, v70))
    {
      v72 = sub_100007E8C((uint64_t *)&unk_1011C7320);
      memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v68, v69, v70);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
    }
    v23[v27[12]] = v24[v27[12]];
    v23[v27[13]] = v24[v27[13]];
    v23[v27[14]] = v24[v27[14]];
    v73 = v27[15];
    v74 = &v23[v73];
    v75 = &v24[v73];
    v76 = *((_QWORD *)v75 + 1);
    *(_QWORD *)v74 = *(_QWORD *)v75;
    *((_QWORD *)v74 + 1) = v76;
    *(_QWORD *)&v23[v27[16]] = *(_QWORD *)&v24[v27[16]];
    v23[v27[17]] = v24[v27[17]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v36 = 1;
  }
  else
  {
    swift_retain();
    v36 = 0;
  }
  swift_storeEnumTagMultiPayload(v23, v25, v36);
  return a1;
}

char *sub_1007C9EF0(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  size_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  int v31;
  int *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int (*v38)(char *, uint64_t, uint64_t, __n128);
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v82;
  uint64_t v83;

  v6 = _s15LegacyPlaylistsV5ScopeOMa(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      if (a1 == a2)
        goto LABEL_17;
      sub_10005B748((uint64_t)a1, _s15LegacyPlaylistsV5ScopeOMa);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v6);
      if (EnumCaseMultiPayload == 1)
      {
        v82 = type metadata accessor for Playlist(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 16))(a1, a2, v82);
        swift_storeEnumTagMultiPayload(a1, v6, 1);
        goto LABEL_17;
      }
      if (!EnumCaseMultiPayload)
      {
        v15 = type metadata accessor for Curator(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
        swift_storeEnumTagMultiPayload(a1, v6, 0);
        goto LABEL_17;
      }
      v13 = *(_QWORD *)(v7 + 64);
LABEL_9:
      memcpy(a1, a2, v13);
      goto LABEL_17;
    }
    sub_10005B748((uint64_t)a1, _s15LegacyPlaylistsV5ScopeOMa);
LABEL_8:
    v13 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011BFDB0) - 8) + 64);
    goto LABEL_9;
  }
  if (v10)
    goto LABEL_8;
  v11 = swift_getEnumCaseMultiPayload(a2, v6);
  if (v11 == 1)
  {
    v16 = type metadata accessor for Playlist(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a1, a2, v16);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else if (v11)
  {
    memcpy(a1, a2, *(_QWORD *)(v7 + 64));
  }
  else
  {
    v12 = type metadata accessor for Curator(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
    swift_storeEnumTagMultiPayload(a1, v6, 0);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_17:
  a1[a3[5]] = a2[a3[5]];
  v17 = a3[6];
  v18 = &a1[v17];
  v19 = &a2[v17];
  *(_QWORD *)&a1[v17] = *(_QWORD *)&a2[v17];
  swift_retain();
  swift_release();
  *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
  swift_retain();
  swift_release();
  v18[16] = v19[16];
  v20 = a3[7];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = *(_QWORD *)v22;
  v24 = *((_QWORD *)v22 + 1);
  LOBYTE(v19) = v22[16];
  KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)v22, v24);
  v25 = *(_QWORD *)v21;
  v26 = *((_QWORD *)v21 + 1);
  *(_QWORD *)v21 = v23;
  *((_QWORD *)v21 + 1) = v24;
  v21[16] = (char)v19;
  sub_1000A6174(v25, v26);
  if (a1 != a2)
  {
    v27 = a3[8];
    v28 = &a1[v27];
    v29 = &a2[v27];
    sub_10004FF60((uint64_t)&a1[v27], &qword_10119F030);
    v30 = sub_100007E8C(&qword_10119F030);
    v31 = swift_getEnumCaseMultiPayload(v29, v30);
    *(_QWORD *)v28 = *(_QWORD *)v29;
    if (v31 == 1)
    {
      v83 = v30;
      v32 = (int *)type metadata accessor for Library.Context(0);
      v33 = v32[5];
      v34 = &v28[v33];
      v35 = &v29[v33];
      v36 = type metadata accessor for Album(0);
      v37 = *(_QWORD *)(v36 - 8);
      v38 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v37 + 48);
      v39 = swift_retain();
      if (v38(v35, 1, v36, v39))
      {
        v40 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
      }
      v42 = v32[6];
      v43 = &v28[v42];
      v44 = &v29[v42];
      v45 = type metadata accessor for Artist(0);
      v46 = *(_QWORD *)(v45 - 8);
      v30 = v83;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
      {
        v47 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v43, v44, v45);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
      }
      v48 = v32[7];
      v49 = &v28[v48];
      v50 = &v29[v48];
      v51 = type metadata accessor for Composer(0);
      v52 = *(_QWORD *)(v51 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
      {
        v53 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v49, v50, v51);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
      }
      v54 = v32[8];
      v55 = &v28[v54];
      v56 = &v29[v54];
      v57 = type metadata accessor for Genre(0);
      v58 = *(_QWORD *)(v57 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
      {
        v59 = sub_100007E8C(&qword_10119ED08);
        memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v55, v56, v57);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
      }
      v60 = v32[9];
      v61 = &v28[v60];
      v62 = &v29[v60];
      v63 = type metadata accessor for Playlist(0);
      v64 = *(_QWORD *)(v63 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63))
      {
        v65 = sub_100007E8C(&qword_1011A30F0);
        memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v61, v62, v63);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
      }
      v66 = v32[10];
      v67 = &v28[v66];
      v68 = &v29[v66];
      v69 = type metadata accessor for TVShow(0);
      v70 = *(_QWORD *)(v69 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v68, 1, v69))
      {
        v71 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v67, v68, v69);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
      }
      v72 = v32[11];
      v73 = &v28[v72];
      v74 = &v29[v72];
      v75 = type metadata accessor for TVSeason(0);
      v76 = *(_QWORD *)(v75 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(v74, 1, v75))
      {
        v77 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v73, v74, v75);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
      }
      v28[v32[12]] = v29[v32[12]];
      v28[v32[13]] = v29[v32[13]];
      v28[v32[14]] = v29[v32[14]];
      v78 = v32[15];
      v79 = &v28[v78];
      v80 = &v29[v78];
      *(_QWORD *)v79 = *(_QWORD *)v80;
      *((_QWORD *)v79 + 1) = *((_QWORD *)v80 + 1);
      *(_QWORD *)&v28[v32[16]] = *(_QWORD *)&v29[v32[16]];
      v28[v32[17]] = v29[v32[17]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v41 = 1;
    }
    else
    {
      swift_retain();
      v41 = 0;
    }
    swift_storeEnumTagMultiPayload(v28, v30, v41);
  }
  return a1;
}

char *sub_1007CA614(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v6 = _s15LegacyPlaylistsV5ScopeOMa(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100007E8C(&qword_1011BFDB0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v6);
    if (EnumCaseMultiPayload == 1)
    {
      v11 = type metadata accessor for Playlist(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v7 + 64));
    }
    else
    {
      v10 = type metadata accessor for Curator(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
      swift_storeEnumTagMultiPayload(a1, v6, 0);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v12 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  v13 = &a1[v12];
  v14 = &a2[v12];
  *(_OWORD *)v13 = *(_OWORD *)v14;
  v13[16] = v14[16];
  v15 = a3[7];
  v16 = a3[8];
  v17 = &a1[v15];
  v18 = &a2[v15];
  *(_OWORD *)v17 = *(_OWORD *)v18;
  v17[16] = v18[16];
  v19 = &a1[v16];
  v20 = &a2[v16];
  v21 = sub_100007E8C(&qword_10119F030);
  if (swift_getEnumCaseMultiPayload(v20, v21) == 1)
  {
    *(_QWORD *)v19 = *(_QWORD *)v20;
    v22 = (int *)type metadata accessor for Library.Context(0);
    v23 = v22[5];
    v24 = &v19[v23];
    v25 = &v20[v23];
    v26 = type metadata accessor for Album(0);
    v27 = *(_QWORD *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    {
      v28 = sub_100007E8C(&qword_1011A8FA0);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v24, v25, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
    v29 = v22[6];
    v30 = &v19[v29];
    v31 = &v20[v29];
    v32 = type metadata accessor for Artist(0);
    v33 = *(_QWORD *)(v32 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
    {
      v34 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v30, v31, v32);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
    }
    v35 = v22[7];
    v36 = &v19[v35];
    v37 = &v20[v35];
    v38 = type metadata accessor for Composer(0);
    v39 = *(_QWORD *)(v38 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
    {
      v40 = sub_100007E8C((uint64_t *)&unk_1011C7310);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v36, v37, v38);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
    }
    v41 = v22[8];
    v42 = &v19[v41];
    v43 = &v20[v41];
    v44 = type metadata accessor for Genre(0);
    v45 = *(_QWORD *)(v44 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
    {
      v46 = sub_100007E8C(&qword_10119ED08);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v42, v43, v44);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
    }
    v47 = v22[9];
    v48 = &v19[v47];
    v49 = &v20[v47];
    v50 = type metadata accessor for Playlist(0);
    v51 = *(_QWORD *)(v50 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
    {
      v52 = sub_100007E8C(&qword_1011A30F0);
      memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v48, v49, v50);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
    }
    v53 = v22[10];
    v54 = &v19[v53];
    v55 = &v20[v53];
    v56 = type metadata accessor for TVShow(0);
    v57 = *(_QWORD *)(v56 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
    {
      v58 = sub_100007E8C((uint64_t *)&unk_1011D1410);
      memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v54, v55, v56);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
    }
    v59 = v22[11];
    v60 = &v19[v59];
    v61 = &v20[v59];
    v62 = type metadata accessor for TVSeason(0);
    v63 = *(_QWORD *)(v62 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v61, 1, v62))
    {
      v64 = sub_100007E8C((uint64_t *)&unk_1011C7320);
      memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v60, v61, v62);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
    }
    v19[v22[12]] = v20[v22[12]];
    v19[v22[13]] = v20[v22[13]];
    v19[v22[14]] = v20[v22[14]];
    *(_OWORD *)&v19[v22[15]] = *(_OWORD *)&v20[v22[15]];
    *(_QWORD *)&v19[v22[16]] = *(_QWORD *)&v20[v22[16]];
    v19[v22[17]] = v20[v22[17]];
    swift_storeEnumTagMultiPayload(v19, v21, 1);
  }
  else
  {
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  return a1;
}

char *sub_1007CABDC(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  size_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  int *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v74;

  v6 = _s15LegacyPlaylistsV5ScopeOMa(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      if (a1 == a2)
        goto LABEL_17;
      sub_10005B748((uint64_t)a1, _s15LegacyPlaylistsV5ScopeOMa);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v6);
      if (EnumCaseMultiPayload == 1)
      {
        v74 = type metadata accessor for Playlist(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 32))(a1, a2, v74);
        swift_storeEnumTagMultiPayload(a1, v6, 1);
        goto LABEL_17;
      }
      if (!EnumCaseMultiPayload)
      {
        v15 = type metadata accessor for Curator(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a1, a2, v15);
        swift_storeEnumTagMultiPayload(a1, v6, 0);
        goto LABEL_17;
      }
      v13 = *(_QWORD *)(v7 + 64);
LABEL_9:
      memcpy(a1, a2, v13);
      goto LABEL_17;
    }
    sub_10005B748((uint64_t)a1, _s15LegacyPlaylistsV5ScopeOMa);
LABEL_8:
    v13 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011BFDB0) - 8) + 64);
    goto LABEL_9;
  }
  if (v10)
    goto LABEL_8;
  v11 = swift_getEnumCaseMultiPayload(a2, v6);
  if (v11 == 1)
  {
    v16 = type metadata accessor for Playlist(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a1, a2, v16);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else if (v11)
  {
    memcpy(a1, a2, *(_QWORD *)(v7 + 64));
  }
  else
  {
    v12 = type metadata accessor for Curator(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
    swift_storeEnumTagMultiPayload(a1, v6, 0);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_17:
  v17 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  v18 = &a1[v17];
  v19 = &a2[v17];
  *(_QWORD *)&a1[v17] = *(_QWORD *)&a2[v17];
  swift_release();
  *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
  swift_release();
  v18[16] = v19[16];
  v20 = a3[7];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = v22[16];
  v24 = *(_QWORD *)v21;
  v25 = *((_QWORD *)v21 + 1);
  *(_OWORD *)v21 = *(_OWORD *)v22;
  v21[16] = v23;
  sub_1000A6174(v24, v25);
  if (a1 != a2)
  {
    v26 = a3[8];
    v27 = &a1[v26];
    v28 = &a2[v26];
    sub_10004FF60((uint64_t)&a1[v26], &qword_10119F030);
    v29 = sub_100007E8C(&qword_10119F030);
    if (swift_getEnumCaseMultiPayload(v28, v29) == 1)
    {
      *(_QWORD *)v27 = *(_QWORD *)v28;
      v30 = (int *)type metadata accessor for Library.Context(0);
      v31 = v30[5];
      v32 = &v27[v31];
      v33 = &v28[v31];
      v34 = type metadata accessor for Album(0);
      v35 = *(_QWORD *)(v34 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
      {
        v36 = sub_100007E8C(&qword_1011A8FA0);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v32, v33, v34);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      }
      v37 = v30[6];
      v38 = &v27[v37];
      v39 = &v28[v37];
      v40 = type metadata accessor for Artist(0);
      v41 = *(_QWORD *)(v40 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
      {
        v42 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v38, v39, v40);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
      }
      v43 = v30[7];
      v44 = &v27[v43];
      v45 = &v28[v43];
      v46 = type metadata accessor for Composer(0);
      v47 = *(_QWORD *)(v46 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
      {
        v48 = sub_100007E8C((uint64_t *)&unk_1011C7310);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v44, v45, v46);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
      }
      v49 = v30[8];
      v50 = &v27[v49];
      v51 = &v28[v49];
      v52 = type metadata accessor for Genre(0);
      v53 = *(_QWORD *)(v52 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
      {
        v54 = sub_100007E8C(&qword_10119ED08);
        memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v50, v51, v52);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
      }
      v55 = v30[9];
      v56 = &v27[v55];
      v57 = &v28[v55];
      v58 = type metadata accessor for Playlist(0);
      v59 = *(_QWORD *)(v58 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58))
      {
        v60 = sub_100007E8C(&qword_1011A30F0);
        memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v56, v57, v58);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
      }
      v61 = v30[10];
      v62 = &v27[v61];
      v63 = &v28[v61];
      v64 = type metadata accessor for TVShow(0);
      v65 = *(_QWORD *)(v64 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v63, 1, v64))
      {
        v66 = sub_100007E8C((uint64_t *)&unk_1011D1410);
        memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v62, v63, v64);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
      }
      v67 = v30[11];
      v68 = &v27[v67];
      v69 = &v28[v67];
      v70 = type metadata accessor for TVSeason(0);
      v71 = *(_QWORD *)(v70 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v69, 1, v70))
      {
        v72 = sub_100007E8C((uint64_t *)&unk_1011C7320);
        memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v68, v69, v70);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
      }
      v27[v30[12]] = v28[v30[12]];
      v27[v30[13]] = v28[v30[13]];
      v27[v30[14]] = v28[v30[14]];
      *(_OWORD *)&v27[v30[15]] = *(_OWORD *)&v28[v30[15]];
      *(_QWORD *)&v27[v30[16]] = *(_QWORD *)&v28[v30[16]];
      v27[v30[17]] = v28[v30[17]];
      swift_storeEnumTagMultiPayload(v27, v29, 1);
    }
    else
    {
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1007CB2B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1007CB2BC);
}

uint64_t sub_1007CB2BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = sub_100007E8C(&qword_1011BFDB0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_100007E8C(&qword_10119EE98);
    v10 = a1 + *(int *)(a3 + 32);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_1007CB370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1007CB37C);
}

uint64_t sub_1007CB37C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_100007E8C(&qword_1011BFDB0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
      return result;
    }
    v10 = sub_100007E8C(&qword_10119EE98);
    v12 = a1 + *(int *)(a4 + 32);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1007CB42C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[5];

  sub_1000E3A44(319, (unint64_t *)&unk_1011C96E8, _s15LegacyPlaylistsV5ScopeOMa, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = &unk_100ED0598;
    v6[2] = &unk_100ED05B0;
    v6[3] = &unk_100ED05C8;
    sub_1000E3A44(319, (unint64_t *)&qword_10119F6B0, type metadata accessor for Library.Context, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v5 <= 0x3F)
    {
      v6[4] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 5, v6, a1 + 16);
    }
  }
}

uint64_t sub_1007CB4FC()
{
  return sub_100048748(&qword_1011C9728, _s11ContentViewVMa_2, (uint64_t)&unk_100ED05E0);
}

uint64_t sub_1007CB528(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAD52C, 1);
}

uint64_t sub_1007CB538@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  _BYTE *v55;
  uint64_t (**v56)(uint64_t);
  uint64_t v57;
  _BYTE *v58;
  _BYTE *v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  uint64_t v65;
  _BYTE *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  _BYTE *v75;
  uint64_t v76;
  uint64_t v77;
  _BYTE *v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _BYTE *v82;
  uint64_t v83;
  char v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  _BYTE *v88;
  uint64_t v89;
  _BYTE *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(_BYTE *, uint64_t);
  uint64_t v96;
  _BYTE *v97;
  _BYTE *v98;
  uint64_t v99;
  char v100;
  _BYTE *v101;
  uint64_t v102;
  __n128 v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  _BYTE *v109;
  _BYTE v111[12];
  int v112;
  int *v113;
  _BYTE *v114;
  uint64_t v115;
  uint64_t v116;
  _BYTE *v117;
  _BYTE *v118;
  _BYTE *v119;
  _BYTE *v120;
  _BYTE *v121;
  uint64_t v122;
  _BYTE *v123;
  uint64_t v124;
  _BYTE *v125;
  _BYTE *v126;
  uint64_t v127;
  _BYTE *v128;
  _BYTE *v129;
  _BYTE *v130;
  uint64_t v131;
  _BYTE *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  _BYTE *v137;
  _QWORD *v138;
  uint64_t v139;
  _BYTE *v140;
  _BYTE *v141;
  _BYTE *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char v148;
  uint64_t v149;
  uint64_t v150;
  char v151;

  v2 = v1;
  v134 = a1;
  v133 = type metadata accessor for ToolbarItemPlacement(0);
  v131 = *(_QWORD *)(v133 - 8);
  __chkstk_darwin(v133);
  v132 = &v111[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v130 = &v111[-v5];
  v127 = sub_100007E8C(&qword_1011C9730);
  __chkstk_darwin(v127);
  v126 = &v111[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v124 = sub_100007E8C(&qword_1011C9738);
  __chkstk_darwin(v124);
  v123 = &v111[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v143 = type metadata accessor for Library.Context(0);
  __chkstk_darwin(v143);
  v125 = &v111[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v118 = &v111[-v10];
  __chkstk_darwin(v11);
  v117 = &v111[-v12];
  __chkstk_darwin(v13);
  v141 = &v111[-v14];
  __chkstk_darwin(v15);
  v142 = &v111[-v16];
  v17 = _s11ContentViewVMa_2(0);
  v115 = *(_QWORD *)(v17 - 8);
  v18 = v17;
  v116 = *(_QWORD *)(v115 + 64);
  __chkstk_darwin(v17);
  v114 = &v111[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = sub_100007E8C(&qword_1011B5680);
  __chkstk_darwin(v20);
  v128 = &v111[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v22);
  v137 = &v111[-v23];
  v24 = (int *)sub_100007E8C(&qword_1011C9740);
  __chkstk_darwin(v24);
  v26 = &v111[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v27);
  v140 = &v111[-v28];
  v29 = sub_100007E8C(&qword_1011C9748);
  __chkstk_darwin(v29);
  v119 = &v111[-((v30 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v31);
  v120 = &v111[-v32];
  v122 = sub_100007E8C(&qword_1011AC078);
  __chkstk_darwin(v122);
  v121 = &v111[-((v33 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v34 = sub_100007E8C(&qword_1011AC080);
  __chkstk_darwin(v34);
  v129 = &v111[-((v35 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v36 = v18;
  v138 = (_QWORD *)(v1 + *(int *)(v18 + 28));
  v139 = v18;
  v38 = *v138;
  v37 = v138[1];
  v39 = *((unsigned __int8 *)v138 + 16);
  v40 = sub_100007E8C(&qword_1011C9750);
  v135 = sub_100049F28(&qword_1011C9758, &qword_1011C9750, (uint64_t)&protocol conformance descriptor for MusicAutoupdatingResponse<A>);
  v136 = v40;
  v41 = v135;
  StateObject.wrappedValue.getter(v38, v37, v39, v40, v135);
  dispatch thunk of MusicAutoupdatingResponse.response.getter(v42);
  swift_release();
  v43 = StateObject.wrappedValue.getter(v38, v37, v39, v40, v41);
  v112 = dispatch thunk of MusicAutoupdatingResponse.isLoaded.getter(v43);
  swift_release();
  v44 = *(int *)(v36 + 24);
  v144 = v1;
  v45 = (uint64_t *)(v1 + v44);
  v46 = *(_QWORD *)(v1 + v44 + 8);
  v47 = *(_BYTE *)(v1 + v44 + 16);
  v146 = *(_QWORD *)(v1 + v44);
  v147 = v46;
  v148 = v47;
  v145 = sub_100007E8C(&qword_1011ABF38);
  Binding.projectedValue.getter(&v149, v145);
  v48 = v149;
  v49 = v150;
  LOBYTE(v40) = v151;
  v50 = v114;
  sub_10005B704(v2, (uint64_t)v114, _s11ContentViewVMa_2);
  v51 = *(unsigned __int8 *)(v115 + 80);
  v52 = (v51 + 16) & ~v51;
  v53 = swift_allocObject(&unk_1010DCB80, v52 + v116, v51 | 7);
  sub_10005B6C0((uint64_t)v50, v53 + v52, _s11ContentViewVMa_2);
  v54 = &v26[v24[19]];
  *(_QWORD *)v54 = swift_getKeyPath(&unk_100ED0630);
  *((_QWORD *)v54 + 1) = 0;
  *((_QWORD *)v54 + 2) = 0;
  *((_QWORD *)v54 + 3) = 0;
  v54[32] = 0;
  sub_100065228((uint64_t)v137, (uint64_t)v26, &qword_1011B5680);
  v113 = v24;
  v26[v24[13]] = v112 & 1;
  v26[v24[14]] = 0;
  v55 = &v26[v24[15]];
  *(_QWORD *)v55 = v48;
  *((_QWORD *)v55 + 1) = v49;
  v55[16] = v40;
  *(_QWORD *)&v26[v24[16]] = 4;
  *(_QWORD *)&v26[v24[17]] = 0x403E000000000000;
  v56 = (uint64_t (**)(uint64_t))&v26[v24[18]];
  *v56 = sub_1007CC6DC;
  v56[1] = (uint64_t (*)(uint64_t))v53;
  sub_100065228((uint64_t)v26, (uint64_t)v140, &qword_1011C9740);
  v57 = v144;
  v137 = (_BYTE *)(v144 + *(int *)(v139 + 32));
  v58 = v118;
  sub_10082460C((uint64_t)v118);
  v59 = v117;
  sub_1006520D4(v57, (uint64_t)v117);
  sub_10005B748((uint64_t)v58, type metadata accessor for Library.Context);
  v60 = v45[1];
  v61 = *((_BYTE *)v45 + 16);
  v149 = *v45;
  v150 = v60;
  v151 = v61;
  Binding.wrappedValue.getter(&v146, v145);
  LOBYTE(v58) = v146;
  v62 = (uint64_t)v59;
  v63 = (uint64_t)v59;
  v64 = v141;
  sub_10005B704(v63, (uint64_t)v141, type metadata accessor for Library.Context);
  v65 = v143;
  v64[*(int *)(v143 + 56)] = (_BYTE)v58;
  sub_10005B748(v62, type metadata accessor for Library.Context);
  v66 = v142;
  sub_10005B704((uint64_t)v64, (uint64_t)v142, type metadata accessor for Library.Context);
  v66[*(int *)(v65 + 52)] = 1;
  sub_10005B748((uint64_t)v64, type metadata accessor for Library.Context);
  v68 = v135;
  v67 = v136;
  StateObject.wrappedValue.getter(*v138, v138[1], *((unsigned __int8 *)v138 + 16), v136, v135);
  v69 = v124;
  v70 = (uint64_t)v123;
  v71 = (uint64_t)&v123[*(int *)(v124 + 36)];
  sub_10005B704((uint64_t)v66, v71, type metadata accessor for Library.Context);
  v72 = (_QWORD *)(v71 + *(int *)(sub_100007E8C(&qword_1011C9760) + 36));
  swift_retain();
  *v72 = ObservedObject.init(wrappedValue:)(v73, v67, v68);
  v72[1] = v74;
  v75 = v140;
  v76 = v70;
  sub_10004A160((uint64_t)v140, v70, &qword_1011C9740);
  v77 = v70;
  v78 = v126;
  sub_10004A160(v77, (uint64_t)v126, &qword_1011C9738);
  swift_storeEnumTagMultiPayload(v78, v127, 0);
  v79 = sub_1007CC6F0();
  v80 = sub_100049F28(&qword_1011C9770, &qword_1011C9740, (uint64_t)&unk_100EC0C68);
  v81 = (uint64_t)v119;
  _ConditionalContent<>.init(storage:)(v78, v69, v113, v79, v80);
  sub_10004FF60(v76, &qword_1011C9738);
  v82 = v120;
  sub_100065228(v81, (uint64_t)v120, &qword_1011C9748);
  swift_release();
  sub_10005B748((uint64_t)v66, type metadata accessor for Library.Context);
  sub_10004FF60((uint64_t)v75, &qword_1011C9740);
  LODWORD(v140) = *(unsigned __int8 *)(v144 + *(int *)(v139 + 20));
  v83 = v45[1];
  v84 = *((_BYTE *)v45 + 16);
  v146 = *v45;
  v147 = v83;
  v148 = v84;
  v85 = Binding.projectedValue.getter(&v149, v145);
  v86 = v149;
  v87 = v150;
  LOBYTE(v79) = v151;
  v88 = v130;
  static ToolbarItemPlacement.navigationBarTrailing.getter(v85);
  v89 = (uint64_t)v121;
  v90 = &v121[*(int *)(v122 + 36)];
  v91 = _s25SortFilterContentModifierVMa(0);
  v92 = v131;
  v93 = v133;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v131 + 16))(&v90[*(int *)(v91 + 24)], v88, v133);
  *v90 = (_BYTE)v140;
  *((_QWORD *)v90 + 1) = v86;
  *((_QWORD *)v90 + 2) = v87;
  v90[24] = v79;
  v94 = (uint64_t)v132;
  sub_10004A160((uint64_t)v82, v89, &qword_1011C9748);
  v95 = *(void (**)(_BYTE *, uint64_t))(v92 + 8);
  v95(v88, v93);
  v96 = sub_10004FF60((uint64_t)v82, &qword_1011C9748);
  static ToolbarItemPlacement.navigationBarTrailing.getter(v96);
  v97 = v141;
  sub_10082460C((uint64_t)v141);
  v98 = v142;
  sub_1006520D4(v144, (uint64_t)v142);
  sub_10005B748((uint64_t)v97, type metadata accessor for Library.Context);
  v99 = v45[1];
  v100 = *((_BYTE *)v45 + 16);
  v149 = *v45;
  v150 = v99;
  v151 = v100;
  Binding.wrappedValue.getter(&v146, v145);
  LOBYTE(v97) = v146;
  v101 = v125;
  sub_10005B704((uint64_t)v98, (uint64_t)v125, type metadata accessor for Library.Context);
  v101[*(int *)(v143 + 56)] = (_BYTE)v97;
  v102 = (uint64_t)v128;
  sub_10005B748((uint64_t)v98, type metadata accessor for Library.Context);
  StateObject.wrappedValue.getter(*v138, v138[1], *((unsigned __int8 *)v138 + 16), v136, v135);
  dispatch thunk of MusicAutoupdatingResponse.response.getter(v103);
  swift_release();
  v104 = sub_100007E8C(&qword_1011B5620);
  v105 = *(_QWORD *)(v104 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v105 + 48))(v102, 1, v104) == 1)
  {
    sub_10004FF60(v102, &qword_1011B5680);
    v106 = 1;
  }
  else
  {
    v107 = MusicLibrarySectionedResponse.sections.getter(v104);
    (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v102, v104);
    v108 = *(_QWORD *)(v107 + 16);
    swift_bridgeObjectRelease();
    v106 = v108 == 0;
  }
  v109 = v129;
  sub_100302598(v94, (uint64_t)v101, v106, (uint64_t)v129);
  sub_10005B748((uint64_t)v101, type metadata accessor for Library.Context);
  v95((_BYTE *)v94, v93);
  sub_10004FF60(v89, &qword_1011AC078);
  return sub_100065228((uint64_t)v109, v134, &qword_1011AC080);
}

uint64_t sub_1007CBFD0(uint64_t a1, uint64_t a2)
{
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD v10[4];
  uint64_t v11;

  KeyPath = swift_getKeyPath(&unk_100ED0658);
  v5 = sub_100007E8C(&qword_1011B5690);
  MusicLibrarySection.subscript.getter(KeyPath, v5);
  swift_release();
  v10[2] = a1;
  v10[3] = a2;
  v6 = sub_100007E8C(&qword_1011C9780);
  v7 = sub_1000A8D68();
  v8 = sub_1007CC798();
  return Section<>.init(header:content:)(&v11, sub_1007CC790, v10, &_s6HeaderVN, v6, v7, v8);
}

uint64_t sub_1007CC08C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v3 = _s11ContentViewVMa_2(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = sub_100007E8C((uint64_t *)&unk_1011ACAD0);
  __chkstk_darwin(v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011B5690);
  MusicLibrarySection.items.getter(v9, v10);
  sub_10005B704(a2, (uint64_t)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), _s11ContentViewVMa_2);
  v11 = *(unsigned __int8 *)(v4 + 80);
  v12 = (v11 + 16) & ~v11;
  v13 = swift_allocObject(&unk_1010DCBA8, v12 + v5, v11 | 7);
  sub_10005B6C0((uint64_t)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12, _s11ContentViewVMa_2);
  v14 = _s9ContainerO4CellVMa(0);
  v15 = sub_100049F28(&qword_1011C9790, (uint64_t *)&unk_1011ACAD0, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  v16 = sub_100048748(&qword_1011ABF80, _s9ContainerO4CellVMa, (uint64_t)&unk_100ED6F3C);
  v17 = sub_100048748((unint64_t *)&unk_1011D1510, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&protocol conformance descriptor for Playlist);
  return ForEach<>.init(_:content:)(v8, sub_1007CCB30, v13, v6, &type metadata for MusicItemID, v14, v15, v16, v17);
}

uint64_t sub_1007CC248@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  int *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t KeyPath;
  uint64_t v36;
  uint64_t v37;
  int *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;

  v69 = a2;
  v5 = sub_100007E8C(&qword_10119EE98);
  __chkstk_darwin(v5);
  v71 = (uint64_t *)((char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = (int *)_s9ContainerO5ModelVMa(0);
  __chkstk_darwin(v7);
  v70 = (uint64_t)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v64 - v10;
  v12 = type metadata accessor for Playlist(0);
  v13 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  v13(v11, a1, v12);
  v14 = enum case for GenericMusicItem.playlist(_:);
  v15 = type metadata accessor for GenericMusicItem(0);
  v16.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v11, v14, v15);
  v17 = Playlist.name.getter(v16);
  v67 = v18;
  v68 = v17;
  v19 = Playlist.curatorName.getter(v17);
  v65 = v20;
  v66 = v19;
  v21 = &v11[v7[7]];
  Playlist.variant.getter(v19);
  v22 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 0, 10, v22);
  v23 = &v11[v7[9]];
  v24 = (int *)sub_100007E8C(&qword_10119ED18);
  v25 = (uint64_t)&v23[v24[12]];
  v26 = &v23[v24[16]];
  v27 = v24[20];
  v13(v23, a1, v12);
  _s11ContentViewVMa_2(0);
  sub_10082460C(v25);
  v28 = type metadata accessor for Library.Context(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v25, 0, 1, v28);
  *(_QWORD *)v26 = 0;
  *((_QWORD *)v26 + 1) = 0;
  *(_OWORD *)&v23[v27] = xmmword_100EAE4D0;
  v29 = type metadata accessor for NavigationDestinationItem(0);
  swift_storeEnumTagMultiPayload(v23, v29, 2);
  v30 = &v11[v7[5]];
  v31 = v67;
  *(_QWORD *)v30 = v68;
  *((_QWORD *)v30 + 1) = v31;
  v32 = &v11[v7[6]];
  v33 = v65;
  *(_QWORD *)v32 = v66;
  *((_QWORD *)v32 + 1) = v33;
  *(_QWORD *)&v11[v7[8]] = 0x3FF0000000000000;
  v34 = v70;
  sub_10005B704((uint64_t)v11, v70, _s9ContainerO5ModelVMa);
  KeyPath = swift_getKeyPath(&unk_100ED0558);
  v36 = (uint64_t)v71;
  *v71 = KeyPath;
  v37 = sub_100007E8C(&qword_10119F030);
  swift_storeEnumTagMultiPayload(v36, v37, 0);
  sub_10005B6C0(v34, a3, _s9ContainerO5ModelVMa);
  v38 = (int *)_s9ContainerO4CellVMa(0);
  v39 = a3 + v38[5];
  *(_QWORD *)v39 = swift_getKeyPath(&unk_100ED0688);
  *(_BYTE *)(v39 + 8) = 0;
  sub_100065228(v36, a3 + v38[6], &qword_10119EE98);
  v40 = (_QWORD *)(a3 + v38[7]);
  v41 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v42 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *v40 = EnvironmentObject.init()(v41, v42);
  v40[1] = v43;
  v44 = (_QWORD *)(a3 + v38[8]);
  v45 = type metadata accessor for NoticePresenter(0);
  v46 = sub_100048748((unint64_t *)&unk_1011C72F0, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
  *v44 = EnvironmentObject.init()(v45, v46);
  v44[1] = v47;
  v48 = a3 + v38[9];
  *(_QWORD *)v48 = sub_1008419B0;
  *(_QWORD *)(v48 + 8) = 0;
  *(_BYTE *)(v48 + 16) = 0;
  v49 = (_QWORD *)(a3 + v38[10]);
  v50 = type metadata accessor for NavigationPusher();
  v51 = sub_100048748(&qword_10119F060, (uint64_t (*)(uint64_t))type metadata accessor for NavigationPusher, (uint64_t)&unk_100EC8D64);
  *v49 = EnvironmentObject.init()(v50, v51);
  v49[1] = v52;
  v53 = (_QWORD *)(a3 + v38[11]);
  v54 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
  v55 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
  *v53 = EnvironmentObject.init()(v54, v55);
  v53[1] = v56;
  v57 = (_QWORD *)(a3 + v38[12]);
  v58 = type metadata accessor for TabSelectionManager(0);
  v59 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
  *v57 = EnvironmentObject.init()(v58, v59);
  v57[1] = v60;
  v61 = a3 + v38[13];
  *(_QWORD *)v61 = swift_getKeyPath(&unk_100ED06B0);
  *(_QWORD *)(v61 + 8) = 0;
  *(_BYTE *)(v61 + 16) = 0;
  v62 = a3 + v38[14];
  *(_QWORD *)v62 = swift_getKeyPath(&unk_100ED06D8);
  *(_QWORD *)(v62 + 8) = 0;
  *(_BYTE *)(v62 + 16) = 0;
  return sub_10005B748((uint64_t)v11, _s9ContainerO5ModelVMa);
}

uint64_t sub_1007CC6DC(uint64_t a1)
{
  return sub_1007CCB3C(a1, sub_1007CBFD0);
}

unint64_t sub_1007CC6F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C9768;
  if (!qword_1011C9768)
  {
    v1 = sub_100044B54(&qword_1011C9738);
    sub_100049F28(&qword_1011C9770, &qword_1011C9740, (uint64_t)&unk_100EC0C68);
    sub_100049F28(&qword_1011C9778, &qword_1011C9760, (uint64_t)&unk_100EC9EF8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C9768);
  }
  return result;
}

uint64_t sub_1007CC790()
{
  uint64_t v0;

  return sub_1007CC08C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t sub_1007CC798()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C9788;
  if (!qword_1011C9788)
  {
    v1 = sub_100044B54(&qword_1011C9780);
    sub_100048748(&qword_1011ABF80, _s9ContainerO4CellVMa, (uint64_t)&unk_100ED6F3C);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C9788);
  }
  return result;
}

uint64_t sub_1007CC818()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v1 = _s11ContentViewVMa_2(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = v0 + v3;
  v6 = _s15LegacyPlaylistsV5ScopeOMa(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v0 + v3, 1, v6))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0 + v3, v6);
    if (EnumCaseMultiPayload == 1)
    {
      v8 = type metadata accessor for Playlist(0);
    }
    else
    {
      if (EnumCaseMultiPayload)
        goto LABEL_7;
      v8 = type metadata accessor for Curator(0);
    }
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v3, v8);
  }
LABEL_7:
  swift_release();
  swift_release();
  sub_1000A6174(*(_QWORD *)(v5 + *(int *)(v1 + 28)), *(_QWORD *)(v5 + *(int *)(v1 + 28) + 8));
  v9 = v5 + *(int *)(v1 + 32);
  v10 = sub_100007E8C(&qword_10119F030);
  v11 = swift_getEnumCaseMultiPayload(v9, v10);
  swift_release();
  if (v11 == 1)
  {
    v12 = (int *)type metadata accessor for Library.Context(0);
    v13 = v9 + v12[5];
    v14 = type metadata accessor for Album(0);
    v15 = *(_QWORD *)(v14 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
    v16 = v9 + v12[6];
    v17 = type metadata accessor for Artist(0);
    v18 = *(_QWORD *)(v17 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
    v19 = v9 + v12[7];
    v20 = type metadata accessor for Composer(0);
    v21 = *(_QWORD *)(v20 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
    v22 = v9 + v12[8];
    v23 = type metadata accessor for Genre(0);
    v24 = *(_QWORD *)(v23 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
    v25 = v9 + v12[9];
    v26 = type metadata accessor for Playlist(0);
    v27 = *(_QWORD *)(v26 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v26);
    v28 = v9 + v12[10];
    v29 = type metadata accessor for TVShow(0);
    v30 = *(_QWORD *)(v29 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v28, v29);
    v31 = v9 + v12[11];
    v32 = type metadata accessor for TVSeason(0);
    v33 = *(_QWORD *)(v32 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v31, v32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject(v0, v3 + v4);
}

uint64_t sub_1007CCB30(uint64_t a1)
{
  return sub_1007CCB3C(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1007CC248);
}

uint64_t sub_1007CCB3C(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(_s11ContentViewVMa_2(0) - 8) + 80);
  return a2(a1, v2 + ((v4 + 16) & ~v4));
}

unint64_t sub_1007CCBB4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C9798;
  if (!qword_1011C9798)
  {
    v1 = sub_100044B54(&qword_1011AC080);
    sub_1007CCC38();
    sub_100049F28(&qword_1011C97B0, &qword_1011AC068, (uint64_t)&unk_100ED1EB8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C9798);
  }
  return result;
}

unint64_t sub_1007CCC38()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C97A0;
  if (!qword_1011C97A0)
  {
    v1 = sub_100044B54(&qword_1011AC078);
    sub_1007CCCBC();
    sub_100048748(&qword_10119F7E8, _s25SortFilterContentModifierVMa, (uint64_t)&unk_100ED0D00);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C97A0);
  }
  return result;
}

unint64_t sub_1007CCCBC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C97A8;
  if (!qword_1011C97A8)
  {
    v1 = sub_100044B54(&qword_1011C9748);
    sub_1007CC6F0();
    sub_100049F28(&qword_1011C9770, &qword_1011C9740, (uint64_t)&unk_100EC0C68);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C97A8);
  }
  return result;
}

ValueMetadata *type metadata accessor for SplitWidgetView()
{
  return &type metadata for SplitWidgetView;
}

uint64_t sub_1007CCD50(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAD5B8, 1);
}

uint64_t sub_1007CCD60@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t KeyPath;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;

  v38 = a2;
  v3 = sub_100007E8C(&qword_1011C97C8);
  __chkstk_darwin(v3);
  v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011C97D0);
  v37 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v36 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011C97D8);
  __chkstk_darwin(v8);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011C6890);
  __chkstk_darwin(v11);
  v13 = (uint64_t *)((char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = type metadata accessor for SplitWidgetView.ContentView(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100ED0798);
  *v13 = swift_getKeyPath(&unk_100ED07C0);
  v18 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  swift_storeEnumTagMultiPayload(v13, v18, 0);
  *(_QWORD *)v16 = a1;
  *((_QWORD *)v16 + 1) = swift_getKeyPath(&unk_100ED07F0);
  *((_OWORD *)v16 + 1) = 0u;
  *((_OWORD *)v16 + 2) = 0u;
  v16[48] = 0;
  *((_QWORD *)v16 + 7) = swift_getKeyPath(&unk_100ED0818);
  *((_QWORD *)v16 + 8) = 0;
  v16[72] = 0;
  *((_QWORD *)v16 + 10) = KeyPath;
  v16[88] = 0;
  sub_100065228((uint64_t)v13, (uint64_t)&v16[*(int *)(v14 + 32)], &qword_1011C6890);
  v19 = a1;
  v20 = JSSplitWidgetViewModel.leftViewModelKind.getter();
  if ((~v20 & 0xF000000000000007) != 0
    && (v21 = v20, v22 = sub_1007CDB3C(v20), sub_100231E18(v21), (v22 & 1) != 0)
    && (v23 = JSSplitWidgetViewModel.rightViewModelKind.getter(), (~v23 & 0xF000000000000007) != 0)
    && (v24 = v23, v25 = sub_1007CDB3C(v23), sub_100231E18(v24), (v25 & 1) != 0))
  {
    v27 = static Axis.Set.horizontal.getter(v26);
    v35 = (uint64_t)&v35;
    __chkstk_darwin(v27);
    *(&v35 - 2) = (uint64_t)v16;
    v28 = sub_1007CEA08();
    v29 = v36;
    ScrollView.init(_:showsIndicators:content:)(v27, 0, sub_1007CEA8C, &v35 - 4, v14, v28);
    v30 = v37;
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v5, v29, v6);
    swift_storeEnumTagMultiPayload(v5, v3, 0);
    v31 = sub_100049F28(&qword_1011C97E0, &qword_1011C97D0, (uint64_t)&protocol conformance descriptor for ScrollView<A>);
    _ConditionalContent<>.init(storage:)(v5, v6, v14, v31, v28);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v29, v6);
  }
  else
  {
    sub_1007CE9C4((uint64_t)v16, (uint64_t)v5);
    swift_storeEnumTagMultiPayload(v5, v3, 1);
    v32 = sub_100049F28(&qword_1011C97E0, &qword_1011C97D0, (uint64_t)&protocol conformance descriptor for ScrollView<A>);
    v33 = sub_1007CEA08();
    _ConditionalContent<>.init(storage:)(v5, v6, v14, v32, v33);
  }
  sub_100065228((uint64_t)v10, v38, &qword_1011C97D8);
  return sub_1007CEA50((uint64_t)v16);
}

uint64_t sub_1007CD10C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  void *v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  double v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t KeyPath;
  char v23;
  unint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  double v54;
  __int128 v55;
  __int128 v56;
  int v57;
  uint64_t v58;
  __int128 v59;
  double v60;
  double v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  unint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __n128 v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  double v96;
  char v97;
  double v98;
  unint64_t v99;
  char v100;
  char v101;
  unint64_t v102;
  unint64_t v103;
  char v104;
  char v105;
  int v106;
  char v107;
  uint64_t v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v114;
  _BYTE v115[312];
  _BYTE v116[312];
  _BYTE v117[312];
  _BYTE v118[312];
  _OWORD __src[39];
  _BYTE v120[312];
  _OWORD v121[13];
  uint64_t v122;
  _OWORD v123[13];
  uint64_t v124;
  _BYTE v125[40];
  uint64_t v126;
  char v127;
  uint64_t v128;
  char v129;
  uint64_t v130;
  uint64_t v131;
  _BYTE v132[40];
  uint64_t v133;
  char v134;
  uint64_t v135;
  char v136;
  uint64_t v137;
  uint64_t v138;
  _BYTE v139[32];
  double v140;
  _BYTE v141[16];
  double v142;
  __int128 v143;
  __int128 v144;
  uint64_t v145;
  uint64_t v146;
  int v147;
  char v148;
  uint64_t v149;
  uint64_t v150;
  double v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  __int128 v155;
  _OWORD v156[2];
  void *v157;
  void *v158;
  uint64_t v159;
  uint64_t v160;
  __int128 v161;
  int v162;
  char v163;
  uint64_t v164;
  uint64_t v165;
  double v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  __int128 v170;
  _OWORD v171[2];
  _BYTE v172[48];
  _BYTE v173[48];
  _BYTE v174[328];

  v3 = JSSplitWidgetViewModel.leftViewModelKind.getter();
  v114 = a1;
  if ((~v3 & 0xF000000000000007) != 0)
  {
    v4 = v3;
    v5 = sub_1007CD94C();
    v7 = v6;
    v101 = v6;
    sub_1006554EC(v4, (uint64_t)__src);
    v8 = (void *)*((_QWORD *)&__src[0] + 1);
    v108 = *(_QWORD *)&__src[1];
    v110 = *(void **)&__src[0];
    v9 = *((_QWORD *)&__src[1] + 1);
    v10 = __src[2];
    v104 = BYTE4(__src[3]);
    v106 = __src[3];
    v12 = static Edge.Set.leading.getter(v11);
    v13 = *(_OWORD *)(v114 + 24);
    v170 = *(_OWORD *)(v114 + 8);
    v171[0] = v13;
    *(_OWORD *)((char *)v171 + 9) = *(_OWORD *)(v114 + 33);
    sub_100065228((uint64_t)&v170, (uint64_t)v172, &qword_10119EAD0);
    sub_10006FD70((uint64_t)v172, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10006B404);
    sub_1008239E0((uint64_t)v125);
    sub_10006FD70((uint64_t)&v170, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10006B610);
    sub_100065228((uint64_t)v125, (uint64_t)v141, &qword_10119EAD8);
    v14 = v142;
    if (v141[0] == 2)
      v14 = 0.0;
    v15 = EdgeInsets.init(_:length:)(v12, v14);
    v17 = v16;
    v19 = v18;
    v21 = v20;
    KeyPath = swift_getKeyPath(&unk_100ED07F0);
    v23 = sub_1007CDB3C(v4);
    if ((v23 & 1) != 0)
      v24 = v5;
    else
      v24 = 0;
    v99 = v24;
    v97 = v7 | ~v23;
    v25 = sub_1007CDB3C(v4);
    v26 = v25;
    *(double *)&v27 = INFINITY;
    v157 = v110;
    v158 = v8;
    if ((v25 & 1) == 0)
      *(double *)&v27 = 0.0;
    v96 = *(double *)&v27;
    v159 = v108;
    v160 = v9;
    v161 = v10;
    v162 = v106;
    v163 = v104;
    v164 = KeyPath;
    v165 = 0;
    v166 = v15;
    v167 = v17;
    v168 = v19;
    v169 = v21;
    v28 = static Alignment.center.getter(v25);
    sub_10014C23C(v99, v97 & 1, 0.0, 1, 0.0, 1, 0, 1, (uint64_t)v123, v30, 0.0, 1, v96, (v26 & 1) == 0, v28, v29);
    sub_1002BD10C(v110, v8, v108, v9, v10, *((uint64_t *)&v10 + 1), v106, v104);
    swift_release();
    v31 = sub_1007CDB3C(v4);
    if ((v31 & 1) != 0)
      v32 = 0;
    else
      v32 = v5;
    v33 = v31 | v101;
    v34 = static Alignment.center.getter(v31);
    _FrameLayout.init(width:height:alignment:)(&v126, v32, v33 & 1, 0, 1, v34, v35);
    v36 = v126;
    v37 = v128;
    v38 = v130;
    v111 = v131;
    LOBYTE(v121[0]) = v127;
    v120[0] = v129;
    v39 = swift_getKeyPath(&unk_100ED08E8);
    a1 = v114;
    sub_1007CDC18(v4);
    v41 = v40;
    v43 = v42;
    v45 = v44;
    v47 = v46;
    sub_100231E18(v4);
    __src[10] = v123[10];
    __src[11] = v123[11];
    __src[12] = v123[12];
    __src[6] = v123[6];
    __src[7] = v123[7];
    __src[8] = v123[8];
    __src[9] = v123[9];
    __src[2] = v123[2];
    __src[3] = v123[3];
    __src[4] = v123[4];
    __src[5] = v123[5];
    __src[0] = v123[0];
    __src[1] = v123[1];
    *(_QWORD *)&__src[13] = v124;
    *((_QWORD *)&__src[13] + 1) = v36;
    LOBYTE(__src[14]) = v121[0];
    *((_QWORD *)&__src[14] + 1) = v37;
    LOBYTE(__src[15]) = v120[0];
    *((_QWORD *)&__src[15] + 1) = v38;
    *(_QWORD *)&__src[16] = v111;
    *((_QWORD *)&__src[16] + 1) = v39;
    *(_QWORD *)&__src[17] = v41;
    *((_QWORD *)&__src[17] + 1) = v43;
    *(_QWORD *)&__src[18] = v45;
    *((_QWORD *)&__src[18] + 1) = v47;
    LOWORD(__src[19]) = 256;
    UIScreen.Dimensions.size.getter(__src);
  }
  else
  {
    sub_1007CF3C8((uint64_t)__src);
  }
  sub_100065228((uint64_t)__src, (uint64_t)v174, &qword_1011C98A8);
  v48 = JSSplitWidgetViewModel.rightViewModelKind.getter();
  if ((~v48 & 0xF000000000000007) != 0)
  {
    v49 = v48;
    v50 = a1;
    v51 = sub_1007CE438();
    v53 = v52;
    v105 = v52;
    v54 = sub_1006554EC(v49, (uint64_t)__src);
    v55 = __src[0];
    v56 = __src[1];
    v109 = *((_QWORD *)&__src[2] + 1);
    v112 = *(_QWORD *)&__src[2];
    v57 = __src[3];
    v107 = BYTE4(__src[3]);
    v58 = static Edge.Set.trailing.getter(v54);
    v59 = *(_OWORD *)(v50 + 24);
    v155 = *(_OWORD *)(v50 + 8);
    v156[0] = v59;
    *(_OWORD *)((char *)v156 + 9) = *(_OWORD *)(v50 + 33);
    sub_100065228((uint64_t)&v155, (uint64_t)v173, &qword_10119EAD0);
    sub_10006FD70((uint64_t)v173, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10006B404);
    sub_1008239E0((uint64_t)v132);
    sub_10006FD70((uint64_t)&v155, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10006B610);
    sub_100065228((uint64_t)v132, (uint64_t)v139, &qword_10119EAD8);
    v60 = v140;
    if (v139[0] == 2)
      v60 = 0.0;
    v61 = EdgeInsets.init(_:length:)(v58, v60);
    v63 = v62;
    v65 = v64;
    v67 = v66;
    v68 = v49;
    v69 = swift_getKeyPath(&unk_100ED07F0);
    v103 = v68;
    v70 = sub_1007CDB3C(v68);
    if ((v70 & 1) != 0)
      v71 = v51;
    else
      v71 = 0;
    v102 = v71;
    v100 = v53 | ~v70;
    v72 = sub_1007CDB3C(v68);
    v73 = v72;
    *(double *)&v74 = INFINITY;
    v143 = v55;
    if ((v72 & 1) == 0)
      *(double *)&v74 = 0.0;
    v98 = *(double *)&v74;
    v144 = v56;
    v145 = v112;
    v146 = v109;
    v147 = v57;
    v148 = v107;
    v149 = v69;
    v150 = 0;
    v151 = v61;
    v152 = v63;
    v153 = v65;
    v154 = v67;
    v75 = static Alignment.center.getter(v72);
    sub_10014C23C(v102, v100 & 1, 0.0, 1, 0.0, 1, 0, 1, (uint64_t)v121, v77, 0.0, 1, v98, (v73 & 1) == 0, v75, v76);
    sub_1002BD10C((void *)v55, *((void **)&v55 + 1), v56, *((uint64_t *)&v56 + 1), v112, v109, v57, v107);
    swift_release();
    v78 = sub_1007CDB3C(v103);
    if ((v78 & 1) != 0)
      v51 = 0;
    v79 = v78 | v105;
    v80 = static Alignment.center.getter(v78);
    _FrameLayout.init(width:height:alignment:)(&v133, v51, v79 & 1, 0, 1, v80, v81);
    v82 = v133;
    v83 = v135;
    v84 = v137;
    v85 = v138;
    v120[0] = v134;
    v118[0] = v136;
    v86 = swift_getKeyPath(&unk_100ED08E8);
    sub_1007CDC18(v103);
    v88 = v87;
    v90 = v89;
    v92 = v91;
    v94 = v93;
    sub_100231E18(v103);
    __src[10] = v121[10];
    __src[11] = v121[11];
    __src[12] = v121[12];
    __src[6] = v121[6];
    __src[7] = v121[7];
    __src[8] = v121[8];
    __src[9] = v121[9];
    __src[2] = v121[2];
    __src[3] = v121[3];
    __src[4] = v121[4];
    __src[5] = v121[5];
    __src[0] = v121[0];
    __src[1] = v121[1];
    *(_QWORD *)&__src[13] = v122;
    *((_QWORD *)&__src[13] + 1) = v82;
    LOBYTE(__src[14]) = v120[0];
    *((_QWORD *)&__src[14] + 1) = v83;
    LOBYTE(__src[15]) = v118[0];
    *((_QWORD *)&__src[15] + 1) = v84;
    *(_QWORD *)&__src[16] = v85;
    *((_QWORD *)&__src[16] + 1) = v86;
    *(_QWORD *)&__src[17] = v88;
    *((_QWORD *)&__src[17] + 1) = v90;
    *(_QWORD *)&__src[18] = v92;
    *((_QWORD *)&__src[18] + 1) = v94;
    LOWORD(__src[19]) = 256;
    UIScreen.Dimensions.size.getter(__src);
  }
  else
  {
    sub_1007CF3C8((uint64_t)__src);
  }
  sub_100065228((uint64_t)__src, (uint64_t)v123, &qword_1011C98A8);
  sub_100065228((uint64_t)v174, (uint64_t)v116, &qword_1011C98A8);
  sub_100065228((uint64_t)v123, (uint64_t)v115, &qword_1011C98A8);
  sub_100065228((uint64_t)v116, (uint64_t)v117, &qword_1011C98A8);
  sub_100065228((uint64_t)v115, (uint64_t)v118, &qword_1011C98A8);
  sub_100065228((uint64_t)v117, (uint64_t)__src, &qword_1011C98A8);
  sub_100065228((uint64_t)v118, (uint64_t)&__src[19] + 8, &qword_1011C98A8);
  memcpy(a2, __src, 0x26AuLL);
  sub_100065228((uint64_t)v115, (uint64_t)v120, &qword_1011C98A8);
  sub_1007CF44C((uint64_t)v117, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1007CF3FC);
  sub_1007CF44C((uint64_t)v118, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1007CF3FC);
  sub_1007CF44C((uint64_t)v120, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1007CF4D8);
  sub_100065228((uint64_t)v116, (uint64_t)v121, &qword_1011C98A8);
  return sub_1007CF44C((uint64_t)v121, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1007CF4D8);
}

uint64_t sub_1007CD94C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v16;
  uint64_t v17;
  char v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD v23[3];
  char v24;

  v1 = v0;
  v2 = type metadata accessor for SplitWidgetView.ContentView(0);
  __chkstk_darwin(v2);
  v4 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = JSSplitWidgetViewModel.leftViewModelKind.getter();
  if ((~v5 & 0xF000000000000007) == 0)
    return 0;
  v6 = v5;
  if ((JSSplitWidgetViewModel.displayStyle.getter() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x52746361706D6F63, 0xEC00000074686769, 0x4C746361706D6F63, 0xEB00000000746665, 0);
  swift_bridgeObjectRelease();
  if ((v7 & 1) == 0)
  {
    sub_100231E18(v6);
    return 0;
  }
LABEL_5:
  sub_1007CDC18(v6);
  if (v9)
  {
    v10 = v8;
    swift_bridgeObjectRelease();
    sub_1007CE9C4(v1, (uint64_t)v4);
    sub_1007CEA50((uint64_t)v4);
    sub_100231E18(v6);
  }
  else
  {
    sub_1007CE9C4(v1, (uint64_t)v4);
    __asm { FMOV            V1.2D, #28.0 }
    v23[0] = xmmword_100EA85A0;
    v23[1] = _Q1;
    v23[2] = xmmword_100ED0700;
    v24 = 0;
    v16 = *((_QWORD *)v4 + 7);
    v17 = *((_QWORD *)v4 + 8);
    v18 = v4[72];
    sub_10006B3EC(v16, v17, v18);
    v19 = sub_1008237EC(v16, v17, v18);
    sub_10006B5F8(v16, v17, v18);
    sub_1000ADCB0(0, (uint64_t)v23, v19);
    v21 = v20;
    swift_bridgeObjectRelease();
    sub_100231E18(v6);
    sub_1007CEA50((uint64_t)v4);
    return v21;
  }
  return v10;
}

uint64_t sub_1007CDB3C(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  void *v16;
  void *v17;
  uint64_t v18;

  JSViewModelKind.innerViewModel.getter(a1);
  v3 = v2;
  v4 = type metadata accessor for JSShelf(0);
  v5 = swift_dynamicCastClass(v3, v4);

  if (v5)
    return 1;
  JSViewModelKind.innerViewModel.getter(a1);
  v7 = v6;
  v8 = type metadata accessor for JSBrick(0);
  v9 = swift_dynamicCastClass(v7, v8);

  if (v9)
    return 1;
  JSViewModelKind.innerViewModel.getter(a1);
  v11 = v10;
  v12 = type metadata accessor for JSFlowcase(0);
  v13 = swift_dynamicCastClass(v11, v12);

  if (v13)
    return 1;
  JSViewModelKind.innerViewModel.getter(a1);
  v17 = v16;
  v18 = type metadata accessor for JSGrid(0);
  v14 = swift_dynamicCastClass(v17, v18) != 0;

  return v14;
}

void sub_1007CDC18(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  id *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  char v24;
  id v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  char v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t *v37;
  _QWORD *v38;
  _QWORD *v39;
  __n128 v40;
  uint64_t v41;
  char *v42;
  double v43;
  double v44;
  _BOOL4 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  double v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  char v61;
  double v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  double v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  double v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD v82[4];
  double v83;
  uint64_t v84;
  char v85;
  char v86[24];
  _BYTE v87[64];

  v2 = v1;
  v78 = type metadata accessor for DynamicTypeSize(0);
  v4 = *(_QWORD *)(v78 - 8);
  __chkstk_darwin(v78);
  v80 = (uint64_t)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for GenericMusicItem(0);
  v77 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v76 = (char *)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v8);
  v10 = (char *)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = type metadata accessor for SplitWidgetView.ContentView(0);
  __chkstk_darwin(v79);
  v12 = (char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (id *)((char *)&v76 - v14);
  __chkstk_darwin(v16);
  v18 = (char *)&v76 - v17;
  v19 = JSSplitWidgetViewModel.displayStyle.getter();
  v81 = v4;
  if ((v19 & 1) != 0)
  {
    v20 = _stringCompareWithSmolCheck(_:_:expecting:)(0x52746361706D6F63, 0xEC00000074686769, 0x4C746361706D6F63, 0xEB00000000746665, 0);
    swift_bridgeObjectRelease();
    sub_1007CE9C4(v2, (uint64_t)v18);
    if ((v20 & 1) == 0)
    {
LABEL_5:
      sub_1007CEA50((uint64_t)v18);
      sub_1007CE9C4(v2, (uint64_t)v15);
      goto LABEL_8;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1007CE9C4(v1, (uint64_t)v18);
  }
  v21 = JSSplitWidgetViewModel.leftViewModelKind.getter();
  if ((~v21 & 0xF000000000000007) == 0)
    goto LABEL_5;
  v22 = v21;
  v23 = (id)(a1 & 0xFFFFFFFFFFFFFF9);
  v24 = static JSViewModelKind.__derived_enum_equals(_:_:)(a1, v22);
  sub_100231E18(v22);

  sub_1007CEA50((uint64_t)v18);
  sub_1007CE9C4(v2, (uint64_t)v15);
  if ((v24 & 1) != 0)
  {
    sub_1007CEA50((uint64_t)v15);
    goto LABEL_15;
  }
LABEL_8:
  v25 = *v15;
  v26 = JSSplitWidgetViewModel.displayStyle.getter();

  if ((v26 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    sub_1007CE9C4((uint64_t)v15, (uint64_t)v12);
  }
  else
  {
    v27 = _stringCompareWithSmolCheck(_:_:expecting:)(0x4C746361706D6F63, 0xEB00000000746665, 0x52746361706D6F63, 0xEC00000074686769, 0);
    swift_bridgeObjectRelease();
    sub_1007CE9C4((uint64_t)v15, (uint64_t)v12);
    if ((v27 & 1) == 0)
      goto LABEL_13;
  }
  v28 = JSSplitWidgetViewModel.rightViewModelKind.getter();
  if ((~v28 & 0xF000000000000007) == 0)
  {
LABEL_13:
    sub_1007CEA50((uint64_t)v15);
    sub_1007CEA50((uint64_t)v12);
    return;
  }
  v29 = v28;
  v30 = (id)(a1 & 0xFFFFFFFFFFFFFF9);
  v31 = static JSViewModelKind.__derived_enum_equals(_:_:)(a1, v29);
  sub_100231E18(v29);

  sub_1007CEA50((uint64_t)v15);
  sub_1007CEA50((uint64_t)v12);
  if ((v31 & 1) != 0)
  {
LABEL_15:
    if (((a1 >> 58) & 0x3C | (a1 >> 1) & 3) != 4)
      return;
    v32 = (id)(a1 & 0xFFFFFFFFFFFFFF9);
    v33 = JSGrid.sections.getter();
    v34 = v33;
    if ((unint64_t)v33 >> 62)
    {
      if (v33 >= 0)
        v33 &= 0xFFFFFFFFFFFFFF8uLL;
      if (!_CocoaArrayWrapper.endIndex.getter(v33))
        goto LABEL_40;
    }
    else if (!*(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_40;
    }
    if ((v34 & 0xC000000000000001) != 0)
    {
      v35 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v34);
    }
    else
    {
      if (!*(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_36;
      }
      v35 = (char *)*(id *)(v34 + 32);
    }
    v36 = v35;
    swift_bridgeObjectRelease();
    v37 = (uint64_t *)&v36[OBJC_IVAR____TtC11MusicJSCore13JSGridSection_items];
    swift_beginAccess(&v36[OBJC_IVAR____TtC11MusicJSCore13JSGridSection_items], v86, 0, 0);
    v34 = *v37;
    swift_bridgeObjectRetain();

    if (!((unint64_t)v34 >> 62))
    {
      if (*(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_23:
        if ((v34 & 0xC000000000000001) != 0)
        {
          v38 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v34);
        }
        else
        {
          if (!*(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return;
          }
          v38 = *(id *)(v34 + 32);
        }
        v39 = v38;
        v40 = swift_bridgeObjectRelease();
        (*(void (**)(__n128))((swift_isaMask & *v39) + 0x250))(v40);

        v41 = v77;
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v77 + 48))(v10, 1, v6))
        {
          v42 = v76;
          (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v76, v10, v6);
          sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_1011A20D0);
          GenericMusicItem.aspectRatio.getter();
          v44 = v43;
          (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v6);
          v45 = v44 > 1.0;
          goto LABEL_42;
        }
        sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_1011A20D0);
LABEL_41:
        v45 = 0;
LABEL_42:
        v48 = *(_QWORD *)(v2 + 56);
        v49 = *(_QWORD *)(v2 + 64);
        v50 = *(_BYTE *)(v2 + 72);
        sub_10006B3EC(v48, v49, v50);
        v51 = sub_1008237EC(v48, v49, v50);
        sub_10006B5F8(v48, v49, v50);
        if (v51 <= 1439.0)
          v52 = 1;
        else
          v52 = 2;
        if (v51 > 1129.0)
          v53 = v52;
        else
          v53 = 0;
        if (v45)
        {
          v54 = v81;
          if (qword_10119C818 != -1)
            swift_once(&qword_10119C818, sub_1007CE7A8);
          v55 = off_1011C97C0;
          if (!*((_QWORD *)off_1011C97C0 + 2))
            goto LABEL_58;
        }
        else
        {
          v54 = v81;
          if (qword_10119C810 != -1)
            swift_once(&qword_10119C810, sub_1007CE790);
          v55 = off_1011C97B8;
          if (!*((_QWORD *)off_1011C97B8 + 2))
            goto LABEL_58;
        }
        v56 = sub_10079C718(v53);
        if ((v57 & 1) != 0)
        {
          v58 = v55[7] + 48 * v56;
          v59 = (uint64_t *)(v58 + 40);
          v60 = v78;
          v61 = 0;
          v62 = *(double *)(v58 + 32);
          v63 = *(_QWORD *)(v58 + 24);
          v64 = *(_QWORD *)(v58 + 16);
          v65 = *(_QWORD *)v58;
          v66 = *(unsigned __int8 *)(v58 + 8);
          v67 = *v59;
          goto LABEL_59;
        }
LABEL_58:
        v65 = 0;
        v66 = 0;
        v64 = 0;
        v63 = 0;
        v62 = 0.0;
        v67 = 0;
        v61 = 1;
        v60 = v78;
LABEL_59:
        v82[0] = v65;
        v82[1] = v66;
        v82[2] = v64;
        v82[3] = v63;
        v83 = v62;
        v84 = v67;
        v85 = v61;
        v68 = v80;
        v69 = sub_1008237B8(v80);
        v70 = DynamicTypeSize.isAccessibilitySize.getter(v69);
        (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v68, v60);
        if ((v70 & 1) != 0 && (v85 & 1) == 0)
        {
          v71 = -1.0;
          if (v83 >= 1.0)
            v71 = v83 + -2.0;
          v83 = v71;
        }
        sub_100065228((uint64_t)v82, (uint64_t)v87, &qword_10119FA68);
        v72 = *(_QWORD *)(v2 + 56);
        v73 = *(_QWORD *)(v2 + 64);
        v74 = *(_BYTE *)(v2 + 72);
        sub_10006B3EC(v72, v73, v74);
        v75 = sub_1008237EC(v72, v73, v74);
        sub_10006B5F8(v72, v73, v74);
        sub_1000ADCB0(0, (uint64_t)v87, v75);

        return;
      }
LABEL_40:
      swift_bridgeObjectRelease();
      goto LABEL_41;
    }
LABEL_36:
    if (v34 < 0)
      v46 = v34;
    else
      v46 = v34 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v47 = _CocoaArrayWrapper.endIndex.getter(v46);
    swift_bridgeObjectRelease();
    if (v47)
      goto LABEL_23;
    goto LABEL_40;
  }
}

uint64_t sub_1007CE438()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v16;
  uint64_t v17;
  char v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD v23[3];
  char v24;

  v1 = v0;
  v2 = type metadata accessor for SplitWidgetView.ContentView(0);
  __chkstk_darwin(v2);
  v4 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = JSSplitWidgetViewModel.rightViewModelKind.getter();
  if ((~v5 & 0xF000000000000007) == 0)
    return 0;
  v6 = v5;
  if ((JSSplitWidgetViewModel.displayStyle.getter() & 1) != 0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x4C746361706D6F63, 0xEB00000000746665, 0x52746361706D6F63, 0xEC00000074686769, 0);
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0)
    {
      sub_100231E18(v6);
      return 0;
    }
  }
  sub_1007CDC18(v6);
  if (v10)
  {
    v8 = v9;
    swift_bridgeObjectRelease();
    sub_1007CE9C4(v1, (uint64_t)v4);
    sub_1007CEA50((uint64_t)v4);
    sub_100231E18(v6);
  }
  else
  {
    sub_1007CE9C4(v1, (uint64_t)v4);
    __asm { FMOV            V1.2D, #28.0 }
    v23[0] = xmmword_100EA85A0;
    v23[1] = _Q1;
    v23[2] = xmmword_100ED0700;
    v24 = 0;
    v16 = *((_QWORD *)v4 + 7);
    v17 = *((_QWORD *)v4 + 8);
    v18 = v4[72];
    sub_10006B3EC(v16, v17, v18);
    v19 = sub_1008237EC(v16, v17, v18);
    sub_10006B5F8(v16, v17, v18);
    sub_1000ADCB0(0, (uint64_t)v23, v19);
    v21 = v20;
    swift_bridgeObjectRelease();
    sub_100231E18(v6);
    sub_1007CEA50((uint64_t)v4);
    return v21;
  }
  return v8;
}

uint64_t sub_1007CE624()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;

  v0 = JSSplitWidgetViewModel.leftViewModelKind.getter();
  if ((~v0 & 0xF000000000000007) == 0
    || (v1 = v0,
        JSViewModelKind.innerViewModel.getter(v0),
        v3 = v2,
        sub_100231E18(v1),
        v16 = v3,
        v4 = type metadata accessor for JSViewModel(),
        v5 = sub_100007E8C(&qword_1011C98A0),
        (swift_dynamicCast(&v17, &v16, v4, v5, 6) & 1) == 0))
  {
    v19 = 0;
    v17 = 0u;
    v18 = 0u;
LABEL_6:
    sub_10004FF60((uint64_t)&v17, &qword_1011C9898);
    v6 = JSSplitWidgetViewModel.rightViewModelKind.getter();
    if ((~v6 & 0xF000000000000007) != 0
      && (v7 = v6,
          JSViewModelKind.innerViewModel.getter(v6),
          v9 = v8,
          sub_100231E18(v7),
          v16 = v9,
          v10 = type metadata accessor for JSViewModel(),
          v11 = sub_100007E8C(&qword_1011C98A0),
          (swift_dynamicCast(&v17, &v16, v10, v11, 6) & 1) != 0))
    {
      if (*((_QWORD *)&v18 + 1))
        goto LABEL_9;
    }
    else
    {
      v19 = 0;
      v17 = 0u;
      v18 = 0u;
    }
    v14 = sub_10004FF60((uint64_t)&v17, &qword_1011C9898);
    return static Color.clear.getter(v14);
  }
  if (!*((_QWORD *)&v18 + 1))
    goto LABEL_6;
LABEL_9:
  v12 = sub_10004FF60((uint64_t)&v17, &qword_1011C9898);
  static Color.black.getter(v12);
  v13 = Color.opacity(_:)(0.2);
  swift_release();
  return v13;
}

void sub_1007CE790(uint64_t a1)
{
  sub_1007CE7C0(7.0, 6.0, a1, 2, (unint64_t *)&off_1011C97B8);
}

void sub_1007CE7A8(uint64_t a1)
{
  sub_1007CE7C0(6.0, 7.0, a1, 3, (unint64_t *)&off_1011C97C0);
}

void sub_1007CE7C0(double a1, double a2, uint64_t a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v9;
  uint64_t inited;
  __int128 v11;
  unint64_t v12;
  _BYTE v13[200];

  v9 = sub_100007E8C(&qword_1011A7928);
  inited = swift_initStackObject(v9, v13);
  *(_OWORD *)(inited + 16) = xmmword_100EA7AC0;
  *(_BYTE *)(inited + 32) = 0;
  if (qword_10119C0D8 != -1)
    swift_once(&qword_10119C0D8, sub_1004F3C74);
  v11 = xmmword_10124D1B0;
  *(_QWORD *)(inited + 40) = 3;
  *(_BYTE *)(inited + 48) = 0;
  *(_OWORD *)(inited + 56) = v11;
  *(double *)(inited + 72) = a1;
  *(_QWORD *)(inited + 80) = 1;
  *(_BYTE *)(inited + 88) = 1;
  *(_QWORD *)(inited + 96) = a4;
  *(_BYTE *)(inited + 104) = 0;
  *(_OWORD *)(inited + 112) = v11;
  *(double *)(inited + 128) = a2;
  *(_QWORD *)(inited + 136) = 1;
  *(_BYTE *)(inited + 144) = 2;
  *(_QWORD *)(inited + 152) = 2;
  *(_BYTE *)(inited + 160) = 0;
  *(_OWORD *)(inited + 168) = v11;
  *(double *)(inited + 184) = a1;
  *(_QWORD *)(inited + 192) = 1;
  v12 = sub_100046BF4(inited);
  swift_setDeallocating(inited);
  *a5 = v12;
}

void *sub_1007CE8C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void *result;
  _BYTE v8[624];
  _BYTE __src[640];

  v4 = static VerticalAlignment.top.getter(a1);
  sub_1007CD10C(v2, v8);
  __src[632] = 0;
  memcpy(&__src[7], v8, 0x26AuLL);
  v5 = sub_1007CE624();
  v6 = static Edge.Set.all.getter(v5);
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = 0x4036000000000000;
  *(_BYTE *)(a2 + 16) = 0;
  result = memcpy((void *)(a2 + 17), __src, 0x271uLL);
  *(_QWORD *)(a2 + 648) = v5;
  *(_BYTE *)(a2 + 656) = v6;
  return result;
}

uint64_t sub_1007CE960@<X0>(uint64_t a1@<X8>)
{
  void **v1;

  return sub_1007CCD60(*v1, a1);
}

uint64_t type metadata accessor for SplitWidgetView.ContentView(uint64_t a1)
{
  uint64_t result;

  result = qword_1011C9848;
  if (!qword_1011C9848)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SplitWidgetView.ContentView);
  return result;
}

uint64_t sub_1007CE9C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SplitWidgetView.ContentView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1007CEA08()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C97E8;
  if (!qword_1011C97E8)
  {
    v1 = type metadata accessor for SplitWidgetView.ContentView(255);
    result = swift_getWitnessTable(&unk_100ED0898, v1);
    atomic_store(result, (unint64_t *)&qword_1011C97E8);
  }
  return result;
}

uint64_t sub_1007CEA50(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SplitWidgetView.ContentView(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1007CEA8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1007CE9C4(*(_QWORD *)(v1 + 16), a1);
}

char *sub_1007CEA98(char *a1, char **a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    v8 = (uint64_t)a2[1];
    v9 = (uint64_t)a2[2];
    v10 = (uint64_t)a2[3];
    v11 = (uint64_t)a2[4];
    v12 = (uint64_t)a2[5];
    v13 = *((_BYTE *)a2 + 48);
    v14 = v5;
    sub_10006B404(v8, v9, v10, v11, v12, v13);
    *((_QWORD *)a1 + 1) = v8;
    *((_QWORD *)a1 + 2) = v9;
    *((_QWORD *)a1 + 3) = v10;
    *((_QWORD *)a1 + 4) = v11;
    *((_QWORD *)a1 + 5) = v12;
    a1[48] = v13;
    v15 = (uint64_t)a2[7];
    v16 = (uint64_t)a2[8];
    LOBYTE(v10) = *((_BYTE *)a2 + 72);
    sub_10006B3EC(v15, v16, v10);
    *((_QWORD *)a1 + 7) = v15;
    *((_QWORD *)a1 + 8) = v16;
    a1[72] = v10;
    v17 = (uint64_t)a2[10];
    LOBYTE(v16) = *((_BYTE *)a2 + 88);
    sub_10006B3F8(v17, v16);
    *((_QWORD *)a1 + 10) = v17;
    a1[88] = v16;
    v18 = *(int *)(a3 + 32);
    v19 = &a1[v18];
    v20 = (char **)((char *)a2 + v18);
    v21 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v20, v21) == 1)
    {
      v22 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, _QWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v19, v20, v22);
      v23 = v19;
      v24 = v21;
      v25 = 1;
    }
    else
    {
      *(_QWORD *)v19 = *v20;
      swift_retain();
      v23 = v19;
      v24 = v21;
      v25 = 0;
    }
    swift_storeEnumTagMultiPayload(v23, v24, v25);
  }
  return a1;
}

double sub_1007CEC04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  sub_10006B610(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
  sub_10006B5F8(*(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_BYTE *)(a1 + 72));
  sub_10006B604(*(_QWORD *)(a1 + 80), *(_BYTE *)(a1 + 88));
  v4 = a1 + *(int *)(a2 + 32);
  v5 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_1007CECA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = *(void **)a2;
  v7 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(a2 + 32);
  v11 = *(_QWORD *)(a2 + 40);
  v12 = *(_BYTE *)(a2 + 48);
  v13 = v6;
  sub_10006B404(v7, v8, v9, v10, v11, v12);
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v9;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v11;
  *(_BYTE *)(a1 + 48) = v12;
  v14 = *(_QWORD *)(a2 + 56);
  v15 = *(_QWORD *)(a2 + 64);
  LOBYTE(v9) = *(_BYTE *)(a2 + 72);
  sub_10006B3EC(v14, v15, v9);
  *(_QWORD *)(a1 + 56) = v14;
  *(_QWORD *)(a1 + 64) = v15;
  *(_BYTE *)(a1 + 72) = v9;
  v16 = *(_QWORD *)(a2 + 80);
  LOBYTE(v15) = *(_BYTE *)(a2 + 88);
  sub_10006B3F8(v16, v15);
  *(_QWORD *)(a1 + 80) = v16;
  *(_BYTE *)(a1 + 88) = v15;
  v17 = *(int *)(a3 + 32);
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  v20 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v19, v20) == 1)
  {
    v21 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v18, v19, v21);
    v22 = 1;
  }
  else
  {
    *v18 = *v19;
    swift_retain();
    v22 = 0;
  }
  swift_storeEnumTagMultiPayload(v18, v20, v22);
  return a1;
}

uint64_t sub_1007CEDE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  v9 = *(_QWORD *)(a2 + 8);
  v10 = *(_QWORD *)(a2 + 16);
  v11 = *(_QWORD *)(a2 + 24);
  v12 = *(_QWORD *)(a2 + 32);
  v13 = *(_QWORD *)(a2 + 40);
  v14 = *(_BYTE *)(a2 + 48);
  sub_10006B404(v9, v10, v11, v12, v13, v14);
  v15 = *(_QWORD *)(a1 + 8);
  v16 = *(_QWORD *)(a1 + 16);
  v17 = *(_QWORD *)(a1 + 24);
  v18 = *(_QWORD *)(a1 + 32);
  v19 = *(_QWORD *)(a1 + 40);
  v20 = *(_BYTE *)(a1 + 48);
  *(_QWORD *)(a1 + 8) = v9;
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v11;
  *(_QWORD *)(a1 + 32) = v12;
  *(_QWORD *)(a1 + 40) = v13;
  *(_BYTE *)(a1 + 48) = v14;
  sub_10006B610(v15, v16, v17, v18, v19, v20);
  v21 = *(_QWORD *)(a2 + 56);
  v22 = *(_QWORD *)(a2 + 64);
  LOBYTE(v11) = *(_BYTE *)(a2 + 72);
  sub_10006B3EC(v21, v22, v11);
  v23 = *(_QWORD *)(a1 + 56);
  v24 = *(_QWORD *)(a1 + 64);
  v25 = *(_BYTE *)(a1 + 72);
  *(_QWORD *)(a1 + 56) = v21;
  *(_QWORD *)(a1 + 64) = v22;
  *(_BYTE *)(a1 + 72) = v11;
  sub_10006B5F8(v23, v24, v25);
  v26 = *(_QWORD *)(a2 + 80);
  LOBYTE(v22) = *(_BYTE *)(a2 + 88);
  sub_10006B3F8(v26, v22);
  v27 = *(_QWORD *)(a1 + 80);
  v28 = *(_BYTE *)(a1 + 88);
  *(_QWORD *)(a1 + 80) = v26;
  *(_BYTE *)(a1 + 88) = v22;
  sub_10006B604(v27, v28);
  if (a1 != a2)
  {
    v29 = *(int *)(a3 + 32);
    v30 = (_QWORD *)(a1 + v29);
    v31 = (_QWORD *)(a2 + v29);
    sub_10004FF60(a1 + v29, (uint64_t *)&unk_1011ACE40);
    v32 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v31, v32) == 1)
    {
      v33 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v30, v31, v33);
      v34 = 1;
    }
    else
    {
      *v30 = *v31;
      swift_retain();
      v34 = 0;
    }
    swift_storeEnumTagMultiPayload(v30, v32, v34);
  }
  return a1;
}

uint64_t sub_1007CEF70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  const void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 33) = *(_OWORD *)(a2 + 33);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v4 = *(int *)(a3 + 32);
  v5 = (const void *)(a2 + v4);
  v6 = (void *)(a1 + v4);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v7 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v5, v7) == 1)
  {
    v8 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v5, v8);
    swift_storeEnumTagMultiPayload(v6, v7, 1);
  }
  else
  {
    memcpy(v6, v5, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1007CF050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  void *v23;
  const void *v24;
  uint64_t v25;
  uint64_t v26;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_BYTE *)(a2 + 48);
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(_QWORD *)(a1 + 32);
  v13 = *(_QWORD *)(a1 + 40);
  v14 = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v7;
  *(_BYTE *)(a1 + 48) = v8;
  sub_10006B610(v9, v10, v11, v12, v13, v14);
  v15 = *(_BYTE *)(a2 + 72);
  v16 = *(_QWORD *)(a1 + 56);
  v17 = *(_QWORD *)(a1 + 64);
  v18 = *(_BYTE *)(a1 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 72) = v15;
  sub_10006B5F8(v16, v17, v18);
  v19 = *(_BYTE *)(a2 + 88);
  v20 = *(_QWORD *)(a1 + 80);
  v21 = *(_BYTE *)(a1 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = v19;
  sub_10006B604(v20, v21);
  if (a1 != a2)
  {
    v22 = *(int *)(a3 + 32);
    v23 = (void *)(a1 + v22);
    v24 = (const void *)(a2 + v22);
    sub_10004FF60(a1 + v22, (uint64_t *)&unk_1011ACE40);
    v25 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v24, v25) == 1)
    {
      v26 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v23, v24, v26);
      swift_storeEnumTagMultiPayload(v23, v25, 1);
    }
    else
    {
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1007CF18C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1007CF198);
}

uint64_t sub_1007CF198(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011C6890);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 32)], a2, v8);
  }
}

uint64_t sub_1007CF218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1007CF224);
}

char *sub_1007CF224(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_100007E8C(&qword_1011C6890);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 32)], a2, a2, v7);
  }
  return result;
}

void sub_1007CF29C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = ")";
  v4[2] = &unk_100ED0868;
  v4[3] = &unk_100ED0880;
  sub_1000559DC(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
  }
}

unint64_t sub_1007CF334()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C9890;
  if (!qword_1011C9890)
  {
    v1 = sub_100044B54(&qword_1011C97D8);
    sub_100049F28(&qword_1011C97E0, &qword_1011C97D0, (uint64_t)&protocol conformance descriptor for ScrollView<A>);
    sub_1007CEA08();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C9890);
  }
  return result;
}

uint64_t sub_1007CF3B8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAD5E0, 1);
}

double sub_1007CF3C8(uint64_t a1)
{
  double result;

  *(_WORD *)(a1 + 304) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

double sub_1007CF3FC(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  double result;

  if (a8)
  {
    sub_100154744(a1, a2, a3, a4, a5, a6, a7, BYTE4(a7) & 1);
    swift_bridgeObjectRetain();
    swift_retain();
    *(_QWORD *)&result = swift_retain().n128_u64[0];
  }
  return result;
}

uint64_t sub_1007CF44C(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int16 v8;

  v8 = *(_WORD *)(a1 + 304);
  v6 = *(_OWORD *)(a1 + 256);
  v7 = *(_OWORD *)(a1 + 272);
  v4 = *(_OWORD *)(a1 + 224);
  v5 = *(_OWORD *)(a1 + 240);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    v4,
    *((_QWORD *)&v4 + 1),
    v5,
    *((_QWORD *)&v5 + 1),
    v6,
    *((_QWORD *)&v6 + 1),
    v7,
    *((_QWORD *)&v7 + 1),
    *(_QWORD *)(a1 + 288),
    *(_QWORD *)(a1 + 296),
    v8);
  return a1;
}

double sub_1007CF4D8(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  double result;

  if (a8)
  {
    sub_1002BD10C(a1, a2, a3, a4, a5, a6, a7, BYTE4(a7) & 1);
    swift_release();
    swift_release();
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  return result;
}

unint64_t sub_1007CF534()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011C98B0;
  if (!qword_1011C98B0)
  {
    v1 = sub_100044B54(&qword_1011C98B8);
    sub_100049F28(&qword_1011C98C0, &qword_1011C98C8, (uint64_t)&protocol conformance descriptor for HStack<A>);
    sub_100049F28(&qword_1011A49A8, &qword_1011A49B0, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011C98B0);
  }
  return result;
}

void sub_1007CF5D0(uint64_t *a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;

  v6 = sub_100007E8C(a1);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v3;
  v11 = v3[1];
  v13 = *(_QWORD *)(*v3 + 16);
  if (v11 == v13)
  {
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56))(a3, 1, 1, v6, v8);
    return;
  }
  if (v11 >= v13)
  {
    __break(1u);
  }
  else
  {
    v14 = sub_100007E8C(a2);
    v15 = *(_QWORD *)(v14 - 8);
    v16 = v12
        + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))
        + *(_QWORD *)(v15 + 72) * v11;
    v3[1] = v11 + 1;
    v17 = &v10[*(int *)(v6 + 48)];
    v18 = v3[2];
    (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(v17, v16, v14);
    if (!__OFADD__(v18, 1))
    {
      v3[2] = v18 + 1;
      v19 = (char *)a3 + *(int *)(v6 + 48);
      *a3 = v18;
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v19, v17, v14);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a3, 0, 1, v6);
      return;
    }
  }
  __break(1u);
}

uint64_t sub_1007CF724@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  double (*v36)(_QWORD, _QWORD, _QWORD);
  char *v37;
  uint64_t v38;
  __n128 v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(_QWORD *, _QWORD);
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  void (*v52)(char *, char *, uint64_t);
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t *v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  __n128 v75;
  char *v76;
  _QWORD *v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  double (*v83)(_QWORD, _QWORD, _QWORD);
  _QWORD *v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *i;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  _QWORD v110[4];
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;

  v101 = a1;
  v89 = a2;
  v2 = sub_100007E8C(&qword_1011C9A00);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v95 = (char *)&v82 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Playlist.Folder.Item(0);
  v105 = *(_QWORD *)(v5 - 8);
  v106 = v5;
  __chkstk_darwin(v5);
  v109 = (char *)&v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v94 = (char *)&v82 - v8;
  __chkstk_darwin(v9);
  v93 = (char *)&v82 - v10;
  v11 = sub_100007E8C(&qword_1011C9A08);
  __chkstk_darwin(v11);
  v13 = (uint64_t *)((char *)&v82 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14);
  v103 = (uint64_t *)((char *)&v82 - v15);
  v107 = sub_100007E8C((uint64_t *)&unk_1011AD720);
  v97 = *(_QWORD *)(v107 - 8);
  __chkstk_darwin(v107);
  v96 = (char *)&v82 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C(&qword_1011B5698);
  __chkstk_darwin(v17);
  v88 = (char *)&v82 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = sub_100007E8C((uint64_t *)&unk_1011C9A10);
  __chkstk_darwin(v87);
  v20 = (char *)&v82 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = sub_100007E8C((uint64_t *)&unk_1011B56A0);
  v21 = *(_QWORD *)(v90 - 8);
  __chkstk_darwin(v90);
  v104 = (char *)&v82 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100007E8C((uint64_t *)&unk_1011C9A20);
  __chkstk_darwin(v23);
  v25 = (uint64_t *)((char *)&v82 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v26);
  v28 = (uint64_t *)((char *)&v82 - v27);
  v29 = sub_100007E8C(&qword_1011A3C60);
  v30 = MusicLibrarySectionedResponse.sections.getter(v29);
  v112 = 0;
  v113 = 0;
  v111 = v30;
  sub_1007CF5D0((uint64_t *)&unk_1011C9A30, (uint64_t *)&unk_1011B56A0, v25);
  v86 = v25;
  sub_100065228((uint64_t)v25, (uint64_t)v28, (uint64_t *)&unk_1011C9A20);
  v31 = v21;
  v32 = v107;
  v33 = sub_100007E8C((uint64_t *)&unk_1011C9A30);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v28, 1, v33) != 1)
  {
    v36 = *(double (**)(_QWORD, _QWORD, _QWORD))(v31 + 32);
    v108 = v20;
    v102 = v31;
    v84 = v28;
    v83 = v36;
    v91 = v3;
    while (2)
    {
      v85 = *v28;
      v37 = (char *)v28 + *(int *)(v33 + 48);
      v38 = v90;
      v39.n128_f64[0] = v36(v104, v37, v90);
      v40 = v88;
      MusicLibrarySection.items.getter(v38, v39);
      (*(void (**)(char *, char *, uint64_t))(v97 + 32))(v96, v40, v32);
      v41 = sub_100049F28(&qword_1011B56B0, (uint64_t *)&unk_1011AD720, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
      dispatch thunk of Sequence.makeIterator()(v32, v41);
      v42 = *(int *)(v87 + 36);
      *(_QWORD *)&v20[v42] = 0;
      v43 = &v20[*(int *)(sub_100007E8C((uint64_t *)&unk_1011C9A40) + 36)];
      v44 = sub_100049F28((unint64_t *)&qword_1011AD880, (uint64_t *)&unk_1011AD720, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
      v92 = v42;
      v98 = v44;
      for (i = v43; ; v43 = i)
      {
        v45 = *(_QWORD *)v43;
        dispatch thunk of Collection.endIndex.getter(v110, v32, v44);
        if (v45 == v110[0])
        {
          (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v13, 1, 1, v2);
        }
        else
        {
          v46 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v110, v43, v32, v44);
          v48 = v105;
          v47 = v106;
          v49 = v94;
          (*(void (**)(char *))(v105 + 16))(v94);
          v46(v110, 0);
          v51 = v96;
          v50 = v97;
          (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v96, v108, v32);
          dispatch thunk of Collection.formIndex(after:)(v43, v32, v44);
          (*(void (**)(char *, uint64_t))(v50 + 8))(v51, v32);
          v52 = *(void (**)(char *, char *, uint64_t))(v48 + 32);
          v53 = v93;
          v54 = v49;
          v20 = v108;
          v52(v93, v54, v47);
          v55 = &v95[*(int *)(v2 + 48)];
          v56 = v92;
          v57 = *(_QWORD *)&v20[v92];
          result = ((uint64_t (*)(char *, char *, uint64_t))v52)(v55, v53, v47);
          if (__OFADD__(v57, 1))
          {
            __break(1u);
            return result;
          }
          *(_QWORD *)&v20[v56] = v57 + 1;
          v58 = (char *)v13 + *(int *)(v2 + 48);
          *v13 = v57;
          v52(v58, v55, v47);
          v3 = v91;
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v13, 0, 1, v2);
          v32 = v107;
        }
        v60 = v102;
        v59 = v103;
        sub_100065228((uint64_t)v13, (uint64_t)v103, &qword_1011C9A08);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v3 + 48))(v59, 1, v2) == 1)
          break;
        v61 = v13;
        v62 = v3;
        v100 = *v59;
        v63 = v2;
        v64 = (char *)v59 + *(int *)(v2 + 48);
        v65 = v106;
        v66 = v105;
        (*(void (**)(char *, char *, uint64_t))(v105 + 32))(v109, v64, v106);
        v67 = sub_100048748((unint64_t *)&unk_1011C9A50, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Folder.Item, (uint64_t)&protocol conformance descriptor for Playlist.Folder.Item);
        v68 = dispatch thunk of MusicItem.id.getter(v65, v67);
        v70 = v69;
        v72 = dispatch thunk of MusicItem.id.getter(v65, v67);
        v73 = v71;
        if (v68 == v72 && v70 == v71)
        {
          swift_bridgeObjectRelease_n(v70, 2);
          v20 = v108;
          v76 = v104;
LABEL_17:
          swift_bridgeObjectRelease(v111);
          v80 = v89;
          IndexPath.init(item:section:)(v100, v85);
          (*(void (**)(char *, uint64_t))(v66 + 8))(v109, v65);
          sub_10004FF60((uint64_t)v20, (uint64_t *)&unk_1011C9A10);
          (*(void (**)(char *, uint64_t))(v102 + 8))(v76, v90);
          v81 = type metadata accessor for IndexPath(0);
          return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 56))(v80, 0, 1, v81);
        }
        v74 = _stringCompareWithSmolCheck(_:_:expecting:)(v68, v70, v72, v71, 0);
        swift_bridgeObjectRelease(v70);
        v75 = swift_bridgeObjectRelease(v73);
        v20 = v108;
        v76 = v104;
        if ((v74 & 1) != 0)
          goto LABEL_17;
        (*(void (**)(char *, uint64_t, __n128))(v66 + 8))(v109, v65, v75);
        v2 = v63;
        v3 = v62;
        v13 = v61;
        v32 = v107;
        v44 = v98;
      }
      sub_10004FF60((uint64_t)v20, (uint64_t *)&unk_1011C9A10);
      (*(void (**)(char *, uint64_t))(v60 + 8))(v104, v90);
      v77 = v86;
      sub_1007CF5D0((uint64_t *)&unk_1011C9A30, (uint64_t *)&unk_1011B56A0, v86);
      v78 = (uint64_t)v77;
      v28 = v84;
      sub_100065228(v78, (uint64_t)v84, (uint64_t *)&unk_1011C9A20);
      v33 = sub_100007E8C((uint64_t *)&unk_1011C9A30);
      v79 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v28, 1, v33);
      v36 = v83;
      if (v79 != 1)
        continue;
      break;
    }
  }
  swift_bridgeObjectRelease(v111);
  v34 = type metadata accessor for IndexPath(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v89, 1, 1, v34);
}

uint64_t sub_1007CFF68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  double (*v34)(_QWORD, _QWORD, _QWORD);
  uint64_t v35;
  __n128 v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(_QWORD *, _QWORD);
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, char *, uint64_t);
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  __n128 v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  double (*v77)(_QWORD, _QWORD, _QWORD);
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *i;
  uint64_t v94;
  _QWORD *v95;
  char *v96;
  char *v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD v103[7];

  v94 = a1;
  v84 = a2;
  v102 = sub_100007E8C(&qword_1011C9998);
  v100 = *(_QWORD *)(v102 - 8);
  __chkstk_darwin(v102);
  v88 = (char *)&v77 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = type metadata accessor for Artist(0);
  v3 = *(_QWORD *)(v101 - 8);
  __chkstk_darwin(v101);
  v99 = (char *)&v77 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v87 = (char *)&v77 - v6;
  __chkstk_darwin(v7);
  v86 = (char *)&v77 - v8;
  v9 = sub_100007E8C(&qword_1011C99A0);
  __chkstk_darwin(v9);
  v95 = (double (**)(_QWORD, _QWORD, _QWORD))((char *)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  v96 = (char *)&v77 - v12;
  v13 = sub_100007E8C((uint64_t *)&unk_1011B6950);
  v90 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v89 = (char *)&v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(&qword_1011C99A8);
  __chkstk_darwin(v15);
  v83 = (char *)&v77 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = sub_100007E8C(&qword_1011C99B0);
  __chkstk_darwin(v82);
  v18 = (char *)&v77 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100007E8C((uint64_t *)&unk_1011A3B50);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v77 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100007E8C(&qword_1011C99B8);
  __chkstk_darwin(v23);
  v25 = (double (**)(_QWORD, _QWORD, _QWORD))((char *)&v77 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v26);
  v28 = (double (**)(_QWORD, _QWORD, _QWORD))((char *)&v77 - v27);
  v29 = sub_100007E8C((uint64_t *)&unk_1011C9970);
  v30 = MusicLibrarySectionedResponse.sections.getter(v29);
  v103[5] = 0;
  v103[6] = 0;
  v103[4] = v30;
  sub_1007CF5D0(&qword_1011C99C0, (uint64_t *)&unk_1011A3B50, v25);
  v81 = v25;
  sub_100065228((uint64_t)v25, (uint64_t)v28, &qword_1011C99B8);
  v31 = sub_100007E8C(&qword_1011C99C0);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 48))(v28, 1, v31) != 1)
  {
    v34 = *(double (**)(_QWORD, _QWORD, _QWORD))(v20 + 32);
    v97 = v22;
    v98 = v20;
    v80 = v19;
    v78 = v28;
    v77 = v34;
    v91 = v13;
    while (2)
    {
      v35 = v20;
      v79 = *v28;
      v36.n128_f64[0] = v34(v22, (char *)v28 + *(int *)(v31 + 48), v19);
      v37 = v83;
      MusicLibrarySection.items.getter(v19, v36);
      (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v89, v37, v13);
      v38 = sub_100049F28(&qword_1011C99C8, (uint64_t *)&unk_1011B6950, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
      dispatch thunk of Sequence.makeIterator()(v13, v38);
      v85 = *(int *)(v82 + 36);
      *(_QWORD *)&v18[v85] = 0;
      v39 = &v18[*(int *)(sub_100007E8C(&qword_1011C99D0) + 36)];
      v40 = sub_100049F28((unint64_t *)&unk_1011ACAB0, (uint64_t *)&unk_1011B6950, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
      v92 = v40;
      for (i = v39; ; v39 = i)
      {
        v41 = *(_QWORD *)v39;
        dispatch thunk of Collection.endIndex.getter(v103, v13, v40);
        if (v41 == v103[0])
        {
          v42 = (uint64_t)v95;
          (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v100 + 56))(v95, 1, 1, v102);
        }
        else
        {
          v43 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v103, v39, v13, v40);
          v44 = v87;
          v45 = v39;
          v46 = v101;
          (*(void (**)(char *))(v3 + 16))(v87);
          v43(v103, 0);
          v48 = v89;
          v47 = v90;
          (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v89, v18, v13);
          dispatch thunk of Collection.formIndex(after:)(v45, v13, v40);
          v49 = v13;
          (*(void (**)(char *, uint64_t))(v47 + 8))(v48, v13);
          v50 = v3;
          v51 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
          v52 = v18;
          v53 = v86;
          v51(v86, v44, v46);
          v54 = v102;
          v55 = &v88[*(int *)(v102 + 48)];
          v56 = v85;
          v57 = *(_QWORD *)&v52[v85];
          result = ((uint64_t (*)(char *, char *, uint64_t))v51)(v55, v53, v46);
          if (__OFADD__(v57, 1))
          {
            __break(1u);
            return result;
          }
          *(_QWORD *)&v52[v56] = v57 + 1;
          v58 = v95;
          v59 = (char *)v95 + *(int *)(v54 + 48);
          *v95 = v57;
          v51(v59, v55, v46);
          v42 = (uint64_t)v58;
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v100 + 56))(v58, 0, 1, v54);
          v18 = v52;
          v22 = v97;
          v35 = v98;
          v3 = v50;
          v13 = v49;
        }
        v60 = v96;
        sub_100065228(v42, (uint64_t)v96, &qword_1011C99A0);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v100 + 48))(v60, 1, v102) == 1)
          break;
        v61 = *(_QWORD *)v60;
        v62 = v101;
        v63 = v3;
        (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v99, &v60[*(int *)(v102 + 48)], v101);
        v64 = dispatch thunk of MusicItem.id.getter(v62, &protocol witness table for Artist);
        v66 = v65;
        v68 = dispatch thunk of MusicItem.id.getter(v62, &protocol witness table for Artist);
        if (v64 == v68 && v66 == v67)
        {
          swift_bridgeObjectRelease_n(v66, 2);
          v3 = v63;
          v71 = v101;
          v22 = v97;
LABEL_17:
          swift_bridgeObjectRelease();
          v75 = v84;
          IndexPath.init(item:section:)(v61, v79);
          (*(void (**)(char *, uint64_t))(v3 + 8))(v99, v71);
          sub_10004FF60((uint64_t)v18, &qword_1011C99B0);
          (*(void (**)(char *, uint64_t))(v98 + 8))(v22, v80);
          v76 = type metadata accessor for IndexPath(0);
          return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56))(v75, 0, 1, v76);
        }
        v69 = _stringCompareWithSmolCheck(_:_:expecting:)(v64, v66, v68, v67, 0);
        swift_bridgeObjectRelease();
        v70 = swift_bridgeObjectRelease();
        v3 = v63;
        v71 = v101;
        v22 = v97;
        if ((v69 & 1) != 0)
          goto LABEL_17;
        (*(void (**)(char *, uint64_t, __n128))(v63 + 8))(v99, v101, v70);
        v13 = v91;
        v40 = v92;
        v35 = v98;
      }
      sub_10004FF60((uint64_t)v18, &qword_1011C99B0);
      v20 = v35;
      v19 = v80;
      (*(void (**)(char *, uint64_t))(v35 + 8))(v22, v80);
      v72 = v81;
      sub_1007CF5D0(&qword_1011C99C0, (uint64_t *)&unk_1011A3B50, v81);
      v73 = (uint64_t)v72;
      v28 = v78;
      sub_100065228(v73, (uint64_t)v78, &qword_1011C99B8);
      v31 = sub_100007E8C(&qword_1011C99C0);
      v74 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 48))(v28, 1, v31);
      v34 = v77;
      if (v74 != 1)
        continue;
      break;
    }
  }
  swift_bridgeObjectRelease();
  v32 = type metadata accessor for IndexPath(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v84, 1, 1, v32);
}

id sub_1007D07B4(char a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  NSString v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  id v34;
  uint64_t v35;
  _OWORD v37[2];
  objc_super v38;
  _BYTE v39[48];

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = type metadata accessor for Locale(0);
  __chkstk_darwin(v5);
  v7 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v8);
  v10 = (char *)v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1[OBJC_IVAR____TtC5Music32LibraryArtistsListViewController_hasAppearedOnce] = 0;
  v11 = &v1[OBJC_IVAR____TtC5Music32LibraryArtistsListViewController____lazy_storage___headerRegistration];
  v12 = sub_100007E8C(&qword_1011A37B0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = &v2[OBJC_IVAR____TtC5Music32LibraryArtistsListViewController____lazy_storage___listCellRegistration];
  v14 = sub_100007E8C((uint64_t *)&unk_1011C9950);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Music32LibraryArtistsListViewController____lazy_storage___collectionView] = 0;
  v15 = OBJC_IVAR____TtC5Music32LibraryArtistsListViewController_prefetchingController;
  v16 = objc_allocWithZone((Class)type metadata accessor for ArtworkPrefetchingController());
  v17 = v2;
  *(_QWORD *)&v2[v15] = sub_1001EA3C8(0xD000000000000021, 0x8000000100E45B90);
  *(_QWORD *)&v17[OBJC_IVAR____TtC5Music32LibraryArtistsListViewController____lazy_storage___searchController] = 0;
  v18 = &v17[OBJC_IVAR____TtC5Music32LibraryArtistsListViewController____lazy_storage___actionMetricsReportingContext];
  v19 = type metadata accessor for Actions.MetricsReportingContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  v20 = &v17[OBJC_IVAR____TtC5Music32LibraryArtistsListViewController_selectedArtist];
  v21 = type metadata accessor for Artist(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
  sub_1002D98F0(a1, (uint64_t)v39);
  v22 = sub_100007E8C((uint64_t *)&unk_1011C99F0);
  swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
  *(_QWORD *)&v17[OBJC_IVAR____TtC5Music32LibraryArtistsListViewController_responseController] = sub_10018C268((uint64_t)v39);

  v38.receiver = v17;
  v38.super_class = ObjectType;
  v23 = objc_msgSendSuper2(&v38, "initWithNibName:bundle:", 0, 0);
  v24 = String.LocalizationValue.init(stringLiteral:)(0x73747369747241, 0xE700000000000000);
  static Locale.current.getter(v24);
  String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, 0, v7, 0, 0, 256);
  v25 = String._bridgeToObjectiveC()();
  objc_msgSend(v23, "setTitle:", v25, swift_bridgeObjectRelease().n128_f64[0]);

  v26 = v23;
  UIViewController.playActivityFeatureIdentifier.setter(2u);

  v27 = sub_100007E8C(&qword_1011A1750);
  v28 = swift_allocObject(v27, 48, 7);
  v37[0] = xmmword_100EA7AA0;
  *(_OWORD *)(v28 + 16) = xmmword_100EA7AA0;
  v29 = sub_10018D478();
  *(_QWORD *)(v28 + 32) = &type metadata for LibraryFilterTrait;
  *(_QWORD *)(v28 + 40) = v29;
  v30 = v26;
  v31 = UIViewController.registerForTraitChanges<A>(_:handler:)(v28, sub_1007D6054, 0, ObjectType);
  swift_unknownObjectRelease(v31);

  swift_bridgeObjectRelease();
  v32 = swift_allocObject(v27, 48, 7);
  *(_OWORD *)(v32 + 16) = v37[0];
  v33 = sub_10013ADBC();
  *(_QWORD *)(v32 + 32) = &type metadata for MusicLibraryTrait;
  *(_QWORD *)(v32 + 40) = v33;
  v34 = v30;
  v35 = UIViewController.registerForTraitChanges<A>(_:handler:)(v32, sub_1007D6058, 0, ObjectType);
  swift_unknownObjectRelease(v35);
  swift_bridgeObjectRelease();

  return v34;
}

uint64_t sub_1007D0B5C()
{
  char *v0;
  char *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  double (**v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  unint64_t (**v8)@<X0>(uint64_t@<X0>, uint64_t@<X1>, uint64_t@<X8>);
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  __int128 v15;
  _UNKNOWN **v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  _QWORD v31[4];
  _QWORD v32[4];
  char v33[24];
  objc_super v34;
  __int128 v35;
  _OWORD v36[2];

  v1 = v0;
  v34.receiver = v0;
  v34.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v34, "viewDidLoad");
  v2 = sub_1007D0E48();
  v3 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Music32LibraryArtistsListViewController_prefetchingController];
  objc_msgSend(v2, "setPrefetchDataSource:", v3);

  v4 = swift_allocObject(&unk_1010DCCA0, 24, 7);
  swift_unknownObjectWeakInit(v4 + 16);
  v5 = (double (**)(uint64_t, uint64_t))(v3
                                                + OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_defaultArtworkMetricsProvider);
  v6 = *(_QWORD *)(v3 + OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_defaultArtworkMetricsProvider);
  v7 = *(_QWORD *)(v3 + OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_defaultArtworkMetricsProvider + 8);
  *v5 = sub_1007D754C;
  v5[1] = (double (*)(uint64_t, uint64_t))v4;
  sub_10004BA30(v6, v7);
  v8 = (unint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X1>, uint64_t@<X8>))(v3
                                                                                       + OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_artworkProvider);
  v9 = *(_QWORD *)(v3 + OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_artworkProvider);
  v10 = *(_QWORD *)(v3 + OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_artworkProvider + 8);
  *v8 = sub_1007D12EC;
  v8[1] = 0;
  sub_10004BA30(v9, v10);
  v11 = sub_1007D0E48();
  v12 = sub_1007D0E48();
  v13 = sub_1005AEDD4((uint64_t)v12, 0, 0, 0, 0, 0);

  objc_msgSend(v11, "setCollectionViewLayout:", v13);
  v14 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Music32LibraryArtistsListViewController_responseController];
  swift_beginAccess(v14 + 16, v33, 0, 0);
  v15 = *(_OWORD *)(v14 + 32);
  v35 = *(_OWORD *)(v14 + 16);
  v36[0] = v15;
  *(_OWORD *)((char *)v36 + 12) = *(_OWORD *)(v14 + 44);
  sub_1001A7ACC(&v35);
  v16 = sub_1002D8F14();
  sub_1001A7B10((uint64_t *)&v35);
  v17 = v16[2];
  swift_bridgeObjectRelease();
  if (v17)
  {
    v18 = sub_100188758();
    v19 = objc_msgSend(v1, "navigationItem");
    v20 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v18);
    objc_msgSend(v19, "setRightBarButtonItem:", v20);

  }
  v21 = swift_allocObject(&unk_1010DCCA0, 24, 7);
  swift_unknownObjectWeakInit(v21 + 16);
  v22 = *(_QWORD *)(v14 + 64);
  v23 = *(_QWORD *)(v14 + 72);
  *(_QWORD *)(v14 + 64) = sub_1007D7554;
  *(_QWORD *)(v14 + 72) = v21;
  sub_10004BA30(v22, v23);
  v24 = sub_1007D2184();
  v25 = swift_allocObject(&unk_1010DCCA0, 24, 7);
  swift_unknownObjectWeakInit(v25 + 16);
  v26 = *(_QWORD *)(v24 + 72);
  v27 = *(_QWORD *)(v24 + 80);
  *(_QWORD *)(v24 + 72) = sub_1007D755C;
  *(_QWORD *)(v24 + 80) = v25;
  sub_10004BA30(v26, v27);
  swift_release();
  v31[3] = sub_100007E8C(&qword_1011A37B0);
  v28 = sub_100049F68(v31);
  sub_1007D2380((uint64_t)v28);
  v32[3] = sub_100007E8C((uint64_t *)&unk_1011C9950);
  v29 = sub_100049F68(v32);
  sub_1007D2574((uint64_t)v29);
  return swift_arrayDestroy(v31, 2, (char *)&type metadata for Any + 8);
}

id sub_1007D0E48()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  objc_class *v14;
  id v15;
  id v16;
  id result;
  void *v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  CGFloat v28;
  double v29;
  CGFloat v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  double Width;
  void *v36;
  unint64_t v37;
  id v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  id v44;
  _BYTE v45[16];
  objc_super v46;
  objc_super v47;
  objc_super v48;
  CGRect v49;
  CGRect v50;

  v1 = v0;
  v2 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v45[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for UICollectionLayoutListConfiguration(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v45[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = OBJC_IVAR____TtC5Music32LibraryArtistsListViewController____lazy_storage___collectionView;
  v11 = *(void **)&v1[OBJC_IVAR____TtC5Music32LibraryArtistsListViewController____lazy_storage___collectionView];
  if (v11)
  {
    v12 = *(id *)&v1[OBJC_IVAR____TtC5Music32LibraryArtistsListViewController____lazy_storage___collectionView];
LABEL_8:
    v44 = v11;
    return v12;
  }
  sub_10004A07C(0, (unint64_t *)&unk_1011A3DA0, UICollectionViewCompositionalLayout_ptr);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for UICollectionLayoutListConfiguration.Appearance.plain(_:), v2);
  UICollectionLayoutListConfiguration.init(appearance:)(v5);
  v13 = (void *)static UICollectionViewCompositionalLayout.list(using:)(v9);
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
  v14 = (objc_class *)type metadata accessor for HIMetricsCollectionView();
  objc_allocWithZone(v14);
  v15 = v13;
  v16 = sub_1001089FC(v15, 1, 0);
  result = objc_msgSend(v1, "view");
  if (result)
  {
    v18 = result;
    objc_msgSend(result, "bounds");
    v20 = v19;
    v22 = v21;
    v24 = v23;
    v26 = v25;

    v48.receiver = v16;
    v48.super_class = v14;
    objc_msgSendSuper2(&v48, "frame");
    v28 = v27;
    v30 = v29;
    v32 = v31;
    v34 = v33;
    v47.receiver = v16;
    v47.super_class = v14;
    objc_msgSendSuper2(&v47, "setFrame:", v20, v22, v24, v26);
    v49.origin.x = v28;
    v49.origin.y = v30;
    v49.size.width = v32;
    v49.size.height = v34;
    Width = CGRectGetWidth(v49);
    v46.receiver = v16;
    v46.super_class = v14;
    objc_msgSendSuper2(&v46, "frame");
    if (Width != CGRectGetWidth(v50))
      sub_100108B5C();
    objc_msgSend(v16, "setAutoresizingMask:", 18);
    result = objc_msgSend(v1, "view");
    if (result)
    {
      v36 = result;
      objc_msgSend(result, "addSubview:", v16);

      objc_msgSend(v16, "_setShouldPrefetchCellsWhenPerformingReloadData:", 1);
      objc_msgSend(v16, "setDataSource:", v1);
      objc_msgSend(v16, "setDelegate:", v1);
      objc_msgSend(v16, "setAlwaysBounceVertical:", 1);
      objc_msgSend(v16, "setKeyboardDismissMode:", 1);
      objc_msgSend(v16, "setAllowsFocus:", 1);
      objc_msgSend(v16, "setRemembersLastFocusedIndexPath:", 1);
      v45[15] = 0;
      v37 = sub_10004D63C();
      v38 = v16;
      objc_msgSend(v38, "setAllowsMultipleSelection:", FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v37) & 1);

      v39 = AccessibilityIdentifier.libraryArtistsListView.unsafeMutableAddressor();
      v40 = *v39;
      v41 = v39[1];
      swift_bridgeObjectRetain();
      v42 = UIView.withAccessibilityIdentifier(_:)(v40, v41);

      swift_bridgeObjectRelease();
      v43 = *(void **)&v1[v10];
      *(_QWORD *)&v1[v10] = v42;
      v12 = v42;

      v11 = 0;
      goto LABEL_8;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

double sub_1007D11F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *Strong;
  void *v5;
  id v6;
  unint64_t v7;
  char v8;
  double v9;
  id v10;
  _BYTE v12[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v12, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    v6 = objc_msgSend(Strong, "traitCollection");
    v7 = sub_100455C84();
    v8 = UITraitCollection.subscript.getter(&type metadata for SplayedLayoutTrait, &type metadata for SplayedLayoutTrait, v7);

    if ((v8 & 1) != 0)
      v9 = 44.0;
    else
      v9 = 48.0;
  }
  else
  {
    v9 = 0.0;
  }
  v10 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  objc_msgSend(v10, "displayScale");

  return v9;
}

unint64_t sub_1007D12EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int v20;
  uint64_t v21;
  unint64_t result;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE v37[24];
  uint64_t v38;

  v35 = a2;
  v36 = a3;
  v4 = sub_100007E8C((uint64_t *)&unk_1011B6950);
  v31 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C((uint64_t *)&unk_1011A3B50);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Artist(0);
  v33 = *(_QWORD *)(v11 - 8);
  v34 = v11;
  __chkstk_darwin(v11);
  v32 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011A3B48);
  __chkstk_darwin(v13);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C((uint64_t *)&unk_1011C9970);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(a1, (uint64_t)v37, &qword_10119DCC0);
  if (!v38)
  {
    sub_10004FF60((uint64_t)v37, &qword_10119DCC0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, 1, 1, v16);
    goto LABEL_7;
  }
  v20 = swift_dynamicCast(v15, v37, (char *)&type metadata for Any + 8, v16, 6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v15, v20 ^ 1u, 1, v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
LABEL_7:
    sub_10004FF60((uint64_t)v15, &qword_1011A3B48);
    v28 = type metadata accessor for Artwork(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v36, 1, 1, v28);
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
  v21 = MusicLibrarySectionedResponse.sections.getter(v16);
  result = IndexPath.section.getter(v21);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)(v21 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v10, v21+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * result, v7);
    v23 = swift_bridgeObjectRelease();
    MusicLibrarySection.items.getter(v7, v23);
    v24 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v25 = IndexPath.item.getter(v24);
    v26 = v32;
    MusicItemCollection.subscript.getter(v25, v4);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v6, v4);
    v27 = sub_100007E8C(&qword_1011C99E8);
    swift_allocObject(v27, *(unsigned int *)(v27 + 48), *(unsigned __int16 *)(v27 + 52));
    MusicAttributeProperty.init(_:)(0x6B726F77747261, 0xE700000000000000);
    Artist.subscript.getter();
    v29 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v33 + 8))(v26, v34, v29);
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  }
  __break(1u);
  return result;
}

void sub_1007D16A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (**v7)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t Strong;
  char *v38;
  unsigned int (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  _QWORD *v41;
  void (*v42)(_QWORD *, char *, uint64_t);
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t *v46;
  unint64_t v47;
  void (*v48)(_QWORD *, char *, uint64_t);
  char *v49;
  void (**v50)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  int v57;
  char v58;
  id v59;
  unint64_t v60;
  char v61;
  id v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  __n128 v77;
  uint64_t v78;
  uint64_t *v79;
  char *v80;
  uint64_t v81;
  uint64_t *v82;
  char *v83;
  uint64_t v84;
  unsigned int (*v85)(uint64_t *, uint64_t, uint64_t);
  void (*v86)(char *, uint64_t *, uint64_t);
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  __n128 v93;
  uint64_t v94;
  char *v95;
  void (*v96)(char *, uint64_t);
  id v97;
  char *v98;
  Class v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  void (**v104)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v105;
  id v106;
  Class isa;
  void (*v108)(uint64_t, uint64_t);
  uint64_t v109;
  void (*v110)(char *, uint64_t, uint64_t);
  uint64_t v111;
  uint64_t v112;
  unsigned int (*v113)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  char *v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t *v127;
  void (**v128)(uint64_t, uint64_t, uint64_t, uint64_t);
  char v129[24];
  _BYTE v130[24];
  _QWORD v131[4];
  char v132[24];

  v4 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  __chkstk_darwin(v4);
  v117 = (uint64_t)&v109 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(void (***)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 - 8);
  __chkstk_darwin(v6);
  v119 = (char *)&v109 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v115 = (char *)&v109 - v10;
  v11 = sub_100007E8C((uint64_t *)&unk_1011B6950);
  v124 = *(_QWORD *)(v11 - 8);
  v125 = (char *)v11;
  __chkstk_darwin(v11);
  v123 = (char *)&v109 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C((uint64_t *)&unk_1011C99D8);
  __chkstk_darwin(v13);
  v128 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v109 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
  __chkstk_darwin(v15);
  v121 = (uint64_t)&v109 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v120 = (char *)&v109 - v18;
  __chkstk_darwin(v19);
  v122 = (uint64_t)&v109 - v20;
  __chkstk_darwin(v21);
  v127 = (uint64_t *)((char *)&v109 - v22);
  v23 = type metadata accessor for Artist(0);
  v24 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v118 = (char *)&v109 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v126 = (char *)&v109 - v27;
  v28 = sub_100007E8C(&qword_1011A3B48);
  __chkstk_darwin(v28);
  v30 = (char *)&v109 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_100007E8C((uint64_t *)&unk_1011C9970);
  v32 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v116 = (char *)&v109 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v36 = (char *)&v109 - v35;
  a2 += 16;
  swift_beginAccess(a2, v132, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (!Strong)
    return;
  v38 = (char *)Strong;
  sub_10004A160(a1, (uint64_t)v30, &qword_1011A3B48);
  v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
  if (v39(v30, 1, v31) == 1)
  {

    sub_10004FF60((uint64_t)v30, &qword_1011A3B48);
    return;
  }
  v113 = (unsigned int (*)(uint64_t, uint64_t, uint64_t, __n128))v39;
  (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v36, v30, v31);
  objc_msgSend(v38, "setNeedsUpdateContentUnavailableConfiguration");
  v40 = *(_QWORD *)&v38[OBJC_IVAR____TtC5Music32LibraryArtistsListViewController_prefetchingController];
  v131[3] = v31;
  v41 = sub_100049F68(v131);
  v114 = v32;
  v42 = *(void (**)(_QWORD *, char *, uint64_t))(v32 + 16);
  v42(v41, v36, v31);
  v43 = v40 + OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_context;
  swift_beginAccess(v43, v130, 33, 0);
  sub_1000A5508((uint64_t)v131, v43, &qword_10119DCC0);
  swift_endAccess(v130);
  v44 = sub_1007D0E48();
  objc_msgSend(v44, "reloadData");

  v45 = sub_1007D2184();
  if (MusicLibrarySectionedResponse.isEmpty.getter())
  {
    v46 = (uint64_t *)(*(_QWORD *)(sub_1007D2184() + 104)
                    + OBJC_IVAR____TtCC5Music23LibrarySearchControllerP33_D5FA0BEF708D1E9261BCB607AD690C3E11BarDelegate_text);
    v47 = v46[1];
    if (v47)
    {
      v112 = v31;
      v48 = v42;
      v49 = v36;
      v50 = v7;
      v51 = v6;
      v52 = v24;
      v53 = *v46;
      swift_release();
      v54 = HIBYTE(v47) & 0xF;
      v55 = v53 & 0xFFFFFFFFFFFFLL;
      v24 = v52;
      v6 = v51;
      v7 = v50;
      v36 = v49;
      v42 = v48;
      v31 = v112;
      if ((v47 & 0x2000000000000000) == 0)
        v54 = v55;
      v56 = v54 != 0;
      v57 = *(unsigned __int8 *)(v45 + 48);
      *(_BYTE *)(v45 + 48) = v56;
      if (v57 == v56)
        goto LABEL_12;
    }
    else
    {
      swift_release();
      v73 = *(_BYTE *)(v45 + 48);
      *(_BYTE *)(v45 + 48) = 0;
      if ((v73 & 1) == 0)
        goto LABEL_12;
    }
    goto LABEL_11;
  }
  v58 = *(_BYTE *)(v45 + 48);
  *(_BYTE *)(v45 + 48) = 1;
  if ((v58 & 1) == 0)
LABEL_11:
    sub_100409F58();
LABEL_12:
  v59 = objc_msgSend(v38, "traitCollection", swift_release().n128_f64[0]);
  v60 = sub_100455C84();
  v61 = UITraitCollection.subscript.getter(&type metadata for SplayedLayoutTrait, &type metadata for SplayedLayoutTrait, v60);

  if ((v61 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v114 + 8))(v36, v31);

    return;
  }
  v62 = sub_1007D0E48();
  v63 = objc_msgSend(v62, "indexPathsForSelectedItems");

  if (v63)
  {
    v64 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v63, v6);

    v65 = *(_QWORD *)(v64 + 16);
    swift_bridgeObjectRelease();
    if (v65)
    {

      (*(void (**)(char *, uint64_t))(v114 + 8))(v36, v31);
      return;
    }
  }
  v111 = v24;
  v112 = v23;
  v66 = MusicLibrarySectionedResponse.sections.getter(v31);
  v67 = *(_QWORD *)(v66 + 16);
  v68 = sub_100007E8C((uint64_t *)&unk_1011A3B50);
  v69 = *(_QWORD *)(v68 - 8);
  v110 = (void (*)(char *, uint64_t, uint64_t))v42;
  if (v67)
  {
    v70 = (uint64_t)v128;
    (*(void (**)(void (**)(uint64_t, uint64_t, uint64_t, uint64_t), unint64_t, uint64_t))(v69 + 16))(v128, v66 + ((*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80)), v68);
    v71 = 0;
    v72 = v112;
  }
  else
  {
    v71 = 1;
    v72 = v112;
    v70 = (uint64_t)v128;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v69 + 56))(v70, v71, 1, v68);
  swift_bridgeObjectRelease();
  v74 = sub_100007E8C((uint64_t *)&unk_1011A3B50);
  v75 = *(_QWORD *)(v74 - 8);
  v76 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v70, 1, v74);
  v78 = v70;
  if (v76 == 1)
  {
    sub_10004FF60(v70, (uint64_t *)&unk_1011C99D8);
    v79 = v127;
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v111 + 56))(v127, 1, 1, v72);
LABEL_25:

    (*(void (**)(char *, uint64_t))(v114 + 8))(v36, v31);
    sub_10004FF60((uint64_t)v79, (uint64_t *)&unk_1011A3FB0);
    return;
  }
  v80 = v123;
  v81 = v78;
  MusicLibrarySection.items.getter(v74, v77);
  (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v81, v74);
  v82 = v127;
  sub_10031E1B8((uint64_t)v127);
  v83 = v80;
  v79 = v82;
  (*(void (**)(char *, char *))(v124 + 8))(v83, v125);
  v84 = v111;
  v85 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v111 + 48);
  if (v85(v79, 1, v72) == 1)
    goto LABEL_25;
  v125 = v36;
  v128 = v7;
  v86 = *(void (**)(char *, uint64_t *, uint64_t))(v84 + 32);
  v86(v126, v79, v72);
  v87 = (uint64_t)&v38[OBJC_IVAR____TtC5Music32LibraryArtistsListViewController_selectedArtist];
  swift_beginAccess(&v38[OBJC_IVAR____TtC5Music32LibraryArtistsListViewController_selectedArtist], v131, 0, 0);
  v88 = v122;
  sub_10004A160(v87, v122, (uint64_t *)&unk_1011A3FB0);
  if (v85((uint64_t *)v88, 1, v72) == 1)
  {
    v89 = (uint64_t *)&unk_1011A3FB0;
    v90 = v88;
  }
  else
  {
    v91 = (uint64_t)v118;
    v86(v118, (uint64_t *)v88, v72);
    v92 = *(_QWORD *)&v38[OBJC_IVAR____TtC5Music32LibraryArtistsListViewController_responseController]
        + *(_QWORD *)(**(_QWORD **)&v38[OBJC_IVAR____TtC5Music32LibraryArtistsListViewController_responseController]
                    + 112);
    v93 = swift_beginAccess(v92, v129, 0, 0);
    if (v113(v92, 1, v31, v93))
    {
      v94 = v117;
      v128[7](v117, 1, 1, v6);
    }
    else
    {
      v95 = v116;
      v110(v116, v92, v31);
      v94 = v117;
      sub_1007CFF68(v91, v117);
      v96 = *(void (**)(char *, uint64_t))(v114 + 8);
      v96(v95, v31);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v128[6])(v94, 1, v6) != 1)
      {
        v103 = v91;
        v127 = (uint64_t *)v96;
        v104 = v128;
        v105 = v115;
        ((void (*)(char *, uint64_t, uint64_t))v128[4])(v115, v94, v6);
        v106 = sub_1007D0E48();
        isa = IndexPath._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v106, "selectItemAtIndexPath:animated:scrollPosition:", isa, 0, 0);

        ((void (*)(char *, uint64_t))v104[1])(v105, v6);
        v108 = *(void (**)(uint64_t, uint64_t))(v84 + 8);
        v108(v103, v72);
        v108((uint64_t)v126, v72);
        ((void (*)(char *, uint64_t))v127)(v125, v31);
        return;
      }
    }
    (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v91, v72);
    v89 = (uint64_t *)&unk_1011A3D50;
    v90 = v94;
  }
  sub_10004FF60(v90, v89);
  v97 = sub_1007D0E48();
  v98 = v119;
  IndexPath.init(item:section:)(0, 0);
  v99 = IndexPath._bridgeToObjectiveC()().super.isa;
  ((void (*)(char *, uint64_t))v128[1])(v98, v6);
  objc_msgSend(v97, "selectItemAtIndexPath:animated:scrollPosition:", v99, v38[OBJC_IVAR____TtC5Music32LibraryArtistsListViewController_hasAppearedOnce], 0);

  v100 = (uint64_t)v120;
  v101 = v126;
  (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v120, v126, v72);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v84 + 56))(v100, 0, 1, v72);
  v102 = v121;
  sub_10004A160(v87, v121, (uint64_t *)&unk_1011A3FB0);
  swift_beginAccess(v87, v130, 33, 0);
  sub_1007D7408(v100, v87);
  swift_endAccess(v130);
  sub_1007D4224(v102);
  sub_10004FF60(v100, (uint64_t *)&unk_1011A3FB0);
  sub_10004FF60(v102, (uint64_t *)&unk_1011A3FB0);

  (*(void (**)(char *, uint64_t))(v84 + 8))(v101, v72);
  (*(void (**)(char *, uint64_t))(v114 + 8))(v125, v31);
}

uint64_t sub_1007D2184()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;

  v1 = OBJC_IVAR____TtC5Music32LibraryArtistsListViewController____lazy_storage___searchController;
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC5Music32LibraryArtistsListViewController____lazy_storage___searchController])
  {
    v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Music32LibraryArtistsListViewController____lazy_storage___searchController];
  }
  else
  {
    v3 = v0;
    v4 = type metadata accessor for LibrarySearchController();
    swift_allocObject(v4, 121, 7);
    v5 = v0;
    v2 = sub_10040A500(0, 0, 0, (uint64_t)v5);

    *(_QWORD *)&v3[v1] = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

double sub_1007D221C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t Strong;
  double result;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  __int128 v18;
  __int128 v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  _BYTE v23[24];
  _BYTE v24[24];
  __int128 v25;
  _OWORD v26[2];

  v5 = a3 + 16;
  swift_beginAccess(a3 + 16, v24, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v8 = (void *)Strong;
    v9 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Music32LibraryArtistsListViewController_responseController);
    swift_retain();

    if (a2)
      v10 = a1;
    else
      v10 = 0;
    v11 = 0xE000000000000000;
    if (a2)
      v11 = a2;
    v21 = v11;
    v22 = v10;
    swift_beginAccess(v9 + 16, v23, 1, 0);
    v12 = *(_QWORD *)(v9 + 16);
    v13 = *(_BYTE *)(v9 + 24);
    v14 = *(_QWORD *)(v9 + 48);
    v15 = *(_BYTE *)(v9 + 56);
    v16 = *(_BYTE *)(v9 + 57);
    v17 = *(_BYTE *)(v9 + 58);
    v20 = *(_BYTE *)(v9 + 59);
    swift_bridgeObjectRetain();
    swift_retain();
    v18 = *(_OWORD *)(v9 + 32);
    v19 = *(_OWORD *)(v9 + 44);
    v25 = *(_OWORD *)(v9 + 16);
    v26[0] = v18;
    *(_OWORD *)((char *)v26 + 12) = v19;
    *(_QWORD *)(v9 + 16) = v12;
    *(_BYTE *)(v9 + 24) = v13;
    *(_QWORD *)(v9 + 32) = v22;
    *(_QWORD *)(v9 + 40) = v21;
    *(_QWORD *)(v9 + 48) = v14;
    *(_BYTE *)(v9 + 56) = v15;
    *(_BYTE *)(v9 + 57) = v16;
    *(_BYTE *)(v9 + 58) = v17;
    *(_BYTE *)(v9 + 59) = v20;
    swift_bridgeObjectRetain();
    sub_1001A7ACC(&v25);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    sub_100181A1C((uint64_t *)&v25);
    sub_1001A7B10((uint64_t *)&v25);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_1007D2380@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[24];
  _BYTE v19[24];

  v3 = sub_100007E8C((uint64_t *)&unk_1011ACE50);
  __chkstk_darwin(v3);
  v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v18[-v7];
  v9 = v1 + OBJC_IVAR____TtC5Music32LibraryArtistsListViewController____lazy_storage___headerRegistration;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Music32LibraryArtistsListViewController____lazy_storage___headerRegistration, v19, 0, 0);
  sub_10004A160(v9, (uint64_t)v8, (uint64_t *)&unk_1011ACE50);
  v10 = sub_100007E8C(&qword_1011A37B0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v11 + 32))(a1, v8, v10);
  sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011ACE50);
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
  v14 = v13;
  v15 = swift_allocObject(&unk_1010DCCA0, 24, 7);
  swift_unknownObjectWeakInit(v15 + 16);
  v16 = sub_10004A07C(0, (unint64_t *)&unk_1011A9B70, UICollectionViewCell_ptr);
  UICollectionView.SupplementaryRegistration.init(elementKind:handler:)(v12, v14, sub_1007D7540, v15, v16);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v5, a1, v10);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v5, 0, 1, v10);
  swift_beginAccess(v9, v18, 33, 0);
  sub_1000A5508((uint64_t)v5, v9, (uint64_t *)&unk_1011ACE50);
  return swift_endAccess(v18);
}

uint64_t sub_1007D2574@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[24];
  _BYTE v17[24];

  v3 = sub_100007E8C(&qword_1011C9990);
  __chkstk_darwin(v3);
  v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v16[-v7];
  v9 = v1 + OBJC_IVAR____TtC5Music32LibraryArtistsListViewController____lazy_storage___listCellRegistration;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Music32LibraryArtistsListViewController____lazy_storage___listCellRegistration, v17, 0, 0);
  sub_10004A160(v9, (uint64_t)v8, &qword_1011C9990);
  v10 = sub_100007E8C((uint64_t *)&unk_1011C9950);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v11 + 32))(a1, v8, v10);
  sub_10004FF60((uint64_t)v8, &qword_1011C9990);
  v12 = swift_allocObject(&unk_1010DCCA0, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16);
  v13 = sub_10004A07C(0, (unint64_t *)&unk_1011AE8C0, UICollectionViewListCell_ptr);
  v14 = type metadata accessor for Artist(0);
  UICollectionView.CellRegistration.init(handler:)(sub_1007D7450, v12, v13, v14);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v5, a1, v10);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v5, 0, 1, v10);
  swift_beginAccess(v9, v16, 33, 0);
  sub_1000A5508((uint64_t)v5, v9, &qword_1011C9990);
  return swift_endAccess(v16);
}

void sub_1007D2784(char a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  _BYTE *v11;
  int v12;
  id v13;
  unint64_t v14;
  char v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _BYTE v23[24];
  char v24[24];
  objc_super v25;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
  __chkstk_darwin(v5);
  v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)&v9 = __chkstk_darwin(v8).n128_u64[0];
  v11 = &v23[-v10];
  v25.receiver = v2;
  v25.super_class = ObjectType;
  v12 = a1 & 1;
  objc_msgSendSuper2(&v25, "viewWillAppear:", a1 & 1, v9);
  v13 = objc_msgSend(v2, "traitCollection");
  v14 = sub_100455C84();
  v15 = UITraitCollection.subscript.getter(&type metadata for SplayedLayoutTrait, &type metadata for SplayedLayoutTrait, v14);

  if ((v15 & 1) == 0)
  {
    v16 = sub_1007D0E48();
    v17 = objc_msgSend(v2, "transitionCoordinator");
    UICollectionView.clearSelection(using:animated:)(v17, v12);

    swift_unknownObjectRelease(v17);
    v18 = type metadata accessor for Artist(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v11, 1, 1, v18);
    v19 = (uint64_t)&v2[OBJC_IVAR____TtC5Music32LibraryArtistsListViewController_selectedArtist];
    swift_beginAccess(&v2[OBJC_IVAR____TtC5Music32LibraryArtistsListViewController_selectedArtist], v24, 0, 0);
    sub_10004A160(v19, (uint64_t)v7, (uint64_t *)&unk_1011A3FB0);
    swift_beginAccess(v19, v23, 33, 0);
    sub_1007D7408((uint64_t)v11, v19);
    swift_endAccess(v23);
    sub_1007D4224((uint64_t)v7);
    sub_10004FF60((uint64_t)v11, (uint64_t *)&unk_1011A3FB0);
    sub_10004FF60((uint64_t)v7, (uint64_t *)&unk_1011A3FB0);
  }
  v20 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Music32LibraryArtistsListViewController_responseController];
  v21 = *(_QWORD *)(*(_QWORD *)v20 + 128);
  v22 = *(_BYTE *)(v20 + v21);
  *(_BYTE *)(v20 + v21) = 1;
  sub_1008E48E4(v22);
}

uint64_t sub_1007D2A7C(char a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t *v22;
  id v23;
  unint64_t v24;
  char v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  id v37;
  Class isa;
  uint64_t v39;
  uint64_t v40;
  char v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  __n128 v53;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62[24];
  char v63[24];
  char v64[24];
  objc_super v65;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = type metadata accessor for MetricsEvent.Page(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_100007E8C((uint64_t *)&unk_1011C9970);
  v8 = *(_QWORD *)(v60 - 8);
  __chkstk_darwin(v60);
  v57 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  __chkstk_darwin(v10);
  v58 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = type metadata accessor for IndexPath(0);
  v59 = *(_QWORD *)(v61 - 8);
  __chkstk_darwin(v61);
  v56 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
  __chkstk_darwin(v13);
  v15 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Artist(0);
  v17 = *(_QWORD *)(v16 - 8);
  *(_QWORD *)&v18 = __chkstk_darwin(v16).n128_u64[0];
  v20 = (char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65.receiver = v2;
  v65.super_class = ObjectType;
  objc_msgSendSuper2(&v65, "viewDidAppear:", a1 & 1, v18);
  v21 = (uint64_t)&v2[OBJC_IVAR____TtC5Music32LibraryArtistsListViewController_selectedArtist];
  swift_beginAccess(&v2[OBJC_IVAR____TtC5Music32LibraryArtistsListViewController_selectedArtist], v64, 0, 0);
  sub_10004A160(v21, (uint64_t)v15, (uint64_t *)&unk_1011A3FB0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    v22 = (uint64_t *)&unk_1011A3FB0;
LABEL_3:
    sub_10004FF60((uint64_t)v15, v22);
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v20, v15, v16);
  v23 = objc_msgSend(v2, "traitCollection");
  v24 = sub_100455C84();
  v25 = UITraitCollection.subscript.getter(&type metadata for SplayedLayoutTrait, &type metadata for SplayedLayoutTrait, v24);

  if ((v25 & 1) != 0)
  {
    v26 = sub_1007D0E48();
    v27 = objc_msgSend(v26, "indexPathsForSelectedItems");

    v28 = v61;
    if (!v27
      || (v29 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v27, v61),
          v27,
          v30 = *(_QWORD *)(v29 + 16),
          swift_bridgeObjectRelease(),
          !v30))
    {
      v31 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Music32LibraryArtistsListViewController_responseController]
          + *(_QWORD *)(**(_QWORD **)&v2[OBJC_IVAR____TtC5Music32LibraryArtistsListViewController_responseController]
                      + 112);
      v32 = swift_beginAccess(v31, v62, 0, 0);
      v33 = v60;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v8 + 48))(v31, 1, v60, v32))
      {
        v15 = v58;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v59 + 56))(v58, 1, 1, v28);
LABEL_10:
        (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
        v22 = (uint64_t *)&unk_1011A3D50;
        goto LABEL_3;
      }
      v34 = v57;
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v57, v31, v33);
      v15 = v58;
      sub_1007CFF68((uint64_t)v20, (uint64_t)v58);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v34, v60);
      v35 = v59;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v15, 1, v28) == 1)
        goto LABEL_10;
      v36 = v56;
      (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v56, v15, v28);
      v37 = sub_1007D0E48();
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v37, "selectItemAtIndexPath:animated:scrollPosition:", isa, 0, 0);

      (*(void (**)(char *, uint64_t))(v59 + 8))(v36, v28);
    }
  }
  (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
LABEL_13:
  v39 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Music32LibraryArtistsListViewController_responseController];
  v40 = *(_QWORD *)(*(_QWORD *)v39 + 128);
  v41 = *(_BYTE *)(v39 + v40);
  *(_BYTE *)(v39 + v40) = 1;
  sub_1008E48E4(v41);
  v2[OBJC_IVAR____TtC5Music32LibraryArtistsListViewController_hasAppearedOnce] = 1;
  v42 = (id)*MetricsReportingController.shared.unsafeMutableAddressor();
  v43 = MetricsEvent.Page.libraryArtistsList.unsafeMutableAddressor();
  sub_10005B704(v43, (uint64_t)v7, type metadata accessor for MetricsEvent.Page);
  sub_100540B34();
  v45 = v44;
  v47 = v46;
  if (qword_10119B8B8 != -1)
    swift_once(&qword_10119B8B8, sub_1000E968C);
  v48 = qword_10124C790;
  swift_retain();
  v49 = GroupActivitiesManager.hasJoined.getter();
  v50 = GroupActivitiesManager.participantsCount.getter();
  v51 = (uint64_t *)(v48 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
  swift_beginAccess(v48 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, v63, 0, 0);
  v52 = *v51;
  v53 = swift_release();
  (*(void (**)(char *, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, __n128))((swift_isaMask & *v42) + 0xA0))(v7, v45, v47, v49 & 1, v50, v52, v53);

  swift_bridgeObjectRelease();
  return sub_10005B748((uint64_t)v7, type metadata accessor for MetricsEvent.Page);
}

void sub_1007D3094(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t Strong;
  void *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  __n128 v25;
  uint64_t KeyPath;
  _QWORD v27[3];
  _QWORD v28[5];
  _BYTE v29[24];
  _BYTE v30[24];

  v7 = sub_100007E8C((uint64_t *)&unk_1011C9970);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C((uint64_t *)&unk_1011A3B50);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)v27 - v16;
  a5 += 16;
  swift_beginAccess(a5, v30, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a5);
  if (Strong)
  {
    v19 = (void *)Strong;
    v27[0] = a1;
    v20 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Music32LibraryArtistsListViewController_responseController)
        + *(_QWORD *)(**(_QWORD **)(Strong + OBJC_IVAR____TtC5Music32LibraryArtistsListViewController_responseController)
                    + 112);
    v21 = swift_beginAccess(v20, v29, 0, 0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v8 + 48))(v20, 1, v7, v21))
    {

      return;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v20, v7);
    v22 = MusicLibrarySectionedResponse.sections.getter(v7);
    v23 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v24 = IndexPath.section.getter(v23);
    if ((v24 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v24 < *(_QWORD *)(v22 + 16))
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v12 + 16))(v14, v22+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * v24, v11);
      v25 = swift_bridgeObjectRelease();
      (*(void (**)(char *, char *, uint64_t, __n128))(v12 + 32))(v17, v14, v11, v25);
      KeyPath = swift_getKeyPath(&unk_100ED09B0);
      MusicLibrarySection.subscript.getter(KeyPath, v11);
      swift_release();
      sub_10061170C(v27[1], v27[2], v28);
      swift_bridgeObjectRelease();
      UICollectionViewCell.contentConfiguration.setter(v28);

      (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
      return;
    }
    __break(1u);
  }
}

void sub_1007D32E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t Strong;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  _BYTE v18[24];

  v6 = type metadata accessor for Artist(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a4 += 16;
  swift_beginAccess(a4, v18, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a4);
  if (Strong)
  {
    v11 = (void *)Strong;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(&v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8], a3, v6);
    v12 = *(unsigned __int8 *)(v7 + 80);
    v13 = (v12 + 16) & ~v12;
    v14 = (v8 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
    v15 = swift_allocObject(&unk_1010DCDB8, v14 + 8, v12 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v15 + v13, v9, v6);
    *(_QWORD *)(v15 + v14) = v11;
    v16 = v11;
    UICollectionViewCell.configurationUpdateHandler.setter(sub_1007D74CC, v15);

  }
}

uint64_t sub_1007D33FC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t OpaqueTypeConformance2;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  double v32;
  void *v33;
  id v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  char *v39;
  void (*v40)(char *, uint64_t);
  char *v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  id v45;
  id v46;
  id v47;
  char *v48;
  double v49;
  void (*v50)(_QWORD *, _QWORD);
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  id v56;
  char *v57;
  uint64_t v58;
  void (*v59)(_QWORD *, _QWORD);
  uint64_t v60;
  char *v61;
  uint64_t v62;
  void (*v63)(_QWORD *, _QWORD);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72[16];
  uint64_t v73;
  void *v74;
  uint64_t v75;
  _QWORD v76[3];
  uint64_t v77;
  void *v78;
  _QWORD v79[6];

  v71 = a1;
  v7 = sub_100007E8C(&qword_1011AD7F0);
  __chkstk_darwin(v7);
  v9 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = type metadata accessor for UIBackgroundConfiguration(0);
  v10 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v12 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v68 = (char *)&v66 - v14;
  v15 = sub_100007E8C((uint64_t *)&unk_1011A3E50);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v66 - v20;
  v73 = a3;
  v74 = a4;
  v69 = a2;
  v75 = a2;
  v22 = sub_100007E8C((uint64_t *)&unk_1011BEB30);
  v23 = _s8ListCellVMa(255);
  v24 = sub_100048748((unint64_t *)&unk_1011A3E60, _s8ListCellVMa, (uint64_t)&unk_100EC564C);
  v79[0] = v23;
  v79[1] = v24;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v79, &opaque type descriptor for <<opaque return type of View.artworkCaching(owner:)>>, 1);
  v26 = UIHostingConfiguration<>.init(content:)(sub_1007D752C, v72, v22, OpaqueTypeConformance2);
  v27 = static Edge.Set.vertical.getter(v26);
  UIHostingConfiguration.margins(_:_:)(v27, v15, 6.0);
  v28 = *(uint64_t (**)(char *, uint64_t))(v16 + 8);
  v29 = v28(v18, v15);
  v30 = static Edge.Set.horizontal.getter(v29);
  v31 = (char *)sub_1007D0E48();
  v32 = *(double *)&v31[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics + 16];

  v79[3] = v15;
  v79[4] = sub_100049F28((unint64_t *)&unk_1011AD850, (uint64_t *)&unk_1011A3E50, (uint64_t)&protocol conformance descriptor for UIHostingConfiguration<A, B>);
  sub_100049F68(v79);
  v33 = a4;
  UIHostingConfiguration.margins(_:_:)(v30, v15, v32);
  v28(v21, v15);
  UICollectionViewCell.contentConfiguration.setter(v79);
  v34 = objc_msgSend(a4, "traitCollection");
  v35 = sub_100455C84();
  LOBYTE(a4) = UITraitCollection.subscript.getter(&type metadata for SplayedLayoutTrait, &type metadata for SplayedLayoutTrait, v35);

  if ((a4 & 1) != 0)
  {
    v67 = v9;
    static UIBackgroundConfiguration.listSidebarCell()();
    v37 = type metadata accessor for UICellConfigurationState(0);
    v77 = v37;
    v78 = &protocol witness table for UICellConfigurationState;
    v38 = sub_100049F68(v76);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v38, v69, v37);
    v39 = v68;
    UIBackgroundConfiguration.updated(for:)(v76);
    v66 = v10;
    v40 = *(void (**)(char *, uint64_t))(v10 + 8);
    v41 = v12;
    v42 = v70;
    v40(v41, v70);
    v43 = _s5Music18DragDropToPlaylistV6OriginVwxx_0(v76);
    if ((UICellConfigurationState.isSelected.getter(v43) & 1) != 0
      && (v44 = objc_msgSend(v33, "traitCollection"),
          v45 = objc_msgSend(v44, "userInterfaceIdiom"),
          v44,
          v45 != (id)6))
    {
      v56 = objc_msgSend((id)objc_opt_self(UIColor), "tintColor");
      UIBackgroundConfiguration.backgroundColor.setter(v56);
      v57 = (char *)sub_1007D0E48();
      v58 = *(_QWORD *)&v57[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics + 16];

      v59 = (void (*)(_QWORD *, _QWORD))UIBackgroundConfiguration.backgroundInsets.modify(v76);
      *(_QWORD *)(v60 + 8) = v58;
      v59(v76, 0);
      v61 = (char *)sub_1007D0E48();
      v62 = *(_QWORD *)&v61[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics + 16];

      v63 = (void (*)(_QWORD *, _QWORD))UIBackgroundConfiguration.backgroundInsets.modify(v76);
      *(_QWORD *)(v64 + 24) = v62;
      v63(v76, 0);
      v48 = v67;
    }
    else
    {
      v46 = objc_msgSend(v33, "traitCollection");
      v47 = objc_msgSend(v46, "userInterfaceIdiom");

      v48 = v67;
      if (v47 == (id)6)
      {
        v49 = -*(double *)HI.HoverOutset.list.unsafeMutableAddressor();
        v50 = (void (*)(_QWORD *, _QWORD))UIBackgroundConfiguration.backgroundInsets.modify(v76);
        *(double *)(v51 + 24) = v49;
        v50(v76, 0);
      }
    }
    v65 = v66;
    (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v48, v39, v42);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v48, 0, 1, v42);
    UICollectionViewCell.backgroundConfiguration.setter(v48);
    return ((uint64_t (*)(char *, uint64_t))v40)(v39, v42);
  }
  else
  {
    static UIBackgroundConfiguration.listCell()(v36);
    v52 = type metadata accessor for UICellConfigurationState(0);
    v77 = v52;
    v78 = &protocol witness table for UICellConfigurationState;
    v53 = sub_100049F68(v76);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(v53, v69, v52);
    UIBackgroundConfiguration.updated(for:)(v76);
    v54 = v70;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v70);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v76);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v9, 0, 1, v54);
    return UICollectionViewCell.backgroundConfiguration.setter(v9);
  }
}

uint64_t sub_1007D3950@<X0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  int *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  void (*v34)(char *, uint64_t);
  char *v35;
  uint64_t v36;
  NSString *v37;
  __n128 v38;
  int v39;
  char *v40;
  _QWORD *v41;
  NSString *v42;
  int v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  id v52;
  unint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  __n128 v57;
  unint64_t v58;
  char **v59;
  uint64_t v60;
  int v61;
  id v62;
  char v63;
  __n128 v64;
  _QWORD v66[2];
  uint64_t v67;
  char *v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  __int128 v77;
  void *v78;
  void *v79;
  _BYTE v80[56];

  v75 = a2;
  v76 = a1;
  v3 = a1;
  v66[1] = a3;
  v4 = type metadata accessor for UICellConfigurationState(0);
  v5 = *(_QWORD *)(v4 - 8);
  v73 = v4;
  v74 = v5;
  __chkstk_darwin(v4);
  v72 = (char *)v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MusicFavoriteStatus(0);
  v70 = *(_QWORD *)(v7 - 8);
  v71 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)v66 - v11;
  v13 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v13);
  v15 = (char *)v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v16);
  v18 = (char *)v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for ArtworkImage.Info(0);
  __chkstk_darwin(v19);
  v21 = (char *)v66 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = v21;
  v22 = (int *)_s8ListCellVMa(0);
  __chkstk_darwin(v22);
  v24 = (char *)v66 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for Artist(0);
  ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v25, (uint64_t)&protocol witness table for Artist, v18);
  v26 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v15, 6, 10, v26);
  v27 = objc_msgSend(v3, "traitCollection");
  v69 = sub_100455C84();
  LOBYTE(v3) = UITraitCollection.subscript.getter(&type metadata for SplayedLayoutTrait, &type metadata for SplayedLayoutTrait, v69);

  if ((v3 & 1) != 0)
    v28 = 0x4046000000000000;
  else
    v28 = 0x4048000000000000;
  ArtworkImage.Size.init(cgSize:)(v28, v28, 0, (uint64_t)v80);
  ArtworkImage.Info.init(viewModel:placeholder:aspectRatio:size:corner:)((uint64_t)v18, (uint64_t)v15, 0, 1, (uint64_t)v80, 0, 0, 1, (uint64_t)v21);
  v67 = sub_100322010();
  v30 = v29;
  Artist.favoriteStatus.getter(v67);
  v31 = v70;
  v32 = v71;
  (*(void (**)(char *, _QWORD, uint64_t))(v70 + 104))(v9, enum case for MusicFavoriteStatus.favorited(_:), v71);
  v33 = static MusicFavoriteStatus.== infix(_:_:)(v12, v9);
  v34 = *(void (**)(char *, uint64_t))(v31 + 8);
  v34(v9, v32);
  v34(v12, v32);
  v35 = &v24[v22[8]];
  v36 = type metadata accessor for ContentRating(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v35, 1, 1, v36);
  v37 = UIFontTextStyleBody;
  v39 = static HierarchicalShapeStyle.primary.getter(v38);
  v40 = &v24[v22[9]];
  *((_DWORD *)v40 + 2) = v39;
  v41 = v40 + 8;
  *((_QWORD *)v40 + 4) = &type metadata for HierarchicalShapeStyle;
  *((_QWORD *)v40 + 5) = &protocol witness table for HierarchicalShapeStyle;
  v42 = UIFontTextStyleSubheadline;
  v43 = static HierarchicalShapeStyle.secondary.getter(v42);
  *((_QWORD *)v40 + 10) = &type metadata for HierarchicalShapeStyle;
  *((_QWORD *)v40 + 11) = &protocol witness table for HierarchicalShapeStyle;
  *((_DWORD *)v40 + 14) = v43;
  *(_QWORD *)v40 = v37;
  *((_QWORD *)v40 + 6) = v42;
  v40[96] = 0;
  v44 = v73;
  sub_10005B6C0((uint64_t)v68, (uint64_t)v24, type metadata accessor for ArtworkImage.Info);
  v45 = (uint64_t *)&v24[v22[5]];
  *v45 = v67;
  v45[1] = v30;
  v46 = v74;
  v47 = v72;
  v48 = &v24[v22[6]];
  *(_QWORD *)v48 = 0;
  *((_QWORD *)v48 + 1) = 0;
  v24[v22[7]] = v33 & 1;
  v49 = &v24[v22[10]];
  *(_QWORD *)v49 = 0;
  *((_QWORD *)v49 + 1) = 0;
  v50 = &v24[v22[11]];
  *(_QWORD *)v50 = swift_getKeyPath(&unk_100ED0980);
  v51 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  swift_storeEnumTagMultiPayload(v50, v51, 0);
  v52 = objc_msgSend(v76, "traitCollection");
  v53 = v69;
  LOBYTE(v37) = UITraitCollection.subscript.getter(&type metadata for SplayedLayoutTrait, &type metadata for SplayedLayoutTrait, v69);

  v54 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v46 + 16))(v47, v75, v44);
  if ((v37 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v44);
    v58 = v53;
    v59 = &selRef_referralObject;
    goto LABEL_8;
  }
  v55 = UICellConfigurationState.isSelected.getter(v54);
  v56 = (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v47, v44);
  v58 = v53;
  v59 = &selRef_referralObject;
  if ((v55 & 1) == 0)
  {
LABEL_8:
    v61 = static HierarchicalShapeStyle.primary.getter(v57);
    v78 = &type metadata for HierarchicalShapeStyle;
    v79 = &protocol witness table for HierarchicalShapeStyle;
    LODWORD(v77) = v61;
    goto LABEL_9;
  }
  v60 = static Color.white.getter(v56);
  v78 = &type metadata for Color;
  v79 = &protocol witness table for Color;
  *(_QWORD *)&v77 = v60;
LABEL_9:
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v41);
  sub_100064C48(&v77, (uint64_t)v41);
  v62 = objc_msgSend(v76, v59[457]);
  v63 = UITraitCollection.subscript.getter(&type metadata for SplayedLayoutTrait, &type metadata for SplayedLayoutTrait, v58);

  v40[96] = v63 & 1;
  sub_100048748((unint64_t *)&qword_1011A3E20, (uint64_t (*)(uint64_t))type metadata accessor for ArtworkPrefetchingController.CacheReference, (uint64_t)&unk_100EAE5B0);
  sub_100048748((unint64_t *)&unk_1011A3E60, _s8ListCellVMa, (uint64_t)&unk_100EC564C);
  v64 = swift_retain();
  View.artworkCaching(owner:)(v64);
  swift_release();
  return sub_10005B748((uint64_t)v24, _s8ListCellVMa);
}

uint64_t sub_1007D3F28@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  char v30;
  _QWORD *v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _BYTE v38[24];
  _BYTE v39[24];
  _BYTE v40[24];

  v3 = sub_100007E8C((uint64_t *)&unk_1011A8780);
  __chkstk_darwin(v3);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v33 - v7;
  v9 = sub_100007E8C((uint64_t *)&unk_1011A9990);
  __chkstk_darwin(v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v33 - v13;
  v15 = v1 + OBJC_IVAR____TtC5Music32LibraryArtistsListViewController____lazy_storage___actionMetricsReportingContext;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Music32LibraryArtistsListViewController____lazy_storage___actionMetricsReportingContext, v40, 0, 0);
  sub_10004A160(v15, (uint64_t)v14, (uint64_t *)&unk_1011A9990);
  v16 = type metadata accessor for Actions.MetricsReportingContext(0);
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16) != 1)
    return sub_10005B6C0((uint64_t)v14, (uint64_t)a1, type metadata accessor for Actions.MetricsReportingContext);
  v36 = v17;
  v37 = a1;
  sub_10004FF60((uint64_t)v14, (uint64_t *)&unk_1011A9990);
  v18 = MetricsEvent.Page.libraryArtistsList.unsafeMutableAddressor();
  sub_10005B704(v18, (uint64_t)v8, type metadata accessor for MetricsEvent.Page);
  v19 = type metadata accessor for MetricsEvent.Page(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v8, 0, 1, v19);
  sub_10004A160((uint64_t)v8, (uint64_t)v5, (uint64_t *)&unk_1011A8780);
  v20 = MetricsReportingController.shared.unsafeMutableAddressor();
  sub_100540B34();
  v34 = v22;
  v35 = v21;
  v23 = qword_10119B8B8;
  v24 = (id)*v20;
  if (v23 != -1)
    swift_once(&qword_10119B8B8, sub_1000E968C);
  v25 = qword_10124C790;
  swift_retain();
  v26 = GroupActivitiesManager.hasJoined.getter();
  v27 = GroupActivitiesManager.participantsCount.getter();
  v28 = (uint64_t *)(v25 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
  swift_beginAccess(v25 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, v39, 0, 0);
  v29 = *v28;

  swift_release();
  v30 = v26 & 1;
  v31 = v37;
  Actions.MetricsReportingContext.init(actionContext:page:pageContext:locations:impressions:sharedListeningContext:)(0, 5, (uint64_t)v5, v35, v34, 0, 0, v30, v37, v27, v29);
  sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011A8780);
  sub_10005B704((uint64_t)v31, (uint64_t)v11, type metadata accessor for Actions.MetricsReportingContext);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v11, 0, 1, v16);
  swift_beginAccess(v15, v38, 33, 0);
  sub_1000A5508((uint64_t)v11, v15, (uint64_t *)&unk_1011A9990);
  return swift_endAccess(v38);
}

uint64_t sub_1007D4224(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  id v31;
  char v32;
  id v33;
  uint64_t v34;
  void *v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  id v38;
  char *v39;
  uint64_t v40;
  _BYTE v41[24];

  v40 = a1;
  v2 = sub_100007E8C(&qword_1011C9980);
  __chkstk_darwin(v2);
  v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
  __chkstk_darwin(v5);
  v37 = (uint64_t)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v36 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v36 - v11;
  v13 = type metadata accessor for Artist(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v39 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v36 - v17;
  v38 = v1;
  v19 = (uint64_t)v1 + OBJC_IVAR____TtC5Music32LibraryArtistsListViewController_selectedArtist;
  swift_beginAccess(v19, v41, 0, 0);
  sub_10004A160(v19, (uint64_t)v12, (uint64_t *)&unk_1011A3FB0);
  v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v20(v12, 1, v13) == 1)
    return sub_10004FF60((uint64_t)v12, (uint64_t *)&unk_1011A3FB0);
  v36 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v36(v18, v12, v13);
  v22 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  v22(v9, v18, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  v23 = (uint64_t)&v4[*(int *)(v2 + 48)];
  sub_10004A160((uint64_t)v9, (uint64_t)v4, (uint64_t *)&unk_1011A3FB0);
  sub_10004A160(v40, v23, (uint64_t *)&unk_1011A3FB0);
  if (v20(v4, 1, v13) == 1)
  {
    sub_10004FF60((uint64_t)v9, (uint64_t *)&unk_1011A3FB0);
    if (v20((char *)v23, 1, v13) == 1)
    {
      sub_10004FF60((uint64_t)v4, (uint64_t *)&unk_1011A3FB0);
      return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v18, v13);
    }
    goto LABEL_8;
  }
  v24 = v37;
  sub_10004A160((uint64_t)v4, v37, (uint64_t *)&unk_1011A3FB0);
  if (v20((char *)v23, 1, v13) == 1)
  {
    sub_10004FF60((uint64_t)v9, (uint64_t *)&unk_1011A3FB0);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v24, v13);
LABEL_8:
    sub_10004FF60((uint64_t)v4, &qword_1011C9980);
LABEL_12:
    v30 = (uint64_t)v39;
    v22(v39, v18, v13);
    v31 = v38;
    v32 = sub_1007D4624();
    v33 = objc_allocWithZone((Class)type metadata accessor for LibraryArtistDetailViewController(0));
    sub_10016DB0C(v30, v32 & 1);
    v35 = (void *)v34;
    sub_1000E4FCC(v34, 0, 1, v31);

    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v18, v13);
  }
  v25 = v39;
  v36(v39, (char *)v23, v13);
  v26 = sub_100048748(&qword_1011C9988, (uint64_t (*)(uint64_t))&type metadata accessor for Artist, (uint64_t)&protocol conformance descriptor for Artist);
  v27 = v24;
  v28 = dispatch thunk of static Equatable.== infix(_:_:)(v24, v25, v13, v26);
  v29 = *(void (**)(char *, uint64_t))(v14 + 8);
  v29(v25, v13);
  sub_10004FF60((uint64_t)v9, (uint64_t *)&unk_1011A3FB0);
  v29((char *)v27, v13);
  sub_10004FF60((uint64_t)v4, (uint64_t *)&unk_1011A3FB0);
  if ((v28 & 1) == 0)
    goto LABEL_12;
  return ((uint64_t (*)(char *, uint64_t))v29)(v18, v13);
}

uint64_t sub_1007D4624()
{
  char *v0;
  char *v1;
  id v2;
  unint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v8;
  Swift::Int v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15[9];
  char v16[24];

  v1 = v0;
  v2 = objc_msgSend(v0, "traitCollection");
  v3 = sub_10018D478();
  UITraitCollection.subscript.getter(v15, &type metadata for LibraryFilterTrait, &type metadata for LibraryFilterTrait, v3);

  v4 = sub_1007607C4(v15[0]);
  swift_bridgeObjectRelease();
  if ((v4 & 1) != 0
    || (v5 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Music32LibraryArtistsListViewController_responseController],
        swift_beginAccess(v5 + 16, v16, 0, 0),
        (*(_BYTE *)(v5 + 24) & 1) != 0))
  {
    v6 = 1;
    return v6 & 1;
  }
  v8 = *(_QWORD *)(v5 + 48);
  if (!*(_QWORD *)(v8 + 16))
  {
    v6 = 0;
    return v6 & 1;
  }
  Hasher.init(_seed:)(v15, *(_QWORD *)(v8 + 40));
  swift_bridgeObjectRetain();
  String.hash(into:)(v15, 0x64616F6C6E776F64, 0xE900000000000073);
  v9 = Hasher._finalize()();
  v10 = -1 << *(_BYTE *)(v8 + 32);
  v11 = v9 & ~v10;
  if (((*(_QWORD *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
  {
    v6 = 0;
    goto LABEL_18;
  }
  v12 = ~v10;
  while (!*(_BYTE *)(*(_QWORD *)(v8 + 48) + v11))
  {
    v14 = 0xE300000000000000;
    v13 = 7105633;
LABEL_12:
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v14, 0x64616F6C6E776F64, 0xE900000000000073, 0);
    swift_bridgeObjectRelease();
    if ((v6 & 1) == 0)
    {
      v11 = (v11 + 1) & v12;
      if (((*(_QWORD *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
        continue;
    }
    goto LABEL_18;
  }
  if (*(_BYTE *)(*(_QWORD *)(v8 + 48) + v11) == 1)
  {
    v13 = 0x657469726F766166;
    v14 = 0xE900000000000073;
    goto LABEL_12;
  }
  swift_bridgeObjectRelease();
  v6 = 1;
LABEL_18:
  swift_bridgeObjectRelease();
  return v6 & 1;
}

uint64_t sub_1007D4A60(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  char v14;
  Swift::String v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[2];

  v7 = sub_100007E8C(&qword_1011A37B0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
  if (v11 == a2 && v12 == a3)
    goto LABEL_7;
  v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v12, a2, a3, 0);
  swift_bridgeObjectRelease();
  if ((v14 & 1) == 0)
  {
    strcpy((char *)v19, "Unknown kind=");
    HIWORD(v19[1]) = -4864;
    v15._countAndFlagsBits = a2;
    v15._object = a3;
    String.append(_:)(v15);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v19[0], v19[1], "Music/LibraryArtistsListViewController.swift", 44, 2, 239, 0);
    __break(1u);
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1007D2380((uint64_t)v10);
  v16 = sub_10004A07C(0, (unint64_t *)&unk_1011A9B70, UICollectionViewCell_ptr);
  v17 = UICollectionView.dequeueConfiguredReusableSupplementary<A>(using:for:)(v10, a4, v16);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v17;
}

uint64_t sub_1007D4CDC(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  id v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  void *v49;

  v46 = a1;
  v4 = sub_100007E8C((uint64_t *)&unk_1011A1760);
  v5 = __chkstk_darwin(v4);
  v43 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UICellAccessory.DisclosureIndicatorOptions(0, v5);
  v44 = *(_QWORD *)(v7 - 8);
  v45 = v7;
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for UICellAccessory.DisplayedState(0, v8);
  v41 = *(_QWORD *)(v11 - 8);
  v42 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C((uint64_t *)&unk_1011C9950);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
  __chkstk_darwin(v18);
  v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v41 - v22;
  sub_1008DEFA8(a2, (uint64_t)&v41 - v22);
  sub_1007D2574((uint64_t)v17);
  v46 = sub_10092430C((uint64_t)v17, a2, (uint64_t)v23);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  v24 = objc_msgSend(v2, "traitCollection");
  v25 = sub_100455C84();
  LOBYTE(a2) = UITraitCollection.subscript.getter(&type metadata for SplayedLayoutTrait, &type metadata for SplayedLayoutTrait, v25);

  if ((a2 & 1) == 0)
  {
    v26 = sub_100007E8C((uint64_t *)&unk_1011AD790);
    v27 = type metadata accessor for UICellAccessory(0);
    v28 = swift_allocObject(v26, ((*(unsigned __int8 *)(*(_QWORD *)(v27 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v27 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v27 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v27 - 8) + 80) | 7);
    *(_OWORD *)(v28 + 16) = xmmword_100EA7AA0;
    v29 = v41;
    v30 = v42;
    (*(void (**)(char *, _QWORD, uint64_t))(v41 + 104))(v13, enum case for UICellAccessory.DisplayedState.always(_:), v42);
    v31 = type metadata accessor for UICellAccessory.LayoutDimension(0);
    v32 = v43;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v43, 1, 1, v31);
    UICellAccessory.DisclosureIndicatorOptions.init(isHidden:reservedLayoutWidth:tintColor:)(2, v32, 0);
    static UICellAccessory.disclosureIndicator(displayed:options:)(v13, v10);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v10, v45);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v13, v30);
    v33 = v28;
    v34 = (void *)v46;
    UICollectionViewListCell.accessories.setter(v33);
    v35 = v34;

    objc_msgSend(v35, "directionalLayoutMargins");
    objc_msgSend(v35, "setDirectionalLayoutMargins:");

  }
  sub_10004A160((uint64_t)v23, (uint64_t)v20, (uint64_t *)&unk_1011A3FB0);
  v36 = type metadata accessor for Artist(0);
  v37 = *(_QWORD *)(v36 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v20, 1, v36) == 1)
  {
    sub_10004FF60((uint64_t)v20, (uint64_t *)&unk_1011A3FB0);
    v47 = 0u;
    v48 = 0u;
    v49 = 0;
  }
  else
  {
    *((_QWORD *)&v48 + 1) = v36;
    v49 = &protocol witness table for Artist;
    v38 = sub_100049F68(&v47);
    (*(void (**)(_QWORD *, char *, uint64_t))(v37 + 32))(v38, v20, v36);
  }
  v39 = v46;

  sub_10004FF60((uint64_t)v23, (uint64_t *)&unk_1011A3FB0);
  sub_10004FF60((uint64_t)&v47, (uint64_t *)&unk_1011A3DD0);
  return v39;
}

uint64_t sub_1007D524C(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  int *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  v2 = (int *)type metadata accessor for ContextualPreview.Data(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Artist(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))(v9, a1, v5, v7);
  ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v5, (uint64_t)&protocol witness table for Artist, v4);
  v10 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
  v11 = &v4[v10[5]];
  v12 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 6, 10, v12);
  *(_QWORD *)&v4[v10[6]] = 0x3FF0000000000000;
  v14 = &v4[v10[7]];
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;
  v14[16] = 1;
  v15 = Artist.name.getter(v13);
  v16 = (uint64_t *)&v4[v2[5]];
  *v16 = v15;
  v16[1] = v17;
  v18 = &v4[v2[6]];
  *(_QWORD *)v18 = 0;
  *((_QWORD *)v18 + 1) = 0;
  v19 = &v4[v2[7]];
  *(_QWORD *)v19 = 0;
  *((_QWORD *)v19 + 1) = 0;
  v4[v2[8]] = 0;
  v4[v2[9]] = 1;
  v20 = objc_allocWithZone((Class)type metadata accessor for ContextualPreview.ViewController(0));
  sub_1001CFEF0((uint64_t)v4);
  v22 = v21;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  return v22;
}

unint64_t sub_1007D53E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t Strong;
  void *v17;
  uint64_t v18;
  uint64_t inited;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  id v24;
  id v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  _BYTE v40[72];
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[10];
  _OWORD v44[10];
  _QWORD v45[12];

  v7 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  __chkstk_darwin(v7);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C((uint64_t *)&unk_1011A9990);
  __chkstk_darwin(v10);
  v12 = (uint64_t *)((char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = sub_100007E8C((uint64_t *)&unk_1011A20C0);
  __chkstk_darwin(v13);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, &v42, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (!Strong)
    return 0;
  v17 = (void *)Strong;
  v38 = a4;
  v18 = sub_100007E8C((uint64_t *)&unk_1011A20E0);
  inited = swift_initStackObject(v18, &v41);
  *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
  v20 = type metadata accessor for Artist(0);
  *(_QWORD *)(inited + 56) = v20;
  *(_QWORD *)(inited + 64) = &protocol witness table for Artist;
  v21 = sub_100049F68((_QWORD *)(inited + 32));
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v21, a3, v20);
  v22 = type metadata accessor for PlaylistContext(0);
  v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56);
  v39 = v15;
  v23(v15, 1, 1, v22);
  v24 = v17;
  v25 = objc_msgSend(v24, "traitCollection");
  v26 = sub_10013ADBC();
  UITraitCollection.subscript.getter(v45, &type metadata for MusicLibraryTrait, &type metadata for MusicLibraryTrait, v26);

  v27 = v45[0];
  sub_1007D3F28(v12);
  v28 = type metadata accessor for Actions.MetricsReportingContext(0);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v12, 0, 1, v28);
  memset(v45, 0, 80);
  v29 = type metadata accessor for IndexPath(0);
  v30 = *(_QWORD *)(v29 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v9, v38, v29);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v9, 0, 1, v29);
  sub_1008DC53C((uint64_t)v9, (uint64_t)v40);
  sub_10004FF60((uint64_t)v9, (uint64_t *)&unk_1011A3D50);
  if (qword_10119B8C0 != -1)
    swift_once(&qword_10119B8C0, sub_1000E9774);
  v31 = qword_10119B8C8;
  v32 = (id)qword_10124C798;
  if (v31 != -1)
    swift_once(&qword_10119B8C8, sub_1000E97E8);
  v33 = qword_10124C7A0;
  swift_retain();
  v34 = (uint64_t)v39;
  sub_100495120(inited, 0, (unint64_t)v39, v27, v32, v33, (unint64_t)v12, (uint64_t)v45, v43, (uint64_t)v40, 1);
  sub_100065228((uint64_t)v43, (uint64_t)v44, (uint64_t *)&unk_1011A3DC0);
  if (*((_QWORD *)&v44[0] + 1))
  {
    v44[7] = v44[2];
    v44[8] = v44[3];
    v44[9] = v44[4];
    v44[5] = v44[0];
    v44[6] = v44[1];
    sub_100007E8C((uint64_t *)&unk_1011A20B0);
    v35 = (unint64_t)ActionMenu.uiMenu(excluding:)((Swift::OpaquePointer)_swiftEmptyArrayStorage);
    sub_1000E411C((uint64_t)v43);
  }
  else
  {
    v35 = 0;
  }

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_10004FF60((uint64_t)v40, (uint64_t *)&unk_1011A20F0);
  sub_10004FF60((uint64_t)v12, (uint64_t *)&unk_1011A9990);
  sub_10004FF60(v34, (uint64_t *)&unk_1011A20C0);
  return v35;
}

void sub_1007D5914(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t Strong;
  void *v9;
  id v10;
  char v11;
  id v12;
  uint64_t v13;
  void *v14;
  _BYTE v16[24];

  v4 = type metadata accessor for Artist(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a1 += 16;
  swift_beginAccess(a1, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v9 = (void *)Strong;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
    v10 = v9;
    v11 = sub_1007D4624();
    v12 = objc_allocWithZone((Class)type metadata accessor for LibraryArtistDetailViewController(0));
    sub_10016DB0C((uint64_t)v7, v11 & 1);
    v14 = (void *)v13;
    sub_1000E4FCC(v13, 0, 1, v10);

  }
}

uint64_t sub_1007D5B84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  __int128 v12;
  __int128 v13;
  void *v14;
  _BYTE v15[24];

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011A3B48);
  __chkstk_darwin(v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C((uint64_t *)&unk_1011C9970);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music32LibraryArtistsListViewController_responseController)
     + *(_QWORD *)(**(_QWORD **)(v1 + OBJC_IVAR____TtC5Music32LibraryArtistsListViewController_responseController)
                 + 112);
  swift_beginAccess(v9, v15, 0, 0);
  sub_10004A160(v9, (uint64_t)v4, &qword_1011A3B48);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10004FF60((uint64_t)v4, &qword_1011A3B48);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    if (MusicLibrarySectionedResponse.isEmpty.getter())
    {
      *((_QWORD *)&v13 + 1) = type metadata accessor for UIContentUnavailableConfiguration(0);
      v14 = &protocol witness table for UIContentUnavailableConfiguration;
      v10 = sub_100049F68(&v12);
      sub_1008E1884((uint64_t)v10);
      UIViewController.contentUnavailableConfiguration.setter(&v12);
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  v14 = 0;
  v12 = 0u;
  v13 = 0u;
  return UIViewController.contentUnavailableConfiguration.setter(&v12);
}

uint64_t sub_1007D5EE0()
{
  return type metadata accessor for LibraryArtistsListViewController(0);
}

uint64_t type metadata accessor for LibraryArtistsListViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1011C9938;
  if (!qword_1011C9938)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LibraryArtistsListViewController);
  return result;
}

void sub_1007D5F24(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[9];

  v10[0] = &unk_100ED0938;
  sub_1001AB544(319, (unint64_t *)&unk_1011ACDB0, &qword_1011A37B0);
  if (v3 <= 0x3F)
  {
    v10[1] = *(_QWORD *)(v2 - 8) + 64;
    sub_1001AB544(319, &qword_1011C9948, (uint64_t *)&unk_1011C9950);
    if (v5 <= 0x3F)
    {
      v10[2] = *(_QWORD *)(v4 - 8) + 64;
      v10[3] = &unk_100ED0950;
      v10[4] = (char *)&value witness table for Builtin.NativeObject + 64;
      v10[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
      v10[6] = &unk_100ED0950;
      sub_10015C698(319, &qword_1011B8BE0, type metadata accessor for Actions.MetricsReportingContext);
      if (v7 <= 0x3F)
      {
        v10[7] = *(_QWORD *)(v6 - 8) + 64;
        sub_10015C698(319, (unint64_t *)&unk_1011C9960, (uint64_t (*)(uint64_t))&type metadata accessor for Artist);
        if (v9 <= 0x3F)
        {
          v10[8] = *(_QWORD *)(v8 - 8) + 64;
          swift_updateClassMetadata2(a1, 256, 9, v10, a1 + 80);
        }
      }
    }
  }
}

uint64_t *sub_1007D605C(char *a1)
{
  uint64_t v1;
  id v2;
  unint64_t v3;
  char v4;
  __int128 v5;
  __int128 v6;
  char v7;
  char v8;
  char v9;
  char v10;
  uint64_t v11;
  __int128 v12;
  _BYTE v14[24];
  __int128 v15;
  _BYTE v16[28];

  v1 = *(_QWORD *)&a1[OBJC_IVAR____TtC5Music32LibraryArtistsListViewController_responseController];
  v2 = objc_msgSend(a1, "traitCollection");
  v3 = sub_10018D478();
  UITraitCollection.subscript.getter(&v15, &type metadata for LibraryFilterTrait, &type metadata for LibraryFilterTrait, v3);

  v4 = sub_1007607C4(v15);
  swift_bridgeObjectRelease();
  swift_beginAccess(v1 + 16, v14, 1, 0);
  v5 = *(_OWORD *)(v1 + 16);
  v6 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)&v16[12] = *(_OWORD *)(v1 + 44);
  v15 = v5;
  *(_OWORD *)v16 = v6;
  v7 = v16[26];
  v8 = v16[27];
  v9 = v16[24];
  v10 = v16[25];
  v11 = v5;
  v12 = *(_OWORD *)&v16[8];
  *(_QWORD *)(v1 + 16) = v11;
  *(_BYTE *)(v1 + 24) = v4 & 1;
  *(_QWORD *)(v1 + 32) = v6;
  *(_OWORD *)(v1 + 40) = v12;
  *(_BYTE *)(v1 + 56) = v9;
  *(_BYTE *)(v1 + 57) = v10;
  *(_BYTE *)(v1 + 58) = v7;
  *(_BYTE *)(v1 + 59) = v8;
  sub_1001A7ACC(&v15);
  sub_1001A7ACC(&v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_100181A1C((uint64_t *)&v15);
  return sub_1001A7B10((uint64_t *)&v15);
}

uint64_t *sub_1007D6190(char *a1)
{
  uint64_t v1;
  id v2;
  unint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  __int128 v10;
  __int128 v11;
  _BYTE v13[24];
  __int128 v14;
  _OWORD v15[2];

  v1 = *(_QWORD *)&a1[OBJC_IVAR____TtC5Music32LibraryArtistsListViewController_responseController];
  v2 = objc_msgSend(a1, "traitCollection");
  v3 = sub_10013ADBC();
  UITraitCollection.subscript.getter(&v14, &type metadata for MusicLibraryTrait, &type metadata for MusicLibraryTrait, v3);

  v4 = v14;
  swift_beginAccess(v1 + 16, v13, 1, 0);
  v5 = *(_BYTE *)(v1 + 24);
  v7 = *(_QWORD *)(v1 + 32);
  v6 = *(_QWORD *)(v1 + 40);
  v8 = *(_BYTE *)(v1 + 57);
  v9 = *(_BYTE *)(v1 + 59);
  v10 = *(_OWORD *)(v1 + 32);
  v11 = *(_OWORD *)(v1 + 44);
  v14 = *(_OWORD *)(v1 + 16);
  v15[0] = v10;
  *(_OWORD *)((char *)v15 + 12) = v11;
  *(_QWORD *)(v1 + 16) = v4;
  *(_BYTE *)(v1 + 24) = v5;
  *(_QWORD *)(v1 + 32) = v7;
  *(_QWORD *)(v1 + 40) = v6;
  *(_BYTE *)(v1 + 57) = v8;
  *(_BYTE *)(v1 + 59) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1001A7ACC(&v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_100181A1C((uint64_t *)&v14);
  return sub_1001A7B10((uint64_t *)&v14);
}

uint64_t sub_1007D6298(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  __n128 v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  char v28[8];
  char v29[24];

  v26 = a1;
  v2 = sub_100007E8C((uint64_t *)&unk_1011B6950);
  v24 = *(_QWORD *)(v2 - 8);
  v25 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C((uint64_t *)&unk_1011A3B50);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C((uint64_t *)&unk_1011C9970);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music32LibraryArtistsListViewController_responseController)
      + *(_QWORD *)(**(_QWORD **)(v1 + OBJC_IVAR____TtC5Music32LibraryArtistsListViewController_responseController)
                  + 112);
  v14 = swift_beginAccess(v13, v29, 0, 0);
  v15 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v10 + 48))(v13, 1, v9, v14))
    return v15;
  v16 = v5;
  v17 = v25;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  v18 = MusicLibrarySectionedResponse.sections.getter(v9);
  result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if ((v26 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(v18 + 16) > v26)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v18+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v26, v16);
    v20 = swift_bridgeObjectRelease();
    MusicLibrarySection.items.getter(v16, v20);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v16);
    v21 = sub_100049F28((unint64_t *)&unk_1011ACAB0, (uint64_t *)&unk_1011B6950, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
    dispatch thunk of Collection.startIndex.getter(v17);
    dispatch thunk of Collection.endIndex.getter(&v27, v17, v21);
    v22 = dispatch thunk of Collection.distance(from:to:)(v28, &v27, v17, v21);
    v15 = v23;
    (*(void (**)(char *, uint64_t, __n128))(v24 + 8))(v4, v17, v22);
    return v15;
  }
  __break(1u);
  return result;
}

uint64_t sub_1007D64FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v18;
  _BYTE v19[24];
  _BYTE v20[24];

  v2 = v1;
  v4 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
  __chkstk_darwin(v4);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v19[-v8];
  __chkstk_darwin(v10);
  v12 = &v19[-v11];
  v13 = type metadata accessor for Artist(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = &v19[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1008DEFA8(a1, (uint64_t)v12);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
    return sub_10004FF60((uint64_t)v12, (uint64_t *)&unk_1011A3FB0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v14 + 32))(v16, v12, v13);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v14 + 16))(v9, v16, v13);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  v18 = v1 + OBJC_IVAR____TtC5Music32LibraryArtistsListViewController_selectedArtist;
  swift_beginAccess(v2 + OBJC_IVAR____TtC5Music32LibraryArtistsListViewController_selectedArtist, v20, 0, 0);
  sub_10004A160(v18, (uint64_t)v6, (uint64_t *)&unk_1011A3FB0);
  swift_beginAccess(v18, v19, 33, 0);
  sub_1007D7408((uint64_t)v9, v18);
  swift_endAccess(v19);
  sub_1007D4224((uint64_t)v6);
  sub_10004FF60((uint64_t)v9, (uint64_t *)&unk_1011A3FB0);
  sub_10004FF60((uint64_t)v6, (uint64_t *)&unk_1011A3FB0);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v14 + 8))(v16, v13);
}

id sub_1007D6708(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t, __n128);
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  id v30;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  void *v43;
  void *v44;
  double v45;
  Class v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  Class isa;
  void (*v55)(char *, char *, uint64_t);
  void (*v56)(char *, char *, uint64_t);
  void (*v57)(uint64_t, char *, uint64_t);
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  uint64_t v62;
  void **aBlock;
  uint64_t v64;
  void *v65;
  void *v66;
  void *v67;
  uint64_t v68;

  v2 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
  __chkstk_darwin(v2);
  v4 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Artist(0);
  v62 = *(_QWORD *)(v5 - 8);
  v6 = *(_QWORD *)(v62 + 64);
  __chkstk_darwin(v5);
  v60 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v59 = (char *)&v47 - v8;
  __chkstk_darwin(v9);
  v11 = (char *)&v47 - v10;
  v12 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  __chkstk_darwin(v12);
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for IndexPath(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  __chkstk_darwin(v15);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v47 - v21;
  if (!*(_QWORD *)(a1 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v16 + 56))(v14, 1, 1, v15, v20);
    goto LABEL_6;
  }
  v58 = v19;
  v61 = v11;
  v23 = v5;
  v24 = *(unsigned __int8 *)(v16 + 80);
  v25 = a1 + ((v24 + 32) & ~v24);
  v26 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v16 + 16);
  v26(v14, v25, v15, v20);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
LABEL_6:
    v28 = (uint64_t *)&unk_1011A3D50;
    v29 = (uint64_t)v14;
    goto LABEL_7;
  }
  v56 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
  v57 = (void (*)(uint64_t, char *, uint64_t))v26;
  v56(v22, v14, v15);
  sub_1008DEFA8((uint64_t)v22, (uint64_t)v4);
  v27 = v62;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v4, 1, v23) != 1)
  {
    v51 = ~v24;
    v55 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
    v55(v61, v4, v23);
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v48 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
    v32 = v59;
    v48(v59, v61, v23);
    v33 = *(unsigned __int8 *)(v27 + 80);
    v34 = (v33 + 16) & ~v33;
    v49 = v33 | 7;
    v50 = swift_allocObject(&unk_1010DCD18, v34 + v6, v33 | 7);
    v55((char *)(v50 + v34), v32, v23);
    v35 = swift_allocObject(&unk_1010DCCA0, 24, 7);
    v36 = v22;
    v53 = v22;
    v59 = (char *)v35;
    swift_unknownObjectWeakInit(v35 + 16);
    v37 = v23;
    v38 = v60;
    v52 = v37;
    v48(v60, v61, v37);
    v57((uint64_t)v58, v36, v15);
    v39 = (v33 + 24) & ~v33;
    v40 = (v6 + v24 + v39) & v51;
    v41 = swift_allocObject(&unk_1010DCD40, v40 + v17, v49 | v24);
    *(_QWORD *)(v41 + 16) = v59;
    v55((char *)(v41 + v39), v38, v37);
    v56((char *)(v41 + v40), v58, v15);
    v42 = (void *)objc_opt_self(UIContextMenuConfiguration);
    v67 = sub_1007D72B4;
    v68 = v50;
    aBlock = _NSConcreteStackBlock;
    v64 = 1107296256;
    v65 = sub_1000FA900;
    v66 = &unk_1010DCD58;
    v43 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    v67 = sub_1007D739C;
    v68 = v41;
    aBlock = _NSConcreteStackBlock;
    v64 = 1107296256;
    v65 = sub_100968BE4;
    v66 = &unk_1010DCD80;
    v44 = _Block_copy(&aBlock);
    swift_retain();
    *(_QWORD *)&v45 = swift_release().n128_u64[0];
    v46 = isa;
    v30 = objc_msgSend(v42, "configurationWithIdentifier:previewProvider:actionProvider:", isa, v43, v44, v45);

    swift_release();
    swift_release();
    _Block_release(v44);
    _Block_release(v43);
    (*(void (**)(char *, uint64_t))(v62 + 8))(v61, v52);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v53, v15);
    swift_release();
    return v30;
  }
  (*(void (**)(char *, uint64_t))(v16 + 8))(v22, v15);
  v28 = (uint64_t *)&unk_1011A3FB0;
  v29 = (uint64_t)v4;
LABEL_7:
  sub_10004FF60(v29, v28);
  return 0;
}

id sub_1007D6C40(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  double v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  char *v23;
  uint64_t *v24;
  uint64_t v25;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  char *v38;
  id v39;
  id v40;
  _QWORD aBlock[6];

  v39 = a1;
  v40 = a2;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
  __chkstk_darwin(v2);
  v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Artist(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  __chkstk_darwin(v8);
  v10 = (char *)&v36 - v9;
  v11 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  __chkstk_darwin(v11);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for IndexPath(0);
  v15 = *(_QWORD **)(v14 - 8);
  *(_QWORD *)&v16 = __chkstk_darwin(v14).n128_u64[0];
  v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  aBlock[0] = objc_msgSend(v39, "identifier", v16);
  v19 = sub_100007E8C(&qword_1011A9960);
  v20 = swift_dynamicCast(v13, aBlock, v19, v14, 6);
  v39 = v15;
  v21 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v15[7];
  if (!v20)
  {
    v21(v13, 1, 1, v14);
    goto LABEL_6;
  }
  v38 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21(v13, 0, 1, v14);
  if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v39 + 6))(v13, 1, v14) == 1)
  {
LABEL_6:
    v24 = (uint64_t *)&unk_1011A3D50;
    v25 = (uint64_t)v13;
    goto LABEL_7;
  }
  v22 = (uint64_t)v18;
  (*((void (**)(char *, char *, uint64_t))v39 + 4))(v18, v13, v14);
  v23 = v4;
  sub_1008DEFA8(v22, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
  {
    v37 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v27 = v10;
    v37(v10, v23, v5);
    v28 = v6;
    v29 = swift_allocObject(&unk_1010DCCA0, 24, 7);
    swift_unknownObjectWeakInit(v29 + 16);
    v30 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
    v31 = v38;
    v30(v38, v27, v5);
    v32 = *(unsigned __int8 *)(v28 + 80);
    v33 = (v32 + 24) & ~v32;
    v34 = swift_allocObject(&unk_1010DCCC8, v33 + v7, v32 | 7);
    *(_QWORD *)(v34 + 16) = v29;
    v37((char *)(v34 + v33), v31, v5);
    aBlock[4] = sub_1007D720C;
    aBlock[5] = v34;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001DBD98;
    aBlock[3] = &unk_1010DCCE0;
    v35 = _Block_copy(aBlock);
    objc_msgSend(v40, "addAnimations:", v35, swift_release().n128_f64[0]);
    _Block_release(v35);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v27, v5);
    return (id)(*((uint64_t (**)(uint64_t, uint64_t))v39 + 1))(v22, v14);
  }
  (*((void (**)(uint64_t, uint64_t))v39 + 1))(v22, v14);
  v24 = (uint64_t *)&unk_1011A3FB0;
  v25 = (uint64_t)v4;
LABEL_7:
  sub_10004FF60(v25, v24);
  return objc_msgSend(v40, "setPreferredCommitStyle:", 0);
}

void sub_1007D6FE4()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;

  v1 = v0;
  v0[OBJC_IVAR____TtC5Music32LibraryArtistsListViewController_hasAppearedOnce] = 0;
  v2 = &v0[OBJC_IVAR____TtC5Music32LibraryArtistsListViewController____lazy_storage___headerRegistration];
  v3 = sub_100007E8C(&qword_1011A37B0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v4 = &v1[OBJC_IVAR____TtC5Music32LibraryArtistsListViewController____lazy_storage___listCellRegistration];
  v5 = sub_100007E8C((uint64_t *)&unk_1011C9950);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music32LibraryArtistsListViewController____lazy_storage___collectionView] = 0;
  v6 = OBJC_IVAR____TtC5Music32LibraryArtistsListViewController_prefetchingController;
  v7 = objc_allocWithZone((Class)type metadata accessor for ArtworkPrefetchingController());
  *(_QWORD *)&v1[v6] = sub_1001EA3C8(0xD000000000000021, 0x8000000100E45B90);
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music32LibraryArtistsListViewController____lazy_storage___searchController] = 0;
  v8 = &v1[OBJC_IVAR____TtC5Music32LibraryArtistsListViewController____lazy_storage___actionMetricsReportingContext];
  v9 = type metadata accessor for Actions.MetricsReportingContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = &v1[OBJC_IVAR____TtC5Music32LibraryArtistsListViewController_selectedArtist];
  v11 = type metadata accessor for Artist(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E2B820, "Music/LibraryArtistsListViewController.swift", 44, 2, 318, 0);
  __break(1u);
}

uint64_t sub_1007D7174(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

uint64_t sub_1007D7198()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for Artist(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_1007D720C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Artist(0) - 8) + 80);
  sub_1007D5914(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_1007D723C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1007D724C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1007D7254()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for Artist(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1007D72B4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Artist(0) - 8) + 80);
  return sub_1007D524C(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_1007D72E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for Artist(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v3 | v8 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v10, v11);
}

unint64_t sub_1007D739C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(type metadata accessor for Artist(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IndexPath(0) - 8) + 80);
  return sub_1007D53E8(a1, *(_QWORD *)(v1 + 16), v1 + v4, v1 + ((v4 + v5 + v6) & ~v6));
}

uint64_t sub_1007D7408(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void sub_1007D7450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1007D32E0(a1, a2, a3, v3);
}

uint64_t sub_1007D7458()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for Artist(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_1007D74CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(type metadata accessor for Artist(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_1007D33FC(a1, a2, v2 + v6, *(void **)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1007D752C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1007D3950(*(void **)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

void sub_1007D7540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1007D3094(a1, a2, a3, a4, v4);
}

double sub_1007D754C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1007D11F4(a1, a2, v2);
}

void sub_1007D7554(uint64_t a1)
{
  uint64_t v1;

  sub_1007D16A4(a1, v1);
}

double sub_1007D755C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_1007D221C(a1, a2, v2);
}

void sub_1007D7720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t (*v23)(__n128);
  __n128 v24;
  uint64_t v25;
  void *v26;
  void *v27;
  Swift::String v28;
  Swift::String v29;
  uint64_t v30;
  Swift::String v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (**v44)(uint64_t, void *, uint64_t);
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  char *v62;
  _BYTE *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;

  v67 = a1;
  v6 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v6);
  v8 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011A1440);
  __chkstk_darwin(v9);
  v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = OBJC_IVAR____TtC5Music24ShareLyricsStoryActivity_socialNetwork;
  v13 = v3[OBJC_IVAR____TtC5Music24ShareLyricsStoryActivity_socialNetwork];
  v14 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Music24ShareLyricsStoryActivity_title];
  v15 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Music24ShareLyricsStoryActivity_title + 8];
  v16 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Music24ShareLyricsStoryActivity_subtitle + 8];
  v65 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Music24ShareLyricsStoryActivity_subtitle];
  v66 = v14;
  v17 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Music24ShareLyricsStoryActivity_lines];
  v18 = *(_QWORD *)(v17 + 16);
  v69 = a2;
  v70 = a3;
  v68 = v8;
  v64 = v16;
  if (v18)
  {
    v60 = v13;
    v61 = OBJC_IVAR____TtC5Music24ShareLyricsStoryActivity_socialNetwork;
    v62 = v11;
    v63 = v3;
    v19 = v17;
    swift_bridgeObjectRetain_n(v17, 2);
    v59 = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20 = 0;
    v58 = v19;
    v21 = v19 + 128;
    v22 = 0xE000000000000000;
    do
    {
      v71 = *(_QWORD *)(v21 - 64);
      v23 = *(uint64_t (**)(__n128))(v21 - 40);
      v21 += 104;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      v24 = swift_retain();
      v25 = v23(v24);
      v27 = v26;
      v72 = v20;
      v73 = v22;
      swift_bridgeObjectRetain();
      v28._countAndFlagsBits = v25;
      v28._object = v27;
      String.append(_:)(v28);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v29._countAndFlagsBits = 10;
      v29._object = (void *)0xE100000000000000;
      String.append(_:)(v29);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v20 = v72;
      v22 = v73;
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease_n(v58, 2);
    v11 = v62;
    v3 = v63;
    v12 = v61;
    LOBYTE(v13) = v60;
    v30 = v59;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v30 = v15;
  }
  v31 = String.trim()();
  swift_bridgeObjectRelease();
  v33 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Music24ShareLyricsStoryActivity_language];
  v32 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Music24ShareLyricsStoryActivity_language + 8];
  v34 = type metadata accessor for ShareLyricsStoryRenderer();
  v35 = swift_allocObject(v34, 88, 7);
  *(_BYTE *)(v35 + 16) = v13;
  *(_QWORD *)(v35 + 24) = v66;
  *(_QWORD *)(v35 + 32) = v30;
  v36 = v64;
  *(_QWORD *)(v35 + 40) = v65;
  *(_QWORD *)(v35 + 48) = v36;
  *(Swift::String *)(v35 + 56) = v31;
  *(_QWORD *)(v35 + 72) = v33;
  *(_QWORD *)(v35 + 80) = v32;
  v37 = v3[v12];
  sub_10013EF64((uint64_t)&v3[OBJC_IVAR____TtC5Music24ShareLyricsStoryActivity_artwork], (uint64_t)v11);
  sub_100064AC8((uint64_t)&v3[OBJC_IVAR____TtC5Music24ShareLyricsStoryActivity_presentationSource], (uint64_t)&v72);
  v38 = qword_10119C560;
  swift_bridgeObjectRetain();
  swift_retain();
  v39 = (uint64_t)v11;
  if (v38 != -1)
    swift_once(&qword_10119C560, sub_10066E41C);
  v40 = xmmword_10124D5E0;
  v41 = swift_allocObject(&unk_1010DCE20, 24, 7);
  *(_QWORD *)(v41 + 16) = v67;
  v42 = type metadata accessor for StorySharingController(0);
  v43 = swift_allocObject(v42, *(unsigned int *)(v42 + 48), *(unsigned __int16 *)(v42 + 52));
  v44 = (void (**)(uint64_t, void *, uint64_t))(v43 + OBJC_IVAR____TtC5Music22StorySharingController_openURL);
  v45 = (void *)objc_opt_self(UIApplication);
  swift_bridgeObjectRetain();
  v46 = objc_msgSend(v45, "sharedApplication");
  v47 = swift_allocObject(&unk_1010DCE48, 24, 7);
  *(_QWORD *)(v47 + 16) = v46;
  *v44 = sub_100561BD0;
  v44[1] = (void (*)(uint64_t, void *, uint64_t))v47;
  *(_BYTE *)(v43 + 16) = v37;
  sub_1007D84D8(v39, v43 + OBJC_IVAR____TtC5Music22StorySharingController_artwork);
  sub_100064EF0((uint64_t)&v72, v43 + OBJC_IVAR____TtC5Music22StorySharingController_presentationSource);
  v48 = (uint64_t *)(v43 + OBJC_IVAR____TtC5Music22StorySharingController_renderer);
  *v48 = v35;
  v48[1] = (uint64_t)&off_1010D5420;
  *(_OWORD *)(v43 + OBJC_IVAR____TtC5Music22StorySharingController_artworkSize) = v40;
  v49 = (_QWORD *)(v43 + OBJC_IVAR____TtC5Music22StorySharingController_shareDataBuilder);
  *v49 = sub_1007D84AC;
  v49[1] = v41;
  v50 = type metadata accessor for TaskPriority(0);
  v51 = (uint64_t)v68;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v68, 1, 1, v50);
  type metadata accessor for MainActor(0);
  swift_retain();
  v52 = v3;
  v54 = v69;
  v53 = v70;
  sub_100048AAC(v69, v70);
  v56 = static MainActor.shared.getter(v55);
  v57 = (_QWORD *)swift_allocObject(&unk_1010DCE70, 64, 7);
  v57[2] = v56;
  v57[3] = &protocol witness table for MainActor;
  v57[4] = v43;
  v57[5] = v52;
  v57[6] = v54;
  v57[7] = v53;
  sub_100166D14(v51, (uint64_t)&unk_1011C9AE8, (uint64_t)v57);
  swift_release();
  swift_release();
  swift_release();
}

void sub_1007D7C20(void (*a1)(_BYTE *), uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  _BYTE *v15;
  int v16;
  void (*v17)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[32];

  v5 = sub_100007E8C(&qword_1011BA080);
  __chkstk_darwin(v5);
  v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v8);
  v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = &v20[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a3)
  {
    if (*(_QWORD *)(a3 + 16))
    {
      sub_10004FA40(a3 + 32, (uint64_t)v20);
      v16 = swift_dynamicCast(v10, v20, (char *)&type metadata for Any + 8, v11, 6);
      v17 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v12 + 56);
      v17(v10, v16 ^ 1u, 1, v11);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 32))(v15, v10, v11);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 16))(v7, v15, v11);
        v18 = type metadata accessor for StorySharingController.ShareData(0);
        v17(&v7[*(int *)(v18 + 20)], 1, 1, v11);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v7, 0, 1, v18);
        a1(v7);
        sub_10004FF60((uint64_t)v7, &qword_1011BA080);
        (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v15, v11);
        return;
      }
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t, __n128))(v12 + 56))(v10, 1, 1, v11, v13);
    }
    sub_10004FF60((uint64_t)v10, &qword_10119E460);
    v19 = type metadata accessor for StorySharingController.ShareData(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v7, 1, 1, v19);
    a1(v7);
    sub_10004FF60((uint64_t)v7, &qword_1011BA080);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1007D7E74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  __n128 v8;
  _QWORD *v9;

  v7[5] = a6;
  v7[6] = a7;
  v7[4] = a5;
  v7[7] = type metadata accessor for MainActor(0);
  v7[8] = static MainActor.shared.getter(v8);
  v9 = (_QWORD *)swift_task_alloc(dword_1011C8794);
  v7[9] = v9;
  *v9 = v7;
  v9[1] = sub_1007D7EE0;
  return sub_100799364();
}

uint64_t sub_1007D7EE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc(v2);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  if (v0)
    v6 = sub_1007D7FAC;
  else
    v6 = sub_1007D7F68;
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_1007D7F68()
{
  uint64_t v0;
  uint64_t result;
  void (*v2)(uint64_t);

  result = swift_release(*(_QWORD *)(v0 + 64));
  v2 = *(void (**)(uint64_t))(v0 + 40);
  if (v2)
  {
    v2(result);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1007D7FAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t);
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 80);
  swift_release();
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 80);
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    *(_DWORD *)v6 = 136315138;
    v14 = v7;
    *(_QWORD *)(v0 + 16) = v5;
    swift_errorRetain(v5);
    v8 = sub_100007E8C(&qword_1011A14B0);
    v9 = String.init<A>(describing:)(v0 + 16, v8);
    *(_QWORD *)(v0 + 24) = sub_100322200(v9, v10, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32);
    swift_bridgeObjectRelease();
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Failed to share lyrics story: %s", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
    swift_errorRelease(v5);

  }
  else
  {
    v12 = *(_QWORD *)(v0 + 80);
    swift_errorRelease(v12);

    swift_errorRelease(v12);
    v11 = swift_errorRelease(v12);
  }
  v13 = *(void (**)(uint64_t))(v0 + 40);
  if (v13)
  {
    v13(v11);
    (*(void (**)(void))(v0 + 8))();
  }
  else
  {
    __break(1u);
  }
}

id sub_1007D8270()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ShareLyricsStoryActivity(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1007D8358()
{
  return type metadata accessor for ShareLyricsStoryActivity(0);
}

uint64_t type metadata accessor for ShareLyricsStoryActivity(uint64_t a1)
{
  uint64_t result;

  result = qword_1011C9AD0;
  if (!qword_1011C9AD0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ShareLyricsStoryActivity);
  return result;
}

void sub_1007D839C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[9];

  v2 = type metadata accessor for Logger(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = &unk_100ED0A00;
    v6[2] = &unk_100ED0A00;
    sub_10013D11C(319);
    if (v5 <= 0x3F)
    {
      v6[3] = *(_QWORD *)(v4 - 8) + 64;
      v6[4] = &unk_100ED0A18;
      v6[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v6[6] = &unk_100ED0A30;
      v6[7] = &unk_100ED0A48;
      v6[8] = (char *)&value witness table for Builtin.Int64 + 64;
      swift_updateClassMetadata2(a1, 256, 9, v6, a1 + 80);
    }
  }
}

uint64_t sub_1007D8464()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1007D8488()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_1007D84AC(void (*a1)(_BYTE *), uint64_t a2)
{
  uint64_t v2;

  sub_1007D7C20(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1007D84B4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1007D84D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011A1440);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1007D8520()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));

  if (*(_QWORD *)(v0 + 48))
    swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1007D8564(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v9 = v1[6];
  v8 = v1[7];
  v10 = (_QWORD *)swift_task_alloc(dword_1011C9AE4);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10005AEE4;
  return sub_1007D7E74(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_1007D85F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  NSURL *v8;
  void *v9;
  void *v10;
  char v11;
  uint64_t v13;

  v1 = v0;
  v2 = type metadata accessor for URL(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v7 = OBJC_IVAR____TtC5Music24ShareLyricsStoryActivity_socialNetwork;
  sub_100415274(*(_BYTE *)(v1 + OBJC_IVAR____TtC5Music24ShareLyricsStoryActivity_socialNetwork), (uint64_t)v5);
  URL._bridgeToObjectiveC()(v8);
  v10 = v9;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  LODWORD(v5) = objc_msgSend(v6, "canOpenURL:", v10);

  if ((_DWORD)v5)
    v11 = sub_1004155A8(*(_BYTE *)(v1 + v7));
  else
    v11 = 0;
  return v11 & 1;
}

uint64_t sub_1007D86E8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100040750(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of AlbumFilter.id.getter, a2);
}

uint64_t sub_1007D86F4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100040750(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of StationFilter.id.getter, a2);
}

uint64_t sub_1007D8700(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;

  v2[2] = a1;
  v2[3] = a2;
  v3 = type metadata accessor for MainActor(0);
  v2[4] = v3;
  v2[5] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v2[6] = v5;
  v2[7] = v6;
  return swift_task_switch(sub_1007D8770, v5, v6);
}

uint64_t sub_1007D8770()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v1 = *(void **)(v0 + 24);
  v2 = objc_allocWithZone((Class)type metadata accessor for JSShareRequest());
  v3 = JSShareRequest.init(modelObject:)(v1);
  *(_QWORD *)(v0 + 64) = v3;
  if (v3)
  {
    v5 = v3;
    v6 = static MainActor.shared.getter(v4);
    *(_QWORD *)(v0 + 72) = v6;
    v7 = swift_task_alloc(32);
    *(_QWORD *)(v0 + 80) = v7;
    *(_QWORD *)(v7 + 16) = v5;
    v8 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
    *(_QWORD *)(v0 + 88) = v8;
    v9 = sub_100007E8C(&qword_10119E460);
    *v8 = v0;
    v8[1] = sub_1007D88A4;
    return withCheckedContinuation<A>(isolation:function:_:)(*(_QWORD *)(v0 + 16), v6, &protocol witness table for MainActor, 0x4C52556572616873, 0xEE00293A726F6628, sub_1007DE09C, v7, v9);
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 16);
    swift_release();
    v12 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1007D88A4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 80);
  swift_task_dealloc(*(_QWORD *)(*v0 + 88));
  swift_release();
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1007D890C, *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_1007D890C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 64);
  swift_release(*(_QWORD *)(v0 + 40));

  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_1007D8944(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  uint64_t v13;

  v4 = sub_100007E8C(&qword_1011C9CD0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = type metadata accessor for JSShareRequestCoordinator();
  swift_allocObject(v7, 32, 7);
  v8 = JSShareRequestCoordinator.init()();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v9 = *(unsigned __int8 *)(v5 + 80);
  v10 = (v9 + 16) & ~v9;
  v11 = swift_allocObject(&unk_1010DCF58, v10 + v6, v9 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v11 + v10, (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  (*(void (**)(uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t))(*(_QWORD *)v8 + 152))(a2, sub_1007DE0B0, v11);
  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_1007D8A54(_QWORD *a1)
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v2 = sub_100007E8C(&qword_10119E460);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    (*(void (**)(__n128))((swift_isaMask & *a1) + 0x110))(v3);
  }
  else
  {
    v6 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  }
  v7 = sub_100007E8C(&qword_1011C9CD0);
  return CheckedContinuation.resume(returning:)(v5, v7);
}

uint64_t sub_1007D8B20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v55;
  uint64_t v56;

  v4[18] = a3;
  v4[19] = a4;
  v4[16] = a1;
  v4[17] = a2;
  v5 = type metadata accessor for Artwork.ImageFormat(0);
  v4[20] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[21] = v6;
  v4[22] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Artwork.CropStyle(0);
  v4[23] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[24] = v8;
  v4[25] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Artwork(0);
  v4[26] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v4[27] = v10;
  v4[28] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  v4[29] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v4[30] = v12;
  v4[31] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_10119FD98);
  v4[32] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v13 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C(&qword_10119FDA0);
  v4[33] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v4[34] = v15;
  v4[35] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Station(0);
  v4[36] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v4[37] = v17;
  v4[38] = swift_task_alloc((*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100007E8C(&qword_10119FDA8);
  v4[39] = v18;
  v19 = *(_QWORD *)(v18 - 8);
  v4[40] = v19;
  v4[41] = swift_task_alloc((*(_QWORD *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100007E8C(&qword_10119FDB0);
  v4[42] = v20;
  v21 = *(_QWORD *)(v20 - 8);
  v4[43] = v21;
  v4[44] = swift_task_alloc((*(_QWORD *)(v21 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100007E8C(&qword_1011A30F0);
  v4[45] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v22 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100007E8C((uint64_t *)&unk_1011ACAD0);
  v4[46] = v23;
  v24 = *(_QWORD *)(v23 - 8);
  v4[47] = v24;
  v4[48] = swift_task_alloc((*(_QWORD *)(v24 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for Playlist(0);
  v4[49] = v25;
  v26 = *(_QWORD *)(v25 - 8);
  v4[50] = v26;
  v4[51] = swift_task_alloc((*(_QWORD *)(v26 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_100007E8C((uint64_t *)&unk_1011D1070);
  v4[52] = v27;
  v28 = *(_QWORD *)(v27 - 8);
  v4[53] = v28;
  v4[54] = swift_task_alloc((*(_QWORD *)(v28 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_100007E8C(&qword_10119FDE8);
  v4[55] = v29;
  v30 = *(_QWORD *)(v29 - 8);
  v4[56] = v30;
  v4[57] = swift_task_alloc((*(_QWORD *)(v30 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_100007E8C(&qword_10119E480);
  v4[58] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v31 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_100007E8C((uint64_t *)&unk_1011B8DA0);
  v4[59] = v32;
  v33 = *(_QWORD *)(v32 - 8);
  v4[60] = v33;
  v4[61] = swift_task_alloc((*(_QWORD *)(v33 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for Song(0);
  v4[62] = v34;
  v35 = *(_QWORD *)(v34 - 8);
  v4[63] = v35;
  v4[64] = swift_task_alloc((*(_QWORD *)(v35 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_100007E8C(&qword_1011A9330);
  v4[65] = v36;
  v37 = *(_QWORD *)(v36 - 8);
  v4[66] = v37;
  v4[67] = swift_task_alloc((*(_QWORD *)(v37 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_100007E8C((uint64_t *)&unk_1011A9320);
  v4[68] = v38;
  v39 = *(_QWORD *)(v38 - 8);
  v4[69] = v39;
  v4[70] = swift_task_alloc((*(_QWORD *)(v39 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_100007E8C(&qword_1011A8FA0);
  v4[71] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v40 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_100007E8C(&qword_1011A3D80);
  v4[72] = v41;
  v42 = *(_QWORD *)(v41 - 8);
  v4[73] = v42;
  v4[74] = swift_task_alloc((*(_QWORD *)(v42 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for Album(0);
  v4[75] = v43;
  v44 = *(_QWORD *)(v43 - 8);
  v4[76] = v44;
  v4[77] = swift_task_alloc((*(_QWORD *)(v44 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_100007E8C(&qword_10119FE48);
  v4[78] = v45;
  v46 = *(_QWORD *)(v45 - 8);
  v4[79] = v46;
  v4[80] = swift_task_alloc((*(_QWORD *)(v46 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_100007E8C((uint64_t *)&unk_1011B6BB0);
  v4[81] = v47;
  v48 = *(_QWORD *)(v47 - 8);
  v4[82] = v48;
  v4[83] = swift_task_alloc((*(_QWORD *)(v48 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011A1440) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[84] = swift_task_alloc(v49);
  v4[85] = swift_task_alloc(v49);
  v50 = type metadata accessor for Logger(0);
  v4[86] = v50;
  v51 = *(_QWORD *)(v50 - 8);
  v4[87] = v51;
  v52 = (*(_QWORD *)(v51 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[88] = swift_task_alloc(v52);
  v4[89] = swift_task_alloc(v52);
  v4[90] = swift_task_alloc(v52);
  v4[91] = swift_task_alloc(v52);
  v4[92] = swift_task_alloc(v52);
  v53 = type metadata accessor for MainActor(0);
  v4[93] = v53;
  v4[94] = static MainActor.shared.getter(v54);
  v55 = dispatch thunk of Actor.unownedExecutor.getter(v53, &protocol witness table for MainActor);
  v4[95] = v55;
  v4[96] = v56;
  return swift_task_switch(sub_1007D9008, v55, v56);
}

uint64_t sub_1007D9008()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  _QWORD *v3;
  uint64_t *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  Class isa;
  id v15;
  NSString v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  NSObject *v27;
  os_log_type_t v28;
  _BOOL4 v29;
  void *v30;
  uint8_t *v31;
  _QWORD *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t);
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t KeyPath;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  __n128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;

  if ((objc_msgSend(*(id *)(v0 + 136), "hasLoadedValuesForPropertySet:", *(_QWORD *)(v0 + 152)) & 1) != 0)
  {
    v1 = dword_1011DB0B4;
    v2 = *(id *)(v0 + 136);
    v3 = (_QWORD *)swift_task_alloc(v1);
    *(_QWORD *)(v0 + 928) = v3;
    *v3 = v0;
    v3[1] = sub_1007DB814;
    return GroupActivitiesManager.Activity.Metadata.init(modelObject:)(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136));
  }
  v5 = (uint64_t *)MPIdentifierSet.Purpose.Options.local.unsafeMutableAddressor();
  MPModelObject.bestIdentifier(for:)(*v5, 1u);
  v6 = *(void **)(v0 + 136);
  if (v7)
  {
    v9 = *(_QWORD *)(v0 + 144);
    v8 = *(_QWORD *)(v0 + 152);
    swift_bridgeObjectRelease();
    v10 = objc_msgSend(objc_allocWithZone((Class)MPModelLibraryRequest), "init");
    *(_QWORD *)(v0 + 776) = v10;
    v11 = sub_100007E8C((uint64_t *)&unk_1011A1470);
    v12 = swift_allocObject(v11, 40, 7);
    *(_OWORD *)(v12 + 16) = xmmword_100EA7A90;
    v13 = objc_msgSend(v6, "identifiers");
    *(_QWORD *)(v12 + 32) = v13;
    specialized Array._endMutation()(v13);
    sub_1007DE020();
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v10, "setAllowedItemIdentifiers:", isa, swift_bridgeObjectRelease().n128_f64[0]);

    v15 = v10;
    v16 = String._bridgeToObjectiveC()();
    objc_msgSend(v15, "setLabel:", v16);

    objc_msgSend(v15, "setItemKind:", v9);
    objc_msgSend(v15, "setItemProperties:", v8);
    v18 = static MainActor.shared.getter(v17);
    *(_QWORD *)(v0 + 784) = v18;
    v19 = swift_task_alloc(32);
    *(_QWORD *)(v0 + 792) = v19;
    *(_QWORD *)(v19 + 16) = v15;
    v20 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
    *(_QWORD *)(v0 + 800) = v20;
    v21 = sub_100007E8C(&qword_1011C9CC0);
    *v20 = v0;
    v20[1] = sub_1007D990C;
    return withCheckedContinuation<A>(isolation:function:_:)(v0 + 120, v18, &protocol witness table for MainActor, 0xD000000000000026, 0x8000000100E45D40, sub_1007DE05C, v19, v21);
  }
  v22 = *(_QWORD *)(v0 + 736);
  v23 = *(_QWORD *)(v0 + 696);
  v24 = *(_QWORD *)(v0 + 688);
  v25 = Logger.groupActivities.unsafeMutableAddressor();
  *(_QWORD *)(v0 + 824) = v25;
  v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16);
  *(_QWORD *)(v0 + 832) = v26;
  v26(v22, v25, v24);
  v27 = Logger.logObject.getter(v6);
  v28 = static os_log_type_t.default.getter();
  v29 = os_log_type_enabled(v27, v28);
  v30 = *(void **)(v0 + 136);
  if (v29)
  {
    v31 = (uint8_t *)swift_slowAlloc(12, -1);
    v32 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v31 = 138543362;
    *(_QWORD *)(v0 + 112) = v30;
    v33 = v30;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 112, v0 + 120);
    *v32 = v30;

    _os_log_impl((void *)&_mh_execute_header, v27, v28, "Fetching metadata for modelObject=%{public}@", v31, 0xCu);
    v34 = sub_100007E8C((uint64_t *)&unk_1011A33E0);
    swift_arrayDestroy(v32, 1, v34);
    swift_slowDealloc(v32, -1, -1);
    swift_slowDealloc(v31, -1, -1);
  }
  else
  {

  }
  v35 = *(_QWORD *)(v0 + 736);
  v36 = *(_QWORD *)(v0 + 688);
  v37 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 696) + 8);
  *(_QWORD *)(v0 + 840) = v37;
  v37(v35, v36);
  v38 = (uint64_t *)MPIdentifierSet.Purpose.Options.catalog.unsafeMutableAddressor();
  v39 = MPModelObject.bestIdentifier(for:)(*v38, 1u);
  if (!v40)
  {
    v49 = *(_QWORD *)(v0 + 232);
    v50 = *(_QWORD *)(v0 + 240);
    v51 = *(_QWORD *)(v0 + 128);
    v52 = swift_release();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v50 + 56))(v51, 1, 1, v49, v52);
LABEL_12:
    v53 = *(_QWORD *)(v0 + 728);
    v54 = *(_QWORD *)(v0 + 720);
    v55 = *(_QWORD *)(v0 + 712);
    v56 = *(_QWORD *)(v0 + 704);
    v57 = *(_QWORD *)(v0 + 680);
    v58 = *(_QWORD *)(v0 + 672);
    v59 = *(_QWORD *)(v0 + 664);
    v60 = *(_QWORD *)(v0 + 640);
    v61 = *(_QWORD *)(v0 + 616);
    v81 = *(_QWORD *)(v0 + 592);
    v82 = *(_QWORD *)(v0 + 568);
    v83 = *(_QWORD *)(v0 + 560);
    v84 = *(_QWORD *)(v0 + 536);
    v85 = *(_QWORD *)(v0 + 512);
    v86 = *(_QWORD *)(v0 + 488);
    v87 = *(_QWORD *)(v0 + 464);
    v88 = *(_QWORD *)(v0 + 456);
    v89 = *(_QWORD *)(v0 + 432);
    v90 = *(_QWORD *)(v0 + 408);
    v91 = *(_QWORD *)(v0 + 384);
    v92 = *(_QWORD *)(v0 + 360);
    v93 = *(_QWORD *)(v0 + 352);
    v94 = *(_QWORD *)(v0 + 328);
    v95 = *(_QWORD *)(v0 + 304);
    v96 = *(_QWORD *)(v0 + 280);
    v97 = *(_QWORD *)(v0 + 256);
    v98 = *(_QWORD *)(v0 + 248);
    v99 = *(_QWORD *)(v0 + 224);
    v100 = *(_QWORD *)(v0 + 200);
    v101 = *(_QWORD *)(v0 + 176);
    swift_task_dealloc(*(_QWORD *)(v0 + 736));
    swift_task_dealloc(v53);
    swift_task_dealloc(v54);
    swift_task_dealloc(v55);
    swift_task_dealloc(v56);
    swift_task_dealloc(v57);
    swift_task_dealloc(v58);
    swift_task_dealloc(v59);
    swift_task_dealloc(v60);
    swift_task_dealloc(v61);
    swift_task_dealloc(v81);
    swift_task_dealloc(v82);
    swift_task_dealloc(v83);
    swift_task_dealloc(v84);
    swift_task_dealloc(v85);
    swift_task_dealloc(v86);
    swift_task_dealloc(v87);
    swift_task_dealloc(v88);
    swift_task_dealloc(v89);
    swift_task_dealloc(v90);
    swift_task_dealloc(v91);
    swift_task_dealloc(v92);
    swift_task_dealloc(v93);
    swift_task_dealloc(v94);
    swift_task_dealloc(v95);
    swift_task_dealloc(v96);
    swift_task_dealloc(v97);
    swift_task_dealloc(v98);
    swift_task_dealloc(v99);
    swift_task_dealloc(v100);
    swift_task_dealloc(v101);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v41 = *(_QWORD *)(v0 + 136);
  v42 = MusicItemID.init(rawValue:)(v39);
  v44 = v43;
  objc_opt_self(MPModelAlbum);
  if (swift_dynamicCastObjCClass(v41))
  {
    v45 = *(_QWORD *)(v0 + 600);
    KeyPath = swift_getKeyPath(&unk_100ED0B30);
    *(_QWORD *)(v0 + 32) = v42;
    *(_QWORD *)(v0 + 40) = v44;
    v47 = sub_100048748(&qword_10119F200, (uint64_t (*)(uint64_t))&type metadata accessor for Album, (uint64_t)&protocol conformance descriptor for Album);
    MusicCatalogResourceRequest.init<A>(matching:equalTo:)(KeyPath, v0 + 32, v45, &protocol witness table for Album, v47);
    v48 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
    *(_QWORD *)(v0 + 848) = v48;
    *v48 = v0;
    v48[1] = sub_1007D9E74;
    return MusicCatalogResourceRequest.response()(*(_QWORD *)(v0 + 640), *(_QWORD *)(v0 + 648));
  }
  v62 = *(_QWORD *)(v0 + 136);
  objc_opt_self(MPModelSong);
  if (swift_dynamicCastObjCClass(v62))
  {
    v63 = *(_QWORD *)(v0 + 496);
    v64 = swift_getKeyPath(&unk_100ED0B08);
    *(_QWORD *)(v0 + 64) = v42;
    *(_QWORD *)(v0 + 72) = v44;
    v65 = sub_100048748(&qword_10119EB78, (uint64_t (*)(uint64_t))&type metadata accessor for Song, (uint64_t)&protocol conformance descriptor for Song);
    MusicCatalogResourceRequest.init<A>(matching:equalTo:)(v64, v0 + 64, v63, &protocol witness table for Song, v65);
    v66 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
    *(_QWORD *)(v0 + 864) = v66;
    *v66 = v0;
    v66[1] = sub_1007DA408;
    return MusicCatalogResourceRequest.response()(*(_QWORD *)(v0 + 536), *(_QWORD *)(v0 + 544));
  }
  v67 = *(_QWORD *)(v0 + 136);
  objc_opt_self(MPModelPlaylist);
  if (swift_dynamicCastObjCClass(v67))
  {
    v68 = *(_QWORD *)(v0 + 392);
    v69 = swift_getKeyPath(&unk_100ED0AE0);
    *(_QWORD *)(v0 + 48) = v42;
    *(_QWORD *)(v0 + 56) = v44;
    v70 = sub_100048748((unint64_t *)&unk_1011D0D80, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&protocol conformance descriptor for Playlist);
    MusicCatalogResourceRequest.init<A>(matching:equalTo:)(v69, v0 + 48, v68, &protocol witness table for Playlist, v70);
    v71 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
    *(_QWORD *)(v0 + 880) = v71;
    *v71 = v0;
    v71[1] = sub_1007DA98C;
    return MusicCatalogResourceRequest.response()(*(_QWORD *)(v0 + 432), *(_QWORD *)(v0 + 440));
  }
  v72 = *(_QWORD *)(v0 + 136);
  objc_opt_self(MPModelRadioStation);
  if (!swift_dynamicCastObjCClass(v72))
  {
    v77 = *(_QWORD *)(v0 + 232);
    v78 = *(_QWORD *)(v0 + 240);
    v79 = *(_QWORD *)(v0 + 128);
    swift_release();
    v80 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v78 + 56))(v79, 1, 1, v77, v80);
    goto LABEL_12;
  }
  v73 = *(_QWORD *)(v0 + 288);
  v74 = swift_getKeyPath(&unk_100ED0AB8);
  *(_QWORD *)(v0 + 16) = v42;
  *(_QWORD *)(v0 + 24) = v44;
  v75 = sub_100048748(&qword_10119FEC0, (uint64_t (*)(uint64_t))&type metadata accessor for Station, (uint64_t)&protocol conformance descriptor for Station);
  MusicCatalogResourceRequest.init<A>(matching:equalTo:)(v74, v0 + 16, v73, &protocol witness table for Station, v75);
  v76 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
  *(_QWORD *)(v0 + 896) = v76;
  *v76 = v0;
  v76[1] = sub_1007DAF18;
  return MusicCatalogResourceRequest.response()(*(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 336));
}

uint64_t sub_1007D990C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 792);
  swift_task_dealloc(*(_QWORD *)(*v0 + 800));
  swift_release();
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1007D997C, *(_QWORD *)(v1 + 760), *(_QWORD *)(v1 + 768));
}

uint64_t sub_1007D997C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v1 = *(void **)(v0 + 120);
  *(_QWORD *)(v0 + 808) = v1;
  if (v1)
  {
    v2 = dword_1011DB0B4;
    v3 = v1;
    v4 = (_QWORD *)swift_task_alloc(v2);
    *(_QWORD *)(v0 + 816) = v4;
    *v4 = v0;
    v4[1] = sub_1007D9C00;
    return GroupActivitiesManager.Activity.Metadata.init(modelObject:)(*(_QWORD *)(v0 + 128), (uint64_t)v3);
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 232);
    v7 = *(_QWORD *)(v0 + 240);
    v8 = *(_QWORD *)(v0 + 128);

    v9 = swift_release();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56))(v8, 1, 1, v6, v9);
    v10 = *(_QWORD *)(v0 + 728);
    v11 = *(_QWORD *)(v0 + 720);
    v12 = *(_QWORD *)(v0 + 712);
    v13 = *(_QWORD *)(v0 + 704);
    v14 = *(_QWORD *)(v0 + 680);
    v15 = *(_QWORD *)(v0 + 672);
    v16 = *(_QWORD *)(v0 + 664);
    v17 = *(_QWORD *)(v0 + 640);
    v18 = *(_QWORD *)(v0 + 616);
    v19 = *(_QWORD *)(v0 + 592);
    v20 = *(_QWORD *)(v0 + 568);
    v21 = *(_QWORD *)(v0 + 560);
    v22 = *(_QWORD *)(v0 + 536);
    v23 = *(_QWORD *)(v0 + 512);
    v24 = *(_QWORD *)(v0 + 488);
    v25 = *(_QWORD *)(v0 + 464);
    v26 = *(_QWORD *)(v0 + 456);
    v27 = *(_QWORD *)(v0 + 432);
    v28 = *(_QWORD *)(v0 + 408);
    v29 = *(_QWORD *)(v0 + 384);
    v30 = *(_QWORD *)(v0 + 360);
    v31 = *(_QWORD *)(v0 + 352);
    v32 = *(_QWORD *)(v0 + 328);
    v33 = *(_QWORD *)(v0 + 304);
    v34 = *(_QWORD *)(v0 + 280);
    v35 = *(_QWORD *)(v0 + 256);
    v36 = *(_QWORD *)(v0 + 248);
    v37 = *(_QWORD *)(v0 + 224);
    v38 = *(_QWORD *)(v0 + 200);
    v39 = *(_QWORD *)(v0 + 176);
    swift_task_dealloc(*(_QWORD *)(v0 + 736));
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1007D9C00()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 816));
  return swift_task_switch(sub_1007D9C50, *(_QWORD *)(v1 + 760), *(_QWORD *)(v1 + 768));
}

uint64_t sub_1007D9C50()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v1 = *(void **)(v0 + 808);
  v2 = *(_QWORD *)(v0 + 752);
  v3 = *(_QWORD *)(v0 + 232);
  v4 = *(_QWORD *)(v0 + 240);
  v5 = *(_QWORD *)(v0 + 128);

  swift_release(v2);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v5, 0, 1, v3);
  v6 = *(_QWORD *)(v0 + 728);
  v7 = *(_QWORD *)(v0 + 720);
  v8 = *(_QWORD *)(v0 + 712);
  v9 = *(_QWORD *)(v0 + 704);
  v10 = *(_QWORD *)(v0 + 680);
  v11 = *(_QWORD *)(v0 + 672);
  v12 = *(_QWORD *)(v0 + 664);
  v13 = *(_QWORD *)(v0 + 640);
  v14 = *(_QWORD *)(v0 + 616);
  v16 = *(_QWORD *)(v0 + 592);
  v17 = *(_QWORD *)(v0 + 568);
  v18 = *(_QWORD *)(v0 + 560);
  v19 = *(_QWORD *)(v0 + 536);
  v20 = *(_QWORD *)(v0 + 512);
  v21 = *(_QWORD *)(v0 + 488);
  v22 = *(_QWORD *)(v0 + 464);
  v23 = *(_QWORD *)(v0 + 456);
  v24 = *(_QWORD *)(v0 + 432);
  v25 = *(_QWORD *)(v0 + 408);
  v26 = *(_QWORD *)(v0 + 384);
  v27 = *(_QWORD *)(v0 + 360);
  v28 = *(_QWORD *)(v0 + 352);
  v29 = *(_QWORD *)(v0 + 328);
  v30 = *(_QWORD *)(v0 + 304);
  v31 = *(_QWORD *)(v0 + 280);
  v32 = *(_QWORD *)(v0 + 256);
  v33 = *(_QWORD *)(v0 + 248);
  v34 = *(_QWORD *)(v0 + 224);
  v35 = *(_QWORD *)(v0 + 200);
  v36 = *(_QWORD *)(v0 + 176);
  swift_task_dealloc(*(_QWORD *)(v0 + 736));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1007D9E74()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 848);
  *(_QWORD *)(*v1 + 856) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1007DBA70;
  else
    v4 = sub_1007D9ED8;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 760), *(_QWORD *)(v2 + 768));
}

uint64_t sub_1007D9ED8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t result;
  uint64_t v46;
  uint64_t v47;
  double *v48;
  double v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;

  v1 = *(_QWORD *)(v0 + 608);
  v2 = *(_QWORD *)(v0 + 600);
  v3 = *(_QWORD *)(v0 + 592);
  v4 = *(_QWORD *)(v0 + 584);
  v5 = *(_QWORD *)(v0 + 576);
  v6 = *(_QWORD *)(v0 + 568);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 624));
  sub_10031E1D4(v6);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v6, 1, v2);
  v81 = *(_QWORD *)(v0 + 664);
  v8 = *(_QWORD *)(v0 + 656);
  v9 = *(_QWORD *)(v0 + 648);
  v10 = *(_QWORD *)(v0 + 640);
  v11 = *(_QWORD *)(v0 + 632);
  v12 = *(_QWORD *)(v0 + 624);
  if (v7 == 1)
  {
    v13 = *(_QWORD *)(v0 + 568);
    v15 = *(_QWORD *)(v0 + 232);
    v14 = *(_QWORD *)(v0 + 240);
    v16 = *(_QWORD *)(v0 + 128);
    v17 = swift_release();
    (*(void (**)(uint64_t, uint64_t, __n128))(v11 + 8))(v10, v12, v17);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v81, v9);
    sub_10004FF60(v13, &qword_1011A8FA0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v16, 1, 1, v15);
LABEL_5:
    v36 = *(_QWORD *)(v0 + 728);
    v37 = *(_QWORD *)(v0 + 720);
    v38 = *(_QWORD *)(v0 + 712);
    v39 = *(_QWORD *)(v0 + 704);
    v40 = *(_QWORD *)(v0 + 680);
    v41 = *(_QWORD *)(v0 + 672);
    v42 = *(_QWORD *)(v0 + 664);
    v43 = *(_QWORD *)(v0 + 640);
    v44 = *(_QWORD *)(v0 + 616);
    v57 = *(_QWORD *)(v0 + 592);
    v58 = *(_QWORD *)(v0 + 568);
    v59 = *(_QWORD *)(v0 + 560);
    v60 = *(_QWORD *)(v0 + 536);
    v61 = *(_QWORD *)(v0 + 512);
    v62 = *(_QWORD *)(v0 + 488);
    v63 = *(_QWORD *)(v0 + 464);
    v64 = *(_QWORD *)(v0 + 456);
    v65 = *(_QWORD *)(v0 + 432);
    v66 = *(_QWORD *)(v0 + 408);
    v67 = *(_QWORD *)(v0 + 384);
    v68 = *(_QWORD *)(v0 + 360);
    v69 = *(_QWORD *)(v0 + 352);
    v70 = *(_QWORD *)(v0 + 328);
    v71 = *(_QWORD *)(v0 + 304);
    v72 = *(_QWORD *)(v0 + 280);
    v74 = *(_QWORD *)(v0 + 256);
    v76 = *(_QWORD *)(v0 + 248);
    v78 = *(_QWORD *)(v0 + 224);
    v80 = *(_QWORD *)(v0 + 200);
    v82 = *(_QWORD *)(v0 + 176);
    swift_task_dealloc(*(_QWORD *)(v0 + 736));
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    swift_task_dealloc(v44);
    swift_task_dealloc(v57);
    swift_task_dealloc(v58);
    swift_task_dealloc(v59);
    swift_task_dealloc(v60);
    swift_task_dealloc(v61);
    swift_task_dealloc(v62);
    swift_task_dealloc(v63);
    swift_task_dealloc(v64);
    swift_task_dealloc(v65);
    swift_task_dealloc(v66);
    swift_task_dealloc(v67);
    swift_task_dealloc(v68);
    swift_task_dealloc(v69);
    swift_task_dealloc(v70);
    swift_task_dealloc(v71);
    swift_task_dealloc(v72);
    swift_task_dealloc(v74);
    swift_task_dealloc(v76);
    swift_task_dealloc(v78);
    swift_task_dealloc(v80);
    swift_task_dealloc(v82);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v18 = *(_QWORD *)(v0 + 616);
  v19 = *(_QWORD *)(v0 + 608);
  v20 = *(_QWORD *)(v0 + 600);
  v21 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v19 + 32))(v18, *(_QWORD *)(v0 + 568), v20);
  v22 = Album.title.getter(v21);
  v73 = v23;
  v75 = v22;
  v24 = Album.artistName.getter(v22);
  v77 = v25;
  v79 = v24;
  Album.artwork.getter(v24);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v81, v9);
  v26 = *(_QWORD *)(v0 + 680);
  v27 = *(_QWORD *)(v0 + 672);
  v28 = *(uint64_t **)(v0 + 248);
  v29 = *(_QWORD *)(v0 + 208);
  v30 = *(_QWORD *)(v0 + 216);
  GroupActivitiesManager.Activity.Metadata.init()((uint64_t)v28);
  swift_bridgeObjectRelease();
  *v28 = v75;
  v28[1] = v73;
  swift_bridgeObjectRelease();
  v28[2] = v79;
  v28[3] = v77;
  sub_10013EF64(v26, v27);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v27, 1, v29) == 1)
  {
    v31 = *(_QWORD *)(v0 + 672);
    sub_10004FF60(*(_QWORD *)(v0 + 680), &qword_1011A1440);
    swift_release();
    sub_10004FF60(v31, &qword_1011A1440);
    v33 = *(_QWORD *)(v0 + 240);
    v32 = *(_QWORD *)(v0 + 248);
    v34 = *(_QWORD *)(v0 + 232);
    v35 = *(_QWORD *)(v0 + 128);
    sub_1007DDF8C(v32, v35);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v33 + 56))(v35, 0, 1, v34);
    sub_1007DDFD0(v32);
    goto LABEL_5;
  }
  v46 = *(_QWORD *)(v0 + 248);
  v47 = *(_QWORD *)(v0 + 232);
  result = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 216) + 32))(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 672), *(_QWORD *)(v0 + 208));
  v48 = (double *)(v46 + *(int *)(v47 + 32));
  v49 = *v48;
  if ((~*(_QWORD *)v48 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v49 <= -9.22337204e18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v49 >= 9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v50 = v48[1];
  if ((~*(_QWORD *)&v50 & 0x7FF0000000000000) == 0)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v50 <= -9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v50 < 9.22337204e18)
  {
    v51 = (uint64_t)v49;
    v53 = *(_QWORD *)(v0 + 168);
    v52 = *(_QWORD *)(v0 + 176);
    v54 = *(_QWORD *)(v0 + 160);
    v55 = (uint64_t)v50;
    static Artwork.CropStyle.sourceSize.getter(result);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v53 + 104))(v52, enum case for Artwork.ImageFormat.jpeg(_:), v54);
    v56 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to Artwork.image(width:height:cropStyle:format:)
                                     + 1));
    *(_QWORD *)(v0 + 912) = v56;
    *v56 = v0;
    v56[1] = sub_1007DB4A4;
    return Artwork.image(width:height:cropStyle:format:)(v51, v55, *(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 176));
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1007DA408()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 864);
  *(_QWORD *)(*v1 + 872) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1007DBE08;
  else
    v4 = sub_1007DA46C;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 760), *(_QWORD *)(v2 + 768));
}

uint64_t sub_1007DA46C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t result;
  uint64_t v46;
  uint64_t v47;
  double *v48;
  double v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;

  v1 = *(_QWORD *)(v0 + 496);
  v2 = *(_QWORD *)(v0 + 504);
  v4 = *(_QWORD *)(v0 + 480);
  v3 = *(_QWORD *)(v0 + 488);
  v6 = *(_QWORD *)(v0 + 464);
  v5 = *(_QWORD *)(v0 + 472);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 520));
  sub_10031E3E8(v6);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v6, 1, v1);
  v81 = *(_QWORD *)(v0 + 560);
  v8 = *(_QWORD *)(v0 + 552);
  v9 = *(_QWORD *)(v0 + 544);
  v10 = *(_QWORD *)(v0 + 536);
  v11 = *(_QWORD *)(v0 + 528);
  v12 = *(_QWORD *)(v0 + 520);
  if (v7 == 1)
  {
    v13 = *(_QWORD *)(v0 + 464);
    v15 = *(_QWORD *)(v0 + 232);
    v14 = *(_QWORD *)(v0 + 240);
    v16 = *(_QWORD *)(v0 + 128);
    v17 = swift_release();
    (*(void (**)(uint64_t, uint64_t, __n128))(v11 + 8))(v10, v12, v17);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v81, v9);
    sub_10004FF60(v13, &qword_10119E480);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v16, 1, 1, v15);
LABEL_5:
    v36 = *(_QWORD *)(v0 + 728);
    v37 = *(_QWORD *)(v0 + 720);
    v38 = *(_QWORD *)(v0 + 712);
    v39 = *(_QWORD *)(v0 + 704);
    v40 = *(_QWORD *)(v0 + 680);
    v41 = *(_QWORD *)(v0 + 672);
    v42 = *(_QWORD *)(v0 + 664);
    v43 = *(_QWORD *)(v0 + 640);
    v44 = *(_QWORD *)(v0 + 616);
    v57 = *(_QWORD *)(v0 + 592);
    v58 = *(_QWORD *)(v0 + 568);
    v59 = *(_QWORD *)(v0 + 560);
    v60 = *(_QWORD *)(v0 + 536);
    v61 = *(_QWORD *)(v0 + 512);
    v62 = *(_QWORD *)(v0 + 488);
    v63 = *(_QWORD *)(v0 + 464);
    v64 = *(_QWORD *)(v0 + 456);
    v65 = *(_QWORD *)(v0 + 432);
    v66 = *(_QWORD *)(v0 + 408);
    v67 = *(_QWORD *)(v0 + 384);
    v68 = *(_QWORD *)(v0 + 360);
    v69 = *(_QWORD *)(v0 + 352);
    v70 = *(_QWORD *)(v0 + 328);
    v71 = *(_QWORD *)(v0 + 304);
    v72 = *(_QWORD *)(v0 + 280);
    v74 = *(_QWORD *)(v0 + 256);
    v76 = *(_QWORD *)(v0 + 248);
    v78 = *(_QWORD *)(v0 + 224);
    v80 = *(_QWORD *)(v0 + 200);
    v82 = *(_QWORD *)(v0 + 176);
    swift_task_dealloc(*(_QWORD *)(v0 + 736));
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    swift_task_dealloc(v44);
    swift_task_dealloc(v57);
    swift_task_dealloc(v58);
    swift_task_dealloc(v59);
    swift_task_dealloc(v60);
    swift_task_dealloc(v61);
    swift_task_dealloc(v62);
    swift_task_dealloc(v63);
    swift_task_dealloc(v64);
    swift_task_dealloc(v65);
    swift_task_dealloc(v66);
    swift_task_dealloc(v67);
    swift_task_dealloc(v68);
    swift_task_dealloc(v69);
    swift_task_dealloc(v70);
    swift_task_dealloc(v71);
    swift_task_dealloc(v72);
    swift_task_dealloc(v74);
    swift_task_dealloc(v76);
    swift_task_dealloc(v78);
    swift_task_dealloc(v80);
    swift_task_dealloc(v82);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v18 = *(_QWORD *)(v0 + 504);
  v19 = *(_QWORD *)(v0 + 512);
  v20 = *(_QWORD *)(v0 + 496);
  v21 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v18 + 32))(v19, *(_QWORD *)(v0 + 464), v20);
  v22 = Song.title.getter(v21);
  v73 = v23;
  v75 = v22;
  v24 = Song.artistName.getter(v22);
  v77 = v25;
  v79 = v24;
  Song.artwork.getter(v24);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v19, v20);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v81, v9);
  v26 = *(_QWORD *)(v0 + 680);
  v27 = *(_QWORD *)(v0 + 672);
  v28 = *(uint64_t **)(v0 + 248);
  v29 = *(_QWORD *)(v0 + 208);
  v30 = *(_QWORD *)(v0 + 216);
  GroupActivitiesManager.Activity.Metadata.init()((uint64_t)v28);
  swift_bridgeObjectRelease();
  *v28 = v75;
  v28[1] = v73;
  swift_bridgeObjectRelease();
  v28[2] = v79;
  v28[3] = v77;
  sub_10013EF64(v26, v27);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v27, 1, v29) == 1)
  {
    v31 = *(_QWORD *)(v0 + 672);
    sub_10004FF60(*(_QWORD *)(v0 + 680), &qword_1011A1440);
    swift_release();
    sub_10004FF60(v31, &qword_1011A1440);
    v33 = *(_QWORD *)(v0 + 240);
    v32 = *(_QWORD *)(v0 + 248);
    v34 = *(_QWORD *)(v0 + 232);
    v35 = *(_QWORD *)(v0 + 128);
    sub_1007DDF8C(v32, v35);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v33 + 56))(v35, 0, 1, v34);
    sub_1007DDFD0(v32);
    goto LABEL_5;
  }
  v46 = *(_QWORD *)(v0 + 248);
  v47 = *(_QWORD *)(v0 + 232);
  result = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 216) + 32))(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 672), *(_QWORD *)(v0 + 208));
  v48 = (double *)(v46 + *(int *)(v47 + 32));
  v49 = *v48;
  if ((~*(_QWORD *)v48 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v49 <= -9.22337204e18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v49 >= 9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v50 = v48[1];
  if ((~*(_QWORD *)&v50 & 0x7FF0000000000000) == 0)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v50 <= -9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v50 < 9.22337204e18)
  {
    v51 = (uint64_t)v49;
    v53 = *(_QWORD *)(v0 + 168);
    v52 = *(_QWORD *)(v0 + 176);
    v54 = *(_QWORD *)(v0 + 160);
    v55 = (uint64_t)v50;
    static Artwork.CropStyle.sourceSize.getter(result);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v53 + 104))(v52, enum case for Artwork.ImageFormat.jpeg(_:), v54);
    v56 = (_QWORD *)swift_task_alloc(async function pointer to Artwork.image(width:height:cropStyle:format:)[1]);
    *(_QWORD *)(v0 + 912) = v56;
    *v56 = v0;
    v56[1] = sub_1007DB4A4;
    return Artwork.image(width:height:cropStyle:format:)(v51, v55, *(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 176));
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1007DA98C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 880);
  *(_QWORD *)(*v1 + 888) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1007DC1A0;
  else
    v4 = sub_1007DA9F0;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 760), *(_QWORD *)(v2 + 768));
}

uint64_t sub_1007DA9F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t result;
  uint64_t v48;
  uint64_t v49;
  double *v50;
  double v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v1 = *(_QWORD *)(v0 + 392);
  v2 = *(_QWORD *)(v0 + 400);
  v4 = *(_QWORD *)(v0 + 376);
  v3 = *(_QWORD *)(v0 + 384);
  v6 = *(_QWORD *)(v0 + 360);
  v5 = *(_QWORD *)(v0 + 368);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 416));
  sub_10031E394(v6);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v6, 1, v1);
  v8 = *(_QWORD *)(v0 + 448);
  v9 = *(_QWORD *)(v0 + 456);
  v10 = *(_QWORD *)(v0 + 432);
  v82 = *(_QWORD *)(v0 + 440);
  v12 = *(_QWORD *)(v0 + 416);
  v11 = *(_QWORD *)(v0 + 424);
  if (v7 == 1)
  {
    v13 = *(_QWORD *)(v0 + 360);
    v15 = *(_QWORD *)(v0 + 232);
    v14 = *(_QWORD *)(v0 + 240);
    v16 = *(_QWORD *)(v0 + 128);
    v17 = swift_release();
    (*(void (**)(uint64_t, uint64_t, __n128))(v11 + 8))(v10, v12, v17);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v9, v82);
    sub_10004FF60(v13, &qword_1011A30F0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v16, 1, 1, v15);
LABEL_11:
    v38 = *(_QWORD *)(v0 + 728);
    v39 = *(_QWORD *)(v0 + 720);
    v40 = *(_QWORD *)(v0 + 712);
    v41 = *(_QWORD *)(v0 + 704);
    v42 = *(_QWORD *)(v0 + 680);
    v43 = *(_QWORD *)(v0 + 672);
    v44 = *(_QWORD *)(v0 + 664);
    v45 = *(_QWORD *)(v0 + 640);
    v46 = *(_QWORD *)(v0 + 616);
    v59 = *(_QWORD *)(v0 + 592);
    v60 = *(_QWORD *)(v0 + 568);
    v61 = *(_QWORD *)(v0 + 560);
    v62 = *(_QWORD *)(v0 + 536);
    v63 = *(_QWORD *)(v0 + 512);
    v64 = *(_QWORD *)(v0 + 488);
    v65 = *(_QWORD *)(v0 + 464);
    v66 = *(_QWORD *)(v0 + 456);
    v67 = *(_QWORD *)(v0 + 432);
    v68 = *(_QWORD *)(v0 + 408);
    v69 = *(_QWORD *)(v0 + 384);
    v70 = *(_QWORD *)(v0 + 360);
    v71 = *(_QWORD *)(v0 + 352);
    v72 = *(_QWORD *)(v0 + 328);
    v73 = *(_QWORD *)(v0 + 304);
    v74 = *(_QWORD *)(v0 + 280);
    v75 = *(_QWORD *)(v0 + 256);
    v77 = *(_QWORD *)(v0 + 248);
    v79 = *(_QWORD *)(v0 + 224);
    v81 = *(_QWORD *)(v0 + 200);
    v83 = *(_QWORD *)(v0 + 176);
    swift_task_dealloc(*(_QWORD *)(v0 + 736));
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    swift_task_dealloc(v44);
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
    swift_task_dealloc(v59);
    swift_task_dealloc(v60);
    swift_task_dealloc(v61);
    swift_task_dealloc(v62);
    swift_task_dealloc(v63);
    swift_task_dealloc(v64);
    swift_task_dealloc(v65);
    swift_task_dealloc(v66);
    swift_task_dealloc(v67);
    swift_task_dealloc(v68);
    swift_task_dealloc(v69);
    swift_task_dealloc(v70);
    swift_task_dealloc(v71);
    swift_task_dealloc(v72);
    swift_task_dealloc(v73);
    swift_task_dealloc(v74);
    swift_task_dealloc(v75);
    swift_task_dealloc(v77);
    swift_task_dealloc(v79);
    swift_task_dealloc(v81);
    swift_task_dealloc(v83);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v19 = *(_QWORD *)(v0 + 400);
  v18 = *(_QWORD *)(v0 + 408);
  v20 = *(_QWORD *)(v0 + 392);
  v21.n128_f64[0] = (*(double (**)(uint64_t, _QWORD, uint64_t))(v19 + 32))(v18, *(_QWORD *)(v0 + 360), v20);
  v22 = Playlist.name.getter(v21);
  v78 = v23;
  v80 = v22;
  v76 = Playlist.curatorName.getter(v22);
  v25 = v24;
  Playlist.artwork.getter(v76);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v9, v82);
  v26 = *(_QWORD *)(v0 + 680);
  v27 = *(_QWORD *)(v0 + 672);
  v28 = *(uint64_t **)(v0 + 248);
  v29 = *(_QWORD *)(v0 + 208);
  v30 = *(_QWORD *)(v0 + 216);
  GroupActivitiesManager.Activity.Metadata.init()((uint64_t)v28);
  swift_bridgeObjectRelease();
  if (v25)
    v31 = v76;
  else
    v31 = 0;
  *v28 = v80;
  v28[1] = v78;
  if (v25)
    v32 = v25;
  else
    v32 = 0xE000000000000000;
  swift_bridgeObjectRelease();
  v28[2] = v31;
  v28[3] = v32;
  sub_10013EF64(v26, v27);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v27, 1, v29) == 1)
  {
    v33 = *(_QWORD *)(v0 + 672);
    sub_10004FF60(*(_QWORD *)(v0 + 680), &qword_1011A1440);
    swift_release();
    sub_10004FF60(v33, &qword_1011A1440);
    v35 = *(_QWORD *)(v0 + 240);
    v34 = *(_QWORD *)(v0 + 248);
    v36 = *(_QWORD *)(v0 + 232);
    v37 = *(_QWORD *)(v0 + 128);
    sub_1007DDF8C(v34, v37);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v35 + 56))(v37, 0, 1, v36);
    sub_1007DDFD0(v34);
    goto LABEL_11;
  }
  v48 = *(_QWORD *)(v0 + 248);
  v49 = *(_QWORD *)(v0 + 232);
  result = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 216) + 32))(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 672), *(_QWORD *)(v0 + 208));
  v50 = (double *)(v48 + *(int *)(v49 + 32));
  v51 = *v50;
  if ((~*(_QWORD *)v50 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (v51 <= -9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v51 >= 9.22337204e18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v52 = v50[1];
  if ((~*(_QWORD *)&v52 & 0x7FF0000000000000) == 0)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v52 <= -9.22337204e18)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v52 < 9.22337204e18)
  {
    v53 = (uint64_t)v51;
    v55 = *(_QWORD *)(v0 + 168);
    v54 = *(_QWORD *)(v0 + 176);
    v56 = *(_QWORD *)(v0 + 160);
    v57 = (uint64_t)v52;
    static Artwork.CropStyle.sourceSize.getter(result);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v55 + 104))(v54, enum case for Artwork.ImageFormat.jpeg(_:), v56);
    v58 = (_QWORD *)swift_task_alloc(async function pointer to Artwork.image(width:height:cropStyle:format:)[1]);
    *(_QWORD *)(v0 + 912) = v58;
    *v58 = v0;
    v58[1] = sub_1007DB4A4;
    return Artwork.image(width:height:cropStyle:format:)(v53, v57, *(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 176));
  }
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_1007DAF18()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 896);
  *(_QWORD *)(*v1 + 904) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1007DC534;
  else
    v4 = sub_1007DAF7C;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 760), *(_QWORD *)(v2 + 768));
}

uint64_t sub_1007DAF7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t result;
  uint64_t v48;
  uint64_t v49;
  double *v50;
  double v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v1 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 296);
  v4 = *(_QWORD *)(v0 + 272);
  v3 = *(_QWORD *)(v0 + 280);
  v6 = *(_QWORD *)(v0 + 256);
  v5 = *(_QWORD *)(v0 + 264);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 312));
  sub_10031E404(v6);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v6, 1, v1);
  v8 = *(_QWORD *)(v0 + 344);
  v9 = *(_QWORD *)(v0 + 352);
  v10 = *(_QWORD *)(v0 + 328);
  v82 = *(_QWORD *)(v0 + 336);
  v12 = *(_QWORD *)(v0 + 312);
  v11 = *(_QWORD *)(v0 + 320);
  if (v7 == 1)
  {
    v13 = *(_QWORD *)(v0 + 256);
    v15 = *(_QWORD *)(v0 + 232);
    v14 = *(_QWORD *)(v0 + 240);
    v16 = *(_QWORD *)(v0 + 128);
    v17 = swift_release();
    (*(void (**)(uint64_t, uint64_t, __n128))(v11 + 8))(v10, v12, v17);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v9, v82);
    sub_10004FF60(v13, &qword_10119FD98);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v16, 1, 1, v15);
LABEL_11:
    v38 = *(_QWORD *)(v0 + 728);
    v39 = *(_QWORD *)(v0 + 720);
    v40 = *(_QWORD *)(v0 + 712);
    v41 = *(_QWORD *)(v0 + 704);
    v42 = *(_QWORD *)(v0 + 680);
    v43 = *(_QWORD *)(v0 + 672);
    v44 = *(_QWORD *)(v0 + 664);
    v45 = *(_QWORD *)(v0 + 640);
    v46 = *(_QWORD *)(v0 + 616);
    v59 = *(_QWORD *)(v0 + 592);
    v60 = *(_QWORD *)(v0 + 568);
    v61 = *(_QWORD *)(v0 + 560);
    v62 = *(_QWORD *)(v0 + 536);
    v63 = *(_QWORD *)(v0 + 512);
    v64 = *(_QWORD *)(v0 + 488);
    v65 = *(_QWORD *)(v0 + 464);
    v66 = *(_QWORD *)(v0 + 456);
    v67 = *(_QWORD *)(v0 + 432);
    v68 = *(_QWORD *)(v0 + 408);
    v69 = *(_QWORD *)(v0 + 384);
    v70 = *(_QWORD *)(v0 + 360);
    v71 = *(_QWORD *)(v0 + 352);
    v72 = *(_QWORD *)(v0 + 328);
    v73 = *(_QWORD *)(v0 + 304);
    v74 = *(_QWORD *)(v0 + 280);
    v75 = *(_QWORD *)(v0 + 256);
    v77 = *(_QWORD *)(v0 + 248);
    v79 = *(_QWORD *)(v0 + 224);
    v81 = *(_QWORD *)(v0 + 200);
    v83 = *(_QWORD *)(v0 + 176);
    swift_task_dealloc(*(_QWORD *)(v0 + 736));
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    swift_task_dealloc(v44);
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
    swift_task_dealloc(v59);
    swift_task_dealloc(v60);
    swift_task_dealloc(v61);
    swift_task_dealloc(v62);
    swift_task_dealloc(v63);
    swift_task_dealloc(v64);
    swift_task_dealloc(v65);
    swift_task_dealloc(v66);
    swift_task_dealloc(v67);
    swift_task_dealloc(v68);
    swift_task_dealloc(v69);
    swift_task_dealloc(v70);
    swift_task_dealloc(v71);
    swift_task_dealloc(v72);
    swift_task_dealloc(v73);
    swift_task_dealloc(v74);
    swift_task_dealloc(v75);
    swift_task_dealloc(v77);
    swift_task_dealloc(v79);
    swift_task_dealloc(v81);
    swift_task_dealloc(v83);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v19 = *(_QWORD *)(v0 + 296);
  v18 = *(_QWORD *)(v0 + 304);
  v20 = *(_QWORD *)(v0 + 288);
  v21 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v19 + 32))(v18, *(_QWORD *)(v0 + 256), v20);
  v22 = Station.name.getter(v21);
  v78 = v23;
  v80 = v22;
  v76 = Station.stationProviderName.getter(v22);
  v25 = v24;
  Station.artwork.getter(v76);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v9, v82);
  v26 = *(_QWORD *)(v0 + 680);
  v27 = *(_QWORD *)(v0 + 672);
  v28 = *(uint64_t **)(v0 + 248);
  v29 = *(_QWORD *)(v0 + 208);
  v30 = *(_QWORD *)(v0 + 216);
  GroupActivitiesManager.Activity.Metadata.init()((uint64_t)v28);
  swift_bridgeObjectRelease();
  if (v25)
    v31 = v76;
  else
    v31 = 0;
  *v28 = v80;
  v28[1] = v78;
  if (v25)
    v32 = v25;
  else
    v32 = 0xE000000000000000;
  swift_bridgeObjectRelease();
  v28[2] = v31;
  v28[3] = v32;
  sub_10013EF64(v26, v27);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v27, 1, v29) == 1)
  {
    v33 = *(_QWORD *)(v0 + 672);
    sub_10004FF60(*(_QWORD *)(v0 + 680), &qword_1011A1440);
    swift_release();
    sub_10004FF60(v33, &qword_1011A1440);
    v35 = *(_QWORD *)(v0 + 240);
    v34 = *(_QWORD *)(v0 + 248);
    v36 = *(_QWORD *)(v0 + 232);
    v37 = *(_QWORD *)(v0 + 128);
    sub_1007DDF8C(v34, v37);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v35 + 56))(v37, 0, 1, v36);
    sub_1007DDFD0(v34);
    goto LABEL_11;
  }
  v48 = *(_QWORD *)(v0 + 248);
  v49 = *(_QWORD *)(v0 + 232);
  result = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 216) + 32))(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 672), *(_QWORD *)(v0 + 208));
  v50 = (double *)(v48 + *(int *)(v49 + 32));
  v51 = *v50;
  if ((~*(_QWORD *)v50 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (v51 <= -9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v51 >= 9.22337204e18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v52 = v50[1];
  if ((~*(_QWORD *)&v52 & 0x7FF0000000000000) == 0)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v52 <= -9.22337204e18)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v52 < 9.22337204e18)
  {
    v53 = (uint64_t)v51;
    v55 = *(_QWORD *)(v0 + 168);
    v54 = *(_QWORD *)(v0 + 176);
    v56 = *(_QWORD *)(v0 + 160);
    v57 = (uint64_t)v52;
    static Artwork.CropStyle.sourceSize.getter(result);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v55 + 104))(v54, enum case for Artwork.ImageFormat.jpeg(_:), v56);
    v58 = (_QWORD *)swift_task_alloc(async function pointer to Artwork.image(width:height:cropStyle:format:)[1]);
    *(_QWORD *)(v0 + 912) = v58;
    *v58 = v0;
    v58[1] = sub_1007DB4A4;
    return Artwork.image(width:height:cropStyle:format:)(v53, v57, *(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 176));
  }
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_1007DB4A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 192);
  v6 = *(_QWORD *)(*(_QWORD *)v2 + 168);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v2 + 912));
  v7 = v4[25];
  v9 = v4[22];
  v8 = v4[23];
  v10 = v4[20];
  if (v1)
  {
    swift_errorRelease(v1);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v10);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v7, v8);
    v11 = v4[96];
    v12 = v4[95];
    v13 = sub_1007DC8C8;
  }
  else
  {
    v4[115] = a1;
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v10);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v7, v8);
    v11 = v4[96];
    v12 = v4[95];
    v13 = sub_1007DB590;
  }
  return swift_task_switch(v13, v12, v11);
}

uint64_t sub_1007DB590()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v1 = *(void **)(v0 + 920);
  v2 = *(_QWORD *)(v0 + 680);
  v3 = *(_QWORD *)(v0 + 248);
  v5 = *(_QWORD *)(v0 + 216);
  v4 = *(_QWORD *)(v0 + 224);
  v6 = *(_QWORD *)(v0 + 208);
  v7 = objc_msgSend(v1, "CGImage", swift_release().n128_f64[0]);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  sub_10004FF60(v2, &qword_1011A1440);

  *(_QWORD *)(v3 + 32) = v7;
  v9 = *(_QWORD *)(v0 + 240);
  v8 = *(_QWORD *)(v0 + 248);
  v10 = *(_QWORD *)(v0 + 232);
  v11 = *(_QWORD *)(v0 + 128);
  sub_1007DDF8C(v8, v11);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(v11, 0, 1, v10);
  sub_1007DDFD0(v8);
  v12 = *(_QWORD *)(v0 + 728);
  v13 = *(_QWORD *)(v0 + 720);
  v14 = *(_QWORD *)(v0 + 712);
  v15 = *(_QWORD *)(v0 + 704);
  v16 = *(_QWORD *)(v0 + 680);
  v17 = *(_QWORD *)(v0 + 672);
  v18 = *(_QWORD *)(v0 + 664);
  v19 = *(_QWORD *)(v0 + 640);
  v20 = *(_QWORD *)(v0 + 616);
  v22 = *(_QWORD *)(v0 + 592);
  v23 = *(_QWORD *)(v0 + 568);
  v24 = *(_QWORD *)(v0 + 560);
  v25 = *(_QWORD *)(v0 + 536);
  v26 = *(_QWORD *)(v0 + 512);
  v27 = *(_QWORD *)(v0 + 488);
  v28 = *(_QWORD *)(v0 + 464);
  v29 = *(_QWORD *)(v0 + 456);
  v30 = *(_QWORD *)(v0 + 432);
  v31 = *(_QWORD *)(v0 + 408);
  v32 = *(_QWORD *)(v0 + 384);
  v33 = *(_QWORD *)(v0 + 360);
  v34 = *(_QWORD *)(v0 + 352);
  v35 = *(_QWORD *)(v0 + 328);
  v36 = *(_QWORD *)(v0 + 304);
  v37 = *(_QWORD *)(v0 + 280);
  v38 = *(_QWORD *)(v0 + 256);
  v39 = *(_QWORD *)(v0 + 248);
  v40 = *(_QWORD *)(v0 + 224);
  v41 = *(_QWORD *)(v0 + 200);
  v42 = *(_QWORD *)(v0 + 176);
  swift_task_dealloc(*(_QWORD *)(v0 + 736));
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1007DB814()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 928));
  return swift_task_switch(sub_1007DB864, *(_QWORD *)(v1 + 760), *(_QWORD *)(v1 + 768));
}

uint64_t sub_1007DB864()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v1 = *(_QWORD *)(v0 + 232);
  v2 = *(_QWORD *)(v0 + 240);
  v3 = *(_QWORD *)(v0 + 128);
  swift_release(*(_QWORD *)(v0 + 752));
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v2 + 56))(v3, 0, 1, v1);
  v4 = *(_QWORD *)(v0 + 728);
  v5 = *(_QWORD *)(v0 + 720);
  v6 = *(_QWORD *)(v0 + 712);
  v7 = *(_QWORD *)(v0 + 704);
  v8 = *(_QWORD *)(v0 + 680);
  v9 = *(_QWORD *)(v0 + 672);
  v10 = *(_QWORD *)(v0 + 664);
  v11 = *(_QWORD *)(v0 + 640);
  v12 = *(_QWORD *)(v0 + 616);
  v14 = *(_QWORD *)(v0 + 592);
  v15 = *(_QWORD *)(v0 + 568);
  v16 = *(_QWORD *)(v0 + 560);
  v17 = *(_QWORD *)(v0 + 536);
  v18 = *(_QWORD *)(v0 + 512);
  v19 = *(_QWORD *)(v0 + 488);
  v20 = *(_QWORD *)(v0 + 464);
  v21 = *(_QWORD *)(v0 + 456);
  v22 = *(_QWORD *)(v0 + 432);
  v23 = *(_QWORD *)(v0 + 408);
  v24 = *(_QWORD *)(v0 + 384);
  v25 = *(_QWORD *)(v0 + 360);
  v26 = *(_QWORD *)(v0 + 352);
  v27 = *(_QWORD *)(v0 + 328);
  v28 = *(_QWORD *)(v0 + 304);
  v29 = *(_QWORD *)(v0 + 280);
  v30 = *(_QWORD *)(v0 + 256);
  v31 = *(_QWORD *)(v0 + 248);
  v32 = *(_QWORD *)(v0 + 224);
  v33 = *(_QWORD *)(v0 + 200);
  v34 = *(_QWORD *)(v0 + 176);
  swift_task_dealloc(*(_QWORD *)(v0 + 736));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1007DBA70()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  __n128 v6;
  NSObject *v7;
  os_log_type_t v8;
  void *v9;
  uint8_t *v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;
  NSObject *v14;
  void *v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 832);
  v2 = *(_QWORD *)(v0 + 824);
  v3 = *(_QWORD *)(v0 + 728);
  v4 = *(_QWORD *)(v0 + 688);
  v5 = *(void **)(v0 + 136);
  v6 = swift_release();
  v1(v3, v2, v4, v6);
  v7 = Logger.logObject.getter(v5);
  v8 = static os_log_type_t.error.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v54 = v7;
    v56 = *(_QWORD *)(v0 + 856);
    v9 = *(void **)(v0 + 136);
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v10 = 138543362;
    *(_QWORD *)(v0 + 104) = v9;
    v12 = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 104, v0 + 112);
    *v11 = v9;

    _os_log_impl((void *)&_mh_execute_header, v54, v8, "Failed to get metadata for album=%{public}@", v10, 0xCu);
    v13 = sub_100007E8C((uint64_t *)&unk_1011A33E0);
    swift_arrayDestroy(v11, 1, v13);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);
    swift_errorRelease(v56);
    v14 = v54;
  }
  else
  {
    v15 = *(void **)(v0 + 136);
    swift_errorRelease(*(_QWORD *)(v0 + 856));

    v14 = v7;
  }
  v16 = *(void (**)(uint64_t, uint64_t))(v0 + 840);
  v17 = *(_QWORD *)(v0 + 728);
  v18 = *(_QWORD *)(v0 + 688);
  v19 = *(_QWORD *)(v0 + 664);
  v20 = *(_QWORD *)(v0 + 656);
  v21 = *(_QWORD *)(v0 + 648);
  v22 = *(_QWORD *)(v0 + 232);
  v23 = *(_QWORD *)(v0 + 240);
  v24 = *(_QWORD *)(v0 + 128);

  v16(v17, v18);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56))(v24, 1, 1, v22);
  v25 = *(_QWORD *)(v0 + 728);
  v26 = *(_QWORD *)(v0 + 720);
  v27 = *(_QWORD *)(v0 + 712);
  v28 = *(_QWORD *)(v0 + 704);
  v29 = *(_QWORD *)(v0 + 680);
  v30 = *(_QWORD *)(v0 + 672);
  v31 = *(_QWORD *)(v0 + 664);
  v32 = *(_QWORD *)(v0 + 640);
  v33 = *(_QWORD *)(v0 + 616);
  v35 = *(_QWORD *)(v0 + 592);
  v36 = *(_QWORD *)(v0 + 568);
  v37 = *(_QWORD *)(v0 + 560);
  v38 = *(_QWORD *)(v0 + 536);
  v39 = *(_QWORD *)(v0 + 512);
  v40 = *(_QWORD *)(v0 + 488);
  v41 = *(_QWORD *)(v0 + 464);
  v42 = *(_QWORD *)(v0 + 456);
  v43 = *(_QWORD *)(v0 + 432);
  v44 = *(_QWORD *)(v0 + 408);
  v45 = *(_QWORD *)(v0 + 384);
  v46 = *(_QWORD *)(v0 + 360);
  v47 = *(_QWORD *)(v0 + 352);
  v48 = *(_QWORD *)(v0 + 328);
  v49 = *(_QWORD *)(v0 + 304);
  v50 = *(_QWORD *)(v0 + 280);
  v51 = *(_QWORD *)(v0 + 256);
  v52 = *(_QWORD *)(v0 + 248);
  v53 = *(_QWORD *)(v0 + 224);
  v55 = *(_QWORD *)(v0 + 200);
  v57 = *(_QWORD *)(v0 + 176);
  swift_task_dealloc(*(_QWORD *)(v0 + 736));
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v55);
  swift_task_dealloc(v57);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1007DBE08()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  __n128 v6;
  NSObject *v7;
  os_log_type_t v8;
  void *v9;
  uint8_t *v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;
  NSObject *v14;
  void *v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 832);
  v2 = *(_QWORD *)(v0 + 824);
  v3 = *(_QWORD *)(v0 + 720);
  v4 = *(_QWORD *)(v0 + 688);
  v5 = *(void **)(v0 + 136);
  v6 = swift_release();
  v1(v3, v2, v4, v6);
  v7 = Logger.logObject.getter(v5);
  v8 = static os_log_type_t.error.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v54 = v7;
    v56 = *(_QWORD *)(v0 + 872);
    v9 = *(void **)(v0 + 136);
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v10 = 138543362;
    *(_QWORD *)(v0 + 88) = v9;
    v12 = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 88, v0 + 96);
    *v11 = v9;

    _os_log_impl((void *)&_mh_execute_header, v54, v8, "Failed to get metadata for song=%{public}@", v10, 0xCu);
    v13 = sub_100007E8C((uint64_t *)&unk_1011A33E0);
    swift_arrayDestroy(v11, 1, v13);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);
    swift_errorRelease(v56);
    v14 = v54;
  }
  else
  {
    v15 = *(void **)(v0 + 136);
    swift_errorRelease(*(_QWORD *)(v0 + 872));

    v14 = v7;
  }
  v16 = *(void (**)(uint64_t, uint64_t))(v0 + 840);
  v17 = *(_QWORD *)(v0 + 720);
  v18 = *(_QWORD *)(v0 + 688);
  v19 = *(_QWORD *)(v0 + 560);
  v20 = *(_QWORD *)(v0 + 552);
  v21 = *(_QWORD *)(v0 + 544);
  v22 = *(_QWORD *)(v0 + 232);
  v23 = *(_QWORD *)(v0 + 240);
  v24 = *(_QWORD *)(v0 + 128);

  v16(v17, v18);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56))(v24, 1, 1, v22);
  v25 = *(_QWORD *)(v0 + 728);
  v26 = *(_QWORD *)(v0 + 720);
  v27 = *(_QWORD *)(v0 + 712);
  v28 = *(_QWORD *)(v0 + 704);
  v29 = *(_QWORD *)(v0 + 680);
  v30 = *(_QWORD *)(v0 + 672);
  v31 = *(_QWORD *)(v0 + 664);
  v32 = *(_QWORD *)(v0 + 640);
  v33 = *(_QWORD *)(v0 + 616);
  v35 = *(_QWORD *)(v0 + 592);
  v36 = *(_QWORD *)(v0 + 568);
  v37 = *(_QWORD *)(v0 + 560);
  v38 = *(_QWORD *)(v0 + 536);
  v39 = *(_QWORD *)(v0 + 512);
  v40 = *(_QWORD *)(v0 + 488);
  v41 = *(_QWORD *)(v0 + 464);
  v42 = *(_QWORD *)(v0 + 456);
  v43 = *(_QWORD *)(v0 + 432);
  v44 = *(_QWORD *)(v0 + 408);
  v45 = *(_QWORD *)(v0 + 384);
  v46 = *(_QWORD *)(v0 + 360);
  v47 = *(_QWORD *)(v0 + 352);
  v48 = *(_QWORD *)(v0 + 328);
  v49 = *(_QWORD *)(v0 + 304);
  v50 = *(_QWORD *)(v0 + 280);
  v51 = *(_QWORD *)(v0 + 256);
  v52 = *(_QWORD *)(v0 + 248);
  v53 = *(_QWORD *)(v0 + 224);
  v55 = *(_QWORD *)(v0 + 200);
  v57 = *(_QWORD *)(v0 + 176);
  swift_task_dealloc(*(_QWORD *)(v0 + 736));
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v55);
  swift_task_dealloc(v57);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1007DC1A0()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  __n128 v6;
  NSObject *v7;
  os_log_type_t v8;
  void *v9;
  uint8_t *v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;
  NSObject *v14;
  void *v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 832);
  v2 = *(_QWORD *)(v0 + 824);
  v3 = *(_QWORD *)(v0 + 712);
  v4 = *(_QWORD *)(v0 + 688);
  v5 = *(void **)(v0 + 136);
  v6 = swift_release();
  v1(v3, v2, v4, v6);
  v7 = Logger.logObject.getter(v5);
  v8 = static os_log_type_t.error.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v54 = v7;
    v56 = *(_QWORD *)(v0 + 888);
    v9 = *(void **)(v0 + 136);
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v10 = 138477827;
    *(_QWORD *)(v0 + 80) = v9;
    v12 = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 80, v0 + 88);
    *v11 = v9;

    _os_log_impl((void *)&_mh_execute_header, v54, v8, "Failed to get metadata for playlist=%{private}@", v10, 0xCu);
    v13 = sub_100007E8C((uint64_t *)&unk_1011A33E0);
    swift_arrayDestroy(v11, 1, v13);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);
    swift_errorRelease(v56);
    v14 = v54;
  }
  else
  {
    v15 = *(void **)(v0 + 136);
    swift_errorRelease(*(_QWORD *)(v0 + 888));

    v14 = v7;
  }
  v16 = *(void (**)(uint64_t, uint64_t))(v0 + 840);
  v17 = *(_QWORD *)(v0 + 712);
  v18 = *(_QWORD *)(v0 + 688);
  v20 = *(_QWORD *)(v0 + 448);
  v19 = *(_QWORD *)(v0 + 456);
  v21 = *(_QWORD *)(v0 + 440);
  v22 = *(_QWORD *)(v0 + 232);
  v23 = *(_QWORD *)(v0 + 240);
  v24 = *(_QWORD *)(v0 + 128);

  v16(v17, v18);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56))(v24, 1, 1, v22);
  v25 = *(_QWORD *)(v0 + 728);
  v26 = *(_QWORD *)(v0 + 720);
  v27 = *(_QWORD *)(v0 + 712);
  v28 = *(_QWORD *)(v0 + 704);
  v29 = *(_QWORD *)(v0 + 680);
  v30 = *(_QWORD *)(v0 + 672);
  v31 = *(_QWORD *)(v0 + 664);
  v32 = *(_QWORD *)(v0 + 640);
  v33 = *(_QWORD *)(v0 + 616);
  v35 = *(_QWORD *)(v0 + 592);
  v36 = *(_QWORD *)(v0 + 568);
  v37 = *(_QWORD *)(v0 + 560);
  v38 = *(_QWORD *)(v0 + 536);
  v39 = *(_QWORD *)(v0 + 512);
  v40 = *(_QWORD *)(v0 + 488);
  v41 = *(_QWORD *)(v0 + 464);
  v42 = *(_QWORD *)(v0 + 456);
  v43 = *(_QWORD *)(v0 + 432);
  v44 = *(_QWORD *)(v0 + 408);
  v45 = *(_QWORD *)(v0 + 384);
  v46 = *(_QWORD *)(v0 + 360);
  v47 = *(_QWORD *)(v0 + 352);
  v48 = *(_QWORD *)(v0 + 328);
  v49 = *(_QWORD *)(v0 + 304);
  v50 = *(_QWORD *)(v0 + 280);
  v51 = *(_QWORD *)(v0 + 256);
  v52 = *(_QWORD *)(v0 + 248);
  v53 = *(_QWORD *)(v0 + 224);
  v55 = *(_QWORD *)(v0 + 200);
  v57 = *(_QWORD *)(v0 + 176);
  swift_task_dealloc(*(_QWORD *)(v0 + 736));
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v55);
  swift_task_dealloc(v57);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1007DC534()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  __n128 v6;
  NSObject *v7;
  os_log_type_t v8;
  void *v9;
  uint8_t *v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;
  NSObject *v14;
  void *v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 832);
  v2 = *(_QWORD *)(v0 + 824);
  v3 = *(_QWORD *)(v0 + 704);
  v4 = *(_QWORD *)(v0 + 688);
  v5 = *(void **)(v0 + 136);
  v6 = swift_release();
  v1(v3, v2, v4, v6);
  v7 = Logger.logObject.getter(v5);
  v8 = static os_log_type_t.error.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v54 = v7;
    v56 = *(_QWORD *)(v0 + 904);
    v9 = *(void **)(v0 + 136);
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v10 = 138477827;
    *(_QWORD *)(v0 + 96) = v9;
    v12 = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 96, v0 + 104);
    *v11 = v9;

    _os_log_impl((void *)&_mh_execute_header, v54, v8, "Failed to get metadata for station=%{private}@", v10, 0xCu);
    v13 = sub_100007E8C((uint64_t *)&unk_1011A33E0);
    swift_arrayDestroy(v11, 1, v13);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);
    swift_errorRelease(v56);
    v14 = v54;
  }
  else
  {
    v15 = *(void **)(v0 + 136);
    swift_errorRelease(*(_QWORD *)(v0 + 904));

    v14 = v7;
  }
  v16 = *(void (**)(uint64_t, uint64_t))(v0 + 840);
  v17 = *(_QWORD *)(v0 + 704);
  v18 = *(_QWORD *)(v0 + 688);
  v20 = *(_QWORD *)(v0 + 344);
  v19 = *(_QWORD *)(v0 + 352);
  v21 = *(_QWORD *)(v0 + 336);
  v22 = *(_QWORD *)(v0 + 232);
  v23 = *(_QWORD *)(v0 + 240);
  v24 = *(_QWORD *)(v0 + 128);

  v16(v17, v18);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56))(v24, 1, 1, v22);
  v25 = *(_QWORD *)(v0 + 728);
  v26 = *(_QWORD *)(v0 + 720);
  v27 = *(_QWORD *)(v0 + 712);
  v28 = *(_QWORD *)(v0 + 704);
  v29 = *(_QWORD *)(v0 + 680);
  v30 = *(_QWORD *)(v0 + 672);
  v31 = *(_QWORD *)(v0 + 664);
  v32 = *(_QWORD *)(v0 + 640);
  v33 = *(_QWORD *)(v0 + 616);
  v35 = *(_QWORD *)(v0 + 592);
  v36 = *(_QWORD *)(v0 + 568);
  v37 = *(_QWORD *)(v0 + 560);
  v38 = *(_QWORD *)(v0 + 536);
  v39 = *(_QWORD *)(v0 + 512);
  v40 = *(_QWORD *)(v0 + 488);
  v41 = *(_QWORD *)(v0 + 464);
  v42 = *(_QWORD *)(v0 + 456);
  v43 = *(_QWORD *)(v0 + 432);
  v44 = *(_QWORD *)(v0 + 408);
  v45 = *(_QWORD *)(v0 + 384);
  v46 = *(_QWORD *)(v0 + 360);
  v47 = *(_QWORD *)(v0 + 352);
  v48 = *(_QWORD *)(v0 + 328);
  v49 = *(_QWORD *)(v0 + 304);
  v50 = *(_QWORD *)(v0 + 280);
  v51 = *(_QWORD *)(v0 + 256);
  v52 = *(_QWORD *)(v0 + 248);
  v53 = *(_QWORD *)(v0 + 224);
  v55 = *(_QWORD *)(v0 + 200);
  v57 = *(_QWORD *)(v0 + 176);
  swift_task_dealloc(*(_QWORD *)(v0 + 736));
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v55);
  swift_task_dealloc(v57);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1007DC8C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v1 = *(_QWORD *)(v0 + 680);
  v2 = *(_QWORD *)(v0 + 248);
  v4 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 224);
  v5 = *(_QWORD *)(v0 + 208);
  v6 = swift_release();
  (*(void (**)(uint64_t, uint64_t, __n128))(v4 + 8))(v3, v5, v6);
  sub_10004FF60(v1, &qword_1011A1440);

  *(_QWORD *)(v2 + 32) = 0;
  v8 = *(_QWORD *)(v0 + 240);
  v7 = *(_QWORD *)(v0 + 248);
  v9 = *(_QWORD *)(v0 + 232);
  v10 = *(_QWORD *)(v0 + 128);
  sub_1007DDF8C(v7, v10);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v10, 0, 1, v9);
  sub_1007DDFD0(v7);
  v11 = *(_QWORD *)(v0 + 728);
  v12 = *(_QWORD *)(v0 + 720);
  v13 = *(_QWORD *)(v0 + 712);
  v14 = *(_QWORD *)(v0 + 704);
  v15 = *(_QWORD *)(v0 + 680);
  v16 = *(_QWORD *)(v0 + 672);
  v17 = *(_QWORD *)(v0 + 664);
  v18 = *(_QWORD *)(v0 + 640);
  v19 = *(_QWORD *)(v0 + 616);
  v21 = *(_QWORD *)(v0 + 592);
  v22 = *(_QWORD *)(v0 + 568);
  v23 = *(_QWORD *)(v0 + 560);
  v24 = *(_QWORD *)(v0 + 536);
  v25 = *(_QWORD *)(v0 + 512);
  v26 = *(_QWORD *)(v0 + 488);
  v27 = *(_QWORD *)(v0 + 464);
  v28 = *(_QWORD *)(v0 + 456);
  v29 = *(_QWORD *)(v0 + 432);
  v30 = *(_QWORD *)(v0 + 408);
  v31 = *(_QWORD *)(v0 + 384);
  v32 = *(_QWORD *)(v0 + 360);
  v33 = *(_QWORD *)(v0 + 352);
  v34 = *(_QWORD *)(v0 + 328);
  v35 = *(_QWORD *)(v0 + 304);
  v36 = *(_QWORD *)(v0 + 280);
  v37 = *(_QWORD *)(v0 + 256);
  v38 = *(_QWORD *)(v0 + 248);
  v39 = *(_QWORD *)(v0 + 224);
  v40 = *(_QWORD *)(v0 + 200);
  v41 = *(_QWORD *)(v0 + 176);
  swift_task_dealloc(*(_QWORD *)(v0 + 736));
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1007DCB28(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _QWORD aBlock[6];

  v4 = sub_100007E8C(&qword_1011C9CC8);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = __chkstk_darwin(v4);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4, v7);
  v8 = *(unsigned __int8 *)(v5 + 80);
  v9 = (v8 + 16) & ~v8;
  v10 = swift_allocObject(&unk_1010DCF08, v9 + v6, v8 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_1007DE070;
  aBlock[5] = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004E2F4;
  aBlock[3] = &unk_1010DCF20;
  v11 = _Block_copy(aBlock);
  objc_msgSend(a2, "performWithResponseHandler:", v11, swift_release().n128_f64[0]);
  _Block_release(v11);
}

uint64_t sub_1007DCC58(id a1)
{
  void *v1;
  id v2;
  uint64_t v3;
  id v5;

  if (a1)
  {
    a1 = objc_msgSend(a1, "results");
    if (a1)
    {
      v1 = a1;
      v2 = objc_msgSend(a1, "firstItem");

      if (!v2)
      {
LABEL_6:
        a1 = 0;
        goto LABEL_7;
      }
      objc_opt_self(MPModelObject);
      a1 = (id)swift_dynamicCastObjCClass(v2);
      if (!a1)
      {
        swift_unknownObjectRelease(v2);
        goto LABEL_6;
      }
    }
  }
LABEL_7:
  v5 = a1;
  v3 = sub_100007E8C(&qword_1011C9CC8);
  return CheckedContinuation.resume(returning:)(&v5, v3);
}

double sub_1007DCD08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  unint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  double result;
  _QWORD v28[2];
  char *v29;
  uint64_t v30;
  _OWORD v31[3];
  uint64_t v32;
  uint64_t v33;

  v2 = v1;
  v4 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v4);
  v6 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = Logger.groupActivities.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  sub_1003657F8(a1);
  v12 = sub_1003657F8(a1);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    v30 = v2;
    v15 = swift_slowAlloc(12, -1);
    v29 = v6;
    v16 = (uint8_t *)v15;
    v17 = swift_slowAlloc(32, -1);
    *(_DWORD *)v16 = 136446210;
    v28[1] = v16 + 4;
    v18 = *(_OWORD *)(a1 + 16);
    v31[0] = *(_OWORD *)a1;
    v31[1] = v18;
    v31[2] = *(_OWORD *)(a1 + 32);
    v32 = *(_QWORD *)(a1 + 48);
    v33 = v17;
    sub_1003657F8(a1);
    v19 = String.init<A>(describing:)(v31, &type metadata for Alert);
    *(_QWORD *)&v31[0] = sub_100322200(v19, v20, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v31, (char *)v31 + 8);
    v2 = v30;
    swift_bridgeObjectRelease();
    sub_100365848((_QWORD *)a1);
    sub_100365848((_QWORD *)a1);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "presentAlert called, with alert=%{public}s", v16, 0xCu);
    swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    v21 = v16;
    v6 = v29;
    swift_slowDealloc(v21, -1, -1);
  }
  else
  {
    sub_100365848((_QWORD *)a1);
    sub_100365848((_QWORD *)a1);
  }

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v22 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v6, 1, 1, v22);
  type metadata accessor for MainActor(0);
  sub_1003657F8(a1);
  v23 = swift_retain();
  v24 = static MainActor.shared.getter(v23);
  v25 = swift_allocObject(&unk_1010DCEE0, 96, 7);
  *(_QWORD *)(v25 + 16) = v24;
  *(_QWORD *)(v25 + 24) = &protocol witness table for MainActor;
  *(_QWORD *)(v25 + 32) = v2;
  v26 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v25 + 40) = *(_OWORD *)a1;
  *(_OWORD *)(v25 + 56) = v26;
  *(_OWORD *)(v25 + 72) = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(v25 + 88) = *(_QWORD *)(a1 + 48);
  sub_100166D14((uint64_t)v6, (uint64_t)&unk_1011C9CB8, v25);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_1007DCFE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v5[26] = a4;
  v5[27] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[28] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v5[29] = v8;
  v5[30] = v9;
  return swift_task_switch(sub_1007DD054, v8, v9);
}

uint64_t sub_1007DD054()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v9;
  id v10;

  v1 = *(_QWORD *)(v0 + 208);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = *(_QWORD *)(v2 + 32);
    if (v3 >> 62 == 2 || v3 >> 62 == 1)
    {
      v4 = (void *)(v3 & 0x3FFFFFFFFFFFFFFFLL);
      v3 &= 0x3FFFFFFFFFFFFFFFuLL;
    }
    else
    {
      v4 = (void *)(v3 & 0x3FFFFFFFFFFFFFFFLL);
    }
    *(_OWORD *)(v0 + 160) = 0u;
    *(_OWORD *)(v0 + 176) = 0u;
    *(_QWORD *)(v0 + 192) = 0;
    *(_BYTE *)(v0 + 200) = -1;
    v9 = v4;
    PresentationSource.init(viewController:position:)((void *)v3, v0 + 160, v0 + 88);
    swift_release();
    sub_100064EF0(v0 + 88, v0 + 16);
    v10 = Alert.uiAlertController.getter();
    PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v10, 1, (id)0xF, (void **)1, 0, 0);

    sub_100064B4C(v0 + 16);
  }
  else
  {
    v5 = *(_QWORD *)(v1 + 24);
    *(_QWORD *)(v0 + 248) = v5;
    if (v5)
    {
      v6 = dword_1011D5044;
      swift_retain();
      v7 = (_QWORD *)swift_task_alloc(v6);
      *(_QWORD *)(v0 + 256) = v7;
      *v7 = v0;
      v7[1] = sub_1007DD1A4;
      return PresentedViewState<A>.present(_:)(*(_QWORD *)(v0 + 216));
    }
    swift_release();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1007DD1A4()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 256));
  return swift_task_switch(sub_1007DD1F0, *(_QWORD *)(v1 + 232), *(_QWORD *)(v1 + 240));
}

uint64_t sub_1007DD1F0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 248);
  swift_release(*(_QWORD *)(v0 + 224));
  swift_release(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t _s11CoordinatorCMa_1()
{
  return objc_opt_self(_TtCE5MusicC9MusicCore22GroupActivitiesManager11Coordinator);
}

uint64_t sub_1007DD24C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc(dword_1011C9B1C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10006AEE4;
  return sub_1007D8700(a1, a2);
}

uint64_t sub_1007DD2A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc(dword_1011C9B24);
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_10006AEE4;
  return sub_1007D8B20(a1, a2, a3, a4);
}

uint64_t sub_1007DD314()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  v3 = (uint64_t (__cdecl *)())((char *)&dword_1011C9CA8 + dword_1011C9CA8);
  v1 = (_QWORD *)swift_task_alloc(unk_1011C9CAC);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1000FDE04;
  return v3();
}

uint64_t sub_1007DD36C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  v3 = (uint64_t (__cdecl *)())((char *)&dword_1011C9CA0 + dword_1011C9CA0);
  v1 = (_QWORD *)swift_task_alloc(unk_1011C9CA4);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1000FDE04;
  return v3();
}

double sub_1007DD3C4(uint64_t a1)
{
  return sub_1007DCD08(a1);
}

uint64_t sub_1007DD3E4(uint64_t a1, uint64_t a2)
{
  return sub_1007DDAE0(a2);
}

uint64_t sub_1007DD408()
{
  uint64_t v0;
  id v1;

  if (qword_10119B8C0 != -1)
    swift_once(&qword_10119B8C0, sub_1000E9774);
  v0 = qword_10124C798;
  v1 = (id)qword_10124C798;
  return v0;
}

uint64_t sub_1007DD458()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for Logger(0);
  v0[8] = v1;
  v2 = *(_QWORD *)(v1 - 8);
  v0[9] = v2;
  v0[10] = swift_task_alloc((*(_QWORD *)(v2 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for MainActor(0);
  v0[11] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  return swift_task_switch(sub_1007DD4E8, v5, v6);
}

uint64_t sub_1007DD4E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 72);
  swift_release();
  v4 = Logger.groupActivities.unsafeMutableAddressor();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v4, v2);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "PresentUpSell called", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }
  v10 = *(_QWORD *)(v0 + 72);
  v9 = *(_QWORD *)(v0 + 80);
  v11 = *(_QWORD *)(v0 + 64);

  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  *(_QWORD *)(v0 + 48) = 0;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_BYTE *)(v0 + 56) = -3;
  static SubscriptionUpsellPresenter.present(for:)(v0 + 16);
  sub_1002A4CE4(v0 + 16);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
}

uint64_t sub_1007DD5F8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for Logger(0);
  v0[4] = v1;
  v2 = *(_QWORD *)(v1 - 8);
  v0[5] = v2;
  v3 = (*(_QWORD *)(v2 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v0[6] = swift_task_alloc(v3);
  v0[7] = swift_task_alloc(v3);
  v4 = type metadata accessor for MainActor(0);
  v0[8] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  v0[9] = v6;
  v0[10] = v7;
  return swift_task_switch(sub_1007DD698, v6, v7);
}

uint64_t sub_1007DD698()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = type metadata accessor for AuthPresenter(0);
  v2 = swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
  *(_QWORD *)(v0 + 88) = v2;
  *(_BYTE *)(v0 + 112) = 0;
  Published.init(initialValue:)(v0 + 112, &type metadata for Bool);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC5Music13AuthPresenter_presentingViewController) = 0;
  v3 = (_QWORD *)swift_task_alloc(dword_1011B550C);
  *(_QWORD *)(v0 + 96) = v3;
  *v3 = v0;
  v3[1] = sub_1007DD724;
  return sub_10046EBC8();
}

uint64_t sub_1007DD724(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *v2;
  v5 = *(_QWORD *)(*v2 + 88);
  v4 = *(_QWORD *)(*v2 + 96);
  *(_QWORD *)(v3 + 104) = a1;
  *(_BYTE *)(v3 + 113) = a2;
  swift_task_dealloc(v4);
  swift_setDeallocating(v5);
  v6 = v5 + OBJC_IVAR____TtC5Music13AuthPresenter__isAuthenticating;
  v7 = sub_100007E8C((uint64_t *)&unk_1011A3380);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);

  swift_deallocClassInstance(v5, *(unsigned int *)(*(_QWORD *)v5 + 48), *(unsigned __int16 *)(*(_QWORD *)v5 + 52));
  return swift_task_switch(sub_1007DD7E0, *(_QWORD *)(v3 + 72), *(_QWORD *)(v3 + 80));
}

uint64_t sub_1007DD7E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 40);
  swift_release();
  v4 = Logger.groupActivities.unsafeMutableAddressor();
  v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v6 = v5(v2, v4, v1);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "requireAuthentification called", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }
  v10 = *(_BYTE *)(v0 + 113);
  v11 = *(_QWORD *)(v0 + 56);
  v12 = *(_QWORD *)(v0 + 32);
  v13 = *(_QWORD *)(v0 + 40);

  v14 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
  v14(v11, v12);
  v15 = *(_QWORD *)(v0 + 104);
  if ((v10 & 1) != 0)
  {
    v5(*(_QWORD *)(v0 + 48), v4, *(_QWORD *)(v0 + 32));
    swift_errorRetain(v15);
    swift_errorRetain(v15);
    v17 = swift_errorRetain(v15);
    v18 = Logger.logObject.getter(v17);
    v19 = static os_log_type_t.error.getter(v18);
    v20 = os_log_type_enabled(v18, v19);
    v21 = *(_QWORD *)(v0 + 104);
    v22 = *(_QWORD *)(v0 + 48);
    v23 = *(_QWORD *)(v0 + 32);
    if (v20)
    {
      v34 = *(_QWORD *)(v0 + 48);
      v33 = *(_QWORD *)(v0 + 32);
      v24 = (uint8_t *)swift_slowAlloc(12, -1);
      v32 = swift_slowAlloc(32, -1);
      v35 = v32;
      *(_DWORD *)v24 = 136446210;
      *(_QWORD *)(v0 + 16) = v15;
      swift_errorRetain(v15);
      v25 = sub_100007E8C(&qword_1011A14B0);
      v26 = String.init<A>(describing:)(v0 + 16, v25);
      *(_QWORD *)(v0 + 24) = sub_100322200(v26, v27, &v35);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32);
      swift_bridgeObjectRelease();
      sub_1007DDEAC(v21, 1);
      sub_1007DDEAC(v21, 1);
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "requireAuthentification failed with error:%{public}s", v24, 0xCu);
      swift_arrayDestroy(v32, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v32, -1, -1);
      swift_slowDealloc(v24, -1, -1);

      sub_1007DDEAC(v21, 1);
      sub_1007DDEAC(v21, 1);
      v29 = v33;
      v28 = v34;
    }
    else
    {
      sub_1007DDEAC(*(_QWORD *)(v0 + 104), 1);
      sub_1007DDEAC(v21, 1);
      swift_errorRelease(v15);

      sub_1007DDEAC(v21, 1);
      v28 = v22;
      v29 = v23;
    }
    v14(v28, v29);
    v16 = 0;
  }
  else
  {
    v16 = *(_QWORD *)(v0 + 104) & 1;
  }
  v30 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 56));
  swift_task_dealloc(v30);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v16);
}

uint64_t sub_1007DDAE0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  NSObject *v18;
  int v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  char *v24;
  unint64_t v25;
  uint64_t v26;
  NSObject *v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v34;
  int v35;
  uint64_t (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v2 = sub_100007E8C(&qword_1011C9C90);
  __chkstk_darwin(v2);
  v39 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_1011C9C98);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v34 - v9;
  v11 = type metadata accessor for Logger(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = Logger.groupActivities.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v40 = a1;
  v17 = v16(v10, a1, v4);
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, (os_log_type_t)v19))
  {
    v35 = v19;
    v37 = v12;
    v38 = v11;
    v20 = (uint8_t *)swift_slowAlloc(12, -1);
    v21 = swift_slowAlloc(32, -1);
    v42 = v21;
    *(_DWORD *)v20 = 136446210;
    v16(v7, (uint64_t)v10, v4);
    v22 = v5;
    v23 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
    v24 = v7;
    v36 = v16;
    v34 = v21;
    if (v23 == enum case for GroupSession.State.invalidated<A>(_:))
    {
      v25 = 0xEB00000000646574;
      v26 = 0x6164696C61766E69;
      v27 = v18;
      v28 = (uint64_t)v39;
LABEL_10:
      (*(void (**)(char *, uint64_t))(v5 + 8))(v24, v4);
      goto LABEL_11;
    }
    if (v23 == enum case for GroupSession.State.waiting<A>(_:))
    {
      v25 = 0xE700000000000000;
      v26 = 0x676E6974696177;
      v27 = v18;
      v28 = (uint64_t)v39;
    }
    else
    {
      v27 = v18;
      v28 = (uint64_t)v39;
      if (v23 != enum case for GroupSession.State.joined<A>(_:))
      {
        v25 = 0xE700000000000000;
        v26 = 0x6E776F6E6B6E75;
        goto LABEL_10;
      }
      v25 = 0xE600000000000000;
      v26 = 0x64656E696F6ALL;
    }
LABEL_11:
    v41 = sub_100322200(v26, v25, &v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42);
    v30 = swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v10, v4, v30);
    _os_log_impl((void *)&_mh_execute_header, v27, (os_log_type_t)v35, "Session state changed: %{public}s", v20, 0xCu);
    v31 = v34;
    swift_arrayDestroy(v34, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v31, -1, -1);
    swift_slowDealloc(v20, -1, -1);

    (*(void (**)(char *, uint64_t))(v37 + 8))(v14, v38);
    v29 = v40;
    v16 = v36;
    goto LABEL_12;
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);

  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v28 = (uint64_t)v39;
  v22 = v5;
  v29 = v40;
LABEL_12:
  v16((char *)v28, v29, v4);
  v32.n128_f64[0] = (*(double (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v22 + 56))(v28, 0, 1, v4);
  PassthroughSubject.send(_:)(v28, v32);
  return sub_10004FF60(v28, &qword_1011C9C90);
}

uint64_t sub_1007DDEAC(uint64_t result, char a2)
{
  if ((a2 & 1) != 0)
    return swift_errorRelease(result);
  return result;
}

uint64_t sub_1007DDEB8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));

  return swift_deallocObject(v0, 96, 7);
}

uint64_t sub_1007DDF04(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1011C9CB4);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10005AEE4;
  return sub_1007DCFE8(a1, v4, v5, v6, (uint64_t)(v1 + 5));
}

uint64_t sub_1007DDF80@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100040750(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of StationFilter.id.getter, a2);
}

uint64_t sub_1007DDF8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1007DDFD0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1007DE014@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100040750(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of AlbumFilter.id.getter, a2);
}

unint64_t sub_1007DE020()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10119E4F0;
  if (!qword_10119E4F0)
  {
    v1 = objc_opt_self(MPIdentifierSet);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10119E4F0);
  }
  return result;
}

void sub_1007DE05C(uint64_t a1)
{
  uint64_t v1;

  sub_1007DCB28(a1, *(void **)(v1 + 16));
}

uint64_t sub_1007DE064()
{
  return sub_1001E806C(&qword_1011C9CC8);
}

uint64_t sub_1007DE070(uint64_t a1, uint64_t a2)
{
  return sub_10046FB00(a1, a2, &qword_1011C9CC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1007DCC58);
}

uint64_t sub_1007DE084(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1007DE094(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

double sub_1007DE09C(uint64_t a1)
{
  uint64_t v1;

  return sub_1007D8944(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1007DE0A4()
{
  return sub_1001E806C(&qword_1011C9CD0);
}

uint64_t sub_1007DE0B0(uint64_t a1, uint64_t a2)
{
  return sub_10046FB00(a1, a2, &qword_1011C9CD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1007D8A54);
}

void Library.SortFilterButton.Configuration.storageKey.getter(char a1)
{
  _StringGuts.grow(_:)(33);
  swift_bridgeObjectRelease();
  __asm { BR              X10 }
}

uint64_t sub_1007DE140()
{
  Swift::String v0;
  uint64_t v2;

  v0._countAndFlagsBits = 0x73747369747261;
  v0._object = (void *)0xE700000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRelease(0xE700000000000000);
  return v2;
}

uint64_t View.sortFilterContentButton(configuration:filterOption:placement:)(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;

  v20 = a7;
  v13 = _s25SortFilterContentModifierVMa(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = &v15[*(int *)(v16 + 24)];
  v18 = type metadata accessor for ToolbarItemPlacement(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v17, a5, v18);
  *v15 = a1;
  *((_QWORD *)v15 + 1) = a2;
  *((_QWORD *)v15 + 2) = a3;
  v15[24] = a4;
  swift_retain();
  swift_retain();
  View.modifier<A>(_:)(v15, a6, v13, v20);
  return sub_1007DF258((uint64_t)v15);
}

uint64_t sub_1007DE308(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _BYTE v14[16];
  uint64_t v15;

  v2 = type metadata accessor for ToolbarItemPlacement(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_100007E8C(&qword_1011C9DB0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v14[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = _s25SortFilterContentModifierVMa(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v3 + 16))(v5, a1 + *(int *)(v10 + 24), v2);
  v15 = a1;
  v11 = sub_1007DFF5C();
  ToolbarItem<>.init(placement:content:)(v5, sub_1007DFF54, v14, &type metadata for Library.SortFilterButton, v11);
  v12 = sub_100049F28(&qword_1011C9DB8, &qword_1011C9DB0, (uint64_t)&protocol conformance descriptor for ToolbarItem<A, B>);
  static ToolbarContentBuilder.buildBlock<A>(_:)(v9, v6, v12);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

_QWORD *sub_1007DE450@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  char v3;
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD v9[2];
  char v10;

  v3 = *a1;
  v4 = sub_100007E8C(&qword_1011ABF38);
  result = Binding.projectedValue.getter(v9, v4);
  v6 = v9[0];
  v7 = v9[1];
  v8 = v10;
  *(_BYTE *)a2 = v3;
  *(_QWORD *)(a2 + 8) = v6;
  *(_QWORD *)(a2 + 16) = v7;
  *(_BYTE *)(a2 + 24) = v8;
  return result;
}

uint64_t sub_1007DE4BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v5;
  _QWORD v6[2];

  v0 = sub_100007E8C(&qword_1011C9D98);
  v1 = sub_100007E8C(&qword_1011C9DA0);
  v2 = sub_100049F28(&qword_1011C9DA8, &qword_1011C9D98, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
  v6[0] = sub_100044B54(&qword_1011C9DB0);
  v6[1] = sub_100049F28(&qword_1011C9DB8, &qword_1011C9DB0, (uint64_t)&protocol conformance descriptor for ToolbarItem<A, B>);
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v6, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
  return View.toolbar<A>(content:)(sub_1007DFF4C, &v5, v0, v1, v2, OpaqueTypeConformance2);
}

uint64_t Library.SortFilterButton.filterOption.getter()
{
  uint64_t v0;
  uint64_t v2;

  v0 = sub_100007E8C(&qword_1011ABF38);
  Binding.wrappedValue.getter(&v2, v0);
  return v2;
}

uint64_t Library.SortFilterButton.filterOption.setter(char a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v8 = a3;
  v9 = a4;
  v10 = a5;
  v7 = a1;
  v5 = sub_100007E8C(&qword_1011ABF38);
  return Binding.wrappedValue.setter(&v7, v5);
}

void (*Library.SortFilterButton.filterOption.modify(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5))(uint64_t a1)
{
  _BYTE *v9;
  uint64_t v10;

  v9 = malloc(0x30uLL);
  *a1 = v9;
  v9[19] = a5;
  *((_QWORD *)v9 + 3) = a3;
  *((_QWORD *)v9 + 4) = a4;
  *(_QWORD *)v9 = a3;
  *((_QWORD *)v9 + 1) = a4;
  v9[16] = a5;
  swift_retain();
  swift_retain();
  v10 = sub_100007E8C(&qword_1011ABF38);
  *((_QWORD *)v9 + 5) = v10;
  Binding.wrappedValue.getter(v9 + 17, v10);
  return sub_1007DE6CC;
}

void sub_1007DE6CC(uint64_t a1)
{
  _QWORD *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v1 = *(_QWORD **)a1;
  v2 = *(_BYTE *)(*(_QWORD *)a1 + 17);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  v5 = *(_BYTE *)(*(_QWORD *)a1 + 19);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  *v1 = v6;
  v1[1] = v4;
  *((_BYTE *)v1 + 16) = v5;
  *((_BYTE *)v1 + 18) = v2;
  Binding.wrappedValue.setter((char *)v1 + 18, v3);
  swift_release(v6);
  swift_release(v4);
  free(v1);
}

uint64_t Library.SortFilterButton.$filterOption.getter()
{
  uint64_t v0;
  uint64_t v2;

  v0 = sub_100007E8C(&qword_1011ABF38);
  Binding.projectedValue.getter(&v2, v0);
  return v2;
}

uint64_t Library.SortFilterButton.body.getter@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[2];
  _BYTE v23[24];
  uint64_t v24;
  uint64_t v25;
  char v26;

  v22[1] = a5;
  v9 = type metadata accessor for ButtonMenuStyle(0);
  v22[0] = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011C9CD8);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23[16] = a1;
  v24 = a2;
  v25 = a3;
  v26 = a4;
  v16 = sub_100007E8C(&qword_1011C9CE0);
  v17 = sub_100049F28(&qword_1011C9CE8, &qword_1011C9CE0, (uint64_t)&protocol conformance descriptor for Picker<A, B, C>);
  v18 = Menu.init(content:label:)(sub_1007DF294, v23, sub_1007DF10C, 0, &type metadata for Image, v16, &protocol witness table for Image, v17);
  ButtonMenuStyle.init()(v18);
  v19 = sub_100049F28(&qword_1011C9CF0, &qword_1011C9CD8, (uint64_t)&protocol conformance descriptor for Menu<A, B>);
  v20 = sub_100048748(&qword_1011A0608, (uint64_t (*)(uint64_t))&type metadata accessor for ButtonMenuStyle, (uint64_t)&protocol conformance descriptor for ButtonMenuStyle);
  View.menuStyle<A>(_:)(v11, v12, v9, v19, v20);
  (*(void (**)(char *, uint64_t))(v22[0] + 8))(v11, v9);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_1007DE934()
{
  uint64_t v0;
  uint64_t v2;

  v0 = sub_100007E8C(&qword_1011ABF38);
  Binding.projectedValue.getter(&v2, v0);
  sub_100007E8C(&qword_1011C9DC8);
  sub_1007DFFB0();
  sub_100049F28(&qword_1011C9DD8, &qword_1011C9DC8, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  return Picker.init(selection:label:content:)(&v2);
}

uint64_t sub_1007DEA20@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v46)(char *, char *, uint64_t);
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v54 = a2;
  v3 = type metadata accessor for Locale(0);
  __chkstk_darwin(v3);
  v52 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v51 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_100007E8C(&qword_1011C9DE0);
  __chkstk_darwin(v50);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011A2A80);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = v9;
  __chkstk_darwin(v9);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_100007E8C(&qword_1011C9DE8);
  __chkstk_darwin(v49);
  v53 = (uint64_t)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v46 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v46 - v19;
  __chkstk_darwin(v21);
  v23 = (char *)&v46 - v22;
  v48 = (uint64_t)&v46 - v22;
  sub_1007DEE34(a1);
  v25 = v24;
  v27 = v26;
  swift_bridgeObjectRelease();
  v55 = v25;
  v56 = v27;
  sub_1007DEE34(a1);
  v29 = v28;
  v31 = v30;
  swift_bridgeObjectRelease();
  v47 = sub_100055B68();
  Label<>.init<A>(_:systemImage:)(&v55, v29, v31, &type metadata for String, v47);
  v46 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v32 = v11;
  v46(v8, v13, v11);
  v33 = v50;
  v8[*(int *)(v50 + 36)] = 0;
  sub_10004A160((uint64_t)v8, (uint64_t)v20, &qword_1011C9DE0);
  v34 = v49;
  v20[*(int *)(v49 + 36)] = 0;
  sub_10004FF60((uint64_t)v8, &qword_1011C9DE0);
  v35 = *(void (**)(char *, uint64_t))(v10 + 8);
  v36 = v32;
  v35(v13, v32);
  sub_1007DFFF4((uint64_t)v20, (uint64_t)v23);
  v37 = v51;
  v38 = String.LocalizationValue.init(stringLiteral:)(0x657469726F766146, 0xE900000000000073);
  v39 = v52;
  static Locale.current.getter(v38);
  v55 = String.init(localized:table:bundle:locale:comment:)(v37, 0, 0, 0, v39, "Title for favorites library filter", 34, 2);
  v56 = v40;
  Label<>.init<A>(_:systemImage:)(&v55, 1918989427, 0xE400000000000000, &type metadata for String, v47);
  v46(v8, v13, v36);
  v8[*(int *)(v33 + 36)] = 1;
  sub_10004A160((uint64_t)v8, (uint64_t)v17, &qword_1011C9DE0);
  v17[*(int *)(v34 + 36)] = 1;
  sub_10004FF60((uint64_t)v8, &qword_1011C9DE0);
  v35(v13, v36);
  sub_1007DFFF4((uint64_t)v17, (uint64_t)v20);
  v41 = v48;
  sub_10004A160(v48, (uint64_t)v17, &qword_1011C9DE8);
  v42 = v53;
  sub_10004A160((uint64_t)v20, v53, &qword_1011C9DE8);
  v43 = v54;
  sub_10004A160((uint64_t)v17, v54, &qword_1011C9DE8);
  v44 = sub_100007E8C(&qword_1011C9DF0);
  sub_10004A160(v42, v43 + *(int *)(v44 + 48), &qword_1011C9DE8);
  sub_10004FF60((uint64_t)v20, &qword_1011C9DE8);
  sub_10004FF60(v41, &qword_1011C9DE8);
  sub_10004FF60(v42, &qword_1011C9DE8);
  return sub_10004FF60((uint64_t)v17, &qword_1011C9DE8);
}

void sub_1007DEE34(char a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v3);
  __asm { BR              X10 }
}

uint64_t sub_1007DEED0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = String.LocalizationValue.init(stringLiteral:)(0x75626C41206C6C41, 0xEA0000000000736DLL);
  static Locale.current.getter(v2);
  return String.init(localized:table:bundle:locale:comment:)(v1, 0, 0, 0, v0, "Title for library filter option", 31, 2);
}

uint64_t sub_1007DF10C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = Image.init(systemName:)(0xD00000000000001ALL, 0x8000000100E45D70);
  *a1 = result;
  return result;
}

uint64_t Library.SortFilterButton.Configuration.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1007DF178 + 4 * byte_100ED0B6E[a1]))(0x736D75626C61, 0xE600000000000000);
}

uint64_t sub_1007DF178()
{
  return 0x73747369747261;
}

uint64_t sub_1007DF190()
{
  return 0x74616C69706D6F63;
}

uint64_t sub_1007DF1B0()
{
  return 0x59726F466564616DLL;
}

uint64_t sub_1007DF1CC()
{
  return 0x646956636973756DLL;
}

uint64_t sub_1007DF1EC()
{
  return 0x7473696C79616C70;
}

uint64_t sub_1007DF208()
{
  return 0x73676E6F73;
}

uint64_t _s25SortFilterContentModifierVMa(uint64_t a1)
{
  uint64_t result;

  result = qword_1011C9D58;
  if (!qword_1011C9D58)
    return swift_getSingletonMetadata(a1, &_s25SortFilterContentModifierVMn);
  return result;
}

uint64_t sub_1007DF258(uint64_t a1)
{
  uint64_t v2;

  v2 = _s25SortFilterContentModifierVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1007DF294()
{
  return sub_1007DE934();
}

void sub_1007DF2A8()
{
  __asm { BR              X10 }
}

uint64_t sub_1007DF2E0(uint64_t a1)
{
  String.hash(into:)(a1, 0x73747369747261, 0xE700000000000000);
  return swift_bridgeObjectRelease(0xE700000000000000);
}

unint64_t sub_1007DF398@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s9MusicCore7LibraryO0A0E16SortFilterButtonV13ConfigurationO8rawValueAHSgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1007DF3C4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1007DF3F0 + 4 * byte_100ED0B7C[*v0]))();
}

void sub_1007DF3F0(_QWORD *a1@<X8>)
{
  *a1 = 0x73747369747261;
  a1[1] = 0xE700000000000000;
}

void sub_1007DF40C(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "compilations");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void sub_1007DF430(_QWORD *a1@<X8>)
{
  *a1 = 0x59726F466564616DLL;
  a1[1] = 0xEA0000000000756FLL;
}

void sub_1007DF450(_QWORD *a1@<X8>)
{
  *a1 = 0x646956636973756DLL;
  a1[1] = 0xEB00000000736F65;
}

void sub_1007DF474(_QWORD *a1@<X8>)
{
  *a1 = 0x7473696C79616C70;
  a1[1] = 0xE900000000000073;
}

void sub_1007DF494(_QWORD *a1@<X8>)
{
  *a1 = 0x73676E6F73;
  a1[1] = 0xE500000000000000;
}

uint64_t sub_1007DF4AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[24];
  uint64_t v19;
  uint64_t v20;
  char v21;

  v1 = type metadata accessor for ButtonMenuStyle(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v18[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_100007E8C(&qword_1011C9CD8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = *(_QWORD *)(v0 + 8);
  v10 = *(_QWORD *)(v0 + 16);
  v11 = *(_BYTE *)(v0 + 24);
  v18[16] = *(_BYTE *)v0;
  v19 = v9;
  v20 = v10;
  v21 = v11;
  v12 = sub_100007E8C(&qword_1011C9CE0);
  v13 = sub_100049F28(&qword_1011C9CE8, &qword_1011C9CE0, (uint64_t)&protocol conformance descriptor for Picker<A, B, C>);
  v14 = Menu.init(content:label:)(sub_1007E010C, v18, sub_1007DF10C, 0, &type metadata for Image, v12, &protocol witness table for Image, v13);
  ButtonMenuStyle.init()(v14);
  v15 = sub_100049F28(&qword_1011C9CF0, &qword_1011C9CD8, (uint64_t)&protocol conformance descriptor for Menu<A, B>);
  v16 = sub_100048748(&qword_1011A0608, (uint64_t (*)(uint64_t))&type metadata accessor for ButtonMenuStyle, (uint64_t)&protocol conformance descriptor for ButtonMenuStyle);
  View.menuStyle<A>(_:)(v4, v5, v1, v15, v16);
  (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t _s9MusicCore7LibraryO0A0E16SortFilterButtonV13ConfigurationO8rawValueAHSgSS_tcfC_0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010AD608, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 7)
    return 7;
  else
    return v3;
}

unint64_t sub_1007DF6B0()
{
  unint64_t result;

  result = qword_1011C9CF8;
  if (!qword_1011C9CF8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Library.SortFilterButton.Configuration, &type metadata for Library.SortFilterButton.Configuration);
    atomic_store(result, (unint64_t *)&qword_1011C9CF8);
  }
  return result;
}

uint64_t sub_1007DF6F4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of Library.SortFilterButton.body>>, 1);
}

uint64_t _s16SortFilterButtonVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  swift_retain(v3);
  swift_retain(v4);
  return a1;
}

uint64_t _s16SortFilterButtonVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v5;
  swift_retain(v5);
  swift_release(v4);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v6;
  swift_retain(v6);
  swift_release(v7);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t _s16SortFilterButtonVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  swift_release(*(_QWORD *)(a1 + 8));
  v4 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release(v4);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t _s16SortFilterButtonVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 25))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s16SortFilterButtonVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Library.SortFilterButton()
{
  return &type metadata for Library.SortFilterButton;
}

uint64_t _s16SortFilterButtonV13ConfigurationOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1007DF8E8 + 4 * byte_100ED0B88[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1007DF91C + 4 * byte_100ED0B83[v4]))();
}

uint64_t sub_1007DF91C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1007DF924(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1007DF92CLL);
  return result;
}

uint64_t sub_1007DF938(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1007DF940);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1007DF944(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1007DF94C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Library.SortFilterButton.Configuration()
{
  return &type metadata for Library.SortFilterButton.Configuration;
}

uint64_t sub_1007DF968(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *a1;
  v2 = _s25SortFilterContentModifierVMa(255);
  v3 = type metadata accessor for ModifiedContent(255, v1, v2);
  sub_100048748(&qword_10119F7E8, _s25SortFilterContentModifierVMa, (uint64_t)&unk_100ED0D00);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v3);
}

uint64_t sub_1007DF9E8()
{
  _QWORD v1[4];

  v1[0] = sub_100044B54(&qword_1011C9CD8);
  v1[1] = type metadata accessor for ButtonMenuStyle(255);
  v1[2] = sub_100049F28(&qword_1011C9CF0, &qword_1011C9CD8, (uint64_t)&protocol conformance descriptor for Menu<A, B>);
  v1[3] = sub_100048748(&qword_1011A0608, (uint64_t (*)(uint64_t))&type metadata accessor for ButtonMenuStyle, (uint64_t)&protocol conformance descriptor for ButtonMenuStyle);
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.menuStyle<A>(_:)>>, 1);
}

_QWORD *sub_1007DFA88(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v12);
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v5 = a2[1];
    v6 = a2[2];
    *(_QWORD *)(a1 + 8) = v5;
    *(_QWORD *)(a1 + 16) = v6;
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    v7 = *(int *)(a3 + 24);
    v8 = a1 + v7;
    v9 = (uint64_t)a2 + v7;
    v10 = type metadata accessor for ToolbarItemPlacement(0);
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_retain(v5);
    swift_retain(v6);
    v11(v8, v9, v10);
  }
  return v3;
}

uint64_t sub_1007DFB44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release(*(_QWORD *)(a1 + 8));
  swift_release(*(_QWORD *)(a1 + 16));
  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for ToolbarItemPlacement(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_1007DFB94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for ToolbarItemPlacement(0);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_retain(v4);
  swift_retain(v5);
  v10(v7, v8, v9);
  return a1;
}

uint64_t sub_1007DFC24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  swift_retain(v7);
  swift_release(v6);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v8;
  swift_retain(v8);
  swift_release(v9);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v10 = *(int *)(a3 + 24);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = type metadata accessor for ToolbarItemPlacement(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t sub_1007DFCC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = type metadata accessor for ToolbarItemPlacement(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_1007DFD2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release(v6);
  v7 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release(v7);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for ToolbarItemPlacement(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_1007DFDB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1007DFDC4);
}

uint64_t sub_1007DFDC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for ToolbarItemPlacement(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_1007DFE40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1007DFE4C);
}

uint64_t sub_1007DFE4C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 16) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for ToolbarItemPlacement(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1007DFEC0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = &unk_100ED0CD0;
  v4[1] = &unk_100ED0CE8;
  result = type metadata accessor for ToolbarItemPlacement(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1007DFF3C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAD8E0, 1);
}

uint64_t sub_1007DFF4C()
{
  uint64_t v0;

  return sub_1007DE308(*(_QWORD *)(v0 + 16));
}

_QWORD *sub_1007DFF54@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1007DE450(*(char **)(v1 + 16), a1);
}

unint64_t sub_1007DFF5C()
{
  unint64_t result;

  result = qword_1011C9DC0;
  if (!qword_1011C9DC0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Library.SortFilterButton, &type metadata for Library.SortFilterButton);
    atomic_store(result, (unint64_t *)&qword_1011C9DC0);
  }
  return result;
}

uint64_t sub_1007DFFA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1007DEA20(*(_BYTE *)(v1 + 16), a1);
}

unint64_t sub_1007DFFB0()
{
  unint64_t result;

  result = qword_1011C9DD0;
  if (!qword_1011C9DD0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Library.ContentFilterOption, &type metadata for Library.ContentFilterOption);
    atomic_store(result, (unint64_t *)&qword_1011C9DD0);
  }
  return result;
}

uint64_t sub_1007DFFF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011C9DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1007E003C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v0 = sub_100044B54(&qword_1011C9D98);
  v1 = sub_100044B54(&qword_1011C9DA0);
  v2 = sub_100049F28(&qword_1011C9DA8, &qword_1011C9D98, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
  v5 = sub_100044B54(&qword_1011C9DB0);
  v6 = sub_100049F28(&qword_1011C9DB8, &qword_1011C9DB0, (uint64_t)&protocol conformance descriptor for ToolbarItem<A, B>);
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v5, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
  v5 = v0;
  v6 = v1;
  v7 = v2;
  v8 = OpaqueTypeConformance2;
  return swift_getOpaqueTypeConformance2(&v5, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 1);
}

uint64_t sub_1007E0110(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;
  _QWORD v14[2];
  uint64_t v15;
  char *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  char *v23;
  void *v24;
  void *v25;
  uint64_t v26;

  v2 = swift_checkMetadataState(319, *(_QWORD *)(a1 + 80));
  v3 = v2;
  if (v4 <= 0x3F)
  {
    v14[0] = *(_QWORD *)(v2 - 8) + 64;
    v14[1] = &unk_100ED0D68;
    v5 = *(_QWORD *)(a1 + 88);
    AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v5, v2, &unk_100FA152C, &unk_100FA154C);
    v11 = swift_getAssociatedTypeWitness(255, v5, v3, &unk_100FA152C, &unk_100FA1554);
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v5, v3, AssociatedTypeWitness, &unk_100FA152C, &unk_100FA1544);
    v13 = swift_getAssociatedConformanceWitness(v5, v3, v11, &unk_100FA152C, &unk_100FA153C);
    v6 = type metadata accessor for MusicLibrarySectionedResponse(255, &AssociatedTypeWitness);
    v7 = type metadata accessor for Optional(319, v6);
    v3 = v7;
    if (v8 <= 0x3F)
    {
      v15 = *(_QWORD *)(v7 - 8) + 64;
      v16 = (char *)&value witness table for Builtin.BridgeObject + 64;
      v17 = &unk_100ED0D80;
      v18 = &unk_100ED0D98;
      v19 = &unk_100ED0D98;
      v20 = &unk_100ED0DB0;
      v21 = &unk_100ED0D80;
      v22 = &unk_100ED0D98;
      v23 = (char *)&value witness table for Builtin.BridgeObject + 64;
      v24 = &unk_100ED0D80;
      v25 = &unk_100ED0D80;
      v26 = v15;
      return swift_initClassMetadata2(a1, 0, 14, v14, a1 + 96);
    }
  }
  return v3;
}

uint64_t *sub_1007E02A0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  __n128 v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 80);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 96), v2);
  sub_10004BA30(*(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 104)), *(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 104) + 8));
  v3 = (uint64_t)v0 + *(_QWORD *)(*v0 + 112);
  v4 = *(_QWORD *)(v1 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v4, v2, &unk_100FA152C, &unk_100FA154C);
  v11 = swift_getAssociatedTypeWitness(255, v4, v2, &unk_100FA152C, &unk_100FA1554);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v4, v2, AssociatedTypeWitness, &unk_100FA152C, &unk_100FA1544);
  v13 = swift_getAssociatedConformanceWitness(v4, v2, v11, &unk_100FA152C, &unk_100FA153C);
  v5 = type metadata accessor for MusicLibrarySectionedResponse(255, &AssociatedTypeWitness);
  v6 = type metadata accessor for Optional(0, v5);
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v3, v6);
  swift_bridgeObjectRelease();

  swift_release();
  sub_1007E04E0((uint64_t)v0 + *(_QWORD *)(*v0 + 152));
  swift_release();
  v8 = swift_bridgeObjectRelease();
  ((void (*)(char *, uint64_t, __n128))v7)((char *)v0 + *(_QWORD *)(*v0 + 200), v6, v8);
  return v0;
}

uint64_t sub_1007E0450()
{
  uint64_t v0;

  sub_1007E02A0();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t _s18ResponseControllerCMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&_s18ResponseControllerCMn);
}

uint64_t sub_1007E0480()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10004FACC(v0, qword_1011C9DF8);
  sub_100048B14(v0, (uint64_t)qword_1011C9DF8);
  return static Logger.music(_:)(0xD000000000000019, 0x8000000100E45EC0);
}

uint64_t sub_1007E04E0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100007E8C((uint64_t *)&unk_1011A3850);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_1007E0520(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t, __n128);
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  char *v28;
  char *v29;
  int v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  char *__dst;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v12 + 48);
    v14 = swift_retain();
    if (v13(v10, 1, v11, v14))
    {
      v15 = sub_100007E8C(&qword_1011AD888);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      v16 = type metadata accessor for Playlist(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v9, v10, v16);
      v17 = *(int *)(v11 + 20);
      __dst = &v9[v17];
      v18 = &v10[v17];
      v19 = type metadata accessor for IndexPath(0);
      v20 = *(_QWORD *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      {
        v21 = type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination.OperationKind(0);
        memcpy(__dst, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 16))(__dst, v18, v19);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
      }
      v22 = *(int *)(v11 + 24);
      v23 = &v9[v22];
      v24 = &v10[v22];
      if (*(_QWORD *)v24)
      {
        v25 = *((_QWORD *)v24 + 1);
        *(_QWORD *)v23 = *(_QWORD *)v24;
        *((_QWORD *)v23 + 1) = v25;
        v26 = swift_retain();
      }
      else
      {
        v26 = *(__n128 *)v24;
        *(_OWORD *)v23 = *(_OWORD *)v24;
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v12 + 56))(v9, 0, 1, v11, v26);
    }
    v27 = *(int *)(a3 + 24);
    v28 = (char *)v7 + v27;
    v29 = (char *)a2 + v27;
    swift_unknownObjectWeakCopyInit((char *)v7 + v27, v29);
    v30 = v29[48];
    if (v30 == 255)
    {
      v36 = *(_OWORD *)(v29 + 24);
      *(_OWORD *)(v28 + 8) = *(_OWORD *)(v29 + 8);
      *(_OWORD *)(v28 + 24) = v36;
      *(_OWORD *)(v28 + 33) = *(_OWORD *)(v29 + 33);
    }
    else
    {
      v31 = (void *)*((_QWORD *)v29 + 1);
      v32 = *((_QWORD *)v29 + 2);
      v33 = *((_QWORD *)v29 + 3);
      v34 = *((_QWORD *)v29 + 4);
      v35 = *((_QWORD *)v29 + 5);
      sub_100347EC8(v31, v32, v33, v34, v35, v29[48]);
      *((_QWORD *)v28 + 1) = v31;
      *((_QWORD *)v28 + 2) = v32;
      *((_QWORD *)v28 + 3) = v33;
      *((_QWORD *)v28 + 4) = v34;
      *((_QWORD *)v28 + 5) = v35;
      v28[48] = v30;
    }
    v37 = *((_QWORD *)v29 + 7);
    if (v37)
    {
      v38 = *((_QWORD *)v29 + 8);
      *((_QWORD *)v28 + 7) = v37;
      *((_QWORD *)v28 + 8) = v38;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(v28 + 56) = *(_OWORD *)(v29 + 56);
    }
  }
  return v7;
}

uint64_t type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination(uint64_t a1)
{
  return sub_100055934(a1, qword_1011CA008, (uint64_t)&nominal type descriptor for DragDropToPlaylist.Destination.PlaylistDestination);
}

uint64_t type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination.OperationKind(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011C9FA0, (uint64_t)&nominal type descriptor for DragDropToPlaylist.Destination.PlaylistDestination.OperationKind);
}

double sub_1007E07B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  int v13;

  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    v7 = type metadata accessor for Playlist(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v4, v7);
    v8 = v4 + *(int *)(v5 + 20);
    v9 = type metadata accessor for IndexPath(0);
    v10 = *(_QWORD *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    if (*(_QWORD *)(v4 + *(int *)(v5 + 24)))
      swift_release();
  }
  v11 = a1 + *(int *)(a2 + 24);
  swift_unknownObjectWeakDestroy(v11, v6);
  v13 = *(unsigned __int8 *)(v11 + 48);
  if (v13 != 255)
    sub_100064AA4(*(id *)(v11 + 8), *(_QWORD *)(v11 + 16), *(_QWORD *)(v11 + 24), *(_QWORD *)(v11 + 32), *(_QWORD *)(v11 + 40), v13);
  if (*(_QWORD *)(v11 + 56))
    *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

_QWORD *sub_1007E08E4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t, __n128);
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  char *v26;
  char *v27;
  int v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  char *__dst;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v10 + 48);
  v12 = swift_retain();
  if (v11(v8, 1, v9, v12))
  {
    v13 = sub_100007E8C(&qword_1011AD888);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v14 = type metadata accessor for Playlist(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v7, v8, v14);
    v15 = *(int *)(v9 + 20);
    __dst = &v7[v15];
    v16 = &v8[v15];
    v17 = type metadata accessor for IndexPath(0);
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      v19 = type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination.OperationKind(0);
      memcpy(__dst, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(__dst, v16, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(__dst, 0, 1, v17);
    }
    v20 = *(int *)(v9 + 24);
    v21 = &v7[v20];
    v22 = &v8[v20];
    if (*(_QWORD *)v22)
    {
      v23 = *((_QWORD *)v22 + 1);
      *(_QWORD *)v21 = *(_QWORD *)v22;
      *((_QWORD *)v21 + 1) = v23;
      v24 = swift_retain();
    }
    else
    {
      v24 = *(__n128 *)v22;
      *(_OWORD *)v21 = *(_OWORD *)v22;
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v10 + 56))(v7, 0, 1, v9, v24);
  }
  v25 = *(int *)(a3 + 24);
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  swift_unknownObjectWeakCopyInit((char *)a1 + v25, v27);
  v28 = v27[48];
  if (v28 == 255)
  {
    v34 = *(_OWORD *)(v27 + 24);
    *(_OWORD *)(v26 + 8) = *(_OWORD *)(v27 + 8);
    *(_OWORD *)(v26 + 24) = v34;
    *(_OWORD *)(v26 + 33) = *(_OWORD *)(v27 + 33);
  }
  else
  {
    v29 = (void *)*((_QWORD *)v27 + 1);
    v30 = *((_QWORD *)v27 + 2);
    v31 = *((_QWORD *)v27 + 3);
    v32 = *((_QWORD *)v27 + 4);
    v33 = *((_QWORD *)v27 + 5);
    sub_100347EC8(v29, v30, v31, v32, v33, v27[48]);
    *((_QWORD *)v26 + 1) = v29;
    *((_QWORD *)v26 + 2) = v30;
    *((_QWORD *)v26 + 3) = v31;
    *((_QWORD *)v26 + 4) = v32;
    *((_QWORD *)v26 + 5) = v33;
    v26[48] = v28;
  }
  v35 = *((_QWORD *)v27 + 7);
  if (v35)
  {
    v36 = *((_QWORD *)v27 + 8);
    *((_QWORD *)v26 + 7) = v35;
    *((_QWORD *)v26 + 8) = v36;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(v26 + 56) = *(_OWORD *)(v27 + 56);
  }
  return a1;
}

_QWORD *sub_1007E0B24(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(char *, uint64_t, uint64_t);
  int v30;
  size_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  char *v39;
  char *v40;
  __int128 *v41;
  __int128 *v42;
  int v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned __int8 v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v68;
  __n128 *v69;
  __n128 *v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      v76 = a3;
      v14 = type metadata accessor for Playlist(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v7, v8, v14);
      v15 = *(int *)(v9 + 20);
      v16 = &v7[v15];
      v17 = &v8[v15];
      v18 = type metadata accessor for IndexPath(0);
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        v20 = type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination.OperationKind(0);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
      v33 = *(int *)(v9 + 24);
      v34 = &v7[v33];
      v35 = &v8[v33];
      a3 = v76;
      if (*(_QWORD *)v35)
      {
        v36 = *((_QWORD *)v35 + 1);
        *(_QWORD *)v34 = *(_QWORD *)v35;
        *((_QWORD *)v34 + 1) = v36;
        v37 = swift_retain();
      }
      else
      {
        v37 = *(__n128 *)v35;
        *(_OWORD *)v34 = *(_OWORD *)v35;
      }
      v22.n128_f64[0] = (*(double (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v10 + 56))(v7, 0, 1, v9, v37);
      goto LABEL_16;
    }
LABEL_7:
    v21 = sub_100007E8C(&qword_1011AD888);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_16;
  }
  if (v13)
  {
    sub_10005B748((uint64_t)v7, type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination);
    goto LABEL_7;
  }
  v77 = a3;
  v23 = type metadata accessor for Playlist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 24))(v7, v8, v23);
  v24 = *(int *)(v9 + 20);
  v25 = &v7[v24];
  v26 = &v8[v24];
  v27 = type metadata accessor for IndexPath(0);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  v75 = v25;
  LODWORD(v25) = v29(v25, 1, v27);
  v30 = v29(v26, 1, v27);
  if ((_DWORD)v25)
  {
    if (!v30)
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v75, v26, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v75, 0, 1, v27);
      goto LABEL_36;
    }
    v31 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination.OperationKind(0)
                                - 8)
                    + 64);
    v32 = v75;
  }
  else
  {
    if (!v30)
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 24))(v75, v26, v27);
      goto LABEL_36;
    }
    (*(void (**)(char *, uint64_t))(v28 + 8))(v75, v27);
    v31 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination.OperationKind(0)
                                - 8)
                    + 64);
    v32 = v75;
  }
  memcpy(v32, v26, v31);
LABEL_36:
  v68 = *(int *)(v9 + 24);
  v69 = (__n128 *)&v7[v68];
  v70 = (__n128 *)&v8[v68];
  v71 = *(_QWORD *)&v7[v68];
  v72 = *(_QWORD *)&v8[v68];
  a3 = v77;
  if (v71)
  {
    if (v72)
    {
      v73 = v70->n128_u64[1];
      v69->n128_u64[0] = v72;
      v69->n128_u64[1] = v73;
      swift_retain();
      v22 = swift_release();
      goto LABEL_16;
    }
    swift_release();
  }
  else if (v72)
  {
    v74 = v70->n128_u64[1];
    v69->n128_u64[0] = v72;
    v69->n128_u64[1] = v74;
    v22 = swift_retain();
    goto LABEL_16;
  }
  v22 = *v70;
  *v69 = *v70;
LABEL_16:
  v38 = *(int *)(a3 + 24);
  v39 = (char *)a1 + v38;
  v40 = (char *)a2 + v38;
  swift_unknownObjectWeakCopyAssign((char *)a1 + v38, v40, v22);
  v41 = (__int128 *)(v39 + 8);
  v42 = (__int128 *)(v40 + 8);
  v43 = v40[48];
  if (v39[48] == 255)
  {
    if (v43 == 255)
    {
      v62 = *v42;
      v63 = *(_OWORD *)(v40 + 24);
      *(_OWORD *)(v39 + 33) = *(_OWORD *)(v40 + 33);
      *v41 = v62;
      *(_OWORD *)(v39 + 24) = v63;
    }
    else
    {
      v55 = (void *)*((_QWORD *)v40 + 1);
      v56 = *((_QWORD *)v40 + 2);
      v57 = *((_QWORD *)v40 + 3);
      v58 = *((_QWORD *)v40 + 4);
      v59 = *((_QWORD *)v40 + 5);
      sub_100347EC8(v55, v56, v57, v58, v59, v40[48]);
      *((_QWORD *)v39 + 1) = v55;
      *((_QWORD *)v39 + 2) = v56;
      *((_QWORD *)v39 + 3) = v57;
      *((_QWORD *)v39 + 4) = v58;
      *((_QWORD *)v39 + 5) = v59;
      v39[48] = v43;
    }
  }
  else if (v43 == 255)
  {
    sub_1003482D8((uint64_t)(v39 + 8));
    v60 = *(_OWORD *)(v40 + 33);
    v61 = *(_OWORD *)(v40 + 24);
    *v41 = *v42;
    *(_OWORD *)(v39 + 24) = v61;
    *(_OWORD *)(v39 + 33) = v60;
  }
  else
  {
    v44 = (void *)*((_QWORD *)v40 + 1);
    v45 = *((_QWORD *)v40 + 2);
    v46 = *((_QWORD *)v40 + 3);
    v47 = *((_QWORD *)v40 + 4);
    v48 = *((_QWORD *)v40 + 5);
    sub_100347EC8(v44, v45, v46, v47, v48, v40[48]);
    v49 = (void *)*((_QWORD *)v39 + 1);
    v50 = *((_QWORD *)v39 + 2);
    v51 = *((_QWORD *)v39 + 3);
    v52 = *((_QWORD *)v39 + 4);
    v53 = *((_QWORD *)v39 + 5);
    *((_QWORD *)v39 + 1) = v44;
    *((_QWORD *)v39 + 2) = v45;
    *((_QWORD *)v39 + 3) = v46;
    *((_QWORD *)v39 + 4) = v47;
    *((_QWORD *)v39 + 5) = v48;
    v54 = v39[48];
    v39[48] = v43;
    sub_100064AA4(v49, v50, v51, v52, v53, v54);
  }
  v64 = *((_QWORD *)v40 + 7);
  if (!*((_QWORD *)v39 + 7))
  {
    if (v64)
    {
      v66 = *((_QWORD *)v40 + 8);
      *((_QWORD *)v39 + 7) = v64;
      *((_QWORD *)v39 + 8) = v66;
      swift_retain();
      return a1;
    }
LABEL_29:
    *(_OWORD *)(v39 + 56) = *(_OWORD *)(v40 + 56);
    return a1;
  }
  if (!v64)
  {
    swift_release();
    goto LABEL_29;
  }
  v65 = *((_QWORD *)v40 + 8);
  *((_QWORD *)v39 + 7) = v64;
  *((_QWORD *)v39 + 8) = v65;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *sub_1007E0FB8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *__dst;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = sub_100007E8C(&qword_1011AD888);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = type metadata accessor for Playlist(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v7, v8, v12);
    v13 = *(int *)(v9 + 20);
    __dst = &v7[v13];
    v14 = &v8[v13];
    v15 = type metadata accessor for IndexPath(0);
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      v17 = type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination.OperationKind(0);
      memcpy(__dst, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(__dst, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
    }
    v18 = *(int *)(v9 + 24);
    v19 = &v7[v18];
    v20 = &v8[v18];
    v21 = *(_QWORD *)v20;
    if (*(_QWORD *)v20)
    {
      v22 = *((_QWORD *)v20 + 1);
      *(_QWORD *)v19 = v21;
      *((_QWORD *)v19 + 1) = v22;
    }
    else
    {
      *(_OWORD *)v19 = *(_OWORD *)v20;
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v23 = *(int *)(a3 + 24);
  v24 = (char *)a2 + v23;
  v25 = swift_unknownObjectWeakTakeInit((char *)a1 + v23, v24);
  *(_OWORD *)(v25 + 8) = *(_OWORD *)(v24 + 8);
  *(_OWORD *)(v25 + 24) = *(_OWORD *)(v24 + 24);
  *(_OWORD *)(v25 + 33) = *(_OWORD *)(v24 + 33);
  v26 = *((_QWORD *)v24 + 7);
  if (v26)
  {
    v27 = *((_QWORD *)v24 + 8);
    *(_QWORD *)(v25 + 56) = v26;
    *(_QWORD *)(v25 + 64) = v27;
  }
  else
  {
    *(_OWORD *)(v25 + 56) = *(_OWORD *)(v24 + 56);
  }
  return a1;
}

_QWORD *sub_1007E119C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  int v28;
  size_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  int v39;
  int v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *__dst;
  char *__dsta;

  *a1 = *a2;
  swift_release();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      v14 = type metadata accessor for Playlist(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v7, v8, v14);
      v15 = *(int *)(v9 + 20);
      __dst = &v7[v15];
      v16 = &v8[v15];
      v17 = type metadata accessor for IndexPath(0);
      v18 = *(_QWORD *)(v17 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      {
        v19 = type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination.OperationKind(0);
        memcpy(__dst, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 32))(__dst, v16, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(__dst, 0, 1, v17);
      }
      v31 = *(int *)(v9 + 24);
      v32 = &v7[v31];
      v33 = &v8[v31];
      v34 = *(_QWORD *)v33;
      if (*(_QWORD *)v33)
      {
        v35 = *((_QWORD *)v33 + 1);
        *(_QWORD *)v32 = v34;
        *((_QWORD *)v32 + 1) = v35;
      }
      else
      {
        *(_OWORD *)v32 = *(_OWORD *)v33;
      }
      v21.n128_f64[0] = (*(double (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_16;
    }
LABEL_7:
    v20 = sub_100007E8C(&qword_1011AD888);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_16;
  }
  if (v13)
  {
    sub_10005B748((uint64_t)v7, type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination);
    goto LABEL_7;
  }
  v22 = type metadata accessor for Playlist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v7, v8, v22);
  v23 = *(int *)(v9 + 20);
  v24 = &v7[v23];
  v25 = &v8[v23];
  v26 = type metadata accessor for IndexPath(0);
  v58 = *(_QWORD *)(v26 - 8);
  v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v58 + 48);
  __dsta = v24;
  LODWORD(v24) = v27(v24, 1, v26);
  v28 = v27(v25, 1, v26);
  if ((_DWORD)v24)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v58 + 32))(__dsta, v25, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(__dsta, 0, 1, v26);
      goto LABEL_34;
    }
    v29 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination.OperationKind(0)
                                - 8)
                    + 64);
    v30 = __dsta;
  }
  else
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v58 + 40))(__dsta, v25, v26);
      goto LABEL_34;
    }
    (*(void (**)(char *, uint64_t))(v58 + 8))(__dsta, v26);
    v29 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination.OperationKind(0)
                                - 8)
                    + 64);
    v30 = __dsta;
  }
  memcpy(v30, v25, v29);
LABEL_34:
  v52 = *(int *)(v9 + 24);
  v53 = &v7[v52];
  v54 = &v8[v52];
  v55 = *(_QWORD *)v54;
  if (*(_QWORD *)v53)
  {
    if (v55)
    {
      v56 = *((_QWORD *)v54 + 1);
      *(_QWORD *)v53 = v55;
      *((_QWORD *)v53 + 1) = v56;
      v21 = swift_release();
      goto LABEL_16;
    }
    swift_release();
  }
  else if (v55)
  {
    v57 = *((_QWORD *)v54 + 1);
    *(_QWORD *)v53 = v55;
    *((_QWORD *)v53 + 1) = v57;
    goto LABEL_16;
  }
  v21 = *(__n128 *)v54;
  *(_OWORD *)v53 = *(_OWORD *)v54;
LABEL_16:
  v36 = *(int *)(a3 + 24);
  v37 = (char *)a1 + v36;
  v38 = (char *)a2 + v36;
  swift_unknownObjectWeakTakeAssign((char *)a1 + v36, v38, v21);
  v39 = v37[48];
  if (v39 != 255)
  {
    v40 = v38[48];
    if (v40 != 255)
    {
      v41 = *((_QWORD *)v38 + 5);
      v42 = (void *)*((_QWORD *)v37 + 1);
      v43 = *((_QWORD *)v37 + 2);
      v44 = *((_QWORD *)v37 + 3);
      v45 = *((_QWORD *)v37 + 4);
      v46 = *((_QWORD *)v37 + 5);
      *(_OWORD *)(v37 + 8) = *(_OWORD *)(v38 + 8);
      *(_OWORD *)(v37 + 24) = *(_OWORD *)(v38 + 24);
      *((_QWORD *)v37 + 5) = v41;
      v37[48] = v40;
      sub_100064AA4(v42, v43, v44, v45, v46, v39);
      goto LABEL_21;
    }
    sub_1003482D8((uint64_t)(v37 + 8));
  }
  v47 = *(_OWORD *)(v38 + 24);
  *(_OWORD *)(v37 + 8) = *(_OWORD *)(v38 + 8);
  *(_OWORD *)(v37 + 24) = v47;
  *(_OWORD *)(v37 + 33) = *(_OWORD *)(v38 + 33);
LABEL_21:
  v48 = *((_QWORD *)v38 + 7);
  if (!*((_QWORD *)v37 + 7))
  {
    if (v48)
    {
      v50 = *((_QWORD *)v38 + 8);
      *((_QWORD *)v37 + 7) = v48;
      *((_QWORD *)v37 + 8) = v50;
      return a1;
    }
LABEL_27:
    *(_OWORD *)(v37 + 56) = *(_OWORD *)(v38 + 56);
    return a1;
  }
  if (!v48)
  {
    swift_release();
    goto LABEL_27;
  }
  v49 = *((_QWORD *)v38 + 8);
  *((_QWORD *)v37 + 7) = v48;
  *((_QWORD *)v37 + 8) = v49;
  swift_release();
  return a1;
}

uint64_t sub_1007E1598(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1007E15A4);
}

uint64_t sub_1007E15A4(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011AD888);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_1007E1624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1007E1630);
}

char *sub_1007E1630(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_100007E8C(&qword_1011AD888);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for DragDropToPlaylist.Destination(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011C9EE8, (uint64_t)&nominal type descriptor for DragDropToPlaylist.Destination);
}

void sub_1007E16BC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  sub_1007E173C(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = "H";
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
  }
}

void sub_1007E173C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1011C9EF8)
  {
    v2 = type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1011C9EF8);
  }
}

uint64_t *sub_1007E1790(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v9);
  }
  else
  {
    v7 = type metadata accessor for IndexPath(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_1007E1858(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = type metadata accessor for IndexPath(0);
  v3 = *(_QWORD *)(v2 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return result;
}

void *sub_1007E18C0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *sub_1007E1964(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

void *sub_1007E1A54(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *sub_1007E1AF8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t sub_1007E1BE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1007E1BF4);
}

uint64_t sub_1007E1BF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = type metadata accessor for IndexPath(0);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t sub_1007E1C40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1007E1C4C);
}

uint64_t sub_1007E1C4C(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = type metadata accessor for IndexPath(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_1007E1C9C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for IndexPath(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_1007E1CD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for IndexPath(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

uint64_t sub_1007E1D14(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  result = type metadata accessor for IndexPath(319);
  if (v3 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload(a1, 256, *(_QWORD *)(result - 8) + 64, 1);
    return 0;
  }
  return result;
}

uint64_t *sub_1007E1D68(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for Playlist(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for IndexPath(0);
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      v13 = type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination.OperationKind(0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v15 = *(int *)(a3 + 24);
    v16 = (uint64_t *)((char *)a1 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    if (*v17)
    {
      v18 = v17[1];
      *v16 = *v17;
      v16[1] = v18;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v16 = *(_OWORD *)v17;
    }
  }
  return a1;
}

uint64_t sub_1007E1EA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD *v9;

  v4 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  if (!(_DWORD)result)
    result = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  v9 = (_QWORD *)(a1 + *(int *)(a2 + 24));
  if (*v9)
    return swift_release(v9[1]);
  return result;
}

uint64_t sub_1007E1F54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v6 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for IndexPath(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination.OperationKind(0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = *(int *)(a3 + 24);
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  if (*v15)
  {
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v14 = *(_OWORD *)v15;
  }
  return a1;
}

uint64_t sub_1007E2060(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = type metadata accessor for IndexPath(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    v15 = type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination.OperationKind(0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
LABEL_7:
  v16 = *(int *)(a3 + 24);
  v17 = (_QWORD *)(a1 + v16);
  v18 = (uint64_t *)(a2 + v16);
  v19 = *(_QWORD *)(a1 + v16);
  v20 = *v18;
  if (!v19)
  {
    if (v20)
    {
      v22 = v18[1];
      *v17 = v20;
      v17[1] = v22;
      swift_retain();
      return a1;
    }
LABEL_13:
    *(_OWORD *)v17 = *(_OWORD *)v18;
    return a1;
  }
  if (!v20)
  {
    swift_release();
    goto LABEL_13;
  }
  v21 = v18[1];
  *v17 = v20;
  v17[1] = v21;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1007E21E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for IndexPath(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination.OperationKind(0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = *(int *)(a3 + 24);
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v16 = *v15;
  if (*v15)
  {
    v17 = v15[1];
    *v14 = v16;
    v14[1] = v17;
  }
  else
  {
    *(_OWORD *)v14 = *(_OWORD *)v15;
  }
  return a1;
}

uint64_t sub_1007E22F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = type metadata accessor for IndexPath(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    v15 = type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination.OperationKind(0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  v16 = *(int *)(a3 + 24);
  v17 = (_QWORD *)(a1 + v16);
  v18 = (uint64_t *)(a2 + v16);
  v19 = *(_QWORD *)(a1 + v16);
  v20 = *v18;
  if (!v19)
  {
    if (v20)
    {
      v22 = v18[1];
      *v17 = v20;
      v17[1] = v22;
      return a1;
    }
LABEL_13:
    *(_OWORD *)v17 = *(_OWORD *)v18;
    return a1;
  }
  if (!v20)
  {
    swift_release();
    goto LABEL_13;
  }
  v21 = v18[1];
  *v17 = v20;
  v17[1] = v21;
  swift_release();
  return a1;
}

uint64_t sub_1007E246C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1007E2478);
}

uint64_t sub_1007E2478(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;
  int v15;

  v6 = type metadata accessor for Playlist(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination.OperationKind(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  v15 = v14 - 1;
  if (v15 < 0)
    v15 = -1;
  return (v15 + 1);
}

uint64_t sub_1007E252C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1007E2538);
}

uint64_t sub_1007E2538(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = type metadata accessor for Playlist(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination.OperationKind(0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = a2;
  return result;
}

uint64_t sub_1007E25DC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[3];

  result = type metadata accessor for Playlist(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination.OperationKind(319);
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      v5[2] = &unk_100ED0E48;
      swift_initStructMetadata(a1, 256, 3, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

uint64_t initializeWithCopy for DragDropToPlaylist(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  v4 = *(_QWORD *)(a2 + 40);
  v5 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 40) = v4;
  (**(void (***)(void))(v5 - 8))();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t assignWithCopy for DragDropToPlaylist(uint64_t a1, uint64_t a2)
{
  sub_1007E26E8((_QWORD *)a1, (_QWORD *)a2);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

_QWORD *sub_1007E26E8(_QWORD *result, _QWORD *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v11 = *result;
        v12 = *a2;
        swift_retain(*a2);
        result = (_QWORD *)swift_release(v11);
        *v3 = v12;
      }
      else
      {
        return (_QWORD *)(*(uint64_t (**)(_QWORD *, _QWORD *, _QWORD))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      result[5] = a2[5];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        v10 = *result;
        if ((v8 & 0x20000) != 0)
        {
          v14 = *a2;
          *v3 = *a2;
          swift_retain(v14);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (_QWORD *)swift_release(v10);
      }
      else
      {
        (*(void (**)(_BYTE *, _QWORD *, uint64_t))(v6 + 32))(v15, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          v13 = *a2;
          *v3 = *a2;
          swift_retain(v13);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (_QWORD *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v15, v4);
      }
    }
  }
  return result;
}

uint64_t assignWithTake for DragDropToPlaylist(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for DragDropToPlaylist(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 49))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DragDropToPlaylist(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 49) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DragDropToPlaylist()
{
  return &type metadata for DragDropToPlaylist;
}

Swift::Int sub_1007E2940()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[9];

  Hasher.init(_seed:)(v6, 0);
  v1 = v0[3];
  v2 = v0[4];
  sub_100007E68(v0, v1);
  v3 = dispatch thunk of MusicItem.id.getter(v1, *(_QWORD *)(v2 + 8));
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

double sub_1007E29BC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  v3 = v1[3];
  v4 = v1[4];
  sub_100007E68(v1, v3);
  v5 = dispatch thunk of MusicItem.id.getter(v3, *(_QWORD *)(v4 + 8));
  String.hash(into:)(a1, v5, v6);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

Swift::Int sub_1007E2A1C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, a1);
  v2 = v1[3];
  v3 = v1[4];
  sub_100007E68(v1, v2);
  v4 = dispatch thunk of MusicItem.id.getter(v2, *(_QWORD *)(v3 + 8));
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_1007E2A94(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;

  v3 = a1[3];
  v4 = a1[4];
  sub_100007E68(a1, v3);
  v5 = dispatch thunk of MusicItem.id.getter(v3, *(_QWORD *)(v4 + 8));
  v7 = v6;
  v9 = a2[3];
  v8 = a2[4];
  sub_100007E68(a2, v9);
  v10 = dispatch thunk of MusicItem.id.getter(v9, *(_QWORD *)(v8 + 8));
  if (v5 == v10 && v7 == v11)
    v13 = 1;
  else
    v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v7, v10, v11, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13 & 1;
}

uint64_t sub_1007E2B50(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  void (*v32)(_BYTE *, uint64_t, __n128);
  char v33;
  __n128 v34;
  void (*v35)(_BYTE *, uint64_t, __n128);
  uint64_t result;
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  _BYTE *v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  _BYTE *v52;
  _BYTE *v53;
  int v54;
  void (*v55)(_BYTE *, uint64_t);
  _BYTE v56[12];
  int v57;
  _BYTE *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _BYTE *v62;
  _BYTE *v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  v59 = a1;
  v2 = type metadata accessor for MusicLibrary.AddAction.UnsupportedReason(0);
  v64 = *(_QWORD *)(v2 - 8);
  v65 = v2;
  v3 = __chkstk_darwin(v2);
  v66 = &v56[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  v63 = &v56[-v5];
  v6 = type metadata accessor for MusicLibrary.AddAction(0);
  v69 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = &v56[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_100007E8C(&qword_1011A29D0);
  v67 = *(_QWORD *)(v9 - 8);
  v68 = v9;
  __chkstk_darwin(v9);
  v11 = &v56[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = sub_100007E8C(&qword_1011AD888);
  __chkstk_darwin(v12);
  v62 = &v56[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination(0);
  v60 = *(_QWORD *)(v14 - 8);
  v61 = v14;
  __chkstk_darwin(v14);
  v58 = &v56[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = type metadata accessor for MusicAuthorization.Status(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  v20 = &v56[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v18);
  v22 = &v56[-v21];
  v23 = type metadata accessor for MusicLibrary(0);
  v70 = v1;
  v24 = *v1;
  v25 = static MusicLibrary.shared.getter(v23);
  v26 = static MusicLibrary.== infix(_:_:)(v24, v25);
  v27 = swift_release(v25);
  if ((v26 & 1) == 0)
    return 0;
  static MusicAuthorization.currentStatus.getter(v27);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v17 + 104))(v20, enum case for MusicAuthorization.Status.authorized(_:), v16);
  v28 = sub_100048748((unint64_t *)&unk_1011BF070, (uint64_t (*)(uint64_t))&type metadata accessor for MusicAuthorization.Status, (uint64_t)&protocol conformance descriptor for MusicAuthorization.Status);
  dispatch thunk of RawRepresentable.rawValue.getter(&v71, v16, v28);
  dispatch thunk of RawRepresentable.rawValue.getter(&v75, v16, v28);
  v29 = v72;
  v30 = v76;
  if (v71 == v75 && v72 == v76)
  {
    v31 = swift_bridgeObjectRelease_n(v72, 2);
    v32 = *(void (**)(_BYTE *, uint64_t, __n128))(v17 + 8);
    v32(v20, v16, v31);
    ((void (*)(_BYTE *, uint64_t))v32)(v22, v16);
  }
  else
  {
    v33 = _stringCompareWithSmolCheck(_:_:expecting:)(v71, v72, v75, v76, 0);
    swift_bridgeObjectRelease(v29);
    v34 = swift_bridgeObjectRelease(v30);
    v35 = *(void (**)(_BYTE *, uint64_t, __n128))(v17 + 8);
    v35(v20, v16, v34);
    ((void (*)(_BYTE *, uint64_t))v35)(v22, v16);
    result = 0;
    if ((v33 & 1) == 0)
      return result;
  }
  v37 = type metadata accessor for DragDropToPlaylist.Destination(0);
  v38 = v62;
  sub_1007E559C((uint64_t)v70 + *(int *)(v37 + 20), (uint64_t)v62);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v60 + 48))(v38, 1, v61) != 1)
  {
    v40 = v58;
    sub_10005B6C0((uint64_t)v38, (uint64_t)v58, type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination);
    v39 = v59;
    v41 = sub_1007E3124(v59);
    sub_10005B748((uint64_t)v40, type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination);
    if ((v41 & 1) != 0)
      goto LABEL_9;
    return 0;
  }
  sub_10004FF60((uint64_t)v38, &qword_1011AD888);
  v39 = v59;
LABEL_9:
  v42 = *(_QWORD *)(v39 + 16);
  if (!v42)
    return 1;
  v43 = v39 + 32;
  v44 = enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:);
  LODWORD(v62) = enum case for MusicLibrary.SupportedStatus.supported<A>(_:);
  LODWORD(v61) = enum case for MusicLibrary.AddAction.UnsupportedReason.unaddable(_:);
  LODWORD(v60) = enum case for MusicLibrary.AddAction.UnsupportedReason.unsupportedType(_:);
  LODWORD(v58) = enum case for MusicLibrary.AddAction.UnsupportedReason.alreadyAdded(_:);
  v57 = enum case for MusicLibrary.AddAction.UnsupportedReason.networkRequired(_:);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_1007E52BC(v43, (uint64_t)&v71);
    v45 = v73;
    v46 = v74;
    v47 = sub_100007E68(&v71, v73);
    static MusicLibraryAction<>.add.getter(v47);
    MusicLibrary.supportedStatus<A, B>(for:action:)(v47, v8, v45, v6, v46, &protocol witness table for MusicLibrary.AddAction);
    (*(void (**)(_BYTE *, uint64_t))(v69 + 8))(v8, v6);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v71);
    v49 = v67;
    v48 = v68;
    v50 = (*(uint64_t (**)(_BYTE *, uint64_t))(v67 + 88))(v11, v68);
    if (v50 != v44)
      break;
    (*(void (**)(_BYTE *, uint64_t))(v49 + 96))(v11, v48);
    v52 = v63;
    v51 = v64;
    v48 = v65;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v64 + 32))(v63, v11, v65);
    v53 = v66;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v51 + 16))(v66, v52, v48);
    v54 = (*(uint64_t (**)(_BYTE *, uint64_t))(v51 + 88))(v53, v48);
    if (v54 == (_DWORD)v61)
    {
      v55 = *(void (**)(_BYTE *, uint64_t))(v51 + 8);
      v55(v52, v48);
      v55(v66, v48);
LABEL_23:
      swift_bridgeObjectRelease(v59);
      return 0;
    }
    if (v54 == (_DWORD)v60)
    {
      (*(void (**)(_BYTE *, uint64_t))(v51 + 8))(v52, v48);
      goto LABEL_23;
    }
    if (v54 != (_DWORD)v58 && v54 != v57)
      goto LABEL_27;
    (*(void (**)(_BYTE *, uint64_t))(v51 + 8))(v52, v48);
LABEL_12:
    v43 += 56;
    if (!--v42)
    {
      swift_bridgeObjectRelease(v59);
      return 1;
    }
  }
  if (v50 == (_DWORD)v62)
    goto LABEL_12;
  _diagnoseUnexpectedEnumCase<A>(type:)(v68, v68);
  __break(1u);
LABEL_27:
  result = _diagnoseUnexpectedEnumCase<A>(type:)(v48, v48);
  __break(1u);
  return result;
}

uint64_t sub_1007E3124(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  void (*v12)(char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  char v25;
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;

  v2 = type metadata accessor for Playlist.EditableComponents(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011C65F0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  Playlist.editableComponents.getter(v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v9, 1, v2) == 1)
  {
    sub_10004FF60((uint64_t)v9, (uint64_t *)&unk_1011C65F0);
  }
  else
  {
    static Playlist.EditableComponents.tracklist.getter();
    v10 = sub_100048748((unint64_t *)&unk_1011AD750, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.EditableComponents, (uint64_t)&protocol conformance descriptor for Playlist.EditableComponents);
    v11 = dispatch thunk of SetAlgebra.isSuperset(of:)(v5, v2, v10);
    v12 = *(void (**)(char *, uint64_t))(v3 + 8);
    v12(v5, v2);
    v12(v9, v2);
    if ((v11 & 1) != 0)
    {
      v13 = *(_QWORD *)(a1 + 16);
      if (!v13)
        return 1;
      v14 = a1 + 32;
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_1007E52BC(v14, (uint64_t)v27);
        v16 = v28;
        v15 = v29;
        sub_100007E68(v27, v28);
        v17 = dispatch thunk of MusicItem.id.getter(v16, *(_QWORD *)(v15 + 8));
        v19 = v18;
        v20 = _s5Music18DragDropToPlaylistV6OriginVwxx_0(v27);
        v21 = Playlist.id.getter(v20);
        if (v17 == v21 && v19 == v22)
        {
          swift_bridgeObjectRelease(a1);
          swift_bridgeObjectRelease_n(v19, 2);
          return 0;
        }
        v24 = v22;
        v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v17, v19, v21, v22, 0);
        swift_bridgeObjectRelease(v19);
        swift_bridgeObjectRelease(v24);
        if ((v25 & 1) != 0)
          break;
        v14 += 56;
        if (!--v13)
        {
          swift_bridgeObjectRelease(a1);
          return 1;
        }
      }
      swift_bridgeObjectRelease(a1);
    }
  }
  return 0;
}

uint64_t sub_1007E3340(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v3[22] = a2;
  v3[23] = v2;
  v3[21] = a1;
  v4 = *(_QWORD *)(type metadata accessor for DragDropToPlaylist.Destination(0) - 8);
  v3[24] = v4;
  v5 = *(_QWORD *)(v4 + 64);
  v3[25] = v5;
  v3[26] = swift_task_alloc((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  v3[27] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011B1F10);
  v3[28] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
  v3[29] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v3[30] = v9;
  v10 = *(_QWORD *)(v9 + 64);
  v3[31] = v10;
  v11 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[32] = swift_task_alloc(v11);
  v3[33] = swift_task_alloc(v11);
  v3[34] = swift_task_alloc(v11);
  return swift_task_switch(sub_1007E3438, 0, 0);
}

uint64_t sub_1007E3438()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v1 = *(_QWORD *)(v0 + 176);
  v2 = type metadata accessor for Track(0);
  *(_QWORD *)(v0 + 280) = v2;
  MusicItemCollection.init(arrayLiteral:)(_swiftEmptyArrayStorage, v2, &protocol witness table for Track);
  v3 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 288) = v3;
  if (v3)
  {
    v4 = *(_QWORD *)(v0 + 176);
    *(_QWORD *)(v0 + 296) = 0;
    v5 = v4 + 32;
    swift_bridgeObjectRetain();
    sub_1007E5268(v5, v0 + 16);
    sub_1007E52BC(v0 + 16, v0 + 120);
    sub_1007E5304((_QWORD *)(v0 + 16));
    sub_100145714((__int128 *)(v0 + 120), (_OWORD *)(v0 + 72));
    v6 = *(_QWORD *)(v0 + 96);
    sub_100007E68((_QWORD *)(v0 + 72), v6);
    v7 = (_QWORD *)swift_task_alloc(dword_1011D2FFC);
    *(_QWORD *)(v0 + 304) = v7;
    *v7 = v0;
    v7[1] = sub_1007E36F0;
    return MusicPlaylistAddable.tracks.getter(*(_QWORD *)(v0 + 224), v6);
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 272);
    v10 = *(_QWORD *)(v0 + 256);
    v12 = *(_QWORD *)(v0 + 232);
    v11 = *(_QWORD *)(v0 + 240);
    v13 = *(_QWORD *)(v0 + 216);
    v33 = *(_QWORD *)(v0 + 264);
    v34 = *(_QWORD *)(v0 + 224);
    v30 = *(_QWORD *)(v0 + 248);
    v31 = v13;
    v15 = *(_QWORD *)(v0 + 200);
    v14 = *(_QWORD *)(v0 + 208);
    v16 = *(_QWORD *)(v0 + 184);
    v17 = *(_QWORD *)(v0 + 192);
    v32 = *(_QWORD *)(v0 + 168);
    v18 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v13, 1, 1, v18);
    v19 = v14;
    sub_10005B704(v16, v14, type metadata accessor for DragDropToPlaylist.Destination);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v10, v9, v12);
    type metadata accessor for MainActor(0);
    v21 = static MainActor.shared.getter(v20);
    v22 = *(unsigned __int8 *)(v17 + 80);
    v23 = (v22 + 32) & ~v22;
    v24 = *(unsigned __int8 *)(v11 + 80);
    v25 = (v15 + v24 + v23) & ~v24;
    v26 = swift_allocObject(&unk_1010DD330, v25 + v30, v22 | v24 | 7);
    *(_QWORD *)(v26 + 16) = v21;
    *(_QWORD *)(v26 + 24) = &protocol witness table for MainActor;
    sub_10005B6C0(v19, v26 + v23, type metadata accessor for DragDropToPlaylist.Destination);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v26 + v25, v10, v12);
    v27 = sub_100166D14(v31, (uint64_t)&unk_1011CA160, v26);
    v28 = swift_release(v27);
    (*(void (**)(uint64_t, uint64_t, __n128))(v11 + 8))(v9, v12, v28);
    v29 = type metadata accessor for Notice(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v32, 1, 1, v29);
    swift_task_dealloc(v9);
    swift_task_dealloc(v33);
    swift_task_dealloc(v10);
    swift_task_dealloc(v34);
    swift_task_dealloc(v31);
    swift_task_dealloc(v19);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1007E36F0()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 304));
  return swift_task_switch(sub_1007E3744, 0, 0);
}

uint64_t sub_1007E3744()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = *(_QWORD *)(v0 + 232);
  v2 = *(_QWORD *)(v0 + 240);
  v3 = *(_QWORD *)(v0 + 224);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10004FF60(v3, &qword_1011B1F10);
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 272);
    v4 = *(_QWORD *)(v0 + 280);
    v6 = *(_QWORD *)(v0 + 264);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v6, v3, v1);
    static MusicItemCollection.+= infix(_:_:)(v5, v6, v4, &protocol witness table for Track);
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v6, v1);
  }
  v7 = *(_QWORD *)(v0 + 288);
  v8 = *(_QWORD *)(v0 + 296) + 1;
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 72));
  if (v8 == v7)
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 176));
    v9 = *(_QWORD *)(v0 + 272);
    v10 = *(_QWORD *)(v0 + 256);
    v12 = *(_QWORD *)(v0 + 232);
    v11 = *(_QWORD *)(v0 + 240);
    v13 = *(_QWORD *)(v0 + 216);
    v37 = *(_QWORD *)(v0 + 264);
    v38 = *(_QWORD *)(v0 + 224);
    v34 = *(_QWORD *)(v0 + 248);
    v35 = v13;
    v15 = *(_QWORD *)(v0 + 200);
    v14 = *(_QWORD *)(v0 + 208);
    v16 = *(_QWORD *)(v0 + 184);
    v17 = *(_QWORD *)(v0 + 192);
    v36 = *(_QWORD *)(v0 + 168);
    v18 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v13, 1, 1, v18);
    v19 = v14;
    sub_10005B704(v16, v14, type metadata accessor for DragDropToPlaylist.Destination);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v10, v9, v12);
    type metadata accessor for MainActor(0);
    v21 = static MainActor.shared.getter(v20);
    v22 = *(unsigned __int8 *)(v17 + 80);
    v23 = (v22 + 32) & ~v22;
    v24 = *(unsigned __int8 *)(v11 + 80);
    v25 = (v15 + v24 + v23) & ~v24;
    v26 = swift_allocObject(&unk_1010DD330, v25 + v34, v22 | v24 | 7);
    *(_QWORD *)(v26 + 16) = v21;
    *(_QWORD *)(v26 + 24) = &protocol witness table for MainActor;
    sub_10005B6C0(v19, v26 + v23, type metadata accessor for DragDropToPlaylist.Destination);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v26 + v25, v10, v12);
    v27 = sub_100166D14(v35, (uint64_t)&unk_1011CA160, v26);
    v28 = swift_release(v27);
    (*(void (**)(uint64_t, uint64_t, __n128))(v11 + 8))(v9, v12, v28);
    v29 = type metadata accessor for Notice(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v36, 1, 1, v29);
    swift_task_dealloc(v9);
    swift_task_dealloc(v37);
    swift_task_dealloc(v10);
    swift_task_dealloc(v38);
    swift_task_dealloc(v35);
    swift_task_dealloc(v19);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v31 = *(_QWORD *)(v0 + 296) + 1;
    *(_QWORD *)(v0 + 296) = v31;
    sub_1007E5268(*(_QWORD *)(v0 + 176) + 56 * v31 + 32, v0 + 16);
    sub_1007E52BC(v0 + 16, v0 + 120);
    sub_1007E5304((_QWORD *)(v0 + 16));
    sub_100145714((__int128 *)(v0 + 120), (_OWORD *)(v0 + 72));
    v32 = *(_QWORD *)(v0 + 96);
    sub_100007E68((_QWORD *)(v0 + 72), v32);
    v33 = (_QWORD *)swift_task_alloc(dword_1011D2FFC);
    *(_QWORD *)(v0 + 304) = v33;
    *v33 = v0;
    v33[1] = sub_1007E36F0;
    return MusicPlaylistAddable.tracks.getter(*(_QWORD *)(v0 + 224), v32);
  }
}

uint64_t sub_1007E3A60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v5[2] = a4;
  v5[3] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[4] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_1007E3ACC, v8, v9);
}

uint64_t sub_1007E3ACC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_release();
  sub_1007E3B08(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1007E3B08(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  void *Strong;
  id v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t (*v34)(uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD v64[9];
  uint64_t v65;

  v53 = type metadata accessor for AppInterfaceContext.Activity(0);
  __chkstk_darwin(v53);
  v54 = (char *)&v51 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for DragDropToPlaylist.Destination(0);
  v56 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v57 = v4;
  v59 = (uint64_t)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
  v61 = *(_QWORD *)(v5 - 8);
  v6 = *(_QWORD *)(v61 + 64);
  __chkstk_darwin(v5);
  v58 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v7);
  v62 = (uint64_t)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011AD888);
  __chkstk_darwin(v9);
  v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  __chkstk_darwin(v12);
  v55 = (uint64_t)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v51 - v16;
  v18 = sub_10077B144();
  dispatch thunk of Collection.startIndex.getter(v5);
  v60 = a1;
  dispatch thunk of Collection.endIndex.getter(&v65, v5, v18);
  if (v64[0] != v65)
  {
    v24 = v63;
    sub_1007E559C(v63 + *(int *)(v3 + 20), (uint64_t)v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
    {
      sub_10004FF60((uint64_t)v11, &qword_1011AD888);
      sub_100064AC8(v24 + *(int *)(v3 + 24), (uint64_t)v64);
      Strong = (void *)swift_unknownObjectWeakLoadStrong(v64);
      sub_100064B4C((uint64_t)v64);
      if (!Strong)
        return;
      v26 = sub_10076BBD4();

      if (!v26)
        return;
      v27 = type metadata accessor for Playlist.Folder(0);
      v28 = (uint64_t)v54;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v54, 1, 1, v27);
      v29 = (int *)type metadata accessor for PlaylistCreation.Context(0);
      v30 = v28 + v29[6];
      v31 = v61;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 16))(v30, v60, v5);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v31 + 56))(v30, 0, 1, v5);
      v32 = (_QWORD *)(v28 + v29[5]);
      *v32 = 0;
      v32[1] = 0;
      v33 = (_QWORD *)(v28 + v29[7]);
      *v33 = 0;
      v33[1] = 0;
      swift_storeEnumTagMultiPayload(v28, v53, 3);
      sub_100770824(v28, 0, 0);
      swift_release();
      v34 = type metadata accessor for AppInterfaceContext.Activity;
      v35 = v28;
    }
    else
    {
      v52 = v17;
      sub_10005B6C0((uint64_t)v11, (uint64_t)v17, type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination);
      v36 = type metadata accessor for TaskPriority(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v62, 1, 1, v36);
      v37 = (uint64_t)v17;
      v38 = v55;
      sub_10005B704(v37, v55, type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination);
      v39 = v61;
      v40 = v58;
      (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v58, v60, v5);
      v41 = v59;
      sub_10005B704(v24, v59, type metadata accessor for DragDropToPlaylist.Destination);
      type metadata accessor for MainActor(0);
      v43 = static MainActor.shared.getter(v42);
      v44 = *(unsigned __int8 *)(v13 + 80);
      v45 = (v44 + 32) & ~v44;
      v46 = *(unsigned __int8 *)(v39 + 80);
      v47 = (v14 + v46 + v45) & ~v46;
      v48 = *(unsigned __int8 *)(v56 + 80);
      v49 = (v6 + v48 + v47) & ~v48;
      v50 = swift_allocObject(&unk_1010DD358, v49 + v57, v44 | v48 | v46 | 7);
      *(_QWORD *)(v50 + 16) = v43;
      *(_QWORD *)(v50 + 24) = &protocol witness table for MainActor;
      sub_10005B6C0(v38, v50 + v45, type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination);
      (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v50 + v47, v40, v5);
      sub_10005B6C0(v41, v50 + v49, type metadata accessor for DragDropToPlaylist.Destination);
      sub_100166D14(v62, (uint64_t)&unk_1011CA170, v50);
      swift_release();
      v35 = (uint64_t)v52;
      v34 = type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination;
    }
    sub_10005B748(v35, v34);
    return;
  }
  if (qword_10119B910 != -1)
    swift_once(&qword_10119B910, sub_1000FC88C);
  v19 = type metadata accessor for Logger(0);
  v20 = sub_100048B14(v19, (uint64_t)qword_10124C858);
  v21 = Logger.logObject.getter(v20);
  v22 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v23 = 0;
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "No tracks to add to playlist.", v23, 2u);
    swift_slowDealloc(v23, -1, -1);
  }

}

uint64_t sub_1007E4068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  v7 = type metadata accessor for MusicLibrary.AddToPlaylistDuplicatePolicy(0);
  v6[5] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[6] = v8;
  v6[7] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Playlist(0);
  v6[8] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v6[9] = v10;
  v6[10] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MainActor(0);
  v6[11] = static MainActor.shared.getter(v12);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor);
  v6[12] = v13;
  v6[13] = v14;
  return swift_task_switch(sub_1007E4128, v13, v14);
}

uint64_t sub_1007E4128()
{
  _QWORD *v0;
  uint64_t v1;
  int **v2;
  int *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t (*v13)(_QWORD);

  v1 = v0[2];
  v2 = (int **)(v1 + *(int *)(type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination(0) + 24));
  v3 = *v2;
  v0[14] = *v2;
  if (v3)
  {
    v0[15] = v2[1];
    v4 = v3[1];
    v13 = (uint64_t (*)(_QWORD))((char *)v3 + *v3);
    swift_retain();
    v5 = (_QWORD *)swift_task_alloc(v4);
    v0[16] = v5;
    *v5 = v0;
    v5[1] = sub_1007E426C;
    return v13(v0[3]);
  }
  else
  {
    v7 = v0[7];
    v8 = v0[5];
    v9 = v0[6];
    v10 = v0[4];
    (*(void (**)(_QWORD, uint64_t, _QWORD))(v0[9] + 16))(v0[10], v1, v0[8]);
    v11 = v10 + *(int *)(type metadata accessor for DragDropToPlaylist.Destination(0) + 24);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 104))(v7, enum case for MusicLibrary.AddToPlaylistDuplicatePolicy.checkForDuplicates(_:), v8);
    v12 = (_QWORD *)swift_task_alloc(dword_1011ACA8C);
    v0[17] = v12;
    *v12 = v0;
    v12[1] = sub_1007E430C;
    return Playlist.addTracks(_:duplicatePolicy:duplicateCount:presentationSource:presentNotice:mpModel:)(v0[3], v0[7], 0, 1, v11, 1, 0);
  }
}

uint64_t sub_1007E426C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 128));
  return swift_task_switch(sub_1007E42B8, *(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104));
}

uint64_t sub_1007E42B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  swift_release();
  sub_10004BA30(v1, v2);
  v3 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 80));
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1007E430C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  v3 = *(_QWORD *)(*v0 + 48);
  v2 = *(_QWORD *)(*v0 + 56);
  v4 = *(_QWORD *)(*v0 + 40);
  swift_task_dealloc(*(_QWORD *)(*v0 + 136));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch(sub_1007E4378, *(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104));
}

uint64_t sub_1007E4378()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 72);
  swift_release(*(_QWORD *)(v0 + 88));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v4 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 80));
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1007E43D8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void *Strong;
  id v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  _QWORD v29[9];

  v3 = type metadata accessor for IndexPath(0);
  v28 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v27 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination.OperationKind(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011AD888);
  __chkstk_darwin(v12);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29[0] = *v1;
  v15 = type metadata accessor for MusicLibrary(0);
  v16 = sub_100048748((unint64_t *)&qword_10119D2D8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary, (uint64_t)&protocol conformance descriptor for MusicLibrary);
  dispatch thunk of Hashable.hash(into:)(a1, v15, v16);
  v17 = type metadata accessor for DragDropToPlaylist.Destination(0);
  sub_1007E559C((uint64_t)v1 + *(int *)(v17 + 20), (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    sub_10005B6C0((uint64_t)v14, (uint64_t)v11, type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination);
    Hasher._combine(_:)(1u);
    v19 = Playlist.id.getter(v18);
    String.hash(into:)(a1, v19, v20);
    swift_bridgeObjectRelease();
    sub_10005B704((uint64_t)&v11[*(int *)(v8 + 20)], (uint64_t)v7, type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination.OperationKind);
    v21 = v28;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v7, 1, v3) == 1)
    {
      Hasher._combine(_:)(0);
    }
    else
    {
      v22 = v27;
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v27, v7, v3);
      Hasher._combine(_:)(1uLL);
      v23 = sub_100048748(&qword_1011B5D98, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
      dispatch thunk of Hashable.hash(into:)(a1, v3, v23);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v22, v3);
    }
    sub_10005B748((uint64_t)v11, type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination);
  }
  sub_100064AC8((uint64_t)v1 + *(int *)(v17 + 24), (uint64_t)v29);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v29);
  sub_100064B4C((uint64_t)v29);
  if (Strong)
  {
    Hasher._combine(_:)(1u);
    v25 = Strong;
    NSObject.hash(into:)(a1);

  }
  else
  {
    Hasher._combine(_:)(0);
  }
}

Swift::Int sub_1007E46F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD v12[9];

  v1 = v0;
  v2 = type metadata accessor for IndexPath(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v12[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination.OperationKind(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v12[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  Hasher.init(_seed:)(v12, 0);
  sub_10005B704(v1, (uint64_t)v8, type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination.OperationKind);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    Hasher._combine(_:)(1uLL);
    v9 = sub_100048748(&qword_1011B5D98, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
    dispatch thunk of Hashable.hash(into:)(v12, v2, v9);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return Hasher._finalize()();
}

void sub_1007E484C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v2 = v1;
  v4 = type metadata accessor for IndexPath(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704(v2, (uint64_t)v10, type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination.OperationKind);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    Hasher._combine(_:)(1uLL);
    v11 = sub_100048748(&qword_1011B5D98, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
    dispatch thunk of Hashable.hash(into:)(a1, v4, v11);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

Swift::Int sub_1007E4980(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD v14[9];

  v2 = v1;
  v4 = type metadata accessor for IndexPath(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v14[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v14[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  Hasher.init(_seed:)(v14, a1);
  sub_10005B704(v2, (uint64_t)v10, type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination.OperationKind);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    Hasher._combine(_:)(1uLL);
    v11 = sub_100048748(&qword_1011B5D98, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
    dispatch thunk of Hashable.hash(into:)(v14, v4, v11);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return Hasher._finalize()();
}

Swift::Int sub_1007E4AE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v15[9];

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v15[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination.OperationKind(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v15[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = Hasher.init(_seed:)(v15, 0);
  v9 = Playlist.id.getter(v8);
  String.hash(into:)(v15, v9, v10);
  swift_bridgeObjectRelease();
  v11 = type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination(0);
  sub_10005B704(v0 + *(int *)(v11 + 20), (uint64_t)v7, type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination.OperationKind);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    Hasher._combine(_:)(1uLL);
    v12 = sub_100048748(&qword_1011B5D98, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
    dispatch thunk of Hashable.hash(into:)(v15, v1, v12);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return Hasher._finalize()();
}

void sub_1007E4C70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination.OperationKind(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = Playlist.id.getter(v12);
  String.hash(into:)(a1, v13, v14);
  swift_bridgeObjectRelease();
  sub_10005B704(v2 + *(int *)(a2 + 20), (uint64_t)v11, type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination.OperationKind);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
    Hasher._combine(_:)(1uLL);
    v15 = sub_100048748(&qword_1011B5D98, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
    dispatch thunk of Hashable.hash(into:)(a1, v5, v15);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

Swift::Int sub_1007E4DEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v18[9];

  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v18[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination.OperationKind(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v18[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = Hasher.init(_seed:)(v18, a1);
  v13 = Playlist.id.getter(v12);
  String.hash(into:)(v18, v13, v14);
  swift_bridgeObjectRelease();
  sub_10005B704(v2 + *(int *)(a2 + 20), (uint64_t)v11, type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination.OperationKind);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
    Hasher._combine(_:)(1uLL);
    v15 = sub_100048748(&qword_1011B5D98, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
    dispatch thunk of Hashable.hash(into:)(v18, v5, v15);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return Hasher._finalize()();
}

uint64_t sub_1007E4F7C()
{
  return sub_100048748(&qword_1011CA048, type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination, (uint64_t)&unk_100ED0E84);
}

unint64_t sub_1007E4FAC()
{
  unint64_t result;

  result = qword_1011CA050;
  if (!qword_1011CA050)
  {
    result = swift_getWitnessTable(&unk_100ED1014, &type metadata for DragDropToPlaylist);
    atomic_store(result, (unint64_t *)&qword_1011CA050);
  }
  return result;
}

uint64_t sub_1007E4FF0(uint64_t a1)
{
  uint64_t result;

  result = sub_100048748(&qword_1011CA098, type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination, (uint64_t)&unk_100ED0EAC);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1007E502C()
{
  return sub_100048748(&qword_1011CA0A0, type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination.OperationKind, (uint64_t)&unk_100ED0F18);
}

Swift::Int sub_1007E5058()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  sub_1007E43D8((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_1007E5098(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  sub_1007E43D8((uint64_t)v2);
  return Hasher._finalize()();
}

uint64_t sub_1007E50D4()
{
  return sub_100048748(&qword_1011CA0A8, type metadata accessor for DragDropToPlaylist.Destination, (uint64_t)&unk_100ED0F80);
}

uint64_t sub_1007E5100(uint64_t a1)
{
  uint64_t result;

  result = sub_100048748(&qword_1011CA0F0, type metadata accessor for DragDropToPlaylist.Destination, (uint64_t)&unk_100ED0FA8);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1007E513C()
{
  return sub_100048748(&qword_1011AD890, type metadata accessor for DragDropToPlaylist.Destination, (uint64_t)&unk_100ED0FE8);
}

unint64_t sub_1007E516C()
{
  unint64_t result;

  result = qword_1011CA0F8;
  if (!qword_1011CA0F8)
  {
    result = swift_getWitnessTable(&unk_100ED1030, &type metadata for DragDropToPlaylist.Origin);
    atomic_store(result, (unint64_t *)&qword_1011CA0F8);
  }
  return result;
}

uint64_t Lyrics.TextLine.BackgroundVocals.direction.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 48);
}

unint64_t sub_1007E51B8(uint64_t a1)
{
  unint64_t result;

  result = sub_1007E51DC();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1007E51DC()
{
  unint64_t result;

  result = qword_1011CA140;
  if (!qword_1011CA140)
  {
    result = swift_getWitnessTable(&unk_100ED104C, &type metadata for DragDropToPlaylist.Origin);
    atomic_store(result, (unint64_t *)&qword_1011CA140);
  }
  return result;
}

unint64_t sub_1007E5224()
{
  unint64_t result;

  result = qword_1011CA148;
  if (!qword_1011CA148)
  {
    result = swift_getWitnessTable(&unk_100ED108C, &type metadata for DragDropToPlaylist.Origin);
    atomic_store(result, &qword_1011CA148);
  }
  return result;
}

uint64_t sub_1007E5268(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v5;
  *(_QWORD *)(a2 + 40) = v4;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a2, a1);
  *(_BYTE *)(a2 + 48) = *(_BYTE *)(a1 + 48);
  return a2;
}

uint64_t sub_1007E52BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;

  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v4;
  *(_QWORD *)(a2 + 40) = v3;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a2, a1);
  return a2;
}

_QWORD *sub_1007E5304(_QWORD *a1)
{
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(a1);
  return a1;
}

uint64_t sub_1007E5328()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = type metadata accessor for DragDropToPlaylist.Destination(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v24 = *(_QWORD *)(v2 + 64);
  v5 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v23 = *(_QWORD *)(v6 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v8 = v0 + v4;
  swift_release();
  v9 = v0 + v4 + *(int *)(v1 + 20);
  v10 = type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
  {
    v22 = v5;
    v12 = type metadata accessor for Playlist(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v9, v12);
    v13 = v9 + *(int *)(v10 + 20);
    v14 = type metadata accessor for IndexPath(0);
    v21 = *(_QWORD *)(v14 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v13, 1, v14))
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v13, v14);
    v4 = (v3 + 32) & ~v3;
    v5 = v22;
    if (*(_QWORD *)(v9 + *(int *)(v10 + 24)))
      swift_release();
  }
  v15 = v8 + *(int *)(v1 + 24);
  swift_unknownObjectWeakDestroy(v15, v11);
  v17 = *(unsigned __int8 *)(v15 + 48);
  if (v17 != 255)
    sub_100064AA4(*(id *)(v15 + 8), *(_QWORD *)(v15 + 16), *(_QWORD *)(v15 + 24), *(_QWORD *)(v15 + 32), *(_QWORD *)(v15 + 40), v17);
  if (*(_QWORD *)(v15 + 56))
    v16 = swift_release();
  v18 = (v4 + v24 + v7) & ~v7;
  v19 = v18 + v23;
  (*(void (**)(uint64_t, uint64_t, __n128))(v6 + 8))(v0 + v18, v5, v16);
  return swift_deallocObject(v0, v19);
}

uint64_t sub_1007E54E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(type metadata accessor for DragDropToPlaylist.Destination(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v5 + *(_QWORD *)(v4 + 64);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A96F0) - 8) + 80);
  v8 = (v6 + v7) & ~v7;
  v9 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v11 = v1 + v5;
  v12 = v1 + v8;
  v13 = (_QWORD *)swift_task_alloc(dword_1011CA15C);
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_10006AEE4;
  return sub_1007E3A60(a1, v9, v10, v11, v12);
}

uint64_t sub_1007E559C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011AD888);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1007E55E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  unint64_t v17;
  __n128 v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int v23;
  unsigned int (*v25)(unint64_t, uint64_t, uint64_t);
  void (*v26)(unint64_t, uint64_t);
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v1 = type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  v28 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
  v5 = *(_QWORD *)(v28 - 8);
  v6 = (v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = type metadata accessor for DragDropToPlaylist.Destination(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v27 = v6 + v7 + v10;
  v29 = v8;
  v30 = *(_QWORD *)(v9 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v31 = v0;
  v11 = v0 + v3;
  v12 = type metadata accessor for Playlist(0);
  v26 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
  v26(v0 + v3, v12);
  v13 = v0 + v3 + *(int *)(v1 + 20);
  v14 = type metadata accessor for IndexPath(0);
  v15 = *(_QWORD *)(v14 - 8);
  v25 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v15 + 48);
  if (!v25(v13, 1, v14))
    (*(void (**)(unint64_t, uint64_t))(v15 + 8))(v13, v14);
  v17 = v27 & ~v10;
  if (*(_QWORD *)(v11 + *(int *)(v1 + 24)))
    v16 = swift_release();
  (*(void (**)(unint64_t, uint64_t, __n128))(v5 + 8))(v31 + v6, v28, v16);
  v18 = swift_release();
  v19 = v31 + v17 + *(int *)(v29 + 20);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t, __n128))(v2 + 48))(v19, 1, v1, v18))
  {
    v26(v19, v12);
    v21 = v19 + *(int *)(v1 + 20);
    if (!v25(v21, 1, v14))
      (*(void (**)(unint64_t, uint64_t))(v15 + 8))(v21, v14);
    if (*(_QWORD *)(v19 + *(int *)(v1 + 24)))
      swift_release();
  }
  v22 = v31 + v17 + *(int *)(v29 + 24);
  swift_unknownObjectWeakDestroy(v22, v20);
  v23 = *(unsigned __int8 *)(v22 + 48);
  if (v23 != 255)
    sub_100064AA4(*(id *)(v22 + 8), *(_QWORD *)(v22 + 16), *(_QWORD *)(v22 + 24), *(_QWORD *)(v22 + 32), *(_QWORD *)(v22 + 40), v23);
  if (*(_QWORD *)(v22 + 56))
    swift_release();
  return swift_deallocObject(v31, v17 + v30);
}

uint64_t sub_1007E5834(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v4 = *(_QWORD *)(type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v5 + *(_QWORD *)(v4 + 64);
  v7 = *(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A96F0) - 8);
  v8 = (v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DragDropToPlaylist.Destination(0) - 8) + 80);
  v11 = v8 + v9 + v10;
  v12 = *(_QWORD *)(v1 + 16);
  v13 = *(_QWORD *)(v1 + 24);
  v14 = v1 + v5;
  v15 = v1 + v8;
  v16 = v1 + (v11 & ~v10);
  v17 = (_QWORD *)swift_task_alloc(dword_1011CA16C);
  *(_QWORD *)(v2 + 16) = v17;
  *v17 = v2;
  v17[1] = sub_10005AEE4;
  return sub_1007E4068(a1, v12, v13, v14, v15, v16);
}

uint64_t sub_1007E5914(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(uint64_t, uint64_t, uint64_t);
  char v17;
  void (*v18)(char *, uint64_t);
  uint64_t v20;

  v4 = type metadata accessor for IndexPath(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination.OperationKind(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011CA180);
  __chkstk_darwin(v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (uint64_t)&v13[*(int *)(v14 + 48)];
  sub_10005B704(a1, (uint64_t)v13, type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination.OperationKind);
  sub_10005B704(a2, v15, type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination.OperationKind);
  v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v16((uint64_t)v13, 1, v4) != 1)
  {
    sub_10005B704((uint64_t)v13, (uint64_t)v10, type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination.OperationKind);
    if (v16(v15, 1, v4) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
      v17 = static IndexPath.== infix(_:_:)(v10, v7);
      v18 = *(void (**)(char *, uint64_t))(v5 + 8);
      v18(v7, v4);
      v18(v10, v4);
      sub_10005B748((uint64_t)v13, type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination.OperationKind);
      return v17 & 1;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    goto LABEL_6;
  }
  if (v16(v15, 1, v4) != 1)
  {
LABEL_6:
    sub_10004FF60((uint64_t)v13, &qword_1011CA180);
    v17 = 0;
    return v17 & 1;
  }
  sub_10005B748((uint64_t)v13, type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination.OperationKind);
  v17 = 1;
  return v17 & 1;
}

uint64_t sub_1007E5B20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v19;

  v4 = type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v19 - v8;
  v11 = Playlist.id.getter(v10);
  v13 = v12;
  v15 = Playlist.id.getter(v11);
  if (v11 == v15 && v13 == v14)
  {
    swift_bridgeObjectRelease_n(v13, 2);
    sub_10005B704(a1, (uint64_t)v9, type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination);
    sub_10005B704(a2, (uint64_t)v6, type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination);
LABEL_5:
    v17 = sub_1007E5914((uint64_t)&v9[*(int *)(v4 + 20)], (uint64_t)&v6[*(int *)(v4 + 20)]);
    goto LABEL_6;
  }
  v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v13, v15, v14, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10005B704(a1, (uint64_t)v9, type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination);
  sub_10005B704(a2, (uint64_t)v6, type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination);
  v17 = 0;
  if ((v16 & 1) != 0)
    goto LABEL_5;
LABEL_6:
  sub_10005B748((uint64_t)v6, type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination);
  sub_10005B748((uint64_t)v9, type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination);
  return v17 & 1;
}

uint64_t sub_1007E5CA8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v34;
  char v35;
  void *Strong;
  id v37;
  id v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE v46[72];
  _BYTE v47[80];

  v41 = type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination(0);
  v40 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011AD888);
  __chkstk_darwin(v6);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011CA178);
  __chkstk_darwin(v9);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DragDropToPlaylist.Destination(0);
  __chkstk_darwin(v12);
  v44 = (uint64_t)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v45 = (uint64_t)&v39 - v15;
  __chkstk_darwin(v16);
  v18 = (char *)&v39 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v39 - v20;
  type metadata accessor for MusicLibrary(0);
  v22 = static MusicLibrary.== infix(_:_:)(*a1, *a2);
  v42 = a1;
  sub_10005B704((uint64_t)a1, (uint64_t)v21, type metadata accessor for DragDropToPlaylist.Destination);
  v43 = a2;
  sub_10005B704((uint64_t)a2, (uint64_t)v18, type metadata accessor for DragDropToPlaylist.Destination);
  if ((v22 & 1) == 0)
  {
    sub_10005B748((uint64_t)v18, type metadata accessor for DragDropToPlaylist.Destination);
    sub_10005B748((uint64_t)v21, type metadata accessor for DragDropToPlaylist.Destination);
LABEL_9:
    v30 = v44;
    v29 = v45;
    v31 = (uint64_t)v43;
    sub_10005B704((uint64_t)v42, v45, type metadata accessor for DragDropToPlaylist.Destination);
    sub_10005B704(v31, v30, type metadata accessor for DragDropToPlaylist.Destination);
    goto LABEL_10;
  }
  v39 = v5;
  v23 = (uint64_t)v8;
  v24 = *(int *)(v12 + 20);
  v25 = (uint64_t)&v18[v24];
  v26 = (uint64_t)&v11[*(int *)(v9 + 48)];
  sub_1007E559C((uint64_t)&v21[v24], (uint64_t)v11);
  sub_1007E559C(v25, v26);
  v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48);
  v28 = v41;
  if (v27((uint64_t)v11, 1, v41) != 1)
  {
    sub_1007E559C((uint64_t)v11, v23);
    if (v27(v26, 1, v28) != 1)
    {
      v34 = (uint64_t)v39;
      sub_10005B6C0(v26, (uint64_t)v39, type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination);
      v35 = sub_1007E5B20(v23, v34);
      sub_10005B748(v34, type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination);
      sub_10005B748((uint64_t)v18, type metadata accessor for DragDropToPlaylist.Destination);
      sub_10005B748((uint64_t)v21, type metadata accessor for DragDropToPlaylist.Destination);
      sub_10005B748(v23, type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination);
      sub_10004FF60((uint64_t)v11, &qword_1011AD888);
      v29 = v45;
      sub_10005B704((uint64_t)v42, v45, type metadata accessor for DragDropToPlaylist.Destination);
      v30 = v44;
      sub_10005B704((uint64_t)v43, v44, type metadata accessor for DragDropToPlaylist.Destination);
      if ((v35 & 1) != 0)
        goto LABEL_13;
LABEL_10:
      sub_10005B748(v30, type metadata accessor for DragDropToPlaylist.Destination);
      sub_10005B748(v29, type metadata accessor for DragDropToPlaylist.Destination);
      v32 = 0;
      return v32 & 1;
    }
    sub_10005B748((uint64_t)v18, type metadata accessor for DragDropToPlaylist.Destination);
    sub_10005B748((uint64_t)v21, type metadata accessor for DragDropToPlaylist.Destination);
    sub_10005B748(v23, type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination);
    goto LABEL_8;
  }
  sub_10005B748((uint64_t)v18, type metadata accessor for DragDropToPlaylist.Destination);
  sub_10005B748((uint64_t)v21, type metadata accessor for DragDropToPlaylist.Destination);
  if (v27(v26, 1, v28) != 1)
  {
LABEL_8:
    sub_10004FF60((uint64_t)v11, &qword_1011CA178);
    goto LABEL_9;
  }
  sub_10004FF60((uint64_t)v11, &qword_1011AD888);
  v29 = v45;
  sub_10005B704((uint64_t)v42, v45, type metadata accessor for DragDropToPlaylist.Destination);
  v30 = v44;
  sub_10005B704((uint64_t)v43, v44, type metadata accessor for DragDropToPlaylist.Destination);
LABEL_13:
  sub_100064AC8(v29 + *(int *)(v12 + 24), (uint64_t)v47);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v47);
  sub_100064B4C((uint64_t)v47);
  sub_100064AC8(v30 + *(int *)(v12 + 24), (uint64_t)v46);
  v37 = (id)swift_unknownObjectWeakLoadStrong(v46);
  sub_100064B4C((uint64_t)v46);
  if (Strong)
  {
    if (v37)
    {
      sub_1000E5638();
      v38 = Strong;
      v32 = static NSObject.== infix(_:_:)(v38, v37);
      sub_10005B748(v30, type metadata accessor for DragDropToPlaylist.Destination);
      sub_10005B748(v29, type metadata accessor for DragDropToPlaylist.Destination);

    }
    else
    {
      v37 = Strong;
      sub_10005B748(v30, type metadata accessor for DragDropToPlaylist.Destination);
      sub_10005B748(v29, type metadata accessor for DragDropToPlaylist.Destination);
      v32 = 0;
    }

  }
  else
  {
    sub_10005B748(v30, type metadata accessor for DragDropToPlaylist.Destination);
    sub_10005B748(v29, type metadata accessor for DragDropToPlaylist.Destination);
    if (!v37)
    {
      v32 = 1;
      return v32 & 1;
    }
    v32 = 0;
  }

  return v32 & 1;
}

id sub_1007E61F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  int v11;
  id v12;
  uint64_t v14;

  v1 = type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination.OperationKind(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_1011AD888);
  __chkstk_darwin(v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DragDropToPlaylist.Destination(0);
  sub_1007E559C(v0 + *(int *)(v7 + 20), (uint64_t)v6);
  v8 = type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) == 1)
  {
    sub_10004FF60((uint64_t)v6, &qword_1011AD888);
    return objc_msgSend(objc_allocWithZone((Class)UICollectionViewDropProposal), "initWithDropOperation:intent:", 2, 2);
  }
  else
  {
    sub_10005B704((uint64_t)&v6[*(int *)(v8 + 20)], (uint64_t)v3, type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination.OperationKind);
    v10 = type metadata accessor for IndexPath(0);
    v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v3, 1, v10);
    v12 = objc_allocWithZone((Class)UICollectionViewDropProposal);
    if (v11 == 1)
    {
      v9 = objc_msgSend(v12, "initWithDropOperation:intent:", 2, 2);
    }
    else
    {
      v9 = objc_msgSend(v12, "initWithDropOperation:intent:", 2, 1);
      sub_10005B748((uint64_t)v3, type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination.OperationKind);
    }
    sub_10005B748((uint64_t)v6, type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination);
  }
  return v9;
}

uint64_t initializeWithCopy for DragDropToPlaylist.Origin(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;

  v3 = *(_QWORD *)(a2 + 40);
  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 40) = v3;
  (**(void (***)(void))(v4 - 8))();
  return a1;
}

_QWORD *assignWithCopy for DragDropToPlaylist.Origin(_QWORD *a1, _QWORD *a2)
{
  sub_1007E26E8(a1, a2);
  return a1;
}

uint64_t assignWithTake for DragDropToPlaylist.Origin(uint64_t a1, _OWORD *a2)
{
  __int128 v4;

  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)a1);
  v4 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = a2[2];
  return a1;
}

uint64_t _s11PlaceholderVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s11PlaceholderVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DragDropToPlaylist.Origin()
{
  return &type metadata for DragDropToPlaylist.Origin;
}

uint64_t *sub_1007E64E0()
{
  if (qword_10119C828 != -1)
    swift_once(&qword_10119C828, sub_1007E6520);
  return &qword_10124DA08;
}

NSString sub_1007E6520()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_10124DA08 = (uint64_t)result;
  return result;
}

void *sub_1007E6594()
{
  void *result;

  result = (void *)sub_1000441C4((uint64_t)_swiftEmptyArrayStorage);
  off_1011CA188 = result;
  return result;
}

id sub_1007E674C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AttributionMetadata();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for AttributionMetadata()
{
  return objc_opt_self(MusicAttributionMetadata);
}

char *sub_1007E67E8(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  char *v37;
  id v38;
  void *v39;
  char *v40;
  id v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t (*v47)(void);
  id v48;
  void *v49;
  uint64_t v50;
  void (*v51)(char *, id);
  id v52;
  uint64_t (*v53)(char *, uint64_t, id, __n128);
  id v54;
  id v55;
  id v56;
  char *v57;
  NSObject *v58;
  _BOOL4 v59;
  uint64_t v60;
  id v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  id v67;
  uint64_t (*v68)(char *, uint64_t, id, __n128);
  void (*v69)(char *, char *, uint64_t);
  uint64_t v70;
  _QWORD *v71;
  unsigned int (*v72)(char *, uint64_t, uint64_t);
  char *v73;
  id v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  id v79;
  id v80;
  void *v81;
  char *v82;
  char *v83;
  id v84;
  void *v85;
  id v86;
  uint64_t v87;
  id v88;
  void (*v89)(char *, id);
  void *v90;
  id v91;
  char *result;
  char *v93;
  id v94;
  void *v95;
  id v96;
  id v97;
  void *v98;
  unsigned __int8 v99;
  void *v100;
  char *v101;
  id v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  unsigned int v106;
  void *v107;
  void **v108;
  char *v109;
  Class v110;
  id v111;
  id v112;
  char *v113;
  id v114;
  void *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  uint64_t v122;
  id v123;
  void (*v124)(char *, id);
  id v125;
  NSObject *v126;
  NSObject *v127;
  os_log_type_t v128;
  uint64_t v129;
  void ***v130;
  void **v131;
  void **v132;
  uint64_t *v133;
  id v134;
  __n128 v135;
  void *v136;
  uint64_t v137;
  void *v138;
  void (*v139)(char *, id);
  id v140;
  uint64_t v141;
  uint64_t v142;
  unint64_t v143;
  unint64_t v144;
  char *v145;
  char *v146;
  _QWORD *v147;
  os_log_t v148;
  uint64_t v149;
  void **v150;
  id v151;
  void *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t *v156;
  __n128 v157;
  id v158;
  unsigned int (*v159)(char *, uint64_t, uint64_t);
  _QWORD *v160;
  _QWORD *v161;
  uint64_t v162;
  NSObject *v163;
  os_log_type_t v164;
  uint8_t *v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  _QWORD *v170;
  unint64_t v171;
  char v172;
  void *v173;
  id v174;
  void *v175;
  id v176;
  char *v177;
  id v178;
  id v179;
  id v180;
  void *v181;
  uint64_t v182;
  uint64_t v183;
  _QWORD *v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  unint64_t v191;
  unint64_t v192;
  void *v193;
  Class isa;
  id v195;
  id v196;
  uint64_t v197;
  uint64_t v198;
  char v199;
  id v200;
  Class v201;
  char *v202;
  void *v203;
  id v204;
  void *v205;
  id v206;
  char *v207;
  id v208;
  id v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  id v213;
  char isUniquelyReferenced_nonNull_native;
  void *v215;
  os_log_t v216;
  NSObject *v217;
  void *v218;
  uint64_t v219;
  __n128 v220;
  _QWORD *v221;
  unsigned int (*v222)(char *, uint64_t, uint64_t);
  _QWORD *v223;
  char *v224;
  id v225;
  void *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  id v230;
  __n128 v231;
  void *v232;
  id v233;
  uint64_t v234;
  NSObject *v235;
  os_log_type_t v236;
  uint8_t *v237;
  uint8_t *v238;
  uint64_t v239;
  void *v240;
  id v241;
  uint64_t v242;
  os_log_t v243;
  uint64_t v244;
  NSObject *v245;
  os_log_type_t v246;
  uint8_t *v247;
  id v248;
  NSString v249;
  id v250;
  id v251;
  void *v252;
  uint64_t v253;
  id v254;
  id v255;
  uint64_t v256;
  void **v257;
  char *v258;
  Class v259;
  uint64_t v260;
  uint64_t inited;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  id v267;
  Class v268;
  id v269;
  id v270;
  Class v271;
  Class v272;
  id v273;
  uint64_t v274;
  id v275;
  void *v276;
  id v277;
  void (*v278)(void **, uint64_t);
  uint64_t v279;
  uint64_t *v280;
  __n128 v281;
  uint64_t v282;
  void *v283;
  void (*v284)(void **, uint64_t);
  uint64_t v285;
  _QWORD *v286;
  char *v287;
  _QWORD *v288;
  void **v289;
  char *v290;
  os_log_t v291;
  char *v292;
  uint64_t v293;
  _QWORD *v294;
  char *v295;
  char *v296;
  unsigned int (*v297)(char *, uint64_t, uint64_t);
  _QWORD *v298;
  char *v299;
  uint64_t v300;
  void (*v301)(char *, id);
  id v302;
  uint64_t (*v303)(char *, uint64_t, id, __n128);
  id v304;
  id v305;
  uint64_t v306;
  void **aBlock;
  _QWORD v308[5];
  char v309[40];

  v2 = v1;
  v4 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  __chkstk_darwin(v4);
  v290 = (char *)&v286 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v286 - v7;
  v9 = type metadata accessor for IndexPath(0);
  v303 = *(uint64_t (**)(char *, uint64_t, id, __n128))(v9 - 8);
  __chkstk_darwin(v9);
  v289 = (void **)((char *)&v286 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  v13 = (char *)&v286 - v12;
  __chkstk_darwin(v14);
  v299 = (char *)&v286 - v15;
  v16 = sub_100007E8C(&qword_1011A1440);
  __chkstk_darwin(v16);
  v18 = (char *)&v286 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v294 = (_QWORD *)type metadata accessor for Artwork(0);
  v293 = *(v294 - 1);
  __chkstk_darwin(v294);
  v292 = (char *)&v286 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100007E8C(&qword_1011C8D50);
  __chkstk_darwin(v20);
  v22 = (char *)&v286 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v298 = (_QWORD *)type metadata accessor for SocialProfile(0);
  v297 = (unsigned int (*)(char *, uint64_t, uint64_t))*(v298 - 1);
  __chkstk_darwin(v298);
  v296 = (char *)&v286 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = (_QWORD *)type metadata accessor for Logger(0);
  v301 = (void (*)(char *, id))*(v24 - 1);
  v302 = v24;
  __chkstk_darwin(v24);
  v26 = (char *)&v286 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v291 = (os_log_t)((char *)&v286 - v28);
  __chkstk_darwin(v29);
  v295 = (char *)&v286 - v30;
  __chkstk_darwin(v31);
  v33 = (char *)&v286 - v32;
  *(_QWORD *)&v35 = __chkstk_darwin(v34).n128_u64[0];
  v37 = (char *)&v286 - v36;
  v304 = v2;
  if (objc_msgSend(v2, "isSharedListeningSession", v35))
  {
    v38 = objc_msgSend(a1, "enqueueingParticipant");
    if (v38)
    {
      v39 = v38;
      v40 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for AttributionMetadata()), "init");
      v41 = objc_msgSend(v39, "displayName");
      if (v41)
      {
        v42 = v41;
        v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
        v45 = v44;

      }
      else
      {
        v43 = 0;
        v45 = 0;
      }
      v133 = (uint64_t *)&v40[OBJC_IVAR___MusicAttributionMetadata_title];
      *v133 = v43;
      v133[1] = v45;
      v134 = objc_msgSend(v39, "modelObject", swift_bridgeObjectRelease().n128_f64[0]);
      if (v134)
      {
        v136 = v134;
        v137 = MPModelSharedListeningParticipant.preferredArtworkCatalog.getter(v135);

      }
      else
      {
        v137 = 0;
      }
      v138 = *(void **)&v40[OBJC_IVAR___MusicAttributionMetadata_artworkCatalog];
      *(_QWORD *)&v40[OBJC_IVAR___MusicAttributionMetadata_artworkCatalog] = v137;

      return v40;
    }
  }
  v300 = v9;
  if (qword_10119B8B0 != -1)
    swift_once(&qword_10119B8B0, sub_1000E948C);
  v46 = (_QWORD *)(*(uint64_t (**)(void))(*(_QWORD *)qword_10124C788 + 528))();
  if (v46)
  {
    v47 = *(uint64_t (**)(void))((swift_isaMask & *v46) + 0x268);
    v288 = v46;
    if ((v47() & 1) != 0)
    {
      v48 = objc_msgSend(a1, "enqueueingParticipant");
      if (v48)
      {
        v49 = v48;
        v50 = Logger.sharePlayTogether.unsafeMutableAddressor();
        v51 = v301;
        v52 = v302;
        v53 = (uint64_t (*)(char *, uint64_t, id, __n128))*((_QWORD *)v301 + 2);
        v300 = v50;
        v303 = v53;
        ((void (*)(char *))v53)(v37);
        v54 = v49;
        v55 = a1;
        v56 = v54;
        v57 = (char *)v55;
        v58 = Logger.logObject.getter(v57);
        LODWORD(v299) = static os_log_type_t.default.getter();
        v59 = os_log_type_enabled(v58, (os_log_type_t)v299);
        v304 = v56;
        if (v59)
        {
          v291 = v58;
          v60 = swift_slowAlloc(22, -1);
          v286 = (_QWORD *)swift_slowAlloc(8, -1);
          v289 = (void **)swift_slowAlloc(32, -1);
          aBlock = v289;
          *(_DWORD *)v60 = 136446466;
          v61 = objc_msgSend(v56, "displayName");
          v290 = v57;
          v287 = v18;
          if (v61)
          {
            v62 = v61;
            v63 = static String._unconditionallyBridgeFromObjectiveC(_:)(v61);
            v65 = v64;

          }
          else
          {
            v63 = 0;
            v65 = 0;
          }
          v142 = Optional<A>.description.getter(v63, v65);
          v144 = v143;
          swift_bridgeObjectRelease();
          v305 = (id)sub_100322200(v142, v144, (uint64_t *)&aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v305, &v306);
          v140 = v304;

          swift_bridgeObjectRelease();
          *(_WORD *)(v60 + 12) = 2114;
          v145 = v290;
          v305 = v290;
          v146 = v290;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v305, &v306);
          v147 = v286;
          *v286 = v145;

          v148 = v291;
          _os_log_impl((void *)&_mh_execute_header, v291, (os_log_type_t)v299, "[AttributionMetadata] building metadata for %{public}s, item: %{public}@", (uint8_t *)v60, 0x16u);
          v149 = sub_100007E8C((uint64_t *)&unk_1011A33E0);
          swift_arrayDestroy(v147, 1, v149);
          swift_slowDealloc(v147, -1, -1);
          v150 = v289;
          swift_arrayDestroy(v289, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v150, -1, -1);
          swift_slowDealloc(v60, -1, -1);

          v52 = v302;
          v139 = (void (*)(char *, id))*((_QWORD *)v301 + 1);
          v139(v37, v302);
          v18 = v287;
        }
        else
        {

          v139 = (void (*)(char *, id))*((_QWORD *)v51 + 1);
          v139(v37, v52);
          v140 = v56;
        }
        v40 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for AttributionMetadata()), "init");
        v151 = objc_msgSend(v140, "displayName");
        if (v151)
        {
          v152 = v151;
          v153 = static String._unconditionallyBridgeFromObjectiveC(_:)(v151);
          v155 = v154;

        }
        else
        {
          v153 = 0;
          v155 = 0;
        }
        v156 = (uint64_t *)&v40[OBJC_IVAR___MusicAttributionMetadata_title];
        *v156 = v153;
        v156[1] = v155;
        v157 = swift_bridgeObjectRelease();
        v158 = v304;
        (*(void (**)(id, __n128))((swift_isaMask & *v288) + 0x370))(v304, v157);
        v159 = v297;
        v160 = v298;
        v161 = &unk_1011CA000;
        if ((*((unsigned int (**)(char *, uint64_t, _QWORD *))v297 + 6))(v22, 1, v298) == 1)
        {
          sub_10004FF60((uint64_t)v22, &qword_1011C8D50);
LABEL_83:
          v225 = objc_msgSend(v158, "displayName");
          if (v225)
          {
            v226 = v225;
            v227 = static String._unconditionallyBridgeFromObjectiveC(_:)(v225);
            v229 = v228;

          }
          else
          {
            v227 = 0;
            v229 = 0;
          }
          sub_10004A07C(0, (unint64_t *)&qword_1011A6850, MPArtworkCatalog_ptr);
          v230 = static MPArtworkCatalog.monogram(for:layoutDirection:)(v227, v229, 0, 1);
          v231 = swift_bridgeObjectRelease();
          if (v230)
          {
            v232 = *(void **)&v40[OBJC_IVAR___MusicAttributionMetadata_placeholderArtworkCatalog];
            *(_QWORD *)&v40[OBJC_IVAR___MusicAttributionMetadata_placeholderArtworkCatalog] = v230;
            v233 = v230;

          }
          else
          {
            v234 = v303(v295, v300, v52, v231);
            v235 = Logger.logObject.getter(v234);
            v236 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v235, v236))
            {
              v237 = (uint8_t *)swift_slowAlloc(2, -1);
              *(_WORD *)v237 = 0;
              _os_log_impl((void *)&_mh_execute_header, v235, v236, "[AttributionMetadata] failed to get monogram artwork", v237, 2u);
              v238 = v237;
              v158 = v304;
              swift_slowDealloc(v238, -1, -1);
            }

            v139(v295, v52);
          }
          v239 = v161[52];
          if (!*(_QWORD *)&v40[v239])
          {
            v240 = *(void **)&v40[OBJC_IVAR___MusicAttributionMetadata_placeholderArtworkCatalog];
            *(_QWORD *)&v40[v239] = v240;
            v241 = v240;
          }

          return v40;
        }
        (*((void (**)(char *, uint64_t, _QWORD *))v159 + 4))(v296, v22, v160);
        v162 = ((uint64_t (*)(char *, uint64_t, id))v303)(v33, v300, v52);
        v163 = Logger.logObject.getter(v162);
        v164 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v163, v164))
        {
          v165 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v165 = 0;
          _os_log_impl((void *)&_mh_execute_header, v163, v164, "[AttributionMetadata] found social profile", v165, 2u);
          swift_slowDealloc(v165, -1, -1);
        }

        v139(v33, v52);
        if (qword_10119C830 != -1)
          swift_once(&qword_10119C830, sub_1007E6594);
        v166 = v296;
        v167 = SocialProfile.id.getter();
        v169 = v168;
        swift_beginAccess(&off_1011CA188, &aBlock, 32, 0);
        v170 = off_1011CA188;
        if (!*((_QWORD *)off_1011CA188 + 2) || (v171 = sub_10079C1D4(v167, v169), (v172 & 1) == 0))
        {
          swift_bridgeObjectRelease();
          v182 = swift_endAccess(&aBlock);
          SocialProfile.artwork.getter(v182);
          v183 = v293;
          v184 = v294;
          if ((*(unsigned int (**)(char *, uint64_t, _QWORD *))(v293 + 48))(v18, 1, v294) == 1)
          {
            (*((void (**)(char *, _QWORD *))v297 + 1))(v166, v298);
            sub_10004FF60((uint64_t)v18, &qword_1011A1440);
            goto LABEL_71;
          }
          v301 = v139;
          v185 = v292;
          (*(void (**)(char *, char *, _QWORD *))(v183 + 32))(v292, v18, v184);
          v186 = type metadata accessor for JSONEncoder(0);
          v187 = swift_allocObject(v186, *(unsigned int *)(v186 + 48), *(unsigned __int16 *)(v186 + 52));
          JSONEncoder.init()(v187);
          v188 = sub_100048748(&qword_1011CA1D8, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork, (uint64_t)&protocol conformance descriptor for Artwork);
          v189 = dispatch thunk of JSONEncoder.encode<A>(_:)(v185, v184, v188);
          v158 = v304;
          v190 = v189;
          v192 = v191;
          swift_release();
          v193 = (void *)objc_opt_self(NSJSONSerialization);
          isa = Data._bridgeToObjectiveC()().super.isa;
          v305 = 0;
          v195 = objc_msgSend(v193, "JSONObjectWithData:options:error:", isa, 0, &v305);

          v196 = v305;
          v197 = v190;
          if (v195)
          {
            _bridgeAnyObjectToAny(_:)(&aBlock, v195);
            swift_unknownObjectRelease(v195);
            v198 = sub_100007E8C(&qword_1011E8750);
            v199 = swift_dynamicCast(&v305, &aBlock, (char *)&type metadata for Any + 8, v198, 6);
            v161 = &unk_1011CA000;
            v139 = v301;
            if ((v199 & 1) != 0)
            {
              v200 = objc_allocWithZone((Class)ICStoreArtworkInfo);
              v201 = Dictionary._bridgeToObjectiveC()().super.isa;
              v202 = (char *)objc_msgSend(v200, "initWithArtworkResponseDictionary:", v201, swift_bridgeObjectRelease().n128_f64[0]);

              if (!v202)
              {
                sub_1000652DC(v197, v192);
                (*(void (**)(char *, _QWORD *))(v293 + 8))(v292, v294);
                (*((void (**)(char *, _QWORD *))v297 + 1))(v296, v298);
                goto LABEL_71;
              }
              v203 = (void *)objc_opt_self(MPStoreArtworkRequestToken);
              v299 = v202;
              v204 = objc_msgSend(v203, "tokenWithImageArtworkInfo:", v202);
              v205 = (void *)objc_opt_self(MPStoreArtworkDataSource);
              v206 = v204;
              result = (char *)objc_msgSend(v205, "sharedStoreArtworkDataSource");
              if (result)
              {
                v207 = result;
                v208 = objc_allocWithZone((Class)MPArtworkCatalog);
                v209 = v206;
                v291 = (os_log_t)objc_msgSend(v208, "initWithToken:dataSource:", v209, v207);

                v210 = SocialProfile.id.getter();
                v212 = v211;
                swift_beginAccess(&off_1011CA188, &aBlock, 33, 0);
                v213 = v209;
                isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(off_1011CA188);
                v305 = off_1011CA188;
                off_1011CA188 = (_UNKNOWN *)0x8000000000000000;
                sub_1005EEEC4((uint64_t)v213, v210, v212, isUniquelyReferenced_nonNull_native);
                off_1011CA188 = v305;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_endAccess(&aBlock);
                v215 = *(void **)&v40[OBJC_IVAR___MusicAttributionMetadata_artworkCatalog];
                v216 = v291;
                *(_QWORD *)&v40[OBJC_IVAR___MusicAttributionMetadata_artworkCatalog] = v291;
                v217 = v216;

                sub_1000652DC(v197, v192);
                (*(void (**)(char *, _QWORD *))(v293 + 8))(v292, v294);
                (*((void (**)(char *, _QWORD *))v297 + 1))(v296, v298);
                v52 = v302;
                goto LABEL_71;
              }
              goto LABEL_110;
            }
            sub_1000652DC(v197, v192);
            v221 = v298;
            v222 = v297;
            v223 = v294;
            v224 = v292;
          }
          else
          {
            v218 = v196;
            v219 = _convertNSErrorToError(_:)(v196);

            swift_willThrow(v220);
            swift_errorRelease(v219);
            sub_1000652DC(v190, v192);
            v221 = v298;
            v222 = v297;
            v223 = v294;
            v224 = v292;
            v161 = (_QWORD *)&unk_1011CA000;
            v139 = v301;
          }
          (*(void (**)(char *, _QWORD *))(v293 + 8))(v224, v223);
          (*((void (**)(char *, _QWORD *))v222 + 1))(v296, v221);
          goto LABEL_83;
        }
        v173 = *(void **)(v170[7] + 8 * v171);
        swift_endAccess(&aBlock);
        v174 = v173;
        swift_bridgeObjectRelease();
        v175 = (void *)objc_opt_self(MPStoreArtworkDataSource);
        v176 = v174;
        result = (char *)objc_msgSend(v175, "sharedStoreArtworkDataSource");
        if (result)
        {
          v177 = result;
          v178 = objc_allocWithZone((Class)MPArtworkCatalog);
          v179 = v176;
          v180 = objc_msgSend(v178, "initWithToken:dataSource:", v179, v177);

          v181 = *(void **)&v40[OBJC_IVAR___MusicAttributionMetadata_artworkCatalog];
          *(_QWORD *)&v40[OBJC_IVAR___MusicAttributionMetadata_artworkCatalog] = v180;

          (*((void (**)(char *, _QWORD *))v297 + 1))(v166, v298);
LABEL_71:
          v158 = v304;
          goto LABEL_83;
        }
        __break(1u);
LABEL_109:
        __break(1u);
LABEL_110:
        __break(1u);
        goto LABEL_111;
      }
    }

  }
  v66 = objc_msgSend(v304, "tracklist");
  v67 = objc_msgSend(v66, "playingItemIndexPath");

  if (!v67)
  {
    (*((void (**)(char *, uint64_t, uint64_t, uint64_t))v303 + 7))(v8, 1, 1, v300);
    goto LABEL_36;
  }
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v67);

  v68 = v303;
  v69 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v303 + 4);
  v70 = v300;
  v69(v8, v13, v300);
  v71 = (_QWORD *)*((_QWORD *)v68 + 7);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v71)(v8, 0, 1, v70);
  v72 = (unsigned int (*)(char *, uint64_t, uint64_t))*((_QWORD *)v68 + 6);
  if (v72(v8, 1, v70) == 1)
  {
LABEL_36:
    v119 = sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011A3D50);
    goto LABEL_37;
  }
  v297 = v72;
  v298 = v71;
  v73 = v299;
  v69(v299, v8, v70);
  v74 = objc_msgSend(v304, "tracklist");
  v75 = objc_msgSend(v74, "items");

  v76 = v70;
  v78 = objc_msgSend(v75, "sectionAtIndex:", IndexPath.section.getter(v77));

  v79 = objc_msgSend(v78, "metadataObject");
  if (!v79)
  {
    v119 = (*((uint64_t (**)(char *, uint64_t))v303 + 1))(v73, v76);
    goto LABEL_37;
  }
  v80 = objc_msgSend(v79, "flattenedGenericObject");
  if (!v80)
    goto LABEL_96;
  v81 = v80;
  v82 = (char *)objc_msgSend(v80, "anyObject");

  if (!v82)
    goto LABEL_96;
  objc_opt_self(MPModelPlaylist);
  v83 = (char *)swift_dynamicCastObjCClass(v82);
  if (!v83)
  {

LABEL_96:
    v119 = (*((uint64_t (**)(char *, uint64_t))v303 + 1))(v299, v300);
LABEL_37:
    v120 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)qword_10124C788 + 528))(v119);
    if (v120)
    {
      v121 = (void *)v120;
      v122 = Logger.sharePlayTogether.unsafeMutableAddressor();
      v124 = v301;
      v123 = v302;
      (*((void (**)(char *, uint64_t, id))v301 + 2))(v26, v122, v302);
      v125 = a1;
      v126 = v121;
      v127 = Logger.logObject.getter(v126);
      v128 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v127, v128))
      {
        v129 = swift_slowAlloc(18, -1);
        v130 = (void ***)swift_slowAlloc(8, -1);
        *(_DWORD *)v129 = 67240450;
        LOBYTE(aBlock) = (*(uint64_t (**)(void))((swift_isaMask & (uint64_t)v126->isa) + 0x268))() & 1;
        LODWORD(aBlock) = aBlock;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, (char *)&aBlock + 4);

        *(_WORD *)(v129 + 8) = 2112;
        v131 = (void **)objc_msgSend(v125, "enqueueingParticipant");
        v132 = v131;
        if (v131)
          aBlock = v131;
        else
          aBlock = 0;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v308);
        *v130 = v132;

        _os_log_impl((void *)&_mh_execute_header, v127, v128, "[AttributionMetadata] we have a session, but didn't build the attribution metadata. isActive: %{BOOL,public}d participant: %@", (uint8_t *)v129, 0x12u);
        v141 = sub_100007E8C((uint64_t *)&unk_1011A33E0);
        swift_arrayDestroy(v130, 1, v141);
        swift_slowDealloc(v130, -1, -1);
        swift_slowDealloc(v129, -1, -1);
        v124 = v301;
        v123 = v302;
      }
      else
      {

        v127 = v126;
      }

      (*((void (**)(char *, id))v124 + 1))(v26, v123);
    }
    return 0;
  }
  v296 = v83;
  if (!MPModelPlaylist.hasJoinedCollaboration.getter())
  {
    (*((void (**)(char *, uint64_t))v303 + 1))(v299, v300);

    goto LABEL_37;
  }
  v295 = v82;
  v84 = objc_msgSend(a1, "metadataObject");
  if (!v84
    || (v85 = v84, v86 = objc_msgSend(v84, "anyObject"), v85, !v86))
  {
LABEL_95:

    goto LABEL_96;
  }
  objc_opt_self(MPModelPlaylistEntry);
  v87 = swift_dynamicCastObjCClass(v86);
  if (!v87)
  {

    goto LABEL_95;
  }
  v89 = v301;
  v88 = v302;
  if (!qword_1011CA190)
  {
LABEL_102:
    v302 = v86;
    v242 = Logger.collaboration.unsafeMutableAddressor();
    v243 = v291;
    v244 = (*((uint64_t (**)(os_log_t, uint64_t, id))v89 + 2))(v291, v242, v88);
    v245 = Logger.logObject.getter(v244);
    v246 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v245, v246))
    {
      v247 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v247 = 0;
      _os_log_impl((void *)&_mh_execute_header, v245, v246, "Will perform Attribution metadata", v247, 2u);
      swift_slowDealloc(v247, -1, -1);
    }

    (*((void (**)(os_log_t, id))v89 + 1))(v243, v88);
    v248 = objc_msgSend(objc_allocWithZone((Class)MPModelLibraryRequest), "init");
    v249 = String._bridgeToObjectiveC()();
    objc_msgSend(v248, "setLabel:", v249);

    v250 = objc_msgSend((id)objc_opt_self(MPMediaLibrary), "deviceMediaLibrary");
    objc_msgSend(v248, "setMediaLibrary:", v250);

    sub_10004A07C(0, (unint64_t *)&unk_10119E4E0, MPModelPlaylistEntry_ptr);
    v251 = static MPModelPlaylistEntry.defaultMusicKind.getter();
    v252 = (void *)objc_opt_self(MPModelPlaylist);
    v253 = static MPModelPlaylistVariants.allPlaylists.getter();
    v254 = v248;
    v255 = objc_msgSend(v252, "kindWithVariants:playlistEntryKind:options:", v253, v251, 0);
    objc_msgSend(v254, "setSectionKind:", v255);

    objc_msgSend(v254, "setItemKind:", v251);
    v256 = sub_100007E8C((uint64_t *)&unk_1011A1470);
    v257 = (void **)swift_allocObject(v256, 40, 7);
    *((_OWORD *)v257 + 1) = xmmword_100EA7A90;
    v257[4] = v296;
    aBlock = v257;
    specialized Array._endMutation()(v257);
    sub_10004A07C(0, (unint64_t *)&unk_1011A9930, MPModelObject_ptr);
    v258 = v295;
    v259 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v254, "setScopedContainers:", v259, swift_bridgeObjectRelease().n128_f64[0]);

    v260 = sub_100007E8C((uint64_t *)&unk_10119E570);
    inited = swift_initStackObject(v260, v309);
    *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
    *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipPlaylistEntrySocialContributor);
    *(_QWORD *)(inited + 40) = v262;
    v263 = sub_100007E8C((uint64_t *)&unk_1011A6110);
    v264 = swift_allocObject(v263, 64, 7);
    *(_OWORD *)(v264 + 16) = xmmword_100EA7A80;
    *(_QWORD *)(v264 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySocialPersonName);
    *(_QWORD *)(v264 + 40) = v265;
    *(_QWORD *)(v264 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySocialPersonArtwork);
    *(_QWORD *)(v264 + 56) = v266;
    v267 = v254;
    v268 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    v269 = objc_msgSend((id)objc_opt_self(MPPropertySet), "propertySetWithProperties:", v268);

    *(_QWORD *)(inited + 48) = v269;
    sub_1000422C4(inited);
    v270 = objc_allocWithZone((Class)MPPropertySet);
    v271 = Array._bridgeToObjectiveC()().super.isa;
    sub_10004A07C(0, &qword_1011A6120, MPPropertySet_ptr);
    v272 = Dictionary._bridgeToObjectiveC()().super.isa;
    v273 = objc_msgSend(v270, "initWithProperties:relationships:", v271, v272, swift_bridgeObjectRelease().n128_f64[0]);

    objc_msgSend(v267, "setItemProperties:", v273);
    v274 = swift_allocObject(&unk_1010DD470, 24, 7);
    v275 = v304;
    *(_QWORD *)(v274 + 16) = v304;
    v308[3] = sub_1007E88A0;
    v308[4] = v274;
    aBlock = _NSConcreteStackBlock;
    v308[0] = 1107296256;
    v308[1] = sub_10004E2F4;
    v308[2] = &unk_1010DD488;
    v276 = _Block_copy(&aBlock);
    v277 = v275;
    objc_msgSend(v267, "performWithResponseHandler:", v276, swift_release().n128_f64[0]);

    _Block_release(v276);
    (*((void (**)(char *, uint64_t))v303 + 1))(v299, v300);
    return 0;
  }
  v90 = (void *)v87;
  v91 = (id)qword_1011CA190;
  result = (char *)objc_msgSend(v91, "results");
  if (!result)
    goto LABEL_109;
  v93 = result;
  v94 = objc_msgSend(result, "firstSection");

  if (!v94)
  {

    goto LABEL_102;
  }
  v95 = v91;
  v96 = objc_msgSend(v296, "identifiers");
  v97 = objc_msgSend(v94, "identifiers");
  v98 = v94;
  v99 = objc_msgSend(v96, "intersectsSet:", v97);

  if ((v99 & 1) == 0)
  {

    v89 = v301;
    v88 = v302;
    goto LABEL_102;
  }
  v294 = v98;
  v100 = v95;
  result = (char *)objc_msgSend(v95, "results");
  if (!result)
  {
LABEL_111:
    __break(1u);
    goto LABEL_112;
  }
  v101 = result;
  v102 = objc_msgSend(v90, "identifiers");
  v103 = objc_msgSend(v101, "indexPathForItemWithIdentifiersIntersectingSet:", v102);

  if (!v103)
  {
    v104 = (uint64_t)v290;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v298)(v290, 1, 1, v300);
    v89 = v301;
    v88 = v302;
    goto LABEL_101;
  }
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v103);

  v104 = (uint64_t)v290;
  v105 = v300;
  v69(v290, v13, v300);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v298)(v104, 0, 1, v105);
  v106 = v297((char *)v104, 1, v105);
  v89 = v301;
  v88 = v302;
  if (v106 == 1)
  {
LABEL_101:

    sub_10004FF60(v104, (uint64_t *)&unk_1011A3D50);
    goto LABEL_102;
  }
  v107 = v86;
  v108 = v289;
  v69((char *)v289, (char *)v104, v105);
  result = (char *)objc_msgSend(v100, "results");
  if (result)
  {
    v109 = result;
    v110 = IndexPath._bridgeToObjectiveC()().super.isa;
    v111 = objc_msgSend(v109, "itemAtIndexPath:", v110);

    v112 = objc_msgSend(v111, "socialContributor");
    v113 = v299;
    if (v112)
    {
      v40 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for AttributionMetadata()), "init");
      v114 = objc_msgSend(v112, "name");
      if (v114)
      {
        v115 = v114;
        v116 = static String._unconditionallyBridgeFromObjectiveC(_:)(v114);
        v118 = v117;

      }
      else
      {
        v116 = 0;
        v118 = 0;
      }
      v280 = (uint64_t *)&v40[OBJC_IVAR___MusicAttributionMetadata_title];
      *v280 = v116;
      v280[1] = v118;
      v281 = swift_bridgeObjectRelease();
      v282 = MPModelSharedListeningParticipant.preferredArtworkCatalog.getter(v281);
      v283 = *(void **)&v40[OBJC_IVAR___MusicAttributionMetadata_artworkCatalog];
      *(_QWORD *)&v40[OBJC_IVAR___MusicAttributionMetadata_artworkCatalog] = v282;

      v284 = (void (*)(void **, uint64_t))*((_QWORD *)v303 + 1);
      v285 = v300;
      v284(v289, v300);
      v284((void **)v113, v285);
      return v40;
    }

    v278 = (void (*)(void **, uint64_t))*((_QWORD *)v303 + 1);
    v279 = v300;
    v278(v108, v300);
    v278((void **)v113, v279);
    return 0;
  }
LABEL_112:
  __break(1u);
  return result;
}

double sub_1007E858C(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  id v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  double result;
  uint64_t v31;
  _QWORD *v32;
  _QWORD aBlock[6];

  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v31 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (void *)qword_1011CA190;
  qword_1011CA190 = (uint64_t)a1;
  v13 = a1;

  v14 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
  v22 = (void *)static OS_dispatch_queue.main.getter(v14, v15, v16, v17, v18, v19, v20, v21);
  v23 = swift_allocObject(&unk_1010DD4C0, 24, 7);
  *(_QWORD *)(v23 + 16) = a3;
  aBlock[4] = sub_1007E88C0;
  aBlock[5] = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001DBD98;
  aBlock[3] = &unk_1010DD4D8;
  v24 = _Block_copy(aBlock);
  v25 = a3;
  static DispatchQoS.unspecified.getter(v26);
  v32 = _swiftEmptyArrayStorage;
  v27 = sub_100048748((unint64_t *)&qword_1011A30C0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v28 = sub_100007E8C((uint64_t *)&unk_1011A2120);
  v29 = sub_10015E828();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v32, v28, v29, v5, v27);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v7, v24);
  _Block_release(v24);

  (*(void (**)(char *, uint64_t))(v31 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_1007E879C(uint64_t a1)
{
  id v2;
  id v3;

  v2 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v3 = v2;
  if (qword_10119C828 != -1)
  {
    swift_once(&qword_10119C828, sub_1007E6520);
    v2 = v3;
  }
  objc_msgSend(v2, "postNotificationName:object:userInfo:", qword_10124DA08, a1, 0);

}

uint64_t sub_1007E887C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

double sub_1007E88A0(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1007E858C(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_1007E88A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1007E88B8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_1007E88C0()
{
  uint64_t v0;

  sub_1007E879C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1007E88D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  v7 = type metadata accessor for ContinuousClock(0);
  v6[5] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[6] = v8;
  v6[7] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1007E8938, 0, 0);
}

uint64_t sub_1007E8938(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  v3 = static Duration.seconds(_:)(a1, a2, *(double *)(*(_QWORD *)(v2 + 16) + 16));
  v5 = v4;
  ContinuousClock.init()();
  v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1011CA2C8 + dword_1011CA2C8);
  v6 = (_QWORD *)swift_task_alloc(unk_1011CA2CC);
  *(_QWORD *)(v2 + 64) = v6;
  *v6 = v2;
  v6[1] = sub_1007E89D0;
  return v8(v3, v5, 0, 0, 1);
}

uint64_t sub_1007E89D0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD **)v1;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 64));
  v4 = v2[6];
  v3 = v2[7];
  v5 = v2[5];
  if (v0)
  {
    swift_errorRelease(v0);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    v6 = sub_1007E8DF4;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    v6 = sub_1007E8A68;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_1007E8A68()
{
  uint64_t v0;
  int *v2;
  _QWORD *v3;
  uint64_t (*v4)(void);

  if ((static Task<>.isCancelled.getter() & 1) != 0)
  {
    swift_task_dealloc(*(_QWORD *)(v0 + 56));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v2 = *(int **)(v0 + 24);
    v4 = (uint64_t (*)(void))((char *)v2 + *v2);
    v3 = (_QWORD *)swift_task_alloc(v2[1]);
    *(_QWORD *)(v0 + 72) = v3;
    *v3 = v0;
    v3[1] = sub_1007E8AE4;
    return v4();
  }
}

uint64_t sub_1007E8AE4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *v0;
  v3 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 72));
  swift_task_dealloc(*(_QWORD *)(v1 + 56));
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t type metadata accessor for RateLimiter()
{
  return objc_opt_self(_TtC5Music11RateLimiter);
}

uint64_t sub_1007E8B50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  *(_QWORD *)(v6 + 56) = v5;
  v12 = type metadata accessor for ContinuousClock.Instant(0);
  *(_QWORD *)(v6 + 64) = v12;
  v13 = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v6 + 72) = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v6 + 80) = swift_task_alloc(v14);
  *(_QWORD *)(v6 + 88) = swift_task_alloc(v14);
  *(_QWORD *)(v6 + 40) = a1;
  *(_QWORD *)(v6 + 48) = a2;
  *(_QWORD *)(v6 + 16) = a3;
  *(_QWORD *)(v6 + 24) = a4;
  *(_BYTE *)(v6 + 32) = a5 & 1;
  return swift_task_switch(sub_1007E8BF4, 0, 0);
}

uint64_t sub_1007E8BF4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  _QWORD *v8;

  v1 = v0[10];
  v2 = v0[8];
  v3 = v0[9];
  v4 = type metadata accessor for ContinuousClock(0);
  v5 = sub_100048748(&qword_1011CA2D0, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock, (uint64_t)&protocol conformance descriptor for ContinuousClock);
  dispatch thunk of Clock.now.getter(v4, v5);
  v6 = sub_100048748(&qword_1011CA2D8, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant, (uint64_t)&protocol conformance descriptor for ContinuousClock.Instant);
  dispatch thunk of InstantProtocol.advanced(by:)(v0 + 5, v2, v6);
  v7 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[12] = v7;
  v7(v1, v2);
  v8 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of Clock.sleep(until:tolerance:)[1]);
  v0[13] = v8;
  *v8 = v0;
  v8[1] = sub_1007E8D0C;
  return dispatch thunk of Clock.sleep(until:tolerance:)(v0[11], v0 + 2, v4, v5);
}

uint64_t sub_1007E8D0C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v3 = *(void (**)(uint64_t, uint64_t))(*v1 + 96);
  v2 = *(_QWORD *)(*v1 + 104);
  v4 = *(_QWORD *)(*v1 + 88);
  v5 = *(_QWORD *)(*v1 + 64);
  v6 = *v1;
  *(_QWORD *)(v6 + 112) = v0;
  swift_task_dealloc(v2);
  v3(v4, v5);
  if (v0)
    return swift_task_switch(sub_1007E8DB8, 0, 0);
  v8 = *(_QWORD *)(v6 + 80);
  swift_task_dealloc(*(_QWORD *)(v6 + 88));
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t sub_1007E8DB8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 88));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_1007E8DF8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  double result;
  uint64_t v35;
  double v36;
  _QWORD v37[2];

  sub_10005B6C0(a1, a2, type metadata accessor for LiveRadio);
  v3 = (int *)type metadata accessor for LiveRadioView(0);
  v4 = a2 + v3[5];
  *(_QWORD *)v4 = swift_getKeyPath(&unk_100ED1150);
  *(_BYTE *)(v4 + 8) = 0;
  v5 = (_QWORD *)(a2 + v3[6]);
  v6 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v7 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *v5 = EnvironmentObject.init()(v6, v7);
  v5[1] = v8;
  v9 = (_QWORD *)(a2 + v3[7]);
  v10 = type metadata accessor for NoticePresenter(0);
  v11 = sub_100048748((unint64_t *)&unk_1011C72F0, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
  *v9 = EnvironmentObject.init()(v10, v11);
  v9[1] = v12;
  v13 = a2 + v3[8];
  *(_QWORD *)v13 = sub_1007EA6EC;
  *(_QWORD *)(v13 + 8) = 0;
  *(_BYTE *)(v13 + 16) = 0;
  v14 = (_QWORD *)(a2 + v3[9]);
  v15 = type metadata accessor for NavigationPusher();
  v16 = sub_100048748(&qword_10119F060, (uint64_t (*)(uint64_t))type metadata accessor for NavigationPusher, (uint64_t)&unk_100EC8D64);
  *v14 = EnvironmentObject.init()(v15, v16);
  v14[1] = v17;
  v18 = (_QWORD *)(a2 + v3[10]);
  v19 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
  v20 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
  *v18 = EnvironmentObject.init()(v19, v20);
  v18[1] = v21;
  v22 = (_QWORD *)(a2 + v3[11]);
  v23 = type metadata accessor for TabSelectionManager(0);
  v24 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
  *v22 = EnvironmentObject.init()(v23, v24);
  v22[1] = v25;
  v26 = a2 + v3[12];
  *(_QWORD *)v26 = swift_getKeyPath(&unk_100ED1178);
  *(_QWORD *)(v26 + 8) = 0;
  *(_BYTE *)(v26 + 16) = 0;
  v27 = a2 + v3[13];
  *(_QWORD *)v27 = swift_getKeyPath(&unk_100ED11A0);
  *(_QWORD *)(v27 + 8) = 0;
  *(_BYTE *)(v27 + 16) = 0;
  v28 = a2 + v3[14];
  *(_QWORD *)v28 = swift_getKeyPath(&unk_100ED11C8);
  *(_BYTE *)(v28 + 8) = 0;
  v29 = a2 + v3[15];
  *(_QWORD *)v29 = sub_1007EA700;
  *(_QWORD *)(v29 + 8) = 0;
  *(_BYTE *)(v29 + 16) = 0;
  v30 = (_QWORD *)(a2 + v3[16]);
  *v30 = swift_getKeyPath(&unk_100ED11F0);
  v31 = sub_100007E8C(&qword_10119F4E0);
  swift_storeEnumTagMultiPayload(v30, v31, 0);
  if (qword_10119C840 != -1)
    swift_once(&qword_10119C840, sub_1007EDE4C);
  v37[0] = qword_1011CA2E8;
  v32 = sub_1000E4360();
  ScaledMetric.init(wrappedValue:)(v37, &type metadata for CGFloat, v32);
  v33 = (_QWORD *)(a2 + v3[18]);
  v36 = Int.seconds.getter(0);
  State.init(wrappedValue:)(&v36, &type metadata for CGFloat);
  result = *(double *)v37;
  v35 = v37[1];
  *v33 = v37[0];
  v33[1] = v35;
  return result;
}

char *sub_1007E90F4@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  int v44;
  BOOL v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  int *v63;
  _QWORD *v64;
  int *v65;
  char *v66;
  _QWORD *v67;
  _QWORD *v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char v100[24];
  char v101[24];
  char v102[24];
  char v103[24];
  char v104[8];
  char v105[8];

  v95 = a3;
  v99 = a1;
  v94 = type metadata accessor for Artwork.CropStyle(0);
  v93 = *(_QWORD *)(v94 - 8);
  __chkstk_darwin(v94);
  v92 = (char *)&v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = type metadata accessor for EditorialVideoArtworkFlavor(0);
  v90 = *(_QWORD *)(v91 - 8);
  __chkstk_darwin(v91);
  v8 = (char *)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011AA8D0);
  __chkstk_darwin(v9);
  v11 = (char *)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v12);
  v14 = (char *)&v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v15);
  v80 = (uint64_t)&v79 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v79 - v18;
  __chkstk_darwin(v20);
  v22 = (char *)&v79 - v21;
  __chkstk_darwin(v23);
  v25 = (char *)&v79 - v24;
  __chkstk_darwin(v26);
  v89 = (uint64_t)&v79 - v27;
  sub_10004A160(a2, (uint64_t)&v79 - v27, (uint64_t *)&unk_1011A20D0);
  v28 = &v99[OBJC_IVAR____TtC11MusicJSCore19JSLiveRadioCaseItem_headerTitleText];
  swift_beginAccess(&v99[OBJC_IVAR____TtC11MusicJSCore19JSLiveRadioCaseItem_headerTitleText], v105, 0, 0);
  v29 = *((_QWORD *)v28 + 1);
  v96 = v11;
  v81 = v19;
  if (v29)
  {
    v83 = *(_QWORD *)v28;
    v82 = v29;
  }
  else
  {
    v30 = &v99[OBJC_IVAR____TtC11MusicJSCore19JSLiveRadioCaseItem_supertitleText];
    swift_beginAccess(&v99[OBJC_IVAR____TtC11MusicJSCore19JSLiveRadioCaseItem_supertitleText], v104, 0, 0);
    v31 = *((_QWORD *)v30 + 1);
    v83 = *(_QWORD *)v30;
    v82 = v31;
    swift_bridgeObjectRetain();
  }
  v32 = &v99[OBJC_IVAR____TtC11MusicJSCore19JSLiveRadioCaseItem_headerSubtitleText];
  swift_beginAccess(&v99[OBJC_IVAR____TtC11MusicJSCore19JSLiveRadioCaseItem_headerSubtitleText], v103, 0, 0);
  v33 = *((_QWORD *)v32 + 1);
  v88 = *(_QWORD *)v32;
  v34 = &v99[OBJC_IVAR____TtC11MusicJSCore19JSLiveRadioCaseItem_headlineText];
  swift_beginAccess(&v99[OBJC_IVAR____TtC11MusicJSCore19JSLiveRadioCaseItem_headlineText], v102, 0, 0);
  v35 = *((_QWORD *)v34 + 1);
  v86 = *(_QWORD *)v34;
  v36 = (uint64_t *)&v99[OBJC_IVAR____TtC11MusicJSCore19JSLiveRadioCaseItem_titleText];
  swift_beginAccess(&v99[OBJC_IVAR____TtC11MusicJSCore19JSLiveRadioCaseItem_titleText], v101, 0, 0);
  v37 = *v36;
  v38 = v36[1];
  v98 = v37;
  sub_10004A160(a2, (uint64_t)v25, (uint64_t *)&unk_1011A20D0);
  v97 = v35;
  if (v38)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10004FF60((uint64_t)v25, (uint64_t *)&unk_1011A20D0);
    v39 = (uint64_t)v81;
  }
  else
  {
    v85 = a2;
    sub_10004A160((uint64_t)v25, (uint64_t)v22, (uint64_t *)&unk_1011A20D0);
    v40 = type metadata accessor for GenericMusicItem(0);
    v41 = *(_QWORD *)(v40 - 8);
    v42 = v8;
    v43 = v14;
    v44 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 48))(v22, 1, v40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v45 = v44 == 1;
    v14 = v43;
    v8 = v42;
    v39 = (uint64_t)v81;
    if (v45)
    {
      sub_10004FF60((uint64_t)v25, (uint64_t *)&unk_1011A20D0);
      sub_10004FF60((uint64_t)v22, (uint64_t *)&unk_1011A20D0);
      v98 = 0;
      v38 = 0;
    }
    else
    {
      v98 = sub_1007E988C();
      v47 = v46;
      sub_10004FF60((uint64_t)v25, (uint64_t *)&unk_1011A20D0);
      v48 = v40;
      v38 = v47;
      (*(void (**)(char *, uint64_t))(v41 + 8))(v22, v48);
    }
    a2 = v85;
  }
  v49 = (uint64_t *)&v99[OBJC_IVAR____TtC11MusicJSCore19JSLiveRadioCaseItem_subtitleText];
  swift_beginAccess(&v99[OBJC_IVAR____TtC11MusicJSCore19JSLiveRadioCaseItem_subtitleText], v100, 0, 0);
  v51 = *v49;
  v50 = v49[1];
  sub_10004A160(a2, v39, (uint64_t *)&unk_1011A20D0);
  v87 = v33;
  v85 = v38;
  if (v50)
  {
    swift_bridgeObjectRetain();
    sub_10004FF60(v39, (uint64_t *)&unk_1011A20D0);
    v84 = v51;
  }
  else
  {
    v52 = a2;
    v53 = v80;
    sub_10004A160(v39, v80, (uint64_t *)&unk_1011A20D0);
    v54 = type metadata accessor for GenericMusicItem(0);
    v55 = *(_QWORD *)(v54 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54) == 1)
    {
      sub_10004FF60(v39, (uint64_t *)&unk_1011A20D0);
      sub_10004FF60(v53, (uint64_t *)&unk_1011A20D0);
      v84 = 0;
      v50 = 0;
    }
    else
    {
      v56 = v53;
      v84 = sub_1007E9CE8();
      v50 = v57;
      sub_10004FF60(v39, (uint64_t *)&unk_1011A20D0);
      (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v56, v54);
    }
    a2 = v52;
  }
  v58 = v95;
  v59 = sub_10004A160(v95, (uint64_t)v14, (uint64_t *)&unk_1011A3E10);
  v60 = static EditorialVideoArtworkFlavor.motionMediumVideo16x9.getter(v59);
  v61 = (uint64_t)v92;
  static Artwork.CropStyle.specificRectangle.getter(v60);
  v62 = v96;
  sub_1006A1F8C((uint64_t)v8, v61, a2, v96);
  (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v61, v94);
  (*(void (**)(char *, uint64_t))(v90 + 8))(v8, v91);
  sub_10004FF60(v58, (uint64_t *)&unk_1011A3E10);
  v63 = (int *)type metadata accessor for LiveRadio(0);
  v64 = (_QWORD *)(a4 + v63[11]);
  v65 = (int *)type metadata accessor for SegueContext(0);
  sub_10004A160(a2, (uint64_t)v64 + v65[5], (uint64_t *)&unk_1011A20D0);
  v66 = v99;
  *v64 = v99;
  *((_BYTE *)v64 + v65[6]) = 0;
  v67 = (_QWORD *)((char *)v64 + v65[7]);
  *v67 = 0;
  v67[1] = 0;
  v68 = (_QWORD *)(a4 + v63[12]);
  *v68 = v66;
  sub_100065228(a2, (uint64_t)v68 + v65[5], (uint64_t *)&unk_1011A20D0);
  *((_BYTE *)v68 + v65[6]) = 1;
  v69 = (_QWORD *)((char *)v68 + v65[7]);
  *v69 = 0;
  v69[1] = 0;
  sub_100065228(v89, a4, (uint64_t *)&unk_1011A20D0);
  v70 = (_QWORD *)(a4 + v63[5]);
  v71 = v82;
  *v70 = v83;
  v70[1] = v71;
  v72 = v87;
  v70[2] = v88;
  v70[3] = v72;
  v73 = (_QWORD *)(a4 + v63[6]);
  v74 = v97;
  *v73 = v86;
  v73[1] = v74;
  v75 = (uint64_t *)(a4 + v63[7]);
  v76 = v85;
  *v75 = v98;
  v75[1] = v76;
  v77 = (uint64_t *)(a4 + v63[8]);
  *v77 = v84;
  v77[1] = v50;
  sub_100065228((uint64_t)v14, a4 + v63[9], (uint64_t *)&unk_1011A3E10);
  sub_100065228((uint64_t)v62, a4 + v63[10], &qword_1011AA8D0);
  return v99;
}

uint64_t sub_1007E988C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, uint64_t, uint64_t, __n128);
  int v17;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  __n128 v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  __n128 v42;
  os_log_type_t v43;
  void (*v44)(char *, uint64_t, __n128);
  os_log_t v45;
  uint64_t v46;
  uint64_t v47;
  os_log_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v1 = type metadata accessor for Logger(0);
  v51 = *(_QWORD *)(v1 - 8);
  v52 = v1;
  __chkstk_darwin(v1);
  v3 = (char *)&v47 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Station(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for GenericMusicItem(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v47 - v14;
  v16 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16);
  v16((char *)&v47 - v14, v0, v8, v13);
  v17 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v15, v8);
  if (v17 == enum case for GenericMusicItem.album(_:)
    || v17 == enum case for GenericMusicItem.artist(_:)
    || v17 == enum case for GenericMusicItem.curator(_:)
    || v17 == enum case for GenericMusicItem.genre(_:)
    || v17 == enum case for GenericMusicItem.musicVideo(_:)
    || v17 == enum case for GenericMusicItem.playlist(_:)
    || v17 == enum case for GenericMusicItem.radioShow(_:)
    || v17 == enum case for GenericMusicItem.recordLabel(_:)
    || v17 == enum case for GenericMusicItem.song(_:))
  {
    goto LABEL_27;
  }
  if (v17 == enum case for GenericMusicItem.station(_:))
  {
    (*(void (**)(char *, uint64_t))(v9 + 96))(v15, v8);
    v27 = (*(uint64_t (**)(char *, char *, uint64_t))(v5 + 32))(v7, v15, v4);
    v26 = Station.name.getter(v27);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v26;
  }
  if (v17 == enum case for GenericMusicItem.uploadedAudio(_:)
    || v17 == enum case for GenericMusicItem.uploadedVideo(_:))
  {
LABEL_27:
    (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v8);
  }
  else
  {
    v29 = Logger.musicKit.unsafeMutableAddressor();
    v30 = v51;
    v31 = v3;
    v32 = v3;
    v33 = v52;
    (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v32, v29, v52);
    v34 = ((uint64_t (*)(char *, uint64_t, uint64_t))v16)(v11, v0, v8);
    v35 = Logger.logObject.getter(v34);
    v37 = static os_log_type_t.fault.getter(v36);
    if (os_log_type_enabled(v35, v37))
    {
      v38 = swift_slowAlloc(22, -1);
      v49 = swift_slowAlloc(64, -1);
      v54 = v49;
      *(_DWORD *)v38 = 136446467;
      v48 = v35;
      v53 = sub_100322200(0xD000000000000010, 0x8000000100E32610, &v54);
      v50 = v31;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, &v54);
      *(_WORD *)(v38 + 12) = 2081;
      v47 = v38 + 14;
      v39 = sub_100048748((unint64_t *)&qword_1011A1430, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t)&protocol conformance descriptor for GenericMusicItem);
      v40 = dispatch thunk of CustomStringConvertible.description.getter(v8, v39);
      v53 = sub_100322200(v40, v41, &v54);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, &v54);
      v42 = swift_bridgeObjectRelease();
      v43 = v37;
      v44 = *(void (**)(char *, uint64_t, __n128))(v9 + 8);
      v44(v11, v8, v42);
      v45 = v48;
      _os_log_impl((void *)&_mh_execute_header, v48, v43, "Unhandled case for %{public}s: %{private}s", (uint8_t *)v38, 0x16u);
      v46 = v49;
      swift_arrayDestroy(v49, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v46, -1, -1);
      swift_slowDealloc(v38, -1, -1);

      (*(void (**)(char *, uint64_t))(v30 + 8))(v50, v33);
    }
    else
    {
      v44 = *(void (**)(char *, uint64_t, __n128))(v9 + 8);
      ((void (*)(char *, uint64_t))v44)(v11, v8);

      (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v33);
    }
    ((void (*)(char *, uint64_t))v44)(v15, v8);
  }
  return 0;
}

uint64_t sub_1007E9CE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t, uint64_t, __n128);
  int v18;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  __n128 v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  __n128 v44;
  void (*v45)(char *, uint64_t, __n128);
  uint64_t v46;
  _QWORD v47[2];
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v49 = type metadata accessor for Logger(0);
  v51 = *(_QWORD *)(v49 - 8);
  __chkstk_darwin(v49);
  v50 = (char *)v47 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_100007E8C(&qword_1011A58C8);
  __chkstk_darwin(v2);
  v4 = (char *)v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Station(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for GenericMusicItem(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)v47 - v15;
  v17 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16);
  v17((char *)v47 - v15, v0, v9, v14);
  v18 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v16, v9);
  if (v18 == enum case for GenericMusicItem.album(_:)
    || v18 == enum case for GenericMusicItem.artist(_:)
    || v18 == enum case for GenericMusicItem.curator(_:)
    || v18 == enum case for GenericMusicItem.genre(_:)
    || v18 == enum case for GenericMusicItem.musicVideo(_:)
    || v18 == enum case for GenericMusicItem.playlist(_:)
    || v18 == enum case for GenericMusicItem.radioShow(_:)
    || v18 == enum case for GenericMusicItem.recordLabel(_:)
    || v18 == enum case for GenericMusicItem.song(_:))
  {
LABEL_27:
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
    return 0;
  }
  if (v18 != enum case for GenericMusicItem.station(_:))
  {
    if (v18 != enum case for GenericMusicItem.uploadedAudio(_:)
      && v18 != enum case for GenericMusicItem.uploadedVideo(_:))
    {
      v32 = Logger.musicKit.unsafeMutableAddressor();
      v34 = v50;
      v33 = v51;
      v35 = v49;
      (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v50, v32, v49);
      v36 = ((uint64_t (*)(char *, uint64_t, uint64_t))v17)(v12, v0, v9);
      v37 = Logger.logObject.getter(v36);
      v39 = static os_log_type_t.fault.getter(v38);
      if (os_log_type_enabled(v37, v39))
      {
        v40 = swift_slowAlloc(22, -1);
        v48 = swift_slowAlloc(64, -1);
        v53 = v48;
        *(_DWORD *)v40 = 136446467;
        v52 = sub_100322200(0xD000000000000010, 0x8000000100E32610, &v53);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, &v53);
        *(_WORD *)(v40 + 12) = 2081;
        v47[1] = v40 + 14;
        v41 = sub_100048748((unint64_t *)&qword_1011A1430, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t)&protocol conformance descriptor for GenericMusicItem);
        v42 = dispatch thunk of CustomStringConvertible.description.getter(v9, v41);
        v52 = sub_100322200(v42, v43, &v53);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, &v53);
        v44 = swift_bridgeObjectRelease();
        v45 = *(void (**)(char *, uint64_t, __n128))(v10 + 8);
        v45(v12, v9, v44);
        _os_log_impl((void *)&_mh_execute_header, v37, v39, "Unhandled case for %{public}s: %{private}s", (uint8_t *)v40, 0x16u);
        v46 = v48;
        swift_arrayDestroy(v48, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v46, -1, -1);
        swift_slowDealloc(v40, -1, -1);

        (*(void (**)(char *, uint64_t))(v51 + 8))(v50, v35);
      }
      else
      {
        v45 = *(void (**)(char *, uint64_t, __n128))(v10 + 8);
        ((void (*)(char *, uint64_t))v45)(v12, v9);

        (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v35);
      }
      ((void (*)(char *, uint64_t))v45)(v16, v9);
      return 0;
    }
    goto LABEL_27;
  }
  (*(void (**)(char *, uint64_t))(v10 + 96))(v16, v9);
  v29 = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 32))(v8, v16, v5);
  Station.editorialNotes.getter(v29);
  v30 = type metadata accessor for EditorialNotes(0);
  v31 = *(_QWORD *)(v30 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v4, 1, v30) != 1)
  {
    v27 = EditorialNotes.short.getter();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v4, v30);
    return v27;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_10004FF60((uint64_t)v4, &qword_1011A58C8);
  return 0;
}

uint64_t sub_1007EA1D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  int *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  int *v51;
  uint64_t *v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v2 = v1;
  v60 = a1;
  v3 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v3);
  v58 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for LiveRadio(0);
  __chkstk_darwin(v5);
  v57 = (uint64_t)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
  __chkstk_darwin(v7);
  v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Artwork(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011AA8D0);
  __chkstk_darwin(v13);
  v15 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v16);
  v18 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v56 - v20;
  v22 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
  __chkstk_darwin(v22);
  v24 = (char *)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = v5;
  v25 = *(int *)(v5 + 40);
  v61 = v2;
  sub_10004A160(v2 + v25, (uint64_t)v15, &qword_1011AA8D0);
  v26 = type metadata accessor for MotionViewModel(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v15, 1, v26) == 1)
  {
    sub_10004FF60((uint64_t)v15, &qword_1011AA8D0);
    v28 = type metadata accessor for ArtworkImage.ViewModel(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v18, 1, 1, v28);
  }
  else
  {
    VideoArtwork.previewFrame.getter(v27);
    sub_10004A160((uint64_t)&v15[*(int *)(v26 + 20)], (uint64_t)v9, (uint64_t *)&unk_1011A14A0);
    ArtworkImage.ViewModel.init(artwork:cropStyle:)((uint64_t)v12, (uint64_t)v9, (uint64_t)v18);
    v28 = type metadata accessor for ArtworkImage.ViewModel(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v18, 0, 1, v28);
    sub_10005B748((uint64_t)v15, type metadata accessor for MotionViewModel);
  }
  v29 = v57;
  sub_10005B704(v61, v57, type metadata accessor for LiveRadio);
  type metadata accessor for ArtworkImage.ViewModel(0);
  v30 = *(_QWORD *)(v28 - 8);
  v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48))(v18, 1, v28);
  v33 = (uint64_t)v58;
  v32 = v59;
  if (v31 == 1)
  {
    sub_10004A160(v29 + *(int *)(v59 + 36), (uint64_t)v21, (uint64_t *)&unk_1011A3E10);
    sub_10005B748(v29, type metadata accessor for LiveRadio);
    sub_10004FF60((uint64_t)v18, (uint64_t *)&unk_1011A3E10);
  }
  else
  {
    sub_10005B748(v29, type metadata accessor for LiveRadio);
    sub_10005B6C0((uint64_t)v18, (uint64_t)v21, type metadata accessor for ArtworkImage.ViewModel);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v21, 0, 1, v28);
  }
  v34 = &v24[v22[5]];
  v35 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v34, 8, 10, v35);
  v36 = Corner.large.unsafeMutableAddressor();
  v37 = *v36;
  v38 = v36[1];
  v39 = *((_BYTE *)v36 + 16);
  sub_100065228((uint64_t)v21, (uint64_t)v24, (uint64_t *)&unk_1011A3E10);
  *(_QWORD *)&v24[v22[6]] = 0x3FFC71C71C71C71CLL;
  v40 = &v24[v22[7]];
  *(_QWORD *)v40 = v37;
  *((_QWORD *)v40 + 1) = v38;
  v40[16] = v39;
  sub_10004A160(v61, v33, (uint64_t *)&unk_1011A20D0);
  v41 = type metadata accessor for GenericMusicItem(0);
  v42 = *(_QWORD *)(v41 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v33, 1, v41) == 1)
  {
    sub_10004FF60(v33, (uint64_t *)&unk_1011A20D0);
    v43 = 0;
    v44 = 0;
  }
  else
  {
    v43 = sub_1007E988C();
    v44 = v45;
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v33, v41);
  }
  v46 = *(int *)(v32 + 28);
  v47 = v60;
  v48 = (uint64_t *)(v61 + v46);
  v50 = *v48;
  v49 = v48[1];
  sub_10005B6C0((uint64_t)v24, v60, type metadata accessor for ContextualPreview.Artwork);
  v51 = (int *)type metadata accessor for ContextualPreview.Data(0);
  v52 = (uint64_t *)(v47 + v51[5]);
  *v52 = v43;
  v52[1] = v44;
  v53 = (_QWORD *)(v47 + v51[6]);
  *v53 = v50;
  v53[1] = v49;
  v54 = (_QWORD *)(v47 + v51[7]);
  *v54 = 0;
  v54[1] = 0;
  *(_BYTE *)(v47 + v51[8]) = 1;
  *(_BYTE *)(v47 + v51[9]) = 0;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for LiveRadio(uint64_t a1)
{
  return sub_100055934(a1, qword_1011CA348, (uint64_t)&nominal type descriptor for LiveRadio);
}

uint64_t sub_1007EA6EC()
{
  return sub_1007EA714(&qword_1011A03A8, (uint64_t (*)(void))PresentedViewState.init());
}

uint64_t sub_1007EA700()
{
  return sub_1007EA714(&qword_10119CBF8, (uint64_t (*)(void))&PresentedViewState.init());
}

uint64_t sub_1007EA714(uint64_t *a1, uint64_t (*a2)(void))
{
  uint64_t v3;

  v3 = sub_100007E8C(a1);
  swift_allocObject(v3, *(unsigned int *)(v3 + 48), *(unsigned __int16 *)(v3 + 52));
  return a2();
}

uint64_t sub_1007EA748@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  void *v63;
  char v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t KeyPath;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  double v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  double *v99;
  uint64_t v100;
  double v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  double v123;
  uint64_t v124;
  uint64_t v125;
  double v126;
  char v127;
  char v128;
  unint64_t v129;
  char *v130;
  int *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  id v148;
  char v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t *v168;
  _QWORD *v169;
  unint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char v174;
  uint64_t v175;
  uint64_t v176;
  _QWORD *v177;
  _QWORD *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  unint64_t v182;
  uint64_t v183;
  unint64_t v184;
  uint64_t v185;
  uint64_t *v186;
  unint64_t v187;
  uint64_t v188;
  uint64_t v189;
  void *v190;
  void *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  _QWORD *v196;
  uint64_t v197;
  unint64_t v198;
  uint64_t OpaqueTypeConformance2;
  unint64_t v200;
  _QWORD *v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  __n128 v215;
  __int128 *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  char v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  char *v226;
  unsigned __int8 v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  char *v231;
  unint64_t v232;
  char *v233;
  uint64_t v234;
  char *v235;
  char *v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  void (*v240)(char *, char *, uint64_t);
  char *v241;
  uint64_t v242;
  uint64_t v243;
  void (*v244)(char *, uint64_t);
  uint64_t result;
  uint64_t v246;
  uint64_t *v247;
  uint64_t v248;
  unint64_t *v249;
  void *v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  _QWORD *v262;
  uint64_t v263;
  ValueMetadata *v264;
  unint64_t v265;
  uint64_t v266;
  uint64_t *v267;
  uint64_t v268;
  unint64_t v269;
  uint64_t v270;
  _QWORD *v271;
  __int128 v272;
  uint64_t *v273;
  uint64_t v274;
  id v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  char *v279;
  uint64_t v280;
  char *v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  id v286;
  char *v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  char *v296;
  uint64_t v297;
  uint64_t v298;
  char *v299;
  uint64_t v300;
  char *v301;
  char *v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  char *v309;
  uint64_t v310;
  char *v311;
  uint64_t v312;
  char *v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  char *v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t *v323;
  uint64_t v324;
  uint64_t v325;
  char *v326;
  int *v327;
  uint64_t v328;
  _BYTE v329[32];
  uint64_t v330;
  _QWORD v331[5];
  _QWORD v332[5];
  _QWORD v333[5];
  uint64_t v334;
  ValueMetadata *v335;
  uint64_t v336;
  uint64_t v337;
  _UNKNOWN **v338;
  _QWORD *v339;
  uint64_t v340;
  unint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  char *v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  __int128 v350;
  __int128 v351;
  __int128 v352;
  char *v353;
  __int128 v354;
  uint64_t v355;

  v316 = a2;
  v3 = type metadata accessor for AccessibilityChildBehavior(0);
  v314 = *(_QWORD *)(v3 - 8);
  v315 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v266 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (int *)type metadata accessor for LiveRadioView(0);
  __chkstk_darwin(v6);
  v274 = (uint64_t)&v266 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C((uint64_t *)&unk_1011A20C0);
  __chkstk_darwin(v8);
  v290 = (uint64_t)&v266 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v288 = type metadata accessor for MotionArtworkView(0);
  __chkstk_darwin(v288);
  v289 = (uint64_t)&v266 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v317 = sub_100007E8C(&qword_1011AA8D8);
  __chkstk_darwin(v317);
  v318 = (uint64_t)&v266 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011CA480);
  v320 = *(_QWORD *)(v12 - 8);
  v321 = v12;
  __chkstk_darwin(v12);
  v319 = (char *)&v266 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C(&qword_1011CA488);
  v292 = *(_QWORD *)(v14 - 8);
  v293 = v14;
  __chkstk_darwin(v14);
  v326 = (char *)&v266 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v297 = sub_100007E8C(&qword_1011CA490);
  v295 = *(_QWORD *)(v297 - 8);
  __chkstk_darwin(v297);
  v294 = (uint64_t)&v266 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v300 = sub_100007E8C(&qword_1011CA498);
  v298 = *(_QWORD *)(v300 - 8);
  __chkstk_darwin(v300);
  v296 = (char *)&v266 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v308 = sub_100007E8C(&qword_1011CA4A0);
  v305 = *(_QWORD *)(v308 - 8);
  __chkstk_darwin(v308);
  v302 = (char *)&v266 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v306 = sub_100007E8C(&qword_1011AC718);
  v303 = *(_QWORD *)(v306 - 8);
  __chkstk_darwin(v306);
  v301 = (char *)&v266 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v304 = sub_100007E8C(&qword_1011AC720);
  __chkstk_darwin(v304);
  v307 = (uint64_t)&v266 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v312 = sub_100007E8C(&qword_1011CA4A8);
  v310 = *(_QWORD *)(v312 - 8);
  __chkstk_darwin(v312);
  v311 = (char *)&v266 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v299 = (char *)&v266 - v23;
  __chkstk_darwin(v24);
  v309 = (char *)&v266 - v25;
  v26 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v26);
  v323 = (uint64_t *)((char *)&v266 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v28);
  v30 = (char *)&v266 - v29;
  v31 = sub_100007E8C(&qword_1011A9580);
  __chkstk_darwin(v31);
  v33 = (char *)&v266 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = _s18PerformanceConteXtVMa(0);
  __chkstk_darwin(v34);
  v283 = (uint64_t)&v266 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = type metadata accessor for LiveRadio(0);
  __chkstk_darwin(v36);
  v38 = (char *)&v266 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v278 = type metadata accessor for LiveRadioView.HeaderView(0);
  __chkstk_darwin(v278);
  v285 = (uint64_t)&v266 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v280 = sub_100007E8C(&qword_1011CA4B0);
  __chkstk_darwin(v280);
  v287 = (char *)&v266 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v284 = sub_100007E8C(&qword_1011CA4B8);
  __chkstk_darwin(v284);
  v291 = (uint64_t)&v266 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v42);
  v282 = (uint64_t)&v266 - v43;
  __chkstk_darwin(v44);
  v325 = (uint64_t)&v266 - v45;
  v279 = v38;
  sub_10005B704(a1, (uint64_t)v38, type metadata accessor for LiveRadio);
  v353 = 0;
  v351 = 0u;
  v352 = 0u;
  v350 = 0u;
  v272 = xmmword_100EA93A0;
  v354 = xmmword_100EA93A0;
  v273 = (uint64_t *)(a1 + v6[10]);
  v46 = *v273;
  if (!*v273)
  {
    v186 = v273;
LABEL_22:
    v246 = v186[1];
LABEL_30:
    v247 = (uint64_t *)&unk_10119CBE0;
    v248 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
    v249 = &qword_1011C5B90;
    v250 = &unk_100EC0A50;
    goto LABEL_31;
  }
  swift_retain();
  sub_100823DD8((uint64_t)v33);
  v47 = type metadata accessor for OpenURLAction(0);
  v48 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56);
  v281 = v33;
  v48(v33, 0, 1, v47);
  v324 = v36;
  v49 = a1 + *(int *)(v36 + 48);
  v50 = v49 + *(int *)(type metadata accessor for SegueContext(0) + 20);
  v286 = v30;
  sub_10004A160(v50, (uint64_t)v30, (uint64_t *)&unk_1011A20D0);
  v51 = a1 + v6[15];
  v52 = *(_QWORD *)v51;
  v53 = *(_QWORD *)(v51 + 8);
  v54 = *(unsigned __int8 *)(v51 + 16);
  v55 = sub_100007E8C(&qword_10119CBF8);
  v328 = a1;
  v56 = v55;
  v57 = sub_100049F28((unint64_t *)&unk_10119CC00, &qword_10119CBF8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  v58 = v56;
  v59 = v328;
  v60 = StateObject.wrappedValue.getter(v52, v53, v54, v58, v57);
  v61 = (uint64_t *)(v59 + v6[6]);
  if (!*v61)
  {
    v246 = v61[1];
    v247 = (uint64_t *)&unk_1011B4E40;
    v248 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
    v249 = (unint64_t *)&unk_10119CC10;
    v250 = &protocol conformance descriptor for PresentedViewState<A>;
LABEL_31:
    v257 = sub_100049F28(v249, v247, (uint64_t)v250);
    EnvironmentObject.error()(0, v246, v248, v257);
    __break(1u);
    goto LABEL_32;
  }
  v276 = *v61;
  v277 = v60;
  v267 = v61;
  v313 = v5;
  v62 = v59 + v6[5];
  v63 = *(void **)v62;
  v266 = v62;
  v64 = *(_BYTE *)(v62 + 8);
  swift_retain();
  sub_1000A4100(v63, v64);
  v275 = sub_100824044(v63, v64);
  sub_1000A4224(v63, v64);
  v271 = (_QWORD *)(v59 + v6[11]);
  if (!*v271)
  {
    v251 = v271[1];
    v154 = type metadata accessor for TabSelectionManager(0);
    v151 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
    swift_retain();
    EnvironmentObject.error()(0, v251, v154, v151);
    __break(1u);
LABEL_25:
    v252 = *(_QWORD *)(v151 + 8);
    v253 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
LABEL_28:
    EnvironmentObject.error()(0, v252, v154, v253);
    __break(1u);
    goto LABEL_29;
  }
  __chkstk_darwin(v65);
  v66 = sub_1000502A4();
  KeyPath = swift_getKeyPath(&unk_100ED12F0);
  __chkstk_darwin(KeyPath);
  v264 = &type metadata for TabIdentifier;
  v265 = v66;
  v269 = v66;
  v68 = swift_getKeyPath(&unk_100ED1328);
  swift_retain();
  swift_retain();
  static Published.subscript.getter(&v340, v69, KeyPath, v68);
  swift_release();
  swift_release();
  swift_release();
  LODWORD(v322) = v340;
  v70 = v59 + v6[12];
  v71 = *(_QWORD *)v70;
  v72 = *(_QWORD *)(v70 + 8);
  v268 = v70;
  v73 = *(_BYTE *)(v70 + 16);
  sub_1000A410C(v71, v72, v73);
  sub_100824224(v71, v72, v73);
  sub_1000A4230(v71, v72, v73);
  v327 = v6;
  v74 = v59 + v6[13];
  v76 = *(_QWORD *)v74;
  v75 = *(_QWORD *)(v74 + 8);
  v270 = v74;
  v77 = *(_BYTE *)(v74 + 16);
  sub_1000A411C(v76, v75, v77);
  sub_100824400(v76, v75, v77, &v340);
  sub_1000A4240(v76, v75, v77);
  v78 = v340;
  v79 = v341;
  v80 = v322;
  v322 = v46;
  sub_10066D160(v80);
  v82 = v81;
  v84 = v83;
  swift_bridgeObjectRelease();
  if (v79 >> 60 == 15)
  {
    swift_bridgeObjectRetain();
    v85 = sub_10066D7A8();
    v79 = v86;
    swift_bridgeObjectRelease();
    swift_release();
    v87 = (uint64_t)v281;
  }
  else
  {
    swift_release();
    v87 = (uint64_t)v281;
    v85 = v78;
  }
  sub_1000A411C(v76, v75, v77);
  sub_100824400(v76, v75, v77, &v340);
  sub_1000A4240(v76, v75, v77);
  v261 = v82;
  v88 = v283;
  sub_1005F5640((uint64_t)&v350, v322, v87, (uint64_t)v286, 0, v277, v276, 0, v283, v275, v261, v84, v85, v79, v340, v341);
  v89 = v285;
  sub_10005B6C0((uint64_t)v279, v285, type metadata accessor for LiveRadio);
  v90 = sub_10005B6C0(v88, v89 + *(int *)(v278 + 20), _s18PerformanceConteXtVMa);
  LOBYTE(v88) = static Edge.Set.top.getter(v90);
  v91 = EdgeInsets.init(_all:)(18.0);
  v93 = v92;
  v95 = v94;
  v97 = v96;
  v98 = v287;
  sub_10005B704(v89, (uint64_t)v287, type metadata accessor for LiveRadioView.HeaderView);
  v99 = (double *)&v98[*(int *)(v280 + 36)];
  *(_BYTE *)v99 = v88;
  v99[1] = v91;
  *((_QWORD *)v99 + 2) = v93;
  *((_QWORD *)v99 + 3) = v95;
  *((_QWORD *)v99 + 4) = v97;
  *((_BYTE *)v99 + 40) = 0;
  v100 = sub_10005B748(v89, type metadata accessor for LiveRadioView.HeaderView);
  LOBYTE(v88) = static Edge.Set.bottom.getter(v100);
  v101 = EdgeInsets.init(_all:)(14.0);
  v103 = v102;
  v105 = v104;
  v107 = v106;
  v108 = v282;
  sub_10004A160((uint64_t)v98, v282, &qword_1011CA4B0);
  v109 = v108 + *(int *)(v284 + 36);
  *(_BYTE *)v109 = v88;
  *(double *)(v109 + 8) = v101;
  *(_QWORD *)(v109 + 16) = v103;
  *(_QWORD *)(v109 + 24) = v105;
  *(_QWORD *)(v109 + 32) = v107;
  *(_BYTE *)(v109 + 40) = 0;
  sub_10004FF60((uint64_t)v98, &qword_1011CA4B0);
  sub_100065228(v108, v325, &qword_1011CA4B8);
  v110 = v324;
  v111 = v328;
  v112 = v289;
  sub_10004A160(v328 + *(int *)(v324 + 40), v289, &qword_1011AA8D0);
  v113 = v288;
  sub_10004A160(v111 + *(int *)(v110 + 36), v112 + *(int *)(v288 + 20), (uint64_t *)&unk_1011A3E10);
  v114 = v112 + *(int *)(v113 + 24);
  v115 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v115 - 8) + 56))(v114, 1, 10, v115);
  v116 = v112 + *(int *)(v113 + 28);
  *(_QWORD *)v116 = 0;
  *(_QWORD *)(v116 + 8) = 0;
  *(_BYTE *)(v116 + 16) = 1;
  if (qword_10119C838 != -1)
    swift_once(&qword_10119C838, sub_1007EDE14);
  v117 = qword_1011CA2E0;
  v118 = v318;
  sub_10005B704(v112, v318, type metadata accessor for MotionArtworkView);
  v119 = v317;
  v120 = v118 + *(int *)(v317 + 36);
  *(_QWORD *)v120 = v117;
  *(_WORD *)(v120 + 8) = 256;
  v121 = sub_10005B748(v112, type metadata accessor for MotionArtworkView);
  static Color.white.getter(v121);
  v122 = Color.opacity(_:)(0.1);
  swift_release();
  v123 = UIScreen.Dimensions.size.getter(v122);
  v125 = v124;
  v126 = v123;
  v128 = v127;
  v129 = sub_1002CF40C();
  v130 = v319;
  View.border(_:corner:)(v125, v128, 0x4030000000000000, 3, 0, v119, v129, v126);
  swift_release();
  sub_10004FF60(v118, &qword_1011AA8D8);
  v131 = v327;
  v132 = sub_100007E8C(qword_1011C9550);
  ScaledMetric.wrappedValue.getter(&v350, v132);
  sub_1007EBF94(v111, *(double *)&v350);
  (*(void (**)(char *, uint64_t))(v320 + 8))(v130, v321);
  v133 = (uint64_t)v323;
  sub_10004A160(v111, (uint64_t)v323, (uint64_t *)&unk_1011A20D0);
  v134 = type metadata accessor for GenericMusicItem(0);
  v135 = *(_QWORD *)(v134 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v135 + 48))(v133, 1, v134) == 1)
  {
    v136 = sub_10004FF60(v133, (uint64_t *)&unk_1011A20D0);
    v137 = 0;
    v138 = 0;
    v139 = 0;
    v140 = 0;
    v141 = 0;
    v142 = 0;
    v143 = 0;
    v144 = 0;
    v145 = 0;
    v146 = 0;
LABEL_20:
    v317 = v141;
    v318 = v142;
    v319 = v143;
    v320 = v144;
    v321 = v145;
    v322 = v146;
    v323 = &v266;
    v194 = v137;
    *(_QWORD *)&v350 = v137;
    *((_QWORD *)&v350 + 1) = v138;
    *(_QWORD *)&v351 = v139;
    *((_QWORD *)&v351 + 1) = v140;
    v290 = v140;
    *(_QWORD *)&v352 = v141;
    *((_QWORD *)&v352 + 1) = v142;
    v353 = v143;
    *(_QWORD *)&v354 = v144;
    *((_QWORD *)&v354 + 1) = v145;
    v355 = v146;
    __chkstk_darwin(v136);
    v195 = v111;
    v196 = (_QWORD *)type metadata accessor for ContextualPreview(0);
    v288 = (uint64_t)v196;
    v197 = sub_100044B54(&qword_1011CA4C0);
    v198 = sub_1007F38B8();
    v334 = v197;
    v335 = (ValueMetadata *)v198;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v334, &opaque type descriptor for <<opaque return type of View.materialContentMode(_:)>>, 1);
    v289 = OpaqueTypeConformance2;
    v200 = sub_1000E3EE4();
    v201 = (_QWORD *)sub_100048748(&qword_1011A0578, type metadata accessor for ContextualPreview, (uint64_t)"mu ");
    v262 = v196;
    v263 = OpaqueTypeConformance2;
    v202 = v293;
    v203 = v294;
    v204 = v326;
    View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)(0, 0, (uint64_t)&v350, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)sub_1007F38B0, (uint64_t)&v262, (uint64_t)UIScreen.Dimensions.size.getter, 0, v294, v293, (uint64_t)&type metadata for ActionType, v262, v263, v200, v201);
    sub_1000E4164(v194, v138, v139, v290, v317, v318, v319, v320, v321, v322);
    (*(void (**)(char *, uint64_t))(v292 + 8))(v204, v202);
    v205 = v195 + v327[8];
    v206 = *(_QWORD *)v205;
    v207 = *(_QWORD *)(v205 + 8);
    v208 = *(unsigned __int8 *)(v205 + 16);
    v209 = sub_100007E8C(&qword_1011A03A8);
    v210 = sub_100049F28(&qword_1011A0548, &qword_1011A03A8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
    v211 = StateObject.wrappedValue.getter(v206, v207, v208, v209, v210);
    v334 = v202;
    v335 = &type metadata for ActionType;
    v336 = v288;
    v337 = v289;
    v338 = (_UNKNOWN **)v200;
    v339 = v201;
    v212 = swift_getOpaqueTypeConformance2(&v334, &opaque type descriptor for <<opaque return type of View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)>>, 1);
    v214 = v296;
    v213 = v297;
    View.shareSheetPresenting(_:)(v211, v297, v212);
    v215 = swift_release();
    (*(void (**)(uint64_t, uint64_t, __n128))(v295 + 8))(v203, v213, v215);
    v216 = Corner.featured.unsafeMutableAddressor();
    v217 = *(_QWORD *)v216;
    v218 = *((_QWORD *)v216 + 1);
    LOBYTE(v203) = *((_BYTE *)v216 + 16);
    v334 = v213;
    v335 = (ValueMetadata *)v212;
    v219 = swift_getOpaqueTypeConformance2(&v334, &opaque type descriptor for <<opaque return type of View.shareSheetPresenting(_:)>>, 1);
    v220 = v302;
    v221 = v203;
    v222 = v300;
    View.corner(_:)(v217, v218, v221, v300, v219);
    (*(void (**)(char *, uint64_t))(v298 + 8))(v214, v222);
    v223 = *(_QWORD *)v216;
    v224 = *((_QWORD *)v216 + 1);
    LOBYTE(v216) = *((_BYTE *)v216 + 16);
    v334 = v222;
    v335 = (ValueMetadata *)v219;
    v225 = swift_getOpaqueTypeConformance2(&v334, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
    v226 = v301;
    v227 = v216;
    v228 = v308;
    View.hover(corner:outset:isRelative:namespace:isEnabled:)(v223, v224, v227, 0, 0, 1, 1, v308, 0.0, v225);
    (*(void (**)(char *, uint64_t))(v305 + 8))(v220, v228);
    v229 = v307;
    sub_10030ED58(v328 + *(int *)(v324 + 44), v307);
    v230 = (*(uint64_t (**)(char *, uint64_t))(v303 + 8))(v226, v306);
    v231 = v313;
    static AccessibilityChildBehavior.combine.getter(v230);
    v232 = sub_1007F3964();
    v233 = v299;
    View.accessibilityElement(children:)(v231, v304, v232);
    (*(void (**)(char *, uint64_t))(v314 + 8))(v231, v315);
    sub_10004FF60(v229, &qword_1011AC720);
    v235 = v309;
    v234 = v310;
    v236 = v233;
    v237 = v312;
    (*(void (**)(char *, char *, uint64_t))(v310 + 32))(v309, v236, v312);
    v238 = v325;
    v239 = v291;
    sub_10004A160(v325, v291, &qword_1011CA4B8);
    v240 = *(void (**)(char *, char *, uint64_t))(v234 + 16);
    v241 = v311;
    v240(v311, v235, v237);
    v242 = v316;
    sub_10004A160(v239, v316, &qword_1011CA4B8);
    v243 = sub_100007E8C(&qword_1011CA4E8);
    v240((char *)(v242 + *(int *)(v243 + 48)), v241, v237);
    v244 = *(void (**)(char *, uint64_t))(v234 + 8);
    v244(v235, v237);
    sub_10004FF60(v238, &qword_1011CA4B8);
    v244(v241, v237);
    return sub_10004FF60(v239, &qword_1011CA4B8);
  }
  v147 = (char *)Optional<A>.playbackIntent.getter();
  v148 = *(id *)v266;
  v149 = *(_BYTE *)(v266 + 8);
  sub_1000A4100(*(id *)v266, v149);
  v286 = sub_100824044(v148, v149);
  sub_1000A4224(v148, v149);
  v150 = type metadata accessor for PlaylistContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v150 - 8) + 56))(v290, 1, 1, v150);
  v151 = (uint64_t)v267;
  v152 = *v267;
  v153 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v154 = v153;
  if (!v152)
    goto LABEL_25;
  v338 = &protocol witness table for <A> PresentedViewState<A>;
  v337 = v153;
  v334 = v152;
  v155 = (uint64_t *)(v111 + v131[7]);
  v156 = *v155;
  if (!*v155)
  {
    v254 = v155[1];
    v255 = type metadata accessor for NoticePresenter(0);
    v256 = sub_100048748((unint64_t *)&unk_1011C72F0, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
    swift_retain();
    EnvironmentObject.error()(0, v254, v255, v256);
    __break(1u);
    goto LABEL_27;
  }
  v157 = type metadata accessor for NoticePresenter(0);
  v333[4] = &protocol witness table for NoticePresenter;
  v333[3] = v157;
  v333[0] = v156;
  v353 = 0;
  v351 = 0u;
  v352 = 0u;
  v350 = 0u;
  v354 = v272;
  v158 = v111 + v131[8];
  v159 = *(_QWORD *)v158;
  v160 = *(_QWORD *)(v158 + 8);
  v161 = *(unsigned __int8 *)(v158 + 16);
  swift_retain();
  swift_retain();
  v162 = sub_100007E8C(&qword_1011A03A8);
  v163 = sub_100049F28(&qword_1011A0548, &qword_1011A03A8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  v164 = StateObject.wrappedValue.getter(v159, v160, v161, v162, v163);
  v332[4] = &protocol witness table for <A> PresentedViewState<A>;
  v332[3] = v162;
  v332[0] = v164;
  v165 = (uint64_t *)(v328 + v131[9]);
  v166 = *v165;
  if (!*v165)
  {
LABEL_27:
    v252 = v165[1];
    v154 = type metadata accessor for NavigationPusher();
    v253 = sub_100048748(&qword_10119F060, (uint64_t (*)(uint64_t))type metadata accessor for NavigationPusher, (uint64_t)&unk_100EC8D64);
    goto LABEL_28;
  }
  v167 = type metadata accessor for NavigationPusher();
  v331[4] = &off_1010D58B0;
  v331[3] = v167;
  v331[0] = v166;
  v330 = 0;
  memset(v329, 0, sizeof(v329));
  v168 = v273;
  if (!*v273)
  {
LABEL_29:
    v246 = v168[1];
    swift_retain();
    goto LABEL_30;
  }
  v287 = v147;
  v288 = v135;
  v169 = v271;
  if (*v271)
  {
    __chkstk_darwin(v167);
    v170 = v269;
    v171 = swift_getKeyPath(&unk_100ED12F0);
    __chkstk_darwin(v171);
    v264 = &type metadata for TabIdentifier;
    v265 = v170;
    v172 = swift_getKeyPath(&unk_100ED1328);
    swift_retain();
    swift_retain();
    swift_retain();
    static Published.subscript.getter(&v340, v173, v171, v172);
    swift_release();
    swift_release();
    swift_release();
    v174 = v340;
    v175 = *(_QWORD *)v268;
    v176 = *(_QWORD *)(v268 + 8);
    LOBYTE(v172) = *(_BYTE *)(v268 + 16);
    sub_1000A410C(*(_QWORD *)v268, v176, v172);
    sub_100824224(v175, v176, v172);
    sub_1000A4230(v175, v176, v172);
    sub_10066D160(v174);
    v178 = v177;
    v180 = v179;
    swift_release();
    swift_bridgeObjectRelease();
    v181 = *(_QWORD *)v270;
    v182 = *(_QWORD *)(v270 + 8);
    LOBYTE(v176) = *(_BYTE *)(v270 + 16);
    sub_1000A411C(*(_QWORD *)v270, v182, v176);
    sub_100824400(v181, v182, v176, &v340);
    sub_1000A4240(v181, v182, v176);
    v183 = v340;
    v184 = v341;
    v185 = v274;
    sub_10005B704(v328, v274, type metadata accessor for LiveRadioView);
    v289 = v134;
    if (v184 >> 60 != 15)
    {
LABEL_19:
      sub_10005B748(v185, type metadata accessor for LiveRadioView);
      v188 = type metadata accessor for MusicLibrary(0);
      v189 = static MusicLibrary.shared.getter(v188);
      v262 = v178;
      v191 = v286;
      v190 = v287;
      v192 = v290;
      GenericMusicItem.actionMenu(playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:)(v287, v286, v189, v290, (uint64_t)&v334, (unint64_t)v333, (unint64_t)&v350, (unint64_t)v332, &v340, (uint64_t)v331, (unint64_t)v329, (uint64_t)v262, v180, v183, v184);
      v284 = v341;
      v285 = v340;
      v193 = v342;
      v140 = v343;
      v317 = v344;
      v318 = v345;
      v319 = v346;
      v320 = v347;
      v321 = v348;
      v322 = v349;
      swift_release();
      sub_1000822B4(v183, v184);

      swift_bridgeObjectRelease();
      v138 = v284;
      v137 = v285;
      v139 = v193;
      sub_10004FF60((uint64_t)v329, &qword_1011A0558);
      sub_10004FF60((uint64_t)&v350, (uint64_t *)&unk_1011A20F0);
      sub_10004FF60(v192, (uint64_t *)&unk_1011A20C0);
      sub_10004FF60((uint64_t)v331, &qword_1011A0560);
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(v332);
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(v333);
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v334);
      v136 = (*(uint64_t (**)(uint64_t *, uint64_t))(v288 + 8))(v323, v289);
      v145 = v321;
      v146 = v322;
      v143 = v319;
      v144 = v320;
      v141 = v317;
      v142 = v318;
      v111 = v328;
      goto LABEL_20;
    }
    v186 = (uint64_t *)(v185 + v327[10]);
    if (*v186)
    {
      swift_retain();
      v183 = sub_10066D7A8();
      v184 = v187;
      swift_release();
      goto LABEL_19;
    }
    goto LABEL_22;
  }
LABEL_32:
  v258 = v169[1];
  v259 = type metadata accessor for TabSelectionManager(0);
  v260 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
  swift_retain();
  swift_retain();
  result = EnvironmentObject.error()(0, v258, v259, v260);
  __break(1u);
  return result;
}

uint64_t sub_1007EBF94(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;

  v3 = v2;
  v6 = sub_100007E8C(&qword_1011CA4C0);
  __chkstk_darwin(v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for LiveRadio(0);
  v10 = (uint64_t)&v8[*(int *)(v6 + 36)];
  sub_10004A160(a1 + *(int *)(v9 + 40), v10, &qword_1011AA8D0);
  v11 = a1 + *(int *)(v9 + 36);
  v12 = (int *)sub_100007E8C(&qword_1011CA4D8);
  sub_10004A160(v11, v10 + v12[9], (uint64_t *)&unk_1011A3E10);
  v13 = v10 + v12[10];
  v14 = type metadata accessor for LiveRadioView.ChinContent(0);
  sub_10005B704(a1, v13 + *(int *)(v14 + 20), type metadata accessor for LiveRadio);
  if (qword_10119C840 != -1)
    swift_once(&qword_10119C840, sub_1007EDE4C);
  *(_QWORD *)&v24 = qword_1011CA2E8;
  v15 = sub_1000E4360();
  ScaledMetric.init(wrappedValue:)(&v24, &type metadata for CGFloat, v15);
  v16 = v12[12];
  v23 = 0;
  v17 = sub_100007E8C(&qword_10119E588);
  State.init(wrappedValue:)(&v23, v17);
  *(_OWORD *)(v10 + v16) = v24;
  v18 = v12[13];
  v23 = 0;
  State.init(wrappedValue:)(&v23, v17);
  *(_OWORD *)(v10 + v18) = v24;
  *(double *)(v10 + v12[11]) = a2;
  v19 = sub_100007E8C(&qword_1011CA480);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v8, v3, v19);
  v20 = sub_1007F38B8();
  View.materialContentMode(_:)(1, v6, v20);
  return sub_10004FF60((uint64_t)v8, &qword_1011CA4C0);
}

uint64_t sub_1007EC1A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v4 = type metadata accessor for ContextualPreview.Data(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for LiveRadio(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704(a1, (uint64_t)v9, type metadata accessor for LiveRadio);
  sub_1007EA1D8((uint64_t)v6);
  sub_10005B748((uint64_t)v9, type metadata accessor for LiveRadio);
  return sub_10005B6C0((uint64_t)v6, a2, type metadata accessor for ContextualPreview.Data);
}

uint64_t sub_1007EC288@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  char *v29;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;

  v39 = a2;
  v37 = type metadata accessor for LiveRadioView.AccessoryButton(0);
  __chkstk_darwin(v37);
  v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v38 = (uint64_t)&v34 - v6;
  v7 = type metadata accessor for AccessibilityChildBehavior(0);
  v35 = *(_QWORD *)(v7 - 8);
  v36 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011CA678);
  __chkstk_darwin(v10);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011CA680);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v34 - v18;
  *(_QWORD *)v12 = static HorizontalAlignment.leading.getter(v20);
  *((_QWORD *)v12 + 1) = 0;
  v12[16] = 1;
  v21 = sub_100007E8C(&qword_1011CA688);
  v22 = sub_1007EC59C(a1, (uint64_t)&v12[*(int *)(v21 + 44)]);
  static AccessibilityChildBehavior.combine.getter(v22);
  v23 = sub_100049F28(&qword_1011CA690, &qword_1011CA678, (uint64_t)&protocol conformance descriptor for VStack<A>);
  View.accessibilityElement(children:)(v9, v10, v23);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v9, v36);
  sub_10004FF60((uint64_t)v12, &qword_1011CA678);
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v16, v13);
  sub_10005B704(a1, (uint64_t)v4, type metadata accessor for LiveRadio);
  v24 = a1 + *(int *)(type metadata accessor for LiveRadioView.HeaderView(0) + 20);
  v25 = v37;
  sub_10005B704(v24, (uint64_t)&v4[*(int *)(v37 + 20)], _s18PerformanceConteXtVMa);
  v26 = &v4[*(int *)(v25 + 24)];
  *(_QWORD *)v26 = swift_getKeyPath(&unk_100ED11C8);
  v26[8] = 0;
  v27 = v38;
  sub_10005B6C0((uint64_t)v4, v38, type metadata accessor for LiveRadioView.AccessoryButton);
  v28 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  v28(v16, v19, v13);
  sub_10005B704(v27, (uint64_t)v4, type metadata accessor for LiveRadioView.AccessoryButton);
  v29 = v39;
  v28(v39, v16, v13);
  v30 = sub_100007E8C(&qword_1011CA698);
  v31 = &v29[*(int *)(v30 + 48)];
  *(_QWORD *)v31 = 0;
  v31[8] = 1;
  sub_10005B704((uint64_t)v4, (uint64_t)&v29[*(int *)(v30 + 64)], type metadata accessor for LiveRadioView.AccessoryButton);
  sub_10005B748(v27, type metadata accessor for LiveRadioView.AccessoryButton);
  v32 = *(void (**)(char *, uint64_t))(v14 + 8);
  v32(v19, v13);
  sub_10005B748((uint64_t)v4, type metadata accessor for LiveRadioView.AccessoryButton);
  return ((uint64_t (*)(char *, uint64_t))v32)(v16, v13);
}

uint64_t sub_1007EC59C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t *v20;
  uint64_t v21;
  unint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  Swift::Int v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char v54;

  v51 = a2;
  v3 = sub_100007E8C(&qword_1011CA6A0);
  __chkstk_darwin(v3);
  v52 = (uint64_t)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v51 - v6;
  __chkstk_darwin(v8);
  v10 = (char *)&v51 - v9;
  v11 = sub_100007E8C(&qword_1011B2920);
  __chkstk_darwin(v11);
  v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v51 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v51 - v18;
  v20 = (uint64_t *)(a1 + *(int *)(type metadata accessor for LiveRadio(0) + 20));
  v21 = *v20;
  v22 = v20[1];
  v23 = sub_1004872C4((uint64_t)&off_1010AD6D0);
  swift_bridgeObjectRetain();
  v24 = Text.init(optional:options:)(v21, v22, v23);
  if (v27)
  {
    v28 = v24;
    v29 = v25;
    v30 = v26 & 1;
    v53 = v26 & 1;
    Text.with(style:)(3, v24, v25, v26 & 1, v27, (uint64_t)v16);
    sub_100055BAC(v28, v29, v30);
    swift_bridgeObjectRelease();
    v31 = sub_100007E8C(&qword_10119EBA0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v16, 0, 1, v31);
  }
  else
  {
    v32 = sub_100007E8C(&qword_10119EBA0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v16, 1, 1, v32);
  }
  sub_100065228((uint64_t)v16, (uint64_t)v19, &qword_1011B2920);
  v33 = v20[2];
  v34 = v20[3];
  v35 = sub_1004872C4((uint64_t)&off_1010AD6F8);
  swift_bridgeObjectRetain();
  v36 = Text.init(optional:options:)(v33, v34, v35);
  if (v39)
  {
    v40 = v36;
    v41 = v37;
    v42 = v38 & 1;
    v43 = sub_100007E8C(&qword_1011A5388);
    v44 = sub_1001C9648();
    v54 = v42;
    Text.with<A>(style:configurator:)(4, (void (*)(void))sub_1007EC948, v43, (uint64_t)v7, v44);
    sub_100055BAC(v40, v41, v42);
    swift_bridgeObjectRelease();
    v45 = sub_100007E8C(&qword_1011CA6A8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v7, 0, 1, v45);
  }
  else
  {
    v46 = sub_100007E8C(&qword_1011CA6A8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v7, 1, 1, v46);
  }
  sub_100065228((uint64_t)v7, (uint64_t)v10, &qword_1011CA6A0);
  sub_10004A160((uint64_t)v19, (uint64_t)v13, &qword_1011B2920);
  v47 = v52;
  sub_10004A160((uint64_t)v10, v52, &qword_1011CA6A0);
  v48 = v51;
  sub_10004A160((uint64_t)v13, v51, &qword_1011B2920);
  v49 = sub_100007E8C(&qword_1011CA6B0);
  sub_10004A160(v47, v48 + *(int *)(v49 + 48), &qword_1011CA6A0);
  sub_10004FF60((uint64_t)v10, &qword_1011CA6A0);
  sub_10004FF60((uint64_t)v19, &qword_1011B2920);
  sub_10004FF60(v47, &qword_1011CA6A0);
  return sub_10004FF60((uint64_t)v13, &qword_1011B2920);
}

uint64_t sub_1007EC948@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t KeyPath;

  KeyPath = swift_getKeyPath(&unk_100ED1498);
  *(_QWORD *)a5 = a1;
  *(_QWORD *)(a5 + 8) = a2;
  *(_BYTE *)(a5 + 16) = a3 & 1;
  *(_QWORD *)(a5 + 24) = a4;
  *(_QWORD *)(a5 + 32) = KeyPath;
  *(_QWORD *)(a5 + 40) = 1;
  *(_BYTE *)(a5 + 48) = 0;
  sub_100055BBC(a1, a2, a3 & 1);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1007EC9BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  *(_QWORD *)a2 = static VerticalAlignment.center.getter(a1);
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  v4 = sub_100007E8C(&qword_1011CA670);
  return sub_1007EC288(v2, (char *)(a2 + *(int *)(v4 + 44)));
}

uint64_t sub_1007ECA04@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  char *v37;
  unint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t KeyPath;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83[3];

  v2 = v1;
  v81 = a1;
  v3 = type metadata accessor for ControlSize(0);
  v79 = *(_QWORD *)(v3 - 8);
  v80 = v3;
  __chkstk_darwin(v3);
  v78 = (char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ButtonBorderShape(0);
  v75 = *(_QWORD *)(v5 - 8);
  v76 = v5;
  __chkstk_darwin(v5);
  v72 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011CA790);
  v73 = *(_QWORD *)(v7 - 8);
  v74 = v7;
  __chkstk_darwin(v7);
  v70 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_100007E8C(&qword_1011CA798);
  __chkstk_darwin(v71);
  v10 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = type metadata accessor for BorderedButtonStyle(0);
  v77 = *(_QWORD *)(v68 - 8);
  __chkstk_darwin(v68);
  v82 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LiveRadioView.AccessoryButton(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  __chkstk_darwin(v12);
  v15 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C(&qword_1011CA7A0);
  v66 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v18 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = sub_100007E8C(&qword_1011CA7A8);
  __chkstk_darwin(v67);
  v20 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = sub_100007E8C(&qword_1011CA7B0);
  __chkstk_darwin(v69);
  v22 = (char *)&v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704(v2, (uint64_t)v15, type metadata accessor for LiveRadioView.AccessoryButton);
  v23 = *(unsigned __int8 *)(v13 + 80);
  v24 = (v23 + 16) & ~v23;
  v25 = swift_allocObject(&unk_1010DD5B0, v24 + v14, v23 | 7);
  sub_10005B6C0((uint64_t)v15, v25 + v24, type metadata accessor for LiveRadioView.AccessoryButton);
  Button.init(action:label:)(sub_1007FDB68, v25, sub_1007ED10C, 0, &type metadata for Image, &protocol witness table for Image);
  v26 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000010, 0x8000000100E46050);
  v27 = Text.init(_:tableName:bundle:comment:)(v26);
  v29 = v28;
  v31 = v30;
  v33 = v32 & 1;
  v34 = sub_100049F28(&qword_1011CA7B8, &qword_1011CA7A0, (uint64_t)&protocol conformance descriptor for Button<A>);
  v65 = v20;
  View.accessibility(label:)(v27, v29, v33, v31, v16, v34);
  sub_100055BAC(v27, v29, v33);
  v35 = swift_bridgeObjectRelease();
  v36 = (*(uint64_t (**)(char *, uint64_t, __n128))(v66 + 8))(v18, v16, v35);
  v37 = v82;
  BorderedButtonStyle.init()(v36);
  v38 = sub_1007FDB94();
  v39 = sub_100048748((unint64_t *)&qword_1011A0D08, (uint64_t (*)(uint64_t))&type metadata accessor for BorderedButtonStyle, (uint64_t)&protocol conformance descriptor for BorderedButtonStyle);
  v40 = v70;
  v41 = v68;
  v42 = View.buttonStyle<A>(_:)(v37, v67, v68, v38, v39);
  v43 = v72;
  static ButtonBorderShape.circle.getter(v42);
  KeyPath = swift_getKeyPath(&unk_100ED1528);
  v45 = (uint64_t *)&v10[*(int *)(v71 + 36)];
  v46 = sub_100007E8C(&qword_1011A0610);
  v48 = v75;
  v47 = v76;
  (*(void (**)(char *, char *, uint64_t))(v75 + 16))((char *)v45 + *(int *)(v46 + 28), v43, v76);
  *v45 = KeyPath;
  v50 = v73;
  v49 = v74;
  (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v10, v40, v74);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v43, v47);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v40, v49);
  v52 = v78;
  v51 = v79;
  v53 = v80;
  (*(void (**)(char *, _QWORD, uint64_t))(v79 + 104))(v78, enum case for ControlSize.regular(_:), v80);
  v54 = swift_getKeyPath(&unk_100ED1558);
  v55 = (uint64_t *)&v22[*(int *)(v69 + 36)];
  v56 = sub_100007E8C(&qword_1011A0618);
  (*(void (**)(char *, char *, uint64_t))(v51 + 16))((char *)v55 + *(int *)(v56 + 28), v52, v53);
  *v55 = v54;
  sub_10004A160((uint64_t)v10, (uint64_t)v22, &qword_1011CA798);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v53);
  sub_10004FF60((uint64_t)v10, &qword_1011CA798);
  (*(void (**)(char *, uint64_t))(v77 + 8))(v82, v41);
  sub_10004FF60((uint64_t)v65, &qword_1011CA7A8);
  v57 = swift_getKeyPath(&unk_100ED1588);
  v83[0] = 1;
  v58 = sub_100007E8C(&qword_1011B5FB0);
  v59 = sub_100049F28(&qword_1011B5FB8, &qword_1011B5FB0, (uint64_t)&protocol conformance descriptor for HierarchicalShapeStyleModifier<A>);
  v60 = AnyShapeStyle.init<A>(_:)(v83, v58, v59);
  v61 = v81;
  sub_10004A160((uint64_t)v22, v81, &qword_1011CA7B0);
  v62 = (uint64_t *)(v61 + *(int *)(sub_100007E8C(&qword_1011CA7C8) + 36));
  *v62 = v57;
  v62[1] = v60;
  return sub_10004FF60((uint64_t)v22, &qword_1011CA7B0);
}

uint64_t sub_1007ECFEC(uint64_t a1)
{
  void *v2;
  void **v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  char v8;
  id v9;
  void *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD v14[4];

  v2 = (void *)*JSSegueCoordinator.shared.unsafeMutableAddressor();
  v3 = (void **)(a1 + *(int *)(type metadata accessor for LiveRadio(0) + 48));
  v4 = *v3;
  LOBYTE(v3) = *((_BYTE *)v3 + *(int *)(type metadata accessor for SegueContext(0) + 24));
  v5 = type metadata accessor for LiveRadioView.AccessoryButton(0);
  v6 = a1 + *(int *)(v5 + 24);
  v7 = *(void **)v6;
  v8 = *(_BYTE *)(v6 + 8);
  v9 = v2;
  sub_1000A4100(v7, v8);
  v10 = (void *)sub_1008252B4(v7, v8);
  sub_1000A4224(v7, v8);
  v11 = a1 + *(int *)(v5 + 20);
  v14[3] = _s18PerformanceConteXtVMa(0);
  v12 = sub_100049F68(v14);
  sub_10005B704(v11, (uint64_t)v12, _s18PerformanceConteXtVMa);
  JSSegueCoordinator.initiateSegue(source:type:snapshotImpressions:pageDetailsProvider:performanceContext:)(v4, (char)v3, (uint64_t)_swiftEmptyArrayStorage, v10, (uint64_t)v14);

  return sub_10004FF60((uint64_t)v14, &qword_10119DCC0);
}

uint64_t sub_1007ED10C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = Image.init(systemName:)(0x7261646E656C6163, 0xE800000000000000);
  *a1 = result;
  return result;
}

uint64_t sub_1007ED148@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t *v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _OWORD *v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  char v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _OWORD v66[7];

  v2 = v1;
  v65 = a1;
  v3 = sub_100007E8C(&qword_1011CA610);
  __chkstk_darwin(v3);
  v5 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011CA618);
  __chkstk_darwin(v6);
  v8 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011CA620);
  __chkstk_darwin(v9);
  v11 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_100007E8C(&qword_1011CA628);
  __chkstk_darwin(v63);
  v13 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_100007E8C(&qword_1011CA630);
  __chkstk_darwin(v64);
  v15 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v5 = static HorizontalAlignment.leading.getter(v16);
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 1;
  v17 = sub_100007E8C(&qword_1011CA638);
  v18 = sub_1007ED584(v2, (uint64_t)&v5[*(int *)(v17 + 44)]);
  v19 = static Color.white.getter(v18);
  KeyPath = swift_getKeyPath(&unk_100ED1408);
  sub_10004A160((uint64_t)v5, (uint64_t)v8, &qword_1011CA610);
  v21 = (uint64_t *)&v8[*(int *)(v6 + 36)];
  *v21 = KeyPath;
  v21[1] = v19;
  v22 = sub_10004FF60((uint64_t)v5, &qword_1011CA610);
  LOBYTE(v19) = static Edge.Set.top.getter(v22);
  v23 = EdgeInsets.init(_all:)(12.0);
  v25 = v24;
  v27 = v26;
  v29 = v28;
  sub_10004A160((uint64_t)v8, (uint64_t)v11, &qword_1011CA618);
  v30 = &v11[*(int *)(v9 + 36)];
  *v30 = v19;
  *((double *)v30 + 1) = v23;
  *((_QWORD *)v30 + 2) = v25;
  *((_QWORD *)v30 + 3) = v27;
  *((_QWORD *)v30 + 4) = v29;
  v30[40] = 0;
  v31 = sub_10004FF60((uint64_t)v8, &qword_1011CA618);
  LOBYTE(v19) = static Edge.Set.bottom.getter(v31);
  v32 = EdgeInsets.init(_all:)(16.0);
  v34 = v33;
  v36 = v35;
  v38 = v37;
  sub_10004A160((uint64_t)v11, (uint64_t)v13, &qword_1011CA620);
  v39 = &v13[*(int *)(v63 + 36)];
  *v39 = v19;
  *((double *)v39 + 1) = v32;
  *((_QWORD *)v39 + 2) = v34;
  *((_QWORD *)v39 + 3) = v36;
  *((_QWORD *)v39 + 4) = v38;
  v39[40] = 0;
  v40 = sub_10004FF60((uint64_t)v11, &qword_1011CA620);
  LOBYTE(v19) = static Edge.Set.horizontal.getter(v40);
  v41 = EdgeInsets.init(_all:)(16.0);
  v43 = v42;
  v45 = v44;
  v47 = v46;
  sub_10004A160((uint64_t)v13, (uint64_t)v15, &qword_1011CA628);
  v48 = &v15[*(int *)(v64 + 36)];
  *v48 = v19;
  *((double *)v48 + 1) = v41;
  *((_QWORD *)v48 + 2) = v43;
  *((_QWORD *)v48 + 3) = v45;
  *((_QWORD *)v48 + 4) = v47;
  v48[40] = 0;
  sub_10004FF60((uint64_t)v13, &qword_1011CA628);
  v49 = sub_100007E8C(qword_1011C9550);
  v50 = ScaledMetric.wrappedValue.getter(v66, v49);
  v51 = *(_QWORD *)&v66[0];
  v52 = static Alignment.leading.getter(v50);
  v61 = 1;
  v60 = 1;
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v66, 0, 1, 0, 1, 0x7FF0000000000000, 0, v51, 0, 0, v60, 0, v61, v52, v53);
  v54 = v65;
  sub_10004A160((uint64_t)v15, v65, &qword_1011CA630);
  v55 = (_OWORD *)(v54 + *(int *)(sub_100007E8C(&qword_1011CA640) + 36));
  v56 = v66[5];
  v55[4] = v66[4];
  v55[5] = v56;
  v55[6] = v66[6];
  v57 = v66[1];
  *v55 = v66[0];
  v55[1] = v57;
  v58 = v66[3];
  v55[2] = v66[2];
  v55[3] = v58;
  return sub_10004FF60((uint64_t)v15, &qword_1011CA630);
}

uint64_t sub_1007ED584@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  Swift::Int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t KeyPath;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  unint64_t v53;
  Swift::Int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __n128 v62;
  uint64_t v63;
  uint64_t v64;
  double v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  unint64_t v73;
  Swift::Int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  void (*v95)(char *, char *, uint64_t);
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;

  v104 = a2;
  v103 = sub_100007E8C(&qword_1011CA648);
  __chkstk_darwin(v103);
  v106 = (char *)&v91 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v107 = (uint64_t)&v91 - v5;
  v6 = sub_100007E8C((uint64_t *)&unk_1011A4380);
  __chkstk_darwin(v6);
  v101 = (char *)&v91 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = sub_100007E8C(&qword_1011A0F48);
  v94 = *(_QWORD *)(v105 - 8);
  __chkstk_darwin(v105);
  v9 = (char *)&v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = sub_100007E8C(&qword_1011CA650);
  __chkstk_darwin(v92);
  v91 = (char *)&v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = sub_100007E8C(&qword_1011CA658);
  __chkstk_darwin(v96);
  v93 = (char *)&v91 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = sub_100007E8C(&qword_1011CA660);
  __chkstk_darwin(v102);
  v108 = (uint64_t)&v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v109 = (uint64_t)&v91 - v14;
  v15 = a1 + *(int *)(type metadata accessor for LiveRadioView.ChinContent(0) + 20);
  v100 = v15;
  v99 = type metadata accessor for LiveRadio(0);
  v16 = (uint64_t *)(v15 + *(int *)(v99 + 24));
  v17 = *v16;
  v18 = v16[1];
  v19 = sub_1004872C4((uint64_t)&off_1010AD720);
  swift_bridgeObjectRetain();
  v20 = Text.init(optional:options:)(v17, v18, v19);
  v22 = v21;
  v24 = v23;
  v26 = v25;
  v27 = static Font.footnote.getter(v20);
  KeyPath = swift_getKeyPath(&unk_100ED1438);
  v110 = v20;
  v111 = v22;
  v112 = v24;
  v113 = v26;
  v114 = KeyPath;
  v115 = v27;
  v29 = static Font.Weight.semibold.getter(KeyPath);
  v30 = sub_100007E8C((uint64_t *)&unk_1011B57E0);
  v98 = v30;
  v97 = sub_1000F59AC();
  View.fontWeight(_:)(*(_QWORD *)&v29, 0, v30, v97);
  sub_1000E450C(v20, v22, v24, v26);
  swift_release();
  swift_release();
  v32 = static Color.secondary.getter(v31);
  v33 = swift_getKeyPath(&unk_100ED1408);
  v34 = v94;
  v95 = *(void (**)(char *, char *, uint64_t))(v94 + 16);
  v35 = (uint64_t)v91;
  v36 = v105;
  v95(v91, v9, v105);
  v37 = (uint64_t *)(v35 + *(int *)(v92 + 36));
  *v37 = v33;
  v37[1] = v32;
  v94 = *(_QWORD *)(v34 + 8);
  ((void (*)(char *, uint64_t))v94)(v9, v36);
  v38 = enum case for Text.Case.uppercase(_:);
  v39 = type metadata accessor for Text.Case(0);
  v40 = *(_QWORD *)(v39 - 8);
  v41 = (uint64_t)v101;
  (*(void (**)(char *, uint64_t, uint64_t))(v40 + 104))(v101, v38, v39);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v40 + 56))(v41, 0, 1, v39);
  v42 = swift_getKeyPath(&unk_100ED1468);
  v43 = (uint64_t)v93;
  v44 = (uint64_t *)&v93[*(int *)(v96 + 36)];
  v45 = sub_100007E8C((uint64_t *)&unk_1011C4EE0);
  sub_10004A160(v41, (uint64_t)v44 + *(int *)(v45 + 28), (uint64_t *)&unk_1011A4380);
  *v44 = v42;
  sub_10004A160(v35, v43, &qword_1011CA650);
  sub_10004FF60(v41, (uint64_t *)&unk_1011A4380);
  sub_10004FF60(v35, &qword_1011CA650);
  v46 = swift_getKeyPath(&unk_100ED1498);
  v47 = v108;
  sub_10004A160(v43, v108, &qword_1011CA658);
  v48 = v47 + *(int *)(v102 + 36);
  *(_QWORD *)v48 = v46;
  *(_QWORD *)(v48 + 8) = 1;
  *(_BYTE *)(v48 + 16) = 0;
  sub_10004FF60(v43, &qword_1011CA658);
  sub_100065228(v47, v109, &qword_1011CA660);
  v50 = v99;
  v49 = v100;
  v51 = (uint64_t *)(v100 + *(int *)(v99 + 28));
  v52 = *v51;
  v53 = v51[1];
  v54 = sub_1004872C4((uint64_t)&off_1010AD748);
  swift_bridgeObjectRetain();
  v55 = Text.init(optional:options:)(v52, v53, v54);
  v57 = v56;
  v59 = v58;
  v61 = v60;
  v63 = static Font.headline.getter(v62);
  v64 = swift_getKeyPath(&unk_100ED1438);
  v110 = v55;
  v111 = v57;
  v112 = v59;
  v113 = v61;
  v114 = v64;
  v115 = v63;
  v65 = static Font.Weight.semibold.getter(v64);
  View.fontWeight(_:)(*(_QWORD *)&v65, 0, v98, v97);
  sub_1000E450C(v55, v57, v59, v61);
  swift_release();
  swift_release();
  v66 = swift_getKeyPath(&unk_100ED1498);
  v67 = v105;
  v68 = (uint64_t)v106;
  v95(v106, v9, v105);
  v69 = v68 + *(int *)(v103 + 36);
  *(_QWORD *)v69 = v66;
  *(_QWORD *)(v69 + 8) = 1;
  *(_BYTE *)(v69 + 16) = 0;
  ((void (*)(char *, uint64_t))v94)(v9, v67);
  v70 = v107;
  sub_100065228(v68, v107, &qword_1011CA648);
  v71 = (uint64_t *)(v49 + *(int *)(v50 + 32));
  v72 = *v71;
  v73 = v71[1];
  v74 = sub_1004872C4((uint64_t)&off_1010AD770);
  swift_bridgeObjectRetain();
  v75 = Text.init(optional:options:)(v72, v73, v74);
  v77 = v76;
  v79 = v78;
  v81 = v80;
  v105 = static Font.subheadline.getter(v75);
  v103 = swift_getKeyPath(&unk_100ED1438);
  v82 = swift_getKeyPath(&unk_100ED1498);
  v83 = v108;
  sub_10004A160(v109, v108, &qword_1011CA660);
  v84 = (uint64_t)v106;
  sub_10004A160(v70, (uint64_t)v106, &qword_1011CA648);
  v85 = v104;
  sub_10004A160(v83, v104, &qword_1011CA660);
  v86 = sub_100007E8C(&qword_1011CA668);
  v87 = v84;
  sub_10004A160(v84, v85 + *(int *)(v86 + 48), &qword_1011CA648);
  v88 = v85 + *(int *)(v86 + 64);
  *(_QWORD *)v88 = v75;
  *(_QWORD *)(v88 + 8) = v77;
  *(_QWORD *)(v88 + 16) = v79;
  *(_QWORD *)(v88 + 24) = v81;
  v89 = v105;
  *(_QWORD *)(v88 + 32) = v103;
  *(_QWORD *)(v88 + 40) = v89;
  *(_QWORD *)(v88 + 48) = 0x3FE0000000000000;
  *(_QWORD *)(v88 + 56) = v82;
  *(_QWORD *)(v88 + 64) = 2;
  *(_BYTE *)(v88 + 72) = 0;
  sub_1000E4440(v75, v77, v79, v81);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10004FF60(v107, &qword_1011CA648);
  sub_10004FF60(v109, &qword_1011CA660);
  sub_1000E450C(v75, v77, v79, v81);
  swift_release();
  swift_release();
  swift_release();
  sub_10004FF60(v87, &qword_1011CA648);
  return sub_10004FF60(v108, &qword_1011CA660);
}

uint64_t sub_1007EDCE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = type metadata accessor for AccessibilityChildBehavior(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011CA468);
  __chkstk_darwin(v5);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v7 = static HorizontalAlignment.center.getter(v8);
  *((_QWORD *)v7 + 1) = 0;
  v7[16] = 0;
  v9 = sub_100007E8C(&qword_1011CA470);
  v10 = sub_1007EA748(v0, (uint64_t)&v7[*(int *)(v9 + 44)]);
  static AccessibilityChildBehavior.contain.getter(v10);
  v11 = sub_100049F28(&qword_1011CA478, &qword_1011CA468, (uint64_t)&protocol conformance descriptor for VStack<A>);
  View.accessibilityElement(children:)(v4, v5, v11);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return sub_10004FF60((uint64_t)v7, &qword_1011CA468);
}

double sub_1007EDE14()
{
  double v0;
  double result;

  v0 = Int.seconds.getter(16);
  result = v0 / Int.seconds.getter(9);
  qword_1011CA2E0 = *(_QWORD *)&result;
  return result;
}

void sub_1007EDE4C()
{
  qword_1011CA2E8 = Int.seconds.getter(87);
}

uint64_t type metadata accessor for LiveRadioView(uint64_t a1)
{
  return sub_100055934(a1, qword_1011CA3F8, (uint64_t)&nominal type descriptor for LiveRadioView);
}

uint64_t *sub_1007EDEA8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(char *, uint64_t, uint64_t);
  int *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  void *v63;
  int *v64;
  uint64_t v65;
  void *v66;
  char *v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  char *v76;
  void *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  char *v85;
  uint64_t v86;
  uint64_t v88;
  char *__dst;
  uint64_t *v90;
  unsigned int (*v91)(uint64_t *, uint64_t, uint64_t);
  uint64_t v92;
  int *v93;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    v11 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for GenericMusicItem(0);
    v8 = *(_QWORD *)(v7 - 8);
    v91 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    v92 = v7;
    v88 = v8;
    if (v91(a2, 1, v7))
    {
      v9 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v12 = a3[5];
    v13 = a3[6];
    v14 = (uint64_t *)((char *)a1 + v12);
    v15 = (uint64_t *)((char *)a2 + v12);
    v16 = v15[1];
    v17 = a3;
    *v14 = *v15;
    v14[1] = v16;
    v18 = v15[3];
    v14[2] = v15[2];
    v14[3] = v18;
    v19 = (uint64_t *)((char *)a1 + v13);
    v20 = (uint64_t *)((char *)a2 + v13);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    v22 = a3[7];
    v23 = a3[8];
    v24 = (uint64_t *)((char *)a1 + v22);
    v25 = (uint64_t *)((char *)a2 + v22);
    v26 = v25[1];
    *v24 = *v25;
    v24[1] = v26;
    v27 = (uint64_t *)((char *)a1 + v23);
    v28 = (uint64_t *)((char *)a2 + v23);
    v29 = v28[1];
    *v27 = *v28;
    v27[1] = v29;
    v93 = v17;
    v30 = v17[9];
    __dst = (char *)a1 + v30;
    v90 = a1;
    v31 = (char *)a2 + v30;
    v32 = type metadata accessor for ArtworkImage.ViewModel(0);
    v33 = *(_QWORD *)(v32 - 8);
    v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v34(v31, 1, v32))
    {
      v35 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
      memcpy(__dst, v31, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      v37 = (unsigned int (*)(char *, uint64_t, uint64_t))v91;
      v36 = v92;
      v38 = v93;
      v11 = v90;
    }
    else
    {
      v39 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(__dst, v31, v39);
      v40 = *(int *)(v32 + 20);
      v41 = &__dst[v40];
      v42 = &v31[v40];
      v43 = type metadata accessor for Artwork.CropStyle(0);
      v44 = *(_QWORD *)(v43 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
      {
        v45 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v41, v42, v43);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
      }
      v37 = (unsigned int (*)(char *, uint64_t, uint64_t))v91;
      v36 = v92;
      v46 = v33;
      v11 = v90;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(__dst, 0, 1, v32);
      v38 = v93;
    }
    v47 = v38[10];
    v48 = (char *)v11 + v47;
    v49 = (char *)a2 + v47;
    v50 = type metadata accessor for MotionViewModel(0);
    v51 = *(_QWORD *)(v50 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
    {
      v52 = sub_100007E8C(&qword_1011AA8D0);
      memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    else
    {
      v53 = type metadata accessor for VideoArtwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(v48, v49, v53);
      v54 = *(int *)(v50 + 20);
      v55 = &v48[v54];
      v56 = &v49[v54];
      v57 = type metadata accessor for Artwork.CropStyle(0);
      v58 = *(_QWORD *)(v57 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
      {
        v59 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v55, v56, v57);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
      }
      v37 = (unsigned int (*)(char *, uint64_t, uint64_t))v91;
      v36 = v92;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
      v38 = v93;
    }
    v60 = v38[11];
    v61 = (uint64_t)v11 + v60;
    v62 = (char *)a2 + v60;
    v63 = *(void **)((char *)a2 + v60);
    *(uint64_t *)((char *)v11 + v60) = (uint64_t)v63;
    v64 = (int *)type metadata accessor for SegueContext(0);
    v65 = v64[5];
    v66 = (void *)(v61 + v65);
    v67 = &v62[v65];
    v68 = v63;
    if (v37(v67, 1, v36))
    {
      v69 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v88 + 16))(v66, v67, v36);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v66, 0, 1, v36);
    }
    *(_BYTE *)(v61 + v64[6]) = v62[v64[6]];
    v70 = v64[7];
    v71 = (_QWORD *)(v61 + v70);
    v72 = &v62[v70];
    if (*(_QWORD *)v72)
    {
      v73 = *((_QWORD *)v72 + 1);
      *v71 = *(_QWORD *)v72;
      v71[1] = v73;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v71 = *(_OWORD *)v72;
    }
    v74 = v93[12];
    v75 = (uint64_t *)((char *)v11 + v74);
    v76 = (char *)a2 + v74;
    v77 = *(void **)((char *)a2 + v74);
    *v75 = v77;
    v78 = v64[5];
    v79 = (char *)v75 + v78;
    v80 = &v76[v78];
    v81 = v77;
    if (v37(v80, 1, v36))
    {
      v82 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v79, v80, v36);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v79, 0, 1, v36);
    }
    *((_BYTE *)v75 + v64[6]) = v76[v64[6]];
    v83 = v64[7];
    v84 = (_QWORD *)((char *)v75 + v83);
    v85 = &v76[v83];
    if (*(_QWORD *)v85)
    {
      v86 = *((_QWORD *)v85 + 1);
      *v84 = *(_QWORD *)v85;
      v84[1] = v86;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v84 = *(_OWORD *)v85;
    }
  }
  return v11;
}

double sub_1007EE414(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id *v19;
  uint64_t v20;
  char *v21;
  id *v22;
  char *v23;
  double result;

  v4 = type metadata accessor for GenericMusicItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = a1 + a2[9];
  v8 = type metadata accessor for ArtworkImage.ViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
  {
    v9 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
    v10 = v7 + *(int *)(v8 + 20);
    v11 = type metadata accessor for Artwork.CropStyle(0);
    v12 = *(_QWORD *)(v11 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  }
  v13 = a1 + a2[10];
  v14 = type metadata accessor for MotionViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14))
  {
    v15 = type metadata accessor for VideoArtwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v13, v15);
    v16 = v13 + *(int *)(v14 + 20);
    v17 = type metadata accessor for Artwork.CropStyle(0);
    v18 = *(_QWORD *)(v17 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
  }
  v19 = (id *)(a1 + a2[11]);

  v20 = type metadata accessor for SegueContext(0);
  v21 = (char *)v19 + *(int *)(v20 + 20);
  if (!v6((uint64_t)v21, 1, v4))
    (*(void (**)(char *, uint64_t))(v5 + 8))(v21, v4);
  if (*(id *)((char *)v19 + *(int *)(v20 + 28)))
    swift_release();
  v22 = (id *)(a1 + a2[12]);

  v23 = (char *)v22 + *(int *)(v20 + 20);
  if (!v6((uint64_t)v23, 1, v4))
    (*(void (**)(char *, uint64_t))(v5 + 8))(v23, v4);
  if (*(id *)((char *)v22 + *(int *)(v20 + 28)))
    *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

char *sub_1007EE6AC(char *a1, char *a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(char *, uint64_t, uint64_t);
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  void *v58;
  int *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  void *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v83;
  char *v84;
  char *v85;
  unsigned int (*v86)(char *, uint64_t, uint64_t);
  uint64_t v87;

  v5 = type metadata accessor for GenericMusicItem(0);
  v6 = *(_QWORD *)(v5 - 8);
  v86 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  v87 = v5;
  v83 = v6;
  if (v86(a2, 1, v5))
  {
    v7 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  v8 = a3[5];
  v9 = a3[6];
  v10 = &a1[v8];
  v11 = &a2[v8];
  v12 = *((_QWORD *)v11 + 1);
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *((_QWORD *)v10 + 1) = v12;
  v13 = *((_QWORD *)v11 + 3);
  *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
  *((_QWORD *)v10 + 3) = v13;
  v14 = &a1[v9];
  v15 = &a2[v9];
  v16 = *((_QWORD *)v15 + 1);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *((_QWORD *)v14 + 1) = v16;
  v17 = a3[7];
  v18 = a3[8];
  v19 = &a1[v17];
  v20 = &a2[v17];
  v21 = *((_QWORD *)v20 + 1);
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *((_QWORD *)v19 + 1) = v21;
  v22 = &a1[v18];
  v23 = &a2[v18];
  v24 = *((_QWORD *)v23 + 1);
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *((_QWORD *)v22 + 1) = v24;
  v25 = a3[9];
  v84 = a2;
  v85 = a1;
  v26 = &a1[v25];
  v27 = &a2[v25];
  v28 = type metadata accessor for ArtworkImage.ViewModel(0);
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v30(v27, 1, v28))
  {
    v31 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    v33 = v86;
    v32 = v87;
    v34 = v84;
  }
  else
  {
    v35 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v26, v27, v35);
    v36 = *(int *)(v28 + 20);
    v37 = &v26[v36];
    v38 = &v27[v36];
    v39 = type metadata accessor for Artwork.CropStyle(0);
    v40 = *(_QWORD *)(v39 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
    {
      v41 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v37, v38, v39);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
    }
    v33 = v86;
    v32 = v87;
    v34 = v84;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  }
  v42 = a3[10];
  v43 = &v85[v42];
  v44 = &v34[v42];
  v45 = type metadata accessor for MotionViewModel(0);
  v46 = *(_QWORD *)(v45 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
  {
    v47 = sub_100007E8C(&qword_1011AA8D0);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
  }
  else
  {
    v48 = type metadata accessor for VideoArtwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v43, v44, v48);
    v49 = *(int *)(v45 + 20);
    v50 = &v43[v49];
    v51 = &v44[v49];
    v52 = type metadata accessor for Artwork.CropStyle(0);
    v53 = *(_QWORD *)(v52 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
    {
      v54 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v50, v51, v52);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
    }
    v33 = v86;
    v32 = v87;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
  }
  v55 = a3[11];
  v56 = &v85[v55];
  v57 = &v34[v55];
  v58 = *(void **)&v34[v55];
  *(_QWORD *)&v85[v55] = v58;
  v59 = (int *)type metadata accessor for SegueContext(0);
  v60 = v59[5];
  v61 = &v56[v60];
  v62 = &v57[v60];
  v63 = v58;
  if (v33(v62, 1, v32))
  {
    v64 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v61, v62, v32);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v61, 0, 1, v32);
  }
  v56[v59[6]] = v57[v59[6]];
  v65 = v59[7];
  v66 = &v56[v65];
  v67 = &v57[v65];
  if (*(_QWORD *)v67)
  {
    v68 = *((_QWORD *)v67 + 1);
    *(_QWORD *)v66 = *(_QWORD *)v67;
    *((_QWORD *)v66 + 1) = v68;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v66 = *(_OWORD *)v67;
  }
  v69 = a3[12];
  v70 = &v85[v69];
  v71 = &v34[v69];
  v72 = *(void **)&v34[v69];
  *(_QWORD *)v70 = v72;
  v73 = v59[5];
  v74 = &v70[v73];
  v75 = &v71[v73];
  v76 = v72;
  if (v33(v75, 1, v32))
  {
    v77 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v74, v75, v32);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v74, 0, 1, v32);
  }
  v70[v59[6]] = v71[v59[6]];
  v78 = v59[7];
  v79 = &v70[v78];
  v80 = &v71[v78];
  if (*(_QWORD *)v80)
  {
    v81 = *((_QWORD *)v80 + 1);
    *(_QWORD *)v79 = *(_QWORD *)v80;
    *((_QWORD *)v79 + 1) = v81;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v79 = *(_OWORD *)v80;
  }
  return v85;
}

char *sub_1007EEBE0(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t, uint64_t);
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  size_t v39;
  void *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(void *, uint64_t, uint64_t);
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(uint64_t, uint64_t, uint64_t);
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  size_t v66;
  void *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t (*v75)(void *, uint64_t, uint64_t);
  int v76;
  int v77;
  uint64_t v78;
  void **v79;
  char *v80;
  void *v81;
  void *v82;
  id v83;
  int *v84;
  uint64_t v85;
  char *v86;
  char *v87;
  int v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void **v99;
  char *v100;
  void *v101;
  void *v102;
  id v103;
  uint64_t v104;
  char *v105;
  char *v106;
  int v107;
  int v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v118;
  uint64_t (*v119)(char *, uint64_t, uint64_t);
  uint64_t v120;

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v119 = v8;
  v120 = v6;
  v10 = v8(a2, 1, v6);
  v118 = v7;
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  *(_QWORD *)v13 = *(_QWORD *)&a2[v12];
  *((_QWORD *)v13 + 1) = *(_QWORD *)&a2[v12 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
  *((_QWORD *)v13 + 3) = *((_QWORD *)v14 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = a3[6];
  v16 = &a1[v15];
  v17 = &a2[v15];
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = a3[7];
  v19 = &a1[v18];
  v20 = &a2[v18];
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21 = a3[8];
  v22 = &a1[v21];
  v23 = &a2[v21];
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24 = a3[9];
  v25 = (uint64_t)&a1[v24];
  v26 = &a2[v24];
  v27 = type metadata accessor for ArtworkImage.ViewModel(0);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
  v30 = v29(v25, 1, v27);
  v31 = v29((uint64_t)v26, 1, v27);
  if (!v30)
  {
    if (!v31)
    {
      v42 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v25, v26, v42);
      v43 = *(int *)(v27 + 20);
      v44 = (void *)(v25 + v43);
      v45 = &v26[v43];
      v46 = type metadata accessor for Artwork.CropStyle(0);
      v47 = *(_QWORD *)(v46 - 8);
      v48 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v47 + 48);
      v49 = v48(v44, 1, v46);
      v50 = v48(v45, 1, v46);
      if (v49)
      {
        if (!v50)
        {
          (*(void (**)(void *, char *, uint64_t))(v47 + 16))(v44, v45, v46);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
          goto LABEL_21;
        }
      }
      else
      {
        if (!v50)
        {
          (*(void (**)(void *, char *, uint64_t))(v47 + 24))(v44, v45, v46);
          goto LABEL_21;
        }
        (*(void (**)(void *, uint64_t))(v47 + 8))(v44, v46);
      }
      v39 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v40 = v44;
      v41 = v45;
LABEL_14:
      memcpy(v40, v41, v39);
      goto LABEL_21;
    }
    sub_10005B748(v25, type metadata accessor for ArtworkImage.ViewModel);
LABEL_13:
    v39 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v40 = (void *)v25;
    v41 = v26;
    goto LABEL_14;
  }
  if (v31)
    goto LABEL_13;
  v32 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v25, v26, v32);
  v33 = *(int *)(v27 + 20);
  v34 = (void *)(v25 + v33);
  v35 = &v26[v33];
  v36 = type metadata accessor for Artwork.CropStyle(0);
  v37 = *(_QWORD *)(v36 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
  {
    v38 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
LABEL_21:
  v51 = a3[10];
  v52 = (uint64_t)&a1[v51];
  v53 = &a2[v51];
  v54 = type metadata accessor for MotionViewModel(0);
  v55 = *(_QWORD *)(v54 - 8);
  v56 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v55 + 48);
  v57 = v56(v52, 1, v54);
  v58 = v56((uint64_t)v53, 1, v54);
  if (!v57)
  {
    if (!v58)
    {
      v69 = type metadata accessor for VideoArtwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 24))(v52, v53, v69);
      v70 = *(int *)(v54 + 20);
      v71 = (void *)(v52 + v70);
      v72 = &v53[v70];
      v73 = type metadata accessor for Artwork.CropStyle(0);
      v74 = *(_QWORD *)(v73 - 8);
      v75 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v74 + 48);
      v76 = v75(v71, 1, v73);
      v77 = v75(v72, 1, v73);
      if (v76)
      {
        if (!v77)
        {
          (*(void (**)(void *, char *, uint64_t))(v74 + 16))(v71, v72, v73);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v71, 0, 1, v73);
          goto LABEL_34;
        }
      }
      else
      {
        if (!v77)
        {
          (*(void (**)(void *, char *, uint64_t))(v74 + 24))(v71, v72, v73);
          goto LABEL_34;
        }
        (*(void (**)(void *, uint64_t))(v74 + 8))(v71, v73);
      }
      v66 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v67 = v71;
      v68 = v72;
LABEL_28:
      memcpy(v67, v68, v66);
      goto LABEL_34;
    }
    sub_10005B748(v52, type metadata accessor for MotionViewModel);
LABEL_27:
    v66 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011AA8D0) - 8) + 64);
    v67 = (void *)v52;
    v68 = v53;
    goto LABEL_28;
  }
  if (v58)
    goto LABEL_27;
  v59 = type metadata accessor for VideoArtwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v52, v53, v59);
  v60 = *(int *)(v54 + 20);
  v61 = (void *)(v52 + v60);
  v62 = &v53[v60];
  v63 = type metadata accessor for Artwork.CropStyle(0);
  v64 = *(_QWORD *)(v63 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63))
  {
    v65 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v64 + 16))(v61, v62, v63);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
LABEL_34:
  v78 = a3[11];
  v79 = (void **)&a1[v78];
  v80 = &a2[v78];
  v81 = *(void **)&a2[v78];
  v82 = *v79;
  *v79 = v81;
  v83 = v81;

  v84 = (int *)type metadata accessor for SegueContext(0);
  v85 = v84[5];
  v86 = (char *)v79 + v85;
  v87 = &v80[v85];
  v88 = v119((char *)v79 + v85, 1, v120);
  v89 = v119(v87, 1, v120);
  if (v88)
  {
    if (!v89)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v86, v87, v120);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v118 + 56))(v86, 0, 1, v120);
      goto LABEL_40;
    }
    goto LABEL_39;
  }
  if (v89)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v86, v120);
LABEL_39:
    v90 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v86, v87, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
    goto LABEL_40;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 24))(v86, v87, v120);
LABEL_40:
  *((_BYTE *)v79 + v84[6]) = v80[v84[6]];
  v91 = v84[7];
  v92 = (void **)((char *)v79 + v91);
  v93 = &v80[v91];
  v94 = *(uint64_t *)((char *)v79 + v91);
  v95 = *(_QWORD *)&v80[v91];
  if (v94)
  {
    if (v95)
    {
      v96 = *((_QWORD *)v93 + 1);
      *v92 = v95;
      v92[1] = v96;
      swift_retain();
      swift_release();
      goto LABEL_47;
    }
    swift_release();
  }
  else if (v95)
  {
    v97 = *((_QWORD *)v93 + 1);
    *v92 = v95;
    v92[1] = v97;
    swift_retain();
    goto LABEL_47;
  }
  *(_OWORD *)v92 = *(_OWORD *)v93;
LABEL_47:
  v98 = a3[12];
  v99 = (void **)&a1[v98];
  v100 = &a2[v98];
  v101 = *(void **)&a2[v98];
  v102 = *v99;
  *v99 = v101;
  v103 = v101;

  v104 = v84[5];
  v105 = (char *)v99 + v104;
  v106 = &v100[v104];
  v107 = v119((char *)v99 + v104, 1, v120);
  v108 = v119(v106, 1, v120);
  if (v107)
  {
    if (!v108)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v105, v106, v120);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v118 + 56))(v105, 0, 1, v120);
      goto LABEL_53;
    }
    goto LABEL_52;
  }
  if (v108)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v105, v120);
LABEL_52:
    v109 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v105, v106, *(_QWORD *)(*(_QWORD *)(v109 - 8) + 64));
    goto LABEL_53;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 24))(v105, v106, v120);
LABEL_53:
  *((_BYTE *)v99 + v84[6]) = v100[v84[6]];
  v110 = v84[7];
  v111 = (void **)((char *)v99 + v110);
  v112 = &v100[v110];
  v113 = *(uint64_t *)((char *)v99 + v110);
  v114 = *(_QWORD *)&v100[v110];
  if (!v113)
  {
    if (v114)
    {
      v116 = *((_QWORD *)v112 + 1);
      *v111 = v114;
      v111[1] = v116;
      swift_retain();
      return a1;
    }
LABEL_59:
    *(_OWORD *)v111 = *(_OWORD *)v112;
    return a1;
  }
  if (!v114)
  {
    swift_release();
    goto LABEL_59;
  }
  v115 = *((_QWORD *)v112 + 1);
  *v111 = v114;
  v111[1] = v115;
  swift_retain();
  swift_release();
  return a1;
}

char *sub_1007EF4CC(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  int *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *__dst;
  char *__dsta;
  uint64_t v67;
  unsigned int (*v68)(char *, uint64_t, uint64_t);

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v68 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v67 = v7;
  if (v68(a2, 1, v6))
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[5];
  v10 = a3[6];
  v11 = *(_OWORD *)&a2[v9];
  v12 = *(_OWORD *)&a2[v9 + 16];
  v13 = &a1[v9];
  *(_OWORD *)v13 = v11;
  *((_OWORD *)v13 + 1) = v12;
  *(_OWORD *)&a1[v10] = *(_OWORD *)&a2[v10];
  v14 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  *(_OWORD *)&a1[v14] = *(_OWORD *)&a2[v14];
  v15 = a3[9];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = type metadata accessor for ArtworkImage.ViewModel(0);
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    v20 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v21 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v16, v17, v21);
    v22 = *(int *)(v18 + 20);
    __dst = &v16[v22];
    v23 = &v17[v22];
    v24 = type metadata accessor for Artwork.CropStyle(0);
    v25 = *(_QWORD *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
    {
      v26 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(__dst, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))(__dst, v23, v24);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(__dst, 0, 1, v24);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  v27 = a3[10];
  v28 = &a1[v27];
  v29 = &a2[v27];
  v30 = type metadata accessor for MotionViewModel(0);
  v31 = *(_QWORD *)(v30 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
  {
    v32 = sub_100007E8C(&qword_1011AA8D0);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    v33 = type metadata accessor for VideoArtwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v28, v29, v33);
    v34 = *(int *)(v30 + 20);
    __dsta = &v28[v34];
    v35 = &v29[v34];
    v36 = type metadata accessor for Artwork.CropStyle(0);
    v37 = *(_QWORD *)(v36 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
    {
      v38 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(__dsta, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 32))(__dsta, v35, v36);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(__dsta, 0, 1, v36);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
  }
  v39 = a3[11];
  v40 = &a1[v39];
  v41 = &a2[v39];
  *(_QWORD *)&a1[v39] = *(_QWORD *)&a2[v39];
  v42 = (int *)type metadata accessor for SegueContext(0);
  v43 = v42[5];
  v44 = &v40[v43];
  v45 = &v41[v43];
  if (v68(&v41[v43], 1, v6))
  {
    v46 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v44, v45, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v44, 0, 1, v6);
  }
  v40[v42[6]] = v41[v42[6]];
  v47 = v42[7];
  v48 = &v40[v47];
  v49 = &v41[v47];
  v50 = *(_QWORD *)v49;
  if (*(_QWORD *)v49)
  {
    v51 = *((_QWORD *)v49 + 1);
    *(_QWORD *)v48 = v50;
    *((_QWORD *)v48 + 1) = v51;
  }
  else
  {
    *(_OWORD *)v48 = *(_OWORD *)v49;
  }
  v52 = a3[12];
  v53 = &a1[v52];
  v54 = &a2[v52];
  *(_QWORD *)v53 = *(_QWORD *)&a2[v52];
  v55 = v42[5];
  v56 = &v53[v55];
  v57 = &v54[v55];
  if (v68(&v54[v55], 1, v6))
  {
    v58 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v56, v57, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v56, 0, 1, v6);
  }
  v53[v42[6]] = v54[v42[6]];
  v59 = v42[7];
  v60 = &v53[v59];
  v61 = &v54[v59];
  v62 = *(_QWORD *)v61;
  if (*(_QWORD *)v61)
  {
    v63 = *((_QWORD *)v61 + 1);
    *(_QWORD *)v60 = v62;
    *((_QWORD *)v60 + 1) = v63;
  }
  else
  {
    *(_OWORD *)v60 = *(_OWORD *)v61;
  }
  return a1;
}

char *sub_1007EF984(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t, uint64_t);
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  size_t v47;
  void *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(void *, uint64_t, uint64_t);
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(uint64_t, uint64_t, uint64_t);
  int v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  size_t v74;
  void *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t (*v83)(void *, uint64_t, uint64_t);
  int v84;
  int v85;
  uint64_t v86;
  char *v87;
  char *v88;
  void *v89;
  int *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  int v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  void *v107;
  uint64_t v108;
  char *v109;
  char *v110;
  int v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v122;
  uint64_t (*v123)(char *, uint64_t, uint64_t);
  uint64_t v124;

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v123 = v8;
  v124 = v6;
  v10 = v8(a2, 1, v6);
  v122 = v7;
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = *(_QWORD *)&a2[v12 + 8];
  *(_QWORD *)v13 = *(_QWORD *)&a2[v12];
  *((_QWORD *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  v16 = *((_QWORD *)v14 + 3);
  *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
  *((_QWORD *)v13 + 3) = v16;
  swift_bridgeObjectRelease();
  v17 = a3[6];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v21 = *(_QWORD *)v19;
  v20 = *((_QWORD *)v19 + 1);
  *(_QWORD *)v18 = v21;
  *((_QWORD *)v18 + 1) = v20;
  swift_bridgeObjectRelease();
  v22 = a3[7];
  v23 = &a1[v22];
  v24 = &a2[v22];
  v26 = *(_QWORD *)v24;
  v25 = *((_QWORD *)v24 + 1);
  *(_QWORD *)v23 = v26;
  *((_QWORD *)v23 + 1) = v25;
  swift_bridgeObjectRelease();
  v27 = a3[8];
  v28 = &a1[v27];
  v29 = &a2[v27];
  v31 = *(_QWORD *)v29;
  v30 = *((_QWORD *)v29 + 1);
  *(_QWORD *)v28 = v31;
  *((_QWORD *)v28 + 1) = v30;
  swift_bridgeObjectRelease();
  v32 = a3[9];
  v33 = (uint64_t)&a1[v32];
  v34 = &a2[v32];
  v35 = type metadata accessor for ArtworkImage.ViewModel(0);
  v36 = *(_QWORD *)(v35 - 8);
  v37 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 48);
  v38 = v37(v33, 1, v35);
  v39 = v37((uint64_t)v34, 1, v35);
  if (!v38)
  {
    if (!v39)
    {
      v50 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 40))(v33, v34, v50);
      v51 = *(int *)(v35 + 20);
      v52 = (void *)(v33 + v51);
      v53 = &v34[v51];
      v54 = type metadata accessor for Artwork.CropStyle(0);
      v55 = *(_QWORD *)(v54 - 8);
      v56 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v55 + 48);
      v57 = v56(v52, 1, v54);
      v58 = v56(v53, 1, v54);
      if (v57)
      {
        if (!v58)
        {
          (*(void (**)(void *, char *, uint64_t))(v55 + 32))(v52, v53, v54);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
          goto LABEL_21;
        }
      }
      else
      {
        if (!v58)
        {
          (*(void (**)(void *, char *, uint64_t))(v55 + 40))(v52, v53, v54);
          goto LABEL_21;
        }
        (*(void (**)(void *, uint64_t))(v55 + 8))(v52, v54);
      }
      v47 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v48 = v52;
      v49 = v53;
LABEL_14:
      memcpy(v48, v49, v47);
      goto LABEL_21;
    }
    sub_10005B748(v33, type metadata accessor for ArtworkImage.ViewModel);
LABEL_13:
    v47 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v48 = (void *)v33;
    v49 = v34;
    goto LABEL_14;
  }
  if (v39)
    goto LABEL_13;
  v40 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v33, v34, v40);
  v41 = *(int *)(v35 + 20);
  v42 = (void *)(v33 + v41);
  v43 = &v34[v41];
  v44 = type metadata accessor for Artwork.CropStyle(0);
  v45 = *(_QWORD *)(v44 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
  {
    v46 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v45 + 32))(v42, v43, v44);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
LABEL_21:
  v59 = a3[10];
  v60 = (uint64_t)&a1[v59];
  v61 = &a2[v59];
  v62 = type metadata accessor for MotionViewModel(0);
  v63 = *(_QWORD *)(v62 - 8);
  v64 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v63 + 48);
  v65 = v64(v60, 1, v62);
  v66 = v64((uint64_t)v61, 1, v62);
  if (!v65)
  {
    if (!v66)
    {
      v77 = type metadata accessor for VideoArtwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 40))(v60, v61, v77);
      v78 = *(int *)(v62 + 20);
      v79 = (void *)(v60 + v78);
      v80 = &v61[v78];
      v81 = type metadata accessor for Artwork.CropStyle(0);
      v82 = *(_QWORD *)(v81 - 8);
      v83 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v82 + 48);
      v84 = v83(v79, 1, v81);
      v85 = v83(v80, 1, v81);
      if (v84)
      {
        if (!v85)
        {
          (*(void (**)(void *, char *, uint64_t))(v82 + 32))(v79, v80, v81);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v79, 0, 1, v81);
          goto LABEL_34;
        }
      }
      else
      {
        if (!v85)
        {
          (*(void (**)(void *, char *, uint64_t))(v82 + 40))(v79, v80, v81);
          goto LABEL_34;
        }
        (*(void (**)(void *, uint64_t))(v82 + 8))(v79, v81);
      }
      v74 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v75 = v79;
      v76 = v80;
LABEL_28:
      memcpy(v75, v76, v74);
      goto LABEL_34;
    }
    sub_10005B748(v60, type metadata accessor for MotionViewModel);
LABEL_27:
    v74 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011AA8D0) - 8) + 64);
    v75 = (void *)v60;
    v76 = v61;
    goto LABEL_28;
  }
  if (v66)
    goto LABEL_27;
  v67 = type metadata accessor for VideoArtwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(v60, v61, v67);
  v68 = *(int *)(v62 + 20);
  v69 = (void *)(v60 + v68);
  v70 = &v61[v68];
  v71 = type metadata accessor for Artwork.CropStyle(0);
  v72 = *(_QWORD *)(v71 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48))(v70, 1, v71))
  {
    v73 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v72 + 32))(v69, v70, v71);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v69, 0, 1, v71);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
LABEL_34:
  v86 = a3[11];
  v87 = &a1[v86];
  v88 = &a2[v86];
  v89 = *(void **)&a1[v86];
  *(_QWORD *)&a1[v86] = *(_QWORD *)&a2[v86];

  v90 = (int *)type metadata accessor for SegueContext(0);
  v91 = v90[5];
  v92 = &v87[v91];
  v93 = &v88[v91];
  v94 = v123(&v87[v91], 1, v124);
  v95 = v123(v93, 1, v124);
  if (v94)
  {
    if (!v95)
    {
      (*(void (**)(char *, char *, uint64_t))(v122 + 32))(v92, v93, v124);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v122 + 56))(v92, 0, 1, v124);
      goto LABEL_40;
    }
    goto LABEL_39;
  }
  if (v95)
  {
    (*(void (**)(char *, uint64_t))(v122 + 8))(v92, v124);
LABEL_39:
    v96 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
    goto LABEL_40;
  }
  (*(void (**)(char *, char *, uint64_t))(v122 + 40))(v92, v93, v124);
LABEL_40:
  v87[v90[6]] = v88[v90[6]];
  v97 = v90[7];
  v98 = &v87[v97];
  v99 = &v88[v97];
  v100 = *(_QWORD *)&v87[v97];
  v101 = *(_QWORD *)&v88[v97];
  if (v100)
  {
    if (v101)
    {
      v102 = *((_QWORD *)v99 + 1);
      *(_QWORD *)v98 = v101;
      *((_QWORD *)v98 + 1) = v102;
      swift_release();
      goto LABEL_47;
    }
    swift_release();
  }
  else if (v101)
  {
    v103 = *((_QWORD *)v99 + 1);
    *(_QWORD *)v98 = v101;
    *((_QWORD *)v98 + 1) = v103;
    goto LABEL_47;
  }
  *(_OWORD *)v98 = *(_OWORD *)v99;
LABEL_47:
  v104 = a3[12];
  v105 = &a1[v104];
  v106 = &a2[v104];
  v107 = *(void **)&a1[v104];
  *(_QWORD *)&a1[v104] = *(_QWORD *)&a2[v104];

  v108 = v90[5];
  v109 = &v105[v108];
  v110 = &v106[v108];
  v111 = v123(&v105[v108], 1, v124);
  v112 = v123(v110, 1, v124);
  if (v111)
  {
    if (!v112)
    {
      (*(void (**)(char *, char *, uint64_t))(v122 + 32))(v109, v110, v124);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v122 + 56))(v109, 0, 1, v124);
      goto LABEL_53;
    }
    goto LABEL_52;
  }
  if (v112)
  {
    (*(void (**)(char *, uint64_t))(v122 + 8))(v109, v124);
LABEL_52:
    v113 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
    goto LABEL_53;
  }
  (*(void (**)(char *, char *, uint64_t))(v122 + 40))(v109, v110, v124);
LABEL_53:
  v105[v90[6]] = v106[v90[6]];
  v114 = v90[7];
  v115 = &v105[v114];
  v116 = &v106[v114];
  v117 = *(_QWORD *)&v105[v114];
  v118 = *(_QWORD *)&v106[v114];
  if (!v117)
  {
    if (v118)
    {
      v120 = *((_QWORD *)v116 + 1);
      *(_QWORD *)v115 = v118;
      *((_QWORD *)v115 + 1) = v120;
      return a1;
    }
LABEL_59:
    *(_OWORD *)v115 = *(_OWORD *)v116;
    return a1;
  }
  if (!v118)
  {
    swift_release();
    goto LABEL_59;
  }
  v119 = *((_QWORD *)v116 + 1);
  *(_QWORD *)v115 = v118;
  *((_QWORD *)v115 + 1) = v119;
  swift_release();
  return a1;
}

uint64_t sub_1007F0200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1007F020C);
}

uint64_t sub_1007F020C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 2147483646)
  {
    v9 = *(_QWORD *)(a1 + a3[5] + 8);
    if (v9 >= 0xFFFFFFFF)
      LODWORD(v9) = -1;
    v10 = v9 - 1;
    if (v10 < 0)
      v10 = -1;
    return (v10 + 1);
  }
  else
  {
    v11 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v13 = v11;
      v14 = a3[9];
    }
    else
    {
      v15 = sub_100007E8C(&qword_1011AA8D0);
      v12 = *(_QWORD *)(v15 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v13 = v15;
        v14 = a3[10];
      }
      else
      {
        v13 = type metadata accessor for SegueContext(0);
        v12 = *(_QWORD *)(v13 - 8);
        v14 = a3[11];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1 + v14, a2, v13);
  }
}

uint64_t sub_1007F0318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1007F0324);
}

uint64_t sub_1007F0324(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  result = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 2147483646)
    {
      *(_QWORD *)(a1 + a4[5] + 8) = a2;
      return result;
    }
    v13 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[9];
    }
    else
    {
      v16 = sub_100007E8C(&qword_1011AA8D0);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[10];
      }
      else
      {
        v10 = type metadata accessor for SegueContext(0);
        v14 = *(_QWORD *)(v10 - 8);
        v15 = a4[11];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1007F0420(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[7];
  uint64_t v11;
  uint64_t v12;

  sub_1000E3A44(319, (unint64_t *)&qword_1011A06D8, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
  {
    v10[0] = *(_QWORD *)(v2 - 8) + 64;
    v10[1] = " ";
    v10[2] = &unk_100ED1248;
    v10[3] = &unk_100ED1248;
    v10[4] = &unk_100ED1248;
    sub_1000E3A44(319, qword_1011A0C70, type metadata accessor for ArtworkImage.ViewModel, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    if (v5 <= 0x3F)
    {
      v10[5] = *(_QWORD *)(v4 - 8) + 64;
      sub_1000E3A44(319, &qword_1011AC2E0, type metadata accessor for MotionViewModel, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
      if (v7 <= 0x3F)
      {
        v10[6] = *(_QWORD *)(v6 - 8) + 64;
        v8 = type metadata accessor for SegueContext(319);
        if (v9 <= 0x3F)
        {
          v11 = *(_QWORD *)(v8 - 8) + 64;
          v12 = v11;
          swift_initStructMetadata(a1, 256, 9, v10, a1 + 16);
        }
      }
    }
  }
}

uint64_t *sub_1007F053C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  int *v36;
  int *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  void *v62;
  int *v63;
  uint64_t v64;
  char *v65;
  void *v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  char *v78;
  void *v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  id v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t *v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  uint64_t *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  uint64_t *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  id v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  _QWORD *v142;
  _QWORD *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  _QWORD *v152;
  _QWORD *v153;
  uint64_t v154;
  uint64_t v156;
  char *__dst;
  uint64_t *v158;
  uint64_t v159;
  int *v160;
  int *v161;
  unsigned int (*v162)(uint64_t *, uint64_t, uint64_t);

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = type metadata accessor for GenericMusicItem(0);
    v8 = *(_QWORD *)(v7 - 8);
    v162 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    v159 = v7;
    v160 = a3;
    v156 = v8;
    if (v162(a2, 1, v7))
    {
      v9 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = (int *)type metadata accessor for LiveRadio(0);
    v12 = v11[5];
    v13 = (uint64_t *)((char *)a1 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = v14[3];
    v13[2] = v14[2];
    v13[3] = v16;
    v17 = v11[6];
    v18 = (uint64_t *)((char *)a1 + v17);
    v19 = (uint64_t *)((char *)a2 + v17);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = v11[7];
    v22 = (uint64_t *)((char *)a1 + v21);
    v23 = (uint64_t *)((char *)a2 + v21);
    v24 = a2;
    v25 = v23[1];
    *v22 = *v23;
    v22[1] = v25;
    v26 = v11[8];
    v27 = (uint64_t *)((char *)a1 + v26);
    v28 = (uint64_t *)((char *)v24 + v26);
    v29 = v28[1];
    *v27 = *v28;
    v27[1] = v29;
    v161 = v11;
    v30 = v11[9];
    __dst = (char *)a1 + v30;
    v158 = v24;
    v31 = (char *)v24 + v30;
    v32 = type metadata accessor for ArtworkImage.ViewModel(0);
    v33 = *(_QWORD *)(v32 - 8);
    v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v34(v31, 1, v32))
    {
      v35 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
      memcpy(__dst, v31, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      v36 = v160;
      v37 = v161;
      v38 = v158;
    }
    else
    {
      v39 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(__dst, v31, v39);
      v40 = *(int *)(v32 + 20);
      v41 = &__dst[v40];
      v42 = &v31[v40];
      v43 = type metadata accessor for Artwork.CropStyle(0);
      v44 = *(_QWORD *)(v43 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
      {
        v45 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v41, v42, v43);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
      }
      v37 = v161;
      v38 = v158;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(__dst, 0, 1, v32);
      v36 = v160;
    }
    v46 = v37[10];
    v47 = (char *)a1 + v46;
    v48 = (char *)v38 + v46;
    v49 = type metadata accessor for MotionViewModel(0);
    v50 = *(_QWORD *)(v49 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
    {
      v51 = sub_100007E8C(&qword_1011AA8D0);
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    }
    else
    {
      v52 = type metadata accessor for VideoArtwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(v47, v48, v52);
      v53 = *(int *)(v49 + 20);
      v54 = &v47[v53];
      v55 = &v48[v53];
      v56 = type metadata accessor for Artwork.CropStyle(0);
      v57 = *(_QWORD *)(v56 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
      {
        v58 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v54, v55, v56);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
      v36 = v160;
      v37 = v161;
    }
    v59 = v37[11];
    v60 = (char *)a1 + v59;
    v61 = (uint64_t)v38 + v59;
    v62 = *(void **)((char *)v38 + v59);
    *(uint64_t *)((char *)a1 + v59) = (uint64_t)v62;
    v63 = (int *)type metadata accessor for SegueContext(0);
    v64 = v63[5];
    v65 = &v60[v64];
    v66 = (const void *)(v61 + v64);
    v67 = v62;
    if (v162((uint64_t *)v66, 1, v159))
    {
      v68 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, void *, uint64_t))(v156 + 16))(v65, (void *)v66, v159);
      v37 = v161;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v156 + 56))(v65, 0, 1, v159);
    }
    v60[v63[6]] = *(_BYTE *)(v61 + v63[6]);
    v69 = v63[7];
    v70 = &v60[v69];
    v71 = (_QWORD *)(v61 + v69);
    if (*v71)
    {
      v72 = v71[1];
      *(_QWORD *)v70 = *v71;
      *((_QWORD *)v70 + 1) = v72;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v70 = *(_OWORD *)v71;
    }
    v73 = v37[12];
    v74 = (uint64_t *)((char *)a1 + v73);
    v75 = (uint64_t)v38 + v73;
    v76 = *(void **)((char *)v38 + v73);
    *v74 = v76;
    v77 = v63[5];
    v78 = (char *)v74 + v77;
    v79 = (const void *)(v75 + v77);
    v80 = v76;
    if (v162((uint64_t *)v79, 1, v159))
    {
      v81 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, void *, uint64_t))(v156 + 16))(v78, (void *)v79, v159);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v156 + 56))(v78, 0, 1, v159);
    }
    *((_BYTE *)v74 + v63[6]) = *(_BYTE *)(v75 + v63[6]);
    v82 = v63[7];
    v83 = (_QWORD *)((char *)v74 + v82);
    v84 = (_QWORD *)(v75 + v82);
    if (*v84)
    {
      v85 = v84[1];
      *v83 = *v84;
      v83[1] = v85;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v83 = *(_OWORD *)v84;
    }
    v86 = v36[5];
    v87 = (char *)a1 + v86;
    v88 = (uint64_t)v38 + v86;
    v89 = *(id *)v88;
    v90 = *(_BYTE *)(v88 + 8);
    sub_1000A4100(*(id *)v88, v90);
    *(_QWORD *)v87 = v89;
    v87[8] = v90;
    v91 = v36[6];
    v92 = v36[7];
    v93 = (uint64_t *)((char *)a1 + v91);
    v94 = (uint64_t *)((char *)v38 + v91);
    v95 = *v94;
    v96 = v94[1];
    *v93 = v95;
    v93[1] = v96;
    v97 = (uint64_t *)((char *)a1 + v92);
    v98 = (uint64_t *)((char *)v38 + v92);
    v100 = *v98;
    v99 = v98[1];
    *v97 = v100;
    v97[1] = v99;
    v101 = v36[8];
    v102 = (char *)a1 + v101;
    v103 = (uint64_t)v38 + v101;
    v104 = *(_QWORD *)v103;
    v105 = *(_QWORD *)(v103 + 8);
    v106 = *(_BYTE *)(v103 + 16);
    swift_retain();
    swift_retain();
    KeyValueObservationTrigger.keyPath.getter(v104, v105);
    *(_QWORD *)v102 = v104;
    *((_QWORD *)v102 + 1) = v105;
    v102[16] = v106;
    v107 = v36[9];
    v108 = v36[10];
    v109 = (uint64_t *)((char *)a1 + v107);
    v110 = (uint64_t *)((char *)v38 + v107);
    v111 = *v110;
    v112 = v110[1];
    *v109 = v111;
    v109[1] = v112;
    v113 = (uint64_t *)((char *)a1 + v108);
    v114 = (uint64_t *)((char *)v38 + v108);
    v116 = *v114;
    v115 = v114[1];
    *v113 = v116;
    v113[1] = v115;
    v117 = v36[11];
    v118 = v36[12];
    v119 = (uint64_t *)((char *)a1 + v117);
    v120 = (uint64_t *)((char *)v38 + v117);
    v122 = *v120;
    v121 = v120[1];
    *v119 = v122;
    v119[1] = v121;
    v123 = (char *)a1 + v118;
    v124 = *(uint64_t *)((char *)v38 + v118);
    v125 = *(uint64_t *)((char *)v38 + v118 + 8);
    v126 = *((_BYTE *)v38 + v118 + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1000A410C(v124, v125, v126);
    *(_QWORD *)v123 = v124;
    *((_QWORD *)v123 + 1) = v125;
    v123[16] = v126;
    v127 = v36[13];
    v128 = (char *)a1 + v127;
    v129 = (uint64_t)v38 + v127;
    v130 = *(_QWORD *)v129;
    v131 = *(_QWORD *)(v129 + 8);
    LOBYTE(v124) = *(_BYTE *)(v129 + 16);
    sub_1000A411C(*(_QWORD *)v129, v131, v124);
    *(_QWORD *)v128 = v130;
    *((_QWORD *)v128 + 1) = v131;
    v128[16] = v124;
    v132 = v36[14];
    v133 = (char *)a1 + v132;
    v134 = (uint64_t)v38 + v132;
    v135 = *(id *)v134;
    LOBYTE(v131) = *(_BYTE *)(v134 + 8);
    sub_1000A4100(*(id *)v134, v131);
    *(_QWORD *)v133 = v135;
    v133[8] = v131;
    v136 = v36[15];
    v137 = (char *)a1 + v136;
    v138 = (uint64_t)v38 + v136;
    v139 = *(_QWORD *)v138;
    v140 = *(_QWORD *)(v138 + 8);
    LOBYTE(v124) = *(_BYTE *)(v138 + 16);
    KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)v138, v140);
    *(_QWORD *)v137 = v139;
    *((_QWORD *)v137 + 1) = v140;
    v137[16] = v124;
    v141 = v36[16];
    v142 = (uint64_t *)((char *)a1 + v141);
    v143 = (uint64_t *)((char *)v38 + v141);
    v144 = sub_100007E8C(&qword_10119F4E0);
    if (swift_getEnumCaseMultiPayload(v143, v144) == 1)
    {
      v145 = type metadata accessor for OpenURLAction(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v145 - 8) + 16))(v142, v143, v145);
      v146 = 1;
    }
    else
    {
      *v142 = *v143;
      swift_retain();
      v146 = 0;
    }
    swift_storeEnumTagMultiPayload(v142, v144, v146);
    v147 = v36[17];
    v148 = (char *)a1 + v147;
    v149 = (uint64_t)v38 + v147;
    v150 = sub_100007E8C(qword_1011C9550);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v150 - 8) + 16))(v148, v149, v150);
    v151 = v36[18];
    v152 = (uint64_t *)((char *)a1 + v151);
    v153 = (uint64_t *)((char *)v38 + v151);
    v154 = v153[1];
    *v152 = *v153;
    v152[1] = v154;
  }
  swift_retain();
  return a1;
}

double sub_1007F0CE8(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id *v20;
  uint64_t v21;
  char *v22;
  id *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double result;

  v4 = type metadata accessor for GenericMusicItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v7 = (int *)type metadata accessor for LiveRadio(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = a1 + v7[9];
  v9 = type metadata accessor for ArtworkImage.ViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    v10 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
    v11 = v8 + *(int *)(v9 + 20);
    v12 = type metadata accessor for Artwork.CropStyle(0);
    v13 = *(_QWORD *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  v14 = a1 + v7[10];
  v15 = type metadata accessor for MotionViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15))
  {
    v16 = type metadata accessor for VideoArtwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v14, v16);
    v17 = v14 + *(int *)(v15 + 20);
    v18 = type metadata accessor for Artwork.CropStyle(0);
    v19 = *(_QWORD *)(v18 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
  }
  v20 = (id *)(a1 + v7[11]);

  v21 = type metadata accessor for SegueContext(0);
  v22 = (char *)v20 + *(int *)(v21 + 20);
  if (!v6((uint64_t)v22, 1, v4))
    (*(void (**)(char *, uint64_t))(v5 + 8))(v22, v4);
  if (*(id *)((char *)v20 + *(int *)(v21 + 28)))
    swift_release();
  v23 = (id *)(a1 + v7[12]);

  v24 = (char *)v23 + *(int *)(v21 + 20);
  if (!v6((uint64_t)v24, 1, v4))
    (*(void (**)(char *, uint64_t))(v5 + 8))(v24, v4);
  if (*(id *)((char *)v23 + *(int *)(v21 + 28)))
    swift_release();
  sub_1000A4224(*(id *)(a1 + a2[5]), *(_BYTE *)(a1 + a2[5] + 8));
  swift_release();
  swift_release();
  sub_1000A6174(*(_QWORD *)(a1 + a2[8]), *(_QWORD *)(a1 + a2[8] + 8));
  swift_release();
  swift_release();
  swift_release();
  sub_1000A4230(*(_QWORD *)(a1 + a2[12]), *(_QWORD *)(a1 + a2[12] + 8), *(_BYTE *)(a1 + a2[12] + 16));
  sub_1000A4240(*(_QWORD *)(a1 + a2[13]), *(_QWORD *)(a1 + a2[13] + 8), *(_BYTE *)(a1 + a2[13] + 16));
  sub_1000A4224(*(id *)(a1 + a2[14]), *(_BYTE *)(a1 + a2[14] + 8));
  sub_1000A6174(*(_QWORD *)(a1 + a2[15]), *(_QWORD *)(a1 + a2[15] + 8));
  v25 = a1 + a2[16];
  v26 = sub_100007E8C(&qword_10119F4E0);
  if (swift_getEnumCaseMultiPayload(v25, v26) == 1)
  {
    v27 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v25, v27);
  }
  else
  {
    swift_release();
  }
  v28 = a1 + a2[17];
  v29 = sub_100007E8C(qword_1011C9550);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v28, v29);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

char *sub_1007F10B8(char *a1, char *a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  int *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  void *v59;
  int *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  void *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  id v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  id v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  uint64_t v152;
  char *__dst;
  char *v154;
  uint64_t v155;
  unsigned int (*v157)(char *, uint64_t, uint64_t);
  int *v158;

  v5 = type metadata accessor for GenericMusicItem(0);
  v6 = *(_QWORD *)(v5 - 8);
  v157 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  v155 = v5;
  v152 = v6;
  if (v157(a2, 1, v5))
  {
    v7 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  v8 = (int *)type metadata accessor for LiveRadio(0);
  v9 = v8[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *((_QWORD *)v11 + 1);
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *((_QWORD *)v10 + 1) = v12;
  v13 = *((_QWORD *)v11 + 3);
  *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
  *((_QWORD *)v10 + 3) = v13;
  v14 = v8[6];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = *((_QWORD *)v16 + 1);
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *((_QWORD *)v15 + 1) = v17;
  v18 = v8[7];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = a2;
  v22 = *((_QWORD *)v20 + 1);
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *((_QWORD *)v19 + 1) = v22;
  v23 = v8[8];
  v24 = &a1[v23];
  v25 = &v21[v23];
  v26 = *((_QWORD *)v25 + 1);
  *(_QWORD *)v24 = *(_QWORD *)v25;
  *((_QWORD *)v24 + 1) = v26;
  v158 = v8;
  v27 = v8[9];
  __dst = &a1[v27];
  v154 = v21;
  v28 = &v21[v27];
  v29 = type metadata accessor for ArtworkImage.ViewModel(0);
  v30 = *(_QWORD *)(v29 - 8);
  v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v31(v28, 1, v29))
  {
    v32 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(__dst, v28, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    v34 = v155;
    v33 = a3;
    v35 = v154;
  }
  else
  {
    v36 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(__dst, v28, v36);
    v37 = *(int *)(v29 + 20);
    v38 = &__dst[v37];
    v39 = &v28[v37];
    v40 = type metadata accessor for Artwork.CropStyle(0);
    v41 = *(_QWORD *)(v40 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
    {
      v42 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v38, v39, v40);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
    }
    v35 = v154;
    v34 = v155;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(__dst, 0, 1, v29);
    v33 = a3;
  }
  v43 = v158[10];
  v44 = &a1[v43];
  v45 = &v35[v43];
  v46 = type metadata accessor for MotionViewModel(0);
  v47 = *(_QWORD *)(v46 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
  {
    v48 = sub_100007E8C(&qword_1011AA8D0);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
  }
  else
  {
    v49 = type metadata accessor for VideoArtwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v44, v45, v49);
    v50 = *(int *)(v46 + 20);
    v51 = &v44[v50];
    v52 = &v45[v50];
    v53 = type metadata accessor for Artwork.CropStyle(0);
    v54 = *(_QWORD *)(v53 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
    {
      v55 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v51, v52, v53);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
    }
    v34 = v155;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
    v33 = a3;
  }
  v56 = v158[11];
  v57 = &a1[v56];
  v58 = &v35[v56];
  v59 = *(void **)&v35[v56];
  *(_QWORD *)&a1[v56] = v59;
  v60 = (int *)type metadata accessor for SegueContext(0);
  v61 = v60[5];
  v62 = &v57[v61];
  v63 = &v58[v61];
  v64 = v59;
  if (v157(v63, 1, v34))
  {
    v65 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v152 + 16))(v62, v63, v34);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v152 + 56))(v62, 0, 1, v34);
  }
  v57[v60[6]] = v58[v60[6]];
  v66 = v60[7];
  v67 = &v57[v66];
  v68 = &v58[v66];
  if (*(_QWORD *)v68)
  {
    v69 = *((_QWORD *)v68 + 1);
    *(_QWORD *)v67 = *(_QWORD *)v68;
    *((_QWORD *)v67 + 1) = v69;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v67 = *(_OWORD *)v68;
  }
  v70 = v158[12];
  v71 = &a1[v70];
  v72 = &v35[v70];
  v73 = *(void **)&v35[v70];
  *(_QWORD *)v71 = v73;
  v74 = v60[5];
  v75 = &v71[v74];
  v76 = &v72[v74];
  v77 = v73;
  if (v157(v76, 1, v34))
  {
    v78 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v152 + 16))(v75, v76, v34);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v152 + 56))(v75, 0, 1, v34);
  }
  v71[v60[6]] = v72[v60[6]];
  v79 = v60[7];
  v80 = &v71[v79];
  v81 = &v72[v79];
  if (*(_QWORD *)v81)
  {
    v82 = *((_QWORD *)v81 + 1);
    *(_QWORD *)v80 = *(_QWORD *)v81;
    *((_QWORD *)v80 + 1) = v82;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v80 = *(_OWORD *)v81;
  }
  v83 = v33[5];
  v84 = &a1[v83];
  v85 = &v35[v83];
  v86 = *(id *)v85;
  v87 = v85[8];
  sub_1000A4100(*(id *)v85, v87);
  *(_QWORD *)v84 = v86;
  v84[8] = v87;
  v88 = v33[6];
  v89 = v33[7];
  v90 = &a1[v88];
  v91 = (uint64_t *)&v35[v88];
  v92 = *v91;
  v93 = v91[1];
  *(_QWORD *)v90 = v92;
  *((_QWORD *)v90 + 1) = v93;
  v94 = &a1[v89];
  v95 = (uint64_t *)&v35[v89];
  v97 = *v95;
  v96 = v95[1];
  *(_QWORD *)v94 = v97;
  *((_QWORD *)v94 + 1) = v96;
  v98 = v33[8];
  v99 = &a1[v98];
  v100 = &v35[v98];
  v101 = *(_QWORD *)v100;
  v102 = *((_QWORD *)v100 + 1);
  v103 = v100[16];
  swift_retain();
  swift_retain();
  KeyValueObservationTrigger.keyPath.getter(v101, v102);
  *(_QWORD *)v99 = v101;
  *((_QWORD *)v99 + 1) = v102;
  v99[16] = v103;
  v104 = v33[9];
  v105 = v33[10];
  v106 = &a1[v104];
  v107 = (uint64_t *)&v35[v104];
  v108 = *v107;
  v109 = v107[1];
  *(_QWORD *)v106 = v108;
  *((_QWORD *)v106 + 1) = v109;
  v110 = &a1[v105];
  v111 = (uint64_t *)&v35[v105];
  v113 = *v111;
  v112 = v111[1];
  *(_QWORD *)v110 = v113;
  *((_QWORD *)v110 + 1) = v112;
  v114 = v33[11];
  v115 = v33[12];
  v116 = &a1[v114];
  v117 = (uint64_t *)&v35[v114];
  v119 = *v117;
  v118 = v117[1];
  *(_QWORD *)v116 = v119;
  *((_QWORD *)v116 + 1) = v118;
  v120 = &a1[v115];
  v121 = *(_QWORD *)&v35[v115];
  v122 = *(_QWORD *)&v35[v115 + 8];
  LOBYTE(v99) = v35[v115 + 16];
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000A410C(v121, v122, (char)v99);
  *(_QWORD *)v120 = v121;
  *((_QWORD *)v120 + 1) = v122;
  v120[16] = (char)v99;
  v123 = v33[13];
  v124 = &a1[v123];
  v125 = &v35[v123];
  v126 = *(_QWORD *)v125;
  v127 = *((_QWORD *)v125 + 1);
  LOBYTE(v121) = v125[16];
  sub_1000A411C(*(_QWORD *)v125, v127, v121);
  *(_QWORD *)v124 = v126;
  *((_QWORD *)v124 + 1) = v127;
  v124[16] = v121;
  v128 = v33[14];
  v129 = &a1[v128];
  v130 = &v35[v128];
  v131 = *(id *)v130;
  LOBYTE(v127) = v130[8];
  sub_1000A4100(*(id *)v130, v127);
  *(_QWORD *)v129 = v131;
  v129[8] = v127;
  v132 = v33[15];
  v133 = &a1[v132];
  v134 = &v35[v132];
  v135 = *(_QWORD *)v134;
  v136 = *((_QWORD *)v134 + 1);
  LOBYTE(v129) = v134[16];
  KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)v134, v136);
  *(_QWORD *)v133 = v135;
  *((_QWORD *)v133 + 1) = v136;
  v133[16] = (char)v129;
  v137 = v33[16];
  v138 = &a1[v137];
  v139 = &v35[v137];
  v140 = sub_100007E8C(&qword_10119F4E0);
  if (swift_getEnumCaseMultiPayload(v139, v140) == 1)
  {
    v141 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v141 - 8) + 16))(v138, v139, v141);
    v142 = 1;
  }
  else
  {
    *(_QWORD *)v138 = *(_QWORD *)v139;
    swift_retain();
    v142 = 0;
  }
  swift_storeEnumTagMultiPayload(v138, v140, v142);
  v143 = v33[17];
  v144 = &a1[v143];
  v145 = &v35[v143];
  v146 = sub_100007E8C(qword_1011C9550);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v146 - 8) + 16))(v144, v145, v146);
  v147 = v33[18];
  v148 = &a1[v147];
  v149 = &v35[v147];
  v150 = *((_QWORD *)v149 + 1);
  *(_QWORD *)v148 = *(_QWORD *)v149;
  *((_QWORD *)v148 + 1) = v150;
  swift_retain();
  return a1;
}

char *sub_1007F1840(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t, uint64_t);
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  size_t v40;
  void *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(void *, uint64_t, uint64_t);
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(uint64_t, uint64_t, uint64_t);
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  size_t v67;
  void *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t (*v76)(void *, uint64_t, uint64_t);
  int v77;
  int v78;
  uint64_t v79;
  void **v80;
  char *v81;
  void *v82;
  void *v83;
  id v84;
  int *v85;
  uint64_t v86;
  char *v87;
  char *v88;
  int v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void **v100;
  char *v101;
  void *v102;
  void *v103;
  id v104;
  uint64_t v105;
  char *v106;
  char *v107;
  int v108;
  int v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  id v120;
  char v121;
  void *v122;
  char v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  char v152;
  uint64_t v153;
  uint64_t v154;
  char v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  unint64_t v160;
  char v161;
  uint64_t v162;
  unint64_t v163;
  char v164;
  uint64_t v165;
  char *v166;
  char *v167;
  id v168;
  void *v169;
  char v170;
  uint64_t v171;
  char *v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  char v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  char *v191;
  int *v193;
  uint64_t v194;
  uint64_t (*v195)(char *, uint64_t, uint64_t);
  uint64_t v196;

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v195 = v8;
  v196 = v6;
  v10 = v8(a2, 1, v6);
  v193 = a3;
  v194 = v7;
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = (int *)type metadata accessor for LiveRadio(0);
  v13 = v12[5];
  v14 = &a1[v13];
  v15 = &a2[v13];
  *(_QWORD *)v14 = *(_QWORD *)&a2[v13];
  *((_QWORD *)v14 + 1) = *(_QWORD *)&a2[v13 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v14 + 2) = *((_QWORD *)v15 + 2);
  *((_QWORD *)v14 + 3) = *((_QWORD *)v15 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = v12[6];
  v17 = &a1[v16];
  v18 = &a2[v16];
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = v12[7];
  v20 = &a1[v19];
  v21 = &a2[v19];
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = v12[8];
  v23 = &a1[v22];
  v24 = &a2[v22];
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *((_QWORD *)v23 + 1) = *((_QWORD *)v24 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v25 = v12[9];
  v26 = (uint64_t)&a1[v25];
  v27 = &a2[v25];
  v28 = type metadata accessor for ArtworkImage.ViewModel(0);
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 48);
  v31 = v30(v26, 1, v28);
  v32 = v30((uint64_t)v27, 1, v28);
  if (!v31)
  {
    if (!v32)
    {
      v43 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 24))(v26, v27, v43);
      v44 = *(int *)(v28 + 20);
      v45 = (void *)(v26 + v44);
      v46 = &v27[v44];
      v47 = type metadata accessor for Artwork.CropStyle(0);
      v48 = *(_QWORD *)(v47 - 8);
      v49 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v48 + 48);
      v50 = v49(v45, 1, v47);
      v51 = v49(v46, 1, v47);
      if (v50)
      {
        if (!v51)
        {
          (*(void (**)(void *, char *, uint64_t))(v48 + 16))(v45, v46, v47);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
          goto LABEL_21;
        }
      }
      else
      {
        if (!v51)
        {
          (*(void (**)(void *, char *, uint64_t))(v48 + 24))(v45, v46, v47);
          goto LABEL_21;
        }
        (*(void (**)(void *, uint64_t))(v48 + 8))(v45, v47);
      }
      v40 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v41 = v45;
      v42 = v46;
LABEL_14:
      memcpy(v41, v42, v40);
      goto LABEL_21;
    }
    sub_10005B748(v26, type metadata accessor for ArtworkImage.ViewModel);
LABEL_13:
    v40 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v41 = (void *)v26;
    v42 = v27;
    goto LABEL_14;
  }
  if (v32)
    goto LABEL_13;
  v33 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v26, v27, v33);
  v34 = *(int *)(v28 + 20);
  v35 = (void *)(v26 + v34);
  v36 = &v27[v34];
  v37 = type metadata accessor for Artwork.CropStyle(0);
  v38 = *(_QWORD *)(v37 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
  {
    v39 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v38 + 16))(v35, v36, v37);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
LABEL_21:
  v52 = v12[10];
  v53 = (uint64_t)&a1[v52];
  v54 = &a2[v52];
  v55 = type metadata accessor for MotionViewModel(0);
  v56 = *(_QWORD *)(v55 - 8);
  v57 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v56 + 48);
  v58 = v57(v53, 1, v55);
  v59 = v57((uint64_t)v54, 1, v55);
  if (!v58)
  {
    if (!v59)
    {
      v70 = type metadata accessor for VideoArtwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 24))(v53, v54, v70);
      v71 = *(int *)(v55 + 20);
      v72 = (void *)(v53 + v71);
      v73 = &v54[v71];
      v74 = type metadata accessor for Artwork.CropStyle(0);
      v75 = *(_QWORD *)(v74 - 8);
      v76 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v75 + 48);
      v77 = v76(v72, 1, v74);
      v78 = v76(v73, 1, v74);
      if (v77)
      {
        if (!v78)
        {
          (*(void (**)(void *, char *, uint64_t))(v75 + 16))(v72, v73, v74);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
          goto LABEL_34;
        }
      }
      else
      {
        if (!v78)
        {
          (*(void (**)(void *, char *, uint64_t))(v75 + 24))(v72, v73, v74);
          goto LABEL_34;
        }
        (*(void (**)(void *, uint64_t))(v75 + 8))(v72, v74);
      }
      v67 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v68 = v72;
      v69 = v73;
LABEL_28:
      memcpy(v68, v69, v67);
      goto LABEL_34;
    }
    sub_10005B748(v53, type metadata accessor for MotionViewModel);
LABEL_27:
    v67 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011AA8D0) - 8) + 64);
    v68 = (void *)v53;
    v69 = v54;
    goto LABEL_28;
  }
  if (v59)
    goto LABEL_27;
  v60 = type metadata accessor for VideoArtwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 16))(v53, v54, v60);
  v61 = *(int *)(v55 + 20);
  v62 = (void *)(v53 + v61);
  v63 = &v54[v61];
  v64 = type metadata accessor for Artwork.CropStyle(0);
  v65 = *(_QWORD *)(v64 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v63, 1, v64))
  {
    v66 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v65 + 16))(v62, v63, v64);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
LABEL_34:
  v79 = v12[11];
  v80 = (void **)&a1[v79];
  v81 = &a2[v79];
  v82 = *(void **)&a2[v79];
  v83 = *v80;
  *v80 = v82;
  v84 = v82;

  v85 = (int *)type metadata accessor for SegueContext(0);
  v86 = v85[5];
  v87 = (char *)v80 + v86;
  v88 = &v81[v86];
  v89 = v195((char *)v80 + v86, 1, v196);
  v90 = v195(v88, 1, v196);
  if (v89)
  {
    if (!v90)
    {
      (*(void (**)(char *, char *, uint64_t))(v194 + 16))(v87, v88, v196);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v194 + 56))(v87, 0, 1, v196);
      goto LABEL_40;
    }
    goto LABEL_39;
  }
  if (v90)
  {
    (*(void (**)(char *, uint64_t))(v194 + 8))(v87, v196);
LABEL_39:
    v91 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
    goto LABEL_40;
  }
  (*(void (**)(char *, char *, uint64_t))(v194 + 24))(v87, v88, v196);
LABEL_40:
  *((_BYTE *)v80 + v85[6]) = v81[v85[6]];
  v92 = v85[7];
  v93 = (void **)((char *)v80 + v92);
  v94 = &v81[v92];
  v95 = *(uint64_t *)((char *)v80 + v92);
  v96 = *(_QWORD *)v94;
  if (v95)
  {
    if (v96)
    {
      v97 = *((_QWORD *)v94 + 1);
      *v93 = v96;
      v93[1] = v97;
      swift_retain();
      swift_release();
      goto LABEL_47;
    }
    swift_release();
  }
  else if (v96)
  {
    v98 = *((_QWORD *)v94 + 1);
    *v93 = v96;
    v93[1] = v98;
    swift_retain();
    goto LABEL_47;
  }
  *(_OWORD *)v93 = *(_OWORD *)v94;
LABEL_47:
  v99 = v12[12];
  v100 = (void **)&a1[v99];
  v101 = &a2[v99];
  v102 = *(void **)&a2[v99];
  v103 = *v100;
  *v100 = v102;
  v104 = v102;

  v105 = v85[5];
  v106 = (char *)v100 + v105;
  v107 = &v101[v105];
  v108 = v195((char *)v100 + v105, 1, v196);
  v109 = v195(v107, 1, v196);
  if (v108)
  {
    if (!v109)
    {
      (*(void (**)(char *, char *, uint64_t))(v194 + 16))(v106, v107, v196);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v194 + 56))(v106, 0, 1, v196);
      goto LABEL_53;
    }
    goto LABEL_52;
  }
  if (v109)
  {
    (*(void (**)(char *, uint64_t))(v194 + 8))(v106, v196);
LABEL_52:
    v110 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
    goto LABEL_53;
  }
  (*(void (**)(char *, char *, uint64_t))(v194 + 24))(v106, v107, v196);
LABEL_53:
  *((_BYTE *)v100 + v85[6]) = v101[v85[6]];
  v111 = v85[7];
  v112 = (void **)((char *)v100 + v111);
  v113 = &v101[v111];
  v114 = *(_QWORD *)&v101[v111];
  if (*v112)
  {
    if (v114)
    {
      v115 = *((_QWORD *)v113 + 1);
      *v112 = v114;
      v112[1] = v115;
      swift_retain();
      swift_release();
      goto LABEL_60;
    }
    swift_release();
  }
  else if (v114)
  {
    v116 = *((_QWORD *)v113 + 1);
    *v112 = v114;
    v112[1] = v116;
    swift_retain();
    goto LABEL_60;
  }
  *(_OWORD *)v112 = *(_OWORD *)v113;
LABEL_60:
  v117 = v193[5];
  v118 = &a1[v117];
  v119 = &a2[v117];
  v120 = *(id *)v119;
  v121 = v119[8];
  sub_1000A4100(*(id *)v119, v121);
  v122 = *(void **)v118;
  v123 = v118[8];
  *(_QWORD *)v118 = v120;
  v118[8] = v121;
  sub_1000A4224(v122, v123);
  v124 = v193[6];
  v125 = &a1[v124];
  v126 = &a2[v124];
  *(_QWORD *)&a1[v124] = *(_QWORD *)&a2[v124];
  swift_retain();
  swift_release();
  *((_QWORD *)v125 + 1) = *((_QWORD *)v126 + 1);
  v127 = v193[7];
  v128 = &a1[v127];
  v129 = &a2[v127];
  *(_QWORD *)&a1[v127] = *(_QWORD *)&a2[v127];
  swift_retain();
  swift_release();
  *((_QWORD *)v128 + 1) = *((_QWORD *)v129 + 1);
  v130 = v193[8];
  v131 = &a1[v130];
  v132 = &a2[v130];
  v133 = *(_QWORD *)v132;
  v134 = *((_QWORD *)v132 + 1);
  v135 = v132[16];
  KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)v132, v134);
  v136 = *(_QWORD *)v131;
  v137 = *((_QWORD *)v131 + 1);
  *(_QWORD *)v131 = v133;
  *((_QWORD *)v131 + 1) = v134;
  v131[16] = v135;
  sub_1000A6174(v136, v137);
  v138 = v193[9];
  v139 = &a1[v138];
  v140 = &a2[v138];
  *(_QWORD *)&a1[v138] = *(_QWORD *)&a2[v138];
  swift_retain();
  swift_release();
  *((_QWORD *)v139 + 1) = *((_QWORD *)v140 + 1);
  v141 = v193[10];
  v142 = &a1[v141];
  v143 = &a2[v141];
  *(_QWORD *)&a1[v141] = *(_QWORD *)&a2[v141];
  swift_retain();
  swift_release();
  *((_QWORD *)v142 + 1) = *((_QWORD *)v143 + 1);
  v144 = v193[11];
  v145 = &a1[v144];
  v146 = &a2[v144];
  *(_QWORD *)&a1[v144] = *(_QWORD *)&a2[v144];
  swift_retain();
  swift_release();
  *((_QWORD *)v145 + 1) = *((_QWORD *)v146 + 1);
  v147 = v193[12];
  v148 = &a1[v147];
  v149 = &a2[v147];
  v150 = *(_QWORD *)v149;
  v151 = *((_QWORD *)v149 + 1);
  v152 = v149[16];
  sub_1000A410C(*(_QWORD *)v149, v151, v152);
  v153 = *(_QWORD *)v148;
  v154 = *((_QWORD *)v148 + 1);
  v155 = v148[16];
  *(_QWORD *)v148 = v150;
  *((_QWORD *)v148 + 1) = v151;
  v148[16] = v152;
  sub_1000A4230(v153, v154, v155);
  v156 = v193[13];
  v157 = &a1[v156];
  v158 = &a2[v156];
  v159 = *(_QWORD *)v158;
  v160 = *((_QWORD *)v158 + 1);
  v161 = v158[16];
  sub_1000A411C(*(_QWORD *)v158, v160, v161);
  v162 = *(_QWORD *)v157;
  v163 = *((_QWORD *)v157 + 1);
  v164 = v157[16];
  *(_QWORD *)v157 = v159;
  *((_QWORD *)v157 + 1) = v160;
  v157[16] = v161;
  sub_1000A4240(v162, v163, v164);
  v165 = v193[14];
  v166 = &a1[v165];
  v167 = &a2[v165];
  v168 = *(id *)v167;
  LOBYTE(v160) = v167[8];
  sub_1000A4100(*(id *)v167, v160);
  v169 = *(void **)v166;
  v170 = v166[8];
  *(_QWORD *)v166 = v168;
  v166[8] = v160;
  sub_1000A4224(v169, v170);
  v171 = v193[15];
  v172 = &a1[v171];
  v173 = &a2[v171];
  v174 = *(_QWORD *)v173;
  v175 = *((_QWORD *)v173 + 1);
  v176 = v173[16];
  KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)v173, v175);
  v177 = *(_QWORD *)v172;
  v178 = *((_QWORD *)v172 + 1);
  *(_QWORD *)v172 = v174;
  *((_QWORD *)v172 + 1) = v175;
  v172[16] = v176;
  sub_1000A6174(v177, v178);
  if (a1 != a2)
  {
    v179 = v193[16];
    v180 = &a1[v179];
    v181 = &a2[v179];
    sub_10004FF60((uint64_t)&a1[v179], &qword_10119F4E0);
    v182 = sub_100007E8C(&qword_10119F4E0);
    if (swift_getEnumCaseMultiPayload(v181, v182) == 1)
    {
      v183 = type metadata accessor for OpenURLAction(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v183 - 8) + 16))(v180, v181, v183);
      v184 = 1;
    }
    else
    {
      *(_QWORD *)v180 = *(_QWORD *)v181;
      swift_retain();
      v184 = 0;
    }
    swift_storeEnumTagMultiPayload(v180, v182, v184);
  }
  v185 = v193[17];
  v186 = &a1[v185];
  v187 = &a2[v185];
  v188 = sub_100007E8C(qword_1011C9550);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v188 - 8) + 24))(v186, v187, v188);
  v189 = v193[18];
  v190 = &a1[v189];
  v191 = &a2[v189];
  *(_QWORD *)v190 = *(_QWORD *)v191;
  *((_QWORD *)v190 + 1) = *((_QWORD *)v191 + 1);
  swift_retain();
  swift_release();
  return a1;
}

char *sub_1007F2440(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  __int128 v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  int *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  char *__dst;
  char *__dsta;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unsigned int (*v98)(char *, uint64_t, uint64_t);

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v98 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v97 = v7;
  if (v98(a2, 1, v6))
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = (int *)type metadata accessor for LiveRadio(0);
  v10 = v9[5];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = *((_OWORD *)v12 + 1);
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v13;
  *(_OWORD *)&a1[v9[6]] = *(_OWORD *)&a2[v9[6]];
  *(_OWORD *)&a1[v9[7]] = *(_OWORD *)&a2[v9[7]];
  *(_OWORD *)&a1[v9[8]] = *(_OWORD *)&a2[v9[8]];
  v14 = v9[9];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = type metadata accessor for ArtworkImage.ViewModel(0);
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    v19 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v95 = v6;
    v20 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v15, v16, v20);
    v21 = *(int *)(v17 + 20);
    __dst = &v15[v21];
    v22 = &v16[v21];
    v23 = type metadata accessor for Artwork.CropStyle(0);
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      v25 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(__dst, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(__dst, v22, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(__dst, 0, 1, v23);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    v6 = v95;
  }
  v26 = v9[10];
  v27 = &a1[v26];
  v28 = &a2[v26];
  v29 = type metadata accessor for MotionViewModel(0);
  v30 = *(_QWORD *)(v29 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
  {
    v31 = sub_100007E8C(&qword_1011AA8D0);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    v96 = v6;
    v32 = type metadata accessor for VideoArtwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v27, v28, v32);
    v33 = *(int *)(v29 + 20);
    __dsta = &v27[v33];
    v34 = &v28[v33];
    v35 = type metadata accessor for Artwork.CropStyle(0);
    v36 = *(_QWORD *)(v35 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
    {
      v37 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(__dsta, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 32))(__dsta, v34, v35);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(__dsta, 0, 1, v35);
    }
    v6 = v96;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
  }
  v38 = v9[11];
  v39 = &a1[v38];
  v40 = &a2[v38];
  *(_QWORD *)&a1[v38] = *(_QWORD *)&a2[v38];
  v41 = (int *)type metadata accessor for SegueContext(0);
  v42 = v41[5];
  v43 = &v39[v42];
  v44 = &v40[v42];
  if (v98(&v40[v42], 1, v6))
  {
    v45 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v97 + 32))(v43, v44, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v43, 0, 1, v6);
  }
  v39[v41[6]] = v40[v41[6]];
  v46 = v41[7];
  v47 = &v39[v46];
  v48 = &v40[v46];
  v49 = *(_QWORD *)v48;
  if (*(_QWORD *)v48)
  {
    v50 = *((_QWORD *)v48 + 1);
    *(_QWORD *)v47 = v49;
    *((_QWORD *)v47 + 1) = v50;
  }
  else
  {
    *(_OWORD *)v47 = *(_OWORD *)v48;
  }
  v51 = v9[12];
  v52 = &a1[v51];
  v53 = &a2[v51];
  *(_QWORD *)v52 = *(_QWORD *)&a2[v51];
  v54 = v41[5];
  v55 = &v52[v54];
  v56 = &v53[v54];
  if (v98(&v53[v54], 1, v6))
  {
    v57 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v97 + 32))(v55, v56, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v55, 0, 1, v6);
  }
  v52[v41[6]] = v53[v41[6]];
  v58 = v41[7];
  v59 = &v52[v58];
  v60 = &v53[v58];
  v61 = *(_QWORD *)v60;
  if (*(_QWORD *)v60)
  {
    v62 = *((_QWORD *)v60 + 1);
    *(_QWORD *)v59 = v61;
    *((_QWORD *)v59 + 1) = v62;
  }
  else
  {
    *(_OWORD *)v59 = *(_OWORD *)v60;
  }
  v63 = a3[5];
  v64 = a3[6];
  v65 = &a1[v63];
  v66 = &a2[v63];
  *(_QWORD *)v65 = *(_QWORD *)v66;
  v65[8] = v66[8];
  *(_OWORD *)&a1[v64] = *(_OWORD *)&a2[v64];
  v67 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  v68 = &a1[v67];
  v69 = &a2[v67];
  *(_OWORD *)v68 = *(_OWORD *)v69;
  v68[16] = v69[16];
  v70 = a3[10];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  *(_OWORD *)&a1[v70] = *(_OWORD *)&a2[v70];
  v71 = a3[12];
  *(_OWORD *)&a1[a3[11]] = *(_OWORD *)&a2[a3[11]];
  v72 = &a1[v71];
  v73 = &a2[v71];
  v72[16] = v73[16];
  *(_OWORD *)v72 = *(_OWORD *)v73;
  v74 = a3[13];
  v75 = a3[14];
  v76 = &a1[v74];
  v77 = &a2[v74];
  v76[16] = v77[16];
  *(_OWORD *)v76 = *(_OWORD *)v77;
  v78 = &a1[v75];
  v79 = &a2[v75];
  v78[8] = v79[8];
  *(_QWORD *)v78 = *(_QWORD *)v79;
  v80 = a3[15];
  v81 = a3[16];
  v82 = &a1[v80];
  v83 = &a2[v80];
  v82[16] = v83[16];
  v84 = &a1[v81];
  v85 = &a2[v81];
  *(_OWORD *)v82 = *(_OWORD *)v83;
  v86 = sub_100007E8C(&qword_10119F4E0);
  if (swift_getEnumCaseMultiPayload(v85, v86) == 1)
  {
    v87 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 32))(v84, v85, v87);
    swift_storeEnumTagMultiPayload(v84, v86, 1);
  }
  else
  {
    memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
  }
  v88 = a3[17];
  v89 = &a1[v88];
  v90 = &a2[v88];
  v91 = sub_100007E8C(qword_1011C9550);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v91 - 8) + 32))(v89, v90, v91);
  *(_OWORD *)&a1[a3[18]] = *(_OWORD *)&a2[a3[18]];
  return a1;
}

char *sub_1007F2AB0(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t, uint64_t);
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  size_t v48;
  void *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(void *, uint64_t, uint64_t);
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(uint64_t, uint64_t, uint64_t);
  int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  size_t v75;
  void *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t (*v84)(void *, uint64_t, uint64_t);
  int v85;
  int v86;
  uint64_t v87;
  char *v88;
  char *v89;
  void *v90;
  int *v91;
  uint64_t v92;
  char *v93;
  char *v94;
  int v95;
  int v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  void *v108;
  uint64_t v109;
  char *v110;
  char *v111;
  int v112;
  int v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  void *v125;
  char v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  char *v134;
  char *v135;
  char v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  char *v146;
  char *v147;
  uint64_t v148;
  char *v149;
  char *v150;
  char v151;
  uint64_t v152;
  uint64_t v153;
  char v154;
  uint64_t v155;
  char *v156;
  char *v157;
  char v158;
  uint64_t v159;
  unint64_t v160;
  char v161;
  uint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  void *v166;
  char v167;
  uint64_t v168;
  char *v169;
  char *v170;
  char v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  char *v185;
  int *v187;
  uint64_t v188;
  uint64_t (*v189)(char *, uint64_t, uint64_t);
  uint64_t v190;

  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v189 = v8;
  v190 = v6;
  v10 = v8(a2, 1, v6);
  v188 = v7;
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = (int *)type metadata accessor for LiveRadio(0);
  v13 = v12[5];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = *(_QWORD *)&a2[v13 + 8];
  *(_QWORD *)v14 = *(_QWORD *)&a2[v13];
  *((_QWORD *)v14 + 1) = v16;
  swift_bridgeObjectRelease();
  v17 = *((_QWORD *)v15 + 3);
  *((_QWORD *)v14 + 2) = *((_QWORD *)v15 + 2);
  *((_QWORD *)v14 + 3) = v17;
  swift_bridgeObjectRelease();
  v18 = v12[6];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v22 = *(_QWORD *)v20;
  v21 = *((_QWORD *)v20 + 1);
  *(_QWORD *)v19 = v22;
  *((_QWORD *)v19 + 1) = v21;
  swift_bridgeObjectRelease();
  v23 = v12[7];
  v24 = &a1[v23];
  v25 = &a2[v23];
  v27 = *(_QWORD *)v25;
  v26 = *((_QWORD *)v25 + 1);
  *(_QWORD *)v24 = v27;
  *((_QWORD *)v24 + 1) = v26;
  swift_bridgeObjectRelease();
  v28 = v12[8];
  v29 = &a1[v28];
  v30 = &a2[v28];
  v32 = *(_QWORD *)v30;
  v31 = *((_QWORD *)v30 + 1);
  *(_QWORD *)v29 = v32;
  *((_QWORD *)v29 + 1) = v31;
  swift_bridgeObjectRelease();
  v33 = v12[9];
  v34 = (uint64_t)&a1[v33];
  v35 = &a2[v33];
  v36 = type metadata accessor for ArtworkImage.ViewModel(0);
  v37 = *(_QWORD *)(v36 - 8);
  v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v37 + 48);
  v39 = v38(v34, 1, v36);
  v40 = v38((uint64_t)v35, 1, v36);
  v187 = a3;
  if (!v39)
  {
    if (!v40)
    {
      v51 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 40))(v34, v35, v51);
      v52 = *(int *)(v36 + 20);
      v53 = (void *)(v34 + v52);
      v54 = &v35[v52];
      v55 = type metadata accessor for Artwork.CropStyle(0);
      v56 = *(_QWORD *)(v55 - 8);
      v57 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v56 + 48);
      v58 = v57(v53, 1, v55);
      v59 = v57(v54, 1, v55);
      if (v58)
      {
        if (!v59)
        {
          (*(void (**)(void *, char *, uint64_t))(v56 + 32))(v53, v54, v55);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
          goto LABEL_21;
        }
      }
      else
      {
        if (!v59)
        {
          (*(void (**)(void *, char *, uint64_t))(v56 + 40))(v53, v54, v55);
          goto LABEL_21;
        }
        (*(void (**)(void *, uint64_t))(v56 + 8))(v53, v55);
      }
      v48 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v49 = v53;
      v50 = v54;
LABEL_14:
      memcpy(v49, v50, v48);
      goto LABEL_21;
    }
    sub_10005B748(v34, type metadata accessor for ArtworkImage.ViewModel);
LABEL_13:
    v48 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v49 = (void *)v34;
    v50 = v35;
    goto LABEL_14;
  }
  if (v40)
    goto LABEL_13;
  v41 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v34, v35, v41);
  v42 = *(int *)(v36 + 20);
  v43 = (void *)(v34 + v42);
  v44 = &v35[v42];
  v45 = type metadata accessor for Artwork.CropStyle(0);
  v46 = *(_QWORD *)(v45 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
  {
    v47 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v46 + 32))(v43, v44, v45);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
LABEL_21:
  v60 = v12[10];
  v61 = (uint64_t)&a1[v60];
  v62 = &a2[v60];
  v63 = type metadata accessor for MotionViewModel(0);
  v64 = *(_QWORD *)(v63 - 8);
  v65 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v64 + 48);
  v66 = v65(v61, 1, v63);
  v67 = v65((uint64_t)v62, 1, v63);
  if (!v66)
  {
    if (!v67)
    {
      v78 = type metadata accessor for VideoArtwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v78 - 8) + 40))(v61, v62, v78);
      v79 = *(int *)(v63 + 20);
      v80 = (void *)(v61 + v79);
      v81 = &v62[v79];
      v82 = type metadata accessor for Artwork.CropStyle(0);
      v83 = *(_QWORD *)(v82 - 8);
      v84 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v83 + 48);
      v85 = v84(v80, 1, v82);
      v86 = v84(v81, 1, v82);
      if (v85)
      {
        if (!v86)
        {
          (*(void (**)(void *, char *, uint64_t))(v83 + 32))(v80, v81, v82);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v80, 0, 1, v82);
          goto LABEL_34;
        }
      }
      else
      {
        if (!v86)
        {
          (*(void (**)(void *, char *, uint64_t))(v83 + 40))(v80, v81, v82);
          goto LABEL_34;
        }
        (*(void (**)(void *, uint64_t))(v83 + 8))(v80, v82);
      }
      v75 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v76 = v80;
      v77 = v81;
LABEL_28:
      memcpy(v76, v77, v75);
      goto LABEL_34;
    }
    sub_10005B748(v61, type metadata accessor for MotionViewModel);
LABEL_27:
    v75 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011AA8D0) - 8) + 64);
    v76 = (void *)v61;
    v77 = v62;
    goto LABEL_28;
  }
  if (v67)
    goto LABEL_27;
  v68 = type metadata accessor for VideoArtwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 32))(v61, v62, v68);
  v69 = *(int *)(v63 + 20);
  v70 = (void *)(v61 + v69);
  v71 = &v62[v69];
  v72 = type metadata accessor for Artwork.CropStyle(0);
  v73 = *(_QWORD *)(v72 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v71, 1, v72))
  {
    v74 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v73 + 32))(v70, v71, v72);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v70, 0, 1, v72);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
LABEL_34:
  v87 = v12[11];
  v88 = &a1[v87];
  v89 = &a2[v87];
  v90 = *(void **)&a1[v87];
  *(_QWORD *)&a1[v87] = *(_QWORD *)&a2[v87];

  v91 = (int *)type metadata accessor for SegueContext(0);
  v92 = v91[5];
  v93 = &v88[v92];
  v94 = &v89[v92];
  v95 = v189(&v88[v92], 1, v190);
  v96 = v189(v94, 1, v190);
  if (v95)
  {
    if (!v96)
    {
      (*(void (**)(char *, char *, uint64_t))(v188 + 32))(v93, v94, v190);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v188 + 56))(v93, 0, 1, v190);
      goto LABEL_40;
    }
    goto LABEL_39;
  }
  if (v96)
  {
    (*(void (**)(char *, uint64_t))(v188 + 8))(v93, v190);
LABEL_39:
    v97 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v93, v94, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
    goto LABEL_40;
  }
  (*(void (**)(char *, char *, uint64_t))(v188 + 40))(v93, v94, v190);
LABEL_40:
  v88[v91[6]] = v89[v91[6]];
  v98 = v91[7];
  v99 = &v88[v98];
  v100 = &v89[v98];
  v101 = *(_QWORD *)&v88[v98];
  v102 = *(_QWORD *)v100;
  if (v101)
  {
    if (v102)
    {
      v103 = *((_QWORD *)v100 + 1);
      *(_QWORD *)v99 = v102;
      *((_QWORD *)v99 + 1) = v103;
      swift_release();
      goto LABEL_47;
    }
    swift_release();
  }
  else if (v102)
  {
    v104 = *((_QWORD *)v100 + 1);
    *(_QWORD *)v99 = v102;
    *((_QWORD *)v99 + 1) = v104;
    goto LABEL_47;
  }
  *(_OWORD *)v99 = *(_OWORD *)v100;
LABEL_47:
  v105 = v12[12];
  v106 = &a1[v105];
  v107 = &a2[v105];
  v108 = *(void **)&a1[v105];
  *(_QWORD *)&a1[v105] = *(_QWORD *)&a2[v105];

  v109 = v91[5];
  v110 = &v106[v109];
  v111 = &v107[v109];
  v112 = v189(&v106[v109], 1, v190);
  v113 = v189(v111, 1, v190);
  if (v112)
  {
    if (!v113)
    {
      (*(void (**)(char *, char *, uint64_t))(v188 + 32))(v110, v111, v190);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v188 + 56))(v110, 0, 1, v190);
      goto LABEL_53;
    }
    goto LABEL_52;
  }
  if (v113)
  {
    (*(void (**)(char *, uint64_t))(v188 + 8))(v110, v190);
LABEL_52:
    v114 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v110, v111, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
    goto LABEL_53;
  }
  (*(void (**)(char *, char *, uint64_t))(v188 + 40))(v110, v111, v190);
LABEL_53:
  v106[v91[6]] = v107[v91[6]];
  v115 = v91[7];
  v116 = &v106[v115];
  v117 = &v107[v115];
  v118 = *(_QWORD *)&v107[v115];
  if (*(_QWORD *)v116)
  {
    if (v118)
    {
      v119 = *((_QWORD *)v117 + 1);
      *(_QWORD *)v116 = v118;
      *((_QWORD *)v116 + 1) = v119;
      swift_release();
      goto LABEL_60;
    }
    swift_release();
  }
  else if (v118)
  {
    v120 = *((_QWORD *)v117 + 1);
    *(_QWORD *)v116 = v118;
    *((_QWORD *)v116 + 1) = v120;
    goto LABEL_60;
  }
  *(_OWORD *)v116 = *(_OWORD *)v117;
LABEL_60:
  v121 = v187[5];
  v122 = &a1[v121];
  v123 = &a2[v121];
  v124 = *(_QWORD *)v123;
  LOBYTE(v123) = v123[8];
  v125 = *(void **)v122;
  v126 = v122[8];
  *(_QWORD *)v122 = v124;
  v122[8] = (char)v123;
  sub_1000A4224(v125, v126);
  v127 = v187[6];
  v128 = &a1[v127];
  v129 = &a2[v127];
  *(_QWORD *)&a1[v127] = *(_QWORD *)&a2[v127];
  swift_release();
  *((_QWORD *)v128 + 1) = *((_QWORD *)v129 + 1);
  v130 = v187[7];
  v131 = &a1[v130];
  v132 = &a2[v130];
  *(_QWORD *)&a1[v130] = *(_QWORD *)&a2[v130];
  swift_release();
  *((_QWORD *)v131 + 1) = *((_QWORD *)v132 + 1);
  v133 = v187[8];
  v134 = &a1[v133];
  v135 = &a2[v133];
  v136 = v135[16];
  v137 = *(_QWORD *)v134;
  v138 = *((_QWORD *)v134 + 1);
  *(_OWORD *)v134 = *(_OWORD *)v135;
  v134[16] = v136;
  sub_1000A6174(v137, v138);
  v139 = v187[9];
  v140 = &a1[v139];
  v141 = &a2[v139];
  *(_QWORD *)&a1[v139] = *(_QWORD *)&a2[v139];
  swift_release();
  *((_QWORD *)v140 + 1) = *((_QWORD *)v141 + 1);
  v142 = v187[10];
  v143 = &a1[v142];
  v144 = &a2[v142];
  *(_QWORD *)&a1[v142] = *(_QWORD *)&a2[v142];
  swift_release();
  *((_QWORD *)v143 + 1) = *((_QWORD *)v144 + 1);
  v145 = v187[11];
  v146 = &a1[v145];
  v147 = &a2[v145];
  *(_QWORD *)&a1[v145] = *(_QWORD *)&a2[v145];
  swift_release();
  *((_QWORD *)v146 + 1) = *((_QWORD *)v147 + 1);
  v148 = v187[12];
  v149 = &a1[v148];
  v150 = &a2[v148];
  v151 = v150[16];
  v152 = *(_QWORD *)v149;
  v153 = *((_QWORD *)v149 + 1);
  v154 = v149[16];
  *(_OWORD *)v149 = *(_OWORD *)v150;
  v149[16] = v151;
  sub_1000A4230(v152, v153, v154);
  v155 = v187[13];
  v156 = &a1[v155];
  v157 = &a2[v155];
  v158 = v157[16];
  v159 = *(_QWORD *)v156;
  v160 = *((_QWORD *)v156 + 1);
  v161 = v156[16];
  *(_OWORD *)v156 = *(_OWORD *)v157;
  v156[16] = v158;
  sub_1000A4240(v159, v160, v161);
  v162 = v187[14];
  v163 = &a1[v162];
  v164 = &a2[v162];
  v165 = *(_QWORD *)v164;
  LOBYTE(v164) = v164[8];
  v166 = *(void **)v163;
  v167 = v163[8];
  *(_QWORD *)v163 = v165;
  v163[8] = (char)v164;
  sub_1000A4224(v166, v167);
  v168 = v187[15];
  v169 = &a1[v168];
  v170 = &a2[v168];
  v171 = v170[16];
  v172 = *(_QWORD *)v169;
  v173 = *((_QWORD *)v169 + 1);
  *(_OWORD *)v169 = *(_OWORD *)v170;
  v169[16] = v171;
  sub_1000A6174(v172, v173);
  if (a1 != a2)
  {
    v174 = v187[16];
    v175 = &a1[v174];
    v176 = &a2[v174];
    sub_10004FF60((uint64_t)&a1[v174], &qword_10119F4E0);
    v177 = sub_100007E8C(&qword_10119F4E0);
    if (swift_getEnumCaseMultiPayload(v176, v177) == 1)
    {
      v178 = type metadata accessor for OpenURLAction(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v178 - 8) + 32))(v175, v176, v178);
      swift_storeEnumTagMultiPayload(v175, v177, 1);
    }
    else
    {
      memcpy(v175, v176, *(_QWORD *)(*(_QWORD *)(v177 - 8) + 64));
    }
  }
  v179 = v187[17];
  v180 = &a1[v179];
  v181 = &a2[v179];
  v182 = sub_100007E8C(qword_1011C9550);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v182 - 8) + 40))(v180, v181, v182);
  v183 = v187[18];
  v184 = &a1[v183];
  v185 = &a2[v183];
  *(_QWORD *)v184 = *(_QWORD *)v185;
  *((_QWORD *)v184 + 1) = *((_QWORD *)v185 + 1);
  swift_release();
  return a1;
}

uint64_t sub_1007F35C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1007F35CC);
}

uint64_t sub_1007F35CC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = type metadata accessor for LiveRadio(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 2147483646)
  {
    v9 = *(_QWORD *)(a1 + a3[6]);
    if (v9 >= 0xFFFFFFFF)
      LODWORD(v9) = -1;
    v10 = v9 - 1;
    if (v10 < 0)
      v10 = -1;
    return (v10 + 1);
  }
  else
  {
    v11 = sub_100007E8C(&qword_10119F4F0);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v13 = v11;
      v14 = a3[16];
    }
    else
    {
      v13 = sub_100007E8C(qword_1011C9550);
      v12 = *(_QWORD *)(v13 - 8);
      v14 = a3[17];
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1 + v14, a2, v13);
  }
}

uint64_t sub_1007F36AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1007F36B8);
}

uint64_t sub_1007F36B8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  result = type metadata accessor for LiveRadio(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 2147483646)
    {
      *(_QWORD *)(a1 + a4[6]) = a2;
      return result;
    }
    v13 = sub_100007E8C(&qword_10119F4F0);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[16];
    }
    else
    {
      v10 = sub_100007E8C(qword_1011C9550);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = a4[17];
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1007F3788(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[15];

  v2 = type metadata accessor for LiveRadio(319);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    v8[1] = "\t";
    v8[2] = &unk_100ED1248;
    v8[3] = &unk_100ED1248;
    v8[4] = &unk_100ED1288;
    v8[5] = &unk_100ED1248;
    v8[6] = &unk_100ED1248;
    v8[7] = &unk_100ED1248;
    v8[8] = &unk_100ED1288;
    v8[9] = &unk_100ED1288;
    v8[10] = "\t";
    v8[11] = &unk_100ED1288;
    sub_1000E3A44(319, (unint64_t *)&qword_10119F560, (uint64_t (*)(uint64_t))&type metadata accessor for OpenURLAction, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v5 <= 0x3F)
    {
      v8[12] = *(_QWORD *)(v4 - 8) + 64;
      sub_1000F6458(319);
      if (v7 <= 0x3F)
      {
        v8[13] = *(_QWORD *)(v6 - 8) + 64;
        v8[14] = &unk_100ED1248;
        swift_initStructMetadata(a1, 256, 15, v8, a1 + 16);
      }
    }
  }
}

uint64_t sub_1007F386C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FADC18, 1);
}

uint64_t type metadata accessor for LiveRadioView.HeaderView(uint64_t a1)
{
  return sub_100055934(a1, qword_1011CA5D8, (uint64_t)&nominal type descriptor for LiveRadioView.HeaderView);
}

uint64_t sub_1007F3898()
{
  return 16;
}

__n128 sub_1007F38A4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1007F38B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1007EC1A8(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1007F38B8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011CA4C8;
  if (!qword_1011CA4C8)
  {
    v1 = sub_100044B54(&qword_1011CA4C0);
    v2[0] = sub_100044B54(&qword_1011AA8D8);
    v2[1] = sub_1002CF40C();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.border(_:corner:)>>, 1);
    sub_100049F28(&qword_1011CA4D0, &qword_1011CA4D8, (uint64_t)&unk_100EC3620);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CA4C8);
  }
  return result;
}

unint64_t sub_1007F3964()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t OpaqueTypeConformance2;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  ValueMetadata *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;

  result = qword_1011CA4E0;
  if (!qword_1011CA4E0)
  {
    v1 = sub_100044B54(&qword_1011AC720);
    v2 = sub_100044B54(&qword_1011CA4A0);
    v3 = sub_100044B54(&qword_1011CA498);
    v4 = sub_100044B54(&qword_1011CA490);
    v5 = sub_100044B54(&qword_1011CA488);
    v6 = type metadata accessor for ContextualPreview(255);
    v13 = sub_100044B54(&qword_1011CA4C0);
    v14 = (ValueMetadata *)sub_1007F38B8();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v13, &opaque type descriptor for <<opaque return type of View.materialContentMode(_:)>>, 1);
    v8 = sub_1000E3EE4();
    v9 = sub_100048748(&qword_1011A0578, type metadata accessor for ContextualPreview, (uint64_t)"mu ");
    v13 = v5;
    v14 = &type metadata for ActionType;
    v15 = v6;
    v16 = OpaqueTypeConformance2;
    v17 = v8;
    v18 = v9;
    v10 = swift_getOpaqueTypeConformance2(&v13, &opaque type descriptor for <<opaque return type of View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)>>, 1);
    v13 = v4;
    v14 = (ValueMetadata *)v10;
    v11 = swift_getOpaqueTypeConformance2(&v13, &opaque type descriptor for <<opaque return type of View.shareSheetPresenting(_:)>>, 1);
    v13 = v3;
    v14 = (ValueMetadata *)v11;
    v12 = swift_getOpaqueTypeConformance2(&v13, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
    v13 = v2;
    v14 = (ValueMetadata *)v12;
    swift_getOpaqueTypeConformance2(&v13, &opaque type descriptor for <<opaque return type of View.hover(corner:outset:isRelative:namespace:isEnabled:)>>, 1);
    sub_100048748((unint64_t *)&unk_1011A45E0, type metadata accessor for SegueLink, (uint64_t)&unk_100EC508C);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CA4E0);
  }
  return result;
}

uint64_t type metadata accessor for LiveRadioView.ChinContent(uint64_t a1)
{
  return sub_100055934(a1, qword_1011CA548, (uint64_t)&nominal type descriptor for LiveRadioView.ChinContent);
}

uint64_t *sub_1007F3B2C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  unsigned int (*v42)(char *, uint64_t, uint64_t);
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  void *v68;
  int *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  void *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v93;
  char *v94;
  int *v95;
  uint64_t *v96;
  unsigned int (*v97)(char *, uint64_t, uint64_t);
  uint64_t v98;
  char *v99;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    v15 = v14 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = sub_100007E8C(qword_1011C9550);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for GenericMusicItem(0);
    v12 = *(_QWORD *)(v11 - 8);
    v97 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    v98 = v11;
    v93 = v12;
    v96 = a1;
    if (v97(v10, 1, v11))
    {
      v13 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = (int *)type metadata accessor for LiveRadio(0);
    v17 = v16[5];
    v18 = &v9[v17];
    v19 = &v10[v17];
    v20 = *((_QWORD *)v19 + 1);
    *(_QWORD *)v18 = *(_QWORD *)v19;
    *((_QWORD *)v18 + 1) = v20;
    v21 = *((_QWORD *)v19 + 3);
    *((_QWORD *)v18 + 2) = *((_QWORD *)v19 + 2);
    *((_QWORD *)v18 + 3) = v21;
    v22 = v16[6];
    v23 = &v9[v22];
    v24 = &v10[v22];
    v25 = *((_QWORD *)v24 + 1);
    *(_QWORD *)v23 = *(_QWORD *)v24;
    *((_QWORD *)v23 + 1) = v25;
    v26 = v16[7];
    v27 = &v9[v26];
    v28 = &v10[v26];
    v29 = *((_QWORD *)v28 + 1);
    *(_QWORD *)v27 = *(_QWORD *)v28;
    *((_QWORD *)v27 + 1) = v29;
    v30 = v16[8];
    v31 = &v9[v30];
    v32 = &v10[v30];
    v33 = *((_QWORD *)v32 + 1);
    *(_QWORD *)v31 = *(_QWORD *)v32;
    *((_QWORD *)v31 + 1) = v33;
    v94 = v10;
    v95 = v16;
    v34 = v16[9];
    v99 = v9;
    v35 = &v9[v34];
    v36 = &v10[v34];
    v37 = type metadata accessor for ArtworkImage.ViewModel(0);
    v38 = *(_QWORD *)(v37 - 8);
    v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v39(v36, 1, v37))
    {
      v40 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      v42 = v97;
      v41 = v98;
      v43 = v94;
    }
    else
    {
      v44 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v35, v36, v44);
      v45 = *(int *)(v37 + 20);
      v46 = &v35[v45];
      v47 = &v36[v45];
      v48 = type metadata accessor for Artwork.CropStyle(0);
      v49 = *(_QWORD *)(v48 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
      {
        v50 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v46, v47, v48);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
      }
      v42 = v97;
      v51 = v38;
      v43 = v94;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v35, 0, 1, v37);
      v41 = v98;
    }
    v52 = v95[10];
    v53 = &v99[v52];
    v54 = &v43[v52];
    v55 = type metadata accessor for MotionViewModel(0);
    v56 = *(_QWORD *)(v55 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
    {
      v57 = sub_100007E8C(&qword_1011AA8D0);
      memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    }
    else
    {
      v58 = type metadata accessor for VideoArtwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v53, v54, v58);
      v59 = *(int *)(v55 + 20);
      v60 = &v53[v59];
      v61 = &v54[v59];
      v62 = type metadata accessor for Artwork.CropStyle(0);
      v63 = *(_QWORD *)(v62 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v61, 1, v62))
      {
        v64 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
        memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v60, v61, v62);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
      }
      v42 = v97;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
      v41 = v98;
    }
    v65 = v95[11];
    v66 = &v99[v65];
    v67 = &v43[v65];
    v68 = *(void **)&v43[v65];
    *(_QWORD *)&v99[v65] = v68;
    v69 = (int *)type metadata accessor for SegueContext(0);
    v70 = v69[5];
    v71 = &v66[v70];
    v72 = &v67[v70];
    v73 = v68;
    if (v42(v72, 1, v41))
    {
      v74 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v71, v72, v41);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v71, 0, 1, v41);
    }
    v66[v69[6]] = v67[v69[6]];
    v75 = v69[7];
    v76 = &v66[v75];
    v77 = &v67[v75];
    if (*(_QWORD *)v77)
    {
      v78 = *((_QWORD *)v77 + 1);
      *(_QWORD *)v76 = *(_QWORD *)v77;
      *((_QWORD *)v76 + 1) = v78;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v76 = *(_OWORD *)v77;
    }
    v79 = v95[12];
    v80 = &v99[v79];
    v81 = &v43[v79];
    v82 = *(void **)&v43[v79];
    *(_QWORD *)v80 = v82;
    v83 = v69[5];
    v84 = &v80[v83];
    v85 = &v81[v83];
    v86 = v82;
    if (v42(v85, 1, v41))
    {
      v87 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v84, v85, v41);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v84, 0, 1, v41);
    }
    v80[v69[6]] = v81[v69[6]];
    v88 = v69[7];
    v89 = &v80[v88];
    v90 = &v81[v88];
    if (*(_QWORD *)v90)
    {
      v91 = *((_QWORD *)v90 + 1);
      *(_QWORD *)v89 = *(_QWORD *)v90;
      *((_QWORD *)v89 + 1) = v91;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v89 = *(_OWORD *)v90;
    }
    return v96;
  }
  return (uint64_t *)v15;
}

double sub_1007F40E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id *v22;
  uint64_t v23;
  char *v24;
  id *v25;
  char *v26;
  double result;

  v4 = sub_100007E8C(qword_1011C9550);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (!v8(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  v9 = (int *)type metadata accessor for LiveRadio(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = v5 + v9[9];
  v11 = type metadata accessor for ArtworkImage.ViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
  {
    v12 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v10, v12);
    v13 = v10 + *(int *)(v11 + 20);
    v14 = type metadata accessor for Artwork.CropStyle(0);
    v15 = *(_QWORD *)(v14 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  }
  v16 = v5 + v9[10];
  v17 = type metadata accessor for MotionViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v16, 1, v17))
  {
    v18 = type metadata accessor for VideoArtwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v16, v18);
    v19 = v16 + *(int *)(v17 + 20);
    v20 = type metadata accessor for Artwork.CropStyle(0);
    v21 = *(_QWORD *)(v20 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
  }
  v22 = (id *)(v5 + v9[11]);

  v23 = type metadata accessor for SegueContext(0);
  v24 = (char *)v22 + *(int *)(v23 + 20);
  if (!v8((uint64_t)v24, 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v24, v6);
  if (*(id *)((char *)v22 + *(int *)(v23 + 28)))
    swift_release();
  v25 = (id *)(v5 + v9[12]);

  v26 = (char *)v25 + *(int *)(v23 + 20);
  if (!v8((uint64_t)v26, 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v26, v6);
  if (*(id *)((char *)v25 + *(int *)(v23 + 28)))
    *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_1007F43AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  unsigned int (*v39)(char *, uint64_t, uint64_t);
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  void *v66;
  int *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  void *v80;
  uint64_t v81;
  char *v82;
  char *v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v91;
  char *v92;
  int *v93;
  uint64_t v94;
  unsigned int (*v95)(char *, uint64_t, uint64_t);
  uint64_t v96;
  char *v97;

  v6 = sub_100007E8C(qword_1011C9550);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v94 = a1;
  v8 = (char *)(a1 + v7);
  v9 = (char *)(a2 + v7);
  v10 = type metadata accessor for GenericMusicItem(0);
  v11 = *(_QWORD *)(v10 - 8);
  v95 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v96 = v10;
  v91 = v11;
  if (v95(v9, 1, v10))
  {
    v12 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = (int *)type metadata accessor for LiveRadio(0);
  v14 = v13[5];
  v15 = &v8[v14];
  v16 = &v9[v14];
  v17 = *((_QWORD *)v16 + 1);
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *((_QWORD *)v15 + 1) = v17;
  v18 = *((_QWORD *)v16 + 3);
  *((_QWORD *)v15 + 2) = *((_QWORD *)v16 + 2);
  *((_QWORD *)v15 + 3) = v18;
  v19 = v13[6];
  v20 = &v8[v19];
  v21 = &v9[v19];
  v22 = *((_QWORD *)v21 + 1);
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *((_QWORD *)v20 + 1) = v22;
  v23 = v13[7];
  v24 = &v8[v23];
  v25 = &v9[v23];
  v26 = *((_QWORD *)v25 + 1);
  *(_QWORD *)v24 = *(_QWORD *)v25;
  *((_QWORD *)v24 + 1) = v26;
  v27 = v13[8];
  v28 = &v8[v27];
  v29 = &v9[v27];
  v30 = *((_QWORD *)v29 + 1);
  *(_QWORD *)v28 = *(_QWORD *)v29;
  *((_QWORD *)v28 + 1) = v30;
  v92 = v9;
  v93 = v13;
  v31 = v13[9];
  v97 = v8;
  v32 = &v8[v31];
  v33 = &v9[v31];
  v34 = type metadata accessor for ArtworkImage.ViewModel(0);
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v36(v33, 1, v34))
  {
    v37 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    v39 = v95;
    v38 = v96;
    v40 = v97;
    v41 = v92;
  }
  else
  {
    v42 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v32, v33, v42);
    v43 = *(int *)(v34 + 20);
    v44 = &v32[v43];
    v45 = &v33[v43];
    v46 = type metadata accessor for Artwork.CropStyle(0);
    v47 = *(_QWORD *)(v46 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
    {
      v48 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v44, v45, v46);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
    }
    v39 = v95;
    v40 = v97;
    v49 = v35;
    v41 = v92;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v32, 0, 1, v34);
    v38 = v96;
  }
  v50 = v93[10];
  v51 = &v40[v50];
  v52 = &v41[v50];
  v53 = type metadata accessor for MotionViewModel(0);
  v54 = *(_QWORD *)(v53 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
  {
    v55 = sub_100007E8C(&qword_1011AA8D0);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
  }
  else
  {
    v56 = type metadata accessor for VideoArtwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 16))(v51, v52, v56);
    v57 = *(int *)(v53 + 20);
    v58 = &v51[v57];
    v59 = &v52[v57];
    v60 = type metadata accessor for Artwork.CropStyle(0);
    v61 = *(_QWORD *)(v60 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v59, 1, v60))
    {
      v62 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v58, v59, v60);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
    }
    v39 = v95;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
    v38 = v96;
  }
  v63 = v93[11];
  v64 = &v40[v63];
  v65 = &v41[v63];
  v66 = *(void **)&v41[v63];
  *(_QWORD *)v64 = v66;
  v67 = (int *)type metadata accessor for SegueContext(0);
  v68 = v67[5];
  v69 = &v64[v68];
  v70 = &v65[v68];
  v71 = v66;
  if (v39(v70, 1, v38))
  {
    v72 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v69, v70, v38);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v69, 0, 1, v38);
  }
  v64[v67[6]] = v65[v67[6]];
  v73 = v67[7];
  v74 = &v64[v73];
  v75 = &v65[v73];
  if (*(_QWORD *)v75)
  {
    v76 = *((_QWORD *)v75 + 1);
    *(_QWORD *)v74 = *(_QWORD *)v75;
    *((_QWORD *)v74 + 1) = v76;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v74 = *(_OWORD *)v75;
  }
  v77 = v93[12];
  v78 = &v97[v77];
  v79 = &v41[v77];
  v80 = *(void **)&v41[v77];
  *(_QWORD *)v78 = v80;
  v81 = v67[5];
  v82 = &v78[v81];
  v83 = &v79[v81];
  v84 = v80;
  if (v39(v83, 1, v38))
  {
    v85 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v82, v83, v38);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v82, 0, 1, v38);
  }
  v78[v67[6]] = v79[v67[6]];
  v86 = v67[7];
  v87 = &v78[v86];
  v88 = &v79[v86];
  if (*(_QWORD *)v88)
  {
    v89 = *((_QWORD *)v88 + 1);
    *(_QWORD *)v87 = *(_QWORD *)v88;
    *((_QWORD *)v87 + 1) = v89;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v87 = *(_OWORD *)v88;
  }
  return v94;
}

uint64_t sub_1007F4930(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  char *v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t, uint64_t);
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  size_t v45;
  void *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(void *, uint64_t, uint64_t);
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)(uint64_t, uint64_t, uint64_t);
  int v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  size_t v72;
  void *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t (*v81)(void *, uint64_t, uint64_t);
  int v82;
  int v83;
  uint64_t v84;
  void **v85;
  char *v86;
  void *v87;
  void *v88;
  id v89;
  int *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  int v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void **v107;
  char *v108;
  void *v109;
  void *v110;
  id v111;
  uint64_t v112;
  char *v113;
  char *v114;
  int v115;
  int v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v125;
  uint64_t v126;
  char *__src;
  uint64_t (*v128)(char *, uint64_t, uint64_t);
  uint64_t v129;

  v6 = sub_100007E8C(qword_1011C9550);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (char *)(a1 + v7);
  v9 = (char *)(a2 + v7);
  v10 = type metadata accessor for GenericMusicItem(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  __src = v9;
  v128 = v12;
  v129 = v10;
  v14 = v12(v9, 1, v10);
  v125 = v11;
  v126 = a1;
  if (v13)
  {
    if (!v14)
    {
      v15 = v9;
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    v16 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    v15 = v9;
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  v15 = v9;
  (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v8, v9, v10);
LABEL_7:
  v17 = (int *)type metadata accessor for LiveRadio(0);
  v18 = v17[5];
  v19 = &v8[v18];
  v20 = &v15[v18];
  *(_QWORD *)v19 = *(_QWORD *)&v15[v18];
  *((_QWORD *)v19 + 1) = *(_QWORD *)&v15[v18 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v19 + 2) = *((_QWORD *)v20 + 2);
  *((_QWORD *)v19 + 3) = *((_QWORD *)v20 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21 = v17[6];
  v22 = &v8[v21];
  v23 = &v15[v21];
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24 = v17[7];
  v25 = &v8[v24];
  v26 = &v15[v24];
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *((_QWORD *)v25 + 1) = *((_QWORD *)v26 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v27 = v17[8];
  v28 = &v8[v27];
  v29 = &v15[v27];
  *(_QWORD *)v28 = *(_QWORD *)v29;
  *((_QWORD *)v28 + 1) = *((_QWORD *)v29 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v30 = v17[9];
  v31 = (uint64_t)&v8[v30];
  v32 = &v15[v30];
  v33 = type metadata accessor for ArtworkImage.ViewModel(0);
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 48);
  v36 = v35(v31, 1, v33);
  v37 = v35((uint64_t)v32, 1, v33);
  if (!v36)
  {
    if (!v37)
    {
      v48 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 24))(v31, v32, v48);
      v49 = *(int *)(v33 + 20);
      v50 = (void *)(v31 + v49);
      v51 = &v32[v49];
      v52 = type metadata accessor for Artwork.CropStyle(0);
      v53 = *(_QWORD *)(v52 - 8);
      v54 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v53 + 48);
      v55 = v54(v50, 1, v52);
      v56 = v54(v51, 1, v52);
      if (v55)
      {
        if (!v56)
        {
          (*(void (**)(void *, char *, uint64_t))(v53 + 16))(v50, v51, v52);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
          goto LABEL_21;
        }
      }
      else
      {
        if (!v56)
        {
          (*(void (**)(void *, char *, uint64_t))(v53 + 24))(v50, v51, v52);
          goto LABEL_21;
        }
        (*(void (**)(void *, uint64_t))(v53 + 8))(v50, v52);
      }
      v45 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v46 = v50;
      v47 = v51;
LABEL_14:
      memcpy(v46, v47, v45);
      goto LABEL_21;
    }
    sub_10005B748(v31, type metadata accessor for ArtworkImage.ViewModel);
LABEL_13:
    v45 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v46 = (void *)v31;
    v47 = v32;
    goto LABEL_14;
  }
  if (v37)
    goto LABEL_13;
  v38 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v31, v32, v38);
  v39 = *(int *)(v33 + 20);
  v40 = (void *)(v31 + v39);
  v41 = &v32[v39];
  v42 = type metadata accessor for Artwork.CropStyle(0);
  v43 = *(_QWORD *)(v42 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
  {
    v44 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v43 + 16))(v40, v41, v42);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
LABEL_21:
  v57 = v17[10];
  v58 = (uint64_t)&v8[v57];
  v59 = &v15[v57];
  v60 = type metadata accessor for MotionViewModel(0);
  v61 = *(_QWORD *)(v60 - 8);
  v62 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v61 + 48);
  v63 = v62(v58, 1, v60);
  v64 = v62((uint64_t)v59, 1, v60);
  if (!v63)
  {
    if (!v64)
    {
      v75 = type metadata accessor for VideoArtwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 24))(v58, v59, v75);
      v76 = *(int *)(v60 + 20);
      v77 = (void *)(v58 + v76);
      v78 = &v59[v76];
      v79 = type metadata accessor for Artwork.CropStyle(0);
      v80 = *(_QWORD *)(v79 - 8);
      v81 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v80 + 48);
      v82 = v81(v77, 1, v79);
      v83 = v81(v78, 1, v79);
      if (v82)
      {
        if (!v83)
        {
          (*(void (**)(void *, char *, uint64_t))(v80 + 16))(v77, v78, v79);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v77, 0, 1, v79);
          goto LABEL_34;
        }
      }
      else
      {
        if (!v83)
        {
          (*(void (**)(void *, char *, uint64_t))(v80 + 24))(v77, v78, v79);
          goto LABEL_34;
        }
        (*(void (**)(void *, uint64_t))(v80 + 8))(v77, v79);
      }
      v72 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v73 = v77;
      v74 = v78;
LABEL_28:
      memcpy(v73, v74, v72);
      goto LABEL_34;
    }
    sub_10005B748(v58, type metadata accessor for MotionViewModel);
LABEL_27:
    v72 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011AA8D0) - 8) + 64);
    v73 = (void *)v58;
    v74 = v59;
    goto LABEL_28;
  }
  if (v64)
    goto LABEL_27;
  v65 = type metadata accessor for VideoArtwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v58, v59, v65);
  v66 = *(int *)(v60 + 20);
  v67 = (void *)(v58 + v66);
  v68 = &v59[v66];
  v69 = type metadata accessor for Artwork.CropStyle(0);
  v70 = *(_QWORD *)(v69 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v68, 1, v69))
  {
    v71 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v70 + 16))(v67, v68, v69);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
LABEL_34:
  v84 = v17[11];
  v85 = (void **)&v8[v84];
  v86 = &v15[v84];
  v87 = *(void **)&v15[v84];
  v88 = *v85;
  *v85 = v87;
  v89 = v87;

  v90 = (int *)type metadata accessor for SegueContext(0);
  v91 = v90[5];
  v92 = (char *)v85 + v91;
  v93 = &v86[v91];
  v94 = v128((char *)v85 + v91, 1, v129);
  v95 = v128(v93, 1, v129);
  if (v94)
  {
    if (v95)
    {
      v96 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
      v97 = v125;
    }
    else
    {
      v97 = v125;
      (*(void (**)(char *, char *, uint64_t))(v125 + 16))(v92, v93, v129);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v125 + 56))(v92, 0, 1, v129);
    }
  }
  else
  {
    v97 = v125;
    if (v95)
    {
      (*(void (**)(char *, uint64_t))(v125 + 8))(v92, v129);
      v98 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v125 + 24))(v92, v93, v129);
    }
  }
  *((_BYTE *)v85 + v90[6]) = v86[v90[6]];
  v99 = v90[7];
  v100 = (void **)((char *)v85 + v99);
  v101 = &v86[v99];
  v102 = *(uint64_t *)((char *)v85 + v99);
  v103 = *(_QWORD *)v101;
  if (v102)
  {
    if (v103)
    {
      v104 = *((_QWORD *)v101 + 1);
      *v100 = v103;
      v100[1] = v104;
      swift_retain();
      swift_release();
      goto LABEL_48;
    }
    swift_release();
  }
  else if (v103)
  {
    v105 = *((_QWORD *)v101 + 1);
    *v100 = v103;
    v100[1] = v105;
    swift_retain();
    goto LABEL_48;
  }
  *(_OWORD *)v100 = *(_OWORD *)v101;
LABEL_48:
  v106 = v17[12];
  v107 = (void **)&v8[v106];
  v108 = &__src[v106];
  v109 = *(void **)&__src[v106];
  v110 = *v107;
  *v107 = v109;
  v111 = v109;

  v112 = v90[5];
  v113 = (char *)v107 + v112;
  v114 = &v108[v112];
  v115 = v128((char *)v107 + v112, 1, v129);
  v116 = v128(v114, 1, v129);
  if (v115)
  {
    if (!v116)
    {
      (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v113, v114, v129);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v113, 0, 1, v129);
      goto LABEL_54;
    }
    goto LABEL_53;
  }
  if (v116)
  {
    (*(void (**)(char *, uint64_t))(v97 + 8))(v113, v129);
LABEL_53:
    v117 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v113, v114, *(_QWORD *)(*(_QWORD *)(v117 - 8) + 64));
    goto LABEL_54;
  }
  (*(void (**)(char *, char *, uint64_t))(v97 + 24))(v113, v114, v129);
LABEL_54:
  *((_BYTE *)v107 + v90[6]) = v108[v90[6]];
  v118 = v90[7];
  v119 = (void **)((char *)v107 + v118);
  v120 = &v108[v118];
  v121 = *(_QWORD *)&v108[v118];
  if (!*v119)
  {
    if (v121)
    {
      v123 = *((_QWORD *)v120 + 1);
      *v119 = v121;
      v119[1] = v123;
      swift_retain();
      return v126;
    }
LABEL_60:
    *(_OWORD *)v119 = *(_OWORD *)v120;
    return v126;
  }
  if (!v121)
  {
    swift_release();
    goto LABEL_60;
  }
  v122 = *((_QWORD *)v120 + 1);
  *v119 = v121;
  v119[1] = v122;
  swift_retain();
  swift_release();
  return v126;
}

uint64_t sub_1007F527C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  int *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *__dst;
  char *__dsta;
  uint64_t v71;
  uint64_t v72;
  unsigned int (*v73)(char *, uint64_t, uint64_t);

  v6 = sub_100007E8C(qword_1011C9550);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (char *)(a1 + v7);
  v9 = (char *)(a2 + v7);
  v10 = type metadata accessor for GenericMusicItem(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v71 = v11;
  if (v12(v9, 1, v10))
  {
    v13 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = (int *)type metadata accessor for LiveRadio(0);
  v15 = v14[5];
  v16 = &v8[v15];
  v17 = &v9[v15];
  v18 = *((_OWORD *)v17 + 1);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = v18;
  *(_OWORD *)&v8[v14[6]] = *(_OWORD *)&v9[v14[6]];
  *(_OWORD *)&v8[v14[7]] = *(_OWORD *)&v9[v14[7]];
  *(_OWORD *)&v8[v14[8]] = *(_OWORD *)&v9[v14[8]];
  v19 = v14[9];
  v20 = &v8[v19];
  v21 = &v9[v19];
  v22 = type metadata accessor for ArtworkImage.ViewModel(0);
  v23 = *(_QWORD *)(v22 - 8);
  v72 = a1;
  v73 = v12;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    v24 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    v25 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v20, v21, v25);
    v26 = *(int *)(v22 + 20);
    __dst = &v20[v26];
    v27 = &v21[v26];
    v28 = type metadata accessor for Artwork.CropStyle(0);
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      v30 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(__dst, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 32))(__dst, v27, v28);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(__dst, 0, 1, v28);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    v12 = v73;
  }
  v31 = v14[10];
  v32 = &v8[v31];
  v33 = &v9[v31];
  v34 = type metadata accessor for MotionViewModel(0);
  v35 = *(_QWORD *)(v34 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
  {
    v36 = sub_100007E8C(&qword_1011AA8D0);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    v37 = type metadata accessor for VideoArtwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v32, v33, v37);
    v38 = *(int *)(v34 + 20);
    __dsta = &v32[v38];
    v39 = &v33[v38];
    v40 = type metadata accessor for Artwork.CropStyle(0);
    v41 = *(_QWORD *)(v40 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
    {
      v42 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(__dsta, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v41 + 32))(__dsta, v39, v40);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(__dsta, 0, 1, v40);
    }
    v12 = v73;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
  }
  v43 = v14[11];
  v44 = &v8[v43];
  v45 = &v9[v43];
  *(_QWORD *)&v8[v43] = *(_QWORD *)&v9[v43];
  v46 = (int *)type metadata accessor for SegueContext(0);
  v47 = v46[5];
  v48 = &v44[v47];
  v49 = &v45[v47];
  if (v12(&v45[v47], 1, v10))
  {
    v50 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v48, v49, v10);
    v12 = v73;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v48, 0, 1, v10);
  }
  v44[v46[6]] = v45[v46[6]];
  v51 = v46[7];
  v52 = &v44[v51];
  v53 = &v45[v51];
  v54 = *(_QWORD *)v53;
  if (*(_QWORD *)v53)
  {
    v55 = *((_QWORD *)v53 + 1);
    *(_QWORD *)v52 = v54;
    *((_QWORD *)v52 + 1) = v55;
  }
  else
  {
    *(_OWORD *)v52 = *(_OWORD *)v53;
  }
  v56 = v14[12];
  v57 = &v8[v56];
  v58 = &v9[v56];
  *(_QWORD *)v57 = *(_QWORD *)&v9[v56];
  v59 = v46[5];
  v60 = &v57[v59];
  v61 = &v58[v59];
  if (v12(&v58[v59], 1, v10))
  {
    v62 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v60, v61, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v60, 0, 1, v10);
  }
  v57[v46[6]] = v58[v46[6]];
  v63 = v46[7];
  v64 = &v57[v63];
  v65 = &v58[v63];
  v66 = *(_QWORD *)v65;
  if (*(_QWORD *)v65)
  {
    v67 = *((_QWORD *)v65 + 1);
    *(_QWORD *)v64 = v66;
    *((_QWORD *)v64 + 1) = v67;
  }
  else
  {
    *(_OWORD *)v64 = *(_OWORD *)v65;
  }
  return v72;
}

uint64_t sub_1007F5784(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  char *v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t, uint64_t, uint64_t);
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  size_t v53;
  void *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)(void *, uint64_t, uint64_t);
  int v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t (*v70)(uint64_t, uint64_t, uint64_t);
  int v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  size_t v80;
  void *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t (*v89)(void *, uint64_t, uint64_t);
  int v90;
  int v91;
  uint64_t v92;
  char *v93;
  char *v94;
  void *v95;
  int *v96;
  uint64_t v97;
  char *v98;
  char *v99;
  int v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  char *v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  void *v119;
  uint64_t v120;
  char *v121;
  char *v122;
  int v123;
  int v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v133;
  uint64_t v134;
  char *__src;
  uint64_t v136;
  uint64_t (*v137)(char *, uint64_t, uint64_t);

  v6 = sub_100007E8C(qword_1011C9550);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (char *)(a1 + v7);
  v9 = (char *)(a2 + v7);
  v10 = type metadata accessor for GenericMusicItem(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  __src = v9;
  v137 = v12;
  v14 = v12(v9, 1, v10);
  v136 = v10;
  v133 = v11;
  v134 = a1;
  if (v13)
  {
    if (!v14)
    {
      v15 = v9;
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    v16 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    v15 = v9;
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  v15 = v9;
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  v17 = (int *)type metadata accessor for LiveRadio(0);
  v18 = v17[5];
  v19 = &v8[v18];
  v20 = &v15[v18];
  v21 = *(_QWORD *)&v15[v18 + 8];
  *(_QWORD *)v19 = *(_QWORD *)&v15[v18];
  *((_QWORD *)v19 + 1) = v21;
  swift_bridgeObjectRelease();
  v22 = *((_QWORD *)v20 + 3);
  *((_QWORD *)v19 + 2) = *((_QWORD *)v20 + 2);
  *((_QWORD *)v19 + 3) = v22;
  swift_bridgeObjectRelease();
  v23 = v17[6];
  v24 = &v8[v23];
  v25 = &v15[v23];
  v27 = *(_QWORD *)v25;
  v26 = *((_QWORD *)v25 + 1);
  *(_QWORD *)v24 = v27;
  *((_QWORD *)v24 + 1) = v26;
  swift_bridgeObjectRelease();
  v28 = v17[7];
  v29 = &v8[v28];
  v30 = &v15[v28];
  v32 = *(_QWORD *)v30;
  v31 = *((_QWORD *)v30 + 1);
  *(_QWORD *)v29 = v32;
  *((_QWORD *)v29 + 1) = v31;
  swift_bridgeObjectRelease();
  v33 = v17[8];
  v34 = &v8[v33];
  v35 = &v15[v33];
  v37 = *(_QWORD *)v35;
  v36 = *((_QWORD *)v35 + 1);
  *(_QWORD *)v34 = v37;
  *((_QWORD *)v34 + 1) = v36;
  swift_bridgeObjectRelease();
  v38 = v17[9];
  v39 = (uint64_t)&v8[v38];
  v40 = &v15[v38];
  v41 = type metadata accessor for ArtworkImage.ViewModel(0);
  v42 = *(_QWORD *)(v41 - 8);
  v43 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v42 + 48);
  v44 = v43(v39, 1, v41);
  v45 = v43((uint64_t)v40, 1, v41);
  if (!v44)
  {
    if (!v45)
    {
      v56 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 40))(v39, v40, v56);
      v57 = *(int *)(v41 + 20);
      v58 = (void *)(v39 + v57);
      v59 = &v40[v57];
      v60 = type metadata accessor for Artwork.CropStyle(0);
      v61 = *(_QWORD *)(v60 - 8);
      v62 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v61 + 48);
      v63 = v62(v58, 1, v60);
      v64 = v62(v59, 1, v60);
      if (v63)
      {
        if (!v64)
        {
          (*(void (**)(void *, char *, uint64_t))(v61 + 32))(v58, v59, v60);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
          goto LABEL_21;
        }
      }
      else
      {
        if (!v64)
        {
          (*(void (**)(void *, char *, uint64_t))(v61 + 40))(v58, v59, v60);
          goto LABEL_21;
        }
        (*(void (**)(void *, uint64_t))(v61 + 8))(v58, v60);
      }
      v53 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v54 = v58;
      v55 = v59;
LABEL_14:
      memcpy(v54, v55, v53);
      goto LABEL_21;
    }
    sub_10005B748(v39, type metadata accessor for ArtworkImage.ViewModel);
LABEL_13:
    v53 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v54 = (void *)v39;
    v55 = v40;
    goto LABEL_14;
  }
  if (v45)
    goto LABEL_13;
  v46 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v39, v40, v46);
  v47 = *(int *)(v41 + 20);
  v48 = (void *)(v39 + v47);
  v49 = &v40[v47];
  v50 = type metadata accessor for Artwork.CropStyle(0);
  v51 = *(_QWORD *)(v50 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
  {
    v52 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v51 + 32))(v48, v49, v50);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
LABEL_21:
  v65 = v17[10];
  v66 = (uint64_t)&v8[v65];
  v67 = &v15[v65];
  v68 = type metadata accessor for MotionViewModel(0);
  v69 = *(_QWORD *)(v68 - 8);
  v70 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v69 + 48);
  v71 = v70(v66, 1, v68);
  v72 = v70((uint64_t)v67, 1, v68);
  if (!v71)
  {
    if (!v72)
    {
      v83 = type metadata accessor for VideoArtwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 40))(v66, v67, v83);
      v84 = *(int *)(v68 + 20);
      v85 = (void *)(v66 + v84);
      v86 = &v67[v84];
      v87 = type metadata accessor for Artwork.CropStyle(0);
      v88 = *(_QWORD *)(v87 - 8);
      v89 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v88 + 48);
      v90 = v89(v85, 1, v87);
      v91 = v89(v86, 1, v87);
      if (v90)
      {
        if (!v91)
        {
          (*(void (**)(void *, char *, uint64_t))(v88 + 32))(v85, v86, v87);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v85, 0, 1, v87);
          goto LABEL_34;
        }
      }
      else
      {
        if (!v91)
        {
          (*(void (**)(void *, char *, uint64_t))(v88 + 40))(v85, v86, v87);
          goto LABEL_34;
        }
        (*(void (**)(void *, uint64_t))(v88 + 8))(v85, v87);
      }
      v80 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v81 = v85;
      v82 = v86;
LABEL_28:
      memcpy(v81, v82, v80);
      goto LABEL_34;
    }
    sub_10005B748(v66, type metadata accessor for MotionViewModel);
LABEL_27:
    v80 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011AA8D0) - 8) + 64);
    v81 = (void *)v66;
    v82 = v67;
    goto LABEL_28;
  }
  if (v72)
    goto LABEL_27;
  v73 = type metadata accessor for VideoArtwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 32))(v66, v67, v73);
  v74 = *(int *)(v68 + 20);
  v75 = (void *)(v66 + v74);
  v76 = &v67[v74];
  v77 = type metadata accessor for Artwork.CropStyle(0);
  v78 = *(_QWORD *)(v77 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48))(v76, 1, v77))
  {
    v79 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v78 + 32))(v75, v76, v77);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v75, 0, 1, v77);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v69 + 56))(v66, 0, 1, v68);
LABEL_34:
  v92 = v17[11];
  v93 = &v8[v92];
  v94 = &v15[v92];
  v95 = *(void **)&v8[v92];
  *(_QWORD *)&v8[v92] = *(_QWORD *)&v15[v92];

  v96 = (int *)type metadata accessor for SegueContext(0);
  v97 = v96[5];
  v98 = &v93[v97];
  v99 = &v94[v97];
  v100 = v137(&v93[v97], 1, v136);
  v101 = v137(v99, 1, v136);
  if (v100)
  {
    if (v101)
    {
      v102 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      memcpy(v98, v99, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
      v103 = v133;
      v104 = v136;
    }
    else
    {
      v103 = v133;
      v107 = v99;
      v104 = v136;
      (*(void (**)(char *, char *, uint64_t))(v133 + 32))(v98, v107, v136);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v133 + 56))(v98, 0, 1, v136);
    }
  }
  else
  {
    v103 = v133;
    if (v101)
    {
      (*(void (**)(char *, uint64_t))(v133 + 8))(v98, v136);
      v105 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
      v106 = v99;
      v104 = v136;
      memcpy(v98, v106, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
    }
    else
    {
      v108 = v99;
      v104 = v136;
      (*(void (**)(char *, char *, uint64_t))(v133 + 40))(v98, v108, v136);
    }
  }
  v93[v96[6]] = v94[v96[6]];
  v109 = v96[7];
  v110 = &v93[v109];
  v111 = &v94[v109];
  v112 = *(_QWORD *)&v93[v109];
  v113 = *(_QWORD *)v111;
  if (v112)
  {
    if (v113)
    {
      v114 = *((_QWORD *)v111 + 1);
      *(_QWORD *)v110 = v113;
      *((_QWORD *)v110 + 1) = v114;
      swift_release();
      goto LABEL_48;
    }
    swift_release();
  }
  else if (v113)
  {
    v115 = *((_QWORD *)v111 + 1);
    *(_QWORD *)v110 = v113;
    *((_QWORD *)v110 + 1) = v115;
    goto LABEL_48;
  }
  *(_OWORD *)v110 = *(_OWORD *)v111;
LABEL_48:
  v116 = v17[12];
  v117 = &v8[v116];
  v118 = &__src[v116];
  v119 = *(void **)&v8[v116];
  *(_QWORD *)&v8[v116] = *(_QWORD *)&__src[v116];

  v120 = v96[5];
  v121 = &v117[v120];
  v122 = &v118[v120];
  v123 = v137(&v117[v120], 1, v104);
  v124 = v137(v122, 1, v104);
  if (v123)
  {
    if (!v124)
    {
      (*(void (**)(char *, char *, uint64_t))(v103 + 32))(v121, v122, v104);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v103 + 56))(v121, 0, 1, v104);
      goto LABEL_54;
    }
    goto LABEL_53;
  }
  if (v124)
  {
    (*(void (**)(char *, uint64_t))(v103 + 8))(v121, v104);
LABEL_53:
    v125 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v121, v122, *(_QWORD *)(*(_QWORD *)(v125 - 8) + 64));
    goto LABEL_54;
  }
  (*(void (**)(char *, char *, uint64_t))(v103 + 40))(v121, v122, v104);
LABEL_54:
  v117[v96[6]] = v118[v96[6]];
  v126 = v96[7];
  v127 = &v117[v126];
  v128 = &v118[v126];
  v129 = *(_QWORD *)&v118[v126];
  if (!*(_QWORD *)v127)
  {
    if (v129)
    {
      v131 = *((_QWORD *)v128 + 1);
      *(_QWORD *)v127 = v129;
      *((_QWORD *)v127 + 1) = v131;
      return v134;
    }
LABEL_60:
    *(_OWORD *)v127 = *(_OWORD *)v128;
    return v134;
  }
  if (!v129)
  {
    swift_release();
    goto LABEL_60;
  }
  v130 = *((_QWORD *)v128 + 1);
  *(_QWORD *)v127 = v129;
  *((_QWORD *)v127 + 1) = v130;
  swift_release();
  return v134;
}

uint64_t sub_1007F606C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1007F6078);
}

uint64_t sub_1007F6078(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = sub_100007E8C(qword_1011C9550);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = type metadata accessor for LiveRadio(0);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_1007F60F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1007F60FC);
}

uint64_t sub_1007F60FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = sub_100007E8C(qword_1011C9550);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = type metadata accessor for LiveRadio(0);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_1007F617C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1007F9A18(a1, a2, a3, (uint64_t (*)(uint64_t))sub_1000F6458, type metadata accessor for LiveRadio);
}

uint64_t *sub_1007F6190(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  int *v62;
  uint64_t v63;
  void *v64;
  void *v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  char *v77;
  void *v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  __int128 v89;
  __int128 v90;
  int v91;
  void *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  __int128 v99;
  int *v100;
  uint64_t v101;
  void *v102;
  const void *v103;
  uint64_t v104;
  uint64_t v105;
  unsigned int (*v106)(const void *, uint64_t, uint64_t, __n128);
  __n128 v107;
  uint64_t v108;
  uint64_t v109;
  void *v110;
  const void *v111;
  uint64_t v112;
  uint64_t v113;
  void *v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  uint64_t v118;
  id v119;
  uint64_t *v120;
  unint64_t v121;
  __int128 v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t *v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t *v130;
  int *v131;
  uint64_t v133;
  uint64_t v134;
  uint64_t *v135;
  unsigned int (*v136)(uint64_t *, uint64_t, uint64_t);

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    v10 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return v10;
  }
  v6 = type metadata accessor for GenericMusicItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v136 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48);
  v133 = v7;
  v134 = v6;
  if (v136(a2, 1, v6))
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v11 = (int *)type metadata accessor for LiveRadio(0);
  v12 = v11[5];
  v13 = (uint64_t *)((char *)a1 + v12);
  v14 = (uint64_t *)((char *)a2 + v12);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = v14[3];
  v13[2] = v14[2];
  v13[3] = v16;
  v17 = v11[6];
  v18 = (uint64_t *)((char *)a1 + v17);
  v19 = (uint64_t *)((char *)a2 + v17);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  v21 = v11[7];
  v22 = (uint64_t *)((char *)a1 + v21);
  v23 = (uint64_t *)((char *)a2 + v21);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  v25 = v11[8];
  v26 = (uint64_t *)((char *)a1 + v25);
  v27 = (uint64_t *)((char *)a2 + v25);
  v28 = v27[1];
  *v26 = *v27;
  v26[1] = v28;
  v130 = a2;
  v131 = v11;
  v29 = v11[9];
  v135 = a1;
  v30 = (char *)a1 + v29;
  v31 = (char *)a2 + v29;
  v32 = type metadata accessor for ArtworkImage.ViewModel(0);
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v34(v31, 1, v32))
  {
    v35 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    v36 = v135;
    v37 = v130;
  }
  else
  {
    v38 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v30, v31, v38);
    v39 = *(int *)(v32 + 20);
    v40 = &v30[v39];
    v41 = &v31[v39];
    v42 = type metadata accessor for Artwork.CropStyle(0);
    v43 = *(_QWORD *)(v42 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
    {
      v44 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v40, v41, v42);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
    }
    v37 = v130;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
    v36 = v135;
  }
  v45 = v131[10];
  v46 = (char *)v36 + v45;
  v47 = (char *)v37 + v45;
  v48 = type metadata accessor for MotionViewModel(0);
  v49 = *(_QWORD *)(v48 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
  {
    v50 = sub_100007E8C(&qword_1011AA8D0);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
  }
  else
  {
    v51 = type metadata accessor for VideoArtwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v46, v47, v51);
    v52 = *(int *)(v48 + 20);
    v53 = &v46[v52];
    v54 = &v47[v52];
    v55 = type metadata accessor for Artwork.CropStyle(0);
    v56 = *(_QWORD *)(v55 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
    {
      v57 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v53, v54, v55);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
    v36 = v135;
  }
  v58 = v131[11];
  v59 = (uint64_t)v36 + v58;
  v60 = (uint64_t)v37 + v58;
  v61 = *(void **)((char *)v37 + v58);
  *(uint64_t *)((char *)v36 + v58) = (uint64_t)v61;
  v62 = (int *)type metadata accessor for SegueContext(0);
  v63 = v62[5];
  v64 = (void *)(v59 + v63);
  v65 = (const void *)(v60 + v63);
  v66 = v61;
  if (v136((uint64_t *)v65, 1, v134))
  {
    v67 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v133 + 16))(v64, (void *)v65, v134);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v133 + 56))(v64, 0, 1, v134);
  }
  *(_BYTE *)(v59 + v62[6]) = *(_BYTE *)(v60 + v62[6]);
  v68 = v62[7];
  v69 = (_QWORD *)(v59 + v68);
  v70 = (_QWORD *)(v60 + v68);
  if (*v70)
  {
    v71 = v70[1];
    *v69 = *v70;
    v69[1] = v71;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v69 = *(_OWORD *)v70;
  }
  v72 = v131[12];
  v73 = (uint64_t *)((char *)v36 + v72);
  v74 = (uint64_t)v37 + v72;
  v75 = *(void **)((char *)v37 + v72);
  *v73 = v75;
  v76 = v62[5];
  v77 = (char *)v73 + v76;
  v78 = (const void *)(v74 + v76);
  v79 = v75;
  if (v136((uint64_t *)v78, 1, v134))
  {
    v80 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, void *, uint64_t))(v133 + 16))(v77, (void *)v78, v134);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v133 + 56))(v77, 0, 1, v134);
  }
  *((_BYTE *)v73 + v62[6]) = *(_BYTE *)(v74 + v62[6]);
  v81 = v62[7];
  v82 = (_QWORD *)((char *)v73 + v81);
  v83 = (_QWORD *)(v74 + v81);
  if (*v83)
  {
    v84 = v83[1];
    *v82 = *v83;
    v82[1] = v84;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v82 = *(_OWORD *)v83;
  }
  v85 = *(int *)(a3 + 20);
  v86 = (uint64_t)v36 + v85;
  v87 = (uint64_t)v37 + v85;
  v88 = (uint64_t *)(v87 + 56);
  if (*(_QWORD *)(v87 + 56) != 1)
  {
    swift_unknownObjectWeakCopyInit(v86, v87);
    v91 = *(unsigned __int8 *)(v87 + 48);
    if (v91 == 255)
    {
      v99 = *(_OWORD *)(v87 + 24);
      *(_OWORD *)(v86 + 8) = *(_OWORD *)(v87 + 8);
      *(_OWORD *)(v86 + 24) = v99;
      *(_OWORD *)(v86 + 33) = *(_OWORD *)(v87 + 33);
      v97 = *v88;
      if (*v88)
        goto LABEL_34;
    }
    else
    {
      v92 = *(void **)(v87 + 8);
      v93 = *(_QWORD *)(v87 + 16);
      v94 = *(_QWORD *)(v87 + 24);
      v95 = *(_QWORD *)(v87 + 32);
      v96 = *(_QWORD *)(v87 + 40);
      sub_100347EC8(v92, v93, v94, v95, v96, *(_BYTE *)(v87 + 48));
      *(_QWORD *)(v86 + 8) = v92;
      *(_QWORD *)(v86 + 16) = v93;
      *(_QWORD *)(v86 + 24) = v94;
      *(_QWORD *)(v86 + 32) = v95;
      *(_QWORD *)(v86 + 40) = v96;
      *(_BYTE *)(v86 + 48) = v91;
      v97 = *v88;
      if (*v88)
      {
LABEL_34:
        v98 = *(_QWORD *)(v87 + 64);
        *(_QWORD *)(v86 + 56) = v97;
        *(_QWORD *)(v86 + 64) = v98;
        swift_retain();
        goto LABEL_37;
      }
    }
    *(_OWORD *)(v86 + 56) = *(_OWORD *)v88;
    goto LABEL_37;
  }
  v89 = *(_OWORD *)(v87 + 48);
  *(_OWORD *)(v86 + 32) = *(_OWORD *)(v87 + 32);
  *(_OWORD *)(v86 + 48) = v89;
  *(_QWORD *)(v86 + 64) = *(_QWORD *)(v87 + 64);
  v90 = *(_OWORD *)(v87 + 16);
  *(_OWORD *)v86 = *(_OWORD *)v87;
  *(_OWORD *)(v86 + 16) = v90;
LABEL_37:
  *(_QWORD *)(v86 + 72) = *(_QWORD *)(v87 + 72);
  v100 = (int *)_s18PerformanceConteXtVMa(0);
  v101 = v100[6];
  v102 = (void *)(v86 + v101);
  v103 = (const void *)(v87 + v101);
  v104 = type metadata accessor for OpenURLAction(0);
  v105 = *(_QWORD *)(v104 - 8);
  v106 = *(unsigned int (**)(const void *, uint64_t, uint64_t, __n128))(v105 + 48);
  v107 = swift_retain();
  if (v106(v103, 1, v104, v107))
  {
    v108 = sub_100007E8C(&qword_1011A9580);
    memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v105 + 16))(v102, v103, v104);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v105 + 56))(v102, 0, 1, v104);
  }
  v109 = v100[7];
  v110 = (void *)(v86 + v109);
  v111 = (const void *)(v87 + v109);
  if (v136((uint64_t *)(v87 + v109), 1, v134))
  {
    v112 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v110, v111, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v133 + 16))(v110, v111, v134);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v133 + 56))(v110, 0, 1, v134);
  }
  *(_QWORD *)(v86 + v100[8]) = *(_QWORD *)(v87 + v100[8]);
  *(_QWORD *)(v86 + v100[9]) = *(_QWORD *)(v87 + v100[9]);
  *(_QWORD *)(v86 + v100[10]) = *(_QWORD *)(v87 + v100[10]);
  *(_QWORD *)(v86 + v100[11]) = *(_QWORD *)(v87 + v100[11]);
  v113 = v100[12];
  v114 = *(void **)(v87 + v113);
  *(_QWORD *)(v86 + v113) = v114;
  v115 = v100[13];
  v116 = v86 + v115;
  v117 = (_QWORD *)(v87 + v115);
  v118 = *(_QWORD *)(v87 + v115 + 8);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  v119 = v114;
  if (v118)
  {
    *(_QWORD *)v116 = *v117;
    *(_QWORD *)(v116 + 8) = v118;
    v120 = v117 + 2;
    v121 = v117[3];
    swift_bridgeObjectRetain();
    if (v121 >> 60 == 15)
    {
      *(_OWORD *)(v116 + 16) = *(_OWORD *)v120;
    }
    else
    {
      v123 = *v120;
      sub_100079DE4(*v120, v121);
      *(_QWORD *)(v116 + 16) = v123;
      *(_QWORD *)(v116 + 24) = v121;
    }
  }
  else
  {
    v122 = *((_OWORD *)v117 + 1);
    *(_OWORD *)v116 = *(_OWORD *)v117;
    *(_OWORD *)(v116 + 16) = v122;
  }
  v10 = v135;
  v124 = v100[14];
  v125 = v86 + v124;
  v126 = (uint64_t *)(v87 + v124);
  v127 = v126[1];
  if (v127 >> 60 == 15)
  {
    *(_OWORD *)v125 = *(_OWORD *)v126;
  }
  else
  {
    v128 = *v126;
    sub_100079DE4(*v126, v126[1]);
    *(_QWORD *)v125 = v128;
    *(_QWORD *)(v125 + 8) = v127;
  }
  return v10;
}

void sub_1007F69EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id *v20;
  uint64_t v21;
  char *v22;
  id *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  uint64_t *v35;
  unint64_t v36;

  v4 = type metadata accessor for GenericMusicItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v7 = (int *)type metadata accessor for LiveRadio(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = a1 + v7[9];
  v9 = type metadata accessor for ArtworkImage.ViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    v10 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
    v11 = v8 + *(int *)(v9 + 20);
    v12 = type metadata accessor for Artwork.CropStyle(0);
    v13 = *(_QWORD *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  v14 = a1 + v7[10];
  v15 = type metadata accessor for MotionViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15))
  {
    v16 = type metadata accessor for VideoArtwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v14, v16);
    v17 = v14 + *(int *)(v15 + 20);
    v18 = type metadata accessor for Artwork.CropStyle(0);
    v19 = *(_QWORD *)(v18 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
  }
  v20 = (id *)(a1 + v7[11]);

  v21 = type metadata accessor for SegueContext(0);
  v22 = (char *)v20 + *(int *)(v21 + 20);
  if (!v6((uint64_t)v22, 1, v4))
    (*(void (**)(char *, uint64_t))(v5 + 8))(v22, v4);
  if (*(id *)((char *)v20 + *(int *)(v21 + 28)))
    swift_release();
  v23 = (id *)(a1 + v7[12]);

  v24 = (char *)v23 + *(int *)(v21 + 20);
  if (!v6((uint64_t)v24, 1, v4))
    (*(void (**)(char *, uint64_t))(v5 + 8))(v24, v4);
  if (*(id *)((char *)v23 + *(int *)(v21 + 28)))
    swift_release();
  v26 = a1 + *(int *)(a2 + 20);
  if (*(_QWORD *)(v26 + 56) != 1)
  {
    swift_unknownObjectWeakDestroy(v26, v25);
    v27 = *(unsigned __int8 *)(v26 + 48);
    if (v27 != 255)
      sub_100064AA4(*(id *)(v26 + 8), *(_QWORD *)(v26 + 16), *(_QWORD *)(v26 + 24), *(_QWORD *)(v26 + 32), *(_QWORD *)(v26 + 40), v27);
    if (*(_QWORD *)(v26 + 56))
      swift_release();
  }
  swift_release();
  v28 = (int *)_s18PerformanceConteXtVMa(0);
  v29 = v26 + v28[6];
  v30 = type metadata accessor for OpenURLAction(0);
  v31 = *(_QWORD *)(v30 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v29, v30);
  v32 = v26 + v28[7];
  if (!v6(v32, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v32, v4);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  v33 = (_QWORD *)(v26 + v28[13]);
  if (v33[1])
  {
    swift_bridgeObjectRelease();
    v34 = v33[3];
    if (v34 >> 60 != 15)
      sub_1000652DC(v33[2], v34);
  }
  v35 = (uint64_t *)(v26 + v28[14]);
  v36 = v35[1];
  if (v36 >> 60 != 15)
    sub_1000652DC(*v35, v36);
}

char *sub_1007F6DEC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  char *v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  void *v62;
  int *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  void *v76;
  uint64_t v77;
  char *v78;
  char *v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  char *v89;
  __int128 v90;
  __int128 v91;
  int v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  __int128 v100;
  int *v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  unsigned int (*v107)(char *, uint64_t, uint64_t, __n128);
  __n128 v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  void *v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  id v120;
  _OWORD *v121;
  unint64_t v122;
  __int128 v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t *v127;
  unint64_t v128;
  uint64_t v129;
  int *v131;
  char *v132;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  unsigned int (*v137)(char *, uint64_t, uint64_t);

  v5 = type metadata accessor for GenericMusicItem(0);
  v6 = *(_QWORD *)(v5 - 8);
  v137 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  v134 = v6;
  v135 = v5;
  if (v137(a2, 1, v5))
  {
    v7 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  v8 = (int *)type metadata accessor for LiveRadio(0);
  v9 = v8[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *((_QWORD *)v11 + 1);
  v13 = a1;
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *((_QWORD *)v10 + 1) = v12;
  v14 = *((_QWORD *)v11 + 3);
  *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
  *((_QWORD *)v10 + 3) = v14;
  v15 = v8[6];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = *((_QWORD *)v17 + 1);
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *((_QWORD *)v16 + 1) = v18;
  v19 = v8[7];
  v20 = &a1[v19];
  v21 = &a2[v19];
  v22 = *((_QWORD *)v21 + 1);
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *((_QWORD *)v20 + 1) = v22;
  v23 = v8[8];
  v24 = &a1[v23];
  v25 = &a2[v23];
  v26 = *((_QWORD *)v25 + 1);
  *(_QWORD *)v24 = *(_QWORD *)v25;
  *((_QWORD *)v24 + 1) = v26;
  v27 = v8[9];
  v136 = v13;
  v28 = a2;
  v29 = &v13[v27];
  v131 = v8;
  v132 = v28;
  v30 = &v28[v27];
  v31 = type metadata accessor for ArtworkImage.ViewModel(0);
  v32 = *(_QWORD *)(v31 - 8);
  v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v33(v30, 1, v31))
  {
    v34 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    v36 = v135;
    v35 = v136;
    v37 = v131;
  }
  else
  {
    v38 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v29, v30, v38);
    v39 = *(int *)(v31 + 20);
    v40 = &v29[v39];
    v41 = &v30[v39];
    v42 = type metadata accessor for Artwork.CropStyle(0);
    v43 = *(_QWORD *)(v42 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
    {
      v44 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v40, v41, v42);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
    }
    v36 = v135;
    v45 = v32;
    v37 = v131;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v29, 0, 1, v31);
    v35 = v136;
  }
  v46 = v37[10];
  v47 = &v35[v46];
  v48 = &v132[v46];
  v49 = type metadata accessor for MotionViewModel(0);
  v50 = *(_QWORD *)(v49 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
  {
    v51 = sub_100007E8C(&qword_1011AA8D0);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
  }
  else
  {
    v52 = type metadata accessor for VideoArtwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(v47, v48, v52);
    v53 = *(int *)(v49 + 20);
    v54 = &v47[v53];
    v55 = &v48[v53];
    v56 = type metadata accessor for Artwork.CropStyle(0);
    v57 = *(_QWORD *)(v56 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
    {
      v58 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v54, v55, v56);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
    }
    v36 = v135;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
    v35 = v136;
  }
  v59 = v37[11];
  v60 = &v35[v59];
  v61 = &v132[v59];
  v62 = *(void **)&v132[v59];
  *(_QWORD *)&v35[v59] = v62;
  v63 = (int *)type metadata accessor for SegueContext(0);
  v64 = v63[5];
  v65 = &v60[v64];
  v66 = &v61[v64];
  v67 = v62;
  if (v137(v66, 1, v36))
  {
    v68 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v134 + 16))(v65, v66, v36);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v134 + 56))(v65, 0, 1, v36);
  }
  v60[v63[6]] = v61[v63[6]];
  v69 = v63[7];
  v70 = &v60[v69];
  v71 = &v61[v69];
  if (*(_QWORD *)v71)
  {
    v72 = *((_QWORD *)v71 + 1);
    *(_QWORD *)v70 = *(_QWORD *)v71;
    *((_QWORD *)v70 + 1) = v72;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v70 = *(_OWORD *)v71;
  }
  v73 = v37[12];
  v74 = &v35[v73];
  v75 = &v132[v73];
  v76 = *(void **)&v132[v73];
  *(_QWORD *)v74 = v76;
  v77 = v63[5];
  v78 = &v74[v77];
  v79 = &v75[v77];
  v80 = v76;
  if (v137(v79, 1, v36))
  {
    v81 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v134 + 16))(v78, v79, v36);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v134 + 56))(v78, 0, 1, v36);
  }
  v74[v63[6]] = v75[v63[6]];
  v82 = v63[7];
  v83 = &v74[v82];
  v84 = &v75[v82];
  if (*(_QWORD *)v84)
  {
    v85 = *((_QWORD *)v84 + 1);
    *(_QWORD *)v83 = *(_QWORD *)v84;
    *((_QWORD *)v83 + 1) = v85;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v83 = *(_OWORD *)v84;
  }
  v86 = *(int *)(a3 + 20);
  v87 = &v35[v86];
  v88 = &v132[v86];
  v89 = &v132[v86 + 56];
  if (*(_QWORD *)v89 == 1)
  {
    v90 = *((_OWORD *)v88 + 3);
    *((_OWORD *)v87 + 2) = *((_OWORD *)v88 + 2);
    *((_OWORD *)v87 + 3) = v90;
    *((_QWORD *)v87 + 8) = *((_QWORD *)v88 + 8);
    v91 = *((_OWORD *)v88 + 1);
    *(_OWORD *)v87 = *(_OWORD *)v88;
    *((_OWORD *)v87 + 1) = v91;
    goto LABEL_35;
  }
  swift_unknownObjectWeakCopyInit(v87, v88);
  v92 = v88[48];
  if (v92 == 255)
  {
    v100 = *(_OWORD *)(v88 + 24);
    *(_OWORD *)(v87 + 8) = *(_OWORD *)(v88 + 8);
    *(_OWORD *)(v87 + 24) = v100;
    *(_OWORD *)(v87 + 33) = *(_OWORD *)(v88 + 33);
    v98 = *(_QWORD *)v89;
    if (*(_QWORD *)v89)
      goto LABEL_32;
  }
  else
  {
    v93 = (void *)*((_QWORD *)v88 + 1);
    v94 = *((_QWORD *)v88 + 2);
    v95 = *((_QWORD *)v88 + 3);
    v96 = *((_QWORD *)v88 + 4);
    v97 = *((_QWORD *)v88 + 5);
    sub_100347EC8(v93, v94, v95, v96, v97, v88[48]);
    *((_QWORD *)v87 + 1) = v93;
    *((_QWORD *)v87 + 2) = v94;
    *((_QWORD *)v87 + 3) = v95;
    *((_QWORD *)v87 + 4) = v96;
    *((_QWORD *)v87 + 5) = v97;
    v87[48] = v92;
    v98 = *(_QWORD *)v89;
    if (*(_QWORD *)v89)
    {
LABEL_32:
      v99 = *((_QWORD *)v88 + 8);
      *((_QWORD *)v87 + 7) = v98;
      *((_QWORD *)v87 + 8) = v99;
      swift_retain();
      goto LABEL_35;
    }
  }
  *(_OWORD *)(v87 + 56) = *(_OWORD *)v89;
LABEL_35:
  *((_QWORD *)v87 + 9) = *((_QWORD *)v88 + 9);
  v101 = (int *)_s18PerformanceConteXtVMa(0);
  v102 = v101[6];
  v103 = &v87[v102];
  v104 = &v88[v102];
  v105 = type metadata accessor for OpenURLAction(0);
  v106 = *(_QWORD *)(v105 - 8);
  v107 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v106 + 48);
  v108 = swift_retain();
  if (v107(v104, 1, v105, v108))
  {
    v109 = sub_100007E8C(&qword_1011A9580);
    memcpy(v103, v104, *(_QWORD *)(*(_QWORD *)(v109 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v106 + 16))(v103, v104, v105);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v106 + 56))(v103, 0, 1, v105);
  }
  v110 = v101[7];
  v111 = &v87[v110];
  v112 = &v88[v110];
  if (v137(&v88[v110], 1, v36))
  {
    v113 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v111, v112, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v134 + 16))(v111, v112, v36);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v134 + 56))(v111, 0, 1, v36);
  }
  *(_QWORD *)&v87[v101[8]] = *(_QWORD *)&v88[v101[8]];
  *(_QWORD *)&v87[v101[9]] = *(_QWORD *)&v88[v101[9]];
  *(_QWORD *)&v87[v101[10]] = *(_QWORD *)&v88[v101[10]];
  *(_QWORD *)&v87[v101[11]] = *(_QWORD *)&v88[v101[11]];
  v114 = v101[12];
  v115 = *(void **)&v88[v114];
  *(_QWORD *)&v87[v114] = v115;
  v116 = v101[13];
  v117 = &v87[v116];
  v118 = &v88[v116];
  v119 = *(_QWORD *)&v88[v116 + 8];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  v120 = v115;
  if (v119)
  {
    *(_QWORD *)v117 = *(_QWORD *)v118;
    *((_QWORD *)v117 + 1) = v119;
    v121 = v118 + 16;
    v122 = *((_QWORD *)v118 + 3);
    swift_bridgeObjectRetain();
    if (v122 >> 60 == 15)
    {
      *((_OWORD *)v117 + 1) = *v121;
    }
    else
    {
      v124 = *(_QWORD *)v121;
      sub_100079DE4(v124, v122);
      *((_QWORD *)v117 + 2) = v124;
      *((_QWORD *)v117 + 3) = v122;
    }
  }
  else
  {
    v123 = *((_OWORD *)v118 + 1);
    *(_OWORD *)v117 = *(_OWORD *)v118;
    *((_OWORD *)v117 + 1) = v123;
  }
  v125 = v101[14];
  v126 = &v87[v125];
  v127 = (uint64_t *)&v88[v125];
  v128 = v127[1];
  if (v128 >> 60 == 15)
  {
    *(_OWORD *)v126 = *(_OWORD *)v127;
  }
  else
  {
    v129 = *v127;
    sub_100079DE4(*v127, v127[1]);
    *(_QWORD *)v126 = v129;
    *((_QWORD *)v126 + 1) = v128;
  }
  return v136;
}

char *sub_1007F7628(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t (*v7)(char *, uint64_t, uint64_t);
  int v8;
  int v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t, uint64_t);
  int v30;
  int v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  size_t v40;
  void *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(void *, uint64_t, uint64_t);
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(uint64_t, uint64_t, uint64_t);
  int v58;
  int v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  size_t v68;
  void *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t (*v77)(void *, uint64_t, uint64_t);
  int v78;
  int v79;
  uint64_t v80;
  void **v81;
  char *v82;
  void *v83;
  void *v84;
  id v85;
  int *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  int v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void **v100;
  char *v101;
  void *v102;
  void *v103;
  id v104;
  uint64_t v105;
  char *v106;
  char *v107;
  int v108;
  int v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  __n128 v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  char *v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  int v130;
  void *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  __int128 *v136;
  __int128 *v137;
  int v138;
  void *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  void *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  unsigned __int8 v149;
  __int128 v150;
  __int128 v151;
  uint64_t v152;
  void *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  uint64_t v162;
  uint64_t v163;
  int *v164;
  uint64_t v165;
  void *v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t (*v170)(void *, uint64_t, uint64_t);
  int v171;
  int v172;
  uint64_t v173;
  uint64_t v174;
  void *v175;
  char *v176;
  int v177;
  int v178;
  uint64_t v179;
  uint64_t v180;
  void *v181;
  void *v182;
  id v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t *v189;
  unint64_t v190;
  uint64_t v191;
  _OWORD *v192;
  __int128 v193;
  __int128 v194;
  uint64_t v195;
  uint64_t v196;
  unint64_t v197;
  uint64_t v198;
  uint64_t *v199;
  uint64_t *v200;
  unint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  unint64_t v205;
  char *v207;
  uint64_t v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t (*v212)(char *, uint64_t, uint64_t);

  v6 = type metadata accessor for GenericMusicItem(0);
  v211 = *(_QWORD *)(v6 - 8);
  v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v211 + 48);
  v8 = v7(a1, 1, v6);
  v212 = v7;
  v9 = v7(a2, 1, v6);
  v208 = a3;
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(char *, char *, uint64_t))(v211 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v211 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v9)
  {
    (*(void (**)(char *, uint64_t))(v211 + 8))(a1, v6);
LABEL_6:
    v10 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v211 + 24))(a1, a2, v6);
LABEL_7:
  v11 = (int *)type metadata accessor for LiveRadio(0);
  v12 = v11[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  *(_QWORD *)v13 = *(_QWORD *)&a2[v12];
  *((_QWORD *)v13 + 1) = *(_QWORD *)&a2[v12 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
  *((_QWORD *)v13 + 3) = *((_QWORD *)v14 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = v11[6];
  v16 = &a1[v15];
  v17 = &a2[v15];
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = v11[7];
  v19 = &a1[v18];
  v20 = &a2[v18];
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21 = v11[8];
  v22 = &a1[v21];
  v23 = &a2[v21];
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24 = v11[9];
  v25 = (uint64_t)&a1[v24];
  v26 = &a2[v24];
  v27 = type metadata accessor for ArtworkImage.ViewModel(0);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
  v30 = v29(v25, 1, v27);
  v31 = v29((uint64_t)v26, 1, v27);
  v210 = v6;
  if (!v30)
  {
    if (!v31)
    {
      v43 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 24))(v25, v26, v43);
      v44 = *(int *)(v27 + 20);
      v45 = (void *)(v25 + v44);
      v46 = &v26[v44];
      v47 = type metadata accessor for Artwork.CropStyle(0);
      v48 = *(_QWORD *)(v47 - 8);
      v49 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v48 + 48);
      v50 = v49(v45, 1, v47);
      v51 = v49(v46, 1, v47);
      if (v50)
      {
        if (!v51)
        {
          (*(void (**)(void *, char *, uint64_t))(v48 + 16))(v45, v46, v47);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
          goto LABEL_21;
        }
      }
      else
      {
        if (!v51)
        {
          (*(void (**)(void *, char *, uint64_t))(v48 + 24))(v45, v46, v47);
          goto LABEL_21;
        }
        (*(void (**)(void *, uint64_t))(v48 + 8))(v45, v47);
      }
      v40 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v41 = v45;
      v42 = v46;
LABEL_14:
      memcpy(v41, v42, v40);
      goto LABEL_21;
    }
    sub_10005B748(v25, type metadata accessor for ArtworkImage.ViewModel);
LABEL_13:
    v40 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v41 = (void *)v25;
    v42 = v26;
    goto LABEL_14;
  }
  if (v31)
    goto LABEL_13;
  v32 = a1;
  v33 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v25, v26, v33);
  v34 = *(int *)(v27 + 20);
  v35 = (void *)(v25 + v34);
  v36 = &v26[v34];
  v37 = type metadata accessor for Artwork.CropStyle(0);
  v38 = *(_QWORD *)(v37 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
  {
    v39 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v38 + 16))(v35, v36, v37);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
  }
  a1 = v32;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  v6 = v210;
LABEL_21:
  v52 = v11[10];
  v53 = (uint64_t)&a1[v52];
  v54 = &a2[v52];
  v55 = type metadata accessor for MotionViewModel(0);
  v56 = *(_QWORD *)(v55 - 8);
  v57 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v56 + 48);
  v58 = v57(v53, 1, v55);
  v59 = v57((uint64_t)v54, 1, v55);
  v209 = a2;
  if (!v58)
  {
    if (!v59)
    {
      v71 = type metadata accessor for VideoArtwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 24))(v53, v54, v71);
      v72 = *(int *)(v55 + 20);
      v73 = (void *)(v53 + v72);
      v74 = &v54[v72];
      v75 = type metadata accessor for Artwork.CropStyle(0);
      v76 = *(_QWORD *)(v75 - 8);
      v77 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v76 + 48);
      v78 = v77(v73, 1, v75);
      v79 = v77(v74, 1, v75);
      if (v78)
      {
        if (!v79)
        {
          (*(void (**)(void *, char *, uint64_t))(v76 + 16))(v73, v74, v75);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
          goto LABEL_34;
        }
      }
      else
      {
        if (!v79)
        {
          (*(void (**)(void *, char *, uint64_t))(v76 + 24))(v73, v74, v75);
          goto LABEL_34;
        }
        (*(void (**)(void *, uint64_t))(v76 + 8))(v73, v75);
      }
      v68 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v69 = v73;
      v70 = v74;
LABEL_28:
      memcpy(v69, v70, v68);
      goto LABEL_34;
    }
    sub_10005B748(v53, type metadata accessor for MotionViewModel);
LABEL_27:
    v68 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011AA8D0) - 8) + 64);
    v69 = (void *)v53;
    v70 = v54;
    goto LABEL_28;
  }
  if (v59)
    goto LABEL_27;
  v60 = a1;
  v61 = type metadata accessor for VideoArtwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(v53, v54, v61);
  v62 = *(int *)(v55 + 20);
  v63 = (void *)(v53 + v62);
  v64 = &v54[v62];
  v65 = type metadata accessor for Artwork.CropStyle(0);
  v66 = *(_QWORD *)(v65 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v64, 1, v65))
  {
    v67 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v66 + 16))(v63, v64, v65);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
  }
  a1 = v60;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
  v6 = v210;
LABEL_34:
  v80 = v11[11];
  v81 = (void **)&a1[v80];
  v82 = &a2[v80];
  v83 = *(void **)&a2[v80];
  v84 = *v81;
  *v81 = v83;
  v85 = v83;

  v86 = (int *)type metadata accessor for SegueContext(0);
  v87 = v86[5];
  v88 = (char *)v81 + v87;
  v89 = &v82[v87];
  v90 = v212((char *)v81 + v87, 1, v6);
  v91 = v212(v89, 1, v6);
  if (v90)
  {
    if (!v91)
    {
      (*(void (**)(char *, char *, uint64_t))(v211 + 16))(v88, v89, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v211 + 56))(v88, 0, 1, v6);
      goto LABEL_40;
    }
    goto LABEL_39;
  }
  if (v91)
  {
    (*(void (**)(char *, uint64_t))(v211 + 8))(v88, v6);
LABEL_39:
    v92 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
    goto LABEL_40;
  }
  (*(void (**)(char *, char *, uint64_t))(v211 + 24))(v88, v89, v6);
LABEL_40:
  *((_BYTE *)v81 + v86[6]) = v82[v86[6]];
  v93 = v86[7];
  v94 = (void **)((char *)v81 + v93);
  v95 = &v82[v93];
  v96 = *(_QWORD *)v95;
  if (*v94)
  {
    if (v96)
    {
      v97 = *((_QWORD *)v95 + 1);
      *v94 = v96;
      v94[1] = v97;
      swift_retain();
      swift_release();
      goto LABEL_47;
    }
    swift_release();
  }
  else if (v96)
  {
    v98 = *((_QWORD *)v95 + 1);
    *v94 = v96;
    v94[1] = v98;
    swift_retain();
    goto LABEL_47;
  }
  *(_OWORD *)v94 = *(_OWORD *)v95;
LABEL_47:
  v99 = v11[12];
  v100 = (void **)&a1[v99];
  v101 = &a2[v99];
  v102 = *(void **)&a2[v99];
  v103 = *v100;
  *v100 = v102;
  v104 = v102;

  v105 = v86[5];
  v106 = (char *)v100 + v105;
  v107 = &v101[v105];
  v108 = v212((char *)v100 + v105, 1, v6);
  v109 = v212(v107, 1, v6);
  if (v108)
  {
    if (!v109)
    {
      (*(void (**)(char *, char *, uint64_t))(v211 + 16))(v106, v107, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v211 + 56))(v106, 0, 1, v6);
      goto LABEL_53;
    }
    goto LABEL_52;
  }
  if (v109)
  {
    (*(void (**)(char *, uint64_t))(v211 + 8))(v106, v6);
LABEL_52:
    v110 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
    goto LABEL_53;
  }
  (*(void (**)(char *, char *, uint64_t))(v211 + 24))(v106, v107, v6);
LABEL_53:
  *((_BYTE *)v100 + v86[6]) = v101[v86[6]];
  v111 = v86[7];
  v112 = (void **)((char *)v100 + v111);
  v113 = &v101[v111];
  v114 = *(_QWORD *)v113;
  if (*v112)
  {
    if (v114)
    {
      v115 = *((_QWORD *)v113 + 1);
      *v112 = v114;
      v112[1] = v115;
      swift_retain();
      v116 = swift_release();
      goto LABEL_60;
    }
    swift_release();
  }
  else if (v114)
  {
    v117 = *((_QWORD *)v113 + 1);
    *v112 = v114;
    v112[1] = v117;
    v116 = swift_retain();
    goto LABEL_60;
  }
  v116 = *(__n128 *)v113;
  *(_OWORD *)v112 = *(_OWORD *)v113;
LABEL_60:
  v118 = *(int *)(v208 + 20);
  v119 = (uint64_t)&a1[v118];
  v120 = &a2[v118];
  v121 = &a1[v118 + 56];
  v123 = &v209[v118 + 56];
  v122 = *(_QWORD *)v123;
  if (*(_QWORD *)v121 == 1)
  {
    if (v122 == 1)
    {
      *(_OWORD *)v119 = *(_OWORD *)v120;
      v124 = *((_OWORD *)v120 + 1);
      v125 = *((_OWORD *)v120 + 2);
      v126 = *((_OWORD *)v120 + 3);
      *(_QWORD *)(v119 + 64) = *((_QWORD *)v120 + 8);
      *(_OWORD *)(v119 + 32) = v125;
      *(_OWORD *)(v119 + 48) = v126;
      *(_OWORD *)(v119 + 16) = v124;
      goto LABEL_93;
    }
    swift_unknownObjectWeakCopyInit(v119, v120);
    v130 = v120[48];
    v207 = a1;
    if (v130 == 255)
    {
      v150 = *(_OWORD *)(v120 + 8);
      v151 = *(_OWORD *)(v120 + 24);
      *(_OWORD *)(v119 + 33) = *(_OWORD *)(v120 + 33);
      *(_OWORD *)(v119 + 8) = v150;
      *(_OWORD *)(v119 + 24) = v151;
    }
    else
    {
      v131 = (void *)*((_QWORD *)v120 + 1);
      v132 = *((_QWORD *)v120 + 2);
      v133 = *((_QWORD *)v120 + 3);
      v134 = *((_QWORD *)v120 + 4);
      v135 = *((_QWORD *)v120 + 5);
      sub_100347EC8(v131, v132, v133, v134, v135, v130);
      *(_QWORD *)(v119 + 8) = v131;
      *(_QWORD *)(v119 + 16) = v132;
      *(_QWORD *)(v119 + 24) = v133;
      *(_QWORD *)(v119 + 32) = v134;
      *(_QWORD *)(v119 + 40) = v135;
      *(_BYTE *)(v119 + 48) = v130;
    }
    v152 = *(_QWORD *)v123;
    if (!*(_QWORD *)v123)
      goto LABEL_91;
    goto LABEL_89;
  }
  if (v122 == 1)
  {
    sub_100064B4C(v119);
    *(_OWORD *)v119 = *(_OWORD *)v120;
    v128 = *((_OWORD *)v120 + 2);
    v127 = *((_OWORD *)v120 + 3);
    v129 = *((_OWORD *)v120 + 1);
    *(_QWORD *)(v119 + 64) = *((_QWORD *)v120 + 8);
    *(_OWORD *)(v119 + 32) = v128;
    *(_OWORD *)(v119 + 48) = v127;
    *(_OWORD *)(v119 + 16) = v129;
    goto LABEL_93;
  }
  swift_unknownObjectWeakCopyAssign(v119, v120, v116);
  v136 = (__int128 *)(v119 + 8);
  v137 = (__int128 *)(v120 + 8);
  v138 = v120[48];
  v207 = a1;
  if (*(unsigned __int8 *)(v119 + 48) == 255)
  {
    if (v138 == 255)
    {
      v160 = *v137;
      v161 = *(_OWORD *)(v120 + 24);
      *(_OWORD *)(v119 + 33) = *(_OWORD *)(v120 + 33);
      *v136 = v160;
      *(_OWORD *)(v119 + 24) = v161;
    }
    else
    {
      v153 = (void *)*((_QWORD *)v120 + 1);
      v154 = *((_QWORD *)v120 + 2);
      v155 = *((_QWORD *)v120 + 3);
      v156 = *((_QWORD *)v120 + 4);
      v157 = *((_QWORD *)v120 + 5);
      sub_100347EC8(v153, v154, v155, v156, v157, v138);
      *(_QWORD *)(v119 + 8) = v153;
      *(_QWORD *)(v119 + 16) = v154;
      *(_QWORD *)(v119 + 24) = v155;
      *(_QWORD *)(v119 + 32) = v156;
      *(_QWORD *)(v119 + 40) = v157;
      *(_BYTE *)(v119 + 48) = v138;
    }
  }
  else if (v138 == 255)
  {
    sub_1003482D8(v119 + 8);
    v158 = *(_OWORD *)(v120 + 33);
    v159 = *(_OWORD *)(v120 + 24);
    *v136 = *v137;
    *(_OWORD *)(v119 + 24) = v159;
    *(_OWORD *)(v119 + 33) = v158;
  }
  else
  {
    v139 = (void *)*((_QWORD *)v120 + 1);
    v140 = *((_QWORD *)v120 + 2);
    v141 = *((_QWORD *)v120 + 3);
    v142 = *((_QWORD *)v120 + 4);
    v143 = *((_QWORD *)v120 + 5);
    sub_100347EC8(v139, v140, v141, v142, v143, v138);
    v144 = *(void **)(v119 + 8);
    v145 = *(_QWORD *)(v119 + 16);
    v146 = *(_QWORD *)(v119 + 24);
    v147 = *(_QWORD *)(v119 + 32);
    v148 = *(_QWORD *)(v119 + 40);
    *(_QWORD *)(v119 + 8) = v139;
    *(_QWORD *)(v119 + 16) = v140;
    *(_QWORD *)(v119 + 24) = v141;
    *(_QWORD *)(v119 + 32) = v142;
    *(_QWORD *)(v119 + 40) = v143;
    v149 = *(_BYTE *)(v119 + 48);
    *(_BYTE *)(v119 + 48) = v138;
    sub_100064AA4(v144, v145, v146, v147, v148, v149);
  }
  v152 = *(_QWORD *)v123;
  if (!*(_QWORD *)v121)
  {
    if (v152)
    {
LABEL_89:
      v163 = *((_QWORD *)v120 + 8);
      *(_QWORD *)(v119 + 56) = v152;
      *(_QWORD *)(v119 + 64) = v163;
      swift_retain();
      goto LABEL_92;
    }
LABEL_91:
    *(_OWORD *)v121 = *(_OWORD *)v123;
    goto LABEL_92;
  }
  if (!v152)
  {
    swift_release();
    goto LABEL_91;
  }
  v162 = *((_QWORD *)v120 + 8);
  *(_QWORD *)(v119 + 56) = v152;
  *(_QWORD *)(v119 + 64) = v162;
  swift_retain();
  swift_release();
LABEL_92:
  a1 = v207;
LABEL_93:
  *(_QWORD *)(v119 + 72) = *((_QWORD *)v120 + 9);
  swift_retain();
  swift_release();
  v164 = (int *)_s18PerformanceConteXtVMa(0);
  v165 = v164[6];
  v166 = (void *)(v119 + v165);
  v167 = &v120[v165];
  v168 = type metadata accessor for OpenURLAction(0);
  v169 = *(_QWORD *)(v168 - 8);
  v170 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v169 + 48);
  v171 = v170(v166, 1, v168);
  v172 = v170(v167, 1, v168);
  if (v171)
  {
    if (!v172)
    {
      (*(void (**)(void *, char *, uint64_t))(v169 + 16))(v166, v167, v168);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v169 + 56))(v166, 0, 1, v168);
      goto LABEL_99;
    }
    goto LABEL_98;
  }
  if (v172)
  {
    (*(void (**)(void *, uint64_t))(v169 + 8))(v166, v168);
LABEL_98:
    v173 = sub_100007E8C(&qword_1011A9580);
    memcpy(v166, v167, *(_QWORD *)(*(_QWORD *)(v173 - 8) + 64));
    goto LABEL_99;
  }
  (*(void (**)(void *, char *, uint64_t))(v169 + 24))(v166, v167, v168);
LABEL_99:
  v174 = v164[7];
  v175 = (void *)(v119 + v174);
  v176 = &v120[v174];
  v177 = v212((char *)(v119 + v174), 1, v210);
  v178 = v212(v176, 1, v210);
  if (v177)
  {
    if (!v178)
    {
      (*(void (**)(void *, char *, uint64_t))(v211 + 16))(v175, v176, v210);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v211 + 56))(v175, 0, 1, v210);
      goto LABEL_105;
    }
    goto LABEL_104;
  }
  if (v178)
  {
    (*(void (**)(void *, uint64_t))(v211 + 8))(v175, v210);
LABEL_104:
    v179 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v175, v176, *(_QWORD *)(*(_QWORD *)(v179 - 8) + 64));
    goto LABEL_105;
  }
  (*(void (**)(void *, char *, uint64_t))(v211 + 24))(v175, v176, v210);
LABEL_105:
  *(_QWORD *)(v119 + v164[8]) = *(_QWORD *)&v120[v164[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v119 + v164[9]) = *(_QWORD *)&v120[v164[9]];
  swift_retain();
  swift_release();
  *(_QWORD *)(v119 + v164[10]) = *(_QWORD *)&v120[v164[10]];
  swift_retain();
  swift_release();
  *(_QWORD *)(v119 + v164[11]) = *(_QWORD *)&v120[v164[11]];
  swift_retain();
  swift_release();
  v180 = v164[12];
  v181 = *(void **)(v119 + v180);
  v182 = *(void **)&v120[v180];
  *(_QWORD *)(v119 + v180) = v182;
  v183 = v182;

  v184 = v164[13];
  v185 = v119 + v184;
  v186 = &v120[v184];
  v187 = *(_QWORD *)(v119 + v184 + 8);
  v188 = *(_QWORD *)&v120[v184 + 8];
  if (!v187)
  {
    if (!v188)
    {
      v194 = *((_OWORD *)v186 + 1);
      *(_OWORD *)v185 = *(_OWORD *)v186;
      *(_OWORD *)(v185 + 16) = v194;
      goto LABEL_123;
    }
    *(_QWORD *)v185 = *(_QWORD *)v186;
    *(_QWORD *)(v185 + 8) = *((_QWORD *)v186 + 1);
    v192 = v186 + 16;
    v190 = *((_QWORD *)v186 + 3);
    swift_bridgeObjectRetain();
    if (v190 >> 60 == 15)
    {
      *(_OWORD *)(v185 + 16) = *v192;
      goto LABEL_123;
    }
    v191 = *(_QWORD *)v192;
    goto LABEL_121;
  }
  if (!v188)
  {
    sub_1005F67E4(v185);
    v193 = *((_OWORD *)v186 + 1);
    *(_OWORD *)v185 = *(_OWORD *)v186;
    *(_OWORD *)(v185 + 16) = v193;
    goto LABEL_123;
  }
  *(_QWORD *)v185 = *(_QWORD *)v186;
  *(_QWORD *)(v185 + 8) = *((_QWORD *)v186 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v189 = (uint64_t *)(v186 + 16);
  v190 = *((_QWORD *)v186 + 3);
  if (*(_QWORD *)(v185 + 24) >> 60 == 15)
  {
    if (v190 >> 60 != 15)
    {
      v191 = *v189;
LABEL_121:
      sub_100079DE4(v191, v190);
      *(_QWORD *)(v185 + 16) = v191;
      *(_QWORD *)(v185 + 24) = v190;
      goto LABEL_123;
    }
LABEL_116:
    *(_OWORD *)(v185 + 16) = *(_OWORD *)v189;
    goto LABEL_123;
  }
  if (v190 >> 60 == 15)
  {
    sub_1005F67B0(v185 + 16);
    goto LABEL_116;
  }
  v195 = *v189;
  sub_100079DE4(*v189, *((_QWORD *)v186 + 3));
  v196 = *(_QWORD *)(v185 + 16);
  v197 = *(_QWORD *)(v185 + 24);
  *(_QWORD *)(v185 + 16) = v195;
  *(_QWORD *)(v185 + 24) = v190;
  sub_1000652DC(v196, v197);
LABEL_123:
  v198 = v164[14];
  v199 = (uint64_t *)(v119 + v198);
  v200 = (uint64_t *)&v120[v198];
  v201 = *(_QWORD *)&v120[v198 + 8];
  if (*(_QWORD *)(v119 + v198 + 8) >> 60 != 15)
  {
    if (v201 >> 60 != 15)
    {
      v203 = *v200;
      sub_100079DE4(*v200, v201);
      v204 = *v199;
      v205 = v199[1];
      *v199 = v203;
      v199[1] = v201;
      sub_1000652DC(v204, v205);
      return a1;
    }
    sub_1005F67B0((uint64_t)v199);
    goto LABEL_128;
  }
  if (v201 >> 60 == 15)
  {
LABEL_128:
    *(_OWORD *)v199 = *(_OWORD *)v200;
    return a1;
  }
  v202 = *v200;
  sub_100079DE4(*v200, v201);
  *v199 = v202;
  v199[1] = v201;
  return a1;
}

char *sub_1007F8560(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  int *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  int *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  __int128 v83;
  char *__dst;
  char *__dsta;
  uint64_t v87;
  uint64_t v88;
  unsigned int (*v90)(char *, uint64_t, uint64_t);

  v5 = type metadata accessor for GenericMusicItem(0);
  v6 = *(_QWORD *)(v5 - 8);
  v90 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (v90(a2, 1, v5))
  {
    v7 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  v8 = (int *)type metadata accessor for LiveRadio(0);
  v9 = v8[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *((_OWORD *)v11 + 1);
  *(_OWORD *)v10 = *(_OWORD *)v11;
  *((_OWORD *)v10 + 1) = v12;
  *(_OWORD *)&a1[v8[6]] = *(_OWORD *)&a2[v8[6]];
  *(_OWORD *)&a1[v8[7]] = *(_OWORD *)&a2[v8[7]];
  *(_OWORD *)&a1[v8[8]] = *(_OWORD *)&a2[v8[8]];
  v13 = v8[9];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = type metadata accessor for ArtworkImage.ViewModel(0);
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    v18 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v87 = v6;
    v19 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v14, v15, v19);
    v20 = *(int *)(v16 + 20);
    __dst = &v14[v20];
    v21 = &v15[v20];
    v22 = type metadata accessor for Artwork.CropStyle(0);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    {
      v24 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(__dst, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 32))(__dst, v21, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(__dst, 0, 1, v22);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    v6 = v87;
  }
  v25 = v8[10];
  v26 = &a1[v25];
  v27 = &a2[v25];
  v28 = type metadata accessor for MotionViewModel(0);
  v29 = *(_QWORD *)(v28 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
  {
    v30 = sub_100007E8C(&qword_1011AA8D0);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    v88 = v6;
    v31 = type metadata accessor for VideoArtwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v26, v27, v31);
    v32 = *(int *)(v28 + 20);
    __dsta = &v26[v32];
    v33 = &v27[v32];
    v34 = type metadata accessor for Artwork.CropStyle(0);
    v35 = *(_QWORD *)(v34 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
    {
      v36 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(__dsta, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 32))(__dsta, v33, v34);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(__dsta, 0, 1, v34);
    }
    v6 = v88;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  }
  v37 = v8[11];
  v38 = &a1[v37];
  v39 = &a2[v37];
  *(_QWORD *)&a1[v37] = *(_QWORD *)&a2[v37];
  v40 = (int *)type metadata accessor for SegueContext(0);
  v41 = v40[5];
  v42 = &v38[v41];
  v43 = &v39[v41];
  if (v90(&v39[v41], 1, v5))
  {
    v44 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v42, v43, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v42, 0, 1, v5);
  }
  v38[v40[6]] = v39[v40[6]];
  v45 = v40[7];
  v46 = &v38[v45];
  v47 = &v39[v45];
  v48 = *(_QWORD *)v47;
  if (*(_QWORD *)v47)
  {
    v49 = *((_QWORD *)v47 + 1);
    *(_QWORD *)v46 = v48;
    *((_QWORD *)v46 + 1) = v49;
  }
  else
  {
    *(_OWORD *)v46 = *(_OWORD *)v47;
  }
  v50 = v8[12];
  v51 = &a1[v50];
  v52 = &a2[v50];
  *(_QWORD *)v51 = *(_QWORD *)&a2[v50];
  v53 = v40[5];
  v54 = &v51[v53];
  v55 = &v52[v53];
  if (v90(&v52[v53], 1, v5))
  {
    v56 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v54, v55, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v54, 0, 1, v5);
  }
  v51[v40[6]] = v52[v40[6]];
  v57 = v40[7];
  v58 = &v51[v57];
  v59 = &v52[v57];
  v60 = *(_QWORD *)v59;
  if (*(_QWORD *)v59)
  {
    v61 = *((_QWORD *)v59 + 1);
    *(_QWORD *)v58 = v60;
    *((_QWORD *)v58 + 1) = v61;
  }
  else
  {
    *(_OWORD *)v58 = *(_OWORD *)v59;
  }
  v62 = *(int *)(a3 + 20);
  v63 = &a1[v62];
  v64 = &a2[v62];
  if (*((_QWORD *)v64 + 7) == 1)
  {
    v65 = *((_OWORD *)v64 + 3);
    *((_OWORD *)v63 + 2) = *((_OWORD *)v64 + 2);
    *((_OWORD *)v63 + 3) = v65;
    *((_QWORD *)v63 + 8) = *((_QWORD *)v64 + 8);
    v66 = *((_OWORD *)v64 + 1);
    *(_OWORD *)v63 = *(_OWORD *)v64;
    *((_OWORD *)v63 + 1) = v66;
  }
  else
  {
    swift_unknownObjectWeakTakeInit(v63, v64);
    *(_OWORD *)(v63 + 8) = *(_OWORD *)(v64 + 8);
    *(_OWORD *)(v63 + 24) = *(_OWORD *)(v64 + 24);
    *(_OWORD *)(v63 + 33) = *(_OWORD *)(v64 + 33);
    v67 = *((_QWORD *)v64 + 7);
    if (v67)
    {
      v68 = *((_QWORD *)v64 + 8);
      *((_QWORD *)v63 + 7) = v67;
      *((_QWORD *)v63 + 8) = v68;
    }
    else
    {
      *(_OWORD *)(v63 + 56) = *(_OWORD *)(v64 + 56);
    }
  }
  *((_QWORD *)v63 + 9) = *((_QWORD *)v64 + 9);
  v69 = (int *)_s18PerformanceConteXtVMa(0);
  v70 = v69[6];
  v71 = &v63[v70];
  v72 = &v64[v70];
  v73 = type metadata accessor for OpenURLAction(0);
  v74 = *(_QWORD *)(v73 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v72, 1, v73))
  {
    v75 = sub_100007E8C(&qword_1011A9580);
    memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v71, v72, v73);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v71, 0, 1, v73);
  }
  v76 = v69[7];
  v77 = &v63[v76];
  v78 = &v64[v76];
  if (v90(&v64[v76], 1, v5))
  {
    v79 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v77, v78, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v77, 0, 1, v5);
  }
  *(_QWORD *)&v63[v69[8]] = *(_QWORD *)&v64[v69[8]];
  *(_QWORD *)&v63[v69[9]] = *(_QWORD *)&v64[v69[9]];
  *(_QWORD *)&v63[v69[10]] = *(_QWORD *)&v64[v69[10]];
  *(_QWORD *)&v63[v69[11]] = *(_QWORD *)&v64[v69[11]];
  *(_QWORD *)&v63[v69[12]] = *(_QWORD *)&v64[v69[12]];
  v80 = v69[13];
  v81 = &v63[v80];
  v82 = &v64[v80];
  v83 = *((_OWORD *)v82 + 1);
  *(_OWORD *)v81 = *(_OWORD *)v82;
  *((_OWORD *)v81 + 1) = v83;
  *(_OWORD *)&v63[v69[14]] = *(_OWORD *)&v64[v69[14]];
  return a1;
}

char *sub_1007F8C1C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t (*v7)(char *, uint64_t, uint64_t);
  int v8;
  int v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t, uint64_t);
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  size_t v47;
  void *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(void *, uint64_t, uint64_t);
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(uint64_t, uint64_t, uint64_t);
  int v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  size_t v74;
  void *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t (*v83)(void *, uint64_t, uint64_t);
  int v84;
  int v85;
  uint64_t v86;
  char *v87;
  char *v88;
  void *v89;
  int *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  int v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  void *v107;
  uint64_t v108;
  char *v109;
  char *v110;
  int v111;
  int v112;
  __n128 v113;
  uint64_t v114;
  uint64_t v115;
  __n128 *v116;
  __n128 *v117;
  unint64_t v118;
  unint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  char *v126;
  char *v127;
  __int128 v128;
  __int128 v129;
  uint64_t v130;
  int v131;
  int v132;
  uint64_t v133;
  void *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  __int128 v139;
  uint64_t v140;
  uint64_t v141;
  int *v142;
  uint64_t v143;
  void *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t (*v148)(void *, uint64_t, uint64_t);
  int v149;
  int v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  void *v154;
  char *v155;
  int v156;
  int v157;
  uint64_t v158;
  uint64_t v159;
  void *v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  _OWORD *v165;
  unint64_t v166;
  unint64_t v167;
  __int128 v168;
  uint64_t v169;
  uint64_t *v170;
  uint64_t *v171;
  unint64_t v172;
  unint64_t v173;
  uint64_t v174;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  uint64_t v179;
  uint64_t (*v180)(char *, uint64_t, uint64_t);
  uint64_t v181;

  v6 = type metadata accessor for GenericMusicItem(0);
  v179 = *(_QWORD *)(v6 - 8);
  v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v179 + 48);
  v8 = v7(a1, 1, v6);
  v180 = v7;
  v9 = v7(a2, 1, v6);
  v181 = v6;
  v177 = a3;
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(char *, char *, uint64_t))(v179 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v179 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v9)
  {
    (*(void (**)(char *, uint64_t))(v179 + 8))(a1, v6);
LABEL_6:
    v10 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v179 + 40))(a1, a2, v6);
LABEL_7:
  v11 = (int *)type metadata accessor for LiveRadio(0);
  v12 = v11[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = *(_QWORD *)&a2[v12 + 8];
  *(_QWORD *)v13 = *(_QWORD *)&a2[v12];
  *((_QWORD *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  v16 = *((_QWORD *)v14 + 3);
  *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
  *((_QWORD *)v13 + 3) = v16;
  swift_bridgeObjectRelease();
  v17 = v11[6];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v21 = *(_QWORD *)v19;
  v20 = *((_QWORD *)v19 + 1);
  *(_QWORD *)v18 = v21;
  *((_QWORD *)v18 + 1) = v20;
  swift_bridgeObjectRelease();
  v22 = v11[7];
  v23 = &a1[v22];
  v24 = &a2[v22];
  v26 = *(_QWORD *)v24;
  v25 = *((_QWORD *)v24 + 1);
  *(_QWORD *)v23 = v26;
  *((_QWORD *)v23 + 1) = v25;
  swift_bridgeObjectRelease();
  v27 = v11[8];
  v28 = &a1[v27];
  v29 = &a2[v27];
  v31 = *(_QWORD *)v29;
  v30 = *((_QWORD *)v29 + 1);
  *(_QWORD *)v28 = v31;
  *((_QWORD *)v28 + 1) = v30;
  swift_bridgeObjectRelease();
  v32 = v11[9];
  v33 = (uint64_t)&a1[v32];
  v34 = &a2[v32];
  v35 = type metadata accessor for ArtworkImage.ViewModel(0);
  v36 = *(_QWORD *)(v35 - 8);
  v37 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 48);
  v38 = v37(v33, 1, v35);
  v39 = v37((uint64_t)v34, 1, v35);
  if (!v38)
  {
    if (!v39)
    {
      v50 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 40))(v33, v34, v50);
      v51 = *(int *)(v35 + 20);
      v52 = (void *)(v33 + v51);
      v53 = &v34[v51];
      v54 = type metadata accessor for Artwork.CropStyle(0);
      v55 = *(_QWORD *)(v54 - 8);
      v56 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v55 + 48);
      v57 = v56(v52, 1, v54);
      v58 = v56(v53, 1, v54);
      if (v57)
      {
        if (!v58)
        {
          (*(void (**)(void *, char *, uint64_t))(v55 + 32))(v52, v53, v54);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
          goto LABEL_21;
        }
      }
      else
      {
        if (!v58)
        {
          (*(void (**)(void *, char *, uint64_t))(v55 + 40))(v52, v53, v54);
          goto LABEL_21;
        }
        (*(void (**)(void *, uint64_t))(v55 + 8))(v52, v54);
      }
      v47 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v48 = v52;
      v49 = v53;
LABEL_14:
      memcpy(v48, v49, v47);
      goto LABEL_21;
    }
    sub_10005B748(v33, type metadata accessor for ArtworkImage.ViewModel);
LABEL_13:
    v47 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v48 = (void *)v33;
    v49 = v34;
    goto LABEL_14;
  }
  if (v39)
    goto LABEL_13;
  v40 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v33, v34, v40);
  v41 = *(int *)(v35 + 20);
  v42 = (void *)(v33 + v41);
  v43 = &v34[v41];
  v44 = type metadata accessor for Artwork.CropStyle(0);
  v45 = *(_QWORD *)(v44 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
  {
    v46 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v45 + 32))(v42, v43, v44);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
LABEL_21:
  v59 = v11[10];
  v60 = (uint64_t)&a1[v59];
  v61 = &a2[v59];
  v62 = type metadata accessor for MotionViewModel(0);
  v63 = *(_QWORD *)(v62 - 8);
  v64 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v63 + 48);
  v65 = v64(v60, 1, v62);
  v66 = v64((uint64_t)v61, 1, v62);
  v178 = a2;
  if (!v65)
  {
    if (!v66)
    {
      v77 = type metadata accessor for VideoArtwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 40))(v60, v61, v77);
      v78 = *(int *)(v62 + 20);
      v79 = (void *)(v60 + v78);
      v80 = &v61[v78];
      v81 = type metadata accessor for Artwork.CropStyle(0);
      v82 = *(_QWORD *)(v81 - 8);
      v83 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v82 + 48);
      v84 = v83(v79, 1, v81);
      v85 = v83(v80, 1, v81);
      if (v84)
      {
        if (!v85)
        {
          (*(void (**)(void *, char *, uint64_t))(v82 + 32))(v79, v80, v81);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v79, 0, 1, v81);
          goto LABEL_34;
        }
      }
      else
      {
        if (!v85)
        {
          (*(void (**)(void *, char *, uint64_t))(v82 + 40))(v79, v80, v81);
          goto LABEL_34;
        }
        (*(void (**)(void *, uint64_t))(v82 + 8))(v79, v81);
      }
      v74 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v75 = v79;
      v76 = v80;
LABEL_28:
      memcpy(v75, v76, v74);
      goto LABEL_34;
    }
    sub_10005B748(v60, type metadata accessor for MotionViewModel);
LABEL_27:
    v74 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011AA8D0) - 8) + 64);
    v75 = (void *)v60;
    v76 = v61;
    goto LABEL_28;
  }
  if (v66)
    goto LABEL_27;
  v67 = type metadata accessor for VideoArtwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(v60, v61, v67);
  v68 = *(int *)(v62 + 20);
  v69 = (void *)(v60 + v68);
  v70 = &v61[v68];
  v71 = type metadata accessor for Artwork.CropStyle(0);
  v72 = *(_QWORD *)(v71 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48))(v70, 1, v71))
  {
    v73 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v72 + 32))(v69, v70, v71);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v69, 0, 1, v71);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
LABEL_34:
  v86 = v11[11];
  v87 = &a1[v86];
  v88 = &a2[v86];
  v89 = *(void **)&a1[v86];
  *(_QWORD *)&a1[v86] = *(_QWORD *)&a2[v86];

  v90 = (int *)type metadata accessor for SegueContext(0);
  v91 = v90[5];
  v92 = &v87[v91];
  v93 = &v88[v91];
  v94 = v180(&v87[v91], 1, v181);
  v95 = v180(v93, 1, v181);
  if (v94)
  {
    if (!v95)
    {
      (*(void (**)(char *, char *, uint64_t))(v179 + 32))(v92, v93, v181);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v179 + 56))(v92, 0, 1, v181);
      goto LABEL_40;
    }
    goto LABEL_39;
  }
  if (v95)
  {
    (*(void (**)(char *, uint64_t))(v179 + 8))(v92, v181);
LABEL_39:
    v96 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
    goto LABEL_40;
  }
  (*(void (**)(char *, char *, uint64_t))(v179 + 40))(v92, v93, v181);
LABEL_40:
  v87[v90[6]] = v88[v90[6]];
  v97 = v90[7];
  v98 = &v87[v97];
  v99 = &v88[v97];
  v100 = *(_QWORD *)&v87[v97];
  v101 = *(_QWORD *)v99;
  if (v100)
  {
    if (v101)
    {
      v102 = *((_QWORD *)v99 + 1);
      *(_QWORD *)v98 = v101;
      *((_QWORD *)v98 + 1) = v102;
      swift_release();
      goto LABEL_47;
    }
    swift_release();
  }
  else if (v101)
  {
    v103 = *((_QWORD *)v99 + 1);
    *(_QWORD *)v98 = v101;
    *((_QWORD *)v98 + 1) = v103;
    goto LABEL_47;
  }
  *(_OWORD *)v98 = *(_OWORD *)v99;
LABEL_47:
  v104 = v11[12];
  v105 = &a1[v104];
  v106 = &a2[v104];
  v107 = *(void **)&a1[v104];
  *(_QWORD *)&a1[v104] = *(_QWORD *)&a2[v104];

  v108 = v90[5];
  v109 = &v105[v108];
  v110 = &v106[v108];
  v111 = v180(&v105[v108], 1, v181);
  v112 = v180(v110, 1, v181);
  if (v111)
  {
    if (!v112)
    {
      (*(void (**)(char *, char *, uint64_t))(v179 + 32))(v109, v110, v181);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v179 + 56))(v109, 0, 1, v181);
      goto LABEL_53;
    }
    goto LABEL_52;
  }
  if (v112)
  {
    (*(void (**)(char *, uint64_t))(v179 + 8))(v109, v181);
LABEL_52:
    v114 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
    goto LABEL_53;
  }
  (*(void (**)(char *, char *, uint64_t))(v179 + 40))(v109, v110, v181);
LABEL_53:
  v105[v90[6]] = v106[v90[6]];
  v115 = v90[7];
  v116 = (__n128 *)&v105[v115];
  v117 = (__n128 *)&v106[v115];
  v118 = *(_QWORD *)&v106[v115];
  if (v116->n128_u64[0])
  {
    if (v118)
    {
      v119 = v117->n128_u64[1];
      v116->n128_u64[0] = v118;
      v116->n128_u64[1] = v119;
      v113 = swift_release();
      goto LABEL_60;
    }
    swift_release();
  }
  else if (v118)
  {
    v120 = v117->n128_u64[1];
    v116->n128_u64[0] = v118;
    v116->n128_u64[1] = v120;
    goto LABEL_60;
  }
  v113 = *v117;
  *v116 = *v117;
LABEL_60:
  v121 = *(int *)(v177 + 20);
  v122 = (uint64_t)&a1[v121];
  v123 = &a2[v121];
  v124 = &a1[v121 + 56];
  v126 = &v178[v121 + 56];
  v125 = *(_QWORD *)v126;
  if (*(_QWORD *)v124 != 1)
  {
    if (v125 == 1)
    {
      v127 = a1;
      sub_100064B4C(v122);
      goto LABEL_65;
    }
    swift_unknownObjectWeakTakeAssign(v122, v123, v113);
    v131 = *(unsigned __int8 *)(v122 + 48);
    if (v131 != 255)
    {
      v132 = v123[48];
      if (v132 != 255)
      {
        v133 = *((_QWORD *)v123 + 5);
        v134 = *(void **)(v122 + 8);
        v135 = *(_QWORD *)(v122 + 16);
        v136 = *(_QWORD *)(v122 + 24);
        v137 = *(_QWORD *)(v122 + 32);
        v138 = *(_QWORD *)(v122 + 40);
        *(_OWORD *)(v122 + 8) = *(_OWORD *)(v123 + 8);
        *(_OWORD *)(v122 + 24) = *(_OWORD *)(v123 + 24);
        *(_QWORD *)(v122 + 40) = v133;
        *(_BYTE *)(v122 + 48) = v132;
        sub_100064AA4(v134, v135, v136, v137, v138, v131);
        goto LABEL_76;
      }
      sub_1003482D8(v122 + 8);
    }
    v139 = *(_OWORD *)(v123 + 24);
    *(_OWORD *)(v122 + 8) = *(_OWORD *)(v123 + 8);
    *(_OWORD *)(v122 + 24) = v139;
    *(_OWORD *)(v122 + 33) = *(_OWORD *)(v123 + 33);
LABEL_76:
    v130 = *(_QWORD *)v126;
    v127 = a1;
    if (*(_QWORD *)v124)
    {
      if (v130)
      {
        v140 = *((_QWORD *)v123 + 8);
        *(_QWORD *)(v122 + 56) = v130;
        *(_QWORD *)(v122 + 64) = v140;
        swift_release();
        goto LABEL_83;
      }
      swift_release();
    }
    else if (v130)
    {
      goto LABEL_80;
    }
    goto LABEL_82;
  }
  if (v125 == 1)
  {
    v127 = a1;
LABEL_65:
    v128 = *((_OWORD *)v123 + 3);
    *(_OWORD *)(v122 + 32) = *((_OWORD *)v123 + 2);
    *(_OWORD *)(v122 + 48) = v128;
    *(_QWORD *)(v122 + 64) = *((_QWORD *)v123 + 8);
    v129 = *((_OWORD *)v123 + 1);
    *(_OWORD *)v122 = *(_OWORD *)v123;
    *(_OWORD *)(v122 + 16) = v129;
    goto LABEL_83;
  }
  swift_unknownObjectWeakTakeInit(v122, v123);
  *(_OWORD *)(v122 + 8) = *(_OWORD *)(v123 + 8);
  *(_OWORD *)(v122 + 24) = *(_OWORD *)(v123 + 24);
  *(_OWORD *)(v122 + 33) = *(_OWORD *)(v123 + 33);
  v130 = *((_QWORD *)v123 + 7);
  if (v130)
  {
    v127 = a1;
LABEL_80:
    v141 = *((_QWORD *)v123 + 8);
    *(_QWORD *)(v122 + 56) = v130;
    *(_QWORD *)(v122 + 64) = v141;
    goto LABEL_83;
  }
  v127 = a1;
LABEL_82:
  *(_OWORD *)v124 = *(_OWORD *)v126;
LABEL_83:
  *(_QWORD *)(v122 + 72) = *((_QWORD *)v123 + 9);
  swift_release();
  v142 = (int *)_s18PerformanceConteXtVMa(0);
  v143 = v142[6];
  v144 = (void *)(v122 + v143);
  v145 = &v123[v143];
  v146 = type metadata accessor for OpenURLAction(0);
  v147 = *(_QWORD *)(v146 - 8);
  v148 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v147 + 48);
  v149 = v148(v144, 1, v146);
  v150 = v148(v145, 1, v146);
  if (v149)
  {
    if (!v150)
    {
      (*(void (**)(void *, char *, uint64_t))(v147 + 32))(v144, v145, v146);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v147 + 56))(v144, 0, 1, v146);
      goto LABEL_89;
    }
    goto LABEL_88;
  }
  if (v150)
  {
    (*(void (**)(void *, uint64_t))(v147 + 8))(v144, v146);
LABEL_88:
    v151 = sub_100007E8C(&qword_1011A9580);
    memcpy(v144, v145, *(_QWORD *)(*(_QWORD *)(v151 - 8) + 64));
    goto LABEL_89;
  }
  (*(void (**)(void *, char *, uint64_t))(v147 + 40))(v144, v145, v146);
LABEL_89:
  v152 = v127;
  v153 = v142[7];
  v154 = (void *)(v122 + v153);
  v155 = &v123[v153];
  v156 = v180((char *)(v122 + v153), 1, v181);
  v157 = v180(v155, 1, v181);
  if (v156)
  {
    if (!v157)
    {
      (*(void (**)(void *, char *, uint64_t))(v179 + 32))(v154, v155, v181);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v179 + 56))(v154, 0, 1, v181);
      goto LABEL_95;
    }
    goto LABEL_94;
  }
  if (v157)
  {
    (*(void (**)(void *, uint64_t))(v179 + 8))(v154, v181);
LABEL_94:
    v158 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v154, v155, *(_QWORD *)(*(_QWORD *)(v158 - 8) + 64));
    goto LABEL_95;
  }
  (*(void (**)(void *, char *, uint64_t))(v179 + 40))(v154, v155, v181);
LABEL_95:
  *(_QWORD *)(v122 + v142[8]) = *(_QWORD *)&v123[v142[8]];
  swift_bridgeObjectRelease();
  *(_QWORD *)(v122 + v142[9]) = *(_QWORD *)&v123[v142[9]];
  swift_release();
  *(_QWORD *)(v122 + v142[10]) = *(_QWORD *)&v123[v142[10]];
  swift_release();
  *(_QWORD *)(v122 + v142[11]) = *(_QWORD *)&v123[v142[11]];
  swift_release();
  v159 = v142[12];
  v160 = *(void **)(v122 + v159);
  *(_QWORD *)(v122 + v159) = *(_QWORD *)&v123[v159];

  v161 = v142[13];
  v162 = v122 + v161;
  v163 = &v123[v161];
  if (!*(_QWORD *)(v122 + v161 + 8))
  {
LABEL_102:
    v168 = *((_OWORD *)v163 + 1);
    *(_OWORD *)v162 = *(_OWORD *)v163;
    *(_OWORD *)(v162 + 16) = v168;
    goto LABEL_103;
  }
  v164 = *((_QWORD *)v163 + 1);
  if (!v164)
  {
    sub_1005F67E4(v162);
    goto LABEL_102;
  }
  *(_QWORD *)v162 = *(_QWORD *)v163;
  *(_QWORD *)(v162 + 8) = v164;
  swift_bridgeObjectRelease();
  v165 = v163 + 16;
  v166 = *(_QWORD *)(v162 + 24);
  if (v166 >> 60 == 15)
  {
LABEL_100:
    *(_OWORD *)(v162 + 16) = *v165;
    goto LABEL_103;
  }
  v167 = *((_QWORD *)v163 + 3);
  if (v167 >> 60 == 15)
  {
    sub_1005F67B0(v162 + 16);
    goto LABEL_100;
  }
  v176 = *(_QWORD *)(v162 + 16);
  *(_QWORD *)(v162 + 16) = *(_QWORD *)v165;
  *(_QWORD *)(v162 + 24) = v167;
  sub_1000652DC(v176, v166);
LABEL_103:
  v169 = v142[14];
  v170 = (uint64_t *)(v122 + v169);
  v171 = (uint64_t *)&v123[v169];
  v172 = *(_QWORD *)(v122 + v169 + 8);
  if (v172 >> 60 != 15)
  {
    v173 = v171[1];
    if (v173 >> 60 != 15)
    {
      v174 = *v170;
      *v170 = *v171;
      v170[1] = v173;
      sub_1000652DC(v174, v172);
      return v152;
    }
    sub_1005F67B0((uint64_t)v170);
  }
  *(_OWORD *)v170 = *(_OWORD *)v171;
  return v152;
}

uint64_t sub_1007F98FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1007F9908);
}

uint64_t sub_1007F9908(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for LiveRadio(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = _s18PerformanceConteXtVMa(0);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_1007F997C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1007F9988);
}

uint64_t sub_1007F9988(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for LiveRadio(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = _s18PerformanceConteXtVMa(0);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_1007F9A04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1007F9A18(a1, a2, a3, type metadata accessor for LiveRadio, _s18PerformanceConteXtVMa);
}

uint64_t sub_1007F9A18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t))
{
  uint64_t result;
  unint64_t v8;
  unint64_t v9;
  _QWORD v10[2];

  result = a4(319);
  if (v8 <= 0x3F)
  {
    v10[0] = *(_QWORD *)(result - 8) + 64;
    result = a5(319);
    if (v9 <= 0x3F)
    {
      v10[1] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 256, 2, v10, a1 + 16);
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LiveRadio.Header()
{
  return &type metadata for LiveRadio.Header;
}

uint64_t sub_1007F9AB0()
{
  _QWORD v1[2];

  v1[0] = sub_100044B54(&qword_1011CA468);
  v1[1] = sub_100049F28(&qword_1011CA478, &qword_1011CA468, (uint64_t)&protocol conformance descriptor for VStack<A>);
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
}

uint64_t sub_1007F9B14(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FADC98, 1);
}

uint64_t sub_1007F9B24(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FADC70, 1);
}

uint64_t type metadata accessor for LiveRadioView.AccessoryButton(uint64_t a1)
{
  return sub_100055934(a1, qword_1011CA710, (uint64_t)&nominal type descriptor for LiveRadioView.AccessoryButton);
}

uint64_t *sub_1007F9B68(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t *v38;
  int *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  void *v64;
  int *v65;
  uint64_t v66;
  char *v67;
  void *v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  char *v80;
  void *v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t *v91;
  __int128 v92;
  __int128 v93;
  int v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  __int128 v102;
  int *v103;
  uint64_t v104;
  char *v105;
  const void *v106;
  uint64_t v107;
  uint64_t v108;
  unsigned int (*v109)(const void *, uint64_t, uint64_t, __n128);
  __n128 v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  const void *v114;
  uint64_t v115;
  uint64_t v116;
  void *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  id v122;
  _OWORD *v123;
  unint64_t v124;
  __int128 v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t *v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  id v135;
  char v136;
  int *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t *v142;
  unsigned int (*v143)(uint64_t *, uint64_t, uint64_t);
  uint64_t *v144;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    v11 = v10 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
    return (uint64_t *)v11;
  }
  v7 = type metadata accessor for GenericMusicItem(0);
  v8 = *(_QWORD *)(v7 - 8);
  v143 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
  v140 = v7;
  v141 = a3;
  v139 = v8;
  if (v143(a2, 1, v7))
  {
    v9 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  }
  v12 = (int *)type metadata accessor for LiveRadio(0);
  v13 = v12[5];
  v14 = (uint64_t *)((char *)a1 + v13);
  v15 = (uint64_t *)((char *)a2 + v13);
  v16 = v15[1];
  v17 = a2;
  *v14 = *v15;
  v14[1] = v16;
  v18 = v15[3];
  v14[2] = v15[2];
  v14[3] = v18;
  v19 = v12[6];
  v20 = (uint64_t *)((char *)a1 + v19);
  v21 = (uint64_t *)((char *)a2 + v19);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v23 = v12[7];
  v24 = (uint64_t *)((char *)a1 + v23);
  v25 = (uint64_t *)((char *)a2 + v23);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  v27 = v12[8];
  v28 = (uint64_t *)((char *)a1 + v27);
  v29 = (uint64_t *)((char *)a2 + v27);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  v138 = v12;
  v31 = v12[9];
  v144 = a1;
  v32 = (char *)a1 + v31;
  v142 = v17;
  v33 = (char *)v17 + v31;
  v34 = type metadata accessor for ArtworkImage.ViewModel(0);
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v36(v33, 1, v34))
  {
    v37 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    v38 = v142;
    v39 = v138;
  }
  else
  {
    v40 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v32, v33, v40);
    v41 = *(int *)(v34 + 20);
    v42 = &v32[v41];
    v43 = &v33[v41];
    v44 = type metadata accessor for Artwork.CropStyle(0);
    v45 = *(_QWORD *)(v44 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
    {
      v46 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v42, v43, v44);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
    }
    v47 = v35;
    v39 = v138;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v32, 0, 1, v34);
    v38 = v142;
  }
  v48 = v39[10];
  v49 = (char *)v144 + v48;
  v50 = (char *)v38 + v48;
  v51 = type metadata accessor for MotionViewModel(0);
  v52 = *(_QWORD *)(v51 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
  {
    v53 = sub_100007E8C(&qword_1011AA8D0);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
  }
  else
  {
    v54 = type metadata accessor for VideoArtwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v49, v50, v54);
    v55 = *(int *)(v51 + 20);
    v56 = &v49[v55];
    v57 = &v50[v55];
    v58 = type metadata accessor for Artwork.CropStyle(0);
    v59 = *(_QWORD *)(v58 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58))
    {
      v60 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v56, v57, v58);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
    v38 = v142;
  }
  v61 = v39[11];
  v62 = (char *)v144 + v61;
  v63 = (uint64_t)v38 + v61;
  v64 = *(void **)((char *)v38 + v61);
  *(uint64_t *)((char *)v144 + v61) = (uint64_t)v64;
  v65 = (int *)type metadata accessor for SegueContext(0);
  v66 = v65[5];
  v67 = &v62[v66];
  v68 = (const void *)(v63 + v66);
  v69 = v64;
  if (v143((uint64_t *)v68, 1, v140))
  {
    v70 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, void *, uint64_t))(v139 + 16))(v67, (void *)v68, v140);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v139 + 56))(v67, 0, 1, v140);
  }
  v62[v65[6]] = *(_BYTE *)(v63 + v65[6]);
  v71 = v65[7];
  v72 = &v62[v71];
  v73 = (_QWORD *)(v63 + v71);
  if (*v73)
  {
    v74 = v73[1];
    *(_QWORD *)v72 = *v73;
    *((_QWORD *)v72 + 1) = v74;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v72 = *(_OWORD *)v73;
  }
  v75 = v39[12];
  v76 = (uint64_t *)((char *)v144 + v75);
  v77 = (uint64_t)v38 + v75;
  v78 = *(void **)((char *)v38 + v75);
  *v76 = v78;
  v79 = v65[5];
  v80 = (char *)v76 + v79;
  v81 = (const void *)(v77 + v79);
  v82 = v78;
  if (v143((uint64_t *)v81, 1, v140))
  {
    v83 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, void *, uint64_t))(v139 + 16))(v80, (void *)v81, v140);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v139 + 56))(v80, 0, 1, v140);
  }
  *((_BYTE *)v76 + v65[6]) = *(_BYTE *)(v77 + v65[6]);
  v84 = v65[7];
  v85 = (_QWORD *)((char *)v76 + v84);
  v86 = (_QWORD *)(v77 + v84);
  if (*v86)
  {
    v87 = v86[1];
    *v85 = *v86;
    v85[1] = v87;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v85 = *(_OWORD *)v86;
  }
  v88 = *(int *)(v141 + 20);
  v89 = (char *)v144 + v88;
  v90 = (uint64_t)v38 + v88;
  v91 = (uint64_t *)((char *)v38 + v88 + 56);
  if (*v91 != 1)
  {
    swift_unknownObjectWeakCopyInit(v89, v90);
    v94 = *(unsigned __int8 *)(v90 + 48);
    if (v94 == 255)
    {
      v102 = *(_OWORD *)(v90 + 24);
      *(_OWORD *)(v89 + 8) = *(_OWORD *)(v90 + 8);
      *(_OWORD *)(v89 + 24) = v102;
      *(_OWORD *)(v89 + 33) = *(_OWORD *)(v90 + 33);
      v100 = *v91;
      if (*v91)
        goto LABEL_34;
    }
    else
    {
      v95 = *(void **)(v90 + 8);
      v96 = *(_QWORD *)(v90 + 16);
      v97 = *(_QWORD *)(v90 + 24);
      v98 = *(_QWORD *)(v90 + 32);
      v99 = *(_QWORD *)(v90 + 40);
      sub_100347EC8(v95, v96, v97, v98, v99, *(_BYTE *)(v90 + 48));
      *((_QWORD *)v89 + 1) = v95;
      *((_QWORD *)v89 + 2) = v96;
      *((_QWORD *)v89 + 3) = v97;
      *((_QWORD *)v89 + 4) = v98;
      *((_QWORD *)v89 + 5) = v99;
      v89[48] = v94;
      v100 = *v91;
      if (*v91)
      {
LABEL_34:
        v101 = *(_QWORD *)(v90 + 64);
        *((_QWORD *)v89 + 7) = v100;
        *((_QWORD *)v89 + 8) = v101;
        swift_retain();
        goto LABEL_37;
      }
    }
    *(_OWORD *)(v89 + 56) = *(_OWORD *)v91;
    goto LABEL_37;
  }
  v92 = *(_OWORD *)(v90 + 48);
  *((_OWORD *)v89 + 2) = *(_OWORD *)(v90 + 32);
  *((_OWORD *)v89 + 3) = v92;
  *((_QWORD *)v89 + 8) = *(_QWORD *)(v90 + 64);
  v93 = *(_OWORD *)(v90 + 16);
  *(_OWORD *)v89 = *(_OWORD *)v90;
  *((_OWORD *)v89 + 1) = v93;
LABEL_37:
  *((_QWORD *)v89 + 9) = *(_QWORD *)(v90 + 72);
  v103 = (int *)_s18PerformanceConteXtVMa(0);
  v104 = v103[6];
  v105 = &v89[v104];
  v106 = (const void *)(v90 + v104);
  v107 = type metadata accessor for OpenURLAction(0);
  v108 = *(_QWORD *)(v107 - 8);
  v109 = *(unsigned int (**)(const void *, uint64_t, uint64_t, __n128))(v108 + 48);
  v110 = swift_retain();
  if (v109(v106, 1, v107, v110))
  {
    v111 = sub_100007E8C(&qword_1011A9580);
    memcpy(v105, v106, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v108 + 16))(v105, v106, v107);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v108 + 56))(v105, 0, 1, v107);
  }
  v112 = v103[7];
  v113 = &v89[v112];
  v114 = (const void *)(v90 + v112);
  if (v143((uint64_t *)(v90 + v112), 1, v140))
  {
    v115 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v113, v114, *(_QWORD *)(*(_QWORD *)(v115 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v139 + 16))(v113, v114, v140);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v139 + 56))(v113, 0, 1, v140);
  }
  *(_QWORD *)&v89[v103[8]] = *(_QWORD *)(v90 + v103[8]);
  *(_QWORD *)&v89[v103[9]] = *(_QWORD *)(v90 + v103[9]);
  *(_QWORD *)&v89[v103[10]] = *(_QWORD *)(v90 + v103[10]);
  *(_QWORD *)&v89[v103[11]] = *(_QWORD *)(v90 + v103[11]);
  v116 = v103[12];
  v117 = *(void **)(v90 + v116);
  *(_QWORD *)&v89[v116] = v117;
  v118 = v103[13];
  v119 = &v89[v118];
  v120 = v90 + v118;
  v121 = *(_QWORD *)(v90 + v118 + 8);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  v122 = v117;
  if (v121)
  {
    *(_QWORD *)v119 = *(_QWORD *)v120;
    *((_QWORD *)v119 + 1) = v121;
    v123 = (_OWORD *)(v120 + 16);
    v124 = *(_QWORD *)(v120 + 24);
    swift_bridgeObjectRetain();
    if (v124 >> 60 == 15)
    {
      *((_OWORD *)v119 + 1) = *v123;
    }
    else
    {
      v126 = *(_QWORD *)v123;
      sub_100079DE4(v126, v124);
      *((_QWORD *)v119 + 2) = v126;
      *((_QWORD *)v119 + 3) = v124;
    }
  }
  else
  {
    v125 = *(_OWORD *)(v120 + 16);
    *(_OWORD *)v119 = *(_OWORD *)v120;
    *((_OWORD *)v119 + 1) = v125;
  }
  v127 = v103[14];
  v128 = &v89[v127];
  v129 = (uint64_t *)(v90 + v127);
  v130 = v129[1];
  if (v130 >> 60 == 15)
  {
    *(_OWORD *)v128 = *(_OWORD *)v129;
  }
  else
  {
    v131 = *v129;
    sub_100079DE4(*v129, v129[1]);
    *(_QWORD *)v128 = v131;
    *((_QWORD *)v128 + 1) = v130;
  }
  v132 = *(int *)(v141 + 24);
  v133 = (char *)v144 + v132;
  v134 = (uint64_t)v142 + v132;
  v135 = *(id *)v134;
  v136 = *(_BYTE *)(v134 + 8);
  sub_1000A4100(*(id *)v134, v136);
  *(_QWORD *)v133 = v135;
  v133[8] = v136;
  return v144;
}

void sub_1007FA408(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id *v20;
  uint64_t v21;
  char *v22;
  id *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  uint64_t *v35;
  unint64_t v36;

  v4 = type metadata accessor for GenericMusicItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v7 = (int *)type metadata accessor for LiveRadio(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = a1 + v7[9];
  v9 = type metadata accessor for ArtworkImage.ViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    v10 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
    v11 = v8 + *(int *)(v9 + 20);
    v12 = type metadata accessor for Artwork.CropStyle(0);
    v13 = *(_QWORD *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  v14 = a1 + v7[10];
  v15 = type metadata accessor for MotionViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15))
  {
    v16 = type metadata accessor for VideoArtwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v14, v16);
    v17 = v14 + *(int *)(v15 + 20);
    v18 = type metadata accessor for Artwork.CropStyle(0);
    v19 = *(_QWORD *)(v18 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
  }
  v20 = (id *)(a1 + v7[11]);

  v21 = type metadata accessor for SegueContext(0);
  v22 = (char *)v20 + *(int *)(v21 + 20);
  if (!v6((uint64_t)v22, 1, v4))
    (*(void (**)(char *, uint64_t))(v5 + 8))(v22, v4);
  if (*(id *)((char *)v20 + *(int *)(v21 + 28)))
    swift_release();
  v23 = (id *)(a1 + v7[12]);

  v24 = (char *)v23 + *(int *)(v21 + 20);
  if (!v6((uint64_t)v24, 1, v4))
    (*(void (**)(char *, uint64_t))(v5 + 8))(v24, v4);
  if (*(id *)((char *)v23 + *(int *)(v21 + 28)))
    swift_release();
  v26 = a1 + *(int *)(a2 + 20);
  if (*(_QWORD *)(v26 + 56) != 1)
  {
    swift_unknownObjectWeakDestroy(a1 + *(int *)(a2 + 20), v25);
    v27 = *(unsigned __int8 *)(v26 + 48);
    if (v27 != 255)
      sub_100064AA4(*(id *)(v26 + 8), *(_QWORD *)(v26 + 16), *(_QWORD *)(v26 + 24), *(_QWORD *)(v26 + 32), *(_QWORD *)(v26 + 40), v27);
    if (*(_QWORD *)(v26 + 56))
      swift_release();
  }
  swift_release();
  v28 = (int *)_s18PerformanceConteXtVMa(0);
  v29 = v26 + v28[6];
  v30 = type metadata accessor for OpenURLAction(0);
  v31 = *(_QWORD *)(v30 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v29, v30);
  v32 = v26 + v28[7];
  if (!v6(v32, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v32, v4);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  v33 = (_QWORD *)(v26 + v28[13]);
  if (v33[1])
  {
    swift_bridgeObjectRelease();
    v34 = v33[3];
    if (v34 >> 60 != 15)
      sub_1000652DC(v33[2], v34);
  }
  v35 = (uint64_t *)(v26 + v28[14]);
  v36 = v35[1];
  if (v36 >> 60 != 15)
    sub_1000652DC(*v35, v36);
  sub_1000A4224(*(id *)(a1 + *(int *)(a2 + 24)), *(_BYTE *)(a1 + *(int *)(a2 + 24) + 8));
}

char *sub_1007FA800(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  char *v34;
  char *v35;
  int *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  void *v61;
  int *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  void *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t *v88;
  __int128 v89;
  __int128 v90;
  int v91;
  void *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  __int128 v99;
  int *v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  unsigned int (*v106)(char *, uint64_t, uint64_t, __n128);
  __n128 v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  void *v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  id v119;
  _OWORD *v120;
  unint64_t v121;
  __int128 v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t *v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  id v132;
  char v133;
  int *v135;
  uint64_t v136;
  uint64_t v137;
  char *v139;
  char *v140;
  unsigned int (*v141)(char *, uint64_t, uint64_t);

  v5 = type metadata accessor for GenericMusicItem(0);
  v6 = *(_QWORD *)(v5 - 8);
  v141 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  v136 = v6;
  v137 = v5;
  if (v141(a2, 1, v5))
  {
    v7 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  v8 = (int *)type metadata accessor for LiveRadio(0);
  v9 = v8[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *((_QWORD *)v11 + 1);
  v13 = a2;
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *((_QWORD *)v10 + 1) = v12;
  v14 = *((_QWORD *)v11 + 3);
  *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
  *((_QWORD *)v10 + 3) = v14;
  v15 = v8[6];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = *((_QWORD *)v17 + 1);
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *((_QWORD *)v16 + 1) = v18;
  v19 = v8[7];
  v20 = &a1[v19];
  v21 = &a2[v19];
  v22 = *((_QWORD *)v21 + 1);
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *((_QWORD *)v20 + 1) = v22;
  v23 = v8[8];
  v24 = &a1[v23];
  v25 = &a2[v23];
  v26 = *((_QWORD *)v25 + 1);
  *(_QWORD *)v24 = *(_QWORD *)v25;
  *((_QWORD *)v24 + 1) = v26;
  v135 = v8;
  v27 = v8[9];
  v139 = v13;
  v140 = a1;
  v28 = &a1[v27];
  v29 = &v13[v27];
  v30 = type metadata accessor for ArtworkImage.ViewModel(0);
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v32(v29, 1, v30))
  {
    v33 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    v35 = v139;
    v34 = v140;
    v36 = v135;
  }
  else
  {
    v37 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v28, v29, v37);
    v38 = *(int *)(v30 + 20);
    v39 = &v28[v38];
    v40 = &v29[v38];
    v41 = type metadata accessor for Artwork.CropStyle(0);
    v42 = *(_QWORD *)(v41 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
    {
      v43 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v39, v40, v41);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
    }
    v44 = v31;
    v36 = v135;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v28, 0, 1, v30);
    v35 = v139;
    v34 = v140;
  }
  v45 = v36[10];
  v46 = &v34[v45];
  v47 = &v35[v45];
  v48 = type metadata accessor for MotionViewModel(0);
  v49 = *(_QWORD *)(v48 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
  {
    v50 = sub_100007E8C(&qword_1011AA8D0);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
  }
  else
  {
    v51 = type metadata accessor for VideoArtwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v46, v47, v51);
    v52 = *(int *)(v48 + 20);
    v53 = &v46[v52];
    v54 = &v47[v52];
    v55 = type metadata accessor for Artwork.CropStyle(0);
    v56 = *(_QWORD *)(v55 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
    {
      v57 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v53, v54, v55);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
    v35 = v139;
    v34 = v140;
  }
  v58 = v36[11];
  v59 = &v34[v58];
  v60 = &v35[v58];
  v61 = *(void **)&v35[v58];
  *(_QWORD *)&v34[v58] = v61;
  v62 = (int *)type metadata accessor for SegueContext(0);
  v63 = v62[5];
  v64 = &v59[v63];
  v65 = &v60[v63];
  v66 = v61;
  if (v141(v65, 1, v137))
  {
    v67 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v136 + 16))(v64, v65, v137);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v136 + 56))(v64, 0, 1, v137);
  }
  v59[v62[6]] = v60[v62[6]];
  v68 = v62[7];
  v69 = &v59[v68];
  v70 = &v60[v68];
  if (*(_QWORD *)v70)
  {
    v71 = *((_QWORD *)v70 + 1);
    *(_QWORD *)v69 = *(_QWORD *)v70;
    *((_QWORD *)v69 + 1) = v71;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v69 = *(_OWORD *)v70;
  }
  v72 = v36[12];
  v73 = &v34[v72];
  v74 = &v35[v72];
  v75 = *(void **)&v35[v72];
  *(_QWORD *)v73 = v75;
  v76 = v62[5];
  v77 = &v73[v76];
  v78 = &v74[v76];
  v79 = v75;
  if (v141(v78, 1, v137))
  {
    v80 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v136 + 16))(v77, v78, v137);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v136 + 56))(v77, 0, 1, v137);
  }
  v73[v62[6]] = v74[v62[6]];
  v81 = v62[7];
  v82 = &v73[v81];
  v83 = &v74[v81];
  if (*(_QWORD *)v83)
  {
    v84 = *((_QWORD *)v83 + 1);
    *(_QWORD *)v82 = *(_QWORD *)v83;
    *((_QWORD *)v82 + 1) = v84;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v82 = *(_OWORD *)v83;
  }
  v85 = *(int *)(a3 + 20);
  v86 = &v34[v85];
  v87 = &v35[v85];
  v88 = (uint64_t *)&v35[v85 + 56];
  if (*v88 == 1)
  {
    v89 = *((_OWORD *)v87 + 3);
    *((_OWORD *)v86 + 2) = *((_OWORD *)v87 + 2);
    *((_OWORD *)v86 + 3) = v89;
    *((_QWORD *)v86 + 8) = *((_QWORD *)v87 + 8);
    v90 = *((_OWORD *)v87 + 1);
    *(_OWORD *)v86 = *(_OWORD *)v87;
    *((_OWORD *)v86 + 1) = v90;
    goto LABEL_35;
  }
  swift_unknownObjectWeakCopyInit(v86, v87);
  v91 = v87[48];
  if (v91 == 255)
  {
    v99 = *(_OWORD *)(v87 + 24);
    *(_OWORD *)(v86 + 8) = *(_OWORD *)(v87 + 8);
    *(_OWORD *)(v86 + 24) = v99;
    *(_OWORD *)(v86 + 33) = *(_OWORD *)(v87 + 33);
    v97 = *v88;
    if (*v88)
      goto LABEL_32;
  }
  else
  {
    v92 = (void *)*((_QWORD *)v87 + 1);
    v93 = *((_QWORD *)v87 + 2);
    v94 = *((_QWORD *)v87 + 3);
    v95 = *((_QWORD *)v87 + 4);
    v96 = *((_QWORD *)v87 + 5);
    sub_100347EC8(v92, v93, v94, v95, v96, v87[48]);
    *((_QWORD *)v86 + 1) = v92;
    *((_QWORD *)v86 + 2) = v93;
    *((_QWORD *)v86 + 3) = v94;
    *((_QWORD *)v86 + 4) = v95;
    *((_QWORD *)v86 + 5) = v96;
    v86[48] = v91;
    v97 = *v88;
    if (*v88)
    {
LABEL_32:
      v98 = *((_QWORD *)v87 + 8);
      *((_QWORD *)v86 + 7) = v97;
      *((_QWORD *)v86 + 8) = v98;
      swift_retain();
      goto LABEL_35;
    }
  }
  *(_OWORD *)(v86 + 56) = *(_OWORD *)v88;
LABEL_35:
  *((_QWORD *)v86 + 9) = *((_QWORD *)v87 + 9);
  v100 = (int *)_s18PerformanceConteXtVMa(0);
  v101 = v100[6];
  v102 = &v86[v101];
  v103 = &v87[v101];
  v104 = type metadata accessor for OpenURLAction(0);
  v105 = *(_QWORD *)(v104 - 8);
  v106 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v105 + 48);
  v107 = swift_retain();
  if (v106(v103, 1, v104, v107))
  {
    v108 = sub_100007E8C(&qword_1011A9580);
    memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v102, v103, v104);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v105 + 56))(v102, 0, 1, v104);
  }
  v109 = v100[7];
  v110 = &v86[v109];
  v111 = &v87[v109];
  if (v141(&v87[v109], 1, v137))
  {
    v112 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v110, v111, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v136 + 16))(v110, v111, v137);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v136 + 56))(v110, 0, 1, v137);
  }
  *(_QWORD *)&v86[v100[8]] = *(_QWORD *)&v87[v100[8]];
  *(_QWORD *)&v86[v100[9]] = *(_QWORD *)&v87[v100[9]];
  *(_QWORD *)&v86[v100[10]] = *(_QWORD *)&v87[v100[10]];
  *(_QWORD *)&v86[v100[11]] = *(_QWORD *)&v87[v100[11]];
  v113 = v100[12];
  v114 = *(void **)&v87[v113];
  *(_QWORD *)&v86[v113] = v114;
  v115 = v100[13];
  v116 = &v86[v115];
  v117 = &v87[v115];
  v118 = *(_QWORD *)&v87[v115 + 8];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  v119 = v114;
  if (v118)
  {
    *(_QWORD *)v116 = *(_QWORD *)v117;
    *((_QWORD *)v116 + 1) = v118;
    v120 = v117 + 16;
    v121 = *((_QWORD *)v117 + 3);
    swift_bridgeObjectRetain();
    if (v121 >> 60 == 15)
    {
      *((_OWORD *)v116 + 1) = *v120;
    }
    else
    {
      v123 = *(_QWORD *)v120;
      sub_100079DE4(v123, v121);
      *((_QWORD *)v116 + 2) = v123;
      *((_QWORD *)v116 + 3) = v121;
    }
  }
  else
  {
    v122 = *((_OWORD *)v117 + 1);
    *(_OWORD *)v116 = *(_OWORD *)v117;
    *((_OWORD *)v116 + 1) = v122;
  }
  v124 = v100[14];
  v125 = &v86[v124];
  v126 = (uint64_t *)&v87[v124];
  v127 = v126[1];
  if (v127 >> 60 == 15)
  {
    *(_OWORD *)v125 = *(_OWORD *)v126;
  }
  else
  {
    v128 = *v126;
    sub_100079DE4(*v126, v126[1]);
    *(_QWORD *)v125 = v128;
    *((_QWORD *)v125 + 1) = v127;
  }
  v129 = *(int *)(a3 + 24);
  v130 = &v140[v129];
  v131 = &v139[v129];
  v132 = *(id *)v131;
  v133 = v131[8];
  sub_1000A4100(*(id *)v131, v133);
  *(_QWORD *)v130 = v132;
  v130[8] = v133;
  return v140;
}

char *sub_1007FB060(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t (*v6)(char *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t, uint64_t);
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  size_t v38;
  void *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(void *, uint64_t, uint64_t);
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(uint64_t, uint64_t, uint64_t);
  int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  size_t v65;
  void *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t (*v74)(void *, uint64_t, uint64_t);
  int v75;
  int v76;
  int *v77;
  uint64_t v78;
  void **v79;
  char *v80;
  void *v81;
  void *v82;
  id v83;
  int *v84;
  uint64_t v85;
  char *v86;
  char *v87;
  int v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void **v98;
  char *v99;
  void *v100;
  void *v101;
  id v102;
  uint64_t v103;
  char *v104;
  char *v105;
  int v106;
  int v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  __n128 v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  char *v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  int v128;
  void *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  __int128 *v134;
  __int128 *v135;
  int v136;
  void *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  void *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unsigned __int8 v147;
  __int128 v148;
  __int128 v149;
  uint64_t v150;
  void *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  uint64_t v160;
  uint64_t v161;
  int *v162;
  uint64_t v163;
  void *v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t (*v168)(void *, uint64_t, uint64_t);
  int v169;
  int v170;
  uint64_t v171;
  uint64_t v172;
  void *v173;
  char *v174;
  int v175;
  int v176;
  uint64_t v177;
  uint64_t v178;
  void *v179;
  void *v180;
  id v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t *v187;
  unint64_t v188;
  __int128 v189;
  uint64_t v190;
  __int128 v191;
  uint64_t v192;
  uint64_t v193;
  unint64_t v194;
  uint64_t v195;
  uint64_t *v196;
  char *v197;
  unint64_t v198;
  unint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  unint64_t v203;
  uint64_t v204;
  char *v205;
  char *v206;
  id v207;
  char v208;
  void *v209;
  char v210;
  char *v212;
  uint64_t v214;
  uint64_t (*v215)(char *, uint64_t, uint64_t);
  char *v216;
  uint64_t v217;

  v5 = type metadata accessor for GenericMusicItem(0);
  v214 = *(_QWORD *)(v5 - 8);
  v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v214 + 48);
  v7 = v6(a1, 1, v5);
  v217 = v5;
  v215 = v6;
  v8 = v6(a2, 1, v5);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(v214 + 16))(a1, a2, v5);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v214 + 56))(a1, 0, 1, v5);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v214 + 8))(a1, v5);
LABEL_6:
    v9 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v214 + 24))(a1, a2, v5);
LABEL_7:
  v10 = (int *)type metadata accessor for LiveRadio(0);
  v11 = v10[5];
  v12 = &a1[v11];
  v13 = &a2[v11];
  *(_QWORD *)v12 = *(_QWORD *)&a2[v11];
  *((_QWORD *)v12 + 1) = *(_QWORD *)&a2[v11 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v12 + 2) = *((_QWORD *)v13 + 2);
  *((_QWORD *)v12 + 3) = *((_QWORD *)v13 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = v10[6];
  v15 = &a1[v14];
  v16 = &a2[v14];
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *((_QWORD *)v15 + 1) = *((_QWORD *)v16 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = v10[7];
  v18 = &a1[v17];
  v19 = &a2[v17];
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = v10[8];
  v21 = &a1[v20];
  v22 = &a2[v20];
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23 = v10[9];
  v24 = (uint64_t)&a1[v23];
  v25 = &a2[v23];
  v26 = type metadata accessor for ArtworkImage.ViewModel(0);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 48);
  v29 = v28(v24, 1, v26);
  v30 = v28((uint64_t)v25, 1, v26);
  v212 = a2;
  if (!v29)
  {
    if (!v30)
    {
      v41 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 24))(v24, v25, v41);
      v42 = *(int *)(v26 + 20);
      v43 = (void *)(v24 + v42);
      v44 = &v25[v42];
      v45 = type metadata accessor for Artwork.CropStyle(0);
      v46 = *(_QWORD *)(v45 - 8);
      v47 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v46 + 48);
      v48 = v47(v43, 1, v45);
      v49 = v47(v44, 1, v45);
      if (v48)
      {
        if (!v49)
        {
          (*(void (**)(void *, char *, uint64_t))(v46 + 16))(v43, v44, v45);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
          goto LABEL_21;
        }
      }
      else
      {
        if (!v49)
        {
          (*(void (**)(void *, char *, uint64_t))(v46 + 24))(v43, v44, v45);
          goto LABEL_21;
        }
        (*(void (**)(void *, uint64_t))(v46 + 8))(v43, v45);
      }
      v38 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v39 = v43;
      v40 = v44;
LABEL_14:
      memcpy(v39, v40, v38);
      goto LABEL_21;
    }
    sub_10005B748(v24, type metadata accessor for ArtworkImage.ViewModel);
LABEL_13:
    v38 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v39 = (void *)v24;
    v40 = v25;
    goto LABEL_14;
  }
  if (v30)
    goto LABEL_13;
  v31 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v24, v25, v31);
  v32 = *(int *)(v26 + 20);
  v33 = (void *)(v24 + v32);
  v34 = &v25[v32];
  v35 = type metadata accessor for Artwork.CropStyle(0);
  v36 = *(_QWORD *)(v35 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
  {
    v37 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v36 + 16))(v33, v34, v35);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
  }
  a2 = v212;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
LABEL_21:
  v50 = v10[10];
  v51 = (uint64_t)&a1[v50];
  v52 = &a2[v50];
  v53 = type metadata accessor for MotionViewModel(0);
  v54 = *(_QWORD *)(v53 - 8);
  v55 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v54 + 48);
  v56 = v55(v51, 1, v53);
  v57 = v55((uint64_t)v52, 1, v53);
  v216 = a1;
  if (!v56)
  {
    if (!v57)
    {
      v68 = type metadata accessor for VideoArtwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 24))(v51, v52, v68);
      v69 = *(int *)(v53 + 20);
      v70 = (void *)(v51 + v69);
      v71 = &v52[v69];
      v72 = type metadata accessor for Artwork.CropStyle(0);
      v73 = *(_QWORD *)(v72 - 8);
      v74 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v73 + 48);
      v75 = v74(v70, 1, v72);
      v76 = v74(v71, 1, v72);
      if (v75)
      {
        if (!v76)
        {
          (*(void (**)(void *, char *, uint64_t))(v73 + 16))(v70, v71, v72);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v70, 0, 1, v72);
          goto LABEL_34;
        }
      }
      else
      {
        if (!v76)
        {
          (*(void (**)(void *, char *, uint64_t))(v73 + 24))(v70, v71, v72);
          goto LABEL_34;
        }
        (*(void (**)(void *, uint64_t))(v73 + 8))(v70, v72);
      }
      v65 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v66 = v70;
      v67 = v71;
LABEL_28:
      memcpy(v66, v67, v65);
      goto LABEL_34;
    }
    sub_10005B748(v51, type metadata accessor for MotionViewModel);
LABEL_27:
    v65 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011AA8D0) - 8) + 64);
    v66 = (void *)v51;
    v67 = v52;
    goto LABEL_28;
  }
  if (v57)
    goto LABEL_27;
  v58 = type metadata accessor for VideoArtwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v51, v52, v58);
  v59 = *(int *)(v53 + 20);
  v60 = (void *)(v51 + v59);
  v61 = &v52[v59];
  v62 = type metadata accessor for Artwork.CropStyle(0);
  v63 = *(_QWORD *)(v62 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v61, 1, v62))
  {
    v64 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v63 + 16))(v60, v61, v62);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
  }
  a2 = v212;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
LABEL_34:
  v77 = v10;
  v78 = v10[11];
  v79 = (void **)&v216[v78];
  v80 = &a2[v78];
  v81 = *(void **)&a2[v78];
  v82 = *v79;
  *v79 = v81;
  v83 = v81;

  v84 = (int *)type metadata accessor for SegueContext(0);
  v85 = v84[5];
  v86 = (char *)v79 + v85;
  v87 = &v80[v85];
  v88 = v215((char *)v79 + v85, 1, v217);
  v89 = v215(v87, 1, v217);
  if (v88)
  {
    if (!v89)
    {
      (*(void (**)(char *, char *, uint64_t))(v214 + 16))(v86, v87, v217);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v214 + 56))(v86, 0, 1, v217);
      goto LABEL_40;
    }
    goto LABEL_39;
  }
  if (v89)
  {
    (*(void (**)(char *, uint64_t))(v214 + 8))(v86, v217);
LABEL_39:
    v90 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v86, v87, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
    goto LABEL_40;
  }
  (*(void (**)(char *, char *, uint64_t))(v214 + 24))(v86, v87, v217);
LABEL_40:
  *((_BYTE *)v79 + v84[6]) = v80[v84[6]];
  v91 = v84[7];
  v92 = (void **)((char *)v79 + v91);
  v93 = &v80[v91];
  v94 = *(_QWORD *)v93;
  if (*v92)
  {
    if (v94)
    {
      v95 = *((_QWORD *)v93 + 1);
      *v92 = v94;
      v92[1] = v95;
      swift_retain();
      swift_release();
      goto LABEL_47;
    }
    swift_release();
  }
  else if (v94)
  {
    v96 = *((_QWORD *)v93 + 1);
    *v92 = v94;
    v92[1] = v96;
    swift_retain();
    goto LABEL_47;
  }
  *(_OWORD *)v92 = *(_OWORD *)v93;
LABEL_47:
  v97 = v77[12];
  v98 = (void **)&v216[v97];
  v99 = &a2[v97];
  v100 = *(void **)&a2[v97];
  v101 = *v98;
  *v98 = v100;
  v102 = v100;

  v103 = v84[5];
  v104 = (char *)v98 + v103;
  v105 = &v99[v103];
  v106 = v215((char *)v98 + v103, 1, v217);
  v107 = v215(v105, 1, v217);
  if (v106)
  {
    if (!v107)
    {
      (*(void (**)(char *, char *, uint64_t))(v214 + 16))(v104, v105, v217);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v214 + 56))(v104, 0, 1, v217);
      goto LABEL_53;
    }
    goto LABEL_52;
  }
  if (v107)
  {
    (*(void (**)(char *, uint64_t))(v214 + 8))(v104, v217);
LABEL_52:
    v108 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v104, v105, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
    goto LABEL_53;
  }
  (*(void (**)(char *, char *, uint64_t))(v214 + 24))(v104, v105, v217);
LABEL_53:
  *((_BYTE *)v98 + v84[6]) = v99[v84[6]];
  v109 = v84[7];
  v110 = (void **)((char *)v98 + v109);
  v111 = &v99[v109];
  v112 = *(_QWORD *)v111;
  if (*v110)
  {
    if (v112)
    {
      v113 = *((_QWORD *)v111 + 1);
      *v110 = v112;
      v110[1] = v113;
      swift_retain();
      v114 = swift_release();
      goto LABEL_60;
    }
    swift_release();
  }
  else if (v112)
  {
    v115 = *((_QWORD *)v111 + 1);
    *v110 = v112;
    v110[1] = v115;
    v114 = swift_retain();
    goto LABEL_60;
  }
  v114 = *(__n128 *)v111;
  *(_OWORD *)v110 = *(_OWORD *)v111;
LABEL_60:
  v116 = *(int *)(a3 + 20);
  v117 = (uint64_t)&v216[v116];
  v118 = &a2[v116];
  v119 = &v216[v116 + 56];
  v121 = &a2[v116 + 56];
  v120 = *(_QWORD *)v121;
  if (*(_QWORD *)v119 == 1)
  {
    if (v120 == 1)
    {
      *(_OWORD *)v117 = *(_OWORD *)v118;
      v122 = *((_OWORD *)v118 + 1);
      v123 = *((_OWORD *)v118 + 2);
      v124 = *((_OWORD *)v118 + 3);
      *(_QWORD *)(v117 + 64) = *((_QWORD *)v118 + 8);
      *(_OWORD *)(v117 + 32) = v123;
      *(_OWORD *)(v117 + 48) = v124;
      *(_OWORD *)(v117 + 16) = v122;
      goto LABEL_92;
    }
    swift_unknownObjectWeakCopyInit(v117, v118);
    v128 = v118[48];
    if (v128 == 255)
    {
      v148 = *(_OWORD *)(v118 + 8);
      v149 = *(_OWORD *)(v118 + 24);
      *(_OWORD *)(v117 + 33) = *(_OWORD *)(v118 + 33);
      *(_OWORD *)(v117 + 8) = v148;
      *(_OWORD *)(v117 + 24) = v149;
    }
    else
    {
      v129 = (void *)*((_QWORD *)v118 + 1);
      v130 = *((_QWORD *)v118 + 2);
      v131 = *((_QWORD *)v118 + 3);
      v132 = *((_QWORD *)v118 + 4);
      v133 = *((_QWORD *)v118 + 5);
      sub_100347EC8(v129, v130, v131, v132, v133, v118[48]);
      *(_QWORD *)(v117 + 8) = v129;
      *(_QWORD *)(v117 + 16) = v130;
      *(_QWORD *)(v117 + 24) = v131;
      *(_QWORD *)(v117 + 32) = v132;
      *(_QWORD *)(v117 + 40) = v133;
      *(_BYTE *)(v117 + 48) = v128;
    }
    v150 = *(_QWORD *)v121;
    if (!*(_QWORD *)v121)
      goto LABEL_91;
LABEL_89:
    v161 = *((_QWORD *)v118 + 8);
    *(_QWORD *)(v117 + 56) = v150;
    *(_QWORD *)(v117 + 64) = v161;
    swift_retain();
    goto LABEL_92;
  }
  if (v120 == 1)
  {
    sub_100064B4C(v117);
    *(_OWORD *)v117 = *(_OWORD *)v118;
    v126 = *((_OWORD *)v118 + 2);
    v125 = *((_OWORD *)v118 + 3);
    v127 = *((_OWORD *)v118 + 1);
    *(_QWORD *)(v117 + 64) = *((_QWORD *)v118 + 8);
    *(_OWORD *)(v117 + 32) = v126;
    *(_OWORD *)(v117 + 48) = v125;
    *(_OWORD *)(v117 + 16) = v127;
    goto LABEL_92;
  }
  swift_unknownObjectWeakCopyAssign(v117, v118, v114);
  v134 = (__int128 *)(v117 + 8);
  v135 = (__int128 *)(v118 + 8);
  v136 = v118[48];
  if (*(unsigned __int8 *)(v117 + 48) == 255)
  {
    if (v136 == 255)
    {
      v158 = *v135;
      v159 = *(_OWORD *)(v118 + 24);
      *(_OWORD *)(v117 + 33) = *(_OWORD *)(v118 + 33);
      *v134 = v158;
      *(_OWORD *)(v117 + 24) = v159;
    }
    else
    {
      v151 = (void *)*((_QWORD *)v118 + 1);
      v152 = *((_QWORD *)v118 + 2);
      v153 = *((_QWORD *)v118 + 3);
      v154 = *((_QWORD *)v118 + 4);
      v155 = *((_QWORD *)v118 + 5);
      sub_100347EC8(v151, v152, v153, v154, v155, v118[48]);
      *(_QWORD *)(v117 + 8) = v151;
      *(_QWORD *)(v117 + 16) = v152;
      *(_QWORD *)(v117 + 24) = v153;
      *(_QWORD *)(v117 + 32) = v154;
      *(_QWORD *)(v117 + 40) = v155;
      *(_BYTE *)(v117 + 48) = v136;
    }
  }
  else if (v136 == 255)
  {
    sub_1003482D8(v117 + 8);
    v156 = *(_OWORD *)(v118 + 33);
    v157 = *(_OWORD *)(v118 + 24);
    *v134 = *v135;
    *(_OWORD *)(v117 + 24) = v157;
    *(_OWORD *)(v117 + 33) = v156;
  }
  else
  {
    v137 = (void *)*((_QWORD *)v118 + 1);
    v138 = *((_QWORD *)v118 + 2);
    v140 = *((_QWORD *)v118 + 3);
    v139 = *((_QWORD *)v118 + 4);
    v141 = *((_QWORD *)v118 + 5);
    sub_100347EC8(v137, v138, v140, v139, v141, v118[48]);
    v142 = *(void **)(v117 + 8);
    v143 = *(_QWORD *)(v117 + 16);
    v144 = *(_QWORD *)(v117 + 24);
    v145 = *(_QWORD *)(v117 + 32);
    v146 = *(_QWORD *)(v117 + 40);
    *(_QWORD *)(v117 + 8) = v137;
    *(_QWORD *)(v117 + 16) = v138;
    *(_QWORD *)(v117 + 24) = v140;
    *(_QWORD *)(v117 + 32) = v139;
    *(_QWORD *)(v117 + 40) = v141;
    v147 = *(_BYTE *)(v117 + 48);
    *(_BYTE *)(v117 + 48) = v136;
    sub_100064AA4(v142, v143, v144, v145, v146, v147);
  }
  v150 = *(_QWORD *)v121;
  if (*(_QWORD *)v119)
  {
    if (v150)
    {
      v160 = *((_QWORD *)v118 + 8);
      *(_QWORD *)(v117 + 56) = v150;
      *(_QWORD *)(v117 + 64) = v160;
      swift_retain();
      swift_release();
      goto LABEL_92;
    }
    swift_release();
    goto LABEL_91;
  }
  if (v150)
    goto LABEL_89;
LABEL_91:
  *(_OWORD *)v119 = *(_OWORD *)v121;
LABEL_92:
  *(_QWORD *)(v117 + 72) = *((_QWORD *)v118 + 9);
  swift_retain();
  swift_release();
  v162 = (int *)_s18PerformanceConteXtVMa(0);
  v163 = v162[6];
  v164 = (void *)(v117 + v163);
  v165 = &v118[v163];
  v166 = type metadata accessor for OpenURLAction(0);
  v167 = *(_QWORD *)(v166 - 8);
  v168 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v167 + 48);
  v169 = v168(v164, 1, v166);
  v170 = v168(v165, 1, v166);
  if (v169)
  {
    if (!v170)
    {
      (*(void (**)(void *, char *, uint64_t))(v167 + 16))(v164, v165, v166);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v167 + 56))(v164, 0, 1, v166);
      goto LABEL_98;
    }
    goto LABEL_97;
  }
  if (v170)
  {
    (*(void (**)(void *, uint64_t))(v167 + 8))(v164, v166);
LABEL_97:
    v171 = sub_100007E8C(&qword_1011A9580);
    memcpy(v164, v165, *(_QWORD *)(*(_QWORD *)(v171 - 8) + 64));
    goto LABEL_98;
  }
  (*(void (**)(void *, char *, uint64_t))(v167 + 24))(v164, v165, v166);
LABEL_98:
  v172 = v162[7];
  v173 = (void *)(v117 + v172);
  v174 = &v118[v172];
  v175 = v215((char *)(v117 + v172), 1, v217);
  v176 = v215(v174, 1, v217);
  if (v175)
  {
    if (!v176)
    {
      (*(void (**)(void *, char *, uint64_t))(v214 + 16))(v173, v174, v217);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v214 + 56))(v173, 0, 1, v217);
      goto LABEL_104;
    }
    goto LABEL_103;
  }
  if (v176)
  {
    (*(void (**)(void *, uint64_t))(v214 + 8))(v173, v217);
LABEL_103:
    v177 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v173, v174, *(_QWORD *)(*(_QWORD *)(v177 - 8) + 64));
    goto LABEL_104;
  }
  (*(void (**)(void *, char *, uint64_t))(v214 + 24))(v173, v174, v217);
LABEL_104:
  *(_QWORD *)(v117 + v162[8]) = *(_QWORD *)&v118[v162[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v117 + v162[9]) = *(_QWORD *)&v118[v162[9]];
  swift_retain();
  swift_release();
  *(_QWORD *)(v117 + v162[10]) = *(_QWORD *)&v118[v162[10]];
  swift_retain();
  swift_release();
  *(_QWORD *)(v117 + v162[11]) = *(_QWORD *)&v118[v162[11]];
  swift_retain();
  swift_release();
  v178 = v162[12];
  v179 = *(void **)(v117 + v178);
  v180 = *(void **)&v118[v178];
  *(_QWORD *)(v117 + v178) = v180;
  v181 = v180;

  v182 = v162[13];
  v183 = v117 + v182;
  v184 = &v118[v182];
  v185 = *(_QWORD *)(v117 + v182 + 8);
  v186 = *(_QWORD *)&v118[v182 + 8];
  if (v185)
  {
    if (!v186)
    {
      sub_1005F67E4(v183);
      v189 = *((_OWORD *)v184 + 1);
      *(_OWORD *)v183 = *(_OWORD *)v184;
      *(_OWORD *)(v183 + 16) = v189;
      goto LABEL_121;
    }
    *(_QWORD *)v183 = *(_QWORD *)v184;
    *(_QWORD *)(v183 + 8) = *((_QWORD *)v184 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v187 = (uint64_t *)(v184 + 16);
    v188 = *((_QWORD *)v184 + 3);
    if (*(_QWORD *)(v183 + 24) >> 60 == 15)
    {
      if (v188 >> 60 != 15)
      {
LABEL_113:
        v190 = *v187;
        sub_100079DE4(v190, v188);
        *(_QWORD *)(v183 + 16) = v190;
        *(_QWORD *)(v183 + 24) = v188;
        goto LABEL_121;
      }
      goto LABEL_116;
    }
    if (v188 >> 60 == 15)
    {
      sub_1005F67B0(v183 + 16);
LABEL_116:
      *(_OWORD *)(v183 + 16) = *(_OWORD *)v187;
      goto LABEL_121;
    }
    v192 = *v187;
    sub_100079DE4(v192, *((_QWORD *)v184 + 3));
    v193 = *(_QWORD *)(v183 + 16);
    v194 = *(_QWORD *)(v183 + 24);
    *(_QWORD *)(v183 + 16) = v192;
    *(_QWORD *)(v183 + 24) = v188;
    sub_1000652DC(v193, v194);
  }
  else
  {
    if (v186)
    {
      *(_QWORD *)v183 = *(_QWORD *)v184;
      *(_QWORD *)(v183 + 8) = *((_QWORD *)v184 + 1);
      v187 = (uint64_t *)(v184 + 16);
      v188 = *((_QWORD *)v184 + 3);
      swift_bridgeObjectRetain();
      if (v188 >> 60 == 15)
      {
        *(_OWORD *)(v183 + 16) = *(_OWORD *)v187;
        goto LABEL_121;
      }
      goto LABEL_113;
    }
    v191 = *((_OWORD *)v184 + 1);
    *(_OWORD *)v183 = *(_OWORD *)v184;
    *(_OWORD *)(v183 + 16) = v191;
  }
LABEL_121:
  v195 = v162[14];
  v196 = (uint64_t *)(v117 + v195);
  v197 = &v118[v195];
  v198 = *(_QWORD *)(v117 + v195 + 8);
  v199 = *((_QWORD *)v197 + 1);
  if (v198 >> 60 != 15)
  {
    if (v199 >> 60 != 15)
    {
      v201 = *(_QWORD *)v197;
      sub_100079DE4(*(_QWORD *)v197, *((_QWORD *)v197 + 1));
      v202 = *v196;
      v203 = v196[1];
      *v196 = v201;
      v196[1] = v199;
      sub_1000652DC(v202, v203);
      goto LABEL_128;
    }
    sub_1005F67B0((uint64_t)v196);
    goto LABEL_126;
  }
  if (v199 >> 60 == 15)
  {
LABEL_126:
    *(_OWORD *)v196 = *(_OWORD *)v197;
    goto LABEL_128;
  }
  v200 = *(_QWORD *)v197;
  sub_100079DE4(*(_QWORD *)v197, *((_QWORD *)v197 + 1));
  *v196 = v200;
  v196[1] = v199;
LABEL_128:
  v204 = *(int *)(a3 + 24);
  v205 = &v216[v204];
  v206 = &v212[v204];
  v207 = *(id *)v206;
  v208 = v206[8];
  sub_1000A4100(*(id *)v206, v208);
  v209 = *(void **)v205;
  v210 = v205[8];
  *(_QWORD *)v205 = v207;
  v205[8] = v208;
  sub_1000A4224(v209, v210);
  return v216;
}

char *sub_1007FBFC8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  int *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  char *v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  int *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  __int128 v84;
  uint64_t v85;
  char *v86;
  char *v87;
  char *__dst;
  char *__dsta;
  uint64_t v91;
  unsigned int (*v93)(char *, uint64_t, uint64_t);

  v5 = type metadata accessor for GenericMusicItem(0);
  v6 = *(_QWORD *)(v5 - 8);
  v93 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  v91 = v6;
  if (v93(a2, 1, v5))
  {
    v7 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  v8 = (int *)type metadata accessor for LiveRadio(0);
  v9 = v8[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *((_OWORD *)v11 + 1);
  *(_OWORD *)v10 = *(_OWORD *)v11;
  *((_OWORD *)v10 + 1) = v12;
  *(_OWORD *)&a1[v8[6]] = *(_OWORD *)&a2[v8[6]];
  *(_OWORD *)&a1[v8[7]] = *(_OWORD *)&a2[v8[7]];
  *(_OWORD *)&a1[v8[8]] = *(_OWORD *)&a2[v8[8]];
  v13 = v8[9];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = type metadata accessor for ArtworkImage.ViewModel(0);
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    v18 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v19 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v14, v15, v19);
    v20 = *(int *)(v16 + 20);
    __dst = &v14[v20];
    v21 = &v15[v20];
    v22 = type metadata accessor for Artwork.CropStyle(0);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    {
      v24 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(__dst, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 32))(__dst, v21, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(__dst, 0, 1, v22);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  v25 = v8[10];
  v26 = &a1[v25];
  v27 = &a2[v25];
  v28 = type metadata accessor for MotionViewModel(0);
  v29 = *(_QWORD *)(v28 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
  {
    v30 = sub_100007E8C(&qword_1011AA8D0);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    v31 = type metadata accessor for VideoArtwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v26, v27, v31);
    v32 = *(int *)(v28 + 20);
    __dsta = &v26[v32];
    v33 = &v27[v32];
    v34 = type metadata accessor for Artwork.CropStyle(0);
    v35 = *(_QWORD *)(v34 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
    {
      v36 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(__dsta, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 32))(__dsta, v33, v34);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(__dsta, 0, 1, v34);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  }
  v37 = v8[11];
  v38 = &a1[v37];
  v39 = &a2[v37];
  *(_QWORD *)&a1[v37] = *(_QWORD *)&a2[v37];
  v40 = (int *)type metadata accessor for SegueContext(0);
  v41 = v40[5];
  v42 = &v38[v41];
  v43 = &v39[v41];
  if (v93(&v39[v41], 1, v5))
  {
    v44 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v91 + 32))(v42, v43, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v42, 0, 1, v5);
  }
  v38[v40[6]] = v39[v40[6]];
  v45 = v40[7];
  v46 = &v38[v45];
  v47 = &v39[v45];
  v48 = *(_QWORD *)v47;
  if (*(_QWORD *)v47)
  {
    v49 = *((_QWORD *)v47 + 1);
    *(_QWORD *)v46 = v48;
    *((_QWORD *)v46 + 1) = v49;
  }
  else
  {
    *(_OWORD *)v46 = *(_OWORD *)v47;
  }
  v50 = v8[12];
  v51 = &a1[v50];
  v52 = &a2[v50];
  *(_QWORD *)v51 = *(_QWORD *)&a2[v50];
  v53 = v40[5];
  v54 = &v51[v53];
  v55 = &v52[v53];
  if (v93(&v52[v53], 1, v5))
  {
    v56 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v91 + 32))(v54, v55, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v54, 0, 1, v5);
  }
  v51[v40[6]] = v52[v40[6]];
  v57 = v40[7];
  v58 = &v51[v57];
  v59 = &v52[v57];
  v60 = *(_QWORD *)v59;
  if (*(_QWORD *)v59)
  {
    v61 = *((_QWORD *)v59 + 1);
    *(_QWORD *)v58 = v60;
    *((_QWORD *)v58 + 1) = v61;
  }
  else
  {
    *(_OWORD *)v58 = *(_OWORD *)v59;
  }
  v62 = *(int *)(a3 + 20);
  v63 = &a1[v62];
  v64 = &a2[v62];
  v65 = &a2[v62 + 56];
  if (*(_QWORD *)v65 == 1)
  {
    v66 = *((_OWORD *)v64 + 3);
    *((_OWORD *)v63 + 2) = *((_OWORD *)v64 + 2);
    *((_OWORD *)v63 + 3) = v66;
    *((_QWORD *)v63 + 8) = *((_QWORD *)v64 + 8);
    v67 = *((_OWORD *)v64 + 1);
    *(_OWORD *)v63 = *(_OWORD *)v64;
    *((_OWORD *)v63 + 1) = v67;
  }
  else
  {
    swift_unknownObjectWeakTakeInit(v63, v64);
    *(_OWORD *)(v63 + 8) = *(_OWORD *)(v64 + 8);
    *(_OWORD *)(v63 + 24) = *(_OWORD *)(v64 + 24);
    *(_OWORD *)(v63 + 33) = *(_OWORD *)(v64 + 33);
    v68 = *((_QWORD *)v64 + 7);
    if (v68)
    {
      v69 = *((_QWORD *)v64 + 8);
      *((_QWORD *)v63 + 7) = v68;
      *((_QWORD *)v63 + 8) = v69;
    }
    else
    {
      *(_OWORD *)(v63 + 56) = *(_OWORD *)v65;
    }
  }
  *((_QWORD *)v63 + 9) = *((_QWORD *)v64 + 9);
  v70 = (int *)_s18PerformanceConteXtVMa(0);
  v71 = v70[6];
  v72 = &v63[v71];
  v73 = &v64[v71];
  v74 = type metadata accessor for OpenURLAction(0);
  v75 = *(_QWORD *)(v74 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48))(v73, 1, v74))
  {
    v76 = sub_100007E8C(&qword_1011A9580);
    memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v75 + 32))(v72, v73, v74);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
  }
  v77 = v70[7];
  v78 = &v63[v77];
  v79 = &v64[v77];
  if (v93(&v64[v77], 1, v5))
  {
    v80 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v91 + 32))(v78, v79, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v78, 0, 1, v5);
  }
  *(_QWORD *)&v63[v70[8]] = *(_QWORD *)&v64[v70[8]];
  *(_QWORD *)&v63[v70[9]] = *(_QWORD *)&v64[v70[9]];
  *(_QWORD *)&v63[v70[10]] = *(_QWORD *)&v64[v70[10]];
  *(_QWORD *)&v63[v70[11]] = *(_QWORD *)&v64[v70[11]];
  *(_QWORD *)&v63[v70[12]] = *(_QWORD *)&v64[v70[12]];
  v81 = v70[13];
  v82 = &v63[v81];
  v83 = &v64[v81];
  v84 = *((_OWORD *)v83 + 1);
  *(_OWORD *)v82 = *(_OWORD *)v83;
  *((_OWORD *)v82 + 1) = v84;
  *(_OWORD *)&v63[v70[14]] = *(_OWORD *)&v64[v70[14]];
  v85 = *(int *)(a3 + 24);
  v86 = &a1[v85];
  v87 = &a2[v85];
  *(_QWORD *)v86 = *(_QWORD *)v87;
  v86[8] = v87[8];
  return a1;
}

char *sub_1007FC6A4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t (*v6)(char *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t, uint64_t);
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  size_t v46;
  void *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(void *, uint64_t, uint64_t);
  int v56;
  int v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(char *, uint64_t, uint64_t);
  int v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t (*v81)(char *, uint64_t, uint64_t);
  int v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  void *v88;
  int *v89;
  uint64_t v90;
  char *v91;
  char *v92;
  int v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  void *v105;
  uint64_t v106;
  char *v107;
  char *v108;
  int v109;
  int v110;
  __n128 v111;
  uint64_t v112;
  uint64_t v113;
  __n128 *v114;
  __n128 *v115;
  unint64_t v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  char *v124;
  char *v125;
  __int128 v126;
  __int128 v127;
  uint64_t v128;
  int v129;
  int v130;
  uint64_t v131;
  void *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  __int128 v137;
  uint64_t v138;
  uint64_t v139;
  int *v140;
  uint64_t v141;
  void *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t (*v146)(void *, uint64_t, uint64_t);
  int v147;
  int v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  void *v152;
  char *v153;
  int v154;
  int v155;
  uint64_t v156;
  uint64_t v157;
  void *v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  _OWORD *v163;
  unint64_t v164;
  unint64_t v165;
  __int128 v166;
  uint64_t v167;
  uint64_t *v168;
  uint64_t *v169;
  unint64_t v170;
  unint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  char *v175;
  uint64_t v176;
  void *v177;
  char v178;
  uint64_t v180;
  char *v181;
  uint64_t v183;
  uint64_t v184;
  uint64_t (*v185)(char *, uint64_t, uint64_t);

  v5 = type metadata accessor for GenericMusicItem(0);
  v183 = *(_QWORD *)(v5 - 8);
  v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v183 + 48);
  v7 = v6(a1, 1, v5);
  v185 = v6;
  v8 = v6(a2, 1, v5);
  v184 = v5;
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(v183 + 32))(a1, a2, v5);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v183 + 56))(a1, 0, 1, v5);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v183 + 8))(a1, v5);
LABEL_6:
    v9 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v183 + 40))(a1, a2, v5);
LABEL_7:
  v10 = (int *)type metadata accessor for LiveRadio(0);
  v11 = v10[5];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = *(_QWORD *)&a2[v11 + 8];
  *(_QWORD *)v12 = *(_QWORD *)&a2[v11];
  *((_QWORD *)v12 + 1) = v14;
  swift_bridgeObjectRelease();
  v15 = *((_QWORD *)v13 + 3);
  *((_QWORD *)v12 + 2) = *((_QWORD *)v13 + 2);
  *((_QWORD *)v12 + 3) = v15;
  swift_bridgeObjectRelease();
  v16 = v10[6];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v20 = *(_QWORD *)v18;
  v19 = *((_QWORD *)v18 + 1);
  *(_QWORD *)v17 = v20;
  *((_QWORD *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  v21 = v10[7];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v25 = *(_QWORD *)v23;
  v24 = *((_QWORD *)v23 + 1);
  *(_QWORD *)v22 = v25;
  *((_QWORD *)v22 + 1) = v24;
  swift_bridgeObjectRelease();
  v26 = v10[8];
  v27 = &a1[v26];
  v28 = &a2[v26];
  v30 = *(_QWORD *)v28;
  v29 = *((_QWORD *)v28 + 1);
  *(_QWORD *)v27 = v30;
  *((_QWORD *)v27 + 1) = v29;
  swift_bridgeObjectRelease();
  v31 = v10[9];
  v32 = (uint64_t)&a1[v31];
  v33 = &a2[v31];
  v34 = type metadata accessor for ArtworkImage.ViewModel(0);
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v35 + 48);
  v37 = v36(v32, 1, v34);
  v38 = v36((uint64_t)v33, 1, v34);
  if (!v37)
  {
    if (!v38)
    {
      v49 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 40))(v32, v33, v49);
      v50 = *(int *)(v34 + 20);
      v51 = (void *)(v32 + v50);
      v52 = &v33[v50];
      v53 = type metadata accessor for Artwork.CropStyle(0);
      v54 = *(_QWORD *)(v53 - 8);
      v55 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v54 + 48);
      v56 = v55(v51, 1, v53);
      v57 = v55(v52, 1, v53);
      if (v56)
      {
        if (!v57)
        {
          (*(void (**)(void *, char *, uint64_t))(v54 + 32))(v51, v52, v53);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
          goto LABEL_21;
        }
      }
      else
      {
        if (!v57)
        {
          (*(void (**)(void *, char *, uint64_t))(v54 + 40))(v51, v52, v53);
          goto LABEL_21;
        }
        (*(void (**)(void *, uint64_t))(v54 + 8))(v51, v53);
      }
      v46 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A14A0) - 8) + 64);
      v47 = v51;
      v48 = v52;
LABEL_14:
      memcpy(v47, v48, v46);
      goto LABEL_21;
    }
    sub_10005B748(v32, type metadata accessor for ArtworkImage.ViewModel);
LABEL_13:
    v46 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011A3E10) - 8) + 64);
    v47 = (void *)v32;
    v48 = v33;
    goto LABEL_14;
  }
  if (v38)
    goto LABEL_13;
  v39 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v32, v33, v39);
  v40 = *(int *)(v34 + 20);
  v41 = (void *)(v32 + v40);
  v42 = &v33[v40];
  v43 = type metadata accessor for Artwork.CropStyle(0);
  v44 = *(_QWORD *)(v43 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
  {
    v45 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v44 + 32))(v41, v42, v43);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
LABEL_21:
  v58 = v10[10];
  v59 = &a1[v58];
  v60 = &a2[v58];
  v61 = type metadata accessor for MotionViewModel(0);
  v62 = *(_QWORD *)(v61 - 8);
  v63 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v62 + 48);
  v64 = v63(v59, 1, v61);
  v65 = v63(v60, 1, v61);
  if (!v64)
  {
    if (!v65)
    {
      v75 = type metadata accessor for VideoArtwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 40))(v59, v60, v75);
      v76 = *(int *)(v61 + 20);
      v77 = &v59[v76];
      v78 = &v60[v76];
      v79 = type metadata accessor for Artwork.CropStyle(0);
      v80 = *(_QWORD *)(v79 - 8);
      v81 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v80 + 48);
      v82 = v81(v77, 1, v79);
      v83 = v81(v78, 1, v79);
      if (v82)
      {
        v74 = v184;
        if (!v83)
        {
          (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v77, v78, v79);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v77, 0, 1, v79);
          goto LABEL_39;
        }
      }
      else
      {
        v74 = v184;
        if (!v83)
        {
          (*(void (**)(char *, char *, uint64_t))(v80 + 40))(v77, v78, v79);
          goto LABEL_39;
        }
        (*(void (**)(char *, uint64_t))(v80 + 8))(v77, v79);
      }
      v84 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
      memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
      goto LABEL_39;
    }
    sub_10005B748((uint64_t)v59, type metadata accessor for MotionViewModel);
LABEL_27:
    v73 = sub_100007E8C(&qword_1011AA8D0);
    memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
    v74 = v184;
    goto LABEL_39;
  }
  if (v65)
    goto LABEL_27;
  v66 = type metadata accessor for VideoArtwork(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 32))(v59, v60, v66);
  v67 = *(int *)(v61 + 20);
  v68 = &v59[v67];
  v69 = &v60[v67];
  v70 = type metadata accessor for Artwork.CropStyle(0);
  v71 = *(_QWORD *)(v70 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v69, 1, v70))
  {
    v72 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
    memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v68, v69, v70);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
  }
  v74 = v184;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v59, 0, 1, v61);
LABEL_39:
  v85 = v10[11];
  v86 = &a1[v85];
  v181 = a2;
  v87 = &a2[v85];
  v88 = *(void **)&a1[v85];
  *(_QWORD *)&a1[v85] = *(_QWORD *)&a2[v85];

  v89 = (int *)type metadata accessor for SegueContext(0);
  v90 = v89[5];
  v91 = &v86[v90];
  v92 = &v87[v90];
  v93 = v185(&v86[v90], 1, v74);
  v94 = v185(v92, 1, v74);
  if (v93)
  {
    if (!v94)
    {
      (*(void (**)(char *, char *, uint64_t))(v183 + 32))(v91, v92, v74);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v183 + 56))(v91, 0, 1, v74);
      goto LABEL_45;
    }
    goto LABEL_44;
  }
  if (v94)
  {
    (*(void (**)(char *, uint64_t))(v183 + 8))(v91, v74);
LABEL_44:
    v95 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v91, v92, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
    goto LABEL_45;
  }
  (*(void (**)(char *, char *, uint64_t))(v183 + 40))(v91, v92, v74);
LABEL_45:
  v86[v89[6]] = v87[v89[6]];
  v96 = v89[7];
  v97 = &v86[v96];
  v98 = &v87[v96];
  v99 = *(_QWORD *)&v87[v96];
  if (*(_QWORD *)v97)
  {
    if (v99)
    {
      v100 = *((_QWORD *)v98 + 1);
      *(_QWORD *)v97 = v99;
      *((_QWORD *)v97 + 1) = v100;
      swift_release();
      goto LABEL_52;
    }
    swift_release();
  }
  else if (v99)
  {
    v101 = *((_QWORD *)v98 + 1);
    *(_QWORD *)v97 = v99;
    *((_QWORD *)v97 + 1) = v101;
    goto LABEL_52;
  }
  *(_OWORD *)v97 = *(_OWORD *)v98;
LABEL_52:
  v102 = v10[12];
  v103 = &a1[v102];
  v104 = &a2[v102];
  v105 = *(void **)&a1[v102];
  *(_QWORD *)&a1[v102] = *(_QWORD *)&a2[v102];

  v106 = v89[5];
  v107 = &v103[v106];
  v108 = &v104[v106];
  v109 = v185(&v103[v106], 1, v184);
  v110 = v185(v108, 1, v184);
  if (v109)
  {
    if (!v110)
    {
      (*(void (**)(char *, char *, uint64_t))(v183 + 32))(v107, v108, v184);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v183 + 56))(v107, 0, 1, v184);
      goto LABEL_58;
    }
    goto LABEL_57;
  }
  if (v110)
  {
    (*(void (**)(char *, uint64_t))(v183 + 8))(v107, v184);
LABEL_57:
    v112 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v107, v108, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
    goto LABEL_58;
  }
  (*(void (**)(char *, char *, uint64_t))(v183 + 40))(v107, v108, v184);
LABEL_58:
  v103[v89[6]] = v104[v89[6]];
  v113 = v89[7];
  v114 = (__n128 *)&v103[v113];
  v115 = (__n128 *)&v104[v113];
  v116 = *(_QWORD *)&v104[v113];
  if (v114->n128_u64[0])
  {
    if (v116)
    {
      v117 = v115->n128_u64[1];
      v114->n128_u64[0] = v116;
      v114->n128_u64[1] = v117;
      v111 = swift_release();
      goto LABEL_65;
    }
    swift_release();
  }
  else if (v116)
  {
    v118 = v115->n128_u64[1];
    v114->n128_u64[0] = v116;
    v114->n128_u64[1] = v118;
    goto LABEL_65;
  }
  v111 = *v115;
  *v114 = *v115;
LABEL_65:
  v119 = *(int *)(a3 + 20);
  v120 = (uint64_t)&a1[v119];
  v121 = &a2[v119];
  v122 = &a1[v119 + 56];
  v124 = &a2[v119 + 56];
  v123 = *(_QWORD *)v124;
  if (*(_QWORD *)v122 != 1)
  {
    if (v123 == 1)
    {
      v125 = a1;
      sub_100064B4C(v120);
      goto LABEL_70;
    }
    swift_unknownObjectWeakTakeAssign(v120, v121, v111);
    v129 = *(unsigned __int8 *)(v120 + 48);
    if (v129 != 255)
    {
      v130 = v121[48];
      if (v130 != 255)
      {
        v131 = *((_QWORD *)v121 + 5);
        v132 = *(void **)(v120 + 8);
        v133 = *(_QWORD *)(v120 + 16);
        v134 = *(_QWORD *)(v120 + 24);
        v135 = *(_QWORD *)(v120 + 32);
        v136 = *(_QWORD *)(v120 + 40);
        *(_OWORD *)(v120 + 8) = *(_OWORD *)(v121 + 8);
        *(_OWORD *)(v120 + 24) = *(_OWORD *)(v121 + 24);
        *(_QWORD *)(v120 + 40) = v131;
        *(_BYTE *)(v120 + 48) = v130;
        sub_100064AA4(v132, v133, v134, v135, v136, v129);
        goto LABEL_81;
      }
      sub_1003482D8(v120 + 8);
    }
    v137 = *(_OWORD *)(v121 + 24);
    *(_OWORD *)(v120 + 8) = *(_OWORD *)(v121 + 8);
    *(_OWORD *)(v120 + 24) = v137;
    *(_OWORD *)(v120 + 33) = *(_OWORD *)(v121 + 33);
LABEL_81:
    v128 = *(_QWORD *)v124;
    v125 = a1;
    if (*(_QWORD *)v122)
    {
      if (v128)
      {
        v138 = *((_QWORD *)v121 + 8);
        *(_QWORD *)(v120 + 56) = v128;
        *(_QWORD *)(v120 + 64) = v138;
        swift_release();
        goto LABEL_88;
      }
      swift_release();
    }
    else if (v128)
    {
      goto LABEL_85;
    }
    goto LABEL_87;
  }
  if (v123 == 1)
  {
    v125 = a1;
LABEL_70:
    v126 = *((_OWORD *)v121 + 3);
    *(_OWORD *)(v120 + 32) = *((_OWORD *)v121 + 2);
    *(_OWORD *)(v120 + 48) = v126;
    *(_QWORD *)(v120 + 64) = *((_QWORD *)v121 + 8);
    v127 = *((_OWORD *)v121 + 1);
    *(_OWORD *)v120 = *(_OWORD *)v121;
    *(_OWORD *)(v120 + 16) = v127;
    goto LABEL_88;
  }
  swift_unknownObjectWeakTakeInit(v120, v121);
  *(_OWORD *)(v120 + 8) = *(_OWORD *)(v121 + 8);
  *(_OWORD *)(v120 + 24) = *(_OWORD *)(v121 + 24);
  *(_OWORD *)(v120 + 33) = *(_OWORD *)(v121 + 33);
  v128 = *((_QWORD *)v121 + 7);
  if (v128)
  {
    v125 = a1;
LABEL_85:
    v139 = *((_QWORD *)v121 + 8);
    *(_QWORD *)(v120 + 56) = v128;
    *(_QWORD *)(v120 + 64) = v139;
    goto LABEL_88;
  }
  v125 = a1;
LABEL_87:
  *(_OWORD *)v122 = *(_OWORD *)v124;
LABEL_88:
  *(_QWORD *)(v120 + 72) = *((_QWORD *)v121 + 9);
  swift_release();
  v140 = (int *)_s18PerformanceConteXtVMa(0);
  v141 = v140[6];
  v142 = (void *)(v120 + v141);
  v143 = &v121[v141];
  v144 = type metadata accessor for OpenURLAction(0);
  v145 = *(_QWORD *)(v144 - 8);
  v146 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v145 + 48);
  v147 = v146(v142, 1, v144);
  v148 = v146(v143, 1, v144);
  if (v147)
  {
    if (!v148)
    {
      (*(void (**)(void *, char *, uint64_t))(v145 + 32))(v142, v143, v144);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v145 + 56))(v142, 0, 1, v144);
      goto LABEL_94;
    }
    goto LABEL_93;
  }
  if (v148)
  {
    (*(void (**)(void *, uint64_t))(v145 + 8))(v142, v144);
LABEL_93:
    v149 = sub_100007E8C(&qword_1011A9580);
    memcpy(v142, v143, *(_QWORD *)(*(_QWORD *)(v149 - 8) + 64));
    goto LABEL_94;
  }
  (*(void (**)(void *, char *, uint64_t))(v145 + 40))(v142, v143, v144);
LABEL_94:
  v150 = v125;
  v151 = v140[7];
  v152 = (void *)(v120 + v151);
  v153 = &v121[v151];
  v154 = v185((char *)(v120 + v151), 1, v184);
  v155 = v185(v153, 1, v184);
  if (v154)
  {
    if (!v155)
    {
      (*(void (**)(void *, char *, uint64_t))(v183 + 32))(v152, v153, v184);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v183 + 56))(v152, 0, 1, v184);
      goto LABEL_100;
    }
    goto LABEL_99;
  }
  if (v155)
  {
    (*(void (**)(void *, uint64_t))(v183 + 8))(v152, v184);
LABEL_99:
    v156 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
    memcpy(v152, v153, *(_QWORD *)(*(_QWORD *)(v156 - 8) + 64));
    goto LABEL_100;
  }
  (*(void (**)(void *, char *, uint64_t))(v183 + 40))(v152, v153, v184);
LABEL_100:
  *(_QWORD *)(v120 + v140[8]) = *(_QWORD *)&v121[v140[8]];
  swift_bridgeObjectRelease();
  *(_QWORD *)(v120 + v140[9]) = *(_QWORD *)&v121[v140[9]];
  swift_release();
  *(_QWORD *)(v120 + v140[10]) = *(_QWORD *)&v121[v140[10]];
  swift_release();
  *(_QWORD *)(v120 + v140[11]) = *(_QWORD *)&v121[v140[11]];
  swift_release();
  v157 = v140[12];
  v158 = *(void **)(v120 + v157);
  *(_QWORD *)(v120 + v157) = *(_QWORD *)&v121[v157];

  v159 = v140[13];
  v160 = v120 + v159;
  v161 = &v121[v159];
  if (!*(_QWORD *)(v120 + v159 + 8))
  {
LABEL_107:
    v166 = *((_OWORD *)v161 + 1);
    *(_OWORD *)v160 = *(_OWORD *)v161;
    *(_OWORD *)(v160 + 16) = v166;
    goto LABEL_108;
  }
  v162 = *((_QWORD *)v161 + 1);
  if (!v162)
  {
    sub_1005F67E4(v160);
    goto LABEL_107;
  }
  *(_QWORD *)v160 = *(_QWORD *)v161;
  *(_QWORD *)(v160 + 8) = v162;
  swift_bridgeObjectRelease();
  v163 = v161 + 16;
  v164 = *(_QWORD *)(v160 + 24);
  if (v164 >> 60 == 15)
  {
LABEL_105:
    *(_OWORD *)(v160 + 16) = *v163;
    goto LABEL_108;
  }
  v165 = *((_QWORD *)v161 + 3);
  if (v165 >> 60 == 15)
  {
    sub_1005F67B0(v160 + 16);
    goto LABEL_105;
  }
  v180 = *(_QWORD *)(v160 + 16);
  *(_QWORD *)(v160 + 16) = *(_QWORD *)v163;
  *(_QWORD *)(v160 + 24) = v165;
  sub_1000652DC(v180, v164);
LABEL_108:
  v167 = v140[14];
  v168 = (uint64_t *)(v120 + v167);
  v169 = (uint64_t *)&v121[v167];
  v170 = *(_QWORD *)(v120 + v167 + 8);
  if (v170 >> 60 != 15)
  {
    v171 = v169[1];
    if (v171 >> 60 != 15)
    {
      v172 = *v168;
      *v168 = *v169;
      v168[1] = v171;
      sub_1000652DC(v172, v170);
      goto LABEL_113;
    }
    sub_1005F67B0((uint64_t)v168);
  }
  *(_OWORD *)v168 = *(_OWORD *)v169;
LABEL_113:
  v173 = *(int *)(a3 + 24);
  v174 = &v150[v173];
  v175 = &v181[v173];
  v176 = *(_QWORD *)v175;
  LOBYTE(v175) = v175[8];
  v177 = *(void **)v174;
  v178 = v174[8];
  *(_QWORD *)v174 = v176;
  v174[8] = (char)v175;
  sub_1000A4224(v177, v178);
  return v150;
}

uint64_t sub_1007FD3B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1007FD3C4);
}

uint64_t sub_1007FD3C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v14;

  v6 = type metadata accessor for LiveRadio(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = _s18PerformanceConteXtVMa(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 > 1)
    return (v14 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t sub_1007FD46C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1007FD478);
}

uint64_t sub_1007FD478(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = type metadata accessor for LiveRadio(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = _s18PerformanceConteXtVMa(0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 24) + 8) = -(char)a2;
  return result;
}

uint64_t sub_1007FD520(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[3];

  result = type metadata accessor for LiveRadio(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = _s18PerformanceConteXtVMa(319);
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      v5[2] = "\t";
      swift_initStructMetadata(a1, 256, 3, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

uint64_t sub_1007FD5AC()
{
  return sub_10005610C(&qword_1011CA750, &qword_1011CA640, (void (*)(void))sub_1007FD5E0);
}

uint64_t sub_1007FD5E0()
{
  return sub_10005610C(&qword_1011CA758, &qword_1011CA630, (void (*)(void))sub_1007FD604);
}

uint64_t sub_1007FD604()
{
  return sub_10005610C(&qword_1011CA760, &qword_1011CA628, (void (*)(void))sub_1007FD628);
}

uint64_t sub_1007FD628()
{
  return sub_10005610C(&qword_1011CA768, &qword_1011CA620, (void (*)(void))sub_1007FD64C);
}

unint64_t sub_1007FD64C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CA770;
  if (!qword_1011CA770)
  {
    v1 = sub_100044B54(&qword_1011CA618);
    sub_100049F28(&qword_1011CA778, &qword_1011CA610, (uint64_t)&protocol conformance descriptor for VStack<A>);
    sub_100049F28((unint64_t *)&qword_1011A4620, &qword_1011B5800, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CA770);
  }
  return result;
}

uint64_t sub_1007FD6E8()
{
  return sub_100049F28(&qword_1011CA780, &qword_1011CA788, (uint64_t)&protocol conformance descriptor for HStack<A>);
}

uint64_t sub_1007FD714(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FADCC0, 1);
}

uint64_t sub_1007FD724()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id *v20;
  uint64_t v21;
  char *v22;
  id *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  uint64_t *v35;
  unint64_t v36;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;

  v1 = type metadata accessor for LiveRadioView.AccessoryButton(0);
  v2 = *(_QWORD *)(v1 - 8);
  v40 = v0;
  v38 = *(_QWORD *)(v2 + 64);
  v39 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v3 = v0 + v39;
  v4 = type metadata accessor for GenericMusicItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(v3, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  v7 = (int *)type metadata accessor for LiveRadio(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = v3 + v7[9];
  v9 = type metadata accessor for ArtworkImage.ViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    v10 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
    v11 = v8 + *(int *)(v9 + 20);
    v12 = type metadata accessor for Artwork.CropStyle(0);
    v13 = *(_QWORD *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  v14 = v3 + v7[10];
  v15 = type metadata accessor for MotionViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15))
  {
    v16 = type metadata accessor for VideoArtwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v14, v16);
    v17 = v14 + *(int *)(v15 + 20);
    v18 = type metadata accessor for Artwork.CropStyle(0);
    v19 = *(_QWORD *)(v18 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
  }
  v20 = (id *)(v3 + v7[11]);

  v21 = type metadata accessor for SegueContext(0);
  v22 = (char *)v20 + *(int *)(v21 + 20);
  if (!v6((uint64_t)v22, 1, v4))
    (*(void (**)(char *, uint64_t))(v5 + 8))(v22, v4);
  if (*(id *)((char *)v20 + *(int *)(v21 + 28)))
    swift_release();
  v23 = (id *)(v3 + v7[12]);

  v24 = (char *)v23 + *(int *)(v21 + 20);
  if (!v6((uint64_t)v24, 1, v4))
    (*(void (**)(char *, uint64_t))(v5 + 8))(v24, v4);
  if (*(id *)((char *)v23 + *(int *)(v21 + 28)))
    swift_release();
  v26 = v3 + *(int *)(v1 + 20);
  if (*(_QWORD *)(v26 + 56) != 1)
  {
    swift_unknownObjectWeakDestroy(v3 + *(int *)(v1 + 20), v25);
    v27 = *(unsigned __int8 *)(v26 + 48);
    if (v27 != 255)
      sub_100064AA4(*(id *)(v26 + 8), *(_QWORD *)(v26 + 16), *(_QWORD *)(v26 + 24), *(_QWORD *)(v26 + 32), *(_QWORD *)(v26 + 40), v27);
    if (*(_QWORD *)(v26 + 56))
      swift_release();
  }
  swift_release();
  v28 = (int *)_s18PerformanceConteXtVMa(0);
  v29 = v26 + v28[6];
  v30 = type metadata accessor for OpenURLAction(0);
  v31 = *(_QWORD *)(v30 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v29, v30);
  v32 = v26 + v28[7];
  if (!v6(v32, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v32, v4);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  v33 = (_QWORD *)(v26 + v28[13]);
  if (v33[1])
  {
    swift_bridgeObjectRelease();
    v34 = v33[3];
    if (v34 >> 60 != 15)
      sub_1000652DC(v33[2], v34);
  }
  v35 = (uint64_t *)(v26 + v28[14]);
  v36 = v35[1];
  if (v36 >> 60 != 15)
    sub_1000652DC(*v35, v36);
  sub_1000A4224(*(id *)(v3 + *(int *)(v1 + 24)), *(_BYTE *)(v3 + *(int *)(v1 + 24) + 8));
  return swift_deallocObject(v40, v39 + v38);
}

uint64_t sub_1007FDB68()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for LiveRadioView.AccessoryButton(0) - 8) + 80);
  return sub_1007ECFEC(v0 + ((v1 + 16) & ~v1));
}

unint64_t sub_1007FDB94()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CA7C0;
  if (!qword_1011CA7C0)
  {
    v1 = sub_100044B54(&qword_1011CA7A8);
    sub_100049F28(&qword_1011CA7B8, &qword_1011CA7A0, (uint64_t)&protocol conformance descriptor for Button<A>);
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CA7C0);
  }
  return result;
}

unint64_t sub_1007FDC4C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CA7D0;
  if (!qword_1011CA7D0)
  {
    v1 = sub_100044B54(&qword_1011CA7C8);
    sub_1007FDCD0();
    sub_100049F28(&qword_1011C3678, &qword_1011C3680, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CA7D0);
  }
  return result;
}

unint64_t sub_1007FDCD0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CA7D8;
  if (!qword_1011CA7D8)
  {
    v1 = sub_100044B54(&qword_1011CA7B0);
    sub_1007FDD54();
    sub_100049F28(&qword_1011A0D58, &qword_1011A0618, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CA7D8);
  }
  return result;
}

unint64_t sub_1007FDD54()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1011CA7E0;
  if (!qword_1011CA7E0)
  {
    v1 = sub_100044B54(&qword_1011CA798);
    v2[0] = sub_100044B54(&qword_1011CA7A8);
    v2[1] = type metadata accessor for BorderedButtonStyle(255);
    v2[2] = sub_1007FDB94();
    v2[3] = sub_100048748((unint64_t *)&qword_1011A0D08, (uint64_t (*)(uint64_t))&type metadata accessor for BorderedButtonStyle, (uint64_t)&protocol conformance descriptor for BorderedButtonStyle);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    sub_100049F28(&qword_1011A0D50, &qword_1011A0610, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CA7E0);
  }
  return result;
}

uint64_t sub_1007FDE44(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v15 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v15 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 8);
    v6 = a2[4];
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = v6;
    v7 = *(int *)(a3 + 36);
    v8 = (_QWORD *)(a1 + v7);
    v9 = (uint64_t *)((char *)a2 + v7);
    *(_QWORD *)(a1 + 40) = a2[5];
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    v10 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
      v12 = v8;
      v13 = v10;
      v14 = 1;
    }
    else
    {
      *v8 = *v9;
      swift_retain();
      v12 = v8;
      v13 = v10;
      v14 = 0;
    }
    swift_storeEnumTagMultiPayload(v12, v13, v14);
  }
  return a1;
}

double sub_1007FDF50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 36);
  v5 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_1007FDFD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  v6 = *(int *)(a3 + 36);
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  v9 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v7, v8, v10);
    v11 = 1;
  }
  else
  {
    *v7 = *v8;
    swift_retain();
    v11 = 0;
  }
  swift_storeEnumTagMultiPayload(v7, v9, v11);
  return a1;
}

uint64_t sub_1007FE0B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 36);
    v7 = (_QWORD *)(a1 + v6);
    v8 = (_QWORD *)(a2 + v6);
    sub_10004FF60(a1 + v6, (uint64_t *)&unk_1011ACE40);
    v9 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v10 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v7, v8, v10);
      v11 = 1;
    }
    else
    {
      *v7 = *v8;
      swift_retain();
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v7, v9, v11);
  }
  return a1;
}

uint64_t sub_1007FE1D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v4 = *(int *)(a3 + 36);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload(v5, v7, 1);
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1007FE294(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  swift_release();
  if (a1 != a2)
  {
    v8 = *(int *)(a3 + 36);
    v9 = (void *)(a1 + v8);
    v10 = (const void *)(a2 + v8);
    sub_10004FF60(a1 + v8, (uint64_t *)&unk_1011ACE40);
    v11 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload(v9, v11, 1);
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1007FE394(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1007FE3A0);
}

uint64_t sub_1007FE3A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011C6890);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v8);
  }
}

uint64_t sub_1007FE420(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1007FE42C);
}

uint64_t sub_1007FE42C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = sub_100007E8C(&qword_1011C6890);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for PreviewOverlay.ArtworkVariant(uint64_t a1)
{
  return sub_100055934(a1, qword_1011CA880, (uint64_t)&nominal type descriptor for PreviewOverlay.ArtworkVariant);
}

void sub_1007FE4B8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = &unk_100ED15E0;
  v4[1] = &unk_100ED15F8;
  v4[2] = &unk_100ED1610;
  v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[4] = &unk_100ED1628;
  sub_1000559DC(319);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 6, v4, a1 + 16);
  }
}

ValueMetadata *type metadata accessor for PreviewOverlay()
{
  return &type metadata for PreviewOverlay;
}

uint64_t sub_1007FE568(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v15 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v15 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v6 = a2[4];
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = v6;
    v7 = *(int *)(a3 + 32);
    v8 = (_QWORD *)(a1 + v7);
    v9 = (uint64_t *)((char *)a2 + v7);
    *(_QWORD *)(a1 + 40) = a2[5];
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    v10 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
      v12 = v8;
      v13 = v10;
      v14 = 1;
    }
    else
    {
      *v8 = *v9;
      swift_retain();
      v12 = v8;
      v13 = v10;
      v14 = 0;
    }
    swift_storeEnumTagMultiPayload(v12, v13, v14);
  }
  return a1;
}

double sub_1007FE674(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 32);
  v5 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_1007FE6FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  v6 = *(int *)(a3 + 32);
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  v9 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v7, v8, v10);
    v11 = 1;
  }
  else
  {
    *v7 = *v8;
    swift_retain();
    v11 = 0;
  }
  swift_storeEnumTagMultiPayload(v7, v9, v11);
  return a1;
}

uint64_t sub_1007FE7D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 32);
    v7 = (_QWORD *)(a1 + v6);
    v8 = (_QWORD *)(a2 + v6);
    sub_10004FF60(a1 + v6, (uint64_t *)&unk_1011ACE40);
    v9 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v10 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v7, v8, v10);
      v11 = 1;
    }
    else
    {
      *v7 = *v8;
      swift_retain();
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v7, v9, v11);
  }
  return a1;
}

uint64_t sub_1007FE8F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v4 = *(int *)(a3 + 32);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload(v5, v7, 1);
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1007FE9B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  swift_release();
  if (a1 != a2)
  {
    v8 = *(int *)(a3 + 32);
    v9 = (void *)(a1 + v8);
    v10 = (const void *)(a2 + v8);
    sub_10004FF60(a1 + v8, (uint64_t *)&unk_1011ACE40);
    v11 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload(v9, v11, 1);
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1007FEAA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1007FEAB4);
}

uint64_t sub_1007FEAB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011C6890);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t sub_1007FEB34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1007FEB40);
}

uint64_t sub_1007FEB40(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = sub_100007E8C(&qword_1011C6890);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for PreviewOverlay.TrackNumberVariant(uint64_t a1)
{
  return sub_100055934(a1, qword_1011CA920, (uint64_t)&nominal type descriptor for PreviewOverlay.TrackNumberVariant);
}

void sub_1007FEBCC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = &unk_100ED15E0;
  v4[1] = &unk_100ED15F8;
  v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[3] = &unk_100ED1628;
  sub_1000559DC(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
  }
}

uint64_t sub_1007FEC60(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FADDA8, 1);
}

uint64_t sub_1007FEC70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v43 = a2;
  v4 = sub_100007E8C((uint64_t *)&unk_10119E648);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_100007E8C(&qword_1011CA968);
  __chkstk_darwin(v7);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_100007E8C(&qword_1011CA970);
  __chkstk_darwin(v40);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_100007E8C(&qword_1011CA978);
  __chkstk_darwin(v42);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_100007E8C(&qword_1011CA980);
  __chkstk_darwin(v41);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = 0;
  if ((sub_1007FF018() & 1) != 0)
  {
    if (qword_10119C848 != -1)
      swift_once(&qword_10119C848, sub_100800138);
    v16 = qword_1011CA7E8;
  }
  v17 = sub_100007E8C(&qword_1011CA988);
  v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v9, a1, v17);
  v19 = &v9[*(int *)(v7 + 36)];
  *(_QWORD *)v19 = v16;
  v19[8] = 0;
  v20 = static Animation.easeIn.getter(v18);
  KeyPath = swift_getKeyPath(&unk_100ED1718);
  v22 = swift_getKeyPath(&unk_100ED1740);
  swift_retain();
  static Published.subscript.getter(v6, v23, KeyPath, v22);
  swift_release();
  swift_release();
  swift_release();
  v24 = (uint64_t *)&v11[*(int *)(v40 + 36)];
  v25 = sub_100007E8C(&qword_1011CA990);
  sub_10004A160((uint64_t)v6, (uint64_t)v24 + *(int *)(v25 + 36), (uint64_t *)&unk_10119E648);
  *v24 = v20;
  sub_10004A160((uint64_t)v9, (uint64_t)v11, &qword_1011CA968);
  sub_10004FF60((uint64_t)v6, (uint64_t *)&unk_10119E648);
  v26 = sub_10004FF60((uint64_t)v9, &qword_1011CA968);
  v27 = static Animation.easeIn.getter(v26);
  v28 = swift_getKeyPath(&unk_100ED1760);
  v29 = swift_getKeyPath(&unk_100ED1788);
  swift_retain();
  static Published.subscript.getter(&v44, v30, v28, v29);
  swift_release();
  swift_release();
  swift_release();
  LOBYTE(v28) = v44;
  sub_10004A160((uint64_t)v11, (uint64_t)v13, &qword_1011CA970);
  v31 = &v13[*(int *)(v42 + 36)];
  *(_QWORD *)v31 = v27;
  v31[8] = v28;
  v32 = sub_10004FF60((uint64_t)v11, &qword_1011CA970);
  v33 = static Alignment.center.getter(v32);
  v35 = v34;
  v36 = (uint64_t)&v15[*(int *)(v41 + 36)];
  sub_1007FF174(v2, v36);
  v37 = (uint64_t *)(v36 + *(int *)(sub_100007E8C(&qword_1011CA998) + 36));
  *v37 = v33;
  v37[1] = v35;
  sub_100065228((uint64_t)v13, (uint64_t)v15, &qword_1011CA978);
  return sub_100065228((uint64_t)v15, v43, &qword_1011CA980);
}

uint64_t sub_1007FF018()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  int v10;
  char v12;
  char v13;
  int v14;
  uint64_t v16;

  v1 = (uint64_t)v0;
  v2 = type metadata accessor for PreviewOverlay.ArtworkVariant(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  v6 = v0[1];
  swift_retain();
  v7 = sub_100065908(v5, v6);
  v9 = v8;
  v10 = ~v8;
  swift_release();
  if (!v10)
    return 0;
  if (v9 == 2 && v7 == 0)
    return 0;
  if (qword_10119B878 != -1)
    swift_once(&qword_10119B878, sub_10006585C);
  sub_100065908(v5, v6);
  if (v12 == -1)
    return 0;
  v13 = v12;
  sub_10005B704(v1, (uint64_t)v4, type metadata accessor for PreviewOverlay.ArtworkVariant);
  if (v13 == 1)
  {
    v14 = v4[17];
    sub_10005B748((uint64_t)v4, type metadata accessor for PreviewOverlay.ArtworkVariant);
    if (v14 == 1)
      return 0;
  }
  else
  {
    sub_10005B748((uint64_t)v4, type metadata accessor for PreviewOverlay.ArtworkVariant);
  }
  return 1;
}

uint64_t sub_1007FF174@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t KeyPath;
  uint64_t v51;
  uint64_t v52;
  __n128 v53;
  uint64_t v54;
  unint64_t v56;
  int v57;
  char v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t (*v76)(char *, uint64_t, __n128);
  __n128 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unsigned int v90;
  uint64_t v91;
  void (*v92)(char *, uint64_t, uint64_t);
  char *v93;
  uint64_t v94;
  char *v95;
  void (*v96)(char *, uint64_t);
  uint64_t v97;
  char *v98;
  unint64_t v99;
  char *v100;
  unsigned int v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(uint64_t, uint64_t, uint64_t);
  uint64_t v115;
  char v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _OWORD *v124;
  __int128 v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  unsigned int v130;
  void (*v131)(char *, uint64_t, uint64_t);
  uint64_t v132;
  char *v133;
  unint64_t v134;
  char *v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  void (*v139)(char *, char *, uint64_t);
  char *v140;
  uint64_t v141;
  void (*v142)(char *, char *, uint64_t);
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  void (*v147)(char *, uint64_t);
  void (*v148)(char *, uint64_t);
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t *v152;
  uint64_t *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  char *v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  double *v190;
  char *v191;
  uint64_t v192;
  __int128 v193;
  __int128 v194;
  __int128 v195;

  v4 = sub_100007E8C(&qword_1011CA9A0);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v150 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v169 = type metadata accessor for CircularProgressView.LineStyle(0);
  v167 = *(_QWORD *)(v169 - 8);
  __chkstk_darwin(v169);
  v170 = (char *)&v150 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v173 = type metadata accessor for CircularProgressView(0);
  v172 = *(_QWORD *)(v173 - 8);
  __chkstk_darwin(v173);
  v171 = (char *)&v150 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v168 = sub_100007E8C(&qword_1011CA9A8);
  __chkstk_darwin(v168);
  v177 = (char *)&v150 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v175 = sub_100007E8C(&qword_1011CA9B0);
  __chkstk_darwin(v175);
  v178 = (uint64_t)&v150 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v180 = sub_100007E8C(&qword_1011CA9B8);
  __chkstk_darwin(v180);
  v181 = (uint64_t)&v150 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011CA9C0);
  v183 = *(_QWORD *)(v12 - 8);
  v184 = v12;
  __chkstk_darwin(v12);
  v189 = (char *)&v150 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v179 = (char *)&v150 - v15;
  __chkstk_darwin(v16);
  v182 = (char *)&v150 - v17;
  v188 = type metadata accessor for DynamicTypeSize(0);
  v164 = *(_QWORD *)(v188 - 8);
  __chkstk_darwin(v188);
  v176 = (char *)&v150 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v166 = (uint64_t)&v150 - v20;
  __chkstk_darwin(v21);
  v165 = (uint64_t)&v150 - v22;
  __chkstk_darwin(v23);
  v185 = (char *)&v150 - v24;
  __chkstk_darwin(v25);
  v174 = (uint64_t)&v150 - v26;
  __chkstk_darwin(v27);
  v163 = (char *)&v150 - v28;
  v160 = type metadata accessor for PreviewOverlay.ArtworkVariant(0);
  __chkstk_darwin(v160);
  v30 = (char *)&v150 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v157 = sub_100007E8C(&qword_1011A4CB0);
  v156 = *(_QWORD *)(v157 - 8);
  __chkstk_darwin(v157);
  v32 = (char *)&v150 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v155 = sub_100007E8C(&qword_1011CA9C8);
  __chkstk_darwin(v155);
  v158 = (char *)&v150 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v161 = sub_100007E8C(&qword_1011CA9D0);
  __chkstk_darwin(v161);
  v162 = (char *)&v150 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v187 = sub_100007E8C(&qword_1011CA9D8);
  v192 = *(_QWORD *)(v187 - 8);
  __chkstk_darwin(v187);
  v186 = (char *)&v150 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  v159 = (char *)&v150 - v37;
  __chkstk_darwin(v38);
  v191 = (char *)&v150 - v39;
  v40 = sub_100007E8C((uint64_t *)&unk_10119E648);
  __chkstk_darwin(v40);
  v42 = (uint64_t *)((char *)&v150 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v43);
  v45 = (uint64_t *)((char *)&v150 - v44);
  v46 = type metadata accessor for PreviewPlaybackController.Context(0);
  v47 = *(_QWORD *)(v46 - 8);
  __chkstk_darwin(v46);
  v190 = (double *)((char *)&v150 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((sub_1007FF018() & 1) == 0)
    goto LABEL_5;
  v49 = a1[1];
  if (!v49)
    goto LABEL_5;
  v152 = v6;
  v154 = a2;
  v151 = *a1;
  v153 = a1;
  KeyPath = swift_getKeyPath(&unk_100ED1718);
  v51 = swift_getKeyPath(&unk_100ED1740);
  swift_retain();
  static Published.subscript.getter(v45, v52, KeyPath, v51);
  swift_release();
  swift_release();
  v53 = swift_release();
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v47 + 48))(v45, 1, v46, v53) == 1)
  {
    sub_10004FF60((uint64_t)v45, (uint64_t *)&unk_10119E648);
    a2 = v154;
LABEL_5:
    v54 = sub_100007E8C(&qword_1011CA9E0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(a2, 1, 1, v54);
  }
  sub_1008014F4((uint64_t)v45, (uint64_t)v190);
  if (qword_10119C858 != -1)
    swift_once(&qword_10119C858, sub_1008001A4);
  *(_QWORD *)&v193 = qword_1011CA7F8;
  v56 = sub_10056D388();
  swift_retain();
  v150 = Color.init<A>(_:)(&v193, &type metadata for Color, v56, &protocol witness table for Color);
  v57 = *((unsigned __int8 *)v153 + 16);
  sub_10005B704((uint64_t)v153, (uint64_t)v30, type metadata accessor for PreviewOverlay.ArtworkVariant);
  if (v57 == 2)
    v58 = Player.NowPlayingObserver.isSharedListeningSession.getter();
  else
    v58 = v57 & 1;
  sub_10005B748((uint64_t)v30, type metadata accessor for PreviewOverlay.ArtworkVariant);
  if (qword_10119B878 != -1)
    swift_once(&qword_10119B878, sub_10006585C);
  sub_100065908(v151, v49);
  v60 = 0x69662E6573756170;
  if ((v58 & 1) != 0)
    v60 = 0x6C69662E706F7473;
  if (v59 == 1)
    v61 = 0x6C69662E79616C70;
  else
    v61 = v60;
  if ((v59 == 1) | v58 & 1)
    v62 = 0xE90000000000006CLL;
  else
    v62 = 0xEA00000000006C6CLL;
  v63 = Image.init(systemName:)(v61, v62);
  v64 = static Color.white.getter(v63);
  v65 = swift_getKeyPath(&unk_100ED17A8);
  if (qword_10119C888 != -1)
    swift_once(&qword_10119C888, sub_1008014AC);
  v66 = qword_10124DA10;
  v67 = swift_getKeyPath(&unk_100ED17D8);
  *(_QWORD *)&v193 = v63;
  *((_QWORD *)&v193 + 1) = v65;
  *(_QWORD *)&v194 = v64;
  *((_QWORD *)&v194 + 1) = v67;
  *(_QWORD *)&v195 = v66;
  v68 = qword_10119C890;
  swift_retain();
  if (v68 != -1)
    swift_once(&qword_10119C890, sub_1008014C8);
  v69 = qword_10124DA18;
  v70 = sub_100007E8C(&qword_1011A4CB8);
  v71 = sub_1001C3E78();
  View.fontWeight(_:)(v69, 0, v70, v71);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (qword_10119C860 != -1)
    swift_once(&qword_10119C860, sub_1008001C0);
  v72 = qword_1011CA800;
  v73 = v156;
  v74 = (uint64_t)v158;
  v75 = v157;
  (*(void (**)(char *, char *, uint64_t))(v156 + 16))(v158, v32, v157);
  *(_QWORD *)(v74 + *(int *)(v155 + 36)) = v72;
  v76 = *(uint64_t (**)(char *, uint64_t, __n128))(v73 + 8);
  v77 = swift_retain();
  v78 = v76(v32, v75, v77);
  v79 = static Animation.easeIn.getter(v78);
  v80 = (uint64_t)v153;
  v81 = swift_getKeyPath(&unk_100ED1718);
  v82 = swift_getKeyPath(&unk_100ED1740);
  swift_retain();
  static Published.subscript.getter(v42, v83, v81, v82);
  swift_release();
  swift_release();
  swift_release();
  v84 = v161;
  v85 = (uint64_t)v162;
  v86 = (uint64_t *)&v162[*(int *)(v161 + 36)];
  v87 = sub_100007E8C(&qword_1011CA990);
  sub_10004A160((uint64_t)v42, (uint64_t)v86 + *(int *)(v87 + 36), (uint64_t *)&unk_10119E648);
  *v86 = v79;
  sub_10004A160(v74, v85, &qword_1011CA9C8);
  sub_10004FF60((uint64_t)v42, (uint64_t *)&unk_10119E648);
  sub_10004FF60(v74, &qword_1011CA9C8);
  v88 = v80 + *(int *)(v160 + 36);
  v89 = v174;
  v157 = v88;
  sub_1008237B8(v174);
  v90 = enum case for DynamicTypeSize.accessibility3(_:);
  v91 = v164;
  v92 = *(void (**)(char *, uint64_t, uint64_t))(v164 + 104);
  v93 = v185;
  v94 = v188;
  v92(v185, enum case for DynamicTypeSize.accessibility3(_:), v188);
  LOBYTE(v88) = static DynamicTypeSize.< infix(_:_:)(v89, v93);
  v95 = v93;
  v96 = *(void (**)(char *, uint64_t))(v91 + 8);
  v96(v95, v94);
  v96((char *)v89, v94);
  LODWORD(v158) = v90;
  LODWORD(v164) = enum case for DynamicTypeSize.large(_:);
  if ((v88 & 1) != 0)
    v97 = enum case for DynamicTypeSize.large(_:);
  else
    v97 = v90;
  v98 = v163;
  v160 = (uint64_t)v92;
  v92(v163, v97, v94);
  v99 = sub_100801548();
  v100 = v159;
  View.dynamicTypeSize(_:)(v98, v84, v99);
  v96(v98, v94);
  sub_10004FF60(v85, &qword_1011CA9D0);
  (*(void (**)(char *, char *, uint64_t))(v192 + 32))(v191, v100, v187);
  *(float *)&v101 = 1.0 - v190[1] / *v190;
  v102 = v101;
  if (qword_10119C850 != -1)
    swift_once(&qword_10119C850, sub_100800158);
  v103 = qword_1011CA7F0;
  v104 = v170;
  (*(void (**)(char *, _QWORD, uint64_t))(v167 + 104))(v170, enum case for CircularProgressView.LineStyle.round(_:), v169);
  swift_retain();
  LOBYTE(v193) = 0;
  v105 = v171;
  v106 = CircularProgressView.init(value:trackColor:lineWidth:lineStyle:)(v102, v103, v104, 2.5);
  v107 = static Color.white.getter(v106);
  v108 = v172;
  v109 = (uint64_t)v177;
  v110 = v173;
  (*(void (**)(char *, char *, uint64_t))(v172 + 16))(v177, v105, v173);
  *(_QWORD *)(v109 + *(int *)(v168 + 36)) = v107;
  (*(void (**)(char *, uint64_t))(v108 + 8))(v105, v110);
  v111 = v165;
  sub_1008237B8(v165);
  v112 = v158;
  v113 = v188;
  v114 = (void (*)(uint64_t, uint64_t, uint64_t))v160;
  ((void (*)(uint64_t, _QWORD, uint64_t))v160)(v89, v158, v188);
  LODWORD(v173) = static DynamicTypeSize.< infix(_:_:)(v111, v89);
  v96((char *)v89, v113);
  v96((char *)v111, v113);
  v115 = v166;
  sub_1008237B8(v166);
  v114(v89, v112, v113);
  v116 = static DynamicTypeSize.< infix(_:_:)(v115, v89);
  v96((char *)v89, v113);
  v117 = v89;
  if ((v173 & 1) != 0)
    v118 = 0x403A000000000000;
  else
    v118 = 0x4049000000000000;
  v119 = ((uint64_t (*)(uint64_t, uint64_t))v96)(v115, v113);
  if ((v116 & 1) != 0)
    v120 = 0x403A000000000000;
  else
    v120 = 0x4049000000000000;
  v121 = static Alignment.center.getter(v119);
  _FrameLayout.init(width:height:alignment:)(&v193, v118, 0, v120, 0, v121, v122);
  v123 = v178;
  sub_10004A160(v109, v178, &qword_1011CA9A8);
  v124 = (_OWORD *)(v123 + *(int *)(v175 + 36));
  v125 = v194;
  *v124 = v193;
  v124[1] = v125;
  v124[2] = v195;
  sub_10004FF60(v109, &qword_1011CA9A8);
  v126 = qword_1011CA800;
  v127 = v181;
  sub_10004A160(v123, v181, &qword_1011CA9B0);
  v128 = v180;
  *(_QWORD *)(v127 + *(int *)(v180 + 36)) = v126;
  swift_retain();
  sub_10004FF60(v123, &qword_1011CA9B0);
  sub_1008237B8(v117);
  v129 = v185;
  v130 = v158;
  v131 = (void (*)(char *, uint64_t, uint64_t))v160;
  ((void (*)(char *, _QWORD, uint64_t))v160)(v185, v158, v113);
  LOBYTE(v126) = static DynamicTypeSize.< infix(_:_:)(v117, v129);
  v96(v129, v113);
  v96((char *)v117, v113);
  if ((v126 & 1) != 0)
    v132 = v164;
  else
    v132 = v130;
  v133 = v176;
  v131(v176, v132, v113);
  v134 = sub_100801678();
  v135 = v179;
  View.dynamicTypeSize(_:)(v133, v128, v134);
  v96(v133, v113);
  sub_10004FF60(v127, &qword_1011CA9B8);
  v137 = v182;
  v136 = v183;
  v138 = v184;
  (*(void (**)(char *, char *, uint64_t))(v183 + 32))(v182, v135, v184);
  v139 = *(void (**)(char *, char *, uint64_t))(v192 + 16);
  v140 = v186;
  v141 = v187;
  v139(v186, v191, v187);
  v142 = *(void (**)(char *, char *, uint64_t))(v136 + 16);
  v142(v189, v137, v138);
  v143 = (uint64_t)v152;
  v144 = v150;
  *v152 = v150;
  v145 = sub_100007E8C(&qword_1011CAA20);
  v139((char *)(v143 + *(int *)(v145 + 48)), v140, v141);
  v146 = v189;
  v142((char *)(v143 + *(int *)(v145 + 64)), v189, v138);
  v147 = *(void (**)(char *, uint64_t))(v136 + 8);
  swift_retain_n(v144, 2);
  v147(v137, v138);
  v148 = *(void (**)(char *, uint64_t))(v192 + 8);
  v148(v191, v141);
  swift_release();
  sub_10005B748((uint64_t)v190, type metadata accessor for PreviewPlaybackController.Context);
  v147(v146, v138);
  v148(v186, v141);
  swift_release();
  v149 = sub_100007E8C(&qword_1011CA9E0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v149 - 8) + 56))(v143, 0, 1, v149);
  return sub_100065228(v143, v154, &qword_1011CA9A0);
}

void sub_100800138()
{
  qword_1011CA7E8 = Int.seconds.getter(5);
}

uint64_t sub_100800158()
{
  id v0;
  uint64_t result;

  sub_1005A17A0();
  v0 = UIColor.init(decimalRed:decimalGreen:decimalBlue:alpha:)(235, 235, 245, 0.6);
  result = Color.init(_:)(v0);
  qword_1011CA7F0 = result;
  return result;
}

uint64_t sub_1008001A4()
{
  uint64_t result;

  result = static Color.clear.getter();
  qword_1011CA7F8 = result;
  return result;
}

uint64_t sub_1008001C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v0 = static AnyTransition.opacity.getter();
  v1 = static Animation.easeIn.getter();
  v2 = AnyTransition.animation(_:)(v1, v0);
  swift_release(v0);
  result = swift_release(v1);
  qword_1011CA800 = v2;
  return result;
}

uint64_t sub_100800218@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  int v21;
  uint64_t KeyPath;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  double *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t *v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  double *v52;
  uint64_t v53;
  char *v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v56 = a1;
  v59 = a2;
  v60 = sub_100007E8C(&qword_1011CAA28);
  __chkstk_darwin(v60);
  v4 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_100007E8C(&qword_1011CAA30);
  __chkstk_darwin(v58);
  v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_100007E8C(&qword_1011CAA38);
  __chkstk_darwin(v49);
  v51 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_100007E8C(&qword_1011CAA40);
  __chkstk_darwin(v50);
  v53 = (uint64_t)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_100007E8C(&qword_1011CAA48);
  __chkstk_darwin(v57);
  v54 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C((uint64_t *)&unk_10119E648);
  __chkstk_darwin(v10);
  v12 = (uint64_t *)((char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = type metadata accessor for PreviewPlaybackController.Context(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v52 = (double *)((char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v55 = v2;
  v16 = v2[1];
  if (!v16
    || (v17 = *v55,
        swift_retain(),
        v48 = v17,
        v18 = sub_100065908(v17, v16),
        v20 = v19,
        v21 = ~v19,
        swift_release(),
        !v21)
    || v20 == 2 && !v18)
  {
LABEL_7:
    if (qword_10119C878 != -1)
      swift_once(&qword_10119C878, sub_1008013D4);
    v26 = qword_1011CA818;
    v27 = sub_100007E8C(&qword_1011CAA50);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v4, v56, v27);
    v28 = v60;
    *(_QWORD *)&v4[*(int *)(v60 + 36)] = v26;
    sub_10004A160((uint64_t)v4, (uint64_t)v6, &qword_1011CAA28);
    swift_storeEnumTagMultiPayload(v6, v58, 1);
    v29 = sub_1008017E0();
    v30 = sub_10080196C();
    swift_retain();
    _ConditionalContent<>.init(storage:)(v6, v57, v28, v29, v30);
    return sub_10004FF60((uint64_t)v4, &qword_1011CAA28);
  }
  KeyPath = swift_getKeyPath(&unk_100ED1718);
  v23 = swift_getKeyPath(&unk_100ED1740);
  swift_retain();
  static Published.subscript.getter(v12, v24, KeyPath, v23);
  swift_release();
  swift_release();
  v25 = swift_release();
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v14 + 48))(v12, 1, v13, v25) == 1)
  {
    sub_10004FF60((uint64_t)v12, (uint64_t *)&unk_10119E648);
    goto LABEL_7;
  }
  v32 = v52;
  sub_1008014F4((uint64_t)v12, (uint64_t)v52);
  v33 = sub_100007E8C(&qword_1011CAA50);
  v34 = (uint64_t)v51;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v51, v56, v33);
  *(_QWORD *)(v34 + *(int *)(v49 + 36)) = 0;
  if (qword_10119C878 != -1)
    swift_once(&qword_10119C878, sub_1008013D4);
  v35 = qword_1011CA818;
  v36 = v53;
  sub_10004A160(v34, v53, &qword_1011CAA38);
  *(_QWORD *)(v36 + *(int *)(v50 + 36)) = v35;
  swift_retain();
  v37 = sub_10004FF60(v34, &qword_1011CAA38);
  v38 = static Alignment.center.getter(v37);
  v40 = v39;
  v41 = v57;
  v42 = (uint64_t)v54;
  v43 = &v54[*(int *)(v57 + 36)];
  sub_100800724(v48, v16, (uint64_t)v55, v32, v43);
  v44 = (uint64_t *)&v43[*(int *)(sub_100007E8C(&qword_1011CAA80) + 36)];
  *v44 = v38;
  v44[1] = v40;
  sub_100065228(v36, v42, &qword_1011CAA40);
  sub_10004A160(v42, (uint64_t)v6, &qword_1011CAA48);
  swift_storeEnumTagMultiPayload(v6, v58, 0);
  v45 = sub_1008017E0();
  v46 = sub_10080196C();
  _ConditionalContent<>.init(storage:)(v6, v41, v60, v45, v46);
  sub_10004FF60(v42, &qword_1011CAA48);
  return sub_10005B748((uint64_t)v32, type metadata accessor for PreviewPlaybackController.Context);
}

uint64_t sub_100800724@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, double *a4@<X3>, char *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  int v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t KeyPath;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t);
  uint64_t v78;
  uint64_t v79;
  char *v80;
  unint64_t v81;
  char *v82;
  double v83;
  double v84;
  unsigned int v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _OWORD *v104;
  __int128 v105;
  char *v106;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  void (*v116)(char *, char *, uint64_t);
  char *v117;
  char *v118;
  void (*v119)(char *, char *, uint64_t);
  char *v120;
  char *v121;
  uint64_t v122;
  void (*v123)(char *, uint64_t);
  void (*v124)(char *, uint64_t);
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  char *v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  double *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  char *v146;
  char *v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;

  v141 = a4;
  v129 = a2;
  v127 = a1;
  v158 = a5;
  v143 = type metadata accessor for CircularProgressView.LineStyle(0);
  v142 = *(_QWORD *)(v143 - 8);
  __chkstk_darwin(v143);
  v144 = (char *)&v126 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v150 = type metadata accessor for CircularProgressView(0);
  v149 = *(_QWORD *)(v150 - 8);
  __chkstk_darwin(v150);
  v148 = (char *)&v126 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v152 = sub_100007E8C(&qword_1011CAA90);
  __chkstk_darwin(v152);
  v153 = (char *)&v126 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v157 = sub_100007E8C(&qword_1011CAA98);
  v155 = *(_QWORD *)(v157 - 8);
  __chkstk_darwin(v157);
  v156 = (char *)&v126 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v151 = (char *)&v126 - v11;
  __chkstk_darwin(v12);
  v154 = (char *)&v126 - v13;
  v14 = type metadata accessor for DynamicTypeSize(0);
  v138 = *(char **)(v14 - 8);
  __chkstk_darwin(v14);
  v147 = (char *)&v126 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v140 = (uint64_t)&v126 - v17;
  __chkstk_darwin(v18);
  v139 = (uint64_t)&v126 - v19;
  __chkstk_darwin(v20);
  v22 = (char *)&v126 - v21;
  __chkstk_darwin(v23);
  v25 = (char *)&v126 - v24;
  __chkstk_darwin(v26);
  v137 = (char *)&v126 - v27;
  v28 = sub_100007E8C((uint64_t *)&unk_10119E648);
  __chkstk_darwin(v28);
  v132 = (uint64_t *)((char *)&v126 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  v133 = type metadata accessor for PreviewOverlay.TrackNumberVariant(0);
  __chkstk_darwin(v133);
  v31 = (char *)&v126 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = sub_100007E8C(&qword_1011A4CB0);
  v130 = *(_QWORD *)(v131 - 8);
  __chkstk_darwin(v131);
  v128 = (char *)&v126 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = sub_100007E8C(&qword_1011CAAA0);
  __chkstk_darwin(v135);
  v136 = (char *)&v126 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_100007E8C(&qword_1011CAAA8);
  v35 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v146 = (char *)&v126 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  v134 = (char *)&v126 - v38;
  __chkstk_darwin(v39);
  v41 = (char *)&v126 - v40;
  v42 = *(unsigned __int8 *)(a3 + 16);
  v159 = a3;
  sub_10005B704(a3, (uint64_t)v31, type metadata accessor for PreviewOverlay.TrackNumberVariant);
  if (v42 == 2)
    v43 = Player.NowPlayingObserver.isSharedListeningSession.getter();
  else
    v43 = v42 & 1;
  v160 = v41;
  v145 = v25;
  v162 = v35;
  sub_10005B748((uint64_t)v31, type metadata accessor for PreviewOverlay.TrackNumberVariant);
  if (qword_10119B878 != -1)
    swift_once(&qword_10119B878, sub_10006585C);
  v161 = v34;
  sub_100065908(v127, v129);
  v45 = 0x69662E6573756170;
  if ((v43 & 1) != 0)
    v45 = 0x6C69662E706F7473;
  if (v44 == 1)
    v46 = 0x6C69662E79616C70;
  else
    v46 = v45;
  if ((v44 == 1) | v43 & 1)
    v47 = 0xE90000000000006CLL;
  else
    v47 = 0xEA00000000006C6CLL;
  v48 = Image.init(systemName:)(v46, v47);
  v50 = static Color.accentColor.getter(v48, v49);
  KeyPath = swift_getKeyPath(&unk_100ED17A8);
  if (qword_10119C888 != -1)
    swift_once(&qword_10119C888, sub_1008014AC);
  v129 = v14;
  v52 = qword_10124DA10;
  v53 = swift_getKeyPath(&unk_100ED17D8);
  *(_QWORD *)&v163 = v48;
  *((_QWORD *)&v163 + 1) = KeyPath;
  *(_QWORD *)&v164 = v50;
  *((_QWORD *)&v164 + 1) = v53;
  *(_QWORD *)&v165 = v52;
  v54 = qword_10119C890;
  swift_retain();
  if (v54 != -1)
    swift_once(&qword_10119C890, sub_1008014C8);
  v55 = qword_10124DA18;
  v56 = sub_100007E8C(&qword_1011A4CB8);
  v57 = sub_1001C3E78();
  v58 = v128;
  View.fontWeight(_:)(v55, 0, v56, v57);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v60 = static Animation.easeIn.getter(v59);
  v61 = v159;
  v62 = *(_QWORD *)(v159 + 40);
  v63 = swift_getKeyPath(&unk_100ED1718);
  v64 = swift_getKeyPath(&unk_100ED1740);
  swift_retain();
  v65 = v132;
  static Published.subscript.getter(v132, v62, v63, v64);
  swift_release();
  swift_release();
  swift_release();
  v66 = v135;
  v67 = (uint64_t)v136;
  v68 = (uint64_t *)&v136[*(int *)(v135 + 36)];
  v69 = sub_100007E8C(&qword_1011CA990);
  sub_10004A160((uint64_t)v65, (uint64_t)v68 + *(int *)(v69 + 36), (uint64_t *)&unk_10119E648);
  *v68 = v60;
  v70 = v130;
  v71 = v131;
  (*(void (**)(uint64_t, char *, uint64_t))(v130 + 16))(v67, v58, v131);
  sub_10004FF60((uint64_t)v65, (uint64_t *)&unk_10119E648);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v58, v71);
  v72 = (uint64_t)v145;
  v159 = v61 + *(int *)(v133 + 32);
  sub_1008237B8((uint64_t)v145);
  v73 = enum case for DynamicTypeSize.accessibility3(_:);
  v74 = v138;
  v75 = (char *)*((_QWORD *)v138 + 13);
  v76 = v129;
  ((void (*)(char *, _QWORD, uint64_t))v75)(v22, enum case for DynamicTypeSize.accessibility3(_:), v129);
  LOBYTE(v62) = static DynamicTypeSize.< infix(_:_:)(v72, v22);
  v77 = (void (*)(char *, uint64_t))*((_QWORD *)v74 + 1);
  v138 = v22;
  v77(v22, v76);
  v77((char *)v72, v76);
  v78 = v73;
  LODWORD(v133) = enum case for DynamicTypeSize.large(_:);
  if ((v62 & 1) != 0)
    v79 = enum case for DynamicTypeSize.large(_:);
  else
    v79 = v73;
  v80 = v137;
  ((void (*)(char *, uint64_t, uint64_t))v75)(v137, v79, v76);
  v81 = sub_100801A08();
  v82 = v134;
  View.dynamicTypeSize(_:)(v80, v66, v81);
  v77(v80, v76);
  sub_10004FF60(v67, &qword_1011CAAA0);
  (*(void (**)(char *, char *, uint64_t))(v162 + 32))(v160, v82, v161);
  v84 = *v141;
  v83 = v141[1];
  if (qword_10119C880 != -1)
    swift_once(&qword_10119C880, sub_10080145C);
  *(float *)&v85 = 1.0 - v83 / v84;
  v86 = v85;
  v87 = qword_1011CA820;
  v88 = v144;
  (*(void (**)(char *, _QWORD, uint64_t))(v142 + 104))(v144, enum case for CircularProgressView.LineStyle.round(_:), v143);
  swift_retain();
  LOBYTE(v163) = 0;
  v89 = v148;
  CircularProgressView.init(value:trackColor:lineWidth:lineStyle:)(v86, v87, v88, 2.5);
  v90 = v139;
  sub_1008237B8(v139);
  ((void (*)(uint64_t, uint64_t, uint64_t))v75)(v72, v78, v76);
  LOBYTE(v86) = static DynamicTypeSize.< infix(_:_:)(v90, v72);
  v77((char *)v72, v76);
  v77((char *)v90, v76);
  v91 = v140;
  sub_1008237B8(v140);
  ((void (*)(uint64_t, uint64_t, uint64_t))v75)(v72, v78, v76);
  v92 = static DynamicTypeSize.< infix(_:_:)(v91, v72);
  v77((char *)v72, v76);
  v93 = v76;
  v144 = v75;
  v94 = v72;
  if ((v86 & 1) != 0)
    v95 = 0x403A000000000000;
  else
    v95 = 0x4049000000000000;
  v96 = ((uint64_t (*)(uint64_t, uint64_t))v77)(v91, v76);
  if ((v92 & 1) != 0)
    v97 = 0x403A000000000000;
  else
    v97 = 0x4049000000000000;
  v98 = static Alignment.center.getter(v96);
  _FrameLayout.init(width:height:alignment:)(&v163, v95, 0, v97, 0, v98, v99);
  v100 = v149;
  v101 = (uint64_t)v153;
  v102 = v150;
  (*(void (**)(char *, char *, uint64_t))(v149 + 16))(v153, v89, v150);
  v103 = v152;
  v104 = (_OWORD *)(v101 + *(int *)(v152 + 36));
  v105 = v164;
  *v104 = v163;
  v104[1] = v105;
  v104[2] = v165;
  (*(void (**)(char *, uint64_t))(v100 + 8))(v89, v102);
  sub_1008237B8(v94);
  v106 = v138;
  v107 = v144;
  ((void (*)(char *, uint64_t, uint64_t))v144)(v138, v78, v93);
  LOBYTE(v102) = static DynamicTypeSize.< infix(_:_:)(v94, v106);
  v77(v106, v93);
  v77((char *)v94, v93);
  if ((v102 & 1) != 0)
    v108 = v133;
  else
    v108 = v78;
  v109 = v147;
  ((void (*)(char *, uint64_t, uint64_t))v107)(v147, v108, v93);
  v110 = sub_100801AB4(&qword_1011CAAB8, &qword_1011CAA90, (void (*)(void))sub_100801798);
  v111 = v151;
  View.dynamicTypeSize(_:)(v109, v103, v110);
  v77(v109, v93);
  sub_10004FF60(v101, &qword_1011CAA90);
  v113 = v154;
  v112 = v155;
  v114 = v157;
  (*(void (**)(char *, char *, uint64_t))(v155 + 32))(v154, v111, v157);
  v115 = v161;
  v116 = *(void (**)(char *, char *, uint64_t))(v162 + 16);
  v117 = v146;
  v118 = v160;
  v116(v146, v160, v161);
  v119 = *(void (**)(char *, char *, uint64_t))(v112 + 16);
  v120 = v156;
  v119(v156, v113, v114);
  v121 = v158;
  v116(v158, v117, v115);
  v122 = sub_100007E8C(&qword_1011CAAC0);
  v119(&v121[*(int *)(v122 + 48)], v120, v114);
  v123 = *(void (**)(char *, uint64_t))(v112 + 8);
  v123(v113, v114);
  v124 = *(void (**)(char *, uint64_t))(v162 + 8);
  v124(v118, v115);
  v123(v120, v114);
  return ((uint64_t (*)(char *, uint64_t))v124)(v117, v115);
}

uint64_t sub_1008012F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v0 = static AnyTransition.opacity.getter();
  v1 = static Animation.easeIn(duration:)(0.3);
  v2 = Animation.delay(_:)(0.2);
  swift_release(v1);
  v3 = AnyTransition.animation(_:)(v2, v0);
  swift_release(v0);
  result = swift_release(v2);
  qword_1011CA808 = v3;
  return result;
}

uint64_t sub_100801374()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v0 = static AnyTransition.opacity.getter();
  v1 = static Animation.easeIn(duration:)(0.3);
  v2 = AnyTransition.animation(_:)(v1, v0);
  swift_release(v0);
  result = swift_release(v1);
  qword_1011CA810 = v2;
  return result;
}

uint64_t sub_1008013D4()
{
  uint64_t v0;
  uint64_t result;

  if (qword_10119C868 != -1)
    swift_once(&qword_10119C868, sub_1008012F8);
  v0 = qword_1011CA808;
  if (qword_10119C870 != -1)
    swift_once(&qword_10119C870, sub_100801374);
  result = static AnyTransition.asymmetric(insertion:removal:)(v0, qword_1011CA810);
  qword_1011CA818 = result;
  return result;
}

uint64_t sub_10080145C()
{
  id v0;
  uint64_t result;

  v0 = objc_msgSend((id)objc_opt_self(UIColor), "quaternaryLabelColor");
  result = Color.init(_:)(v0);
  qword_1011CA820 = result;
  return result;
}

uint64_t sub_10080149C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FADD80, 1);
}

uint64_t sub_1008014AC()
{
  uint64_t result;

  result = static Font.caption.getter();
  qword_10124DA10 = result;
  return result;
}

void sub_1008014C8(uint64_t a1)
{
  qword_10124DA18 = static Font.Weight.bold.getter(a1);
}

uint64_t sub_1008014F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PreviewPlaybackController.Context(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100801548()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CA9E8;
  if (!qword_1011CA9E8)
  {
    v1 = sub_100044B54(&qword_1011CA9D0);
    sub_1008015CC();
    sub_100049F28(&qword_1011CA9F8, &qword_1011CA990, (uint64_t)&protocol conformance descriptor for _AnimationModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CA9E8);
  }
  return result;
}

unint64_t sub_1008015CC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011CA9F0;
  if (!qword_1011CA9F0)
  {
    v1 = sub_100044B54(&qword_1011CA9C8);
    v2[0] = sub_100044B54(&qword_1011A4CB8);
    v2[1] = sub_1001C3E78();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
    sub_100049F28((unint64_t *)&unk_1011BF6F0, &qword_1011A4C90, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CA9F0);
  }
  return result;
}

unint64_t sub_100801678()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CAA00;
  if (!qword_1011CAA00)
  {
    v1 = sub_100044B54(&qword_1011CA9B8);
    sub_100801AB4(&qword_1011CAA08, &qword_1011CA9B0, (void (*)(void))sub_100801714);
    sub_100049F28((unint64_t *)&unk_1011BF6F0, &qword_1011A4C90, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CAA00);
  }
  return result;
}

unint64_t sub_100801714()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CAA10;
  if (!qword_1011CAA10)
  {
    v1 = sub_100044B54(&qword_1011CA9A8);
    sub_100801798();
    sub_100049F28(&qword_1011BE338, &qword_1011BE340, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CAA10);
  }
  return result;
}

unint64_t sub_100801798()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CAA18;
  if (!qword_1011CAA18)
  {
    v1 = type metadata accessor for CircularProgressView(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for CircularProgressView, v1);
    atomic_store(result, (unint64_t *)&qword_1011CAA18);
  }
  return result;
}

unint64_t sub_1008017E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CAA58;
  if (!qword_1011CAA58)
  {
    v1 = sub_100044B54(&qword_1011CAA48);
    sub_100801864();
    sub_100049F28(&qword_1011CAA78, &qword_1011CAA80, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CAA58);
  }
  return result;
}

unint64_t sub_100801864()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CAA60;
  if (!qword_1011CAA60)
  {
    v1 = sub_100044B54(&qword_1011CAA40);
    sub_1008018E8();
    sub_100049F28((unint64_t *)&unk_1011BF6F0, &qword_1011A4C90, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CAA60);
  }
  return result;
}

unint64_t sub_1008018E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CAA68;
  if (!qword_1011CAA68)
  {
    v1 = sub_100044B54(&qword_1011CAA38);
    sub_100049F28(&qword_1011CAA70, &qword_1011CAA50, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CAA68);
  }
  return result;
}

unint64_t sub_10080196C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CAA88;
  if (!qword_1011CAA88)
  {
    v1 = sub_100044B54(&qword_1011CAA28);
    sub_100049F28(&qword_1011CAA70, &qword_1011CAA50, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    sub_100049F28((unint64_t *)&unk_1011BF6F0, &qword_1011A4C90, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CAA88);
  }
  return result;
}

unint64_t sub_100801A08()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011CAAB0;
  if (!qword_1011CAAB0)
  {
    v1 = sub_100044B54(&qword_1011CAAA0);
    v2[0] = sub_100044B54(&qword_1011A4CB8);
    v2[1] = sub_1001C3E78();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
    sub_100049F28(&qword_1011CA9F8, &qword_1011CA990, (uint64_t)&protocol conformance descriptor for _AnimationModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CAAB0);
  }
  return result;
}

uint64_t sub_100801AB4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_100044B54(a2);
    a3();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PreviewOverlay.StopMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100801B6C + 4 * byte_100ED15C5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100801BA0 + 4 * byte_100ED15C0[v4]))();
}

uint64_t sub_100801BA0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100801BA8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100801BB0);
  return result;
}

uint64_t sub_100801BBC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100801BC4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100801BC8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100801BD0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PreviewOverlay.StopMode()
{
  return &type metadata for PreviewOverlay.StopMode;
}

unint64_t sub_100801BF0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CAAC8;
  if (!qword_1011CAAC8)
  {
    v1 = sub_100044B54(&qword_1011CA980);
    sub_100801C74();
    sub_100049F28(&qword_1011CAAF0, &qword_1011CA998, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CAAC8);
  }
  return result;
}

unint64_t sub_100801C74()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CAAD0;
  if (!qword_1011CAAD0)
  {
    v1 = sub_100044B54(&qword_1011CA978);
    sub_100801CF8();
    sub_100049F28((unint64_t *)&qword_1011AFA88, &qword_1011AFA90, (uint64_t)&protocol conformance descriptor for _AnimationModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CAAD0);
  }
  return result;
}

unint64_t sub_100801CF8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CAAD8;
  if (!qword_1011CAAD8)
  {
    v1 = sub_100044B54(&qword_1011CA970);
    sub_100801D7C();
    sub_100049F28(&qword_1011CA9F8, &qword_1011CA990, (uint64_t)&protocol conformance descriptor for _AnimationModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CAAD8);
  }
  return result;
}

unint64_t sub_100801D7C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CAAE0;
  if (!qword_1011CAAE0)
  {
    v1 = sub_100044B54(&qword_1011CA968);
    sub_100049F28(&qword_1011CAAE8, &qword_1011CA988, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CAAE0);
  }
  return result;
}

unint64_t sub_100801E04()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CAAF8;
  if (!qword_1011CAAF8)
  {
    v1 = sub_100044B54(&qword_1011CAB00);
    sub_1008017E0();
    sub_10080196C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CAAF8);
  }
  return result;
}

unint64_t sub_100801E74()
{
  unint64_t result;

  result = qword_1011CAB08;
  if (!qword_1011CAB08)
  {
    result = swift_getWitnessTable(&unk_100ED1854, &type metadata for PreviewOverlay.StopMode);
    atomic_store(result, (unint64_t *)&qword_1011CAB08);
  }
  return result;
}

void sub_100801EB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  void *v23;
  void *v24;
  NSString v25;
  unsigned int v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t KeyPath;
  char *v30;
  uint64_t v31;
  void *v32;
  unint64_t v33;
  id v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  id v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  unint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  id v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  void *v56;
  id v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  _QWORD v68[4];

  v1 = type metadata accessor for AttributedString.AttributeMergePolicy(0);
  v66 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v3 = (char *)&v58 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for AttributedString(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v58 - v9;
  v11 = type metadata accessor for AttributeContainer(0);
  __chkstk_darwin(v11);
  v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Music33StaticLyricsContentViewController_lyricsText + 8);
  if (v16)
  {
    v59 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Music33StaticLyricsContentViewController_lyricsText);
    v64 = v13;
    v65 = v12;
    v17 = objc_opt_self(NSParagraphStyle);
    v63 = v4;
    v18 = (void *)v17;
    swift_bridgeObjectRetain();
    v19 = objc_msgSend(v18, "defaultParagraphStyle");
    v20 = objc_msgSend(v19, "mutableCopy");
    v62 = v5;
    v21 = v20;

    _bridgeAnyObjectToAny(_:)(v68, v21);
    swift_unknownObjectRelease(v21);
    v22 = sub_10004A07C(0, &qword_1011BA1D0, NSMutableParagraphStyle_ptr);
    swift_dynamicCast(&v67, v68, (char *)&type metadata for Any + 8, v22, 7);
    v23 = v67;
    v61 = v7;
    v24 = *(void **)(v0 + OBJC_IVAR____TtC5Music33StaticLyricsContentViewController_lyricsFont);
    objc_msgSend(v24, "_scaledValueForValue:", 6.0);
    objc_msgSend(v23, "setParagraphSpacing:");
    v25 = String._bridgeToObjectiveC()();
    v26 = objc_msgSend(v25, "_isNaturallyRTL");
    v60 = v1;
    v27 = v26;

    if (v27)
      v28 = 2;
    else
      v28 = 0;
    AttributeContainer.init()(objc_msgSend(v23, "setAlignment:", v28));
    KeyPath = swift_getKeyPath(&unk_100ED18A8);
    __chkstk_darwin(KeyPath);
    *(&v58 - 2) = v30;
    v31 = swift_getKeyPath(&unk_100ED18D8);
    v58 = v10;
    v68[0] = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Music33StaticLyricsContentViewController_textColor);
    v32 = (void *)v68[0];
    v33 = sub_10013BB48();
    v34 = v32;
    AttributeContainer.subscript.setter(v68, v31, v33);
    v35 = swift_getKeyPath(&unk_100ED1918);
    __chkstk_darwin(v35);
    *(&v58 - 2) = v36;
    v37 = swift_getKeyPath(&unk_100ED1948);
    v68[0] = v24;
    v38 = sub_10013BAC4();
    v39 = v24;
    AttributeContainer.subscript.setter(v68, v37, v38);
    v40 = swift_getKeyPath(&unk_100ED1988);
    __chkstk_darwin(v40);
    *(&v58 - 2) = v41;
    v42 = swift_getKeyPath(&unk_100ED19B8);
    v68[0] = v23;
    v43 = sub_100803F98();
    v44 = v23;
    AttributeContainer.subscript.setter(v68, v42, v43);
    v68[0] = v59;
    v68[1] = v16;
    v45 = sub_100007E8C(&qword_1011C7580);
    swift_allocObject(v45, *(unsigned int *)(v45 + 48), *(unsigned __int16 *)(v45 + 52));
    v46 = MarkupRenderer.init(_:)(v68);
    v47 = v58;
    dispatch thunk of MarkupRenderer.attributedString.getter();
    v48 = swift_release(v46);
    v49 = v66;
    v50 = v60;
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v66 + 104))(v3, enum case for AttributedString.AttributeMergePolicy.keepNew(_:), v60, v48);
    AttributedString.mergeAttributes(_:mergePolicy:)(v15, v3);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v3, v50);
    v51 = sub_100802D24();
    objc_msgSend(v51, "setContentOffset:", 0.0, 0.0);

    v52 = sub_100802DF8();
    sub_10004A07C(0, &qword_1011A9AA0, NSAttributedString_ptr);
    v54 = v61;
    v53 = v62;
    v55 = v63;
    (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v61, v47, v63);
    v56 = (void *)NSAttributedString.init(_:)(v54);
    objc_msgSend(v52, "setAttributedText:", v56);

    v57 = sub_100802DF8();
    objc_msgSend(v57, "setHidden:", 0);

    (*(void (**)(char *, uint64_t))(v53 + 8))(v47, v55);
    (*(void (**)(char *, uint64_t))(v64 + 8))(v15, v65);
  }
}

uint64_t sub_1008023A8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v2 = *a2;
  v5 = *a1;
  v6 = v2;
  v3 = sub_100007E8C(&qword_1011CABB0);
  return dispatch thunk of static Equatable.== infix(_:_:)(&v6, &v5, v3, &protocol witness table for AnyKeyPath) & 1;
}

void sub_100802400()
{
  id v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Class isa;
  id v9;
  id v10;

  v0 = sub_100802DF8();
  v1 = objc_msgSend(v0, "attributedText");

  if (v1)
  {
    v10 = objc_msgSend(objc_allocWithZone((Class)NSMutableAttributedString), "initWithAttributedString:", v1);
    v2 = objc_msgSend(v1, "string");
    static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
    v4 = v3;

    v5 = sub_100803588();
    swift_bridgeObjectRelease(v4);
    sub_1003286E8(v5);
    v7 = v6;
    swift_bridgeObjectRelease(v5);
    type metadata accessor for Key(0);
    sub_100556620();
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v10, "setAttributes:range:", isa, 0, objc_msgSend(v1, "length", swift_bridgeObjectRelease(v7).n128_f64[0]));

    v9 = sub_100802DF8();
    objc_msgSend(v9, "setAttributedText:", v10);

    sub_1008032A0();
  }
}

id sub_100802578()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id result;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  uint64_t v65;
  objc_super v66;

  v1 = v0;
  v66.receiver = v0;
  v66.super_class = (Class)type metadata accessor for StaticLyricsContentViewController();
  objc_msgSendSuper2(&v66, "viewDidLoad");
  v2 = sub_100802D24();
  objc_msgSend(v2, "setClipsToBounds:", 1);

  v3 = sub_100802D24();
  objc_msgSend(v3, "setMultipleTouchEnabled:", 0);

  v4 = sub_100802D24();
  objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  result = objc_msgSend(v1, "view");
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  v6 = result;
  v7 = sub_100802D24();
  objc_msgSend(v6, "addSubview:", v7);

  v8 = sub_100802DF8();
  v9 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  objc_msgSend(v8, "setBackgroundColor:", v9);

  v10 = sub_100802DF8();
  objc_msgSend(v10, "setShowsHorizontalScrollIndicator:", 0);

  v11 = sub_100802DF8();
  objc_msgSend(v11, "setEditable:", 0);

  v12 = sub_100802DF8();
  objc_msgSend(v12, "setSelectable:", 0);

  v13 = sub_100802DF8();
  v14 = objc_msgSend(v13, "textContainer");

  objc_msgSend(v14, "setLineFragmentPadding:", 0.0);
  v15 = sub_100802DF8();
  objc_msgSend(v15, "setScrollEnabled:", 0);

  v16 = sub_100802D24();
  v17 = sub_100802E68();
  objc_msgSend(v16, "addSubview:", v17);

  v18 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  v19 = swift_allocObject(v18, 104, 7);
  *(_OWORD *)(v19 + 16) = xmmword_100EB0FB0;
  v20 = sub_100802D24();
  v21 = objc_msgSend(v20, "topAnchor");

  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v22 = result;
  v23 = objc_msgSend(result, "topAnchor");

  v24 = objc_msgSend(v21, "constraintEqualToAnchor:", v23);
  *(_QWORD *)(v19 + 32) = v24;
  v25 = sub_100802D24();
  v26 = objc_msgSend(v25, "bottomAnchor");

  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v27 = result;
  v28 = objc_msgSend(result, "bottomAnchor");

  v29 = objc_msgSend(v26, "constraintEqualToAnchor:", v28);
  *(_QWORD *)(v19 + 40) = v29;
  v30 = sub_100802D24();
  v31 = objc_msgSend(v30, "leadingAnchor");

  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v32 = result;
  v33 = objc_msgSend(result, "leadingAnchor");

  v34 = objc_msgSend(v31, "constraintEqualToAnchor:", v33);
  *(_QWORD *)(v19 + 48) = v34;
  v35 = sub_100802D24();
  v36 = objc_msgSend(v35, "trailingAnchor");

  result = objc_msgSend(v1, "view");
  if (result)
  {
    v37 = result;
    v38 = objc_msgSend(result, "trailingAnchor");

    v39 = objc_msgSend(v36, "constraintEqualToAnchor:", v38);
    *(_QWORD *)(v19 + 56) = v39;
    v40 = sub_100802E68();
    v41 = objc_msgSend(v40, "topAnchor");

    v42 = sub_100802D24();
    v43 = objc_msgSend(v42, "topAnchor");

    v44 = objc_msgSend(v41, "constraintEqualToAnchor:", v43);
    *(_QWORD *)(v19 + 64) = v44;
    v45 = sub_100802E68();
    v46 = objc_msgSend(v45, "bottomAnchor");

    v47 = sub_100802D24();
    v48 = objc_msgSend(v47, "bottomAnchor");

    v49 = objc_msgSend(v46, "constraintEqualToAnchor:", v48);
    *(_QWORD *)(v19 + 72) = v49;
    v50 = sub_100802E68();
    v51 = objc_msgSend(v50, "leadingAnchor");

    v52 = sub_100802D24();
    v53 = objc_msgSend(v52, "leadingAnchor");

    v54 = objc_msgSend(v51, "constraintEqualToAnchor:", v53);
    *(_QWORD *)(v19 + 80) = v54;
    v55 = sub_100802E68();
    v56 = objc_msgSend(v55, "trailingAnchor");

    v57 = sub_100802D24();
    v58 = objc_msgSend(v57, "trailingAnchor");

    v59 = objc_msgSend(v56, "constraintEqualToAnchor:", v58);
    *(_QWORD *)(v19 + 88) = v59;
    v60 = sub_100802E68();
    v61 = objc_msgSend(v60, "widthAnchor");

    v62 = sub_100802D24();
    v63 = objc_msgSend(v62, "widthAnchor");

    v64 = objc_msgSend(v61, "constraintEqualToAnchor:", v63);
    *(_QWORD *)(v19 + 96) = v64;
    specialized Array._endMutation()(v65);
    Array<A>.activate()(v19);
    swift_bridgeObjectRelease();
    return sub_1008032A0();
  }
LABEL_11:
  __break(1u);
  return result;
}

void sub_100802CB4(void *a1, uint64_t a2, const char **a3)
{
  const char *v4;
  id v5;
  objc_super v6;

  v6.receiver = a1;
  v6.super_class = (Class)type metadata accessor for StaticLyricsContentViewController();
  v4 = *a3;
  v5 = v6.receiver;
  objc_msgSendSuper2(&v6, v4);
  sub_1008032A0();

}

void sub_100802D04()
{
  qword_1011CAB10 = 0x4034000000000000;
}

void sub_100802D14()
{
  qword_1011CAB18 = 0x403E000000000000;
}

id sub_100802D24()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id result;
  void *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  id v14;
  void *v15;
  id v16;

  v1 = OBJC_IVAR____TtC5Music33StaticLyricsContentViewController____lazy_storage___scrollView;
  v2 = *(void **)&v0[OBJC_IVAR____TtC5Music33StaticLyricsContentViewController____lazy_storage___scrollView];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC5Music33StaticLyricsContentViewController____lazy_storage___scrollView];
LABEL_5:
    v16 = v2;
    return v3;
  }
  result = objc_msgSend(v0, "view");
  if (result)
  {
    v5 = result;
    objc_msgSend(result, "bounds");
    v7 = v6;
    v9 = v8;
    v11 = v10;
    v13 = v12;

    v14 = objc_msgSend(objc_allocWithZone((Class)UIScrollView), "initWithFrame:", v7, v9, v11, v13);
    v15 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v14;
    v3 = v14;

    v2 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

id sub_100802DF8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC5Music33StaticLyricsContentViewController____lazy_storage___textView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Music33StaticLyricsContentViewController____lazy_storage___textView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC5Music33StaticLyricsContentViewController____lazy_storage___textView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UITextView), "init");
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_100802E68()
{
  return sub_10012CF24(&OBJC_IVAR____TtC5Music33StaticLyricsContentViewController____lazy_storage___stackView, (uint64_t (*)(uint64_t))sub_100803DCC);
}

id sub_100802E7C()
{
  return sub_10012CF24(&OBJC_IVAR____TtC5Music33StaticLyricsContentViewController____lazy_storage___reportConcernButton, (uint64_t (*)(uint64_t))sub_100802E90);
}

id sub_100802E90(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  _BYTE v26[16];

  v2 = sub_100007E8C((uint64_t *)&unk_1011A2250);
  __chkstk_darwin(v2);
  v4 = &v26[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for Locale(0);
  __chkstk_darwin(v5);
  v7 = &v26[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v8);
  v10 = &v26[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for UIButton.Configuration(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = &v26[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 0);
  static UIButton.Configuration.tinted()();
  v16 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000010, 0x8000000100E3DA30);
  static Locale.current.getter(v16);
  v17 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, 0, v7, 0, 0, 256);
  UIButton.Configuration.title.setter(v17);
  v18 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  UIButton.Configuration.baseBackgroundColor.setter(v18);
  v19 = objc_msgSend(v15, "titleLabel");
  if (v19)
  {
    v20 = v19;
    v21 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
    objc_msgSend(v20, "setFont:", v21);

  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 16))(v4, v14, v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v4, 0, 1, v11);
  UIButton.configuration.setter(v4);
  objc_msgSend(v15, "setHidden:", 1);
  v22 = swift_allocObject(&unk_1010DD7A0, 24, 7);
  swift_unknownObjectWeakInit(v22 + 16, a1);
  v23 = sub_10004A07C(0, (unint64_t *)&unk_1011AD710, UIButton_ptr);
  ControlEventHandling<>.on(_:handler:)(64, (uint64_t)sub_100803BD8, v22, v23);
  v24 = swift_release(v22);
  (*(void (**)(_BYTE *, uint64_t, __n128))(v12 + 8))(v14, v11, v24);
  return v15;
}

void sub_100803174(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  char *v8;
  id v9;
  _BYTE v10[72];
  _BYTE v11[24];
  _OWORD v12[2];
  uint64_t v13;
  char v14;

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (id)Strong;
    v5 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Music33StaticLyricsContentViewController_songIdentifier + 8);
    if (v5)
    {
      v6 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Music33StaticLyricsContentViewController_songIdentifier);
      v7 = objc_allocWithZone((Class)type metadata accessor for ReportConcernViewController());
      swift_bridgeObjectRetain();
      v8 = sub_10055287C(v6, v5, 2, 0, 0, 0, 0, 0, 0, 0);
      v9 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v8);
      memset(v12, 0, sizeof(v12));
      v13 = 0;
      v14 = -1;
      v4 = v4;
      PresentationSource.init(viewController:position:)(v4, (uint64_t)v12, (uint64_t)v10);
      PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v9, 1, (id)0xF, (void **)1, 0, 0);

      sub_100064B4C((uint64_t)v10);
    }

  }
}

id sub_1008032A0()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  double v13;
  double v14;
  double *v15;
  id result;
  void *v17;
  double v18;
  double v19;
  id v20;
  unsigned int v21;
  double v22;
  void *v23;
  double v24;
  double v25;
  id v26;
  id v27;
  uint64_t v28;

  v1 = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A2250);
  __chkstk_darwin(v2);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v28 - v6;
  v8 = type metadata accessor for UIButton.Configuration(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100802DF8();
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Music33StaticLyricsContentViewController_lyricsFont], "_bodyLeading");
  v14 = v13;
  v15 = (double *)&v0[OBJC_IVAR____TtC5Music33StaticLyricsContentViewController_contentMargins];
  if ((v0[OBJC_IVAR____TtC5Music33StaticLyricsContentViewController_contentMargins + 8] & 1) != 0)
  {
    result = objc_msgSend(v0, "view");
    if (!result)
    {
      __break(1u);
      goto LABEL_18;
    }
    v17 = result;
    objc_msgSend(result, "layoutMargins");
    v19 = v18;

  }
  else
  {
    v19 = *v15;
  }
  v20 = sub_100802E7C();
  v21 = objc_msgSend(v20, "isHidden");

  if (v21)
    v22 = 80.0;
  else
    v22 = 0.0;
  if (((_BYTE)v15[1] & 1) != 0)
  {
    result = objc_msgSend(v1, "view");
    if (result)
    {
      v23 = result;
      objc_msgSend(result, "layoutMargins");
      v25 = v24;

      goto LABEL_12;
    }
LABEL_18:
    __break(1u);
    return result;
  }
  v25 = *v15;
LABEL_12:
  objc_msgSend(v12, "setTextContainerInset:", 48.0 - v14, v19, v22, v25);

  v26 = sub_100802E7C();
  UIButton.configuration.getter(v26);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return (id)sub_100053700((uint64_t)v7);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  if (qword_10119C8A0 != -1)
    swift_once(&qword_10119C8A0, sub_100802D14);
  UIButton.Configuration.contentInsets.setter(0.0, 0.0, *(double *)&qword_1011CAB18, 0.0);
  v27 = sub_100802E7C();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v4, v11, v8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v4, 0, 1, v8);
  UIButton.configuration.setter(v4);

  return (id)(*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

unint64_t sub_100803588()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  void *v4;
  void *v5;
  NSString v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  void *v11;
  NSString *v12;
  id v13;
  NSString *v14;
  id v15;
  NSString *v16;
  _BYTE v18[80];
  void *v19;
  _QWORD v20[4];

  v1 = objc_msgSend((id)objc_opt_self(NSParagraphStyle), "defaultParagraphStyle");
  v2 = objc_msgSend(v1, "mutableCopy");

  _bridgeAnyObjectToAny(_:)(v20, v2);
  swift_unknownObjectRelease(v2);
  v3 = sub_10004A07C(0, &qword_1011BA1D0, NSMutableParagraphStyle_ptr);
  swift_dynamicCast(&v19, v20, (char *)&type metadata for Any + 8, v3, 7);
  v4 = v19;
  v5 = *(void **)(v0 + OBJC_IVAR____TtC5Music33StaticLyricsContentViewController_lyricsFont);
  objc_msgSend(v5, "_scaledValueForValue:", 6.0);
  objc_msgSend(v4, "setParagraphSpacing:");
  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend(v6, "_isNaturallyRTL");

  if (v7)
    v8 = 2;
  else
    v8 = 0;
  objc_msgSend(v4, "setAlignment:", v8);
  v9 = sub_100007E8C(&qword_1011CABA0);
  inited = swift_initStackObject(v9, v18);
  *(_OWORD *)(inited + 16) = xmmword_100EA7AC0;
  *(_QWORD *)(inited + 32) = NSForegroundColorAttributeName;
  v11 = *(void **)(v0 + OBJC_IVAR____TtC5Music33StaticLyricsContentViewController_textColor);
  *(_QWORD *)(inited + 40) = v11;
  *(_QWORD *)(inited + 48) = NSFontAttributeName;
  *(_QWORD *)(inited + 56) = v5;
  *(_QWORD *)(inited + 64) = NSParagraphStyleAttributeName;
  *(_QWORD *)(inited + 72) = v4;
  v12 = NSForegroundColorAttributeName;
  v13 = v11;
  v14 = NSFontAttributeName;
  v15 = v5;
  v16 = NSParagraphStyleAttributeName;
  return sub_100042D50(inited);
}

id sub_100803738(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  char *v6;
  uint64_t v7;
  void *v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  NSString v13;
  id v14;
  objc_super v16;

  v6 = &v3[OBJC_IVAR____TtC5Music33StaticLyricsContentViewController_lyricsText];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Music33StaticLyricsContentViewController_lyrics] = 0;
  v7 = OBJC_IVAR____TtC5Music33StaticLyricsContentViewController_textColor;
  v8 = (void *)objc_opt_self(UIColor);
  v9 = v3;
  *(_QWORD *)&v3[v7] = objc_msgSend(v8, "labelColor");
  v9[OBJC_IVAR____TtC5Music33StaticLyricsContentViewController_shouldShowReportConcernButton] = 0;
  v10 = &v9[OBJC_IVAR____TtC5Music33StaticLyricsContentViewController_songIdentifier];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  v11 = &v9[OBJC_IVAR____TtC5Music33StaticLyricsContentViewController_contentMargins];
  *(_QWORD *)v11 = 0;
  v11[8] = 1;
  v12 = OBJC_IVAR____TtC5Music33StaticLyricsContentViewController_lyricsFont;
  sub_10004A07C(0, (unint64_t *)&qword_1011A8E90, UIFont_ptr);
  *(_QWORD *)&v9[v12] = static UIFont.preferredFont(forTextStyle:weight:)(UIFontTextStyleTitle3, UIFontWeightBold);
  *(_QWORD *)&v9[OBJC_IVAR____TtC5Music33StaticLyricsContentViewController____lazy_storage___scrollView] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC5Music33StaticLyricsContentViewController____lazy_storage___textView] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC5Music33StaticLyricsContentViewController____lazy_storage___stackView] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC5Music33StaticLyricsContentViewController____lazy_storage___reportConcernButton] = 0;

  if (a2)
  {
    v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = 0;
  }
  v16.receiver = v9;
  v16.super_class = (Class)type metadata accessor for StaticLyricsContentViewController();
  v14 = objc_msgSendSuper2(&v16, "initWithNibName:bundle:", v13, a3);

  return v14;
}

id sub_100803930(void *a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  void *v5;
  char *v6;
  char *v7;
  char *v8;
  uint64_t v9;
  id v10;
  objc_super v12;

  v3 = &v1[OBJC_IVAR____TtC5Music33StaticLyricsContentViewController_lyricsText];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music33StaticLyricsContentViewController_lyrics] = 0;
  v4 = OBJC_IVAR____TtC5Music33StaticLyricsContentViewController_textColor;
  v5 = (void *)objc_opt_self(UIColor);
  v6 = v1;
  *(_QWORD *)&v1[v4] = objc_msgSend(v5, "labelColor");
  v6[OBJC_IVAR____TtC5Music33StaticLyricsContentViewController_shouldShowReportConcernButton] = 0;
  v7 = &v6[OBJC_IVAR____TtC5Music33StaticLyricsContentViewController_songIdentifier];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  v8 = &v6[OBJC_IVAR____TtC5Music33StaticLyricsContentViewController_contentMargins];
  *(_QWORD *)v8 = 0;
  v8[8] = 1;
  v9 = OBJC_IVAR____TtC5Music33StaticLyricsContentViewController_lyricsFont;
  sub_10004A07C(0, (unint64_t *)&qword_1011A8E90, UIFont_ptr);
  *(_QWORD *)&v6[v9] = static UIFont.preferredFont(forTextStyle:weight:)(UIFontTextStyleTitle3, UIFontWeightBold);
  *(_QWORD *)&v6[OBJC_IVAR____TtC5Music33StaticLyricsContentViewController____lazy_storage___scrollView] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC5Music33StaticLyricsContentViewController____lazy_storage___textView] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC5Music33StaticLyricsContentViewController____lazy_storage___stackView] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC5Music33StaticLyricsContentViewController____lazy_storage___reportConcernButton] = 0;

  v12.receiver = v6;
  v12.super_class = (Class)type metadata accessor for StaticLyricsContentViewController();
  v10 = objc_msgSendSuper2(&v12, "initWithCoder:", a1);

  return v10;
}

id sub_100803AB4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StaticLyricsContentViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for StaticLyricsContentViewController()
{
  return objc_opt_self(_TtC5Music33StaticLyricsContentViewController);
}

uint64_t sub_100803BB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

void sub_100803BD8(uint64_t a1)
{
  uint64_t v1;

  sub_100803174(a1, v1);
}

void sub_100803BE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(__n128);
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  NSString v15;
  Class isa;
  id v17;
  id v18;
  id v19;
  id v20;

  v2 = v1;
  v3 = OBJC_IVAR____TtC5Music33StaticLyricsContentViewController_lyrics;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music33StaticLyricsContentViewController_lyrics);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC5Music33StaticLyricsContentViewController_lyrics) = a1;
  swift_retain(a1);
  swift_release(v4);
  v5 = *(_QWORD *)(v2 + v3);
  if (v5)
  {
    v6 = *(void (**)(__n128))(*(_QWORD *)v5 + 240);
    v7 = swift_retain(v5);
    v6(v7);
    v9 = v8;
    v10 = sub_100803588();
    v11 = objc_msgSend(objc_allocWithZone((Class)NSMutableAttributedString), "init");
    sub_1003286E8(v10);
    v13 = v12;
    swift_bridgeObjectRelease(v10);
    v14 = objc_allocWithZone((Class)NSAttributedString);
    v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v9);
    type metadata accessor for Key(0);
    sub_100556620();
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v20 = objc_msgSend(v14, "initWithString:attributes:", v15, isa, swift_bridgeObjectRelease(v13).n128_f64[0]);

    objc_msgSend(v11, "appendAttributedString:", v20);
    v17 = sub_100802D24();
    objc_msgSend(v17, "setContentOffset:", 0.0, 0.0);

    v18 = sub_100802DF8();
    objc_msgSend(v18, "setAttributedText:", v11);

    v19 = sub_100802DF8();
    objc_msgSend(v19, "setHidden:", 0);

    sub_1008032A0();
    swift_release(v5);

  }
}

id sub_100803DCC()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  Class isa;
  id v5;

  v0 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  v1 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100EA7DB0;
  *(_QWORD *)(v1 + 32) = sub_100802DF8();
  v2 = sub_100802E7C();
  *(_QWORD *)(v1 + 40) = v2;
  specialized Array._endMutation()(v2);
  v3 = objc_allocWithZone((Class)UIStackView);
  sub_10004A07C(0, (unint64_t *)&qword_1011A20A0, UIView_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v5 = objc_msgSend(v3, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease().n128_f64[0]);

  objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v5, "setAlignment:", 0);
  objc_msgSend(v5, "setAxis:", 1);
  if (qword_10119C898 != -1)
    swift_once(&qword_10119C898, sub_100802D04);
  objc_msgSend(v5, "setSpacing:", *(double *)&qword_1011CAB10);
  return v5;
}

uint64_t sub_100803F28()
{
  return 8;
}

uint64_t sub_100803F34(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t sub_100803F3C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

_QWORD *sub_100803F50(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_100803F68()
{
  return 8;
}

void sub_100803F7C()
{
  AttributeScopes.UIKitAttributes.paragraphStyle.getter();
  __break(1u);
}

unint64_t sub_100803F98()
{
  unint64_t result;

  result = qword_1011CABA8;
  if (!qword_1011CABA8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AttributeScopes.UIKitAttributes.ParagraphStyleAttribute, &type metadata for AttributeScopes.UIKitAttributes.ParagraphStyleAttribute);
    atomic_store(result, (unint64_t *)&qword_1011CABA8);
  }
  return result;
}

void sub_100803FDC(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a2;
  v3 = sub_100803F98();
  AttributeDynamicLookup.subscript.getter(v2, v3);
  __break(1u);
}

uint64_t sub_100804000()
{
  return 8;
}

uint64_t sub_100804010()
{
  uint64_t v0;

  v0 = sub_100007E8C(&qword_1011CABB0);
  return dispatch thunk of Hashable.hashValue.getter(v0, &protocol witness table for AnyKeyPath);
}

char *sub_10080406C(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  unint64_t v10;
  char *v11;
  void *v12;
  id v13;
  id v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  objc_super v19;

  *(_QWORD *)&v4[OBJC_IVAR____TtC5Music22NowPlayingRepeatButton_repeatType] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Music22NowPlayingRepeatButton_defaultColor] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Music22NowPlayingRepeatButton_selectedColor] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Music22NowPlayingRepeatButton_selectedBackgroundColor] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Music22NowPlayingRepeatButton_dimmedBackgroundColor] = 0;
  v19.receiver = v4;
  v19.super_class = (Class)type metadata accessor for NowPlayingRepeatButton();
  v9 = (char *)objc_msgSendSuper2(&v19, "initWithFrame:", a1, a2, a3, a4);
  v10 = *(_QWORD *)&v9[OBJC_IVAR____TtC5Music22NowPlayingRepeatButton_repeatType];
  v11 = v9;
  v12 = (void *)sub_1008041FC(v10);
  objc_msgSend(v11, "setImage:forState:", v12, 0);

  objc_msgSend(v11, "setAdjustsImageSizeForAccessibilityContentSizeCategory:", 1);
  v13 = objc_msgSend(v11, "layer");
  objc_msgSend(v13, "setCornerCurve:", kCACornerCurveContinuous);

  v14 = objc_msgSend(v11, "layer");
  objc_msgSend(v14, "setCornerRadius:", 7.0);

  v15 = AccessibilityIdentifier.nowPlayingRepeatButton.unsafeMutableAddressor();
  v16 = *v15;
  v17 = v15[1];
  swift_bridgeObjectRetain();
  UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(v16, v17);

  return v11;
}

uint64_t sub_1008041FC(unint64_t a1)
{
  id v2;
  void *v3;
  id v4;
  NSString v5;
  id v6;
  uint64_t result;
  Swift::String v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;

  v2 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:weight:", 7, 15.0);
  v3 = v2;
  if (a1 > 2)
  {
    v13 = 0;
    v14 = 0xE000000000000000;
    _StringGuts.grow(_:)(24);
    v8._object = (void *)0x8000000100E3CCE0;
    v8._countAndFlagsBits = 0xD000000000000013;
    String.append(_:)(v8);
    v9._countAndFlagsBits = 0x746165706552504DLL;
    v9._object = (void *)0xEC00000065707954;
    String.append(_:)(v9);
    v10._countAndFlagsBits = 32;
    v10._object = (void *)0xE100000000000000;
    String.append(_:)(v10);
    v12 = a1;
    type metadata accessor for MPRepeatType(0);
    _print_unlocked<A, B>(_:_:)(&v12, &v13, v11, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v13, v14, "Music/NowPlayingRepeatButton.swift", 34, 2, 121, 0);
    __break(1u);
  }
  else
  {
    v4 = v2;
    v5 = String._bridgeToObjectiveC()();
    v6 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v5, v3);

    return (uint64_t)v6;
  }
  return result;
}

void sub_100804474(uint64_t a1)
{
  void *v1;
  void *v2;
  unint64_t v4;
  int v5;
  id v6;
  unint64_t v7;
  int v8;
  objc_super v9;

  v2 = v1;
  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for NowPlayingRepeatButton();
  objc_msgSendSuper2(&v9, "traitCollectionDidChange:", a1);
  if (a1)
  {
    v4 = sub_10013B23C();
    v5 = UITraitCollection.subscript.getter(&type metadata for HasAnimatedBackgroundTrait, &type metadata for HasAnimatedBackgroundTrait, v4) & 1;
  }
  else
  {
    v5 = 2;
  }
  v6 = objc_msgSend(v2, "traitCollection");
  v7 = sub_10013B23C();
  v8 = UITraitCollection.subscript.getter(&type metadata for HasAnimatedBackgroundTrait, &type metadata for HasAnimatedBackgroundTrait, v7);

  if (v5 == 2 || ((v8 ^ (v5 != 0)) & 1) != 0)
    sub_1008045F4();
}

void sub_1008045F4()
{
  char *v0;
  char *v1;
  id v2;
  unint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  NSString v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  unsigned int v18;
  void *v19;
  uint64_t *v20;
  id v21;
  unsigned int v22;
  void *v23;
  uint64_t v24;
  id v25;
  id v26;
  Swift::String v27;
  Swift::String v28;
  Swift::String v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;

  v1 = v0;
  v2 = objc_msgSend(v0, "traitCollection");
  v3 = sub_10013B23C();
  v4 = UITraitCollection.subscript.getter(&type metadata for HasAnimatedBackgroundTrait, &type metadata for HasAnimatedBackgroundTrait, v3);

  v5 = OBJC_IVAR____TtC5Music22NowPlayingRepeatButton_repeatType;
  v6 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Music22NowPlayingRepeatButton_repeatType];
  if ((unint64_t)(v6 - 1) < 2)
  {
    objc_msgSend(v1, "setSelected:", 1);
    v7 = objc_msgSend(v1, "imageView");
    if (v7)
    {
      v8 = v7;
      v9 = objc_msgSend(v7, "layer");

      if ((v4 & 1) != 0)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterDestOut);
        v12 = v11;
        v13 = String._bridgeToObjectiveC()();
        *(_QWORD *)&v10 = swift_bridgeObjectRelease(v12).n128_u64[0];
      }
      else
      {
        v13 = 0;
      }
      objc_msgSend(v9, "setCompositingFilter:", v13, v10);

      swift_unknownObjectRelease(v13);
    }
    goto LABEL_10;
  }
  if (!v6)
  {
    objc_msgSend(v1, "setSelected:", 0);
    v14 = objc_msgSend(v1, "imageView");
    if (v14)
    {
      v15 = v14;
      v16 = objc_msgSend(v14, "layer");

      objc_msgSend(v16, "setCompositingFilter:", 0);
    }
LABEL_10:
    v17 = (void *)sub_1008041FC(*(_QWORD *)&v1[v5]);
    objc_msgSend(v1, "setImage:forState:", v17, 0);

    v18 = objc_msgSend(v1, "isSelected");
    if ((v4 & 1) != 0)
    {
      if (v18)
      {
        v19 = *(void **)&v1[OBJC_IVAR____TtC5Music22NowPlayingRepeatButton_selectedColor];
      }
      else
      {
        if (qword_10119C318 != -1)
          swift_once(&qword_10119C318, sub_1005D2F9C);
        v19 = (void *)qword_10124D3F8;
      }
      v25 = v19;
      objc_msgSend(v1, "setTintColor:", v25);

      if (objc_msgSend(v1, "isSelected"))
      {
        if (qword_10119C318 != -1)
          swift_once(&qword_10119C318, sub_1005D2F9C);
        v26 = (id)qword_10124D3F8;
        goto LABEL_30;
      }
      goto LABEL_29;
    }
    v20 = &OBJC_IVAR____TtC5Music22NowPlayingRepeatButton_selectedColor;
    if (!v18)
      v20 = &OBJC_IVAR____TtC5Music22NowPlayingRepeatButton_defaultColor;
    objc_msgSend(v1, "setTintColor:", *(_QWORD *)&v1[*v20]);
    v21 = objc_msgSend(v1, "tintAdjustmentMode");
    v22 = objc_msgSend(v1, "isSelected");
    if (v21 == (id)2)
    {
      if (v22)
      {
        v23 = *(void **)&v1[OBJC_IVAR____TtC5Music22NowPlayingRepeatButton_dimmedBackgroundColor];
        if (!v23)
        {
          v24 = OBJC_IVAR____TtC5Music22NowPlayingRepeatButton_selectedBackgroundColor;
LABEL_32:
          v26 = *(id *)&v1[v24];
          goto LABEL_30;
        }
        goto LABEL_28;
      }
    }
    else if (v22)
    {
      v23 = *(void **)&v1[OBJC_IVAR____TtC5Music22NowPlayingRepeatButton_selectedBackgroundColor];
      if (!v23)
      {
        v24 = OBJC_IVAR____TtC5Music22NowPlayingRepeatButton_defaultColor;
        goto LABEL_32;
      }
LABEL_28:
      v26 = v23;
LABEL_30:
      v31 = v26;
      objc_msgSend(v1, "setBackgroundColor:");

      return;
    }
LABEL_29:
    v26 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    goto LABEL_30;
  }
  v33 = 0;
  v34 = 0xE000000000000000;
  _StringGuts.grow(_:)(24);
  v27._object = (void *)0x8000000100E3CCE0;
  v27._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v27);
  v28._countAndFlagsBits = 0x746165706552504DLL;
  v28._object = (void *)0xEC00000065707954;
  String.append(_:)(v28);
  v29._countAndFlagsBits = 32;
  v29._object = (void *)0xE100000000000000;
  String.append(_:)(v29);
  v32 = *(_QWORD *)&v1[v5];
  type metadata accessor for MPRepeatType(0);
  _print_unlocked<A, B>(_:_:)(&v32, &v33, v30, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v33, v34, "Music/NowPlayingRepeatButton.swift", 34, 2, 87, 0);
  __break(1u);
}

id sub_100804A7C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NowPlayingRepeatButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for NowPlayingRepeatButton()
{
  return objc_opt_self(_TtC5Music22NowPlayingRepeatButton);
}

uint64_t sub_100804B24(uint64_t a1)
{
  return sub_10080659C(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_100811544);
}

_QWORD *sub_100804B30(_QWORD *result)
{
  _QWORD *v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *v6;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v2 = result[2];
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_22;
  }
  v6 = result;
  result = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  *v1 = v3;
  if (!(_DWORD)result || (v7 = v3[3] >> 1, v7 < v5))
  {
    if (v4 <= v5)
      v8 = v4 + v2;
    else
      v8 = v4;
    result = sub_100431698(result, v8, 1, v3);
    v3 = result;
    *v1 = result;
    v7 = result[3] >> 1;
  }
  v9 = v3[2];
  v10 = v7 - v9;
  v11 = v6[2];
  if (v11)
  {
    if (v10 < (uint64_t)v11)
    {
      __break(1u);
      goto LABEL_25;
    }
    v12 = (unint64_t)&v3[4 * v9 + 4];
    if ((unint64_t)(v6 + 4) < v12 + 32 * v11 && v12 < (unint64_t)&v6[4 * v11 + 4])
      goto LABEL_26;
    result = (_QWORD *)swift_arrayInitWithCopy(v12);
    if (v11 >= v2)
    {
      v14 = v3[2];
      v15 = __OFADD__(v14, v11);
      v16 = v14 + v11;
      if (!v15)
      {
        v3[2] = v16;
        goto LABEL_19;
      }
LABEL_25:
      __break(1u);
LABEL_26:
      result = (_QWORD *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
      __break(1u);
      return result;
    }
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v2)
    goto LABEL_22;
LABEL_19:
  result = (_QWORD *)swift_bridgeObjectRelease(v6);
  if (v11 == v10)
LABEL_23:
    *v1 = v3;
  return result;
}

uint64_t sub_100804C9C(uint64_t a1)
{
  _QWORD *v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  int64_t v16;
  uint64_t result;
  char v18;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native)
  {
    v8 = v3[3] >> 1;
    if (v8 >= v5)
    {
      v9 = *(_QWORD *)(a1 + 16);
      if (v9)
        goto LABEL_5;
LABEL_18:
      if (!v2)
        goto LABEL_19;
      goto LABEL_21;
    }
  }
  if (v4 <= v5)
    v16 = v4 + v2;
  else
    v16 = v4;
  v3 = sub_10043158C(isUniquelyReferenced_nonNull_native, v16, 1, v3);
  v8 = v3[3] >> 1;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    goto LABEL_18;
LABEL_5:
  v10 = v3[2];
  if (v8 - v10 < (uint64_t)v9)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v11 = (unint64_t)&v3[v10 + 4];
  if (a1 + 32 < v11 + 8 * v9 && v11 < a1 + 32 + 8 * v9)
    goto LABEL_24;
  type metadata accessor for ActivityType(0);
  swift_arrayInitWithCopy(v11);
  if (v9 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v13 = v3[2];
  v14 = __OFADD__(v13, v9);
  v15 = v13 + v9;
  if (!v14)
  {
    v3[2] = v15;
LABEL_19:
    result = swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v18 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v18, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100804E0C(uint64_t a1)
{
  return sub_10080659C(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_100811760);
}

uint64_t sub_100804E18(uint64_t a1)
{
  return sub_10080659C(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_100811BB0);
}

uint64_t sub_100804E24(uint64_t a1)
{
  return sub_10080659C(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_100811DCC);
}

void sub_100804E30(uint64_t a1)
{
  _QWORD *v1;
  size_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  size_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;
  BOOL v13;
  size_t v14;
  int64_t v15;
  char v16;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_100431E80(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (char *)v3 + v9 + 32;
  if (a1 + 32 < (unint64_t)&v10[v8] && (unint64_t)v10 < a1 + 32 + v8)
    goto LABEL_24;
  memcpy(v10, (const void *)(a1 + 32), v8);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v16 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v16, 1092, 0);
  __break(1u);
}

void sub_100804F78(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  char v15;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1004320AC(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[13 * v8 + 4];
  if (a1 + 32 < v9 + 104 * v2 && v9 < a1 + 32 + 104 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy(v9);
  if (!v2)
  {
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v15 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v15, 1092, 0);
  __break(1u);
}

uint64_t sub_1008050D0(uint64_t a1)
{
  unint64_t *v1;
  unint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t *v20;
  char *v21;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(_QWORD *, _QWORD);
  char *v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  int64_t v48;
  int64_t v49;
  uint64_t v50;
  unint64_t v51;
  int64_t v52;
  uint64_t v53;
  uint64_t v54;
  int64_t v55;
  unint64_t v56;
  char *v57;
  unint64_t v58;
  char *v59;
  char *v60;
  void (*v61)(_QWORD *, _QWORD);
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  void (*v68)(unint64_t, char *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  void (*v75)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v76;
  void (*v77)(unint64_t, char *, uint64_t);
  int64_t v78;
  int64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t, uint64_t);
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  _QWORD v92[5];

  v2 = v1;
  v87 = type metadata accessor for MusicVideo(0);
  v4 = *(_QWORD *)(v87 - 8);
  __chkstk_darwin(v87);
  v85 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011B59B0);
  v7 = __chkstk_darwin(v6);
  v86 = (uint64_t)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v82 = (uint64_t)&v73 - v10;
  __chkstk_darwin(v9);
  v88 = (uint64_t)&v73 - v11;
  v12 = sub_100007E8C((uint64_t *)&unk_1011CF3D0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v89 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = sub_100007E8C(&qword_1011CAD30);
  __chkstk_darwin(v80);
  v91 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (void (*)(uint64_t, uint64_t))sub_100049F28(&qword_1011CAD38, (uint64_t *)&unk_1011CF3D0, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  v17 = dispatch thunk of Sequence.underestimatedCount.getter(v12, v16);
  v18 = *v1;
  v19 = *(_QWORD *)(*v2 + 16);
  v20 = (unint64_t *)(v19 + v17);
  if (__OFADD__(v19, v17))
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v21 = (char *)v17;
  v90 = v12;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v18);
  *v2 = v18;
  if (isUniquelyReferenced_nonNull_native && (v23 = *(_QWORD *)(v18 + 24) >> 1, v23 >= (uint64_t)v20))
  {
    v20 = v2;
  }
  else
  {
    if (v19 <= (uint64_t)v20)
      v24 = (int64_t)v20;
    else
      v24 = v19;
    v18 = sub_1004321D4(isUniquelyReferenced_nonNull_native, v24, 1, v18);
    v20 = v2;
    *v2 = v18;
    v23 = *(_QWORD *)(v18 + 24) >> 1;
  }
  v25 = *(_QWORD *)(v18 + 16);
  v26 = *(_QWORD *)(v4 + 72);
  v27 = v23 - v25;
  v81 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v28 = v18 + v81 + v26 * v25;
  v29 = (uint64_t)v89;
  v12 = v90;
  v83 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v84 = v26;
  v83(v89, a1, v90);
  v30 = dispatch thunk of Sequence._copyContents(initializing:)(v91, v28, v27, v12, v16);
  v16 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
  v16(a1, v12);
  if (v30 < (uint64_t)v21)
    goto LABEL_17;
  if (v30 >= 1)
  {
    v31 = *(_QWORD *)(*v20 + 16);
    v32 = __OFADD__(v31, v30);
    v33 = v31 + v30;
    if (v32)
    {
      __break(1u);
      goto LABEL_21;
    }
    *(_QWORD *)(*v20 + 16) = v33;
  }
  if (v30 != v27)
  {
    v34 = &qword_1011CAD30;
    v35 = (uint64_t)v91;
    return sub_10004FF60(v35, v34);
  }
LABEL_18:
  v79 = *(_QWORD *)(*v20 + 16);
  v27 = (uint64_t)v91;
  v21 = &v91[*(int *)(v80 + 36)];
  v37 = *(_QWORD *)v21;
  v29 = sub_100049F28((unint64_t *)&unk_1011ACBA0, (uint64_t *)&unk_1011CF3D0, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  dispatch thunk of Collection.endIndex.getter(v92, v12, v29);
  v76 = v29;
  if (v37 != v92[0])
  {
LABEL_21:
    v43 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v92, v21, v12, v29);
    v39 = v87;
    v40 = v88;
    (*(void (**)(uint64_t))(v4 + 16))(v88);
    v43(v92, 0);
    v44 = v89;
    v83(v89, v27, v12);
    dispatch thunk of Collection.formIndex(after:)(v21, v12, v29);
    v16((uint64_t)v44, v12);
    v38 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v41 = v40;
    v42 = 0;
    goto LABEL_22;
  }
  v38 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
  v39 = v87;
  v40 = v88;
  v41 = v88;
  v42 = 1;
LABEL_22:
  v75 = v38;
  v38(v41, v42, 1, v39);
  v45 = v82;
  v46 = v86;
  sub_10004A160(v40, v82, &qword_1011B59B0);
  v80 = *(_QWORD *)(v4 + 48);
  v47 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v80)(v45, 1, v39);
  v48 = v79;
  if (v47 != 1)
  {
    v74 = v21;
    do
    {
      sub_10004FF60(v45, &qword_1011B59B0);
      v50 = *v20;
      v51 = *(_QWORD *)(*v20 + 24);
      v52 = v51 >> 1;
      if ((uint64_t)(v51 >> 1) < v48 + 1)
      {
        v50 = sub_1004321D4(v51 > 1, v48 + 1, 1, *v20);
        *v20 = v50;
        v52 = *(_QWORD *)(v50 + 24) >> 1;
      }
      sub_10004A160(v88, v46, &qword_1011B59B0);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v80)(v46, 1, v87) == 1)
      {
        v54 = v86;
        v53 = v87;
LABEL_31:
        sub_10004FF60(v54, &qword_1011B59B0);
        v49 = v48;
        v46 = v54;
      }
      else
      {
        if (v48 <= v52)
          v55 = v52;
        else
          v55 = v48;
        v77 = *(void (**)(unint64_t, char *, uint64_t))(v4 + 32);
        v78 = v55;
        v56 = v50 + v81;
        v57 = v85;
        v58 = v56 + v84 * v48;
        v54 = v86;
        v53 = v87;
        while (1)
        {
          v67 = v54;
          v68 = v77;
          v77((unint64_t)v57, (char *)v67, v53);
          if (v78 == v48)
            break;
          v79 = v48;
          v69 = v88;
          sub_10004FF60(v88, &qword_1011B59B0);
          v68(v58, v57, v53);
          v70 = *(_QWORD *)v21;
          v63 = v21;
          v71 = v90;
          v72 = v76;
          dispatch thunk of Collection.endIndex.getter(v92, v90, v76);
          if (v70 == v92[0])
          {
            v64 = v69;
            v65 = 1;
            v53 = v87;
          }
          else
          {
            v59 = v63;
            v60 = v91;
            v61 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v92, v59, v71, v72);
            v53 = v87;
            (*(void (**)(uint64_t))(v4 + 16))(v69);
            v61(v92, 0);
            v62 = v89;
            v83(v89, (uint64_t)v60, v71);
            v63 = v74;
            dispatch thunk of Collection.formIndex(after:)(v74, v71, v72);
            v16((uint64_t)v62, v71);
            v64 = v69;
            v65 = 0;
          }
          v75(v64, v65, 1, v53);
          v21 = v63;
          v54 = v86;
          sub_10004A160(v69, v86, &qword_1011B59B0);
          v66 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v80)(v54, 1, v53);
          v57 = v85;
          v58 += v84;
          v48 = v79 + 1;
          v27 = (uint64_t)v91;
          if (v66 == 1)
            goto LABEL_31;
        }
        (*(void (**)(char *, uint64_t))(v4 + 8))(v57, v53);
        v49 = v78;
        v48 = v78;
        v46 = v86;
      }
      *(_QWORD *)(*v20 + 16) = v49;
      v45 = v82;
      sub_10004A160(v88, v82, &qword_1011B59B0);
    }
    while (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v80)(v45, 1, v53) != 1);
  }
  sub_10004FF60(v88, &qword_1011B59B0);
  sub_10004FF60(v27, &qword_1011CAD30);
  v35 = v45;
  v34 = &qword_1011B59B0;
  return sub_10004FF60(v35, v34);
}

uint64_t sub_1008057C4(uint64_t a1)
{
  unint64_t *v1;
  unint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t *v20;
  char *v21;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(_QWORD *, _QWORD);
  char *v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  int64_t v48;
  int64_t v49;
  uint64_t v50;
  unint64_t v51;
  int64_t v52;
  uint64_t v53;
  uint64_t v54;
  int64_t v55;
  unint64_t v56;
  char *v57;
  unint64_t v58;
  char *v59;
  char *v60;
  void (*v61)(_QWORD *, _QWORD);
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  void (*v68)(unint64_t, char *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  void (*v75)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v76;
  void (*v77)(unint64_t, char *, uint64_t);
  int64_t v78;
  int64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t, uint64_t);
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  _QWORD v92[5];

  v2 = v1;
  v87 = type metadata accessor for Album(0);
  v4 = *(_QWORD *)(v87 - 8);
  __chkstk_darwin(v87);
  v85 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011A8FA0);
  v7 = __chkstk_darwin(v6);
  v86 = (uint64_t)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v82 = (uint64_t)&v73 - v10;
  __chkstk_darwin(v9);
  v88 = (uint64_t)&v73 - v11;
  v12 = sub_100007E8C(&qword_1011A3D80);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v89 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = sub_100007E8C(&qword_1011BB038);
  __chkstk_darwin(v80);
  v91 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (void (*)(uint64_t, uint64_t))sub_100049F28(&qword_1011CAD28, &qword_1011A3D80, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  v17 = dispatch thunk of Sequence.underestimatedCount.getter(v12, v16);
  v18 = *v1;
  v19 = *(_QWORD *)(*v2 + 16);
  v20 = (unint64_t *)(v19 + v17);
  if (__OFADD__(v19, v17))
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v21 = (char *)v17;
  v90 = v12;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v18);
  *v2 = v18;
  if (isUniquelyReferenced_nonNull_native && (v23 = *(_QWORD *)(v18 + 24) >> 1, v23 >= (uint64_t)v20))
  {
    v20 = v2;
  }
  else
  {
    if (v19 <= (uint64_t)v20)
      v24 = (int64_t)v20;
    else
      v24 = v19;
    v18 = sub_1004321E8(isUniquelyReferenced_nonNull_native, v24, 1, v18);
    v20 = v2;
    *v2 = v18;
    v23 = *(_QWORD *)(v18 + 24) >> 1;
  }
  v25 = *(_QWORD *)(v18 + 16);
  v26 = *(_QWORD *)(v4 + 72);
  v27 = v23 - v25;
  v81 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v28 = v18 + v81 + v26 * v25;
  v29 = (uint64_t)v89;
  v12 = v90;
  v83 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v84 = v26;
  v83(v89, a1, v90);
  v30 = dispatch thunk of Sequence._copyContents(initializing:)(v91, v28, v27, v12, v16);
  v16 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
  v16(a1, v12);
  if (v30 < (uint64_t)v21)
    goto LABEL_17;
  if (v30 >= 1)
  {
    v31 = *(_QWORD *)(*v20 + 16);
    v32 = __OFADD__(v31, v30);
    v33 = v31 + v30;
    if (v32)
    {
      __break(1u);
      goto LABEL_21;
    }
    *(_QWORD *)(*v20 + 16) = v33;
  }
  if (v30 != v27)
  {
    v34 = &qword_1011BB038;
    v35 = (uint64_t)v91;
    return sub_10004FF60(v35, v34);
  }
LABEL_18:
  v79 = *(_QWORD *)(*v20 + 16);
  v27 = (uint64_t)v91;
  v21 = &v91[*(int *)(v80 + 36)];
  v37 = *(_QWORD *)v21;
  v29 = sub_100049F28((unint64_t *)&qword_1011ACAC0, &qword_1011A3D80, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  dispatch thunk of Collection.endIndex.getter(v92, v12, v29);
  v76 = v29;
  if (v37 != v92[0])
  {
LABEL_21:
    v43 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v92, v21, v12, v29);
    v39 = v87;
    v40 = v88;
    (*(void (**)(uint64_t))(v4 + 16))(v88);
    v43(v92, 0);
    v44 = v89;
    v83(v89, v27, v12);
    dispatch thunk of Collection.formIndex(after:)(v21, v12, v29);
    v16((uint64_t)v44, v12);
    v38 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v41 = v40;
    v42 = 0;
    goto LABEL_22;
  }
  v38 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
  v39 = v87;
  v40 = v88;
  v41 = v88;
  v42 = 1;
LABEL_22:
  v75 = v38;
  v38(v41, v42, 1, v39);
  v45 = v82;
  v46 = v86;
  sub_10004A160(v40, v82, &qword_1011A8FA0);
  v80 = *(_QWORD *)(v4 + 48);
  v47 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v80)(v45, 1, v39);
  v48 = v79;
  if (v47 != 1)
  {
    v74 = v21;
    do
    {
      sub_10004FF60(v45, &qword_1011A8FA0);
      v50 = *v20;
      v51 = *(_QWORD *)(*v20 + 24);
      v52 = v51 >> 1;
      if ((uint64_t)(v51 >> 1) < v48 + 1)
      {
        v50 = sub_1004321E8(v51 > 1, v48 + 1, 1, *v20);
        *v20 = v50;
        v52 = *(_QWORD *)(v50 + 24) >> 1;
      }
      sub_10004A160(v88, v46, &qword_1011A8FA0);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v80)(v46, 1, v87) == 1)
      {
        v54 = v86;
        v53 = v87;
LABEL_31:
        sub_10004FF60(v54, &qword_1011A8FA0);
        v49 = v48;
        v46 = v54;
      }
      else
      {
        if (v48 <= v52)
          v55 = v52;
        else
          v55 = v48;
        v77 = *(void (**)(unint64_t, char *, uint64_t))(v4 + 32);
        v78 = v55;
        v56 = v50 + v81;
        v57 = v85;
        v58 = v56 + v84 * v48;
        v54 = v86;
        v53 = v87;
        while (1)
        {
          v67 = v54;
          v68 = v77;
          v77((unint64_t)v57, (char *)v67, v53);
          if (v78 == v48)
            break;
          v79 = v48;
          v69 = v88;
          sub_10004FF60(v88, &qword_1011A8FA0);
          v68(v58, v57, v53);
          v70 = *(_QWORD *)v21;
          v63 = v21;
          v71 = v90;
          v72 = v76;
          dispatch thunk of Collection.endIndex.getter(v92, v90, v76);
          if (v70 == v92[0])
          {
            v64 = v69;
            v65 = 1;
            v53 = v87;
          }
          else
          {
            v59 = v63;
            v60 = v91;
            v61 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v92, v59, v71, v72);
            v53 = v87;
            (*(void (**)(uint64_t))(v4 + 16))(v69);
            v61(v92, 0);
            v62 = v89;
            v83(v89, (uint64_t)v60, v71);
            v63 = v74;
            dispatch thunk of Collection.formIndex(after:)(v74, v71, v72);
            v16((uint64_t)v62, v71);
            v64 = v69;
            v65 = 0;
          }
          v75(v64, v65, 1, v53);
          v21 = v63;
          v54 = v86;
          sub_10004A160(v69, v86, &qword_1011A8FA0);
          v66 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v80)(v54, 1, v53);
          v57 = v85;
          v58 += v84;
          v48 = v79 + 1;
          v27 = (uint64_t)v91;
          if (v66 == 1)
            goto LABEL_31;
        }
        (*(void (**)(char *, uint64_t))(v4 + 8))(v57, v53);
        v49 = v78;
        v48 = v78;
        v46 = v86;
      }
      *(_QWORD *)(*v20 + 16) = v49;
      v45 = v82;
      sub_10004A160(v88, v82, &qword_1011A8FA0);
    }
    while (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v80)(v45, 1, v53) != 1);
  }
  sub_10004FF60(v88, &qword_1011A8FA0);
  sub_10004FF60(v27, &qword_1011BB038);
  v35 = v45;
  v34 = &qword_1011A8FA0;
  return sub_10004FF60(v35, v34);
}

uint64_t sub_100805EB8(uint64_t a1)
{
  return sub_10080659C(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_100811FE8);
}

uint64_t sub_100805EC4(uint64_t a1)
{
  return sub_100806098(a1, (unint64_t *)type metadata accessor for JSMenuItem, &qword_1011CB028, &qword_1011CB020, (uint64_t *)sub_100812A88);
}

void sub_100805EE8(uint64_t a1)
{
  _QWORD *v1;
  int64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  char v15;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_100431C7C(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (char *)v3 + v8 + 32;
  if (a1 + 32 < (unint64_t)&v9[v2] && (unint64_t)v9 < a1 + 32 + v2)
    goto LABEL_24;
  memcpy(v9, (const void *)(a1 + 32), v2);
  if (!v2)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    *v1 = v3;
    return;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v15 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v15, 1092, 0);
  __break(1u);
}

uint64_t sub_10080602C(uint64_t a1)
{
  return sub_100806098(a1, (unint64_t *)type metadata accessor for BottomPlayerManager.Queue, &qword_1011CACD0, &qword_1011CACC8, (uint64_t *)sub_100812A88);
}

uint64_t sub_100806050(uint64_t a1)
{
  return sub_100806098(a1, (unint64_t *)type metadata accessor for JSShelfItem, &qword_1011CB008, &qword_1011CB000, (uint64_t *)sub_100812A88);
}

uint64_t sub_100806074(uint64_t a1)
{
  return sub_100806098(a1, (unint64_t *)type metadata accessor for JSGridItem, &qword_1011CB018, &qword_1011CB010, (uint64_t *)sub_100812AE0);
}

uint64_t sub_100806098(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t *v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v24 = a1;
    else
      v24 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v11 = _CocoaArrayWrapper.endIndex.getter(v24);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v12 = *v5;
  if (!((unint64_t)*v5 >> 62))
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    v14 = v13 + v11;
    if (!__OFADD__(v13, v11))
      goto LABEL_5;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v12 < 0)
    v25 = *v5;
  else
    v25 = v12 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v13 = _CocoaArrayWrapper.endIndex.getter(v25);
  swift_bridgeObjectRelease(v12);
  v14 = v13 + v11;
  if (__OFADD__(v13, v11))
    goto LABEL_29;
LABEL_5:
  v12 = *v5;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v5);
  *v5 = v12;
  v13 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v12 & 0x8000000000000000) == 0
    && (v12 & 0x4000000000000000) == 0)
  {
    v16 = v12 & 0xFFFFFFFFFFFFFF8;
    if (v14 <= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v13 = 1;
  }
  v27 = v11;
  v11 = (uint64_t)a2;
  a2 = a3;
  a3 = (unint64_t *)a4;
  a4 = a5;
  if ((unint64_t)v12 >> 62)
    goto LABEL_31;
  v17 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v17 <= v14)
      v17 = v14;
    swift_bridgeObjectRetain();
    v12 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v13, v17, 1, v12);
    swift_bridgeObjectRelease(*v5);
    *v5 = v12;
    v16 = v12 & 0xFFFFFFFFFFFFFF8;
    a5 = a4;
    a4 = (uint64_t *)a3;
    a3 = a2;
    a2 = (unint64_t *)v11;
    v11 = v27;
LABEL_15:
    result = sub_1008119A0(v16 + 8 * *(_QWORD *)(v16 + 16) + 32, (*(_QWORD *)(v16 + 24) >> 1) - *(_QWORD *)(v16 + 16), a1, (void (*)(_QWORD))a2, a3, a4, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))a5);
    if (v19 >= v11)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v12 < 0)
      v26 = v12;
    else
      v26 = v12 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v17 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease(v12);
  }
  if (v19 < 1)
    goto LABEL_19;
  v20 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v21 = __OFADD__(v20, v19);
  v22 = v20 + v19;
  if (!v21)
  {
    *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) = v22;
LABEL_19:
    swift_bridgeObjectRelease(result);
    return specialized Array._endMutation()(v23);
  }
  __break(1u);
  return result;
}

void sub_1008062A8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  char v15;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_100432690(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[5 * v8 + 4];
  if (a1 + 32 < v9 + 40 * v2 && v9 < a1 + 32 + 40 * v2)
    goto LABEL_24;
  sub_100007E8C((uint64_t *)&unk_1011AE070);
  swift_arrayInitWithCopy(v9);
  if (!v2)
  {
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v15 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v15, 1092, 0);
  __break(1u);
}

void sub_100806410(uint64_t a1)
{
  _QWORD *v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  char v16;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_1004326B8(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[5 * v9 + 4];
  if (a1 + 32 < v10 + 40 * v8 && v10 < a1 + 32 + 40 * v8)
    goto LABEL_24;
  sub_100007E8C(&qword_1011AB320);
  swift_arrayInitWithCopy(v10);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v16 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v16, 1092, 0);
  __break(1u);
}

uint64_t sub_100806584(uint64_t a1)
{
  return sub_10080659C(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_100812444);
}

uint64_t sub_100806590(uint64_t a1)
{
  return sub_10080659C(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_100812228);
}

uint64_t sub_10080659C(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, uint64_t))
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v18 = a1;
    else
      v18 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v5 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v6 = *v2;
  if (!((unint64_t)*v2 >> 62))
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    v8 = v7 + v5;
    if (!__OFADD__(v7, v5))
      goto LABEL_5;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v6 < 0)
    v19 = *v2;
  else
    v19 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v2);
  v7 = _CocoaArrayWrapper.endIndex.getter(v19);
  swift_bridgeObjectRelease(v6);
  v8 = v7 + v5;
  if (__OFADD__(v7, v5))
    goto LABEL_29;
LABEL_5:
  v6 = *v2;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v2);
  *v2 = v6;
  v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v7 = 1;
  }
  if ((unint64_t)v6 >> 62)
    goto LABEL_31;
  v11 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8)
      v11 = v8;
    swift_bridgeObjectRetain(v6);
    v6 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v7, v11, 1, v6);
    swift_bridgeObjectRelease(*v2);
    *v2 = v6;
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = a2(v10 + 8 * *(_QWORD *)(v10 + 16) + 32, (*(_QWORD *)(v10 + 24) >> 1) - *(_QWORD *)(v10 + 16), a1);
    if (v13 >= v5)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v6 < 0)
      v20 = v6;
    else
      v20 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v11 = _CocoaArrayWrapper.endIndex.getter(v20);
    swift_bridgeObjectRelease(v6);
  }
  if (v13 < 1)
    goto LABEL_19;
  v14 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v15 = __OFADD__(v14, v13);
  v16 = v14 + v13;
  if (!v15)
  {
    *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
LABEL_19:
    v17 = swift_bridgeObjectRelease(result);
    return specialized Array._endMutation()(v17);
  }
  __break(1u);
  return result;
}

uint64_t sub_100806758(uint64_t a1)
{
  unint64_t *v1;
  unint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t *v20;
  char *v21;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(_QWORD *, _QWORD);
  char *v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  int64_t v48;
  int64_t v49;
  uint64_t v50;
  unint64_t v51;
  int64_t v52;
  uint64_t v53;
  uint64_t v54;
  int64_t v55;
  unint64_t v56;
  char *v57;
  unint64_t v58;
  char *v59;
  char *v60;
  void (*v61)(_QWORD *, _QWORD);
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  void (*v68)(unint64_t, char *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  void (*v75)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v76;
  void (*v77)(unint64_t, char *, uint64_t);
  int64_t v78;
  int64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t, uint64_t);
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  _QWORD v92[5];

  v2 = v1;
  v87 = type metadata accessor for Playlist.Folder.Item(0);
  v4 = *(_QWORD *)(v87 - 8);
  __chkstk_darwin(v87);
  v85 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011AD730);
  __chkstk_darwin(v6);
  v86 = (uint64_t)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v82 = (uint64_t)&v73 - v9;
  __chkstk_darwin(v10);
  v88 = (uint64_t)&v73 - v11;
  v12 = sub_100007E8C((uint64_t *)&unk_1011AD720);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v89 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = sub_100007E8C((uint64_t *)&unk_1011C9A40);
  __chkstk_darwin(v80);
  v91 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (void (*)(uint64_t, uint64_t))sub_100049F28(&qword_1011B56B0, (uint64_t *)&unk_1011AD720, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  v17 = dispatch thunk of Sequence.underestimatedCount.getter(v12, v16);
  v18 = *v1;
  v19 = *(_QWORD *)(*v2 + 16);
  v20 = (unint64_t *)(v19 + v17);
  if (__OFADD__(v19, v17))
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v21 = (char *)v17;
  v90 = v12;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v18);
  *v2 = v18;
  if (isUniquelyReferenced_nonNull_native && (v23 = *(_QWORD *)(v18 + 24) >> 1, v23 >= (uint64_t)v20))
  {
    v20 = v2;
  }
  else
  {
    if (v19 <= (uint64_t)v20)
      v24 = (int64_t)v20;
    else
      v24 = v19;
    v18 = sub_100432958(isUniquelyReferenced_nonNull_native, v24, 1, v18);
    v20 = v2;
    *v2 = v18;
    v23 = *(_QWORD *)(v18 + 24) >> 1;
  }
  v25 = *(_QWORD *)(v18 + 16);
  v26 = *(_QWORD *)(v4 + 72);
  v27 = v23 - v25;
  v81 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v28 = v18 + v81 + v26 * v25;
  v29 = (uint64_t)v89;
  v12 = v90;
  v83 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v84 = v26;
  v83(v89, a1, v90);
  v30 = dispatch thunk of Sequence._copyContents(initializing:)(v91, v28, v27, v12, v16);
  v16 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
  v16(a1, v12);
  if (v30 < (uint64_t)v21)
    goto LABEL_17;
  if (v30 >= 1)
  {
    v31 = *(_QWORD *)(*v20 + 16);
    v32 = __OFADD__(v31, v30);
    v33 = v31 + v30;
    if (v32)
    {
      __break(1u);
      goto LABEL_21;
    }
    *(_QWORD *)(*v20 + 16) = v33;
  }
  if (v30 != v27)
  {
    v34 = (uint64_t *)&unk_1011C9A40;
    v35 = (uint64_t)v91;
    return sub_10004FF60(v35, v34);
  }
LABEL_18:
  v79 = *(_QWORD *)(*v20 + 16);
  v27 = (uint64_t)v91;
  v21 = &v91[*(int *)(v80 + 36)];
  v37 = *(_QWORD *)v21;
  v29 = sub_100049F28((unint64_t *)&qword_1011AD880, (uint64_t *)&unk_1011AD720, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  dispatch thunk of Collection.endIndex.getter(v92, v12, v29);
  v76 = v29;
  if (v37 != v92[0])
  {
LABEL_21:
    v43 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v92, v21, v12, v29);
    v39 = v87;
    v40 = v88;
    (*(void (**)(uint64_t))(v4 + 16))(v88);
    v43(v92, 0);
    v44 = v89;
    v83(v89, v27, v12);
    dispatch thunk of Collection.formIndex(after:)(v21, v12, v29);
    v16((uint64_t)v44, v12);
    v38 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v41 = v40;
    v42 = 0;
    goto LABEL_22;
  }
  v38 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
  v39 = v87;
  v40 = v88;
  v41 = v88;
  v42 = 1;
LABEL_22:
  v75 = v38;
  v38(v41, v42, 1, v39);
  v45 = v82;
  v46 = v86;
  sub_10004A160(v40, v82, (uint64_t *)&unk_1011AD730);
  v80 = *(_QWORD *)(v4 + 48);
  v47 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v80)(v45, 1, v39);
  v48 = v79;
  if (v47 != 1)
  {
    v74 = v21;
    do
    {
      sub_10004FF60(v45, (uint64_t *)&unk_1011AD730);
      v50 = *v20;
      v51 = *(_QWORD *)(*v20 + 24);
      v52 = v51 >> 1;
      if ((uint64_t)(v51 >> 1) < v48 + 1)
      {
        v50 = sub_100432958(v51 > 1, v48 + 1, 1, *v20);
        *v20 = v50;
        v52 = *(_QWORD *)(v50 + 24) >> 1;
      }
      sub_10004A160(v88, v46, (uint64_t *)&unk_1011AD730);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v80)(v46, 1, v87) == 1)
      {
        v54 = v86;
        v53 = v87;
LABEL_31:
        sub_10004FF60(v54, (uint64_t *)&unk_1011AD730);
        v49 = v48;
        v46 = v54;
      }
      else
      {
        if (v48 <= v52)
          v55 = v52;
        else
          v55 = v48;
        v77 = *(void (**)(unint64_t, char *, uint64_t))(v4 + 32);
        v78 = v55;
        v56 = v50 + v81;
        v57 = v85;
        v58 = v56 + v84 * v48;
        v54 = v86;
        v53 = v87;
        while (1)
        {
          v67 = v54;
          v68 = v77;
          v77((unint64_t)v57, (char *)v67, v53);
          if (v78 == v48)
            break;
          v79 = v48;
          v69 = v88;
          sub_10004FF60(v88, (uint64_t *)&unk_1011AD730);
          v68(v58, v57, v53);
          v70 = *(_QWORD *)v21;
          v63 = v21;
          v71 = v90;
          v72 = v76;
          dispatch thunk of Collection.endIndex.getter(v92, v90, v76);
          if (v70 == v92[0])
          {
            v64 = v69;
            v65 = 1;
            v53 = v87;
          }
          else
          {
            v59 = v63;
            v60 = v91;
            v61 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v92, v59, v71, v72);
            v53 = v87;
            (*(void (**)(uint64_t))(v4 + 16))(v69);
            v61(v92, 0);
            v62 = v89;
            v83(v89, (uint64_t)v60, v71);
            v63 = v74;
            dispatch thunk of Collection.formIndex(after:)(v74, v71, v72);
            v16((uint64_t)v62, v71);
            v64 = v69;
            v65 = 0;
          }
          v75(v64, v65, 1, v53);
          v21 = v63;
          v54 = v86;
          sub_10004A160(v69, v86, (uint64_t *)&unk_1011AD730);
          v66 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v80)(v54, 1, v53);
          v57 = v85;
          v58 += v84;
          v48 = v79 + 1;
          v27 = (uint64_t)v91;
          if (v66 == 1)
            goto LABEL_31;
        }
        (*(void (**)(char *, uint64_t))(v4 + 8))(v57, v53);
        v49 = v78;
        v48 = v78;
        v46 = v86;
      }
      *(_QWORD *)(*v20 + 16) = v49;
      v45 = v82;
      sub_10004A160(v88, v82, (uint64_t *)&unk_1011AD730);
    }
    while (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v80)(v45, 1, v53) != 1);
  }
  sub_10004FF60(v88, (uint64_t *)&unk_1011AD730);
  sub_10004FF60(v27, (uint64_t *)&unk_1011C9A40);
  v35 = v45;
  v34 = (uint64_t *)&unk_1011AD730;
  return sub_10004FF60(v35, v34);
}

void sub_100806E4C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  char v15;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_100432C44(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[v8 + 4];
  if (a1 + 32 < v9 + 8 * v2 && v9 < a1 + 32 + 8 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy(v9);
  if (!v2)
  {
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v15 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v15, 1092, 0);
  __break(1u);
}

uint64_t sub_100806F9C(uint64_t a1)
{
  return sub_10080659C(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_100812660);
}

void sub_100806FA8(uint64_t a1)
{
  unint64_t *v1;
  unint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  int64_t v24;
  char v25;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v1);
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v24 = v4 + v2;
  else
    v24 = v4;
  v3 = sub_100432FE8(isUniquelyReferenced_nonNull_native, v24, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = *(_QWORD *)(v3 + 16);
  v10 = (*(_QWORD *)(v3 + 24) >> 1) - v9;
  v11 = sub_100007E8C(&qword_1011B3D60);
  if (v10 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = *(_QWORD *)(v12 + 72);
  v15 = v3 + v13 + v14 * v9;
  v16 = a1 + v13;
  v17 = v14 * v8;
  v18 = v15 + v17;
  v19 = v16 + v17;
  if (v16 < v18 && v15 < v19)
    goto LABEL_24;
  swift_arrayInitWithCopy(v15);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v21 = *(_QWORD *)(v3 + 16);
  v22 = __OFADD__(v21, v8);
  v23 = v21 + v8;
  if (!v22)
  {
    *(_QWORD *)(v3 + 16) = v23;
LABEL_19:
    swift_bridgeObjectRelease();
    *v1 = v3;
    return;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v25 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v25, 1092, 0);
  __break(1u);
}

void sub_100807120(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  char v15;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_100432FFC(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[15 * v8 + 4];
  if (a1 + 32 < v9 + 120 * v2 && v9 < a1 + 32 + 120 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy(v9);
  if (!v2)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    *v1 = v3;
    return;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v15 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v15, 1092, 0);
  __break(1u);
}

uint64_t sub_100807278(uint64_t a1)
{
  return sub_10080659C(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_10081286C);
}

void sub_100807284(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  char v16;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native)
  {
    v8 = v3[3] >> 1;
    if (v8 >= v5)
    {
      if (*(_QWORD *)(a1 + 16))
        goto LABEL_5;
      goto LABEL_18;
    }
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_100432F98(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = v3[3] >> 1;
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v9 = v3[2];
  if (v8 - v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[2 * v9 + 4];
  if (a1 + 32 < v10 + 16 * v2 && v10 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  sub_100007E8C(&qword_1011B3C58);
  swift_arrayInitWithCopy(v10);
  if (!v2)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    *v1 = v3;
    return;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v2);
  v14 = v12 + v2;
  if (!v13)
  {
    v3[2] = v14;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v16 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v16, 1092, 0);
  __break(1u);
}

void sub_1008073EC(uint64_t a1)
{
  unint64_t *v1;
  unint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  int64_t v24;
  char v25;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v1);
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v24 = v4 + v2;
  else
    v24 = v4;
  v3 = sub_10043337C(isUniquelyReferenced_nonNull_native, v24, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = *(_QWORD *)(v3 + 16);
  v10 = (*(_QWORD *)(v3 + 24) >> 1) - v9;
  v11 = type metadata accessor for URLQueryItem(0);
  if (v10 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = *(_QWORD *)(v12 + 72);
  v15 = v3 + v13 + v14 * v9;
  v16 = a1 + v13;
  v17 = v14 * v8;
  v18 = v15 + v17;
  v19 = v16 + v17;
  if (v16 < v18 && v15 < v19)
    goto LABEL_24;
  swift_arrayInitWithCopy(v15);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v21 = *(_QWORD *)(v3 + 16);
  v22 = __OFADD__(v21, v8);
  v23 = v21 + v8;
  if (!v22)
  {
    *(_QWORD *)(v3 + 16) = v23;
LABEL_19:
    swift_bridgeObjectRelease();
    *v1 = v3;
    return;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v25 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v25, 1092, 0);
  __break(1u);
}

void sub_100807560(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  char v15;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_100431480(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy(v9);
  if (!v2)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    *v1 = v3;
    return;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v15 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v15, 1092, 0);
  __break(1u);
}

uint64_t sub_1008076B0(uint64_t a1)
{
  unint64_t *v1;
  unint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t *v20;
  char *v21;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(_QWORD *, _QWORD);
  char *v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  int64_t v48;
  int64_t v49;
  uint64_t v50;
  unint64_t v51;
  int64_t v52;
  uint64_t v53;
  uint64_t v54;
  int64_t v55;
  unint64_t v56;
  char *v57;
  unint64_t v58;
  char *v59;
  char *v60;
  void (*v61)(_QWORD *, _QWORD);
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  void (*v68)(unint64_t, char *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  void (*v75)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v76;
  void (*v77)(unint64_t, char *, uint64_t);
  int64_t v78;
  int64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t, uint64_t);
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  _QWORD v92[5];

  v2 = v1;
  v87 = type metadata accessor for RecentlyAddedMusicItem(0);
  v4 = *(_QWORD *)(v87 - 8);
  __chkstk_darwin(v87);
  v85 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011BC830);
  __chkstk_darwin(v6);
  v86 = (uint64_t)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v82 = (uint64_t)&v73 - v9;
  __chkstk_darwin(v10);
  v88 = (uint64_t)&v73 - v11;
  v12 = sub_100007E8C((uint64_t *)&unk_1011CF300);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v89 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = sub_100007E8C(&qword_1011CAD08);
  __chkstk_darwin(v80);
  v91 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (void (*)(uint64_t, uint64_t))sub_100049F28(&qword_1011CAD10, (uint64_t *)&unk_1011CF300, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  v17 = dispatch thunk of Sequence.underestimatedCount.getter(v12, v16);
  v18 = *v1;
  v19 = *(_QWORD *)(*v2 + 16);
  v20 = (unint64_t *)(v19 + v17);
  if (__OFADD__(v19, v17))
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v21 = (char *)v17;
  v90 = v12;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v18);
  *v2 = v18;
  if (isUniquelyReferenced_nonNull_native && (v23 = *(_QWORD *)(v18 + 24) >> 1, v23 >= (uint64_t)v20))
  {
    v20 = v2;
  }
  else
  {
    if (v19 <= (uint64_t)v20)
      v24 = (int64_t)v20;
    else
      v24 = v19;
    v18 = sub_100433390(isUniquelyReferenced_nonNull_native, v24, 1, v18);
    v20 = v2;
    *v2 = v18;
    v23 = *(_QWORD *)(v18 + 24) >> 1;
  }
  v25 = *(_QWORD *)(v18 + 16);
  v26 = *(_QWORD *)(v4 + 72);
  v27 = v23 - v25;
  v81 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v28 = v18 + v81 + v26 * v25;
  v29 = (uint64_t)v89;
  v12 = v90;
  v83 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v84 = v26;
  v83(v89, a1, v90);
  v30 = dispatch thunk of Sequence._copyContents(initializing:)(v91, v28, v27, v12, v16);
  v16 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
  v16(a1, v12);
  if (v30 < (uint64_t)v21)
    goto LABEL_17;
  if (v30 >= 1)
  {
    v31 = *(_QWORD *)(*v20 + 16);
    v32 = __OFADD__(v31, v30);
    v33 = v31 + v30;
    if (v32)
    {
      __break(1u);
      goto LABEL_21;
    }
    *(_QWORD *)(*v20 + 16) = v33;
  }
  if (v30 != v27)
  {
    v34 = &qword_1011CAD08;
    v35 = (uint64_t)v91;
    return sub_10004FF60(v35, v34);
  }
LABEL_18:
  v79 = *(_QWORD *)(*v20 + 16);
  v27 = (uint64_t)v91;
  v21 = &v91[*(int *)(v80 + 36)];
  v37 = *(_QWORD *)v21;
  v29 = sub_100049F28((unint64_t *)&unk_1011CF390, (uint64_t *)&unk_1011CF300, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  dispatch thunk of Collection.endIndex.getter(v92, v12, v29);
  v76 = v29;
  if (v37 != v92[0])
  {
LABEL_21:
    v43 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v92, v21, v12, v29);
    v39 = v87;
    v40 = v88;
    (*(void (**)(uint64_t))(v4 + 16))(v88);
    v43(v92, 0);
    v44 = v89;
    v83(v89, v27, v12);
    dispatch thunk of Collection.formIndex(after:)(v21, v12, v29);
    v16((uint64_t)v44, v12);
    v38 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v41 = v40;
    v42 = 0;
    goto LABEL_22;
  }
  v38 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
  v39 = v87;
  v40 = v88;
  v41 = v88;
  v42 = 1;
LABEL_22:
  v75 = v38;
  v38(v41, v42, 1, v39);
  v45 = v82;
  v46 = v86;
  sub_10004A160(v40, v82, (uint64_t *)&unk_1011BC830);
  v80 = *(_QWORD *)(v4 + 48);
  v47 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v80)(v45, 1, v39);
  v48 = v79;
  if (v47 != 1)
  {
    v74 = v21;
    do
    {
      sub_10004FF60(v45, (uint64_t *)&unk_1011BC830);
      v50 = *v20;
      v51 = *(_QWORD *)(*v20 + 24);
      v52 = v51 >> 1;
      if ((uint64_t)(v51 >> 1) < v48 + 1)
      {
        v50 = sub_100433390(v51 > 1, v48 + 1, 1, *v20);
        *v20 = v50;
        v52 = *(_QWORD *)(v50 + 24) >> 1;
      }
      sub_10004A160(v88, v46, (uint64_t *)&unk_1011BC830);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v80)(v46, 1, v87) == 1)
      {
        v54 = v86;
        v53 = v87;
LABEL_31:
        sub_10004FF60(v54, (uint64_t *)&unk_1011BC830);
        v49 = v48;
        v46 = v54;
      }
      else
      {
        if (v48 <= v52)
          v55 = v52;
        else
          v55 = v48;
        v77 = *(void (**)(unint64_t, char *, uint64_t))(v4 + 32);
        v78 = v55;
        v56 = v50 + v81;
        v57 = v85;
        v58 = v56 + v84 * v48;
        v54 = v86;
        v53 = v87;
        while (1)
        {
          v67 = v54;
          v68 = v77;
          v77((unint64_t)v57, (char *)v67, v53);
          if (v78 == v48)
            break;
          v79 = v48;
          v69 = v88;
          sub_10004FF60(v88, (uint64_t *)&unk_1011BC830);
          v68(v58, v57, v53);
          v70 = *(_QWORD *)v21;
          v63 = v21;
          v71 = v90;
          v72 = v76;
          dispatch thunk of Collection.endIndex.getter(v92, v90, v76);
          if (v70 == v92[0])
          {
            v64 = v69;
            v65 = 1;
            v53 = v87;
          }
          else
          {
            v59 = v63;
            v60 = v91;
            v61 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v92, v59, v71, v72);
            v53 = v87;
            (*(void (**)(uint64_t))(v4 + 16))(v69);
            v61(v92, 0);
            v62 = v89;
            v83(v89, (uint64_t)v60, v71);
            v63 = v74;
            dispatch thunk of Collection.formIndex(after:)(v74, v71, v72);
            v16((uint64_t)v62, v71);
            v64 = v69;
            v65 = 0;
          }
          v75(v64, v65, 1, v53);
          v21 = v63;
          v54 = v86;
          sub_10004A160(v69, v86, (uint64_t *)&unk_1011BC830);
          v66 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v80)(v54, 1, v53);
          v57 = v85;
          v58 += v84;
          v48 = v79 + 1;
          v27 = (uint64_t)v91;
          if (v66 == 1)
            goto LABEL_31;
        }
        (*(void (**)(char *, uint64_t))(v4 + 8))(v57, v53);
        v49 = v78;
        v48 = v78;
        v46 = v86;
      }
      *(_QWORD *)(*v20 + 16) = v49;
      v45 = v82;
      sub_10004A160(v88, v82, (uint64_t *)&unk_1011BC830);
    }
    while (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v80)(v45, 1, v53) != 1);
  }
  sub_10004FF60(v88, (uint64_t *)&unk_1011BC830);
  sub_10004FF60(v27, &qword_1011CAD08);
  v35 = v45;
  v34 = (uint64_t *)&unk_1011BC830;
  return sub_10004FF60(v35, v34);
}

void sub_100807DA4(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  int64_t v23;
  char v24;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v1);
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v23 = v4 + v2;
  else
    v23 = v4;
  v3 = sub_100431A00(isUniquelyReferenced_nonNull_native, v23, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = *(_QWORD *)(v3 + 16);
  v9 = (*(_QWORD *)(v3 + 24) >> 1) - v8;
  v10 = type metadata accessor for NavigationDestinationItem(0);
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 72);
  v14 = v3 + v12 + v13 * v8;
  v15 = a1 + v12;
  v16 = v13 * v2;
  v17 = v14 + v16;
  v18 = v15 + v16;
  if (v15 < v17 && v14 < v18)
    goto LABEL_24;
  swift_arrayInitWithCopy(v14);
  if (!v2)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    *v1 = v3;
    return;
  }
  v20 = *(_QWORD *)(v3 + 16);
  v21 = __OFADD__(v20, v2);
  v22 = v20 + v2;
  if (!v21)
  {
    *(_QWORD *)(v3 + 16) = v22;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v24 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v24, 1092, 0);
  __break(1u);
}

uint64_t sub_100807F0C(uint64_t a1)
{
  unint64_t *v1;
  unint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t *v20;
  char *v21;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(_QWORD *, _QWORD);
  char *v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  int64_t v48;
  int64_t v49;
  uint64_t v50;
  unint64_t v51;
  int64_t v52;
  uint64_t v53;
  uint64_t v54;
  int64_t v55;
  unint64_t v56;
  char *v57;
  unint64_t v58;
  char *v59;
  char *v60;
  void (*v61)(_QWORD *, _QWORD);
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  void (*v68)(unint64_t, char *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  void (*v75)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v76;
  void (*v77)(unint64_t, char *, uint64_t);
  int64_t v78;
  int64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t, uint64_t);
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  _QWORD v92[5];

  v2 = v1;
  v87 = type metadata accessor for Playlist(0);
  v4 = *(_QWORD *)(v87 - 8);
  __chkstk_darwin(v87);
  v85 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011A30F0);
  __chkstk_darwin(v6);
  v86 = (uint64_t)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v82 = (uint64_t)&v73 - v9;
  __chkstk_darwin(v10);
  v88 = (uint64_t)&v73 - v11;
  v12 = sub_100007E8C((uint64_t *)&unk_1011ACAD0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v89 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = sub_100007E8C(&qword_1011B56D8);
  __chkstk_darwin(v80);
  v91 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (void (*)(uint64_t, uint64_t))sub_100049F28(&qword_1011B56D0, (uint64_t *)&unk_1011ACAD0, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  v17 = dispatch thunk of Sequence.underestimatedCount.getter(v12, v16);
  v18 = *v1;
  v19 = *(_QWORD *)(*v2 + 16);
  v20 = (unint64_t *)(v19 + v17);
  if (__OFADD__(v19, v17))
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v21 = (char *)v17;
  v90 = v12;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v18);
  *v2 = v18;
  if (isUniquelyReferenced_nonNull_native && (v23 = *(_QWORD *)(v18 + 24) >> 1, v23 >= (uint64_t)v20))
  {
    v20 = v2;
  }
  else
  {
    if (v19 <= (uint64_t)v20)
      v24 = (int64_t)v20;
    else
      v24 = v19;
    v18 = sub_100432994(isUniquelyReferenced_nonNull_native, v24, 1, v18);
    v20 = v2;
    *v2 = v18;
    v23 = *(_QWORD *)(v18 + 24) >> 1;
  }
  v25 = *(_QWORD *)(v18 + 16);
  v26 = *(_QWORD *)(v4 + 72);
  v27 = v23 - v25;
  v81 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v28 = v18 + v81 + v26 * v25;
  v29 = (uint64_t)v89;
  v12 = v90;
  v83 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v84 = v26;
  v83(v89, a1, v90);
  v30 = dispatch thunk of Sequence._copyContents(initializing:)(v91, v28, v27, v12, v16);
  v16 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
  v16(a1, v12);
  if (v30 < (uint64_t)v21)
    goto LABEL_17;
  if (v30 >= 1)
  {
    v31 = *(_QWORD *)(*v20 + 16);
    v32 = __OFADD__(v31, v30);
    v33 = v31 + v30;
    if (v32)
    {
      __break(1u);
      goto LABEL_21;
    }
    *(_QWORD *)(*v20 + 16) = v33;
  }
  if (v30 != v27)
  {
    v34 = &qword_1011B56D8;
    v35 = (uint64_t)v91;
    return sub_10004FF60(v35, v34);
  }
LABEL_18:
  v79 = *(_QWORD *)(*v20 + 16);
  v27 = (uint64_t)v91;
  v21 = &v91[*(int *)(v80 + 36)];
  v37 = *(_QWORD *)v21;
  v29 = sub_100049F28((unint64_t *)&unk_1011B56E0, (uint64_t *)&unk_1011ACAD0, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  dispatch thunk of Collection.endIndex.getter(v92, v12, v29);
  v76 = v29;
  if (v37 != v92[0])
  {
LABEL_21:
    v43 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v92, v21, v12, v29);
    v39 = v87;
    v40 = v88;
    (*(void (**)(uint64_t))(v4 + 16))(v88);
    v43(v92, 0);
    v44 = v89;
    v83(v89, v27, v12);
    dispatch thunk of Collection.formIndex(after:)(v21, v12, v29);
    v16((uint64_t)v44, v12);
    v38 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v41 = v40;
    v42 = 0;
    goto LABEL_22;
  }
  v38 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
  v39 = v87;
  v40 = v88;
  v41 = v88;
  v42 = 1;
LABEL_22:
  v75 = v38;
  v38(v41, v42, 1, v39);
  v45 = v82;
  v46 = v86;
  sub_10004A160(v40, v82, &qword_1011A30F0);
  v80 = *(_QWORD *)(v4 + 48);
  v47 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v80)(v45, 1, v39);
  v48 = v79;
  if (v47 != 1)
  {
    v74 = v21;
    do
    {
      sub_10004FF60(v45, &qword_1011A30F0);
      v50 = *v20;
      v51 = *(_QWORD *)(*v20 + 24);
      v52 = v51 >> 1;
      if ((uint64_t)(v51 >> 1) < v48 + 1)
      {
        v50 = sub_100432994(v51 > 1, v48 + 1, 1, *v20);
        *v20 = v50;
        v52 = *(_QWORD *)(v50 + 24) >> 1;
      }
      sub_10004A160(v88, v46, &qword_1011A30F0);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v80)(v46, 1, v87) == 1)
      {
        v54 = v86;
        v53 = v87;
LABEL_31:
        sub_10004FF60(v54, &qword_1011A30F0);
        v49 = v48;
        v46 = v54;
      }
      else
      {
        if (v48 <= v52)
          v55 = v52;
        else
          v55 = v48;
        v77 = *(void (**)(unint64_t, char *, uint64_t))(v4 + 32);
        v78 = v55;
        v56 = v50 + v81;
        v57 = v85;
        v58 = v56 + v84 * v48;
        v54 = v86;
        v53 = v87;
        while (1)
        {
          v67 = v54;
          v68 = v77;
          v77((unint64_t)v57, (char *)v67, v53);
          if (v78 == v48)
            break;
          v79 = v48;
          v69 = v88;
          sub_10004FF60(v88, &qword_1011A30F0);
          v68(v58, v57, v53);
          v70 = *(_QWORD *)v21;
          v63 = v21;
          v71 = v90;
          v72 = v76;
          dispatch thunk of Collection.endIndex.getter(v92, v90, v76);
          if (v70 == v92[0])
          {
            v64 = v69;
            v65 = 1;
            v53 = v87;
          }
          else
          {
            v59 = v63;
            v60 = v91;
            v61 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v92, v59, v71, v72);
            v53 = v87;
            (*(void (**)(uint64_t))(v4 + 16))(v69);
            v61(v92, 0);
            v62 = v89;
            v83(v89, (uint64_t)v60, v71);
            v63 = v74;
            dispatch thunk of Collection.formIndex(after:)(v74, v71, v72);
            v16((uint64_t)v62, v71);
            v64 = v69;
            v65 = 0;
          }
          v75(v64, v65, 1, v53);
          v21 = v63;
          v54 = v86;
          sub_10004A160(v69, v86, &qword_1011A30F0);
          v66 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v80)(v54, 1, v53);
          v57 = v85;
          v58 += v84;
          v48 = v79 + 1;
          v27 = (uint64_t)v91;
          if (v66 == 1)
            goto LABEL_31;
        }
        (*(void (**)(char *, uint64_t))(v4 + 8))(v57, v53);
        v49 = v78;
        v48 = v78;
        v46 = v86;
      }
      *(_QWORD *)(*v20 + 16) = v49;
      v45 = v82;
      sub_10004A160(v88, v82, &qword_1011A30F0);
    }
    while (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v80)(v45, 1, v53) != 1);
  }
  sub_10004FF60(v88, &qword_1011A30F0);
  sub_10004FF60(v27, &qword_1011B56D8);
  v35 = v45;
  v34 = &qword_1011A30F0;
  return sub_10004FF60(v35, v34);
}

_QWORD *JSMenu.items.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  void *v9;
  uint64_t *v10;
  uint64_t v11;
  _QWORD *result;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  _BYTE v17[24];

  v0 = JSMenu.sections.getter();
  if ((unint64_t)v0 >> 62)
  {
    if (v0 >= 0)
      v0 &= 0xFFFFFFFFFFFFFF8uLL;
    v1 = _CocoaArrayWrapper.endIndex.getter(v0);
  }
  else
  {
    v1 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  v2 = JSMenu.sections.getter();
  v3 = v2;
  v4 = (unint64_t)v2 >> 62;
  if (v1 >= 2)
  {
    if (v4)
    {
      if (v2 < 0)
        v16 = v2;
      else
        v16 = v2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v5 = _CocoaArrayWrapper.endIndex.getter(v16);
      if (v5)
        goto LABEL_6;
    }
    else
    {
      v5 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v5)
      {
LABEL_6:
        if (v5 >= 1)
        {
          v6 = 0;
          v7 = _swiftEmptyArrayStorage;
          do
          {
            if ((v3 & 0xC000000000000001) != 0)
              v8 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v3);
            else
              v8 = (char *)*(id *)(v3 + 8 * v6 + 32);
            v9 = v8;
            ++v6;
            v10 = (uint64_t *)&v8[OBJC_IVAR____TtC11MusicJSCore13JSMenuSection_items];
            swift_beginAccess(&v8[OBJC_IVAR____TtC11MusicJSCore13JSMenuSection_items], v17, 0, 0);
            v11 = *v10;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_100806098(v11, (unint64_t *)type metadata accessor for JSMenuItem, &qword_1011CB028, &qword_1011CB020, (uint64_t *)sub_100812A88);
            swift_bridgeObjectRelease();

          }
          while (v5 != v6);
          swift_bridgeObjectRelease_n(v3, 2);
          return v7;
        }
        __break(1u);
        goto LABEL_34;
      }
    }
    swift_bridgeObjectRelease_n(v3, 2);
    return _swiftEmptyArrayStorage;
  }
  if (!v4)
  {
    result = *(_QWORD **)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (result)
      goto LABEL_14;
LABEL_30:
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  if (v2 >= 0)
    v2 &= 0xFFFFFFFFFFFFFF8uLL;
  result = (_QWORD *)_CocoaArrayWrapper.endIndex.getter(v2);
  if (!result)
    goto LABEL_30;
LABEL_14:
  if ((v3 & 0xC000000000000001) != 0)
  {
LABEL_34:
    v13 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v3);
    goto LABEL_17;
  }
  if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v13 = (char *)*(id *)(v3 + 32);
LABEL_17:
    v14 = v13;
    swift_bridgeObjectRelease();
    v15 = &v14[OBJC_IVAR____TtC11MusicJSCore13JSMenuSection_items];
    swift_beginAccess(&v14[OBJC_IVAR____TtC11MusicJSCore13JSMenuSection_items], v17, 0, 0);
    v7 = *(_QWORD **)v15;
    swift_bridgeObjectRetain();

    return v7;
  }
  __break(1u);
  return result;
}

uint64_t sub_100808864@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  int v19;
  int v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  double *v36;
  uint64_t (**v37)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t (**v38)@<X0>(uint64_t@<X8>);
  uint64_t (**v39)@<X0>(id *@<X1>, uint64_t@<X8>);
  char *v40;
  uint64_t v42;
  uint64_t v43;

  v43 = a2;
  v4 = sub_100007E8C(&qword_1011A79B0);
  __chkstk_darwin(v4);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)sub_100007E8C(&qword_1011A79B8);
  __chkstk_darwin(v7);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = swift_allocObject(&unk_1010DD8C0, 24, 7);
  *(_QWORD *)(v10 + 16) = v2;
  sub_10004A160(a1, (uint64_t)v6, &qword_1011A79B0);
  v11 = v2;
  v42 = static HorizontalAlignment.leading.getter(v11);
  v12 = swift_allocObject(&unk_1010DD8E8, 24, 7);
  *(_QWORD *)(v12 + 16) = v11;
  v13 = swift_allocObject(&unk_1010DD910, 24, 7);
  *(_QWORD *)(v13 + 16) = v11;
  v14 = swift_allocObject(&unk_1010DD938, 24, 7);
  *(_QWORD *)(v14 + 16) = v11;
  v15 = static Edge.Set.top.getter(v11);
  v16 = v15;
  v17 = static Edge.Set.bottom.getter(v15);
  v18 = Edge.Set.init(rawValue:)(0);
  v19 = Edge.Set.init(rawValue:)(v18);
  if (Edge.Set.init(rawValue:)(v19 & v16) != v16)
    v18 = Edge.Set.init(rawValue:)(v18 | v16);
  v20 = Edge.Set.init(rawValue:)(v18);
  if (Edge.Set.init(rawValue:)(v20 & v17) != v17)
    v18 = Edge.Set.init(rawValue:)(v18 | v17);
  v21 = EdgeInsets.init(_:length:)(v18, 12.0);
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v29 = static VerticalAlignment.top.getter(v28);
  v30 = &v9[v7[32]];
  *(_QWORD *)v30 = swift_getKeyPath(&unk_100ED1BA0);
  *((_QWORD *)v30 + 1) = 0;
  v30[16] = 0;
  v31 = &v9[v7[33]];
  *(_QWORD *)v31 = swift_getKeyPath(&unk_100ED1BC8);
  v31[8] = 0;
  v32 = &v9[v7[34]];
  *(_QWORD *)v32 = swift_getKeyPath(&unk_100ED1BF0);
  v33 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  swift_storeEnumTagMultiPayload(v32, v33, 0);
  v34 = &v9[v7[35]];
  *(_QWORD *)v34 = swift_getKeyPath(&unk_100ED1C20);
  *(_OWORD *)(v34 + 8) = 0u;
  *(_OWORD *)(v34 + 24) = 0u;
  v34[40] = 0;
  v35 = &v9[v7[36]];
  *(_QWORD *)v35 = swift_getKeyPath(&unk_100ED1C48);
  *((_QWORD *)v35 + 1) = 0;
  *((_QWORD *)v35 + 2) = 0;
  *((_QWORD *)v35 + 3) = 0;
  v35[32] = 0;
  *(_QWORD *)v9 = sub_1000779D8;
  *((_QWORD *)v9 + 1) = v10;
  v9[16] = 2;
  sub_100065228((uint64_t)v6, (uint64_t)&v9[v7[24]], &qword_1011A79B0);
  v36 = (double *)&v9[v7[25]];
  *v36 = v21;
  *((_QWORD *)v36 + 1) = v23;
  *((_QWORD *)v36 + 2) = v25;
  *((_QWORD *)v36 + 3) = v27;
  *(_QWORD *)&v9[v7[26]] = v42;
  *(_QWORD *)&v9[v7[27]] = v29;
  v37 = (uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&v9[v7[28]];
  *v37 = sub_100808BC4;
  v37[1] = 0;
  v38 = (uint64_t (**)@<X0>(uint64_t@<X8>))&v9[v7[29]];
  *v38 = sub_100815EE0;
  v38[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v12;
  v39 = (uint64_t (**)@<X0>(id *@<X1>, uint64_t@<X8>))&v9[v7[30]];
  *v39 = sub_100231EE8;
  v39[1] = (uint64_t (*)@<X0>(id *@<X1>, uint64_t@<X8>))v13;
  v40 = &v9[v7[31]];
  *(_QWORD *)v40 = UIScreen.Dimensions.size.getter;
  *((_QWORD *)v40 + 1) = v14;
  return sub_100065228((uint64_t)v9, v43, &qword_1011A79B8);
}

uint64_t sub_100808BC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v6;
  unsigned int v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  __int128 v11;
  double v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  double v21;
  char v22;
  _QWORD v24[2];
  __int128 v25;
  double v26;
  uint64_t v27;
  char v28;
  _BYTE v29[56];

  v6 = *(double *)(a5 + 8);
  if (v6 <= 1439.0)
    v7 = 1;
  else
    v7 = 2;
  if (v6 > 1129.0)
    v8 = v7;
  else
    v8 = 0;
  if (qword_10119C8A8 != -1)
    swift_once(&qword_10119C8A8, sub_1008094E4);
  v9 = off_1011CAC08;
  v10 = *((_QWORD *)off_1011CAC08 + 2);
  v11 = 0uLL;
  v12 = 0.0;
  if (v10)
  {
    v13 = sub_10079C718(v8);
    if ((v14 & 1) != 0)
    {
      v15 = 0;
      v16 = v9[7] + 48 * v13;
      v10 = *(_QWORD *)v16;
      v17 = *(unsigned __int8 *)(v16 + 8);
      v11 = *(_OWORD *)(v16 + 16);
      v12 = *(double *)(v16 + 32);
      v18 = *(_QWORD *)(v16 + 40);
    }
    else
    {
      v10 = 0;
      v17 = 0;
      v18 = 0;
      v15 = 1;
      v11 = 0uLL;
    }
  }
  else
  {
    v17 = 0;
    v18 = 0;
    v15 = 1;
  }
  v24[0] = v10;
  v24[1] = v17;
  v25 = v11;
  v26 = v12;
  v27 = v18;
  v28 = v15;
  v19 = type metadata accessor for ModuleLayout.Context(0);
  v20 = DynamicTypeSize.isAccessibilitySize.getter(v19);
  if ((v15 & 1) == 0 && (v20 & 1) != 0)
  {
    v21 = v12 + -1.0;
    if (v12 < 1.0)
      v21 = 0.0;
    v26 = v21;
  }
  v22 = *(_BYTE *)a5;
  sub_100065228((uint64_t)v24, (uint64_t)v29, &qword_10119FA68);
  return sub_1000ADCB0(v22, (uint64_t)v29, v6) & 1;
}

uint64_t sub_100808D38@<X0>(uint64_t a1@<X8>)
{
  return JSMenu.headerView()(a1);
}

uint64_t JSMenu.headerView()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  char *v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  __n128 v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  _QWORD v50[2];
  char v51[24];

  v2 = type metadata accessor for AccessibilityTraits(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_10119EBA0);
  v47 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_100007E8C(&qword_10119EBA8);
  __chkstk_darwin(v48);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011CAC10);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v46 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = JSMenu.sections.getter();
  v15 = v14;
  if (!((unint64_t)v14 >> 62))
  {
    result = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (result)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease(v15);
    goto LABEL_15;
  }
  if (v14 >= 0)
    v14 &= 0xFFFFFFFFFFFFFF8uLL;
  result = _CocoaArrayWrapper.endIndex.getter(v14);
  if (!result)
    goto LABEL_14;
LABEL_3:
  if ((v15 & 0xC000000000000001) != 0)
  {
    v17 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v15);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v17 = (char *)*(id *)(v15 + 32);
LABEL_6:
    v49 = v17;
    swift_bridgeObjectRelease(v15);
    v18 = &v49[OBJC_IVAR____TtC11MusicJSCore13JSMenuSection_title];
    swift_beginAccess(&v49[OBJC_IVAR____TtC11MusicJSCore13JSMenuSection_title], v51, 0, 0);
    v19 = *(_QWORD *)v18;
    v20 = *((_QWORD *)v18 + 1);
    v21 = HIBYTE(v20) & 0xF;
    if ((v20 & 0x2000000000000000) == 0)
      v21 = v19 & 0xFFFFFFFFFFFFLL;
    if (v21)
    {
      v50[0] = v19;
      v50[1] = v20;
      v22 = sub_100055B68();
      v44 = v2;
      v23 = v22;
      swift_bridgeObjectRetain();
      v24 = Text.init<A>(_:)(v50, &type metadata for String, v23);
      v26 = v25;
      v43 = v3;
      v28 = v27;
      v45 = v12;
      v29 = v11;
      v30 = a1;
      v32 = v31 & 1;
      Text.with(style:)(0, v24, v25, v31 & 1, v27, (uint64_t)v8);
      sub_100055BAC(v24, v26, v32);
      swift_bridgeObjectRelease(v28);
      v34 = static Edge.Set.all.getter(v33);
      v35 = v47;
      (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v10, v8, v6);
      v36 = v48;
      v37 = &v10[*(int *)(v48 + 36)];
      *v37 = v34;
      a1 = v30;
      v11 = v29;
      v12 = v45;
      *(_OWORD *)(v37 + 8) = xmmword_100EA85B0;
      *(_OWORD *)(v37 + 24) = xmmword_100EA85C0;
      v37[40] = 0;
      v38.n128_f64[0] = (*(double (**)(char *, uint64_t))(v35 + 8))(v8, v6);
      static AccessibilityTraits.isHeader.getter(v38);
      v39 = sub_1000775FC();
      v40 = (uint64_t)v46;
      View.accessibility(addTraits:)(v5, v36, v39);

      (*(void (**)(char *, uint64_t))(v43 + 8))(v5, v44);
      sub_10004FF60((uint64_t)v10, &qword_10119EBA8);
      sub_100065228(v40, a1, &qword_1011CAC10);
      v41 = 0;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(a1, v41, 1, v11);
    }

LABEL_15:
    v41 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(a1, v41, 1, v11);
  }
  __break(1u);
  return result;
}

uint64_t sub_1008090BC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAE034, 1);
}

uint64_t sub_1008090CC@<X0>(id *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t (*v13)(void);
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  int *v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;

  v4 = sub_100007E8C(&qword_1011CADB8);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_100007E8C(&qword_1011CADC0);
  __chkstk_darwin(v7);
  v9 = (uint64_t *)((char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_100007E8C(&qword_1011CADC8);
  __chkstk_darwin(v10);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(uint64_t (**)(void))((swift_isaMask & *(_QWORD *)*a1) + 0x98);
  v14 = *a1;
  v15 = v13();
  if (v15)
  {
    v16 = v15;
    v17 = (*(uint64_t (**)(void))((swift_isaMask & *v14) + 0xB0))();
    *v6 = v16;
    v6[1] = v17;
    v6[2] = v18;
    v19 = (_QWORD *)swift_storeEnumTagMultiPayload(v6, v4, 0);
  }
  else
  {
    v20 = (int *)type metadata accessor for SegueContext(0);
    v21 = (char *)v6 + v20[5];
    v22 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
    *v6 = (uint64_t)v14;
    *((_BYTE *)v6 + v20[6]) = 0;
    v23 = (uint64_t *)((char *)v6 + v20[7]);
    *v23 = 0;
    v23[1] = 0;
    swift_storeEnumTagMultiPayload(v6, v4, 1);
    v19 = v14;
  }
  v24 = (*(uint64_t (**)(_QWORD *))((swift_isaMask & *v14) + 0x80))(v19);
  v26 = v25;

  *v9 = v24;
  v9[1] = v26;
  sub_100065228((uint64_t)v6, (uint64_t)v9 + *(int *)(v7 + 44), &qword_1011CADB8);
  sub_100065228((uint64_t)v9, (uint64_t)v12, &qword_1011CADC0);
  return sub_100065228((uint64_t)v12, a2, &qword_1011CADC8);
}

uint64_t sub_1008092EC(uint64_t a1)
{
  uint64_t result;

  result = sub_100048748(&qword_1011CAC50, type metadata accessor for JSMenu, (uint64_t)&protocol conformance descriptor for JSMenu);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100809328(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FAE00C, 1);
}

void sub_100809338(uint64_t *a1@<X8>)
{
  id *v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *v1;
  v4 = sub_100815AD8(v3);
  v6 = v5;
  v8 = v7;
  v10 = v9;

  *a1 = v4;
  a1[1] = v6;
  a1[2] = v8;
  a1[3] = v10;
}

unint64_t sub_100809394()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CAC78;
  if (!qword_1011CAC78)
  {
    v1 = sub_100044B54(&qword_1011CAC80);
    sub_1008093F8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1011CAC78);
  }
  return result;
}

unint64_t sub_1008093F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011CAC88;
  if (!qword_1011CAC88)
  {
    v1 = sub_100044B54(&qword_1011CAC10);
    sub_1000775FC();
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011CAC88);
  }
  return result;
}

ValueMetadata *type metadata accessor for MenuOptionReuseType()
{
  return &type metadata for MenuOptionReuseType;
}

uint64_t sub_10080948C()
{
  return sub_100049F28(&qword_1011AA2C0, &qword_1011AA2C8, (uint64_t)&unk_100ED58E0);
}

uint64_t sub_1008094B8()
{
  return sub_100049F28(&qword_1011A7A98, &qword_1011A79B8, (uint64_t)&unk_100EA8520);
}

void sub_1008094E4()
{
  uint64_t v0;
  uint64_t inited;
  void *v2;
  _BYTE v3[200];

  v0 = sub_100007E8C(&qword_1011A7928);
  inited = swift_initStackObject(v0, v3);
  *(_OWORD *)(inited + 16) = xmmword_100EA7AC0;
  *(_BYTE *)(inited + 32) = 0;
  *(_QWORD *)(inited + 40) = 0;
  *(_BYTE *)(inited + 48) = 1;
  *(_OWORD *)(inited + 56) = xmmword_100EBF190;
  *(_QWORD *)(inited + 72) = 0x4008000000000000;
  *(_QWORD *)(inited + 80) = 1;
  *(_BYTE *)(inited + 88) = 1;
  *(_QWORD *)(inited + 96) = 0;
  *(_BYTE *)(inited + 104) = 1;
  *(_OWORD *)(inited + 112) = xmmword_100EBF190;
  *(_QWORD *)(inited + 128) = 0x4008000000000000;
  *(_QWORD *)(inited + 136) = 1;
  *(_BYTE *)(inited + 144) = 2;
  *(_QWORD *)(inited + 152) = 0;
  *(_BYTE *)(inited + 160) = 1;
  *(_OWORD *)(inited + 168) = xmmword_100EBF190;
  *(_QWORD *)(inited + 184) = 0x4010000000000000;
  *(_QWORD *)(inited + 192) = 1;
  v2 = (void *)sub_100046BF4(inited);
  swift_setDeallocating(inited);
  off_1011CAC08 = v2;
}

uint64_t sub_100809594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v5[3] = a4;
  v5[4] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[5] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_100809600, v8, v9);
}

uint64_t sub_100809600()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 24);
  swift_release();
  v2 = JSSearchLandingViewModel.items.getter();
  v3 = (uint64_t *)swift_task_alloc(16);
  *v3 = type metadata accessor for JSSearchLandingItem(0);
  KeyPath = swift_getKeyPath(&unk_100ED1A88);
  swift_task_dealloc(v3);
  v5 = swift_task_alloc(32);
  *(_QWORD *)(v5 + 16) = v1;
  *(_QWORD *)(v5 + 24) = v2;
  *(_QWORD *)(v0 + 16) = v1;
  v6 = sub_100049F28(&qword_1011CAFF8, &qword_1011CAFD0, (uint64_t)&unk_100ED5990);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(v0 + 16, KeyPath, sub_100816E58, v5, (char *)&type metadata for () + 8, v6);
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10080970C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v5[3] = a4;
  v5[4] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[5] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_100809778, v8, v9);
}

uint64_t sub_100809778()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 24);
  swift_release();
  v2 = JSFlowcase.items.getter();
  v3 = (uint64_t *)swift_task_alloc(16);
  *v3 = type metadata accessor for JSFlowcaseItem(0);
  KeyPath = swift_getKeyPath(&unk_100ED1A88);
  swift_task_dealloc(v3);
  v5 = swift_task_alloc(32);
  *(_QWORD *)(v5 + 16) = v1;
  *(_QWORD *)(v5 + 24) = v2;
  *(_QWORD *)(v0 + 16) = v1;
  v6 = sub_100049F28(&qword_1011CAFC8, &qword_1011CAFA0, (uint64_t)&unk_100ED5990);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(v0 + 16, KeyPath, sub_100816D44, v5, (char *)&type metadata for () + 8, v6);
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100809884(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v5[6] = a4;
  v5[7] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[8] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_1008098F0, v8, v9);
}

uint64_t sub_1008098F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v15;

  swift_release();
  v1 = JSShelf.sections.getter();
  v2 = v1;
  if (!((unint64_t)v1 >> 62))
  {
    v3 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v3)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease_n(v2, 2);
    v11 = *(_QWORD *)(v0 + 48);
    v12 = (uint64_t *)swift_task_alloc(16);
    *v12 = type metadata accessor for JSShelfItem(0);
    KeyPath = swift_getKeyPath(&unk_100ED1A88);
    swift_task_dealloc(v12);
    v14 = swift_task_alloc(32);
    *(_QWORD *)(v14 + 16) = v11;
    *(_QWORD *)(v14 + 24) = _swiftEmptyArrayStorage;
    *(_QWORD *)(v0 + 40) = v11;
    v15 = sub_100049F28(&qword_1011CAE28, &qword_1011CAE00, (uint64_t)&unk_100ED5990);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(v0 + 40, KeyPath, sub_100816084, v14, (char *)&type metadata for () + 8, v15);
    swift_bridgeObjectRelease();
    swift_release();
    swift_task_dealloc(v14);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  if (v1 < 0)
    v10 = v1;
  else
    v10 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  result = _CocoaArrayWrapper.endIndex.getter(v10);
  v3 = result;
  if (!result)
    goto LABEL_14;
LABEL_3:
  if (v3 >= 1)
  {
    v5 = 0;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
        v6 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v2);
      else
        v6 = (char *)*(id *)(v2 + 8 * v5 + 32);
      v7 = v6;
      ++v5;
      v8 = (uint64_t *)&v6[OBJC_IVAR____TtC11MusicJSCore14JSShelfSection_items];
      swift_beginAccess(&v6[OBJC_IVAR____TtC11MusicJSCore14JSShelfSection_items], v0 + 16, 0, 0);
      v9 = *v8;
      swift_bridgeObjectRetain();

      sub_100806098(v9, (unint64_t *)type metadata accessor for JSShelfItem, &qword_1011CB008, &qword_1011CB000, (uint64_t *)sub_100812A88);
    }
    while (v3 != v5);
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_100809B34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v5[3] = a4;
  v5[4] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[5] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_100809BA0, v8, v9);
}

uint64_t sub_100809BA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 24);
  swift_release();
  v2 = JSBrick.items.getter();
  v3 = (uint64_t *)swift_task_alloc(16);
  *v3 = type metadata accessor for JSBrickItem(0);
  KeyPath = swift_getKeyPath(&unk_100ED1A88);
  swift_task_dealloc(v3);
  v5 = swift_task_alloc(32);
  *(_QWORD *)(v5 + 16) = v1;
  *(_QWORD *)(v5 + 24) = v2;
  *(_QWORD *)(v0 + 16) = v1;
  v6 = sub_100049F28(&qword_1011CAF68, &qword_1011CAF40, (uint64_t)&unk_100ED5990);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(v0 + 16, KeyPath, sub_100816918, v5, (char *)&type metadata for () + 8, v6);
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100809CAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v5[6] = a4;
  v5[7] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[8] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_100809D18, v8, v9);
}

uint64_t sub_100809D18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v15;

  swift_release();
  v1 = JSGrid.sections.getter();
  v2 = v1;
  if (!((unint64_t)v1 >> 62))
  {
    v3 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v3)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease_n(v2, 2);
    v11 = *(_QWORD *)(v0 + 48);
    v12 = (uint64_t *)swift_task_alloc(16);
    *v12 = type metadata accessor for JSGridItem(0);
    KeyPath = swift_getKeyPath(&unk_100ED1A88);
    swift_task_dealloc(v12);
    v14 = swift_task_alloc(32);
    *(_QWORD *)(v14 + 16) = v11;
    *(_QWORD *)(v14 + 24) = _swiftEmptyArrayStorage;
    *(_QWORD *)(v0 + 40) = v11;
    v15 = sub_100049F28(&qword_1011CAEB0, &qword_1011CAE90, (uint64_t)&unk_100ED5990);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(v0 + 40, KeyPath, sub_10081644C, v14, (char *)&type metadata for () + 8, v15);
    swift_bridgeObjectRelease();
    swift_release();
    swift_task_dealloc(v14);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  if (v1 < 0)
    v10 = v1;
  else
    v10 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  result = _CocoaArrayWrapper.endIndex.getter(v10);
  v3 = result;
  if (!result)
    goto LABEL_14;
LABEL_3:
  if (v3 >= 1)
  {
    v5 = 0;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
        v6 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v2);
      else
        v6 = (char *)*(id *)(v2 + 8 * v5 + 32);
      v7 = v6;
      ++v5;
      v8 = (uint64_t *)&v6[OBJC_IVAR____TtC11MusicJSCore13JSGridSection_items];
      swift_beginAccess(&v6[OBJC_IVAR____TtC11MusicJSCore13JSGridSection_items], v0 + 16, 0, 0);
      v9 = *v8;
      swift_bridgeObjectRetain();

      sub_100806098(v9, (unint64_t *)type metadata accessor for JSGridItem, &qword_1011CB018, &qword_1011CB010, (uint64_t *)sub_100812AE0);
    }
    while (v3 != v5);
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_100809F5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v5[3] = a4;
  v5[4] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[5] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_100809FC8, v8, v9);
}

uint64_t sub_100809FC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v12;

  swift_release();
  v1 = JSMusicVideoViewModel.item.getter();
  if (v1)
  {
    v2 = v1;
    v3 = sub_100007E8C((uint64_t *)&unk_1011A1470);
    v4 = swift_allocObject(v3, 40, 7);
    *(_OWORD *)(v4 + 16) = xmmword_100EA7A90;
    *(_QWORD *)(v4 + 32) = v2;
    v12 = (_QWORD *)v4;
    specialized Array._endMutation()(v4);
    v5 = v12;
  }
  else
  {
    v5 = _swiftEmptyArrayStorage;
  }
  v6 = *(_QWORD *)(v0 + 24);
  v7 = (uint64_t *)swift_task_alloc(16);
  *v7 = type metadata accessor for JSMusicVideoItem(0);
  KeyPath = swift_getKeyPath(&unk_100ED1A88);
  swift_task_dealloc(v7);
  v9 = swift_task_alloc(32);
  *(_QWORD *)(v9 + 16) = v6;
  *(_QWORD *)(v9 + 24) = v5;
  *(_QWORD *)(v0 + 16) = v6;
  v10 = sub_100049F28(&qword_1011CADF8, &qword_1011CADD0, (uint64_t)&unk_100ED5990);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(v0 + 16, KeyPath, sub_100815FA4, v9, (char *)&type metadata for () + 8, v10);
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10080A11C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v5[3] = a4;
  v5[4] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[5] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_10080A188, v8, v9);
}

uint64_t sub_10080A188()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 24);
  swift_release();
  v2 = JSLiveRadioCase.items.getter();
  v3 = (uint64_t *)swift_task_alloc(16);
  *v3 = type metadata accessor for JSLiveRadioCaseItem(0);
  KeyPath = swift_getKeyPath(&unk_100ED1A88);
  swift_task_dealloc(v3);
  v5 = swift_task_alloc(32);
  *(_QWORD *)(v5 + 16) = v1;
  *(_QWORD *)(v5 + 24) = v2;
  *(_QWORD *)(v0 + 16) = v1;
  v6 = sub_100049F28(&qword_1011CAF38, &qword_1011CAF18, (uint64_t)&unk_100ED5990);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(v0 + 16, KeyPath, sub_100816838, v5, (char *)&type metadata for () + 8, v6);
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10080A294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v5[9] = a4;
  v5[10] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[11] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_10080A300, v8, v9);
}

uint64_t sub_10080A300()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char *v10;
  void *v11;
  uint64_t *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t KeyPath;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  swift_release();
  v1 = JSMenu.sections.getter();
  if ((unint64_t)v1 >> 62)
  {
    if (v1 >= 0)
      v1 &= 0xFFFFFFFFFFFFFF8uLL;
    v2 = _CocoaArrayWrapper.endIndex.getter(v1);
  }
  else
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  result = JSMenu.sections.getter();
  v4 = result;
  v5 = (unint64_t)result >> 62;
  if (v2 >= 2)
  {
    if (v5)
    {
      if (result < 0)
        v17 = result;
      else
        v17 = result & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v6 = _CocoaArrayWrapper.endIndex.getter(v17);
      if (v6)
        goto LABEL_6;
    }
    else
    {
      v6 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v6)
      {
LABEL_6:
        if (v6 >= 1)
        {
          v7 = 0;
          v23 = v0;
          v8 = v0 + 40;
          v9 = _swiftEmptyArrayStorage;
          do
          {
            if ((v4 & 0xC000000000000001) != 0)
              v10 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v4);
            else
              v10 = (char *)*(id *)(v4 + 8 * v7 + 32);
            v11 = v10;
            ++v7;
            v12 = (uint64_t *)&v10[OBJC_IVAR____TtC11MusicJSCore13JSMenuSection_items];
            swift_beginAccess(&v10[OBJC_IVAR____TtC11MusicJSCore13JSMenuSection_items], v8, 0, 0);
            v13 = *v12;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_100806098(v13, (unint64_t *)type metadata accessor for JSMenuItem, &qword_1011CB028, &qword_1011CB020, (uint64_t *)sub_100812A88);

            swift_bridgeObjectRelease();
          }
          while (v6 != v7);
          swift_bridgeObjectRelease_n(v4, 2);
          v0 = v23;
          goto LABEL_32;
        }
        __break(1u);
        goto LABEL_34;
      }
    }
    swift_bridgeObjectRelease_n(v4, 2);
LABEL_31:
    v9 = _swiftEmptyArrayStorage;
    goto LABEL_32;
  }
  if (!v5)
  {
    if (*(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_14;
LABEL_30:
    swift_bridgeObjectRelease();
    goto LABEL_31;
  }
  if (result >= 0)
    result &= 0xFFFFFFFFFFFFFF8uLL;
  result = _CocoaArrayWrapper.endIndex.getter(result);
  if (!result)
    goto LABEL_30;
LABEL_14:
  if ((v4 & 0xC000000000000001) != 0)
  {
LABEL_34:
    v14 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v4);
    goto LABEL_17;
  }
  if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v14 = (char *)*(id *)(v4 + 32);
LABEL_17:
    v15 = v14;
    swift_bridgeObjectRelease();
    v16 = &v15[OBJC_IVAR____TtC11MusicJSCore13JSMenuSection_items];
    swift_beginAccess(&v15[OBJC_IVAR____TtC11MusicJSCore13JSMenuSection_items], v0 + 16, 0, 0);
    v9 = *(_QWORD **)v16;
    swift_bridgeObjectRetain();

LABEL_32:
    v18 = *(_QWORD *)(v0 + 72);
    v19 = (uint64_t *)swift_task_alloc(16);
    *v19 = type metadata accessor for JSMenuItem();
    KeyPath = swift_getKeyPath(&unk_100ED1A88);
    swift_task_dealloc(v19);
    v21 = swift_task_alloc(32);
    *(_QWORD *)(v21 + 16) = v18;
    *(_QWORD *)(v21 + 24) = v9;
    *(_QWORD *)(v0 + 64) = v18;
    v22 = sub_100049F28(&qword_1011CAD80, &qword_1011CAD60, (uint64_t)&unk_100ED5990);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(v0 + 64, KeyPath, sub_100815DE0, v21, (char *)&type metadata for () + 8, v22);
    swift_bridgeObjectRelease();
    swift_release();
    swift_task_dealloc(v21);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  __break(1u);
  return result;
}

uint64_t sub_10080A63C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v5[3] = a4;
  v5[4] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[5] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_10080A6A8, v8, v9);
}

uint64_t sub_10080A6A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v12;

  swift_release();
  v1 = JSTVShowEpisodeDetail.item.getter();
  if (v1)
  {
    v2 = v1;
    v3 = sub_100007E8C((uint64_t *)&unk_1011A1470);
    v4 = swift_allocObject(v3, 40, 7);
    *(_OWORD *)(v4 + 16) = xmmword_100EA7A90;
    *(_QWORD *)(v4 + 32) = v2;
    v12 = (_QWORD *)v4;
    specialized Array._endMutation()(v4);
    v5 = v12;
  }
  else
  {
    v5 = _swiftEmptyArrayStorage;
  }
  v6 = *(_QWORD *)(v0 + 24);
  v7 = (uint64_t *)swift_task_alloc(16);
  *v7 = type metadata accessor for JSTVShowEpisodeDetailItem(0);
  KeyPath = swift_getKeyPath(&unk_100ED1A88);
  swift_task_dealloc(v7);
  v9 = swift_task_alloc(32);
  *(_QWORD *)(v9 + 16) = v6;
  *(_QWORD *)(v9 + 24) = v5;
  *(_QWORD *)(v0 + 16) = v6;
  v10 = sub_100049F28(&qword_1011CAF98, &qword_1011CAF70, (uint64_t)&unk_100ED5990);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(v0 + 16, KeyPath, sub_100816C64, v9, (char *)&type metadata for () + 8, v10);
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10080A7FC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t KeyPath;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011CAD88);
  v49 = *(_QWORD *)(v2 - 8);
  v50 = v2;
  __chkstk_darwin(v2);
  v48 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_1011CAD90);
  __chkstk_darwin(v4);
  v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011CAD98);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for JSSearchLandingItem(0);
  v52 = v11;
  KeyPath = swift_getKeyPath(&unk_100ED1A88);
  v13 = &v0[*(_QWORD *)(*(_QWORD *)v0 + 128)];
  v53 = v1;
  v14 = sub_100049F28(&qword_1011CAFF8, &qword_1011CAFD0, (uint64_t)&unk_100ED5990);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v53, KeyPath, v14);
  swift_release();
  v15 = swift_bridgeObjectRetain();
  v16 = (unint64_t)sub_10017DB28(v15);
  swift_bridgeObjectRelease();
  if (v16)
  {
    v51 = v14;
    v47 = v13;
    v45 = v8;
    if (v16 >> 62)
    {
      v18 = (uint64_t)sub_100481BBC(v16);
      swift_bridgeObjectRelease();
    }
    else
    {
      v18 = v16 & 0xFFFFFFFFFFFFFF8;
    }
    v19 = type metadata accessor for JSMediaItem(0);
    v20 = sub_100048748(&qword_1011CADA0, type metadata accessor for JSMediaItem, (uint64_t)&protocol conformance descriptor for JSMediaItem);
    MusicLibraryMapping.Request.init(mappingItems:)(v18, v19, v20);
    MusicLibraryMapping.Request.shouldResolveUnfetchedItems.setter(1, v7);
    v21 = sub_100049F28(&qword_1011CADA8, &qword_1011CAD98, (uint64_t)&protocol conformance descriptor for MusicLibraryMapping.Request<A>);
    v46 = v7;
    v22 = MusicAutoupdatableRequest.autoupdatingResponse.getter(v7, v21);
    __chkstk_darwin(v22);
    *(&v44 - 2) = (char *)v11;
    v23 = swift_getKeyPath(&unk_100ED1AC0);
    __chkstk_darwin(v23);
    *(&v44 - 2) = v1;
    *(&v44 - 1) = (char *)v22;
    v53 = v1;
    v44 = (char *)&type metadata for () + 8;
    v24 = v51;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v53, v23, sub_100815E10, &v44 - 4, (char *)&type metadata for () + 8, v51);
    swift_release();
    swift_release();
    __chkstk_darwin(v25);
    *(&v44 - 2) = (char *)v11;
    v26 = swift_getKeyPath(&unk_100ED1AC0);
    v53 = v1;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v53, v26, v24);
    swift_release();
    if (*(_QWORD *)&v1[*(_QWORD *)(*(_QWORD *)v1 + 112)])
    {
      v28 = swift_retain();
      v29 = v48;
      dispatch thunk of MusicAutoupdatingResponse.$response.getter(v28);
      swift_release();
      v30 = swift_allocObject(&unk_1010DDD98, 24, 7);
      swift_weakInit(v30 + 16, v1);
      v31 = sub_100049F28(&qword_1011CADB0, &qword_1011CAD88, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
      v32 = v50;
      v33 = Publisher<>.sink(receiveValue:)(sub_100816F20, v30, v50, v31);
      v34 = swift_release();
      v35 = v29;
      v24 = v51;
      v27 = (*(uint64_t (**)(char *, uint64_t, __n128))(v49 + 8))(v35, v32, v34);
    }
    else
    {
      v33 = 0;
    }
    __chkstk_darwin(v27);
    *(&v44 - 2) = (char *)v11;
    v42 = swift_getKeyPath(&unk_100ED1B30);
    __chkstk_darwin(v42);
    *(&v44 - 2) = v1;
    *(&v44 - 1) = (char *)v33;
    v53 = v1;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v53, v42, sub_100815E6C, &v44 - 4, v44, v24);
    swift_release();
    v43 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v45 + 8))(v10, v46, v43);
  }
  else
  {
    __chkstk_darwin(v17);
    *(&v44 - 2) = (char *)v11;
    v36 = swift_getKeyPath(&unk_100ED1AC0);
    __chkstk_darwin(v36);
    *(&v44 - 2) = v1;
    *(&v44 - 1) = 0;
    v53 = v1;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v53, v36, sub_100815E10, &v44 - 4, (char *)&type metadata for () + 8, v14);
    swift_release();
    v37 = sub_100007E8C(&qword_1011B5DB0);
    v38 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v6, 1, 1, v37);
    __chkstk_darwin(v38);
    *(&v44 - 2) = (char *)v11;
    v39 = swift_getKeyPath(&unk_100ED1AF8);
    __chkstk_darwin(v39);
    *(&v44 - 2) = v1;
    *(&v44 - 1) = v6;
    v53 = v1;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v53, v39, sub_100816EC0, &v44 - 4, (char *)&type metadata for () + 8, v14);
    swift_release();
    v40 = sub_10004FF60((uint64_t)v6, &qword_1011CAD90);
    __chkstk_darwin(v40);
    *(&v44 - 2) = (char *)v11;
    v41 = swift_getKeyPath(&unk_100ED1B30);
    __chkstk_darwin(v41);
    *(&v44 - 2) = v1;
    *(&v44 - 1) = 0;
    v53 = v1;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v53, v41, sub_100815E6C, &v44 - 4, (char *)&type metadata for () + 8, v14);
    swift_release();
  }
}

void sub_10080AE70()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t KeyPath;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011CAD88);
  v49 = *(_QWORD *)(v2 - 8);
  v50 = v2;
  __chkstk_darwin(v2);
  v48 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_1011CAD90);
  __chkstk_darwin(v4);
  v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011CAD98);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for JSFlowcaseItem(0);
  v52 = v11;
  KeyPath = swift_getKeyPath(&unk_100ED1A88);
  v13 = &v0[*(_QWORD *)(*(_QWORD *)v0 + 128)];
  v53 = v1;
  v14 = sub_100049F28(&qword_1011CAFC8, &qword_1011CAFA0, (uint64_t)&unk_100ED5990);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v53, KeyPath, v14);
  swift_release();
  v15 = swift_bridgeObjectRetain();
  v16 = (unint64_t)sub_10017DDE0(v15);
  swift_bridgeObjectRelease();
  if (v16)
  {
    v51 = v14;
    v47 = v13;
    v45 = v8;
    if (v16 >> 62)
    {
      v18 = (uint64_t)sub_100481BBC(v16);
      swift_bridgeObjectRelease();
    }
    else
    {
      v18 = v16 & 0xFFFFFFFFFFFFFF8;
    }
    v19 = type metadata accessor for JSMediaItem(0);
    v20 = sub_100048748(&qword_1011CADA0, type metadata accessor for JSMediaItem, (uint64_t)&protocol conformance descriptor for JSMediaItem);
    MusicLibraryMapping.Request.init(mappingItems:)(v18, v19, v20);
    MusicLibraryMapping.Request.shouldResolveUnfetchedItems.setter(1, v7);
    v21 = sub_100049F28(&qword_1011CADA8, &qword_1011CAD98, (uint64_t)&protocol conformance descriptor for MusicLibraryMapping.Request<A>);
    v46 = v7;
    v22 = MusicAutoupdatableRequest.autoupdatingResponse.getter(v7, v21);
    __chkstk_darwin(v22);
    *(&v44 - 2) = (char *)v11;
    v23 = swift_getKeyPath(&unk_100ED1AC0);
    __chkstk_darwin(v23);
    *(&v44 - 2) = v1;
    *(&v44 - 1) = (char *)v22;
    v53 = v1;
    v44 = (char *)&type metadata for () + 8;
    v24 = v51;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v53, v23, sub_100815E10, &v44 - 4, (char *)&type metadata for () + 8, v51);
    swift_release();
    swift_release();
    __chkstk_darwin(v25);
    *(&v44 - 2) = (char *)v11;
    v26 = swift_getKeyPath(&unk_100ED1AC0);
    v53 = v1;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v53, v26, v24);
    swift_release();
    if (*(_QWORD *)&v1[*(_QWORD *)(*(_QWORD *)v1 + 112)])
    {
      v28 = swift_retain();
      v29 = v48;
      dispatch thunk of MusicAutoupdatingResponse.$response.getter(v28);
      swift_release();
      v30 = swift_allocObject(&unk_1010DDD48, 24, 7);
      swift_weakInit(v30 + 16, v1);
      v31 = sub_100049F28(&qword_1011CADB0, &qword_1011CAD88, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
      v32 = v50;
      v33 = Publisher<>.sink(receiveValue:)(sub_100816D80, v30, v50, v31);
      v34 = swift_release();
      v35 = v29;
      v24 = v51;
      v27 = (*(uint64_t (**)(char *, uint64_t, __n128))(v49 + 8))(v35, v32, v34);
    }
    else
    {
      v33 = 0;
    }
    __chkstk_darwin(v27);
    *(&v44 - 2) = (char *)v11;
    v42 = swift_getKeyPath(&unk_100ED1B30);
    __chkstk_darwin(v42);
    *(&v44 - 2) = v1;
    *(&v44 - 1) = (char *)v33;
    v53 = v1;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v53, v42, sub_100815E6C, &v44 - 4, v44, v24);
    swift_release();
    v43 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v45 + 8))(v10, v46, v43);
  }
  else
  {
    __chkstk_darwin(v17);
    *(&v44 - 2) = (char *)v11;
    v36 = swift_getKeyPath(&unk_100ED1AC0);
    __chkstk_darwin(v36);
    *(&v44 - 2) = v1;
    *(&v44 - 1) = 0;
    v53 = v1;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v53, v36, sub_100815E10, &v44 - 4, (char *)&type metadata for () + 8, v14);
    swift_release();
    v37 = sub_100007E8C(&qword_1011B5DB0);
    v38 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v6, 1, 1, v37);
    __chkstk_darwin(v38);
    *(&v44 - 2) = (char *)v11;
    v39 = swift_getKeyPath(&unk_100ED1AF8);
    __chkstk_darwin(v39);
    *(&v44 - 2) = v1;
    *(&v44 - 1) = v6;
    v53 = v1;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v53, v39, sub_100816D60, &v44 - 4, (char *)&type metadata for () + 8, v14);
    swift_release();
    v40 = sub_10004FF60((uint64_t)v6, &qword_1011CAD90);
    __chkstk_darwin(v40);
    *(&v44 - 2) = (char *)v11;
    v41 = swift_getKeyPath(&unk_100ED1B30);
    __chkstk_darwin(v41);
    *(&v44 - 2) = v1;
    *(&v44 - 1) = 0;
    v53 = v1;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v53, v41, sub_100815E6C, &v44 - 4, (char *)&type metadata for () + 8, v14);
    swift_release();
  }
}

void sub_10080B4E4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t KeyPath;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011CAD88);
  v49 = *(_QWORD *)(v2 - 8);
  v50 = v2;
  __chkstk_darwin(v2);
  v48 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_1011CAD90);
  __chkstk_darwin(v4);
  v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011CAD98);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for JSShelfItem(0);
  v52 = v11;
  KeyPath = swift_getKeyPath(&unk_100ED1A88);
  v13 = &v0[*(_QWORD *)(*(_QWORD *)v0 + 128)];
  v53 = v1;
  v14 = sub_100049F28(&qword_1011CAE28, &qword_1011CAE00, (uint64_t)&unk_100ED5990);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v53, KeyPath, v14);
  swift_release();
  v15 = swift_bridgeObjectRetain();
  v16 = (unint64_t)sub_10017DDE0(v15);
  swift_bridgeObjectRelease();
  if (v16)
  {
    v51 = v14;
    v47 = v13;
    v45 = v8;
    if (v16 >> 62)
    {
      v18 = (uint64_t)sub_100481BBC(v16);
      swift_bridgeObjectRelease();
    }
    else
    {
      v18 = v16 & 0xFFFFFFFFFFFFFF8;
    }
    v19 = type metadata accessor for JSMediaItem(0);
    v20 = sub_100048748(&qword_1011CADA0, type metadata accessor for JSMediaItem, (uint64_t)&protocol conformance descriptor for JSMediaItem);
    MusicLibraryMapping.Request.init(mappingItems:)(v18, v19, v20);
    MusicLibraryMapping.Request.shouldResolveUnfetchedItems.setter(1, v7);
    v21 = sub_100049F28(&qword_1011CADA8, &qword_1011CAD98, (uint64_t)&protocol conformance descriptor for MusicLibraryMapping.Request<A>);
    v46 = v7;
    v22 = MusicAutoupdatableRequest.autoupdatingResponse.getter(v7, v21);
    __chkstk_darwin(v22);
    *(&v44 - 2) = (char *)v11;
    v23 = swift_getKeyPath(&unk_100ED1AC0);
    __chkstk_darwin(v23);
    *(&v44 - 2) = v1;
    *(&v44 - 1) = (char *)v22;
    v53 = v1;
    v44 = (char *)&type metadata for () + 8;
    v24 = v51;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v53, v23, sub_100815E10, &v44 - 4, (char *)&type metadata for () + 8, v51);
    swift_release();
    swift_release();
    __chkstk_darwin(v25);
    *(&v44 - 2) = (char *)v11;
    v26 = swift_getKeyPath(&unk_100ED1AC0);
    v53 = v1;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v53, v26, v24);
    swift_release();
    if (*(_QWORD *)&v1[*(_QWORD *)(*(_QWORD *)v1 + 112)])
    {
      v28 = swift_retain();
      v29 = v48;
      dispatch thunk of MusicAutoupdatingResponse.$response.getter(v28);
      swift_release();
      v30 = swift_allocObject(&unk_1010DD9D8, 24, 7);
      swift_weakInit(v30 + 16, v1);
      v31 = sub_100049F28(&qword_1011CADB0, &qword_1011CAD88, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
      v32 = v50;
      v33 = Publisher<>.sink(receiveValue:)(sub_1008160C0, v30, v50, v31);
      v34 = swift_release();
      v35 = v29;
      v24 = v51;
      v27 = (*(uint64_t (**)(char *, uint64_t, __n128))(v49 + 8))(v35, v32, v34);
    }
    else
    {
      v33 = 0;
    }
    __chkstk_darwin(v27);
    *(&v44 - 2) = (char *)v11;
    v42 = swift_getKeyPath(&unk_100ED1B30);
    __chkstk_darwin(v42);
    *(&v44 - 2) = v1;
    *(&v44 - 1) = (char *)v33;
    v53 = v1;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v53, v42, sub_100815E6C, &v44 - 4, v44, v24);
    swift_release();
    v43 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v45 + 8))(v10, v46, v43);
  }
  else
  {
    __chkstk_darwin(v17);
    *(&v44 - 2) = (char *)v11;
    v36 = swift_getKeyPath(&unk_100ED1AC0);
    __chkstk_darwin(v36);
    *(&v44 - 2) = v1;
    *(&v44 - 1) = 0;
    v53 = v1;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v53, v36, sub_100815E10, &v44 - 4, (char *)&type metadata for () + 8, v14);
    swift_release();
    v37 = sub_100007E8C(&qword_1011B5DB0);
    v38 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v6, 1, 1, v37);
    __chkstk_darwin(v38);
    *(&v44 - 2) = (char *)v11;
    v39 = swift_getKeyPath(&unk_100ED1AF8);
    __chkstk_darwin(v39);
    *(&v44 - 2) = v1;
    *(&v44 - 1) = v6;
    v53 = v1;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v53, v39, sub_1008160A0, &v44 - 4, (char *)&type metadata for () + 8, v14);
    swift_release();
    v40 = sub_10004FF60((uint64_t)v6, &qword_1011CAD90);
    __chkstk_darwin(v40);
    *(&v44 - 2) = (char *)v11;
    v41 = swift_getKeyPath(&unk_100ED1B30);
    __chkstk_darwin(v41);
    *(&v44 - 2) = v1;
    *(&v44 - 1) = 0;
    v53 = v1;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v53, v41, sub_100815E6C, &v44 - 4, (char *)&type metadata for () + 8, v14);
    swift_release();
  }
}

void sub_10080BB58()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t KeyPath;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011CAD88);
  v49 = *(_QWORD *)(v2 - 8);
  v50 = v2;
  __chkstk_darwin(v2);
  v48 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_1011CAD90);
  __chkstk_darwin(v4);
  v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011CAD98);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for JSBrickItem(0);
  v52 = v11;
  KeyPath = swift_getKeyPath(&unk_100ED1A88);
  v13 = &v0[*(_QWORD *)(*(_QWORD *)v0 + 128)];
  v53 = v1;
  v14 = sub_100049F28(&qword_1011CAF68, &qword_1011CAF40, (uint64_t)&unk_100ED5990);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v53, KeyPath, v14);
  swift_release();
  v15 = swift_bridgeObjectRetain();
  v16 = (unint64_t)sub_10017DDE0(v15);
  swift_bridgeObjectRelease();
  if (v16)
  {
    v51 = v14;
    v47 = v13;
    v45 = v8;
    if (v16 >> 62)
    {
      v18 = (uint64_t)sub_100481BBC(v16);
      swift_bridgeObjectRelease();
    }
    else
    {
      v18 = v16 & 0xFFFFFFFFFFFFFF8;
    }
    v19 = type metadata accessor for JSMediaItem(0);
    v20 = sub_100048748(&qword_1011CADA0, type metadata accessor for JSMediaItem, (uint64_t)&protocol conformance descriptor for JSMediaItem);
    MusicLibraryMapping.Request.init(mappingItems:)(v18, v19, v20);
    MusicLibraryMapping.Request.shouldResolveUnfetchedItems.setter(1, v7);
    v21 = sub_100049F28(&qword_1011CADA8, &qword_1011CAD98, (uint64_t)&protocol conformance descriptor for MusicLibraryMapping.Request<A>);
    v46 = v7;
    v22 = MusicAutoupdatableRequest.autoupdatingResponse.getter(v7, v21);
    __chkstk_darwin(v22);
    *(&v44 - 2) = (char *)v11;
    v23 = swift_getKeyPath(&unk_100ED1AC0);
    __chkstk_darwin(v23);
    *(&v44 - 2) = v1;
    *(&v44 - 1) = (char *)v22;
    v53 = v1;
    v44 = (char *)&type metadata for () + 8;
    v24 = v51;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v53, v23, sub_100815E10, &v44 - 4, (char *)&type metadata for () + 8, v51);
    swift_release();
    swift_release();
    __chkstk_darwin(v25);
    *(&v44 - 2) = (char *)v11;
    v26 = swift_getKeyPath(&unk_100ED1AC0);
    v53 = v1;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v53, v26, v24);
    swift_release();
    if (*(_QWORD *)&v1[*(_QWORD *)(*(_QWORD *)v1 + 112)])
    {
      v28 = swift_retain();
      v29 = v48;
      dispatch thunk of MusicAutoupdatingResponse.$response.getter(v28);
      swift_release();
      v30 = swift_allocObject(&unk_1010DDCA8, 24, 7);
      swift_weakInit(v30 + 16, v1);
      v31 = sub_100049F28(&qword_1011CADB0, &qword_1011CAD88, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
      v32 = v50;
      v33 = Publisher<>.sink(receiveValue:)(sub_100816954, v30, v50, v31);
      v34 = swift_release();
      v35 = v29;
      v24 = v51;
      v27 = (*(uint64_t (**)(char *, uint64_t, __n128))(v49 + 8))(v35, v32, v34);
    }
    else
    {
      v33 = 0;
    }
    __chkstk_darwin(v27);
    *(&v44 - 2) = (char *)v11;
    v42 = swift_getKeyPath(&unk_100ED1B30);
    __chkstk_darwin(v42);
    *(&v44 - 2) = v1;
    *(&v44 - 1) = (char *)v33;
    v53 = v1;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v53, v42, sub_100815E6C, &v44 - 4, v44, v24);
    swift_release();
    v43 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v45 + 8))(v10, v46, v43);
  }
  else
  {
    __chkstk_darwin(v17);
    *(&v44 - 2) = (char *)v11;
    v36 = swift_getKeyPath(&unk_100ED1AC0);
    __chkstk_darwin(v36);
    *(&v44 - 2) = v1;
    *(&v44 - 1) = 0;
    v53 = v1;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v53, v36, sub_100815E10, &v44 - 4, (char *)&type metadata for () + 8, v14);
    swift_release();
    v37 = sub_100007E8C(&qword_1011B5DB0);
    v38 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v6, 1, 1, v37);
    __chkstk_darwin(v38);
    *(&v44 - 2) = (char *)v11;
    v39 = swift_getKeyPath(&unk_100ED1AF8);
    __chkstk_darwin(v39);
    *(&v44 - 2) = v1;
    *(&v44 - 1) = v6;
    v53 = v1;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v53, v39, sub_100816934, &v44 - 4, (char *)&type metadata for () + 8, v14);
    swift_release();
    v40 = sub_10004FF60((uint64_t)v6, &qword_1011CAD90);
    __chkstk_darwin(v40);
    *(&v44 - 2) = (char *)v11;
    v41 = swift_getKeyPath(&unk_100ED1B30);
    __chkstk_darwin(v41);
    *(&v44 - 2) = v1;
    *(&v44 - 1) = 0;
    v53 = v1;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v53, v41, sub_100815E6C, &v44 - 4, (char *)&type metadata for () + 8, v14);
    swift_release();
  }
}

void sub_10080C1CC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t KeyPath;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011CAD88);
  v49 = *(_QWORD *)(v2 - 8);
  v50 = v2;
  __chkstk_darwin(v2);
  v48 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_1011CAD90);
  __chkstk_darwin(v4);
  v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011CAD98);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for JSGridItem(0);
  v52 = v11;
  KeyPath = swift_getKeyPath(&unk_100ED1A88);
  v13 = &v0[*(_QWORD *)(*(_QWORD *)v0 + 128)];
  v53 = v1;
  v14 = sub_100049F28(&qword_1011CAEB0, &qword_1011CAE90, (uint64_t)&unk_100ED5990);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v53, KeyPath, v14);
  swift_release();
  v15 = swift_bridgeObjectRetain();
  v16 = (unint64_t)sub_10017DDE0(v15);
  swift_bridgeObjectRelease();
  if (v16)
  {
    v51 = v14;
    v47 = v13;
    v45 = v8;
    if (v16 >> 62)
    {
      v18 = (uint64_t)sub_100481BBC(v16);
      swift_bridgeObjectRelease();
    }
    else
    {
      v18 = v16 & 0xFFFFFFFFFFFFFF8;
    }
    v19 = type metadata accessor for JSMediaItem(0);
    v20 = sub_100048748(&qword_1011CADA0, type metadata accessor for JSMediaItem, (uint64_t)&protocol conformance descriptor for JSMediaItem);
    MusicLibraryMapping.Request.init(mappingItems:)(v18, v19, v20);
    MusicLibraryMapping.Request.shouldResolveUnfetchedItems.setter(1, v7);
    v21 = sub_100049F28(&qword_1011CADA8, &qword_1011CAD98, (uint64_t)&protocol conformance descriptor for MusicLibraryMapping.Request<A>);
    v46 = v7;
    v22 = MusicAutoupdatableRequest.autoupdatingResponse.getter(v7, v21);
    __chkstk_darwin(v22);
    *(&v44 - 2) = (char *)v11;
    v23 = swift_getKeyPath(&unk_100ED1AC0);
    __chkstk_darwin(v23);
    *(&v44 - 2) = v1;
    *(&v44 - 1) = (char *)v22;
    v53 = v1;
    v44 = (char *)&type metadata for () + 8;
    v24 = v51;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v53, v23, sub_100815E10, &v44 - 4, (char *)&type metadata for () + 8, v51);
    swift_release();
    swift_release();
    __chkstk_darwin(v25);
    *(&v44 - 2) = (char *)v11;
    v26 = swift_getKeyPath(&unk_100ED1AC0);
    v53 = v1;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v53, v26, v24);
    swift_release();
    if (*(_QWORD *)&v1[*(_QWORD *)(*(_QWORD *)v1 + 112)])
    {
      v28 = swift_retain();
      v29 = v48;
      dispatch thunk of MusicAutoupdatingResponse.$response.getter(v28);
      swift_release();
      v30 = swift_allocObject(&unk_1010DDB18, 24, 7);
      swift_weakInit(v30 + 16, v1);
      v31 = sub_100049F28(&qword_1011CADB0, &qword_1011CAD88, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
      v32 = v50;
      v33 = Publisher<>.sink(receiveValue:)(sub_1008164AC, v30, v50, v31);
      v34 = swift_release();
      v35 = v29;
      v24 = v51;
      v27 = (*(uint64_t (**)(char *, uint64_t, __n128))(v49 + 8))(v35, v32, v34);
    }
    else
    {
      v33 = 0;
    }
    __chkstk_darwin(v27);
    *(&v44 - 2) = (char *)v11;
    v42 = swift_getKeyPath(&unk_100ED1B30);
    __chkstk_darwin(v42);
    *(&v44 - 2) = v1;
    *(&v44 - 1) = (char *)v33;
    v53 = v1;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v53, v42, sub_100815E6C, &v44 - 4, v44, v24);
    swift_release();
    v43 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v45 + 8))(v10, v46, v43);
  }
  else
  {
    __chkstk_darwin(v17);
    *(&v44 - 2) = (char *)v11;
    v36 = swift_getKeyPath(&unk_100ED1AC0);
    __chkstk_darwin(v36);
    *(&v44 - 2) = v1;
    *(&v44 - 1) = 0;
    v53 = v1;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v53, v36, sub_100815E10, &v44 - 4, (char *)&type metadata for () + 8, v14);
    swift_release();
    v37 = sub_100007E8C(&qword_1011B5DB0);
    v38 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v6, 1, 1, v37);
    __chkstk_darwin(v38);
    *(&v44 - 2) = (char *)v11;
    v39 = swift_getKeyPath(&unk_100ED1AF8);
    __chkstk_darwin(v39);
    *(&v44 - 2) = v1;
    *(&v44 - 1) = v6;
    v53 = v1;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v53, v39, sub_100816468, &v44 - 4, (char *)&type metadata for () + 8, v14);
    swift_release();
    v40 = sub_10004FF60((uint64_t)v6, &qword_1011CAD90);
    __chkstk_darwin(v40);
    *(&v44 - 2) = (char *)v11;
    v41 = swift_getKeyPath(&unk_100ED1B30);
    __chkstk_darwin(v41);
    *(&v44 - 2) = v1;
    *(&v44 - 1) = 0;
    v53 = v1;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v53, v41, sub_100815E6C, &v44 - 4, (char *)&type metadata for () + 8, v14);
    swift_release();
  }
}

void sub_10080C840()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t KeyPath;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011CAD88);
  v49 = *(_QWORD *)(v2 - 8);
  v50 = v2;
  __chkstk_darwin(v2);
  v48 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_1011CAD90);
  __chkstk_darwin(v4);
  v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011CAD98);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for JSMusicVideoItem(0);
  v52 = v11;
  KeyPath = swift_getKeyPath(&unk_100ED1A88);
  v13 = &v0[*(_QWORD *)(*(_QWORD *)v0 + 128)];
  v53 = v1;
  v14 = sub_100049F28(&qword_1011CADF8, &qword_1011CADD0, (uint64_t)&unk_100ED5990);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v53, KeyPath, v14);
  swift_release();
  v15 = swift_bridgeObjectRetain();
  v16 = (unint64_t)sub_10017DDE0(v15);
  swift_bridgeObjectRelease();
  if (v16)
  {
    v51 = v14;
    v47 = v13;
    v45 = v8;
    if (v16 >> 62)
    {
      v18 = (uint64_t)sub_100481BBC(v16);
      swift_bridgeObjectRelease();
    }
    else
    {
      v18 = v16 & 0xFFFFFFFFFFFFFF8;
    }
    v19 = type metadata accessor for JSMediaItem(0);
    v20 = sub_100048748(&qword_1011CADA0, type metadata accessor for JSMediaItem, (uint64_t)&protocol conformance descriptor for JSMediaItem);
    MusicLibraryMapping.Request.init(mappingItems:)(v18, v19, v20);
    MusicLibraryMapping.Request.shouldResolveUnfetchedItems.setter(1, v7);
    v21 = sub_100049F28(&qword_1011CADA8, &qword_1011CAD98, (uint64_t)&protocol conformance descriptor for MusicLibraryMapping.Request<A>);
    v46 = v7;
    v22 = MusicAutoupdatableRequest.autoupdatingResponse.getter(v7, v21);
    __chkstk_darwin(v22);
    *(&v44 - 2) = (char *)v11;
    v23 = swift_getKeyPath(&unk_100ED1AC0);
    __chkstk_darwin(v23);
    *(&v44 - 2) = v1;
    *(&v44 - 1) = (char *)v22;
    v53 = v1;
    v44 = (char *)&type metadata for () + 8;
    v24 = v51;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v53, v23, sub_100815E10, &v44 - 4, (char *)&type metadata for () + 8, v51);
    swift_release();
    swift_release();
    __chkstk_darwin(v25);
    *(&v44 - 2) = (char *)v11;
    v26 = swift_getKeyPath(&unk_100ED1AC0);
    v53 = v1;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v53, v26, v24);
    swift_release();
    if (*(_QWORD *)&v1[*(_QWORD *)(*(_QWORD *)v1 + 112)])
    {
      v28 = swift_retain();
      v29 = v48;
      dispatch thunk of MusicAutoupdatingResponse.$response.getter(v28);
      swift_release();
      v30 = swift_allocObject(&unk_1010DD988, 24, 7);
      swift_weakInit(v30 + 16, v1);
      v31 = sub_100049F28(&qword_1011CADB0, &qword_1011CAD88, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
      v32 = v50;
      v33 = Publisher<>.sink(receiveValue:)(sub_100815FE0, v30, v50, v31);
      v34 = swift_release();
      v35 = v29;
      v24 = v51;
      v27 = (*(uint64_t (**)(char *, uint64_t, __n128))(v49 + 8))(v35, v32, v34);
    }
    else
    {
      v33 = 0;
    }
    __chkstk_darwin(v27);
    *(&v44 - 2) = (char *)v11;
    v42 = swift_getKeyPath(&unk_100ED1B30);
    __chkstk_darwin(v42);
    *(&v44 - 2) = v1;
    *(&v44 - 1) = (char *)v33;
    v53 = v1;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v53, v42, sub_100815E6C, &v44 - 4, v44, v24);
    swift_release();
    v43 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v45 + 8))(v10, v46, v43);
  }
  else
  {
    __chkstk_darwin(v17);
    *(&v44 - 2) = (char *)v11;
    v36 = swift_getKeyPath(&unk_100ED1AC0);
    __chkstk_darwin(v36);
    *(&v44 - 2) = v1;
    *(&v44 - 1) = 0;
    v53 = v1;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v53, v36, sub_100815E10, &v44 - 4, (char *)&type metadata for () + 8, v14);
    swift_release();
    v37 = sub_100007E8C(&qword_1011B5DB0);
    v38 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v6, 1, 1, v37);
    __chkstk_darwin(v38);
    *(&v44 - 2) = (char *)v11;
    v39 = swift_getKeyPath(&unk_100ED1AF8);
    __chkstk_darwin(v39);
    *(&v44 - 2) = v1;
    *(&v44 - 1) = v6;
    v53 = v1;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v53, v39, sub_100815FC0, &v44 - 4, (char *)&type metadata for () + 8, v14);
    swift_release();
    v40 = sub_10004FF60((uint64_t)v6, &qword_1011CAD90);
    __chkstk_darwin(v40);
    *(&v44 - 2) = (char *)v11;
    v41 = swift_getKeyPath(&unk_100ED1B30);
    __chkstk_darwin(v41);
    *(&v44 - 2) = v1;
    *(&v44 - 1) = 0;
    v53 = v1;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v53, v41, sub_100815E6C, &v44 - 4, (char *)&type metadata for () + 8, v14);
    swift_release();
  }
}

void sub_10080CEB4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t KeyPath;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011CAD88);
  v49 = *(_QWORD *)(v2 - 8);
  v50 = v2;
  __chkstk_darwin(v2);
  v48 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_1011CAD90);
  __chkstk_darwin(v4);
  v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011CAD98);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for JSLiveRadioCaseItem(0);
  v52 = v11;
  KeyPath = swift_getKeyPath(&unk_100ED1A88);
  v13 = &v0[*(_QWORD *)(*(_QWORD *)v0 + 128)];
  v53 = v1;
  v14 = sub_100049F28(&qword_1011CAF38, &qword_1011CAF18, (uint64_t)&unk_100ED5990);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v53, KeyPath, v14);
  swift_release();
  v15 = swift_bridgeObjectRetain();
  v16 = (unint64_t)sub_10017DDE0(v15);
  swift_bridgeObjectRelease();
  if (v16)
  {
    v51 = v14;
    v47 = v13;
    v45 = v8;
    if (v16 >> 62)
    {
      v18 = (uint64_t)sub_100481BBC(v16);
      swift_bridgeObjectRelease();
    }
    else
    {
      v18 = v16 & 0xFFFFFFFFFFFFFF8;
    }
    v19 = type metadata accessor for JSMediaItem(0);
    v20 = sub_100048748(&qword_1011CADA0, type metadata accessor for JSMediaItem, (uint64_t)&protocol conformance descriptor for JSMediaItem);
    MusicLibraryMapping.Request.init(mappingItems:)(v18, v19, v20);
    MusicLibraryMapping.Request.shouldResolveUnfetchedItems.setter(1, v7);
    v21 = sub_100049F28(&qword_1011CADA8, &qword_1011CAD98, (uint64_t)&protocol conformance descriptor for MusicLibraryMapping.Request<A>);
    v46 = v7;
    v22 = MusicAutoupdatableRequest.autoupdatingResponse.getter(v7, v21);
    __chkstk_darwin(v22);
    *(&v44 - 2) = (char *)v11;
    v23 = swift_getKeyPath(&unk_100ED1AC0);
    __chkstk_darwin(v23);
    *(&v44 - 2) = v1;
    *(&v44 - 1) = (char *)v22;
    v53 = v1;
    v44 = (char *)&type metadata for () + 8;
    v24 = v51;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v53, v23, sub_100815E10, &v44 - 4, (char *)&type metadata for () + 8, v51);
    swift_release();
    swift_release();
    __chkstk_darwin(v25);
    *(&v44 - 2) = (char *)v11;
    v26 = swift_getKeyPath(&unk_100ED1AC0);
    v53 = v1;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v53, v26, v24);
    swift_release();
    if (*(_QWORD *)&v1[*(_QWORD *)(*(_QWORD *)v1 + 112)])
    {
      v28 = swift_retain();
      v29 = v48;
      dispatch thunk of MusicAutoupdatingResponse.$response.getter(v28);
      swift_release();
      v30 = swift_allocObject(&unk_1010DDC58, 24, 7);
      swift_weakInit(v30 + 16, v1);
      v31 = sub_100049F28(&qword_1011CADB0, &qword_1011CAD88, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
      v32 = v50;
      v33 = Publisher<>.sink(receiveValue:)(sub_100816874, v30, v50, v31);
      v34 = swift_release();
      v35 = v29;
      v24 = v51;
      v27 = (*(uint64_t (**)(char *, uint64_t, __n128))(v49 + 8))(v35, v32, v34);
    }
    else
    {
      v33 = 0;
    }
    __chkstk_darwin(v27);
    *(&v44 - 2) = (char *)v11;
    v42 = swift_getKeyPath(&unk_100ED1B30);
    __chkstk_darwin(v42);
    *(&v44 - 2) = v1;
    *(&v44 - 1) = (char *)v33;
    v53 = v1;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v53, v42, sub_100815E6C, &v44 - 4, v44, v24);
    swift_release();
    v43 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v45 + 8))(v10, v46, v43);
  }
  else
  {
    __chkstk_darwin(v17);
    *(&v44 - 2) = (char *)v11;
    v36 = swift_getKeyPath(&unk_100ED1AC0);
    __chkstk_darwin(v36);
    *(&v44 - 2) = v1;
    *(&v44 - 1) = 0;
    v53 = v1;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v53, v36, sub_100815E10, &v44 - 4, (char *)&type metadata for () + 8, v14);
    swift_release();
    v37 = sub_100007E8C(&qword_1011B5DB0);
    v38 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v6, 1, 1, v37);
    __chkstk_darwin(v38);
    *(&v44 - 2) = (char *)v11;
    v39 = swift_getKeyPath(&unk_100ED1AF8);
    __chkstk_darwin(v39);
    *(&v44 - 2) = v1;
    *(&v44 - 1) = v6;
    v53 = v1;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v53, v39, sub_100816854, &v44 - 4, (char *)&type metadata for () + 8, v14);
    swift_release();
    v40 = sub_10004FF60((uint64_t)v6, &qword_1011CAD90);
    __chkstk_darwin(v40);
    *(&v44 - 2) = (char *)v11;
    v41 = swift_getKeyPath(&unk_100ED1B30);
    __chkstk_darwin(v41);
    *(&v44 - 2) = v1;
    *(&v44 - 1) = 0;
    v53 = v1;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v53, v41, sub_100815E6C, &v44 - 4, (char *)&type metadata for () + 8, v14);
    swift_release();
  }
}

void sub_10080D528()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011CAD88);
  v47 = *(_QWORD *)(v2 - 8);
  v48 = v2;
  __chkstk_darwin(v2);
  v46 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_1011CAD90);
  __chkstk_darwin(v4);
  v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_100007E8C(&qword_1011CAD98);
  v49 = *(_QWORD *)(v51 - 8);
  __chkstk_darwin(v51);
  v50 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for JSMenuItem();
  v52 = v8;
  KeyPath = swift_getKeyPath(&unk_100ED1A88);
  v53 = v0;
  v10 = sub_100049F28(&qword_1011CAD80, &qword_1011CAD60, (uint64_t)&unk_100ED5990);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v53, KeyPath, v10);
  swift_release();
  v11 = v0[2];
  v53 = _swiftEmptyArrayStorage;
  if ((unint64_t)v11 >> 62)
  {
    if (v11 < 0)
      v20 = v11;
    else
      v20 = v11 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v11, 2);
    v21 = _CocoaArrayWrapper.endIndex.getter(v20);
    swift_bridgeObjectRelease();
    specialized ContiguousArray.reserveCapacity(_:)(v21);
    swift_bridgeObjectRetain();
    v22 = _CocoaArrayWrapper.endIndex.getter(v20);
    swift_bridgeObjectRelease();
    if (v22)
      goto LABEL_3;
  }
  else
  {
    v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    specialized ContiguousArray.reserveCapacity(_:)(v12);
    if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_3:
      if ((v11 & 0xC000000000000001) != 0)
      {
        v42 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v11);
        swift_unknownObjectRelease(v42);
      }
      swift_bridgeObjectRelease();
      swift_release();
      __chkstk_darwin(v13);
      *(&v44 - 2) = v8;
      v14 = swift_getKeyPath(&unk_100ED1AC0);
      __chkstk_darwin(v14);
      *(&v44 - 2) = (uint64_t)v1;
      *(&v44 - 1) = 0;
      v53 = v1;
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v53, v14, sub_100815E10, &v44 - 4, (char *)&type metadata for () + 8, v10);
      swift_release();
      v15 = sub_100007E8C(&qword_1011B5DB0);
      v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v6, 1, 1, v15);
      __chkstk_darwin(v16);
      *(&v44 - 2) = v8;
      v17 = swift_getKeyPath(&unk_100ED1AF8);
      __chkstk_darwin(v17);
      *(&v44 - 2) = (uint64_t)v1;
      *(&v44 - 1) = (uint64_t)v6;
      v53 = v1;
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v53, v17, sub_100815E38, &v44 - 4, (char *)&type metadata for () + 8, v10);
      swift_release();
      v18 = sub_10004FF60((uint64_t)v6, &qword_1011CAD90);
      __chkstk_darwin(v18);
      *(&v44 - 2) = v8;
      v19 = swift_getKeyPath(&unk_100ED1B30);
      __chkstk_darwin(v19);
      *(&v44 - 2) = (uint64_t)v1;
      *(&v44 - 1) = 0;
      v53 = v1;
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v53, v19, sub_100815E6C, &v44 - 4, (char *)&type metadata for () + 8, v10);
      swift_release();
      return;
    }
  }
  v23 = (uint64_t)v53;
  swift_bridgeObjectRelease();
  if (v23 < 0 || (v23 & 0x4000000000000000) != 0)
  {
    v43 = sub_100481BBC(v23);
    swift_release();
    v23 = (uint64_t)v43;
  }
  v24 = type metadata accessor for JSMediaItem(0);
  v25 = sub_100048748(&qword_1011CADA0, type metadata accessor for JSMediaItem, (uint64_t)&protocol conformance descriptor for JSMediaItem);
  MusicLibraryMapping.Request.init(mappingItems:)(v23, v24, v25);
  v26 = v51;
  MusicLibraryMapping.Request.shouldResolveUnfetchedItems.setter(1, v51);
  v27 = sub_100049F28(&qword_1011CADA8, &qword_1011CAD98, (uint64_t)&protocol conformance descriptor for MusicLibraryMapping.Request<A>);
  v28 = MusicAutoupdatableRequest.autoupdatingResponse.getter(v26, v27);
  __chkstk_darwin(v28);
  *(&v44 - 2) = v8;
  v29 = swift_getKeyPath(&unk_100ED1AC0);
  __chkstk_darwin(v29);
  *(&v44 - 2) = (uint64_t)v1;
  *(&v44 - 1) = v28;
  v53 = v1;
  v45 = (char *)&type metadata for () + 8;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v53, v29, sub_100815E10, &v44 - 4, (char *)&type metadata for () + 8, v10);
  swift_release();
  swift_release();
  __chkstk_darwin(v30);
  *(&v44 - 2) = v8;
  v31 = swift_getKeyPath(&unk_100ED1AC0);
  v53 = v1;
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v53, v31, v10);
  swift_release();
  if (*(_QWORD *)((char *)v1 + *(_QWORD *)(*v1 + 112)))
  {
    v33 = swift_retain();
    v34 = v46;
    dispatch thunk of MusicAutoupdatingResponse.$response.getter(v33);
    swift_release();
    v35 = swift_allocObject(&unk_1010DD898, 24, 7);
    swift_weakInit(v35 + 16, v1);
    v36 = sub_100049F28(&qword_1011CADB0, &qword_1011CAD88, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    v37 = v48;
    v38 = Publisher<>.sink(receiveValue:)(sub_100815E80, v35, v48, v36);
    v39 = swift_release();
    v32 = (*(uint64_t (**)(char *, uint64_t, __n128))(v47 + 8))(v34, v37, v39);
  }
  else
  {
    v38 = 0;
  }
  __chkstk_darwin(v32);
  *(&v44 - 2) = v8;
  v40 = swift_getKeyPath(&unk_100ED1B30);
  __chkstk_darwin(v40);
  *(&v44 - 2) = (uint64_t)v1;
  *(&v44 - 1) = v38;
  v53 = v1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v53, v40, sub_100815E6C, &v44 - 4, v45, v10);
  swift_release();
  v41 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v49 + 8))(v50, v51, v41);
}

void sub_10080DC4C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t KeyPath;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011CAD88);
  v49 = *(_QWORD *)(v2 - 8);
  v50 = v2;
  __chkstk_darwin(v2);
  v48 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_1011CAD90);
  __chkstk_darwin(v4);
  v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011CAD98);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for JSTVShowEpisodeDetailItem(0);
  v52 = v11;
  KeyPath = swift_getKeyPath(&unk_100ED1A88);
  v13 = &v0[*(_QWORD *)(*(_QWORD *)v0 + 128)];
  v53 = v1;
  v14 = sub_100049F28(&qword_1011CAF98, &qword_1011CAF70, (uint64_t)&unk_100ED5990);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v53, KeyPath, v14);
  swift_release();
  v15 = swift_bridgeObjectRetain();
  v16 = (unint64_t)sub_10017DDE0(v15);
  swift_bridgeObjectRelease();
  if (v16)
  {
    v51 = v14;
    v47 = v13;
    v45 = v8;
    if (v16 >> 62)
    {
      v18 = (uint64_t)sub_100481BBC(v16);
      swift_bridgeObjectRelease();
    }
    else
    {
      v18 = v16 & 0xFFFFFFFFFFFFFF8;
    }
    v19 = type metadata accessor for JSMediaItem(0);
    v20 = sub_100048748(&qword_1011CADA0, type metadata accessor for JSMediaItem, (uint64_t)&protocol conformance descriptor for JSMediaItem);
    MusicLibraryMapping.Request.init(mappingItems:)(v18, v19, v20);
    MusicLibraryMapping.Request.shouldResolveUnfetchedItems.setter(1, v7);
    v21 = sub_100049F28(&qword_1011CADA8, &qword_1011CAD98, (uint64_t)&protocol conformance descriptor for MusicLibraryMapping.Request<A>);
    v46 = v7;
    v22 = MusicAutoupdatableRequest.autoupdatingResponse.getter(v7, v21);
    __chkstk_darwin(v22);
    *(&v44 - 2) = (char *)v11;
    v23 = swift_getKeyPath(&unk_100ED1AC0);
    __chkstk_darwin(v23);
    *(&v44 - 2) = v1;
    *(&v44 - 1) = (char *)v22;
    v53 = v1;
    v44 = (char *)&type metadata for () + 8;
    v24 = v51;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v53, v23, sub_100815E10, &v44 - 4, (char *)&type metadata for () + 8, v51);
    swift_release();
    swift_release();
    __chkstk_darwin(v25);
    *(&v44 - 2) = (char *)v11;
    v26 = swift_getKeyPath(&unk_100ED1AC0);
    v53 = v1;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v53, v26, v24);
    swift_release();
    if (*(_QWORD *)&v1[*(_QWORD *)(*(_QWORD *)v1 + 112)])
    {
      v28 = swift_retain();
      v29 = v48;
      dispatch thunk of MusicAutoupdatingResponse.$response.getter(v28);
      swift_release();
      v30 = swift_allocObject(&unk_1010DDCF8, 24, 7);
      swift_weakInit(v30 + 16, v1);
      v31 = sub_100049F28(&qword_1011CADB0, &qword_1011CAD88, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
      v32 = v50;
      v33 = Publisher<>.sink(receiveValue:)(sub_100816CA0, v30, v50, v31);
      v34 = swift_release();
      v35 = v29;
      v24 = v51;
      v27 = (*(uint64_t (**)(char *, uint64_t, __n128))(v49 + 8))(v35, v32, v34);
    }
    else
    {
      v33 = 0;
    }
    __chkstk_darwin(v27);
    *(&v44 - 2) = (char *)v11;
    v42 = swift_getKeyPath(&unk_100ED1B30);
    __chkstk_darwin(v42);
    *(&v44 - 2) = v1;
    *(&v44 - 1) = (char *)v33;
    v53 = v1;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v53, v42, sub_100815E6C, &v44 - 4, v44, v24);
    swift_release();
    v43 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v45 + 8))(v10, v46, v43);
  }
  else
  {
    __chkstk_darwin(v17);
    *(&v44 - 2) = (char *)v11;
    v36 = swift_getKeyPath(&unk_100ED1AC0);
    __chkstk_darwin(v36);
    *(&v44 - 2) = v1;
    *(&v44 - 1) = 0;
    v53 = v1;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v53, v36, sub_100815E10, &v44 - 4, (char *)&type metadata for () + 8, v14);
    swift_release();
    v37 = sub_100007E8C(&qword_1011B5DB0);
    v38 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v6, 1, 1, v37);
    __chkstk_darwin(v38);
    *(&v44 - 2) = (char *)v11;
    v39 = swift_getKeyPath(&unk_100ED1AF8);
    __chkstk_darwin(v39);
    *(&v44 - 2) = v1;
    *(&v44 - 1) = v6;
    v53 = v1;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v53, v39, sub_100816C80, &v44 - 4, (char *)&type metadata for () + 8, v14);
    swift_release();
    v40 = sub_10004FF60((uint64_t)v6, &qword_1011CAD90);
    __chkstk_darwin(v40);
    *(&v44 - 2) = (char *)v11;
    v41 = swift_getKeyPath(&unk_100ED1B30);
    __chkstk_darwin(v41);
    *(&v44 - 2) = v1;
    *(&v44 - 1) = 0;
    v53 = v1;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v53, v41, sub_100815E6C, &v44 - 4, (char *)&type metadata for () + 8, v14);
    swift_release();
  }
}

double sub_10080E2C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t Strong;
  double result;
  uint64_t v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  _BYTE v13[16];
  uint64_t v14;
  char v15[24];

  v4 = sub_100007E8C(&qword_1011CAD90);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a2 += 16;
  swift_beginAccess(a2, v15, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v9 = Strong;
    v10 = sub_10004A160(a1, (uint64_t)v6, &qword_1011CAD90);
    __chkstk_darwin(v10);
    *(_QWORD *)&v13[-16] = type metadata accessor for JSSearchLandingItem(0);
    KeyPath = swift_getKeyPath(&unk_100ED1AF8);
    __chkstk_darwin(KeyPath);
    *(_QWORD *)&v13[-16] = v9;
    *(_QWORD *)&v13[-8] = v6;
    v14 = v9;
    v12 = sub_100049F28(&qword_1011CAFF8, &qword_1011CAFD0, (uint64_t)&unk_100ED5990);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v14, KeyPath, sub_100817104, &v13[-32], (char *)&type metadata for () + 8, v12);
    sub_10004FF60((uint64_t)v6, &qword_1011CAD90);
    swift_release();
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_10080E458(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t Strong;
  double result;
  uint64_t v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  _BYTE v13[16];
  uint64_t v14;
  char v15[24];

  v4 = sub_100007E8C(&qword_1011CAD90);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a2 += 16;
  swift_beginAccess(a2, v15, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v9 = Strong;
    v10 = sub_10004A160(a1, (uint64_t)v6, &qword_1011CAD90);
    __chkstk_darwin(v10);
    *(_QWORD *)&v13[-16] = type metadata accessor for JSFlowcaseItem(0);
    KeyPath = swift_getKeyPath(&unk_100ED1AF8);
    __chkstk_darwin(KeyPath);
    *(_QWORD *)&v13[-16] = v9;
    *(_QWORD *)&v13[-8] = v6;
    v14 = v9;
    v12 = sub_100049F28(&qword_1011CAFC8, &qword_1011CAFA0, (uint64_t)&unk_100ED5990);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v14, KeyPath, sub_1008170DC, &v13[-32], (char *)&type metadata for () + 8, v12);
    sub_10004FF60((uint64_t)v6, &qword_1011CAD90);
    swift_release();
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_10080E5F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t Strong;
  double result;
  uint64_t v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  _BYTE v13[16];
  uint64_t v14;
  char v15[24];

  v4 = sub_100007E8C(&qword_1011CAD90);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a2 += 16;
  swift_beginAccess(a2, v15, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v9 = Strong;
    v10 = sub_10004A160(a1, (uint64_t)v6, &qword_1011CAD90);
    __chkstk_darwin(v10);
    *(_QWORD *)&v13[-16] = type metadata accessor for JSShelfItem(0);
    KeyPath = swift_getKeyPath(&unk_100ED1AF8);
    __chkstk_darwin(KeyPath);
    *(_QWORD *)&v13[-16] = v9;
    *(_QWORD *)&v13[-8] = v6;
    v14 = v9;
    v12 = sub_100049F28(&qword_1011CAE28, &qword_1011CAE00, (uint64_t)&unk_100ED5990);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v14, KeyPath, sub_100817014, &v13[-32], (char *)&type metadata for () + 8, v12);
    sub_10004FF60((uint64_t)v6, &qword_1011CAD90);
    swift_release();
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_10080E788(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t Strong;
  double result;
  uint64_t v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  _BYTE v13[16];
  uint64_t v14;
  char v15[24];

  v4 = sub_100007E8C(&qword_1011CAD90);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a2 += 16;
  swift_beginAccess(a2, v15, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v9 = Strong;
    v10 = sub_10004A160(a1, (uint64_t)v6, &qword_1011CAD90);
    __chkstk_darwin(v10);
    *(_QWORD *)&v13[-16] = type metadata accessor for JSBrickItem(0);
    KeyPath = swift_getKeyPath(&unk_100ED1AF8);
    __chkstk_darwin(KeyPath);
    *(_QWORD *)&v13[-16] = v9;
    *(_QWORD *)&v13[-8] = v6;
    v14 = v9;
    v12 = sub_100049F28(&qword_1011CAF68, &qword_1011CAF40, (uint64_t)&unk_100ED5990);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v14, KeyPath, sub_10081708C, &v13[-32], (char *)&type metadata for () + 8, v12);
    sub_10004FF60((uint64_t)v6, &qword_1011CAD90);
    swift_release();
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_10080E920(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t Strong;
  double result;
  uint64_t v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  _BYTE v13[16];
  uint64_t v14;
  char v15[24];

  v4 = sub_100007E8C(&qword_1011CAD90);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a2 += 16;
  swift_beginAccess(a2, v15, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v9 = Strong;
    v10 = sub_10004A160(a1, (uint64_t)v6, &qword_1011CAD90);
    __chkstk_darwin(v10);
    *(_QWORD *)&v13[-16] = type metadata accessor for JSGridItem(0);
    KeyPath = swift_getKeyPath(&unk_100ED1AF8);
    __chkstk_darwin(KeyPath);
    *(_QWORD *)&v13[-16] = v9;
    *(_QWORD *)&v13[-8] = v6;
    v14 = v9;
    v12 = sub_100049F28(&qword_1011CAEB0, &qword_1011CAE90, (uint64_t)&unk_100ED5990);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v14, KeyPath, sub_10081703C, &v13[-32], (char *)&type metadata for () + 8, v12);
    sub_10004FF60((uint64_t)v6, &qword_1011CAD90);
    swift_release();
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_10080EAB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t Strong;
  double result;
  uint64_t v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  _BYTE v13[16];
  uint64_t v14;
  char v15[24];

  v4 = sub_100007E8C(&qword_1011CAD90);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a2 += 16;
  swift_beginAccess(a2, v15, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v9 = Strong;
    v10 = sub_10004A160(a1, (uint64_t)v6, &qword_1011CAD90);
    __chkstk_darwin(v10);
    *(_QWORD *)&v13[-16] = type metadata accessor for JSMusicVideoItem(0);
    KeyPath = swift_getKeyPath(&unk_100ED1AF8);
    __chkstk_darwin(KeyPath);
    *(_QWORD *)&v13[-16] = v9;
    *(_QWORD *)&v13[-8] = v6;
    v14 = v9;
    v12 = sub_100049F28(&qword_1011CADF8, &qword_1011CADD0, (uint64_t)&unk_100ED5990);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v14, KeyPath, sub_100816FEC, &v13[-32], (char *)&type metadata for () + 8, v12);
    sub_10004FF60((uint64_t)v6, &qword_1011CAD90);
    swift_release();
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_10080EC50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t Strong;
  double result;
  uint64_t v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  _BYTE v13[16];
  uint64_t v14;
  char v15[24];

  v4 = sub_100007E8C(&qword_1011CAD90);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a2 += 16;
  swift_beginAccess(a2, v15, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v9 = Strong;
    v10 = sub_10004A160(a1, (uint64_t)v6, &qword_1011CAD90);
    __chkstk_darwin(v10);
    *(_QWORD *)&v13[-16] = type metadata accessor for JSLiveRadioCaseItem(0);
    KeyPath = swift_getKeyPath(&unk_100ED1AF8);
    __chkstk_darwin(KeyPath);
    *(_QWORD *)&v13[-16] = v9;
    *(_QWORD *)&v13[-8] = v6;
    v14 = v9;
    v12 = sub_100049F28(&qword_1011CAF38, &qword_1011CAF18, (uint64_t)&unk_100ED5990);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v14, KeyPath, sub_100817064, &v13[-32], (char *)&type metadata for () + 8, v12);
    sub_10004FF60((uint64_t)v6, &qword_1011CAD90);
    swift_release();
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_10080EDE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t Strong;
  double result;
  uint64_t v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  _BYTE v13[16];
  uint64_t v14;
  char v15[24];

  v4 = sub_100007E8C(&qword_1011CAD90);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a2 += 16;
  swift_beginAccess(a2, v15, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v9 = Strong;
    v10 = sub_10004A160(a1, (uint64_t)v6, &qword_1011CAD90);
    __chkstk_darwin(v10);
    *(_QWORD *)&v13[-16] = type metadata accessor for JSMenuItem();
    KeyPath = swift_getKeyPath(&unk_100ED1AF8);
    __chkstk_darwin(KeyPath);
    *(_QWORD *)&v13[-16] = v9;
    *(_QWORD *)&v13[-8] = v6;
    v14 = v9;
    v12 = sub_100049F28(&qword_1011CAD80, &qword_1011CAD60, (uint64_t)&unk_100ED5990);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v14, KeyPath, sub_100816FC4, &v13[-32], (char *)&type metadata for () + 8, v12);
    sub_10004FF60((uint64_t)v6, &qword_1011CAD90);
    swift_release();
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_10080EF80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t Strong;
  double result;
  uint64_t v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  _BYTE v13[16];
  uint64_t v14;
  char v15[24];

  v4 = sub_100007E8C(&qword_1011CAD90);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a2 += 16;
  swift_beginAccess(a2, v15, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v9 = Strong;
    v10 = sub_10004A160(a1, (uint64_t)v6, &qword_1011CAD90);
    __chkstk_darwin(v10);
    *(_QWORD *)&v13[-16] = type metadata accessor for JSTVShowEpisodeDetailItem(0);
    KeyPath = swift_getKeyPath(&unk_100ED1AF8);
    __chkstk_darwin(KeyPath);
    *(_QWORD *)&v13[-16] = v9;
    *(_QWORD *)&v13[-8] = v6;
    v14 = v9;
    v12 = sub_100049F28(&qword_1011CAF98, &qword_1011CAF70, (uint64_t)&unk_100ED5990);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v14, KeyPath, sub_1008170B4, &v13[-32], (char *)&type metadata for () + 8, v12);
    sub_10004FF60((uint64_t)v6, &qword_1011CAD90);
    swift_release();
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_10080F118(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  _BYTE v7[24];

  v5 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 96);
  swift_beginAccess(v5, v7, 33, 0);
  sub_1001A83C8(a2, v5, a3);
  return swift_endAccess(v7);
}

uint64_t sub_10080F188()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[2];
  _QWORD *v25;
  _QWORD v26[3];

  v1 = sub_100007E8C(&qword_10119EC48);
  __chkstk_darwin(v1);
  v3 = (_QWORD *)((char *)v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_100007E8C(&qword_1011CAD90);
  __chkstk_darwin(v4);
  v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011B5DB0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for JSSearchLandingItem(0);
  v24[0] = v11;
  KeyPath = swift_getKeyPath(&unk_100ED1AF8);
  v26[0] = v0;
  v13 = sub_100049F28(&qword_1011CAFF8, &qword_1011CAFD0, (uint64_t)&unk_100ED5990);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v26, KeyPath, v13);
  swift_release();
  v14 = (uint64_t)v0 + *(_QWORD *)(*v0 + 104);
  swift_beginAccess(v14, v26, 0, 0);
  sub_10004A160(v14, (uint64_t)v6, &qword_1011CAD90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    v15 = sub_10004FF60((uint64_t)v6, &qword_1011CAD90);
    __chkstk_darwin(v15);
    v24[-2] = v11;
    v16 = swift_getKeyPath(&unk_100ED1A88);
    v25 = v0;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v25, v16, v13);
    swift_release();
    *v3 = v0[2];
    v17 = sub_100007E8C(&qword_1011CAFD8);
    v18 = swift_storeEnumTagMultiPayload(v3, v17, 0);
    __chkstk_darwin(v18);
    v24[-2] = v11;
    v19 = swift_getKeyPath(&unk_100ED1B68);
    __chkstk_darwin(v19);
    v24[-2] = v0;
    v24[-1] = v3;
    v25 = v0;
    swift_bridgeObjectRetain();
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v25, v19, sub_100816F68, &v24[-4], (char *)&type metadata for () + 8, v13);
    swift_release();
    return sub_10004FF60((uint64_t)v3, &qword_10119EC48);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    (*(void (**)(_QWORD *, char *, uint64_t))(v8 + 16))(v3, v10, v7);
    v21 = sub_100007E8C(&qword_1011CAFD8);
    v22 = swift_storeEnumTagMultiPayload(v3, v21, 1);
    __chkstk_darwin(v22);
    v24[-2] = v11;
    v23 = swift_getKeyPath(&unk_100ED1B68);
    __chkstk_darwin(v23);
    v24[-2] = v0;
    v24[-1] = v3;
    v25 = v0;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v25, v23, sub_100817118, &v24[-4], (char *)&type metadata for () + 8, v13);
    swift_release();
    sub_10004FF60((uint64_t)v3, &qword_10119EC48);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

uint64_t sub_10080F568()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[2];
  _QWORD *v25;
  _QWORD v26[3];

  v1 = sub_100007E8C(&qword_1011A7920);
  __chkstk_darwin(v1);
  v3 = (_QWORD *)((char *)v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_100007E8C(&qword_1011CAD90);
  __chkstk_darwin(v4);
  v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011B5DB0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for JSFlowcaseItem(0);
  v24[0] = v11;
  KeyPath = swift_getKeyPath(&unk_100ED1AF8);
  v26[0] = v0;
  v13 = sub_100049F28(&qword_1011CAFC8, &qword_1011CAFA0, (uint64_t)&unk_100ED5990);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v26, KeyPath, v13);
  swift_release();
  v14 = (uint64_t)v0 + *(_QWORD *)(*v0 + 104);
  swift_beginAccess(v14, v26, 0, 0);
  sub_10004A160(v14, (uint64_t)v6, &qword_1011CAD90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    v15 = sub_10004FF60((uint64_t)v6, &qword_1011CAD90);
    __chkstk_darwin(v15);
    v24[-2] = v11;
    v16 = swift_getKeyPath(&unk_100ED1A88);
    v25 = v0;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v25, v16, v13);
    swift_release();
    *v3 = v0[2];
    v17 = sub_100007E8C(&qword_1011CAFA8);
    v18 = swift_storeEnumTagMultiPayload(v3, v17, 0);
    __chkstk_darwin(v18);
    v24[-2] = v11;
    v19 = swift_getKeyPath(&unk_100ED1B68);
    __chkstk_darwin(v19);
    v24[-2] = v0;
    v24[-1] = v3;
    v25 = v0;
    swift_bridgeObjectRetain();
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v25, v19, sub_100816D88, &v24[-4], (char *)&type metadata for () + 8, v13);
    swift_release();
    return sub_10004FF60((uint64_t)v3, &qword_1011A7920);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    (*(void (**)(_QWORD *, char *, uint64_t))(v8 + 16))(v3, v10, v7);
    v21 = sub_100007E8C(&qword_1011CAFA8);
    v22 = swift_storeEnumTagMultiPayload(v3, v21, 1);
    __chkstk_darwin(v22);
    v24[-2] = v11;
    v23 = swift_getKeyPath(&unk_100ED1B68);
    __chkstk_darwin(v23);
    v24[-2] = v0;
    v24[-1] = v3;
    v25 = v0;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v25, v23, sub_1008170F0, &v24[-4], (char *)&type metadata for () + 8, v13);
    swift_release();
    sub_10004FF60((uint64_t)v3, &qword_1011A7920);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

uint64_t sub_10080F948()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[2];
  _QWORD *v25;
  _QWORD v26[3];

  v1 = sub_100007E8C(&qword_1011C3208);
  __chkstk_darwin(v1);
  v3 = (_QWORD *)((char *)v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_100007E8C(&qword_1011CAD90);
  __chkstk_darwin(v4);
  v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011B5DB0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for JSShelfItem(0);
  v24[0] = v11;
  KeyPath = swift_getKeyPath(&unk_100ED1AF8);
  v26[0] = v0;
  v13 = sub_100049F28(&qword_1011CAE28, &qword_1011CAE00, (uint64_t)&unk_100ED5990);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v26, KeyPath, v13);
  swift_release();
  v14 = (uint64_t)v0 + *(_QWORD *)(*v0 + 104);
  swift_beginAccess(v14, v26, 0, 0);
  sub_10004A160(v14, (uint64_t)v6, &qword_1011CAD90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    v15 = sub_10004FF60((uint64_t)v6, &qword_1011CAD90);
    __chkstk_darwin(v15);
    v24[-2] = v11;
    v16 = swift_getKeyPath(&unk_100ED1A88);
    v25 = v0;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v25, v16, v13);
    swift_release();
    *v3 = v0[2];
    v17 = sub_100007E8C(&qword_1011CAE08);
    v18 = swift_storeEnumTagMultiPayload(v3, v17, 0);
    __chkstk_darwin(v18);
    v24[-2] = v11;
    v19 = swift_getKeyPath(&unk_100ED1B68);
    __chkstk_darwin(v19);
    v24[-2] = v0;
    v24[-1] = v3;
    v25 = v0;
    swift_bridgeObjectRetain();
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v25, v19, sub_1008160C8, &v24[-4], (char *)&type metadata for () + 8, v13);
    swift_release();
    return sub_10004FF60((uint64_t)v3, &qword_1011C3208);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    (*(void (**)(_QWORD *, char *, uint64_t))(v8 + 16))(v3, v10, v7);
    v21 = sub_100007E8C(&qword_1011CAE08);
    v22 = swift_storeEnumTagMultiPayload(v3, v21, 1);
    __chkstk_darwin(v22);
    v24[-2] = v11;
    v23 = swift_getKeyPath(&unk_100ED1B68);
    __chkstk_darwin(v23);
    v24[-2] = v0;
    v24[-1] = v3;
    v25 = v0;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v25, v23, sub_100817028, &v24[-4], (char *)&type metadata for () + 8, v13);
    swift_release();
    sub_10004FF60((uint64_t)v3, &qword_1011C3208);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

uint64_t sub_10080FD28()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[2];
  _QWORD *v25;
  _QWORD v26[3];

  v1 = sub_100007E8C(&qword_1011B5FC8);
  __chkstk_darwin(v1);
  v3 = (_QWORD *)((char *)v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_100007E8C(&qword_1011CAD90);
  __chkstk_darwin(v4);
  v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011B5DB0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for JSBrickItem(0);
  v24[0] = v11;
  KeyPath = swift_getKeyPath(&unk_100ED1AF8);
  v26[0] = v0;
  v13 = sub_100049F28(&qword_1011CAF68, &qword_1011CAF40, (uint64_t)&unk_100ED5990);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v26, KeyPath, v13);
  swift_release();
  v14 = (uint64_t)v0 + *(_QWORD *)(*v0 + 104);
  swift_beginAccess(v14, v26, 0, 0);
  sub_10004A160(v14, (uint64_t)v6, &qword_1011CAD90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    v15 = sub_10004FF60((uint64_t)v6, &qword_1011CAD90);
    __chkstk_darwin(v15);
    v24[-2] = v11;
    v16 = swift_getKeyPath(&unk_100ED1A88);
    v25 = v0;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v25, v16, v13);
    swift_release();
    *v3 = v0[2];
    v17 = sub_100007E8C(&qword_1011CAF48);
    v18 = swift_storeEnumTagMultiPayload(v3, v17, 0);
    __chkstk_darwin(v18);
    v24[-2] = v11;
    v19 = swift_getKeyPath(&unk_100ED1B68);
    __chkstk_darwin(v19);
    v24[-2] = v0;
    v24[-1] = v3;
    v25 = v0;
    swift_bridgeObjectRetain();
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v25, v19, sub_10081695C, &v24[-4], (char *)&type metadata for () + 8, v13);
    swift_release();
    return sub_10004FF60((uint64_t)v3, &qword_1011B5FC8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    (*(void (**)(_QWORD *, char *, uint64_t))(v8 + 16))(v3, v10, v7);
    v21 = sub_100007E8C(&qword_1011CAF48);
    v22 = swift_storeEnumTagMultiPayload(v3, v21, 1);
    __chkstk_darwin(v22);
    v24[-2] = v11;
    v23 = swift_getKeyPath(&unk_100ED1B68);
    __chkstk_darwin(v23);
    v24[-2] = v0;
    v24[-1] = v3;
    v25 = v0;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v25, v23, sub_1008170A0, &v24[-4], (char *)&type metadata for () + 8, v13);
    swift_release();
    sub_10004FF60((uint64_t)v3, &qword_1011B5FC8);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

uint64_t sub_100810108()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[2];
  _QWORD *v25;
  _QWORD v26[3];

  v1 = sub_100007E8C(&qword_1011B5DA0);
  __chkstk_darwin(v1);
  v3 = (_QWORD *)((char *)v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_100007E8C(&qword_1011CAD90);
  __chkstk_darwin(v4);
  v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011B5DB0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for JSGridItem(0);
  v24[0] = v11;
  KeyPath = swift_getKeyPath(&unk_100ED1AF8);
  v26[0] = v0;
  v13 = sub_100049F28(&qword_1011CAEB0, &qword_1011CAE90, (uint64_t)&unk_100ED5990);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v26, KeyPath, v13);
  swift_release();
  v14 = (uint64_t)v0 + *(_QWORD *)(*v0 + 104);
  swift_beginAccess(v14, v26, 0, 0);
  sub_10004A160(v14, (uint64_t)v6, &qword_1011CAD90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    v15 = sub_10004FF60((uint64_t)v6, &qword_1011CAD90);
    __chkstk_darwin(v15);
    v24[-2] = v11;
    v16 = swift_getKeyPath(&unk_100ED1A88);
    v25 = v0;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v25, v16, v13);
    swift_release();
    *v3 = v0[2];
    v17 = sub_100007E8C(&qword_1011B5DB8);
    v18 = swift_storeEnumTagMultiPayload(v3, v17, 0);
    __chkstk_darwin(v18);
    v24[-2] = v11;
    v19 = swift_getKeyPath(&unk_100ED1B68);
    __chkstk_darwin(v19);
    v24[-2] = v0;
    v24[-1] = v3;
    v25 = v0;
    swift_bridgeObjectRetain();
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v25, v19, sub_1008164B4, &v24[-4], (char *)&type metadata for () + 8, v13);
    swift_release();
    return sub_10004FF60((uint64_t)v3, &qword_1011B5DA0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    (*(void (**)(_QWORD *, char *, uint64_t))(v8 + 16))(v3, v10, v7);
    v21 = sub_100007E8C(&qword_1011B5DB8);
    v22 = swift_storeEnumTagMultiPayload(v3, v21, 1);
    __chkstk_darwin(v22);
    v24[-2] = v11;
    v23 = swift_getKeyPath(&unk_100ED1B68);
    __chkstk_darwin(v23);
    v24[-2] = v0;
    v24[-1] = v3;
    v25 = v0;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v25, v23, sub_100817050, &v24[-4], (char *)&type metadata for () + 8, v13);
    swift_release();
    sub_10004FF60((uint64_t)v3, &qword_1011B5DA0);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

uint64_t sub_1008104E8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[2];
  _QWORD *v25;
  _QWORD v26[3];

  v1 = sub_100007E8C(&qword_1011C4318);
  __chkstk_darwin(v1);
  v3 = (_QWORD *)((char *)v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_100007E8C(&qword_1011CAD90);
  __chkstk_darwin(v4);
  v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011B5DB0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for JSMusicVideoItem(0);
  v24[0] = v11;
  KeyPath = swift_getKeyPath(&unk_100ED1AF8);
  v26[0] = v0;
  v13 = sub_100049F28(&qword_1011CADF8, &qword_1011CADD0, (uint64_t)&unk_100ED5990);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v26, KeyPath, v13);
  swift_release();
  v14 = (uint64_t)v0 + *(_QWORD *)(*v0 + 104);
  swift_beginAccess(v14, v26, 0, 0);
  sub_10004A160(v14, (uint64_t)v6, &qword_1011CAD90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    v15 = sub_10004FF60((uint64_t)v6, &qword_1011CAD90);
    __chkstk_darwin(v15);
    v24[-2] = v11;
    v16 = swift_getKeyPath(&unk_100ED1A88);
    v25 = v0;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v25, v16, v13);
    swift_release();
    *v3 = v0[2];
    v17 = sub_100007E8C(&qword_1011CADD8);
    v18 = swift_storeEnumTagMultiPayload(v3, v17, 0);
    __chkstk_darwin(v18);
    v24[-2] = v11;
    v19 = swift_getKeyPath(&unk_100ED1B68);
    __chkstk_darwin(v19);
    v24[-2] = v0;
    v24[-1] = v3;
    v25 = v0;
    swift_bridgeObjectRetain();
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v25, v19, sub_100815FE8, &v24[-4], (char *)&type metadata for () + 8, v13);
    swift_release();
    return sub_10004FF60((uint64_t)v3, &qword_1011C4318);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    (*(void (**)(_QWORD *, char *, uint64_t))(v8 + 16))(v3, v10, v7);
    v21 = sub_100007E8C(&qword_1011CADD8);
    v22 = swift_storeEnumTagMultiPayload(v3, v21, 1);
    __chkstk_darwin(v22);
    v24[-2] = v11;
    v23 = swift_getKeyPath(&unk_100ED1B68);
    __chkstk_darwin(v23);
    v24[-2] = v0;
    v24[-1] = v3;
    v25 = v0;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v25, v23, sub_100817000, &v24[-4], (char *)&type metadata for () + 8, v13);
    swift_release();
    sub_10004FF60((uint64_t)v3, &qword_1011C4318);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

uint64_t sub_1008108C8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[2];
  _QWORD *v25;
  _QWORD v26[3];

  v1 = sub_100007E8C(&qword_1011B7668);
  __chkstk_darwin(v1);
  v3 = (_QWORD *)((char *)v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_100007E8C(&qword_1011CAD90);
  __chkstk_darwin(v4);
  v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011B5DB0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for JSLiveRadioCaseItem(0);
  v24[0] = v11;
  KeyPath = swift_getKeyPath(&unk_100ED1AF8);
  v26[0] = v0;
  v13 = sub_100049F28(&qword_1011CAF38, &qword_1011CAF18, (uint64_t)&unk_100ED5990);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v26, KeyPath, v13);
  swift_release();
  v14 = (uint64_t)v0 + *(_QWORD *)(*v0 + 104);
  swift_beginAccess(v14, v26, 0, 0);
  sub_10004A160(v14, (uint64_t)v6, &qword_1011CAD90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    v15 = sub_10004FF60((uint64_t)v6, &qword_1011CAD90);
    __chkstk_darwin(v15);
    v24[-2] = v11;
    v16 = swift_getKeyPath(&unk_100ED1A88);
    v25 = v0;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v25, v16, v13);
    swift_release();
    *v3 = v0[2];
    v17 = sub_100007E8C(&qword_1011B7660);
    v18 = swift_storeEnumTagMultiPayload(v3, v17, 0);
    __chkstk_darwin(v18);
    v24[-2] = v11;
    v19 = swift_getKeyPath(&unk_100ED1B68);
    __chkstk_darwin(v19);
    v24[-2] = v0;
    v24[-1] = v3;
    v25 = v0;
    swift_bridgeObjectRetain();
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v25, v19, sub_10081687C, &v24[-4], (char *)&type metadata for () + 8, v13);
    swift_release();
    return sub_10004FF60((uint64_t)v3, &qword_1011B7668);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    (*(void (**)(_QWORD *, char *, uint64_t))(v8 + 16))(v3, v10, v7);
    v21 = sub_100007E8C(&qword_1011B7660);
    v22 = swift_storeEnumTagMultiPayload(v3, v21, 1);
    __chkstk_darwin(v22);
    v24[-2] = v11;
    v23 = swift_getKeyPath(&unk_100ED1B68);
    __chkstk_darwin(v23);
    v24[-2] = v0;
    v24[-1] = v3;
    v25 = v0;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v25, v23, sub_100817078, &v24[-4], (char *)&type metadata for () + 8, v13);
    swift_release();
    sub_10004FF60((uint64_t)v3, &qword_1011B7668);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

uint64_t sub_100810CA8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[2];
  _QWORD *v25;
  _QWORD v26[3];

  v1 = sub_100007E8C(&qword_1011A79B0);
  __chkstk_darwin(v1);
  v3 = (_QWORD *)((char *)v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_100007E8C(&qword_1011CAD90);
  __chkstk_darwin(v4);
  v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011B5DB0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for JSMenuItem();
  v24[0] = v11;
  KeyPath = swift_getKeyPath(&unk_100ED1AF8);
  v26[0] = v0;
  v13 = sub_100049F28(&qword_1011CAD80, &qword_1011CAD60, (uint64_t)&unk_100ED5990);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v26, KeyPath, v13);
  swift_release();
  v14 = (uint64_t)v0 + *(_QWORD *)(*v0 + 104);
  swift_beginAccess(v14, v26, 0, 0);
  sub_10004A160(v14, (uint64_t)v6, &qword_1011CAD90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    v15 = sub_10004FF60((uint64_t)v6, &qword_1011CAD90);
    __chkstk_darwin(v15);
    v24[-2] = v11;
    v16 = swift_getKeyPath(&unk_100ED1A88);
    v25 = v0;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v25, v16, v13);
    swift_release();
    *v3 = v0[2];
    v17 = sub_100007E8C(&qword_1011A7AA8);
    v18 = swift_storeEnumTagMultiPayload(v3, v17, 0);
    __chkstk_darwin(v18);
    v24[-2] = v11;
    v19 = swift_getKeyPath(&unk_100ED1B68);
    __chkstk_darwin(v19);
    v24[-2] = v0;
    v24[-1] = v3;
    v25 = v0;
    swift_bridgeObjectRetain();
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v25, v19, sub_100815E9C, &v24[-4], (char *)&type metadata for () + 8, v13);
    swift_release();
    return sub_10004FF60((uint64_t)v3, &qword_1011A79B0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    (*(void (**)(_QWORD *, char *, uint64_t))(v8 + 16))(v3, v10, v7);
    v21 = sub_100007E8C(&qword_1011A7AA8);
    v22 = swift_storeEnumTagMultiPayload(v3, v21, 1);
    __chkstk_darwin(v22);
    v24[-2] = v11;
    v23 = swift_getKeyPath(&unk_100ED1B68);
    __chkstk_darwin(v23);
    v24[-2] = v0;
    v24[-1] = v3;
    v25 = v0;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v25, v23, sub_100816FD8, &v24[-4], (char *)&type metadata for () + 8, v13);
    swift_release();
    sub_10004FF60((uint64_t)v3, &qword_1011A79B0);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

uint64_t sub_100811088()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[2];
  _QWORD *v25;
  _QWORD v26[3];

  v1 = sub_100007E8C(&qword_1011AF350);
  __chkstk_darwin(v1);
  v3 = (_QWORD *)((char *)v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_100007E8C(&qword_1011CAD90);
  __chkstk_darwin(v4);
  v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011B5DB0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for JSTVShowEpisodeDetailItem(0);
  v24[0] = v11;
  KeyPath = swift_getKeyPath(&unk_100ED1AF8);
  v26[0] = v0;
  v13 = sub_100049F28(&qword_1011CAF98, &qword_1011CAF70, (uint64_t)&unk_100ED5990);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v26, KeyPath, v13);
  swift_release();
  v14 = (uint64_t)v0 + *(_QWORD *)(*v0 + 104);
  swift_beginAccess(v14, v26, 0, 0);
  sub_10004A160(v14, (uint64_t)v6, &qword_1011CAD90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    v15 = sub_10004FF60((uint64_t)v6, &qword_1011CAD90);
    __chkstk_darwin(v15);
    v24[-2] = v11;
    v16 = swift_getKeyPath(&unk_100ED1A88);
    v25 = v0;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v25, v16, v13);
    swift_release();
    *v3 = v0[2];
    v17 = sub_100007E8C(&qword_1011CAF78);
    v18 = swift_storeEnumTagMultiPayload(v3, v17, 0);
    __chkstk_darwin(v18);
    v24[-2] = v11;
    v19 = swift_getKeyPath(&unk_100ED1B68);
    __chkstk_darwin(v19);
    v24[-2] = v0;
    v24[-1] = v3;
    v25 = v0;
    swift_bridgeObjectRetain();
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v25, v19, sub_100816CA8, &v24[-4], (char *)&type metadata for () + 8, v13);
    swift_release();
    return sub_10004FF60((uint64_t)v3, &qword_1011AF350);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    (*(void (**)(_QWORD *, char *, uint64_t))(v8 + 16))(v3, v10, v7);
    v21 = sub_100007E8C(&qword_1011CAF78);
    v22 = swift_storeEnumTagMultiPayload(v3, v21, 1);
    __chkstk_darwin(v22);
    v24[-2] = v11;
    v23 = swift_getKeyPath(&unk_100ED1B68);
    __chkstk_darwin(v23);
    v24[-2] = v0;
    v24[-1] = v3;
    v25 = v0;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v25, v23, sub_1008170C8, &v24[-4], (char *)&type metadata for () + 8, v13);
    swift_release();
    sub_10004FF60((uint64_t)v3, &qword_1011AF350);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

uint64_t sub_100811468(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v13[24];

  v6 = sub_100007E8C(&qword_1011CAD90);
  __chkstk_darwin(v6);
  v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_10004A160(a2, (uint64_t)v8, &qword_1011CAD90);
  v9 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 104);
  swift_beginAccess(v9, v13, 33, 0);
  sub_1001A83C8((uint64_t)v8, v9, &qword_1011CAD90);
  v10 = swift_endAccess(v13);
  a3(v10);
  return sub_10004FF60((uint64_t)v8, &qword_1011CAD90);
}

uint64_t sub_100811544(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100049F28(&qword_1011CACE0, &qword_1011CACD8, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          sub_100007E8C(&qword_1011CACD8);
          v13 = sub_100812A88(v18, i, a3);
          v15 = *v14;
          ((void (*)(void (**)(id *), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10004A07C(0, &qword_1011A3F70, UIBarButtonItem_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100811760(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100049F28(&qword_1011CACA8, &qword_1011CACA0, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          sub_100007E8C(&qword_1011CACA0);
          v13 = sub_100812A88(v18, i, a3);
          v15 = *v14;
          ((void (*)(void (**)(id *), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10004A07C(0, (unint64_t *)&unk_1011A30B0, UIActivity_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10081197C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1008119A0(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for JSMediaItem, &qword_1011CACB8, &qword_1011CACB0, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_100812A88);
}

uint64_t sub_1008119A0(unint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t i;
  uint64_t v22;
  void (*v23)(_BYTE *, _QWORD);
  id *v24;
  id v25;
  uint64_t v26;
  uint64_t result;
  _BYTE v28[32];

  v14 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v26 = a3;
    else
      v26 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v15 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease(a3);
    if (!v15)
      return a3;
  }
  else
  {
    v15 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v15)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    if (a3 < 0)
      v18 = a3;
    else
      v18 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v19 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(a3);
    if (v19 <= a2)
    {
      if (v15 >= 1)
      {
        v20 = sub_100049F28(a5, a6, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v15; ++i)
        {
          v22 = sub_100007E8C(a6);
          v23 = (void (*)(_BYTE *, _QWORD))a7(v28, i, a3, v22, v20);
          v25 = *v24;
          v23(v28, 0);
          *(_QWORD *)(a1 + 8 * i) = v25;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v17 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    a4(0);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100811BB0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100049F28(&qword_1011CAC98, &qword_1011CAC90, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          sub_100007E8C(&qword_1011CAC90);
          v13 = sub_100812A88(v18, i, a3);
          v15 = *v14;
          ((void (*)(void (**)(id *), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10004A07C(0, &qword_1011A1480, NSLayoutConstraint_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100811DCC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100049F28(&qword_1011CAD58, &qword_1011CAD50, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          sub_100007E8C(&qword_1011CAD50);
          v13 = sub_100812A88(v18, i, a3);
          v15 = *v14;
          ((void (*)(void (**)(id *), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10004A07C(0, (unint64_t *)&qword_1011A20A0, UIView_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100811FE8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100049F28(&qword_1011CAD48, &qword_1011CAD40, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          sub_100007E8C(&qword_1011CAD40);
          v13 = sub_100812A88(v18, i, a3);
          v15 = *v14;
          ((void (*)(void (**)(id *), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10004A07C(0, &qword_1011D10A0, UIMenuElement_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100812204(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1008119A0(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for BottomPlayerManager.Queue, &qword_1011CACD0, &qword_1011CACC8, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_100812A88);
}

uint64_t sub_100812228(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease();
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100049F28(&qword_1011CACF0, &qword_1011CACE8, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          sub_100007E8C(&qword_1011CACE8);
          v13 = sub_100812A88(v18, i, a3);
          v15 = *v14;
          ((void (*)(void (**)(id *), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10004A07C(0, &qword_1011B6138, _UITabElement_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100812444(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease();
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100049F28(&qword_1011CAD00, &qword_1011CACF8, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          sub_100007E8C(&qword_1011CACF8);
          v13 = sub_100812A88(v18, i, a3);
          v15 = *v14;
          ((void (*)(void (**)(id *), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10004A07C(0, &qword_10119D458, _UITab_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100812660(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  uint64_t *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t result;
  uint64_t *v19[4];

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v17 = a3;
    else
      v17 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v7 = _CocoaArrayWrapper.endIndex.getter(v17);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100049F28(&qword_1011CACC0, &qword_1011B3990, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          sub_100007E8C(&qword_1011B3990);
          v13 = sub_100812B34(v19, i, a3);
          v15 = *v14;
          v16 = swift_retain();
          ((void (*)(uint64_t **, _QWORD, __n128))v13)(v19, 0, v16);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for MusicLibrary(0);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10081286C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease();
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100049F28(&qword_1011CAD20, &qword_1011CAD18, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          sub_100007E8C(&qword_1011CAD18);
          v13 = sub_100812A88(v18, i, a3);
          v15 = *v14;
          ((void (*)(void (**)(id *), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10004A07C(0, &qword_1011A33B0, UIWindow_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

void (*sub_100812A88(void (**a1)(id *), unint64_t a2, uint64_t a3))(_QWORD *)
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_100812B88(v6, a2, a3);
  return sub_100812ADC;
}

void (*sub_100812AE0(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(_QWORD *)
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_100812BF4(v6, a2, a3);
  return sub_100812ADC;
}

void (*sub_100812B34(uint64_t **a1, unint64_t a2, uint64_t a3))(_QWORD *)
{
  uint64_t *v6;

  v6 = (uint64_t *)malloc(0x28uLL);
  *a1 = v6;
  v6[4] = (uint64_t)sub_100812C60(v6, a2, a3);
  return sub_100812ADC;
}

void (*sub_100812B88(void (*result)(id *), unint64_t a2, uint64_t a3))(id *)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return j__s11MusicJSCore21JSComponentControllerC11EnvironmentVwxx;
  }
  __break(1u);
  return result;
}

void (*sub_100812BF4(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return destroy for JSComponentController.Environment;
  }
  __break(1u);
  return result;
}

uint64_t *sub_100812C60(uint64_t *result, unint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    swift_retain(*(_QWORD *)(a3 + 8 * a2 + 32));
LABEL_5:
    *v3 = v4;
    return (uint64_t *)destroy for PresentationKind.NowPlayingDestination;
  }
  __break(1u);
  return result;
}

uint64_t destroy for PresentationKind.NowPlayingDestination(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t sub_100812CD4(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  id v22;
  __n128 v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;

  v2 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v2);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011CAFD0);
  v6 = (_QWORD *)swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  v6[2] = _swiftEmptyArrayStorage;
  v7 = (_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 96));
  *v7 = _swiftEmptyArrayStorage;
  v8 = sub_100007E8C(&qword_1011CAFD8);
  swift_storeEnumTagMultiPayload(v7, v8, 0);
  v9 = (char *)v6 + *(_QWORD *)(*v6 + 104);
  v10 = sub_100007E8C(&qword_1011B5DB0);
  v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  v11(v9, 1, 1, v10);
  v12 = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v11)(v9, 1, 1, v10);
  *(_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 112)) = 0;
  *(_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 120)) = 0;
  ObservationRegistrar.init()(v12);
  v29 = v6;
  State.init(wrappedValue:)(&v29, v5);
  v13 = v30;
  v14 = v31;
  v15 = type metadata accessor for JSSearchLandingViewModel(0);
  v16 = sub_100048748((unint64_t *)&qword_10119EBE8, type metadata accessor for JSSearchLandingViewModel, (uint64_t)&protocol conformance descriptor for JSSearchLandingViewModel);
  swift_retain(v13);
  swift_retain(v14);
  v17 = a1;
  v18 = ObservedObject.init(wrappedValue:)(v17, v15, v16);
  v19 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v4, 1, 1, v19);
  v30 = v13;
  v31 = v14;
  v20 = sub_100007E8C(&qword_1011CAFE0);
  State.wrappedValue.getter(&v29, v20);
  swift_release(v14);
  swift_release(v13);
  v21 = v29;
  type metadata accessor for MainActor(0);
  v22 = v17;
  v24 = static MainActor.shared.getter(v23);
  v25 = (_QWORD *)swift_allocObject(&unk_1010DDD70, 48, 7);
  v25[2] = v24;
  v25[3] = &protocol witness table for MainActor;
  v25[4] = v21;
  v25[5] = v22;
  v26 = sub_100166D14((uint64_t)v4, (uint64_t)&unk_1011CAFF0, (uint64_t)v25);
  swift_release(v26);
  return v18;
}

uint64_t sub_100812F40(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  id v22;
  __n128 v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;

  v2 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v2);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011CAFA0);
  v6 = (_QWORD *)swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  v6[2] = _swiftEmptyArrayStorage;
  v7 = (_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 96));
  *v7 = _swiftEmptyArrayStorage;
  v8 = sub_100007E8C(&qword_1011CAFA8);
  swift_storeEnumTagMultiPayload(v7, v8, 0);
  v9 = (char *)v6 + *(_QWORD *)(*v6 + 104);
  v10 = sub_100007E8C(&qword_1011B5DB0);
  v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  v11(v9, 1, 1, v10);
  v12 = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v11)(v9, 1, 1, v10);
  *(_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 112)) = 0;
  *(_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 120)) = 0;
  ObservationRegistrar.init()(v12);
  v29 = v6;
  State.init(wrappedValue:)(&v29, v5);
  v13 = v30;
  v14 = v31;
  v15 = type metadata accessor for JSFlowcase(0);
  v16 = sub_100048748((unint64_t *)&qword_1011A78D8, type metadata accessor for JSFlowcase, (uint64_t)&protocol conformance descriptor for JSFlowcase);
  swift_retain(v13);
  swift_retain(v14);
  v17 = a1;
  v18 = ObservedObject.init(wrappedValue:)(v17, v15, v16);
  v19 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v4, 1, 1, v19);
  v30 = v13;
  v31 = v14;
  v20 = sub_100007E8C(&qword_1011CAFB0);
  State.wrappedValue.getter(&v29, v20);
  swift_release(v14);
  swift_release(v13);
  v21 = v29;
  type metadata accessor for MainActor(0);
  v22 = v17;
  v24 = static MainActor.shared.getter(v23);
  v25 = (_QWORD *)swift_allocObject(&unk_1010DDD20, 48, 7);
  v25[2] = v24;
  v25[3] = &protocol witness table for MainActor;
  v25[4] = v21;
  v25[5] = v22;
  v26 = sub_100166D14((uint64_t)v4, (uint64_t)&unk_1011CAFC0, (uint64_t)v25);
  swift_release(v26);
  return v18;
}

uint64_t sub_1008131AC(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  id v22;
  __n128 v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;

  v2 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011CAE00);
  v6 = (_QWORD *)swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  v6[2] = _swiftEmptyArrayStorage;
  v7 = (_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 96));
  *v7 = _swiftEmptyArrayStorage;
  v8 = sub_100007E8C(&qword_1011CAE08);
  swift_storeEnumTagMultiPayload(v7, v8, 0);
  v9 = (char *)v6 + *(_QWORD *)(*v6 + 104);
  v10 = sub_100007E8C(&qword_1011B5DB0);
  v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  v11(v9, 1, 1, v10);
  v12 = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v11)(v9, 1, 1, v10);
  *(_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 112)) = 0;
  *(_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 120)) = 0;
  ObservationRegistrar.init()(v12);
  v28 = v6;
  State.init(wrappedValue:)(&v28, v5);
  v13 = v29;
  v14 = v30;
  v15 = type metadata accessor for JSShelf(0);
  v16 = sub_100048748(&qword_1011C2EA0, type metadata accessor for JSShelf, (uint64_t)&protocol conformance descriptor for JSShelf);
  swift_retain();
  swift_retain();
  v17 = a1;
  v18 = ObservedObject.init(wrappedValue:)(v17, v15, v16);
  v19 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v4, 1, 1, v19);
  v29 = v13;
  v30 = v14;
  v20 = sub_100007E8C(&qword_1011CAE10);
  State.wrappedValue.getter(&v28, v20);
  swift_release();
  swift_release();
  v21 = v28;
  type metadata accessor for MainActor(0);
  v22 = v17;
  v24 = static MainActor.shared.getter(v23);
  v25 = (_QWORD *)swift_allocObject(&unk_1010DD9B0, 48, 7);
  v25[2] = v24;
  v25[3] = &protocol witness table for MainActor;
  v25[4] = v21;
  v25[5] = v22;
  sub_100166D14((uint64_t)v4, (uint64_t)&unk_1011CAE20, (uint64_t)v25);
  swift_release();
  return v18;
}

uint64_t sub_100813418(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  id v22;
  __n128 v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;

  v2 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011CAE00);
  v6 = (_QWORD *)swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  v6[2] = _swiftEmptyArrayStorage;
  v7 = (_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 96));
  *v7 = _swiftEmptyArrayStorage;
  v8 = sub_100007E8C(&qword_1011CAE08);
  swift_storeEnumTagMultiPayload(v7, v8, 0);
  v9 = (char *)v6 + *(_QWORD *)(*v6 + 104);
  v10 = sub_100007E8C(&qword_1011B5DB0);
  v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  v11(v9, 1, 1, v10);
  v12 = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v11)(v9, 1, 1, v10);
  *(_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 112)) = 0;
  *(_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 120)) = 0;
  ObservationRegistrar.init()(v12);
  v28 = v6;
  State.init(wrappedValue:)(&v28, v5);
  v13 = v29;
  v14 = v30;
  v15 = type metadata accessor for JSShelf(0);
  v16 = sub_100048748(&qword_1011C2EA0, type metadata accessor for JSShelf, (uint64_t)&protocol conformance descriptor for JSShelf);
  swift_retain();
  swift_retain();
  v17 = a1;
  v18 = ObservedObject.init(wrappedValue:)(v17, v15, v16);
  v19 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v4, 1, 1, v19);
  v29 = v13;
  v30 = v14;
  v20 = sub_100007E8C(&qword_1011CAE10);
  State.wrappedValue.getter(&v28, v20);
  swift_release();
  swift_release();
  v21 = v28;
  type metadata accessor for MainActor(0);
  v22 = v17;
  v24 = static MainActor.shared.getter(v23);
  v25 = (_QWORD *)swift_allocObject(&unk_1010DDA00, 48, 7);
  v25[2] = v24;
  v25[3] = &protocol witness table for MainActor;
  v25[4] = v21;
  v25[5] = v22;
  sub_100166D14((uint64_t)v4, (uint64_t)&unk_1011CAE38, (uint64_t)v25);
  swift_release();
  return v18;
}

uint64_t sub_100813684(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  id v22;
  __n128 v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;

  v2 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011CAE00);
  v6 = (_QWORD *)swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  v6[2] = _swiftEmptyArrayStorage;
  v7 = (_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 96));
  *v7 = _swiftEmptyArrayStorage;
  v8 = sub_100007E8C(&qword_1011CAE08);
  swift_storeEnumTagMultiPayload(v7, v8, 0);
  v9 = (char *)v6 + *(_QWORD *)(*v6 + 104);
  v10 = sub_100007E8C(&qword_1011B5DB0);
  v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  v11(v9, 1, 1, v10);
  v12 = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v11)(v9, 1, 1, v10);
  *(_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 112)) = 0;
  *(_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 120)) = 0;
  ObservationRegistrar.init()(v12);
  v28 = v6;
  State.init(wrappedValue:)(&v28, v5);
  v13 = v29;
  v14 = v30;
  v15 = type metadata accessor for JSShelf(0);
  v16 = sub_100048748(&qword_1011C2EA0, type metadata accessor for JSShelf, (uint64_t)&protocol conformance descriptor for JSShelf);
  swift_retain();
  swift_retain();
  v17 = a1;
  v18 = ObservedObject.init(wrappedValue:)(v17, v15, v16);
  v19 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v4, 1, 1, v19);
  v29 = v13;
  v30 = v14;
  v20 = sub_100007E8C(&qword_1011CAE10);
  State.wrappedValue.getter(&v28, v20);
  swift_release();
  swift_release();
  v21 = v28;
  type metadata accessor for MainActor(0);
  v22 = v17;
  v24 = static MainActor.shared.getter(v23);
  v25 = (_QWORD *)swift_allocObject(&unk_1010DDA28, 48, 7);
  v25[2] = v24;
  v25[3] = &protocol witness table for MainActor;
  v25[4] = v21;
  v25[5] = v22;
  sub_100166D14((uint64_t)v4, (uint64_t)&unk_1011CAE48, (uint64_t)v25);
  swift_release();
  return v18;
}

uint64_t sub_1008138F0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  id v22;
  __n128 v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;

  v2 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011CAE00);
  v6 = (_QWORD *)swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  v6[2] = _swiftEmptyArrayStorage;
  v7 = (_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 96));
  *v7 = _swiftEmptyArrayStorage;
  v8 = sub_100007E8C(&qword_1011CAE08);
  swift_storeEnumTagMultiPayload(v7, v8, 0);
  v9 = (char *)v6 + *(_QWORD *)(*v6 + 104);
  v10 = sub_100007E8C(&qword_1011B5DB0);
  v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  v11(v9, 1, 1, v10);
  v12 = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v11)(v9, 1, 1, v10);
  *(_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 112)) = 0;
  *(_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 120)) = 0;
  ObservationRegistrar.init()(v12);
  v28 = v6;
  State.init(wrappedValue:)(&v28, v5);
  v13 = v29;
  v14 = v30;
  v15 = type metadata accessor for JSShelf(0);
  v16 = sub_100048748(&qword_1011C2EA0, type metadata accessor for JSShelf, (uint64_t)&protocol conformance descriptor for JSShelf);
  swift_retain();
  swift_retain();
  v17 = a1;
  v18 = ObservedObject.init(wrappedValue:)(v17, v15, v16);
  v19 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v4, 1, 1, v19);
  v29 = v13;
  v30 = v14;
  v20 = sub_100007E8C(&qword_1011CAE10);
  State.wrappedValue.getter(&v28, v20);
  swift_release();
  swift_release();
  v21 = v28;
  type metadata accessor for MainActor(0);
  v22 = v17;
  v24 = static MainActor.shared.getter(v23);
  v25 = (_QWORD *)swift_allocObject(&unk_1010DDA50, 48, 7);
  v25[2] = v24;
  v25[3] = &protocol witness table for MainActor;
  v25[4] = v21;
  v25[5] = v22;
  sub_100166D14((uint64_t)v4, (uint64_t)&unk_1011CAE58, (uint64_t)v25);
  swift_release();
  return v18;
}

uint64_t sub_100813B5C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  id v22;
  __n128 v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;

  v2 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011CAE00);
  v6 = (_QWORD *)swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  v6[2] = _swiftEmptyArrayStorage;
  v7 = (_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 96));
  *v7 = _swiftEmptyArrayStorage;
  v8 = sub_100007E8C(&qword_1011CAE08);
  swift_storeEnumTagMultiPayload(v7, v8, 0);
  v9 = (char *)v6 + *(_QWORD *)(*v6 + 104);
  v10 = sub_100007E8C(&qword_1011B5DB0);
  v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  v11(v9, 1, 1, v10);
  v12 = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v11)(v9, 1, 1, v10);
  *(_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 112)) = 0;
  *(_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 120)) = 0;
  ObservationRegistrar.init()(v12);
  v28 = v6;
  State.init(wrappedValue:)(&v28, v5);
  v13 = v29;
  v14 = v30;
  v15 = type metadata accessor for JSShelf(0);
  v16 = sub_100048748(&qword_1011C2EA0, type metadata accessor for JSShelf, (uint64_t)&protocol conformance descriptor for JSShelf);
  swift_retain();
  swift_retain();
  v17 = a1;
  v18 = ObservedObject.init(wrappedValue:)(v17, v15, v16);
  v19 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v4, 1, 1, v19);
  v29 = v13;
  v30 = v14;
  v20 = sub_100007E8C(&qword_1011CAE10);
  State.wrappedValue.getter(&v28, v20);
  swift_release();
  swift_release();
  v21 = v28;
  type metadata accessor for MainActor(0);
  v22 = v17;
  v24 = static MainActor.shared.getter(v23);
  v25 = (_QWORD *)swift_allocObject(&unk_1010DDA78, 48, 7);
  v25[2] = v24;
  v25[3] = &protocol witness table for MainActor;
  v25[4] = v21;
  v25[5] = v22;
  sub_100166D14((uint64_t)v4, (uint64_t)&unk_1011CAE68, (uint64_t)v25);
  swift_release();
  return v18;
}

uint64_t sub_100813DC8(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  id v22;
  __n128 v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;

  v2 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011CAE00);
  v6 = (_QWORD *)swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  v6[2] = _swiftEmptyArrayStorage;
  v7 = (_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 96));
  *v7 = _swiftEmptyArrayStorage;
  v8 = sub_100007E8C(&qword_1011CAE08);
  swift_storeEnumTagMultiPayload(v7, v8, 0);
  v9 = (char *)v6 + *(_QWORD *)(*v6 + 104);
  v10 = sub_100007E8C(&qword_1011B5DB0);
  v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  v11(v9, 1, 1, v10);
  v12 = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v11)(v9, 1, 1, v10);
  *(_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 112)) = 0;
  *(_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 120)) = 0;
  ObservationRegistrar.init()(v12);
  v28 = v6;
  State.init(wrappedValue:)(&v28, v5);
  v13 = v29;
  v14 = v30;
  v15 = type metadata accessor for JSShelf(0);
  v16 = sub_100048748(&qword_1011C2EA0, type metadata accessor for JSShelf, (uint64_t)&protocol conformance descriptor for JSShelf);
  swift_retain();
  swift_retain();
  v17 = a1;
  v18 = ObservedObject.init(wrappedValue:)(v17, v15, v16);
  v19 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v4, 1, 1, v19);
  v29 = v13;
  v30 = v14;
  v20 = sub_100007E8C(&qword_1011CAE10);
  State.wrappedValue.getter(&v28, v20);
  swift_release();
  swift_release();
  v21 = v28;
  type metadata accessor for MainActor(0);
  v22 = v17;
  v24 = static MainActor.shared.getter(v23);
  v25 = (_QWORD *)swift_allocObject(&unk_1010DDAA0, 48, 7);
  v25[2] = v24;
  v25[3] = &protocol witness table for MainActor;
  v25[4] = v21;
  v25[5] = v22;
  sub_100166D14((uint64_t)v4, (uint64_t)&unk_1011CAE78, (uint64_t)v25);
  swift_release();
  return v18;
}

uint64_t sub_100814034(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  id v22;
  __n128 v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;

  v2 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011CAE00);
  v6 = (_QWORD *)swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  v6[2] = _swiftEmptyArrayStorage;
  v7 = (_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 96));
  *v7 = _swiftEmptyArrayStorage;
  v8 = sub_100007E8C(&qword_1011CAE08);
  swift_storeEnumTagMultiPayload(v7, v8, 0);
  v9 = (char *)v6 + *(_QWORD *)(*v6 + 104);
  v10 = sub_100007E8C(&qword_1011B5DB0);
  v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  v11(v9, 1, 1, v10);
  v12 = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v11)(v9, 1, 1, v10);
  *(_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 112)) = 0;
  *(_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 120)) = 0;
  ObservationRegistrar.init()(v12);
  v28 = v6;
  State.init(wrappedValue:)(&v28, v5);
  v13 = v29;
  v14 = v30;
  v15 = type metadata accessor for JSShelf(0);
  v16 = sub_100048748(&qword_1011C2EA0, type metadata accessor for JSShelf, (uint64_t)&protocol conformance descriptor for JSShelf);
  swift_retain();
  swift_retain();
  v17 = a1;
  v18 = ObservedObject.init(wrappedValue:)(v17, v15, v16);
  v19 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v4, 1, 1, v19);
  v29 = v13;
  v30 = v14;
  v20 = sub_100007E8C(&qword_1011CAE10);
  State.wrappedValue.getter(&v28, v20);
  swift_release();
  swift_release();
  v21 = v28;
  type metadata accessor for MainActor(0);
  v22 = v17;
  v24 = static MainActor.shared.getter(v23);
  v25 = (_QWORD *)swift_allocObject(&unk_1010DDAC8, 48, 7);
  v25[2] = v24;
  v25[3] = &protocol witness table for MainActor;
  v25[4] = v21;
  v25[5] = v22;
  sub_100166D14((uint64_t)v4, (uint64_t)&unk_1011CAE88, (uint64_t)v25);
  swift_release();
  return v18;
}

uint64_t sub_1008142A0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  id v22;
  __n128 v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;

  v2 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011CAF40);
  v6 = (_QWORD *)swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  v6[2] = _swiftEmptyArrayStorage;
  v7 = (_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 96));
  *v7 = _swiftEmptyArrayStorage;
  v8 = sub_100007E8C(&qword_1011CAF48);
  swift_storeEnumTagMultiPayload(v7, v8, 0);
  v9 = (char *)v6 + *(_QWORD *)(*v6 + 104);
  v10 = sub_100007E8C(&qword_1011B5DB0);
  v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  v11(v9, 1, 1, v10);
  v12 = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v11)(v9, 1, 1, v10);
  *(_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 112)) = 0;
  *(_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 120)) = 0;
  ObservationRegistrar.init()(v12);
  v28 = v6;
  State.init(wrappedValue:)(&v28, v5);
  v13 = v29;
  v14 = v30;
  v15 = type metadata accessor for JSBrick(0);
  v16 = sub_100048748(&qword_1011B5F00, type metadata accessor for JSBrick, (uint64_t)&protocol conformance descriptor for JSBrick);
  swift_retain();
  swift_retain();
  v17 = a1;
  v18 = ObservedObject.init(wrappedValue:)(v17, v15, v16);
  v19 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v4, 1, 1, v19);
  v29 = v13;
  v30 = v14;
  v20 = sub_100007E8C(&qword_1011CAF50);
  State.wrappedValue.getter(&v28, v20);
  swift_release();
  swift_release();
  v21 = v28;
  type metadata accessor for MainActor(0);
  v22 = v17;
  v24 = static MainActor.shared.getter(v23);
  v25 = (_QWORD *)swift_allocObject(&unk_1010DDC80, 48, 7);
  v25[2] = v24;
  v25[3] = &protocol witness table for MainActor;
  v25[4] = v21;
  v25[5] = v22;
  sub_100166D14((uint64_t)v4, (uint64_t)&unk_1011CAF60, (uint64_t)v25);
  swift_release();
  return v18;
}

uint64_t sub_10081450C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  id v22;
  __n128 v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;

  v2 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011CAE90);
  v6 = (_QWORD *)swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  v6[2] = _swiftEmptyArrayStorage;
  v7 = (_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 96));
  *v7 = _swiftEmptyArrayStorage;
  v8 = sub_100007E8C(&qword_1011B5DB8);
  swift_storeEnumTagMultiPayload(v7, v8, 0);
  v9 = (char *)v6 + *(_QWORD *)(*v6 + 104);
  v10 = sub_100007E8C(&qword_1011B5DB0);
  v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  v11(v9, 1, 1, v10);
  v12 = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v11)(v9, 1, 1, v10);
  *(_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 112)) = 0;
  *(_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 120)) = 0;
  ObservationRegistrar.init()(v12);
  v28 = v6;
  State.init(wrappedValue:)(&v28, v5);
  v13 = v29;
  v14 = v30;
  v15 = type metadata accessor for JSGrid(0);
  v16 = sub_100048748(&qword_1011B7800, type metadata accessor for JSGrid, (uint64_t)&protocol conformance descriptor for JSGrid);
  swift_retain();
  swift_retain();
  v17 = a1;
  v18 = ObservedObject.init(wrappedValue:)(v17, v15, v16);
  v19 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v4, 1, 1, v19);
  v29 = v13;
  v30 = v14;
  v20 = sub_100007E8C(&qword_1011CAE98);
  State.wrappedValue.getter(&v28, v20);
  swift_release();
  swift_release();
  v21 = v28;
  type metadata accessor for MainActor(0);
  v22 = v17;
  v24 = static MainActor.shared.getter(v23);
  v25 = (_QWORD *)swift_allocObject(&unk_1010DDAF0, 48, 7);
  v25[2] = v24;
  v25[3] = &protocol witness table for MainActor;
  v25[4] = v21;
  v25[5] = v22;
  sub_100166D14((uint64_t)v4, (uint64_t)&unk_1011CAEA8, (uint64_t)v25);
  swift_release();
  return v18;
}

uint64_t sub_100814778(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  id v22;
  __n128 v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;

  v2 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011CAE90);
  v6 = (_QWORD *)swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  v6[2] = _swiftEmptyArrayStorage;
  v7 = (_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 96));
  *v7 = _swiftEmptyArrayStorage;
  v8 = sub_100007E8C(&qword_1011B5DB8);
  swift_storeEnumTagMultiPayload(v7, v8, 0);
  v9 = (char *)v6 + *(_QWORD *)(*v6 + 104);
  v10 = sub_100007E8C(&qword_1011B5DB0);
  v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  v11(v9, 1, 1, v10);
  v12 = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v11)(v9, 1, 1, v10);
  *(_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 112)) = 0;
  *(_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 120)) = 0;
  ObservationRegistrar.init()(v12);
  v28 = v6;
  State.init(wrappedValue:)(&v28, v5);
  v13 = v29;
  v14 = v30;
  v15 = type metadata accessor for JSGrid(0);
  v16 = sub_100048748(&qword_1011B7800, type metadata accessor for JSGrid, (uint64_t)&protocol conformance descriptor for JSGrid);
  swift_retain();
  swift_retain();
  v17 = a1;
  v18 = ObservedObject.init(wrappedValue:)(v17, v15, v16);
  v19 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v4, 1, 1, v19);
  v29 = v13;
  v30 = v14;
  v20 = sub_100007E8C(&qword_1011CAE98);
  State.wrappedValue.getter(&v28, v20);
  swift_release();
  swift_release();
  v21 = v28;
  type metadata accessor for MainActor(0);
  v22 = v17;
  v24 = static MainActor.shared.getter(v23);
  v25 = (_QWORD *)swift_allocObject(&unk_1010DDB40, 48, 7);
  v25[2] = v24;
  v25[3] = &protocol witness table for MainActor;
  v25[4] = v21;
  v25[5] = v22;
  sub_100166D14((uint64_t)v4, (uint64_t)&unk_1011CAEC0, (uint64_t)v25);
  swift_release();
  return v18;
}

uint64_t sub_1008149E4(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  id v22;
  __n128 v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;

  v2 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011CAE90);
  v6 = (_QWORD *)swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  v6[2] = _swiftEmptyArrayStorage;
  v7 = (_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 96));
  *v7 = _swiftEmptyArrayStorage;
  v8 = sub_100007E8C(&qword_1011B5DB8);
  swift_storeEnumTagMultiPayload(v7, v8, 0);
  v9 = (char *)v6 + *(_QWORD *)(*v6 + 104);
  v10 = sub_100007E8C(&qword_1011B5DB0);
  v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  v11(v9, 1, 1, v10);
  v12 = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v11)(v9, 1, 1, v10);
  *(_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 112)) = 0;
  *(_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 120)) = 0;
  ObservationRegistrar.init()(v12);
  v28 = v6;
  State.init(wrappedValue:)(&v28, v5);
  v13 = v29;
  v14 = v30;
  v15 = type metadata accessor for JSGrid(0);
  v16 = sub_100048748(&qword_1011B7800, type metadata accessor for JSGrid, (uint64_t)&protocol conformance descriptor for JSGrid);
  swift_retain();
  swift_retain();
  v17 = a1;
  v18 = ObservedObject.init(wrappedValue:)(v17, v15, v16);
  v19 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v4, 1, 1, v19);
  v29 = v13;
  v30 = v14;
  v20 = sub_100007E8C(&qword_1011CAE98);
  State.wrappedValue.getter(&v28, v20);
  swift_release();
  swift_release();
  v21 = v28;
  type metadata accessor for MainActor(0);
  v22 = v17;
  v24 = static MainActor.shared.getter(v23);
  v25 = (_QWORD *)swift_allocObject(&unk_1010DDB68, 48, 7);
  v25[2] = v24;
  v25[3] = &protocol witness table for MainActor;
  v25[4] = v21;
  v25[5] = v22;
  sub_100166D14((uint64_t)v4, (uint64_t)&unk_1011CAED0, (uint64_t)v25);
  swift_release();
  return v18;
}

uint64_t sub_100814C50(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  id v22;
  __n128 v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;

  v2 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011CAE90);
  v6 = (_QWORD *)swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  v6[2] = _swiftEmptyArrayStorage;
  v7 = (_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 96));
  *v7 = _swiftEmptyArrayStorage;
  v8 = sub_100007E8C(&qword_1011B5DB8);
  swift_storeEnumTagMultiPayload(v7, v8, 0);
  v9 = (char *)v6 + *(_QWORD *)(*v6 + 104);
  v10 = sub_100007E8C(&qword_1011B5DB0);
  v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  v11(v9, 1, 1, v10);
  v12 = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v11)(v9, 1, 1, v10);
  *(_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 112)) = 0;
  *(_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 120)) = 0;
  ObservationRegistrar.init()(v12);
  v28 = v6;
  State.init(wrappedValue:)(&v28, v5);
  v13 = v29;
  v14 = v30;
  v15 = type metadata accessor for JSGrid(0);
  v16 = sub_100048748(&qword_1011B7800, type metadata accessor for JSGrid, (uint64_t)&protocol conformance descriptor for JSGrid);
  swift_retain();
  swift_retain();
  v17 = a1;
  v18 = ObservedObject.init(wrappedValue:)(v17, v15, v16);
  v19 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v4, 1, 1, v19);
  v29 = v13;
  v30 = v14;
  v20 = sub_100007E8C(&qword_1011CAE98);
  State.wrappedValue.getter(&v28, v20);
  swift_release();
  swift_release();
  v21 = v28;
  type metadata accessor for MainActor(0);
  v22 = v17;
  v24 = static MainActor.shared.getter(v23);
  v25 = (_QWORD *)swift_allocObject(&unk_1010DDB90, 48, 7);
  v25[2] = v24;
  v25[3] = &protocol witness table for MainActor;
  v25[4] = v21;
  v25[5] = v22;
  sub_100166D14((uint64_t)v4, (uint64_t)&unk_1011CAEE0, (uint64_t)v25);
  swift_release();
  return v18;
}

uint64_t sub_100814EBC(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  id v22;
  __n128 v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;

  v2 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011CAE90);
  v6 = (_QWORD *)swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  v6[2] = _swiftEmptyArrayStorage;
  v7 = (_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 96));
  *v7 = _swiftEmptyArrayStorage;
  v8 = sub_100007E8C(&qword_1011B5DB8);
  swift_storeEnumTagMultiPayload(v7, v8, 0);
  v9 = (char *)v6 + *(_QWORD *)(*v6 + 104);
  v10 = sub_100007E8C(&qword_1011B5DB0);
  v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  v11(v9, 1, 1, v10);
  v12 = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v11)(v9, 1, 1, v10);
  *(_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 112)) = 0;
  *(_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 120)) = 0;
  ObservationRegistrar.init()(v12);
  v28 = v6;
  State.init(wrappedValue:)(&v28, v5);
  v13 = v29;
  v14 = v30;
  v15 = type metadata accessor for JSGrid(0);
  v16 = sub_100048748(&qword_1011B7800, type metadata accessor for JSGrid, (uint64_t)&protocol conformance descriptor for JSGrid);
  swift_retain();
  swift_retain();
  v17 = a1;
  v18 = ObservedObject.init(wrappedValue:)(v17, v15, v16);
  v19 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v4, 1, 1, v19);
  v29 = v13;
  v30 = v14;
  v20 = sub_100007E8C(&qword_1011CAE98);
  State.wrappedValue.getter(&v28, v20);
  swift_release();
  swift_release();
  v21 = v28;
  type metadata accessor for MainActor(0);
  v22 = v17;
  v24 = static MainActor.shared.getter(v23);
  v25 = (_QWORD *)swift_allocObject(&unk_1010DDBB8, 48, 7);
  v25[2] = v24;
  v25[3] = &protocol witness table for MainActor;
  v25[4] = v21;
  v25[5] = v22;
  sub_100166D14((uint64_t)v4, (uint64_t)&unk_1011CAEF0, (uint64_t)v25);
  swift_release();
  return v18;
}

uint64_t sub_100815128(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  id v22;
  __n128 v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;

  v2 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011CAE90);
  v6 = (_QWORD *)swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  v6[2] = _swiftEmptyArrayStorage;
  v7 = (_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 96));
  *v7 = _swiftEmptyArrayStorage;
  v8 = sub_100007E8C(&qword_1011B5DB8);
  swift_storeEnumTagMultiPayload(v7, v8, 0);
  v9 = (char *)v6 + *(_QWORD *)(*v6 + 104);
  v10 = sub_100007E8C(&qword_1011B5DB0);
  v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  v11(v9, 1, 1, v10);
  v12 = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v11)(v9, 1, 1, v10);
  *(_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 112)) = 0;
  *(_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 120)) = 0;
  ObservationRegistrar.init()(v12);
  v28 = v6;
  State.init(wrappedValue:)(&v28, v5);
  v13 = v29;
  v14 = v30;
  v15 = type metadata accessor for JSGrid(0);
  v16 = sub_100048748(&qword_1011B7800, type metadata accessor for JSGrid, (uint64_t)&protocol conformance descriptor for JSGrid);
  swift_retain();
  swift_retain();
  v17 = a1;
  v18 = ObservedObject.init(wrappedValue:)(v17, v15, v16);
  v19 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v4, 1, 1, v19);
  v29 = v13;
  v30 = v14;
  v20 = sub_100007E8C(&qword_1011CAE98);
  State.wrappedValue.getter(&v28, v20);
  swift_release();
  swift_release();
  v21 = v28;
  type metadata accessor for MainActor(0);
  v22 = v17;
  v24 = static MainActor.shared.getter(v23);
  v25 = (_QWORD *)swift_allocObject(&unk_1010DDBE0, 48, 7);
  v25[2] = v24;
  v25[3] = &protocol witness table for MainActor;
  v25[4] = v21;
  v25[5] = v22;
  sub_100166D14((uint64_t)v4, (uint64_t)&unk_1011CAF00, (uint64_t)v25);
  swift_release();
  return v18;
}

uint64_t sub_100815394(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  id v22;
  __n128 v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;

  v2 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011CAE90);
  v6 = (_QWORD *)swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  v6[2] = _swiftEmptyArrayStorage;
  v7 = (_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 96));
  *v7 = _swiftEmptyArrayStorage;
  v8 = sub_100007E8C(&qword_1011B5DB8);
  swift_storeEnumTagMultiPayload(v7, v8, 0);
  v9 = (char *)v6 + *(_QWORD *)(*v6 + 104);
  v10 = sub_100007E8C(&qword_1011B5DB0);
  v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  v11(v9, 1, 1, v10);
  v12 = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v11)(v9, 1, 1, v10);
  *(_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 112)) = 0;
  *(_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 120)) = 0;
  ObservationRegistrar.init()(v12);
  v28 = v6;
  State.init(wrappedValue:)(&v28, v5);
  v13 = v29;
  v14 = v30;
  v15 = type metadata accessor for JSGrid(0);
  v16 = sub_100048748(&qword_1011B7800, type metadata accessor for JSGrid, (uint64_t)&protocol conformance descriptor for JSGrid);
  swift_retain();
  swift_retain();
  v17 = a1;
  v18 = ObservedObject.init(wrappedValue:)(v17, v15, v16);
  v19 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v4, 1, 1, v19);
  v29 = v13;
  v30 = v14;
  v20 = sub_100007E8C(&qword_1011CAE98);
  State.wrappedValue.getter(&v28, v20);
  swift_release();
  swift_release();
  v21 = v28;
  type metadata accessor for MainActor(0);
  v22 = v17;
  v24 = static MainActor.shared.getter(v23);
  v25 = (_QWORD *)swift_allocObject(&unk_1010DDC08, 48, 7);
  v25[2] = v24;
  v25[3] = &protocol witness table for MainActor;
  v25[4] = v21;
  v25[5] = v22;
  sub_100166D14((uint64_t)v4, (uint64_t)&unk_1011CAF10, (uint64_t)v25);
  swift_release();
  return v18;
}

uint64_t sub_100815600(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  id v22;
  __n128 v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;

  v2 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011CADD0);
  v6 = (_QWORD *)swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  v6[2] = _swiftEmptyArrayStorage;
  v7 = (_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 96));
  *v7 = _swiftEmptyArrayStorage;
  v8 = sub_100007E8C(&qword_1011CADD8);
  swift_storeEnumTagMultiPayload(v7, v8, 0);
  v9 = (char *)v6 + *(_QWORD *)(*v6 + 104);
  v10 = sub_100007E8C(&qword_1011B5DB0);
  v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  v11(v9, 1, 1, v10);
  v12 = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v11)(v9, 1, 1, v10);
  *(_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 112)) = 0;
  *(_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 120)) = 0;
  ObservationRegistrar.init()(v12);
  v28 = v6;
  State.init(wrappedValue:)(&v28, v5);
  v13 = v29;
  v14 = v30;
  v15 = type metadata accessor for JSMusicVideoViewModel(0);
  v16 = sub_100048748(&qword_1011C42E0, type metadata accessor for JSMusicVideoViewModel, (uint64_t)&protocol conformance descriptor for JSMusicVideoViewModel);
  swift_retain();
  swift_retain();
  v17 = a1;
  v18 = ObservedObject.init(wrappedValue:)(v17, v15, v16);
  v19 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v4, 1, 1, v19);
  v29 = v13;
  v30 = v14;
  v20 = sub_100007E8C(&qword_1011CADE0);
  State.wrappedValue.getter(&v28, v20);
  swift_release();
  swift_release();
  v21 = v28;
  type metadata accessor for MainActor(0);
  v22 = v17;
  v24 = static MainActor.shared.getter(v23);
  v25 = (_QWORD *)swift_allocObject(&unk_1010DD960, 48, 7);
  v25[2] = v24;
  v25[3] = &protocol witness table for MainActor;
  v25[4] = v21;
  v25[5] = v22;
  sub_100166D14((uint64_t)v4, (uint64_t)&unk_1011CADF0, (uint64_t)v25);
  swift_release();
  return v18;
}

uint64_t sub_10081586C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  id v22;
  __n128 v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;

  v2 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011CAF18);
  v6 = (_QWORD *)swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  v6[2] = _swiftEmptyArrayStorage;
  v7 = (_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 96));
  *v7 = _swiftEmptyArrayStorage;
  v8 = sub_100007E8C(&qword_1011B7660);
  swift_storeEnumTagMultiPayload(v7, v8, 0);
  v9 = (char *)v6 + *(_QWORD *)(*v6 + 104);
  v10 = sub_100007E8C(&qword_1011B5DB0);
  v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  v11(v9, 1, 1, v10);
  v12 = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v11)(v9, 1, 1, v10);
  *(_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 112)) = 0;
  *(_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 120)) = 0;
  ObservationRegistrar.init()(v12);
  v28 = v6;
  State.init(wrappedValue:)(&v28, v5);
  v13 = v29;
  v14 = v30;
  v15 = type metadata accessor for JSLiveRadioCase(0);
  v16 = sub_100048748(&qword_1011B7638, type metadata accessor for JSLiveRadioCase, (uint64_t)&protocol conformance descriptor for JSLiveRadioCase);
  swift_retain();
  swift_retain();
  v17 = a1;
  v18 = ObservedObject.init(wrappedValue:)(v17, v15, v16);
  v19 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v4, 1, 1, v19);
  v29 = v13;
  v30 = v14;
  v20 = sub_100007E8C(&qword_1011CAF20);
  State.wrappedValue.getter(&v28, v20);
  swift_release();
  swift_release();
  v21 = v28;
  type metadata accessor for MainActor(0);
  v22 = v17;
  v24 = static MainActor.shared.getter(v23);
  v25 = (_QWORD *)swift_allocObject(&unk_1010DDC30, 48, 7);
  v25[2] = v24;
  v25[3] = &protocol witness table for MainActor;
  v25[4] = v21;
  v25[5] = v22;
  sub_100166D14((uint64_t)v4, (uint64_t)&unk_1011CAF30, (uint64_t)v25);
  swift_release();
  return v18;
}

uint64_t sub_100815AD8(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  id v22;
  __n128 v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;

  v2 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011CAD60);
  v6 = (_QWORD *)swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  v6[2] = _swiftEmptyArrayStorage;
  v7 = (_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 96));
  *v7 = _swiftEmptyArrayStorage;
  v8 = sub_100007E8C(&qword_1011A7AA8);
  swift_storeEnumTagMultiPayload(v7, v8, 0);
  v9 = (char *)v6 + *(_QWORD *)(*v6 + 104);
  v10 = sub_100007E8C(&qword_1011B5DB0);
  v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  v11(v9, 1, 1, v10);
  v12 = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v11)(v9, 1, 1, v10);
  *(_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 112)) = 0;
  *(_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 120)) = 0;
  ObservationRegistrar.init()(v12);
  v28 = v6;
  State.init(wrappedValue:)(&v28, v5);
  v13 = v29;
  v14 = v30;
  v15 = type metadata accessor for JSMenu(0);
  v16 = sub_100048748(&qword_1011CAC50, type metadata accessor for JSMenu, (uint64_t)&protocol conformance descriptor for JSMenu);
  swift_retain();
  swift_retain();
  v17 = a1;
  v18 = ObservedObject.init(wrappedValue:)(v17, v15, v16);
  v19 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v4, 1, 1, v19);
  v29 = v13;
  v30 = v14;
  v20 = sub_100007E8C(&qword_1011CAD68);
  State.wrappedValue.getter(&v28, v20);
  swift_release();
  swift_release();
  v21 = v28;
  type metadata accessor for MainActor(0);
  v22 = v17;
  v24 = static MainActor.shared.getter(v23);
  v25 = (_QWORD *)swift_allocObject(&unk_1010DD870, 48, 7);
  v25[2] = v24;
  v25[3] = &protocol witness table for MainActor;
  v25[4] = v21;
  v25[5] = v22;
  sub_100166D14((uint64_t)v4, (uint64_t)&unk_1011CAD78, (uint64_t)v25);
  swift_release();
  return v18;
}

uint64_t sub_100815D48(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1011CAD74);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10006AEE4;
  return sub_10080A294(a1, v4, v5, v7, v6);
}

uint64_t sub_100815DC8()
{
  return 8;
}

_QWORD *sub_100815DD4(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_100815DE0()
{
  return sub_100816E74((uint64_t (*)(uint64_t))sub_10080D528);
}

uint64_t sub_100815E04()
{
  return 8;
}

uint64_t sub_100815E10()
{
  return sub_100816EE0();
}

uint64_t sub_100815E2C()
{
  return 8;
}

uint64_t sub_100815E38()
{
  uint64_t v0;

  return sub_100811468(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (void (*)(uint64_t))sub_100810CA8);
}

uint64_t sub_100815E60()
{
  return 8;
}

uint64_t sub_100815E6C()
{
  return sub_100816F28();
}

double sub_100815E80(uint64_t a1)
{
  uint64_t v1;

  return sub_10080EDE8(a1, v1);
}

uint64_t sub_100815E90()
{
  return 8;
}

uint64_t sub_100815E9C()
{
  uint64_t v0;

  return sub_10080F118(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), &qword_1011A79B0);
}

uint64_t sub_100815EBC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100815EE0@<X0>(uint64_t a1@<X8>)
{
  return JSMenu.headerView()(a1);
}

uint64_t sub_100815F2C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1011CADEC);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10005AEE4;
  return sub_100809F5C(a1, v4, v5, v7, v6);
}

uint64_t sub_100815FA4()
{
  return sub_100816E74((uint64_t (*)(uint64_t))sub_10080C840);
}

uint64_t sub_100815FC0()
{
  uint64_t v0;

  return sub_100811468(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (void (*)(uint64_t))sub_1008104E8);
}

double sub_100815FE0(uint64_t a1)
{
  uint64_t v1;

  return sub_10080EAB8(a1, v1);
}

uint64_t sub_100815FE8()
{
  uint64_t v0;

  return sub_10080F118(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), &qword_1011C4318);
}

uint64_t sub_10081600C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1011CAE1C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10006AEE4;
  return sub_100809884(a1, v4, v5, v7, v6);
}

uint64_t sub_100816084()
{
  return sub_100816E74((uint64_t (*)(uint64_t))sub_10080B4E4);
}

uint64_t sub_1008160A0()
{
  uint64_t v0;

  return sub_100811468(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (void (*)(uint64_t))sub_10080F948);
}

double sub_1008160C0(uint64_t a1)
{
  uint64_t v1;

  return sub_10080E5F0(a1, v1);
}

uint64_t sub_1008160C8()
{
  uint64_t v0;

  return sub_10080F118(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), &qword_1011C3208);
}

uint64_t sub_1008160EC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1011CAE34);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10006AEE4;
  return sub_100809884(a1, v4, v5, v7, v6);
}

uint64_t sub_100816168(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1011CAE44);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10006AEE4;
  return sub_100809884(a1, v4, v5, v7, v6);
}

uint64_t sub_1008161E4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1011CAE54);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10006AEE4;
  return sub_100809884(a1, v4, v5, v7, v6);
}

uint64_t sub_100816260(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1011CAE64);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10006AEE4;
  return sub_100809884(a1, v4, v5, v7, v6);
}

uint64_t sub_1008162DC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1011CAE74);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10006AEE4;
  return sub_100809884(a1, v4, v5, v7, v6);
}

uint64_t sub_100816358(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1011CAE84);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10006AEE4;
  return sub_100809884(a1, v4, v5, v7, v6);
}

uint64_t sub_1008163D4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1011CAEA4);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10006AEE4;
  return sub_100809CAC(a1, v4, v5, v7, v6);
}

uint64_t sub_10081644C()
{
  return sub_100816E74((uint64_t (*)(uint64_t))sub_10080C1CC);
}

uint64_t sub_100816468()
{
  uint64_t v0;

  return sub_100811468(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (void (*)(uint64_t))sub_100810108);
}

uint64_t sub_100816488()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_1008164AC(uint64_t a1)
{
  uint64_t v1;

  return sub_10080E920(a1, v1);
}

uint64_t sub_1008164B4()
{
  uint64_t v0;

  return sub_10080F118(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), &qword_1011B5DA0);
}

uint64_t sub_1008164D8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1011CAEBC);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10006AEE4;
  return sub_100809CAC(a1, v4, v5, v7, v6);
}

uint64_t sub_100816554(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1011CAECC);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10006AEE4;
  return sub_100809CAC(a1, v4, v5, v7, v6);
}

uint64_t sub_1008165D0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1011CAEDC);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10006AEE4;
  return sub_100809CAC(a1, v4, v5, v7, v6);
}

uint64_t sub_10081664C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1011CAEEC);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10006AEE4;
  return sub_100809CAC(a1, v4, v5, v7, v6);
}

uint64_t sub_1008166C8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1011CAEFC);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10006AEE4;
  return sub_100809CAC(a1, v4, v5, v7, v6);
}

uint64_t sub_100816744(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1011CAF0C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10006AEE4;
  return sub_100809CAC(a1, v4, v5, v7, v6);
}

uint64_t sub_1008167C0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1011CAF2C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10006AEE4;
  return sub_10080A11C(a1, v4, v5, v7, v6);
}

uint64_t sub_100816838()
{
  return sub_100816E74((uint64_t (*)(uint64_t))sub_10080CEB4);
}

uint64_t sub_100816854()
{
  uint64_t v0;

  return sub_100811468(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (void (*)(uint64_t))sub_1008108C8);
}

double sub_100816874(uint64_t a1)
{
  uint64_t v1;

  return sub_10080EC50(a1, v1);
}

uint64_t sub_10081687C()
{
  uint64_t v0;

  return sub_10080F118(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), &qword_1011B7668);
}

uint64_t sub_1008168A0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1011CAF5C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10006AEE4;
  return sub_100809B34(a1, v4, v5, v7, v6);
}

uint64_t sub_100816918()
{
  return sub_100816E74((uint64_t (*)(uint64_t))sub_10080BB58);
}

uint64_t sub_100816934()
{
  uint64_t v0;

  return sub_100811468(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (void (*)(uint64_t))sub_10080FD28);
}

double sub_100816954(uint64_t a1)
{
  uint64_t v1;

  return sub_10080E788(a1, v1);
}

uint64_t sub_10081695C()
{
  uint64_t v0;

  return sub_10080F118(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), &qword_1011B5FC8);
}

uint64_t sub_10081697C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  id v22;
  __n128 v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;

  v2 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011CAF70);
  v6 = (_QWORD *)swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  v6[2] = _swiftEmptyArrayStorage;
  v7 = (_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 96));
  *v7 = _swiftEmptyArrayStorage;
  v8 = sub_100007E8C(&qword_1011CAF78);
  swift_storeEnumTagMultiPayload(v7, v8, 0);
  v9 = (char *)v6 + *(_QWORD *)(*v6 + 104);
  v10 = sub_100007E8C(&qword_1011B5DB0);
  v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  v11(v9, 1, 1, v10);
  v12 = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v11)(v9, 1, 1, v10);
  *(_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 112)) = 0;
  *(_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 120)) = 0;
  ObservationRegistrar.init()(v12);
  v28 = v6;
  State.init(wrappedValue:)(&v28, v5);
  v13 = v29;
  v14 = v30;
  v15 = type metadata accessor for JSTVShowEpisodeDetail(0);
  v16 = sub_100048748(&qword_1011AF318, type metadata accessor for JSTVShowEpisodeDetail, (uint64_t)&protocol conformance descriptor for JSTVShowEpisodeDetail);
  swift_retain();
  swift_retain();
  v17 = a1;
  v18 = ObservedObject.init(wrappedValue:)(v17, v15, v16);
  v19 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v4, 1, 1, v19);
  v29 = v13;
  v30 = v14;
  v20 = sub_100007E8C(&qword_1011CAF80);
  State.wrappedValue.getter(&v28, v20);
  swift_release();
  swift_release();
  v21 = v28;
  type metadata accessor for MainActor(0);
  v22 = v17;
  v24 = static MainActor.shared.getter(v23);
  v25 = (_QWORD *)swift_allocObject(&unk_1010DDCD0, 48, 7);
  v25[2] = v24;
  v25[3] = &protocol witness table for MainActor;
  v25[4] = v21;
  v25[5] = v22;
  sub_100166D14((uint64_t)v4, (uint64_t)&unk_1011CAF90, (uint64_t)v25);
  swift_release();
  return v18;
}

uint64_t sub_100816BEC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1011CAF8C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10006AEE4;
  return sub_10080A63C(a1, v4, v5, v7, v6);
}

uint64_t sub_100816C64()
{
  return sub_100816E74((uint64_t (*)(uint64_t))sub_10080DC4C);
}

uint64_t sub_100816C80()
{
  uint64_t v0;

  return sub_100811468(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (void (*)(uint64_t))sub_100811088);
}

double sub_100816CA0(uint64_t a1)
{
  uint64_t v1;

  return sub_10080EF80(a1, v1);
}

uint64_t sub_100816CA8()
{
  uint64_t v0;

  return sub_10080F118(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), &qword_1011AF350);
}

uint64_t sub_100816CCC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1011CAFBC);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10006AEE4;
  return sub_10080970C(a1, v4, v5, v7, v6);
}

uint64_t sub_100816D44()
{
  return sub_100816E74((uint64_t (*)(uint64_t))sub_10080AE70);
}

uint64_t sub_100816D60()
{
  uint64_t v0;

  return sub_100811468(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (void (*)(uint64_t))sub_10080F568);
}

double sub_100816D80(uint64_t a1)
{
  uint64_t v1;

  return sub_10080E458(a1, v1);
}

uint64_t sub_100816D88()
{
  uint64_t v0;

  return sub_10080F118(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), &qword_1011A7920);
}

uint64_t sub_100816DAC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100816DE0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1011CAFEC);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10006AEE4;
  return sub_100809594(a1, v4, v5, v7, v6);
}

uint64_t sub_100816E58()
{
  return sub_100816E74((uint64_t (*)(uint64_t))sub_10080A7FC);
}

uint64_t sub_100816E74(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(v4 + 16);
  *(_QWORD *)(v4 + 16) = v3;
  swift_bridgeObjectRetain(v3);
  v6 = swift_bridgeObjectRelease(v5);
  return a1(v6);
}

uint64_t sub_100816EC0()
{
  uint64_t v0;

  return sub_100811468(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (void (*)(uint64_t))sub_10080F188);
}

uint64_t sub_100816EE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(*(_QWORD *)v2 + 112);
  v4 = *(_QWORD *)(v2 + v3);
  *(_QWORD *)(v2 + v3) = v1;
  swift_retain(v1);
  return swift_release(v4);
}

double sub_100816F20(uint64_t a1)
{
  uint64_t v1;

  return sub_10080E2C0(a1, v1);
}

uint64_t sub_100816F28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(*(_QWORD *)v2 + 120);
  v4 = *(_QWORD *)(v2 + v3);
  *(_QWORD *)(v2 + v3) = v1;
  swift_retain(v1);
  return swift_release(v4);
}

uint64_t sub_100816F68()
{
  uint64_t v0;

  return sub_10080F118(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), &qword_10119EC48);
}

uint64_t sub_100816FC4()
{
  return sub_100815E38();
}

uint64_t sub_100816FD8()
{
  return sub_100815E9C();
}

uint64_t sub_100816FEC()
{
  return sub_100815FC0();
}

uint64_t sub_100817000()
{
  return sub_100815FE8();
}

uint64_t sub_100817014()
{
  return sub_1008160A0();
}

uint64_t sub_100817028()
{
  return sub_1008160C8();
}

uint64_t sub_10081703C()
{
  return sub_100816468();
}

uint64_t sub_100817050()
{
  return sub_1008164B4();
}

uint64_t sub_100817064()
{
  return sub_100816854();
}

uint64_t sub_100817078()
{
  return sub_10081687C();
}

uint64_t sub_10081708C()
{
  return sub_100816934();
}

uint64_t sub_1008170A0()
{
  return sub_10081695C();
}

uint64_t sub_1008170B4()
{
  return sub_100816C80();
}

uint64_t sub_1008170C8()
{
  return sub_100816CA8();
}

uint64_t sub_1008170DC()
{
  return sub_100816D60();
}

uint64_t sub_1008170F0()
{
  return sub_100816D88();
}

uint64_t sub_100817104()
{
  return sub_100816EC0();
}

uint64_t sub_100817118()
{
  return sub_100816F68();
}

uint64_t sub_100817130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;

  v10 = type metadata accessor for _ConditionalContent.Storage(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v14 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))((char *)&v14 - v11, a1, a2);
  swift_storeEnumTagMultiPayload(v12, v10, 0);
  return _ConditionalContent<>.init(storage:)(v12, a2, a3, a4, a5);
}

uint64_t sub_1008171F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;

  v10 = type metadata accessor for _ConditionalContent.Storage(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v14 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))((char *)&v14 - v11, a1, a3);
  swift_storeEnumTagMultiPayload(v12, v10, 1);
  return _ConditionalContent<>.init(storage:)(v12, a2, a3, a4, a5);
}

uint64_t View.enqueueOnTap<A>(_:playabilityStatus:onSelection:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  char *v41;
  char *v42;
  void (*v43)(char *, uint64_t, uint64_t);
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t WitnessTable;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t);
  void (*v51)(char *, char *, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t, uint64_t);
  void (*v74)(uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;

  v101 = a7;
  v95 = a3;
  v96 = a4;
  v83 = a2;
  v102 = a9;
  v86 = *(char **)(a5 - 8);
  __chkstk_darwin(a1);
  v85 = (char *)&v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v84 = (char *)&v79 - v15;
  v82 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v81 = *(_QWORD *)(v82 - 8);
  __chkstk_darwin(v82);
  v87 = (char *)&v79 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for PlaybackSelection(0, a6, a8, v17);
  v91 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v88 = (uint64_t)&v79 - v19;
  v103 = v20;
  v21 = type metadata accessor for ModifiedContent(0, a5, v20);
  v92 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v89 = (char *)&v79 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v93 = (char *)&v79 - v24;
  v94 = a6;
  v90 = a8;
  v26 = type metadata accessor for SourcedPlaybackIntent(255, a6, a8, v25);
  v27 = type metadata accessor for Optional(0, v26);
  v28 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v30 = (char *)&v79 - v29;
  v31 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v32);
  v34 = (char *)&v79 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  v37 = (char *)&v79 - v36;
  v97 = a5;
  v38 = type metadata accessor for _ConditionalContent(0, v21, a5);
  v99 = *(_QWORD *)(v38 - 8);
  v100 = v38;
  v39 = __chkstk_darwin(v38);
  v41 = (char *)&v79 - v40;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v28 + 16))(v30, a1, v27, v39);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v30, 1, v26) == 1)
  {
    (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
    v42 = v86;
    v43 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v86 + 2);
    v44 = v84;
    v45 = v97;
    v43(v84, v98, v97);
    v46 = (uint64_t)v85;
    v43(v85, (uint64_t)v44, v45);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for PlaybackSelection<A>, v103);
    v48 = v101;
    v110 = v101;
    v111 = WitnessTable;
    v49 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v21);
    sub_1008171F4(v46, v21, v45, v49, v48);
    v50 = (void (*)(uint64_t, uint64_t))*((_QWORD *)v42 + 1);
    v50(v46, v45);
    v50((uint64_t)v44, v45);
  }
  else
  {
    v80 = v31;
    v51 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
    v79 = v37;
    v51(v37, v30, v26);
    (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v34, v37, v26);
    v52 = (uint64_t)v87;
    (*(void (**)(char *, uint64_t, uint64_t))(v81 + 16))(v87, v83, v82);
    v53 = v95;
    v86 = v41;
    v54 = v96;
    sub_100048AAC(v95, v96);
    v55 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
    v56 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
    v57 = EnvironmentObject.init()(v55, v56);
    v59 = v58;
    v60 = type metadata accessor for TabSelectionManager(0);
    v61 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
    v62 = EnvironmentObject.init()(v60, v61);
    v63 = v88;
    v64 = v54;
    v41 = v86;
    sub_100818710((uint64_t)v34, v52, v53, v64, v57, v59, v62, v65, v88, v94, v90);
    v66 = (uint64_t)v89;
    v67 = v97;
    v68 = v103;
    v48 = v101;
    View.modifier<A>(_:)(v63, v97, v103, v101);
    (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v63, v68);
    v69 = swift_getWitnessTable(&protocol conformance descriptor for PlaybackSelection<A>, v68);
    v104 = v48;
    v105 = v69;
    v70 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v21);
    v72 = v92;
    v71 = v93;
    v73 = *(void (**)(char *, uint64_t, uint64_t))(v92 + 16);
    v73(v93, v66, v21);
    v74 = *(void (**)(uint64_t, uint64_t))(v72 + 8);
    v74(v66, v21);
    v73((char *)v66, (uint64_t)v71, v21);
    sub_100817130(v66, v21, v67, v70, v48);
    v74(v66, v21);
    v74((uint64_t)v71, v21);
    (*(void (**)(char *, uint64_t))(v80 + 8))(v79, v26);
  }
  v75 = swift_getWitnessTable(&protocol conformance descriptor for PlaybackSelection<A>, v103);
  v108 = v48;
  v109 = v75;
  v106 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v21);
  v107 = v48;
  v76 = v100;
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v100);
  v77 = v99;
  (*(void (**)(uint64_t, char *, uint64_t))(v99 + 16))(v102, v41, v76);
  return (*(uint64_t (**)(char *, uint64_t))(v77 + 8))(v41, v76);
}

{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v45 = a7;
  v40 = a4;
  v41 = a8;
  v43 = a9;
  v44 = a5;
  v38 = a1;
  v39 = a2;
  v12 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for SourcedPlaybackIntent(0, a6, a8, v16);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v37 - v19;
  v22 = type metadata accessor for PlaybackSelection(0, a6, a8, v21);
  v42 = *(_QWORD *)(v22 - 8);
  v23 = __chkstk_darwin(v22);
  v25 = (char *)&v37 - v24;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v18 + 16))(v20, v38, v17, v23);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v39, v12);
  v26 = v40;
  sub_100048AAC(a3, v40);
  v27 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
  v28 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
  v29 = EnvironmentObject.init()(v27, v28);
  v31 = v30;
  v32 = type metadata accessor for TabSelectionManager(0);
  v33 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
  v34 = EnvironmentObject.init()(v32, v33);
  sub_100818710((uint64_t)v20, (uint64_t)v15, a3, v26, v29, v31, v34, v35, (uint64_t)v25, a6, v41);
  View.modifier<A>(_:)(v25, v44, v22, v45);
  return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v25, v22);
}

uint64_t type metadata accessor for PlaybackSelection(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PlaybackSelection);
}

uint64_t PlaybackSelection.intent.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;

  v5 = type metadata accessor for SourcedPlaybackIntent(0, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v3, v5);
}

uint64_t PlaybackSelection.playabilityStatus.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 36);
  v5 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t PlaybackSelection.onSelection.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v2 = (uint64_t *)(v1 + *(int *)(a1 + 40));
  v3 = *v2;
  sub_100048AAC(*v2, v2[1]);
  return v3;
}

uint64_t PlaybackSelection.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t WitnessTable;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)();
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t (*v49)();
  char *v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  void (*v56)(char *, char *, uint64_t);
  char *v57;
  uint64_t v59;
  uint64_t OpaqueTypeConformance2;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;

  v78 = a3;
  v69 = a1;
  v4 = type metadata accessor for AccessibilityActionKind(0);
  v76 = *(_QWORD *)(v4 - 8);
  v77 = v4;
  __chkstk_darwin(v4);
  v75 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for AccessibilityTraits(0);
  v73 = *(_QWORD *)(v6 - 8);
  v74 = v6;
  __chkstk_darwin(v6);
  v72 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for AccessibilityChildBehavior(0);
  v70 = *(_QWORD *)(v8 - 8);
  v71 = v8;
  __chkstk_darwin(v8);
  v68 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for PlaybackSelection<A>, a2);
  v11 = type metadata accessor for _ViewModifier_Content(255, a2, WitnessTable);
  v12 = sub_100044B54(&qword_1011BDA20);
  v13 = type metadata accessor for ModifiedContent(0, v11, v12);
  v67 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v15 = (char *)&v59 - v14;
  v16 = swift_getWitnessTable(&protocol conformance descriptor for _ViewModifier_Content<A>, v11);
  v61 = v16;
  v17 = sub_100049F28(&qword_1011BDA18, &qword_1011BDA20, (uint64_t)&protocol conformance descriptor for _ContentShapeModifier<A>);
  v84 = v16;
  v85 = v17;
  v18 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v13);
  v82 = v13;
  v83 = v18;
  v19 = v18;
  v59 = v18;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v82, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 0);
  v64 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  v22 = (char *)&v59 - v21;
  v82 = v13;
  v83 = v19;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v82, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v82 = OpaqueTypeMetadata2;
  v83 = OpaqueTypeConformance2;
  v23 = swift_getOpaqueTypeMetadata2(0, &v82, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 0);
  v63 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v25 = (char *)&v59 - v24;
  v26 = type metadata accessor for AccessibilityAttachmentModifier(255);
  v27 = type metadata accessor for ModifiedContent(0, v23, v26);
  v65 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v29 = (char *)&v59 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v62 = (char *)&v59 - v31;
  __chkstk_darwin(v32);
  v66 = (char *)&v59 - v33;
  v34 = sub_1008188E0();
  View.contentShape<A>(_:eoFill:)(v34, 0, v11, &type metadata for Rectangle, v61, v34);
  v35 = *(_QWORD *)(a2 + 24);
  v69 = *(_QWORD *)(a2 + 16);
  v61 = v35;
  v37 = sub_10081811C(v79, v69, v35, v36);
  View.onTapGesture(count:perform:)(1, v37, v38, v13, v59);
  v39 = swift_release();
  v40 = (*(uint64_t (**)(char *, uint64_t, __n128))(v67 + 8))(v15, v13, v39);
  v41 = v68;
  static AccessibilityChildBehavior.combine.getter(v40);
  v42 = OpaqueTypeConformance2;
  View.accessibilityElement(children:)(v41, OpaqueTypeMetadata2, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v41, v71);
  v43 = (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v22, OpaqueTypeMetadata2);
  v44 = v72;
  static AccessibilityTraits.isButton.getter(v43);
  v82 = OpaqueTypeMetadata2;
  v83 = v42;
  v45 = swift_getOpaqueTypeConformance2(&v82, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  View.accessibilityAddTraits(_:)(v44, v23, v45);
  (*(void (**)(char *, uint64_t))(v73 + 8))(v44, v74);
  v46 = (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v25, v23);
  v47 = v75;
  static AccessibilityActionKind.default.getter(v46);
  v49 = sub_10081863C(v79, v69, v61, v48);
  v50 = v62;
  ModifiedContent<>.accessibilityAction(_:_:)(v47, v49, v51, v27);
  v52 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v76 + 8))(v47, v77, v52);
  v53 = v65;
  v54 = *(void (**)(char *, uint64_t))(v65 + 8);
  v54(v29, v27);
  v55 = sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
  v80 = v45;
  v81 = v55;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v27);
  v56 = *(void (**)(char *, char *, uint64_t))(v53 + 16);
  v57 = v66;
  v56(v66, v50, v27);
  v54(v50, v27);
  v56(v78, v57, v27);
  return ((uint64_t (*)(char *, uint64_t))v54)(v57, v27);
}

uint64_t (*sub_10081811C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v7 = type metadata accessor for PlaybackSelection(0, a2, a3, a4);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  v10 = __chkstk_darwin(v7);
  v12 = (char *)&v17 - v11;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16))((char *)&v17 - v11, a1, v7, v10);
  v13 = *(unsigned __int8 *)(v8 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = swift_allocObject(&unk_1010DDE68, v14 + v9, v13 | 7);
  *(_QWORD *)(v15 + 16) = a2;
  *(_QWORD *)(v15 + 24) = a3;
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v15 + v14, v12, v7);
  return sub_10081AAE0;
}

void sub_1008181F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  id v20;
  char v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  unint64_t v24;
  uint64_t KeyPath;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint8_t *v48;
  uint64_t *v49;
  uint64_t v50;
  void (**v51)(uint64_t, __n128);
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  unint64_t *v55;
  void *v56;
  uint64_t v57;
  id v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64[2];

  v5 = v4;
  v7 = *(_QWORD *)(a1 + 16);
  v62 = *(_QWORD *)(a1 + 24);
  v63 = v7;
  v8 = type metadata accessor for SourcedPlaybackIntent(0, v7, v62, a4);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v58 - v10;
  v12 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = v4 + *(int *)(a1 + 36);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v13 + 104))(v16, enum case for MusicPlayer.PlayabilityStatus.playable(_:), v12, v14);
  v18 = static MusicPlayer.PlayabilityStatus.== infix(_:_:)(v17, v16);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  if ((v18 & 1) != 0)
  {
    v19 = v5 + *(int *)(a1 + 56);
    v20 = *(id *)v19;
    v21 = *(_BYTE *)(v19 + 8);
    sub_1000A4100(*(id *)v19, v21);
    v58 = sub_100824044(v20, v21);
    sub_1000A4224(v20, v21);
    v59 = v11;
    v60 = v9;
    v22 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v61 = v8;
    v22(v11, v5, v8);
    sub_100154264(a1);
    swift_retain();
    v23 = sub_1001542DC(a1);
    __chkstk_darwin(v23);
    *(&v58 - 2) = &type metadata for TabIdentifier;
    v24 = sub_1000502A4();
    *(&v58 - 1) = (id)v24;
    KeyPath = swift_getKeyPath(&unk_100ED1DB0);
    __chkstk_darwin(KeyPath);
    *(&v58 - 2) = &type metadata for TabIdentifier;
    *(&v58 - 1) = (id)v24;
    v26 = swift_getKeyPath(&unk_100ED1DE8);
    swift_retain();
    static Published.subscript.getter(v64, v27, KeyPath, v26);
    swift_release();
    swift_release();
    swift_release();
    LOBYTE(v20) = v64[0];
    v28 = v5 + *(int *)(a1 + 64);
    v29 = *(_QWORD *)v28;
    v30 = *(_QWORD *)(v28 + 8);
    v31 = *(_BYTE *)(v28 + 16);
    sub_1000A410C(*(_QWORD *)v28, v30, v31);
    sub_100824224(v29, v30, v31);
    sub_1000A4230(v29, v30, v31);
    v32 = v5 + *(int *)(a1 + 68);
    v33 = *(_QWORD *)v32;
    v34 = *(_QWORD *)(v32 + 8);
    v35 = *(_BYTE *)(v32 + 16);
    sub_1000A411C(*(_QWORD *)v32, v34, v35);
    sub_100824400(v33, v34, v35, v64);
    sub_1000A4240(v33, v34, v35);
    v37 = v64[0];
    v36 = v64[1];
    sub_10066D160((char)v20);
    v39 = v38;
    v41 = v40;
    swift_bridgeObjectRelease();
    if (v36 >> 60 == 15)
    {
      swift_bridgeObjectRetain();
      v37 = sub_10066D7A8();
      v36 = v42;
      swift_bridgeObjectRelease();
    }
    swift_release();
    v43 = v58;
    v44 = (uint64_t)v59;
    PlaybackController.enqueue<A>(_:playbackMetrics:)((uint64_t)v59, v39, v41, v37, v36, v63, v62);
    swift_bridgeObjectRelease();
    sub_1000822B4(v37, v36);

    v45 = (*(uint64_t (**)(uint64_t, uint64_t))(v60 + 8))(v44, v61);
    goto LABEL_8;
  }
  v47 = v5 + *(int *)(a1 + 60);
  v48 = *(uint8_t **)v47;
  if (!*(_QWORD *)v47)
  {
    v52 = *(_QWORD *)(v47 + 8);
    v53 = (uint64_t *)&unk_1011B4E40;
    v54 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
    v55 = (unint64_t *)&unk_10119CC10;
    v56 = &protocol conformance descriptor for PresentedViewState<A>;
LABEL_13:
    v57 = sub_100049F28(v55, v53, (uint64_t)v56);
    EnvironmentObject.error()(0, v52, v54, v57);
    __break(1u);
    return;
  }
  v49 = (uint64_t *)(v5 + *(int *)(a1 + 52));
  v50 = *v49;
  if (!*v49)
  {
    v52 = v49[1];
    swift_retain();
    v53 = &qword_10119CBF8;
    v54 = sub_100007E8C(&qword_10119CBF8);
    v55 = (unint64_t *)&unk_10119CC00;
    v56 = &protocol conformance descriptor for PresentedViewState<A>;
    goto LABEL_13;
  }
  swift_retain();
  swift_retain();
  sub_100547E9C(v17, v48, v50);
  swift_release();
  v46 = swift_release();
LABEL_8:
  v51 = (void (**)(uint64_t, __n128))(v5 + *(int *)(a1 + 40));
  if (*v51)
    (*v51)(v45, v46);
}

uint64_t (*sub_10081863C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v7 = type metadata accessor for PlaybackSelection(0, a2, a3, a4);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  v10 = __chkstk_darwin(v7);
  v12 = (char *)&v17 - v11;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16))((char *)&v17 - v11, a1, v7, v10);
  v13 = *(unsigned __int8 *)(v8 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = swift_allocObject(&unk_1010DDE40, v14 + v9, v13 | 7);
  *(_QWORD *)(v15 + 16) = a2;
  *(_QWORD *)(v15 + 24) = a3;
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v15 + v14, v12, v7);
  return sub_10081AAE0;
}

uint64_t sub_100818710@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t result;

  v19 = type metadata accessor for SourcedPlaybackIntent(0, a10, a11, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a9, a1, v19);
  v21 = (int *)type metadata accessor for PlaybackSelection(0, a10, a11, v20);
  v22 = a9 + v21[9];
  v23 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v22, a2, v23);
  v24 = (_QWORD *)(a9 + v21[10]);
  *v24 = a3;
  v24[1] = a4;
  v25 = (_QWORD *)(a9 + v21[11]);
  *v25 = a5;
  v25[1] = a6;
  v26 = (_QWORD *)(a9 + v21[12]);
  *v26 = a7;
  v26[1] = a8;
  v27 = (_QWORD *)(a9 + v21[13]);
  v28 = sub_100007E8C(&qword_10119CBF8);
  v29 = sub_100049F28((unint64_t *)&unk_10119CC00, &qword_10119CBF8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *v27 = EnvironmentObject.init()(v28, v29);
  v27[1] = v30;
  v31 = a9 + v21[14];
  *(_QWORD *)v31 = swift_getKeyPath(&unk_100ED1E08);
  *(_BYTE *)(v31 + 8) = 0;
  v32 = (_QWORD *)(a9 + v21[15]);
  v33 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v34 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *v32 = EnvironmentObject.init()(v33, v34);
  v32[1] = v35;
  v36 = a9 + v21[16];
  *(_QWORD *)v36 = swift_getKeyPath(&unk_100ED1E30);
  *(_QWORD *)(v36 + 8) = 0;
  *(_BYTE *)(v36 + 16) = 0;
  v37 = a9 + v21[17];
  result = swift_getKeyPath(&unk_100ED1E58);
  *(_QWORD *)v37 = result;
  *(_QWORD *)(v37 + 8) = 0;
  *(_BYTE *)(v37 + 16) = 0;
  return result;
}

unint64_t sub_1008188E0()
{
  unint64_t result;

  result = qword_1011CB030[0];
  if (!qword_1011CB030[0])
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Rectangle, &type metadata for Rectangle);
    atomic_store(result, qword_1011CB030);
  }
  return result;
}

uint64_t View.enqueueOnTap<A>(_:item:onSelection:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, char *a9@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t WitnessTable;
  void (*v24)(char *, char *, uint64_t);
  void (*v25)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v35 = a9;
  v28 = a2;
  v29 = a8;
  v33 = a4;
  v30 = a1;
  v31 = a3;
  v32 = type metadata accessor for PlaybackSelection(255, a6, a8, a4);
  v34 = type metadata accessor for ModifiedContent(255, a5, v32);
  v12 = type metadata accessor for _ConditionalContent(0, v34, a5);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v27 - v17;
  v19 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v27 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100545C34(v28, (uint64_t)v22);
  View.enqueueOnTap<A>(_:playabilityStatus:onSelection:)(v30, (uint64_t)v22, v31, v33, a5, a6, a7, v29, (uint64_t)v15);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for PlaybackSelection<A>, v32);
  v38 = a7;
  v39 = WitnessTable;
  v36 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v34);
  v37 = a7;
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v12);
  v24 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  v24(v18, v15, v12);
  v25 = *(void (**)(char *, uint64_t))(v13 + 8);
  v25(v15, v12);
  v24(v35, v18, v12);
  return ((uint64_t (*)(char *, uint64_t))v25)(v18, v12);
}

uint64_t sub_100818B04(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &opaque type descriptor for <<opaque return type of PlaybackSelection.body(content:)>>, 1);
}

uint64_t sub_100818B38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v6;
  unint64_t v7;
  _QWORD v8[10];

  result = type metadata accessor for SourcedPlaybackIntent(319, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a4);
  if (v6 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for MusicPlayer.PlayabilityStatus(319);
    if (v7 <= 0x3F)
    {
      v8[1] = *(_QWORD *)(result - 8) + 64;
      v8[2] = &unk_100ED1D58;
      v8[3] = &unk_100ED1D58;
      v8[4] = &unk_100ED1D58;
      v8[5] = &unk_100ED1D58;
      v8[6] = &unk_100ED1D70;
      v8[7] = &unk_100ED1D58;
      v8[8] = &unk_100ED1D88;
      v8[9] = &unk_100ED1D88;
      swift_initStructMetadata(a1, 0, 10, v8, a1 + 32);
      return 0;
    }
  }
  return result;
}

uint64_t *sub_100818BE8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  size_t v9;
  size_t v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  unsigned int v16;
  BOOL v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  unsigned __int8 *v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  size_t v26;
  uint64_t v27;
  char v28;
  char *v29;
  unsigned __int8 *v30;
  size_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  _QWORD *v39;
  _QWORD *v40;
  _QWORD *v41;
  _QWORD *v42;
  unint64_t v43;
  unint64_t v44;
  void *v45;
  char v46;
  _QWORD *v47;
  _QWORD *v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t AssociatedTypeWitness;

  v3 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, *(_QWORD *)(a3 + 24), v3, &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable);
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8 = *(_DWORD *)(v6 + 80);
  v7 = *(_DWORD *)(v6 + 84);
  v9 = *(_QWORD *)(v6 + 64);
  if (v7)
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = v9 + 1;
  if (v9 <= v10)
    v11 = v10;
  else
    v11 = *(_QWORD *)(v6 + 64);
  v12 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_DWORD *)(v13 + 80);
  v15 = *(_DWORD *)(v4 + 80) | v8;
  v16 = v14 | v15 & 0xF8;
  v17 = v16 <= 7 && ((v15 | *(_DWORD *)(v13 + 80)) & 0x100000) == 0;
  if (v17
    && (v18 = v5 + v8,
        ((((((((((((*(_QWORD *)(v13 + 64)
                  + 7
                  + (((v18 & ~(unint64_t)v8) + 2 + v11 + v14) & ~v14)) & 0xFFFFFFFFFFFFFFF8)
                + 23) & 0xFFFFFFFFFFFFFFF8)
              + 23) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)
          + 39) & 0xFFFFFFFFFFFFFFF8)
        + 47) & 0xFFFFFFFFFFFFFFF8)
      + 17 <= 0x18))
  {
    v58 = (v18 & ~(unint64_t)v8) + 2;
    v59 = *(_QWORD *)(v13 + 64) + 7;
    v60 = *(_QWORD *)(v12 - 8);
    v61 = v12;
    v19 = ~(unint64_t)v8;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v4 + 16))(a1, a2, v3);
    v20 = (char *)(((unint64_t)a1 + v18) & v19);
    v21 = (unsigned __int8 *)(((unint64_t)a2 + v18) & v19);
    v22 = v21[v11];
    if (v22 >= 2)
    {
      if (v11 <= 3)
        v23 = v11;
      else
        v23 = 4;
      __asm { BR              X12 }
    }
    v26 = v9 + 1;
    v27 = ~v14;
    if (v22 == 1)
    {
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v6 + 16))(v20, v21, AssociatedTypeWitness);
      v28 = 1;
    }
    else
    {
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t))(v6 + 48))(v21, 1))
      {
        memcpy(v20, v21, v10);
      }
      else
      {
        (*(void (**)(char *, unsigned __int8 *, uint64_t))(v6 + 16))(v20, v21, AssociatedTypeWitness);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v20, 0, 1, AssociatedTypeWitness);
      }
      v28 = 0;
    }
    v20[v11] = v28;
    v29 = &v20[v26];
    v30 = &v21[v26];
    if (v9 <= v26)
      v31 = v9 + 1;
    else
      v31 = v9;
    if (v7)
    {
      v31 = v9;
    }
    else
    {
      v30 = &v21[v31 + 1];
      v29 = &v20[v31 + 1];
    }
    *v29 = *v30;
    v25 = a1;
    v32 = ((unint64_t)a1 + v14 + v58 + v31) & v27;
    v33 = ((unint64_t)a2 + v14 + v58 + v31) & v27;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v60 + 16))(v32, v33, v61);
    v34 = (v59 + v32) & 0xFFFFFFFFFFFFFFF8;
    v35 = (v59 + v33) & 0xFFFFFFFFFFFFFFF8;
    if (*(_QWORD *)v35 < 0xFFFFFFFFuLL)
    {
      *(_OWORD *)v34 = *(_OWORD *)v35;
    }
    else
    {
      v36 = *(_QWORD *)(v35 + 8);
      *(_QWORD *)v34 = *(_QWORD *)v35;
      *(_QWORD *)(v34 + 8) = v36;
      swift_retain();
    }
    v37 = (_QWORD *)((v34 + 23) & 0xFFFFFFFFFFFFFFF8);
    v38 = (_QWORD *)((v35 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v37 = *v38;
    v37[1] = v38[1];
    v39 = (_QWORD *)(((unint64_t)v37 + 23) & 0xFFFFFFFFFFFFFFF8);
    v40 = (_QWORD *)(((unint64_t)v38 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v39 = *v40;
    v39[1] = v40[1];
    v41 = (_QWORD *)(((unint64_t)v39 + 23) & 0xFFFFFFFFFFFFFFF8);
    v42 = (_QWORD *)(((unint64_t)v40 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v41 = *v42;
    v41[1] = v42[1];
    v43 = ((unint64_t)v41 + 23) & 0xFFFFFFFFFFFFFFF8;
    v44 = ((unint64_t)v42 + 23) & 0xFFFFFFFFFFFFFFF8;
    v45 = *(void **)v44;
    v46 = *(_BYTE *)(v44 + 8);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1000A4100(v45, v46);
    *(_QWORD *)v43 = v45;
    *(_BYTE *)(v43 + 8) = v46;
    v47 = (_QWORD *)(((unint64_t)v41 + 39) & 0xFFFFFFFFFFFFFFF8);
    v48 = (_QWORD *)(((unint64_t)v42 + 39) & 0xFFFFFFFFFFFFFFF8);
    *v47 = *v48;
    v47[1] = v48[1];
    v49 = ((unint64_t)v47 + 23) & 0xFFFFFFFFFFFFFFF8;
    v50 = ((unint64_t)v48 + 23) & 0xFFFFFFFFFFFFFFF8;
    v51 = *(_QWORD *)v50;
    v52 = *(_QWORD *)(v50 + 8);
    LOBYTE(v45) = *(_BYTE *)(v50 + 16);
    swift_retain();
    sub_1000A410C(v51, v52, (char)v45);
    *(_QWORD *)v49 = v51;
    *(_QWORD *)(v49 + 8) = v52;
    *(_BYTE *)(v49 + 16) = (_BYTE)v45;
    v53 = ((unint64_t)v47 + 47) & 0xFFFFFFFFFFFFFFF8;
    v54 = ((unint64_t)v48 + 47) & 0xFFFFFFFFFFFFFFF8;
    v55 = *(_QWORD *)v54;
    v56 = *(_QWORD *)(v54 + 8);
    LOBYTE(v45) = *(_BYTE *)(v54 + 16);
    sub_1000A411C(*(_QWORD *)v54, v56, (char)v45);
    *(_QWORD *)v53 = v55;
    *(_QWORD *)(v53 + 8) = v56;
    *(_BYTE *)(v53 + 16) = (_BYTE)v45;
  }
  else
  {
    v24 = *a2;
    *a1 = *a2;
    v25 = (uint64_t *)(v24 + (((v16 | 7) + 16) & ~(unint64_t)(v16 | 7)));
    swift_retain();
  }
  return v25;
}

double sub_10081906C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = *(_QWORD *)(v5 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, *(_QWORD *)(a2 + 24), v4, &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable);
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9;
  v11 = (v6 + v9 + a1) & ~v9;
  v12 = *(_QWORD *)(v8 + 64);
  if (*(_DWORD *)(v8 + 84))
    v13 = *(_QWORD *)(v8 + 64);
  else
    v13 = v12 + 1;
  if (v12 <= v13)
    v14 = v13;
  else
    v14 = *(_QWORD *)(v8 + 64);
  v15 = *(unsigned __int8 *)(v11 + v14);
  if (v15 >= 2)
  {
    if (v14 <= 3)
      v16 = v14;
    else
      v16 = 4;
    __asm { BR              X13 }
  }
  v17 = ~v9;
  if (v15 == 1
    || !(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v11, 1, AssociatedTypeWitness))
  {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v11, AssociatedTypeWitness);
  }
  v18 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = (a1 + (v10 & v17) + *(unsigned __int8 *)(v19 + 80) + v14 + 2) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  (*(void (**)(unint64_t, uint64_t))(v19 + 8))(v20, v18);
  v21 = (_QWORD *)((*(_QWORD *)(v19 + 64) + v20 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (*v21 >= 0xFFFFFFFFuLL)
    swift_release();
  swift_release();
  swift_release();
  v22 = ((((((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  sub_1000A4224(*(id *)((v22 + 23) & 0xFFFFFFFFFFFFFFF8), *(_BYTE *)(((v22 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
  v23 = (v22 + 39) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  sub_1000A4230(*(_QWORD *)((v23 + 23) & 0xFFFFFFFFFFFFFFF8), *(_QWORD *)(((v23 + 23) & 0xFFFFFFFFFFFFFFF8) + 8), *(_BYTE *)(((v23 + 23) & 0xFFFFFFFFFFFFFFF8) + 16));
  return sub_1000A4240(*(_QWORD *)((v23 + 47) & 0xFFFFFFFFFFFFFFF8), *(_QWORD *)(((v23 + 47) & 0xFFFFFFFFFFFFFFF8) + 8), *(_BYTE *)(((v23 + 47) & 0xFFFFFFFFFFFFFFF8) + 16));
}

uint64_t sub_100819280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  unsigned __int8 *v14;
  size_t v15;
  size_t v16;
  size_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  _QWORD *v34;
  _QWORD *v35;
  _QWORD *v36;
  _QWORD *v37;
  unint64_t v38;
  unint64_t v39;
  void *v40;
  char v41;
  _QWORD *v42;
  _QWORD *v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;

  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, *(_QWORD *)(a3 + 24), v6, &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable);
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v8 + v11;
  v13 = (void *)((v8 + v11 + a1) & ~v11);
  v14 = (unsigned __int8 *)((v8 + v11 + a2) & ~v11);
  v15 = *(_QWORD *)(v10 + 64);
  if (*(_DWORD *)(v10 + 84))
    v16 = *(_QWORD *)(v10 + 64);
  else
    v16 = v15 + 1;
  if (v15 <= v16)
    v17 = v16;
  else
    v17 = *(_QWORD *)(v10 + 64);
  v18 = v14[v17];
  if (v18 >= 2)
  {
    if (v17 <= 3)
      v19 = v17;
    else
      v19 = 4;
    __asm { BR              X13 }
  }
  v20 = ~v11;
  if (v18 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v10 + 16))(v13, v14, AssociatedTypeWitness);
    v21 = 1;
  }
  else
  {
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v10 + 48))(v14, 1, AssociatedTypeWitness))
    {
      memcpy(v13, v14, v16);
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v10 + 16))(v13, v14, AssociatedTypeWitness);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, AssociatedTypeWitness);
    }
    v21 = 0;
  }
  *((_BYTE *)v13 + v17) = v21;
  *((_BYTE *)v13 + v17 + 1) = v14[v17 + 1];
  v22 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(unsigned __int8 *)(v23 + 80);
  v25 = (v12 & v20) + v24 + v17 + 1 + 1;
  v26 = (v25 + a1) & ~v24;
  v27 = (v25 + a2) & ~v24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v26, v27, v22);
  v28 = *(_QWORD *)(v23 + 64) + 7;
  v29 = (v28 + v26) & 0xFFFFFFFFFFFFFFF8;
  v30 = (v28 + v27) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)v30 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v29 = *(_OWORD *)v30;
  }
  else
  {
    v31 = *(_QWORD *)(v30 + 8);
    *(_QWORD *)v29 = *(_QWORD *)v30;
    *(_QWORD *)(v29 + 8) = v31;
    swift_retain();
  }
  v32 = (_QWORD *)((v29 + 23) & 0xFFFFFFFFFFFFFFF8);
  v33 = (_QWORD *)((v30 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v32 = *v33;
  v32[1] = v33[1];
  v34 = (_QWORD *)(((unint64_t)v32 + 23) & 0xFFFFFFFFFFFFFFF8);
  v35 = (_QWORD *)(((unint64_t)v33 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v34 = *v35;
  v34[1] = v35[1];
  v36 = (_QWORD *)(((unint64_t)v34 + 23) & 0xFFFFFFFFFFFFFFF8);
  v37 = (_QWORD *)(((unint64_t)v35 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v36 = *v37;
  v36[1] = v37[1];
  v38 = ((unint64_t)v36 + 23) & 0xFFFFFFFFFFFFFFF8;
  v39 = ((unint64_t)v37 + 23) & 0xFFFFFFFFFFFFFFF8;
  v40 = *(void **)v39;
  v41 = *(_BYTE *)(v39 + 8);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000A4100(v40, v41);
  *(_QWORD *)v38 = v40;
  *(_BYTE *)(v38 + 8) = v41;
  v42 = (_QWORD *)(((unint64_t)v36 + 39) & 0xFFFFFFFFFFFFFFF8);
  v43 = (_QWORD *)(((unint64_t)v37 + 39) & 0xFFFFFFFFFFFFFFF8);
  *v42 = *v43;
  v42[1] = v43[1];
  v44 = ((unint64_t)v42 + 23) & 0xFFFFFFFFFFFFFFF8;
  v45 = ((unint64_t)v43 + 23) & 0xFFFFFFFFFFFFFFF8;
  v46 = *(_QWORD *)v45;
  v47 = *(_QWORD *)(v45 + 8);
  LOBYTE(v40) = *(_BYTE *)(v45 + 16);
  swift_retain();
  sub_1000A410C(v46, v47, (char)v40);
  *(_QWORD *)v44 = v46;
  *(_QWORD *)(v44 + 8) = v47;
  *(_BYTE *)(v44 + 16) = (_BYTE)v40;
  v48 = ((unint64_t)v42 + 47) & 0xFFFFFFFFFFFFFFF8;
  v49 = ((unint64_t)v43 + 47) & 0xFFFFFFFFFFFFFFF8;
  v50 = *(_QWORD *)v49;
  v51 = *(_QWORD *)(v49 + 8);
  LOBYTE(v40) = *(_BYTE *)(v49 + 16);
  sub_1000A411C(*(_QWORD *)v49, v51, (char)v40);
  *(_QWORD *)v48 = v50;
  *(_QWORD *)(v48 + 8) = v51;
  *(_BYTE *)(v48 + 16) = (_BYTE)v40;
  return a1;
}

uint64_t sub_1008195E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  unsigned __int8 *v15;
  int v16;
  size_t v17;
  uint64_t v18;
  size_t v19;
  size_t v20;
  unsigned int v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  char v25;
  size_t v26;
  size_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  _QWORD *v43;
  _QWORD *v44;
  _QWORD *v45;
  _QWORD *v46;
  unint64_t v47;
  unint64_t v48;
  id v49;
  void *v50;
  char v51;
  _QWORD *v52;
  _QWORD *v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  uint64_t v69;
  uint64_t v70;

  v5 = a1;
  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, *(_QWORD *)(a3 + 24), v6, &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable);
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v8 + v11;
  v13 = ~v11;
  v14 = (unsigned __int8 *)((v8 + v11 + v5) & ~v11);
  v15 = (unsigned __int8 *)((v8 + v11 + a2) & ~v11);
  v16 = *(_DWORD *)(v10 + 84);
  v17 = *(_QWORD *)(v10 + 64);
  if (v14 != v15)
  {
    v18 = AssociatedTypeWitness;
    v69 = ~v11;
    v70 = v5;
    if (v16)
      v19 = *(_QWORD *)(v10 + 64);
    else
      v19 = v17 + 1;
    if (v17 <= v19)
      v20 = v19;
    else
      v20 = *(_QWORD *)(v10 + 64);
    v21 = v14[v20];
    if (v21 >= 2)
    {
      if (v20 <= 3)
        v22 = v20;
      else
        v22 = 4;
      __asm { BR              X12 }
    }
    if (v21 == 1
      || !(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v10 + 48))(v14, 1, AssociatedTypeWitness))
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v10 + 8))(v14, v18);
    }
    v23 = v15[v20];
    if (v23 >= 2)
    {
      if (v20 <= 3)
        v24 = v20;
      else
        v24 = 4;
      __asm { BR              X12 }
    }
    if (v23 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v10 + 16))(v14, v15, v18);
      v25 = 1;
    }
    else
    {
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v18))
      {
        memcpy(v14, v15, v19);
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v10 + 16))(v14, v15, v18);
        (*(void (**)(unsigned __int8 *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v18);
      }
      v25 = 0;
    }
    v14[v20] = v25;
    v13 = v69;
    v5 = v70;
  }
  if (v16)
    v26 = v17;
  else
    v26 = v17 + 1;
  if (v17 > v26)
    v26 = v17;
  v27 = v26 + 1;
  v14[v26 + 1] = v15[v26 + 1];
  v28 = v12 & v13;
  v29 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v30 = *(_QWORD *)(v29 - 8);
  v31 = *(unsigned __int8 *)(v30 + 80);
  v32 = v28 + v31 + v27 + 1;
  v33 = (v32 + v5) & ~v31;
  v34 = (v32 + a2) & ~v31;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 24))(v33, v34, v29);
  v35 = *(_QWORD *)(v30 + 64) + 7;
  v36 = (_QWORD *)((v35 + v33) & 0xFFFFFFFFFFFFFFF8);
  v37 = (unint64_t *)((v35 + v34) & 0xFFFFFFFFFFFFFFF8);
  v38 = *v37;
  if (*v36 < 0xFFFFFFFFuLL)
  {
    if (v38 >= 0xFFFFFFFF)
    {
      v40 = v37[1];
      *v36 = v38;
      v36[1] = v40;
      swift_retain();
      goto LABEL_40;
    }
LABEL_39:
    *(_OWORD *)v36 = *(_OWORD *)v37;
    goto LABEL_40;
  }
  if (v38 < 0xFFFFFFFF)
  {
    swift_release();
    goto LABEL_39;
  }
  v39 = v37[1];
  *v36 = v38;
  v36[1] = v39;
  swift_retain();
  swift_release();
LABEL_40:
  v41 = (_QWORD *)(((unint64_t)v36 + 23) & 0xFFFFFFFFFFFFFFF8);
  v42 = (_QWORD *)(((unint64_t)v37 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v41 = *v42;
  swift_retain();
  swift_release();
  v41[1] = v42[1];
  v43 = (_QWORD *)(((unint64_t)v41 + 23) & 0xFFFFFFFFFFFFFFF8);
  v44 = (_QWORD *)(((unint64_t)v42 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v43 = *v44;
  swift_retain();
  swift_release();
  v43[1] = v44[1];
  v45 = (_QWORD *)(((unint64_t)v43 + 23) & 0xFFFFFFFFFFFFFFF8);
  v46 = (_QWORD *)(((unint64_t)v44 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v45 = *v46;
  swift_retain();
  swift_release();
  v45[1] = v46[1];
  v47 = ((unint64_t)v45 + 23) & 0xFFFFFFFFFFFFFFF8;
  v48 = ((unint64_t)v46 + 23) & 0xFFFFFFFFFFFFFFF8;
  v49 = *(id *)v48;
  LOBYTE(v44) = *(_BYTE *)(v48 + 8);
  sub_1000A4100(*(id *)v48, (char)v44);
  v50 = *(void **)v47;
  v51 = *(_BYTE *)(v47 + 8);
  *(_QWORD *)v47 = v49;
  *(_BYTE *)(v47 + 8) = (_BYTE)v44;
  sub_1000A4224(v50, v51);
  v52 = (_QWORD *)(((unint64_t)v45 + 39) & 0xFFFFFFFFFFFFFFF8);
  v53 = (_QWORD *)(((unint64_t)v46 + 39) & 0xFFFFFFFFFFFFFFF8);
  *v52 = *v53;
  swift_retain();
  swift_release();
  v52[1] = v53[1];
  v54 = ((unint64_t)v52 + 23) & 0xFFFFFFFFFFFFFFF8;
  v55 = ((unint64_t)v53 + 23) & 0xFFFFFFFFFFFFFFF8;
  v56 = *(_QWORD *)v55;
  v57 = *(_QWORD *)(v55 + 8);
  LOBYTE(v46) = *(_BYTE *)(v55 + 16);
  sub_1000A410C(*(_QWORD *)v55, v57, (char)v46);
  v58 = *(_QWORD *)v54;
  v59 = *(_QWORD *)(v54 + 8);
  v60 = *(_BYTE *)(v54 + 16);
  *(_QWORD *)v54 = v56;
  *(_QWORD *)(v54 + 8) = v57;
  *(_BYTE *)(v54 + 16) = (_BYTE)v46;
  sub_1000A4230(v58, v59, v60);
  v61 = ((unint64_t)v52 + 47) & 0xFFFFFFFFFFFFFFF8;
  v62 = ((unint64_t)v53 + 47) & 0xFFFFFFFFFFFFFFF8;
  v63 = *(_QWORD *)v62;
  v64 = *(_QWORD *)(v62 + 8);
  LOBYTE(v46) = *(_BYTE *)(v62 + 16);
  sub_1000A411C(*(_QWORD *)v62, v64, (char)v46);
  v65 = *(_QWORD *)v61;
  v66 = *(_QWORD *)(v61 + 8);
  v67 = *(_BYTE *)(v61 + 16);
  *(_QWORD *)v61 = v63;
  *(_QWORD *)(v61 + 8) = v64;
  *(_BYTE *)(v61 + 16) = (_BYTE)v46;
  sub_1000A4240(v65, v66, v67);
  return v5;
}

uint64_t sub_100819AD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  unsigned __int8 *v14;
  size_t v15;
  size_t v16;
  size_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _OWORD *v32;
  _OWORD *v33;
  _OWORD *v34;
  _OWORD *v35;
  _OWORD *v36;
  _OWORD *v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _OWORD *v41;
  _OWORD *v42;
  unint64_t v43;
  unint64_t v44;
  __int128 v45;
  unint64_t v46;
  unint64_t v47;
  __int128 v48;

  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, *(_QWORD *)(a3 + 24), v6, &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable);
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v8 + v11;
  v13 = (void *)((v8 + v11 + a1) & ~v11);
  v14 = (unsigned __int8 *)((v8 + v11 + a2) & ~v11);
  v15 = *(_QWORD *)(v10 + 64);
  if (*(_DWORD *)(v10 + 84))
    v16 = *(_QWORD *)(v10 + 64);
  else
    v16 = v15 + 1;
  if (v15 <= v16)
    v17 = v16;
  else
    v17 = *(_QWORD *)(v10 + 64);
  v18 = v14[v17];
  if (v18 >= 2)
  {
    if (v17 <= 3)
      v19 = v17;
    else
      v19 = 4;
    __asm { BR              X13 }
  }
  v20 = ~v11;
  if (v18 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v10 + 32))(v13, v14, AssociatedTypeWitness);
    v21 = 1;
  }
  else
  {
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v10 + 48))(v14, 1, AssociatedTypeWitness))
    {
      memcpy(v13, v14, v16);
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v10 + 32))(v13, v14, AssociatedTypeWitness);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, AssociatedTypeWitness);
    }
    v21 = 0;
  }
  *((_BYTE *)v13 + v17) = v21;
  *((_BYTE *)v13 + v17 + 1) = v14[v17 + 1];
  v22 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(unsigned __int8 *)(v23 + 80);
  v25 = (v12 & v20) + v24 + v17 + 1 + 1;
  v26 = (v25 + a1) & ~v24;
  v27 = (v25 + a2) & ~v24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))(v26, v27, v22);
  v28 = *(_QWORD *)(v23 + 64) + 7;
  v29 = (v28 + v26) & 0xFFFFFFFFFFFFFFF8;
  v30 = (v28 + v27) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)v30 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v29 = *(_OWORD *)v30;
  }
  else
  {
    v31 = *(_QWORD *)(v30 + 8);
    *(_QWORD *)v29 = *(_QWORD *)v30;
    *(_QWORD *)(v29 + 8) = v31;
  }
  v32 = (_OWORD *)((v29 + 23) & 0xFFFFFFFFFFFFFFF8);
  v33 = (_OWORD *)((v30 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v32 = *v33;
  v34 = (_OWORD *)(((unint64_t)v32 + 23) & 0xFFFFFFFFFFFFFFF8);
  v35 = (_OWORD *)(((unint64_t)v33 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v34 = *v35;
  v36 = (_OWORD *)(((unint64_t)v34 + 23) & 0xFFFFFFFFFFFFFFF8);
  v37 = (_OWORD *)(((unint64_t)v35 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v36 = *v37;
  v38 = ((unint64_t)v36 + 23) & 0xFFFFFFFFFFFFFFF8;
  v39 = ((unint64_t)v37 + 23) & 0xFFFFFFFFFFFFFFF8;
  v40 = *(_QWORD *)v39;
  *(_BYTE *)(v38 + 8) = *(_BYTE *)(v39 + 8);
  *(_QWORD *)v38 = v40;
  v41 = (_OWORD *)(((unint64_t)v36 + 39) & 0xFFFFFFFFFFFFFFF8);
  v42 = (_OWORD *)(((unint64_t)v37 + 39) & 0xFFFFFFFFFFFFFFF8);
  *v41 = *v42;
  v43 = ((unint64_t)v41 + 23) & 0xFFFFFFFFFFFFFFF8;
  v44 = ((unint64_t)v42 + 23) & 0xFFFFFFFFFFFFFFF8;
  v45 = *(_OWORD *)v44;
  *(_BYTE *)(v43 + 16) = *(_BYTE *)(v44 + 16);
  *(_OWORD *)v43 = v45;
  v46 = ((unint64_t)v41 + 47) & 0xFFFFFFFFFFFFFFF8;
  v47 = ((unint64_t)v42 + 47) & 0xFFFFFFFFFFFFFFF8;
  v48 = *(_OWORD *)v47;
  *(_BYTE *)(v46 + 16) = *(_BYTE *)(v47 + 16);
  *(_OWORD *)v46 = v48;
  return a1;
}

uint64_t sub_100819DC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  unsigned __int8 *v15;
  int v16;
  size_t v17;
  uint64_t v18;
  size_t v19;
  size_t v20;
  unsigned int v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  char v25;
  size_t v26;
  size_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  _QWORD *v43;
  _QWORD *v44;
  _QWORD *v45;
  _QWORD *v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  void *v50;
  char v51;
  _QWORD *v52;
  _QWORD *v53;
  unint64_t v54;
  unint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  unint64_t v60;
  unint64_t v61;
  char v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  int v67;
  uint64_t v68;

  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, *(_QWORD *)(a3 + 24), v6, &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable);
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v8 + v11;
  v13 = ~v11;
  v14 = (unsigned __int8 *)((v8 + v11 + a1) & ~v11);
  v15 = (unsigned __int8 *)((v8 + v11 + a2) & ~v11);
  v16 = *(_DWORD *)(v10 + 84);
  v17 = *(_QWORD *)(v10 + 64);
  if (v14 != v15)
  {
    v18 = AssociatedTypeWitness;
    v68 = v13;
    v67 = *(_DWORD *)(v10 + 84);
    if (v16)
      v19 = *(_QWORD *)(v10 + 64);
    else
      v19 = v17 + 1;
    if (v17 <= v19)
      v20 = v19;
    else
      v20 = *(_QWORD *)(v10 + 64);
    v21 = v14[v20];
    if (v21 >= 2)
    {
      if (v20 <= 3)
        v22 = v20;
      else
        v22 = 4;
      __asm { BR              X12 }
    }
    if (v21 == 1
      || !(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v10 + 48))(v14, 1, AssociatedTypeWitness))
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v10 + 8))(v14, v18);
    }
    v23 = v15[v20];
    if (v23 >= 2)
    {
      if (v20 <= 3)
        v24 = v20;
      else
        v24 = 4;
      __asm { BR              X12 }
    }
    if (v23 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v10 + 32))(v14, v15, v18);
      v25 = 1;
    }
    else
    {
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v18))
      {
        memcpy(v14, v15, v19);
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v10 + 32))(v14, v15, v18);
        (*(void (**)(unsigned __int8 *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v18);
      }
      v25 = 0;
    }
    v14[v20] = v25;
    v13 = v68;
    v16 = v67;
  }
  if (v16)
    v26 = v17;
  else
    v26 = v17 + 1;
  if (v17 > v26)
    v26 = v17;
  v27 = v26 + 1;
  v14[v26 + 1] = v15[v26 + 1];
  v28 = v12 & v13;
  v29 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v30 = *(_QWORD *)(v29 - 8);
  v31 = *(unsigned __int8 *)(v30 + 80);
  v32 = v28 + v31 + v27 + 1;
  v33 = (v32 + a1) & ~v31;
  v34 = (v32 + a2) & ~v31;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 40))(v33, v34, v29);
  v35 = *(_QWORD *)(v30 + 64) + 7;
  v36 = (_QWORD *)((v35 + v33) & 0xFFFFFFFFFFFFFFF8);
  v37 = (unint64_t *)((v35 + v34) & 0xFFFFFFFFFFFFFFF8);
  v38 = *v37;
  if (*v36 < 0xFFFFFFFFuLL)
  {
    if (v38 >= 0xFFFFFFFF)
    {
      v40 = v37[1];
      *v36 = v38;
      v36[1] = v40;
      goto LABEL_40;
    }
LABEL_39:
    *(_OWORD *)v36 = *(_OWORD *)v37;
    goto LABEL_40;
  }
  if (v38 < 0xFFFFFFFF)
  {
    swift_release();
    goto LABEL_39;
  }
  v39 = v37[1];
  *v36 = v38;
  v36[1] = v39;
  swift_release();
LABEL_40:
  v41 = (_QWORD *)(((unint64_t)v36 + 23) & 0xFFFFFFFFFFFFFFF8);
  v42 = (_QWORD *)(((unint64_t)v37 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v41 = *v42;
  swift_release();
  v41[1] = v42[1];
  v43 = (_QWORD *)(((unint64_t)v41 + 23) & 0xFFFFFFFFFFFFFFF8);
  v44 = (_QWORD *)(((unint64_t)v42 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v43 = *v44;
  swift_release();
  v43[1] = v44[1];
  v45 = (_QWORD *)(((unint64_t)v43 + 23) & 0xFFFFFFFFFFFFFFF8);
  v46 = (_QWORD *)(((unint64_t)v44 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v45 = *v46;
  swift_release();
  v45[1] = v46[1];
  v47 = ((unint64_t)v45 + 23) & 0xFFFFFFFFFFFFFFF8;
  v48 = ((unint64_t)v46 + 23) & 0xFFFFFFFFFFFFFFF8;
  v49 = *(_QWORD *)v48;
  LOBYTE(v48) = *(_BYTE *)(v48 + 8);
  v50 = *(void **)v47;
  v51 = *(_BYTE *)(v47 + 8);
  *(_QWORD *)v47 = v49;
  *(_BYTE *)(v47 + 8) = v48;
  sub_1000A4224(v50, v51);
  v52 = (_QWORD *)(((unint64_t)v45 + 39) & 0xFFFFFFFFFFFFFFF8);
  v53 = (_QWORD *)(((unint64_t)v46 + 39) & 0xFFFFFFFFFFFFFFF8);
  *v52 = *v53;
  swift_release();
  v52[1] = v53[1];
  v54 = ((unint64_t)v52 + 23) & 0xFFFFFFFFFFFFFFF8;
  v55 = ((unint64_t)v53 + 23) & 0xFFFFFFFFFFFFFFF8;
  v56 = *(_BYTE *)(v55 + 16);
  v57 = *(_QWORD *)v54;
  v58 = *(_QWORD *)(v54 + 8);
  v59 = *(_BYTE *)(v54 + 16);
  *(_OWORD *)v54 = *(_OWORD *)v55;
  *(_BYTE *)(v54 + 16) = v56;
  sub_1000A4230(v57, v58, v59);
  v60 = ((unint64_t)v52 + 47) & 0xFFFFFFFFFFFFFFF8;
  v61 = ((unint64_t)v53 + 47) & 0xFFFFFFFFFFFFFFF8;
  v62 = *(_BYTE *)(v61 + 16);
  v63 = *(_QWORD *)v60;
  v64 = *(_QWORD *)(v60 + 8);
  v65 = *(_BYTE *)(v60 + 16);
  *(_OWORD *)v60 = *(_OWORD *)v61;
  *(_BYTE *)(v60 + 16) = v62;
  sub_1000A4240(v63, v64, v65);
  return a1;
}

uint64_t sub_10081A268(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  unint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  unsigned int v30;
  unint64_t v31;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = *(_QWORD *)(swift_getAssociatedTypeWitness(0, *(_QWORD *)(a3 + 24), v5, &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable)- 8);
  v9 = *(_DWORD *)(v8 + 84);
  v10 = *(_QWORD *)(v8 + 64);
  if (v7 <= 0xFE)
    v11 = 254;
  else
    v11 = v7;
  v12 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int *)(v13 + 84);
  if (v14 <= v11)
    v15 = v11;
  else
    v15 = *(_DWORD *)(v13 + 84);
  if (v15 <= 0x7FFFFFFE)
    v15 = 2147483646;
  if (v9)
    v16 = v10;
  else
    v16 = v10 + 1;
  if (v10 > v16)
    v16 = v10;
  if (!a2)
    return 0;
  v17 = v12;
  v18 = *(unsigned __int8 *)(v8 + 80);
  v19 = *(_QWORD *)(v6 + 64) + v18;
  v20 = *(unsigned __int8 *)(v13 + 80);
  v21 = v16 + (v19 & ~v18) + v20 + 2;
  v22 = *(_QWORD *)(v13 + 64) + 7;
  if (v15 < a2)
  {
    v23 = ((((((((((((v22 + (v21 & ~(_DWORD)v20)) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8)
            + 39) & 0xFFFFFFF8)
          + 47) & 0xFFFFFFF8)
        + 17;
    if (v23 < 4)
      v24 = ((a2 - v15 + 255) >> (8 * v23)) + 1;
    else
      v24 = 2;
    if (v24 >= 0x10000)
      v25 = 4;
    else
      v25 = 2;
    if (v24 < 0x100)
      v25 = 1;
    if (v24 >= 2)
      v26 = v25;
    else
      v26 = 0;
    __asm { BR              X4 }
  }
  if (v11 == v15)
  {
    if (v7 >= 0xFE)
    {
      v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
      v29 = a1;
      v14 = v7;
      v17 = v5;
      return v28(v29, v14, v17);
    }
    v30 = *(unsigned __int8 *)(((v19 + a1) & ~v18) + v16);
    if (v30 >= 2)
      return (v30 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v29 = (v21 + a1) & ~v20;
    if ((_DWORD)v14 == v15)
    {
      v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
      return v28(v29, v14, v17);
    }
    v31 = *(_QWORD *)((v22 + v29) & 0xFFFFFFFFFFFFF8);
    if (v31 >= 0xFFFFFFFF)
      LODWORD(v31) = -1;
    if ((v31 + 1) >= 2)
      return v31;
    else
      return 0;
  }
}

void sub_10081A4D4(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  unsigned int v13;
  uint64_t v14;
  unsigned int v15;
  unsigned int v16;
  unint64_t v17;
  size_t v18;
  unsigned int v19;
  int v20;
  int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;

  v7 = *(_QWORD *)(a4 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_DWORD *)(v8 + 84);
  v10 = *(_QWORD *)(swift_getAssociatedTypeWitness(0, *(_QWORD *)(a4 + 24), v7, &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable)- 8);
  v11 = *(_DWORD *)(v10 + 84);
  v12 = *(_QWORD *)(v10 + 64);
  if (v9 <= 0xFE)
    v13 = 254;
  else
    v13 = v9;
  v14 = *(_QWORD *)(type metadata accessor for MusicPlayer.PlayabilityStatus(0) - 8);
  if (*(_DWORD *)(v14 + 84) <= v13)
    v15 = v13;
  else
    v15 = *(_DWORD *)(v14 + 84);
  if (v15 <= 0x7FFFFFFE)
    v16 = 2147483646;
  else
    v16 = v15;
  if (v11)
    v17 = v12;
  else
    v17 = v12 + 1;
  if (v12 > v17)
    v17 = v12;
  v18 = ((((((((((((*(_QWORD *)(v14 + 64)
                  + 7
                  + ((v17
                    + ((*(_QWORD *)(v8 + 64) + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))
                    + *(unsigned __int8 *)(v14 + 80)
                    + 2) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))) & 0xFFFFFFFFFFFFFFF8)
                + 23) & 0xFFFFFFFFFFFFFFF8)
              + 23) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)
          + 39) & 0xFFFFFFFFFFFFFFF8)
        + 47) & 0xFFFFFFFFFFFFFFF8)
      + 17;
  if (v16 >= a3)
  {
    v21 = 0;
    if (v16 >= a2)
      goto LABEL_28;
  }
  else
  {
    if (v18 <= 3)
      v19 = ((a3 - v16 + 255) >> (8 * v18)) + 1;
    else
      v19 = 2;
    if (v19 >= 0x10000)
      v20 = 4;
    else
      v20 = 2;
    if (v19 < 0x100)
      v20 = 1;
    if (v19 >= 2)
      v21 = v20;
    else
      v21 = 0;
    if (v16 >= a2)
LABEL_28:
      __asm { BR              X0 }
  }
  v22 = ~v16 + a2;
  v23 = (~(_BYTE)v16 + a2);
  if (v18 >= 4)
    v24 = v22;
  else
    v24 = v23;
  bzero(a1, v18);
  if ((_DWORD)v18 == 1)
    *a1 = v24;
  else
    *(_DWORD *)a1 = v24;
  __asm { BR              X10 }
}

void sub_10081A6B4()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v1 + v2) = v0;
  JUMPOUT(0x10081A7E4);
}

void sub_10081A6BC()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + v2) = 0;
  if (v0)
    JUMPOUT(0x10081A6C4);
  JUMPOUT(0x10081A7E4);
}

void sub_10081A720()
{
  __int16 v0;
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v1 + v2) = v0;
  JUMPOUT(0x10081A7E4);
}

void sub_10081A728()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + v2) = v0;
  JUMPOUT(0x10081A7E4);
}

uint64_t sub_10081A730@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;

  *(_WORD *)(v11 + v14) = 0;
  if (!(_DWORD)v10)
    JUMPOUT(0x10081A7E4);
  if (v16 == v7)
  {
    if (v13 < 0xFE)
      JUMPOUT(0x10081A73CLL);
    v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
    v4 = v11;
    v5 = v10;
    a1 = v13;
    a2 = v12;
  }
  else
  {
    v4 = (v8 + v11) & v9;
    if ((_DWORD)a1 != v7)
      JUMPOUT(0x10081A758);
    v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 56);
    v5 = v10;
  }
  return v3(v4, v5, a1, a2);
}

void sub_10081A7CC()
{
  char v0;
  _BYTE *v1;

  *v1 = v0;
  JUMPOUT(0x10081A7E4);
}

void sub_10081A800()
{
  int v0;
  uint64_t v1;

  *(_WORD *)v1 = v0;
  *(_BYTE *)(v1 + 2) = BYTE2(v0);
  JUMPOUT(0x10081A7E4);
}

void sub_10081A810()
{
  __int16 v0;
  _WORD *v1;

  *v1 = v0;
  JUMPOUT(0x10081A7E4);
}

void sub_10081A818()
{
  int v0;
  _DWORD *v1;

  *v1 = v0;
  JUMPOUT(0x10081A7E4);
}

uint64_t sub_10081A824(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t WitnessTable;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t OpaqueTypeMetadata2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = type metadata accessor for PlaybackSelection(255, *a1, a1[1], a4);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for PlaybackSelection<A>, v4);
  v6 = type metadata accessor for _ViewModifier_Content(255, v4, WitnessTable);
  v7 = sub_100044B54(&qword_1011BDA20);
  v8 = type metadata accessor for ModifiedContent(255, v6, v7);
  v18 = swift_getWitnessTable(&protocol conformance descriptor for _ViewModifier_Content<A>, v6);
  v19 = sub_100049F28(&qword_1011BDA18, &qword_1011BDA20, (uint64_t)&protocol conformance descriptor for _ContentShapeModifier<A>);
  v9 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v8);
  v16 = v8;
  v17 = v9;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v16, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 0);
  v16 = v8;
  v17 = v9;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v16, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v16 = OpaqueTypeMetadata2;
  v17 = OpaqueTypeConformance2;
  v12 = swift_getOpaqueTypeMetadata2(255, &v16, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 0);
  v13 = type metadata accessor for AccessibilityAttachmentModifier(255);
  v14 = type metadata accessor for ModifiedContent(255, v12, v13);
  v16 = OpaqueTypeMetadata2;
  v17 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2(&v16, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v14);
}

uint64_t sub_10081A9C0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  v5 = type metadata accessor for PlaybackSelection(255, a1[1], a1[3], a4);
  v6 = type metadata accessor for ModifiedContent(255, v4, v5);
  swift_getWitnessTable(&protocol conformance descriptor for PlaybackSelection<A>, v5);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
}

uint64_t sub_10081AA38(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  v5 = type metadata accessor for PlaybackSelection(255, a1[1], a1[3], a4);
  v6 = type metadata accessor for ModifiedContent(255, v4, v5);
  v7 = type metadata accessor for _ConditionalContent(255, v6, v4);
  swift_getWitnessTable(&protocol conformance descriptor for PlaybackSelection<A>, v5);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
  return swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v7);
}

uint64_t sub_10081AAE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t WitnessTable;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t OpaqueTypeConformance2;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  void (*v47)(char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char v57[16];
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  v55 = a1;
  v56 = a3;
  WitnessTable = swift_getWitnessTable(&unk_100ED1EB8, a2);
  v51 = type metadata accessor for _ViewModifier_Content(255, a2, WitnessTable);
  v50 = sub_100044B54(qword_1011C81B8);
  v5 = *(_QWORD *)(a2 + 24);
  v53 = *(_QWORD *)(a2 + 16);
  v52 = v5;
  v7 = type metadata accessor for PlaybackButton(255, v53, v5, v6);
  v8 = type metadata accessor for BorderedButtonStyle(255);
  v9 = swift_getWitnessTable(&protocol conformance descriptor for PlaybackButton<A>, v7);
  v10 = sub_100048748((unint64_t *)&qword_1011A0D08, (uint64_t (*)(uint64_t))&type metadata accessor for BorderedButtonStyle, (uint64_t)&protocol conformance descriptor for BorderedButtonStyle);
  v66 = v7;
  v67 = (void *)v8;
  v68 = v9;
  v69 = v10;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v66, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 0);
  v12 = sub_100044B54(&qword_1011A0610);
  v13 = type metadata accessor for ModifiedContent(255, OpaqueTypeMetadata2, v12);
  v14 = sub_100044B54(&qword_1011A0618);
  v15 = type metadata accessor for ModifiedContent(255, v13, v14);
  v16 = type metadata accessor for IconOnlyLabelStyle(255);
  v66 = v7;
  v67 = (void *)v8;
  v68 = v9;
  v69 = v10;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v66, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
  v18 = sub_100049F28(&qword_1011A0D50, &qword_1011A0610, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  v73 = OpaqueTypeConformance2;
  v74 = v18;
  v19 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v13);
  v20 = sub_100049F28(&qword_1011A0D58, &qword_1011A0618, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  v71 = v19;
  v72 = v20;
  v21 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v15);
  v22 = sub_100048748(&qword_1011A2AA8, (uint64_t (*)(uint64_t))&type metadata accessor for IconOnlyLabelStyle, (uint64_t)&protocol conformance descriptor for IconOnlyLabelStyle);
  v66 = v15;
  v67 = (void *)v16;
  v68 = v21;
  v69 = v22;
  v23 = swift_getOpaqueTypeMetadata2(255, &v66, &opaque type descriptor for <<opaque return type of View.labelStyle<A>(_:)>>, 0);
  v24 = type metadata accessor for AccessibilityAttachmentModifier(255);
  v25 = type metadata accessor for ModifiedContent(255, v23, v24);
  v26 = sub_100044B54((uint64_t *)&unk_1011B44F8);
  v27 = type metadata accessor for ModifiedContent(255, v25, v26);
  v28 = sub_100049F28(&qword_1011CB138, qword_1011C81B8, (uint64_t)&protocol conformance descriptor for [A]);
  v66 = v50;
  v67 = &type metadata for Int;
  v68 = v27;
  v69 = v28;
  v70 = &protocol witness table for Int;
  v29 = type metadata accessor for ForEach(255, &v66);
  v66 = v15;
  v67 = (void *)v16;
  v68 = v21;
  v69 = v22;
  v64 = swift_getOpaqueTypeConformance2(&v66, &opaque type descriptor for <<opaque return type of View.labelStyle<A>(_:)>>, 1);
  v65 = sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
  v62 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v25);
  v63 = sub_100049F28(&qword_1011B44F0, (uint64_t *)&unk_1011B44F8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyTransformModifier<A>);
  v61 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v27);
  v30 = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v29);
  v31 = type metadata accessor for ToolbarItemGroup(255, v29, v30);
  v32 = swift_getWitnessTable(&protocol conformance descriptor for ToolbarItemGroup<A>, v31);
  v66 = v31;
  v67 = (void *)v32;
  v33 = swift_getOpaqueTypeMetadata2(255, &v66, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 0);
  v34 = v51;
  v35 = swift_getWitnessTable(&protocol conformance descriptor for _ViewModifier_Content<A>, v51);
  v66 = v31;
  v67 = (void *)v32;
  v36 = swift_getOpaqueTypeConformance2(&v66, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
  v66 = v51;
  v67 = (void *)v33;
  v68 = v35;
  v69 = v36;
  v37 = swift_getOpaqueTypeMetadata2(0, &v66, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 0);
  v38 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v40 = (char *)&v49 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41);
  v43 = (char *)&v49 - v42;
  v58 = v53;
  v59 = v52;
  v60 = v54;
  v44 = swift_checkMetadataState(0, v34);
  v45 = swift_checkMetadataState(0, v33);
  View.toolbar<A>(content:)(sub_10081E4F4, v57, v44, v45, v35, v36);
  v46 = *(void (**)(char *, char *, uint64_t))(v38 + 16);
  v46(v43, v40, v37);
  v47 = *(void (**)(char *, uint64_t))(v38 + 8);
  v47(v40, v37);
  v46(v56, v43, v37);
  return ((uint64_t (*)(char *, uint64_t))v47)(v43, v37);
}

uint64_t sub_10081AFD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t WitnessTable;
  uint64_t v11;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t OpaqueTypeConformance2;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60[16];
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v54 = a3;
  v53 = a2;
  v58 = a1;
  v59 = a4;
  v57 = type metadata accessor for ToolbarItemPlacement(0);
  v56 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v55 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_100044B54(qword_1011C81B8);
  v8 = type metadata accessor for PlaybackButton(255, a2, a3, v7);
  v9 = type metadata accessor for BorderedButtonStyle(255);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for PlaybackButton<A>, v8);
  v11 = sub_100048748((unint64_t *)&qword_1011A0D08, (uint64_t (*)(uint64_t))&type metadata accessor for BorderedButtonStyle, (uint64_t)&protocol conformance descriptor for BorderedButtonStyle);
  v69 = v8;
  v70 = (void *)v9;
  v71 = WitnessTable;
  v72 = v11;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v69, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 0);
  v13 = sub_100044B54(&qword_1011A0610);
  v14 = type metadata accessor for ModifiedContent(255, OpaqueTypeMetadata2, v13);
  v15 = sub_100044B54(&qword_1011A0618);
  v16 = type metadata accessor for ModifiedContent(255, v14, v15);
  v17 = type metadata accessor for IconOnlyLabelStyle(255);
  v69 = v8;
  v70 = (void *)v9;
  v71 = WitnessTable;
  v72 = v11;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v69, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
  v19 = sub_100049F28(&qword_1011A0D50, &qword_1011A0610, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  v76 = OpaqueTypeConformance2;
  v77 = v19;
  v20 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v14);
  v21 = sub_100049F28(&qword_1011A0D58, &qword_1011A0618, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  v74 = v20;
  v75 = v21;
  v22 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v16);
  v23 = sub_100048748(&qword_1011A2AA8, (uint64_t (*)(uint64_t))&type metadata accessor for IconOnlyLabelStyle, (uint64_t)&protocol conformance descriptor for IconOnlyLabelStyle);
  v69 = v16;
  v70 = (void *)v17;
  v71 = v22;
  v72 = v23;
  v24 = swift_getOpaqueTypeMetadata2(255, &v69, &opaque type descriptor for <<opaque return type of View.labelStyle<A>(_:)>>, 0);
  v25 = type metadata accessor for AccessibilityAttachmentModifier(255);
  v26 = type metadata accessor for ModifiedContent(255, v24, v25);
  v27 = sub_100044B54((uint64_t *)&unk_1011B44F8);
  v28 = type metadata accessor for ModifiedContent(255, v26, v27);
  v29 = sub_100049F28(&qword_1011CB138, qword_1011C81B8, (uint64_t)&protocol conformance descriptor for [A]);
  v69 = v52;
  v70 = &type metadata for Int;
  v71 = v28;
  v72 = v29;
  v73 = &protocol witness table for Int;
  v30 = type metadata accessor for ForEach(255, &v69);
  v69 = v16;
  v70 = (void *)v17;
  v71 = v22;
  v72 = v23;
  v31 = swift_getOpaqueTypeConformance2(&v69, &opaque type descriptor for <<opaque return type of View.labelStyle<A>(_:)>>, 1);
  v32 = sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
  v67 = v31;
  v68 = v32;
  v33 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v26);
  v34 = sub_100049F28(&qword_1011B44F0, (uint64_t *)&unk_1011B44F8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyTransformModifier<A>);
  v65 = v33;
  v66 = v34;
  v64 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v28);
  v35 = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v30);
  v36 = type metadata accessor for ToolbarItemGroup(0, v30, v35);
  v37 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v39 = (char *)&v52 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v40);
  v42 = (char *)&v52 - v41;
  v43 = v53;
  v44 = v54;
  v46 = type metadata accessor for PlaybackToolbar(0, v53, v54, v45);
  v47 = v58;
  v48 = v55;
  (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v55, v58 + *(int *)(v46 + 36), v57);
  v61 = v43;
  v62 = v44;
  v63 = v47;
  ToolbarItemGroup.init(placement:content:)(v48, sub_10081E500, v60, v30, v35);
  v49 = swift_getWitnessTable(&protocol conformance descriptor for ToolbarItemGroup<A>, v36);
  sub_1000EA744((uint64_t)v39, v36, (uint64_t)v42);
  v50 = *(void (**)(char *, uint64_t))(v37 + 8);
  v50(v39, v36);
  static ToolbarContentBuilder.buildBlock<A>(_:)(v42, v36, v49);
  return ((uint64_t (*)(char *, uint64_t))v50)(v42, v36);
}

uint64_t sub_10081B484@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t WitnessTable;
  uint64_t v13;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t OpaqueTypeConformance2;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  __n128 v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  void (*v61)(char *, char *, uint64_t);
  void (*v62)(char *, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;

  v64 = a1;
  v79 = a5;
  v72 = a2;
  v71 = a3;
  v7 = type metadata accessor for PlaybackToolbar(0, a2, a3, a4);
  v77 = *(_QWORD *)(v7 - 8);
  v78 = v7;
  v75 = *(_QWORD *)(v77 + 64);
  __chkstk_darwin(v7);
  v76 = (char *)&v64 - v8;
  v80 = sub_100044B54(qword_1011C81B8);
  v10 = type metadata accessor for PlaybackButton(255, a2, a3, v9);
  v11 = type metadata accessor for BorderedButtonStyle(255);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for PlaybackButton<A>, v10);
  v13 = sub_100048748((unint64_t *)&qword_1011A0D08, (uint64_t (*)(uint64_t))&type metadata accessor for BorderedButtonStyle, (uint64_t)&protocol conformance descriptor for BorderedButtonStyle);
  v87 = (_QWORD *)v10;
  v88 = (void *)v11;
  v89 = WitnessTable;
  v90 = v13;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v87, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 0);
  v15 = sub_100044B54(&qword_1011A0610);
  v16 = type metadata accessor for ModifiedContent(255, OpaqueTypeMetadata2, v15);
  v17 = sub_100044B54(&qword_1011A0618);
  v18 = type metadata accessor for ModifiedContent(255, v16, v17);
  v19 = type metadata accessor for IconOnlyLabelStyle(255);
  v87 = (_QWORD *)v10;
  v88 = (void *)v11;
  v89 = WitnessTable;
  v90 = v13;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v87, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
  v21 = sub_100049F28(&qword_1011A0D50, &qword_1011A0610, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  v94 = OpaqueTypeConformance2;
  v95 = v21;
  v22 = v16;
  v23 = v64;
  v24 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v22);
  v25 = sub_100049F28(&qword_1011A0D58, &qword_1011A0618, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  v92 = v24;
  v93 = v25;
  v26 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v18);
  v27 = sub_100048748(&qword_1011A2AA8, (uint64_t (*)(uint64_t))&type metadata accessor for IconOnlyLabelStyle, (uint64_t)&protocol conformance descriptor for IconOnlyLabelStyle);
  v74 = v18;
  v87 = (_QWORD *)v18;
  v88 = (void *)v19;
  v73 = (void *)v19;
  v67 = v26;
  v89 = v26;
  v90 = v27;
  v65 = v27;
  v28 = swift_getOpaqueTypeMetadata2(255, &v87, &opaque type descriptor for <<opaque return type of View.labelStyle<A>(_:)>>, 0);
  v29 = type metadata accessor for AccessibilityAttachmentModifier(255);
  v30 = type metadata accessor for ModifiedContent(255, v28, v29);
  v31 = sub_100044B54((uint64_t *)&unk_1011B44F8);
  v66 = v30;
  v32 = type metadata accessor for ModifiedContent(255, v30, v31);
  v33 = sub_100049F28(&qword_1011CB138, qword_1011C81B8, (uint64_t)&protocol conformance descriptor for [A]);
  v87 = (_QWORD *)v80;
  v88 = &type metadata for Int;
  v70 = v32;
  v89 = v32;
  v90 = v33;
  v68 = v33;
  v91 = &protocol witness table for Int;
  v34 = type metadata accessor for ForEach(0, &v87);
  v69 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v36 = (char *)&v64 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __chkstk_darwin(v37);
  v40 = (char *)&v64 - v39;
  v41 = v71;
  v42 = v72;
  (*(void (**)(__n128))(v71 + 24))(v38);
  v43 = swift_bridgeObjectRetain();
  v44 = sub_100482648(v43);
  swift_bridgeObjectRelease();
  v87 = v44;
  sub_10081C18C((uint64_t *)&v87);
  v45 = swift_bridgeObjectRelease();
  v86 = (uint64_t)v87;
  v46 = v76;
  v47 = v77;
  v48 = v23;
  v49 = v78;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v77 + 16))(v76, v48, v78, v45);
  v50 = *(unsigned __int8 *)(v47 + 80);
  v51 = (v50 + 32) & ~v50;
  v52 = swift_allocObject(&unk_1010DDEE8, v51 + v75, v50 | 7);
  *(_QWORD *)(v52 + 16) = v42;
  *(_QWORD *)(v52 + 24) = v41;
  (*(void (**)(uint64_t, char *, uint64_t))(v47 + 32))(v52 + v51, v46, v49);
  v87 = (_QWORD *)v74;
  v88 = v73;
  v89 = v67;
  v90 = v65;
  v53 = swift_getOpaqueTypeConformance2(&v87, &opaque type descriptor for <<opaque return type of View.labelStyle<A>(_:)>>, 1);
  v54 = sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
  v84 = v53;
  v85 = v54;
  v55 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v66);
  v56 = sub_100049F28(&qword_1011B44F0, (uint64_t *)&unk_1011B44F8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyTransformModifier<A>);
  v82 = v55;
  v83 = v56;
  v57 = v70;
  v58 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v70);
  v59 = sub_10081E6F0();
  ForEach<>.init(_:content:)(&v86, sub_10081E688, v52, v80, &type metadata for Int, v57, v68, v58, v59);
  v81 = v58;
  swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v34);
  v60 = v69;
  v61 = *(void (**)(char *, char *, uint64_t))(v69 + 16);
  v61(v40, v36, v34);
  v62 = *(void (**)(char *, uint64_t))(v60 + 8);
  v62(v36, v34);
  v61(v79, v40, v34);
  return ((uint64_t (*)(char *, uint64_t))v62)(v40, v34);
}

uint64_t sub_10081BA10@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t WitnessTable;
  uint64_t v18;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t OpaqueTypeConformance2;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  __n128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, char *, uint64_t);
  char *v72;
  void (*v73)(char *, uint64_t);
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;

  v103 = a3;
  v104 = a4;
  v105 = a2;
  v97 = a1;
  v101 = a5;
  v102 = type metadata accessor for IconOnlyLabelStyle(0);
  v100 = *(_QWORD *)(v102 - 8);
  __chkstk_darwin(v102);
  v99 = (char *)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for BorderedButtonStyle(0);
  v98 = *(_QWORD *)(v8 - 8);
  v9 = v8;
  __chkstk_darwin(v8);
  v96 = (char *)&v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = type metadata accessor for SourcedPlaybackIntent(255, a3, a4, v11);
  v94 = type metadata accessor for Optional(0, v92);
  v93 = *(_QWORD *)(v94 - 8);
  __chkstk_darwin(v94);
  v13 = (char *)&v75 - v12;
  v15 = type metadata accessor for PlaybackButton(0, a3, a4, v14);
  v95 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v89 = (uint64_t)&v75 - v16;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for PlaybackButton<A>, v15);
  v18 = sub_100048748((unint64_t *)&qword_1011A0D08, (uint64_t (*)(uint64_t))&type metadata accessor for BorderedButtonStyle, (uint64_t)&protocol conformance descriptor for BorderedButtonStyle);
  v114 = v15;
  v115 = v9;
  v79 = v9;
  v116 = WitnessTable;
  v117 = v18;
  v81 = WitnessTable;
  v80 = v18;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v114, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 0);
  v20 = sub_100044B54(&qword_1011A0610);
  v21 = type metadata accessor for ModifiedContent(255, OpaqueTypeMetadata2, v20);
  v22 = sub_100044B54(&qword_1011A0618);
  v23 = type metadata accessor for ModifiedContent(0, v21, v22);
  v91 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v78 = (uint64_t)&v75 - v24;
  v114 = v15;
  v115 = v9;
  v116 = WitnessTable;
  v117 = v18;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v114, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
  v26 = sub_100049F28(&qword_1011A0D50, &qword_1011A0610, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  v112 = OpaqueTypeConformance2;
  v113 = v26;
  v27 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v21);
  v28 = sub_100049F28(&qword_1011A0D58, &qword_1011A0618, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  v110 = v27;
  v111 = v28;
  v29 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v23);
  v77 = v29;
  v30 = sub_100048748(&qword_1011A2AA8, (uint64_t (*)(uint64_t))&type metadata accessor for IconOnlyLabelStyle, (uint64_t)&protocol conformance descriptor for IconOnlyLabelStyle);
  v114 = v23;
  v115 = v102;
  v116 = v29;
  v117 = v30;
  v31 = swift_getOpaqueTypeMetadata2(0, &v114, &opaque type descriptor for <<opaque return type of View.labelStyle<A>(_:)>>, 0);
  v83 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v76 = (char *)&v75 - v32;
  v33 = type metadata accessor for AccessibilityAttachmentModifier(255);
  v84 = v31;
  v34 = type metadata accessor for ModifiedContent(0, v31, v33);
  v87 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v85 = (char *)&v75 - v35;
  v36 = sub_100044B54((uint64_t *)&unk_1011B44F8);
  v82 = v34;
  v37 = type metadata accessor for ModifiedContent(0, v34, v36);
  v90 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v86 = (char *)&v75 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  v88 = (char *)&v75 - v40;
  LOBYTE(v21) = *v97;
  v41 = v92;
  SourcedPlaybackIntent.withPlaybackMode(_:)(*v97, v92, (uint64_t)v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v13, 0, 1, v41);
  v42 = v89;
  static PlaybackButton.withPlaybackMode<A>(_:intent:onPerform:)(v21, (uint64_t)v13, 0, 0, v103, v104, v89);
  v43 = (*(uint64_t (**)(char *, uint64_t))(v93 + 8))(v13, v94);
  v44 = (uint64_t)v96;
  BorderedButtonStyle.init()(v43);
  v45 = v78;
  v46 = v79;
  sub_10058DD18(v44, 2, v15, v79, v81, v80, v78);
  v47 = v44;
  v48 = v77;
  (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v47, v46);
  v49 = v42;
  v50 = v76;
  v51 = v15;
  v52 = v102;
  v53 = (*(uint64_t (**)(uint64_t, uint64_t))(v95 + 8))(v49, v51);
  v54 = v99;
  IconOnlyLabelStyle.init()(v53);
  View.labelStyle<A>(_:)(v54, v23, v52, v48, v30);
  (*(void (**)(char *, uint64_t))(v100 + 8))(v54, v52);
  (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v45, v23);
  if ((v21 & 1) != 0)
    v55 = AccessibilityIdentifier.shuffleIntentButton.unsafeMutableAddressor();
  else
    v55 = AccessibilityIdentifier.playIntentButton.unsafeMutableAddressor();
  v56 = *v55;
  v57 = v55[1];
  swift_bridgeObjectRetain();
  v114 = v23;
  v115 = v52;
  v116 = v48;
  v117 = v30;
  v58 = swift_getOpaqueTypeConformance2(&v114, &opaque type descriptor for <<opaque return type of View.labelStyle<A>(_:)>>, 1);
  v59 = v85;
  v60 = v84;
  View.accessibilityIdentifier(_:)(v56, v57, v84, v58);
  v61 = swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, __n128))(v83 + 8))(v50, v60, v61);
  v63 = type metadata accessor for PlaybackToolbar(0, v103, v104, v62);
  v64 = *(unsigned __int8 *)(v105 + *(int *)(v63 + 40));
  v65 = sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
  v108 = v58;
  v109 = v65;
  v66 = v82;
  v67 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v82);
  v68 = v86;
  View.disabled(_:)(v64, v66, v67);
  (*(void (**)(char *, uint64_t))(v87 + 8))(v59, v66);
  v69 = sub_100049F28(&qword_1011B44F0, (uint64_t *)&unk_1011B44F8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyTransformModifier<A>);
  v106 = v67;
  v107 = v69;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v37);
  v70 = v90;
  v71 = *(void (**)(char *, char *, uint64_t))(v90 + 16);
  v72 = v88;
  v71(v88, v68, v37);
  v73 = *(void (**)(char *, uint64_t))(v70 + 8);
  v73(v68, v37);
  v71(v101, v72, v37);
  return ((uint64_t (*)(char *, uint64_t))v73)(v72, v37);
}

void sub_10081C18C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v2 = sub_1008A7D08(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v4[0] = v2 + 32;
  v4[1] = v3;
  sub_10081C1F4(v4);
  *a1 = v2;
}

void sub_10081C1F4(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  Swift::Int v3;
  Swift::Int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  Swift::Int v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  Swift::Int v13;
  int v14;
  int v15;
  int v16;
  Swift::Int v17;
  Swift::Int v18;
  char v19;
  Swift::Int v20;
  unsigned __int8 *v21;
  unsigned __int8 v22;
  Swift::Int v23;
  unsigned __int8 *v24;
  unint64_t v25;
  unint64_t v26;
  char *v27;
  char *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  unint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  BOOL v50;
  uint64_t v51;
  char v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  unint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t i;
  unsigned __int8 v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  unint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  _QWORD *v91;
  Swift::Int v92;
  Swift::Int v93;
  uint64_t v94;
  _BYTE *__dst;

  v2 = a1;
  v3 = a1[1];
  v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if (v3 < 0)
      goto LABEL_136;
    if ((unint64_t)v3 >= 2)
    {
      v76 = 0;
      v77 = *v2;
      for (i = 1; i != v3; ++i)
      {
        v79 = *(_BYTE *)(v77 + i);
        v80 = v76;
        do
        {
          if ((*(_BYTE *)(v77 + v80) & (v79 ^ 1)) != 1)
            break;
          if (!v77)
            goto LABEL_140;
          *(_BYTE *)(v77 + v80 + 1) = *(_BYTE *)(v77 + v80);
          *(_BYTE *)(v77 + v80--) = v79;
        }
        while (v80 != -1);
        ++v76;
      }
    }
    return;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_145;
  v92 = v4;
  v93 = v3;
  if (v3 < 2)
  {
    v8 = _swiftEmptyArrayStorage;
    __dst = &_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      v12 = _swiftEmptyArrayStorage[2];
      v11 = (char *)_swiftEmptyArrayStorage;
LABEL_102:
      v91 = v8;
      if (v12 >= 2)
      {
        v81 = *v2;
        do
        {
          v82 = v12 - 2;
          if (v12 < 2)
            goto LABEL_131;
          if (!v81)
            goto LABEL_144;
          v83 = v11;
          v84 = v11 + 32;
          v85 = *(_QWORD *)&v11[16 * v82 + 32];
          v86 = *(_QWORD *)&v11[16 * v12 + 24];
          sub_10081C888((_BYTE *)(v81 + v85), (_BYTE *)(v81 + *(_QWORD *)&v84[16 * v12 - 16]), v81 + v86, __dst);
          if (v1)
            break;
          if (v86 < v85)
            goto LABEL_132;
          if ((swift_isUniquelyReferenced_nonNull_native(v83) & 1) == 0)
            v83 = sub_1008A77EC((uint64_t)v83);
          if (v82 >= *((_QWORD *)v83 + 2))
            goto LABEL_133;
          v87 = &v83[16 * v82 + 32];
          *(_QWORD *)v87 = v85;
          *((_QWORD *)v87 + 1) = v86;
          v88 = *((_QWORD *)v83 + 2);
          if (v12 > v88)
            goto LABEL_134;
          memmove(&v83[16 * v12 + 16], &v83[16 * v12 + 32], 16 * (v88 - v12));
          v11 = v83;
          *((_QWORD *)v83 + 2) = v88 - 1;
          v12 = v88 - 1;
        }
        while (v88 > 2);
      }
LABEL_113:
      swift_bridgeObjectRelease();
      v91[2] = 0;
      swift_bridgeObjectRelease();
      return;
    }
    v91 = _swiftEmptyArrayStorage;
  }
  else
  {
    v6 = v5 >> 1;
    v7 = static Array._allocateBufferUninitialized(minimumCapacity:)(v5 >> 1, &type metadata for PlaybackMode);
    *(_QWORD *)(v7 + 16) = v6;
    v3 = v93;
    v91 = (_QWORD *)v7;
    __dst = (_BYTE *)(v7 + 32);
  }
  v9 = 0;
  v10 = *v2;
  v89 = v2;
  v90 = *v2 - 1;
  v11 = (char *)_swiftEmptyArrayStorage;
  v94 = *v2;
  while (1)
  {
    v13 = v9++;
    if (v9 < v3)
    {
      v14 = *(unsigned __int8 *)(v10 + v9);
      v15 = *(unsigned __int8 *)(v10 + v13) & (v14 ^ 1);
      v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        while (1)
        {
          v16 = *(unsigned __int8 *)(v10 + v9);
          if (v15 != (v14 & (v16 ^ 1)))
            break;
          ++v9;
          v14 = v16;
          if (v3 == v9)
          {
            v9 = v3;
            break;
          }
        }
      }
      if (v15)
      {
        if (v9 < v13)
          goto LABEL_137;
        if (v13 < v9)
        {
          v17 = v9 - 1;
          v18 = v13;
          do
          {
            if (v18 != v17)
            {
              if (!v10)
                goto LABEL_143;
              v19 = *(_BYTE *)(v10 + v18);
              *(_BYTE *)(v10 + v18) = *(_BYTE *)(v10 + v17);
              *(_BYTE *)(v10 + v17) = v19;
            }
            v57 = ++v18 < v17--;
          }
          while (v57);
        }
      }
    }
    if (v9 >= v3)
      goto LABEL_46;
    if (__OFSUB__(v9, v13))
      goto LABEL_135;
    if (v9 - v13 >= v92)
      goto LABEL_46;
    v20 = v13 + v92;
    if (__OFADD__(v13, v92))
      goto LABEL_138;
    if (v20 >= v3)
      v20 = v3;
    if (v20 < v13)
      break;
    if (v9 != v20)
    {
      v21 = (unsigned __int8 *)(v90 + v9);
      do
      {
        v22 = *(_BYTE *)(v10 + v9);
        v23 = v13;
        v24 = v21;
        do
        {
          if ((*v24 & (v22 ^ 1)) != 1)
            break;
          if (!v10)
            goto LABEL_141;
          v24[1] = *v24;
          *v24-- = v22;
          ++v23;
        }
        while (v9 != v23);
        ++v9;
        ++v21;
      }
      while (v9 != v20);
      v9 = v20;
    }
LABEL_46:
    if (v9 < v13)
      goto LABEL_130;
    if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
      v11 = sub_1008A71C4(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v26 = *((_QWORD *)v11 + 2);
    v25 = *((_QWORD *)v11 + 3);
    v12 = v26 + 1;
    v10 = v94;
    if (v26 >= v25 >> 1)
    {
      v75 = sub_1008A71C4((char *)(v25 > 1), v26 + 1, 1, v11);
      v10 = v94;
      v11 = v75;
    }
    *((_QWORD *)v11 + 2) = v12;
    v27 = v11 + 32;
    v28 = &v11[16 * v26 + 32];
    *(_QWORD *)v28 = v13;
    *((_QWORD *)v28 + 1) = v9;
    if (v26)
    {
      while (1)
      {
        v29 = v12 - 1;
        if (v12 >= 4)
        {
          v34 = &v27[16 * v12];
          v35 = *((_QWORD *)v34 - 8);
          v36 = *((_QWORD *)v34 - 7);
          v40 = __OFSUB__(v36, v35);
          v37 = v36 - v35;
          if (v40)
            goto LABEL_119;
          v39 = *((_QWORD *)v34 - 6);
          v38 = *((_QWORD *)v34 - 5);
          v40 = __OFSUB__(v38, v39);
          v32 = v38 - v39;
          v33 = v40;
          if (v40)
            goto LABEL_120;
          v41 = v12 - 2;
          v42 = &v27[16 * v12 - 32];
          v44 = *(_QWORD *)v42;
          v43 = *((_QWORD *)v42 + 1);
          v40 = __OFSUB__(v43, v44);
          v45 = v43 - v44;
          if (v40)
            goto LABEL_122;
          v40 = __OFADD__(v32, v45);
          v46 = v32 + v45;
          if (v40)
            goto LABEL_125;
          if (v46 >= v37)
          {
            v64 = &v27[16 * v29];
            v66 = *(_QWORD *)v64;
            v65 = *((_QWORD *)v64 + 1);
            v40 = __OFSUB__(v65, v66);
            v67 = v65 - v66;
            if (v40)
              goto LABEL_129;
            v57 = v32 < v67;
            goto LABEL_83;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v58 = *((_QWORD *)v11 + 4);
            v59 = *((_QWORD *)v11 + 5);
            v40 = __OFSUB__(v59, v58);
            v51 = v59 - v58;
            v52 = v40;
            goto LABEL_77;
          }
          v31 = *((_QWORD *)v11 + 4);
          v30 = *((_QWORD *)v11 + 5);
          v40 = __OFSUB__(v30, v31);
          v32 = v30 - v31;
          v33 = v40;
        }
        if ((v33 & 1) != 0)
          goto LABEL_121;
        v41 = v12 - 2;
        v47 = &v27[16 * v12 - 32];
        v49 = *(_QWORD *)v47;
        v48 = *((_QWORD *)v47 + 1);
        v50 = __OFSUB__(v48, v49);
        v51 = v48 - v49;
        v52 = v50;
        if (v50)
          goto LABEL_124;
        v53 = &v27[16 * v29];
        v55 = *(_QWORD *)v53;
        v54 = *((_QWORD *)v53 + 1);
        v40 = __OFSUB__(v54, v55);
        v56 = v54 - v55;
        if (v40)
          goto LABEL_127;
        if (__OFADD__(v51, v56))
          goto LABEL_128;
        if (v51 + v56 >= v32)
        {
          v57 = v32 < v56;
LABEL_83:
          if (v57)
            v29 = v41;
          goto LABEL_85;
        }
LABEL_77:
        if ((v52 & 1) != 0)
          goto LABEL_123;
        v60 = &v27[16 * v29];
        v62 = *(_QWORD *)v60;
        v61 = *((_QWORD *)v60 + 1);
        v40 = __OFSUB__(v61, v62);
        v63 = v61 - v62;
        if (v40)
          goto LABEL_126;
        if (v63 < v51)
          goto LABEL_15;
LABEL_85:
        v68 = v29 - 1;
        if (v29 - 1 >= v12)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v10)
          goto LABEL_142;
        v69 = &v27[16 * v68];
        v70 = *(_QWORD *)v69;
        v71 = v27;
        v72 = &v27[16 * v29];
        v73 = *((_QWORD *)v72 + 1);
        sub_10081C888((_BYTE *)(v10 + *(_QWORD *)v69), (_BYTE *)(v10 + *(_QWORD *)v72), v10 + v73, __dst);
        if (v1)
          goto LABEL_113;
        if (v73 < v70)
          goto LABEL_116;
        if (v29 > *((_QWORD *)v11 + 2))
          goto LABEL_117;
        *(_QWORD *)v69 = v70;
        *(_QWORD *)&v71[16 * v68 + 8] = v73;
        v74 = *((_QWORD *)v11 + 2);
        if (v29 >= v74)
          goto LABEL_118;
        v12 = v74 - 1;
        memmove(v72, v72 + 16, 16 * (v74 - 1 - v29));
        v27 = v71;
        *((_QWORD *)v11 + 2) = v74 - 1;
        v10 = v94;
        if (v74 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v93;
    if (v9 >= v93)
    {
      v8 = v91;
      v2 = v89;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

uint64_t sub_10081C888(_BYTE *__src, _BYTE *a2, unint64_t a3, _BYTE *__dst)
{
  _BYTE *v4;
  _BYTE *v6;
  _BYTE *v7;
  size_t v8;
  unint64_t v9;
  _BYTE *v10;
  _BYTE *v12;
  _BYTE *v13;
  _BYTE *v14;
  _BYTE *v15;
  _BYTE *v17;
  uint64_t result;
  char v19;
  _BYTE *v20;
  _BYTE *v21;
  _BYTE *v22;

  v22 = __src;
  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a3 - (_QWORD)a2;
  v21 = __dst;
  if (a2 - __src >= (uint64_t)(a3 - (_QWORD)a2))
  {
    if ((v9 & 0x8000000000000000) == 0)
    {
      if (__dst != a2 || a3 <= (unint64_t)__dst)
        memmove(__dst, a2, a3 - (_QWORD)a2);
      v13 = &v4[v9];
      v20 = &v4[v9];
      v22 = v6;
      if (v7 < v6 && (_BYTE *)a3 != v6)
      {
        v14 = (_BYTE *)(a3 - 1);
        while (1)
        {
          v15 = v14 + 1;
          if (*(v6 - 1) == 1 && *(v13 - 1) == 0)
          {
            v17 = v6 - 1;
            if (v15 != v6 || v14 >= v6)
              *v14 = *v17;
            v22 = v6 - 1;
            if (v17 <= v7)
              goto LABEL_44;
          }
          else
          {
            v20 = v13 - 1;
            if (v15 < v13 || v14 >= v13 || v15 != v13)
              *v14 = *(v13 - 1);
            v17 = v6;
            --v13;
            if (v6 <= v7)
              goto LABEL_44;
          }
          --v14;
          v6 = v17;
          if (v13 <= v4)
            goto LABEL_44;
        }
      }
      goto LABEL_44;
    }
  }
  else if ((v8 & 0x8000000000000000) == 0)
  {
    if (__dst != __src || a2 <= __dst)
      memmove(__dst, __src, v8);
    v10 = &v4[v8];
    v20 = &v4[v8];
    if (v6 != v7 && (unint64_t)v6 < a3)
    {
      do
      {
        if (*v4 == 1 && *v6 == 0)
        {
          v12 = v6 + 1;
          if (v7 < v6 || v7 >= v12 || v7 != v6)
            *v7 = *v6;
        }
        else
        {
          if (v7 != v4)
            *v7 = *v4;
          v21 = ++v4;
          v12 = v6;
        }
        ++v7;
        if (v4 >= v10)
          break;
        v6 = v12;
      }
      while ((unint64_t)v12 < a3);
      v22 = v7;
    }
LABEL_44:
    sub_1008A7740(&v22, &v21, &v20);
    return 1;
  }
  v19 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v19, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_10081CADC()
{
  return 16;
}

__n128 sub_10081CAE8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_10081CAF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t AssociatedTypeWitness;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = (int *)type metadata accessor for PlaybackSelection(0, v5, v6, a4);
  v8 = *((_QWORD *)v7 - 1);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v8 + 64);
  v11 = v4 + v9;
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4 + v9, v5);
  v13 = v4 + v9 + *(int *)(type metadata accessor for SourcedPlaybackIntent(0, v5, v6, v12) + 36);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v6, v5, &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable);
  v17 = type metadata accessor for PlaybackEnqueueMode(0, AssociatedTypeWitness, v15, v16);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v13, v17);
  v19 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if (EnumCaseMultiPayload == 1
    || !(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v19 + 48))(v13, 1, AssociatedTypeWitness))
  {
    (*(void (**)(unint64_t, uint64_t))(v19 + 8))(v13, AssociatedTypeWitness);
  }
  v20 = v11 + v7[9];
  v21 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
  if (*(_QWORD *)(v11 + v7[10]))
    swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1000A4224(*(id *)(v11 + v7[14]), *(_BYTE *)(v11 + v7[14] + 8));
  swift_release();
  sub_1000A4230(*(_QWORD *)(v11 + v7[16]), *(_QWORD *)(v11 + v7[16] + 8), *(_BYTE *)(v11 + v7[16] + 16));
  sub_1000A4240(*(_QWORD *)(v11 + v7[17]), *(_QWORD *)(v11 + v7[17] + 8), *(_BYTE *)(v11 + v7[17] + 16));
  return swift_deallocObject(v4, v9 + v10);
}

void sub_10081CCB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = type metadata accessor for PlaybackSelection(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  sub_1008181F0(v5, v6, v7, v8);
}

uint64_t sub_10081CD0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v6;
  unint64_t v7;
  _QWORD v8[7];

  result = type metadata accessor for SourcedPlaybackIntent(319, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a4);
  if (v6 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for ToolbarItemPlacement(319);
    if (v7 <= 0x3F)
    {
      v8[1] = *(_QWORD *)(result - 8) + 64;
      v8[2] = &unk_100ED1E90;
      v8[3] = &unk_100ED1D70;
      v8[4] = &unk_100ED1D88;
      v8[5] = &unk_100ED1D58;
      v8[6] = &unk_100ED1D58;
      swift_initStructMetadata(a1, 0, 7, v8, a1 + 32);
      return 0;
    }
  }
  return result;
}

uint64_t *sub_10081CDBC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  size_t v14;
  size_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  unsigned int v20;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  unsigned __int8 *v28;
  unsigned int v29;
  size_t v30;
  uint64_t v31;
  uint64_t v32;
  size_t v33;
  size_t v34;
  char v35;
  char *v36;
  unsigned __int8 *v37;
  size_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  void *v43;
  char v44;
  uint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  size_t __n;
  uint64_t v55;
  int v56;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, *(_QWORD *)(a3 + 24), v4, &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable);
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = v9;
  v11 = v6 + v9;
  v12 = (v6 + v10) & ~v10;
  v13 = *(_QWORD *)(v8 + 64);
  v56 = *(_DWORD *)(v8 + 84);
  if (v56)
    v14 = *(_QWORD *)(v8 + 64);
  else
    v14 = v13 + 1;
  __n = v14;
  v55 = AssociatedTypeWitness;
  if (v13 <= v14)
    v15 = v14;
  else
    v15 = *(_QWORD *)(v8 + 64);
  v16 = type metadata accessor for ToolbarItemPlacement(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_DWORD *)(v17 + 80);
  v19 = *(_DWORD *)(v5 + 80) | v9;
  v20 = v18 | v19 & 0xF8;
  if (v20 > 7
    || ((v19 | *(_DWORD *)(v17 + 80)) & 0x100000) != 0
    || ((((((v12 + 2 + v15 + v18) & ~v18) + *(_QWORD *)(v17 + 64)) & 0xFFFFFFFFFFFFFFF8) + 71) & 0xFFFFFFFFFFFFFFF8)
     + 16 > 0x18)
  {
    v23 = *a2;
    *a1 = *a2;
    v24 = (uint64_t *)(v23 + (((v20 | 7) + 16) & ~(unint64_t)(v20 | 7)));
  }
  else
  {
    v25 = *(_DWORD *)(v17 + 80);
    v50 = v12 + 2;
    v51 = *(_QWORD *)(v17 + 64);
    v52 = *(_QWORD *)(v16 - 8);
    v53 = v16;
    v26 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, v4);
    v27 = (char *)(((unint64_t)a1 + v11) & v26);
    v28 = (unsigned __int8 *)(((unint64_t)a2 + v11) & v26);
    v29 = v28[v15];
    v30 = v15;
    if (v29 >= 2)
    {
      if (v15 <= 3)
        v31 = v15;
      else
        v31 = 4;
      __asm { BR              X12 }
    }
    v32 = v25;
    v33 = v30;
    v34 = v13 + 1;
    if (v29 == 1)
    {
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v8 + 16))(v27, v28, v55);
      v35 = 1;
    }
    else
    {
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v8 + 48))(v28, 1, v55))
      {
        memcpy(v27, v28, __n);
      }
      else
      {
        (*(void (**)(char *, unsigned __int8 *, uint64_t))(v8 + 16))(v27, v28, v55);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v27, 0, 1, v55);
      }
      v35 = 0;
    }
    v27[v33] = v35;
    v36 = &v27[v34];
    v37 = &v28[v34];
    if (v13 <= v34)
      v38 = v13 + 1;
    else
      v38 = v13;
    if (v56)
    {
      v38 = v13;
    }
    else
    {
      v37 = &v28[v38 + 1];
      v36 = &v27[v38 + 1];
    }
    *v36 = *v37;
    v39 = ((unint64_t)a1 + v32 + v50 + v38) & ~v32;
    v40 = ((unint64_t)a2 + v32 + v50 + v38) & ~v32;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v52 + 16))(v39, v40, v53);
    *(_BYTE *)(v39 + v51) = *(_BYTE *)(v40 + v51);
    v41 = (v39 + v51) & 0xFFFFFFFFFFFFFFF8;
    v42 = (v40 + v51) & 0xFFFFFFFFFFFFFFF8;
    v43 = *(void **)(v42 + 8);
    v44 = *(_BYTE *)(v42 + 16);
    sub_1000A4100(v43, v44);
    *(_QWORD *)(v41 + 8) = v43;
    *(_BYTE *)(v41 + 16) = v44;
    v45 = *(_QWORD *)(v42 + 24);
    v46 = *(_QWORD *)(v42 + 32);
    LOBYTE(v39) = *(_BYTE *)(v42 + 40);
    sub_1000A411C(v45, v46, v39);
    *(_QWORD *)(v41 + 24) = v45;
    *(_QWORD *)(v41 + 32) = v46;
    *(_BYTE *)(v41 + 40) = v39;
    v24 = a1;
    *(_QWORD *)(v41 + 48) = *(_QWORD *)(v42 + 48);
    *(_QWORD *)(v41 + 56) = *(_QWORD *)(v42 + 56);
    v47 = (_QWORD *)((v41 + 71) & 0xFFFFFFFFFFFFFFF8);
    v48 = (_QWORD *)((v42 + 71) & 0xFFFFFFFFFFFFFFF8);
    *v47 = *v48;
    v47[1] = v48[1];
    swift_retain();
  }
  swift_retain();
  return v24;
}

double sub_10081D144(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  double result;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = *(_QWORD *)(v5 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, *(_QWORD *)(a2 + 24), v4, &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable);
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9;
  v11 = (v6 + v9 + a1) & ~v9;
  v12 = *(_QWORD *)(v8 + 64);
  if (*(_DWORD *)(v8 + 84))
    v13 = *(_QWORD *)(v8 + 64);
  else
    v13 = v12 + 1;
  if (v12 <= v13)
    v14 = v13;
  else
    v14 = *(_QWORD *)(v8 + 64);
  v15 = *(unsigned __int8 *)(v11 + v14);
  if (v15 >= 2)
  {
    if (v14 <= 3)
      v16 = v14;
    else
      v16 = 4;
    __asm { BR              X13 }
  }
  v17 = ~v9;
  if (v15 == 1
    || !(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v11, 1, AssociatedTypeWitness))
  {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v11, AssociatedTypeWitness);
  }
  v18 = type metadata accessor for ToolbarItemPlacement(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = (a1 + (v10 & v17) + *(unsigned __int8 *)(v19 + 80) + v14 + 2) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  (*(void (**)(unint64_t, uint64_t))(v19 + 8))(v20, v18);
  v21 = (v20 + *(_QWORD *)(v19 + 64)) & 0xFFFFFFFFFFFFFFF8;
  sub_1000A4224(*(id *)(v21 + 8), *(_BYTE *)(v21 + 16));
  sub_1000A4240(*(_QWORD *)(v21 + 24), *(_QWORD *)(v21 + 32), *(_BYTE *)(v21 + 40));
  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_10081D2F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unsigned __int8 *v14;
  size_t v15;
  size_t v16;
  size_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  size_t v21;
  char v22;
  char *v23;
  unsigned __int8 *v24;
  size_t v25;
  size_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  void *v38;
  uint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  int v44;
  uint64_t v45;
  uint64_t v46;

  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, *(_QWORD *)(a3 + 24), v6, &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable);
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v8 + v11;
  v45 = a2;
  v46 = a1;
  v13 = (char *)((v8 + v11 + a1) & ~v11);
  v14 = (unsigned __int8 *)((v8 + v11 + a2) & ~v11);
  v15 = *(_QWORD *)(v10 + 64);
  v44 = *(_DWORD *)(v10 + 84);
  if (v44)
    v16 = *(_QWORD *)(v10 + 64);
  else
    v16 = v15 + 1;
  if (v15 <= v16)
    v17 = v16;
  else
    v17 = *(_QWORD *)(v10 + 64);
  v18 = v14[v17];
  if (v18 >= 2)
  {
    if (v17 <= 3)
      v19 = v17;
    else
      v19 = 4;
    __asm { BR              X13 }
  }
  v20 = ~v11;
  v21 = v15 + 1;
  if (v18 == 1)
  {
    (*(void (**)(char *, unsigned __int8 *, uint64_t))(v10 + 16))(v13, v14, AssociatedTypeWitness);
    v22 = 1;
  }
  else
  {
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v10 + 48))(v14, 1, AssociatedTypeWitness))
    {
      memcpy(v13, v14, v16);
    }
    else
    {
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v10 + 16))(v13, v14, AssociatedTypeWitness);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, AssociatedTypeWitness);
    }
    v22 = 0;
  }
  v13[v17] = v22;
  v23 = &v13[v21];
  v24 = &v14[v21];
  if (v15 <= v21)
    v25 = v15 + 1;
  else
    v25 = v15;
  if (v44)
  {
    v26 = v15;
  }
  else
  {
    v24 = &v14[v25 + 1];
    v23 = &v13[v25 + 1];
    v26 = v25;
  }
  *v23 = *v24;
  v27 = type metadata accessor for ToolbarItemPlacement(0);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(unsigned __int8 *)(v28 + 80);
  v30 = (v12 & v20) + v26 + v29 + 2;
  v31 = (v30 + v46) & ~v29;
  v32 = (v30 + v45) & ~v29;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v31, v32, v27);
  v33 = *(_QWORD *)(v28 + 64);
  v34 = v31 + v33;
  v35 = v32 + v33;
  *(_BYTE *)v34 = *(_BYTE *)v35;
  v36 = v34 & 0xFFFFFFFFFFFFFFF8;
  v37 = v35 & 0xFFFFFFFFFFFFFFF8;
  v38 = *(void **)((v35 & 0xFFFFFFFFFFFFFFF8) + 8);
  LOBYTE(v31) = *(_BYTE *)((v35 & 0xFFFFFFFFFFFFFFF8) + 16);
  sub_1000A4100(v38, v31);
  *(_QWORD *)(v36 + 8) = v38;
  *(_BYTE *)(v36 + 16) = v31;
  v39 = *(_QWORD *)(v37 + 24);
  v40 = *(_QWORD *)(v37 + 32);
  LOBYTE(v28) = *(_BYTE *)(v37 + 40);
  sub_1000A411C(v39, v40, v28);
  *(_QWORD *)(v36 + 24) = v39;
  *(_QWORD *)(v36 + 32) = v40;
  *(_BYTE *)(v36 + 40) = v28;
  *(_QWORD *)(v36 + 48) = *(_QWORD *)(v37 + 48);
  *(_QWORD *)(v36 + 56) = *(_QWORD *)(v37 + 56);
  v41 = (_QWORD *)((v36 + 71) & 0xFFFFFFFFFFFFFFF8);
  v42 = (_QWORD *)((v37 + 71) & 0xFFFFFFFFFFFFFFF8);
  *v41 = *v42;
  v41[1] = v42[1];
  swift_retain();
  swift_retain();
  return v46;
}

uint64_t sub_10081D5D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  unsigned __int8 *v15;
  int v16;
  unint64_t v17;
  uint64_t v18;
  size_t v19;
  size_t v20;
  unsigned int v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  void *v41;
  void *v42;
  char v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  _QWORD *v49;
  _QWORD *v50;
  int v52;
  uint64_t v53;

  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, *(_QWORD *)(a3 + 24), v6, &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable);
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v8 + v11;
  v13 = ~v11;
  v14 = (unsigned __int8 *)((v8 + v11 + a1) & ~v11);
  v15 = (unsigned __int8 *)((v8 + v11 + a2) & ~v11);
  v16 = *(_DWORD *)(v10 + 84);
  v17 = *(_QWORD *)(v10 + 64);
  if (v14 != v15)
  {
    v18 = AssociatedTypeWitness;
    v53 = ~v11;
    if (v16)
      v19 = *(_QWORD *)(v10 + 64);
    else
      v19 = v17 + 1;
    if (v17 <= v19)
      v20 = v19;
    else
      v20 = *(_QWORD *)(v10 + 64);
    v21 = v14[v20];
    v52 = *(_DWORD *)(v10 + 84);
    if (v21 >= 2)
    {
      if (v20 <= 3)
        v22 = v20;
      else
        v22 = 4;
      __asm { BR              X12 }
    }
    if (v21 == 1
      || !(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v10 + 48))(v14, 1, AssociatedTypeWitness))
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v10 + 8))(v14, v18);
    }
    v23 = v15[v20];
    if (v23 >= 2)
    {
      if (v20 <= 3)
        v24 = v20;
      else
        v24 = 4;
      __asm { BR              X12 }
    }
    if (v23 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v10 + 16))(v14, v15, v18);
      v25 = 1;
    }
    else
    {
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v18))
      {
        memcpy(v14, v15, v19);
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v10 + 16))(v14, v15, v18);
        (*(void (**)(unsigned __int8 *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v18);
      }
      v25 = 0;
    }
    v14[v20] = v25;
    v13 = v53;
    v16 = v52;
  }
  if (v17 >= v17 + 1)
    v26 = v17;
  else
    v26 = v17 + 1;
  v27 = v26 + 1;
  if (v16)
  {
    v27 = v17 + 1;
    v28 = v17;
  }
  else
  {
    v28 = v26;
  }
  v14[v27] = v15[v27];
  v29 = v12 & v13;
  v30 = type metadata accessor for ToolbarItemPlacement(0);
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(unsigned __int8 *)(v31 + 80);
  v33 = v29 + v32 + v28 + 2;
  v34 = (v33 + a1) & ~v32;
  v35 = (v33 + a2) & ~v32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 24))(v34, v35, v30);
  v36 = *(_QWORD *)(v31 + 64);
  v37 = v34 + v36;
  v38 = v35 + v36;
  *(_BYTE *)v37 = *(_BYTE *)v38;
  v39 = v37 & 0xFFFFFFFFFFFFFFF8;
  v40 = v38 & 0xFFFFFFFFFFFFFFF8;
  v41 = *(void **)((v38 & 0xFFFFFFFFFFFFFFF8) + 8);
  LOBYTE(v34) = *(_BYTE *)((v38 & 0xFFFFFFFFFFFFFFF8) + 16);
  sub_1000A4100(v41, v34);
  v42 = *(void **)(v39 + 8);
  v43 = *(_BYTE *)(v39 + 16);
  *(_QWORD *)(v39 + 8) = v41;
  *(_BYTE *)(v39 + 16) = v34;
  sub_1000A4224(v42, v43);
  v44 = *(_QWORD *)(v40 + 24);
  v45 = *(_QWORD *)(v40 + 32);
  LOBYTE(v31) = *(_BYTE *)(v40 + 40);
  sub_1000A411C(v44, v45, v31);
  v46 = *(_QWORD *)(v39 + 24);
  v47 = *(_QWORD *)(v39 + 32);
  v48 = *(_BYTE *)(v39 + 40);
  *(_QWORD *)(v39 + 24) = v44;
  *(_QWORD *)(v39 + 32) = v45;
  *(_BYTE *)(v39 + 40) = v31;
  sub_1000A4240(v46, v47, v48);
  *(_QWORD *)(v39 + 48) = *(_QWORD *)(v40 + 48);
  swift_retain();
  swift_release();
  *(_QWORD *)(v39 + 56) = *(_QWORD *)(v40 + 56);
  v49 = (_QWORD *)((v39 + 71) & 0xFFFFFFFFFFFFFFF8);
  v50 = (_QWORD *)((v40 + 71) & 0xFFFFFFFFFFFFFFF8);
  *v49 = *v50;
  swift_retain();
  swift_release();
  v49[1] = v50[1];
  return a1;
}

uint64_t sub_10081D96C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unsigned __int8 *v14;
  size_t v15;
  size_t v16;
  size_t v17;
  unsigned int v18;
  uint64_t v19;
  size_t v20;
  char v21;
  char *v22;
  unsigned __int8 *v23;
  size_t v24;
  size_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v38;
  int v39;
  uint64_t v40;

  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, *(_QWORD *)(a3 + 24), v6, &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable);
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v8 + v11;
  v13 = (char *)((v8 + v11 + a1) & ~v11);
  v40 = a2;
  v14 = (unsigned __int8 *)((v8 + v11 + a2) & ~v11);
  v15 = *(_QWORD *)(v10 + 64);
  v39 = *(_DWORD *)(v10 + 84);
  if (v39)
    v16 = *(_QWORD *)(v10 + 64);
  else
    v16 = v15 + 1;
  if (v15 <= v16)
    v17 = v16;
  else
    v17 = *(_QWORD *)(v10 + 64);
  v18 = v14[v17];
  if (v18 >= 2)
  {
    if (v17 <= 3)
      v19 = v17;
    else
      v19 = 4;
    __asm { BR              X13 }
  }
  v38 = ~v11;
  v20 = v15 + 1;
  if (v18 == 1)
  {
    (*(void (**)(char *, unsigned __int8 *, uint64_t))(v10 + 32))(v13, v14, AssociatedTypeWitness);
    v21 = 1;
  }
  else
  {
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v10 + 48))(v14, 1, AssociatedTypeWitness))
    {
      memcpy(v13, v14, v16);
    }
    else
    {
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v10 + 32))(v13, v14, AssociatedTypeWitness);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, AssociatedTypeWitness);
    }
    v21 = 0;
  }
  v13[v17] = v21;
  v22 = &v13[v20];
  v23 = &v14[v20];
  if (v15 <= v20)
    v24 = v15 + 1;
  else
    v24 = v15;
  if (v39)
  {
    v25 = v15;
  }
  else
  {
    v23 = &v14[v24 + 1];
    v22 = &v13[v24 + 1];
    v25 = v24;
  }
  *v22 = *v23;
  v26 = type metadata accessor for ToolbarItemPlacement(0);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(unsigned __int8 *)(v27 + 80);
  v29 = (v12 & v38) + v25 + v28 + 2;
  v30 = (v29 + a1) & ~v28;
  v31 = (v29 + v40) & ~v28;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 32))(v30, v31, v26);
  v32 = *(_QWORD *)(v27 + 64);
  v33 = v30 + v32;
  v34 = v31 + v32;
  *(_BYTE *)v33 = *(_BYTE *)v34;
  v33 &= 0xFFFFFFFFFFFFFFF8;
  v34 &= 0xFFFFFFFFFFFFFFF8;
  v35 = *(_BYTE *)(v34 + 16);
  *(_QWORD *)(v33 + 8) = *(_QWORD *)(v34 + 8);
  *(_BYTE *)(v33 + 16) = v35;
  v36 = *(_BYTE *)(v34 + 40);
  *(_OWORD *)(v33 + 24) = *(_OWORD *)(v34 + 24);
  *(_BYTE *)(v33 + 40) = v36;
  *(_OWORD *)(v33 + 48) = *(_OWORD *)(v34 + 48);
  *(_OWORD *)((v33 + 71) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v34 + 71) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_10081DC14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  unsigned __int8 *v15;
  int v16;
  unint64_t v17;
  uint64_t v18;
  size_t v19;
  size_t v20;
  unsigned int v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  void *v41;
  char v42;
  char v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  _QWORD *v47;
  _QWORD *v48;
  int v50;
  uint64_t v51;

  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, *(_QWORD *)(a3 + 24), v6, &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable);
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v8 + v11;
  v13 = ~v11;
  v14 = (unsigned __int8 *)((v8 + v11 + a1) & ~v11);
  v15 = (unsigned __int8 *)((v8 + v11 + a2) & ~v11);
  v16 = *(_DWORD *)(v10 + 84);
  v17 = *(_QWORD *)(v10 + 64);
  if (v14 != v15)
  {
    v18 = AssociatedTypeWitness;
    v51 = ~v11;
    if (v16)
      v19 = *(_QWORD *)(v10 + 64);
    else
      v19 = v17 + 1;
    if (v17 <= v19)
      v20 = v19;
    else
      v20 = *(_QWORD *)(v10 + 64);
    v21 = v14[v20];
    v50 = *(_DWORD *)(v10 + 84);
    if (v21 >= 2)
    {
      if (v20 <= 3)
        v22 = v20;
      else
        v22 = 4;
      __asm { BR              X12 }
    }
    if (v21 == 1
      || !(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v10 + 48))(v14, 1, AssociatedTypeWitness))
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v10 + 8))(v14, v18);
    }
    v23 = v15[v20];
    if (v23 >= 2)
    {
      if (v20 <= 3)
        v24 = v20;
      else
        v24 = 4;
      __asm { BR              X12 }
    }
    if (v23 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v10 + 32))(v14, v15, v18);
      v25 = 1;
    }
    else
    {
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v18))
      {
        memcpy(v14, v15, v19);
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v10 + 32))(v14, v15, v18);
        (*(void (**)(unsigned __int8 *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v18);
      }
      v25 = 0;
    }
    v14[v20] = v25;
    v13 = v51;
    v16 = v50;
  }
  if (v17 >= v17 + 1)
    v26 = v17;
  else
    v26 = v17 + 1;
  v27 = v26 + 1;
  if (v16)
  {
    v27 = v17 + 1;
    v28 = v17;
  }
  else
  {
    v28 = v26;
  }
  v14[v27] = v15[v27];
  v29 = v12 & v13;
  v30 = type metadata accessor for ToolbarItemPlacement(0);
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(unsigned __int8 *)(v31 + 80);
  v33 = v29 + v32 + v28 + 2;
  v34 = (v33 + a1) & ~v32;
  v35 = (v33 + a2) & ~v32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 40))(v34, v35, v30);
  v36 = *(_QWORD *)(v31 + 64);
  v37 = v34 + v36;
  v38 = v35 + v36;
  *(_BYTE *)v37 = *(_BYTE *)v38;
  v39 = v37 & 0xFFFFFFFFFFFFFFF8;
  v40 = v38 & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v37) = *(_BYTE *)((v38 & 0xFFFFFFFFFFFFFFF8) + 16);
  v41 = *(void **)(v39 + 8);
  v42 = *(_BYTE *)(v39 + 16);
  *(_QWORD *)(v39 + 8) = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFFFF8) + 8);
  *(_BYTE *)(v39 + 16) = v37;
  sub_1000A4224(v41, v42);
  v43 = *(_BYTE *)(v40 + 40);
  v44 = *(_QWORD *)(v39 + 24);
  v45 = *(_QWORD *)(v39 + 32);
  v46 = *(_BYTE *)(v39 + 40);
  *(_OWORD *)(v39 + 24) = *(_OWORD *)(v40 + 24);
  *(_BYTE *)(v39 + 40) = v43;
  sub_1000A4240(v44, v45, v46);
  *(_QWORD *)(v39 + 48) = *(_QWORD *)(v40 + 48);
  swift_release();
  *(_QWORD *)(v39 + 56) = *(_QWORD *)(v40 + 56);
  v47 = (_QWORD *)((v39 + 71) & 0xFFFFFFFFFFFFFFF8);
  v48 = (_QWORD *)((v40 + 71) & 0xFFFFFFFFFFFFFFF8);
  *v47 = *v48;
  swift_release();
  v47[1] = v48[1];
  return a1;
}

uint64_t sub_10081DF80(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  unint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  unsigned int v29;
  unint64_t v30;
  int v31;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = *(_QWORD *)(swift_getAssociatedTypeWitness(0, *(_QWORD *)(a3 + 24), v5, &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable)- 8);
  v9 = *(_DWORD *)(v8 + 84);
  v10 = *(_QWORD *)(v8 + 64);
  if (v7 <= 0xFE)
    v11 = 254;
  else
    v11 = v7;
  v12 = type metadata accessor for ToolbarItemPlacement(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int *)(v13 + 84);
  if (v14 <= v11)
    v15 = v11;
  else
    v15 = *(_DWORD *)(v13 + 84);
  if (v15 <= 0x7FFFFFFE)
    v15 = 2147483646;
  if (v9)
    v16 = v10;
  else
    v16 = v10 + 1;
  if (v10 > v16)
    v16 = v10;
  if (!a2)
    return 0;
  v17 = v12;
  v18 = *(unsigned __int8 *)(v8 + 80);
  v19 = *(_QWORD *)(v6 + 64) + v18;
  v20 = *(unsigned __int8 *)(v13 + 80);
  v21 = v16 + (v19 & ~v18) + v20 + 2;
  v22 = *(_QWORD *)(v13 + 64);
  if (v15 < a2)
  {
    if ((((((((v21 & ~v20) + v22) & 0xFFFFFFFFFFFFFFF8) + 71) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v23 = 2;
    else
      v23 = a2 - v15 + 1;
    if (v23 >= 0x10000)
      v24 = 4;
    else
      v24 = 2;
    if (v23 < 0x100)
      v24 = 1;
    if (v23 >= 2)
      v25 = v24;
    else
      v25 = 0;
    __asm { BR              X4 }
  }
  if (v11 == v15)
  {
    if (v7 >= 0xFE)
    {
      v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
      v28 = a1;
      v14 = v7;
      v17 = v5;
      return v27(v28, v14, v17);
    }
    v29 = *(unsigned __int8 *)(((v19 + a1) & ~v18) + v16);
    if (v29 >= 2)
      return (v29 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v28 = (v21 + a1) & ~v20;
    if ((_DWORD)v14 == v15)
    {
      v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
      return v27(v28, v14, v17);
    }
    v30 = *(_QWORD *)(((v28 + v22) & 0xFFFFFFFFFFFFF8) + 0x30);
    if (v30 >= 0xFFFFFFFF)
      LODWORD(v30) = -1;
    v31 = v30 - 1;
    if (v31 < 0)
      v31 = -1;
    return (v31 + 1);
  }
}

void sub_10081E1B4(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  unsigned int v13;
  uint64_t v14;
  unsigned int v15;
  unint64_t v16;
  size_t v17;
  unsigned int v18;
  int v19;
  int v20;
  unsigned int v21;

  v7 = *(_QWORD *)(a4 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_DWORD *)(v8 + 84);
  v10 = *(_QWORD *)(swift_getAssociatedTypeWitness(0, *(_QWORD *)(a4 + 24), v7, &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable)- 8);
  v11 = *(_DWORD *)(v10 + 84);
  v12 = *(_QWORD *)(v10 + 64);
  if (v9 <= 0xFE)
    v13 = 254;
  else
    v13 = v9;
  v14 = *(_QWORD *)(type metadata accessor for ToolbarItemPlacement(0) - 8);
  if (*(_DWORD *)(v14 + 84) <= v13)
    v15 = v13;
  else
    v15 = *(_DWORD *)(v14 + 84);
  if (v15 <= 0x7FFFFFFE)
    v15 = 2147483646;
  if (v11)
    v16 = v12;
  else
    v16 = v12 + 1;
  if (v12 > v16)
    v16 = v12;
  v17 = ((((((v16
            + ((*(_QWORD *)(v8 + 64) + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))
            + *(unsigned __int8 *)(v14 + 80)
            + 2) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))
          + *(_QWORD *)(v14 + 64)) & 0xFFFFFFFFFFFFFFF8)
        + 71) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v15 >= a3)
  {
    v20 = 0;
    if (a2 <= v15)
      goto LABEL_27;
  }
  else
  {
    if ((_DWORD)v17)
      v18 = 2;
    else
      v18 = a3 - v15 + 1;
    if (v18 >= 0x10000)
      v19 = 4;
    else
      v19 = 2;
    if (v18 < 0x100)
      v19 = 1;
    if (v18 >= 2)
      v20 = v19;
    else
      v20 = 0;
    if (a2 <= v15)
LABEL_27:
      __asm { BR              X0 }
  }
  if ((_DWORD)v17)
  {
    v21 = ~v15 + a2;
    bzero(a1, v17);
    *a1 = v21;
  }
  __asm { BR              X10 }
}

void sub_10081E348()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(v0 + v2) = v1;
  JUMPOUT(0x10081E474);
}

void sub_10081E350()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + v2) = 0;
  if (v0)
    JUMPOUT(0x10081E358);
  JUMPOUT(0x10081E474);
}

void sub_10081E3B4()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;

  *(_WORD *)(v0 + v2) = v1;
  JUMPOUT(0x10081E474);
}

void sub_10081E3BC()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = v1;
  JUMPOUT(0x10081E474);
}

uint64_t sub_10081E3C4@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;

  *(_WORD *)(v11 + v14) = 0;
  if (!(_DWORD)v10)
    JUMPOUT(0x10081E474);
  if (v16 == v7)
  {
    if (v13 < 0xFE)
      JUMPOUT(0x10081E3D0);
    v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
    v4 = v11;
    v5 = v10;
    a1 = v13;
    a2 = v12;
  }
  else
  {
    v4 = (v8 + v11) & v9;
    if ((_DWORD)a1 != v7)
      JUMPOUT(0x10081E3ECLL);
    v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 56);
    v5 = v10;
  }
  return v3(v4, v5, a1, a2);
}

void sub_10081E460()
{
  char v0;
  _BYTE *v1;

  *v1 = v0;
  JUMPOUT(0x10081E474);
}

void sub_10081E490()
{
  int v0;
  uint64_t v1;

  *(_WORD *)v1 = v0;
  *(_BYTE *)(v1 + 2) = BYTE2(v0);
  JUMPOUT(0x10081E474);
}

void sub_10081E4A0()
{
  __int16 v0;
  _WORD *v1;

  *v1 = v0;
  JUMPOUT(0x10081E474);
}

void sub_10081E4A8()
{
  int v0;
  _DWORD *v1;

  *v1 = v0;
  JUMPOUT(0x10081E474);
}

uint64_t type metadata accessor for PlaybackToolbar(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PlaybackToolbar);
}

uint64_t sub_10081E4C0(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_100FAE28C, 1);
}

uint64_t sub_10081E4F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_10081AFD0(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_10081E500@<X0>(uint64_t a1@<X3>, char *a2@<X8>)
{
  uint64_t *v2;

  return sub_10081B484(v2[4], v2[2], v2[3], a1, a2);
}

uint64_t sub_10081E50C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t AssociatedTypeWitness;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = (int *)type metadata accessor for PlaybackToolbar(0, v5, v6, a4);
  v8 = *((_QWORD *)v7 - 1);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v8 + 64);
  v11 = v4 + v9;
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4 + v9, v5);
  v13 = v4 + v9 + *(int *)(type metadata accessor for SourcedPlaybackIntent(0, v5, v6, v12) + 36);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v6, v5, &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable);
  v17 = type metadata accessor for PlaybackEnqueueMode(0, AssociatedTypeWitness, v15, v16);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v13, v17);
  v19 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if (EnumCaseMultiPayload == 1
    || !(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v19 + 48))(v13, 1, AssociatedTypeWitness))
  {
    (*(void (**)(unint64_t, uint64_t))(v19 + 8))(v13, AssociatedTypeWitness);
  }
  v20 = v11 + v7[9];
  v21 = type metadata accessor for ToolbarItemPlacement(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
  sub_1000A4224(*(id *)(v11 + v7[11]), *(_BYTE *)(v11 + v7[11] + 8));
  sub_1000A4240(*(_QWORD *)(v11 + v7[12]), *(_QWORD *)(v11 + v7[12] + 8), *(_BYTE *)(v11 + v7[12] + 16));
  swift_release();
  swift_release();
  return swift_deallocObject(v4, v9 + v10);
}

uint64_t sub_10081E688@<X0>(char *a1@<X0>, uint64_t a2@<X3>, char *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PlaybackToolbar(0, v6, v7, a2) - 8) + 80);
  return sub_10081BA10(a1, v3 + ((v8 + 32) & ~v8), v6, v7, a3);
}

unint64_t sub_10081E6F0()
{
  unint64_t result;

  result = qword_1011CB140;
  if (!qword_1011CB140)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PlaybackMode, &type metadata for PlaybackMode);
    atomic_store(result, (unint64_t *)&qword_1011CB140);
  }
  return result;
}

uint64_t sub_10081E734(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t WitnessTable;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t OpaqueTypeConformance2;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v4 = *a1;
  v5 = a1[1];
  v6 = type metadata accessor for PlaybackToolbar(255, *a1, v5, a4);
  WitnessTable = swift_getWitnessTable(&unk_100ED1EB8, v6);
  v40 = type metadata accessor for _ViewModifier_Content(255, v6, WitnessTable);
  v39 = sub_100044B54(qword_1011C81B8);
  v9 = type metadata accessor for PlaybackButton(255, v4, v5, v8);
  v10 = type metadata accessor for BorderedButtonStyle(255);
  v11 = swift_getWitnessTable(&protocol conformance descriptor for PlaybackButton<A>, v9);
  v12 = sub_100048748((unint64_t *)&qword_1011A0D08, (uint64_t (*)(uint64_t))&type metadata accessor for BorderedButtonStyle, (uint64_t)&protocol conformance descriptor for BorderedButtonStyle);
  v41 = v9;
  v42 = (void *)v10;
  v43 = v11;
  v44 = v12;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v41, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 0);
  v14 = sub_100044B54(&qword_1011A0610);
  v15 = type metadata accessor for ModifiedContent(255, OpaqueTypeMetadata2, v14);
  v16 = sub_100044B54(&qword_1011A0618);
  v17 = type metadata accessor for ModifiedContent(255, v15, v16);
  v18 = type metadata accessor for IconOnlyLabelStyle(255);
  v41 = v9;
  v42 = (void *)v10;
  v43 = v11;
  v44 = v12;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v41, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
  v20 = sub_100049F28(&qword_1011A0D50, &qword_1011A0610, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  v48 = OpaqueTypeConformance2;
  v49 = v20;
  v21 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v15);
  v22 = sub_100049F28(&qword_1011A0D58, &qword_1011A0618, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  v46 = v21;
  v47 = v22;
  v23 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v17);
  v24 = sub_100048748(&qword_1011A2AA8, (uint64_t (*)(uint64_t))&type metadata accessor for IconOnlyLabelStyle, (uint64_t)&protocol conformance descriptor for IconOnlyLabelStyle);
  v41 = v17;
  v42 = (void *)v18;
  v43 = v23;
  v44 = v24;
  v25 = swift_getOpaqueTypeMetadata2(255, &v41, &opaque type descriptor for <<opaque return type of View.labelStyle<A>(_:)>>, 0);
  v26 = type metadata accessor for AccessibilityAttachmentModifier(255);
  v27 = type metadata accessor for ModifiedContent(255, v25, v26);
  v28 = sub_100044B54((uint64_t *)&unk_1011B44F8);
  v29 = type metadata accessor for ModifiedContent(255, v27, v28);
  v30 = sub_100049F28(&qword_1011CB138, qword_1011C81B8, (uint64_t)&protocol conformance descriptor for [A]);
  v41 = v39;
  v42 = &type metadata for Int;
  v43 = v29;
  v44 = v30;
  v45 = &protocol witness table for Int;
  v31 = type metadata accessor for ForEach(255, &v41);
  v41 = v17;
  v42 = (void *)v18;
  v43 = v23;
  v44 = v24;
  swift_getOpaqueTypeConformance2(&v41, &opaque type descriptor for <<opaque return type of View.labelStyle<A>(_:)>>, 1);
  sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v27);
  sub_100049F28(&qword_1011B44F0, (uint64_t *)&unk_1011B44F8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyTransformModifier<A>);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v29);
  v32 = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v31);
  v33 = type metadata accessor for ToolbarItemGroup(255, v31, v32);
  v34 = swift_getWitnessTable(&protocol conformance descriptor for ToolbarItemGroup<A>, v33);
  v41 = v33;
  v42 = (void *)v34;
  v35 = swift_getOpaqueTypeMetadata2(255, &v41, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 0);
  v36 = swift_getWitnessTable(&protocol conformance descriptor for _ViewModifier_Content<A>, v40);
  v41 = v33;
  v42 = (void *)v34;
  v37 = swift_getOpaqueTypeConformance2(&v41, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
  v41 = v40;
  v42 = (void *)v35;
  v43 = v36;
  v44 = v37;
  return swift_getOpaqueTypeConformance2(&v41, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 1);
}

uint64_t initializeBufferWithCopyOfBuffer for DragDropToQueue.Destination(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = v3;
  v6 = v4;
  return a1;
}

void destroy for Artwork.Content(id *a1)
{

}

uint64_t assignWithCopy for DragDropToQueue.Destination(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a1 + 8);
  v8 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v8;
  v9 = v8;

  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for DragDropToQueue.Destination(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for Border(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Border(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DragDropToQueue.Destination()
{
  return &type metadata for DragDropToQueue.Destination;
}

char *sub_10081ECB0(char *a1, char **a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void *v16;
  id v17;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v12[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for DragDropToQueue.Origin.Item(0);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for GenericMusicItem(0);
      (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      v13 = *a2;
      *(_QWORD *)a1 = *a2;
      v14 = v13;
      v9 = a1;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v15 = *(int *)(type metadata accessor for DragDropToQueue.Origin(0) + 20);
    v16 = *(char **)((char *)a2 + v15);
    *(_QWORD *)&a1[v15] = v16;
    a1[*(int *)(a3 + 20)] = *((_BYTE *)a2 + *(int *)(a3 + 20));
    v17 = v16;
  }
  return a1;
}

uint64_t type metadata accessor for DragDropToQueue.Origin.Item(uint64_t a1)
{
  return sub_100055934(a1, qword_1011CB2D8, (uint64_t)&nominal type descriptor for DragDropToQueue.Origin.Item);
}

uint64_t type metadata accessor for DragDropToQueue.Origin(uint64_t a1)
{
  return sub_100055934(a1, qword_1011CB230, (uint64_t)&nominal type descriptor for DragDropToQueue.Origin);
}

void sub_10081EDC4(id *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for DragDropToQueue.Origin.Item(0);
  if (swift_getEnumCaseMultiPayload(a1, v2) == 1)
  {
    v3 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  else
  {

  }
}

void **sub_10081EE34(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  id v15;

  v6 = type metadata accessor for DragDropToQueue.Origin.Item(0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    v11 = *a2;
    *a1 = *a2;
    v12 = v11;
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v13 = *(int *)(type metadata accessor for DragDropToQueue.Origin(0) + 20);
  v14 = *(void **)((char *)a2 + v13);
  *(void **)((char *)a1 + v13) = v14;
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  v15 = v14;
  return a1;
}

void **sub_10081EEF4(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;

  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, type metadata accessor for DragDropToQueue.Origin.Item);
    v6 = type metadata accessor for DragDropToQueue.Origin.Item(0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for GenericMusicItem(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v11 = *a2;
      *a1 = *a2;
      v12 = v11;
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  v13 = *(int *)(type metadata accessor for DragDropToQueue.Origin(0) + 20);
  v14 = *(void **)((char *)a2 + v13);
  v15 = *(void **)((char *)a1 + v13);
  *(void **)((char *)a1 + v13) = v14;
  v16 = v14;

  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

char *sub_10081EFD4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for DragDropToQueue.Origin.Item(0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = type metadata accessor for DragDropToQueue.Origin(0);
  *(_QWORD *)&a1[*(int *)(v8 + 20)] = *(_QWORD *)&a2[*(int *)(v8 + 20)];
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_10081F08C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, type metadata accessor for DragDropToQueue.Origin.Item);
    v6 = type metadata accessor for DragDropToQueue.Origin.Item(0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for GenericMusicItem(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = *(int *)(type metadata accessor for DragDropToQueue.Origin(0) + 20);
  v9 = *(void **)&a1[v8];
  *(_QWORD *)&a1[v8] = *(_QWORD *)&a2[v8];

  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  return a1;
}

uint64_t sub_10081F164(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10081F170);
}

uint64_t sub_10081F170(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = type metadata accessor for DragDropToQueue.Origin(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 4)
    return v9 - 3;
  else
    return 0;
}

uint64_t sub_10081F1E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10081F1F4);
}

uint64_t sub_10081F1F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for DragDropToQueue.Origin(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 3;
  return result;
}

uint64_t type metadata accessor for DragDropToQueue(uint64_t a1)
{
  return sub_100055934(a1, qword_1011CB1A0, (uint64_t)&nominal type descriptor for DragDropToQueue);
}

uint64_t sub_10081F280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10081F7DC(a1, a2, a3, type metadata accessor for DragDropToQueue.Origin, (uint64_t)&unk_100ED1F38);
}

char *sub_10081F294(char *a1, char **a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void *v16;
  id v17;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v12[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for DragDropToQueue.Origin.Item(0);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for GenericMusicItem(0);
      (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      v13 = *a2;
      *(_QWORD *)a1 = *a2;
      v14 = v13;
      v9 = a1;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v15 = *(int *)(a3 + 20);
    v16 = *(char **)((char *)a2 + v15);
    *(_QWORD *)&a1[v15] = v16;
    v17 = v16;
  }
  return a1;
}

void sub_10081F36C(id *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for DragDropToQueue.Origin.Item(0);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  else
  {

  }
}

void **sub_10081F3D8(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  id v15;

  v6 = type metadata accessor for DragDropToQueue.Origin.Item(0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    v11 = *a2;
    *a1 = *a2;
    v12 = v11;
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v13 = *(int *)(a3 + 20);
  v14 = *(void **)((char *)a2 + v13);
  *(void **)((char *)a1 + v13) = v14;
  v15 = v14;
  return a1;
}

void **sub_10081F484(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;

  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, type metadata accessor for DragDropToQueue.Origin.Item);
    v6 = type metadata accessor for DragDropToQueue.Origin.Item(0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for GenericMusicItem(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v11 = *a2;
      *a1 = *a2;
      v12 = v11;
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  v13 = *(int *)(a3 + 20);
  v14 = *(void **)((char *)a2 + v13);
  v15 = *(void **)((char *)a1 + v13);
  *(void **)((char *)a1 + v13) = v14;
  v16 = v14;

  return a1;
}

char *sub_10081F550(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for DragDropToQueue.Origin.Item(0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_10081F5F4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, type metadata accessor for DragDropToQueue.Origin.Item);
    v6 = type metadata accessor for DragDropToQueue.Origin.Item(0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for GenericMusicItem(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = *(int *)(a3 + 20);
  v9 = *(void **)&a1[v8];
  *(_QWORD *)&a1[v8] = *(_QWORD *)&a2[v8];

  return a1;
}

uint64_t sub_10081F6B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10081F6C4);
}

uint64_t sub_10081F6C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for DragDropToQueue.Origin.Item(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_10081F740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10081F74C);
}

uint64_t sub_10081F74C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for DragDropToQueue.Origin.Item(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_10081F7C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10081F7DC(a1, a2, a3, type metadata accessor for DragDropToQueue.Origin.Item, (uint64_t)&value witness table for Builtin.UnknownObject + 64);
}

uint64_t sub_10081F7DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t a5)
{
  uint64_t result;
  unint64_t v8;
  _QWORD v9[2];

  result = a4(319);
  if (v8 <= 0x3F)
  {
    v9[0] = *(_QWORD *)(result - 8) + 64;
    v9[1] = a5;
    swift_initStructMetadata(a1, 256, 2, v9, a1 + 16);
    return 0;
  }
  return result;
}

char *sub_10081F848(char *a1, char **a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v11[(v5 + 16) & ~(unint64_t)v5];
    swift_retain(v11);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v7 = type metadata accessor for GenericMusicItem(0);
      (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = a3;
      v10 = 1;
    }
    else
    {
      v12 = *a2;
      *(_QWORD *)a1 = *a2;
      v13 = v12;
      v8 = a1;
      v9 = a3;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  return a1;
}

void sub_10081F904(id *a1, uint64_t a2)
{
  uint64_t v3;

  if (swift_getEnumCaseMultiPayload(a1, a2) == 1)
  {
    v3 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  else
  {

  }
}

void **sub_10081F954(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  void **v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    v7 = a1;
    v8 = a3;
    v9 = 1;
  }
  else
  {
    v10 = *a2;
    *a1 = *a2;
    v11 = v10;
    v7 = a1;
    v8 = a3;
    v9 = 0;
  }
  swift_storeEnumTagMultiPayload(v7, v8, v9);
  return a1;
}

void **sub_10081F9E4(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  void **v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;

  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, type metadata accessor for DragDropToQueue.Origin.Item);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for GenericMusicItem(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      v7 = a1;
      v8 = a3;
      v9 = 1;
    }
    else
    {
      v10 = *a2;
      *a1 = *a2;
      v11 = v10;
      v7 = a1;
      v8 = a3;
      v9 = 0;
    }
    swift_storeEnumTagMultiPayload(v7, v8, v9);
  }
  return a1;
}

void *sub_10081FA8C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, type metadata accessor for DragDropToQueue.Origin.Item);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for GenericMusicItem(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10081FB30(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for GenericMusicItem(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v4);
    return 0;
  }
  return result;
}

void sub_10081FBA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id *v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  id v16;
  id v17;
  uint64_t v18;

  v2 = v1;
  v4 = type metadata accessor for GenericMusicItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DragDropToQueue.Origin.Item(0);
  __chkstk_darwin(v8);
  v10 = (id *)((char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10005B704(v2, (uint64_t)v10, v11);
  if (swift_getEnumCaseMultiPayload(v10, v8) == 1)
  {
    v12 = (*(uint64_t (**)(char *, id *, uint64_t))(v5 + 32))(v7, v10, v4);
    v13 = GenericMusicItem.id.getter(v12);
    String.hash(into:)(a1, v13, v14);
    v15 = swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v15);
  }
  else
  {
    v16 = *v10;
    v17 = objc_msgSend(*v10, "identifiers");
    NSObject.hash(into:)(a1);

  }
}

Swift::Int sub_10081FCF4()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  sub_10081FBA4((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_10081FD34(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  sub_10081FBA4((uint64_t)v2);
  return Hasher._finalize()();
}

uint64_t sub_10081FD70()
{
  return sub_100048748(&qword_1011CB310, type metadata accessor for DragDropToQueue.Origin, (uint64_t)&unk_100ED1F5C);
}

uint64_t sub_10081FD9C(uint64_t a1)
{
  uint64_t result;

  result = sub_100048748(&qword_1011CB318, type metadata accessor for DragDropToQueue.Origin, (uint64_t)&unk_100ED1F84);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_10081FDD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;

  *(_BYTE *)(v5 + 548) = a5;
  *(_QWORD *)(v5 + 272) = a2;
  *(_QWORD *)(v5 + 280) = a4;
  *(_QWORD *)(v5 + 264) = a1;
  v6 = type metadata accessor for Player.CommandOptions(0);
  *(_QWORD *)(v5 + 288) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  *(_QWORD *)(v5 + 296) = v7;
  *(_QWORD *)(v5 + 304) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PlaybackIntentDescriptor(0);
  *(_QWORD *)(v5 + 312) = v8;
  *(_QWORD *)(v5 + 320) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(type metadata accessor for DragDropToQueue(0) - 8);
  *(_QWORD *)(v5 + 328) = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v5 + 336) = swift_task_alloc(v10);
  *(_QWORD *)(v5 + 344) = swift_task_alloc(v10);
  v11 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v5 + 352) = static MainActor.shared.getter(v12);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor);
  *(_QWORD *)(v5 + 360) = v13;
  *(_QWORD *)(v5 + 368) = v14;
  return swift_task_switch(sub_10081FEE8, v13, v14);
}

id sub_10081FEE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  id result;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  void *v34;
  uint64_t v35;
  _QWORD *v36;
  unint64_t v37;
  _BYTE *v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(void);
  uint64_t v45;
  id v46;
  void *v47;
  void *v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  id v59;
  id v60;
  BOOL v61;
  uint64_t v62;
  id v63;
  id v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  id v74;
  BOOL v75;
  id v76;
  _QWORD *v77;
  uint64_t v78;
  id v79;
  BOOL v80;
  id v81;
  _QWORD *v82;
  void *v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  _BYTE *v88;
  __n128 v89;
  _OWORD v90[2];
  uint64_t v91;

  v1 = *(_QWORD *)(v0 + 272);
  if (!*(_QWORD *)(v1 + 16))
  {
    swift_release(*(_QWORD *)(v0 + 352));
    v37 = sub_10082364C();
    swift_allocError(&type metadata for DragDropToQueue.Destination.Error, v37, 0, 0);
    *v38 = 0;
    swift_willThrow(v39);
LABEL_20:
    v40 = *(_QWORD *)(v0 + 336);
    v41 = *(_QWORD *)(v0 + 320);
    v42 = *(_QWORD *)(v0 + 304);
    v43 = *(_QWORD *)(v0 + 288);
    swift_task_dealloc(*(_QWORD *)(v0 + 344));
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    v44 = *(uint64_t (**)(void))(v0 + 8);
    return (id)v44();
  }
  v2 = swift_bridgeObjectRetain();
  v3 = sub_100481BD4(v2);
  swift_bridgeObjectRelease(v1);
  *(_QWORD *)(v0 + 256) = v3;
  if (qword_10119B8B0 != -1)
    swift_once(&qword_10119B8B0, sub_1000E948C);
  v4 = (void *)(*(uint64_t (**)(void))(*(_QWORD *)qword_10124C788 + 432))();
  if (!v4
    || (v5 = v4,
        v6 = objc_msgSend(v4, "tracklist"),
        v5,
        v7 = objc_msgSend(v6, "playingItem"),
        v6,
        !v7))
  {
    if (qword_10119B910 != -1)
      swift_once(&qword_10119B910, sub_1000FC88C);
    v21 = type metadata accessor for Logger(0);
    v22 = sub_100048B14(v21, (uint64_t)qword_10124C858);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.default.getter(v23);
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Nothing playing adding first selected item to playImmediately", v25, 2u);
      swift_slowDealloc(v25, -1, -1);
    }

    if (v3[2])
    {
      v26 = *(_QWORD *)(v0 + 344);
      v27 = *(_QWORD *)(v0 + 320);
      v28 = *(_QWORD **)(v0 + 304);
      v29 = *(_QWORD *)(v0 + 312);
      v30 = *(_QWORD *)(v0 + 296);
      v31 = *(unsigned __int8 *)(*(_QWORD *)(v0 + 328) + 80);
      sub_10005B704((uint64_t)v3 + ((v31 + 32) & ~v31), v26, type metadata accessor for DragDropToQueue);
      sub_1001FF2F0(0, 1);
      v32 = *(void **)(v26 + *(int *)(type metadata accessor for DragDropToQueue.Origin(0) + 20));
      *v28 = v32;
      swift_storeEnumTagMultiPayload(v28, v30, 0);
      v91 = 0;
      memset(v90, 0, sizeof(v90));
      v33 = v32;
      PlaybackIntentDescriptor.init(intentType:representedObject:intentOptions:replaceIntent:shuffleMode:repeatMode:sourceViewController:)((uint64_t)v28, (uint64_t)v90, 3, 0, 0, 1, 0, 1, v27, 0);
      *(_QWORD *)(v27 + *(int *)(v29 + 20)) = 5;
      if (qword_10119B8C0 == -1)
      {
LABEL_18:
        v34 = (void *)qword_10124C798;
        *(_QWORD *)(v0 + 376) = qword_10124C798;
        v35 = dword_1011D86D4;
        v34;
        v36 = (_QWORD *)swift_task_alloc(v35);
        *(_QWORD *)(v0 + 384) = v36;
        *v36 = v0;
        v36[1] = sub_100820718;
        return (id)PlaybackController.add(_:route:)(*(_QWORD *)(v0 + 320), 0);
      }
    }
    else
    {
      __break(1u);
    }
    swift_once(&qword_10119B8C0, sub_1000E9774);
    goto LABEL_18;
  }

  *(_QWORD *)(v0 + 400) = 0;
  sub_100149434(0);
  if (qword_10119B8C0 != -1)
    swift_once(&qword_10119B8C0, sub_1000E9774);
  v8 = (void *)qword_10124C798;
  v9 = *(_QWORD *)(v0 + 256);
  *(_QWORD *)(v0 + 408) = qword_10124C798;
  *(_QWORD *)(v0 + 416) = v9;
  v10 = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v0 + 424) = v10;
  if (!v10)
  {
    v45 = *(_QWORD *)(v0 + 352);
    v46 = v8;
    swift_bridgeObjectRelease(v9);
    swift_release(v45);
    v48 = *(void **)(v0 + 400);
    v47 = *(void **)(v0 + 408);
    if ((*(_BYTE *)(v0 + 548) & 1) != 0)
    {
      Player.InsertCommand.Location.notice.getter(0);
      sub_100823690(v48);

      sub_100823690(0);
      v49 = 0;
    }
    else
    {
      sub_100823690(0);
      sub_100823690(v48);

      v49 = 1;
    }
    v67 = *(_QWORD *)(v0 + 336);
    v66 = *(_QWORD *)(v0 + 344);
    v68 = *(_QWORD *)(v0 + 320);
    v69 = *(_QWORD *)(v0 + 304);
    v70 = *(_QWORD *)(v0 + 288);
    v71 = *(_QWORD *)(v0 + 264);
    v72 = type metadata accessor for Notice(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56))(v71, v49, 1, v72);
    swift_task_dealloc(v66);
    swift_task_dealloc(v67);
    swift_task_dealloc(v68);
    swift_task_dealloc(v69);
    swift_task_dealloc(v70);
    v44 = *(uint64_t (**)(void))(v0 + 8);
    return (id)v44();
  }
  v11 = *(_QWORD *)(v0 + 280);
  v12 = *(_DWORD *)(*(_QWORD *)(v0 + 328) + 80);
  *(_DWORD *)(v0 + 544) = v12;
  *(_BYTE *)(v0 + 549) = 0;
  *(_QWORD *)(v0 + 432) = 0;
  *(_QWORD *)(v0 + 440) = 0;
  v13 = *(_QWORD *)(v9 + 16);
  result = v8;
  if (v13)
  {
    sub_10005B704(v9 + ((v12 + 32) & ~(unint64_t)v12), *(_QWORD *)(v0 + 336), type metadata accessor for DragDropToQueue);
    if (v11)
    {
      v15 = *(_QWORD *)(v0 + 336);
      v16 = *(id *)(v0 + 280);
      sub_100823690(0);
      v17 = *(_QWORD *)(v15 + *(int *)(type metadata accessor for DragDropToQueue.Origin(0) + 20));
      v18 = dword_1011D869C;
      v19 = v16;
      v20 = (_QWORD *)swift_task_alloc(v18);
      *(_QWORD *)(v0 + 448) = v20;
      *v20 = v0;
      v20[1] = sub_100820D10;
      return (id)PlaybackController.insert(_:location:)(v17, *(_QWORD *)(v0 + 280));
    }
    v50 = *(unsigned __int8 *)(v0 + 549);
    v51 = *(_QWORD *)(v0 + 336);
    v52 = *(void **)(v51 + *(int *)(type metadata accessor for DragDropToQueue.Origin(0) + 20));
    v53 = (void *)Player.InsertCommand.init(location:playbackIntent:)(2, (uint64_t)v52);
    v55 = v54;
    *(_QWORD *)(v0 + 464) = v53;
    *(_QWORD *)(v0 + 472) = v54;
    v56 = (void *)Player.InsertCommand.init(location:playbackIntent:)(0, (uint64_t)v52);
    v58 = v57;
    *(_QWORD *)(v0 + 480) = v56;
    *(_QWORD *)(v0 + 488) = v57;
    if (v50 == 1)
    {
      *(_QWORD *)(v0 + 240) = &type metadata for Player.InsertCommand;
      *(_QWORD *)(v0 + 248) = &protocol witness table for Player.InsertCommand;
      *(_QWORD *)(v0 + 216) = v53;
      *(_QWORD *)(v0 + 224) = v55;
      v59 = v52;
      v60 = v53;
      sub_100149434(v55);
      v61 = PlaybackController.canPerform(_:)((_QWORD *)(v0 + 216));
      _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 216));
      if (!v61)
      {
        v62 = *(_QWORD *)(v0 + 288);
        *(_QWORD *)(v0 + 160) = &type metadata for Player.InsertCommand;
        *(_QWORD *)(v0 + 168) = &protocol witness table for Player.InsertCommand;
        *(_QWORD *)(v0 + 136) = v60;
        *(_QWORD *)(v0 + 144) = v55;
        v63 = v60;
        v64 = sub_100149434(v55);
        Player.CommandOptions.init()((uint64_t)v64, v62);
        v65 = (_QWORD *)swift_task_alloc(dword_1011D873C);
        *(_QWORD *)(v0 + 496) = v65;
        *v65 = v0;
        v65[1] = sub_1008212B4;
        return (id)PlaybackController.performWhenAvailable(_:options:timeout:)(v0 + 136, *(_QWORD *)(v0 + 288), 1.0);
      }
    }
    else
    {
      v73 = v52;
    }
    *(_QWORD *)(v0 + 80) = &type metadata for Player.InsertCommand;
    *(_QWORD *)(v0 + 88) = &protocol witness table for Player.InsertCommand;
    *(_QWORD *)(v0 + 56) = v53;
    *(_QWORD *)(v0 + 64) = v55;
    v74 = v53;
    sub_100149434(v55);
    v75 = PlaybackController.canPerform(_:)((_QWORD *)(v0 + 56));
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 56));
    if (v75)
    {
      *(_QWORD *)(v0 + 200) = &type metadata for Player.InsertCommand;
      *(_QWORD *)(v0 + 208) = &protocol witness table for Player.InsertCommand;
      *(_QWORD *)(v0 + 176) = v74;
      *(_QWORD *)(v0 + 184) = v55;
      v76 = v74;
      sub_100149434(v55);
      v77 = (_QWORD *)swift_task_alloc(dword_1011D86AC);
      *(_QWORD *)(v0 + 512) = v77;
      *v77 = v0;
      v77[1] = sub_1008218C8;
      v78 = v0 + 176;
      return (id)PlaybackController.perform(_:options:route:intent:)(v78, 0, 0, 0);
    }
    *(_QWORD *)(v0 + 120) = &type metadata for Player.InsertCommand;
    *(_QWORD *)(v0 + 128) = &protocol witness table for Player.InsertCommand;
    *(_QWORD *)(v0 + 96) = v56;
    *(_QWORD *)(v0 + 104) = v58;
    v79 = v56;
    sub_100149434(v58);
    v80 = PlaybackController.canPerform(_:)((_QWORD *)(v0 + 96));
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 96));
    if (v80)
    {
      *(_QWORD *)(v0 + 40) = &type metadata for Player.InsertCommand;
      *(_QWORD *)(v0 + 48) = &protocol witness table for Player.InsertCommand;
      *(_QWORD *)(v0 + 16) = v79;
      *(_QWORD *)(v0 + 24) = v58;
      v81 = v79;
      sub_100149434(v58);
      v82 = (_QWORD *)swift_task_alloc(dword_1011D86AC);
      *(_QWORD *)(v0 + 528) = v82;
      *v82 = v0;
      v82[1] = sub_100821EA8;
      v78 = v0 + 16;
      return (id)PlaybackController.perform(_:options:route:intent:)(v78, 0, 0, 0);
    }
    v83 = *(void **)(v0 + 408);
    v84 = *(void **)(v0 + 400);
    v85 = *(_QWORD *)(v0 + 352);
    v86 = *(_QWORD *)(v0 + 336);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 416));
    swift_release(v85);
    v87 = sub_10082364C();
    swift_allocError(&type metadata for DragDropToQueue.Destination.Error, v87, 0, 0);
    *v88 = 1;
    swift_willThrow(v89);
    sub_100823690(v84);
    sub_100823690(0);

    sub_100823690(v58);
    sub_100823690(v55);
    sub_10005B748(v86, type metadata accessor for DragDropToQueue);
    goto LABEL_20;
  }
  __break(1u);
  return result;
}

uint64_t sub_100820718()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 384);
  *(_QWORD *)(*v1 + 392) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(void **)(v2 + 376);
    swift_bridgeObjectRelease(*(_QWORD *)(v2 + 256));

    v5 = *(_QWORD *)(v2 + 360);
    v6 = *(_QWORD *)(v2 + 368);
    v7 = sub_100822498;
  }
  else
  {

    v5 = *(_QWORD *)(v2 + 360);
    v6 = *(_QWORD *)(v2 + 368);
    v7 = sub_100820794;
  }
  return swift_task_switch(v7, v5, v6);
}

id sub_100820794()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  id result;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  _QWORD *v14;
  uint64_t v15;
  id v16;
  void *v17;
  void *v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  BOOL v31;
  uint64_t v32;
  id v33;
  id v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(void);
  id v44;
  id v45;
  BOOL v46;
  id v47;
  _QWORD *v48;
  uint64_t v49;
  id v50;
  BOOL v51;
  id v52;
  _QWORD *v53;
  void *v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  _BYTE *v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v1 = *(_QWORD *)(v0 + 344);
  sub_10005B748(*(_QWORD *)(v0 + 320), type metadata accessor for PlaybackIntentDescriptor);
  sub_10005B748(v1, type metadata accessor for DragDropToQueue);
  *(_QWORD *)(v0 + 400) = 2;
  sub_100149434((id)2);
  if (qword_10119B8C0 != -1)
    swift_once(&qword_10119B8C0, sub_1000E9774);
  v2 = (void *)qword_10124C798;
  v3 = *(_QWORD *)(v0 + 256);
  *(_QWORD *)(v0 + 408) = qword_10124C798;
  *(_QWORD *)(v0 + 416) = v3;
  v4 = *(_QWORD *)(v3 + 16);
  *(_QWORD *)(v0 + 424) = v4;
  if (!v4)
  {
    v15 = *(_QWORD *)(v0 + 352);
    v16 = v2;
    swift_bridgeObjectRelease(v3);
    swift_release(v15);
    v18 = *(void **)(v0 + 400);
    v17 = *(void **)(v0 + 408);
    if ((*(_BYTE *)(v0 + 548) & 1) != 0)
    {
      Player.InsertCommand.Location.notice.getter(2);
      sub_100823690(v18);

      sub_100823690((id)2);
      v19 = 0;
    }
    else
    {
      sub_100823690((id)2);
      sub_100823690(v18);

      v19 = 1;
    }
    v37 = *(_QWORD *)(v0 + 336);
    v36 = *(_QWORD *)(v0 + 344);
    v38 = *(_QWORD *)(v0 + 320);
    v39 = *(_QWORD *)(v0 + 304);
    v40 = *(_QWORD *)(v0 + 288);
    v41 = *(_QWORD *)(v0 + 264);
    v42 = type metadata accessor for Notice(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v41, v19, 1, v42);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    swift_task_dealloc(v40);
    v43 = *(uint64_t (**)(void))(v0 + 8);
    return (id)v43();
  }
  v5 = *(_QWORD *)(v0 + 280);
  v6 = *(_DWORD *)(*(_QWORD *)(v0 + 328) + 80);
  *(_DWORD *)(v0 + 544) = v6;
  *(_BYTE *)(v0 + 549) = 0;
  *(_OWORD *)(v0 + 432) = xmmword_100EC2D70;
  v7 = *(_QWORD *)(v3 + 16);
  result = v2;
  if (v7)
  {
    sub_10005B704(v3 + ((v6 + 32) & ~(unint64_t)v6), *(_QWORD *)(v0 + 336), type metadata accessor for DragDropToQueue);
    if (v5)
    {
      v9 = *(_QWORD *)(v0 + 336);
      v10 = *(id *)(v0 + 280);
      sub_100823690((id)2);
      v11 = *(_QWORD *)(v9 + *(int *)(type metadata accessor for DragDropToQueue.Origin(0) + 20));
      v12 = dword_1011D869C;
      v13 = v10;
      v14 = (_QWORD *)swift_task_alloc(v12);
      *(_QWORD *)(v0 + 448) = v14;
      *v14 = v0;
      v14[1] = sub_100820D10;
      return (id)PlaybackController.insert(_:location:)(v11, *(_QWORD *)(v0 + 280));
    }
    v20 = *(unsigned __int8 *)(v0 + 549);
    v21 = *(_QWORD *)(v0 + 336);
    v22 = *(void **)(v21 + *(int *)(type metadata accessor for DragDropToQueue.Origin(0) + 20));
    v23 = (void *)Player.InsertCommand.init(location:playbackIntent:)(2, (uint64_t)v22);
    v25 = v24;
    *(_QWORD *)(v0 + 464) = v23;
    *(_QWORD *)(v0 + 472) = v24;
    v26 = (void *)Player.InsertCommand.init(location:playbackIntent:)(0, (uint64_t)v22);
    v28 = v27;
    *(_QWORD *)(v0 + 480) = v26;
    *(_QWORD *)(v0 + 488) = v27;
    if (v20 == 1)
    {
      *(_QWORD *)(v0 + 240) = &type metadata for Player.InsertCommand;
      *(_QWORD *)(v0 + 248) = &protocol witness table for Player.InsertCommand;
      *(_QWORD *)(v0 + 216) = v23;
      *(_QWORD *)(v0 + 224) = v25;
      v29 = v22;
      v30 = v23;
      sub_100149434(v25);
      v31 = PlaybackController.canPerform(_:)((_QWORD *)(v0 + 216));
      _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 216));
      if (!v31)
      {
        v32 = *(_QWORD *)(v0 + 288);
        *(_QWORD *)(v0 + 160) = &type metadata for Player.InsertCommand;
        *(_QWORD *)(v0 + 168) = &protocol witness table for Player.InsertCommand;
        *(_QWORD *)(v0 + 136) = v30;
        *(_QWORD *)(v0 + 144) = v25;
        v33 = v30;
        v34 = sub_100149434(v25);
        Player.CommandOptions.init()((uint64_t)v34, v32);
        v35 = (_QWORD *)swift_task_alloc(dword_1011D873C);
        *(_QWORD *)(v0 + 496) = v35;
        *v35 = v0;
        v35[1] = sub_1008212B4;
        return (id)PlaybackController.performWhenAvailable(_:options:timeout:)(v0 + 136, *(_QWORD *)(v0 + 288), 1.0);
      }
    }
    else
    {
      v44 = v22;
    }
    *(_QWORD *)(v0 + 80) = &type metadata for Player.InsertCommand;
    *(_QWORD *)(v0 + 88) = &protocol witness table for Player.InsertCommand;
    *(_QWORD *)(v0 + 56) = v23;
    *(_QWORD *)(v0 + 64) = v25;
    v45 = v23;
    sub_100149434(v25);
    v46 = PlaybackController.canPerform(_:)((_QWORD *)(v0 + 56));
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 56));
    if (v46)
    {
      *(_QWORD *)(v0 + 200) = &type metadata for Player.InsertCommand;
      *(_QWORD *)(v0 + 208) = &protocol witness table for Player.InsertCommand;
      *(_QWORD *)(v0 + 176) = v45;
      *(_QWORD *)(v0 + 184) = v25;
      v47 = v45;
      sub_100149434(v25);
      v48 = (_QWORD *)swift_task_alloc(dword_1011D86AC);
      *(_QWORD *)(v0 + 512) = v48;
      *v48 = v0;
      v48[1] = sub_1008218C8;
      v49 = v0 + 176;
      return (id)PlaybackController.perform(_:options:route:intent:)(v49, 0, 0, 0);
    }
    *(_QWORD *)(v0 + 120) = &type metadata for Player.InsertCommand;
    *(_QWORD *)(v0 + 128) = &protocol witness table for Player.InsertCommand;
    *(_QWORD *)(v0 + 96) = v26;
    *(_QWORD *)(v0 + 104) = v28;
    v50 = v26;
    sub_100149434(v28);
    v51 = PlaybackController.canPerform(_:)((_QWORD *)(v0 + 96));
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 96));
    if (v51)
    {
      *(_QWORD *)(v0 + 40) = &type metadata for Player.InsertCommand;
      *(_QWORD *)(v0 + 48) = &protocol witness table for Player.InsertCommand;
      *(_QWORD *)(v0 + 16) = v50;
      *(_QWORD *)(v0 + 24) = v28;
      v52 = v50;
      sub_100149434(v28);
      v53 = (_QWORD *)swift_task_alloc(dword_1011D86AC);
      *(_QWORD *)(v0 + 528) = v53;
      *v53 = v0;
      v53[1] = sub_100821EA8;
      v49 = v0 + 16;
      return (id)PlaybackController.perform(_:options:route:intent:)(v49, 0, 0, 0);
    }
    v54 = *(void **)(v0 + 408);
    v55 = *(void **)(v0 + 400);
    v56 = *(_QWORD *)(v0 + 352);
    v57 = *(_QWORD *)(v0 + 336);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 416));
    swift_release(v56);
    v58 = sub_10082364C();
    swift_allocError(&type metadata for DragDropToQueue.Destination.Error, v58, 0, 0);
    *v59 = 1;
    swift_willThrow(v60);
    sub_100823690(v55);
    sub_100823690((id)2);

    sub_100823690(v28);
    sub_100823690(v25);
    sub_10005B748(v57, type metadata accessor for DragDropToQueue);
    v61 = *(_QWORD *)(v0 + 336);
    v62 = *(_QWORD *)(v0 + 320);
    v63 = *(_QWORD *)(v0 + 304);
    v64 = *(_QWORD *)(v0 + 288);
    swift_task_dealloc(*(_QWORD *)(v0 + 344));
    swift_task_dealloc(v61);
    swift_task_dealloc(v62);
    swift_task_dealloc(v63);
    swift_task_dealloc(v64);
    v43 = *(uint64_t (**)(void))(v0 + 8);
    return (id)v43();
  }
  __break(1u);
  return result;
}

uint64_t sub_100820D10()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 448);
  *(_QWORD *)(*v1 + 456) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(void **)(v2 + 280);
    swift_bridgeObjectRelease(*(_QWORD *)(v2 + 416));

    v5 = *(_QWORD *)(v2 + 360);
    v6 = *(_QWORD *)(v2 + 368);
    v7 = sub_100822534;
  }
  else
  {

    v5 = *(_QWORD *)(v2 + 360);
    v6 = *(_QWORD *)(v2 + 368);
    v7 = sub_100820D8C;
  }
  return swift_task_switch(v7, v5, v6);
}

uint64_t sub_100820D8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  void *v3;
  unint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(void);
  int v24;
  uint64_t v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  BOOL v35;
  uint64_t v36;
  id v37;
  id v38;
  _QWORD *v39;
  id v40;
  id v41;
  BOOL v42;
  id v43;
  _QWORD *v44;
  uint64_t v45;
  id v46;
  BOOL v47;
  id v48;
  _QWORD *v49;
  void *v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  _BYTE *v55;
  __n128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v1 = *(_QWORD *)(v0 + 336);

  result = sub_10005B748(v1, type metadata accessor for DragDropToQueue);
  v3 = *(void **)(v0 + 280);
  v4 = *(_QWORD *)(v0 + 440) + 1;
  if (v4 == *(_QWORD *)(v0 + 424))
  {
    v5 = *(_QWORD *)(v0 + 352);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 416));
    swift_release(v5);
    v6 = *(void **)(v0 + 400);
    v7 = *(void **)(v0 + 408);
    if (*(_BYTE *)(v0 + 548) == 1)
    {
      Player.InsertCommand.Location.notice.getter((uint64_t)v3);
      sub_100823690(v6);

      sub_100823690(v3);
      v8 = 0;
    }
    else
    {
      sub_100823690(v3);
      sub_100823690(v6);

      v8 = 1;
    }
    v17 = *(_QWORD *)(v0 + 336);
    v16 = *(_QWORD *)(v0 + 344);
    v18 = *(_QWORD *)(v0 + 320);
    v19 = *(_QWORD *)(v0 + 304);
    v20 = *(_QWORD *)(v0 + 288);
    v21 = *(_QWORD *)(v0 + 264);
    v22 = type metadata accessor for Notice(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, v8, 1, v22);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    v23 = *(uint64_t (**)(void))(v0 + 8);
    return v23();
  }
  *(_QWORD *)(v0 + 432) = v3;
  *(_QWORD *)(v0 + 440) = v4;
  v9 = *(_QWORD *)(v0 + 416);
  if (v4 >= *(_QWORD *)(v9 + 16))
  {
    __break(1u);
  }
  else
  {
    sub_10005B704(v9+ ((*(unsigned __int8 *)(v0 + 544) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 544))+ *(_QWORD *)(*(_QWORD *)(v0 + 328) + 72) * v4, *(_QWORD *)(v0 + 336), type metadata accessor for DragDropToQueue);
    if (v3)
    {
      v10 = *(_QWORD *)(v0 + 336);
      v11 = *(id *)(v0 + 280);
      sub_100823690(v3);
      v12 = *(_QWORD *)(v10 + *(int *)(type metadata accessor for DragDropToQueue.Origin(0) + 20));
      v13 = dword_1011D869C;
      v14 = v11;
      v15 = (_QWORD *)swift_task_alloc(v13);
      *(_QWORD *)(v0 + 448) = v15;
      *v15 = v0;
      v15[1] = sub_100820D10;
      return PlaybackController.insert(_:location:)(v12, *(_QWORD *)(v0 + 280));
    }
    v24 = *(unsigned __int8 *)(v0 + 549);
    v25 = *(_QWORD *)(v0 + 336);
    v26 = *(void **)(v25 + *(int *)(type metadata accessor for DragDropToQueue.Origin(0) + 20));
    v27 = (void *)Player.InsertCommand.init(location:playbackIntent:)(2, (uint64_t)v26);
    v29 = v28;
    *(_QWORD *)(v0 + 464) = v27;
    *(_QWORD *)(v0 + 472) = v28;
    v30 = (void *)Player.InsertCommand.init(location:playbackIntent:)(0, (uint64_t)v26);
    v32 = v31;
    *(_QWORD *)(v0 + 480) = v30;
    *(_QWORD *)(v0 + 488) = v31;
    if (v24 == 1)
    {
      *(_QWORD *)(v0 + 240) = &type metadata for Player.InsertCommand;
      *(_QWORD *)(v0 + 248) = &protocol witness table for Player.InsertCommand;
      *(_QWORD *)(v0 + 216) = v27;
      *(_QWORD *)(v0 + 224) = v29;
      v33 = v26;
      v34 = v27;
      sub_100149434(v29);
      v35 = PlaybackController.canPerform(_:)((_QWORD *)(v0 + 216));
      _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 216));
      if (!v35)
      {
        v36 = *(_QWORD *)(v0 + 288);
        *(_QWORD *)(v0 + 160) = &type metadata for Player.InsertCommand;
        *(_QWORD *)(v0 + 168) = &protocol witness table for Player.InsertCommand;
        *(_QWORD *)(v0 + 136) = v34;
        *(_QWORD *)(v0 + 144) = v29;
        v37 = v34;
        v38 = sub_100149434(v29);
        Player.CommandOptions.init()((uint64_t)v38, v36);
        v39 = (_QWORD *)swift_task_alloc(dword_1011D873C);
        *(_QWORD *)(v0 + 496) = v39;
        *v39 = v0;
        v39[1] = sub_1008212B4;
        return PlaybackController.performWhenAvailable(_:options:timeout:)(v0 + 136, *(_QWORD *)(v0 + 288), 1.0);
      }
    }
    else
    {
      v40 = v26;
    }
    *(_QWORD *)(v0 + 80) = &type metadata for Player.InsertCommand;
    *(_QWORD *)(v0 + 88) = &protocol witness table for Player.InsertCommand;
    *(_QWORD *)(v0 + 56) = v27;
    *(_QWORD *)(v0 + 64) = v29;
    v41 = v27;
    sub_100149434(v29);
    v42 = PlaybackController.canPerform(_:)((_QWORD *)(v0 + 56));
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 56));
    if (v42)
    {
      *(_QWORD *)(v0 + 200) = &type metadata for Player.InsertCommand;
      *(_QWORD *)(v0 + 208) = &protocol witness table for Player.InsertCommand;
      *(_QWORD *)(v0 + 176) = v41;
      *(_QWORD *)(v0 + 184) = v29;
      v43 = v41;
      sub_100149434(v29);
      v44 = (_QWORD *)swift_task_alloc(dword_1011D86AC);
      *(_QWORD *)(v0 + 512) = v44;
      *v44 = v0;
      v44[1] = sub_1008218C8;
      v45 = v0 + 176;
    }
    else
    {
      *(_QWORD *)(v0 + 120) = &type metadata for Player.InsertCommand;
      *(_QWORD *)(v0 + 128) = &protocol witness table for Player.InsertCommand;
      *(_QWORD *)(v0 + 96) = v30;
      *(_QWORD *)(v0 + 104) = v32;
      v46 = v30;
      sub_100149434(v32);
      v47 = PlaybackController.canPerform(_:)((_QWORD *)(v0 + 96));
      _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 96));
      if (!v47)
      {
        v50 = *(void **)(v0 + 408);
        v51 = *(void **)(v0 + 400);
        v52 = *(_QWORD *)(v0 + 352);
        v53 = *(_QWORD *)(v0 + 336);
        swift_bridgeObjectRelease(*(_QWORD *)(v0 + 416));
        swift_release(v52);
        v54 = sub_10082364C();
        swift_allocError(&type metadata for DragDropToQueue.Destination.Error, v54, 0, 0);
        *v55 = 1;
        swift_willThrow(v56);
        sub_100823690(v51);
        sub_100823690(0);

        sub_100823690(v32);
        sub_100823690(v29);
        sub_10005B748(v53, type metadata accessor for DragDropToQueue);
        v57 = *(_QWORD *)(v0 + 336);
        v58 = *(_QWORD *)(v0 + 320);
        v59 = *(_QWORD *)(v0 + 304);
        v60 = *(_QWORD *)(v0 + 288);
        swift_task_dealloc(*(_QWORD *)(v0 + 344));
        swift_task_dealloc(v57);
        swift_task_dealloc(v58);
        swift_task_dealloc(v59);
        swift_task_dealloc(v60);
        v23 = *(uint64_t (**)(void))(v0 + 8);
        return v23();
      }
      *(_QWORD *)(v0 + 40) = &type metadata for Player.InsertCommand;
      *(_QWORD *)(v0 + 48) = &protocol witness table for Player.InsertCommand;
      *(_QWORD *)(v0 + 16) = v46;
      *(_QWORD *)(v0 + 24) = v32;
      v48 = v46;
      sub_100149434(v32);
      v49 = (_QWORD *)swift_task_alloc(dword_1011D86AC);
      *(_QWORD *)(v0 + 528) = v49;
      *v49 = v0;
      v49[1] = sub_100821EA8;
      v45 = v0 + 16;
    }
    return PlaybackController.perform(_:options:route:intent:)(v45, 0, 0, 0);
  }
  return result;
}

uint64_t sub_1008212B4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();
  uint64_t v10;

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 496);
  *(_QWORD *)(*(_QWORD *)v2 + 504) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[52];
    sub_10005B748(v4[36], type metadata accessor for Player.CommandOptions);
    swift_bridgeObjectRelease(v6);
    v7 = v4[45];
    v8 = v4[46];
    v9 = sub_1008225DC;
  }
  else
  {
    v10 = v4[36];

    sub_10005B748(v10, type metadata accessor for Player.CommandOptions);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v4 + 17);
    v7 = v4[45];
    v8 = v4[46];
    v9 = sub_100821364;
  }
  return swift_task_switch(v9, v7, v8);
}

uint64_t sub_100821364()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(void);
  int v31;
  uint64_t v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  id v40;
  id v41;
  BOOL v42;
  uint64_t v43;
  id v44;
  id v45;
  _QWORD *v46;
  id v47;
  id v48;
  BOOL v49;
  uint64_t v50;
  id v51;
  _QWORD *v52;
  uint64_t (*v53)(void *);
  id v54;
  BOOL v55;
  id v56;
  void *v57;
  void *v58;
  uint64_t v59;
  unint64_t v60;
  _BYTE *v61;
  __n128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v1 = *(void **)(v0 + 488);
  v3 = *(void **)(v0 + 464);
  v2 = *(void **)(v0 + 472);
  v4 = *(_QWORD *)(v0 + 440);
  v5 = *(_QWORD *)(v0 + 424);
  v6 = *(_QWORD *)(v0 + 336);

  sub_100823690(v1);
  sub_100823690(v2);
  result = sub_10005B748(v6, type metadata accessor for DragDropToQueue);
  if (v4 + 1 == v5)
  {
    v8 = *(_QWORD *)(v0 + 352);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 416));
    swift_release(v8);
    v9 = *(void **)(v0 + 432);
    v10 = *(void **)(v0 + 400);
    v11 = *(void **)(v0 + 408);
    if ((*(_BYTE *)(v0 + 548) & 1) != 0)
    {
      Player.InsertCommand.Location.notice.getter(*(_QWORD *)(v0 + 432));
      sub_100823690(v10);

      sub_100823690(v9);
      v12 = 0;
    }
    else
    {
      sub_100823690(*(id *)(v0 + 432));
      sub_100823690(v10);

      v12 = 1;
    }
    v24 = *(_QWORD *)(v0 + 336);
    v23 = *(_QWORD *)(v0 + 344);
    v25 = *(_QWORD *)(v0 + 320);
    v26 = *(_QWORD *)(v0 + 304);
    v27 = *(_QWORD *)(v0 + 288);
    v28 = *(_QWORD *)(v0 + 264);
    v29 = type metadata accessor for Notice(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, v12, 1, v29);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    v30 = *(uint64_t (**)(void))(v0 + 8);
    return v30();
  }
  v13 = *(void **)(v0 + 432);
  v14 = *(_QWORD *)(v0 + 440) + 1;
  *(_BYTE *)(v0 + 549) = 1;
  *(_QWORD *)(v0 + 440) = v14;
  v15 = *(_QWORD *)(v0 + 416);
  if (v14 >= *(_QWORD *)(v15 + 16))
  {
    __break(1u);
  }
  else
  {
    v16 = *(_QWORD *)(v0 + 280);
    sub_10005B704(v15+ ((*(unsigned __int8 *)(v0 + 544) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 544))+ *(_QWORD *)(*(_QWORD *)(v0 + 328) + 72) * v14, *(_QWORD *)(v0 + 336), type metadata accessor for DragDropToQueue);
    if (v16)
    {
      v17 = *(_QWORD *)(v0 + 336);
      v18 = *(id *)(v0 + 280);
      sub_100823690(v13);
      v19 = *(_QWORD *)(v17 + *(int *)(type metadata accessor for DragDropToQueue.Origin(0) + 20));
      v20 = dword_1011D869C;
      v21 = v18;
      v22 = (_QWORD *)swift_task_alloc(v20);
      *(_QWORD *)(v0 + 448) = v22;
      *v22 = v0;
      v22[1] = sub_100820D10;
      return PlaybackController.insert(_:location:)(v19, *(_QWORD *)(v0 + 280));
    }
    v31 = *(unsigned __int8 *)(v0 + 549);
    v32 = *(_QWORD *)(v0 + 336);
    v33 = *(void **)(v32 + *(int *)(type metadata accessor for DragDropToQueue.Origin(0) + 20));
    v34 = (void *)Player.InsertCommand.init(location:playbackIntent:)(2, (uint64_t)v33);
    v36 = v35;
    *(_QWORD *)(v0 + 464) = v34;
    *(_QWORD *)(v0 + 472) = v35;
    v37 = (void *)Player.InsertCommand.init(location:playbackIntent:)(0, (uint64_t)v33);
    v39 = v38;
    *(_QWORD *)(v0 + 480) = v37;
    *(_QWORD *)(v0 + 488) = v38;
    if (v31 == 1)
    {
      *(_QWORD *)(v0 + 240) = &type metadata for Player.InsertCommand;
      *(_QWORD *)(v0 + 248) = &protocol witness table for Player.InsertCommand;
      *(_QWORD *)(v0 + 216) = v34;
      *(_QWORD *)(v0 + 224) = v36;
      v40 = v33;
      v41 = v34;
      sub_100149434(v36);
      v42 = PlaybackController.canPerform(_:)((_QWORD *)(v0 + 216));
      _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 216));
      if (!v42)
      {
        v43 = *(_QWORD *)(v0 + 288);
        *(_QWORD *)(v0 + 160) = &type metadata for Player.InsertCommand;
        *(_QWORD *)(v0 + 168) = &protocol witness table for Player.InsertCommand;
        *(_QWORD *)(v0 + 136) = v41;
        *(_QWORD *)(v0 + 144) = v36;
        v44 = v41;
        v45 = sub_100149434(v36);
        Player.CommandOptions.init()((uint64_t)v45, v43);
        v46 = (_QWORD *)swift_task_alloc(dword_1011D873C);
        *(_QWORD *)(v0 + 496) = v46;
        *v46 = v0;
        v46[1] = sub_1008212B4;
        return PlaybackController.performWhenAvailable(_:options:timeout:)(v0 + 136, *(_QWORD *)(v0 + 288), 1.0);
      }
    }
    else
    {
      v47 = v33;
    }
    *(_QWORD *)(v0 + 80) = &type metadata for Player.InsertCommand;
    *(_QWORD *)(v0 + 88) = &protocol witness table for Player.InsertCommand;
    *(_QWORD *)(v0 + 56) = v34;
    *(_QWORD *)(v0 + 64) = v36;
    v48 = v34;
    sub_100149434(v36);
    v49 = PlaybackController.canPerform(_:)((_QWORD *)(v0 + 56));
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 56));
    if (v49)
    {
      *(_QWORD *)(v0 + 200) = &type metadata for Player.InsertCommand;
      *(_QWORD *)(v0 + 208) = &protocol witness table for Player.InsertCommand;
      *(_QWORD *)(v0 + 176) = v48;
      v50 = v0 + 176;
      *(_QWORD *)(v0 + 184) = v36;
      v51 = v48;
      sub_100149434(v36);
      v52 = (_QWORD *)swift_task_alloc(dword_1011D86AC);
      *(_QWORD *)(v0 + 512) = v52;
      v53 = sub_1008218C8;
    }
    else
    {
      *(_QWORD *)(v0 + 120) = &type metadata for Player.InsertCommand;
      *(_QWORD *)(v0 + 128) = &protocol witness table for Player.InsertCommand;
      *(_QWORD *)(v0 + 96) = v37;
      *(_QWORD *)(v0 + 104) = v39;
      v54 = v37;
      sub_100149434(v39);
      v55 = PlaybackController.canPerform(_:)((_QWORD *)(v0 + 96));
      _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 96));
      if (!v55)
      {
        v57 = *(void **)(v0 + 408);
        v58 = *(void **)(v0 + 400);
        v59 = *(_QWORD *)(v0 + 352);
        v67 = *(_QWORD *)(v0 + 336);
        swift_bridgeObjectRelease(*(_QWORD *)(v0 + 416));
        swift_release(v59);
        v60 = sub_10082364C();
        swift_allocError(&type metadata for DragDropToQueue.Destination.Error, v60, 0, 0);
        *v61 = 1;
        swift_willThrow(v62);
        sub_100823690(v58);
        sub_100823690(v13);

        sub_100823690(v39);
        sub_100823690(v36);
        sub_10005B748(v67, type metadata accessor for DragDropToQueue);
        v63 = *(_QWORD *)(v0 + 336);
        v64 = *(_QWORD *)(v0 + 320);
        v65 = *(_QWORD *)(v0 + 304);
        v66 = *(_QWORD *)(v0 + 288);
        swift_task_dealloc(*(_QWORD *)(v0 + 344));
        swift_task_dealloc(v63);
        swift_task_dealloc(v64);
        swift_task_dealloc(v65);
        swift_task_dealloc(v66);
        v30 = *(uint64_t (**)(void))(v0 + 8);
        return v30();
      }
      *(_QWORD *)(v0 + 40) = &type metadata for Player.InsertCommand;
      *(_QWORD *)(v0 + 48) = &protocol witness table for Player.InsertCommand;
      *(_QWORD *)(v0 + 16) = v54;
      v50 = v0 + 16;
      *(_QWORD *)(v0 + 24) = v39;
      v56 = v54;
      sub_100149434(v39);
      v52 = (_QWORD *)swift_task_alloc(dword_1011D86AC);
      *(_QWORD *)(v0 + 528) = v52;
      v53 = sub_100821EA8;
    }
    *v52 = v0;
    v52[1] = v53;
    return PlaybackController.perform(_:options:route:intent:)(v50, 0, 0, 0);
  }
  return result;
}

uint64_t sub_1008218C8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 512);
  *(_QWORD *)(*(_QWORD *)v2 + 520) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    swift_bridgeObjectRelease(v4[52]);
    v6 = v4[45];
    v7 = v4[46];
    v8 = sub_1008226C0;
  }
  else
  {

    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v4 + 22);
    v6 = v4[45];
    v7 = v4[46];
    v8 = sub_100821950;
  }
  return swift_task_switch(v8, v6, v7);
}

void sub_100821950()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(void);
  int v27;
  uint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  id v36;
  id v37;
  BOOL v38;
  uint64_t v39;
  id v40;
  id v41;
  _QWORD *v42;
  id v43;
  id v44;
  BOOL v45;
  uint64_t v46;
  id v47;
  _QWORD *v48;
  uint64_t (*v49)(void *);
  id v50;
  BOOL v51;
  id v52;
  void *v53;
  void *v54;
  uint64_t v55;
  unint64_t v56;
  _BYTE *v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v2 = *(void **)(v0 + 480);
  v1 = *(void **)(v0 + 488);
  v3 = *(void **)(v0 + 464);
  v4 = *(_QWORD *)(v0 + 336);
  sub_100823690(*(id *)(v0 + 432));

  sub_100823690(v1);
  sub_10005B748(v4, type metadata accessor for DragDropToQueue);

  v5 = *(void **)(v0 + 472);
  v6 = *(_QWORD *)(v0 + 440) + 1;
  if (v6 == *(_QWORD *)(v0 + 424))
  {
    v7 = *(_QWORD *)(v0 + 352);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 416));
    swift_release(v7);
    v8 = *(void **)(v0 + 400);
    v9 = *(void **)(v0 + 408);
    if (*(_BYTE *)(v0 + 548) == 1)
    {
      Player.InsertCommand.Location.notice.getter((uint64_t)v5);
      sub_100823690(v8);

      sub_100823690(v5);
      v10 = 0;
    }
    else
    {
      sub_100823690(v5);
      sub_100823690(v8);

      v10 = 1;
    }
    v20 = *(_QWORD *)(v0 + 336);
    v19 = *(_QWORD *)(v0 + 344);
    v21 = *(_QWORD *)(v0 + 320);
    v22 = *(_QWORD *)(v0 + 304);
    v23 = *(_QWORD *)(v0 + 288);
    v24 = *(_QWORD *)(v0 + 264);
    v25 = type metadata accessor for Notice(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v24, v10, 1, v25);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    v26 = *(void (**)(void))(v0 + 8);
    goto LABEL_9;
  }
  *(_QWORD *)(v0 + 432) = v5;
  *(_QWORD *)(v0 + 440) = v6;
  v11 = *(_QWORD *)(v0 + 416);
  if (v6 >= *(_QWORD *)(v11 + 16))
  {
    __break(1u);
  }
  else
  {
    v12 = *(_QWORD *)(v0 + 280);
    sub_10005B704(v11+ ((*(unsigned __int8 *)(v0 + 544) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 544))+ *(_QWORD *)(*(_QWORD *)(v0 + 328) + 72) * v6, *(_QWORD *)(v0 + 336), type metadata accessor for DragDropToQueue);
    if (v12)
    {
      v13 = *(_QWORD *)(v0 + 336);
      v14 = *(id *)(v0 + 280);
      sub_100823690(v5);
      v15 = *(_QWORD *)(v13 + *(int *)(type metadata accessor for DragDropToQueue.Origin(0) + 20));
      v16 = dword_1011D869C;
      v17 = v14;
      v18 = (_QWORD *)swift_task_alloc(v16);
      *(_QWORD *)(v0 + 448) = v18;
      *v18 = v0;
      v18[1] = sub_100820D10;
      PlaybackController.insert(_:location:)(v15, *(_QWORD *)(v0 + 280));
      return;
    }
    v27 = *(unsigned __int8 *)(v0 + 549);
    v28 = *(_QWORD *)(v0 + 336);
    v29 = *(void **)(v28 + *(int *)(type metadata accessor for DragDropToQueue.Origin(0) + 20));
    v30 = (void *)Player.InsertCommand.init(location:playbackIntent:)(2, (uint64_t)v29);
    v32 = v31;
    *(_QWORD *)(v0 + 464) = v30;
    *(_QWORD *)(v0 + 472) = v31;
    v33 = (void *)Player.InsertCommand.init(location:playbackIntent:)(0, (uint64_t)v29);
    v35 = v34;
    *(_QWORD *)(v0 + 480) = v33;
    *(_QWORD *)(v0 + 488) = v34;
    if (v27 == 1)
    {
      *(_QWORD *)(v0 + 240) = &type metadata for Player.InsertCommand;
      *(_QWORD *)(v0 + 248) = &protocol witness table for Player.InsertCommand;
      *(_QWORD *)(v0 + 216) = v30;
      *(_QWORD *)(v0 + 224) = v32;
      v36 = v29;
      v37 = v30;
      sub_100149434(v32);
      v38 = PlaybackController.canPerform(_:)((_QWORD *)(v0 + 216));
      _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 216));
      if (!v38)
      {
        v39 = *(_QWORD *)(v0 + 288);
        *(_QWORD *)(v0 + 160) = &type metadata for Player.InsertCommand;
        *(_QWORD *)(v0 + 168) = &protocol witness table for Player.InsertCommand;
        *(_QWORD *)(v0 + 136) = v37;
        *(_QWORD *)(v0 + 144) = v32;
        v40 = v37;
        v41 = sub_100149434(v32);
        Player.CommandOptions.init()((uint64_t)v41, v39);
        v42 = (_QWORD *)swift_task_alloc(dword_1011D873C);
        *(_QWORD *)(v0 + 496) = v42;
        *v42 = v0;
        v42[1] = sub_1008212B4;
        PlaybackController.performWhenAvailable(_:options:timeout:)(v0 + 136, *(_QWORD *)(v0 + 288), 1.0);
        return;
      }
    }
    else
    {
      v43 = v29;
    }
    *(_QWORD *)(v0 + 80) = &type metadata for Player.InsertCommand;
    *(_QWORD *)(v0 + 88) = &protocol witness table for Player.InsertCommand;
    *(_QWORD *)(v0 + 56) = v30;
    *(_QWORD *)(v0 + 64) = v32;
    v44 = v30;
    sub_100149434(v32);
    v45 = PlaybackController.canPerform(_:)((_QWORD *)(v0 + 56));
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 56));
    if (v45)
    {
      *(_QWORD *)(v0 + 200) = &type metadata for Player.InsertCommand;
      *(_QWORD *)(v0 + 208) = &protocol witness table for Player.InsertCommand;
      *(_QWORD *)(v0 + 176) = v44;
      v46 = v0 + 176;
      *(_QWORD *)(v0 + 184) = v32;
      v47 = v44;
      sub_100149434(v32);
      v48 = (_QWORD *)swift_task_alloc(dword_1011D86AC);
      *(_QWORD *)(v0 + 512) = v48;
      v49 = (uint64_t (*)(void *))sub_1008218C8;
    }
    else
    {
      *(_QWORD *)(v0 + 120) = &type metadata for Player.InsertCommand;
      *(_QWORD *)(v0 + 128) = &protocol witness table for Player.InsertCommand;
      *(_QWORD *)(v0 + 96) = v33;
      *(_QWORD *)(v0 + 104) = v35;
      v50 = v33;
      sub_100149434(v35);
      v51 = PlaybackController.canPerform(_:)((_QWORD *)(v0 + 96));
      _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 96));
      if (!v51)
      {
        v53 = *(void **)(v0 + 408);
        v54 = *(void **)(v0 + 400);
        v55 = *(_QWORD *)(v0 + 352);
        v63 = *(_QWORD *)(v0 + 336);
        swift_bridgeObjectRelease(*(_QWORD *)(v0 + 416));
        swift_release(v55);
        v56 = sub_10082364C();
        swift_allocError(&type metadata for DragDropToQueue.Destination.Error, v56, 0, 0);
        *v57 = 1;
        swift_willThrow(v58);
        sub_100823690(v54);
        sub_100823690(v5);

        sub_100823690(v35);
        sub_100823690(v32);
        sub_10005B748(v63, type metadata accessor for DragDropToQueue);
        v59 = *(_QWORD *)(v0 + 336);
        v60 = *(_QWORD *)(v0 + 320);
        v61 = *(_QWORD *)(v0 + 304);
        v62 = *(_QWORD *)(v0 + 288);
        swift_task_dealloc(*(_QWORD *)(v0 + 344));
        swift_task_dealloc(v59);
        swift_task_dealloc(v60);
        swift_task_dealloc(v61);
        swift_task_dealloc(v62);
        v26 = *(void (**)(void))(v0 + 8);
LABEL_9:
        v26();
        return;
      }
      *(_QWORD *)(v0 + 40) = &type metadata for Player.InsertCommand;
      *(_QWORD *)(v0 + 48) = &protocol witness table for Player.InsertCommand;
      *(_QWORD *)(v0 + 16) = v50;
      v46 = v0 + 16;
      *(_QWORD *)(v0 + 24) = v35;
      v52 = v50;
      sub_100149434(v35);
      v48 = (_QWORD *)swift_task_alloc(dword_1011D86AC);
      *(_QWORD *)(v0 + 528) = v48;
      v49 = sub_100821EA8;
    }
    *v48 = v0;
    v48[1] = v49;
    PlaybackController.perform(_:options:route:intent:)(v46, 0, 0, 0);
  }
}

uint64_t sub_100821EA8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 528);
  *(_QWORD *)(*(_QWORD *)v2 + 536) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    swift_bridgeObjectRelease(v4[52]);
    v6 = v4[45];
    v7 = v4[46];
    v8 = sub_1008227A4;
  }
  else
  {

    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v4 + 2);
    v6 = v4[45];
    v7 = v4[46];
    v8 = sub_100821F30;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_100821F30()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(void);
  int v31;
  uint64_t v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  id v40;
  id v41;
  BOOL v42;
  uint64_t v43;
  id v44;
  id v45;
  _QWORD *v46;
  id v47;
  id v48;
  BOOL v49;
  uint64_t v50;
  id v51;
  _QWORD *v52;
  uint64_t (*v53)();
  id v54;
  BOOL v55;
  id v56;
  void *v57;
  void *v58;
  uint64_t v59;
  unint64_t v60;
  _BYTE *v61;
  __n128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v2 = *(void **)(v0 + 480);
  v1 = *(void **)(v0 + 488);
  v3 = *(void **)(v0 + 464);
  v4 = *(_QWORD *)(v0 + 424);
  v5 = *(_QWORD *)(v0 + 336);
  v6 = *(_QWORD *)(v0 + 440) + 1;
  sub_100823690(*(id *)(v0 + 432));

  sub_100823690(v1);
  result = sub_10005B748(v5, type metadata accessor for DragDropToQueue);
  if (v6 == v4)
  {
    v8 = *(_QWORD *)(v0 + 352);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 416));
    swift_release(v8);
    v9 = *(void **)(v0 + 472);
    v10 = *(void **)(v0 + 400);
    v11 = *(void **)(v0 + 408);
    if (*(_BYTE *)(v0 + 548) == 1)
    {
      Player.InsertCommand.Location.notice.getter(*(_QWORD *)(v0 + 472));
      sub_100823690(v10);

      sub_100823690(v9);
      v12 = 0;
    }
    else
    {
      sub_100823690(*(id *)(v0 + 472));
      sub_100823690(v10);

      v12 = 1;
    }
    v24 = *(_QWORD *)(v0 + 336);
    v23 = *(_QWORD *)(v0 + 344);
    v25 = *(_QWORD *)(v0 + 320);
    v26 = *(_QWORD *)(v0 + 304);
    v27 = *(_QWORD *)(v0 + 288);
    v28 = *(_QWORD *)(v0 + 264);
    v29 = type metadata accessor for Notice(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, v12, 1, v29);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    v30 = *(uint64_t (**)(void))(v0 + 8);
    return v30();
  }
  v13 = *(void **)(v0 + 472);
  v14 = *(_QWORD *)(v0 + 440) + 1;
  *(_BYTE *)(v0 + 549) = 1;
  *(_QWORD *)(v0 + 432) = v13;
  *(_QWORD *)(v0 + 440) = v14;
  v15 = *(_QWORD *)(v0 + 416);
  if (v14 >= *(_QWORD *)(v15 + 16))
  {
    __break(1u);
  }
  else
  {
    v16 = *(_QWORD *)(v0 + 280);
    sub_10005B704(v15+ ((*(unsigned __int8 *)(v0 + 544) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 544))+ *(_QWORD *)(*(_QWORD *)(v0 + 328) + 72) * v14, *(_QWORD *)(v0 + 336), type metadata accessor for DragDropToQueue);
    if (v16)
    {
      v17 = *(_QWORD *)(v0 + 336);
      v18 = *(id *)(v0 + 280);
      sub_100823690(v13);
      v19 = *(_QWORD *)(v17 + *(int *)(type metadata accessor for DragDropToQueue.Origin(0) + 20));
      v20 = dword_1011D869C;
      v21 = v18;
      v22 = (_QWORD *)swift_task_alloc(v20);
      *(_QWORD *)(v0 + 448) = v22;
      *v22 = v0;
      v22[1] = sub_100820D10;
      return PlaybackController.insert(_:location:)(v19, *(_QWORD *)(v0 + 280));
    }
    v31 = *(unsigned __int8 *)(v0 + 549);
    v32 = *(_QWORD *)(v0 + 336);
    v33 = *(void **)(v32 + *(int *)(type metadata accessor for DragDropToQueue.Origin(0) + 20));
    v34 = (void *)Player.InsertCommand.init(location:playbackIntent:)(2, (uint64_t)v33);
    v36 = v35;
    *(_QWORD *)(v0 + 464) = v34;
    *(_QWORD *)(v0 + 472) = v35;
    v37 = (void *)Player.InsertCommand.init(location:playbackIntent:)(0, (uint64_t)v33);
    v39 = v38;
    *(_QWORD *)(v0 + 480) = v37;
    *(_QWORD *)(v0 + 488) = v38;
    if (v31 == 1)
    {
      *(_QWORD *)(v0 + 240) = &type metadata for Player.InsertCommand;
      *(_QWORD *)(v0 + 248) = &protocol witness table for Player.InsertCommand;
      *(_QWORD *)(v0 + 216) = v34;
      *(_QWORD *)(v0 + 224) = v36;
      v40 = v33;
      v41 = v34;
      sub_100149434(v36);
      v42 = PlaybackController.canPerform(_:)((_QWORD *)(v0 + 216));
      _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 216));
      if (!v42)
      {
        v43 = *(_QWORD *)(v0 + 288);
        *(_QWORD *)(v0 + 160) = &type metadata for Player.InsertCommand;
        *(_QWORD *)(v0 + 168) = &protocol witness table for Player.InsertCommand;
        *(_QWORD *)(v0 + 136) = v41;
        *(_QWORD *)(v0 + 144) = v36;
        v44 = v41;
        v45 = sub_100149434(v36);
        Player.CommandOptions.init()((uint64_t)v45, v43);
        v46 = (_QWORD *)swift_task_alloc(dword_1011D873C);
        *(_QWORD *)(v0 + 496) = v46;
        *v46 = v0;
        v46[1] = sub_1008212B4;
        return PlaybackController.performWhenAvailable(_:options:timeout:)(v0 + 136, *(_QWORD *)(v0 + 288), 1.0);
      }
    }
    else
    {
      v47 = v33;
    }
    *(_QWORD *)(v0 + 80) = &type metadata for Player.InsertCommand;
    *(_QWORD *)(v0 + 88) = &protocol witness table for Player.InsertCommand;
    *(_QWORD *)(v0 + 56) = v34;
    *(_QWORD *)(v0 + 64) = v36;
    v48 = v34;
    sub_100149434(v36);
    v49 = PlaybackController.canPerform(_:)((_QWORD *)(v0 + 56));
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 56));
    if (v49)
    {
      *(_QWORD *)(v0 + 200) = &type metadata for Player.InsertCommand;
      *(_QWORD *)(v0 + 208) = &protocol witness table for Player.InsertCommand;
      *(_QWORD *)(v0 + 176) = v48;
      v50 = v0 + 176;
      *(_QWORD *)(v0 + 184) = v36;
      v51 = v48;
      sub_100149434(v36);
      v52 = (_QWORD *)swift_task_alloc(dword_1011D86AC);
      *(_QWORD *)(v0 + 512) = v52;
      v53 = sub_1008218C8;
    }
    else
    {
      *(_QWORD *)(v0 + 120) = &type metadata for Player.InsertCommand;
      *(_QWORD *)(v0 + 128) = &protocol witness table for Player.InsertCommand;
      *(_QWORD *)(v0 + 96) = v37;
      *(_QWORD *)(v0 + 104) = v39;
      v54 = v37;
      sub_100149434(v39);
      v55 = PlaybackController.canPerform(_:)((_QWORD *)(v0 + 96));
      _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 96));
      if (!v55)
      {
        v57 = *(void **)(v0 + 408);
        v58 = *(void **)(v0 + 400);
        v59 = *(_QWORD *)(v0 + 352);
        v67 = *(_QWORD *)(v0 + 336);
        swift_bridgeObjectRelease(*(_QWORD *)(v0 + 416));
        swift_release(v59);
        v60 = sub_10082364C();
        swift_allocError(&type metadata for DragDropToQueue.Destination.Error, v60, 0, 0);
        *v61 = 1;
        swift_willThrow(v62);
        sub_100823690(v58);
        sub_100823690(v13);

        sub_100823690(v39);
        sub_100823690(v36);
        sub_10005B748(v67, type metadata accessor for DragDropToQueue);
        v63 = *(_QWORD *)(v0 + 336);
        v64 = *(_QWORD *)(v0 + 320);
        v65 = *(_QWORD *)(v0 + 304);
        v66 = *(_QWORD *)(v0 + 288);
        swift_task_dealloc(*(_QWORD *)(v0 + 344));
        swift_task_dealloc(v63);
        swift_task_dealloc(v64);
        swift_task_dealloc(v65);
        swift_task_dealloc(v66);
        v30 = *(uint64_t (**)(void))(v0 + 8);
        return v30();
      }
      *(_QWORD *)(v0 + 40) = &type metadata for Player.InsertCommand;
      *(_QWORD *)(v0 + 48) = &protocol witness table for Player.InsertCommand;
      *(_QWORD *)(v0 + 16) = v54;
      v50 = v0 + 16;
      *(_QWORD *)(v0 + 24) = v39;
      v56 = v54;
      sub_100149434(v39);
      v52 = (_QWORD *)swift_task_alloc(dword_1011D86AC);
      *(_QWORD *)(v0 + 528) = v52;
      v53 = sub_100821EA8;
    }
    *v52 = v0;
    v52[1] = v53;
    return PlaybackController.perform(_:options:route:intent:)(v50, 0, 0, 0);
  }
  return result;
}

uint64_t sub_100822498()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 344);
  v2 = *(_QWORD *)(v0 + 320);
  swift_release(*(_QWORD *)(v0 + 352));
  sub_10005B748(v2, type metadata accessor for PlaybackIntentDescriptor);
  sub_10005B748(v1, type metadata accessor for DragDropToQueue);
  v3 = *(_QWORD *)(v0 + 336);
  v4 = *(_QWORD *)(v0 + 320);
  v5 = *(_QWORD *)(v0 + 304);
  v6 = *(_QWORD *)(v0 + 288);
  swift_task_dealloc(*(_QWORD *)(v0 + 344));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100822534()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(void **)(v0 + 408);
  v2 = *(_QWORD *)(v0 + 352);
  v3 = *(_QWORD *)(v0 + 336);
  v4 = *(void **)(v0 + 280);
  sub_100823690(*(id *)(v0 + 400));

  swift_release(v2);
  sub_10005B748(v3, type metadata accessor for DragDropToQueue);
  v5 = *(_QWORD *)(v0 + 336);
  v6 = *(_QWORD *)(v0 + 320);
  v7 = *(_QWORD *)(v0 + 304);
  v8 = *(_QWORD *)(v0 + 288);
  swift_task_dealloc(*(_QWORD *)(v0 + 344));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1008225DC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *(void **)(v0 + 480);
  v1 = *(void **)(v0 + 488);
  v4 = *(void **)(v0 + 464);
  v3 = *(void **)(v0 + 472);
  v5 = *(void **)(v0 + 432);
  v6 = *(void **)(v0 + 408);
  v7 = *(_QWORD *)(v0 + 352);
  v8 = *(_QWORD *)(v0 + 336);
  sub_100823690(*(id *)(v0 + 400));
  sub_100823690(v5);

  sub_100823690(v1);
  swift_release(v7);

  sub_100823690(v3);
  sub_10005B748(v8, type metadata accessor for DragDropToQueue);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 136));
  v9 = *(_QWORD *)(v0 + 336);
  v10 = *(_QWORD *)(v0 + 320);
  v11 = *(_QWORD *)(v0 + 304);
  v12 = *(_QWORD *)(v0 + 288);
  swift_task_dealloc(*(_QWORD *)(v0 + 344));
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1008226C0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *(void **)(v0 + 480);
  v1 = *(void **)(v0 + 488);
  v4 = *(void **)(v0 + 464);
  v3 = *(void **)(v0 + 472);
  v5 = *(void **)(v0 + 432);
  v6 = *(void **)(v0 + 408);
  v7 = *(_QWORD *)(v0 + 352);
  v8 = *(_QWORD *)(v0 + 336);
  sub_100823690(*(id *)(v0 + 400));
  sub_100823690(v5);

  sub_100823690(v1);
  swift_release(v7);

  sub_100823690(v3);
  sub_10005B748(v8, type metadata accessor for DragDropToQueue);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 176));
  v9 = *(_QWORD *)(v0 + 336);
  v10 = *(_QWORD *)(v0 + 320);
  v11 = *(_QWORD *)(v0 + 304);
  v12 = *(_QWORD *)(v0 + 288);
  swift_task_dealloc(*(_QWORD *)(v0 + 344));
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1008227A4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *(void **)(v0 + 480);
  v1 = *(void **)(v0 + 488);
  v4 = *(void **)(v0 + 464);
  v3 = *(void **)(v0 + 472);
  v5 = *(void **)(v0 + 432);
  v6 = *(void **)(v0 + 408);
  v7 = *(_QWORD *)(v0 + 352);
  v8 = *(_QWORD *)(v0 + 336);
  sub_100823690(*(id *)(v0 + 400));
  sub_100823690(v5);

  sub_100823690(v1);
  swift_release(v7);

  sub_100823690(v3);
  sub_10005B748(v8, type metadata accessor for DragDropToQueue);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 16));
  v9 = *(_QWORD *)(v0 + 336);
  v10 = *(_QWORD *)(v0 + 320);
  v11 = *(_QWORD *)(v0 + 304);
  v12 = *(_QWORD *)(v0 + 288);
  swift_task_dealloc(*(_QWORD *)(v0 + 344));
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100822888(uint64_t a1, id a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = objc_msgSend(a2, "tracklist");
  v6 = objc_msgSend(v5, "uniqueIdentifier");

  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v9 = v8;

  String.hash(into:)(a1, v7, v9);
  swift_bridgeObjectRelease(v9);
  if (a3)
  {
    v10 = objc_msgSend(a3, "contentItemIdentifier");
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v13 = v12;

    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v13);
    String.hash(into:)(a1, v11, v13);
    swift_bridgeObjectRelease_n(v13, 2);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
}

Swift::Int sub_100822988()
{
  uint64_t v0;
  void *v1;
  void *v2;
  _QWORD v4[9];

  v1 = *(void **)v0;
  v2 = *(void **)(v0 + 8);
  Hasher.init(_seed:)(v4, 0);
  sub_100822888((uint64_t)v4, v1, v2);
  return Hasher._finalize()();
}

void sub_1008229D4(uint64_t a1)
{
  id *v1;

  sub_100822888(a1, *v1, v1[1]);
}

Swift::Int sub_1008229E0(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  _QWORD v5[9];

  v2 = *(void **)v1;
  v3 = *(void **)(v1 + 8);
  Hasher.init(_seed:)(v5, a1);
  sub_100822888((uint64_t)v5, v2, v3);
  return Hasher._finalize()();
}

uint64_t sub_100822A28(void **a1, void **a2)
{
  return sub_100822B8C(*a1, a1[1], *a2, a2[1]);
}

unint64_t sub_100822A40()
{
  unint64_t result;

  result = qword_1011CB320;
  if (!qword_1011CB320)
  {
    result = swift_getWitnessTable(&unk_100ED2000, &type metadata for DragDropToQueue.Destination);
    atomic_store(result, (unint64_t *)&qword_1011CB320);
  }
  return result;
}

uint64_t sub_100822A84()
{
  return sub_100048748(&qword_1011CB328, type metadata accessor for DragDropToQueue, (uint64_t)&unk_100ED2094);
}

unint64_t sub_100822AB0(uint64_t a1)
{
  unint64_t result;

  result = sub_100822AD4();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_100822AD4()
{
  unint64_t result;

  result = qword_1011CB370;
  if (!qword_1011CB370)
  {
    result = swift_getWitnessTable(&unk_100ED2028, &type metadata for DragDropToQueue.Destination);
    atomic_store(result, (unint64_t *)&qword_1011CB370);
  }
  return result;
}

unint64_t sub_100822B1C()
{
  unint64_t result;

  result = qword_1011CB378;
  if (!qword_1011CB378)
  {
    result = swift_getWitnessTable(&unk_100ED2068, &type metadata for DragDropToQueue.Destination);
    atomic_store(result, (unint64_t *)&qword_1011CB378);
  }
  return result;
}

uint64_t sub_100822B60()
{
  return sub_100048748(&qword_1011CB380, type metadata accessor for DragDropToQueue.Origin, (uint64_t)&unk_100ED1FD4);
}

uint64_t sub_100822B8C(void *a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  char v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v7 = objc_msgSend(a1, "tracklist");
  v8 = objc_msgSend(v7, "uniqueIdentifier");

  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v11 = v10;

  v12 = objc_msgSend(a3, "tracklist");
  v13 = objc_msgSend(v12, "uniqueIdentifier");

  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v16 = v15;

  if (v9 == v14 && v11 == v16)
  {
    swift_bridgeObjectRelease_n(v11, 2);
    if (a2)
    {
LABEL_7:
      v20 = objc_msgSend(a2, "contentItemIdentifier");
      v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
      v23 = v22;

      if (!a4)
      {
        if (!v23)
          goto LABEL_21;
LABEL_18:
        v19 = 0;
        v27 = v23;
LABEL_23:
        swift_bridgeObjectRelease(v27);
        return v19 & 1;
      }
      goto LABEL_13;
    }
LABEL_11:
    if (!a4)
      goto LABEL_21;
    v23 = 0;
    v21 = 0;
LABEL_13:
    v24 = objc_msgSend(a4, "contentItemIdentifier");
    v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
    v27 = v26;

    if (v23)
    {
      if (v27)
      {
        if (v21 == v25 && v23 == v27)
        {
          swift_bridgeObjectRelease(v23);
          v19 = 1;
        }
        else
        {
          v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v23, v25, v27, 0);
          swift_bridgeObjectRelease(v23);
        }
        goto LABEL_23;
      }
      goto LABEL_18;
    }
    if (v27)
    {
      v19 = 0;
      goto LABEL_23;
    }
LABEL_21:
    v19 = 1;
    return v19 & 1;
  }
  v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v9, v11, v14, v16, 0);
  swift_bridgeObjectRelease(v11);
  swift_bridgeObjectRelease(v16);
  v19 = 0;
  if ((v18 & 1) != 0)
  {
    if (a2)
      goto LABEL_7;
    goto LABEL_11;
  }
  return v19 & 1;
}

uint64_t sub_100822D90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void **v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void **v19;
  char *v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  __n128 v34;
  void (*v35)(char *, uint64_t, __n128);
  uint64_t v37;
  uint64_t v38;

  v37 = a1;
  v38 = a2;
  v2 = type metadata accessor for GenericMusicItem(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v37 - v7;
  v9 = type metadata accessor for DragDropToQueue.Origin.Item(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (void **)((char *)&v37 - v13);
  v15 = sub_100007E8C(&qword_1011CB3D8);
  __chkstk_darwin(v15);
  v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (void **)&v17[*(int *)(v18 + 48)];
  sub_10005B704(v37, (uint64_t)v17, type metadata accessor for DragDropToQueue.Origin.Item);
  sub_10005B704(v38, (uint64_t)v19, type metadata accessor for DragDropToQueue.Origin.Item);
  if (swift_getEnumCaseMultiPayload(v17, v9) == 1)
  {
    v20 = v8;
    sub_10005B704((uint64_t)v17, (uint64_t)v11, type metadata accessor for DragDropToQueue.Origin.Item);
    if (swift_getEnumCaseMultiPayload(v19, v9) == 1)
    {
      v21 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
      v21(v8, v11, v2);
      v22 = ((uint64_t (*)(char *, void **, uint64_t))v21)(v5, v19, v2);
      v23 = GenericMusicItem.id.getter(v22);
      v25 = v24;
      v27 = GenericMusicItem.id.getter(v23);
      if (v23 == v27 && v25 == v26)
        v29 = 1;
      else
        v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v23, v25, v27, v26, 0);
      swift_bridgeObjectRelease();
      v34 = swift_bridgeObjectRelease();
      v35 = *(void (**)(char *, uint64_t, __n128))(v3 + 8);
      v35(v5, v2, v34);
      ((void (*)(char *, uint64_t))v35)(v20, v2);
      goto LABEL_15;
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v11, v2);
  }
  else
  {
    sub_10005B704((uint64_t)v17, (uint64_t)v14, type metadata accessor for DragDropToQueue.Origin.Item);
    v30 = *v14;
    if (swift_getEnumCaseMultiPayload(v19, v9) != 1)
    {
      v31 = *v19;
      v32 = objc_msgSend(v30, "identifiers");
      v33 = objc_msgSend(v31, "identifiers");
      v29 = objc_msgSend(v32, "intersectsSet:", v33);

LABEL_15:
      sub_10005B748((uint64_t)v17, type metadata accessor for DragDropToQueue.Origin.Item);
      return v29 & 1;
    }

  }
  sub_10004FF60((uint64_t)v17, &qword_1011CB3D8);
  v29 = 0;
  return v29 & 1;
}

uint64_t sub_1008230A0(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  id *v26;
  uint64_t (*v27)(_QWORD);
  uint64_t v28;
  id *v29;
  uint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  void *v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t *);
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, _QWORD, uint64_t);
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  void *v53;
  void *v54;
  id v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)(uint64_t *);
  id v63;
  uint64_t v65;
  id v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  ValueMetadata *v75;
  _UNKNOWN **v76;
  uint64_t v77;

  v71 = a2;
  v77 = a1;
  v2 = type metadata accessor for DragDropToQueue(0);
  v3 = __chkstk_darwin(v2);
  v67 = (uint64_t)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v72 = (char *)&v65 - v5;
  v6 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v6);
  v8 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for GenericMusicItem(0);
  v69 = *(_QWORD *)(v9 - 8);
  v70 = v9;
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v68 = (char *)&v65 - v13;
  v14 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v16);
  v21 = (char *)&v65 - v20;
  __chkstk_darwin(v19);
  v23 = (char *)&v65 - v22;
  v24 = type metadata accessor for DragDropToQueue.Origin.Item(0);
  __chkstk_darwin(v24);
  v26 = (id *)((char *)&v65 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10005B704(v77, (uint64_t)v26, v27);
  if (swift_getEnumCaseMultiPayload(v26, v24) == 1)
  {
    v28 = v69;
    v29 = v26;
    v30 = v70;
    (*(void (**)(char *, id *, uint64_t))(v69 + 32))(v12, v29, v70);
    sub_100545C34((uint64_t)v12, (uint64_t)v21);
    (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v18, enum case for MusicPlayer.PlayabilityStatus.playable(_:), v14);
    v31 = static MusicPlayer.PlayabilityStatus.== infix(_:_:)(v21, v18);
    v32 = *(void (**)(char *, uint64_t))(v15 + 8);
    v32(v18, v14);
    v32(v21, v14);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v12, v30);
    v33 = (uint64_t)v72;
    v34 = v71;
    if (v71)
    {
LABEL_3:
      sub_10005B704(v77, v33, type metadata accessor for DragDropToQueue);
      if ((v31 & 1) != 0)
      {
        v35 = qword_10119B8B0;
        v36 = v34;
        if (v35 != -1)
          swift_once(&qword_10119B8B0, sub_1000E948C);
        v37 = qword_10124C788;
        v38 = *(void **)(v33 + *(int *)(type metadata accessor for DragDropToQueue.Origin(0) + 20));
        v39 = Player.InsertCommand.init(location:playbackIntent:)((uint64_t)v34, (uint64_t)v38);
        v75 = &type metadata for Player.InsertCommand;
        v76 = &protocol witness table for Player.InsertCommand;
        v73 = v39;
        v74 = v40;
        v41 = *(uint64_t (**)(uint64_t *))(*(_QWORD *)v37 + 760);
        v42 = v36;
        v43 = v38;
        v31 = v41(&v73);

        v44 = v33;
        goto LABEL_7;
      }
      v50 = v33;
      goto LABEL_11;
    }
  }
  else
  {
    v66 = *v26;
    GenericMusicItem.init(_:)();
    v46 = v69;
    v45 = v70;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v8, 1, v70) == 1)
    {
      sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011A20D0);
      v47 = enum case for MusicPlayer.PlayabilityStatus.UnplayableReason.contentUnavailable(_:);
      v48 = type metadata accessor for MusicPlayer.PlayabilityStatus.UnplayableReason(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 104))(v23, v47, v48);
      v49 = *(void (**)(char *, _QWORD, uint64_t))(v15 + 104);
      v49(v23, enum case for MusicPlayer.PlayabilityStatus.unplayable(_:), v14);
    }
    else
    {
      v51 = (uint64_t)v68;
      (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v68, v8, v45);
      sub_100545C34(v51, (uint64_t)v23);
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v51, v45);
      v49 = *(void (**)(char *, _QWORD, uint64_t))(v15 + 104);
    }
    v33 = (uint64_t)v72;
    v34 = v71;
    v49(v21, enum case for MusicPlayer.PlayabilityStatus.playable(_:), v14);
    v31 = static MusicPlayer.PlayabilityStatus.== infix(_:_:)(v23, v21);
    v52 = *(void (**)(char *, uint64_t))(v15 + 8);
    v52(v21, v14);

    v52(v23, v14);
    if (v34)
      goto LABEL_3;
  }
  if (qword_10119B8B0 != -1)
    swift_once(&qword_10119B8B0, sub_1000E948C);
  v53 = (void *)(*(uint64_t (**)(void))(*(_QWORD *)qword_10124C788 + 432))();
  if (v53)
  {
    v54 = v53;
    v55 = objc_msgSend(v53, "tracklist");

    v56 = objc_msgSend(v55, "playingItem");
    if (v56)
    {
      v57 = v67;
      sub_10005B704(v77, v67, type metadata accessor for DragDropToQueue);
      if ((v31 & 1) != 0)
      {
        v58 = qword_10124C788;
        v59 = *(void **)(v57 + *(int *)(type metadata accessor for DragDropToQueue.Origin(0) + 20));
        v60 = Player.InsertCommand.init(location:playbackIntent:)(0, (uint64_t)v59);
        v75 = &type metadata for Player.InsertCommand;
        v76 = &protocol witness table for Player.InsertCommand;
        v73 = v60;
        v74 = v61;
        v62 = *(uint64_t (**)(uint64_t *))(*(_QWORD *)v58 + 760);
        v63 = v59;
        v31 = v62(&v73);
        v44 = v57;
LABEL_7:
        sub_10005B748(v44, type metadata accessor for DragDropToQueue);
        _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v73);
        return v31 & 1;
      }
      v50 = v57;
LABEL_11:
      sub_10005B748(v50, type metadata accessor for DragDropToQueue);
      v31 = 0;
    }
  }
  return v31 & 1;
}

unint64_t sub_10082364C()
{
  unint64_t result;

  result = qword_1011CB3D0;
  if (!qword_1011CB3D0)
  {
    result = swift_getWitnessTable(&unk_100ED2120, &type metadata for DragDropToQueue.Destination.Error);
    atomic_store(result, (unint64_t *)&qword_1011CB3D0);
  }
  return result;
}

void sub_100823690(id a1)
{
  if ((unint64_t)a1 >= 4)

}

uint64_t storeEnumTagSinglePayload for DragDropToQueue.Destination.Error(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1008236EC + 4 * byte_100ED1F0D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100823720 + 4 * byte_100ED1F08[v4]))();
}

uint64_t sub_100823720(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100823728(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100823730);
  return result;
}

uint64_t sub_10082373C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100823744);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100823748(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100823750(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DragDropToQueue.Destination.Error()
{
  return &type metadata for DragDropToQueue.Destination.Error;
}

unint64_t sub_100823770()
{
  unint64_t result;

  result = qword_1011CB3E0;
  if (!qword_1011CB3E0)
  {
    result = swift_getWitnessTable(&unk_100ED20F8, &type metadata for DragDropToQueue.Destination.Error);
    atomic_store(result, (unint64_t *)&qword_1011CB3E0);
  }
  return result;
}

uint64_t sub_1008237B8@<X0>(uint64_t a1@<X8>)
{
  return sub_100823E0C((uint64_t *)&unk_1011ACE40, (uint64_t (*)(_QWORD))&type metadata accessor for DynamicTypeSize, 0x5463696D616E7944, 0xEF657A6953657079, a1);
}

double sub_1008237EC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __n128 v10;
  os_log_type_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  double v21;

  v6 = type metadata accessor for EnvironmentValues(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) != 0)
    return *(double *)&a1;
  v10 = swift_retain(a1);
  v11 = static os_log_type_t.fault.getter(v10);
  v12 = static Log.runtimeIssuesLog.getter();
  v13 = v11;
  if (os_log_type_enabled(v12, v11))
  {
    v14 = (uint8_t *)swift_slowAlloc(12, -1);
    v15 = swift_slowAlloc(32, -1);
    v19 = a2;
    v16 = v15;
    v21 = *(double *)&v15;
    *(_DWORD *)v14 = 136315138;
    v20 = sub_100322200(0x657A69534743, 0xE600000000000000, (uint64_t *)&v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, &v21);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v14, 0xCu);
    swift_arrayDestroy(v16, 1, (char *)&type metadata for Any + 8);
    v17 = v16;
    a2 = v19;
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v14, -1, -1);
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath(v9, a1);
  sub_10006B5F8(a1, a2, 0);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v21;
}

uint64_t sub_1008239BC(uint64_t a1, char a2)
{
  return sub_100824E88(a1, a2, 0xD000000000000016, 0x8000000100E464E0, (void (*)(_QWORD, _QWORD))sub_10006B604);
}

uint64_t sub_1008239E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __n128 v11;
  os_log_type_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;

  v3 = type metadata accessor for EnvironmentValues(0);
  v4 = *(_QWORD *)(v3 - 8);
  result = __chkstk_darwin(v3);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)v1;
  if (*(_BYTE *)(v1 + 40) == 1)
  {
    v9 = *(_OWORD *)(v1 + 24);
    v10 = *(_OWORD *)(v1 + 8);
  }
  else
  {
    v11 = swift_retain(*(_QWORD *)v1);
    v12 = static os_log_type_t.fault.getter(v11);
    v13 = static Log.runtimeIssuesLog.getter();
    v14 = v12;
    if (os_log_type_enabled(v13, v12))
    {
      v15 = (uint8_t *)swift_slowAlloc(12, -1);
      v18 = swift_slowAlloc(32, -1);
      v20 = v18;
      *(_DWORD *)v15 = 136315138;
      v17 = v15 + 4;
      v19 = sub_100322200(0xD00000000000001BLL, 0x8000000100E46500, &v20);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20);
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v15, 0xCu);
      v16 = v18;
      swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v16, -1, -1);
      swift_slowDealloc(v15, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v7, v8);
    sub_10083910C(v1);
    result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    v8 = v20;
    v10 = v21;
    v9 = v22;
  }
  *(_QWORD *)a1 = v8;
  *(_OWORD *)(a1 + 8) = v10;
  *(_OWORD *)(a1 + 24) = v9;
  return result;
}

uint64_t sub_100823BC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  __n128 v6;
  os_log_type_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;

  v1 = type metadata accessor for EnvironmentValues(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)v0;
  if (*(_BYTE *)(v0 + 32) == 1)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    v6 = swift_retain(*(_QWORD *)v0);
    v7 = static os_log_type_t.fault.getter(v6);
    v8 = static Log.runtimeIssuesLog.getter();
    v9 = v7;
    if (os_log_type_enabled(v8, v7))
    {
      v10 = (uint8_t *)swift_slowAlloc(12, -1);
      v11 = swift_slowAlloc(32, -1);
      v15 = v11;
      *(_DWORD *)v10 = 136315138;
      v13 = v10 + 4;
      v14 = sub_100322200(0xD000000000000016, 0x8000000100E464C0, &v15);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, &v15);
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v10, 0xCu);
      swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v11, -1, -1);
      swift_slowDealloc(v10, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v4, v5);
    sub_10006FDA8(v0, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10006B61C);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    return v15;
  }
  return v5;
}

uint64_t sub_100823DB4(uint64_t a1, char a2)
{
  return sub_100824E88(a1, a2, 0xD000000000000017, 0x8000000100E466C0, (void (*)(_QWORD, _QWORD))sub_10006B604);
}

uint64_t sub_100823DD8@<X0>(uint64_t a1@<X8>)
{
  return sub_100823E0C(&qword_10119F4E0, (uint64_t (*)(_QWORD))&type metadata accessor for OpenURLAction, 0x414C52556E65704FLL, 0xED00006E6F697463, a1);
}

uint64_t sub_100823E0C@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v20;
  os_log_type_t v21;
  NSObject *v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v30 = a3;
  v9 = v5;
  v11 = type metadata accessor for EnvironmentValues(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(a1);
  __chkstk_darwin(v15);
  v17 = (uint64_t *)((char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10004A160(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload(v17, v15) == 1)
  {
    v18 = a2(0);
    return (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a5, v17, v18);
  }
  else
  {
    v20 = *v17;
    v21 = static os_log_type_t.fault.getter();
    v22 = static Log.runtimeIssuesLog.getter();
    if (os_log_type_enabled(v22, v21))
    {
      v28 = a4;
      v23 = swift_slowAlloc(12, -1);
      v29 = a5;
      v24 = (uint8_t *)v23;
      v25 = swift_slowAlloc(32, -1);
      v32 = v25;
      *(_DWORD *)v24 = 136315138;
      v31 = sub_100322200(v30, v28, &v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32);
      _os_log_impl((void *)&_mh_execute_header, v22, v21, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v24, 0xCu);
      swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v25, -1, -1);
      swift_slowDealloc(v24, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v14, v20);
    v26 = swift_release(v20);
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v26);
  }
}

id sub_100824044(void *a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  __n128 v7;
  os_log_type_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;

  v15 = a1;
  v3 = type metadata accessor for EnvironmentValues(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    return v15;
  v7 = swift_retain(v15);
  v8 = static os_log_type_t.fault.getter(v7);
  v9 = static Log.runtimeIssuesLog.getter();
  v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    v17 = v12;
    *(_DWORD *)v11 = 136315138;
    v16 = sub_100322200(0xD000000000000012, 0x8000000100E46450, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath(v6, v15);
  sub_1000A4224(v15, 0);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (id)v17;
}

uint64_t sub_100824224(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __n128 v10;
  os_log_type_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;

  v6 = type metadata accessor for EnvironmentValues(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) != 0)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    v10 = swift_retain(a1);
    v11 = static os_log_type_t.fault.getter(v10);
    v12 = static Log.runtimeIssuesLog.getter();
    v13 = v11;
    if (os_log_type_enabled(v12, v11))
    {
      v14 = (uint8_t *)swift_slowAlloc(12, -1);
      v15 = swift_slowAlloc(32, -1);
      v19 = v15;
      *(_DWORD *)v14 = 136315138;
      v17 = v14 + 4;
      v18 = sub_100322200(0xD000000000000010, 0x8000000100E46430, &v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19);
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v14, 0xCu);
      swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v15, -1, -1);
      swift_slowDealloc(v14, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v9, a1);
    sub_1000A4230(a1, a2, 0);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return v19;
  }
  return a1;
}

double sub_100824400@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __n128 v12;
  os_log_type_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  double v18;
  double result;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v8 = type metadata accessor for EnvironmentValues(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) != 0)
  {
    *a4 = a1;
    a4[1] = a2;
    return sub_1000A411C(a1, a2, 1);
  }
  else
  {
    v12.n128_f64[0] = sub_1000A411C(a1, a2, 0);
    v13 = static os_log_type_t.fault.getter(v12);
    v14 = static Log.runtimeIssuesLog.getter();
    v15 = v13;
    if (os_log_type_enabled(v14, v13))
    {
      v16 = (uint8_t *)swift_slowAlloc(12, -1);
      v21 = swift_slowAlloc(32, -1);
      v23 = v21;
      *(_DWORD *)v16 = 136315138;
      v20 = v16 + 4;
      v22 = sub_100322200(0x6C616E6F6974704FLL, 0xEE003E617461443CLL, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23);
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v16, 0xCu);
      v17 = v21;
      swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v17, -1, -1);
      swift_slowDealloc(v16, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v11, a1);
    v18 = sub_1000A4240(a1, a2, 0);
    (*(void (**)(char *, uint64_t, double))(v9 + 8))(v11, v8, v18);
  }
  return result;
}

uint64_t sub_10082460C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  __n128 v11;
  uint64_t v13;
  os_log_type_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;

  v2 = v1;
  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_10119F030);
  __chkstk_darwin(v8);
  v10 = (_QWORD *)((char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10004A160(v2, (uint64_t)v10, &qword_10119F030);
  if (swift_getEnumCaseMultiPayload(v10, v8) == 1)
    return sub_10005B6C0((uint64_t)v10, a1, type metadata accessor for Library.Context);
  v13 = *v10;
  v14 = static os_log_type_t.fault.getter(v11);
  v15 = static Log.runtimeIssuesLog.getter();
  v16 = v14;
  if (os_log_type_enabled(v15, v14))
  {
    v17 = (uint8_t *)swift_slowAlloc(12, -1);
    v18 = swift_slowAlloc(32, -1);
    v21[1] = a1;
    v19 = v18;
    v23 = v18;
    *(_DWORD *)v17 = 136315138;
    v22 = sub_100322200(0x747865746E6F43, 0xE700000000000000, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v17, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v17, -1, -1);
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath(v7, v13);
  v20 = swift_release(v13);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v20);
}

uint64_t sub_100824838@<X0>(uint64_t a1@<X8>)
{
  return sub_100823E0C((uint64_t *)&unk_1011C72D0, (uint64_t (*)(_QWORD))&type metadata accessor for MusicPlayer.PlayabilityStatus, 0xD000000000000011, 0x8000000100E464A0, a1);
}

uint64_t sub_100824864(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __n128 v8;
  os_log_type_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v16;
  uint64_t v17;

  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = swift_retain(a1);
  if ((a2 & 1) == 0)
  {
    v9 = static os_log_type_t.fault.getter(v8);
    v10 = static Log.runtimeIssuesLog.getter();
    v11 = v9;
    if (os_log_type_enabled(v10, v9))
    {
      v12 = (uint8_t *)swift_slowAlloc(12, -1);
      v13 = swift_slowAlloc(32, -1);
      v17 = v13;
      *(_DWORD *)v12 = 136315138;
      v16 = sub_100322200(0xD000000000000022, 0x8000000100E465B0, &v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17);
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
      swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v13, -1, -1);
      swift_slowDealloc(v12, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v7, a1);
    v14 = j__swift_release(a1);
    (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v14);
    return v17;
  }
  return a1;
}

double sub_100824A24(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __n128 v8;
  os_log_type_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v15;
  double v16;

  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    return *(double *)&a1;
  v8 = swift_retain(a1);
  v9 = static os_log_type_t.fault.getter(v8);
  v10 = static Log.runtimeIssuesLog.getter();
  v11 = v9;
  if (os_log_type_enabled(v10, v9))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    v16 = *(double *)&v13;
    *(_DWORD *)v12 = 136315138;
    v15 = sub_100322200(0x74616F6C464743, 0xE700000000000000, (uint64_t *)&v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath(v7, a1);
  sub_10006B604(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v16;
}

uint64_t sub_100824BE4@<X0>(uint64_t a1@<X8>)
{
  return sub_100824C10((uint64_t *)&unk_1011A3ED0, (uint64_t *)&unk_1011A33B8, 0xD000000000000020, 0x8000000100E465E0, a1);
}

uint64_t sub_100824C10@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  __n128 v18;
  uint64_t v20;
  os_log_type_t v21;
  NSObject *v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v30 = a3;
  v9 = v5;
  v11 = type metadata accessor for EnvironmentValues(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(a1);
  __chkstk_darwin(v15);
  v17 = (uint64_t *)((char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10004A160(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload(v17, v15) == 1)
    return sub_100065228((uint64_t)v17, a5, a2);
  v20 = *v17;
  v21 = static os_log_type_t.fault.getter(v18);
  v22 = static Log.runtimeIssuesLog.getter();
  if (os_log_type_enabled(v22, v21))
  {
    v28 = a4;
    v23 = swift_slowAlloc(12, -1);
    v29 = a5;
    v24 = (uint8_t *)v23;
    v25 = swift_slowAlloc(32, -1);
    v32 = v25;
    *(_DWORD *)v24 = 136315138;
    v31 = sub_100322200(v30, v28, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32);
    _os_log_impl((void *)&_mh_execute_header, v22, v21, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v24, 0xCu);
    swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v25, -1, -1);
    swift_slowDealloc(v24, -1, -1);
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath(v14, v20);
  v26 = swift_release(v20);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v26);
}

uint64_t sub_100824E38(uint64_t a1, char a2)
{
  return sub_100824E88(a1, a2, 0xD000000000000028, 0x8000000100E46470, (void (*)(_QWORD, _QWORD))sub_10006B604);
}

uint64_t sub_100824E5C(uint64_t a1, char a2)
{
  return sub_100824E88(a1, a2, 0x6C616E6F6974704FLL, 0xEE003E65646F4D3CLL, (void (*)(_QWORD, _QWORD))sub_10083DC54);
}

uint64_t sub_100824E88(uint64_t a1, char a2, uint64_t a3, unint64_t a4, void (*a5)(_QWORD, _QWORD))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  __n128 v14;
  os_log_type_t v15;
  NSObject *v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint8_t *v22;
  unint64_t v24;
  void (*v25)(_QWORD, _QWORD);
  uint64_t v26;
  uint64_t v27;

  v10 = type metadata accessor for EnvironmentValues(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0)
  {
    v14 = swift_retain(a1);
    v15 = static os_log_type_t.fault.getter(v14);
    v16 = static Log.runtimeIssuesLog.getter();
    if (os_log_type_enabled(v16, v15))
    {
      v24 = a4;
      v17 = swift_slowAlloc(12, -1);
      v25 = a5;
      v18 = (uint8_t *)v17;
      v19 = swift_slowAlloc(32, -1);
      v20 = a3;
      v21 = v19;
      v27 = v19;
      *(_DWORD *)v18 = 136315138;
      v26 = sub_100322200(v20, v24, &v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27);
      _os_log_impl((void *)&_mh_execute_header, v16, v15, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v18, 0xCu);
      swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v21, -1, -1);
      v22 = v18;
      a5 = v25;
      swift_slowDealloc(v22, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v13, a1);
    a5(a1, 0);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    return v27;
  }
  return a1;
}

uint64_t sub_100825054@<X0>(uint64_t a1@<X8>)
{
  return sub_100823E0C((uint64_t *)&unk_1011D0D50, (uint64_t (*)(_QWORD))&type metadata accessor for LayoutDirection, 0x694474756F79614CLL, 0xEF6E6F6974636572, a1);
}

double sub_100825088()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  __n128 v7;
  os_log_type_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  double v15;

  v1 = type metadata accessor for EnvironmentValues(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)v0;
  if (v0[32] == 1)
    return *(double *)v0;
  v7 = swift_retain();
  v8 = static os_log_type_t.fault.getter(v7);
  v9 = static Log.runtimeIssuesLog.getter();
  v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    v15 = *(double *)&v12;
    *(_DWORD *)v11 = 136315138;
    v13 = v11 + 4;
    v14 = sub_100322200(0x65736E4965676445, 0xEA00000000007374, (uint64_t *)&v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, &v15);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath(v4, v5);
  sub_10006FDA8((uint64_t)v0, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1002BD420);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v15;
}

uint64_t sub_100825264@<X0>(uint64_t a1@<X8>)
{
  return sub_100823E0C(&qword_1011AED10, (uint64_t (*)(_QWORD))&type metadata accessor for RedactionReasons, 0xD000000000000010, 0x8000000100E46590, a1);
}

uint64_t sub_100825290@<X0>(uint64_t a1@<X8>)
{
  return sub_100823E0C(&qword_1011B5018, (uint64_t (*)(_QWORD))&type metadata accessor for MultimodalListStyle.Layout, 0x74756F79614CLL, 0xE600000000000000, a1);
}

uint64_t sub_1008252B4(void *a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __n128 v8;
  os_log_type_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  id v14;
  uint64_t v16;
  uint64_t v17;

  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v14 = a1;
  }
  else
  {
    v8 = swift_retain();
    v9 = static os_log_type_t.fault.getter(v8);
    v10 = static Log.runtimeIssuesLog.getter();
    v11 = v9;
    if (os_log_type_enabled(v10, v9))
    {
      v12 = (uint8_t *)swift_slowAlloc(12, -1);
      v13 = swift_slowAlloc(32, -1);
      v17 = v13;
      *(_DWORD *)v12 = 136315138;
      v16 = sub_100322200(0xD00000000000001FLL, 0x8000000100E46520, &v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17);
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
      swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v13, -1, -1);
      swift_slowDealloc(v12, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v7, a1);
    sub_1000A4224(a1, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v17;
  }
  return (uint64_t)a1;
}

uint64_t sub_10082547C(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __n128 v8;
  os_log_type_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    return a1 & 1;
  v8 = swift_retain();
  v9 = static os_log_type_t.fault.getter(v8);
  v10 = static Log.runtimeIssuesLog.getter();
  v11 = v9;
  if (os_log_type_enabled(v10, v9))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    v16 = v13;
    *(_DWORD *)v12 = 136315138;
    v15 = sub_100322200(0x6570795477656956, 0xE800000000000000, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath(v7, a1);
  sub_10006B604(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v16;
}

uint64_t sub_10082563C(uint64_t a1, char a2)
{
  return sub_100824E88(a1, a2, 0x696C696269736956, 0xEA00000000007974, (void (*)(_QWORD, _QWORD))sub_10006B604);
}

uint64_t sub_100825660@<X0>(uint64_t a1@<X8>)
{
  return sub_100824C10(&qword_1011C7808, &qword_1011C7810, 0xD000000000000019, 0x8000000100E46540, a1);
}

uint64_t sub_10082568C(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __n128 v8;
  os_log_type_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    return a1 & 1;
  v8 = swift_retain();
  v9 = static os_log_type_t.fault.getter(v8);
  v10 = static Log.runtimeIssuesLog.getter();
  v11 = v9;
  if (os_log_type_enabled(v10, v9))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    v16 = v13;
    *(_DWORD *)v12 = 136315138;
    v15 = sub_100322200(1819242306, 0xE400000000000000, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath(v7, a1);
  sub_10006B604(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v16;
}

uint64_t sub_100825844@<X0>(uint64_t a1@<X8>)
{
  return sub_100823E0C(&qword_1011D13C0, (uint64_t (*)(_QWORD))&type metadata accessor for ColorScheme, 0x686353726F6C6F43, 0xEB00000000656D65, a1);
}

_QWORD *sub_100825874@<X0>(_QWORD *a1@<X8>)
{
  return EnvironmentValues.libraryContext.getter(a1);
}

uint64_t sub_100825894(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v7;

  v2 = type metadata accessor for Library.Context(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704(a1, (uint64_t)v4, v5);
  return EnvironmentValues.libraryContext.setter((uint64_t)v4);
}

uint64_t sub_100825910(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = sub_100007E8C(&qword_1011CBD18);
  __chkstk_darwin(v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(a1, (uint64_t)v4, &qword_1011CBD18);
  return EnvironmentValues.editMode.setter(v4);
}

uint64_t sub_100825990@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = type metadata accessor for MenuDataSource(0);
  v7 = sub_100048748(&qword_1011C2B08, type metadata accessor for MenuDataSource, (uint64_t)&unk_100ED23B0);
  *a3 = ObservedObject.init(wrappedValue:)(a1, v6, v7);
  a3[1] = v8;
  v9 = (int *)_s8MenuViewVMa(0);
  sub_100065228(a2, (uint64_t)a3 + v9[5], &qword_1011C2BB8);
  v10 = (char *)a3 + v9[6];
  LOBYTE(v23) = 0;
  State.init(wrappedValue:)(&v23, &type metadata for Bool);
  v11 = v25;
  *v10 = v24;
  *((_QWORD *)v10 + 1) = v11;
  v12 = (char *)a3 + v9[7];
  *(_QWORD *)v12 = swift_getKeyPath(&unk_100ED2858);
  *((_QWORD *)v12 + 1) = 0;
  *((_QWORD *)v12 + 2) = 0;
  *((_QWORD *)v12 + 3) = 0;
  v12[32] = 0;
  v13 = (char *)a3 + v9[8];
  *(_QWORD *)v13 = sub_10082ADAC;
  *((_QWORD *)v13 + 1) = 0;
  v13[16] = 0;
  v14 = (_QWORD *)((char *)a3 + v9[9]);
  v15 = type metadata accessor for MusicLibrary(0);
  v23 = static MusicLibrary.shared.getter(v15);
  State.init(wrappedValue:)(&v23, v15);
  v16 = v25;
  *v14 = v24;
  v14[1] = v16;
  v17 = (_QWORD *)((char *)a3 + v9[10]);
  CloudLibrary.StatusObserver.shared.unsafeMutableAddressor();
  v18 = type metadata accessor for CloudLibrary.StatusObserver(0);
  v19 = sub_100048748(&qword_1011B9940, type metadata accessor for CloudLibrary.StatusObserver, (uint64_t)&protocol conformance descriptor for CloudLibrary.StatusObserver);
  swift_retain();
  result = ObservedObject.init(wrappedValue:)(v20, v18, v19);
  *v17 = result;
  v17[1] = v22;
  return result;
}

uint64_t sub_100825B14(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = type metadata accessor for Playlist(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((a1 & 0x8000000000000000) == 0)
    __asm { BR              X11 }
  KeyPath = swift_getKeyPath(&unk_100ED2530);
  v7 = swift_getKeyPath(&unk_100ED2558);
  swift_retain();
  static Published.subscript.getter(v5, v8, KeyPath, v7);
  swift_release();
  swift_release();
  v10 = Playlist.id.getter(v9);
  sub_1001A7ABC(a1);
  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  return v10;
}

uint64_t sub_100825D0C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t KeyPath;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  unint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t OpaqueTypeConformance2;
  unint64_t v73;
  char *v74;
  uint64_t v75;
  __n128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  __n128 v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  void *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  __n128 v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  __n128 v131;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  char *v143;
  _QWORD *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  char *v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  char v173[8];
  uint64_t v174;
  char v175[8];
  _QWORD *v176;
  uint64_t v177;
  void *v178;
  unint64_t v179;
  void *v180;
  _QWORD v181[2];
  _OWORD v182[2];
  char v183;
  _QWORD v184[3];

  v2 = v1;
  v168 = a1;
  v170 = _s8MenuViewVMa(0);
  v165 = *(_QWORD *)(v170 - 8);
  v169 = *(_QWORD *)(v165 + 64);
  __chkstk_darwin(v170);
  v164 = (uint64_t)&v133 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v159 = (char *)&v133 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v6);
  v157 = (char *)&v133 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v155 = type metadata accessor for SidebarListStyle(0);
  v156 = *(_QWORD *)(v155 - 8);
  __chkstk_darwin(v155);
  v152 = (char *)&v133 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011CBD18);
  v10 = __chkstk_darwin(v9);
  v144 = (uint64_t *)((char *)&v133 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v140 = type metadata accessor for ContentMarginPlacement(0, v10);
  v139 = *(_QWORD *)(v140 - 8);
  __chkstk_darwin(v140);
  v136 = (char *)&v133 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = sub_100007E8C(&qword_1011CBD20);
  v138 = *(_QWORD *)(v137 - 8);
  __chkstk_darwin(v137);
  v14 = (char *)&v133 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = sub_100007E8C(&qword_1011CBD28);
  v145 = *(_QWORD *)(v146 - 8);
  __chkstk_darwin(v146);
  v135 = (char *)&v133 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = sub_100007E8C(&qword_1011CBD30);
  __chkstk_darwin(v142);
  v141 = (char *)&v133 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149 = sub_100007E8C(&qword_1011CBD38);
  v154 = *(_QWORD *)(v149 - 8);
  __chkstk_darwin(v149);
  v143 = (char *)&v133 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = sub_100007E8C(&qword_1011CBD40);
  v150 = *(_QWORD *)(v153 - 8);
  __chkstk_darwin(v153);
  v147 = (char *)&v133 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v171 = sub_100007E8C(&qword_1011CBD48);
  __chkstk_darwin(v171);
  v148 = (char *)&v133 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v160 = sub_100007E8C(&qword_1011CBD50);
  v161 = *(_QWORD *)(v160 - 8);
  __chkstk_darwin(v160);
  v151 = (char *)&v133 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v162 = sub_100007E8C(&qword_1011CBD58);
  v163 = *(_QWORD *)(v162 - 8);
  __chkstk_darwin(v162);
  v158 = (char *)&v133 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v166 = sub_100007E8C(&qword_1011CBD60);
  v167 = *(_QWORD *)(v166 - 8);
  __chkstk_darwin(v166);
  v172 = (char *)&v133 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *v1;
  v24 = v2[1];
  v25 = type metadata accessor for MenuDataSource(0);
  v26 = sub_100048748(&qword_1011C2B08, type metadata accessor for MenuDataSource, (uint64_t)&unk_100ED23B0);
  v27 = ObservedObject.projectedValue.getter(v23, v24, v25, v26);
  KeyPath = swift_getKeyPath(&unk_100ED28F8);
  ObservedObject.Wrapper.subscript.getter(v184, KeyPath, v27, v26);
  swift_release();
  swift_release();
  v29 = v184[0];
  v30 = v184[1];
  v31 = v184[2];
  v176 = v2;
  v32 = sub_100007E8C(&qword_1011CBD68);
  v33 = sub_1006A1C40();
  v34 = sub_100049F28(&qword_1011CBD70, &qword_1011CBD68, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  v35 = List.init(selection:content:)(v29, v30, v31, sub_10083B700, v175, &type metadata for MenuDataSource.Item, v32, v33, v34);
  v36 = static Edge.Set.bottom.getter(v35);
  v37 = v170;
  v38 = (char *)v2 + *(int *)(v170 + 28);
  v183 = v38[32];
  v39 = *((_OWORD *)v38 + 1);
  v182[0] = *(_OWORD *)v38;
  v182[1] = v39;
  sub_100065228((uint64_t)v182, (uint64_t)v184, &qword_1011AA450);
  sub_10006FDA8((uint64_t)v184, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100154A5C);
  sub_100825088();
  v41 = v40;
  v42 = sub_10006FDA8((uint64_t)v182, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1002BD420);
  v43 = v136;
  static ContentMarginPlacement.scrollIndicators.getter(v42);
  v44 = sub_100049F28(&qword_1011CBD78, &qword_1011CBD20, (uint64_t)&protocol conformance descriptor for List<A, B>);
  v45 = v135;
  v46 = v36;
  v47 = v137;
  View.contentMargins(_:_:for:)(v46, v41, 0, v43, v137, v44);
  (*(void (**)(char *, uint64_t))(v139 + 8))(v43, v140);
  (*(void (**)(char *, uint64_t))(v138 + 8))(v14, v47);
  v48 = swift_getKeyPath(&unk_100ED2920);
  v49 = (uint64_t)v2;
  v50 = ObservedObject.projectedValue.getter(*v2, v2[1], v25, v26);
  v51 = swift_getKeyPath(&unk_100ED2738);
  v52 = v144;
  ObservedObject.Wrapper.subscript.getter(v144, v51, v50, v26);
  swift_release();
  swift_release();
  v53 = sub_100007E8C(&qword_1011CBD80);
  v54 = (uint64_t)v52;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v52, 0, 1, v53);
  v55 = v142;
  v56 = (uint64_t)v141;
  v57 = (uint64_t *)&v141[*(int *)(v142 + 36)];
  v58 = sub_100007E8C(&qword_1011CBD88);
  sub_10004A160(v54, (uint64_t)v57 + *(int *)(v58 + 28), &qword_1011CBD18);
  *v57 = v48;
  v59 = v145;
  v60 = v146;
  (*(void (**)(uint64_t, char *, uint64_t))(v145 + 16))(v56, v45, v146);
  sub_10004FF60(v54, &qword_1011CBD18);
  v61 = (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v45, v60);
  v62 = v152;
  SidebarListStyle.init()(v61);
  v63 = sub_10083B72C();
  v64 = v143;
  v65 = v55;
  v66 = v55;
  v67 = (void *)v155;
  View.listStyle<A>(_:)(v62, v65, v155, v63, &protocol witness table for SidebarListStyle);
  (*(void (**)(char *, void *))(v156 + 8))(v62, v67);
  sub_10004FF60(v56, &qword_1011CBD30);
  v68 = v157;
  v69 = String.LocalizationValue.init(stringLiteral:)(0x7972617262694CLL, 0xE700000000000000);
  v70 = v159;
  static Locale.current.getter(v69);
  v181[0] = String.init(localized:table:bundle:locale:comment:)(v68, 0, 0, 0, v70, "Tab name for 'Library'", 22, 2);
  v181[1] = v71;
  v177 = v66;
  v178 = v67;
  v179 = v63;
  v180 = &protocol witness table for SidebarListStyle;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v177, &opaque type descriptor for <<opaque return type of View.listStyle<A>(_:)>>, 1);
  v73 = sub_100055B68();
  v74 = v147;
  v75 = v149;
  View.navigationTitle<A>(_:)(v181, v149, &type metadata for String, OpaqueTypeConformance2, v73);
  v76 = swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, __n128))(v154 + 8))(v64, v75, v76);
  v77 = swift_getKeyPath(&unk_100ED2950);
  v78 = v150;
  v79 = (uint64_t)v148;
  v80 = v74;
  v81 = v74;
  v82 = v153;
  (*(void (**)(char *, char *, uint64_t))(v150 + 16))(v148, v80, v153);
  v83 = v171;
  v84 = (uint64_t *)(v79 + *(int *)(v171 + 36));
  *v84 = v77;
  v84[1] = 0;
  (*(void (**)(char *, uint64_t))(v78 + 8))(v81, v82);
  v174 = v49;
  v85 = sub_100007E8C(&qword_1011CBDA0);
  v86 = sub_10083B84C();
  v87 = sub_100049F28(&qword_1011CBDC0, &qword_1011CBDA0, (uint64_t)&protocol conformance descriptor for TupleToolbarContent<A>);
  v88 = v151;
  View.toolbar<A>(content:)(sub_10083B844, v173, v83, v85, v86, v87);
  sub_10004FF60(v79, &qword_1011CBD48);
  v89 = v49 + *(int *)(v37 + 24);
  v134 = v49;
  v90 = *(_BYTE *)v89;
  v91 = *(void **)(v89 + 8);
  LOBYTE(v177) = v90;
  v178 = v91;
  v92 = sub_100007E8C(&qword_1011C4DD0);
  State.wrappedValue.getter(v181, v92);
  v93 = v164;
  sub_10005B704(v49, v164, _s8MenuViewVMa);
  v94 = *(unsigned __int8 *)(v165 + 80);
  v95 = (v94 + 16) & ~v94;
  v169 += v95;
  v96 = v94 | 7;
  v159 = (char *)(v94 | 7);
  v97 = swift_allocObject(&unk_1010DE230, v169, v94 | 7);
  v165 = v95;
  sub_10005B6C0(v93, v97 + v95, _s8MenuViewVMa);
  v177 = v171;
  v178 = (void *)v85;
  v179 = v86;
  v180 = (void *)v87;
  v98 = swift_getOpaqueTypeConformance2(&v177, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 1);
  v99 = v158;
  v100 = v160;
  View.onChange<A>(of:initial:_:)(v181, 0, sub_10083B958, v97, v160, &type metadata for Bool, v98, &protocol witness table for Bool);
  v101 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v161 + 8))(v88, v100, v101);
  v102 = *(int *)(v37 + 36);
  v103 = v134;
  v104 = (uint64_t *)(v134 + v102);
  v106 = *v104;
  v105 = (void *)v104[1];
  v177 = v106;
  v178 = v105;
  v107 = sub_100007E8C(&qword_1011CBDC8);
  State.wrappedValue.getter(v181, v107);
  sub_10005B704(v103, v93, _s8MenuViewVMa);
  v108 = swift_allocObject(&unk_1010DE258, v169, v96);
  sub_10005B6C0(v93, v108 + v95, _s8MenuViewVMa);
  v109 = type metadata accessor for MusicLibrary(0);
  v177 = v100;
  v178 = &type metadata for Bool;
  v179 = v98;
  v180 = &protocol witness table for Bool;
  v110 = swift_getOpaqueTypeConformance2(&v177, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v111 = sub_100048748((unint64_t *)&qword_1011A3820, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary, (uint64_t)&protocol conformance descriptor for MusicLibrary);
  v112 = v162;
  View.onChange<A>(of:initial:_:)(v181, 0, sub_10083BCB0, v108, v162, v109, v110, v111);
  swift_release();
  v113 = swift_release();
  v114 = v99;
  v115 = v112;
  (*(void (**)(char *, uint64_t, __n128))(v163 + 8))(v114, v112, v113);
  v116 = v103;
  v117 = v103 + *(int *)(v170 + 32);
  v118 = *(_QWORD *)v117;
  v119 = *(_QWORD *)(v117 + 8);
  v120 = *(unsigned __int8 *)(v117 + 16);
  v121 = type metadata accessor for MusicAutoupdatingSharedLibrariesResponse(0);
  v122 = sub_100048748(&qword_1011CBDD0, (uint64_t (*)(uint64_t))&type metadata accessor for MusicAutoupdatingSharedLibrariesResponse, (uint64_t)&protocol conformance descriptor for MusicAutoupdatingSharedLibrariesResponse);
  StateObject.wrappedValue.getter(v118, v119, v120, v121, v122);
  v123 = dispatch thunk of MusicAutoupdatingSharedLibrariesResponse.libraries.getter();
  swift_release();
  v181[0] = v123;
  sub_10005B704(v116, v93, _s8MenuViewVMa);
  v124 = swift_allocObject(&unk_1010DE280, v169, v159);
  sub_10005B6C0(v93, v124 + v165, _s8MenuViewVMa);
  v125 = sub_100007E8C(&qword_1011B3990);
  v177 = v115;
  v178 = (void *)v109;
  v179 = v110;
  v180 = (void *)v111;
  v126 = swift_getOpaqueTypeConformance2(&v177, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v127 = sub_10083BD38();
  v128 = v166;
  v129 = v125;
  v130 = v172;
  View.onChange<A>(of:initial:_:)(v181, 0, sub_10083BD24, v124, v166, v129, v126, v127);
  swift_release();
  v131 = swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v167 + 8))(v130, v128, v131);
}

